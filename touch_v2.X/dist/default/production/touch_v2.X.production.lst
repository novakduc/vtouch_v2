

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Feb 20 04:02:19 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=2
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1,group=2
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=2
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=2
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=2
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=2
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=2
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=2
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=2
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=2
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1,group=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=2
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1,group=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1,group=2
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1,group=2
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1,group=2
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1,group=2
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1,group=2
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1,group=2
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1,inline
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1,inline
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1,group=2
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1,group=2
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1,group=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1,group=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1,group=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1,group=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1,group=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1,group=1
   179                           	psect	text155,global,reloc=2,class=CODE,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1
   183                           	psect	text159,global,reloc=2,class=CODE,delta=1
   184                           	psect	text160,global,reloc=2,class=CODE,delta=1
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1
   186                           	psect	text162,global,reloc=2,class=CODE,delta=1
   187                           	psect	text163,global,reloc=2,class=CODE,delta=1
   188                           	psect	text164,global,reloc=2,class=CODE,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1
   190                           	psect	text166,global,reloc=2,class=CODE,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,delta=1
   194                           	psect	text170,global,reloc=2,class=CODE,delta=1
   195                           	psect	text171,global,reloc=2,class=CODE,delta=1
   196                           	psect	text172,global,reloc=2,class=CODE,delta=1
   197                           	psect	text173,global,reloc=2,class=CODE,delta=1
   198                           	psect	text174,global,reloc=2,class=CODE,delta=1
   199                           	psect	text175,global,reloc=2,class=CODE,delta=1
   200                           	psect	text176,global,reloc=2,class=CODE,delta=1
   201                           	psect	text177,global,reloc=2,class=CODE,delta=1
   202                           	psect	text178,global,reloc=2,class=CODE,delta=1
   203                           	psect	text179,global,reloc=2,class=CODE,delta=1
   204                           	psect	text180,global,reloc=2,class=CODE,delta=1
   205                           	psect	text181,global,reloc=2,class=CODE,delta=1
   206                           	psect	text182,global,reloc=2,class=CODE,delta=1
   207                           	psect	text183,global,reloc=2,class=CODE,delta=1
   208                           	psect	text184,global,reloc=2,class=CODE,delta=1
   209                           	psect	text185,global,reloc=4,class=CODE,delta=1
   210                           	psect	text186,global,reloc=2,class=CODE,delta=1
   211                           	psect	text187,global,reloc=2,class=CODE,delta=1
   212                           	psect	text188,global,reloc=2,class=CODE,delta=1
   213                           	psect	text189,global,reloc=4,class=CODE,delta=1
   214                           	psect	text190,global,reloc=2,class=CODE,delta=1
   215                           	psect	text191,global,reloc=2,class=CODE,delta=1
   216                           	psect	text192,global,reloc=2,class=CODE,delta=1
   217                           	psect	text193,global,reloc=2,class=CODE,delta=1
   218                           	psect	text194,global,reloc=2,class=CODE,delta=1
   219                           	psect	text195,global,reloc=2,class=CODE,delta=1
   220                           	psect	text196,global,reloc=4,class=CODE,delta=1
   221                           	psect	text197,global,reloc=2,class=CODE,delta=1
   222                           	psect	text198,global,reloc=2,class=CODE,delta=1
   223                           	psect	text199,global,reloc=2,class=CODE,delta=1
   224                           	psect	text200,global,reloc=2,class=CODE,delta=1
   225                           	psect	text201,global,reloc=2,class=CODE,delta=1
   226                           	psect	text202,global,reloc=2,class=CODE,delta=1
   227                           	psect	text203,global,reloc=2,class=CODE,delta=1,group=1
   228                           	psect	text204,global,reloc=4,class=CODE,delta=1
   229                           	psect	text205,global,reloc=2,class=CODE,delta=1
   230                           	psect	text206,global,reloc=2,class=CODE,delta=1
   231                           	psect	text207,global,reloc=4,class=CODE,delta=1
   232                           	psect	text208,global,reloc=4,class=CODE,delta=1
   233                           	psect	text209,global,reloc=2,class=CODE,delta=1
   234                           	psect	text210,global,reloc=2,class=CODE,delta=1
   235                           	psect	text211,global,reloc=2,class=CODE,delta=1
   236                           	psect	text212,global,reloc=4,class=CODE,delta=1
   237                           	psect	text213,global,reloc=4,class=CODE,delta=1
   238                           	psect	text214,global,reloc=2,class=CODE,delta=1
   239                           	psect	text215,global,reloc=4,class=CODE,delta=1
   240                           	psect	text216,global,reloc=2,class=CODE,delta=1
   241                           	psect	text217,global,reloc=4,class=CODE,delta=1
   242                           	psect	text218,global,reloc=2,class=CODE,delta=1
   243                           	psect	text219,global,reloc=4,class=CODE,delta=1
   244                           	psect	text220,global,reloc=2,class=CODE,delta=1
   245                           	psect	text221,global,reloc=2,class=CODE,delta=1
   246                           	psect	text222,global,reloc=4,class=CODE,delta=1
   247                           	psect	text223,global,reloc=4,class=CODE,delta=1
   248                           	psect	text224,global,reloc=4,class=CODE,delta=1
   249                           	psect	text225,global,reloc=4,class=CODE,delta=1
   250                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   251                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   252                           	psect	text226,global,reloc=4,class=CODE,delta=1
   253                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   254                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   255  0000                     
   256                           ; Version 2.10
   257                           ; Generated 31/07/2019 GMT
   258                           ; 
   259                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   260                           ; All rights reserved.
   261                           ; 
   262                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   263                           ; 
   264                           ; Redistribution and use in source and binary forms, with or without modification, are
   265                           ; permitted provided that the following conditions are met:
   266                           ; 
   267                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   268                           ;        conditions and the following disclaimer.
   269                           ; 
   270                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   271                           ;        of conditions and the following disclaimer in the documentation and/or other
   272                           ;        materials provided with the distribution.
   273                           ; 
   274                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   275                           ;        software without specific prior written permission.
   276                           ; 
   277                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   278                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   279                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   280                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   281                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   282                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   283                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   284                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   285                           ; 
   286                           ; 
   287                           ; Code-generator required, PIC18F57K42 Definitions
   288                           ; 
   289                           ; SFR Addresses
   290  0000                     
   291 ;;_main$4041	offset	0
   292 ;;_main$4037	offset	2
   293 ;;_i_esr	offset	4
   294 ;;_esr_temp	offset	6
   295 ;;_i_esr	offset	10
   296 ;;_shape	offset	12
   297 ;;_inp_index	offset	13
   298 ;;_k	offset	14
   299 ;;_j	offset	15
   300 ;;_i	offset	16
   301 ;;_mode	offset	17
   302 ;;_i_ror	offset	18
   303 ;;_mode	offset=-1 (param)
   304 ;;_hist	offset=-3 (param)
   305 ;;_s	offset=-2 (param)
   306 ;;_t	offset=-8 (param)
   307 ;;_voltage	offset=-4 (param)
   308 ;;_voltage	offset=-4 (param)
   309 ;;_voltage	offset=-4 (param)
   310 ;;_set	offset=-1 (param)
   311 ;;_x	offset	0
   312 ;;_r_cal_ptr	offset	2
   313 ;;_y	offset	4
   314 ;;_crcVal_save	offset	6
   315 ;;_bAdd	offset=-2 (param)
   316 ;;_esr_rescale	offset	0
   317 ;;_data	offset=-1 (param)
   318 ;;_cmd	offset=-1 (param)
   319 ;;_cmd	offset=-1 (param)
   320 ;;_delay	offset=-4 (param)
   321 ;;_data	offset=-1 (param)
   322 ;;__this	offset=-2 (param)
   323 ;;_soc	offset	0
   324 ;;_slot	offset	2
   325 ;;_cvoltage	offset=-4 (param)
   326 ;;_h	offset=-2 (param)
   327 ;;_h	offset=-2 (param)
   328 ;;_fsm	offset=-1 (param)
   329 ;;_mode	offset=-1 (param)
   330 ;;_mode	offset=-1 (param)
   331 ;;_cmd	offset=-1 (param)
   332 ;;_t	offset=-8 (param)
   333 ;;_t	offset=-1 (param)
   334 ;;_t	offset=-1 (param)
   335 ;;_tm	offset=-3 (param)
   336 ;;_y	offset	0
   337 ;;_t1	offset	8
   338 ;;_t0	offset	16
   339 ;;_t	offset=-8 (param)
   340 ;;_local	offset=-10 (param)
   341 ;;_isdst	offset=-12 (param)
   342 ;;_offset	offset=-14 (param)
   343 ;;_oppoff	offset=-16 (param)
   344 ;;_zonename	offset=-18 (param)
   345 ;;_t	offset=-8 (param)
   346 ;;_local	offset=-10 (param)
   347 ;;_alt	offset=-12 (param)
   348 ;;_z	offset=-2 (param)
   349 ;;_days	offset	0
   350 ;;_wday	offset	2
   351 ;;_t	offset	4
   352 ;;_is_leap	offset	12
   353 ;;_n	offset	14
   354 ;;_x	offset	16
   355 ;;_m	offset	18
   356 ;;_d	offset	20
   357 ;;_rule	offset=-6 (param)
   358 ;;_year	offset=-8 (param)
   359 ;;_m	offset=-2 (param)
   360 ;;_is_leap	offset=-4 (param)
   361 ;;_y	offset	0
   362 ;;_leaps	offset	2
   363 ;;_rem	offset	4
   364 ;;F5	offset	6
   365 ;;_centuries	offset	8
   366 ;;_leaps	offset	10
   367 ;;_cycles	offset	12
   368 ;;_year	offset=-8 (param)
   369 ;;_is_leap	offset=-10 (param)
   370 ;;_t	offset	0
   371 ;;_month	offset=-2 (param)
   372 ;;_is_leap	offset=-4 (param)
   373 ;;_s	offset	0
   374 ;;_r	offset	0
   375 ;;_p	offset=-2 (param)
   376 ;;_rule	offset=-4 (param)
   377 ;;_off	offset	0
   378 ;;_neg	offset	2
   379 ;;_p	offset=-2 (param)
   380 ;;_x	offset	0
   381 ;;_p	offset=-2 (param)
   382 ;;_i	offset	0
   383 ;;_d	offset=-2 (param)
   384 ;;_p	offset=-4 (param)
   385 ;;___secs_to_tm$7627	offset	0
   386 ;;_years	offset	1
   387 ;;_days	offset	9
   388 ;;_secs	offset	17
   389 ;;_remdays	offset	25
   390 ;;_q_cycles	offset	29
   391 ;;_c_cycles	offset	33
   392 ;;_remyears	offset	37
   393 ;;_remsecs	offset	41
   394 ;;_qc_cycles	offset	45
   395 ;;_months	offset	49
   396 ;;_leap	offset	51
   397 ;;_yday	offset	53
   398 ;;_wday	offset	55
   399 ;;_t	offset=-8 (param)
   400 ;;_tm	offset=-10 (param)
   401 ;;_product	offset	0
   402 ;;_multiplier	offset=-8 (param)
   403 ;;_multiplicand	offset=-16 (param)
   404 ;;_product	offset	0
   405 ;;_multiplier	offset=-4 (param)
   406 ;;_multiplicand	offset=-8 (param)
   407 ;;_sign	offset	0
   408 ;;_counter	offset	1
   409 ;;_dividend	offset=-4 (param)
   410 ;;_divisor	offset=-8 (param)
   411 ;;_quotient	offset	0
   412 ;;_sign	offset	4
   413 ;;_counter	offset	5
   414 ;;_dividend	offset=-4 (param)
   415 ;;_divisor	offset=-8 (param)
   416 ;;_cp	offset	0
   417 ;;_s	offset	2
   418 ;;_tim	offset=-2 (param)
   419 ;;_cp	offset=-2 (param)
   420 ;;_i	offset=-3 (param)
   421 ;;_cl	offset=-4 (param)
   422 ;;_ct	offset=-5 (param)
   423 ;;_rem	offset	0
   424 ;;_counter	offset	1
   425 ;;_dividend	offset=-1 (param)
   426 ;;_divisor	offset=-2 (param)
   427 ;;_cp	offset	0
   428 ;;_cb	offset	4
   429 ;;_x	offset	8
   430 ;;_x	offset	0
   431 ;;_r_cal_ptr	offset	2
   432 ;;_y	offset	4
   433 ;;_crcVal	offset	6
   434 ;;_GIEBitValue	offset	0
   435 ;;_bAdd	offset=-2 (param)
   436 ;;_bData	offset=-3 (param)
   437 ;;_result	offset	0
   438 ;;_mask	offset	2
   439 ;;_reverse	offset=-1 (param)
   440 ;;_xorValue	offset=-3 (param)
   441 ;;_mask	offset	0
   442 ;;_reverse	offset	2
   443 ;;_crc	offset=-2 (param)
   444 ;;_data	offset=-1 (param)
   445 ;;_channel	offset=-1 (param)
   446 ;;_c	offset	0
   447 ;;_shape	offset=-1 (param)
   448 ;;_reset	offset=-2 (param)
   449 ;;_i	offset=-1 (param)
   450 ;;_mode	offset=-1 (param)
   451 ;;_cb	offset=-3 (param)
   452 ;;_cp	offset=-5 (param)
   453 ;;_value	offset=-2 (param)
   454 ;;_window	offset=-4 (param)
   455 ;;_standard	offset=-6 (param)
   456 ;;_i	offset	0
   457 ;;_h	offset=-2 (param)
   458 ;;_flipper	offset=-1 (param)
   459 ;;_f	offset	0
   460 ;;_ap	offset	6
   461 ;;_s	offset=-3 (param)
   462 ;;_fmt	offset=-5 (param)
   463 ;;_line	offset=-1 (param)
   464 ;;_vterm	offset=-2 (param)
   465 ;;_numMilliseconds	offset=-2 (param)
   466 ;;_vterm	offset=-1 (param)
   467 ;;_row	offset	0
   468 ;;_r	offset=-1 (param)
   469 ;;_c	offset=-2 (param)
   470 ;;_strPtr	offset=-4 (param)
   471 ;;_strPtr	offset=-1 (param)
   472 ;;_strPtr	offset=-1 (param)
   473 ;;_strPtr	offset=-2 (param)
   474 ;;__this	offset=-2 (param)
   475 ;;_clearBuffer	offset=-3 (param)
   476 ;;_s	offset	0
   477 ;;_k	offset	2
   478 ;;_dest	offset=-2 (param)
   479 ;;_c	offset=-4 (param)
   480 ;;_n	offset=-6 (param)
   481 ;;_ap	offset	0
   482 ;;_fmt	offset=-3 (param)
   483 ;;_cfmt	offset	0
   484 ;;_fp	offset=-2 (param)
   485 ;;_fmt	offset=-4 (param)
   486 ;;_ap	offset=-6 (param)
   487 ;;_vfpfcnvrt$6668	offset	0
   488 ;;_vfpfcnvrt$6679	offset	2
   489 ;;_vfpfcnvrt$6667	offset	4
   490 ;;_llu	offset	6
   491 ;;_ll	offset	14
   492 ;;_f	offset	22
   493 ;;_ct	offset	26
   494 ;;_cp	offset	29
   495 ;;_c	offset	31
   496 ;;_fp	offset=-2 (param)
   497 ;;_fmt	offset=-4 (param)
   498 ;;_ap	offset=-6 (param)
   499 ;;_xtoa$6653	offset	0
   500 ;;_xtoa$6652	offset	2
   501 ;;_n	offset	4
   502 ;;_c	offset	12
   503 ;;_i	offset	14
   504 ;;_w	offset	16
   505 ;;_p	offset	18
   506 ;;_fp	offset=-2 (param)
   507 ;;_d	offset=-10 (param)
   508 ;;_x	offset=-11 (param)
   509 ;;_toupper$7594	offset	0
   510 ;;_c	offset=-2 (param)
   511 ;;_c	offset=-2 (param)
   512 ;;_c	offset=-2 (param)
   513 ;;_n	offset	0
   514 ;;_i	offset	8
   515 ;;_w	offset	10
   516 ;;_p	offset	12
   517 ;;_fp	offset=-2 (param)
   518 ;;_d	offset=-10 (param)
   519 ;;_counter	offset	0
   520 ;;_dividend	offset=-8 (param)
   521 ;;_divisor	offset=-16 (param)
   522 ;;_quotient	offset	0
   523 ;;_counter	offset	8
   524 ;;_dividend	offset=-8 (param)
   525 ;;_divisor	offset=-16 (param)
   526 ;;_r	offset	0
   527 ;;_l	offset	2
   528 ;;__l	offset=-2 (param)
   529 ;;__r	offset=-4 (param)
   530 ;;_n	offset=-6 (param)
   531 ;;_nuls	offset	0
   532 ;;_l	offset	7
   533 ;;_p	offset	9
   534 ;;_cp	offset	11
   535 ;;_w	offset	13
   536 ;;_i	offset	15
   537 ;;_fp	offset=-2 (param)
   538 ;;_s	offset=-4 (param)
   539 ;;_efgtoa$6625	offset	0
   540 ;;_efgtoa$6624	offset	2
   541 ;;_efgtoa$6623	offset	4
   542 ;;_efgtoa$6619	offset	6
   543 ;;_efgtoa$6615	offset	8
   544 ;;_efgtoa$6614	offset	10
   545 ;;_u	offset	12
   546 ;;_g	offset	16
   547 ;;_l	offset	20
   548 ;;_h	offset	24
   549 ;;_ou	offset	28
   550 ;;_n	offset	32
   551 ;;_e	offset	34
   552 ;;_i	offset	36
   553 ;;_w	offset	38
   554 ;;_p	offset	40
   555 ;;_sign	offset	42
   556 ;;_d	offset	44
   557 ;;_ne	offset	46
   558 ;;_m	offset	48
   559 ;;_pp	offset	50
   560 ;;_t	offset	52
   561 ;;_mode	offset	54
   562 ;;_nmode	offset	55
   563 ;;_fp	offset=-2 (param)
   564 ;;_f	offset=-6 (param)
   565 ;;_c	offset=-7 (param)
   566 ;;_tolower$7579	offset	0
   567 ;;_c	offset=-2 (param)
   568 ;;_c	offset=-2 (param)
   569 ;;_d	offset	0
   570 ;;_s	offset	2
   571 ;;_dest	offset=-2 (param)
   572 ;;_src	offset=-4 (param)
   573 ;;_u	offset	0
   574 ;;_m	offset	4
   575 ;;_e	offset	8
   576 ;;_x	offset=-4 (param)
   577 ;;_u	offset	0
   578 ;;_e	offset	4
   579 ;;_x	offset=-4 (param)
   580 ;;_exp1	offset	0
   581 ;;_sign1	offset	1
   582 ;;_f1	offset=-4 (param)
   583 ;;_f1	offset=-4 (param)
   584 ;;_ff1	offset=-4 (param)
   585 ;;_ff2	offset=-8 (param)
   586 ;;_sign	offset	0
   587 ;;_counter	offset	1
   588 ;;_dividend	offset=-2 (param)
   589 ;;_divisor	offset=-4 (param)
   590 ;;_quotient	offset	0
   591 ;;_sign	offset	2
   592 ;;_counter	offset	3
   593 ;;_dividend	offset=-2 (param)
   594 ;;_divisor	offset=-4 (param)
   595 ;;_dtoa$6591	offset	0
   596 ;;_n	offset	2
   597 ;;_i	offset	10
   598 ;;_s	offset	12
   599 ;;_w	offset	14
   600 ;;_p	offset	16
   601 ;;_fp	offset=-2 (param)
   602 ;;_d	offset=-10 (param)
   603 ;;_a	offset=-2 (param)
   604 ;;_sign	offset	0
   605 ;;_counter	offset	1
   606 ;;_dividend	offset=-8 (param)
   607 ;;_divisor	offset=-16 (param)
   608 ;;_quotient	offset	0
   609 ;;_sign	offset	8
   610 ;;_counter	offset	9
   611 ;;_dividend	offset=-8 (param)
   612 ;;_divisor	offset=-16 (param)
   613 ;;_w	offset	0
   614 ;;_fp	offset=-2 (param)
   615 ;;_c	offset=-3 (param)
   616 ;;_w	offset	0
   617 ;;_i	offset	2
   618 ;;_fp	offset=-2 (param)
   619 ;;_buf	offset=-4 (param)
   620 ;;_p	offset=-6 (param)
   621 ;;_a	offset	0
   622 ;;_s	offset=-2 (param)
   623 ;;_i	offset	0
   624 ;;_c	offset	2
   625 ;;_s	offset=-2 (param)
   626 ;;_fp	offset=-4 (param)
   627 ;;_c	offset=-2 (param)
   628 ;;_fp	offset=-4 (param)
   629 ;;_c	offset=-1 (param)
   630 ;;__this	offset=-2 (param)
   631 ;;_c	offset=-3 (param)
   632 ;;_atoi$7211	offset	0
   633 ;;_atoi$7209	offset	2
   634 ;;_atoi$7210	offset	4
   635 ;;_n	offset	5
   636 ;;_neg	offset	7
   637 ;;_s	offset=-2 (param)
   638 ;;_isspace$7260	offset	0
   639 ;;_c	offset=-2 (param)
   640 ;;_c	offset=-2 (param)
   641 ;;_vterm	offset=-1 (param)
   642 ;;_new_response_info	offset=-1 (param)
   643 ;;_new_response_info	offset=-1 (param)
   644 ;;_level	offset=-2 (param)
   645 ;;_dutyValue	offset=-2 (param)
   646 ;;_timer	offset=-1 (param)
   647 ;;_timer	offset=-1 (param)
   648 ;;_count	offset=-3 (param)
   649 ;;_h	offset=-2 (param)
   650 ;;_u	offset	0
   651 ;;_x	offset=-4 (param)
   652 ;;_chan	offset=-1 (param)
   653 ;;_to_what	offset=-2 (param)
   654 ;;_u	offset	0
   655 ;;_s	offset=-2 (param)
   656 ;;_index	offset=-1 (param)
   657 ;;_arg	offset	0
   658 ;;_exp	offset	4
   659 ;;_sign	offset=-1 (param)
   660 ;;_val	offset=-5 (param)
   661 ;;_grs	offset	0
   662 ;;_rem	offset	4
   663 ;;_new_exp	offset	8
   664 ;;_aexp	offset	10
   665 ;;_bexp	offset	11
   666 ;;_sign	offset	12
   667 ;;_b	offset=-4 (param)
   668 ;;_a	offset=-8 (param)
   669 ;;_ff1	offset=-4 (param)
   670 ;;_ff2	offset=-8 (param)
   671 ;;_lp_speed	offset	0
   672 ;;_new	offset=-4 (param)
   673 ;;_bn	offset=-5 (param)
   674 ;;_slow	offset=-6 (param)
   675 ;;_b	offset=-4 (param)
   676 ;;_a	offset=-8 (param)
   677 ;;_grs	offset	0
   678 ;;_bexp	offset	1
   679 ;;_aexp	offset	2
   680 ;;_signs	offset	3
   681 ;;_b	offset=-4 (param)
   682 ;;_a	offset=-8 (param)
   683 ;;_prod	offset	0
   684 ;;_grs	offset	4
   685 ;;_temp	offset	8
   686 ;;_bexp	offset	10
   687 ;;_aexp	offset	11
   688 ;;_sign	offset	12
   689 ;;_b	offset=-4 (param)
   690 ;;_a	offset=-8 (param)
   691 ;;_InterruptHandler	offset=-3 (param)
   692 ;;_InterruptHandler	offset=-3 (param)
   693 ;;_InterruptHandler	offset=-3 (param)
   694 ;;_InterruptHandler	offset=-3 (param)
   695 ;;_InterruptHandler	offset=-3 (param)
   696 ;;_InterruptHandler	offset=-3 (param)
   697 ;;_state	offset	0
   698 ;;_InterruptHandler	offset=-3 (param)
   699 ;;_InterruptHandler	offset=-3 (param)
   700 ;;_seed	offset	0
   701 ;;_poly	offset	2
   702 ;;_InterruptHandler	offset=-3 (param)
   703 ;;_InterruptHandler	offset=-3 (param)
   704 ;;_i	offset	0
   705 ;;_sw_value	offset	1
   706 ;;_timerVal	offset=-2 (param)
   707 ;;_light	offset	0
   708 ;;_t	offset=-8 (param)
   709 ;;_mode	offset=-1 (param)
   710 ;;_chan	offset=-1 (param)
   711 ;;_to_what	offset=-2 (param)
   712 ;;_u	offset	0
   713 ;;_s	offset=-2 (param)
   714 ;;_index	offset=-1 (param)
   715 ;;_arg	offset	0
   716 ;;_exp	offset	4
   717 ;;_sign	offset=-1 (param)
   718 ;;_val	offset=-5 (param)
   719 ;;_b	offset=-4 (param)
   720 ;;_a	offset=-8 (param)
   721 ;;_grs	offset	0
   722 ;;_bexp	offset	1
   723 ;;_aexp	offset	2
   724 ;;_signs	offset	3
   725 ;;_b	offset=-4 (param)
   726 ;;_a	offset=-8 (param)
   727 ;;_prod	offset	0
   728 ;;_grs	offset	4
   729 ;;_temp	offset	8
   730 ;;_bexp	offset	10
   731 ;;_aexp	offset	11
   732 ;;_sign	offset	12
   733 ;;_b	offset=-4 (param)
   734 ;;_a	offset=-8 (param)
   735 ;;_grs	offset	0
   736 ;;_rem	offset	4
   737 ;;_new_exp	offset	8
   738 ;;_aexp	offset	10
   739 ;;_bexp	offset	11
   740 ;;_sign	offset	12
   741 ;;_b	offset=-4 (param)
   742 ;;_a	offset=-8 (param)
   743 ;;_ff1	offset=-4 (param)
   744 ;;_ff2	offset=-8 (param)
   745 ;;_timerVal	offset=-2 (param)
   746 ;;_adj	offset	0
   747 ;;_log_ptr	offset	4
   748 ;;_f	offset	0
   749 ;;_ap	offset	6
   750 ;;_s	offset=-3 (param)
   751 ;;_fmt	offset=-5 (param)
   752 ;;_cfmt	offset	0
   753 ;;_fp	offset=-2 (param)
   754 ;;_fmt	offset=-4 (param)
   755 ;;_ap	offset=-6 (param)
   756 ;;_vfpfcnvrt$6668	offset	0
   757 ;;_vfpfcnvrt$6679	offset	2
   758 ;;_vfpfcnvrt$6667	offset	4
   759 ;;_llu	offset	6
   760 ;;_ll	offset	14
   761 ;;_f	offset	22
   762 ;;_ct	offset	26
   763 ;;_cp	offset	29
   764 ;;_c	offset	31
   765 ;;_fp	offset=-2 (param)
   766 ;;_fmt	offset=-4 (param)
   767 ;;_ap	offset=-6 (param)
   768 ;;_xtoa$6653	offset	0
   769 ;;_xtoa$6652	offset	2
   770 ;;_n	offset	4
   771 ;;_c	offset	12
   772 ;;_i	offset	14
   773 ;;_w	offset	16
   774 ;;_p	offset	18
   775 ;;_fp	offset=-2 (param)
   776 ;;_d	offset=-10 (param)
   777 ;;_x	offset=-11 (param)
   778 ;;_toupper$7594	offset	0
   779 ;;_c	offset=-2 (param)
   780 ;;_c	offset=-2 (param)
   781 ;;_c	offset=-2 (param)
   782 ;;_n	offset	0
   783 ;;_i	offset	8
   784 ;;_w	offset	10
   785 ;;_p	offset	12
   786 ;;_fp	offset=-2 (param)
   787 ;;_d	offset=-10 (param)
   788 ;;_counter	offset	0
   789 ;;_dividend	offset=-8 (param)
   790 ;;_divisor	offset=-16 (param)
   791 ;;_quotient	offset	0
   792 ;;_counter	offset	8
   793 ;;_dividend	offset=-8 (param)
   794 ;;_divisor	offset=-16 (param)
   795 ;;_r	offset	0
   796 ;;_l	offset	2
   797 ;;__l	offset=-2 (param)
   798 ;;__r	offset=-4 (param)
   799 ;;_n	offset=-6 (param)
   800 ;;_nuls	offset	0
   801 ;;_l	offset	7
   802 ;;_p	offset	9
   803 ;;_cp	offset	11
   804 ;;_w	offset	13
   805 ;;_i	offset	15
   806 ;;_fp	offset=-2 (param)
   807 ;;_s	offset=-4 (param)
   808 ;;_efgtoa$6625	offset	0
   809 ;;_efgtoa$6624	offset	2
   810 ;;_efgtoa$6623	offset	4
   811 ;;_efgtoa$6619	offset	6
   812 ;;_efgtoa$6615	offset	8
   813 ;;_efgtoa$6614	offset	10
   814 ;;_u	offset	12
   815 ;;_g	offset	16
   816 ;;_l	offset	20
   817 ;;_h	offset	24
   818 ;;_ou	offset	28
   819 ;;_n	offset	32
   820 ;;_e	offset	34
   821 ;;_i	offset	36
   822 ;;_w	offset	38
   823 ;;_p	offset	40
   824 ;;_sign	offset	42
   825 ;;_d	offset	44
   826 ;;_ne	offset	46
   827 ;;_m	offset	48
   828 ;;_pp	offset	50
   829 ;;_t	offset	52
   830 ;;_mode	offset	54
   831 ;;_nmode	offset	55
   832 ;;_fp	offset=-2 (param)
   833 ;;_f	offset=-6 (param)
   834 ;;_c	offset=-7 (param)
   835 ;;_tolower$7579	offset	0
   836 ;;_c	offset=-2 (param)
   837 ;;_c	offset=-2 (param)
   838 ;;_d	offset	0
   839 ;;_s	offset	2
   840 ;;_dest	offset=-2 (param)
   841 ;;_src	offset=-4 (param)
   842 ;;_u	offset	0
   843 ;;_m	offset	4
   844 ;;_e	offset	8
   845 ;;_x	offset=-4 (param)
   846 ;;_u	offset	0
   847 ;;_e	offset	4
   848 ;;_x	offset=-4 (param)
   849 ;;_exp1	offset	0
   850 ;;_sign1	offset	1
   851 ;;_f1	offset=-4 (param)
   852 ;;_f1	offset=-4 (param)
   853 ;;_ff1	offset=-4 (param)
   854 ;;_ff2	offset=-8 (param)
   855 ;;_sign	offset	0
   856 ;;_counter	offset	1
   857 ;;_dividend	offset=-2 (param)
   858 ;;_divisor	offset=-4 (param)
   859 ;;_quotient	offset	0
   860 ;;_sign	offset	2
   861 ;;_counter	offset	3
   862 ;;_dividend	offset=-2 (param)
   863 ;;_divisor	offset=-4 (param)
   864 ;;_dtoa$6591	offset	0
   865 ;;_n	offset	2
   866 ;;_i	offset	10
   867 ;;_s	offset	12
   868 ;;_w	offset	14
   869 ;;_p	offset	16
   870 ;;_fp	offset=-2 (param)
   871 ;;_d	offset=-10 (param)
   872 ;;_a	offset=-2 (param)
   873 ;;_sign	offset	0
   874 ;;_counter	offset	1
   875 ;;_dividend	offset=-8 (param)
   876 ;;_divisor	offset=-16 (param)
   877 ;;_quotient	offset	0
   878 ;;_sign	offset	8
   879 ;;_counter	offset	9
   880 ;;_dividend	offset=-8 (param)
   881 ;;_divisor	offset=-16 (param)
   882 ;;_w	offset	0
   883 ;;_fp	offset=-2 (param)
   884 ;;_c	offset=-3 (param)
   885 ;;_w	offset	0
   886 ;;_i	offset	2
   887 ;;_fp	offset=-2 (param)
   888 ;;_buf	offset=-4 (param)
   889 ;;_p	offset=-6 (param)
   890 ;;_a	offset	0
   891 ;;_s	offset=-2 (param)
   892 ;;_i	offset	0
   893 ;;_c	offset	2
   894 ;;_s	offset=-2 (param)
   895 ;;_fp	offset=-4 (param)
   896 ;;_c	offset=-2 (param)
   897 ;;_fp	offset=-4 (param)
   898 ;;_c	offset=-1 (param)
   899 ;;__this	offset=-2 (param)
   900 ;;_c	offset=-3 (param)
   901 ;;_atoi$7211	offset	0
   902 ;;_atoi$7209	offset	2
   903 ;;_atoi$7210	offset	4
   904 ;;_n	offset	5
   905 ;;_neg	offset	7
   906 ;;_s	offset=-2 (param)
   907 ;;_isspace$7260	offset	0
   908 ;;_c	offset=-2 (param)
   909 ;;_c	offset=-2 (param)
   910 ;;_dsize	offset=-2 (param)
   911 ;;_u	offset	0
   912 ;;_x	offset=-4 (param)
   913 ;;_f1p	offset=-2 (param)
   914 ;;_f2	offset=-6 (param)
   915 ;;_timer	offset=-1 (param)
   916 ;;_count	offset=-3 (param)
   917 ;;_channel	offset=-1 (param)
   918 ;;_i	offset	0
   919                           
   920                           	psect	idataBIGRAM
   921  01A8A0                     __pidataBIGRAM:
   922                           	opt callstack 0
   923                           
   924                           ;initializer for _port_data
   925  01A8A0  FF                 	db	255
   926  01A8A1  00                 	db	0
   927  01A8A2  FF                 	db	255
   928  01A8A3  00                 	db	0
   929  01A8A4  FF                 	db	255
   930  01A8A5  00                 	db	0
   931  01A8A6  FF                 	db	255
   932  01A8A7  00                 	db	0
   933  01A8A8  FF                 	db	255
   934  01A8A9  00                 	db	0
   935  01A8AA  FF                 	db	255
   936  01A8AB  00                 	db	0
   937  01A8AC  FF                 	db	255
   938  01A8AD  00                 	db	0
   939  01A8AE  FF                 	db	255
   940  01A8AF  00                 	db	0
   941  01A8B0  00                 	db	0
   942  01A8B1  00                 	db	0
   943  01A8B2  00                 	db	0
   944  01A8B3  00                 	db	0
   945  01A8B4  00                 	db	0
   946  01A8B5  00                 	db	0
   947  01A8B6  00                 	db	0
   948  01A8B7  00                 	db	0
   949  01A8B8  00                 	db	0
   950  01A8B9  00                 	db	0
   951  01A8BA  00                 	db	0
   952  01A8BB  00                 	db	0
   953  01A8BC  00                 	db	0
   954  01A8BD  00                 	db	0
   955  01A8BE  00                 	db	0
   956  01A8BF  00                 	db	0
   957  01A8C0  00                 	db	0
   958  01A8C1  00                 	db	0
   959  01A8C2  00                 	db	0
   960  01A8C3  00                 	db	0
   961  01A8C4  00                 	db	0
   962  01A8C5  00                 	db	0
   963  01A8C6  00                 	db	0
   964  01A8C7  00                 	db	0
   965  01A8C8  00                 	db	0
   966  01A8C9  00                 	db	0
   967  01A8CA  00                 	db	0
   968  01A8CB  00                 	db	0
   969  01A8CC  00                 	db	0
   970  01A8CD  00                 	db	0
   971  01A8CE  00                 	db	0
   972  01A8CF  00                 	db	0
   973  01A8D0  00                 	db	0
   974  01A8D1  00                 	db	0
   975  01A8D2  00                 	db	0
   976  01A8D3  00                 	db	0
   977  01A8D4  00                 	db	0
   978  01A8D5  00                 	db	0
   979  01A8D6  00                 	db	0
   980  01A8D7  00                 	db	0
   981  01A8D8  00                 	db	0
   982  01A8D9  00                 	db	0
   983  01A8DA  00                 	db	0
   984  01A8DB  00                 	db	0
   985  01A8DC  00                 	db	0
   986  01A8DD  00                 	db	0
   987  01A8DE  00                 	db	0
   988  01A8DF  00                 	db	0
   989  01A8E0  00                 	db	0
   990  01A8E1  00                 	db	0
   991  01A8E2  00                 	db	0
   992  01A8E3  00                 	db	0
   993  01A8E4  00                 	db	0
   994  01A8E5  00                 	db	0
   995  01A8E6  00                 	db	0
   996  01A8E7  00                 	db	0
   997  01A8E8  00                 	db	0
   998  01A8E9  00                 	db	0
   999  01A8EA  00                 	db	0
  1000  01A8EB  00                 	db	0
  1001  01A8EC  00                 	db	0
  1002  01A8ED  00                 	db	0
  1003  01A8EE  00                 	db	0
  1004  01A8EF  00                 	db	0
  1005  01A8F0  00                 	db	0
  1006  01A8F1  00                 	db	0
  1007  01A8F2  00                 	db	0
  1008  01A8F3  00                 	db	0
  1009  01A8F4  00                 	db	0
  1010  01A8F5  00                 	db	0
  1011  01A8F6  00                 	db	0
  1012  01A8F7  00                 	db	0
  1013  01A8F8  00                 	db	0
  1014  01A8F9  00                 	db	0
  1015  01A8FA  00                 	db	0
  1016  01A8FB  00                 	db	0
  1017  01A8FC  00                 	db	0
  1018  01A8FD  00                 	db	0
  1019  01A8FE  00                 	db	0
  1020  01A8FF  00                 	db	0
  1021  01A900  00                 	db	0
  1022  01A901  00                 	db	0
  1023  01A902  00                 	db	0
  1024  01A903  00                 	db	0
  1025  01A904  00                 	db	0
  1026  01A905  00                 	db	0
  1027  01A906  00                 	db	0
  1028  01A907  00                 	db	0
  1029  01A908  00                 	db	0
  1030  01A909  00                 	db	0
  1031  01A90A  00                 	db	0
  1032  01A90B  00                 	db	0
  1033  01A90C  00                 	db	0
  1034  01A90D  00                 	db	0
  1035  01A90E  00                 	db	0
  1036  01A90F  00                 	db	0
  1037  01A910  00                 	db	0
  1038  01A911  00                 	db	0
  1039  01A912  00                 	db	0
  1040  01A913  00                 	db	0
  1041  01A914  00                 	db	0
  1042  01A915  00                 	db	0
  1043  01A916  00                 	db	0
  1044  01A917  00                 	db	0
  1045  01A918  00                 	db	0
  1046  01A919  00                 	db	0
  1047  01A91A  00                 	db	0
  1048  01A91B  00                 	db	0
  1049  01A91C  00                 	db	0
  1050  01A91D  00                 	db	0
  1051  01A91E  00                 	db	0
  1052  01A91F  00                 	db	0
  1053  01A920  00                 	db	0
  1054  01A921  00                 	db	0
  1055  01A922  00                 	db	0
  1056  01A923  00                 	db	0
  1057  01A924  00                 	db	0
  1058  01A925  00                 	db	0
  1059  01A926  00                 	db	0
  1060  01A927  00                 	db	0
  1061  01A928  00                 	db	0
  1062  01A929  00                 	db	0
  1063  01A92A  00                 	db	0
  1064  01A92B  00                 	db	0
  1065  01A92C  00                 	db	0
  1066  01A92D  00                 	db	0
  1067  01A92E  00                 	db	0
  1068  01A92F  00                 	db	0
  1069  01A930  00                 	db	0
  1070  01A931  00                 	db	0
  1071  01A932  00                 	db	0
  1072  01A933  00                 	db	0
  1073  01A934  00                 	db	0
  1074  01A935  00                 	db	0
  1075  01A936  00                 	db	0
  1076  01A937  00                 	db	0
  1077  01A938  00                 	db	0
  1078  01A939  00                 	db	0
  1079  01A93A  00                 	db	0
  1080  01A93B  00                 	db	0
  1081  01A93C  00                 	db	0
  1082  01A93D  00                 	db	0
  1083  01A93E  00                 	db	0
  1084  01A93F  00                 	db	0
  1085  01A940  00                 	db	0
  1086  01A941  00                 	db	0
  1087  01A942  00                 	db	0
  1088  01A943  00                 	db	0
  1089  01A944  00                 	db	0
  1090  01A945  00                 	db	0
  1091  01A946  00                 	db	0
  1092  01A947  00                 	db	0
  1093  01A948  00                 	db	0
  1094  01A949  00                 	db	0
  1095  01A94A  00                 	db	0
  1096  01A94B  00                 	db	0
  1097  01A94C  00                 	db	0
  1098  01A94D  00                 	db	0
  1099  01A94E  00                 	db	0
  1100  01A94F  00                 	db	0
  1101  01A950  00                 	db	0
  1102  01A951  00                 	db	0
  1103  01A952  00                 	db	0
  1104  01A953  00                 	db	0
  1105  01A954  00                 	db	0
  1106  01A955  00                 	db	0
  1107  01A956  00                 	db	0
  1108  01A957  00                 	db	0
  1109  01A958  00                 	db	0
  1110  01A959  00                 	db	0
  1111  01A95A  00                 	db	0
  1112  01A95B  00                 	db	0
  1113  01A95C  00                 	db	0
  1114  01A95D  00                 	db	0
  1115  01A95E  00                 	db	0
  1116  01A95F  00                 	db	0
  1117  01A960  00                 	db	0
  1118  01A961  00                 	db	0
  1119  01A962  00                 	db	0
  1120  01A963  00                 	db	0
  1121  01A964  00                 	db	0
  1122  01A965  00                 	db	0
  1123  01A966  00                 	db	0
  1124  01A967  00                 	db	0
  1125  01A968  00                 	db	0
  1126  01A969  00                 	db	0
  1127  01A96A  00                 	db	0
  1128  01A96B  00                 	db	0
  1129  01A96C  00                 	db	0
  1130  01A96D  00                 	db	0
  1131  01A96E  00                 	db	0
  1132  01A96F  00                 	db	0
  1133  01A970  00                 	db	0
  1134  01A971  00                 	db	0
  1135  01A972  00                 	db	0
  1136  01A973  00                 	db	0
  1137  01A974  00                 	db	0
  1138  01A975  00                 	db	0
  1139  01A976  00                 	db	0
  1140  01A977  00                 	db	0
  1141  01A978  00                 	db	0
  1142  01A979  00                 	db	0
  1143  01A97A  00                 	db	0
  1144  01A97B  00                 	db	0
  1145  01A97C  00                 	db	0
  1146  01A97D  00                 	db	0
  1147  01A97E  00                 	db	0
  1148  01A97F  00                 	db	0
  1149  01A980  00                 	db	0
  1150  01A981  00                 	db	0
  1151  01A982  00                 	db	0
  1152  01A983  00                 	db	0
  1153  01A984  00                 	db	0
  1154  01A985  00                 	db	0
  1155  01A986  00                 	db	0
  1156  01A987  00                 	db	0
  1157  01A988  00                 	db	0
  1158  01A989  00                 	db	0
  1159  01A98A  00                 	db	0
  1160  01A98B  00                 	db	0
  1161  01A98C  00                 	db	0
  1162  01A98D  00                 	db	0
  1163  01A98E  00                 	db	0
  1164  01A98F  00                 	db	0
  1165  01A990  00                 	db	0
  1166  01A991  00                 	db	0
  1167  01A992  00                 	db	0
  1168  01A993  00                 	db	0
  1169  01A994  00                 	db	0
  1170  01A995  00                 	db	0
  1171  01A996  00                 	db	0
  1172  01A997  00                 	db	0
  1173  01A998  00                 	db	0
  1174  01A999  00                 	db	0
  1175  01A99A  00                 	db	0
  1176  01A99B  00                 	db	0
  1177  01A99C  00                 	db	0
  1178  01A99D  00                 	db	0
  1179  01A99E  00                 	db	0
  1180  01A99F  00                 	db	0
  1181  01A9A0  00                 	db	0
  1182  01A9A1  00                 	db	0
  1183  01A9A2  00                 	db	0
  1184  01A9A3  00                 	db	0
  1185  01A9A4  00                 	db	0
  1186  01A9A5  00                 	db	0
  1187  01A9A6  00                 	db	0
  1188  01A9A7  00                 	db	0
  1189  01A9A8  00                 	db	0
  1190  01A9A9  00                 	db	0
  1191  01A9AA  00                 	db	0
  1192  01A9AB  00                 	db	0
  1193  01A9AC  00                 	db	0
  1194  01A9AD  00                 	db	0
  1195  01A9AE  00                 	db	0
  1196  01A9AF  00                 	db	0
  1197  01A9B0  00                 	db	0
  1198  01A9B1  00                 	db	0
  1199  01A9B2  00                 	db	0
  1200  01A9B3  00                 	db	0
  1201  01A9B4  00                 	db	0
  1202  01A9B5  00                 	db	0
  1203  01A9B6  00                 	db	0
  1204  01A9B7  00                 	db	0
  1205  01A9B8  00                 	db	0
  1206  01A9B9  00                 	db	0
  1207  01A9BA  00                 	db	0
  1208  01A9BB  00                 	db	0
  1209  01A9BC  00                 	db	0
  1210  01A9BD  00                 	db	0
  1211  01A9BE  00                 	db	0
  1212  01A9BF  00                 	db	0
  1213  01A9C0  00                 	db	0
  1214  01A9C1  00                 	db	0
  1215  01A9C2  00                 	db	0
  1216  01A9C3  00                 	db	0
  1217  01A9C4  00                 	db	0
  1218  01A9C5  00                 	db	0
  1219  01A9C6  00                 	db	0
  1220  01A9C7  00                 	db	0
  1221  01A9C8  00                 	db	0
  1222  01A9C9  00                 	db	0
  1223  01A9CA  00                 	db	0
  1224  01A9CB  00                 	db	0
  1225  01A9CC  00                 	db	0
  1226  01A9CD  00                 	db	0
  1227  01A9CE  00                 	db	0
  1228  01A9CF  00                 	db	0
  1229  01A9D0  00                 	db	0
  1230  01A9D1  00                 	db	0
  1231  01A9D2  00                 	db	0
  1232  01A9D3  00                 	db	0
  1233  01A9D4  00                 	db	0
  1234  01A9D5  00                 	db	0
  1235  01A9D6  00                 	db	0
  1236  01A9D7  00                 	db	0
  1237  01A9D8  00                 	db	0
  1238  01A9D9  00                 	db	0
  1239  01A9DA  00                 	db	0
  1240  01A9DB  00                 	db	0
  1241  01A9DC  00                 	db	0
  1242  01A9DD  00                 	db	0
  1243  01A9DE  00                 	db	0
  1244  01A9DF  00                 	db	0
  1245  01A9E0  00                 	db	0
  1246  01A9E1  00                 	db	0
  1247  01A9E2  00                 	db	0
  1248  01A9E3  00                 	db	0
  1249  01A9E4  00                 	db	0
  1250  01A9E5  00                 	db	0
  1251  01A9E6  00                 	db	0
  1252  01A9E7  00                 	db	0
  1253  01A9E8  00                 	db	0
  1254  01A9E9  00                 	db	0
  1255  01A9EA  00                 	db	0
  1256  01A9EB  00                 	db	0
  1257  01A9EC  00                 	db	0
  1258  01A9ED  00                 	db	0
  1259  01A9EE  00                 	db	0
  1260  01A9EF  00                 	db	0
  1261  01A9F0  00                 	db	0
  1262  01A9F1  00                 	db	0
  1263  01A9F2  00                 	db	0
  1264  01A9F3  00                 	db	0
  1265  01A9F4  00                 	db	0
  1266  01A9F5  00                 	db	0
  1267  01A9F6  00                 	db	0
  1268  01A9F7  00                 	db	0
  1269  01A9F8  00                 	db	0
  1270  01A9F9  00                 	db	0
  1271  01A9FA  00                 	db	0
  1272  01A9FB  00                 	db	0
  1273  01A9FC  00                 	db	0
  1274  01A9FD  00                 	db	0
  1275  01A9FE  00                 	db	0
  1276  01A9FF  00                 	db	0
  1277  01AA00  00                 	db	0
  1278  01AA01  00                 	db	0
  1279  01AA02  00                 	db	0
  1280  01AA03  00                 	db	0
  1281  01AA04  00                 	db	0
  1282  01AA05  00                 	db	0
  1283  01AA06  00                 	db	0
  1284  01AA07  00                 	db	0
  1285  01AA08  00                 	db	0
  1286  01AA09  00                 	db	0
  1287  01AA0A  00                 	db	0
  1288  01AA0B  00                 	db	0
  1289  01AA0C  00                 	db	0
  1290  01AA0D  00                 	db	0
  1291  01AA0E  00                 	db	0
  1292  01AA0F  00                 	db	0
  1293  01AA10  00                 	db	0
  1294  01AA11  00                 	db	0
  1295  01AA12  00                 	db	0
  1296  01AA13  00                 	db	0
  1297  01AA14  00                 	db	0
  1298  01AA15  00                 	db	0
  1299  01AA16  00                 	db	0
  1300  01AA17  00                 	db	0
  1301  01AA18  00                 	db	0
  1302  01AA19  00                 	db	0
  1303  01AA1A  00                 	db	0
  1304  01AA1B  00                 	db	0
  1305  01AA1C  00                 	db	0
  1306  01AA1D  00                 	db	0
  1307  01AA1E  00                 	db	0
  1308  01AA1F  00                 	db	0
  1309  01AA20  00                 	db	0
  1310  01AA21  00                 	db	0
  1311  01AA22  00                 	db	0
  1312  01AA23  00                 	db	0
  1313  01AA24  00                 	db	0
  1314  01AA25  00                 	db	0
  1315  01AA26  00                 	db	0
  1316  01AA27  00                 	db	0
  1317  01AA28  00                 	db	0
  1318  01AA29  00                 	db	0
  1319  01AA2A  00                 	db	0
  1320  01AA2B  00                 	db	0
  1321  01AA2C  00                 	db	0
  1322  01AA2D  00                 	db	0
  1323  01AA2E  00                 	db	0
  1324  01AA2F  00                 	db	0
  1325  01AA30  00                 	db	0
  1326  01AA31  00                 	db	0
  1327  01AA32  00                 	db	0
  1328  01AA33  00                 	db	0
  1329  01AA34  00                 	db	0
  1330  01AA35  00                 	db	0
  1331  01AA36  00                 	db	0
  1332  01AA37  00                 	db	0
  1333  01AA38  00                 	db	0
  1334  01AA39  00                 	db	0
  1335  01AA3A  00                 	db	0
  1336  01AA3B  00                 	db	0
  1337  01AA3C  00                 	db	0
  1338  01AA3D  00                 	db	0
  1339  01AA3E  00                 	db	0
  1340  01AA3F  00                 	db	0
  1341  01AA40  00                 	db	0
  1342  01AA41  00                 	db	0
  1343  01AA42  00                 	db	0
  1344  01AA43  00                 	db	0
  1345  01AA44  00                 	db	0
  1346  01AA45  00                 	db	0
  1347  01AA46  00                 	db	0
  1348  01AA47  00                 	db	0
  1349  01AA48  00                 	db	0
  1350  01AA49  00                 	db	0
  1351  01AA4A  00                 	db	0
  1352  01AA4B  00                 	db	0
  1353  01AA4C  00                 	db	0
  1354  01AA4D  00                 	db	0
  1355  01AA4E  00                 	db	0
  1356  01AA4F  00                 	db	0
  1357  01AA50  00                 	db	0
  1358  01AA51  00                 	db	0
  1359  01AA52  00                 	db	0
  1360  01AA53  00                 	db	0
  1361  01AA54  00                 	db	0
  1362  01AA55  00                 	db	0
  1363  01AA56  00                 	db	0
  1364  01AA57  00                 	db	0
  1365  01AA58  00                 	db	0
  1366  01AA59  00                 	db	0
  1367  01AA5A  00                 	db	0
  1368  01AA5B  00                 	db	0
  1369  01AA5C  00                 	db	0
  1370  01AA5D  00                 	db	0
  1371  01AA5E  00                 	db	0
  1372  01AA5F  00                 	db	0
  1373  01AA60  00                 	db	0
  1374  01AA61  00                 	db	0
  1375  01AA62  00                 	db	0
  1376  01AA63  00                 	db	0
  1377  01AA64  00                 	db	0
  1378  01AA65  00                 	db	0
  1379  01AA66  00                 	db	0
  1380  01AA67  00                 	db	0
  1381  01AA68  00                 	db	0
  1382  01AA69  00                 	db	0
  1383  01AA6A  00                 	db	0
  1384  01AA6B  00                 	db	0
  1385  01AA6C  00                 	db	0
  1386  01AA6D  00                 	db	0
  1387  01AA6E  00                 	db	0
  1388  01AA6F  00                 	db	0
  1389  01AA70  00                 	db	0
  1390  01AA71  00                 	db	0
  1391  01AA72  00                 	db	0
  1392  01AA73  00                 	db	0
  1393  01AA74  00                 	db	0
  1394  01AA75  00                 	db	0
  1395  01AA76  00                 	db	0
  1396  01AA77  00                 	db	0
  1397  01AA78  00                 	db	0
  1398  01AA79  00                 	db	0
  1399  01AA7A  00                 	db	0
  1400  01AA7B  00                 	db	0
  1401  01AA7C  00                 	db	0
  1402  01AA7D  00                 	db	0
  1403  01AA7E  00                 	db	0
  1404  01AA7F  00                 	db	0
  1405  01AA80  00                 	db	0
  1406  01AA81  00                 	db	0
  1407  01AA82  00                 	db	0
  1408  01AA83  00                 	db	0
  1409  01AA84  00                 	db	0
  1410  01AA85  00                 	db	0
  1411  01AA86  00                 	db	0
  1412  01AA87  00                 	db	0
  1413  01AA88  00                 	db	0
  1414  01AA89  00                 	db	0
  1415  01AA8A  00                 	db	0
  1416  01AA8B  00                 	db	0
  1417  01AA8C  00                 	db	0
  1418  01AA8D  00                 	db	0
  1419  01AA8E  00                 	db	0
  1420  01AA8F  00                 	db	0
  1421  01AA90  00                 	db	0
  1422  01AA91  00                 	db	0
  1423  01AA92  00                 	db	0
  1424  01AA93  00                 	db	0
  1425  01AA94  00                 	db	0
  1426  01AA95  00                 	db	0
  1427  01AA96  00                 	db	0
  1428  01AA97  00                 	db	0
  1429  01AA98  00                 	db	0
  1430  01AA99  00                 	db	0
  1431  01AA9A  00                 	db	0
  1432  01AA9B  00                 	db	0
  1433  01AA9C  00                 	db	0
  1434  01AA9D  00                 	db	0
  1435  01AA9E  00                 	db	0
  1436  01AA9F  00                 	db	0
  1437                           
  1438                           ;initializer for _C
  1439  01AAA0  0000               	dw	0
  1440  01AAA2  0000               	dw	0
  1441  01AAA4  0000               	dw	0
  1442  01AAA6  0000               	dw	0
  1443  01AAA8  0000               	dw	0
  1444  01AAAA  0000               	dw	0
  1445  01AAAC  0000               	dw	0
  1446  01AAAE  0000               	dw	0
  1447  01AAB0  0000               	dw	0
  1448  01AAB2  0000               	dw	0
  1449  01AAB4  0000               	dw	0
  1450  01AAB6  0000               	dw	0
  1451  01AAB8  0000               	dw	0
  1452  01AABA  0000               	dw	0
  1453  01AABC  0000               	dw	0
  1454  01AABE  0000               	dw	0
  1455  01AAC0  0000               	dw	0
  1456  01AAC2  0000               	dw	0
  1457  01AAC4  0000               	dw	0
  1458  01AAC6  0000               	dw	0
  1459  01AAC8  0000               	dw	0
  1460  01AACA  0000               	dw	0
  1461  01AACC  0000               	dw	0
  1462  01AACE  0000               	dw	0
  1463  01AAD0  0000               	dw	0
  1464  01AAD2  0000               	dw	0
  1465  01AAD4  0000               	dw	0
  1466  01AAD6  0000               	dw	0
  1467  01AAD8  0000               	dw	0
  1468  01AADA  0000               	dw	0
  1469  01AADC  0000               	dw	0
  1470  01AADE  0000               	dw	0
  1471  01AAE0  0000               	dw	0
  1472  01AAE2  0000               	dw	0
  1473  01AAE4  0000               	dw	0
  1474  01AAE6  0000               	dw	0
  1475  01AAE8  0000               	dw	0
  1476  01AAEA  0000               	dw	0
  1477  01AAEC  0000               	dw	0
  1478  01AAEE  0000               	dw	0
  1479  01AAF0  0000               	dw	0
  1480  01AAF2  0000               	dw	0
  1481  01AAF4  0000               	dw	0
  1482  01AAF6  0000               	dw	0
  1483  01AAF8  0000               	dw	0
  1484  01AAFA  0000               	dw	0
  1485  01AAFC  0000               	dw	0
  1486  01AAFE  0000               	dw	0
  1487  01AB00  0000               	dw	0
  1488  01AB02  0000               	dw	0
  1489  01AB04  0000               	dw	0
  1490  01AB06  0000               	dw	0
  1491  01AB08  0000               	dw	0
  1492  01AB0A  0000               	dw	0
  1493  01AB0C  0000               	dw	0
  1494  01AB0E  0000               	dw	0
  1495  01AB10  0000               	dw	0
  1496  01AB12  0000               	dw	0
  1497  01AB14  0000               	dw	0
  1498  01AB16  0000               	dw	0
  1499  01AB18  0000               	dw	0
  1500  01AB1A  0000               	dw	0
  1501  01AB1C  0000               	dw	0
  1502  01AB1E  0000               	dw	0
  1503  01AB20  0000               	dw	0
  1504  01AB22  0000               	dw	0
  1505  01AB24  0000               	dw	0
  1506  01AB26  0000               	dw	0
  1507  01AB28  0000               	dw	0
  1508  01AB2A  0000               	dw	0
  1509  01AB2C  0000               	dw	0
  1510  01AB2E  42FA               	dw	17146
  1511  01AB30  0000               	dw	0
  1512  01AB32  0000               	dw	0
  1513  01AB34  0000               	dw	0
  1514  01AB36  0000               	dw	0
  1515  01AB38  0000               	dw	0
  1516  01AB3A  0000               	dw	0
  1517  01AB3C  0000               	dw	0
  1518  01AB3E  0000               	dw	0
  1519  01AB40  0000               	dw	0
  1520  01AB42  0000               	dw	0
  1521  01AB44  0000               	dw	0
  1522  01AB46  0000               	dw	0
  1523  01AB48  0000               	dw	0
  1524  01AB4A  0000               	dw	0
  1525  01AB4C  0000               	dw	0
  1526  01AB4E  0000               	dw	0
  1527  01AB50  0000               	dw	0
  1528  01AB52  0000               	dw	0
  1529  01AB54  0000               	dw	0
  1530  01AB56  0000               	dw	0
  1531  01AB58  00                 	db	0
  1532  01AB59  0000               	dw	0
  1533  01AB5B  0000               	dw	0
  1534  01AB5D  0000               	dw	0
  1535  01AB5F  0000               	dw	0
  1536  01AB61  0000               	dw	0
  1537  01AB63  0000               	dw	0
  1538  01AB65  0000               	dw	0
  1539  01AB67  0000               	dw	0
  1540  01AB69  0000               	dw	0
  1541  01AB6B  0000               	dw	0
  1542  01AB6D  0000               	dw	0
  1543  01AB6F  0000               	dw	0
  1544  01AB71  0000               	dw	0
  1545  01AB73  3F80               	dw	16256
  1546  01AB75  0000               	dw	0
  1547  01AB77  3F80               	dw	16256
  1548  01AB79  0000               	dw	0
  1549  01AB7B  0000               	dw	0
  1550  01AB7D  0000               	dw	0
  1551  01AB7F  0000               	dw	0
  1552  01AB81  0000               	dw	0
  1553  01AB83  0000               	dw	0
  1554  01AB85  0000               	dw	0
  1555  01AB87  0000               	dw	0
  1556  01AB89  0000               	dw	0
  1557  01AB8B  0000               	dw	0
  1558  01AB8D  0000               	dw	0
  1559  01AB8F  0000               	dw	0
  1560  01AB91  0000               	dw	0
  1561  01AB93  0000               	dw	0
  1562  01AB95  0000               	dw	0
  1563  01AB97  3A98               	dw	15000
  1564  01AB99  0000               	dw	0
  1565  01AB9B  00                 	db	0
  1566  01AB9C  00                 	db	0
  1567  01AB9D  00                 	db	0
  1568  01AB9E  00                 	db	0
  1569  01AB9F  0000               	dw	0
  1570  01ABA1  0000               	dw	0
  1571  01ABA3  0000               	dw	0
  1572  01ABA5  0000               	dw	0
  1573  01ABA7  0000               	dw	0
  1574  01ABA9  0000               	dw	0
  1575  01ABAB  0000               	dw	0
  1576  01ABAD  0000               	dw	0
  1577  01ABAF  0000               	dw	0
  1578  01ABB1  0000               	dw	0
  1579  01ABB3  0000               	dw	0
  1580  01ABB5  0000               	dw	0
  1581  01ABB7  0000               	dw	0
  1582  01ABB9  01                 	db	1
  1583  01ABBA  0000               	dw	0
  1584  01ABBC  0000               	dw	0
  1585  01ABBE  0000               	dw	0
  1586  01ABC0  0000               	dw	0
  1587  01ABC2  0000               	dw	0
  1588  01ABC4  0000               	dw	0
  1589  01ABC6  0000               	dw	0
  1590  01ABC8  0000               	dw	0
  1591  01ABCA  0000               	dw	0
  1592  01ABCC  0000               	dw	0
  1593  01ABCE  01                 	db	1
  1594  01ABCF  00                 	db	0
  1595  01ABD0  0000               	dw	0
  1596  01ABD2  0000               	dw	0
  1597  01ABD4  0000               	dw	0
  1598  01ABD6  0000               	dw	0
  1599  01ABD8  0000               	dw	0
  1600  01ABDA  0000               	dw	0
  1601  01ABDC  0000               	dw	0
  1602  01ABDE  0000               	dw	0
  1603                           
  1604                           	psect	idataBANK1
  1605  000B84                     __pidataBANK1:
  1606                           	opt callstack 0
  1607                           
  1608                           ;initializer for _R
  1609  000B84  0000               	dw	0
  1610  000B86  0000               	dw	0
  1611  000B88  0000               	dw	0
  1612  000B8A  0000               	dw	0
  1613  000B8C  0000               	dw	0
  1614  000B8E  0000               	dw	0
  1615  000B90  0000               	dw	0
  1616  000B92  0000               	dw	0
  1617  000B94  0000               	dw	0
  1618  000B96  0000               	dw	0
  1619  000B98  0000               	dw	0
  1620  000B9A  0000               	dw	0
  1621  000B9C  0000               	dw	0
  1622  000B9E  0000               	dw	0
  1623  000BA0  0000               	dw	0
  1624  000BA2  0000               	dw	0
  1625  000BA4  0000               	dw	0
  1626  000BA6  0000               	dw	0
  1627  000BA8  0000               	dw	0
  1628  000BAA  0F62               	dw	3938
  1629  000BAC  0FA4               	dw	4004
  1630  000BAE  89A0               	dw	35232
  1631  000BB0  3DB0               	dw	15792
  1632  000BB2  DEA4               	dw	56996
  1633  000BB4  3D13               	dw	15635
  1634  000BB6  00                 	db	0
  1635  000BB7  0000               	dw	0
  1636  000BB9  00                 	db	0
  1637  000BBA  0000               	dw	0
  1638  000BBC  0000               	dw	0
  1639  000BBE  0000               	dw	0
  1640  000BC0  0000               	dw	0
  1641  000BC2  0000               	dw	0
  1642  000BC4  0000               	dw	0
  1643  000BC6  0000               	dw	0
  1644  000BC8  0000               	dw	0
  1645  000BCA  0000               	dw	0
  1646  000BCC  0000               	dw	0
  1647  000BCE  0000               	dw	0
  1648  000BD0  0000               	dw	0
  1649  000BD2  0000               	dw	0
  1650  000BD4  0000               	dw	0
  1651  000BD6  0000               	dw	0
  1652  000BD8  0000               	dw	0
  1653  000BDA  0000               	dw	0
  1654  000BDC  0000               	dw	0
  1655  000BDE  0000               	dw	0
  1656  000BE0  0000               	dw	0
  1657  000BE2  0000               	dw	0
  1658  000BE4  0000               	dw	0
  1659  000BE6  0000               	dw	0
  1660  000BE8  0000               	dw	0
  1661  000BEA  0000               	dw	0
  1662  000BEC  0000               	dw	0
  1663  000BEE  0000               	dw	0
  1664  000BF0  0000               	dw	0
  1665  000BF2  0000               	dw	0
  1666  000BF4  0000               	dw	0
  1667  000BF6  0000               	dw	0
  1668  000BF8  0000               	dw	0
  1669  000BFA  0000               	dw	0
  1670  000BFC  0000               	dw	0
  1671  000BFE  0000               	dw	0
  1672  000C00  0000               	dw	0
  1673  000C02  0000               	dw	0
  1674  000C04  0000               	dw	0
  1675  000C06  0000               	dw	0
  1676  000C08  0000               	dw	0
  1677  000C0A  0000               	dw	0
  1678  000C0C  0000               	dw	0
  1679  000C0E  0000               	dw	0
  1680  000C10  0000               	dw	0
  1681  000C12  0000               	dw	0
  1682  000C14  0000               	dw	0
  1683  000C16  0000               	dw	0
  1684  000C18  0000               	dw	0
  1685  000C1A  00                 	db	0
  1686  000C1B  00                 	db	0
  1687  000C1C  1957               	dw	6487
  1688  000C1E  42                 	db	66
  1689                           
  1690                           ;initializer for _H
  1691  000C1F  00                 	db	0
  1692  000C20  00                 	db	0
  1693  000C21  01                 	db	1
  1694  000C22  00                 	db	0
  1695  000C23  01                 	db	1
  1696  000C24  00                 	db	0
  1697  000C25  01                 	db	1
  1698  000C26  00                 	db	0
  1699  000C27  00                 	db	0
  1700                           
  1701                           	psect	idataBANK2
  1702  0005F6                     __pidataBANK2:
  1703                           	opt callstack 0
  1704                           
  1705                           ;initializer for stoa@F1166
  1706  0005F6  28                 	db	40
  1707  0005F7  6E                 	db	110
  1708  0005F8  75                 	db	117
  1709  0005F9  6C                 	db	108
  1710  0005FA  6C                 	db	108
  1711  0005FB  29                 	db	41
  1712  0005FC  00                 	db	0
  1713                           
  1714                           ;initializer for _V
  1715  0005FD  00                 	db	0
  1716  0005FE  00                 	db	0
  1717  0005FF  00                 	db	0
  1718  000600  00                 	db	0
  1719  000601  00                 	db	0
  1720  000602  00                 	db	0
  1721  000603  00                 	db	0
  1722  000604  00                 	db	0
  1723  000605  00                 	db	0
  1724  000606  00                 	db	0
  1725  000607  00                 	db	0
  1726  000608  00                 	db	0
  1727  000609  00                 	db	0
  1728  00060A  00                 	db	0
  1729  00060B  00                 	db	0
  1730  00060C  00                 	db	0
  1731  00060D  00                 	db	0
  1732  00060E  00                 	db	0
  1733  00060F  00                 	db	0
  1734  000610  00                 	db	0
  1735  000611  00                 	db	0
  1736  000612  00                 	db	0
  1737  000613  00                 	db	0
  1738  000614  00                 	db	0
  1739  000615  00                 	db	0
  1740  000616  00                 	db	0
  1741  000617  00                 	db	0
  1742  000618  00                 	db	0
  1743  000619  00                 	db	0
  1744  00061A  00                 	db	0
  1745  00061B  00                 	db	0
  1746  00061C  00                 	db	0
  1747  00061D  00                 	db	0
  1748  00061E  00                 	db	0
  1749  00061F  00                 	db	0
  1750  000620  00                 	db	0
  1751  000621  00                 	db	0
  1752  000622  00                 	db	0
  1753  000623  00                 	db	0
  1754  000624  00                 	db	0
  1755  000625  00                 	db	0
  1756  000626  00                 	db	0
  1757  000627  00                 	db	0
  1758  000628  00                 	db	0
  1759  000629  00                 	db	0
  1760  00062A  00                 	db	0
  1761  00062B  00                 	db	0
  1762  00062C  00                 	db	0
  1763  00062D  00                 	db	0
  1764  00062E  00                 	db	0
  1765  00062F  00                 	db	0
  1766  000630  00                 	db	0
  1767  000631  00                 	db	0
  1768  000632  00                 	db	0
  1769  000633  00                 	db	0
  1770  000634  00                 	db	0
  1771  000635  00                 	db	0
  1772  000636  00                 	db	0
  1773  000637  00                 	db	0
  1774  000638  00                 	db	0
  1775  000639  00                 	db	0
  1776  00063A  00                 	db	0
  1777  00063B  00                 	db	0
  1778  00063C  00                 	db	0
  1779  00063D  00                 	db	0
  1780  00063E  00                 	db	0
  1781  00063F  00                 	db	0
  1782  000640  00                 	db	0
  1783  000641  00                 	db	0
  1784  000642  00                 	db	0
  1785  000643  00                 	db	0
  1786  000644  00                 	db	0
  1787  000645  00                 	db	0
  1788  000646  00                 	db	0
  1789  000647  00                 	db	0
  1790  000648  00                 	db	0
  1791  000649  00                 	db	0
  1792  00064A  00                 	db	0
  1793  00064B  00                 	db	0
  1794  00064C  00                 	db	0
  1795  00064D  00                 	db	0
  1796  00064E  00                 	db	0
  1797  00064F  00                 	db	0
  1798  000650  00                 	db	0
  1799  000651  00                 	db	0
  1800  000652  00                 	db	0
  1801  000653  00                 	db	0
  1802  000654  00                 	db	0
  1803  000655  00                 	db	0
  1804  000656  00                 	db	0
  1805  000657  00                 	db	0
  1806  000658  00                 	db	0
  1807  000659  00                 	db	0
  1808  00065A  00                 	db	0
  1809  00065B  00                 	db	0
  1810  00065C  00                 	db	0
  1811  00065D  00                 	db	0
  1812  00065E  00                 	db	0
  1813  00065F  00                 	db	0
  1814  000660  00                 	db	0
  1815  000661  00                 	db	0
  1816  000662  00                 	db	0
  1817  000663  00                 	db	0
  1818  000664  00                 	db	0
  1819  000665  00                 	db	0
  1820  000666  00                 	db	0
  1821  000667  00                 	db	0
  1822  000668  00                 	db	0
  1823  000669  00                 	db	0
  1824  00066A  00                 	db	0
  1825  00066B  00                 	db	0
  1826  00066C  00                 	db	0
  1827  00066D  00                 	db	0
  1828  00066E  00                 	db	0
  1829  00066F  00                 	db	0
  1830  000670  00                 	db	0
  1831  000671  00                 	db	0
  1832  000672  00                 	db	0
  1833  000673  00                 	db	0
  1834  000674  00                 	db	0
  1835  000675  00                 	db	0
  1836  000676  00                 	db	0
  1837  000677  00                 	db	0
  1838  000678  00                 	db	0
  1839  000679  00                 	db	0
  1840  00067A  00                 	db	0
  1841  00067B  00                 	db	0
  1842  00067C  00                 	db	0
  1843  00067D  00                 	db	0
  1844  00067E  879E               	dw	34718
  1845  000680  5E4C               	dw	24140
  1846  000682  00                 	db	0
  1847  000683  00                 	db	0
  1848  000684  00                 	db	0
  1849  000685  00                 	db	0
  1850  000686  00                 	db	0
  1851  000687  00                 	db	0
  1852  000688  00                 	db	0
  1853  000689  0000               	dw	0
  1854  00068B  0000               	dw	0
  1855  00068D  0000               	dw	0
  1856  00068F  0000               	dw	0
  1857  000691  0000               	dw	0
  1858  000693  0000               	dw	0
  1859  000695  00                 	db	0
  1860  000696  00                 	db	0
  1861  000697  00                 	db	0
  1862  000698  00                 	db	0
  1863  000699  00                 	db	0
  1864  00069A  00                 	db	0
  1865  00069B  00                 	db	0
  1866  00069C  00                 	db	0
  1867  00069D  00                 	db	0
  1868  00069E  00                 	db	0
  1869  00069F  00                 	db	0
  1870  0006A0  0000               	dw	0
  1871  0006A2  0000               	dw	0
  1872  0006A4  2D                 	db	45
  1873  0006A5  00                 	db	0
  1874  0006A6  00                 	db	0
  1875  0006A7  00                 	db	0
  1876  0006A8  00                 	db	0
  1877  0006A9  00                 	db	0
  1878  0006AA  0000               	dw	0
  1879  0006AC  0000               	dw	0
  1880  0006AE  0000               	dw	0
  1881  0006B0  0000               	dw	0
  1882                           
  1883                           	psect	mediumconst
  1884  00F7AA                     __pmediumconst:
  1885                           	opt callstack 0
  1886  00F7AA  00                 	db	0
  1887  00F7AB                     _BVSOC_TABLE:
  1888                           	opt callstack 0
  1889  00F7AB  59D8               	dw	23000
  1890  00F7AD  0000               	dw	0
  1891  00F7AF  0005               	dw	5
  1892  00F7B1  0000               	dw	0
  1893  00F7B3  5B68               	dw	23400
  1894  00F7B5  0000               	dw	0
  1895  00F7B7  000A               	dw	10
  1896  00F7B9  0000               	dw	0
  1897  00F7BB  5C30               	dw	23600
  1898  00F7BD  0000               	dw	0
  1899  00F7BF  0014               	dw	20
  1900  00F7C1  0000               	dw	0
  1901  00F7C3  5E38               	dw	24120
  1902  00F7C5  0000               	dw	0
  1903  00F7C7  0019               	dw	25
  1904  00F7C9  0000               	dw	0
  1905  00F7CB  5E88               	dw	24200
  1906  00F7CD  0000               	dw	0
  1907  00F7CF  001E               	dw	30
  1908  00F7D1  0000               	dw	0
  1909  00F7D3  5F78               	dw	24440
  1910  00F7D5  0000               	dw	0
  1911  00F7D7  0028               	dw	40
  1912  00F7D9  0000               	dw	0
  1913  00F7DB  5FDC               	dw	24540
  1914  00F7DD  0000               	dw	0
  1915  00F7DF  002D               	dw	45
  1916  00F7E1  0000               	dw	0
  1917  00F7E3  6018               	dw	24600
  1918  00F7E5  0000               	dw	0
  1919  00F7E7  0032               	dw	50
  1920  00F7E9  0000               	dw	0
  1921  00F7EB  6046               	dw	24646
  1922  00F7ED  0000               	dw	0
  1923  00F7EF  0035               	dw	53
  1924  00F7F1  0000               	dw	0
  1925  00F7F3  607C               	dw	24700
  1926  00F7F5  0000               	dw	0
  1927  00F7F7  0037               	dw	55
  1928  00F7F9  0000               	dw	0
  1929  00F7FB  60AE               	dw	24750
  1930  00F7FD  0000               	dw	0
  1931  00F7FF  0039               	dw	57
  1932  00F801  0000               	dw	0
  1933  00F803  60E0               	dw	24800
  1934  00F805  0000               	dw	0
  1935  00F807  003C               	dw	60
  1936  00F809  0000               	dw	0
  1937  00F80B  6112               	dw	24850
  1938  00F80D  0000               	dw	0
  1939  00F80F  003F               	dw	63
  1940  00F811  0000               	dw	0
  1941  00F813  615D               	dw	24925
  1942  00F815  0000               	dw	0
  1943  00F817  0043               	dw	67
  1944  00F819  0000               	dw	0
  1945  00F81B  61A8               	dw	25000
  1946  00F81D  0000               	dw	0
  1947  00F81F  0046               	dw	70
  1948  00F821  0000               	dw	0
  1949  00F823  61BC               	dw	25020
  1950  00F825  0000               	dw	0
  1951  00F827  0048               	dw	72
  1952  00F829  0000               	dw	0
  1953  00F82B  61D0               	dw	25040
  1954  00F82D  0000               	dw	0
  1955  00F82F  004B               	dw	75
  1956  00F831  0000               	dw	0
  1957  00F833  61DA               	dw	25050
  1958  00F835  0000               	dw	0
  1959  00F837  0050               	dw	80
  1960  00F839  0000               	dw	0
  1961  00F83B  61E4               	dw	25060
  1962  00F83D  0000               	dw	0
  1963  00F83F  0055               	dw	85
  1964  00F841  0000               	dw	0
  1965  00F843  61F8               	dw	25080
  1966  00F845  0000               	dw	0
  1967  00F847  005A               	dw	90
  1968  00F849  0000               	dw	0
  1969  00F84B  6208               	dw	25096
  1970  00F84D  0000               	dw	0
  1971  00F84F  005C               	dw	92
  1972  00F851  0000               	dw	0
  1973  00F853  6222               	dw	25122
  1974  00F855  0000               	dw	0
  1975  00F857  005D               	dw	93
  1976  00F859  0000               	dw	0
  1977  00F85B  6234               	dw	25140
  1978  00F85D  0000               	dw	0
  1979  00F85F  005F               	dw	95
  1980  00F861  0000               	dw	0
  1981  00F863  6248               	dw	25160
  1982  00F865  0000               	dw	0
  1983  00F867  0061               	dw	97
  1984  00F869  0000               	dw	0
  1985  00F86B  625C               	dw	25180
  1986  00F86D  0000               	dw	0
  1987  00F86F  0064               	dw	100
  1988  00F871  0000               	dw	0
  1989  00F873  6784               	dw	26500
  1990  00F875  0000               	dw	0
  1991  00F877  0062               	dw	98
  1992  00F879  0000               	dw	0
  1993  00F87B                     __end_of_BVSOC_TABLE:
  1994                           	opt callstack 0
  1995  00F87B                     ___month_to_secs@secs_through_month:
  1996                           	opt callstack 0
  1997  00F87B  0000               	dw	0
  1998  00F87D  0000               	dw	0
  1999  00F87F  DE80               	dw	56960
  2000  00F881  0028               	dw	40
  2001  00F883  C880               	dw	51328
  2002  00F885  004D               	dw	77
  2003  00F887  A700               	dw	42752
  2004  00F889  0076               	dw	118
  2005  00F88B  3400               	dw	13312
  2006  00F88D  009E               	dw	158
  2007  00F88F  1280               	dw	4736
  2008  00F891  00C7               	dw	199
  2009  00F893  9F80               	dw	40832
  2010  00F895  00EE               	dw	238
  2011  00F897  7E00               	dw	32256
  2012  00F899  0117               	dw	279
  2013  00F89B  5C80               	dw	23680
  2014  00F89D  0140               	dw	320
  2015  00F89F  E980               	dw	59776
  2016  00F8A1  0167               	dw	359
  2017  00F8A3  C800               	dw	51200
  2018  00F8A5  0190               	dw	400
  2019  00F8A7  5500               	dw	21760
  2020  00F8A9  01B8               	dw	440
  2021  00F8AB                     __end_of___month_to_secs@secs_through_month:
  2022                           	opt callstack 0
  2023  00F8AB                     ___secs_to_tm@days_in_month:
  2024                           	opt callstack 0
  2025  00F8AB  1F                 	db	31
  2026  00F8AC  1E                 	db	30
  2027  00F8AD  1F                 	db	31
  2028  00F8AE  1E                 	db	30
  2029  00F8AF  1F                 	db	31
  2030  00F8B0  1F                 	db	31
  2031  00F8B1  1E                 	db	30
  2032  00F8B2  1F                 	db	31
  2033  00F8B3  1E                 	db	30
  2034  00F8B4  1F                 	db	31
  2035  00F8B5  1F                 	db	31
  2036  00F8B6  1D                 	db	29
  2037  00F8B7                     __end_of___secs_to_tm@days_in_month:
  2038                           	opt callstack 0
  2039  00F8B7                     _T:
  2040                           	opt callstack 0
  2041  00F8B7  63                 	db	99
  2042  00F8B8  6F                 	db	111
  2043  00F8B9  6D                 	db	109
  2044  00F8BA  6D                 	db	109
  2045  00F8BB  61                 	db	97
  2046  00F8BC  6E                 	db	110
  2047  00F8BD  64                 	db	100
  2048  00F8BE  73                 	db	115
  2049  00F8BF  20                 	db	32
  2050  00F8C0  31                 	db	49
  2051  00F8C1  00                 	db	0
  2052  00F8C2  00                 	db	0
  2053  00F8C3  00                 	db	0
  2054  00F8C4  00                 	db	0
  2055  00F8C5  00                 	db	0
  2056  00F8C6  00                 	db	0
  2057  00F8C7  00                 	db	0
  2058  00F8C8  00                 	db	0
  2059  00F8C9  00                 	db	0
  2060  00F8CA  00                 	db	0
  2061  00F8CB  00                 	db	0
  2062  00F8CC  00                 	db	0
  2063  00F8CD  64                 	db	100
  2064  00F8CE  69                 	db	105
  2065  00F8CF  73                 	db	115
  2066  00F8D0  70                 	db	112
  2067  00F8D1  6C                 	db	108
  2068  00F8D2  61                 	db	97
  2069  00F8D3  79                 	db	121
  2070  00F8D4  73                 	db	115
  2071  00F8D5  20                 	db	32
  2072  00F8D6  31                 	db	49
  2073  00F8D7  00                 	db	0
  2074  00F8D8  00                 	db	0
  2075  00F8D9  00                 	db	0
  2076  00F8DA  00                 	db	0
  2077  00F8DB  00                 	db	0
  2078  00F8DC  00                 	db	0
  2079  00F8DD  00                 	db	0
  2080  00F8DE  00                 	db	0
  2081  00F8DF  00                 	db	0
  2082  00F8E0  00                 	db	0
  2083  00F8E1  00                 	db	0
  2084  00F8E2  00                 	db	0
  2085  00F8E3  63                 	db	99
  2086  00F8E4  6F                 	db	111
  2087  00F8E5  6D                 	db	109
  2088  00F8E6  6D                 	db	109
  2089  00F8E7  61                 	db	97
  2090  00F8E8  6E                 	db	110
  2091  00F8E9  64                 	db	100
  2092  00F8EA  73                 	db	115
  2093  00F8EB  20                 	db	32
  2094  00F8EC  32                 	db	50
  2095  00F8ED  00                 	db	0
  2096  00F8EE  00                 	db	0
  2097  00F8EF  00                 	db	0
  2098  00F8F0  00                 	db	0
  2099  00F8F1  00                 	db	0
  2100  00F8F2  00                 	db	0
  2101  00F8F3  00                 	db	0
  2102  00F8F4  00                 	db	0
  2103  00F8F5  00                 	db	0
  2104  00F8F6  00                 	db	0
  2105  00F8F7  00                 	db	0
  2106  00F8F8  00                 	db	0
  2107  00F8F9  64                 	db	100
  2108  00F8FA  69                 	db	105
  2109  00F8FB  73                 	db	115
  2110  00F8FC  70                 	db	112
  2111  00F8FD  6C                 	db	108
  2112  00F8FE  61                 	db	97
  2113  00F8FF  79                 	db	121
  2114  00F900  73                 	db	115
  2115  00F901  20                 	db	32
  2116  00F902  32                 	db	50
  2117  00F903  00                 	db	0
  2118  00F904  00                 	db	0
  2119  00F905  00                 	db	0
  2120  00F906  00                 	db	0
  2121  00F907  00                 	db	0
  2122  00F908  00                 	db	0
  2123  00F909  00                 	db	0
  2124  00F90A  00                 	db	0
  2125  00F90B  00                 	db	0
  2126  00F90C  00                 	db	0
  2127  00F90D  00                 	db	0
  2128  00F90E  00                 	db	0
  2129  00F90F  63                 	db	99
  2130  00F910  6F                 	db	111
  2131  00F911  6D                 	db	109
  2132  00F912  6D                 	db	109
  2133  00F913  61                 	db	97
  2134  00F914  6E                 	db	110
  2135  00F915  64                 	db	100
  2136  00F916  73                 	db	115
  2137  00F917  20                 	db	32
  2138  00F918  33                 	db	51
  2139  00F919  00                 	db	0
  2140  00F91A  00                 	db	0
  2141  00F91B  00                 	db	0
  2142  00F91C  00                 	db	0
  2143  00F91D  00                 	db	0
  2144  00F91E  00                 	db	0
  2145  00F91F  00                 	db	0
  2146  00F920  00                 	db	0
  2147  00F921  00                 	db	0
  2148  00F922  00                 	db	0
  2149  00F923  00                 	db	0
  2150  00F924  00                 	db	0
  2151  00F925  64                 	db	100
  2152  00F926  69                 	db	105
  2153  00F927  73                 	db	115
  2154  00F928  70                 	db	112
  2155  00F929  6C                 	db	108
  2156  00F92A  61                 	db	97
  2157  00F92B  79                 	db	121
  2158  00F92C  73                 	db	115
  2159  00F92D  20                 	db	32
  2160  00F92E  33                 	db	51
  2161  00F92F  00                 	db	0
  2162  00F930  00                 	db	0
  2163  00F931  00                 	db	0
  2164  00F932  00                 	db	0
  2165  00F933  00                 	db	0
  2166  00F934  00                 	db	0
  2167  00F935  00                 	db	0
  2168  00F936  00                 	db	0
  2169  00F937  00                 	db	0
  2170  00F938  00                 	db	0
  2171  00F939  00                 	db	0
  2172  00F93A  00                 	db	0
  2173  00F93B  63                 	db	99
  2174  00F93C  6F                 	db	111
  2175  00F93D  6D                 	db	109
  2176  00F93E  6D                 	db	109
  2177  00F93F  61                 	db	97
  2178  00F940  6E                 	db	110
  2179  00F941  64                 	db	100
  2180  00F942  73                 	db	115
  2181  00F943  20                 	db	32
  2182  00F944  34                 	db	52
  2183  00F945  00                 	db	0
  2184  00F946  00                 	db	0
  2185  00F947  00                 	db	0
  2186  00F948  00                 	db	0
  2187  00F949  00                 	db	0
  2188  00F94A  00                 	db	0
  2189  00F94B  00                 	db	0
  2190  00F94C  00                 	db	0
  2191  00F94D  00                 	db	0
  2192  00F94E  00                 	db	0
  2193  00F94F  00                 	db	0
  2194  00F950  00                 	db	0
  2195  00F951  64                 	db	100
  2196  00F952  69                 	db	105
  2197  00F953  73                 	db	115
  2198  00F954  70                 	db	112
  2199  00F955  6C                 	db	108
  2200  00F956  61                 	db	97
  2201  00F957  79                 	db	121
  2202  00F958  73                 	db	115
  2203  00F959  20                 	db	32
  2204  00F95A  34                 	db	52
  2205  00F95B  00                 	db	0
  2206  00F95C  00                 	db	0
  2207  00F95D  00                 	db	0
  2208  00F95E  00                 	db	0
  2209  00F95F  00                 	db	0
  2210  00F960  00                 	db	0
  2211  00F961  00                 	db	0
  2212  00F962  00                 	db	0
  2213  00F963  00                 	db	0
  2214  00F964  00                 	db	0
  2215  00F965  00                 	db	0
  2216  00F966  00                 	db	0
  2217  00F967                     __end_of_T:
  2218                           	opt callstack 0
  2219  00F967                     _spin:
  2220                           	opt callstack 0
  2221  00F967  7C                 	db	124
  2222  00F968  7C                 	db	124
  2223  00F969  2F                 	db	47
  2224  00F96A  2F                 	db	47
  2225  00F96B  2D                 	db	45
  2226  00F96C  2D                 	db	45
  2227  00F96D  00                 	db	0
  2228  00F96E  00                 	db	0
  2229  00F96F  00                 	db	0
  2230  00F970  00                 	db	0
  2231  00F971  00                 	db	0
  2232  00F972  00                 	db	0
  2233  00F973  00                 	db	0
  2234  00F974  00                 	db	0
  2235  00F975  00                 	db	0
  2236  00F976  00                 	db	0
  2237  00F977  00                 	db	0
  2238  00F978  00                 	db	0
  2239  00F979  00                 	db	0
  2240  00F97A  00                 	db	0
  2241  00F97B  7C                 	db	124
  2242  00F97C  7C                 	db	124
  2243  00F97D  2F                 	db	47
  2244  00F97E  2F                 	db	47
  2245  00F97F  2D                 	db	45
  2246  00F980  2D                 	db	45
  2247  00F981  5C                 	db	92
  2248  00F982  5C                 	db	92
  2249  00F983  00                 	db	0
  2250  00F984  00                 	db	0
  2251  00F985  00                 	db	0
  2252  00F986  00                 	db	0
  2253  00F987  00                 	db	0
  2254  00F988  00                 	db	0
  2255  00F989  00                 	db	0
  2256  00F98A  00                 	db	0
  2257  00F98B  00                 	db	0
  2258  00F98C  00                 	db	0
  2259  00F98D  00                 	db	0
  2260  00F98E  00                 	db	0
  2261  00F98F  4F                 	db	79
  2262  00F990  4F                 	db	79
  2263  00F991  4F                 	db	79
  2264  00F992  4F                 	db	79
  2265  00F993  4F                 	db	79
  2266  00F994  4F                 	db	79
  2267  00F995  2D                 	db	45
  2268  00F996  2D                 	db	45
  2269  00F997  5F                 	db	95
  2270  00F998  5F                 	db	95
  2271  00F999  2D                 	db	45
  2272  00F99A  00                 	db	0
  2273  00F99B  00                 	db	0
  2274  00F99C  00                 	db	0
  2275  00F99D  00                 	db	0
  2276  00F99E  00                 	db	0
  2277  00F99F  00                 	db	0
  2278  00F9A0  00                 	db	0
  2279  00F9A1  00                 	db	0
  2280  00F9A2  00                 	db	0
  2281  00F9A3  76                 	db	118
  2282  00F9A4  76                 	db	118
  2283  00F9A5  3C                 	db	60
  2284  00F9A6  3C                 	db	60
  2285  00F9A7  5E                 	db	94
  2286  00F9A8  5E                 	db	94
  2287  00F9A9  3E                 	db	62
  2288  00F9AA  3E                 	db	62
  2289  00F9AB  00                 	db	0
  2290  00F9AC  00                 	db	0
  2291  00F9AD  00                 	db	0
  2292  00F9AE  00                 	db	0
  2293  00F9AF  00                 	db	0
  2294  00F9B0  00                 	db	0
  2295  00F9B1  00                 	db	0
  2296  00F9B2  00                 	db	0
  2297  00F9B3  00                 	db	0
  2298  00F9B4  00                 	db	0
  2299  00F9B5  00                 	db	0
  2300  00F9B6  00                 	db	0
  2301  00F9B7  2E                 	db	46
  2302  00F9B8  2E                 	db	46
  2303  00F9B9  2A                 	db	42
  2304  00F9BA  2A                 	db	42
  2305  00F9BB  78                 	db	120
  2306  00F9BC  23                 	db	35
  2307  00F9BD  78                 	db	120
  2308  00F9BE  23                 	db	35
  2309  00F9BF  58                 	db	88
  2310  00F9C0  58                 	db	88
  2311  00F9C1  7C                 	db	124
  2312  00F9C2  7C                 	db	124
  2313  00F9C3  2D                 	db	45
  2314  00F9C4  2D                 	db	45
  2315  00F9C5  00                 	db	0
  2316  00F9C6  00                 	db	0
  2317  00F9C7  00                 	db	0
  2318  00F9C8  00                 	db	0
  2319  00F9C9  00                 	db	0
  2320  00F9CA  00                 	db	0
  2321  00F9CB  2E                 	db	46
  2322  00F9CC  2E                 	db	46
  2323  00F9CD  6F                 	db	111
  2324  00F9CE  6F                 	db	111
  2325  00F9CF  4F                 	db	79
  2326  00F9D0  4F                 	db	79
  2327  00F9D1  6F                 	db	111
  2328  00F9D2  6F                 	db	111
  2329  00F9D3  00                 	db	0
  2330  00F9D4  00                 	db	0
  2331  00F9D5  00                 	db	0
  2332  00F9D6  00                 	db	0
  2333  00F9D7  00                 	db	0
  2334  00F9D8  00                 	db	0
  2335  00F9D9  00                 	db	0
  2336  00F9DA  00                 	db	0
  2337  00F9DB  00                 	db	0
  2338  00F9DC  00                 	db	0
  2339  00F9DD  00                 	db	0
  2340  00F9DE  00                 	db	0
  2341  00F9DF                     __end_of_spin:
  2342                           	opt callstack 0
  2343  00F9DF  0000               	dw	0
  2344  00F9E1  3F80               	dw	16256
  2345  00F9E3  0000               	dw	0
  2346  00F9E5  3FC0               	dw	16320
  2347  00F9E7                     __end_of_bp:
  2348                           	opt callstack 0
  2349  00F9E7                     ___gmt:
  2350                           	opt callstack 0
  2351  00F9E7  47                 	db	71
  2352  00F9E8  4D                 	db	77
  2353  00F9E9  54                 	db	84
  2354  00F9EA  00                 	db	0
  2355  00F9EB                     __end_of___gmt:
  2356                           	opt callstack 0
  2357  00F9EB  AA00               	dw	43520
  2358  00F9ED  3FB8               	dw	16312
  2359  00F9EF                     __end_of_ivln2_h:
  2360                           	opt callstack 0
  2361  00F9EF  23C6               	dw	9158
  2362  00F9F1  B8F6               	dw	47350
  2363  00F9F3                     __end_of_cp_l:
  2364                           	opt callstack 0
  2365  00F9F3  4000               	dw	16384
  2366  00F9F5  3F76               	dw	16246
  2367  00F9F7                     __end_of_cp_h:
  2368                           	opt callstack 0
  2369  0000                     _IVTADL	set	14493
  2370  0000                     _IVTADH	set	14494
  2371  0000                     _IVTADU	set	14495
  2372  0000                     _CRCDATH	set	14689
  2373  0000                     _CRCDATL	set	14688
  2374  0000                     _CRCCON0bits	set	14696
  2375  0000                     _CRCCON1bits	set	14697
  2376  0000                     _CRCXORL	set	14694
  2377  0000                     _CRCXORH	set	14695
  2378  0000                     _SCANTRIG	set	14717
  2379  0000                     _SCANHADRL	set	14713
  2380  0000                     _SCANHADRH	set	14714
  2381  0000                     _SCANHADRU	set	14715
  2382  0000                     _SCANLADRL	set	14710
  2383  0000                     _SCANLADRH	set	14711
  2384  0000                     _SCANLADRU	set	14712
  2385  0000                     _SCANCON0	set	14716
  2386  0000                     _CRCACCH	set	14691
  2387  0000                     _CRCACCL	set	14690
  2388  0000                     _CRCCON1	set	14697
  2389  0000                     _CRCCON0	set	14696
  2390  0000                     _PIR6bits	set	14758
  2391  0000                     _PIR4bits	set	14756
  2392  0000                     _PIE8bits	set	14744
  2393  0000                     _PIR8bits	set	14760
  2394  0000                     _PIR0bits	set	14752
  2395  0000                     _NVMCON2	set	14822
  2396  0000                     _NVMDAT	set	14819
  2397  0000                     _NVMADRL	set	14816
  2398  0000                     _NVMADRH	set	14817
  2399  0000                     _NVMCON1bits	set	14821
  2400  0000                     _SCANPR	set	14839
  2401  0000                     _DMA2PR	set	14836
  2402  0000                     _DMA1PR	set	14835
  2403  0000                     _MAINPR	set	14834
  2404  0000                     _ISRPR	set	14833
  2405  0000                     _PIE2bits	set	14738
  2406  0000                     _PIR2bits	set	14754
  2407  0000                     _PIE9bits	set	14745
  2408  0000                     _PIR9bits	set	14761
  2409  0000                     _PIE6bits	set	14742
  2410  0000                     _PIE3bits	set	14739
  2411  0000                     _PMD7	set	14791
  2412  0000                     _PMD6	set	14790
  2413  0000                     _PMD5	set	14789
  2414  0000                     _PMD4	set	14788
  2415  0000                     _PMD3	set	14787
  2416  0000                     _PMD2	set	14786
  2417  0000                     _PMD1	set	14785
  2418  0000                     _PMD0	set	14784
  2419  0000                     _OSCTUNE	set	14814
  2420  0000                     _OSCFRQ	set	14815
  2421  0000                     _OSCEN	set	14813
  2422  0000                     _OSCCON3	set	14811
  2423  0000                     _OSCCON1	set	14809
  2424  0000                     _IPR8bits	set	14728
  2425  0000                     _IPR9bits	set	14729
  2426  0000                     _IPR5bits	set	14725
  2427  0000                     _IPR1bits	set	14721
  2428  0000                     _IPR3bits	set	14723
  2429  0000                     _IPR6bits	set	14726
  2430  0000                     _IPR2bits	set	14722
  2431  0000                     _PIE5bits	set	14741
  2432  0000                     _PIE1bits	set	14737
  2433  0000                     _PIR5bits	set	14757
  2434  0000                     _PIR1bits	set	14753
  2435  0000                     _PLLR	set	118496
  2436  0000                     _SPI1SDIPPS	set	15071
  2437  0000                     _U1RXPPS	set	15077
  2438  0000                     _RC6PPS	set	14870
  2439  0000                     _RC5PPS	set	14869
  2440  0000                     _INT1PPS	set	15041
  2441  0000                     _RD1PPS	set	14873
  2442  0000                     _INT0PPS	set	15040
  2443  0000                     _RC3PPS	set	14867
  2444  0000                     _RB6PPS	set	14862
  2445  0000                     _SPI1SCKPPS	set	15070
  2446  0000                     _U2RXPPS	set	15080
  2447  0000                     _SLRCONF	set	14995
  2448  0000                     _SLRCONE	set	14979
  2449  0000                     _SLRCOND	set	14963
  2450  0000                     _SLRCONC	set	14947
  2451  0000                     _SLRCONB	set	14931
  2452  0000                     _SLRCONA	set	14915
  2453  0000                     _ODCOND	set	14962
  2454  0000                     _ODCONC	set	14946
  2455  0000                     _ODCONB	set	14930
  2456  0000                     _ODCONA	set	14914
  2457  0000                     _ODCONF	set	14994
  2458  0000                     _ODCONE	set	14978
  2459  0000                     _WPUC	set	14945
  2460  0000                     _WPUA	set	14913
  2461  0000                     _WPUB	set	14929
  2462  0000                     _WPUE	set	14977
  2463  0000                     _WPUF	set	14993
  2464  0000                     _WPUD	set	14961
  2465  0000                     _ANSELA	set	14912
  2466  0000                     _ANSELF	set	14992
  2467  0000                     _ANSELE	set	14976
  2468  0000                     _ANSELB	set	14928
  2469  0000                     _ANSELC	set	14944
  2470  0000                     _ANSELD	set	14960
  2471  0000                     _DMA2SSA	set	15321
  2472  0000                     _DMA1SSA	set	15353
  2473  0000                     _DMA2DSZ	set	15310
  2474  0000                     _DMA2SSZ	set	15319
  2475  0000                     _DMA2DSA	set	15312
  2476  0000                     _DMA1DSZ	set	15342
  2477  0000                     _DMA1SSZ	set	15351
  2478  0000                     _DMA1DSA	set	15344
  2479  0000                     _DMA2CON0bits	set	15324
  2480  0000                     _DMA2CON1bits	set	15325
  2481  0000                     _DMA1CON0bits	set	15356
  2482  0000                     _DMA1CON1bits	set	15357
  2483  0000                     _DMA2CON0	set	15324
  2484  0000                     _DMA2AIRQ	set	15326
  2485  0000                     _DMA2SIRQ	set	15327
  2486  0000                     _DMA2CON1	set	15325
  2487  0000                     _DMA1CON0	set	15356
  2488  0000                     _DMA1AIRQ	set	15358
  2489  0000                     _DMA1SIRQ	set	15359
  2490  0000                     _DMA1CON1	set	15357
  2491  0000                     _CLKRCON	set	15589
  2492  0000                     _CLKRCLK	set	15590
  2493  0000                     _SPI1CON1bits	set	15637
  2494  0000                     _SPI1STATUSbits	set	15639
  2495  0000                     _SPI1INTFbits	set	15642
  2496  0000                     _SPI1CON0bits	set	15636
  2497  0000                     _SPI1RXB	set	15632
  2498  0000                     _SPI1TXB	set	15633
  2499  0000                     _SPI1TCNTL	set	15634
  2500  0000                     _SPI1CON0	set	15636
  2501  0000                     _SPI1CLK	set	15644
  2502  0000                     _SPI1BAUD	set	15641
  2503  0000                     _SPI1CON2	set	15638
  2504  0000                     _SPI1CON1	set	15637
  2505  0000                     _U2RXB	set	15824
  2506  0000                     _U2TXB	set	15826
  2507  0000                     _U2ERRIE	set	15842
  2508  0000                     _U2ERRIR	set	15841
  2509  0000                     _U2UIR	set	15840
  2510  0000                     _U2FIFO	set	15839
  2511  0000                     _U2BRGH	set	15838
  2512  0000                     _U2BRGL	set	15837
  2513  0000                     _U2CON2	set	15836
  2514  0000                     _U2CON1	set	15835
  2515  0000                     _U2CON0	set	15834
  2516  0000                     _U2P3L	set	15832
  2517  0000                     _U2P2L	set	15830
  2518  0000                     _U2P1L	set	15828
  2519  0000                     _U1RXB	set	15848
  2520  0000                     _U1ERRIE	set	15866
  2521  0000                     _U1ERRIR	set	15865
  2522  0000                     _U1UIR	set	15864
  2523  0000                     _U1FIFO	set	15863
  2524  0000                     _U1BRGH	set	15862
  2525  0000                     _U1BRGL	set	15861
  2526  0000                     _U1CON2	set	15860
  2527  0000                     _U1CON1	set	15859
  2528  0000                     _U1CON0	set	15858
  2529  0000                     _U1P3H	set	15857
  2530  0000                     _U1P3L	set	15856
  2531  0000                     _U1P2H	set	15855
  2532  0000                     _U1P2L	set	15854
  2533  0000                     _U1P1H	set	15853
  2534  0000                     _U1P1L	set	15852
  2535  0000                     _FVRCON	set	16065
  2536  0000                     _ADFLTRL	set	16102
  2537  0000                     _ADFLTRH	set	16103
  2538  0000                     _ADCON0bits	set	16120
  2539  0000                     _ADCON0	set	16120
  2540  0000                     _ADCLK	set	16127
  2541  0000                     _ADACT	set	16126
  2542  0000                     _ADREF	set	16125
  2543  0000                     _ADSTAT	set	16124
  2544  0000                     _ADCON3	set	16123
  2545  0000                     _ADCON2	set	16122
  2546  0000                     _ADCON1	set	16121
  2547  0000                     _ADPREH	set	16119
  2548  0000                     _ADPREL	set	16118
  2549  0000                     _ADCAP	set	16117
  2550  0000                     _ADACQH	set	16116
  2551  0000                     _ADACQL	set	16115
  2552  0000                     _ADPCH	set	16113
  2553  0000                     _ADRPT	set	16108
  2554  0000                     _ADACCU	set	16106
  2555  0000                     _ADSTPTH	set	16101
  2556  0000                     _ADSTPTL	set	16100
  2557  0000                     _ADUTHH	set	16097
  2558  0000                     _ADUTHL	set	16096
  2559  0000                     _ADLTHH	set	16095
  2560  0000                     _ADLTHL	set	16094
  2561  0000                     _CCPTMRS1bits	set	16223
  2562  0000                     _PORTDbits	set	16333
  2563  0000                     _PORTFbits	set	16335
  2564  0000                     _LATFbits	set	16319
  2565  0000                     _LATCbits	set	16316
  2566  0000                     _LATDbits	set	16317
  2567  0000                     _PORTBbits	set	16331
  2568  0000                     _T3CONbits	set	16294
  2569  0000                     _T3CON	set	16294
  2570  0000                     _TMR3L	set	16292
  2571  0000                     _TMR3H	set	16293
  2572  0000                     _T3CLK	set	16297
  2573  0000                     _T3GATE	set	16296
  2574  0000                     _T3GCON	set	16295
  2575  0000                     _T2CON	set	16300
  2576  0000                     _T2TMR	set	16298
  2577  0000                     _T2PR	set	16299
  2578  0000                     _T2RST	set	16303
  2579  0000                     _T2HLT	set	16301
  2580  0000                     _T2CLKCON	set	16302
  2581  0000                     _PWM8DCL	set	16224
  2582  0000                     _PWM8DCH	set	16225
  2583  0000                     _PWM8CON	set	16226
  2584  0000                     _LATEbits	set	16318
  2585  0000                     _T5CONbits	set	16282
  2586  0000                     _T5CON	set	16282
  2587  0000                     _TMR5L	set	16280
  2588  0000                     _TMR5H	set	16281
  2589  0000                     _T5CLK	set	16285
  2590  0000                     _T5GATE	set	16284
  2591  0000                     _T5GCON	set	16283
  2592  0000                     _T6CON	set	16276
  2593  0000                     _T6TMR	set	16274
  2594  0000                     _T6PR	set	16275
  2595  0000                     _T6RST	set	16279
  2596  0000                     _T6HLT	set	16277
  2597  0000                     _T6CLKCON	set	16278
  2598  0000                     _TRISD	set	16325
  2599  0000                     _TRISC	set	16324
  2600  0000                     _TRISB	set	16323
  2601  0000                     _TRISA	set	16322
  2602  0000                     _TRISF	set	16327
  2603  0000                     _TRISE	set	16326
  2604  0000                     _LATC	set	16316
  2605  0000                     _LATB	set	16315
  2606  0000                     _LATF	set	16319
  2607  0000                     _LATA	set	16314
  2608  0000                     _LATD	set	16317
  2609  0000                     _LATE	set	16318
  2610  0000                     _IVTLOCKbits	set	16340
  2611  0000                     _IVTLOCK	set	16340
  2612  0000                     _INTCON0bits	set	16338
  2613  0000                     _GIE	set	130711
  2614  00F9F7                     STR_95:
  2615                           
  2616                           ; BSR set to: 57
  2617  00F9F7  20                 	db	32
  2618  00F9F8  25                 	db	37
  2619  00F9F9  63                 	db	99	;'c'
  2620  00F9FA  20                 	db	32
  2621  00F9FB  2C                 	db	44
  2622  00F9FC  25                 	db	37
  2623  00F9FD  6C                 	db	108	;'l'
  2624  00F9FE  75                 	db	117	;'u'
  2625  00F9FF  2C                 	db	44
  2626  00FA00  25                 	db	37
  2627  00FA01  34                 	db	52	;'4'
  2628  00FA02  2E                 	db	46
  2629  00FA03  34                 	db	52	;'4'
  2630  00FA04  66                 	db	102	;'f'
  2631  00FA05  2C                 	db	44
  2632  00FA06  25                 	db	37
  2633  00FA07  34                 	db	52	;'4'
  2634  00FA08  2E                 	db	46
  2635  00FA09  34                 	db	52	;'4'
  2636  00FA0A  66                 	db	102	;'f'
  2637  00FA0B  2C                 	db	44
  2638  00FA0C  25                 	db	37
  2639  00FA0D  34                 	db	52	;'4'
  2640  00FA0E  2E                 	db	46
  2641  00FA0F  34                 	db	52	;'4'
  2642  00FA10  66                 	db	102	;'f'
  2643  00FA11  2C                 	db	44
  2644  00FA12  25                 	db	37
  2645  00FA13  34                 	db	52	;'4'
  2646  00FA14  2E                 	db	46
  2647  00FA15  34                 	db	52	;'4'
  2648  00FA16  66                 	db	102	;'f'
  2649  00FA17  2C                 	db	44
  2650  00FA18  25                 	db	37
  2651  00FA19  34                 	db	52	;'4'
  2652  00FA1A  2E                 	db	46
  2653  00FA1B  34                 	db	52	;'4'
  2654  00FA1C  66                 	db	102	;'f'
  2655  00FA1D  2C                 	db	44
  2656  00FA1E  25                 	db	37
  2657  00FA1F  34                 	db	52	;'4'
  2658  00FA20  2E                 	db	46
  2659  00FA21  33                 	db	51	;'3'
  2660  00FA22  66                 	db	102	;'f'
  2661  00FA23  2C                 	db	44
  2662  00FA24  25                 	db	37
  2663  00FA25  34                 	db	52	;'4'
  2664  00FA26  2E                 	db	46
  2665  00FA27  33                 	db	51	;'3'
  2666  00FA28  66                 	db	102	;'f'
  2667  00FA29  2C                 	db	44
  2668  00FA2A  25                 	db	37
  2669  00FA2B  34                 	db	52	;'4'
  2670  00FA2C  2E                 	db	46
  2671  00FA2D  33                 	db	51	;'3'
  2672  00FA2E  66                 	db	102	;'f'
  2673  00FA2F  2C                 	db	44
  2674  00FA30  25                 	db	37
  2675  00FA31  34                 	db	52	;'4'
  2676  00FA32  2E                 	db	46
  2677  00FA33  33                 	db	51	;'3'
  2678  00FA34  66                 	db	102	;'f'
  2679  00FA35  2C                 	db	44
  2680  00FA36  25                 	db	37
  2681  00FA37  34                 	db	52	;'4'
  2682  00FA38  2E                 	db	46
  2683  00FA39  33                 	db	51	;'3'
  2684  00FA3A  66                 	db	102	;'f'
  2685  00FA3B  2C                 	db	44
  2686  00FA3C  25                 	db	37
  2687  00FA3D  34                 	db	52	;'4'
  2688  00FA3E  2E                 	db	46
  2689  00FA3F  33                 	db	51	;'3'
  2690  00FA40  66                 	db	102	;'f'
  2691  00FA41  2C                 	db	44
  2692  00FA42  25                 	db	37
  2693  00FA43  64                 	db	100	;'d'
  2694  00FA44  2C                 	db	44
  2695  00FA45  25                 	db	37
  2696  00FA46  64                 	db	100	;'d'
  2697  00FA47  2C                 	db	44
  2698  00FA48  25                 	db	37
  2699  00FA49  32                 	db	50	;'2'
  2700  00FA4A  2E                 	db	46
  2701  00FA4B  36                 	db	54	;'6'
  2702  00FA4C  66                 	db	102	;'f'
  2703  00FA4D  2C                 	db	44
  2704  00FA4E  25                 	db	37
  2705  00FA4F  34                 	db	52	;'4'
  2706  00FA50  2E                 	db	46
  2707  00FA51  33                 	db	51	;'3'
  2708  00FA52  66                 	db	102	;'f'
  2709  00FA53  2C                 	db	44
  2710  00FA54  25                 	db	37
  2711  00FA55  64                 	db	100	;'d'
  2712  00FA56  2C                 	db	44
  2713  00FA57  25                 	db	37
  2714  00FA58  64                 	db	100	;'d'
  2715  00FA59  2C                 	db	44
  2716  00FA5A  25                 	db	37
  2717  00FA5B  6C                 	db	108	;'l'
  2718  00FA5C  75                 	db	117	;'u'
  2719  00FA5D  2C                 	db	44
  2720  00FA5E  25                 	db	37
  2721  00FA5F  6C                 	db	108	;'l'
  2722  00FA60  75                 	db	117	;'u'
  2723  00FA61  2C                 	db	44
  2724  00FA62  25                 	db	37
  2725  00FA63  34                 	db	52	;'4'
  2726  00FA64  2E                 	db	46
  2727  00FA65  33                 	db	51	;'3'
  2728  00FA66  66                 	db	102	;'f'
  2729  00FA67  2C                 	db	44
  2730  00FA68  25                 	db	37
  2731  00FA69  34                 	db	52	;'4'
  2732  00FA6A  2E                 	db	46
  2733  00FA6B  33                 	db	51	;'3'
  2734  00FA6C  66                 	db	102	;'f'
  2735  00FA6D  2C                 	db	44
  2736  00FA6E  25                 	db	37
  2737  00FA6F  34                 	db	52	;'4'
  2738  00FA70  2E                 	db	46
  2739  00FA71  33                 	db	51	;'3'
  2740  00FA72  66                 	db	102	;'f'
  2741  00FA73  0D                 	db	13
  2742  00FA74  0A                 	db	10
  2743  00FA75  00                 	db	0
  2744  00FA76                     STR_133:
  2745                           
  2746                           ; BSR set to: 57
  2747  00FA76  4A                 	db	74	;'J'
  2748  00FA77  61                 	db	97	;'a'
  2749  00FA78  6E                 	db	110	;'n'
  2750  00FA79  46                 	db	70	;'F'
  2751  00FA7A  65                 	db	101	;'e'
  2752  00FA7B  62                 	db	98	;'b'
  2753  00FA7C  4D                 	db	77	;'M'
  2754  00FA7D  61                 	db	97	;'a'
  2755  00FA7E  72                 	db	114	;'r'
  2756  00FA7F  41                 	db	65	;'A'
  2757  00FA80  70                 	db	112	;'p'
  2758  00FA81  72                 	db	114	;'r'
  2759  00FA82  4D                 	db	77	;'M'
  2760  00FA83  61                 	db	97	;'a'
  2761  00FA84  79                 	db	121	;'y'
  2762  00FA85  4A                 	db	74	;'J'
  2763  00FA86  75                 	db	117	;'u'
  2764  00FA87  6E                 	db	110	;'n'
  2765  00FA88  4A                 	db	74	;'J'
  2766  00FA89  75                 	db	117	;'u'
  2767  00FA8A  6C                 	db	108	;'l'
  2768  00FA8B  41                 	db	65	;'A'
  2769  00FA8C  75                 	db	117	;'u'
  2770  00FA8D  67                 	db	103	;'g'
  2771  00FA8E  53                 	db	83	;'S'
  2772  00FA8F  65                 	db	101	;'e'
  2773  00FA90  70                 	db	112	;'p'
  2774  00FA91  4F                 	db	79	;'O'
  2775  00FA92  63                 	db	99	;'c'
  2776  00FA93  74                 	db	116	;'t'
  2777  00FA94  4E                 	db	78	;'N'
  2778  00FA95  6F                 	db	111	;'o'
  2779  00FA96  76                 	db	118	;'v'
  2780  00FA97  44                 	db	68	;'D'
  2781  00FA98  65                 	db	101	;'e'
  2782  00FA99  63                 	db	99	;'c'
  2783  00FA9A  00                 	db	0
  2784  00FA9B                     STR_50:
  2785                           
  2786                           ; BSR set to: 57
  2787  00FA9B  53                 	db	83	;'S'
  2788  00FA9C  25                 	db	37
  2789  00FA9D  63                 	db	99	;'c'
  2790  00FA9E  43                 	db	67	;'C'
  2791  00FA9F  20                 	db	32
  2792  00FAA0  25                 	db	37
  2793  00FAA1  64                 	db	100	;'d'
  2794  00FAA2  20                 	db	32
  2795  00FAA3  52                 	db	82	;'R'
  2796  00FAA4  55                 	db	85	;'U'
  2797  00FAA5  4E                 	db	78	;'N'
  2798  00FAA6  20                 	db	32
  2799  00FAA7  25                 	db	37
  2800  00FAA8  64                 	db	100	;'d'
  2801  00FAA9  20                 	db	32
  2802  00FAAA  56                 	db	86	;'V'
  2803  00FAAB  25                 	db	37
  2804  00FAAC  32                 	db	50	;'2'
  2805  00FAAD  2E                 	db	46
  2806  00FAAE  32                 	db	50	;'2'
  2807  00FAAF  66                 	db	102	;'f'
  2808  00FAB0  20                 	db	32
  2809  00FAB1  20                 	db	32
  2810  00FAB2  20                 	db	32
  2811  00FAB3  20                 	db	32
  2812  00FAB4  20                 	db	32
  2813  00FAB5  20                 	db	32
  2814  00FAB6  20                 	db	32
  2815  00FAB7  20                 	db	32
  2816  00FAB8  00                 	db	0
  2817  00FAB9                     STR_70:
  2818                           
  2819                           ; BSR set to: 57
  2820  00FAB9  25                 	db	37
  2821  00FABA  64                 	db	100	;'d'
  2822  00FABB  20                 	db	32
  2823  00FABC  25                 	db	37
  2824  00FABD  64                 	db	100	;'d'
  2825  00FABE  20                 	db	32
  2826  00FABF  25                 	db	37
  2827  00FAC0  64                 	db	100	;'d'
  2828  00FAC1  20                 	db	32
  2829  00FAC2  25                 	db	37
  2830  00FAC3  64                 	db	100	;'d'
  2831  00FAC4  20                 	db	32
  2832  00FAC5  20                 	db	32
  2833  00FAC6  20                 	db	32
  2834  00FAC7  20                 	db	32
  2835  00FAC8  20                 	db	32
  2836  00FAC9  20                 	db	32
  2837  00FACA  20                 	db	32
  2838  00FACB  20                 	db	32
  2839  00FACC  20                 	db	32
  2840  00FACD  20                 	db	32
  2841  00FACE  20                 	db	32
  2842  00FACF  20                 	db	32
  2843  00FAD0  20                 	db	32
  2844  00FAD1  20                 	db	32
  2845  00FAD2  20                 	db	32
  2846  00FAD3  20                 	db	32
  2847  00FAD4  00                 	db	0
  2848  00FAD5                     STR_26:
  2849                           
  2850                           ; BSR set to: 57
  2851  00FAD5  52                 	db	82	;'R'
  2852  00FAD6  31                 	db	49	;'1'
  2853  00FAD7  20                 	db	32
  2854  00FAD8  25                 	db	37
  2855  00FAD9  32                 	db	50	;'2'
  2856  00FADA  2E                 	db	46
  2857  00FADB  33                 	db	51	;'3'
  2858  00FADC  66                 	db	102	;'f'
  2859  00FADD  20                 	db	32
  2860  00FADE  25                 	db	37
  2861  00FADF  33                 	db	51	;'3'
  2862  00FAE0  2E                 	db	46
  2863  00FAE1  34                 	db	52	;'4'
  2864  00FAE2  66                 	db	102	;'f'
  2865  00FAE3  20                 	db	32
  2866  00FAE4  20                 	db	32
  2867  00FAE5  20                 	db	32
  2868  00FAE6  20                 	db	32
  2869  00FAE7  20                 	db	32
  2870  00FAE8  20                 	db	32
  2871  00FAE9  20                 	db	32
  2872  00FAEA  20                 	db	32
  2873  00FAEB  20                 	db	32
  2874  00FAEC  20                 	db	32
  2875  00FAED  20                 	db	32
  2876  00FAEE  20                 	db	32
  2877  00FAEF  00                 	db	0
  2878  00FAF0                     STR_27:
  2879                           
  2880                           ; BSR set to: 57
  2881  00FAF0  52                 	db	82	;'R'
  2882  00FAF1  32                 	db	50	;'2'
  2883  00FAF2  20                 	db	32
  2884  00FAF3  25                 	db	37
  2885  00FAF4  32                 	db	50	;'2'
  2886  00FAF5  2E                 	db	46
  2887  00FAF6  33                 	db	51	;'3'
  2888  00FAF7  66                 	db	102	;'f'
  2889  00FAF8  20                 	db	32
  2890  00FAF9  25                 	db	37
  2891  00FAFA  33                 	db	51	;'3'
  2892  00FAFB  2E                 	db	46
  2893  00FAFC  34                 	db	52	;'4'
  2894  00FAFD  66                 	db	102	;'f'
  2895  00FAFE  20                 	db	32
  2896  00FAFF  20                 	db	32
  2897  00FB00  20                 	db	32
  2898  00FB01  20                 	db	32
  2899  00FB02  20                 	db	32
  2900  00FB03  20                 	db	32
  2901  00FB04  20                 	db	32
  2902  00FB05  20                 	db	32
  2903  00FB06  20                 	db	32
  2904  00FB07  20                 	db	32
  2905  00FB08  20                 	db	32
  2906  00FB09  20                 	db	32
  2907  00FB0A  00                 	db	0
  2908  00FB0B                     
  2909                           ; BSR set to: 57
  2910  00FB0B  20                 	db	32
  2911  00FB0C  4D                 	db	77	;'M'
  2912  00FB0D  65                 	db	101	;'e'
  2913  00FB0E  73                 	db	115	;'s'
  2914  00FB0F  67                 	db	103	;'g'
  2915  00FB10  20                 	db	32
  2916  00FB11  25                 	db	37
  2917  00FB12  64                 	db	100	;'d'
  2918  00FB13  20                 	db	32
  2919  00FB14  53                 	db	83	;'S'
  2920  00FB15  74                 	db	116	;'t'
  2921  00FB16  61                 	db	97	;'a'
  2922  00FB17  63                 	db	99	;'c'
  2923  00FB18  6B                 	db	107	;'k'
  2924  00FB19  20                 	db	32
  2925  00FB1A  25                 	db	37
  2926  00FB1B  64                 	db	100	;'d'
  2927  00FB1C  20                 	db	32
  2928  00FB1D  20                 	db	32
  2929  00FB1E  20                 	db	32
  2930  00FB1F  20                 	db	32
  2931  00FB20  20                 	db	32
  2932  00FB21  20                 	db	32
  2933  00FB22  20                 	db	32
  2934  00FB23  20                 	db	32
  2935  00FB24  00                 	db	0
  2936  00FB25                     STR_17:
  2937                           
  2938                           ; BSR set to: 57
  2939  00FB25  53                 	db	83	;'S'
  2940  00FB26  20                 	db	32
  2941  00FB27  53                 	db	83	;'S'
  2942  00FB28  25                 	db	37
  2943  00FB29  63                 	db	99	;'c'
  2944  00FB2A  43                 	db	67	;'C'
  2945  00FB2B  20                 	db	32
  2946  00FB2C  25                 	db	37
  2947  00FB2D  64                 	db	100	;'d'
  2948  00FB2E  20                 	db	32
  2949  00FB2F  25                 	db	37
  2950  00FB30  32                 	db	50	;'2'
  2951  00FB31  2E                 	db	46
  2952  00FB32  34                 	db	52	;'4'
  2953  00FB33  66                 	db	102	;'f'
  2954  00FB34  20                 	db	32
  2955  00FB35  20                 	db	32
  2956  00FB36  20                 	db	32
  2957  00FB37  20                 	db	32
  2958  00FB38  20                 	db	32
  2959  00FB39  20                 	db	32
  2960  00FB3A  20                 	db	32
  2961  00FB3B  20                 	db	32
  2962  00FB3C  20                 	db	32
  2963  00FB3D  20                 	db	32
  2964  00FB3E  00                 	db	0
  2965  00FB3F                     STR_51:
  2966                           
  2967                           ; BSR set to: 57
  2968  00FB3F  45                 	db	69	;'E'
  2969  00FB40  53                 	db	83	;'S'
  2970  00FB41  52                 	db	82	;'R'
  2971  00FB42  20                 	db	32
  2972  00FB43  20                 	db	32
  2973  00FB44  25                 	db	37
  2974  00FB45  32                 	db	50	;'2'
  2975  00FB46  2E                 	db	46
  2976  00FB47  36                 	db	54	;'6'
  2977  00FB48  66                 	db	102	;'f'
  2978  00FB49  20                 	db	32
  2979  00FB4A  20                 	db	32
  2980  00FB4B  20                 	db	32
  2981  00FB4C  20                 	db	32
  2982  00FB4D  20                 	db	32
  2983  00FB4E  20                 	db	32
  2984  00FB4F  20                 	db	32
  2985  00FB50  20                 	db	32
  2986  00FB51  20                 	db	32
  2987  00FB52  20                 	db	32
  2988  00FB53  20                 	db	32
  2989  00FB54  20                 	db	32
  2990  00FB55  20                 	db	32
  2991  00FB56  00                 	db	0
  2992  00FB57                     STR_48:
  2993                           
  2994                           ; BSR set to: 57
  2995  00FB57  42                 	db	66	;'B'
  2996  00FB58  41                 	db	65	;'A'
  2997  00FB59  54                 	db	84	;'T'
  2998  00FB5A  54                 	db	84	;'T'
  2999  00FB5B  20                 	db	32
  3000  00FB5C  50                 	db	80	;'P'
  3001  00FB5D  57                 	db	87	;'W'
  3002  00FB5E  52                 	db	82	;'R'
  3003  00FB5F  20                 	db	32
  3004  00FB60  25                 	db	37
  3005  00FB61  33                 	db	51	;'3'
  3006  00FB62  2E                 	db	46
  3007  00FB63  32                 	db	50	;'2'
  3008  00FB64  66                 	db	102	;'f'
  3009  00FB65  20                 	db	32
  3010  00FB66  20                 	db	32
  3011  00FB67  20                 	db	32
  3012  00FB68  20                 	db	32
  3013  00FB69  20                 	db	32
  3014  00FB6A  20                 	db	32
  3015  00FB6B  20                 	db	32
  3016  00FB6C  20                 	db	32
  3017  00FB6D  20                 	db	32
  3018  00FB6E  00                 	db	0
  3019  00FB6F                     STR_52:
  3020                           
  3021                           ; BSR set to: 57
  3022  00FB6F  52                 	db	82	;'R'
  3023  00FB70  31                 	db	49	;'1'
  3024  00FB71  20                 	db	32
  3025  00FB72  25                 	db	37
  3026  00FB73  32                 	db	50	;'2'
  3027  00FB74  2E                 	db	46
  3028  00FB75  33                 	db	51	;'3'
  3029  00FB76  66                 	db	102	;'f'
  3030  00FB77  20                 	db	32
  3031  00FB78  25                 	db	37
  3032  00FB79  33                 	db	51	;'3'
  3033  00FB7A  2E                 	db	46
  3034  00FB7B  34                 	db	52	;'4'
  3035  00FB7C  66                 	db	102	;'f'
  3036  00FB7D  20                 	db	32
  3037  00FB7E  20                 	db	32
  3038  00FB7F  20                 	db	32
  3039  00FB80  20                 	db	32
  3040  00FB81  20                 	db	32
  3041  00FB82  20                 	db	32
  3042  00FB83  20                 	db	32
  3043  00FB84  20                 	db	32
  3044  00FB85  20                 	db	32
  3045  00FB86  00                 	db	0
  3046  00FB87                     STR_53:
  3047                           
  3048                           ; BSR set to: 57
  3049  00FB87  52                 	db	82	;'R'
  3050  00FB88  32                 	db	50	;'2'
  3051  00FB89  20                 	db	32
  3052  00FB8A  25                 	db	37
  3053  00FB8B  32                 	db	50	;'2'
  3054  00FB8C  2E                 	db	46
  3055  00FB8D  33                 	db	51	;'3'
  3056  00FB8E  66                 	db	102	;'f'
  3057  00FB8F  20                 	db	32
  3058  00FB90  25                 	db	37
  3059  00FB91  33                 	db	51	;'3'
  3060  00FB92  2E                 	db	46
  3061  00FB93  34                 	db	52	;'4'
  3062  00FB94  66                 	db	102	;'f'
  3063  00FB95  20                 	db	32
  3064  00FB96  20                 	db	32
  3065  00FB97  20                 	db	32
  3066  00FB98  20                 	db	32
  3067  00FB99  20                 	db	32
  3068  00FB9A  20                 	db	32
  3069  00FB9B  20                 	db	32
  3070  00FB9C  20                 	db	32
  3071  00FB9D  20                 	db	32
  3072  00FB9E  00                 	db	0
  3073  00FB9F                     STR_49:
  3074                           
  3075                           ; BSR set to: 57
  3076  00FB9F  42                 	db	66	;'B'
  3077  00FBA0  41                 	db	65	;'A'
  3078  00FBA1  48                 	db	72	;'H'
  3079  00FBA2  20                 	db	32
  3080  00FBA3  25                 	db	37
  3081  00FBA4  33                 	db	51	;'3'
  3082  00FBA5  2E                 	db	46
  3083  00FBA6  32                 	db	50	;'2'
  3084  00FBA7  66                 	db	102	;'f'
  3085  00FBA8  20                 	db	32
  3086  00FBA9  50                 	db	80	;'P'
  3087  00FBAA  25                 	db	37
  3088  00FBAB  33                 	db	51	;'3'
  3089  00FBAC  2E                 	db	46
  3090  00FBAD  32                 	db	50	;'2'
  3091  00FBAE  66                 	db	102	;'f'
  3092  00FBAF  20                 	db	32
  3093  00FBB0  20                 	db	32
  3094  00FBB1  20                 	db	32
  3095  00FBB2  20                 	db	32
  3096  00FBB3  20                 	db	32
  3097  00FBB4  20                 	db	32
  3098  00FBB5  20                 	db	32
  3099  00FBB6  00                 	db	0
  3100  00FBB7                     STR_20:
  3101                           
  3102                           ; BSR set to: 57
  3103  00FBB7  20                 	db	32
  3104  00FBB8  20                 	db	32
  3105  00FBB9  20                 	db	32
  3106  00FBBA  20                 	db	32
  3107  00FBBB  20                 	db	32
  3108  00FBBC  20                 	db	32
  3109  00FBBD  20                 	db	32
  3110  00FBBE  20                 	db	32
  3111  00FBBF  20                 	db	32
  3112  00FBC0  20                 	db	32
  3113  00FBC1  20                 	db	32
  3114  00FBC2  20                 	db	32
  3115  00FBC3  20                 	db	32
  3116  00FBC4  20                 	db	32
  3117  00FBC5  20                 	db	32
  3118  00FBC6  20                 	db	32
  3119  00FBC7  20                 	db	32
  3120  00FBC8  20                 	db	32
  3121  00FBC9  20                 	db	32
  3122  00FBCA  20                 	db	32
  3123  00FBCB  20                 	db	32
  3124  00FBCC  20                 	db	32
  3125  00FBCD  00                 	db	0
  3126  00FBCE                     STR_25:
  3127                           
  3128                           ; BSR set to: 57
  3129  00FBCE  45                 	db	69	;'E'
  3130  00FBCF  53                 	db	83	;'S'
  3131  00FBD0  52                 	db	82	;'R'
  3132  00FBD1  20                 	db	32
  3133  00FBD2  20                 	db	32
  3134  00FBD3  25                 	db	37
  3135  00FBD4  32                 	db	50	;'2'
  3136  00FBD5  2E                 	db	46
  3137  00FBD6  36                 	db	54	;'6'
  3138  00FBD7  66                 	db	102	;'f'
  3139  00FBD8  20                 	db	32
  3140  00FBD9  20                 	db	32
  3141  00FBDA  20                 	db	32
  3142  00FBDB  20                 	db	32
  3143  00FBDC  20                 	db	32
  3144  00FBDD  20                 	db	32
  3145  00FBDE  20                 	db	32
  3146  00FBDF  20                 	db	32
  3147  00FBE0  20                 	db	32
  3148  00FBE1  20                 	db	32
  3149  00FBE2  20                 	db	32
  3150  00FBE3  20                 	db	32
  3151  00FBE4  00                 	db	0
  3152  00FBE5                     STR_18:
  3153                           
  3154                           ; BSR set to: 57
  3155  00FBE5  53                 	db	83	;'S'
  3156  00FBE6  74                 	db	116	;'t'
  3157  00FBE7  61                 	db	97	;'a'
  3158  00FBE8  74                 	db	116	;'t'
  3159  00FBE9  69                 	db	105	;'i'
  3160  00FBEA  63                 	db	99	;'c'
  3161  00FBEB  20                 	db	32
  3162  00FBEC  53                 	db	83	;'S'
  3163  00FBED  4F                 	db	79	;'O'
  3164  00FBEE  43                 	db	67	;'C'
  3165  00FBEF  20                 	db	32
  3166  00FBF0  25                 	db	37
  3167  00FBF1  64                 	db	100	;'d'
  3168  00FBF2  20                 	db	32
  3169  00FBF3  20                 	db	32
  3170  00FBF4  20                 	db	32
  3171  00FBF5  20                 	db	32
  3172  00FBF6  20                 	db	32
  3173  00FBF7  20                 	db	32
  3174  00FBF8  20                 	db	32
  3175  00FBF9  20                 	db	32
  3176  00FBFA  20                 	db	32
  3177  00FBFB  00                 	db	0
  3178  00FBFC                     STR_45:
  3179                           
  3180                           ; BSR set to: 57
  3181  00FBFC  42                 	db	66	;'B'
  3182  00FBFD  41                 	db	65	;'A'
  3183  00FBFE  54                 	db	84	;'T'
  3184  00FBFF  20                 	db	32
  3185  00FC00  49                 	db	73	;'I'
  3186  00FC01  57                 	db	87	;'W'
  3187  00FC02  48                 	db	72	;'H'
  3188  00FC03  20                 	db	32
  3189  00FC04  25                 	db	37
  3190  00FC05  34                 	db	52	;'4'
  3191  00FC06  2E                 	db	46
  3192  00FC07  31                 	db	49	;'1'
  3193  00FC08  66                 	db	102	;'f'
  3194  00FC09  20                 	db	32
  3195  00FC0A  20                 	db	32
  3196  00FC0B  20                 	db	32
  3197  00FC0C  20                 	db	32
  3198  00FC0D  20                 	db	32
  3199  00FC0E  20                 	db	32
  3200  00FC0F  20                 	db	32
  3201  00FC10  20                 	db	32
  3202  00FC11  20                 	db	32
  3203  00FC12  00                 	db	0
  3204  00FC13                     STR_46:
  3205                           
  3206                           ; BSR set to: 57
  3207  00FC13  42                 	db	66	;'B'
  3208  00FC14  41                 	db	65	;'A'
  3209  00FC15  54                 	db	84	;'T'
  3210  00FC16  20                 	db	32
  3211  00FC17  4F                 	db	79	;'O'
  3212  00FC18  57                 	db	87	;'W'
  3213  00FC19  48                 	db	72	;'H'
  3214  00FC1A  20                 	db	32
  3215  00FC1B  25                 	db	37
  3216  00FC1C  34                 	db	52	;'4'
  3217  00FC1D  2E                 	db	46
  3218  00FC1E  31                 	db	49	;'1'
  3219  00FC1F  66                 	db	102	;'f'
  3220  00FC20  20                 	db	32
  3221  00FC21  20                 	db	32
  3222  00FC22  20                 	db	32
  3223  00FC23  20                 	db	32
  3224  00FC24  20                 	db	32
  3225  00FC25  20                 	db	32
  3226  00FC26  20                 	db	32
  3227  00FC27  20                 	db	32
  3228  00FC28  20                 	db	32
  3229  00FC29  00                 	db	0
  3230  00FC2A                     STR_47:
  3231                           
  3232                           ; BSR set to: 57
  3233  00FC2A  42                 	db	66	;'B'
  3234  00FC2B  41                 	db	65	;'A'
  3235  00FC2C  54                 	db	84	;'T'
  3236  00FC2D  20                 	db	32
  3237  00FC2E  54                 	db	84	;'T'
  3238  00FC2F  57                 	db	87	;'W'
  3239  00FC30  48                 	db	72	;'H'
  3240  00FC31  20                 	db	32
  3241  00FC32  25                 	db	37
  3242  00FC33  34                 	db	52	;'4'
  3243  00FC34  2E                 	db	46
  3244  00FC35  31                 	db	49	;'1'
  3245  00FC36  66                 	db	102	;'f'
  3246  00FC37  20                 	db	32
  3247  00FC38  20                 	db	32
  3248  00FC39  20                 	db	32
  3249  00FC3A  20                 	db	32
  3250  00FC3B  20                 	db	32
  3251  00FC3C  20                 	db	32
  3252  00FC3D  20                 	db	32
  3253  00FC3E  20                 	db	32
  3254  00FC3F  20                 	db	32
  3255  00FC40  00                 	db	0
  3256  00FC41                     STR_41:
  3257                           
  3258                           ; BSR set to: 57
  3259  00FC41  49                 	db	73	;'I'
  3260  00FC42  4E                 	db	78	;'N'
  3261  00FC43  56                 	db	86	;'V'
  3262  00FC44  20                 	db	32
  3263  00FC45  20                 	db	32
  3264  00FC46  57                 	db	87	;'W'
  3265  00FC47  48                 	db	72	;'H'
  3266  00FC48  20                 	db	32
  3267  00FC49  25                 	db	37
  3268  00FC4A  33                 	db	51	;'3'
  3269  00FC4B  2E                 	db	46
  3270  00FC4C  32                 	db	50	;'2'
  3271  00FC4D  66                 	db	102	;'f'
  3272  00FC4E  20                 	db	32
  3273  00FC4F  20                 	db	32
  3274  00FC50  20                 	db	32
  3275  00FC51  20                 	db	32
  3276  00FC52  20                 	db	32
  3277  00FC53  20                 	db	32
  3278  00FC54  20                 	db	32
  3279  00FC55  20                 	db	32
  3280  00FC56  20                 	db	32
  3281  00FC57  00                 	db	0
  3282  00FC58                     STR_40:
  3283                           
  3284                           ; BSR set to: 57
  3285  00FC58  4C                 	db	76	;'L'
  3286  00FC59  4F                 	db	79	;'O'
  3287  00FC5A  41                 	db	65	;'A'
  3288  00FC5B  44                 	db	68	;'D'
  3289  00FC5C  20                 	db	32
  3290  00FC5D  57                 	db	87	;'W'
  3291  00FC5E  48                 	db	72	;'H'
  3292  00FC5F  20                 	db	32
  3293  00FC60  25                 	db	37
  3294  00FC61  33                 	db	51	;'3'
  3295  00FC62  2E                 	db	46
  3296  00FC63  32                 	db	50	;'2'
  3297  00FC64  66                 	db	102	;'f'
  3298  00FC65  20                 	db	32
  3299  00FC66  20                 	db	32
  3300  00FC67  20                 	db	32
  3301  00FC68  20                 	db	32
  3302  00FC69  20                 	db	32
  3303  00FC6A  20                 	db	32
  3304  00FC6B  20                 	db	32
  3305  00FC6C  20                 	db	32
  3306  00FC6D  20                 	db	32
  3307  00FC6E  00                 	db	0
  3308  00FC6F                     STR_39:
  3309                           
  3310                           ; BSR set to: 57
  3311  00FC6F  50                 	db	80	;'P'
  3312  00FC70  56                 	db	86	;'V'
  3313  00FC71  20                 	db	32
  3314  00FC72  25                 	db	37
  3315  00FC73  63                 	db	99	;'c'
  3316  00FC74  20                 	db	32
  3317  00FC75  57                 	db	87	;'W'
  3318  00FC76  48                 	db	72	;'H'
  3319  00FC77  20                 	db	32
  3320  00FC78  25                 	db	37
  3321  00FC79  33                 	db	51	;'3'
  3322  00FC7A  2E                 	db	46
  3323  00FC7B  32                 	db	50	;'2'
  3324  00FC7C  66                 	db	102	;'f'
  3325  00FC7D  20                 	db	32
  3326  00FC7E  20                 	db	32
  3327  00FC7F  20                 	db	32
  3328  00FC80  20                 	db	32
  3329  00FC81  20                 	db	32
  3330  00FC82  20                 	db	32
  3331  00FC83  20                 	db	32
  3332  00FC84  20                 	db	32
  3333  00FC85  00                 	db	0
  3334  00FC86                     STR_38:
  3335                           
  3336                           ; BSR set to: 57
  3337  00FC86  49                 	db	73	;'I'
  3338  00FC87  4E                 	db	78	;'N'
  3339  00FC88  56                 	db	86	;'V'
  3340  00FC89  20                 	db	32
  3341  00FC8A  20                 	db	32
  3342  00FC8B  50                 	db	80	;'P'
  3343  00FC8C  57                 	db	87	;'W'
  3344  00FC8D  52                 	db	82	;'R'
  3345  00FC8E  20                 	db	32
  3346  00FC8F  25                 	db	37
  3347  00FC90  33                 	db	51	;'3'
  3348  00FC91  2E                 	db	46
  3349  00FC92  32                 	db	50	;'2'
  3350  00FC93  66                 	db	102	;'f'
  3351  00FC94  20                 	db	32
  3352  00FC95  20                 	db	32
  3353  00FC96  20                 	db	32
  3354  00FC97  20                 	db	32
  3355  00FC98  20                 	db	32
  3356  00FC99  20                 	db	32
  3357  00FC9A  20                 	db	32
  3358  00FC9B  20                 	db	32
  3359  00FC9C  00                 	db	0
  3360  00FC9D                     STR_37:
  3361                           
  3362                           ; BSR set to: 57
  3363  00FC9D  4C                 	db	76	;'L'
  3364  00FC9E  4F                 	db	79	;'O'
  3365  00FC9F  41                 	db	65	;'A'
  3366  00FCA0  44                 	db	68	;'D'
  3367  00FCA1  20                 	db	32
  3368  00FCA2  50                 	db	80	;'P'
  3369  00FCA3  57                 	db	87	;'W'
  3370  00FCA4  52                 	db	82	;'R'
  3371  00FCA5  20                 	db	32
  3372  00FCA6  25                 	db	37
  3373  00FCA7  33                 	db	51	;'3'
  3374  00FCA8  2E                 	db	46
  3375  00FCA9  32                 	db	50	;'2'
  3376  00FCAA  66                 	db	102	;'f'
  3377  00FCAB  20                 	db	32
  3378  00FCAC  20                 	db	32
  3379  00FCAD  20                 	db	32
  3380  00FCAE  20                 	db	32
  3381  00FCAF  20                 	db	32
  3382  00FCB0  20                 	db	32
  3383  00FCB1  20                 	db	32
  3384  00FCB2  20                 	db	32
  3385  00FCB3  00                 	db	0
  3386  00FCB4                     STR_36:
  3387                           
  3388                           ; BSR set to: 57
  3389  00FCB4  50                 	db	80	;'P'
  3390  00FCB5  56                 	db	86	;'V'
  3391  00FCB6  20                 	db	32
  3392  00FCB7  25                 	db	37
  3393  00FCB8  63                 	db	99	;'c'
  3394  00FCB9  20                 	db	32
  3395  00FCBA  50                 	db	80	;'P'
  3396  00FCBB  57                 	db	87	;'W'
  3397  00FCBC  52                 	db	82	;'R'
  3398  00FCBD  20                 	db	32
  3399  00FCBE  25                 	db	37
  3400  00FCBF  33                 	db	51	;'3'
  3401  00FCC0  2E                 	db	46
  3402  00FCC1  32                 	db	50	;'2'
  3403  00FCC2  66                 	db	102	;'f'
  3404  00FCC3  20                 	db	32
  3405  00FCC4  20                 	db	32
  3406  00FCC5  20                 	db	32
  3407  00FCC6  20                 	db	32
  3408  00FCC7  20                 	db	32
  3409  00FCC8  20                 	db	32
  3410  00FCC9  20                 	db	32
  3411  00FCCA  00                 	db	0
  3412  00FCCB                     STR_19:
  3413                           
  3414                           ; BSR set to: 57
  3415  00FCCB  42                 	db	66	;'B'
  3416  00FCCC  61                 	db	97	;'a'
  3417  00FCCD  74                 	db	116	;'t'
  3418  00FCCE  74                 	db	116	;'t'
  3419  00FCCF  65                 	db	101	;'e'
  3420  00FCD0  72                 	db	114	;'r'
  3421  00FCD1  79                 	db	121	;'y'
  3422  00FCD2  20                 	db	32
  3423  00FCD3  41                 	db	65	;'A'
  3424  00FCD4  68                 	db	104	;'h'
  3425  00FCD5  20                 	db	32
  3426  00FCD6  25                 	db	37
  3427  00FCD7  33                 	db	51	;'3'
  3428  00FCD8  2E                 	db	46
  3429  00FCD9  32                 	db	50	;'2'
  3430  00FCDA  66                 	db	102	;'f'
  3431  00FCDB  20                 	db	32
  3432  00FCDC  20                 	db	32
  3433  00FCDD  20                 	db	32
  3434  00FCDE  20                 	db	32
  3435  00FCDF  20                 	db	32
  3436  00FCE0  20                 	db	32
  3437  00FCE1  00                 	db	0
  3438  00FCE2                     STR_43:
  3439                           
  3440                           ; BSR set to: 57
  3441  00FCE2  42                 	db	66	;'B'
  3442  00FCE3  56                 	db	86	;'V'
  3443  00FCE4  20                 	db	32
  3444  00FCE5  25                 	db	37
  3445  00FCE6  32                 	db	50	;'2'
  3446  00FCE7  2E                 	db	46
  3447  00FCE8  32                 	db	50	;'2'
  3448  00FCE9  66                 	db	102	;'f'
  3449  00FCEA  20                 	db	32
  3450  00FCEB  42                 	db	66	;'B'
  3451  00FCEC  41                 	db	65	;'A'
  3452  00FCED  20                 	db	32
  3453  00FCEE  25                 	db	37
  3454  00FCEF  32                 	db	50	;'2'
  3455  00FCF0  2E                 	db	46
  3456  00FCF1  32                 	db	50	;'2'
  3457  00FCF2  66                 	db	102	;'f'
  3458  00FCF3  20                 	db	32
  3459  00FCF4  20                 	db	32
  3460  00FCF5  20                 	db	32
  3461  00FCF6  20                 	db	32
  3462  00FCF7  20                 	db	32
  3463  00FCF8  00                 	db	0
  3464  00FCF9                     STR_44:
  3465                           
  3466                           ; BSR set to: 57
  3467  00FCF9  43                 	db	67	;'C'
  3468  00FCFA  56                 	db	86	;'V'
  3469  00FCFB  20                 	db	32
  3470  00FCFC  25                 	db	37
  3471  00FCFD  32                 	db	50	;'2'
  3472  00FCFE  2E                 	db	46
  3473  00FCFF  32                 	db	50	;'2'
  3474  00FD00  66                 	db	102	;'f'
  3475  00FD01  20                 	db	32
  3476  00FD02  4C                 	db	76	;'L'
  3477  00FD03  41                 	db	65	;'A'
  3478  00FD04  20                 	db	32
  3479  00FD05  25                 	db	37
  3480  00FD06  32                 	db	50	;'2'
  3481  00FD07  2E                 	db	46
  3482  00FD08  32                 	db	50	;'2'
  3483  00FD09  66                 	db	102	;'f'
  3484  00FD0A  20                 	db	32
  3485  00FD0B  20                 	db	32
  3486  00FD0C  20                 	db	32
  3487  00FD0D  20                 	db	32
  3488  00FD0E  20                 	db	32
  3489  00FD0F  00                 	db	0
  3490  00FD10                     STR_42:
  3491                           
  3492                           ; BSR set to: 57
  3493  00FD10  50                 	db	80	;'P'
  3494  00FD11  56                 	db	86	;'V'
  3495  00FD12  20                 	db	32
  3496  00FD13  25                 	db	37
  3497  00FD14  32                 	db	50	;'2'
  3498  00FD15  2E                 	db	46
  3499  00FD16  32                 	db	50	;'2'
  3500  00FD17  66                 	db	102	;'f'
  3501  00FD18  20                 	db	32
  3502  00FD19  50                 	db	80	;'P'
  3503  00FD1A  41                 	db	65	;'A'
  3504  00FD1B  20                 	db	32
  3505  00FD1C  25                 	db	37
  3506  00FD1D  32                 	db	50	;'2'
  3507  00FD1E  2E                 	db	46
  3508  00FD1F  32                 	db	50	;'2'
  3509  00FD20  66                 	db	102	;'f'
  3510  00FD21  20                 	db	32
  3511  00FD22  20                 	db	32
  3512  00FD23  20                 	db	32
  3513  00FD24  20                 	db	32
  3514  00FD25  20                 	db	32
  3515  00FD26  00                 	db	0
  3516  00FD27                     STR_132:
  3517                           
  3518                           ; BSR set to: 57
  3519  00FD27  53                 	db	83	;'S'
  3520  00FD28  75                 	db	117	;'u'
  3521  00FD29  6E                 	db	110	;'n'
  3522  00FD2A  4D                 	db	77	;'M'
  3523  00FD2B  6F                 	db	111	;'o'
  3524  00FD2C  6E                 	db	110	;'n'
  3525  00FD2D  54                 	db	84	;'T'
  3526  00FD2E  75                 	db	117	;'u'
  3527  00FD2F  65                 	db	101	;'e'
  3528  00FD30  57                 	db	87	;'W'
  3529  00FD31  65                 	db	101	;'e'
  3530  00FD32  64                 	db	100	;'d'
  3531  00FD33  54                 	db	84	;'T'
  3532  00FD34  68                 	db	104	;'h'
  3533  00FD35  75                 	db	117	;'u'
  3534  00FD36  46                 	db	70	;'F'
  3535  00FD37  72                 	db	114	;'r'
  3536  00FD38  69                 	db	105	;'i'
  3537  00FD39  53                 	db	83	;'S'
  3538  00FD3A  61                 	db	97	;'a'
  3539  00FD3B  74                 	db	116	;'t'
  3540  00FD3C  00                 	db	0
  3541  00FD3D                     STR_62:
  3542                           
  3543                           ; BSR set to: 57
  3544  00FD3D  20                 	db	32
  3545  00FD3E  25                 	db	37
  3546  00FD3F  64                 	db	100	;'d'
  3547  00FD40  20                 	db	32
  3548  00FD41  25                 	db	37
  3549  00FD42  64                 	db	100	;'d'
  3550  00FD43  20                 	db	32
  3551  00FD44  20                 	db	32
  3552  00FD45  20                 	db	32
  3553  00FD46  20                 	db	32
  3554  00FD47  20                 	db	32
  3555  00FD48  20                 	db	32
  3556  00FD49  20                 	db	32
  3557  00FD4A  20                 	db	32
  3558  00FD4B  20                 	db	32
  3559  00FD4C  20                 	db	32
  3560  00FD4D  20                 	db	32
  3561  00FD4E  20                 	db	32
  3562  00FD4F  20                 	db	32
  3563  00FD50  20                 	db	32
  3564  00FD51  20                 	db	32
  3565  00FD52  00                 	db	0
  3566  00FD53                     STR_65:
  3567                           
  3568                           ; BSR set to: 57
  3569  00FD53  20                 	db	32
  3570  00FD54  25                 	db	37
  3571  00FD55  6C                 	db	108	;'l'
  3572  00FD56  64                 	db	100	;'d'
  3573  00FD57  20                 	db	32
  3574  00FD58  25                 	db	37
  3575  00FD59  6C                 	db	108	;'l'
  3576  00FD5A  64                 	db	100	;'d'
  3577  00FD5B  20                 	db	32
  3578  00FD5C  20                 	db	32
  3579  00FD5D  20                 	db	32
  3580  00FD5E  20                 	db	32
  3581  00FD5F  20                 	db	32
  3582  00FD60  20                 	db	32
  3583  00FD61  20                 	db	32
  3584  00FD62  20                 	db	32
  3585  00FD63  20                 	db	32
  3586  00FD64  20                 	db	32
  3587  00FD65  20                 	db	32
  3588  00FD66  20                 	db	32
  3589  00FD67  20                 	db	32
  3590  00FD68  00                 	db	0
  3591  00FD69                     STR_16:
  3592                           
  3593                           ; BSR set to: 57
  3594  00FD69  42                 	db	66	;'B'
  3595  00FD6A  56                 	db	86	;'V'
  3596  00FD6B  20                 	db	32
  3597  00FD6C  25                 	db	37
  3598  00FD6D  32                 	db	50	;'2'
  3599  00FD6E  2E                 	db	46
  3600  00FD6F  34                 	db	52	;'4'
  3601  00FD70  66                 	db	102	;'f'
  3602  00FD71  20                 	db	32
  3603  00FD72  20                 	db	32
  3604  00FD73  20                 	db	32
  3605  00FD74  20                 	db	32
  3606  00FD75  20                 	db	32
  3607  00FD76  20                 	db	32
  3608  00FD77  20                 	db	32
  3609  00FD78  20                 	db	32
  3610  00FD79  20                 	db	32
  3611  00FD7A  20                 	db	32
  3612  00FD7B  20                 	db	32
  3613  00FD7C  20                 	db	32
  3614  00FD7D  20                 	db	32
  3615  00FD7E  00                 	db	0
  3616  00FD7F                     STR_31:
  3617                           
  3618                           ; BSR set to: 57
  3619  00FD7F  54                 	db	84	;'T'
  3620  00FD80  6F                 	db	111	;'o'
  3621  00FD81  20                 	db	32
  3622  00FD82  45                 	db	69	;'E'
  3623  00FD83  45                 	db	69	;'E'
  3624  00FD84  50                 	db	80	;'P'
  3625  00FD85  52                 	db	82	;'R'
  3626  00FD86  4F                 	db	79	;'O'
  3627  00FD87  4D                 	db	77	;'M'
  3628  00FD88  20                 	db	32
  3629  00FD89  20                 	db	32
  3630  00FD8A  20                 	db	32
  3631  00FD8B  20                 	db	32
  3632  00FD8C  20                 	db	32
  3633  00FD8D  20                 	db	32
  3634  00FD8E  20                 	db	32
  3635  00FD8F  20                 	db	32
  3636  00FD90  20                 	db	32
  3637  00FD91  20                 	db	32
  3638  00FD92  20                 	db	32
  3639  00FD93  20                 	db	32
  3640  00FD94  00                 	db	0
  3641  00FD95                     STR_21:
  3642                           
  3643                           ; BSR set to: 57
  3644  00FD95  42                 	db	66	;'B'
  3645  00FD96  61                 	db	97	;'a'
  3646  00FD97  74                 	db	116	;'t'
  3647  00FD98  74                 	db	116	;'t'
  3648  00FD99  65                 	db	101	;'e'
  3649  00FD9A  72                 	db	114	;'r'
  3650  00FD9B  79                 	db	121	;'y'
  3651  00FD9C  20                 	db	32
  3652  00FD9D  45                 	db	69	;'E'
  3653  00FD9E  53                 	db	83	;'S'
  3654  00FD9F  52                 	db	82	;'R'
  3655  00FDA0  20                 	db	32
  3656  00FDA1  20                 	db	32
  3657  00FDA2  20                 	db	32
  3658  00FDA3  20                 	db	32
  3659  00FDA4  20                 	db	32
  3660  00FDA5  20                 	db	32
  3661  00FDA6  20                 	db	32
  3662  00FDA7  20                 	db	32
  3663  00FDA8  20                 	db	32
  3664  00FDA9  20                 	db	32
  3665  00FDAA  00                 	db	0
  3666  00FDAB                     STR_22:
  3667                           
  3668                           ; BSR set to: 57
  3669  00FDAB  43                 	db	67	;'C'
  3670  00FDAC  61                 	db	97	;'a'
  3671  00FDAD  6C                 	db	108	;'l'
  3672  00FDAE  63                 	db	99	;'c'
  3673  00FDAF  75                 	db	117	;'u'
  3674  00FDB0  6C                 	db	108	;'l'
  3675  00FDB1  61                 	db	97	;'a'
  3676  00FDB2  74                 	db	116	;'t'
  3677  00FDB3  69                 	db	105	;'i'
  3678  00FDB4  6F                 	db	111	;'o'
  3679  00FDB5  6E                 	db	110	;'n'
  3680  00FDB6  20                 	db	32
  3681  00FDB7  20                 	db	32
  3682  00FDB8  20                 	db	32
  3683  00FDB9  20                 	db	32
  3684  00FDBA  20                 	db	32
  3685  00FDBB  20                 	db	32
  3686  00FDBC  20                 	db	32
  3687  00FDBD  20                 	db	32
  3688  00FDBE  20                 	db	32
  3689  00FDBF  20                 	db	32
  3690  00FDC0  00                 	db	0
  3691  00FDC1                     STR_59:
  3692                           
  3693                           ; BSR set to: 57
  3694  00FDC1  43                 	db	67	;'C'
  3695  00FDC2  61                 	db	97	;'a'
  3696  00FDC3  6C                 	db	108	;'l'
  3697  00FDC4  69                 	db	105	;'i'
  3698  00FDC5  62                 	db	98	;'b'
  3699  00FDC6  72                 	db	114	;'r'
  3700  00FDC7  61                 	db	97	;'a'
  3701  00FDC8  74                 	db	116	;'t'
  3702  00FDC9  69                 	db	105	;'i'
  3703  00FDCA  6F                 	db	111	;'o'
  3704  00FDCB  6E                 	db	110	;'n'
  3705  00FDCC  20                 	db	32
  3706  00FDCD  20                 	db	32
  3707  00FDCE  20                 	db	32
  3708  00FDCF  20                 	db	32
  3709  00FDD0  20                 	db	32
  3710  00FDD1  20                 	db	32
  3711  00FDD2  20                 	db	32
  3712  00FDD3  20                 	db	32
  3713  00FDD4  20                 	db	32
  3714  00FDD5  20                 	db	32
  3715  00FDD6  00                 	db	0
  3716  00FDD7                     STR_58:
  3717                           
  3718                           ; BSR set to: 57
  3719  00FDD7  53                 	db	83	;'S'
  3720  00FDD8  65                 	db	101	;'e'
  3721  00FDD9  6E                 	db	110	;'n'
  3722  00FDDA  73                 	db	115	;'s'
  3723  00FDDB  6F                 	db	111	;'o'
  3724  00FDDC  72                 	db	114	;'r'
  3725  00FDDD  20                 	db	32
  3726  00FDDE  5A                 	db	90	;'Z'
  3727  00FDDF  65                 	db	101	;'e'
  3728  00FDE0  72                 	db	114	;'r'
  3729  00FDE1  6F                 	db	111	;'o'
  3730  00FDE2  20                 	db	32
  3731  00FDE3  20                 	db	32
  3732  00FDE4  20                 	db	32
  3733  00FDE5  20                 	db	32
  3734  00FDE6  20                 	db	32
  3735  00FDE7  20                 	db	32
  3736  00FDE8  20                 	db	32
  3737  00FDE9  20                 	db	32
  3738  00FDEA  20                 	db	32
  3739  00FDEB  20                 	db	32
  3740  00FDEC  00                 	db	0
  3741  00FDED                     STR_66:
  3742                           
  3743                           ; BSR set to: 57
  3744  00FDED  5A                 	db	90	;'Z'
  3745  00FDEE  65                 	db	101	;'e'
  3746  00FDEF  72                 	db	114	;'r'
  3747  00FDF0  6F                 	db	111	;'o'
  3748  00FDF1  20                 	db	32
  3749  00FDF2  43                 	db	67	;'C'
  3750  00FDF3  61                 	db	97	;'a'
  3751  00FDF4  6C                 	db	108	;'l'
  3752  00FDF5  20                 	db	32
  3753  00FDF6  53                 	db	83	;'S'
  3754  00FDF7  65                 	db	101	;'e'
  3755  00FDF8  74                 	db	116	;'t'
  3756  00FDF9  20                 	db	32
  3757  00FDFA  20                 	db	32
  3758  00FDFB  20                 	db	32
  3759  00FDFC  20                 	db	32
  3760  00FDFD  20                 	db	32
  3761  00FDFE  20                 	db	32
  3762  00FDFF  20                 	db	32
  3763  00FE00  20                 	db	32
  3764  00FE01  20                 	db	32
  3765  00FE02  00                 	db	0
  3766  00FE03                     STR_57:
  3767                           
  3768                           ; BSR set to: 57
  3769  00FE03  42                 	db	66	;'B'
  3770  00FE04  61                 	db	97	;'a'
  3771  00FE05  74                 	db	116	;'t'
  3772  00FE06  74                 	db	116	;'t'
  3773  00FE07  65                 	db	101	;'e'
  3774  00FE08  72                 	db	114	;'r'
  3775  00FE09  79                 	db	121	;'y'
  3776  00FE0A  20                 	db	32
  3777  00FE0B  61                 	db	97	;'a'
  3778  00FE0C  6E                 	db	110	;'n'
  3779  00FE0D  64                 	db	100	;'d'
  3780  00FE0E  20                 	db	32
  3781  00FE0F  50                 	db	80	;'P'
  3782  00FE10  56                 	db	86	;'V'
  3783  00FE11  20                 	db	32
  3784  00FE12  20                 	db	32
  3785  00FE13  20                 	db	32
  3786  00FE14  20                 	db	32
  3787  00FE15  20                 	db	32
  3788  00FE16  20                 	db	32
  3789  00FE17  20                 	db	32
  3790  00FE18  00                 	db	0
  3791  00FE19                     STR_24:
  3792                           
  3793                           ; BSR set to: 57
  3794  00FE19  43                 	db	67	;'C'
  3795  00FE1A  68                 	db	104	;'h'
  3796  00FE1B  65                 	db	101	;'e'
  3797  00FE1C  63                 	db	99	;'c'
  3798  00FE1D  6B                 	db	107	;'k'
  3799  00FE1E  69                 	db	105	;'i'
  3800  00FE1F  6E                 	db	110	;'n'
  3801  00FE20  67                 	db	103	;'g'
  3802  00FE21  20                 	db	32
  3803  00FE22  25                 	db	37
  3804  00FE23  63                 	db	99	;'c'
  3805  00FE24  20                 	db	32
  3806  00FE25  25                 	db	37
  3807  00FE26  63                 	db	99	;'c'
  3808  00FE27  20                 	db	32
  3809  00FE28  20                 	db	32
  3810  00FE29  20                 	db	32
  3811  00FE2A  20                 	db	32
  3812  00FE2B  20                 	db	32
  3813  00FE2C  20                 	db	32
  3814  00FE2D  20                 	db	32
  3815  00FE2E  00                 	db	0
  3816  00FE2F                     STR_32:
  3817                           
  3818                           ; BSR set to: 57
  3819  00FE2F  20                 	db	32
  3820  00FE30  54                 	db	84	;'T'
  3821  00FE31  69                 	db	105	;'i'
  3822  00FE32  6D                 	db	109	;'m'
  3823  00FE33  65                 	db	101	;'e'
  3824  00FE34  20                 	db	32
  3825  00FE35  25                 	db	37
  3826  00FE36  6C                 	db	108	;'l'
  3827  00FE37  75                 	db	117	;'u'
  3828  00FE38  2C                 	db	44
  3829  00FE39  20                 	db	32
  3830  00FE3A  25                 	db	37
  3831  00FE3B  6C                 	db	108	;'l'
  3832  00FE3C  75                 	db	117	;'u'
  3833  00FE3D  20                 	db	32
  3834  00FE3E  20                 	db	32
  3835  00FE3F  20                 	db	32
  3836  00FE40  20                 	db	32
  3837  00FE41  20                 	db	32
  3838  00FE42  20                 	db	32
  3839  00FE43  20                 	db	32
  3840  00FE44  00                 	db	0
  3841  00FE45                     STR_61:
  3842                           
  3843                           ; BSR set to: 57
  3844  00FE45  53                 	db	83	;'S'
  3845  00FE46  65                 	db	101	;'e'
  3846  00FE47  6E                 	db	110	;'n'
  3847  00FE48  73                 	db	115	;'s'
  3848  00FE49  6F                 	db	111	;'o'
  3849  00FE4A  72                 	db	114	;'r'
  3850  00FE4B  20                 	db	32
  3851  00FE4C  52                 	db	82	;'R'
  3852  00FE4D  65                 	db	101	;'e'
  3853  00FE4E  61                 	db	97	;'a'
  3854  00FE4F  64                 	db	100	;'d'
  3855  00FE50  69                 	db	105	;'i'
  3856  00FE51  6E                 	db	110	;'n'
  3857  00FE52  67                 	db	103	;'g'
  3858  00FE53  73                 	db	115	;'s'
  3859  00FE54  20                 	db	32
  3860  00FE55  20                 	db	32
  3861  00FE56  20                 	db	32
  3862  00FE57  20                 	db	32
  3863  00FE58  20                 	db	32
  3864  00FE59  20                 	db	32
  3865  00FE5A  00                 	db	0
  3866  00FE5B                     STR_23:
  3867                           
  3868                           ; BSR set to: 57
  3869  00FE5B  43                 	db	67	;'C'
  3870  00FE5C  68                 	db	104	;'h'
  3871  00FE5D  65                 	db	101	;'e'
  3872  00FE5E  63                 	db	99	;'c'
  3873  00FE5F  6B                 	db	107	;'k'
  3874  00FE60  20                 	db	32
  3875  00FE61  33                 	db	51	;'3'
  3876  00FE62  30                 	db	48	;'0'
  3877  00FE63  20                 	db	32
  3878  00FE64  73                 	db	115	;'s'
  3879  00FE65  65                 	db	101	;'e'
  3880  00FE66  63                 	db	99	;'c'
  3881  00FE67  6F                 	db	111	;'o'
  3882  00FE68  6E                 	db	110	;'n'
  3883  00FE69  64                 	db	100	;'d'
  3884  00FE6A  73                 	db	115	;'s'
  3885  00FE6B  20                 	db	32
  3886  00FE6C  20                 	db	32
  3887  00FE6D  20                 	db	32
  3888  00FE6E  20                 	db	32
  3889  00FE6F  20                 	db	32
  3890  00FE70  00                 	db	0
  3891  00FE71                     STR_69:
  3892                           
  3893                           ; BSR set to: 57
  3894  00FE71  5A                 	db	90	;'Z'
  3895  00FE72  65                 	db	101	;'e'
  3896  00FE73  72                 	db	114	;'r'
  3897  00FE74  6F                 	db	111	;'o'
  3898  00FE75  20                 	db	32
  3899  00FE76  4F                 	db	79	;'O'
  3900  00FE77  75                 	db	117	;'u'
  3901  00FE78  74                 	db	116	;'t'
  3902  00FE79  20                 	db	32
  3903  00FE7A  4F                 	db	79	;'O'
  3904  00FE7B  66                 	db	102	;'f'
  3905  00FE7C  20                 	db	32
  3906  00FE7D  52                 	db	82	;'R'
  3907  00FE7E  61                 	db	97	;'a'
  3908  00FE7F  6E                 	db	110	;'n'
  3909  00FE80  67                 	db	103	;'g'
  3910  00FE81  65                 	db	101	;'e'
  3911  00FE82  20                 	db	32
  3912  00FE83  20                 	db	32
  3913  00FE84  20                 	db	32
  3914  00FE85  20                 	db	32
  3915  00FE86  00                 	db	0
  3916  00FE87                     STR_54:
  3917                           
  3918                           ; BSR set to: 57
  3919  00FE87  25                 	db	37
  3920  00FE88  64                 	db	100	;'d'
  3921  00FE89  20                 	db	32
  3922  00FE8A  25                 	db	37
  3923  00FE8B  32                 	db	50	;'2'
  3924  00FE8C  2E                 	db	46
  3925  00FE8D  34                 	db	52	;'4'
  3926  00FE8E  66                 	db	102	;'f'
  3927  00FE8F  2C                 	db	44
  3928  00FE90  20                 	db	32
  3929  00FE91  25                 	db	37
  3930  00FE92  64                 	db	100	;'d'
  3931  00FE93  20                 	db	32
  3932  00FE94  20                 	db	32
  3933  00FE95  54                 	db	84	;'T'
  3934  00FE96  52                 	db	82	;'R'
  3935  00FE97  49                 	db	73	;'I'
  3936  00FE98  4D                 	db	77	;'M'
  3937  00FE99  20                 	db	32
  3938  00FE9A  20                 	db	32
  3939  00FE9B  20                 	db	32
  3940  00FE9C  00                 	db	0
  3941  00FE9D                     STR_63:
  3942                           
  3943                           ; BSR set to: 57
  3944  00FE9D  53                 	db	83	;'S'
  3945  00FE9E  74                 	db	116	;'t'
  3946  00FE9F  61                 	db	97	;'a'
  3947  00FEA0  62                 	db	98	;'b'
  3948  00FEA1  69                 	db	105	;'i'
  3949  00FEA2  6C                 	db	108	;'l'
  3950  00FEA3  69                 	db	105	;'i'
  3951  00FEA4  74                 	db	116	;'t'
  3952  00FEA5  79                 	db	121	;'y'
  3953  00FEA6  20                 	db	32
  3954  00FEA7  63                 	db	99	;'c'
  3955  00FEA8  6C                 	db	108	;'l'
  3956  00FEA9  6F                 	db	111	;'o'
  3957  00FEAA  63                 	db	99	;'c'
  3958  00FEAB  6B                 	db	107	;'k'
  3959  00FEAC  20                 	db	32
  3960  00FEAD  25                 	db	37
  3961  00FEAE  64                 	db	100	;'d'
  3962  00FEAF  20                 	db	32
  3963  00FEB0  20                 	db	32
  3964  00FEB1  20                 	db	32
  3965  00FEB2  00                 	db	0
  3966  00FEB3                     STR_30:
  3967                           
  3968                           ; BSR set to: 57
  3969  00FEB3  48                 	db	72	;'H'
  3970  00FEB4  69                 	db	105	;'i'
  3971  00FEB5  73                 	db	115	;'s'
  3972  00FEB6  74                 	db	116	;'t'
  3973  00FEB7  6F                 	db	111	;'o'
  3974  00FEB8  72                 	db	114	;'r'
  3975  00FEB9  79                 	db	121	;'y'
  3976  00FEBA  20                 	db	32
  3977  00FEBB  44                 	db	68	;'D'
  3978  00FEBC  61                 	db	97	;'a'
  3979  00FEBD  74                 	db	116	;'t'
  3980  00FEBE  61                 	db	97	;'a'
  3981  00FEBF  20                 	db	32
  3982  00FEC0  20                 	db	32
  3983  00FEC1  53                 	db	83	;'S'
  3984  00FEC2  61                 	db	97	;'a'
  3985  00FEC3  76                 	db	118	;'v'
  3986  00FEC4  65                 	db	101	;'e'
  3987  00FEC5  64                 	db	100	;'d'
  3988  00FEC6  20                 	db	32
  3989  00FEC7  20                 	db	32
  3990  00FEC8  00                 	db	0
  3991  00FEC9                     
  3992                           ; BSR set to: 57
  3993  00FEC9  48                 	db	72	;'H'
  3994  00FECA  45                 	db	69	;'E'
  3995  00FECB  4C                 	db	76	;'L'
  3996  00FECC  50                 	db	80	;'P'
  3997  00FECD  20                 	db	32
  3998  00FECE  25                 	db	37
  3999  00FECF  73                 	db	115	;'s'
  4000  00FED0  20                 	db	32
  4001  00FED1  20                 	db	32
  4002  00FED2  20                 	db	32
  4003  00FED3  20                 	db	32
  4004  00FED4  20                 	db	32
  4005  00FED5  20                 	db	32
  4006  00FED6  20                 	db	32
  4007  00FED7  20                 	db	32
  4008  00FED8  20                 	db	32
  4009  00FED9  20                 	db	32
  4010  00FEDA  20                 	db	32
  4011  00FEDB  20                 	db	32
  4012  00FEDC  20                 	db	32
  4013  00FEDD  00                 	db	0
  4014  00FEDE                     
  4015                           ; BSR set to: 57
  4016  00FEDE  44                 	db	68	;'D'
  4017  00FEDF  49                 	db	73	;'I'
  4018  00FEE0  53                 	db	83	;'S'
  4019  00FEE1  50                 	db	80	;'P'
  4020  00FEE2  4C                 	db	76	;'L'
  4021  00FEE3  41                 	db	65	;'A'
  4022  00FEE4  59                 	db	89	;'Y'
  4023  00FEE5  20                 	db	32
  4024  00FEE6  25                 	db	37
  4025  00FEE7  73                 	db	115	;'s'
  4026  00FEE8  20                 	db	32
  4027  00FEE9  20                 	db	32
  4028  00FEEA  20                 	db	32
  4029  00FEEB  20                 	db	32
  4030  00FEEC  20                 	db	32
  4031  00FEED  20                 	db	32
  4032  00FEEE  20                 	db	32
  4033  00FEEF  20                 	db	32
  4034  00FEF0  20                 	db	32
  4035  00FEF1  20                 	db	32
  4036  00FEF2  00                 	db	0
  4037  00FEF3                     STR_4:
  4038                           
  4039                           ; BSR set to: 57
  4040  00FEF3  20                 	db	32
  4041  00FEF4  4E                 	db	78	;'N'
  4042  00FEF5  53                 	db	83	;'S'
  4043  00FEF6  41                 	db	65	;'A'
  4044  00FEF7  53                 	db	83	;'S'
  4045  00FEF8  50                 	db	80	;'P'
  4046  00FEF9  4F                 	db	79	;'O'
  4047  00FEFA  4F                 	db	79	;'O'
  4048  00FEFB  4B                 	db	75	;'K'
  4049  00FEFC  20                 	db	32
  4050  00FEFD  20                 	db	32
  4051  00FEFE  20                 	db	32
  4052  00FEFF  20                 	db	32
  4053  00FF00  20                 	db	32
  4054  00FF01  20                 	db	32
  4055  00FF02  20                 	db	32
  4056  00FF03  20                 	db	32
  4057  00FF04  20                 	db	32
  4058  00FF05  20                 	db	32
  4059  00FF06  20                 	db	32
  4060  00FF07  00                 	db	0
  4061  00FF08                     STR_2:
  4062                           
  4063                           ; BSR set to: 57
  4064  00FF08  20                 	db	32
  4065  00FF09  56                 	db	86	;'V'
  4066  00FF0A  65                 	db	101	;'e'
  4067  00FF0B  72                 	db	114	;'r'
  4068  00FF0C  73                 	db	115	;'s'
  4069  00FF0D  69                 	db	105	;'i'
  4070  00FF0E  6F                 	db	111	;'o'
  4071  00FF0F  6E                 	db	110	;'n'
  4072  00FF10  20                 	db	32
  4073  00FF11  25                 	db	37
  4074  00FF12  73                 	db	115	;'s'
  4075  00FF13  20                 	db	32
  4076  00FF14  20                 	db	32
  4077  00FF15  20                 	db	32
  4078  00FF16  20                 	db	32
  4079  00FF17  20                 	db	32
  4080  00FF18  20                 	db	32
  4081  00FF19  20                 	db	32
  4082  00FF1A  20                 	db	32
  4083  00FF1B  20                 	db	32
  4084  00FF1C  00                 	db	0
  4085  00FF1D                     STR_1:
  4086                           
  4087                           ; BSR set to: 57
  4088  00FF1D  20                 	db	32
  4089  00FF1E  4D                 	db	77	;'M'
  4090  00FF1F  42                 	db	66	;'B'
  4091  00FF20  4D                 	db	77	;'M'
  4092  00FF21  43                 	db	67	;'C'
  4093  00FF22  20                 	db	32
  4094  00FF23  53                 	db	83	;'S'
  4095  00FF24  4F                 	db	79	;'O'
  4096  00FF25  4C                 	db	76	;'L'
  4097  00FF26  41                 	db	65	;'A'
  4098  00FF27  52                 	db	82	;'R'
  4099  00FF28  4D                 	db	77	;'M'
  4100  00FF29  4F                 	db	79	;'O'
  4101  00FF2A  4E                 	db	78	;'N'
  4102  00FF2B  20                 	db	32
  4103  00FF2C  20                 	db	32
  4104  00FF2D  20                 	db	32
  4105  00FF2E  20                 	db	32
  4106  00FF2F  20                 	db	32
  4107  00FF30  20                 	db	32
  4108  00FF31  00                 	db	0
  4109  00FF32                     STR_14:
  4110                           
  4111                           ; BSR set to: 57
  4112  00FF32  52                 	db	82	;'R'
  4113  00FF33  65                 	db	101	;'e'
  4114  00FF34  61                 	db	97	;'a'
  4115  00FF35  64                 	db	100	;'d'
  4116  00FF36  20                 	db	32
  4117  00FF37  45                 	db	69	;'E'
  4118  00FF38  45                 	db	69	;'E'
  4119  00FF39  50                 	db	80	;'P'
  4120  00FF3A  52                 	db	82	;'R'
  4121  00FF3B  4F                 	db	79	;'O'
  4122  00FF3C  4D                 	db	77	;'M'
  4123  00FF3D  20                 	db	32
  4124  00FF3E  44                 	db	68	;'D'
  4125  00FF3F  41                 	db	65	;'A'
  4126  00FF40  54                 	db	84	;'T'
  4127  00FF41  41                 	db	65	;'A'
  4128  00FF42  20                 	db	32
  4129  00FF43  20                 	db	32
  4130  00FF44  20                 	db	32
  4131  00FF45  20                 	db	32
  4132  00FF46  00                 	db	0
  4133  00FF47                     STR_60:
  4134                           
  4135                           ; BSR set to: 57
  4136  00FF47  52                 	db	82	;'R'
  4137  00FF48  65                 	db	101	;'e'
  4138  00FF49  6C                 	db	108	;'l'
  4139  00FF4A  65                 	db	101	;'e'
  4140  00FF4B  61                 	db	97	;'a'
  4141  00FF4C  73                 	db	115	;'s'
  4142  00FF4D  65                 	db	101	;'e'
  4143  00FF4E  20                 	db	32
  4144  00FF4F  62                 	db	98	;'b'
  4145  00FF50  75                 	db	117	;'u'
  4146  00FF51  74                 	db	116	;'t'
  4147  00FF52  74                 	db	116	;'t'
  4148  00FF53  6F                 	db	111	;'o'
  4149  00FF54  6E                 	db	110	;'n'
  4150  00FF55  20                 	db	32
  4151  00FF56  25                 	db	37
  4152  00FF57  63                 	db	99	;'c'
  4153  00FF58  20                 	db	32
  4154  00FF59  20                 	db	32
  4155  00FF5A  20                 	db	32
  4156  00FF5B  00                 	db	0
  4157  00FF5C                     STR_15:
  4158                           
  4159                           ; BSR set to: 57
  4160  00FF5C  49                 	db	73	;'I'
  4161  00FF5D  6E                 	db	110	;'n'
  4162  00FF5E  76                 	db	118	;'v'
  4163  00FF5F  61                 	db	97	;'a'
  4164  00FF60  6C                 	db	108	;'l'
  4165  00FF61  69                 	db	105	;'i'
  4166  00FF62  64                 	db	100	;'d'
  4167  00FF63  20                 	db	32
  4168  00FF64  45                 	db	69	;'E'
  4169  00FF65  45                 	db	69	;'E'
  4170  00FF66  50                 	db	80	;'P'
  4171  00FF67  52                 	db	82	;'R'
  4172  00FF68  4F                 	db	79	;'O'
  4173  00FF69  4D                 	db	77	;'M'
  4174  00FF6A  20                 	db	32
  4175  00FF6B  44                 	db	68	;'D'
  4176  00FF6C  41                 	db	65	;'A'
  4177  00FF6D  54                 	db	84	;'T'
  4178  00FF6E  41                 	db	65	;'A'
  4179  00FF6F  20                 	db	32
  4180  00FF70  00                 	db	0
  4181  00FF71                     STR_77:
  4182                           
  4183                           ; BSR set to: 57
  4184  00FF71  48                 	db	72	;'H'
  4185  00FF72  45                 	db	69	;'E'
  4186  00FF73  4C                 	db	76	;'L'
  4187  00FF74  50                 	db	80	;'P'
  4188  00FF75  20                 	db	32
  4189  00FF76  25                 	db	37
  4190  00FF77  73                 	db	115	;'s'
  4191  00FF78  20                 	db	32
  4192  00FF79  20                 	db	32
  4193  00FF7A  20                 	db	32
  4194  00FF7B  20                 	db	32
  4195  00FF7C  20                 	db	32
  4196  00FF7D  20                 	db	32
  4197  00FF7E  20                 	db	32
  4198  00FF7F  20                 	db	32
  4199  00FF80  20                 	db	32
  4200  00FF81  20                 	db	32
  4201  00FF82  20                 	db	32
  4202  00FF83  00                 	db	0
  4203  00FF84                     
  4204                           ; BSR set to: 57
  4205  00FF84  25                 	db	37
  4206  00FF85  64                 	db	100	;'d'
  4207  00FF86  20                 	db	32
  4208  00FF87  25                 	db	37
  4209  00FF88  32                 	db	50	;'2'
  4210  00FF89  2E                 	db	46
  4211  00FF8A  34                 	db	52	;'4'
  4212  00FF8B  66                 	db	102	;'f'
  4213  00FF8C  2C                 	db	44
  4214  00FF8D  20                 	db	32
  4215  00FF8E  25                 	db	37
  4216  00FF8F  64                 	db	100	;'d'
  4217  00FF90  20                 	db	32
  4218  00FF91  20                 	db	32
  4219  00FF92  20                 	db	32
  4220  00FF93  23                 	db	35
  4221  00FF94  20                 	db	32
  4222  00FF95  00                 	db	0
  4223  00FF96                     STR_33:
  4224                           
  4225                           ; BSR set to: 57
  4226  00FF96  25                 	db	37
  4227  00FF97  64                 	db	100	;'d'
  4228  00FF98  20                 	db	32
  4229  00FF99  25                 	db	37
  4230  00FF9A  32                 	db	50	;'2'
  4231  00FF9B  2E                 	db	46
  4232  00FF9C  34                 	db	52	;'4'
  4233  00FF9D  66                 	db	102	;'f'
  4234  00FF9E  20                 	db	32
  4235  00FF9F  20                 	db	32
  4236  00FFA0  20                 	db	32
  4237  00FFA1  25                 	db	37
  4238  00FFA2  64                 	db	100	;'d'
  4239  00FFA3  20                 	db	32
  4240  00FFA4  20                 	db	32
  4241  00FFA5  20                 	db	32
  4242  00FFA6  00                 	db	0
  4243  00FFA7                     STR_81:
  4244                           
  4245                           ; BSR set to: 57
  4246  00FFA7  76                 	db	118	;'v'
  4247  00FFA8  74                 	db	116	;'t'
  4248  00FFA9  65                 	db	101	;'e'
  4249  00FFAA  72                 	db	114	;'r'
  4250  00FFAB  6D                 	db	109	;'m'
  4251  00FFAC  20                 	db	32
  4252  00FFAD  25                 	db	37
  4253  00FFAE  78                 	db	120	;'x'
  4254  00FFAF  3A                 	db	58	;':'
  4255  00FFB0  25                 	db	37
  4256  00FFB1  78                 	db	120	;'x'
  4257  00FFB2  20                 	db	32
  4258  00FFB3  20                 	db	32
  4259  00FFB4  20                 	db	32
  4260  00FFB5  00                 	db	0
  4261  00FFB6                     STR_75:
  4262                           
  4263                           ; BSR set to: 57
  4264  00FFB6  46                 	db	70	;'F'
  4265  00FFB7  65                 	db	101	;'e'
  4266  00FFB8  62                 	db	98	;'b'
  4267  00FFB9  20                 	db	32
  4268  00FFBA  31                 	db	49	;'1'
  4269  00FFBB  39                 	db	57	;'9'
  4270  00FFBC  20                 	db	32
  4271  00FFBD  32                 	db	50	;'2'
  4272  00FFBE  30                 	db	48	;'0'
  4273  00FFBF  32                 	db	50	;'2'
  4274  00FFC0  30                 	db	48	;'0'
  4275  00FFC1  00                 	db	0
  4276  00FFC2                     STR_79:
  4277                           
  4278                           ; BSR set to: 57
  4279  00FFC2  25                 	db	37
  4280  00FFC3  73                 	db	115	;'s'
  4281  00FFC4  20                 	db	32
  4282  00FFC5  20                 	db	32
  4283  00FFC6  20                 	db	32
  4284  00FFC7  20                 	db	32
  4285  00FFC8  20                 	db	32
  4286  00FFC9  20                 	db	32
  4287  00FFCA  20                 	db	32
  4288  00FFCB  00                 	db	0
  4289  00FFCC                     STR_76:
  4290                           
  4291                           ; BSR set to: 57
  4292  00FFCC  31                 	db	49	;'1'
  4293  00FFCD  39                 	db	57	;'9'
  4294  00FFCE  3A                 	db	58	;':'
  4295  00FFCF  30                 	db	48	;'0'
  4296  00FFD0  31                 	db	49	;'1'
  4297  00FFD1  3A                 	db	58	;':'
  4298  00FFD2  34                 	db	52	;'4'
  4299  00FFD3  37                 	db	55	;'7'
  4300  00FFD4  00                 	db	0
  4301  00FFD5                     STR_3:
  4302                           
  4303                           ; BSR set to: 57
  4304  00FFD5  31                 	db	49	;'1'
  4305  00FFD6  2E                 	db	46
  4306  00FFD7  32                 	db	50	;'2'
  4307  00FFD8  37                 	db	55	;'7'
  4308  00FFD9  00                 	db	0
  4309  00FFDA                     STR_96:
  4310                           
  4311                           ; BSR set to: 57
  4312  00FFDA  49                 	db	73	;'I'
  4313  00FFDB  4E                 	db	78	;'N'
  4314  00FFDC  46                 	db	70	;'F'
  4315  00FFDD  00                 	db	0
  4316  00FFDE                     STR_100:
  4317                           
  4318                           ; BSR set to: 57
  4319  00FFDE  4E                 	db	78	;'N'
  4320  00FFDF  41                 	db	65	;'A'
  4321  00FFE0  4E                 	db	78	;'N'
  4322  00FFE1  00                 	db	0
  4323  00FFE2                     STR_97:
  4324                           
  4325                           ; BSR set to: 57
  4326  00FFE2  69                 	db	105	;'i'
  4327  00FFE3  6E                 	db	110	;'n'
  4328  00FFE4  66                 	db	102	;'f'
  4329  00FFE5  00                 	db	0
  4330  00FFE6                     STR_101:
  4331                           
  4332                           ; BSR set to: 57
  4333  00FFE6  6E                 	db	110	;'n'
  4334  00FFE7  61                 	db	97	;'a'
  4335  00FFE8  6E                 	db	110	;'n'
  4336  00FFE9  00                 	db	0
  4337  00FFEA                     STR_127:
  4338                           
  4339                           ; BSR set to: 57
  4340  00FFEA  6C                 	db	108	;'l'
  4341  00FFEB  58                 	db	88	;'X'
  4342  00FFEC  00                 	db	0
  4343  00FFED                     STR_104:
  4344                           
  4345                           ; BSR set to: 57
  4346  00FFED  6C                 	db	108	;'l'
  4347  00FFEE  64                 	db	100	;'d'
  4348  00FFEF  00                 	db	0
  4349  00FFF0                     STR_113:
  4350                           
  4351                           ; BSR set to: 57
  4352  00FFF0  6C                 	db	108	;'l'
  4353  00FFF1  66                 	db	102	;'f'
  4354  00FFF2  00                 	db	0
  4355  00FFF3                     STR_108:
  4356                           
  4357                           ; BSR set to: 57
  4358  00FFF3  6C                 	db	108	;'l'
  4359  00FFF4  69                 	db	105	;'i'
  4360  00FFF5  00                 	db	0
  4361  00FFF6                     STR_118:
  4362                           
  4363                           ; BSR set to: 57
  4364  00FFF6  6C                 	db	108	;'l'
  4365  00FFF7  75                 	db	117	;'u'
  4366  00FFF8  00                 	db	0
  4367  00FFF9                     STR_123:
  4368                           
  4369                           ; BSR set to: 57
  4370  00FFF9  6C                 	db	108	;'l'
  4371  00FFFA  78                 	db	120	;'x'
  4372  00FFFB  00                 	db	0
  4373  00FFFC                     STR_74:
  4374                           
  4375                           ; BSR set to: 57
  4376  00FFFC  25                 	db	37
  4377  00FFFD  73                 	db	115	;'s'
  4378  00FFFE  00                 	db	0
  4379  0000                     
  4380                           ; #config settings
  4381  00FFFF  00                 	db	0	; dummy byte at the end
  4382  0000                     
  4383                           	psect	cinit
  4384  01FC54                     __pcinit:
  4385                           	opt callstack 0
  4386  01FC54                     start_initialization:
  4387                           	opt callstack 0
  4388  01FC54                     __initialization:
  4389                           	opt callstack 0
  4390                           
  4391                           ; Initialize objects allocated to BIGRAM (832 bytes)
  4392                           ; load TBLPTR registers with __pidataBIGRAM
  4393  01FC54  0EA0               	movlw	low __pidataBIGRAM
  4394  01FC56  6EF6               	movwf	tblptrl,c
  4395  01FC58  0EA8               	movlw	high __pidataBIGRAM
  4396  01FC5A  6EF7               	movwf	tblptrh,c
  4397  01FC5C  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  4398  01FC5E  6EF8               	movwf	tblptru,c
  4399  01FC60  EE01  F2FF         	lfsr	0,__pdataBIGRAM
  4400  01FC64  EE20 F340          	lfsr	2,832
  4401  01FC68                     copy_data0:
  4402  01FC68  0009               	tblrd		*+
  4403  01FC6A  006F FFD7 FFEE     	movff	tablat,postinc0
  4404  01FC70  50DD               	movf	postdec2,w,c
  4405  01FC72  50D9               	movf	fsr2l,w,c
  4406  01FC74  E1F9               	bnz	copy_data0
  4407  01FC76  50DA               	movf	fsr2h,w,c
  4408  01FC78  E1F7               	bnz	copy_data0
  4409                           
  4410                           ; Initialize objects allocated to BANK2 (188 bytes)
  4411                           ; load TBLPTR registers with __pidataBANK2
  4412  01FC7A  0EF6               	movlw	low __pidataBANK2
  4413  01FC7C  6EF6               	movwf	tblptrl,c
  4414  01FC7E  0E05               	movlw	high __pidataBANK2
  4415  01FC80  6EF7               	movwf	tblptrh,c
  4416  01FC82  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  4417  01FC84  6EF8               	movwf	tblptru,c
  4418  01FC86  EE00  F200         	lfsr	0,__pdataBANK2
  4419  01FC8A  EE20 F0BC          	lfsr	2,188
  4420  01FC8E                     copy_data1:
  4421  01FC8E  0009               	tblrd		*+
  4422  01FC90  006F FFD7 FFEE     	movff	tablat,postinc0
  4423  01FC96  50DD               	movf	postdec2,w,c
  4424  01FC98  50D9               	movf	fsr2l,w,c
  4425  01FC9A  E1F9               	bnz	copy_data1
  4426                           
  4427                           ; Initialize objects allocated to BANK1 (164 bytes)
  4428                           ; load TBLPTR registers with __pidataBANK1
  4429  01FC9C  0E84               	movlw	low __pidataBANK1
  4430  01FC9E  6EF6               	movwf	tblptrl,c
  4431  01FCA0  0E0B               	movlw	high __pidataBANK1
  4432  01FCA2  6EF7               	movwf	tblptrh,c
  4433  01FCA4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  4434  01FCA6  6EF8               	movwf	tblptru,c
  4435  01FCA8  EE00  F100         	lfsr	0,__pdataBANK1
  4436  01FCAC  EE20 F0A4          	lfsr	2,164
  4437  01FCB0                     copy_data2:
  4438  01FCB0  0009               	tblrd		*+
  4439  01FCB2  006F FFD7 FFEE     	movff	tablat,postinc0
  4440  01FCB8  50DD               	movf	postdec2,w,c
  4441  01FCBA  50D9               	movf	fsr2l,w,c
  4442  01FCBC  E1F9               	bnz	copy_data2
  4443                           
  4444                           ; Clear objects allocated to BIGRAM (642 bytes)
  4445  01FCBE  EE02  F23F         	lfsr	0,__pbssBIGRAM
  4446  01FCC2  EE20 F282          	lfsr	2,642
  4447  01FCC6                     clear_0:
  4448  01FCC6  6AEE               	clrf	postinc0,c
  4449  01FCC8  50DD               	movf	postdec2,w,c
  4450  01FCCA  50D9               	movf	fsr2l,w,c
  4451  01FCCC  E1FC               	bnz	clear_0
  4452  01FCCE  50DA               	movf	fsr2h,w,c
  4453  01FCD0  E1FA               	bnz	clear_0
  4454                           
  4455                           ; Clear objects allocated to BANK6 (255 bytes)
  4456  01FCD2  EE01  F200         	lfsr	0,__pbssBANK6
  4457  01FCD6  EE20 F0FF          	lfsr	2,255
  4458  01FCDA                     clear_1:
  4459  01FCDA  6AEE               	clrf	postinc0,c
  4460  01FCDC  50DD               	movf	postdec2,w,c
  4461  01FCDE  50D9               	movf	fsr2l,w,c
  4462  01FCE0  E1FC               	bnz	clear_1
  4463  01FCE2  50DA               	movf	fsr2h,w,c
  4464  01FCE4  E1FA               	bnz	clear_1
  4465                           
  4466                           ; Clear objects allocated to BANK5 (134 bytes)
  4467  01FCE6  EE01  F100         	lfsr	0,__pbssBANK5
  4468  01FCEA  0E86               	movlw	134
  4469  01FCEC                     clear_2:
  4470  01FCEC  6AEE               	clrf	postinc0,c
  4471  01FCEE  06E8               	decf	wreg,f,c
  4472  01FCF0  E1FD               	bnz	clear_2
  4473                           
  4474                           ; Clear objects allocated to BANK4 (219 bytes)
  4475  01FCF2  EE01  F000         	lfsr	0,__pbssBANK4
  4476  01FCF6  0EDB               	movlw	219
  4477  01FCF8                     clear_3:
  4478  01FCF8  6AEE               	clrf	postinc0,c
  4479  01FCFA  06E8               	decf	wreg,f,c
  4480  01FCFC  E1FD               	bnz	clear_3
  4481                           
  4482                           ; Clear objects allocated to BANK3 (247 bytes)
  4483  01FCFE  EE00  F300         	lfsr	0,__pbssBANK3
  4484  01FD02  0EF7               	movlw	247
  4485  01FD04                     clear_4:
  4486  01FD04  6AEE               	clrf	postinc0,c
  4487  01FD06  06E8               	decf	wreg,f,c
  4488  01FD08  E1FD               	bnz	clear_4
  4489                           
  4490                           ; Clear objects allocated to BANK2 (42 bytes)
  4491  01FD0A  EE00  F2BC         	lfsr	0,__pbssBANK2
  4492  01FD0E  0E2A               	movlw	42
  4493  01FD10                     clear_5:
  4494  01FD10  6AEE               	clrf	postinc0,c
  4495  01FD12  06E8               	decf	wreg,f,c
  4496  01FD14  E1FD               	bnz	clear_5
  4497                           
  4498                           ; Clear objects allocated to BANK1 (89 bytes)
  4499  01FD16  EE00  F1A4         	lfsr	0,__pbssBANK1
  4500  01FD1A  0E59               	movlw	89
  4501  01FD1C                     clear_6:
  4502  01FD1C  6AEE               	clrf	postinc0,c
  4503  01FD1E  06E8               	decf	wreg,f,c
  4504  01FD20  E1FD               	bnz	clear_6
  4505                           
  4506                           ; Clear objects allocated to BANK0 (133 bytes)
  4507  01FD22  EE00  F060         	lfsr	0,__pbssBANK0
  4508  01FD26  0E85               	movlw	133
  4509  01FD28                     clear_7:
  4510  01FD28  6AEE               	clrf	postinc0,c
  4511  01FD2A  06E8               	decf	wreg,f,c
  4512  01FD2C  E1FD               	bnz	clear_7
  4513                           
  4514                           ; Clear objects allocated to COMRAM (14 bytes)
  4515  01FD2E  EE00  F04A         	lfsr	0,__pbssCOMRAM
  4516  01FD32  0E0E               	movlw	14
  4517  01FD34                     clear_8:
  4518  01FD34  6AEE               	clrf	postinc0,c
  4519  01FD36  06E8               	decf	wreg,f,c
  4520  01FD38  E1FD               	bnz	clear_8
  4521                           
  4522                           ;
  4523                           ; Setup IVTBASE
  4524                           ;
  4525  01FD3A  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  4526  01FD3C  6ED5               	movwf	213,c
  4527  01FD3E  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  4528  01FD40  6ED6               	movwf	214,c
  4529  01FD42  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  4530  01FD44  6ED7               	movwf	215,c
  4531  01FD46                     end_of_initialization:
  4532                           	opt callstack 0
  4533  01FD46                     __end_of__initialization:
  4534                           	opt callstack 0
  4535  01FD46  0100               	movlb	0
  4536  01FD48  EF00  F080         	goto	_main	;jump to C main() function
  4537                           
  4538                           	psect	bssCOMRAM
  4539  00004A                     __pbssCOMRAM:
  4540                           	opt callstack 0
  4541  00004A                     _width:
  4542                           	opt callstack 0
  4543  00004A                     	ds	2
  4544  00004C                     _prec:
  4545                           	opt callstack 0
  4546  00004C                     	ds	2
  4547  00004E                     _flags:
  4548                           	opt callstack 0
  4549  00004E                     	ds	2
  4550  000050                     calc_bsoc@log_update_wait:
  4551                           	opt callstack 0
  4552  000050                     	ds	1
  4553  000051                     check_day_time@day_delay:
  4554                           	opt callstack 0
  4555  000051                     	ds	1
  4556  000052                     dac_spi_control@init:
  4557                           	opt callstack 0
  4558  000052                     	ds	1
  4559  000053                     display_history@bwait:
  4560                           	opt callstack 0
  4561  000053                     	ds	1
  4562  000054                     _uart2RxHead:
  4563                           	opt callstack 0
  4564  000054                     	ds	1
  4565  000055                     _uart2TxBufferRemaining:
  4566                           	opt callstack 0
  4567  000055                     	ds	1
  4568  000056                     _uart2TxTail:
  4569                           	opt callstack 0
  4570  000056                     	ds	1
  4571  000057                     _uart1RxHead:
  4572                           	opt callstack 0
  4573  000057                     	ds	1
  4574                           
  4575                           	psect	bssBANK0
  4576  000060                     __pbssBANK0:
  4577                           	opt callstack 0
  4578  000060                     _spi_link:
  4579                           	opt callstack 0
  4580  000060                     	ds	12
  4581  00006C                     ___tzname:
  4582                           	opt callstack 0
  4583  00006C                     	ds	4
  4584  000070                     ___timezone:
  4585                           	opt callstack 0
  4586  000070                     	ds	4
  4587  000074                     floorf@F524:
  4588                           	opt callstack 0
  4589  000074                     	ds	4
  4590  000078                     fabsf@F463:
  4591                           	opt callstack 0
  4592  000078                     	ds	4
  4593  00007C                     ___fpclassifyf@F463:
  4594                           	opt callstack 0
  4595  00007C                     	ds	4
  4596  000080                     calc_ror_data@bcror:
  4597                           	opt callstack 0
  4598  000080                     	ds	4
  4599  000084                     calc_ror_data@bvror:
  4600                           	opt callstack 0
  4601  000084                     	ds	4
  4602  000088                     calc_model_data@bcror:
  4603                           	opt callstack 0
  4604  000088                     	ds	4
  4605  00008C                     calc_model_data@bvror:
  4606                           	opt callstack 0
  4607  00008C                     	ds	4
  4608  000090                     wdtdelay@dcount:
  4609                           	opt callstack 0
  4610  000090                     	ds	4
  4611  000094                     _P:
  4612                           	opt callstack 0
  4613  000094                     	ds	4
  4614  000098                     _TMR3_InterruptHandler:
  4615                           	opt callstack 0
  4616  000098                     	ds	3
  4617  00009B                     _TMR5_InterruptHandler:
  4618                           	opt callstack 0
  4619  00009B                     	ds	3
  4620  00009E                     _TMR6_InterruptHandler:
  4621                           	opt callstack 0
  4622  00009E                     	ds	3
  4623  0000A1                     _ADCC_ADTI_InterruptHandler:
  4624                           	opt callstack 0
  4625  0000A1                     	ds	3
  4626  0000A4                     _ADCC_ADI_InterruptHandler:
  4627                           	opt callstack 0
  4628  0000A4                     	ds	3
  4629  0000A7                     _UART1_RxInterruptHandler:
  4630                           	opt callstack 0
  4631  0000A7                     	ds	3
  4632  0000AA                     _UART2_TxInterruptHandler:
  4633                           	opt callstack 0
  4634  0000AA                     	ds	3
  4635  0000AD                     _UART2_RxInterruptHandler:
  4636                           	opt callstack 0
  4637  0000AD                     	ds	3
  4638  0000B0                     _INT1_InterruptHandler:
  4639                           	opt callstack 0
  4640  0000B0                     	ds	3
  4641  0000B3                     _INT0_InterruptHandler:
  4642                           	opt callstack 0
  4643  0000B3                     	ds	3
  4644  0000B6                     _dst_off:
  4645                           	opt callstack 0
  4646  0000B6                     	ds	2
  4647  0000B8                     ___daylight:
  4648                           	opt callstack 0
  4649  0000B8                     	ds	2
  4650  0000BA                     _nout:
  4651                           	opt callstack 0
  4652  0000BA                     	ds	2
  4653  0000BC                     _t_mbmc:
  4654                           	opt callstack 0
  4655  0000BC                     	ds	2
  4656  0000BE                     TMR3_ISR@CountCallBack:
  4657                           	opt callstack 0
  4658  0000BE                     	ds	2
  4659  0000C0                     _timer3ReloadVal:
  4660                           	opt callstack 0
  4661  0000C0                     	ds	2
  4662  0000C2                     TMR5_ISR@CountCallBack:
  4663                           	opt callstack 0
  4664  0000C2                     	ds	2
  4665  0000C4                     _timer5ReloadVal:
  4666                           	opt callstack 0
  4667  0000C4                     	ds	2
  4668  0000C6                     esr_check@esr_state:
  4669                           	opt callstack 0
  4670  0000C6                     	ds	1
  4671  0000C7                     dac_spi_control@SB:
  4672                           	opt callstack 0
  4673  0000C7                     	ds	1
  4674  0000C8                     dac_spi_control@SC:
  4675                           	opt callstack 0
  4676  0000C8                     	ds	1
  4677  0000C9                     dac_spi_control@S2:
  4678                           	opt callstack 0
  4679  0000C9                     	ds	1
  4680  0000CA                     dac_spi_control@S1:
  4681                           	opt callstack 0
  4682  0000CA                     	ds	1
  4683  0000CB                     dac_spi_control@S0:
  4684                           	opt callstack 0
  4685  0000CB                     	ds	1
  4686  0000CC                     _mode_sw:
  4687                           	opt callstack 0
  4688  0000CC                     	ds	1
  4689  0000CD                     _uart2RxCount:
  4690                           	opt callstack 0
  4691  0000CD                     	ds	1
  4692  0000CE                     _uart2RxTail:
  4693                           	opt callstack 0
  4694  0000CE                     	ds	1
  4695  0000CF                     _uart2TxHead:
  4696                           	opt callstack 0
  4697  0000CF                     	ds	1
  4698  0000D0                     _uart1RxCount:
  4699                           	opt callstack 0
  4700  0000D0                     	ds	1
  4701  0000D1                     _uart1RxTail:
  4702                           	opt callstack 0
  4703  0000D1                     	ds	1
  4704  0000D2                     time@current_time:
  4705                           	opt callstack 0
  4706  0000D2                     	ds	8
  4707  0000DA                     _pclock:
  4708                           	opt callstack 0
  4709  0000DA                     	ds	8
  4710  0000E2                     _crcObj:
  4711                           	opt callstack 0
  4712  0000E2                     	ds	3
  4713                           
  4714                           	psect	bssBANK1
  4715  0001A4                     __pbssBANK1:
  4716                           	opt callstack 0
  4717  0001A4                     _S:
  4718                           	opt callstack 0
  4719  0001A4                     	ds	41
  4720  0001CD                     spinners@s:
  4721                           	opt callstack 0
  4722  0001CD                     	ds	6
  4723  0001D3                     _lock:
  4724                           	opt callstack 0
  4725  0001D3                     	ds	4
  4726  0001D7                     _utctime:
  4727                           	opt callstack 0
  4728  0001D7                     	ds	4
  4729  0001DB                     _r1:
  4730                           	opt callstack 0
  4731  0001DB                     	ds	10
  4732  0001E5                     _r0:
  4733                           	opt callstack 0
  4734  0001E5                     	ds	10
  4735  0001EF                     _dst_name:
  4736                           	opt callstack 0
  4737  0001EF                     	ds	7
  4738  0001F6                     _std_name:
  4739                           	opt callstack 0
  4740  0001F6                     	ds	7
  4741                           
  4742                           	psect	dataBANK1
  4743  000100                     __pdataBANK1:
  4744                           	opt callstack 0
  4745  000100                     _R:
  4746                           	opt callstack 0
  4747  000100                     	ds	155
  4748  00019B                     _H:
  4749                           	opt callstack 0
  4750  00019B                     	ds	9
  4751                           
  4752                           	psect	bssBANK2
  4753  0002BC                     __pbssBANK2:
  4754                           	opt callstack 0
  4755  0002BC                     _tickCount:
  4756                           	opt callstack 0
  4757  0002BC                     	ds	26
  4758  0002D6                     _uart1RxBuffer:
  4759                           	opt callstack 0
  4760  0002D6                     	ds	8
  4761  0002DE                     _seed:
  4762                           	opt callstack 0
  4763  0002DE                     	ds	8
  4764                           
  4765                           	psect	dataBANK2
  4766  000200                     __pdataBANK2:
  4767                           	opt callstack 0
  4768  000200                     stoa@F1166:
  4769                           	opt callstack 0
  4770  000200                     	ds	7
  4771  000207                     _V:
  4772                           	opt callstack 0
  4773  000207                     	ds	181
  4774                           
  4775                           	psect	bssBANK3
  4776  000300                     __pbssBANK3:
  4777                           	opt callstack 0
  4778  000300                     lp_filter@smooth:
  4779                           	opt callstack 0
  4780  000300                     	ds	84
  4781  000354                     _dbuf:
  4782                           	opt callstack 0
  4783  000354                     	ds	80
  4784  0003A4                     	ds	32
  4785  0003C4                     asctime@buf:
  4786                           	opt callstack 0
  4787  0003C4                     	ds	27
  4788  0003DF                     localtime@tm:
  4789                           	opt callstack 0
  4790  0003DF                     	ds	24
  4791                           
  4792                           	psect	bssBANK4
  4793  000400                     __pbssBANK4:
  4794                           	opt callstack 0
  4795  000400                     _uart2TxBuffer:
  4796                           	opt callstack 0
  4797  000400                     	ds	64
  4798  000440                     _r_cal:
  4799                           	opt callstack 0
  4800  000440                     	ds	155
  4801                           
  4802                           	psect	bssBANK5
  4803  000500                     __pbssBANK5:
  4804                           	opt callstack 0
  4805  000500                     _ring_buf2:
  4806                           	opt callstack 0
  4807  000500                     	ds	67
  4808  000543                     _ring_buf1:
  4809                           	opt callstack 0
  4810  000543                     	ds	67
  4811                           
  4812                           	psect	bssBANK6
  4813  000600                     __pbssBANK6:
  4814                           	opt callstack 0
  4815  000600                     _uart2RxBuffer:
  4816                           	opt callstack 0
  4817  000600                     	ds	255
  4818                           
  4819                           	psect	bssBIGRAM
  4820  000A3F                     __pbssBIGRAM:
  4821                           	opt callstack 0
  4822  000A3F                     _D:
  4823                           	opt callstack 0
  4824  000A3F                     	ds	642
  4825                           
  4826                           	psect	dataBIGRAM
  4827  0006FF                     __pdataBIGRAM:
  4828                           	opt callstack 0
  4829  0006FF                     _port_data:
  4830                           	opt callstack 0
  4831  0006FF                     	ds	512
  4832  0008FF                     _C:
  4833                           	opt callstack 0
  4834  0008FF                     	ds	320
  4835                           
  4836                           	psect	cstackBANK0
  4837  0000E5                     __pcstackBANK0:
  4838                           	opt callstack 0
  4839  0000E5                     ??_TMR3_ISR:
  4840                           
  4841                           ; 1 bytes @ 0x0
  4842  0000E5                     	ds	25
  4843                           
  4844                           	psect	cstackCOMRAM
  4845  000001                     __pcstackCOMRAM:
  4846                           	opt callstack 0
  4847  000001                     ??_ADCC_ThresholdISR:
  4848  000001                     
  4849                           ; 1 bytes @ 0x0
  4850  000001                     	ds	5
  4851  000006                     ??_TMR6_ISR:
  4852                           
  4853                           ; 1 bytes @ 0x5
  4854  000006                     	ds	1
  4855  000007                     ??_INT1_ISR:
  4856  000007                     
  4857                           ; 1 bytes @ 0x6
  4858  000007                     	ds	4
  4859  00000B                     ??_TMR5_ISR:
  4860                           
  4861                           ; 1 bytes @ 0xA
  4862  00000B                     	ds	31
  4863                           
  4864 ;;
  4865 ;;Main: autosize = 19, tempsize = 0, incstack = 0, save=0
  4866 ;;
  4867 ;; *************** function _main *****************
  4868 ;; Defined at:
  4869 ;;		line 200 in file "main.c"
  4870 ;; Parameters:    Size  Location     Type
  4871 ;;		None
  4872 ;; Auto vars:     Size  Location     Type
  4873 ;;  i_esr           2  [STACK] unsigned short 
  4874 ;;  esr_temp        4  [STACK] float 
  4875 ;;  i_esr           2  [STACK] unsigned short 
  4876 ;;  shape           1  [STACK] unsigned char 
  4877 ;;  inp_index       1  [STACK] unsigned char 
  4878 ;;  k               1  [STACK] unsigned char 
  4879 ;;  j               1  [STACK] unsigned char 
  4880 ;;  i               1  [STACK] unsigned char 
  4881 ;;  mode            1  [STACK] enum E17179
  4882 ;;  i_ror           1  [STACK] unsigned char 
  4883 ;; Return value:  Size  Location     Type
  4884 ;;                  1  [STACK] void 
  4885 ;; Registers used:
  4886 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
  4887 ;; Tracked objects:
  4888 ;;		On entry : 0/0
  4889 ;;		On exit  : 0/0
  4890 ;;		Unchanged: 0/0
  4891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4896 ;;Total ram usage:        0 bytes
  4897 ;; Hardware stack levels required when called:   28
  4898 ;; This function calls:
  4899 ;;		_SYSTEM_Initialize
  4900 ;;		_StartTimer
  4901 ;;		_TimerDone
  4902 ;;		_WaitMs
  4903 ;;		___fladd
  4904 ;;		___flge
  4905 ;;		___fltol
  4906 ;;		_asctime
  4907 ;;		_calc_model_data
  4908 ;;		_calc_ror_data
  4909 ;;		_check_adc_scan
  4910 ;;		_check_enter_button
  4911 ;;		_check_help
  4912 ;;		_clear_adc_scan
  4913 ;;		_clear_hid_pflags
  4914 ;;		_conv_raw_result
  4915 ;;		_convert_adc_data
  4916 ;;		_current_sensor_cal
  4917 ;;		_display_history
  4918 ;;		_eaDogM_WriteCommand
  4919 ;;		_esr_check
  4920 ;;		_fabsf
  4921 ;;		_get_raw_result
  4922 ;;		_get_switch
  4923 ;;		_get_vterm_ptr
  4924 ;;		_hid_display
  4925 ;;		_init_bsoc
  4926 ;;		_init_display
  4927 ;;		_init_port_dma
  4928 ;;		_load_hist_data
  4929 ;;		_localtime
  4930 ;;		_lp_filter
  4931 ;;		_mode_lamp_dim
  4932 ;;		_read_cal_data
  4933 ;;		_set_dac
  4934 ;;		_set_dac_a
  4935 ;;		_set_dac_b
  4936 ;;		_set_display_info
  4937 ;;		_set_hist_flag
  4938 ;;		_set_load_relay_one
  4939 ;;		_set_load_relay_two
  4940 ;;		_set_time
  4941 ;;		_set_vterm
  4942 ;;		_spinners
  4943 ;;		_sprintf
  4944 ;;		_srand
  4945 ;;		_start_adc_scan
  4946 ;;		_start_switch_handler
  4947 ;;		_static_soc
  4948 ;;		_time
  4949 ;;		_update_cal_data
  4950 ;;		_update_hist_data
  4951 ;;		_update_lcd
  4952 ;;		_wait_lcd_done
  4953 ;;		_write_cal_data
  4954 ;; This function is called by:
  4955 ;;		Startup code after reset
  4956 ;; This function uses a reentrant model
  4957 ;;
  4958                           
  4959                           	psect	text0
  4960  010000                     __ptext0:
  4961                           	opt callstack 0
  4962  010000                     _main:
  4963                           	opt callstack 0
  4964                           
  4965                           ; autosize = 19, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4966  010000  0E13               	movlw	19
  4967  010002  26E1               	addwf	fsr1l,f,c
  4968  010004  0E00               	movlw	0
  4969  010006  22E2               	addwfc	fsr1h,f,c
  4970                           
  4971                           ;main.c: 202:  UI_STATES mode;;main.c: 203:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  4972                           ;stkvar	_inp_index @ sp[(-19)+13]
  4973                           
  4974                           ;incstack = 0
  4975  010008  0EFA               	movlw	-6
  4976  01000A  6AE3               	clrf	plusw1,c
  4977                           
  4978                           ;stkvar	_i @ sp[(-19)+16]
  4979  01000C  0EFD               	movlw	-3
  4980  01000E  6AE3               	clrf	plusw1,c
  4981                           
  4982                           ;stkvar	_j @ sp[(-19)+15]
  4983  010010  0EFC               	movlw	-4
  4984  010012  6AE3               	clrf	plusw1,c
  4985  010014  2AE3               	incf	plusw1,f,c
  4986                           
  4987                           ;stkvar	_k @ sp[(-19)+14]
  4988  010016  0EFB               	movlw	-5
  4989  010018  6AE3               	clrf	plusw1,c
  4990  01001A  82E3               	bsf	plusw1,1,c
  4991                           
  4992                           ;main.c: 206:  SYSTEM_Initialize();
  4993  01001C  EC06  F00E         	call	_SYSTEM_Initialize	;wreg free
  4994                           
  4995                           ; BSR set to: 60
  4996                           ;main.c: 209:  (INTCON0bits.GIEH = 1);
  4997  010020  8ED2               	bsf	210,7,c	;volatile
  4998                           
  4999                           ; BSR set to: 60
  5000                           ;main.c: 212:  (INTCON0bits.GIEL = 1);
  5001  010022  8CD2               	bsf	210,6,c	;volatile
  5002                           
  5003                           ; BSR set to: 60
  5004                           ;main.c: 214:  V.ui_state = UI_STATE_INIT;
  5005  010024  0102               	movlb	2	; () banked
  5006  010026  6B07               	clrf	_V& (0+255),b	;volatile
  5007                           
  5008                           ; BSR set to: 2
  5009                           ;main.c: 219:  WaitMs(300);
  5010  010028  0E2C               	movlw	44
  5011  01002A  6EE6               	movwf	postinc1,c
  5012  01002C  0E01               	movlw	1
  5013  01002E  6EE6               	movwf	postinc1,c
  5014  010030  ECDD  F010         	call	_WaitMs	;wreg free
  5015                           
  5016                           ;main.c: 220:  if (PORTBbits.RB0) {
  5017  010034  A0CB               	btfss	203,0,c	;volatile
  5018  010036  D004               	goto	l17456
  5019                           
  5020                           ;main.c: 221:   mode = UI_STATE_HOST;
  5021                           ;stkvar	_mode @ sp[(-19)+17]
  5022  010038  0EFE               	movlw	-2
  5023  01003A  6AE3               	clrf	plusw1,c
  5024  01003C  2AE3               	incf	plusw1,f,c
  5025                           
  5026                           ;main.c: 222:  } else {
  5027  01003E  D004               	goto	l17458
  5028  010040                     l17456:
  5029                           
  5030                           ;main.c: 223:   mode = UI_STATE_LOG;
  5031                           ;stkvar	_mode @ sp[(-19)+17]
  5032  010040  0EFE               	movlw	-2
  5033  010042  6AE3               	clrf	plusw1,c
  5034  010044  80E3               	bsf	plusw1,0,c
  5035  010046  82E3               	bsf	plusw1,1,c	;indir
  5036  010048                     l17458:
  5037                           
  5038                           ;main.c: 226:  if (mode == UI_STATE_HOST) {
  5039                           ;stkvar	_mode @ sp[(-19)+17]
  5040  010048  0EFE               	movlw	-2
  5041  01004A  04E3               	decf	plusw1,w,c
  5042  01004C  A4D8               	btfss	status,2,c
  5043  01004E  D007               	goto	l1455
  5044                           
  5045                           ;main.c: 227:   do { LATDbits.LATD0 = 1; } while(0);
  5046  010050  80BD               	bsf	189,0,c	;volatile
  5047                           
  5048                           ;main.c: 228:   V.mode_pwm = 70;
  5049  010052  0E00               	movlw	0
  5050  010054  0102               	movlb	2	; () banked
  5051  010056  6F9A               	movwf	(_V+147)& (0+255),b	;volatile
  5052  010058  0E46               	movlw	70
  5053  01005A  6F99               	movwf	(_V+146)& (0+255),b	;volatile
  5054                           
  5055                           ;main.c: 229:  } else {
  5056  01005C  D004               	goto	l17462
  5057  01005E                     l1455:
  5058  01005E  90BD               	bcf	189,0,c	;volatile
  5059                           
  5060                           ;main.c: 231:   V.mode_pwm = 0;
  5061  010060  0102               	movlb	2	; () banked
  5062  010062  6B99               	clrf	(_V+146)& (0+255),b	;volatile
  5063  010064  6B9A               	clrf	(_V+147)& (0+255),b	;volatile
  5064  010066                     l17462:
  5065                           
  5066                           ; BSR set to: 2
  5067                           ;main.c: 233:  mode_lamp_dim(V.mode_pwm);
  5068  010066  0060  FA67  FFE6   	movff	_V+146,postinc1
  5069  01006C  0060  FA6B  FFE6   	movff	_V+147,postinc1
  5070  010072  EC89  F014         	call	_mode_lamp_dim	;wreg free
  5071  010076  EFB6  F084         	goto	l17628
  5072  01007A                     l17464:
  5073                           
  5074                           ; BSR set to: 2
  5075                           ;main.c: 241:    init_port_dma();
  5076  01007A  EC79  F011         	call	_init_port_dma	;wreg free
  5077                           
  5078                           ; BSR set to: 59
  5079                           ;main.c: 243:    init_display();
  5080  01007E  EC4A  F001         	call	_init_display	;wreg free
  5081                           
  5082                           ; BSR set to: 61
  5083                           ;main.c: 244:    eaDogM_WriteCommand(0b00001100);
  5084  010082  0E0C               	movlw	12
  5085  010084  6EE6               	movwf	postinc1,c
  5086  010086  EC11  F015         	call	_eaDogM_WriteCommand	;wreg free
  5087                           
  5088                           ; BSR set to: 61
  5089                           ;main.c: 245:    set_dac();
  5090  01008A  EC12  F004         	call	_set_dac	;wreg free
  5091                           
  5092                           ;main.c: 249:    set_load_relay_one(1);
  5093  01008E  0E01               	movlw	1
  5094  010090  6EE6               	movwf	postinc1,c
  5095  010092  ECF1  F014         	call	_set_load_relay_one	;wreg free
  5096                           
  5097                           ;main.c: 250:    set_load_relay_two(1);
  5098  010096  0E01               	movlw	1
  5099  010098  6EE6               	movwf	postinc1,c
  5100  01009A  ECE9  F014         	call	_set_load_relay_two	;wreg free
  5101                           
  5102                           ;main.c: 252:    V.ui_state = mode;
  5103                           ;stkvar	_mode @ sp[(-19)+17]
  5104  01009E  0EFE               	movlw	-2
  5105  0100A0  006F FF8C  F207    	movff	plusw1,_V	;volatile
  5106                           
  5107                           ;main.c: 253:    srand(1957);
  5108  0100A6  0EA5               	movlw	165
  5109  0100A8  6EE6               	movwf	postinc1,c
  5110  0100AA  0E07               	movlw	7
  5111  0100AC  6EE6               	movwf	postinc1,c
  5112  0100AE  ECF8  F010         	call	_srand	;wreg free
  5113                           
  5114                           ; BSR set to: 2
  5115                           ;main.c: 254:    set_vterm(0);
  5116  0100B2  0E00               	movlw	0
  5117  0100B4  6EE6               	movwf	postinc1,c
  5118  0100B6  EC51  F014         	call	_set_vterm	;wreg free
  5119                           
  5120                           ;main.c: 255:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON      ");
  5121  0100BA  0E1D               	movlw	low STR_1
  5122  0100BC  6EE6               	movwf	postinc1,c
  5123  0100BE  0EFF               	movlw	high STR_1
  5124  0100C0  6EE6               	movwf	postinc1,c
  5125  0100C2  0E00               	movlw	0
  5126  0100C4  6EE6               	movwf	postinc1,c
  5127  0100C6  0E00               	movlw	0
  5128  0100C8  6EE6               	movwf	postinc1,c
  5129  0100CA  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  5130  0100CE  0060  F0AB  FFE6   	movff	btemp,postinc1
  5131  0100D4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5132  0100DA  0E04               	movlw	4
  5133  0100DC  6EE6               	movwf	postinc1,c
  5134  0100DE  ECA5  F0FD         	call	_sprintf	;wreg free
  5135                           
  5136                           ; BSR set to: 0
  5137                           ;main.c: 256:    sprintf(get_vterm_ptr(1, 0), " Version %s         ", "1.27");
  5138  0100E2  0ED5               	movlw	low STR_3
  5139  0100E4  6EE6               	movwf	postinc1,c
  5140  0100E6  0EFF               	movlw	high STR_3
  5141  0100E8  6EE6               	movwf	postinc1,c
  5142  0100EA  0E08               	movlw	low STR_2
  5143  0100EC  6EE6               	movwf	postinc1,c
  5144  0100EE  0EFF               	movlw	high STR_2
  5145  0100F0  6EE6               	movwf	postinc1,c
  5146  0100F2  0E00               	movlw	0
  5147  0100F4  6EE6               	movwf	postinc1,c
  5148  0100F6  0E01               	movlw	1
  5149  0100F8  6EE6               	movwf	postinc1,c
  5150  0100FA  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  5151  0100FE  0060  F0AB  FFE6   	movff	btemp,postinc1
  5152  010104  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5153  01010A  0E06               	movlw	6
  5154  01010C  6EE6               	movwf	postinc1,c
  5155  01010E  ECA5  F0FD         	call	_sprintf	;wreg free
  5156                           
  5157                           ; BSR set to: 0
  5158                           ;main.c: 257:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK           ");
  5159  010112  0EF3               	movlw	low STR_4
  5160  010114  6EE6               	movwf	postinc1,c
  5161  010116  0EFE               	movlw	high STR_4
  5162  010118  6EE6               	movwf	postinc1,c
  5163  01011A  0E00               	movlw	0
  5164  01011C  6EE6               	movwf	postinc1,c
  5165  01011E  0E02               	movlw	2
  5166  010120  6EE6               	movwf	postinc1,c
  5167  010122  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  5168  010126  0060  F0AB  FFE6   	movff	btemp,postinc1
  5169  01012C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5170  010132  0E04               	movlw	4
  5171  010134  6EE6               	movwf	postinc1,c
  5172  010136  ECA5  F0FD         	call	_sprintf	;wreg free
  5173                           
  5174                           ; BSR set to: 0
  5175                           ;main.c: 258:    sprintf(get_vterm_ptr(3, 0), "                    ");
  5176  01013A  0EB9               	movlw	low (STR_20+2)
  5177  01013C  6EE6               	movwf	postinc1,c
  5178  01013E  0EFB               	movlw	high (STR_20+2)
  5179  010140  6EE6               	movwf	postinc1,c
  5180  010142  0E00               	movlw	0
  5181  010144  6EE6               	movwf	postinc1,c
  5182  010146  0E03               	movlw	3
  5183  010148  6EE6               	movwf	postinc1,c
  5184  01014A  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  5185  01014E  0060  F0AB  FFE6   	movff	btemp,postinc1
  5186  010154  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5187  01015A  0E04               	movlw	4
  5188  01015C  6EE6               	movwf	postinc1,c
  5189  01015E  ECA5  F0FD         	call	_sprintf	;wreg free
  5190                           
  5191                           ; BSR set to: 0
  5192                           ;main.c: 259:    sprintf(get_vterm_ptr(0, 1), "                    ");
  5193  010162  0EB9               	movlw	low (STR_20+2)
  5194  010164  6EE6               	movwf	postinc1,c
  5195  010166  0EFB               	movlw	high (STR_20+2)
  5196  010168  6EE6               	movwf	postinc1,c
  5197  01016A  0E01               	movlw	1
  5198  01016C  6EE6               	movwf	postinc1,c
  5199  01016E  0E00               	movlw	0
  5200  010170  6EE6               	movwf	postinc1,c
  5201  010172  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  5202  010176  0060  F0AB  FFE6   	movff	btemp,postinc1
  5203  01017C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5204  010182  0E04               	movlw	4
  5205  010184  6EE6               	movwf	postinc1,c
  5206  010186  ECA5  F0FD         	call	_sprintf	;wreg free
  5207                           
  5208                           ; BSR set to: 0
  5209                           ;main.c: 260:    sprintf(get_vterm_ptr(1, 1), "                    ");
  5210  01018A  0EB9               	movlw	low (STR_20+2)
  5211  01018C  6EE6               	movwf	postinc1,c
  5212  01018E  0EFB               	movlw	high (STR_20+2)
  5213  010190  6EE6               	movwf	postinc1,c
  5214  010192  0E01               	movlw	1
  5215  010194  6EE6               	movwf	postinc1,c
  5216  010196  0E01               	movlw	1
  5217  010198  6EE6               	movwf	postinc1,c
  5218  01019A  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  5219  01019E  0060  F0AB  FFE6   	movff	btemp,postinc1
  5220  0101A4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5221  0101AA  0E04               	movlw	4
  5222  0101AC  6EE6               	movwf	postinc1,c
  5223  0101AE  ECA5  F0FD         	call	_sprintf	;wreg free
  5224                           
  5225                           ; BSR set to: 0
  5226                           ;main.c: 261:    sprintf(get_vterm_ptr(2, 1), "                    ");
  5227  0101B2  0EB9               	movlw	low (STR_20+2)
  5228  0101B4  6EE6               	movwf	postinc1,c
  5229  0101B6  0EFB               	movlw	high (STR_20+2)
  5230  0101B8  6EE6               	movwf	postinc1,c
  5231  0101BA  0E01               	movlw	1
  5232  0101BC  6EE6               	movwf	postinc1,c
  5233  0101BE  0E02               	movlw	2
  5234  0101C0  6EE6               	movwf	postinc1,c
  5235  0101C2  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  5236  0101C6  0060  F0AB  FFE6   	movff	btemp,postinc1
  5237  0101CC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5238  0101D2  0E04               	movlw	4
  5239  0101D4  6EE6               	movwf	postinc1,c
  5240  0101D6  ECA5  F0FD         	call	_sprintf	;wreg free
  5241                           
  5242                           ; BSR set to: 0
  5243                           ;main.c: 262:    sprintf(get_vterm_ptr(3, 1), "                    ");
  5244  0101DA  0EB9               	movlw	low (STR_20+2)
  5245  0101DC  6EE6               	movwf	postinc1,c
  5246  0101DE  0EFB               	movlw	high (STR_20+2)
  5247  0101E0  6EE6               	movwf	postinc1,c
  5248  0101E2  0E01               	movlw	1
  5249  0101E4  6EE6               	movwf	postinc1,c
  5250  0101E6  0E03               	movlw	3
  5251  0101E8  6EE6               	movwf	postinc1,c
  5252  0101EA  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  5253  0101EE  0060  F0AB  FFE6   	movff	btemp,postinc1
  5254  0101F4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5255  0101FA  0E04               	movlw	4
  5256  0101FC  6EE6               	movwf	postinc1,c
  5257  0101FE  ECA5  F0FD         	call	_sprintf	;wreg free
  5258                           
  5259                           ; BSR set to: 0
  5260                           ;main.c: 263:    sprintf(get_vterm_ptr(0, 2), "                    ");
  5261  010202  0EB9               	movlw	low (STR_20+2)
  5262  010204  6EE6               	movwf	postinc1,c
  5263  010206  0EFB               	movlw	high (STR_20+2)
  5264  010208  6EE6               	movwf	postinc1,c
  5265  01020A  0E02               	movlw	2
  5266  01020C  6EE6               	movwf	postinc1,c
  5267  01020E  0E00               	movlw	0
  5268  010210  6EE6               	movwf	postinc1,c
  5269  010212  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  5270  010216  0060  F0AB  FFE6   	movff	btemp,postinc1
  5271  01021C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5272  010222  0E04               	movlw	4
  5273  010224  6EE6               	movwf	postinc1,c
  5274  010226  ECA5  F0FD         	call	_sprintf	;wreg free
  5275                           
  5276                           ; BSR set to: 0
  5277                           ;main.c: 264:    sprintf(get_vterm_ptr(1, 2), "                    ");
  5278  01022A  0EB9               	movlw	low (STR_20+2)
  5279  01022C  6EE6               	movwf	postinc1,c
  5280  01022E  0EFB               	movlw	high (STR_20+2)
  5281  010230  6EE6               	movwf	postinc1,c
  5282  010232  0E02               	movlw	2
  5283  010234  6EE6               	movwf	postinc1,c
  5284  010236  0E01               	movlw	1
  5285  010238  6EE6               	movwf	postinc1,c
  5286  01023A  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  5287  01023E  0060  F0AB  FFE6   	movff	btemp,postinc1
  5288  010244  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5289  01024A  0E04               	movlw	4
  5290  01024C  6EE6               	movwf	postinc1,c
  5291  01024E  ECA5  F0FD         	call	_sprintf	;wreg free
  5292                           
  5293                           ; BSR set to: 0
  5294                           ;main.c: 265:    sprintf(get_vterm_ptr(2, 2), "                    ");
  5295  010252  0EB9               	movlw	low (STR_20+2)
  5296  010254  6EE6               	movwf	postinc1,c
  5297  010256  0EFB               	movlw	high (STR_20+2)
  5298  010258  6EE6               	movwf	postinc1,c
  5299  01025A  0E02               	movlw	2
  5300  01025C  6EE6               	movwf	postinc1,c
  5301  01025E  0E02               	movlw	2
  5302  010260  6EE6               	movwf	postinc1,c
  5303  010262  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  5304  010266  0060  F0AB  FFE6   	movff	btemp,postinc1
  5305  01026C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5306  010272  0E04               	movlw	4
  5307  010274  6EE6               	movwf	postinc1,c
  5308  010276  ECA5  F0FD         	call	_sprintf	;wreg free
  5309                           
  5310                           ; BSR set to: 0
  5311                           ;main.c: 266:    sprintf(get_vterm_ptr(3, 2), "                    ");
  5312  01027A  0EB9               	movlw	low (STR_20+2)
  5313  01027C  6EE6               	movwf	postinc1,c
  5314  01027E  0EFB               	movlw	high (STR_20+2)
  5315  010280  6EE6               	movwf	postinc1,c
  5316  010282  0E02               	movlw	2
  5317  010284  6EE6               	movwf	postinc1,c
  5318  010286  0E03               	movlw	3
  5319  010288  6EE6               	movwf	postinc1,c
  5320  01028A  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  5321  01028E  0060  F0AB  FFE6   	movff	btemp,postinc1
  5322  010294  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5323  01029A  0E04               	movlw	4
  5324  01029C  6EE6               	movwf	postinc1,c
  5325  01029E  ECA5  F0FD         	call	_sprintf	;wreg free
  5326                           
  5327                           ; BSR set to: 0
  5328                           ;main.c: 267:    update_lcd(0);
  5329  0102A2  0E00               	movlw	0
  5330  0102A4  6EE6               	movwf	postinc1,c
  5331  0102A6  EC57  F0F6         	call	_update_lcd	;wreg free
  5332                           
  5333                           ;main.c: 268:    WaitMs(1000);
  5334  0102AA  0EE8               	movlw	232
  5335  0102AC  6EE6               	movwf	postinc1,c
  5336  0102AE  0E03               	movlw	3
  5337  0102B0  6EE6               	movwf	postinc1,c
  5338  0102B2  ECDD  F010         	call	_WaitMs	;wreg free
  5339                           
  5340                           ;main.c: 269:    StartTimer(TMR_DISPLAY, 250);
  5341  0102B6  0EFA               	movlw	250
  5342  0102B8  6EE6               	movwf	postinc1,c
  5343  0102BA  0E00               	movlw	0
  5344  0102BC  6EE6               	movwf	postinc1,c
  5345  0102BE  0E0A               	movlw	10
  5346  0102C0  6EE6               	movwf	postinc1,c
  5347  0102C2  ECD0  F00F         	call	_StartTimer	;wreg free
  5348                           
  5349                           ;main.c: 270:    StartTimer(TMR_ADC, 200);
  5350  0102C6  0EC8               	movlw	200
  5351  0102C8  6EE6               	movwf	postinc1,c
  5352  0102CA  0E00               	movlw	0
  5353  0102CC  6EE6               	movwf	postinc1,c
  5354  0102CE  0E01               	movlw	1
  5355  0102D0  6EE6               	movwf	postinc1,c
  5356  0102D2  ECD0  F00F         	call	_StartTimer	;wreg free
  5357                           
  5358                           ;main.c: 271:    StartTimer(TMR_INFO, 3000);
  5359  0102D6  0EB8               	movlw	184
  5360  0102D8  6EE6               	movwf	postinc1,c
  5361  0102DA  0E0B               	movlw	11
  5362  0102DC  6EE6               	movwf	postinc1,c
  5363  0102DE  0E07               	movlw	7
  5364  0102E0  6EE6               	movwf	postinc1,c
  5365  0102E2  ECD0  F00F         	call	_StartTimer	;wreg free
  5366                           
  5367                           ;main.c: 272:    StartTimer(TMR_FLIPPER, 1500);
  5368  0102E6  0EDC               	movlw	220
  5369  0102E8  6EE6               	movwf	postinc1,c
  5370  0102EA  0E05               	movlw	5
  5371  0102EC  6EE6               	movwf	postinc1,c
  5372  0102EE  0E0B               	movlw	11
  5373  0102F0  6EE6               	movwf	postinc1,c
  5374  0102F2  ECD0  F00F         	call	_StartTimer	;wreg free
  5375                           
  5376                           ;main.c: 273:    StartTimer(TMR_HELPDIS, 3000);
  5377  0102F6  0EB8               	movlw	184
  5378  0102F8  6EE6               	movwf	postinc1,c
  5379  0102FA  0E0B               	movlw	11
  5380  0102FC  6EE6               	movwf	postinc1,c
  5381  0102FE  0E09               	movlw	9
  5382  010300  6EE6               	movwf	postinc1,c
  5383  010302  ECD0  F00F         	call	_StartTimer	;wreg free
  5384                           
  5385                           ;main.c: 275:    start_adc_scan();
  5386  010306  EC0F  F00C         	call	_start_adc_scan	;wreg free
  5387                           
  5388                           ;main.c: 276:    start_switch_handler();
  5389  01030A  EC13  F014         	call	_start_switch_handler	;wreg free
  5390                           
  5391                           ; BSR set to: 57
  5392                           ;main.c: 277:    WaitMs(1000);
  5393  01030E  0EE8               	movlw	232
  5394  010310  6EE6               	movwf	postinc1,c
  5395  010312  0E03               	movlw	3
  5396  010314  6EE6               	movwf	postinc1,c
  5397  010316  ECDD  F010         	call	_WaitMs	;wreg free
  5398                           
  5399                           ;main.c: 282:    if (read_cal_data()) {
  5400  01031A  EC5C  F0EC         	call	_read_cal_data	;wreg free
  5401  01031E  502A               	movf	btemp^0,w,c
  5402  010320  B4D8               	btfsc	status,2,c
  5403  010322  D07C               	goto	l17538
  5404                           
  5405                           ;main.c: 283:     update_cal_data();
  5406  010324  EC89  F00D         	call	_update_cal_data	;wreg free
  5407                           
  5408                           ; BSR set to: 1
  5409                           ;main.c: 284:     if (update_hist_data(1, &C.hist[0]) && (C.hist[0].pclock > time(((void
      +                          *)0))))
  5410  010328  0EB8               	movlw	low (_C+185)
  5411  01032A  6EE6               	movwf	postinc1,c
  5412  01032C  0E09               	movlw	high (_C+185)
  5413  01032E  6EE6               	movwf	postinc1,c
  5414  010330  0E01               	movlw	1
  5415  010332  6EE6               	movwf	postinc1,c
  5416  010334  ECB4  F009         	call	_update_hist_data	;wreg free
  5417  010338  502A               	movf	btemp^0,w,c
  5418  01033A  B4D8               	btfsc	status,2,c
  5419  01033C  D05A               	goto	l17536
  5420  01033E  0E00               	movlw	0
  5421  010340  6EE6               	movwf	postinc1,c
  5422  010342  0E00               	movlw	0
  5423  010344  6EE6               	movwf	postinc1,c
  5424  010346  ECD3  F00C         	call	_time	;wreg free
  5425  01034A  52E5               	movf	postdec1,f,c
  5426  01034C  006F FF9C  F041    	movff	indf1,btemp+23
  5427  010352  52E5               	movf	postdec1,f,c
  5428  010354  006F FF9C  F040    	movff	indf1,btemp+22
  5429  01035A  52E5               	movf	postdec1,f,c
  5430  01035C  006F FF9C  F03F    	movff	indf1,btemp+21
  5431  010362  52E5               	movf	postdec1,f,c
  5432  010364  006F FF9C  F03E    	movff	indf1,btemp+20
  5433  01036A  52E5               	movf	postdec1,f,c
  5434  01036C  006F FF9C  F03D    	movff	indf1,btemp+19
  5435  010372  52E5               	movf	postdec1,f,c
  5436  010374  006F FF9C  F03C    	movff	indf1,btemp+18
  5437  01037A  52E5               	movf	postdec1,f,c
  5438  01037C  006F FF9C  F03B    	movff	indf1,btemp+17
  5439  010382  52E5               	movf	postdec1,f,c
  5440  010384  006F FF9C  F03A    	movff	indf1,btemp+16
  5441  01038A  EE22  F1C8         	lfsr	2,_C+201	;volatile
  5442  01038E  50DE               	movf	postinc2,w,c
  5443  010390  5C3A               	subwf	(btemp+16)^0,w,c
  5444  010392  50DE               	movf	postinc2,w,c
  5445  010394  583B               	subwfb	(btemp+17)^0,w,c
  5446  010396  50DE               	movf	postinc2,w,c
  5447  010398  583C               	subwfb	(btemp+18)^0,w,c
  5448  01039A  50DE               	movf	postinc2,w,c
  5449  01039C  583D               	subwfb	(btemp+19)^0,w,c
  5450  01039E  50DE               	movf	postinc2,w,c
  5451  0103A0  583E               	subwfb	(btemp+20)^0,w,c
  5452  0103A2  50DE               	movf	postinc2,w,c
  5453  0103A4  583F               	subwfb	(btemp+21)^0,w,c
  5454  0103A6  50DE               	movf	postinc2,w,c
  5455  0103A8  5840               	subwfb	(btemp+22)^0,w,c
  5456  0103AA  5041               	movf	(btemp+23)^0,w,c
  5457  0103AC  0A80               	xorlw	128
  5458  0103AE  6E2A               	movwf	btemp^0,c
  5459  0103B0  50DE               	movf	postinc2,w,c
  5460  0103B2  0A80               	xorlw	128
  5461  0103B4  582A               	subwfb	btemp^0,w,c
  5462  0103B6  B0D8               	btfsc	status,0,c
  5463  0103B8  D01C               	goto	l17536
  5464                           
  5465                           ; BSR set to: 57
  5466                           ;main.c: 285:      set_time(C.hist[0].pclock);
  5467  0103BA  EE22  F1C8         	lfsr	2,_C+201	;volatile
  5468  0103BE  006F FF7B FFE6     	movff	postinc2,postinc1
  5469  0103C4  006F FF7B FFE6     	movff	postinc2,postinc1
  5470  0103CA  006F FF7B FFE6     	movff	postinc2,postinc1
  5471  0103D0  006F FF7B FFE6     	movff	postinc2,postinc1
  5472  0103D6  006F FF7B FFE6     	movff	postinc2,postinc1
  5473  0103DC  006F FF7B FFE6     	movff	postinc2,postinc1
  5474  0103E2  006F FF7B FFE6     	movff	postinc2,postinc1
  5475  0103E8  006F FF7B FFE6     	movff	postinc2,postinc1
  5476  0103EE  ECC2  F010         	call	_set_time	;wreg free
  5477  0103F2                     l17536:
  5478                           
  5479                           ;main.c: 287:     sprintf(get_vterm_ptr(2, 0), "Read EEPROM DATA    ");
  5480  0103F2  0E32               	movlw	low STR_14
  5481  0103F4  6EE6               	movwf	postinc1,c
  5482  0103F6  0EFF               	movlw	high STR_14
  5483  0103F8  6EE6               	movwf	postinc1,c
  5484  0103FA  0E00               	movlw	0
  5485  0103FC  6EE6               	movwf	postinc1,c
  5486  0103FE  0E02               	movlw	2
  5487  010400  6EE6               	movwf	postinc1,c
  5488  010402  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  5489  010406  0060  F0AB  FFE6   	movff	btemp,postinc1
  5490  01040C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5491  010412  0E04               	movlw	4
  5492  010414  6EE6               	movwf	postinc1,c
  5493  010416  ECA5  F0FD         	call	_sprintf	;wreg free
  5494                           
  5495                           ;main.c: 288:    } else {
  5496  01041A  D014               	goto	l1462
  5497  01041C                     l17538:
  5498                           
  5499                           ;main.c: 289:     sprintf(get_vterm_ptr(2, 0), "Invalid EEPROM DATA ");
  5500  01041C  0E5C               	movlw	low STR_15
  5501  01041E  6EE6               	movwf	postinc1,c
  5502  010420  0EFF               	movlw	high STR_15
  5503  010422  6EE6               	movwf	postinc1,c
  5504  010424  0E00               	movlw	0
  5505  010426  6EE6               	movwf	postinc1,c
  5506  010428  0E02               	movlw	2
  5507  01042A  6EE6               	movwf	postinc1,c
  5508  01042C  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  5509  010430  0060  F0AB  FFE6   	movff	btemp,postinc1
  5510  010436  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5511  01043C  0E04               	movlw	4
  5512  01043E  6EE6               	movwf	postinc1,c
  5513  010440  ECA5  F0FD         	call	_sprintf	;wreg free
  5514  010444                     l1462:
  5515                           
  5516                           ; BSR set to: 0
  5517                           ;main.c: 291:    update_lcd(0);
  5518  010444  0E00               	movlw	0
  5519  010446  6EE6               	movwf	postinc1,c
  5520  010448  EC57  F0F6         	call	_update_lcd	;wreg free
  5521                           
  5522                           ;main.c: 292:    WaitMs(2000);
  5523  01044C  0ED0               	movlw	208
  5524  01044E  6EE6               	movwf	postinc1,c
  5525  010450  0E07               	movlw	7
  5526  010452  6EE6               	movwf	postinc1,c
  5527  010454  ECDD  F010         	call	_WaitMs	;wreg free
  5528                           
  5529                           ;main.c: 294:    i_ror = 1;
  5530                           ;stkvar	_i_ror @ sp[(-19)+18]
  5531  010458  0EFF               	movlw	-1
  5532  01045A  6AE3               	clrf	plusw1,c
  5533  01045C  2AE3               	incf	plusw1,f,c
  5534  01045E                     l17544:
  5535                           
  5536                           ;main.c: 296:     calc_ror_data();
  5537  01045E  EC4D  F0F1         	call	_calc_ror_data	;wreg free
  5538                           
  5539                           ;main.c: 297:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f             ", conv_raw_result(
      +                          V_BAT, CONV));
  5540  010462  0E00               	movlw	0
  5541  010464  6EE6               	movwf	postinc1,c
  5542  010466  0E04               	movlw	4
  5543  010468  6EE6               	movwf	postinc1,c
  5544  01046A  ECCB  F0C3         	call	_conv_raw_result	;wreg free
  5545  01046E  0060  F0AB  FFE6   	movff	btemp,postinc1
  5546  010474  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5547  01047A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  5548  010480  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  5549  010486  0E69               	movlw	low STR_16
  5550  010488  6EE6               	movwf	postinc1,c
  5551  01048A  0EFD               	movlw	high STR_16
  5552  01048C  6EE6               	movwf	postinc1,c
  5553  01048E  0E00               	movlw	0
  5554  010490  6EE6               	movwf	postinc1,c
  5555  010492  0E01               	movlw	1
  5556  010494  6EE6               	movwf	postinc1,c
  5557  010496  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  5558  01049A  0060  F0AB  FFE6   	movff	btemp,postinc1
  5559  0104A0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5560  0104A6  0E08               	movlw	8
  5561  0104A8  6EE6               	movwf	postinc1,c
  5562  0104AA  ECA5  F0FD         	call	_sprintf	;wreg free
  5563                           
  5564                           ; BSR set to: 0
  5565                           ;main.c: 298:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f          ", spinners(5, 
      +                          0), i_ror, C.bv_ror);
  5566  0104AE  EE22  F16B         	lfsr	2,_C+108	;volatile
  5567  0104B2  006F FF7B FFE6     	movff	postinc2,postinc1
  5568  0104B8  006F FF7B FFE6     	movff	postinc2,postinc1
  5569  0104BE  006F FF7B FFE6     	movff	postinc2,postinc1
  5570  0104C4  006F FF7B FFE6     	movff	postinc2,postinc1
  5571                           
  5572                           ;stkvar	_i_ror @ sp[(-23)+18]
  5573  0104CA  0EFB               	movlw	-5
  5574  0104CC  50E3               	movf	plusw1,w,c
  5575  0104CE  6EE6               	movwf	postinc1,c
  5576  0104D0  0E00               	movlw	0
  5577  0104D2  6EE6               	movwf	postinc1,c
  5578  0104D4  0E00               	movlw	0
  5579  0104D6  6EE6               	movwf	postinc1,c
  5580  0104D8  0E05               	movlw	5
  5581  0104DA  6EE6               	movwf	postinc1,c
  5582  0104DC  EC21  F0FF         	call	_spinners	;wreg free
  5583  0104E0  502A               	movf	btemp^0,w,c
  5584  0104E2  6EE6               	movwf	postinc1,c
  5585  0104E4  0E00               	movlw	0
  5586  0104E6  6EE6               	movwf	postinc1,c
  5587  0104E8  0E25               	movlw	low STR_17
  5588  0104EA  6EE6               	movwf	postinc1,c
  5589  0104EC  0EFB               	movlw	high STR_17
  5590  0104EE  6EE6               	movwf	postinc1,c
  5591  0104F0  0E00               	movlw	0
  5592  0104F2  6EE6               	movwf	postinc1,c
  5593  0104F4  0E02               	movlw	2
  5594  0104F6  6EE6               	movwf	postinc1,c
  5595  0104F8  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  5596  0104FC  0060  F0AB  FFE6   	movff	btemp,postinc1
  5597  010502  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5598  010508  0E0C               	movlw	12
  5599  01050A  6EE6               	movwf	postinc1,c
  5600  01050C  ECA5  F0FD         	call	_sprintf	;wreg free
  5601                           
  5602                           ; BSR set to: 0
  5603                           ;main.c: 299:     update_lcd(0);
  5604  010510  0E00               	movlw	0
  5605  010512  6EE6               	movwf	postinc1,c
  5606  010514  EC57  F0F6         	call	_update_lcd	;wreg free
  5607                           
  5608                           ;main.c: 300:     clear_adc_scan();
  5609  010518  EC73  F015         	call	_clear_adc_scan	;wreg free
  5610                           
  5611                           ; BSR set to: 1
  5612                           ;main.c: 301:     start_adc_scan();
  5613  01051C  EC0F  F00C         	call	_start_adc_scan	;wreg free
  5614                           
  5615                           ;main.c: 302:     WaitMs(2000);
  5616  010520  0ED0               	movlw	208
  5617  010522  6EE6               	movwf	postinc1,c
  5618  010524  0E07               	movlw	7
  5619  010526  6EE6               	movwf	postinc1,c
  5620  010528  ECDD  F010         	call	_WaitMs	;wreg free
  5621                           
  5622                           ;main.c: 305:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  5623                           ;stkvar	_i_ror @ sp[(-19)+18]
  5624  01052C  0EFF               	movlw	-1
  5625  01052E  006F FF8C  F035    	movff	plusw1,btemp+11
  5626  010534  2A35               	incf	(btemp+11)^0,f,c
  5627  010536  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  5628  01053C  0635               	decf	(btemp+11)^0,f,c
  5629  01053E  0E1E               	movlw	30
  5630  010540  6035               	cpfslt	(btemp+11)^0,c
  5631  010542  D01A               	goto	u17110
  5632  010544  EE22  F16B         	lfsr	2,_C+108	;volatile
  5633  010548  006F FF7B FFE6     	movff	postinc2,postinc1
  5634  01054E  006F FF7B FFE6     	movff	postinc2,postinc1
  5635  010554  006F FF7B FFE6     	movff	postinc2,postinc1
  5636  01055A  006F FF7B FFE6     	movff	postinc2,postinc1
  5637  010560  0E42               	movlw	66
  5638  010562  6EE6               	movwf	postinc1,c
  5639  010564  0E60               	movlw	96
  5640  010566  6EE6               	movwf	postinc1,c
  5641  010568  0E65               	movlw	101
  5642  01056A  6EE6               	movwf	postinc1,c
  5643  01056C  0E3C               	movlw	60
  5644  01056E  6EE6               	movwf	postinc1,c
  5645  010570  ECF5  F0F4         	call	___flge	;wreg free
  5646  010574  A02A               	btfss	btemp& (0+255),0,c
  5647  010576  D773               	goto	l17544
  5648  010578                     u17110:
  5649                           
  5650                           ;main.c: 307:    static_soc();
  5651  010578  EC02  F00D         	call	_static_soc	;wreg free
  5652                           
  5653                           ;main.c: 308:    init_bsoc();
  5654  01057C  ECB6  F0E3         	call	_init_bsoc	;wreg free
  5655                           
  5656                           ;main.c: 309:    set_load_relay_one(0);
  5657  010580  0E00               	movlw	0
  5658  010582  6EE6               	movwf	postinc1,c
  5659  010584  ECF1  F014         	call	_set_load_relay_one	;wreg free
  5660                           
  5661                           ;main.c: 310:    set_load_relay_two(0);
  5662  010588  0E00               	movlw	0
  5663  01058A  6EE6               	movwf	postinc1,c
  5664  01058C  ECE9  F014         	call	_set_load_relay_two	;wreg free
  5665                           
  5666                           ;main.c: 311:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d         ", C.soc);
  5667  010590  EE22  F1B5         	lfsr	2,_C+182	;volatile
  5668  010594  006F FF78  F034    	movff	postinc2,btemp+10
  5669  01059A  006F FF74  F035    	movff	postdec2,btemp+11
  5670  0105A0  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  5671  0105A6  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  5672  0105AC  0EE5               	movlw	low STR_18
  5673  0105AE  6EE6               	movwf	postinc1,c
  5674  0105B0  0EFB               	movlw	high STR_18
  5675  0105B2  6EE6               	movwf	postinc1,c
  5676  0105B4  0E00               	movlw	0
  5677  0105B6  6EE6               	movwf	postinc1,c
  5678  0105B8  0E00               	movlw	0
  5679  0105BA  6EE6               	movwf	postinc1,c
  5680  0105BC  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  5681  0105C0  0060  F0AB  FFE6   	movff	btemp,postinc1
  5682  0105C6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5683  0105CC  0E06               	movlw	6
  5684  0105CE  6EE6               	movwf	postinc1,c
  5685  0105D0  ECA5  F0FD         	call	_sprintf	;wreg free
  5686                           
  5687                           ; BSR set to: 0
  5688                           ;main.c: 312:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f      ", C.dynamic_ah);
  5689  0105D4  EE22  F18F         	lfsr	2,_C+144	;volatile
  5690  0105D8  006F FF7B FFE6     	movff	postinc2,postinc1
  5691  0105DE  006F FF7B FFE6     	movff	postinc2,postinc1
  5692  0105E4  006F FF7B FFE6     	movff	postinc2,postinc1
  5693  0105EA  006F FF7B FFE6     	movff	postinc2,postinc1
  5694  0105F0  0ECB               	movlw	low STR_19
  5695  0105F2  6EE6               	movwf	postinc1,c
  5696  0105F4  0EFC               	movlw	high STR_19
  5697  0105F6  6EE6               	movwf	postinc1,c
  5698  0105F8  0E00               	movlw	0
  5699  0105FA  6EE6               	movwf	postinc1,c
  5700  0105FC  0E01               	movlw	1
  5701  0105FE  6EE6               	movwf	postinc1,c
  5702  010600  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  5703  010604  0060  F0AB  FFE6   	movff	btemp,postinc1
  5704  01060A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5705  010610  0E08               	movlw	8
  5706  010612  6EE6               	movwf	postinc1,c
  5707  010614  ECA5  F0FD         	call	_sprintf	;wreg free
  5708                           
  5709                           ; BSR set to: 0
  5710                           ;main.c: 313:    sprintf(get_vterm_ptr(2, 0), "                      ");
  5711  010618  0EB7               	movlw	low STR_20
  5712  01061A  6EE6               	movwf	postinc1,c
  5713  01061C  0EFB               	movlw	high STR_20
  5714  01061E  6EE6               	movwf	postinc1,c
  5715  010620  0E00               	movlw	0
  5716  010622  6EE6               	movwf	postinc1,c
  5717  010624  0E02               	movlw	2
  5718  010626  6EE6               	movwf	postinc1,c
  5719  010628  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  5720  01062C  0060  F0AB  FFE6   	movff	btemp,postinc1
  5721  010632  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5722  010638  0E04               	movlw	4
  5723  01063A  6EE6               	movwf	postinc1,c
  5724  01063C  ECA5  F0FD         	call	_sprintf	;wreg free
  5725                           
  5726                           ; BSR set to: 0
  5727                           ;main.c: 314:    update_lcd(0);
  5728  010640  0E00               	movlw	0
  5729  010642  6EE6               	movwf	postinc1,c
  5730  010644  EC57  F0F6         	call	_update_lcd	;wreg free
  5731                           
  5732                           ;main.c: 315:    WaitMs(2000);
  5733  010648  0ED0               	movlw	208
  5734  01064A  6EE6               	movwf	postinc1,c
  5735  01064C  0E07               	movlw	7
  5736  01064E  6EE6               	movwf	postinc1,c
  5737  010650  ECDD  F010         	call	_WaitMs	;wreg free
  5738                           
  5739                           ;main.c: 316:    sprintf(get_vterm_ptr(0, 0), "Battery ESR          ");
  5740  010654  0E95               	movlw	low STR_21
  5741  010656  6EE6               	movwf	postinc1,c
  5742  010658  0EFD               	movlw	high STR_21
  5743  01065A  6EE6               	movwf	postinc1,c
  5744  01065C  0E00               	movlw	0
  5745  01065E  6EE6               	movwf	postinc1,c
  5746  010660  0E00               	movlw	0
  5747  010662  6EE6               	movwf	postinc1,c
  5748  010664  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  5749  010668  0060  F0AB  FFE6   	movff	btemp,postinc1
  5750  01066E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5751  010674  0E04               	movlw	4
  5752  010676  6EE6               	movwf	postinc1,c
  5753  010678  ECA5  F0FD         	call	_sprintf	;wreg free
  5754                           
  5755                           ; BSR set to: 0
  5756                           ;main.c: 317:    sprintf(get_vterm_ptr(1, 0), "Calculation          ");
  5757  01067C  0EAB               	movlw	low STR_22
  5758  01067E  6EE6               	movwf	postinc1,c
  5759  010680  0EFD               	movlw	high STR_22
  5760  010682  6EE6               	movwf	postinc1,c
  5761  010684  0E00               	movlw	0
  5762  010686  6EE6               	movwf	postinc1,c
  5763  010688  0E01               	movlw	1
  5764  01068A  6EE6               	movwf	postinc1,c
  5765  01068C  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  5766  010690  0060  F0AB  FFE6   	movff	btemp,postinc1
  5767  010696  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5768  01069C  0E04               	movlw	4
  5769  01069E  6EE6               	movwf	postinc1,c
  5770  0106A0  ECA5  F0FD         	call	_sprintf	;wreg free
  5771                           
  5772                           ; BSR set to: 0
  5773                           ;main.c: 318:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds     ");
  5774  0106A4  0E5B               	movlw	low STR_23
  5775  0106A6  6EE6               	movwf	postinc1,c
  5776  0106A8  0EFE               	movlw	high STR_23
  5777  0106AA  6EE6               	movwf	postinc1,c
  5778  0106AC  0E00               	movlw	0
  5779  0106AE  6EE6               	movwf	postinc1,c
  5780  0106B0  0E02               	movlw	2
  5781  0106B2  6EE6               	movwf	postinc1,c
  5782  0106B4  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  5783  0106B8  0060  F0AB  FFE6   	movff	btemp,postinc1
  5784  0106BE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5785  0106C4  0E04               	movlw	4
  5786  0106C6  6EE6               	movwf	postinc1,c
  5787  0106C8  ECA5  F0FD         	call	_sprintf	;wreg free
  5788                           
  5789                           ; BSR set to: 0
  5790                           ;main.c: 319:    update_lcd(0);
  5791  0106CC  0E00               	movlw	0
  5792  0106CE  6EE6               	movwf	postinc1,c
  5793  0106D0  EC57  F0F6         	call	_update_lcd	;wreg free
  5794                           
  5795                           ;main.c: 320:    uint16_t i_esr = 1;
  5796  0106D4  0E01               	movlw	1
  5797  0106D6  6E34               	movwf	(btemp+10)^0,c
  5798  0106D8  0E00               	movlw	0
  5799  0106DA  6E35               	movwf	(btemp+11)^0,c
  5800                           
  5801                           ;stkvar	_i_esr @ sp[(-19)+10]
  5802  0106DC  0EF7               	movlw	-9
  5803  0106DE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  5804  0106E4  0EF8               	movlw	-8
  5805  0106E6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  5806                           
  5807                           ;main.c: 322:    float esr_temp;;main.c: 323:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  5808  0106EC  D06D               	goto	l17604
  5809  0106EE                     l17592:
  5810                           
  5811                           ;main.c: 324:     WaitMs(110);
  5812  0106EE  0E6E               	movlw	110
  5813  0106F0  6EE6               	movwf	postinc1,c
  5814  0106F2  0E00               	movlw	0
  5815  0106F4  6EE6               	movwf	postinc1,c
  5816  0106F6  ECDD  F010         	call	_WaitMs	;wreg free
  5817                           
  5818                           ;main.c: 325:     shape = (uint8_t) fabsf(esr_temp);
  5819                           ;stkvar	_esr_temp @ sp[(-19)+6]
  5820  0106FA  0EF3               	movlw	-13
  5821  0106FC  006F FF8F FFE6     	movff	plusw1,postinc1
  5822  010702  006F FF8F FFE6     	movff	plusw1,postinc1
  5823  010708  006F FF8F FFE6     	movff	plusw1,postinc1
  5824  01070E  006F FF8F FFE6     	movff	plusw1,postinc1
  5825  010714  EC6D  F004         	call	_fabsf	;wreg free
  5826  010718  0060  F0AB  FFE6   	movff	btemp,postinc1
  5827  01071E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5828  010724  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  5829  01072A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  5830  010730  EC89  F0F3         	call	___fltol	;wreg free
  5831  010734  0060  F0A8  F035   	movff	btemp,btemp+11
  5832                           
  5833                           ;stkvar	_shape @ sp[(-19)+12]
  5834  01073A  0EF9               	movlw	-7
  5835  01073C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  5836                           
  5837                           ;main.c: 326:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c       ", spinners(0, 0), 
      +                          spinners(shape, 0));
  5838  010742  0E00               	movlw	0
  5839  010744  6EE6               	movwf	postinc1,c
  5840                           
  5841                           ;stkvar	_shape @ sp[(-20)+12]
  5842  010746  0EF8               	movlw	-8
  5843  010748  50E3               	movf	plusw1,w,c
  5844  01074A  6EE6               	movwf	postinc1,c
  5845  01074C  EC21  F0FF         	call	_spinners	;wreg free
  5846  010750  502A               	movf	btemp^0,w,c
  5847  010752  6EE6               	movwf	postinc1,c
  5848  010754  0E00               	movlw	0
  5849  010756  6EE6               	movwf	postinc1,c
  5850  010758  0E00               	movlw	0
  5851  01075A  6EE6               	movwf	postinc1,c
  5852  01075C  0E00               	movlw	0
  5853  01075E  6EE6               	movwf	postinc1,c
  5854  010760  EC21  F0FF         	call	_spinners	;wreg free
  5855  010764  502A               	movf	btemp^0,w,c
  5856  010766  6EE6               	movwf	postinc1,c
  5857  010768  0E00               	movlw	0
  5858  01076A  6EE6               	movwf	postinc1,c
  5859  01076C  0E19               	movlw	low STR_24
  5860  01076E  6EE6               	movwf	postinc1,c
  5861  010770  0EFE               	movlw	high STR_24
  5862  010772  6EE6               	movwf	postinc1,c
  5863  010774  0E00               	movlw	0
  5864  010776  6EE6               	movwf	postinc1,c
  5865  010778  0E02               	movlw	2
  5866  01077A  6EE6               	movwf	postinc1,c
  5867  01077C  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  5868  010780  0060  F0AB  FFE6   	movff	btemp,postinc1
  5869  010786  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5870  01078C  0E08               	movlw	8
  5871  01078E  6EE6               	movwf	postinc1,c
  5872  010790  ECA5  F0FD         	call	_sprintf	;wreg free
  5873                           
  5874                           ; BSR set to: 0
  5875                           ;main.c: 327:     update_lcd(0);
  5876  010794  0E00               	movlw	0
  5877  010796  6EE6               	movwf	postinc1,c
  5878  010798  EC57  F0F6         	call	_update_lcd	;wreg free
  5879                           
  5880                           ;main.c: 329:     if (i_esr++ > 512)
  5881                           ;stkvar	_i_esr @ sp[(-19)+10]
  5882  01079C  50E1               	movf	fsr1l,w,c
  5883  01079E  0FF7               	addlw	-9
  5884  0107A0  6ED9               	movwf	fsr2l,c
  5885  0107A2  50E2               	movf	fsr1h,w,c
  5886  0107A4  6EDA               	movwf	fsr2h,c
  5887  0107A6  0EFF               	movlw	255
  5888  0107A8  22DA               	addwfc	fsr2h,f,c
  5889  0107AA  006F FF7C  F034    	movff	indf2,btemp+10
  5890  0107B0  0E01               	movlw	1
  5891  0107B2  26DE               	addwf	postinc2,f,c
  5892  0107B4  006F FF7C  F035    	movff	indf2,btemp+11
  5893  0107BA  0E00               	movlw	0
  5894  0107BC  22DD               	addwfc	postdec2,f,c
  5895  0107BE  0434               	decf	(btemp+10)^0,w,c
  5896  0107C0  0E02               	movlw	2
  5897  0107C2  5835               	subwfb	(btemp+11)^0,w,c
  5898  0107C4  B0D8               	btfsc	status,0,c
  5899  0107C6  D017               	goto	u17130
  5900  0107C8                     l17604:
  5901                           
  5902                           ;main.c: 323:    while ((esr_temp = esr_check(0)) < 0.0) {
  5903  0107C8  0E00               	movlw	0
  5904  0107CA  6EE6               	movwf	postinc1,c
  5905  0107CC  ECF1  F0DB         	call	_esr_check	;wreg free
  5906                           
  5907                           ;stkvar	_esr_temp @ sp[(-19)+6]
  5908  0107D0  0EF3               	movlw	-13
  5909  0107D2  0060  F0AB  FFE3   	movff	btemp,plusw1
  5910  0107D8  0EF4               	movlw	-12
  5911  0107DA  0060  F0AF  FFE3   	movff	btemp+1,plusw1
  5912  0107E0  0EF5               	movlw	-11
  5913  0107E2  0060  F0B3  FFE3   	movff	btemp+2,plusw1
  5914  0107E8  0EF6               	movlw	-10
  5915  0107EA  0060  F0B7  FFE3   	movff	btemp+3,plusw1
  5916  0107F0  0EF6               	movlw	-10
  5917  0107F2  BEE3               	btfsc	plusw1,7,c
  5918  0107F4  D77C               	goto	l17592
  5919  0107F6                     u17130:
  5920                           
  5921                           ;main.c: 332:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f            ", C.esr);
  5922  0107F6  EE22  F187         	lfsr	2,_C+136	;volatile
  5923  0107FA  006F FF7B FFE6     	movff	postinc2,postinc1
  5924  010800  006F FF7B FFE6     	movff	postinc2,postinc1
  5925  010806  006F FF7B FFE6     	movff	postinc2,postinc1
  5926  01080C  006F FF7B FFE6     	movff	postinc2,postinc1
  5927  010812  0ECE               	movlw	low STR_25
  5928  010814  6EE6               	movwf	postinc1,c
  5929  010816  0EFB               	movlw	high STR_25
  5930  010818  6EE6               	movwf	postinc1,c
  5931  01081A  0E00               	movlw	0
  5932  01081C  6EE6               	movwf	postinc1,c
  5933  01081E  0E00               	movlw	0
  5934  010820  6EE6               	movwf	postinc1,c
  5935  010822  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  5936  010826  0060  F0AB  FFE6   	movff	btemp,postinc1
  5937  01082C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5938  010832  0E08               	movlw	8
  5939  010834  6EE6               	movwf	postinc1,c
  5940  010836  ECA5  F0FD         	call	_sprintf	;wreg free
  5941                           
  5942                           ;main.c: 333:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f            ", C.bv_one_loa
      +                          d, C.load_i1);
  5943  01083A  EE22  F219         	lfsr	2,_C+282	;volatile
  5944  01083E  006F FF7B FFE6     	movff	postinc2,postinc1
  5945  010844  006F FF7B FFE6     	movff	postinc2,postinc1
  5946  01084A  006F FF7B FFE6     	movff	postinc2,postinc1
  5947  010850  006F FF7B FFE6     	movff	postinc2,postinc1
  5948  010856  EE22  F225         	lfsr	2,_C+294	;volatile
  5949  01085A  006F FF7B FFE6     	movff	postinc2,postinc1
  5950  010860  006F FF7B FFE6     	movff	postinc2,postinc1
  5951  010866  006F FF7B FFE6     	movff	postinc2,postinc1
  5952  01086C  006F FF7B FFE6     	movff	postinc2,postinc1
  5953  010872  0ED5               	movlw	low STR_26
  5954  010874  6EE6               	movwf	postinc1,c
  5955  010876  0EFA               	movlw	high STR_26
  5956  010878  6EE6               	movwf	postinc1,c
  5957  01087A  0E00               	movlw	0
  5958  01087C  6EE6               	movwf	postinc1,c
  5959  01087E  0E01               	movlw	1
  5960  010880  6EE6               	movwf	postinc1,c
  5961  010882  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  5962  010886  0060  F0AB  FFE6   	movff	btemp,postinc1
  5963  01088C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5964  010892  0E0C               	movlw	12
  5965  010894  6EE6               	movwf	postinc1,c
  5966  010896  ECA5  F0FD         	call	_sprintf	;wreg free
  5967                           
  5968                           ;main.c: 334:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f            ", C.bv_full_lo
      +                          ad, C.load_i2);
  5969  01089A  EE22  F21D         	lfsr	2,_C+286	;volatile
  5970  01089E  006F FF7B FFE6     	movff	postinc2,postinc1
  5971  0108A4  006F FF7B FFE6     	movff	postinc2,postinc1
  5972  0108AA  006F FF7B FFE6     	movff	postinc2,postinc1
  5973  0108B0  006F FF7B FFE6     	movff	postinc2,postinc1
  5974  0108B6  EE22  F229         	lfsr	2,_C+298	;volatile
  5975  0108BA  006F FF7B FFE6     	movff	postinc2,postinc1
  5976  0108C0  006F FF7B FFE6     	movff	postinc2,postinc1
  5977  0108C6  006F FF7B FFE6     	movff	postinc2,postinc1
  5978  0108CC  006F FF7B FFE6     	movff	postinc2,postinc1
  5979  0108D2  0EF0               	movlw	low STR_27
  5980  0108D4  6EE6               	movwf	postinc1,c
  5981  0108D6  0EFA               	movlw	high STR_27
  5982  0108D8  6EE6               	movwf	postinc1,c
  5983  0108DA  0E00               	movlw	0
  5984  0108DC  6EE6               	movwf	postinc1,c
  5985  0108DE  0E02               	movlw	2
  5986  0108E0  6EE6               	movwf	postinc1,c
  5987  0108E2  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  5988  0108E6  0060  F0AB  FFE6   	movff	btemp,postinc1
  5989  0108EC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5990  0108F2  0E0C               	movlw	12
  5991  0108F4  6EE6               	movwf	postinc1,c
  5992  0108F6  ECA5  F0FD         	call	_sprintf	;wreg free
  5993                           
  5994                           ;main.c: 335:    update_lcd(0);
  5995  0108FA  0E00               	movlw	0
  5996  0108FC  6EE6               	movwf	postinc1,c
  5997  0108FE  EC57  F0F6         	call	_update_lcd	;wreg free
  5998                           
  5999                           ;main.c: 336:    WaitMs(4000);
  6000  010902  0EA0               	movlw	160
  6001  010904  6EE6               	movwf	postinc1,c
  6002  010906  0E0F               	movlw	15
  6003  010908  6EE6               	movwf	postinc1,c
  6004  01090A  ECDD  F010         	call	_WaitMs	;wreg free
  6005                           
  6006                           ;main.c: 337:    V.sensor_set = get_switch(SCALIB);
  6007  01090E  0E04               	movlw	4
  6008  010910  6EE6               	movwf	postinc1,c
  6009  010912  ECF0  F011         	call	_get_switch	;wreg free
  6010  010916  502A               	movf	btemp^0,w,c
  6011  010918  B4D8               	btfsc	status,2,c
  6012  01091A  D002               	goto	u17140
  6013  01091C  0E01               	movlw	1
  6014  01091E  D001               	goto	u17150
  6015  010920                     u17140:
  6016  010920  0E00               	movlw	0
  6017  010922                     u17150:
  6018  010922  0102               	movlb	2	; () banked
  6019  010924  6FB2               	movwf	(_V+171)& (0+255),b	;volatile
  6020                           
  6021                           ; BSR set to: 2
  6022                           ;main.c: 338:    WaitMs(1000);
  6023  010926  0EE8               	movlw	232
  6024  010928  6EE6               	movwf	postinc1,c
  6025  01092A  0E03               	movlw	3
  6026  01092C  6EE6               	movwf	postinc1,c
  6027  01092E  ECDD  F010         	call	_WaitMs	;wreg free
  6028                           
  6029                           ;main.c: 339:    if (V.sensor_set && get_switch(SCALIB)) {
  6030  010932  0102               	movlb	2	; () banked
  6031  010934  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
  6032  010936  B4D8               	btfsc	status,2,c
  6033  010938  D00F               	goto	l17622
  6034                           
  6035                           ; BSR set to: 2
  6036  01093A  0E04               	movlw	4
  6037  01093C  6EE6               	movwf	postinc1,c
  6038  01093E  ECF0  F011         	call	_get_switch	;wreg free
  6039  010942  502A               	movf	btemp^0,w,c
  6040  010944  B4D8               	btfsc	status,2,c
  6041  010946  D008               	goto	l17622
  6042                           
  6043                           ;main.c: 340:     current_sensor_cal();
  6044  010948  EC69  F0C8         	call	_current_sensor_cal	;wreg free
  6045                           
  6046                           ;main.c: 341:     WaitMs(4000);
  6047  01094C  0EA0               	movlw	160
  6048  01094E  6EE6               	movwf	postinc1,c
  6049  010950  0E0F               	movlw	15
  6050  010952  6EE6               	movwf	postinc1,c
  6051  010954  ECDD  F010         	call	_WaitMs	;wreg free
  6052  010958                     l17622:
  6053                           
  6054                           ;main.c: 343:    V.sensor_set = 0;
  6055  010958  0102               	movlb	2	; () banked
  6056  01095A  6BB2               	clrf	(_V+171)& (0+255),b	;volatile
  6057                           
  6058                           ; BSR set to: 2
  6059                           ;main.c: 344:    V.system_stable = 1;
  6060  01095C  0E01               	movlw	1
  6061  01095E  6FB3               	movwf	(_V+172)& (0+255),b	;volatile
  6062                           
  6063                           ;main.c: 345:    break;
  6064  010960  D01D               	goto	l17630
  6065  010962                     l1475:
  6066                           
  6067                           ; BSR set to: 2
  6068                           ;main.c: 351:    P.SYSTEM_STABLE = 1;
  6069  010962  0100               	movlb	0	; () banked
  6070  010964  8195               	bsf	(_P+1)& (0+255),0,b	;volatile
  6071                           
  6072                           ;main.c: 352:    break;
  6073  010966  D01A               	goto	l17630
  6074  010968                     l1477:
  6075                           
  6076                           ; BSR set to: 2
  6077                           ;main.c: 355:    V.ui_state = UI_STATE_INIT;
  6078  010968  6B07               	clrf	_V& (0+255),b	;volatile
  6079                           
  6080                           ;main.c: 356:    break;
  6081  01096A  D018               	goto	l17630
  6082  01096C                     l17628:
  6083  01096C  0102               	movlb	2	; () banked
  6084  01096E  5107               	movf	_V& (0+255),w,b	;volatile
  6085  010970  6E34               	movwf	(btemp+10)^0,c
  6086  010972  6A35               	clrf	(btemp+11)^0,c
  6087                           
  6088                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6089                           ; Switch size 1, requested type "simple"
  6090                           ; Number of cases is 1, Range of values is 0 to 0
  6091                           ; switch strategies available:
  6092                           ; Name         Instructions Cycles
  6093                           ; simple_byte            4     3 (average)
  6094                           ;	Chosen strategy is simple_byte
  6095  010974  5035               	movf	(btemp+11)^0,w,c
  6096  010976  0A00               	xorlw	0	; case 0
  6097  010978  A4D8               	btfss	status,2,c
  6098  01097A  D7F6               	goto	l1477
  6099                           
  6100                           ; BSR set to: 2
  6101                           ; Switch size 1, requested type "simple"
  6102                           ; Number of cases is 5, Range of values is 0 to 5
  6103                           ; switch strategies available:
  6104                           ; Name         Instructions Cycles
  6105                           ; simple_byte           16     9 (average)
  6106                           ;	Chosen strategy is simple_byte
  6107  01097C  5034               	movf	(btemp+10)^0,w,c
  6108  01097E  0A00               	xorlw	0	; case 0
  6109  010980  B4D8               	btfsc	status,2,c
  6110  010982  EF3D  F080         	goto	l17464
  6111  010986  0A01               	xorlw	1	; case 1
  6112  010988  B4D8               	btfsc	status,2,c
  6113  01098A  D008               	goto	l17630
  6114  01098C  0A02               	xorlw	2	; case 3
  6115  01098E  B4D8               	btfsc	status,2,c
  6116  010990  D005               	goto	l17630
  6117  010992  0A07               	xorlw	7	; case 4
  6118  010994  B4D8               	btfsc	status,2,c
  6119  010996  D7E5               	goto	l1475
  6120  010998  0A01               	xorlw	1	; case 5
  6121  01099A  D7E6               	goto	l1477
  6122  01099C                     l17630:
  6123                           
  6124                           ;main.c: 359:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  6125  01099C  0E01               	movlw	1
  6126  01099E  6EE6               	movwf	postinc1,c
  6127  0109A0  EC5B  F012         	call	_TimerDone	;wreg free
  6128  0109A4  502A               	movf	btemp^0,w,c
  6129  0109A6  B4D8               	btfsc	status,2,c
  6130  0109A8  D013               	goto	l17642
  6131  0109AA  EC59  F015         	call	_check_adc_scan	;wreg free
  6132  0109AE  502A               	movf	btemp^0,w,c
  6133  0109B0  B4D8               	btfsc	status,2,c
  6134  0109B2  D00E               	goto	l17642
  6135                           
  6136                           ;main.c: 363:    convert_adc_data();
  6137  0109B4  ECB6  F003         	call	_convert_adc_data	;wreg free
  6138                           
  6139                           ;main.c: 367:    clear_adc_scan();
  6140  0109B8  EC73  F015         	call	_clear_adc_scan	;wreg free
  6141                           
  6142                           ; BSR set to: 1
  6143                           ;main.c: 368:    start_adc_scan();
  6144  0109BC  EC0F  F00C         	call	_start_adc_scan	;wreg free
  6145                           
  6146                           ;main.c: 369:    StartTimer(TMR_ADC, 200);
  6147  0109C0  0EC8               	movlw	200
  6148  0109C2  6EE6               	movwf	postinc1,c
  6149  0109C4  0E00               	movlw	0
  6150  0109C6  6EE6               	movwf	postinc1,c
  6151  0109C8  0E01               	movlw	1
  6152  0109CA  6EE6               	movwf	postinc1,c
  6153  0109CC  ECD0  F00F         	call	_StartTimer	;wreg free
  6154  0109D0                     l17642:
  6155                           
  6156                           ;main.c: 372:   if (TimerDone(TMR_DISPLAY)) {
  6157  0109D0  0E0A               	movlw	10
  6158  0109D2  6EE6               	movwf	postinc1,c
  6159  0109D4  EC5B  F012         	call	_TimerDone	;wreg free
  6160  0109D8  502A               	movf	btemp^0,w,c
  6161  0109DA  B4D8               	btfsc	status,2,c
  6162  0109DC  EF05  F08B         	goto	l17766
  6163                           
  6164                           ;main.c: 373:    if (TimerDone(TMR_HELPDIS)) {
  6165  0109E0  0E09               	movlw	9
  6166  0109E2  6EE6               	movwf	postinc1,c
  6167  0109E4  EC5B  F012         	call	_TimerDone	;wreg free
  6168  0109E8  502A               	movf	btemp^0,w,c
  6169  0109EA  B4D8               	btfsc	status,2,c
  6170  0109EC  D004               	goto	l17648
  6171                           
  6172                           ;main.c: 374:     set_display_info(DIS_STR);
  6173  0109EE  0E00               	movlw	0
  6174  0109F0  6EE6               	movwf	postinc1,c
  6175  0109F2  EC60  F014         	call	_set_display_info	;wreg free
  6176  0109F6                     l17648:
  6177                           
  6178                           ;main.c: 376:    pclock = time(((void*)0));
  6179  0109F6  0E00               	movlw	0
  6180  0109F8  6EE6               	movwf	postinc1,c
  6181  0109FA  0E00               	movlw	0
  6182  0109FC  6EE6               	movwf	postinc1,c
  6183  0109FE  ECD3  F00C         	call	_time	;wreg free
  6184  010A02  52E5               	movf	postdec1,f,c
  6185  010A04  006F FF9C  F041    	movff	indf1,btemp+23
  6186  010A0A  52E5               	movf	postdec1,f,c
  6187  010A0C  006F FF9C  F040    	movff	indf1,btemp+22
  6188  010A12  52E5               	movf	postdec1,f,c
  6189  010A14  006F FF9C  F03F    	movff	indf1,btemp+21
  6190  010A1A  52E5               	movf	postdec1,f,c
  6191  010A1C  006F FF9C  F03E    	movff	indf1,btemp+20
  6192  010A22  52E5               	movf	postdec1,f,c
  6193  010A24  006F FF9C  F03D    	movff	indf1,btemp+19
  6194  010A2A  52E5               	movf	postdec1,f,c
  6195  010A2C  006F FF9C  F03C    	movff	indf1,btemp+18
  6196  010A32  52E5               	movf	postdec1,f,c
  6197  010A34  006F FF9C  F03B    	movff	indf1,btemp+17
  6198  010A3A  52E5               	movf	postdec1,f,c
  6199  010A3C  006F FF9C  F03A    	movff	indf1,btemp+16
  6200  010A42  0060  F0E8  F0DA   	movff	btemp+16,_pclock
  6201  010A48  0060  F0EC  F0DB   	movff	btemp+17,_pclock+1
  6202  010A4E  0060  F0F0  F0DC   	movff	btemp+18,_pclock+2
  6203  010A54  0060  F0F4  F0DD   	movff	btemp+19,_pclock+3
  6204  010A5A  0060  F0F8  F0DE   	movff	btemp+20,_pclock+4
  6205  010A60  0060  F0FC  F0DF   	movff	btemp+21,_pclock+5
  6206  010A66  0060  F100  F0E0   	movff	btemp+22,_pclock+6
  6207  010A6C  0060  F104  F0E1   	movff	btemp+23,_pclock+7
  6208                           
  6209                           ; BSR set to: 57
  6210                           ;main.c: 377:    t_mbmc = localtime(&pclock);
  6211  010A72  0EDA               	movlw	_pclock& (0+255)
  6212  010A74  6EE6               	movwf	postinc1,c
  6213  010A76  ECA1  F014         	call	_localtime	;wreg free
  6214  010A7A  0060  F0A8  F0BC   	movff	btemp,_t_mbmc
  6215  010A80  0060  F0AC  F0BD   	movff	btemp+1,_t_mbmc+1
  6216                           
  6217                           ;main.c: 378:    sprintf(get_vterm_ptr(3, 0), "%s           ", asctime(t_mbmc));
  6218  010A86  0060  F2F3  FFE6   	movff	_t_mbmc,postinc1
  6219  010A8C  0060  F2F7  FFE6   	movff	_t_mbmc+1,postinc1
  6220  010A92  EC40  F0C1         	call	_asctime	;wreg free
  6221  010A96  0060  F0AB  FFE6   	movff	btemp,postinc1
  6222  010A9C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6223  010AA2  0E76               	movlw	low (STR_77+5)
  6224  010AA4  6EE6               	movwf	postinc1,c
  6225  010AA6  0EFF               	movlw	high (STR_77+5)
  6226  010AA8  6EE6               	movwf	postinc1,c
  6227  010AAA  0E00               	movlw	0
  6228  010AAC  6EE6               	movwf	postinc1,c
  6229  010AAE  0E03               	movlw	3
  6230  010AB0  6EE6               	movwf	postinc1,c
  6231  010AB2  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  6232  010AB6  0060  F0AB  FFE6   	movff	btemp,postinc1
  6233  010ABC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6234  010AC2  0E06               	movlw	6
  6235  010AC4  6EE6               	movwf	postinc1,c
  6236  010AC6  ECA5  F0FD         	call	_sprintf	;wreg free
  6237                           
  6238                           ; BSR set to: 0
  6239                           ;main.c: 379:    sprintf(get_vterm_ptr(3, 1), "%s           ", asctime(t_mbmc));
  6240  010ACA  0060  F2F3  FFE6   	movff	_t_mbmc,postinc1
  6241  010AD0  0060  F2F7  FFE6   	movff	_t_mbmc+1,postinc1
  6242  010AD6  EC40  F0C1         	call	_asctime	;wreg free
  6243  010ADA  0060  F0AB  FFE6   	movff	btemp,postinc1
  6244  010AE0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6245  010AE6  0E76               	movlw	low (STR_77+5)
  6246  010AE8  6EE6               	movwf	postinc1,c
  6247  010AEA  0EFF               	movlw	high (STR_77+5)
  6248  010AEC  6EE6               	movwf	postinc1,c
  6249  010AEE  0E01               	movlw	1
  6250  010AF0  6EE6               	movwf	postinc1,c
  6251  010AF2  0E03               	movlw	3
  6252  010AF4  6EE6               	movwf	postinc1,c
  6253  010AF6  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  6254  010AFA  0060  F0AB  FFE6   	movff	btemp,postinc1
  6255  010B00  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6256  010B06  0E06               	movlw	6
  6257  010B08  6EE6               	movwf	postinc1,c
  6258  010B0A  ECA5  F0FD         	call	_sprintf	;wreg free
  6259                           
  6260                           ; BSR set to: 0
  6261                           ;main.c: 380:    calc_model_data();
  6262  010B0E  ECD6  F0CC         	call	_calc_model_data	;wreg free
  6263                           
  6264                           ; BSR set to: 57
  6265                           ;main.c: 381:    if (C.dupdate) {
  6266  010B12  EE22  F22E         	lfsr	2,_C+303	;volatile
  6267  010B16  50DF               	movf	indf2,w,c
  6268  010B18  B4D8               	btfsc	status,2,c
  6269  010B1A  D0D7               	goto	l17692
  6270                           
  6271                           ; BSR set to: 57
  6272                           ;main.c: 382:     C.dupdate = 0;
  6273  010B1C  0E00               	movlw	0
  6274  010B1E  006F FFA0  FA2E    	movff	wreg,_C+303	;volatile
  6275                           
  6276                           ;main.c: 383:     set_hist_flag();
  6277  010B24  EC6D  F015         	call	_set_hist_flag	;wreg free
  6278                           
  6279                           ; BSR set to: 1
  6280                           ;main.c: 385:     uint16_t i_esr = 1;
  6281  010B28  0E01               	movlw	1
  6282  010B2A  6E34               	movwf	(btemp+10)^0,c
  6283  010B2C  0E00               	movlw	0
  6284  010B2E  6E35               	movwf	(btemp+11)^0,c
  6285                           
  6286                           ;stkvar	_i_esr @ sp[(-19)+4]
  6287  010B30  0EF1               	movlw	-15
  6288  010B32  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  6289  010B38  0EF2               	movlw	-14
  6290  010B3A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  6291                           
  6292                           ; BSR set to: 1
  6293                           ;main.c: 386:     esr_check(1);
  6294  010B40  0E01               	movlw	1
  6295  010B42  6EE6               	movwf	postinc1,c
  6296  010B44  ECF1  F0DB         	call	_esr_check	;wreg free
  6297                           
  6298                           ;main.c: 387:     while (esr_check(0) < 0.0) {
  6299  010B48  D01C               	goto	l17672
  6300  010B4A                     l17666:
  6301                           
  6302                           ;main.c: 388:      WaitMs(110);
  6303  010B4A  0E6E               	movlw	110
  6304  010B4C  6EE6               	movwf	postinc1,c
  6305  010B4E  0E00               	movlw	0
  6306  010B50  6EE6               	movwf	postinc1,c
  6307  010B52  ECDD  F010         	call	_WaitMs	;wreg free
  6308                           
  6309                           ;main.c: 389:      if (i_esr++ > 512)
  6310                           ;stkvar	_i_esr @ sp[(-19)+4]
  6311  010B56  50E1               	movf	fsr1l,w,c
  6312  010B58  0FF1               	addlw	-15
  6313  010B5A  6ED9               	movwf	fsr2l,c
  6314  010B5C  50E2               	movf	fsr1h,w,c
  6315  010B5E  6EDA               	movwf	fsr2h,c
  6316  010B60  0EFF               	movlw	255
  6317  010B62  22DA               	addwfc	fsr2h,f,c
  6318  010B64  006F FF7C  F034    	movff	indf2,btemp+10
  6319  010B6A  0E01               	movlw	1
  6320  010B6C  26DE               	addwf	postinc2,f,c
  6321  010B6E  006F FF7C  F035    	movff	indf2,btemp+11
  6322  010B74  0E00               	movlw	0
  6323  010B76  22DD               	addwfc	postdec2,f,c
  6324  010B78  0434               	decf	(btemp+10)^0,w,c
  6325  010B7A  0E02               	movlw	2
  6326  010B7C  5835               	subwfb	(btemp+11)^0,w,c
  6327  010B7E  B0D8               	btfsc	status,0,c
  6328  010B80  D006               	goto	u17240
  6329  010B82                     l17672:
  6330                           
  6331                           ;main.c: 387:     while (esr_check(0) < 0.0) {
  6332  010B82  0E00               	movlw	0
  6333  010B84  6EE6               	movwf	postinc1,c
  6334  010B86  ECF1  F0DB         	call	_esr_check	;wreg free
  6335  010B8A  BE2D               	btfsc	(btemp+3)^0,7,c
  6336  010B8C  D7DE               	goto	l17666
  6337  010B8E                     u17240:
  6338                           
  6339                           ;main.c: 392:     load_hist_data();
  6340  010B8E  ECA3  F0CA         	call	_load_hist_data	;wreg free
  6341                           
  6342                           ; BSR set to: 57
  6343                           ;main.c: 393:     update_hist_data(0, &C.hist[0]);
  6344  010B92  0EB8               	movlw	low (_C+185)
  6345  010B94  6EE6               	movwf	postinc1,c
  6346  010B96  0E09               	movlw	high (_C+185)
  6347  010B98  6EE6               	movwf	postinc1,c
  6348  010B9A  0E00               	movlw	0
  6349  010B9C  6EE6               	movwf	postinc1,c
  6350  010B9E  ECB4  F009         	call	_update_hist_data	;wreg free
  6351                           
  6352                           ;main.c: 394:     write_cal_data();
  6353  010BA2  ECB4  F0F7         	call	_write_cal_data	;wreg free
  6354                           
  6355                           ;main.c: 395:     sprintf(get_vterm_ptr(0, 0), "History Data  Saved  ");
  6356  010BA6  0EB3               	movlw	low STR_30
  6357  010BA8  6EE6               	movwf	postinc1,c
  6358  010BAA  0EFE               	movlw	high STR_30
  6359  010BAC  6EE6               	movwf	postinc1,c
  6360  010BAE  0E00               	movlw	0
  6361  010BB0  6EE6               	movwf	postinc1,c
  6362  010BB2  0E00               	movlw	0
  6363  010BB4  6EE6               	movwf	postinc1,c
  6364  010BB6  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  6365  010BBA  0060  F0AB  FFE6   	movff	btemp,postinc1
  6366  010BC0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6367  010BC6  0E04               	movlw	4
  6368  010BC8  6EE6               	movwf	postinc1,c
  6369  010BCA  ECA5  F0FD         	call	_sprintf	;wreg free
  6370                           
  6371                           ; BSR set to: 0
  6372                           ;main.c: 396:     sprintf(get_vterm_ptr(1, 0), "To EEPROM            ");
  6373  010BCE  0E7F               	movlw	low STR_31
  6374  010BD0  6EE6               	movwf	postinc1,c
  6375  010BD2  0EFD               	movlw	high STR_31
  6376  010BD4  6EE6               	movwf	postinc1,c
  6377  010BD6  0E00               	movlw	0
  6378  010BD8  6EE6               	movwf	postinc1,c
  6379  010BDA  0E01               	movlw	1
  6380  010BDC  6EE6               	movwf	postinc1,c
  6381  010BDE  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  6382  010BE2  0060  F0AB  FFE6   	movff	btemp,postinc1
  6383  010BE8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6384  010BEE  0E04               	movlw	4
  6385  010BF0  6EE6               	movwf	postinc1,c
  6386  010BF2  ECA5  F0FD         	call	_sprintf	;wreg free
  6387                           
  6388                           ; BSR set to: 0
  6389                           ;main.c: 397:     sprintf(get_vterm_ptr(2, 0), " Time %lu, %lu       ", time(((void*)0))
      +                          , C.hist[0].updates);
  6390  010BF6  EE22  F1C4         	lfsr	2,_C+197	;volatile
  6391  010BFA  006F FF7B FFE6     	movff	postinc2,postinc1
  6392  010C00  006F FF7B FFE6     	movff	postinc2,postinc1
  6393  010C06  006F FF7B FFE6     	movff	postinc2,postinc1
  6394  010C0C  006F FF7B FFE6     	movff	postinc2,postinc1
  6395  010C12  0E00               	movlw	0
  6396  010C14  6EE6               	movwf	postinc1,c
  6397  010C16  0E00               	movlw	0
  6398  010C18  6EE6               	movwf	postinc1,c
  6399  010C1A  ECD3  F00C         	call	_time	;wreg free
  6400  010C1E  52E5               	movf	postdec1,f,c
  6401  010C20  006F FF9C  F041    	movff	indf1,btemp+23
  6402  010C26  52E5               	movf	postdec1,f,c
  6403  010C28  006F FF9C  F040    	movff	indf1,btemp+22
  6404  010C2E  52E5               	movf	postdec1,f,c
  6405  010C30  006F FF9C  F03F    	movff	indf1,btemp+21
  6406  010C36  52E5               	movf	postdec1,f,c
  6407  010C38  006F FF9C  F03E    	movff	indf1,btemp+20
  6408  010C3E  52E5               	movf	postdec1,f,c
  6409  010C40  006F FF9C  F03D    	movff	indf1,btemp+19
  6410  010C46  52E5               	movf	postdec1,f,c
  6411  010C48  006F FF9C  F03C    	movff	indf1,btemp+18
  6412  010C4E  52E5               	movf	postdec1,f,c
  6413  010C50  006F FF9C  F03B    	movff	indf1,btemp+17
  6414  010C56  52E5               	movf	postdec1,f,c
  6415  010C58  006F FF9C  F03A    	movff	indf1,btemp+16
  6416  010C5E  0060  F0EB  FFE6   	movff	btemp+16,postinc1
  6417  010C64  0060  F0EF  FFE6   	movff	btemp+17,postinc1
  6418  010C6A  0060  F0F3  FFE6   	movff	btemp+18,postinc1
  6419  010C70  0060  F0F7  FFE6   	movff	btemp+19,postinc1
  6420  010C76  0060  F0FB  FFE6   	movff	btemp+20,postinc1
  6421  010C7C  0060  F0FF  FFE6   	movff	btemp+21,postinc1
  6422  010C82  0060  F103  FFE6   	movff	btemp+22,postinc1
  6423  010C88  0060  F107  FFE6   	movff	btemp+23,postinc1
  6424  010C8E  0E2F               	movlw	low STR_32
  6425  010C90  6EE6               	movwf	postinc1,c
  6426  010C92  0EFE               	movlw	high STR_32
  6427  010C94  6EE6               	movwf	postinc1,c
  6428  010C96  0E00               	movlw	0
  6429  010C98  6EE6               	movwf	postinc1,c
  6430  010C9A  0E02               	movlw	2
  6431  010C9C  6EE6               	movwf	postinc1,c
  6432  010C9E  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  6433  010CA2  0060  F0AB  FFE6   	movff	btemp,postinc1
  6434  010CA8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6435  010CAE  0E10               	movlw	16
  6436  010CB0  6EE6               	movwf	postinc1,c
  6437  010CB2  ECA5  F0FD         	call	_sprintf	;wreg free
  6438                           
  6439                           ; BSR set to: 0
  6440                           ;main.c: 398:     update_lcd(0);
  6441  010CB6  0E00               	movlw	0
  6442  010CB8  6EE6               	movwf	postinc1,c
  6443  010CBA  EC57  F0F6         	call	_update_lcd	;wreg free
  6444                           
  6445                           ;main.c: 399:     WaitMs(2000);
  6446  010CBE  0ED0               	movlw	208
  6447  010CC0  6EE6               	movwf	postinc1,c
  6448  010CC2  0E07               	movlw	7
  6449  010CC4  6EE6               	movwf	postinc1,c
  6450  010CC6  ECDD  F010         	call	_WaitMs	;wreg free
  6451  010CCA                     l17692:
  6452                           
  6453                           ;main.c: 407:     hid_display(&H);
  6454  010CCA  0E9B               	movlw	low _H
  6455  010CCC  6EE6               	movwf	postinc1,c
  6456  010CCE  0E01               	movlw	high _H
  6457  010CD0  6EE6               	movwf	postinc1,c
  6458  010CD2  EC43  F0E9         	call	_hid_display	;wreg free
  6459                           
  6460                           ;main.c: 408:     switch (H.hid_display) {
  6461  010CD6  EF96  F08A         	goto	l17736
  6462  010CDA                     l1489:
  6463                           
  6464                           ; BSR set to: 1
  6465                           ;main.c: 410:      V.calib = 0;
  6466  010CDA  0102               	movlb	2	; () banked
  6467  010CDC  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  6468                           
  6469                           ; BSR set to: 2
  6470                           ;main.c: 411:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f       ", (C.day) ? 'D' 
      +                          : ' ', C.p_pv);
  6471  010CDE  EE22  F22D         	lfsr	2,_C+302	;volatile
  6472  010CE2  50DF               	movf	indf2,w,c
  6473  010CE4  A4D8               	btfss	status,2,c
  6474  010CE6  D002               	goto	l17698
  6475                           
  6476                           ; BSR set to: 2
  6477  010CE8  0E20               	movlw	32
  6478  010CEA  D001               	goto	L1
  6479  010CEC                     l17698:
  6480                           
  6481                           ; BSR set to: 2
  6482  010CEC  0E44               	movlw	68
  6483  010CEE                     L1:
  6484  010CEE  6E34               	movwf	(btemp+10)^0,c
  6485  010CF0  0E00               	movlw	0
  6486  010CF2  6E35               	movwf	(btemp+11)^0,c
  6487                           
  6488                           ;stkvar	_main$4037 @ sp[(-19)+2]
  6489  010CF4  0EEF               	movlw	-17
  6490  010CF6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  6491  010CFC  0EF0               	movlw	-16
  6492  010CFE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  6493                           
  6494                           ; BSR set to: 2
  6495  010D04  EE22  F17B         	lfsr	2,_C+124	;volatile
  6496  010D08  006F FF7B FFE6     	movff	postinc2,postinc1
  6497  010D0E  006F FF7B FFE6     	movff	postinc2,postinc1
  6498  010D14  006F FF7B FFE6     	movff	postinc2,postinc1
  6499  010D1A  006F FF7B FFE6     	movff	postinc2,postinc1
  6500                           
  6501                           ;stkvar	_main$4037 @ sp[(-23)+2]
  6502  010D20  0EEB               	movlw	-21
  6503  010D22  006F FF8F FFE6     	movff	plusw1,postinc1
  6504  010D28  006F FF8F FFE6     	movff	plusw1,postinc1
  6505  010D2E  0EB4               	movlw	low STR_36
  6506  010D30  6EE6               	movwf	postinc1,c
  6507  010D32  0EFC               	movlw	high STR_36
  6508  010D34  6EE6               	movwf	postinc1,c
  6509  010D36  0E00               	movlw	0
  6510  010D38  6EE6               	movwf	postinc1,c
  6511  010D3A  0E00               	movlw	0
  6512  010D3C  6EE6               	movwf	postinc1,c
  6513  010D3E  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  6514  010D42  0060  F0AB  FFE6   	movff	btemp,postinc1
  6515  010D48  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6516  010D4E  0E0A               	movlw	10
  6517  010D50  6EE6               	movwf	postinc1,c
  6518  010D52  ECA5  F0FD         	call	_sprintf	;wreg free
  6519                           
  6520                           ; BSR set to: 0
  6521                           ;main.c: 412:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f        ", C.p_load);
  6522  010D56  EE22  F173         	lfsr	2,_C+116	;volatile
  6523  010D5A  006F FF7B FFE6     	movff	postinc2,postinc1
  6524  010D60  006F FF7B FFE6     	movff	postinc2,postinc1
  6525  010D66  006F FF7B FFE6     	movff	postinc2,postinc1
  6526  010D6C  006F FF7B FFE6     	movff	postinc2,postinc1
  6527  010D72  0E9D               	movlw	low STR_37
  6528  010D74  6EE6               	movwf	postinc1,c
  6529  010D76  0EFC               	movlw	high STR_37
  6530  010D78  6EE6               	movwf	postinc1,c
  6531  010D7A  0E00               	movlw	0
  6532  010D7C  6EE6               	movwf	postinc1,c
  6533  010D7E  0E01               	movlw	1
  6534  010D80  6EE6               	movwf	postinc1,c
  6535  010D82  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  6536  010D86  0060  F0AB  FFE6   	movff	btemp,postinc1
  6537  010D8C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6538  010D92  0E08               	movlw	8
  6539  010D94  6EE6               	movwf	postinc1,c
  6540  010D96  ECA5  F0FD         	call	_sprintf	;wreg free
  6541                           
  6542                           ; BSR set to: 0
  6543                           ;main.c: 413:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f        ", C.p_inverter);
  6544  010D9A  EE22  F177         	lfsr	2,_C+120	;volatile
  6545  010D9E  006F FF7B FFE6     	movff	postinc2,postinc1
  6546  010DA4  006F FF7B FFE6     	movff	postinc2,postinc1
  6547  010DAA  006F FF7B FFE6     	movff	postinc2,postinc1
  6548  010DB0  006F FF7B FFE6     	movff	postinc2,postinc1
  6549  010DB6  0E86               	movlw	low STR_38
  6550  010DB8  6EE6               	movwf	postinc1,c
  6551  010DBA  0EFC               	movlw	high STR_38
  6552  010DBC  6EE6               	movwf	postinc1,c
  6553  010DBE  0E00               	movlw	0
  6554  010DC0  6EE6               	movwf	postinc1,c
  6555  010DC2  0E02               	movlw	2
  6556  010DC4  6EE6               	movwf	postinc1,c
  6557  010DC6  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  6558  010DCA  0060  F0AB  FFE6   	movff	btemp,postinc1
  6559  010DD0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6560  010DD6  0E08               	movlw	8
  6561  010DD8  6EE6               	movwf	postinc1,c
  6562  010DDA  ECA5  F0FD         	call	_sprintf	;wreg free
  6563                           
  6564                           ; BSR set to: 0
  6565                           ;main.c: 415:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f        ", (C.day) ? 'D' 
      +                          : ' ', C.pvkw);
  6566  010DDE  EE22  F22D         	lfsr	2,_C+302	;volatile
  6567  010DE2  50DF               	movf	indf2,w,c
  6568  010DE4  A4D8               	btfss	status,2,c
  6569  010DE6  D002               	goto	l17710
  6570                           
  6571                           ; BSR set to: 0
  6572  010DE8  0E20               	movlw	32
  6573  010DEA  D001               	goto	L2
  6574  010DEC                     l17710:
  6575                           
  6576                           ; BSR set to: 0
  6577  010DEC  0E44               	movlw	68
  6578  010DEE                     L2:
  6579  010DEE  6E34               	movwf	(btemp+10)^0,c
  6580  010DF0  0E00               	movlw	0
  6581  010DF2  6E35               	movwf	(btemp+11)^0,c
  6582                           
  6583                           ;stkvar	_main$4041 @ sp[(-19)+0]
  6584  010DF4  0EED               	movlw	-19
  6585  010DF6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  6586  010DFC  0EEE               	movlw	-18
  6587  010DFE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  6588                           
  6589                           ; BSR set to: 0
  6590  010E04  EE22  F1A7         	lfsr	2,_C+168	;volatile
  6591  010E08  006F FF7B FFE6     	movff	postinc2,postinc1
  6592  010E0E  006F FF7B FFE6     	movff	postinc2,postinc1
  6593  010E14  006F FF7B FFE6     	movff	postinc2,postinc1
  6594  010E1A  006F FF7B FFE6     	movff	postinc2,postinc1
  6595                           
  6596                           ;stkvar	_main$4041 @ sp[(-23)+0]
  6597  010E20  0EE9               	movlw	-23
  6598  010E22  006F FF8F FFE6     	movff	plusw1,postinc1
  6599  010E28  006F FF8F FFE6     	movff	plusw1,postinc1
  6600  010E2E  0E6F               	movlw	low STR_39
  6601  010E30  6EE6               	movwf	postinc1,c
  6602  010E32  0EFC               	movlw	high STR_39
  6603  010E34  6EE6               	movwf	postinc1,c
  6604  010E36  0E01               	movlw	1
  6605  010E38  6EE6               	movwf	postinc1,c
  6606  010E3A  0E00               	movlw	0
  6607  010E3C  6EE6               	movwf	postinc1,c
  6608  010E3E  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  6609  010E42  0060  F0AB  FFE6   	movff	btemp,postinc1
  6610  010E48  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6611  010E4E  0E0A               	movlw	10
  6612  010E50  6EE6               	movwf	postinc1,c
  6613  010E52  ECA5  F0FD         	call	_sprintf	;wreg free
  6614                           
  6615                           ; BSR set to: 0
  6616                           ;main.c: 416:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f         ", C.loadkw);
  6617  010E56  EE22  F1AF         	lfsr	2,_C+176	;volatile
  6618  010E5A  006F FF7B FFE6     	movff	postinc2,postinc1
  6619  010E60  006F FF7B FFE6     	movff	postinc2,postinc1
  6620  010E66  006F FF7B FFE6     	movff	postinc2,postinc1
  6621  010E6C  006F FF7B FFE6     	movff	postinc2,postinc1
  6622  010E72  0E58               	movlw	low STR_40
  6623  010E74  6EE6               	movwf	postinc1,c
  6624  010E76  0EFC               	movlw	high STR_40
  6625  010E78  6EE6               	movwf	postinc1,c
  6626  010E7A  0E01               	movlw	1
  6627  010E7C  6EE6               	movwf	postinc1,c
  6628  010E7E  0E01               	movlw	1
  6629  010E80  6EE6               	movwf	postinc1,c
  6630  010E82  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  6631  010E86  0060  F0AB  FFE6   	movff	btemp,postinc1
  6632  010E8C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6633  010E92  0E08               	movlw	8
  6634  010E94  6EE6               	movwf	postinc1,c
  6635  010E96  ECA5  F0FD         	call	_sprintf	;wreg free
  6636                           
  6637                           ; BSR set to: 0
  6638                           ;main.c: 417:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f         ", C.invkw);
  6639  010E9A  EE22  F1AB         	lfsr	2,_C+172	;volatile
  6640  010E9E  006F FF7B FFE6     	movff	postinc2,postinc1
  6641  010EA4  006F FF7B FFE6     	movff	postinc2,postinc1
  6642  010EAA  006F FF7B FFE6     	movff	postinc2,postinc1
  6643  010EB0  006F FF7B FFE6     	movff	postinc2,postinc1
  6644  010EB6  0E41               	movlw	low STR_41
  6645  010EB8  6EE6               	movwf	postinc1,c
  6646  010EBA  0EFC               	movlw	high STR_41
  6647  010EBC  6EE6               	movwf	postinc1,c
  6648  010EBE  0E01               	movlw	1
  6649  010EC0  6EE6               	movwf	postinc1,c
  6650  010EC2  0E02               	movlw	2
  6651  010EC4  6EE6               	movwf	postinc1,c
  6652  010EC6  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  6653  010ECA  0060  F0AB  FFE6   	movff	btemp,postinc1
  6654  010ED0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6655  010ED6  0E08               	movlw	8
  6656  010ED8  6EE6               	movwf	postinc1,c
  6657  010EDA  ECA5  F0FD         	call	_sprintf	;wreg free
  6658                           
  6659                           ;main.c: 418:      break;
  6660  010EDE  D33C               	goto	l17738
  6661  010EE0                     l1499:
  6662                           
  6663                           ; BSR set to: 1
  6664                           ;main.c: 420:      V.calib = 0;
  6665  010EE0  0102               	movlb	2	; () banked
  6666  010EE2  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  6667                           
  6668                           ; BSR set to: 2
  6669                           ;main.c: 421:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f     ", C.calc[V_PV], 
      +                          C.calc[C_PV]);
  6670  010EE4  EE22  F103         	lfsr	2,_C+4	;volatile
  6671  010EE8  006F FF7B FFE6     	movff	postinc2,postinc1
  6672  010EEE  006F FF7B FFE6     	movff	postinc2,postinc1
  6673  010EF4  006F FF7B FFE6     	movff	postinc2,postinc1
  6674  010EFA  006F FF7B FFE6     	movff	postinc2,postinc1
  6675  010F00  EE22  F113         	lfsr	2,_C+20	;volatile
  6676  010F04  006F FF7B FFE6     	movff	postinc2,postinc1
  6677  010F0A  006F FF7B FFE6     	movff	postinc2,postinc1
  6678  010F10  006F FF7B FFE6     	movff	postinc2,postinc1
  6679  010F16  006F FF7B FFE6     	movff	postinc2,postinc1
  6680  010F1C  0E10               	movlw	low STR_42
  6681  010F1E  6EE6               	movwf	postinc1,c
  6682  010F20  0EFD               	movlw	high STR_42
  6683  010F22  6EE6               	movwf	postinc1,c
  6684  010F24  0E00               	movlw	0
  6685  010F26  6EE6               	movwf	postinc1,c
  6686  010F28  0E00               	movlw	0
  6687  010F2A  6EE6               	movwf	postinc1,c
  6688  010F2C  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  6689  010F30  0060  F0AB  FFE6   	movff	btemp,postinc1
  6690  010F36  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6691  010F3C  0E0C               	movlw	12
  6692  010F3E  6EE6               	movwf	postinc1,c
  6693  010F40  ECA5  F0FD         	call	_sprintf	;wreg free
  6694                           
  6695                           ;main.c: 422:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f     ", C.calc[V_BAT],
      +                           C.calc[C_BATT]);
  6696  010F44  EE22  F0FF         	lfsr	2,_C
  6697  010F48  006F FF7B FFE6     	movff	postinc2,postinc1
  6698  010F4E  006F FF7B FFE6     	movff	postinc2,postinc1
  6699  010F54  006F FF7B FFE6     	movff	postinc2,postinc1
  6700  010F5A  006F FF7B FFE6     	movff	postinc2,postinc1
  6701  010F60  EE22  F10F         	lfsr	2,_C+16	;volatile
  6702  010F64  006F FF7B FFE6     	movff	postinc2,postinc1
  6703  010F6A  006F FF7B FFE6     	movff	postinc2,postinc1
  6704  010F70  006F FF7B FFE6     	movff	postinc2,postinc1
  6705  010F76  006F FF7B FFE6     	movff	postinc2,postinc1
  6706  010F7C  0EE2               	movlw	low STR_43
  6707  010F7E  6EE6               	movwf	postinc1,c
  6708  010F80  0EFC               	movlw	high STR_43
  6709  010F82  6EE6               	movwf	postinc1,c
  6710  010F84  0E00               	movlw	0
  6711  010F86  6EE6               	movwf	postinc1,c
  6712  010F88  0E01               	movlw	1
  6713  010F8A  6EE6               	movwf	postinc1,c
  6714  010F8C  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  6715  010F90  0060  F0AB  FFE6   	movff	btemp,postinc1
  6716  010F96  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6717  010F9C  0E0C               	movlw	12
  6718  010F9E  6EE6               	movwf	postinc1,c
  6719  010FA0  ECA5  F0FD         	call	_sprintf	;wreg free
  6720                           
  6721                           ;main.c: 423:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f     ", C.calc[V_CC], 
      +                          C.c_load);
  6722  010FA4  EE22  F13F         	lfsr	2,_C+64	;volatile
  6723  010FA8  006F FF7B FFE6     	movff	postinc2,postinc1
  6724  010FAE  006F FF7B FFE6     	movff	postinc2,postinc1
  6725  010FB4  006F FF7B FFE6     	movff	postinc2,postinc1
  6726  010FBA  006F FF7B FFE6     	movff	postinc2,postinc1
  6727  010FC0  EE22  F107         	lfsr	2,_C+8	;volatile
  6728  010FC4  006F FF7B FFE6     	movff	postinc2,postinc1
  6729  010FCA  006F FF7B FFE6     	movff	postinc2,postinc1
  6730  010FD0  006F FF7B FFE6     	movff	postinc2,postinc1
  6731  010FD6  006F FF7B FFE6     	movff	postinc2,postinc1
  6732  010FDC  0EF9               	movlw	low STR_44
  6733  010FDE  6EE6               	movwf	postinc1,c
  6734  010FE0  0EFC               	movlw	high STR_44
  6735  010FE2  6EE6               	movwf	postinc1,c
  6736  010FE4  0E00               	movlw	0
  6737  010FE6  6EE6               	movwf	postinc1,c
  6738  010FE8  0E02               	movlw	2
  6739  010FEA  6EE6               	movwf	postinc1,c
  6740  010FEC  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  6741  010FF0  0060  F0AB  FFE6   	movff	btemp,postinc1
  6742  010FF6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6743  010FFC  0E0C               	movlw	12
  6744  010FFE  6EE6               	movwf	postinc1,c
  6745  011000  ECA5  F0FD         	call	_sprintf	;wreg free
  6746                           
  6747                           ;main.c: 425:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f         ", C.bkwi);
  6748  011004  EE22  F19F         	lfsr	2,_C+160	;volatile
  6749  011008  006F FF7B FFE6     	movff	postinc2,postinc1
  6750  01100E  006F FF7B FFE6     	movff	postinc2,postinc1
  6751  011014  006F FF7B FFE6     	movff	postinc2,postinc1
  6752  01101A  006F FF7B FFE6     	movff	postinc2,postinc1
  6753  011020  0EFC               	movlw	low STR_45
  6754  011022  6EE6               	movwf	postinc1,c
  6755  011024  0EFB               	movlw	high STR_45
  6756  011026  6EE6               	movwf	postinc1,c
  6757  011028  0E01               	movlw	1
  6758  01102A  6EE6               	movwf	postinc1,c
  6759  01102C  0E00               	movlw	0
  6760  01102E  6EE6               	movwf	postinc1,c
  6761  011030  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  6762  011034  0060  F0AB  FFE6   	movff	btemp,postinc1
  6763  01103A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6764  011040  0E08               	movlw	8
  6765  011042  6EE6               	movwf	postinc1,c
  6766  011044  ECA5  F0FD         	call	_sprintf	;wreg free
  6767                           
  6768                           ;main.c: 426:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f         ", C.bkwo);
  6769  011048  EE22  F1A3         	lfsr	2,_C+164	;volatile
  6770  01104C  006F FF7B FFE6     	movff	postinc2,postinc1
  6771  011052  006F FF7B FFE6     	movff	postinc2,postinc1
  6772  011058  006F FF7B FFE6     	movff	postinc2,postinc1
  6773  01105E  006F FF7B FFE6     	movff	postinc2,postinc1
  6774  011064  0E13               	movlw	low STR_46
  6775  011066  6EE6               	movwf	postinc1,c
  6776  011068  0EFC               	movlw	high STR_46
  6777  01106A  6EE6               	movwf	postinc1,c
  6778  01106C  0E01               	movlw	1
  6779  01106E  6EE6               	movwf	postinc1,c
  6780  011070  0E01               	movlw	1
  6781  011072  6EE6               	movwf	postinc1,c
  6782  011074  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  6783  011078  0060  F0AB  FFE6   	movff	btemp,postinc1
  6784  01107E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6785  011084  0E08               	movlw	8
  6786  011086  6EE6               	movwf	postinc1,c
  6787  011088  ECA5  F0FD         	call	_sprintf	;wreg free
  6788                           
  6789                           ;main.c: 427:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f         ", C.bkwi + C.bkw
      +                          o);
  6790  01108C  EE22  F1A3         	lfsr	2,_C+164	;volatile
  6791  011090  006F FF7B FFE6     	movff	postinc2,postinc1
  6792  011096  006F FF7B FFE6     	movff	postinc2,postinc1
  6793  01109C  006F FF7B FFE6     	movff	postinc2,postinc1
  6794  0110A2  006F FF7B FFE6     	movff	postinc2,postinc1
  6795  0110A8  EE22  F19F         	lfsr	2,_C+160	;volatile
  6796  0110AC  006F FF7B FFE6     	movff	postinc2,postinc1
  6797  0110B2  006F FF7B FFE6     	movff	postinc2,postinc1
  6798  0110B8  006F FF7B FFE6     	movff	postinc2,postinc1
  6799  0110BE  006F FF7B FFE6     	movff	postinc2,postinc1
  6800  0110C4  EC47  F0B7         	call	___fladd	;wreg free
  6801  0110C8  0060  F0AB  FFE6   	movff	btemp,postinc1
  6802  0110CE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6803  0110D4  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  6804  0110DA  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  6805  0110E0  0E2A               	movlw	low STR_47
  6806  0110E2  6EE6               	movwf	postinc1,c
  6807  0110E4  0EFC               	movlw	high STR_47
  6808  0110E6  6EE6               	movwf	postinc1,c
  6809  0110E8  0E01               	movlw	1
  6810  0110EA  6EE6               	movwf	postinc1,c
  6811  0110EC  0E02               	movlw	2
  6812  0110EE  6EE6               	movwf	postinc1,c
  6813  0110F0  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  6814  0110F4  0060  F0AB  FFE6   	movff	btemp,postinc1
  6815  0110FA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6816  011100  0E08               	movlw	8
  6817  011102  6EE6               	movwf	postinc1,c
  6818  011104  ECA5  F0FD         	call	_sprintf	;wreg free
  6819                           
  6820                           ;main.c: 428:      break;
  6821  011108  D227               	goto	l17738
  6822  01110A                     l1500:
  6823                           
  6824                           ; BSR set to: 1
  6825                           ;main.c: 430:      V.calib = 0;
  6826  01110A  0102               	movlb	2	; () banked
  6827  01110C  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  6828                           
  6829                           ; BSR set to: 2
  6830                           ;main.c: 431:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f         ", C.p_bat);
  6831  01110E  EE22  F17F         	lfsr	2,_C+128	;volatile
  6832  011112  006F FF7B FFE6     	movff	postinc2,postinc1
  6833  011118  006F FF7B FFE6     	movff	postinc2,postinc1
  6834  01111E  006F FF7B FFE6     	movff	postinc2,postinc1
  6835  011124  006F FF7B FFE6     	movff	postinc2,postinc1
  6836  01112A  0E57               	movlw	low STR_48
  6837  01112C  6EE6               	movwf	postinc1,c
  6838  01112E  0EFB               	movlw	high STR_48
  6839  011130  6EE6               	movwf	postinc1,c
  6840  011132  0E00               	movlw	0
  6841  011134  6EE6               	movwf	postinc1,c
  6842  011136  0E00               	movlw	0
  6843  011138  6EE6               	movwf	postinc1,c
  6844  01113A  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  6845  01113E  0060  F0AB  FFE6   	movff	btemp,postinc1
  6846  011144  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6847  01114A  0E08               	movlw	8
  6848  01114C  6EE6               	movwf	postinc1,c
  6849  01114E  ECA5  F0FD         	call	_sprintf	;wreg free
  6850                           
  6851                           ;main.c: 432:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f       ", C.dynamic_ah,
      +                           C.pv_ah);
  6852  011152  EE22  F193         	lfsr	2,_C+148	;volatile
  6853  011156  006F FF7B FFE6     	movff	postinc2,postinc1
  6854  01115C  006F FF7B FFE6     	movff	postinc2,postinc1
  6855  011162  006F FF7B FFE6     	movff	postinc2,postinc1
  6856  011168  006F FF7B FFE6     	movff	postinc2,postinc1
  6857  01116E  EE22  F18F         	lfsr	2,_C+144	;volatile
  6858  011172  006F FF7B FFE6     	movff	postinc2,postinc1
  6859  011178  006F FF7B FFE6     	movff	postinc2,postinc1
  6860  01117E  006F FF7B FFE6     	movff	postinc2,postinc1
  6861  011184  006F FF7B FFE6     	movff	postinc2,postinc1
  6862  01118A  0E9F               	movlw	low STR_49
  6863  01118C  6EE6               	movwf	postinc1,c
  6864  01118E  0EFB               	movlw	high STR_49
  6865  011190  6EE6               	movwf	postinc1,c
  6866  011192  0E00               	movlw	0
  6867  011194  6EE6               	movwf	postinc1,c
  6868  011196  0E01               	movlw	1
  6869  011198  6EE6               	movwf	postinc1,c
  6870  01119A  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  6871  01119E  0060  F0AB  FFE6   	movff	btemp,postinc1
  6872  0111A4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6873  0111AA  0E0C               	movlw	12
  6874  0111AC  6EE6               	movwf	postinc1,c
  6875  0111AE  ECA5  F0FD         	call	_sprintf	;wreg free
  6876                           
  6877                           ;main.c: 433:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d V%2.2f        ", spinner
      +                          s(5, 0), C.soc, C.runtime, C.calc[V_BAT]);
  6878  0111B2  EE22  F10F         	lfsr	2,_C+16	;volatile
  6879  0111B6  006F FF7B FFE6     	movff	postinc2,postinc1
  6880  0111BC  006F FF7B FFE6     	movff	postinc2,postinc1
  6881  0111C2  006F FF7B FFE6     	movff	postinc2,postinc1
  6882  0111C8  006F FF7B FFE6     	movff	postinc2,postinc1
  6883  0111CE  EE22  F1B3         	lfsr	2,_C+180	;volatile
  6884  0111D2  006F FF78  F034    	movff	postinc2,btemp+10
  6885  0111D8  006F FF74  F035    	movff	postdec2,btemp+11
  6886  0111DE  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  6887  0111E4  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  6888  0111EA  EE22  F1B5         	lfsr	2,_C+182	;volatile
  6889  0111EE  006F FF78  F034    	movff	postinc2,btemp+10
  6890  0111F4  006F FF74  F035    	movff	postdec2,btemp+11
  6891  0111FA  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  6892  011200  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  6893  011206  0E00               	movlw	0
  6894  011208  6EE6               	movwf	postinc1,c
  6895  01120A  0E05               	movlw	5
  6896  01120C  6EE6               	movwf	postinc1,c
  6897  01120E  EC21  F0FF         	call	_spinners	;wreg free
  6898  011212  502A               	movf	btemp^0,w,c
  6899  011214  6EE6               	movwf	postinc1,c
  6900  011216  0E00               	movlw	0
  6901  011218  6EE6               	movwf	postinc1,c
  6902  01121A  0E9B               	movlw	low STR_50
  6903  01121C  6EE6               	movwf	postinc1,c
  6904  01121E  0EFA               	movlw	high STR_50
  6905  011220  6EE6               	movwf	postinc1,c
  6906  011222  0E00               	movlw	0
  6907  011224  6EE6               	movwf	postinc1,c
  6908  011226  0E02               	movlw	2
  6909  011228  6EE6               	movwf	postinc1,c
  6910  01122A  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  6911  01122E  0060  F0AB  FFE6   	movff	btemp,postinc1
  6912  011234  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6913  01123A  0E0E               	movlw	14
  6914  01123C  6EE6               	movwf	postinc1,c
  6915  01123E  ECA5  F0FD         	call	_sprintf	;wreg free
  6916                           
  6917                           ;main.c: 435:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f             ", C.esr);
  6918  011242  EE22  F187         	lfsr	2,_C+136	;volatile
  6919  011246  006F FF7B FFE6     	movff	postinc2,postinc1
  6920  01124C  006F FF7B FFE6     	movff	postinc2,postinc1
  6921  011252  006F FF7B FFE6     	movff	postinc2,postinc1
  6922  011258  006F FF7B FFE6     	movff	postinc2,postinc1
  6923  01125E  0E3F               	movlw	low STR_51
  6924  011260  6EE6               	movwf	postinc1,c
  6925  011262  0EFB               	movlw	high STR_51
  6926  011264  6EE6               	movwf	postinc1,c
  6927  011266  0E01               	movlw	1
  6928  011268  6EE6               	movwf	postinc1,c
  6929  01126A  0E00               	movlw	0
  6930  01126C  6EE6               	movwf	postinc1,c
  6931  01126E  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  6932  011272  0060  F0AB  FFE6   	movff	btemp,postinc1
  6933  011278  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6934  01127E  0E08               	movlw	8
  6935  011280  6EE6               	movwf	postinc1,c
  6936  011282  ECA5  F0FD         	call	_sprintf	;wreg free
  6937                           
  6938                           ;main.c: 436:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f         ", C.bv_one_load
      +                          , C.load_i1);
  6939  011286  EE22  F219         	lfsr	2,_C+282	;volatile
  6940  01128A  006F FF7B FFE6     	movff	postinc2,postinc1
  6941  011290  006F FF7B FFE6     	movff	postinc2,postinc1
  6942  011296  006F FF7B FFE6     	movff	postinc2,postinc1
  6943  01129C  006F FF7B FFE6     	movff	postinc2,postinc1
  6944  0112A2  EE22  F225         	lfsr	2,_C+294	;volatile
  6945  0112A6  006F FF7B FFE6     	movff	postinc2,postinc1
  6946  0112AC  006F FF7B FFE6     	movff	postinc2,postinc1
  6947  0112B2  006F FF7B FFE6     	movff	postinc2,postinc1
  6948  0112B8  006F FF7B FFE6     	movff	postinc2,postinc1
  6949  0112BE  0E6F               	movlw	low STR_52
  6950  0112C0  6EE6               	movwf	postinc1,c
  6951  0112C2  0EFB               	movlw	high STR_52
  6952  0112C4  6EE6               	movwf	postinc1,c
  6953  0112C6  0E01               	movlw	1
  6954  0112C8  6EE6               	movwf	postinc1,c
  6955  0112CA  0E01               	movlw	1
  6956  0112CC  6EE6               	movwf	postinc1,c
  6957  0112CE  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  6958  0112D2  0060  F0AB  FFE6   	movff	btemp,postinc1
  6959  0112D8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6960  0112DE  0E0C               	movlw	12
  6961  0112E0  6EE6               	movwf	postinc1,c
  6962  0112E2  ECA5  F0FD         	call	_sprintf	;wreg free
  6963                           
  6964                           ;main.c: 437:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f         ", C.bv_full_loa
      +                          d, C.load_i2);
  6965  0112E6  EE22  F21D         	lfsr	2,_C+286	;volatile
  6966  0112EA  006F FF7B FFE6     	movff	postinc2,postinc1
  6967  0112F0  006F FF7B FFE6     	movff	postinc2,postinc1
  6968  0112F6  006F FF7B FFE6     	movff	postinc2,postinc1
  6969  0112FC  006F FF7B FFE6     	movff	postinc2,postinc1
  6970  011302  EE22  F229         	lfsr	2,_C+298	;volatile
  6971  011306  006F FF7B FFE6     	movff	postinc2,postinc1
  6972  01130C  006F FF7B FFE6     	movff	postinc2,postinc1
  6973  011312  006F FF7B FFE6     	movff	postinc2,postinc1
  6974  011318  006F FF7B FFE6     	movff	postinc2,postinc1
  6975  01131E  0E87               	movlw	low STR_53
  6976  011320  6EE6               	movwf	postinc1,c
  6977  011322  0EFB               	movlw	high STR_53
  6978  011324  6EE6               	movwf	postinc1,c
  6979  011326  0E01               	movlw	1
  6980  011328  6EE6               	movwf	postinc1,c
  6981  01132A  0E02               	movlw	2
  6982  01132C  6EE6               	movwf	postinc1,c
  6983  01132E  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  6984  011332  0060  F0AB  FFE6   	movff	btemp,postinc1
  6985  011338  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6986  01133E  0E0C               	movlw	12
  6987  011340  6EE6               	movwf	postinc1,c
  6988  011342  ECA5  F0FD         	call	_sprintf	;wreg free
  6989                           
  6990                           ;main.c: 438:      break;
  6991  011346  D108               	goto	l17738
  6992  011348                     l17722:
  6993                           
  6994                           ; BSR set to: 1
  6995                           ;main.c: 440:      if (!V.calib) {
  6996  011348  0102               	movlb	2	; () banked
  6997  01134A  51B0               	movf	(_V+169)& (0+255),w,b	;volatile
  6998  01134C  A4D8               	btfss	status,2,c
  6999  01134E  D02D               	goto	l17726
  7000                           
  7001                           ; BSR set to: 2
  7002                           ;main.c: 441:       lp_filter(0.0, i, -1);
  7003  011350  0EFF               	movlw	255
  7004  011352  6EE6               	movwf	postinc1,c
  7005                           
  7006                           ;stkvar	_i @ sp[(-20)+16]
  7007  011354  0EFC               	movlw	-4
  7008  011356  50E3               	movf	plusw1,w,c
  7009  011358  6EE6               	movwf	postinc1,c
  7010  01135A  0E00               	movlw	0
  7011  01135C  6EE6               	movwf	postinc1,c
  7012  01135E  0E00               	movlw	0
  7013  011360  6EE6               	movwf	postinc1,c
  7014  011362  0E00               	movlw	0
  7015  011364  6EE6               	movwf	postinc1,c
  7016  011366  0E00               	movlw	0
  7017  011368  6EE6               	movwf	postinc1,c
  7018  01136A  EC41  F0ED         	call	_lp_filter	;wreg free
  7019                           
  7020                           ;main.c: 442:       lp_filter(0.0, j, -1);
  7021  01136E  0EFF               	movlw	255
  7022  011370  6EE6               	movwf	postinc1,c
  7023                           
  7024                           ;stkvar	_j @ sp[(-20)+15]
  7025  011372  0EFB               	movlw	-5
  7026  011374  50E3               	movf	plusw1,w,c
  7027  011376  6EE6               	movwf	postinc1,c
  7028  011378  0E00               	movlw	0
  7029  01137A  6EE6               	movwf	postinc1,c
  7030  01137C  0E00               	movlw	0
  7031  01137E  6EE6               	movwf	postinc1,c
  7032  011380  0E00               	movlw	0
  7033  011382  6EE6               	movwf	postinc1,c
  7034  011384  0E00               	movlw	0
  7035  011386  6EE6               	movwf	postinc1,c
  7036  011388  EC41  F0ED         	call	_lp_filter	;wreg free
  7037                           
  7038                           ;main.c: 443:       lp_filter(0.0, k, -1);
  7039  01138C  0EFF               	movlw	255
  7040  01138E  6EE6               	movwf	postinc1,c
  7041                           
  7042                           ;stkvar	_k @ sp[(-20)+14]
  7043  011390  0EFA               	movlw	-6
  7044  011392  50E3               	movf	plusw1,w,c
  7045  011394  6EE6               	movwf	postinc1,c
  7046  011396  0E00               	movlw	0
  7047  011398  6EE6               	movwf	postinc1,c
  7048  01139A  0E00               	movlw	0
  7049  01139C  6EE6               	movwf	postinc1,c
  7050  01139E  0E00               	movlw	0
  7051  0113A0  6EE6               	movwf	postinc1,c
  7052  0113A2  0E00               	movlw	0
  7053  0113A4  6EE6               	movwf	postinc1,c
  7054  0113A6  EC41  F0ED         	call	_lp_filter	;wreg free
  7055  0113AA                     l17726:
  7056                           
  7057                           ;main.c: 445:      V.calib = 1;
  7058  0113AA  0E01               	movlw	1
  7059  0113AC  0102               	movlb	2	; () banked
  7060  0113AE  6FB0               	movwf	(_V+169)& (0+255),b	;volatile
  7061                           
  7062                           ; BSR set to: 2
  7063                           ;main.c: 446:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          i), C.calc[i], inp_index);
  7064                           ;stkvar	_inp_index @ sp[(-19)+13]
  7065  0113B0  0EFA               	movlw	-6
  7066  0113B2  50E3               	movf	plusw1,w,c
  7067  0113B4  6EE6               	movwf	postinc1,c
  7068  0113B6  0E00               	movlw	0
  7069  0113B8  6EE6               	movwf	postinc1,c
  7070                           
  7071                           ;stkvar	_i @ sp[(-21)+16]
  7072  0113BA  0EFB               	movlw	-5
  7073  0113BC  50E3               	movf	plusw1,w,c
  7074  0113BE  0D04               	mullw	4
  7075  0113C0  0EFF               	movlw	low _C
  7076  0113C2  24F3               	addwf	243,w,c
  7077  0113C4  6ED9               	movwf	fsr2l,c
  7078  0113C6  0E08               	movlw	high _C
  7079  0113C8  20F4               	addwfc	prodh,w,c
  7080  0113CA  6EDA               	movwf	fsr2h,c
  7081  0113CC  006F FF7B FFE6     	movff	postinc2,postinc1
  7082  0113D2  006F FF7B FFE6     	movff	postinc2,postinc1
  7083  0113D8  006F FF7B FFE6     	movff	postinc2,postinc1
  7084  0113DE  006F FF7B FFE6     	movff	postinc2,postinc1
  7085                           
  7086                           ;stkvar	_i @ sp[(-25)+16]
  7087  0113E4  0EF7               	movlw	-9
  7088  0113E6  50E3               	movf	plusw1,w,c
  7089  0113E8  6EE6               	movwf	postinc1,c
  7090  0113EA  ECE0  F013         	call	_get_raw_result	;wreg free
  7091  0113EE  0060  F0AB  FFE6   	movff	btemp,postinc1
  7092  0113F4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7093  0113FA  0E87               	movlw	low STR_54
  7094  0113FC  6EE6               	movwf	postinc1,c
  7095  0113FE  0EFE               	movlw	high STR_54
  7096  011400  6EE6               	movwf	postinc1,c
  7097  011402  0E00               	movlw	0
  7098  011404  6EE6               	movwf	postinc1,c
  7099  011406  0E00               	movlw	0
  7100  011408  6EE6               	movwf	postinc1,c
  7101  01140A  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  7102  01140E  0060  F0AB  FFE6   	movff	btemp,postinc1
  7103  011414  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7104  01141A  0E0C               	movlw	12
  7105  01141C  6EE6               	movwf	postinc1,c
  7106  01141E  ECA5  F0FD         	call	_sprintf	;wreg free
  7107                           
  7108                           ; BSR set to: 0
  7109                           ;main.c: 447:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          j), C.calc[j], inp_index + 1);
  7110                           ;stkvar	_inp_index @ sp[(-19)+13]
  7111  011422  0EFA               	movlw	-6
  7112  011424  50E3               	movf	plusw1,w,c
  7113  011426  6E34               	movwf	(btemp+10)^0,c
  7114  011428  6A35               	clrf	(btemp+11)^0,c
  7115  01142A  0E01               	movlw	1
  7116  01142C  2634               	addwf	(btemp+10)^0,f,c
  7117  01142E  0E00               	movlw	0
  7118  011430  2235               	addwfc	(btemp+11)^0,f,c
  7119  011432  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  7120  011438  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  7121                           
  7122                           ;stkvar	_j @ sp[(-21)+15]
  7123  01143E  0EFA               	movlw	-6
  7124  011440  50E3               	movf	plusw1,w,c
  7125  011442  0D04               	mullw	4
  7126  011444  0EFF               	movlw	low _C
  7127  011446  24F3               	addwf	243,w,c
  7128  011448  6ED9               	movwf	fsr2l,c
  7129  01144A  0E08               	movlw	high _C
  7130  01144C  20F4               	addwfc	prodh,w,c
  7131  01144E  6EDA               	movwf	fsr2h,c
  7132  011450  006F FF7B FFE6     	movff	postinc2,postinc1
  7133  011456  006F FF7B FFE6     	movff	postinc2,postinc1
  7134  01145C  006F FF7B FFE6     	movff	postinc2,postinc1
  7135  011462  006F FF7B FFE6     	movff	postinc2,postinc1
  7136                           
  7137                           ;stkvar	_j @ sp[(-25)+15]
  7138  011468  0EF6               	movlw	-10
  7139  01146A  50E3               	movf	plusw1,w,c
  7140  01146C  6EE6               	movwf	postinc1,c
  7141  01146E  ECE0  F013         	call	_get_raw_result	;wreg free
  7142  011472  0060  F0AB  FFE6   	movff	btemp,postinc1
  7143  011478  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7144  01147E  0E87               	movlw	low STR_54
  7145  011480  6EE6               	movwf	postinc1,c
  7146  011482  0EFE               	movlw	high STR_54
  7147  011484  6EE6               	movwf	postinc1,c
  7148  011486  0E00               	movlw	0
  7149  011488  6EE6               	movwf	postinc1,c
  7150  01148A  0E01               	movlw	1
  7151  01148C  6EE6               	movwf	postinc1,c
  7152  01148E  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  7153  011492  0060  F0AB  FFE6   	movff	btemp,postinc1
  7154  011498  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7155  01149E  0E0C               	movlw	12
  7156  0114A0  6EE6               	movwf	postinc1,c
  7157  0114A2  ECA5  F0FD         	call	_sprintf	;wreg free
  7158                           
  7159                           ; BSR set to: 0
  7160                           ;main.c: 448:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          k), C.calc[k], inp_index + 2);
  7161                           ;stkvar	_inp_index @ sp[(-19)+13]
  7162  0114A6  0EFA               	movlw	-6
  7163  0114A8  50E3               	movf	plusw1,w,c
  7164  0114AA  6E34               	movwf	(btemp+10)^0,c
  7165  0114AC  6A35               	clrf	(btemp+11)^0,c
  7166  0114AE  0E02               	movlw	2
  7167  0114B0  2634               	addwf	(btemp+10)^0,f,c
  7168  0114B2  0E00               	movlw	0
  7169  0114B4  2235               	addwfc	(btemp+11)^0,f,c
  7170  0114B6  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  7171  0114BC  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  7172                           
  7173                           ;stkvar	_k @ sp[(-21)+14]
  7174  0114C2  0EF9               	movlw	-7
  7175  0114C4  50E3               	movf	plusw1,w,c
  7176  0114C6  0D04               	mullw	4
  7177  0114C8  0EFF               	movlw	low _C
  7178  0114CA  24F3               	addwf	243,w,c
  7179  0114CC  6ED9               	movwf	fsr2l,c
  7180  0114CE  0E08               	movlw	high _C
  7181  0114D0  20F4               	addwfc	prodh,w,c
  7182  0114D2  6EDA               	movwf	fsr2h,c
  7183  0114D4  006F FF7B FFE6     	movff	postinc2,postinc1
  7184  0114DA  006F FF7B FFE6     	movff	postinc2,postinc1
  7185  0114E0  006F FF7B FFE6     	movff	postinc2,postinc1
  7186  0114E6  006F FF7B FFE6     	movff	postinc2,postinc1
  7187                           
  7188                           ;stkvar	_k @ sp[(-25)+14]
  7189  0114EC  0EF5               	movlw	-11
  7190  0114EE  50E3               	movf	plusw1,w,c
  7191  0114F0  6EE6               	movwf	postinc1,c
  7192  0114F2  ECE0  F013         	call	_get_raw_result	;wreg free
  7193  0114F6  0060  F0AB  FFE6   	movff	btemp,postinc1
  7194  0114FC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7195  011502  0E87               	movlw	low STR_54
  7196  011504  6EE6               	movwf	postinc1,c
  7197  011506  0EFE               	movlw	high STR_54
  7198  011508  6EE6               	movwf	postinc1,c
  7199  01150A  0E00               	movlw	0
  7200  01150C  6EE6               	movwf	postinc1,c
  7201  01150E  0E02               	movlw	2
  7202  011510  6EE6               	movwf	postinc1,c
  7203  011512  ECD9  F011         	call	_get_vterm_ptr	;wreg free
  7204  011516  0060  F0AB  FFE6   	movff	btemp,postinc1
  7205  01151C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7206  011522  0E0C               	movlw	12
  7207  011524  6EE6               	movwf	postinc1,c
  7208  011526  ECA5  F0FD         	call	_sprintf	;wreg free
  7209                           
  7210                           ;main.c: 449:      break;
  7211  01152A  D016               	goto	l17738
  7212  01152C                     l17736:
  7213  01152C  0101               	movlb	1	; () banked
  7214  01152E  519B               	movf	_H& (0+255),w,b
  7215  011530  6E34               	movwf	(btemp+10)^0,c
  7216  011532  6A35               	clrf	(btemp+11)^0,c
  7217                           
  7218                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7219                           ; Switch size 1, requested type "simple"
  7220                           ; Number of cases is 1, Range of values is 0 to 0
  7221                           ; switch strategies available:
  7222                           ; Name         Instructions Cycles
  7223                           ; simple_byte            4     3 (average)
  7224                           ;	Chosen strategy is simple_byte
  7225  011534  5035               	movf	(btemp+11)^0,w,c
  7226  011536  0A00               	xorlw	0	; case 0
  7227  011538  A4D8               	btfss	status,2,c
  7228  01153A  D00E               	goto	l17738
  7229                           
  7230                           ; BSR set to: 1
  7231                           ; Switch size 1, requested type "simple"
  7232                           ; Number of cases is 4, Range of values is 0 to 3
  7233                           ; switch strategies available:
  7234                           ; Name         Instructions Cycles
  7235                           ; simple_byte           13     7 (average)
  7236                           ;	Chosen strategy is simple_byte
  7237  01153C  5034               	movf	(btemp+10)^0,w,c
  7238  01153E  0A00               	xorlw	0	; case 0
  7239  011540  B4D8               	btfsc	status,2,c
  7240  011542  D4CE               	goto	l1499
  7241  011544  0A01               	xorlw	1	; case 1
  7242  011546  B4D8               	btfsc	status,2,c
  7243  011548  EF6D  F086         	goto	l1489
  7244  01154C  0A03               	xorlw	3	; case 2
  7245  01154E  B4D8               	btfsc	status,2,c
  7246  011550  D5DC               	goto	l1500
  7247  011552  0A01               	xorlw	1	; case 3
  7248  011554  B4D8               	btfsc	status,2,c
  7249  011556  D6F8               	goto	l17722
  7250  011558                     l17738:
  7251                           
  7252                           ;main.c: 453:     clear_hid_pflags(&H);
  7253  011558  0E9B               	movlw	low _H
  7254  01155A  6EE6               	movwf	postinc1,c
  7255  01155C  0E01               	movlw	high _H
  7256  01155E  6EE6               	movwf	postinc1,c
  7257  011560  EC77  F00B         	call	_clear_hid_pflags	;wreg free
  7258                           
  7259                           ;main.c: 455:    StartTimer(TMR_DISPLAY, 250);
  7260  011564  0EFA               	movlw	250
  7261  011566  6EE6               	movwf	postinc1,c
  7262  011568  0E00               	movlw	0
  7263  01156A  6EE6               	movwf	postinc1,c
  7264  01156C  0E0A               	movlw	10
  7265  01156E  6EE6               	movwf	postinc1,c
  7266  011570  ECD0  F00F         	call	_StartTimer	;wreg free
  7267                           
  7268                           ;main.c: 456:    V.enter = check_enter_button(&H);
  7269  011574  0E9B               	movlw	low _H
  7270  011576  6EE6               	movwf	postinc1,c
  7271  011578  0E01               	movlw	high _H
  7272  01157A  6EE6               	movwf	postinc1,c
  7273  01157C  EC6B  F00A         	call	_check_enter_button	;wreg free
  7274  011580  502A               	movf	btemp^0,w,c
  7275  011582  0102               	movlb	2	; () banked
  7276  011584  6FB1               	movwf	(_V+170)& (0+255),b	;volatile
  7277                           
  7278                           ; BSR set to: 2
  7279                           ;main.c: 457:    if (V.enter && (H.hid_display != HID_AUX)) {
  7280  011586  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
  7281  011588  B4D8               	btfsc	status,2,c
  7282  01158A  D013               	goto	l17752
  7283                           
  7284                           ; BSR set to: 2
  7285  01158C  0E03               	movlw	3
  7286  01158E  0101               	movlb	1	; () banked
  7287  011590  199B               	xorwf	_H& (0+255),w,b
  7288  011592  B4D8               	btfsc	status,2,c
  7289  011594  D00E               	goto	l17752
  7290                           
  7291                           ; BSR set to: 1
  7292                           ;main.c: 458:     V.enter = 0;
  7293  011596  0102               	movlb	2	; () banked
  7294  011598  6BB1               	clrf	(_V+170)& (0+255),b	;volatile
  7295                           
  7296                           ; BSR set to: 2
  7297                           ;main.c: 459:     V.screen = ~V.screen;
  7298  01159A  A1A0               	btfss	(_V+153)& (0+255),0,b	;volatile
  7299  01159C  D002               	goto	u17300
  7300  01159E  0E01               	movlw	1
  7301  0115A0  D001               	goto	u17306
  7302  0115A2                     u17300:
  7303  0115A2  0E00               	movlw	0
  7304  0115A4                     u17306:
  7305  0115A4  0AFF               	xorlw	255
  7306  0115A6  6E35               	movwf	(btemp+11)^0,c
  7307  0115A8  51A0               	movf	(_V+153)& (0+255),w,b	;volatile
  7308  0115AA  1835               	xorwf	(btemp+11)^0,w,c
  7309  0115AC  0BFE               	andlw	-2
  7310  0115AE  1835               	xorwf	(btemp+11)^0,w,c
  7311  0115B0  6FA0               	movwf	(_V+153)& (0+255),b	;volatile
  7312  0115B2                     l17752:
  7313                           
  7314                           ;main.c: 461:    set_vterm(V.screen);
  7315  0115B2  0102               	movlb	2	; () banked
  7316  0115B4  A1A0               	btfss	(_V+153)& (0+255),0,b	;volatile
  7317  0115B6  D002               	goto	u17310
  7318  0115B8  0E01               	movlw	1
  7319  0115BA  D001               	goto	u17316
  7320  0115BC                     u17310:
  7321  0115BC  0E00               	movlw	0
  7322  0115BE                     u17316:
  7323  0115BE  6EE6               	movwf	postinc1,c
  7324  0115C0  EC51  F014         	call	_set_vterm	;wreg free
  7325                           
  7326                           ;main.c: 462:    update_lcd(V.screen);
  7327  0115C4  0102               	movlb	2	; () banked
  7328  0115C6  A1A0               	btfss	(_V+153)& (0+255),0,b	;volatile
  7329  0115C8  D002               	goto	u17320
  7330  0115CA  0E01               	movlw	1
  7331  0115CC  D001               	goto	u17326
  7332  0115CE                     u17320:
  7333  0115CE  0E00               	movlw	0
  7334  0115D0                     u17326:
  7335  0115D0  6EE6               	movwf	postinc1,c
  7336  0115D2  EC57  F0F6         	call	_update_lcd	;wreg free
  7337                           
  7338                           ;main.c: 463:    display_history();
  7339  0115D6  EC84  F0DA         	call	_display_history	;wreg free
  7340                           
  7341                           ;main.c: 465:    wait_lcd_done();
  7342  0115DA  EC18  F015         	call	_wait_lcd_done	;wreg free
  7343                           
  7344                           ; BSR set to: 61
  7345                           ;main.c: 466:    set_dac_a(3.333);
  7346  0115DE  0EDF               	movlw	223
  7347  0115E0  6EE6               	movwf	postinc1,c
  7348  0115E2  0E4F               	movlw	79
  7349  0115E4  6EE6               	movwf	postinc1,c
  7350  0115E6  0E55               	movlw	85
  7351  0115E8  6EE6               	movwf	postinc1,c
  7352  0115EA  0E40               	movlw	64
  7353  0115EC  6EE6               	movwf	postinc1,c
  7354  0115EE  EC2C  F011         	call	_set_dac_a	;wreg free
  7355                           
  7356                           ;main.c: 467:    set_dac_b(6.666);
  7357  0115F2  0EDF               	movlw	223
  7358  0115F4  6EE6               	movwf	postinc1,c
  7359  0115F6  0E4F               	movlw	79
  7360  0115F8  6EE6               	movwf	postinc1,c
  7361  0115FA  0ED5               	movlw	213
  7362  0115FC  6EE6               	movwf	postinc1,c
  7363  0115FE  0E40               	movlw	64
  7364  011600  6EE6               	movwf	postinc1,c
  7365  011602  EC12  F011         	call	_set_dac_b	;wreg free
  7366                           
  7367                           ;main.c: 468:    set_dac();
  7368  011606  EC12  F004         	call	_set_dac	;wreg free
  7369  01160A                     l17766:
  7370                           
  7371                           ;main.c: 474:   check_help(V.flipper);
  7372  01160A  0102               	movlb	2	; () banked
  7373  01160C  51AF               	movf	(_V+168)& (0+255),w,b	;volatile
  7374  01160E  6EE6               	movwf	postinc1,c
  7375  011610  EC51  F0EA         	call	_check_help	;wreg free
  7376                           
  7377                           ;main.c: 476:   if (V.enter) {
  7378  011614  0102               	movlb	2	; () banked
  7379  011616  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
  7380  011618  B4D8               	btfsc	status,2,c
  7381  01161A  D062               	goto	l1505
  7382                           
  7383                           ; BSR set to: 2
  7384                           ;main.c: 477:    V.enter = 0;
  7385  01161C  6BB1               	clrf	(_V+170)& (0+255),b	;volatile
  7386                           
  7387                           ;main.c: 478:    V.calib = 0;
  7388  01161E  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  7389                           
  7390                           ; BSR set to: 2
  7391                           ;main.c: 479:    inp_index += 3;
  7392                           ;stkvar	_inp_index @ sp[(-19)+13]
  7393  011620  0EFA               	movlw	-6
  7394  011622  006F FF8C  F02A    	movff	plusw1,btemp
  7395  011628  0E03               	movlw	3
  7396  01162A  262A               	addwf	btemp^0,f,c
  7397  01162C  0EFA               	movlw	-6
  7398  01162E  0060  F0AB  FFE3   	movff	btemp,plusw1
  7399                           
  7400                           ;main.c: 480:    if (inp_index > 9)
  7401                           ;stkvar	_inp_index @ sp[(-19)+13]
  7402  011634  0EFA               	movlw	-6
  7403  011636  006F FF8C  F02A    	movff	plusw1,btemp
  7404  01163C  0E09               	movlw	9
  7405  01163E  642A               	cpfsgt	btemp^0,c
  7406  011640  D03A               	goto	l17794
  7407                           
  7408                           ; BSR set to: 2
  7409                           ;main.c: 481:     inp_index = 0;
  7410                           ;stkvar	_inp_index @ sp[(-19)+13]
  7411  011642  0EFA               	movlw	-6
  7412  011644  6AE3               	clrf	plusw1,c
  7413  011646  D037               	goto	l17794
  7414  011648                     l17776:
  7415                           
  7416                           ; BSR set to: 2
  7417                           ;main.c: 484:     i = C_BATT;
  7418                           ;stkvar	_i @ sp[(-19)+16]
  7419  011648  0EFD               	movlw	-3
  7420  01164A  6AE3               	clrf	plusw1,c
  7421                           
  7422                           ; BSR set to: 2
  7423                           ;main.c: 485:     j = C_PV;
  7424                           ;stkvar	_j @ sp[(-19)+15]
  7425  01164C  0EFC               	movlw	-4
  7426  01164E  6AE3               	clrf	plusw1,c
  7427  011650  2AE3               	incf	plusw1,f,c
  7428                           
  7429                           ; BSR set to: 2
  7430                           ;main.c: 486:     k = V_CC;
  7431                           ;stkvar	_k @ sp[(-19)+14]
  7432  011652  0EFB               	movlw	-5
  7433  011654  6AE3               	clrf	plusw1,c
  7434  011656  82E3               	bsf	plusw1,1,c
  7435                           
  7436                           ;main.c: 487:     break;
  7437  011658  D043               	goto	l1505
  7438  01165A                     l17782:
  7439                           
  7440                           ; BSR set to: 2
  7441                           ;main.c: 489:     i = V_BAT;
  7442                           ;stkvar	_i @ sp[(-19)+16]
  7443  01165A  0EFD               	movlw	-3
  7444  01165C  6AE3               	clrf	plusw1,c
  7445  01165E  84E3               	bsf	plusw1,2,c
  7446                           
  7447                           ;main.c: 490:     j = V_PV;
  7448                           ;stkvar	_j @ sp[(-19)+15]
  7449  011660  0EFC               	movlw	-4
  7450  011662  6AE3               	clrf	plusw1,c
  7451  011664  80E3               	bsf	plusw1,0,c
  7452  011666  84E3               	bsf	plusw1,2,c	;indir
  7453                           
  7454                           ;main.c: 491:     k = V_CBUS;
  7455                           ;stkvar	_k @ sp[(-19)+14]
  7456  011668  0EFB               	movlw	-5
  7457  01166A  6AE3               	clrf	plusw1,c
  7458  01166C  82E3               	bsf	plusw1,1,c
  7459  01166E  84E3               	bsf	plusw1,2,c	;indir
  7460                           
  7461                           ;main.c: 492:     break;
  7462  011670  D037               	goto	l1505
  7463  011672                     l17784:
  7464                           
  7465                           ; BSR set to: 2
  7466                           ;main.c: 494:     i = V_BBAT;
  7467                           ;stkvar	_i @ sp[(-19)+16]
  7468  011672  0EFD               	movlw	-3
  7469  011674  6AE3               	clrf	plusw1,c
  7470  011676  82E3               	bsf	plusw1,1,c
  7471  011678  86E3               	bsf	plusw1,3,c	;indir
  7472                           
  7473                           ; BSR set to: 2
  7474                           ;main.c: 495:     j = V_TEMP;
  7475  01167A  0E0B               	movlw	11
  7476  01167C  6E35               	movwf	(btemp+11)^0,c
  7477                           
  7478                           ;stkvar	_j @ sp[(-19)+15]
  7479  01167E  0EFC               	movlw	-4
  7480  011680  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7481                           
  7482                           ; BSR set to: 2
  7483                           ;main.c: 496:     k = V_INVERTER;
  7484                           ;stkvar	_k @ sp[(-19)+14]
  7485  011686  0EFB               	movlw	-5
  7486  011688  6AE3               	clrf	plusw1,c
  7487  01168A  84E3               	bsf	plusw1,2,c
  7488  01168C  86E3               	bsf	plusw1,3,c	;indir
  7489                           
  7490                           ;main.c: 497:     break;
  7491  01168E  D028               	goto	l1505
  7492  011690                     l17790:
  7493                           
  7494                           ; BSR set to: 2
  7495                           ;main.c: 499:     i = V_LIGHT_SENSOR;
  7496  011690  0E0D               	movlw	13
  7497  011692  6E35               	movwf	(btemp+11)^0,c
  7498                           
  7499                           ;stkvar	_i @ sp[(-19)+16]
  7500  011694  0EFD               	movlw	-3
  7501  011696  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7502                           
  7503                           ;main.c: 500:     j = V_LIGHT_SENSOR;
  7504  01169C  0E0D               	movlw	13
  7505  01169E  6E35               	movwf	(btemp+11)^0,c
  7506                           
  7507                           ;stkvar	_j @ sp[(-19)+15]
  7508  0116A0  0EFC               	movlw	-4
  7509  0116A2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7510                           
  7511                           ;main.c: 501:     k = V_LIGHT_SENSOR;
  7512  0116A8  0E0D               	movlw	13
  7513  0116AA  6E35               	movwf	(btemp+11)^0,c
  7514                           
  7515                           ;stkvar	_k @ sp[(-19)+14]
  7516  0116AC  0EFB               	movlw	-5
  7517  0116AE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7518                           
  7519                           ;main.c: 502:     break;
  7520  0116B4  D015               	goto	l1505
  7521  0116B6                     l17794:
  7522                           
  7523                           ; BSR set to: 2
  7524                           ;stkvar	_inp_index @ sp[(-19)+13]
  7525  0116B6  0EFA               	movlw	-6
  7526  0116B8  50E3               	movf	plusw1,w,c
  7527  0116BA  6E34               	movwf	(btemp+10)^0,c
  7528  0116BC  6A35               	clrf	(btemp+11)^0,c
  7529                           
  7530                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7531                           ; Switch size 1, requested type "simple"
  7532                           ; Number of cases is 1, Range of values is 0 to 0
  7533                           ; switch strategies available:
  7534                           ; Name         Instructions Cycles
  7535                           ; simple_byte            4     3 (average)
  7536                           ;	Chosen strategy is simple_byte
  7537  0116BE  5035               	movf	(btemp+11)^0,w,c
  7538  0116C0  0A00               	xorlw	0	; case 0
  7539  0116C2  A4D8               	btfss	status,2,c
  7540  0116C4  D00D               	goto	l1505
  7541                           
  7542                           ; BSR set to: 2
  7543                           ; Switch size 1, requested type "simple"
  7544                           ; Number of cases is 4, Range of values is 0 to 9
  7545                           ; switch strategies available:
  7546                           ; Name         Instructions Cycles
  7547                           ; simple_byte           13     7 (average)
  7548                           ;	Chosen strategy is simple_byte
  7549  0116C6  5034               	movf	(btemp+10)^0,w,c
  7550  0116C8  0A00               	xorlw	0	; case 0
  7551  0116CA  B4D8               	btfsc	status,2,c
  7552  0116CC  D7BD               	goto	l17776
  7553  0116CE  0A03               	xorlw	3	; case 3
  7554  0116D0  B4D8               	btfsc	status,2,c
  7555  0116D2  D7C3               	goto	l17782
  7556  0116D4  0A05               	xorlw	5	; case 6
  7557  0116D6  B4D8               	btfsc	status,2,c
  7558  0116D8  D7CC               	goto	l17784
  7559  0116DA  0A0F               	xorlw	15	; case 9
  7560  0116DC  B4D8               	btfsc	status,2,c
  7561  0116DE  D7D8               	goto	l17790
  7562  0116E0                     l1505:
  7563                           
  7564                           ; BSR set to: 2
  7565                           ;main.c: 511:   if (V.set_sequ) {
  7566  0116E0  A19F               	btfss	(_V+152)& (0+255),0,b	;volatile
  7567  0116E2  EFB6  F084         	goto	l17628
  7568                           
  7569                           ; BSR set to: 2
  7570                           ;main.c: 512:    if (TimerDone(TMR_INFO)) {
  7571  0116E6  0E07               	movlw	7
  7572  0116E8  6EE6               	movwf	postinc1,c
  7573  0116EA  EC5B  F012         	call	_TimerDone	;wreg free
  7574  0116EE  502A               	movf	btemp^0,w,c
  7575  0116F0  B4D8               	btfsc	status,2,c
  7576  0116F2  D00C               	goto	l17804
  7577                           
  7578                           ;main.c: 513:     V.set_sequ = 0;
  7579  0116F4  0102               	movlb	2	; () banked
  7580  0116F6  919F               	bcf	(_V+152)& (0+255),0,b	;volatile
  7581                           
  7582                           ; BSR set to: 2
  7583                           ;main.c: 514:     set_vterm(0);
  7584  0116F8  0E00               	movlw	0
  7585  0116FA  6EE6               	movwf	postinc1,c
  7586  0116FC  EC51  F014         	call	_set_vterm	;wreg free
  7587                           
  7588                           ;main.c: 515:     update_lcd(0);
  7589  011700  0E00               	movlw	0
  7590  011702  6EE6               	movwf	postinc1,c
  7591  011704  EC57  F0F6         	call	_update_lcd	;wreg free
  7592                           
  7593                           ;main.c: 516:    } else {
  7594  011708  EFB6  F084         	goto	l17628
  7595  01170C                     l17804:
  7596                           
  7597                           ;main.c: 518:     set_vterm(2);
  7598  01170C  0E02               	movlw	2
  7599  01170E  6EE6               	movwf	postinc1,c
  7600  011710  EC51  F014         	call	_set_vterm	;wreg free
  7601                           
  7602                           ;main.c: 519:     update_lcd(2);
  7603  011714  0E02               	movlw	2
  7604  011716  6EE6               	movwf	postinc1,c
  7605  011718  EC57  F0F6         	call	_update_lcd	;wreg free
  7606  01171C  EFB6  F084         	goto	l17628
  7607  011720                     __end_of_main:
  7608                           	opt callstack 0
  7609                           
  7610 ;; *************** function _update_hist_data *****************
  7611 ;; Defined at:
  7612 ;;		line 456 in file "daq.c"
  7613 ;; Parameters:    Size  Location     Type
  7614 ;;  mode            1  [STACK] const _Bool 
  7615 ;;  hist            2  [STACK] PTR volatile struct hist
  7616 ;;		 -> C.hist(97), C(320), 
  7617 ;; Auto vars:     Size  Location     Type
  7618 ;;		None
  7619 ;; Return value:  Size  Location     Type
  7620 ;;                  1  [STACK] _Bool 
  7621 ;; Registers used:
  7622 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl
  7623 ;; Tracked objects:
  7624 ;;		On entry : 7/1
  7625 ;;		On exit  : 0/0
  7626 ;;		Unchanged: 0/0
  7627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7632 ;;Total ram usage:        0 bytes
  7633 ;; Hardware stack levels used:    1
  7634 ;; Hardware stack levels required when called:   15
  7635 ;; This function calls:
  7636 ;;		Nothing
  7637 ;; This function is called by:
  7638 ;;		_main
  7639 ;; This function uses a reentrant model
  7640 ;;
  7641                           
  7642                           	psect	text1
  7643  001368                     __ptext1:
  7644                           	opt callstack 0
  7645  001368                     _update_hist_data:
  7646                           	opt callstack 15
  7647                           
  7648                           ;daq.c: 456: _Bool update_hist_data(const _Bool mode, volatile hist_type *hist);daq.c: 4
      +                          57: {;daq.c: 458:  if (hist == ((void*)0))
  7649                           ;stkvar	_hist @ sp[(0)+-3]
  7650                           
  7651                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7652                           ;incstack = 0
  7653  001368  0EFD               	movlw	-3
  7654  00136A  006F FF8C  F02A    	movff	plusw1,btemp
  7655  001370  0EFE               	movlw	-2
  7656  001372  50E3               	movf	plusw1,w,c
  7657  001374  102A               	iorwf	btemp^0,w,c
  7658  001376  A4D8               	btfss	status,2,c
  7659  001378  D002               	goto	l14182
  7660  00137A                     u13380:
  7661                           
  7662                           ;daq.c: 459:   return 0;
  7663  00137A  0E00               	movlw	0
  7664  00137C  D01A               	goto	L3
  7665  00137E                     l14182:
  7666                           
  7667                           ;daq.c: 461:  if (mode) {
  7668                           ;stkvar	_mode @ sp[(0)+-1]
  7669  00137E  0EFF               	movlw	-1
  7670  001380  50E3               	movf	plusw1,w,c
  7671  001382  B4D8               	btfsc	status,2,c
  7672  001384  D018               	goto	l14194
  7673                           
  7674                           ;daq.c: 462:   if (R.hist_save) {
  7675  001386  0101               	movlb	1	; () banked
  7676  001388  A197               	btfss	(_R+151)& (0+255),0,b	;volatile
  7677  00138A  D7F7               	goto	u13380
  7678                           
  7679                           ; BSR set to: 1
  7680                           ;daq.c: 463:    *hist = R.H;
  7681  00138C  EE20  F136         	lfsr	2,_R+54	;volatile
  7682                           
  7683                           ;stkvar	_hist @ sp[(0)+-3]
  7684  001390  0EFD               	movlw	-3
  7685  001392  006F FF8F FFE9     	movff	plusw1,fsr0l
  7686  001398  0EFE               	movlw	-2
  7687  00139A  006F FF8F FFEA     	movff	plusw1,fsr0h
  7688  0013A0  0E60               	movlw	96
  7689  0013A2                     u13411:
  7690  0013A2  006F FF6F FFEB     	movff	plusw2,plusw0
  7691  0013A8  06E8               	decf	wreg,f,c
  7692  0013AA  E2FB               	bc	u13411
  7693                           
  7694                           ; BSR set to: 1
  7695                           ;daq.c: 464:    if (R.hist_update) {
  7696  0013AC  A397               	btfss	(_R+151)& (0+255),1,b	;volatile
  7697  0013AE  D7E5               	goto	u13380
  7698                           
  7699                           ; BSR set to: 1
  7700                           ;daq.c: 465:     return 1;
  7701  0013B0  0E01               	movlw	1
  7702  0013B2                     L3:
  7703  0013B2  6E2A               	movwf	btemp^0,c
  7704  0013B4  D013               	goto	l2100
  7705  0013B6                     l14194:
  7706                           
  7707                           ;daq.c: 469:   R.H = *hist;
  7708                           ;stkvar	_hist @ sp[(0)+-3]
  7709  0013B6  0EFD               	movlw	-3
  7710  0013B8  006F FF8F FFD9     	movff	plusw1,fsr2l
  7711  0013BE  0EFE               	movlw	-2
  7712  0013C0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7713  0013C6  EE00  F136         	lfsr	0,_R+54	;volatile
  7714  0013CA  0E60               	movlw	96
  7715  0013CC                     u13431:
  7716  0013CC  006F FF6F FFEB     	movff	plusw2,plusw0
  7717  0013D2  06E8               	decf	wreg,f,c
  7718  0013D4  E2FB               	bc	u13431
  7719                           
  7720                           ;daq.c: 470:   R.hist_save = 1;
  7721  0013D6  0101               	movlb	1	; () banked
  7722  0013D8  8197               	bsf	(_R+151)& (0+255),0,b	;volatile
  7723  0013DA  D7CF               	goto	u13380
  7724  0013DC                     l2100:
  7725                           
  7726                           ; _update_hist_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
  7727  0013DC  52E5               	movf	postdec1,f,c
  7728  0013DE  52E5               	movf	postdec1,f,c
  7729  0013E0  52E5               	movf	postdec1,f,c
  7730  0013E2  0012               	return		;funcret
  7731  0013E4                     __end_of_update_hist_data:
  7732                           	opt callstack 0
  7733                           
  7734 ;; *************** function _update_cal_data *****************
  7735 ;; Defined at:
  7736 ;;		line 437 in file "daq.c"
  7737 ;; Parameters:    Size  Location     Type
  7738 ;;		None
  7739 ;; Auto vars:     Size  Location     Type
  7740 ;;		None
  7741 ;; Return value:  Size  Location     Type
  7742 ;;                  1  [STACK] void 
  7743 ;; Registers used:
  7744 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  7745 ;; Tracked objects:
  7746 ;;		On entry : 0/39
  7747 ;;		On exit  : 3F/1
  7748 ;;		Unchanged: 0/0
  7749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7754 ;;Total ram usage:        0 bytes
  7755 ;; Hardware stack levels used:    1
  7756 ;; Hardware stack levels required when called:   15
  7757 ;; This function calls:
  7758 ;;		Nothing
  7759 ;; This function is called by:
  7760 ;;		_main
  7761 ;; This function uses a reentrant model
  7762 ;;
  7763                           
  7764                           	psect	text2
  7765  001B12                     __ptext2:
  7766                           	opt callstack 0
  7767  001B12                     _update_cal_data:
  7768                           	opt callstack 15
  7769                           
  7770                           ;daq.c: 439:  R = r_cal;
  7771                           
  7772                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7773                           ;incstack = 0
  7774  001B12  EE21  F040         	lfsr	2,_r_cal
  7775  001B16  EE00  F100         	lfsr	0,_R	;volatile
  7776  001B1A  0E9A               	movlw	154
  7777  001B1C                     u13351:
  7778  001B1C  006F FF7B FFEE     	movff	postinc2,postinc0
  7779  001B22  06E8               	decf	wreg,f,c
  7780  001B24  E2FB               	bc	u13351
  7781  001B26  0E9B               	movlw	155
  7782  001B28  5ED9               	subwf	fsr2l,f,c
  7783  001B2A  5EE9               	subwf	fsr0l,f,c
  7784                           
  7785                           ;daq.c: 440:  if (!R.c_zero_cal) {
  7786  001B2C  0101               	movlb	1	; () banked
  7787  001B2E  B597               	btfsc	(_R+151)& (0+255),2,b	;volatile
  7788  001B30  D008               	goto	l14172
  7789                           
  7790                           ; BSR set to: 1
  7791                           ;daq.c: 441:   R.n_offset[0] = 3938;
  7792  001B32  0E0F               	movlw	15
  7793  001B34  6F27               	movwf	(_R+39)& (0+255),b	;volatile
  7794  001B36  0E62               	movlw	98
  7795  001B38  6F26               	movwf	(_R+38)& (0+255),b	;volatile
  7796                           
  7797                           ;daq.c: 442:   R.n_offset[1] = 4004;
  7798  001B3A  0E0F               	movlw	15
  7799  001B3C  6F29               	movwf	(_R+41)& (0+255),b	;volatile
  7800  001B3E  0EA4               	movlw	164
  7801  001B40  6F28               	movwf	(_R+40)& (0+255),b	;volatile
  7802  001B42                     l14172:
  7803                           
  7804                           ; BSR set to: 1
  7805                           ;daq.c: 446:  if (!R.c_scale_cal) {
  7806  001B42  B797               	btfsc	(_R+151)& (0+255),3,b	;volatile
  7807  001B44  0012               	return	
  7808                           
  7809                           ; BSR set to: 1
  7810                           ;daq.c: 447:   R.n_scalar[0] = 0.0862000;
  7811  001B46  0EA0               	movlw	160
  7812  001B48  6F2A               	movwf	(_R+42)& (0+255),b	;volatile
  7813  001B4A  0E89               	movlw	137
  7814  001B4C  6F2B               	movwf	(_R+43)& (0+255),b	;volatile
  7815  001B4E  0EB0               	movlw	176
  7816  001B50  6F2C               	movwf	(_R+44)& (0+255),b	;volatile
  7817  001B52  0E3D               	movlw	61
  7818  001B54  6F2D               	movwf	(_R+45)& (0+255),b	;volatile
  7819                           
  7820                           ;daq.c: 448:   R.n_scalar[1] = 0.0361010;
  7821  001B56  0EA4               	movlw	164
  7822  001B58  6F2E               	movwf	(_R+46)& (0+255),b	;volatile
  7823  001B5A  0EDE               	movlw	222
  7824  001B5C  6F2F               	movwf	(_R+47)& (0+255),b	;volatile
  7825  001B5E  0E13               	movlw	19
  7826  001B60  6F30               	movwf	(_R+48)& (0+255),b	;volatile
  7827  001B62  0E3D               	movlw	61
  7828  001B64  6F31               	movwf	(_R+49)& (0+255),b	;volatile
  7829                           
  7830                           ; BSR set to: 1
  7831                           ; _update_cal_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  7832  001B66  0012               	return		;funcret
  7833  001B68                     __end_of_update_cal_data:
  7834                           	opt callstack 0
  7835                           
  7836 ;; *************** function _static_soc *****************
  7837 ;; Defined at:
  7838 ;;		line 118 in file "mbmc.c"
  7839 ;; Parameters:    Size  Location     Type
  7840 ;;		None
  7841 ;; Auto vars:     Size  Location     Type
  7842 ;;		None
  7843 ;; Return value:  Size  Location     Type
  7844 ;;                  1  [STACK] void 
  7845 ;; Registers used:
  7846 ;;		wreg, fsr2l, fsr2h
  7847 ;; Tracked objects:
  7848 ;;		On entry : 0/1
  7849 ;;		On exit  : 0/0
  7850 ;;		Unchanged: 0/0
  7851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7856 ;;Total ram usage:        0 bytes
  7857 ;; Hardware stack levels used:    1
  7858 ;; Hardware stack levels required when called:   15
  7859 ;; This function calls:
  7860 ;;		Nothing
  7861 ;; This function is called by:
  7862 ;;		_main
  7863 ;; This function uses a reentrant model
  7864 ;;
  7865                           
  7866                           	psect	text3
  7867  001A04                     __ptext3:
  7868                           	opt callstack 0
  7869  001A04                     _static_soc:
  7870                           	opt callstack 15
  7871                           
  7872                           ;mbmc.c: 120:  C.runtime = 120;
  7873                           
  7874                           ; BSR set to: 1
  7875                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7876                           ;incstack = 0
  7877  001A04  0E78               	movlw	120
  7878  001A06  006F FFA0  F9B3    	movff	wreg,_C+180	;volatile
  7879  001A0C  0E00               	movlw	0
  7880  001A0E  006F FFA0  F9B4    	movff	wreg,_C+181	;volatile
  7881                           
  7882                           ;mbmc.c: 121:  C.soc = 100;
  7883  001A14  0E64               	movlw	100
  7884  001A16  006F FFA0  F9B5    	movff	wreg,_C+182	;volatile
  7885  001A1C  0E00               	movlw	0
  7886  001A1E  006F FFA0  F9B6    	movff	wreg,_C+183	;volatile
  7887                           
  7888                           ;mbmc.c: 122:  C.dynamic_ah = C.bank_ah;
  7889  001A24  EE22  F18B         	lfsr	2,_C+140	;volatile
  7890  001A28  006F FF78  F98F    	movff	postinc2,_C+144	;volatile
  7891  001A2E  006F FF78  F990    	movff	postinc2,_C+145	;volatile
  7892  001A34  006F FF78  F991    	movff	postinc2,_C+146	;volatile
  7893  001A3A  006F FF74  F992    	movff	postdec2,_C+147	;volatile
  7894                           
  7895                           ;mbmc.c: 123:  C.dynamic_ah_adj = C.dynamic_ah;
  7896  001A40  EE22  F18F         	lfsr	2,_C+144	;volatile
  7897  001A44  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
  7898  001A4A  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
  7899  001A50  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
  7900  001A56  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
  7901                           
  7902                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  7903  001A5C  0012               	return		;funcret
  7904  001A5E                     __end_of_static_soc:
  7905                           	opt callstack 0
  7906                           
  7907 ;; *************** function _start_switch_handler *****************
  7908 ;; Defined at:
  7909 ;;		line 125 in file "dio.c"
  7910 ;; Parameters:    Size  Location     Type
  7911 ;;		None
  7912 ;; Auto vars:     Size  Location     Type
  7913 ;;		None
  7914 ;; Return value:  Size  Location     Type
  7915 ;;                  1  [STACK] void 
  7916 ;; Registers used:
  7917 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  7918 ;; Tracked objects:
  7919 ;;		On entry : 0/0
  7920 ;;		On exit  : 3F/39
  7921 ;;		Unchanged: 0/0
  7922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7927 ;;Total ram usage:        0 bytes
  7928 ;; Hardware stack levels used:    1
  7929 ;; Hardware stack levels required when called:   16
  7930 ;; This function calls:
  7931 ;;		_INT1_SetInterruptHandler
  7932 ;; This function is called by:
  7933 ;;		_main
  7934 ;; This function uses a reentrant model
  7935 ;;
  7936                           
  7937                           	psect	text4
  7938  002826                     __ptext4:
  7939                           	opt callstack 0
  7940  002826                     _start_switch_handler:
  7941                           	opt callstack 14
  7942                           
  7943                           ;dio.c: 127:  (PIE5bits.INT1IE = 0);
  7944                           
  7945                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7946                           ;incstack = 0
  7947  002826  0139               	movlb	57	; () banked
  7948  002828  9195               	bcf	149,0,b	;volatile
  7949                           
  7950                           ; BSR set to: 57
  7951                           ;dio.c: 128:  INT1_SetInterruptHandler(switch_handler);
  7952  00282A  0E0E               	movlw	low _switch_handler
  7953  00282C  6EE6               	movwf	postinc1,c
  7954  00282E  0EF2               	movlw	high _switch_handler
  7955  002830  6EE6               	movwf	postinc1,c
  7956  002832  0E01               	movlw	low (_switch_handler shr (0+16))
  7957  002834  6EE6               	movwf	postinc1,c
  7958  002836  ECE7  F012         	call	_INT1_SetInterruptHandler	;wreg free
  7959                           
  7960                           ;dio.c: 129:  S.button[SNULL].sw = SW_INVALID;
  7961  00283A  0E02               	movlw	2
  7962  00283C  0101               	movlb	1	; () banked
  7963  00283E  6FC7               	movwf	(_S+35)& (0+255),b	;volatile
  7964                           
  7965                           ; BSR set to: 1
  7966                           ;dio.c: 130:  (PIE5bits.INT1IE = 1);
  7967  002840  0139               	movlb	57	; () banked
  7968  002842  8195               	bsf	149,0,b	;volatile
  7969                           
  7970                           ; BSR set to: 57
  7971                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  7972  002844  0012               	return		;funcret
  7973  002846                     __end_of_start_switch_handler:
  7974                           	opt callstack 0
  7975                           
  7976 ;; *************** function _srand *****************
  7977 ;; Defined at:
  7978 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  7979 ;; Parameters:    Size  Location     Type
  7980 ;;  s               2  [STACK] unsigned int 
  7981 ;; Auto vars:     Size  Location     Type
  7982 ;;		None
  7983 ;; Return value:  Size  Location     Type
  7984 ;;                  1  [STACK] void 
  7985 ;; Registers used:
  7986 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  7987 ;; Tracked objects:
  7988 ;;		On entry : 0/3D
  7989 ;;		On exit  : 3F/2
  7990 ;;		Unchanged: 0/0
  7991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7996 ;;Total ram usage:        0 bytes
  7997 ;; Hardware stack levels used:    1
  7998 ;; Hardware stack levels required when called:   15
  7999 ;; This function calls:
  8000 ;;		Nothing
  8001 ;; This function is called by:
  8002 ;;		_main
  8003 ;; This function uses a reentrant model
  8004 ;;
  8005                           
  8006                           	psect	text5
  8007  0021F0                     __ptext5:
  8008                           	opt callstack 0
  8009  0021F0                     _srand:
  8010                           	opt callstack 15
  8011                           
  8012                           ;stkvar	_s @ sp[(0)+-2]
  8013                           
  8014                           ; BSR set to: 57
  8015                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8016                           ;incstack = 0
  8017  0021F0  0EFE               	movlw	-2
  8018  0021F2  50E3               	movf	plusw1,w,c
  8019  0021F4  0FFF               	addlw	255
  8020  0021F6  6E34               	movwf	(btemp+10)^0,c
  8021  0021F8  0EFF               	movlw	-1
  8022  0021FA  006F FF8C  F035    	movff	plusw1,btemp+11
  8023  002200  0EFF               	movlw	255
  8024  002202  2235               	addwfc	(btemp+11)^0,f,c
  8025  002204  0060  F0D0  F2DE   	movff	btemp+10,_seed
  8026  00220A  0060  F0D4  F2DF   	movff	btemp+11,_seed+1
  8027  002210  0102               	movlb	2	; () banked
  8028  002212  6BE0               	clrf	(_seed+2)& (0+255),b
  8029  002214  6BE1               	clrf	(_seed+3)& (0+255),b
  8030  002216  6BE2               	clrf	(_seed+4)& (0+255),b
  8031  002218  6BE3               	clrf	(_seed+5)& (0+255),b
  8032  00221A  6BE4               	clrf	(_seed+6)& (0+255),b
  8033  00221C  6BE5               	clrf	(_seed+7)& (0+255),b
  8034                           
  8035                           ; BSR set to: 2
  8036                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  8037  00221E  52E5               	movf	postdec1,f,c
  8038  002220  52E5               	movf	postdec1,f,c
  8039  002222  0012               	return		;funcret
  8040  002224                     __end_of_srand:
  8041                           	opt callstack 0
  8042                           
  8043 ;; *************** function _set_time *****************
  8044 ;; Defined at:
  8045 ;;		line 263 in file "mbmc.c"
  8046 ;; Parameters:    Size  Location     Type
  8047 ;;  t               8  [STACK] long long 
  8048 ;; Auto vars:     Size  Location     Type
  8049 ;;		None
  8050 ;; Return value:  Size  Location     Type
  8051 ;;                  1  [STACK] void 
  8052 ;; Registers used:
  8053 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
  8054 ;; Tracked objects:
  8055 ;;		On entry : 3F/39
  8056 ;;		On exit  : 3F/39
  8057 ;;		Unchanged: 0/0
  8058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8063 ;;Total ram usage:        0 bytes
  8064 ;; Hardware stack levels used:    1
  8065 ;; Hardware stack levels required when called:   15
  8066 ;; This function calls:
  8067 ;;		Nothing
  8068 ;; This function is called by:
  8069 ;;		_main
  8070 ;; This function uses a reentrant model
  8071 ;;
  8072                           
  8073                           	psect	text6
  8074  002184                     __ptext6:
  8075                           	opt callstack 0
  8076  002184                     _set_time:
  8077                           	opt callstack 15
  8078                           
  8079                           ;mbmc.c: 263: void set_time(time_t t);mbmc.c: 264: {;mbmc.c: 265:  PIE8bits.TMR5IE = 0;
  8080                           
  8081                           ; BSR set to: 2
  8082                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8083                           ;incstack = 0
  8084  002184  0139               	movlb	57	; () banked
  8085  002186  9D98               	bcf	152,6,b	;volatile
  8086                           
  8087                           ; BSR set to: 57
  8088                           ;mbmc.c: 266:  V.ticks = t;
  8089                           ;stkvar	_t @ sp[(0)+-8]
  8090  002188  50E1               	movf	fsr1l,w,c
  8091  00218A  0FF8               	addlw	-8
  8092  00218C  6ED9               	movwf	fsr2l,c
  8093  00218E  50E2               	movf	fsr1h,w,c
  8094  002190  6EDA               	movwf	fsr2h,c
  8095  002192  0EFF               	movlw	255
  8096  002194  22DA               	addwfc	fsr2h,f,c
  8097  002196  006F FF78  F288    	movff	postinc2,_V+129	;volatile
  8098  00219C  006F FF78  F289    	movff	postinc2,_V+130	;volatile
  8099  0021A2  006F FF78  F28A    	movff	postinc2,_V+131	;volatile
  8100  0021A8  006F FF78  F28B    	movff	postinc2,_V+132	;volatile
  8101                           
  8102                           ; BSR set to: 57
  8103                           ;mbmc.c: 267:  PIE8bits.TMR5IE = 1;
  8104  0021AE  8D98               	bsf	152,6,b	;volatile
  8105                           
  8106                           ; BSR set to: 57
  8107                           ; _set_time: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
  8108  0021B0  0EF8               	movlw	248
  8109  0021B2  26E1               	addwf	fsr1l,f,c
  8110  0021B4  0EFF               	movlw	255
  8111  0021B6  22E2               	addwfc	fsr1h,f,c
  8112  0021B8  0012               	return		;funcret
  8113  0021BA                     __end_of_set_time:
  8114                           	opt callstack 0
  8115                           
  8116 ;; *************** function _set_hist_flag *****************
  8117 ;; Defined at:
  8118 ;;		line 475 in file "daq.c"
  8119 ;; Parameters:    Size  Location     Type
  8120 ;;		None
  8121 ;; Auto vars:     Size  Location     Type
  8122 ;;		None
  8123 ;; Return value:  Size  Location     Type
  8124 ;;                  1  [STACK] void 
  8125 ;; Registers used:
  8126 ;;		None
  8127 ;; Tracked objects:
  8128 ;;		On entry : 3F/39
  8129 ;;		On exit  : 3F/1
  8130 ;;		Unchanged: 0/0
  8131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8136 ;;Total ram usage:        0 bytes
  8137 ;; Hardware stack levels used:    1
  8138 ;; Hardware stack levels required when called:   15
  8139 ;; This function calls:
  8140 ;;		Nothing
  8141 ;; This function is called by:
  8142 ;;		_main
  8143 ;; This function uses a reentrant model
  8144 ;;
  8145                           
  8146                           	psect	text7
  8147  002ADA                     __ptext7:
  8148                           	opt callstack 0
  8149  002ADA                     _set_hist_flag:
  8150                           	opt callstack 15
  8151                           
  8152                           ;daq.c: 477:  R.hist_update = 1;
  8153                           
  8154                           ; BSR set to: 57
  8155                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8156                           ;incstack = 0
  8157  002ADA  0101               	movlb	1	; () banked
  8158  002ADC  8397               	bsf	(_R+151)& (0+255),1,b	;volatile
  8159                           
  8160                           ; BSR set to: 1
  8161                           ; _set_hist_flag: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  8162  002ADE  0012               	return		;funcret
  8163  002AE0                     __end_of_set_hist_flag:
  8164                           	opt callstack 0
  8165                           
  8166 ;; *************** function _set_dac_b *****************
  8167 ;; Defined at:
  8168 ;;		line 308 in file "daq.c"
  8169 ;; Parameters:    Size  Location     Type
  8170 ;;  voltage         4  [STACK] const float 
  8171 ;; Auto vars:     Size  Location     Type
  8172 ;;		None
  8173 ;; Return value:  Size  Location     Type
  8174 ;;                  2  [STACK] unsigned short 
  8175 ;; Registers used:
  8176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  8177 ;; Tracked objects:
  8178 ;;		On entry : 0/3D
  8179 ;;		On exit  : 0/0
  8180 ;;		Unchanged: 0/0
  8181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8186 ;;Total ram usage:        0 bytes
  8187 ;; Hardware stack levels used:    1
  8188 ;; Hardware stack levels required when called:   17
  8189 ;; This function calls:
  8190 ;;		_convert_dac_raw
  8191 ;; This function is called by:
  8192 ;;		_main
  8193 ;; This function uses a reentrant model
  8194 ;;
  8195                           
  8196                           	psect	text8
  8197  002224                     __ptext8:
  8198                           	opt callstack 0
  8199  002224                     _set_dac_b:
  8200                           	opt callstack 13
  8201                           
  8202                           ;daq.c: 308: uint16_t set_dac_b(const float voltage);daq.c: 309: {;daq.c: 310:  R.raw_da
      +                          c[1] = convert_dac_raw(voltage);
  8203                           ;stkvar	_voltage @ sp[(0)+-4]
  8204                           
  8205                           ; BSR set to: 1
  8206                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8207                           ;incstack = 0
  8208  002224  0EFC               	movlw	-4
  8209  002226  006F FF8F FFE6     	movff	plusw1,postinc1
  8210  00222C  006F FF8F FFE6     	movff	plusw1,postinc1
  8211  002232  006F FF8F FFE6     	movff	plusw1,postinc1
  8212  002238  006F FF8F FFE6     	movff	plusw1,postinc1
  8213  00223E  EC03  F0FC         	call	_convert_dac_raw	;wreg free
  8214  002242  0060  F0A8  F122   	movff	btemp,_R+34	;volatile
  8215  002248  0060  F0AC  F123   	movff	btemp+1,_R+35	;volatile
  8216                           
  8217                           ; _set_dac_b: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  8218                           
  8219                           ;daq.c: 311:  return R.raw_dac[1];;	Return value of _set_dac_b is never used
  8220  00224E  52E5               	movf	postdec1,f,c
  8221  002250  52E5               	movf	postdec1,f,c
  8222  002252  52E5               	movf	postdec1,f,c
  8223  002254  52E5               	movf	postdec1,f,c
  8224  002256  0012               	return		;funcret
  8225  002258                     __end_of_set_dac_b:
  8226                           	opt callstack 0
  8227                           
  8228 ;; *************** function _set_dac_a *****************
  8229 ;; Defined at:
  8230 ;;		line 299 in file "daq.c"
  8231 ;; Parameters:    Size  Location     Type
  8232 ;;  voltage         4  [STACK] const float 
  8233 ;; Auto vars:     Size  Location     Type
  8234 ;;		None
  8235 ;; Return value:  Size  Location     Type
  8236 ;;                  2  [STACK] unsigned short 
  8237 ;; Registers used:
  8238 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  8239 ;; Tracked objects:
  8240 ;;		On entry : 3F/3D
  8241 ;;		On exit  : 0/0
  8242 ;;		Unchanged: 0/0
  8243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8248 ;;Total ram usage:        0 bytes
  8249 ;; Hardware stack levels used:    1
  8250 ;; Hardware stack levels required when called:   17
  8251 ;; This function calls:
  8252 ;;		_convert_dac_raw
  8253 ;; This function is called by:
  8254 ;;		_main
  8255 ;; This function uses a reentrant model
  8256 ;;
  8257                           
  8258                           	psect	text9
  8259  002258                     __ptext9:
  8260                           	opt callstack 0
  8261  002258                     _set_dac_a:
  8262                           	opt callstack 13
  8263                           
  8264                           ;daq.c: 299: uint16_t set_dac_a(const float voltage);daq.c: 300: {;daq.c: 301:  R.raw_da
      +                          c[0] = convert_dac_raw(voltage);
  8265                           ;stkvar	_voltage @ sp[(0)+-4]
  8266                           
  8267                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8268                           ;incstack = 0
  8269  002258  0EFC               	movlw	-4
  8270  00225A  006F FF8F FFE6     	movff	plusw1,postinc1
  8271  002260  006F FF8F FFE6     	movff	plusw1,postinc1
  8272  002266  006F FF8F FFE6     	movff	plusw1,postinc1
  8273  00226C  006F FF8F FFE6     	movff	plusw1,postinc1
  8274  002272  EC03  F0FC         	call	_convert_dac_raw	;wreg free
  8275  002276  0060  F0A8  F120   	movff	btemp,_R+32	;volatile
  8276  00227C  0060  F0AC  F121   	movff	btemp+1,_R+33	;volatile
  8277                           
  8278                           ; _set_dac_a: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  8279                           
  8280                           ;daq.c: 302:  return R.raw_dac[0];;	Return value of _set_dac_a is never used
  8281  002282  52E5               	movf	postdec1,f,c
  8282  002284  52E5               	movf	postdec1,f,c
  8283  002286  52E5               	movf	postdec1,f,c
  8284  002288  52E5               	movf	postdec1,f,c
  8285  00228A  0012               	return		;funcret
  8286  00228C                     __end_of_set_dac_a:
  8287                           	opt callstack 0
  8288                           
  8289 ;; *************** function _convert_dac_raw *****************
  8290 ;; Defined at:
  8291 ;;		line 281 in file "daq.c"
  8292 ;; Parameters:    Size  Location     Type
  8293 ;;  voltage         4  [STACK] float 
  8294 ;; Auto vars:     Size  Location     Type
  8295 ;;		None
  8296 ;; Return value:  Size  Location     Type
  8297 ;;                  2  [STACK] unsigned short 
  8298 ;; Registers used:
  8299 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  8300 ;; Tracked objects:
  8301 ;;		On entry : 0/3D
  8302 ;;		On exit  : 0/0
  8303 ;;		Unchanged: 0/0
  8304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8309 ;;Total ram usage:        0 bytes
  8310 ;; Hardware stack levels used:    1
  8311 ;; Hardware stack levels required when called:   16
  8312 ;; This function calls:
  8313 ;;		___fldiv
  8314 ;;		___flge
  8315 ;;		___fltol
  8316 ;; This function is called by:
  8317 ;;		_set_dac_a
  8318 ;;		_set_dac_b
  8319 ;; This function uses a reentrant model
  8320 ;;
  8321                           
  8322                           	psect	text10
  8323  01F806                     __ptext10:
  8324                           	opt callstack 0
  8325  01F806                     _convert_dac_raw:
  8326                           	opt callstack 13
  8327                           
  8328                           ;daq.c: 281: static uint16_t convert_dac_raw(float voltage);daq.c: 282: {;daq.c: 286:  i
      +                          f (voltage < 0.001)
  8329                           
  8330                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8331                           ;incstack = 0
  8332  01F806  0E6F               	movlw	111
  8333  01F808  6EE6               	movwf	postinc1,c
  8334  01F80A  0E12               	movlw	18
  8335  01F80C  6EE6               	movwf	postinc1,c
  8336  01F80E  0E83               	movlw	131
  8337  01F810  6EE6               	movwf	postinc1,c
  8338  01F812  0E3A               	movlw	58
  8339  01F814  6EE6               	movwf	postinc1,c
  8340                           
  8341                           ;stkvar	_voltage @ sp[(-4)+-4]
  8342  01F816  0EF8               	movlw	-8
  8343  01F818  006F FF8F FFE6     	movff	plusw1,postinc1
  8344  01F81E  006F FF8F FFE6     	movff	plusw1,postinc1
  8345  01F824  006F FF8F FFE6     	movff	plusw1,postinc1
  8346  01F82A  006F FF8F FFE6     	movff	plusw1,postinc1
  8347  01F830  ECF5  F0F4         	call	___flge	;wreg free
  8348  01F834  B02A               	btfsc	btemp& (0+255),0,c
  8349  01F836  D018               	goto	l13706
  8350                           
  8351                           ;daq.c: 287:   voltage = 0.001;
  8352  01F838  0E6F               	movlw	111
  8353  01F83A  6E32               	movwf	(btemp+8)^0,c
  8354  01F83C  0E12               	movlw	18
  8355  01F83E  6E33               	movwf	(btemp+9)^0,c
  8356  01F840  0E83               	movlw	131
  8357  01F842  6E34               	movwf	(btemp+10)^0,c
  8358  01F844  0E3A               	movlw	58
  8359  01F846  6E35               	movwf	(btemp+11)^0,c
  8360                           
  8361                           ;stkvar	_voltage @ sp[(0)+-4]
  8362  01F848  0EFC               	movlw	-4
  8363  01F84A  0060  F0CB  FFE3   	movff	btemp+8,plusw1
  8364  01F850  0EFD               	movlw	-3
  8365  01F852  0060  F0CF  FFE3   	movff	btemp+9,plusw1
  8366  01F858  0EFE               	movlw	-2
  8367  01F85A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  8368  01F860  0EFF               	movlw	-1
  8369  01F862  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  8370  01F868                     l13706:
  8371                           
  8372                           ;daq.c: 288:  if (voltage > 10.0)
  8373                           ;stkvar	_voltage @ sp[(0)+-4]
  8374  01F868  0EFC               	movlw	-4
  8375  01F86A  006F FF8F FFE6     	movff	plusw1,postinc1
  8376  01F870  006F FF8F FFE6     	movff	plusw1,postinc1
  8377  01F876  006F FF8F FFE6     	movff	plusw1,postinc1
  8378  01F87C  006F FF8F FFE6     	movff	plusw1,postinc1
  8379  01F882  0E00               	movlw	0
  8380  01F884  6EE6               	movwf	postinc1,c
  8381  01F886  0E00               	movlw	0
  8382  01F888  6EE6               	movwf	postinc1,c
  8383  01F88A  0E20               	movlw	32
  8384  01F88C  6EE6               	movwf	postinc1,c
  8385  01F88E  0E41               	movlw	65
  8386  01F890  6EE6               	movwf	postinc1,c
  8387  01F892  ECF5  F0F4         	call	___flge	;wreg free
  8388  01F896  B02A               	btfsc	btemp& (0+255),0,c
  8389  01F898  D018               	goto	l13710
  8390                           
  8391                           ;daq.c: 289:   voltage = 10.0;
  8392  01F89A  0E00               	movlw	0
  8393  01F89C  6E32               	movwf	(btemp+8)^0,c
  8394  01F89E  0E00               	movlw	0
  8395  01F8A0  6E33               	movwf	(btemp+9)^0,c
  8396  01F8A2  0E20               	movlw	32
  8397  01F8A4  6E34               	movwf	(btemp+10)^0,c
  8398  01F8A6  0E41               	movlw	65
  8399  01F8A8  6E35               	movwf	(btemp+11)^0,c
  8400                           
  8401                           ;stkvar	_voltage @ sp[(0)+-4]
  8402  01F8AA  0EFC               	movlw	-4
  8403  01F8AC  0060  F0CB  FFE3   	movff	btemp+8,plusw1
  8404  01F8B2  0EFD               	movlw	-3
  8405  01F8B4  0060  F0CF  FFE3   	movff	btemp+9,plusw1
  8406  01F8BA  0EFE               	movlw	-2
  8407  01F8BC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  8408  01F8C2  0EFF               	movlw	-1
  8409  01F8C4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  8410  01F8CA                     l13710:
  8411                           
  8412                           ;daq.c: 293:  return(uint16_t) (voltage / 0.002442);
  8413  01F8CA  0EF6               	movlw	246
  8414  01F8CC  6EE6               	movwf	postinc1,c
  8415  01F8CE  0E09               	movlw	9
  8416  01F8D0  6EE6               	movwf	postinc1,c
  8417  01F8D2  0E20               	movlw	32
  8418  01F8D4  6EE6               	movwf	postinc1,c
  8419  01F8D6  0E3B               	movlw	59
  8420  01F8D8  6EE6               	movwf	postinc1,c
  8421                           
  8422                           ;stkvar	_voltage @ sp[(-4)+-4]
  8423  01F8DA  0EF8               	movlw	-8
  8424  01F8DC  006F FF8F FFE6     	movff	plusw1,postinc1
  8425  01F8E2  006F FF8F FFE6     	movff	plusw1,postinc1
  8426  01F8E8  006F FF8F FFE6     	movff	plusw1,postinc1
  8427  01F8EE  006F FF8F FFE6     	movff	plusw1,postinc1
  8428  01F8F4  EC83  F0BE         	call	___fldiv	;wreg free
  8429  01F8F8  0060  F0AB  FFE6   	movff	btemp,postinc1
  8430  01F8FE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  8431  01F904  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  8432  01F90A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  8433  01F910  EC89  F0F3         	call	___fltol	;wreg free
  8434                           
  8435                           ; _convert_dac_raw: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
  8436  01F914  52E5               	movf	postdec1,f,c
  8437  01F916  52E5               	movf	postdec1,f,c
  8438  01F918  52E5               	movf	postdec1,f,c
  8439  01F91A  52E5               	movf	postdec1,f,c
  8440  01F91C  0012               	return		;funcret
  8441  01F91E                     __end_of_convert_dac_raw:
  8442                           	opt callstack 0
  8443                           
  8444 ;; *************** function _set_dac *****************
  8445 ;; Defined at:
  8446 ;;		line 257 in file "daq.c"
  8447 ;; Parameters:    Size  Location     Type
  8448 ;;		None
  8449 ;; Auto vars:     Size  Location     Type
  8450 ;;		None
  8451 ;; Return value:  Size  Location     Type
  8452 ;;                  1  [STACK] void 
  8453 ;; Registers used:
  8454 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  8455 ;; Tracked objects:
  8456 ;;		On entry : 0/3D
  8457 ;;		On exit  : 0/0
  8458 ;;		Unchanged: 0/0
  8459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8464 ;;Total ram usage:        0 bytes
  8465 ;; Hardware stack levels used:    1
  8466 ;; Hardware stack levels required when called:   16
  8467 ;; This function calls:
  8468 ;;		_SPI1_Exchange8bit
  8469 ;;		_dac_spi_control
  8470 ;; This function is called by:
  8471 ;;		_main
  8472 ;; This function uses a reentrant model
  8473 ;;
  8474                           
  8475                           	psect	text11
  8476  000824                     __ptext11:
  8477                           	opt callstack 0
  8478  000824                     _set_dac:
  8479                           	opt callstack 14
  8480                           
  8481                           ;daq.c: 259:  while (!SPI1STATUSbits.TXBE);
  8482                           
  8483                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8484                           ;incstack = 0
  8485  000824  013D               	movlb	61	; () banked
  8486  000826  AB17               	btfss	23,5,b	;volatile
  8487  000828  D7FD               	goto	_set_dac
  8488                           
  8489                           ; BSR set to: 61
  8490                           
  8491                           ;daq.c: 260:  do { LATCbits.LATC2 = 1; } while(0);
  8492  00082A  84BC               	bsf	188,2,c	;volatile
  8493                           
  8494                           ; BSR set to: 61
  8495                           
  8496                           ;daq.c: 261:  do { LATCbits.LATC0 = 1; } while(0);
  8497  00082C  80BC               	bsf	188,0,c	;volatile
  8498                           
  8499                           ; BSR set to: 61
  8500                           ;daq.c: 262:  dac_spi_control(1);
  8501  00082E  0E01               	movlw	1
  8502  000830  6EE6               	movwf	postinc1,c
  8503  000832  ECF2  F009         	call	_dac_spi_control	;wreg free
  8504                           
  8505                           ;daq.c: 263:  R.max5322_cmd.map.dac0 = R.raw_dac[0]&0xff;
  8506  000836  C120  F124         	movff	_R+32,_R+36	;volatile
  8507                           
  8508                           ;daq.c: 264:  R.max5322_cmd.map.dac1 = (R.raw_dac[0] >> 8) &0xf;
  8509  00083A  EE20  F120         	lfsr	2,_R+32	;volatile
  8510  00083E  006F FF78  F034    	movff	postinc2,btemp+10
  8511  000844  006F FF74  F035    	movff	postdec2,btemp+11
  8512  00084A  0060  F0D4  F034   	movff	btemp+11,btemp+10
  8513  000850  6A35               	clrf	(btemp+11)^0,c
  8514  000852  0E0F               	movlw	15
  8515  000854  1634               	andwf	(btemp+10)^0,f,c
  8516  000856  0101               	movlb	1	; () banked
  8517  000858  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8518  00085A  1834               	xorwf	(btemp+10)^0,w,c
  8519  00085C  0BF0               	andlw	-16
  8520  00085E  1834               	xorwf	(btemp+10)^0,w,c
  8521  000860  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  8522                           
  8523                           ; BSR set to: 1
  8524                           ;daq.c: 265:  R.max5322_cmd.map.cont = 0b0100;
  8525  000862  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8526  000864  0B0F               	andlw	-241
  8527  000866  0940               	iorlw	64
  8528  000868  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  8529                           
  8530                           ; BSR set to: 1
  8531  00086A  90BF               	bcf	191,0,c	;volatile
  8532                           
  8533                           ; BSR set to: 1
  8534                           ;daq.c: 267:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  8535  00086C  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8536  00086E  6EE6               	movwf	postinc1,c
  8537  000870  EC33  F014         	call	_SPI1_Exchange8bit	;wreg free
  8538                           
  8539                           ; BSR set to: 57
  8540                           ;daq.c: 268:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  8541  000874  0101               	movlb	1	; () banked
  8542  000876  5124               	movf	(_R+36)& (0+255),w,b	;volatile
  8543  000878  6EE6               	movwf	postinc1,c
  8544  00087A  EC33  F014         	call	_SPI1_Exchange8bit	;wreg free
  8545                           
  8546                           ; BSR set to: 57
  8547  00087E  80BF               	bsf	191,0,c	;volatile
  8548                           
  8549                           ; BSR set to: 57
  8550                           ;daq.c: 270:  R.max5322_cmd.map.dac0 = R.raw_dac[1]&0xff;
  8551  000880  C122  F124         	movff	_R+34,_R+36	;volatile
  8552                           
  8553                           ; BSR set to: 57
  8554                           ;daq.c: 271:  R.max5322_cmd.map.dac1 = (R.raw_dac[1] >> 8) &0xf;
  8555  000884  EE20  F122         	lfsr	2,_R+34	;volatile
  8556  000888  006F FF78  F034    	movff	postinc2,btemp+10
  8557  00088E  006F FF74  F035    	movff	postdec2,btemp+11
  8558  000894  0060  F0D4  F034   	movff	btemp+11,btemp+10
  8559  00089A  6A35               	clrf	(btemp+11)^0,c
  8560  00089C  0E0F               	movlw	15
  8561  00089E  1634               	andwf	(btemp+10)^0,f,c
  8562  0008A0  0101               	movlb	1	; () banked
  8563  0008A2  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8564  0008A4  1834               	xorwf	(btemp+10)^0,w,c
  8565  0008A6  0BF0               	andlw	-16
  8566  0008A8  1834               	xorwf	(btemp+10)^0,w,c
  8567  0008AA  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  8568                           
  8569                           ; BSR set to: 1
  8570                           ;daq.c: 272:  R.max5322_cmd.map.cont = 0b0101;
  8571  0008AC  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8572  0008AE  0B0F               	andlw	-241
  8573  0008B0  0950               	iorlw	80
  8574  0008B2  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  8575                           
  8576                           ; BSR set to: 1
  8577  0008B4  90BF               	bcf	191,0,c	;volatile
  8578                           
  8579                           ; BSR set to: 1
  8580                           ;daq.c: 274:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  8581  0008B6  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8582  0008B8  6EE6               	movwf	postinc1,c
  8583  0008BA  EC33  F014         	call	_SPI1_Exchange8bit	;wreg free
  8584                           
  8585                           ; BSR set to: 57
  8586                           ;daq.c: 275:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  8587  0008BE  0101               	movlb	1	; () banked
  8588  0008C0  5124               	movf	(_R+36)& (0+255),w,b	;volatile
  8589  0008C2  6EE6               	movwf	postinc1,c
  8590  0008C4  EC33  F014         	call	_SPI1_Exchange8bit	;wreg free
  8591  0008C8                     l2037:
  8592  0008C8  013D               	movlb	61	; () banked
  8593  0008CA  AB17               	btfss	23,5,b	;volatile
  8594  0008CC  D7FD               	goto	l2037
  8595                           
  8596                           ; BSR set to: 61
  8597                           
  8598                           ;daq.c: 277:  do { LATFbits.LATF0 = 1; } while(0);
  8599  0008CE  80BF               	bsf	191,0,c	;volatile
  8600                           
  8601                           ; BSR set to: 61
  8602                           ;daq.c: 278:  dac_spi_control(0);
  8603  0008D0  0E00               	movlw	0
  8604  0008D2  6EE6               	movwf	postinc1,c
  8605  0008D4  ECF2  F009         	call	_dac_spi_control	;wreg free
  8606                           
  8607                           ; _set_dac: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  8608  0008D8  0012               	return		;funcret
  8609  0008DA                     __end_of_set_dac:
  8610                           	opt callstack 0
  8611                           
  8612 ;; *************** function _dac_spi_control *****************
  8613 ;; Defined at:
  8614 ;;		line 209 in file "daq.c"
  8615 ;; Parameters:    Size  Location     Type
  8616 ;;  set             1  [STACK] _Bool 
  8617 ;; Auto vars:     Size  Location     Type
  8618 ;;		None
  8619 ;; Return value:  Size  Location     Type
  8620 ;;                  1  [STACK] void 
  8621 ;; Registers used:
  8622 ;;		wreg, fsr1l, fsr1h, status,2
  8623 ;; Tracked objects:
  8624 ;;		On entry : 3F/3D
  8625 ;;		On exit  : 0/0
  8626 ;;		Unchanged: 0/0
  8627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8632 ;;Total ram usage:        0 bytes
  8633 ;; Hardware stack levels used:    1
  8634 ;; Hardware stack levels required when called:   15
  8635 ;; This function calls:
  8636 ;;		Nothing
  8637 ;; This function is called by:
  8638 ;;		_set_dac
  8639 ;; This function uses a reentrant model
  8640 ;;
  8641                           
  8642                           	psect	text12
  8643  0013E4                     __ptext12:
  8644                           	opt callstack 0
  8645  0013E4                     _dac_spi_control:
  8646                           	opt callstack 14
  8647                           
  8648                           ;daq.c: 209: void dac_spi_control(_Bool set);daq.c: 210: {;daq.c: 211:  static _Bool ini
      +                          t = 0;;daq.c: 212:  static uint8_t S0, S1, S2, SC, SB;;daq.c: 214:  if (set) {
  8649                           ;stkvar	_set @ sp[(0)+-1]
  8650                           
  8651                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8652                           ;incstack = 0
  8653  0013E4  0EFF               	movlw	-1
  8654  0013E6  50E3               	movf	plusw1,w,c
  8655  0013E8  B4D8               	btfsc	status,2,c
  8656  0013EA  D022               	goto	l13698
  8657                           
  8658                           ;daq.c: 215:   SPI1CON0bits.EN = 0;
  8659  0013EC  013D               	movlb	61	; () banked
  8660  0013EE  9F14               	bcf	20,7,b	;volatile
  8661                           
  8662                           ; BSR set to: 61
  8663                           ;daq.c: 216:   if (!init) {
  8664  0013F0  5052               	movf	dac_spi_control@init^0,w,c
  8665  0013F2  A4D8               	btfss	status,2,c
  8666  0013F4  D011               	goto	l13686
  8667                           
  8668                           ; BSR set to: 61
  8669                           ;daq.c: 217:    init = 1;
  8670  0013F6  0E01               	movlw	1
  8671  0013F8  6E52               	movwf	dac_spi_control@init^0,c
  8672                           
  8673                           ; BSR set to: 61
  8674                           ;daq.c: 218:    S0 = SPI1CON0;
  8675  0013FA  006F F450  F0CB    	movff	15636,dac_spi_control@S0	;volatile
  8676                           
  8677                           ; BSR set to: 61
  8678                           ;daq.c: 219:    S1 = SPI1CON1;
  8679  001400  006F F454  F0CA    	movff	15637,dac_spi_control@S1	;volatile
  8680                           
  8681                           ; BSR set to: 61
  8682                           ;daq.c: 220:    S2 = SPI1CON2;
  8683  001406  006F F458  F0C9    	movff	15638,dac_spi_control@S2	;volatile
  8684                           
  8685                           ; BSR set to: 61
  8686                           ;daq.c: 221:    SC = SPI1CLK;
  8687  00140C  006F F470  F0C8    	movff	15644,dac_spi_control@SC	;volatile
  8688                           
  8689                           ; BSR set to: 61
  8690                           ;daq.c: 222:    SB = SPI1BAUD;
  8691  001412  006F F464  F0C7    	movff	15641,dac_spi_control@SB	;volatile
  8692  001418                     l13686:
  8693                           
  8694                           ; BSR set to: 61
  8695                           ;daq.c: 228:   SPI1CON1 = 0x00;
  8696  001418  6B15               	clrf	21,b	;volatile
  8697                           
  8698                           ; BSR set to: 61
  8699                           ;daq.c: 229:   SPI1CON1bits.CKE = 1;
  8700  00141A  8D15               	bsf	21,6,b	;volatile
  8701                           
  8702                           ; BSR set to: 61
  8703                           ;daq.c: 230:   SPI1CON1bits.CKP = 0;
  8704  00141C  9B15               	bcf	21,5,b	;volatile
  8705                           
  8706                           ; BSR set to: 61
  8707                           ;daq.c: 231:   SPI1CON1bits.SMP = 0;
  8708  00141E  9F15               	bcf	21,7,b	;volatile
  8709                           
  8710                           ;daq.c: 233:   SPI1CON2 = 0x03;
  8711  001420  0E03               	movlw	3
  8712  001422  6F16               	movwf	22,b	;volatile
  8713                           
  8714                           ;daq.c: 235:   SPI1BAUD = 0x0f;
  8715  001424  0E0F               	movlw	15
  8716  001426  6F19               	movwf	25,b	;volatile
  8717                           
  8718                           ; BSR set to: 61
  8719                           ;daq.c: 237:   SPI1CLK = 0x00;
  8720  001428  6B1C               	clrf	28,b	;volatile
  8721                           
  8722                           ;daq.c: 239:   SPI1CON0 = 0x83;
  8723  00142A  0E83               	movlw	131
  8724  00142C  6F14               	movwf	20,b	;volatile
  8725  00142E  D014               	goto	L4
  8726  001430                     l13698:
  8727                           
  8728                           ;daq.c: 242:   if (init) {
  8729  001430  5052               	movf	dac_spi_control@init^0,w,c
  8730  001432  B4D8               	btfsc	status,2,c
  8731  001434  D012               	goto	l2021
  8732                           
  8733                           ;daq.c: 246:    SPI1CON0bits.EN = 0;
  8734  001436  013D               	movlb	61	; () banked
  8735  001438  9F14               	bcf	20,7,b	;volatile
  8736                           
  8737                           ;daq.c: 247:    SPI1CON1 = S1;
  8738  00143A  0060  F32B  FD15   	movff	dac_spi_control@S1,15637	;volatile
  8739                           
  8740                           ;daq.c: 248:    SPI1CON2 = S2;
  8741  001440  0060  F327  FD16   	movff	dac_spi_control@S2,15638	;volatile
  8742                           
  8743                           ;daq.c: 249:    SPI1CLK = SC;
  8744  001446  0060  F323  FD1C   	movff	dac_spi_control@SC,15644	;volatile
  8745                           
  8746                           ;daq.c: 250:    SPI1BAUD = SB;
  8747  00144C  0060  F31F  FD19   	movff	dac_spi_control@SB,15641	;volatile
  8748                           
  8749                           ;daq.c: 251:    SPI1CON0 = S0;
  8750  001452  0060  F32F  FD14   	movff	dac_spi_control@S0,15636	;volatile
  8751  001458                     L4:
  8752                           
  8753                           ;daq.c: 252:    SPI1CON0bits.EN = 1;
  8754  001458  8F14               	bsf	20,7,b	;volatile
  8755  00145A                     l2021:
  8756                           
  8757                           ; _dac_spi_control: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          1, argsize = 1, vargsize = 0
  8758  00145A  52E5               	movf	postdec1,f,c
  8759  00145C  0012               	return		;funcret
  8760  00145E                     __end_of_dac_spi_control:
  8761                           	opt callstack 0
  8762                           
  8763 ;; *************** function _read_cal_data *****************
  8764 ;; Defined at:
  8765 ;;		line 370 in file "daq.c"
  8766 ;; Parameters:    Size  Location     Type
  8767 ;;		None
  8768 ;; Auto vars:     Size  Location     Type
  8769 ;;  x               2  [STACK] unsigned short 
  8770 ;;  r_cal_ptr       2  [STACK] PTR unsigned char 
  8771 ;;		 -> r_cal(155), 
  8772 ;;  y               2  [STACK] unsigned short 
  8773 ;;  crcVal_save     1  [STACK] unsigned char 
  8774 ;; Return value:  Size  Location     Type
  8775 ;;                  1  [STACK] _Bool 
  8776 ;; Registers used:
  8777 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
  8778 ;; Tracked objects:
  8779 ;;		On entry : 0/39
  8780 ;;		On exit  : 0/0
  8781 ;;		Unchanged: 0/0
  8782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8787 ;;Total ram usage:        0 bytes
  8788 ;; Hardware stack levels used:    1
  8789 ;; Hardware stack levels required when called:   17
  8790 ;; This function calls:
  8791 ;;		_CRC_8BitDataWrite
  8792 ;;		_CRC_CalculatedResultGet
  8793 ;;		_CRC_Initialize
  8794 ;;		_CRC_IsBusy
  8795 ;;		_CRC_Start
  8796 ;;		_DATAEE_ReadByte
  8797 ;; This function is called by:
  8798 ;;		_main
  8799 ;; This function uses a reentrant model
  8800 ;;
  8801                           
  8802                           	psect	text13
  8803  01D8B8                     __ptext13:
  8804                           	opt callstack 0
  8805  01D8B8                     _read_cal_data:
  8806                           	opt callstack 0
  8807                           
  8808                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8809  01D8B8  0E07               	movlw	7
  8810  01D8BA  26E1               	addwf	fsr1l,f,c
  8811  01D8BC  0E00               	movlw	0
  8812  01D8BE  22E2               	addwfc	fsr1h,f,c
  8813                           
  8814                           ;daq.c: 372:  uint16_t x = 0, y;
  8815                           ;stkvar	_x @ sp[(-7)+0]
  8816                           
  8817                           ;incstack = 0
  8818  01D8C0  0EF9               	movlw	-7
  8819  01D8C2  6AE3               	clrf	plusw1,c
  8820  01D8C4  0EFA               	movlw	-6
  8821  01D8C6  6AE3               	clrf	plusw1,c
  8822                           
  8823                           ;daq.c: 373:  uint8_t *r_cal_ptr, crcVal_save;;daq.c: 375:  y = sizeof(r_cal);
  8824  01D8C8  0E9B               	movlw	155
  8825  01D8CA  6E34               	movwf	(btemp+10)^0,c
  8826  01D8CC  0E00               	movlw	0
  8827  01D8CE  6E35               	movwf	(btemp+11)^0,c
  8828                           
  8829                           ;stkvar	_y @ sp[(-7)+4]
  8830  01D8D0  0EFD               	movlw	-3
  8831  01D8D2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  8832  01D8D8  0EFE               	movlw	-2
  8833  01D8DA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  8834                           
  8835                           ;daq.c: 376:  r_cal_ptr = (uint8_t*) & r_cal;
  8836                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  8837  01D8E0  0E04               	movlw	high _r_cal
  8838  01D8E2  6E2A               	movwf	btemp^0,c
  8839  01D8E4  0EFC               	movlw	-4
  8840  01D8E6  0060  F0AB  FFE3   	movff	btemp,plusw1
  8841  01D8EC  0E40               	movlw	low _r_cal
  8842  01D8EE  6E2A               	movwf	btemp^0,c
  8843  01D8F0  0EFB               	movlw	-5
  8844  01D8F2  0060  F0AB  FFE3   	movff	btemp,plusw1
  8845                           
  8846                           ;daq.c: 378:  CRC_Initialize();
  8847  01D8F8  EC22  F008         	call	_CRC_Initialize	;wreg free
  8848                           
  8849                           ; BSR set to: 0
  8850                           ;daq.c: 381:  CRC_Start();
  8851  01D8FC  EC70  F015         	call	_CRC_Start	;wreg free
  8852  01D900                     l14132:
  8853                           
  8854                           ;daq.c: 384:   r_cal_ptr[x] = DATAEE_ReadByte(x);
  8855                           ;stkvar	_x @ sp[(-7)+0]
  8856  01D900  0EF9               	movlw	-7
  8857  01D902  006F FF8F FFE6     	movff	plusw1,postinc1
  8858  01D908  006F FF8F FFE6     	movff	plusw1,postinc1
  8859  01D90E  EC60  F011         	call	_DATAEE_ReadByte	;wreg free
  8860                           
  8861                           ;stkvar	_x @ sp[(-7)+0]
  8862  01D912  0EF9               	movlw	-7
  8863  01D914  006F FF8C  F034    	movff	plusw1,btemp+10
  8864  01D91A  0EFA               	movlw	-6
  8865  01D91C  006F FF8C  F035    	movff	plusw1,btemp+11
  8866                           
  8867                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  8868  01D922  0EFB               	movlw	-5
  8869  01D924  006F FF8C  F032    	movff	plusw1,btemp+8
  8870  01D92A  0EFC               	movlw	-4
  8871  01D92C  006F FF8C  F033    	movff	plusw1,btemp+9
  8872  01D932  5034               	movf	(btemp+10)^0,w,c
  8873  01D934  2432               	addwf	(btemp+8)^0,w,c
  8874  01D936  6ED9               	movwf	fsr2l,c
  8875  01D938  5035               	movf	(btemp+11)^0,w,c
  8876  01D93A  2033               	addwfc	(btemp+9)^0,w,c
  8877  01D93C  6EDA               	movwf	fsr2h,c
  8878  01D93E  0060  F0AB  FFDF   	movff	btemp,indf2
  8879                           
  8880                           ;daq.c: 385:  } while (++x < y);
  8881                           ;stkvar	_y @ sp[(-7)+4]
  8882  01D944  0EFD               	movlw	-3
  8883  01D946  006F FF8C  F034    	movff	plusw1,btemp+10
  8884  01D94C  0EFE               	movlw	-2
  8885  01D94E  006F FF8C  F035    	movff	plusw1,btemp+11
  8886                           
  8887                           ;stkvar	_x @ sp[(-7)+0]
  8888  01D954  0EF9               	movlw	-7
  8889  01D956  50E3               	movf	plusw1,w,c
  8890  01D958  0F01               	addlw	1
  8891  01D95A  6E2A               	movwf	btemp^0,c
  8892  01D95C  0EF9               	movlw	-7
  8893  01D95E  0060  F0AB  FFE3   	movff	btemp,plusw1
  8894  01D964  6A2A               	clrf	btemp^0,c
  8895  01D966  0EFA               	movlw	-6
  8896  01D968  50E3               	movf	plusw1,w,c
  8897  01D96A  202A               	addwfc	btemp^0,w,c
  8898  01D96C  6E2A               	movwf	btemp^0,c
  8899  01D96E  0EFA               	movlw	-6
  8900  01D970  0060  F0AB  FFE3   	movff	btemp,plusw1
  8901  01D976  0EF9               	movlw	-7
  8902  01D978  006F FF8C  F032    	movff	plusw1,btemp+8
  8903  01D97E  0EFA               	movlw	-6
  8904  01D980  006F FF8C  F033    	movff	plusw1,btemp+9
  8905  01D986  5034               	movf	(btemp+10)^0,w,c
  8906  01D988  5C32               	subwf	(btemp+8)^0,w,c
  8907  01D98A  5035               	movf	(btemp+11)^0,w,c
  8908  01D98C  5833               	subwfb	(btemp+9)^0,w,c
  8909  01D98E  A0D8               	btfss	status,0,c
  8910  01D990  D7B7               	goto	l14132
  8911                           
  8912                           ;daq.c: 386:  crcVal_save = r_cal.crc;
  8913                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  8914  01D992  0EFF               	movlw	-1
  8915  01D994  0061  F36B  FFE3   	movff	_r_cal+154,plusw1
  8916                           
  8917                           ;daq.c: 388:  if (r_cal.checkmark == 0x1957) {
  8918  01D99A  0E57               	movlw	87
  8919  01D99C  0104               	movlb	4	; () banked
  8920  01D99E  19D8               	xorwf	(_r_cal+152)& (0+255),w,b
  8921  01D9A0  E163               	bnz	l14152
  8922  01D9A2  0E19               	movlw	25
  8923  01D9A4  19D9               	xorwf	(_r_cal+153)& (0+255),w,b
  8924  01D9A6  A4D8               	btfss	status,2,c
  8925  01D9A8  D05F               	goto	u13340
  8926                           
  8927                           ; BSR set to: 4
  8928                           ;daq.c: 389:   r_cal.crc = 0x42;
  8929  01D9AA  0E42               	movlw	66
  8930  01D9AC  6FDA               	movwf	(_r_cal+154)& (0+255),b
  8931                           
  8932                           ; BSR set to: 4
  8933                           ;daq.c: 390:   x = 0;
  8934                           ;stkvar	_x @ sp[(-7)+0]
  8935  01D9AE  0EF9               	movlw	-7
  8936  01D9B0  6AE3               	clrf	plusw1,c
  8937  01D9B2  0EFA               	movlw	-6
  8938  01D9B4  6AE3               	clrf	plusw1,c
  8939  01D9B6                     l14144:
  8940                           
  8941                           ;daq.c: 393:    CRC_8BitDataWrite(r_cal_ptr[x]);
  8942                           ;stkvar	_x @ sp[(-7)+0]
  8943  01D9B6  0EF9               	movlw	-7
  8944  01D9B8  006F FF8C  F034    	movff	plusw1,btemp+10
  8945  01D9BE  0EFA               	movlw	-6
  8946  01D9C0  006F FF8C  F035    	movff	plusw1,btemp+11
  8947                           
  8948                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  8949  01D9C6  0EFB               	movlw	-5
  8950  01D9C8  006F FF8C  F032    	movff	plusw1,btemp+8
  8951  01D9CE  0EFC               	movlw	-4
  8952  01D9D0  006F FF8C  F033    	movff	plusw1,btemp+9
  8953  01D9D6  5034               	movf	(btemp+10)^0,w,c
  8954  01D9D8  2432               	addwf	(btemp+8)^0,w,c
  8955  01D9DA  6ED9               	movwf	fsr2l,c
  8956  01D9DC  5035               	movf	(btemp+11)^0,w,c
  8957  01D9DE  2033               	addwfc	(btemp+9)^0,w,c
  8958  01D9E0  6EDA               	movwf	fsr2h,c
  8959  01D9E2  50DF               	movf	indf2,w,c
  8960  01D9E4  6EE6               	movwf	postinc1,c
  8961  01D9E6  ECD7  F014         	call	_CRC_8BitDataWrite	;wreg free
  8962  01D9EA                     l14146:
  8963  01D9EA  ECF9  F014         	call	_CRC_IsBusy	;wreg free
  8964  01D9EE  502A               	movf	btemp^0,w,c
  8965  01D9F0  A4D8               	btfss	status,2,c
  8966  01D9F2  D7FB               	goto	l14146
  8967                           
  8968                           ;daq.c: 395:   } while (++x < y);
  8969                           ;stkvar	_y @ sp[(-7)+4]
  8970  01D9F4  0EFD               	movlw	-3
  8971  01D9F6  006F FF8C  F034    	movff	plusw1,btemp+10
  8972  01D9FC  0EFE               	movlw	-2
  8973  01D9FE  006F FF8C  F035    	movff	plusw1,btemp+11
  8974                           
  8975                           ;stkvar	_x @ sp[(-7)+0]
  8976  01DA04  0EF9               	movlw	-7
  8977  01DA06  50E3               	movf	plusw1,w,c
  8978  01DA08  0F01               	addlw	1
  8979  01DA0A  6E2A               	movwf	btemp^0,c
  8980  01DA0C  0EF9               	movlw	-7
  8981  01DA0E  0060  F0AB  FFE3   	movff	btemp,plusw1
  8982  01DA14  6A2A               	clrf	btemp^0,c
  8983  01DA16  0EFA               	movlw	-6
  8984  01DA18  50E3               	movf	plusw1,w,c
  8985  01DA1A  202A               	addwfc	btemp^0,w,c
  8986  01DA1C  6E2A               	movwf	btemp^0,c
  8987  01DA1E  0EFA               	movlw	-6
  8988  01DA20  0060  F0AB  FFE3   	movff	btemp,plusw1
  8989  01DA26  0EF9               	movlw	-7
  8990  01DA28  006F FF8C  F032    	movff	plusw1,btemp+8
  8991  01DA2E  0EFA               	movlw	-6
  8992  01DA30  006F FF8C  F033    	movff	plusw1,btemp+9
  8993  01DA36  5034               	movf	(btemp+10)^0,w,c
  8994  01DA38  5C32               	subwf	(btemp+8)^0,w,c
  8995  01DA3A  5035               	movf	(btemp+11)^0,w,c
  8996  01DA3C  5833               	subwfb	(btemp+9)^0,w,c
  8997  01DA3E  A0D8               	btfss	status,0,c
  8998  01DA40  D7BA               	goto	l14144
  8999                           
  9000                           ;daq.c: 396:   if (CRC_CalculatedResultGet(0, 0x00) != crcVal_save)
  9001  01DA42  0E00               	movlw	0
  9002  01DA44  6EE6               	movwf	postinc1,c
  9003  01DA46  0E00               	movlw	0
  9004  01DA48  6EE6               	movwf	postinc1,c
  9005  01DA4A  0E00               	movlw	0
  9006  01DA4C  6EE6               	movwf	postinc1,c
  9007  01DA4E  ECD0  F0F2         	call	_CRC_CalculatedResultGet	;wreg free
  9008                           
  9009                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  9010  01DA52  0EFF               	movlw	-1
  9011  01DA54  50E3               	movf	plusw1,w,c
  9012  01DA56  6E34               	movwf	(btemp+10)^0,c
  9013  01DA58  6A35               	clrf	(btemp+11)^0,c
  9014  01DA5A  5034               	movf	(btemp+10)^0,w,c
  9015  01DA5C  182A               	xorwf	btemp^0,w,c
  9016  01DA5E  E104               	bnz	u13340
  9017  01DA60  5035               	movf	(btemp+11)^0,w,c
  9018  01DA62  182B               	xorwf	(btemp+1)^0,w,c
  9019  01DA64  B4D8               	btfsc	status,2,c
  9020  01DA66  D002               	goto	l14160
  9021  01DA68                     u13340:
  9022  01DA68                     l14152:
  9023                           
  9024                           ;daq.c: 397:    return 0;
  9025  01DA68  0E00               	movlw	0
  9026  01DA6A  D005               	goto	L5
  9027  01DA6C                     l14160:
  9028                           
  9029                           ;daq.c: 401:  r_cal.crc = crcVal_save;
  9030                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  9031  01DA6C  0EFF               	movlw	-1
  9032  01DA6E  006F FF8C  F4DA    	movff	plusw1,_r_cal+154
  9033                           
  9034                           ;daq.c: 402:  return 1;
  9035  01DA74  0E01               	movlw	1
  9036  01DA76                     L5:
  9037  01DA76  6E2A               	movwf	btemp^0,c
  9038                           
  9039                           ; _read_cal_data: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  9040  01DA78  0EF9               	movlw	249
  9041  01DA7A  26E1               	addwf	fsr1l,f,c
  9042  01DA7C  0EFF               	movlw	255
  9043  01DA7E  22E2               	addwfc	fsr1h,f,c
  9044  01DA80  0012               	return		;funcret
  9045  01DA82                     __end_of_read_cal_data:
  9046                           	opt callstack 0
  9047                           
  9048 ;; *************** function _DATAEE_ReadByte *****************
  9049 ;; Defined at:
  9050 ;;		line 194 in file "mcc_generated_files/memory.c"
  9051 ;; Parameters:    Size  Location     Type
  9052 ;;  bAdd            2  [STACK] unsigned short 
  9053 ;; Auto vars:     Size  Location     Type
  9054 ;;		None
  9055 ;; Return value:  Size  Location     Type
  9056 ;;                  1  [STACK] unsigned char 
  9057 ;; Registers used:
  9058 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  9059 ;; Tracked objects:
  9060 ;;		On entry : 0/39
  9061 ;;		On exit  : 0/0
  9062 ;;		Unchanged: 0/0
  9063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9068 ;;Total ram usage:        0 bytes
  9069 ;; Hardware stack levels used:    1
  9070 ;; Hardware stack levels required when called:   15
  9071 ;; This function calls:
  9072 ;;		Nothing
  9073 ;; This function is called by:
  9074 ;;		_read_cal_data
  9075 ;; This function uses a reentrant model
  9076 ;;
  9077                           
  9078                           	psect	text14
  9079  0022C0                     __ptext14:
  9080                           	opt callstack 0
  9081  0022C0                     _DATAEE_ReadByte:
  9082                           	opt callstack 14
  9083                           
  9084                           ;mcc_generated_files/memory.c: 194: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 195: {;mcc_generated_files/memory.c: 196:     NVMADRH = (uint8_t)((bAdd
      +                           >> 8) & 0x03);
  9085                           ;stkvar	_bAdd @ sp[(0)+-2]
  9086                           
  9087                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9088                           ;incstack = 0
  9089  0022C0  0EFF               	movlw	255
  9090  0022C2  24E1               	addwf	fsr1l,w,c
  9091  0022C4  6ED9               	movwf	fsr2l,c
  9092  0022C6  0EFF               	movlw	255
  9093  0022C8  20E2               	addwfc	fsr1h,w,c
  9094  0022CA  6EDA               	movwf	fsr2h,c
  9095  0022CC  50DF               	movf	indf2,w,c
  9096  0022CE  0B03               	andlw	3
  9097  0022D0  0139               	movlb	57	; () banked
  9098  0022D2  6FE1               	movwf	225,b	;volatile
  9099                           
  9100                           ; BSR set to: 57
  9101                           ;mcc_generated_files/memory.c: 197:     NVMADRL = (uint8_t)(bAdd & 0xFF);
  9102                           ;stkvar	_bAdd @ sp[(0)+-2]
  9103  0022D4  0EFE               	movlw	-2
  9104  0022D6  006F FF8F F9E0     	movff	plusw1,14816	;volatile
  9105                           
  9106                           ; BSR set to: 57
  9107                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.NVMREG = 0;
  9108  0022DC  0E3F               	movlw	-193
  9109  0022DE  17E5               	andwf	229,f,b	;volsfr
  9110                           
  9111                           ; BSR set to: 57
  9112                           ;mcc_generated_files/memory.c: 199:     NVMCON1bits.RD = 1;
  9113  0022E0  81E5               	bsf	229,0,b	;volsfr
  9114                           
  9115                           ; BSR set to: 57
  9116                           ;mcc_generated_files/memory.c: 200:     __nop();
  9117  0022E2  F000               	nop	
  9118                           
  9119                           ;mcc_generated_files/memory.c: 201:     __nop();
  9120  0022E4  F000               	nop	
  9121                           
  9122                           ;mcc_generated_files/memory.c: 203:     return (NVMDAT);
  9123  0022E6  006E F78C  F02A    	movff	14819,btemp	;volatile
  9124                           
  9125                           ; _DATAEE_ReadByte: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  9126  0022EC  52E5               	movf	postdec1,f,c
  9127  0022EE  52E5               	movf	postdec1,f,c
  9128  0022F0  0012               	return		;funcret
  9129  0022F2                     __end_of_DATAEE_ReadByte:
  9130                           	opt callstack 0
  9131                           
  9132 ;; *************** function _load_hist_data *****************
  9133 ;; Defined at:
  9134 ;;		line 224 in file "mbmc.c"
  9135 ;; Parameters:    Size  Location     Type
  9136 ;;		None
  9137 ;; Auto vars:     Size  Location     Type
  9138 ;;  esr_rescale     2  [STACK] short 
  9139 ;; Return value:  Size  Location     Type
  9140 ;;                  1  [STACK] void 
  9141 ;; Registers used:
  9142 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, prodl, prodh
  9143 ;; Tracked objects:
  9144 ;;		On entry : 0/1
  9145 ;;		On exit  : 3F/39
  9146 ;;		Unchanged: 0/0
  9147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9152 ;;Total ram usage:        0 bytes
  9153 ;; Hardware stack levels used:    1
  9154 ;; Hardware stack levels required when called:   16
  9155 ;; This function calls:
  9156 ;;		___fladd
  9157 ;;		___flmul
  9158 ;;		___fltol
  9159 ;;		___xxtofl
  9160 ;;		_start_bsoc
  9161 ;;		_stop_bsoc
  9162 ;;		_time
  9163 ;; This function is called by:
  9164 ;;		_main
  9165 ;; This function uses a reentrant model
  9166 ;;
  9167                           
  9168                           	psect	text15
  9169  019546                     __ptext15:
  9170                           	opt callstack 0
  9171  019546                     _load_hist_data:
  9172                           	opt callstack 0
  9173                           
  9174                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9175  019546  52E6               	movf	postinc1,f,c
  9176  019548  52E6               	movf	postinc1,f,c
  9177                           
  9178                           ;mbmc.c: 226:  int16_t esr_rescale;;mbmc.c: 228:  stop_bsoc();
  9179                           
  9180                           ;incstack = 0
  9181  01954A  EC7C  F015         	call	_stop_bsoc	;wreg free
  9182                           
  9183                           ; BSR set to: 57
  9184                           ;mbmc.c: 229:  esr_rescale = (int16_t) (C.esr * 1000.0);
  9185  01954E  0E00               	movlw	0
  9186  019550  6EE6               	movwf	postinc1,c
  9187  019552  0E00               	movlw	0
  9188  019554  6EE6               	movwf	postinc1,c
  9189  019556  0E7A               	movlw	122
  9190  019558  6EE6               	movwf	postinc1,c
  9191  01955A  0E44               	movlw	68
  9192  01955C  6EE6               	movwf	postinc1,c
  9193  01955E  EE22  F187         	lfsr	2,_C+136	;volatile
  9194  019562  006F FF7B FFE6     	movff	postinc2,postinc1
  9195  019568  006F FF7B FFE6     	movff	postinc2,postinc1
  9196  01956E  006F FF7B FFE6     	movff	postinc2,postinc1
  9197  019574  006F FF7B FFE6     	movff	postinc2,postinc1
  9198  01957A  EC32  F0B3         	call	___flmul	;wreg free
  9199  01957E  0060  F0AB  FFE6   	movff	btemp,postinc1
  9200  019584  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9201  01958A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9202  019590  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9203  019596  EC89  F0F3         	call	___fltol	;wreg free
  9204  01959A  0060  F0A8  F034   	movff	btemp,btemp+10
  9205  0195A0  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9206                           
  9207                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  9208  0195A6  0EFE               	movlw	-2
  9209  0195A8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  9210  0195AE  0EFF               	movlw	-1
  9211  0195B0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  9212                           
  9213                           ;mbmc.c: 230:  C.hist[0].updates++;
  9214  0195B6  EE22  F1C4         	lfsr	2,_C+197	;volatile
  9215  0195BA  2ADE               	incf	postinc2,f,c
  9216  0195BC  0E00               	movlw	0
  9217  0195BE  22DE               	addwfc	postinc2,f,c
  9218  0195C0  22DE               	addwfc	postinc2,f,c
  9219  0195C2  22DE               	addwfc	postinc2,f,c
  9220                           
  9221                           ;mbmc.c: 231:  C.hist[0].h[12] += C.pvkw;
  9222  0195C4  EE22  F1A7         	lfsr	2,_C+168	;volatile
  9223  0195C8  006F FF7B FFE6     	movff	postinc2,postinc1
  9224  0195CE  006F FF7B FFE6     	movff	postinc2,postinc1
  9225  0195D4  006F FF7B FFE6     	movff	postinc2,postinc1
  9226  0195DA  006F FF7B FFE6     	movff	postinc2,postinc1
  9227  0195E0  0062  F7F0  F032   	movff	_C+253,btemp+8	;volatile
  9228  0195E6  0062  F7F4  F033   	movff	_C+254,btemp+9	;volatile
  9229  0195EC  0E00               	movlw	0
  9230  0195EE  BE33               	btfsc	(btemp+9)^0,7,c
  9231  0195F0  0EFF               	movlw	255
  9232  0195F2  6E34               	movwf	(btemp+10)^0,c
  9233  0195F4  6E35               	movwf	(btemp+11)^0,c
  9234  0195F6  0060  F0CB  FFE6   	movff	btemp+8,postinc1
  9235  0195FC  0060  F0CF  FFE6   	movff	btemp+9,postinc1
  9236  019602  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  9237  019608  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  9238  01960E  0E01               	movlw	1
  9239  019610  6EE6               	movwf	postinc1,c
  9240  019612  EC5A  F0EB         	call	___xxtofl	;wreg free
  9241  019616  0060  F0AB  FFE6   	movff	btemp,postinc1
  9242  01961C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9243  019622  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9244  019628  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9245  01962E  EC47  F0B7         	call	___fladd	;wreg free
  9246  019632  0060  F0AB  FFE6   	movff	btemp,postinc1
  9247  019638  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9248  01963E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9249  019644  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9250  01964A  EC89  F0F3         	call	___fltol	;wreg free
  9251  01964E  0060  F0A8  F034   	movff	btemp,btemp+10
  9252  019654  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9253  01965A  0060  F0D0  F9FC   	movff	btemp+10,_C+253	;volatile
  9254  019660  0060  F0D4  F9FD   	movff	btemp+11,_C+254	;volatile
  9255                           
  9256                           ;mbmc.c: 232:  C.hist[0].h[11]++;
  9257  019666  EE22  F1FA         	lfsr	2,_C+251	;volatile
  9258  01966A  2ADE               	incf	postinc2,f,c
  9259  01966C  0E00               	movlw	0
  9260  01966E  22DD               	addwfc	postdec2,f,c
  9261                           
  9262                           ;mbmc.c: 233:  if (esr_rescale > C.hist[0].h[10])
  9263                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  9264  019670  EE22  F1F8         	lfsr	2,_C+249	;volatile
  9265  019674  0EFE               	movlw	-2
  9266  019676  50E3               	movf	plusw1,w,c
  9267  019678  5CDE               	subwf	postinc2,w,c
  9268  01967A  50DE               	movf	postinc2,w,c
  9269  01967C  0A80               	xorlw	128
  9270  01967E  6E2A               	movwf	btemp^0,c
  9271  019680  0EFF               	movlw	-1
  9272  019682  50E3               	movf	plusw1,w,c
  9273  019684  0A80               	xorlw	128
  9274  019686  582A               	subwfb	btemp^0,w,c
  9275  019688  B0D8               	btfsc	status,0,c
  9276  01968A  D00D               	goto	l14456
  9277                           
  9278                           ;mbmc.c: 234:   C.hist[0].h[10] = esr_rescale;
  9279                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  9280  01968C  50E1               	movf	fsr1l,w,c
  9281  01968E  0FFE               	addlw	-2
  9282  019690  6ED9               	movwf	fsr2l,c
  9283  019692  50E2               	movf	fsr1h,w,c
  9284  019694  6EDA               	movwf	fsr2h,c
  9285  019696  0EFF               	movlw	255
  9286  019698  22DA               	addwfc	fsr2h,f,c
  9287  01969A  006F FF78  F9F8    	movff	postinc2,_C+249	;volatile
  9288  0196A0  006F FF74  F9F9    	movff	postdec2,_C+250	;volatile
  9289  0196A6                     l14456:
  9290                           
  9291                           ;mbmc.c: 235:  if (esr_rescale < C.hist[0].h[9])
  9292  0196A6  EE22  F1F6         	lfsr	2,_C+247	;volatile
  9293                           
  9294                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  9295  0196AA  0EFE               	movlw	-2
  9296  0196AC  006F FF8C  F02A    	movff	plusw1,btemp
  9297  0196B2  50DE               	movf	postinc2,w,c
  9298  0196B4  5C2A               	subwf	btemp^0,w,c
  9299  0196B6  0EFF               	movlw	-1
  9300  0196B8  50E3               	movf	plusw1,w,c
  9301  0196BA  0A80               	xorlw	128
  9302  0196BC  6E2A               	movwf	btemp^0,c
  9303  0196BE  50DE               	movf	postinc2,w,c
  9304  0196C0  0A80               	xorlw	128
  9305  0196C2  582A               	subwfb	btemp^0,w,c
  9306  0196C4  B0D8               	btfsc	status,0,c
  9307  0196C6  D00D               	goto	l14460
  9308                           
  9309                           ;mbmc.c: 236:   C.hist[0].h[9] = esr_rescale;
  9310                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  9311  0196C8  50E1               	movf	fsr1l,w,c
  9312  0196CA  0FFE               	addlw	-2
  9313  0196CC  6ED9               	movwf	fsr2l,c
  9314  0196CE  50E2               	movf	fsr1h,w,c
  9315  0196D0  6EDA               	movwf	fsr2h,c
  9316  0196D2  0EFF               	movlw	255
  9317  0196D4  22DA               	addwfc	fsr2h,f,c
  9318  0196D6  006F FF78  F9F6    	movff	postinc2,_C+247	;volatile
  9319  0196DC  006F FF74  F9F7    	movff	postdec2,_C+248	;volatile
  9320  0196E2                     l14460:
  9321                           
  9322                           ;mbmc.c: 237:  C.hist[0].h[8] = C.bv_one_load * 100.0;
  9323  0196E2  0E00               	movlw	0
  9324  0196E4  6EE6               	movwf	postinc1,c
  9325  0196E6  0E00               	movlw	0
  9326  0196E8  6EE6               	movwf	postinc1,c
  9327  0196EA  0EC8               	movlw	200
  9328  0196EC  6EE6               	movwf	postinc1,c
  9329  0196EE  0E42               	movlw	66
  9330  0196F0  6EE6               	movwf	postinc1,c
  9331  0196F2  EE22  F225         	lfsr	2,_C+294	;volatile
  9332  0196F6  006F FF7B FFE6     	movff	postinc2,postinc1
  9333  0196FC  006F FF7B FFE6     	movff	postinc2,postinc1
  9334  019702  006F FF7B FFE6     	movff	postinc2,postinc1
  9335  019708  006F FF7B FFE6     	movff	postinc2,postinc1
  9336  01970E  EC32  F0B3         	call	___flmul	;wreg free
  9337  019712  0060  F0AB  FFE6   	movff	btemp,postinc1
  9338  019718  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9339  01971E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9340  019724  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9341  01972A  EC89  F0F3         	call	___fltol	;wreg free
  9342  01972E  0060  F0A8  F034   	movff	btemp,btemp+10
  9343  019734  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9344  01973A  0060  F0D0  F9F4   	movff	btemp+10,_C+245	;volatile
  9345  019740  0060  F0D4  F9F5   	movff	btemp+11,_C+246	;volatile
  9346                           
  9347                           ;mbmc.c: 238:  C.hist[0].h[7] = C.bv_full_load * 100.0;
  9348  019746  0E00               	movlw	0
  9349  019748  6EE6               	movwf	postinc1,c
  9350  01974A  0E00               	movlw	0
  9351  01974C  6EE6               	movwf	postinc1,c
  9352  01974E  0EC8               	movlw	200
  9353  019750  6EE6               	movwf	postinc1,c
  9354  019752  0E42               	movlw	66
  9355  019754  6EE6               	movwf	postinc1,c
  9356  019756  EE22  F229         	lfsr	2,_C+298	;volatile
  9357  01975A  006F FF7B FFE6     	movff	postinc2,postinc1
  9358  019760  006F FF7B FFE6     	movff	postinc2,postinc1
  9359  019766  006F FF7B FFE6     	movff	postinc2,postinc1
  9360  01976C  006F FF7B FFE6     	movff	postinc2,postinc1
  9361  019772  EC32  F0B3         	call	___flmul	;wreg free
  9362  019776  0060  F0AB  FFE6   	movff	btemp,postinc1
  9363  01977C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9364  019782  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9365  019788  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9366  01978E  EC89  F0F3         	call	___fltol	;wreg free
  9367  019792  0060  F0A8  F034   	movff	btemp,btemp+10
  9368  019798  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9369  01979E  0060  F0D0  F9F2   	movff	btemp+10,_C+243	;volatile
  9370  0197A4  0060  F0D4  F9F3   	movff	btemp+11,_C+244	;volatile
  9371                           
  9372                           ;mbmc.c: 239:  C.hist[0].h[6] = C.dynamic_ah;
  9373  0197AA  EE22  F18F         	lfsr	2,_C+144	;volatile
  9374  0197AE  006F FF7B FFE6     	movff	postinc2,postinc1
  9375  0197B4  006F FF7B FFE6     	movff	postinc2,postinc1
  9376  0197BA  006F FF7B FFE6     	movff	postinc2,postinc1
  9377  0197C0  006F FF7B FFE6     	movff	postinc2,postinc1
  9378  0197C6  EC89  F0F3         	call	___fltol	;wreg free
  9379  0197CA  0060  F0A8  F034   	movff	btemp,btemp+10
  9380  0197D0  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9381  0197D6  0060  F0D0  F9F0   	movff	btemp+10,_C+241	;volatile
  9382  0197DC  0060  F0D4  F9F1   	movff	btemp+11,_C+242	;volatile
  9383                           
  9384                           ;mbmc.c: 240:  C.hist[0].h[5] = C.bkwi;
  9385  0197E2  EE22  F19F         	lfsr	2,_C+160	;volatile
  9386  0197E6  006F FF7B FFE6     	movff	postinc2,postinc1
  9387  0197EC  006F FF7B FFE6     	movff	postinc2,postinc1
  9388  0197F2  006F FF7B FFE6     	movff	postinc2,postinc1
  9389  0197F8  006F FF7B FFE6     	movff	postinc2,postinc1
  9390  0197FE  EC89  F0F3         	call	___fltol	;wreg free
  9391  019802  0060  F0A8  F034   	movff	btemp,btemp+10
  9392  019808  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9393  01980E  0060  F0D0  F9EE   	movff	btemp+10,_C+239	;volatile
  9394  019814  0060  F0D4  F9EF   	movff	btemp+11,_C+240	;volatile
  9395                           
  9396                           ;mbmc.c: 241:  C.hist[0].h[4] = C.bkwo;
  9397  01981A  EE22  F1A3         	lfsr	2,_C+164	;volatile
  9398  01981E  006F FF7B FFE6     	movff	postinc2,postinc1
  9399  019824  006F FF7B FFE6     	movff	postinc2,postinc1
  9400  01982A  006F FF7B FFE6     	movff	postinc2,postinc1
  9401  019830  006F FF7B FFE6     	movff	postinc2,postinc1
  9402  019836  EC89  F0F3         	call	___fltol	;wreg free
  9403  01983A  0060  F0A8  F034   	movff	btemp,btemp+10
  9404  019840  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9405  019846  0060  F0D0  F9EC   	movff	btemp+10,_C+237	;volatile
  9406  01984C  0060  F0D4  F9ED   	movff	btemp+11,_C+238	;volatile
  9407                           
  9408                           ;mbmc.c: 242:  C.hist[0].h[3] = C.pv_ah;
  9409  019852  EE22  F193         	lfsr	2,_C+148	;volatile
  9410  019856  006F FF7B FFE6     	movff	postinc2,postinc1
  9411  01985C  006F FF7B FFE6     	movff	postinc2,postinc1
  9412  019862  006F FF7B FFE6     	movff	postinc2,postinc1
  9413  019868  006F FF7B FFE6     	movff	postinc2,postinc1
  9414  01986E  EC89  F0F3         	call	___fltol	;wreg free
  9415  019872  0060  F0A8  F034   	movff	btemp,btemp+10
  9416  019878  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9417  01987E  0060  F0D0  F9EA   	movff	btemp+10,_C+235	;volatile
  9418  019884  0060  F0D4  F9EB   	movff	btemp+11,_C+236	;volatile
  9419                           
  9420                           ;mbmc.c: 243:  C.hist[0].h[0] = C.dynamic_ah_adj;
  9421  01988A  EE22  F19B         	lfsr	2,_C+156	;volatile
  9422  01988E  006F FF7B FFE6     	movff	postinc2,postinc1
  9423  019894  006F FF7B FFE6     	movff	postinc2,postinc1
  9424  01989A  006F FF7B FFE6     	movff	postinc2,postinc1
  9425  0198A0  006F FF7B FFE6     	movff	postinc2,postinc1
  9426  0198A6  EC89  F0F3         	call	___fltol	;wreg free
  9427  0198AA  0060  F0A8  F034   	movff	btemp,btemp+10
  9428  0198B0  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9429  0198B6  0060  F0D0  F9E4   	movff	btemp+10,_C+229	;volatile
  9430  0198BC  0060  F0D4  F9E5   	movff	btemp+11,_C+230	;volatile
  9431                           
  9432                           ;mbmc.c: 244:  C.hist[0].pclock = time(((void*)0));
  9433  0198C2  0E00               	movlw	0
  9434  0198C4  6EE6               	movwf	postinc1,c
  9435  0198C6  0E00               	movlw	0
  9436  0198C8  6EE6               	movwf	postinc1,c
  9437  0198CA  ECD3  F00C         	call	_time	;wreg free
  9438  0198CE  52E5               	movf	postdec1,f,c
  9439  0198D0  006F FF9C  F041    	movff	indf1,btemp+23
  9440  0198D6  52E5               	movf	postdec1,f,c
  9441  0198D8  006F FF9C  F040    	movff	indf1,btemp+22
  9442  0198DE  52E5               	movf	postdec1,f,c
  9443  0198E0  006F FF9C  F03F    	movff	indf1,btemp+21
  9444  0198E6  52E5               	movf	postdec1,f,c
  9445  0198E8  006F FF9C  F03E    	movff	indf1,btemp+20
  9446  0198EE  52E5               	movf	postdec1,f,c
  9447  0198F0  006F FF9C  F03D    	movff	indf1,btemp+19
  9448  0198F6  52E5               	movf	postdec1,f,c
  9449  0198F8  006F FF9C  F03C    	movff	indf1,btemp+18
  9450  0198FE  52E5               	movf	postdec1,f,c
  9451  019900  006F FF9C  F03B    	movff	indf1,btemp+17
  9452  019906  52E5               	movf	postdec1,f,c
  9453  019908  006F FF9C  F03A    	movff	indf1,btemp+16
  9454  01990E  EE22  F1C8         	lfsr	2,_C+201	;volatile
  9455  019912  0060  F0EB  FFDE   	movff	btemp+16,postinc2
  9456  019918  0060  F0EF  FFDE   	movff	btemp+17,postinc2
  9457  01991E  0060  F0F3  FFDE   	movff	btemp+18,postinc2
  9458  019924  0060  F0F7  FFDE   	movff	btemp+19,postinc2
  9459  01992A  0060  F0FB  FFDE   	movff	btemp+20,postinc2
  9460  019930  0060  F0FF  FFDE   	movff	btemp+21,postinc2
  9461  019936  0060  F103  FFDE   	movff	btemp+22,postinc2
  9462  01993C  0060  F107  FFDE   	movff	btemp+23,postinc2
  9463                           
  9464                           ; BSR set to: 57
  9465                           ;mbmc.c: 245:  C.dynamic_ah = 0.0;
  9466  019942  0E00               	movlw	0
  9467  019944  006F FFA0  F98F    	movff	wreg,_C+144	;volatile
  9468  01994A  0E00               	movlw	0
  9469  01994C  006F FFA0  F990    	movff	wreg,_C+145	;volatile
  9470  019952  0E00               	movlw	0
  9471  019954  006F FFA0  F991    	movff	wreg,_C+146	;volatile
  9472  01995A  0E00               	movlw	0
  9473  01995C  006F FFA0  F992    	movff	wreg,_C+147	;volatile
  9474                           
  9475                           ; BSR set to: 57
  9476                           ;mbmc.c: 246:  C.dynamic_ah_adj = 0.0;
  9477  019962  0E00               	movlw	0
  9478  019964  006F FFA0  F99B    	movff	wreg,_C+156	;volatile
  9479  01996A  0E00               	movlw	0
  9480  01996C  006F FFA0  F99C    	movff	wreg,_C+157	;volatile
  9481  019972  0E00               	movlw	0
  9482  019974  006F FFA0  F99D    	movff	wreg,_C+158	;volatile
  9483  01997A  0E00               	movlw	0
  9484  01997C  006F FFA0  F99E    	movff	wreg,_C+159	;volatile
  9485                           
  9486                           ; BSR set to: 57
  9487                           ;mbmc.c: 247:  C.pvkw = 0.0;
  9488  019982  0E00               	movlw	0
  9489  019984  006F FFA0  F9A7    	movff	wreg,_C+168	;volatile
  9490  01998A  0E00               	movlw	0
  9491  01998C  006F FFA0  F9A8    	movff	wreg,_C+169	;volatile
  9492  019992  0E00               	movlw	0
  9493  019994  006F FFA0  F9A9    	movff	wreg,_C+170	;volatile
  9494  01999A  0E00               	movlw	0
  9495  01999C  006F FFA0  F9AA    	movff	wreg,_C+171	;volatile
  9496                           
  9497                           ; BSR set to: 57
  9498                           ;mbmc.c: 248:  start_bsoc();
  9499  0199A2  ECF1  F013         	call	_start_bsoc	;wreg free
  9500                           
  9501                           ; BSR set to: 57
  9502                           ; _load_hist_data: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9503  0199A6  52E5               	movf	postdec1,f,c
  9504  0199A8  52E5               	movf	postdec1,f,c
  9505  0199AA  0012               	return		;funcret
  9506  0199AC                     __end_of_load_hist_data:
  9507                           	opt callstack 0
  9508                           
  9509 ;; *************** function _init_port_dma *****************
  9510 ;; Defined at:
  9511 ;;		line 104 in file "eadog.c"
  9512 ;; Parameters:    Size  Location     Type
  9513 ;;		None
  9514 ;; Auto vars:     Size  Location     Type
  9515 ;;		None
  9516 ;; Return value:  Size  Location     Type
  9517 ;;                  1  [STACK] void 
  9518 ;; Registers used:
  9519 ;;		wreg, status,2
  9520 ;; Tracked objects:
  9521 ;;		On entry : 0/2
  9522 ;;		On exit  : 3F/3B
  9523 ;;		Unchanged: 0/0
  9524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9529 ;;Total ram usage:        0 bytes
  9530 ;; Hardware stack levels used:    1
  9531 ;; Hardware stack levels required when called:   15
  9532 ;; This function calls:
  9533 ;;		Nothing
  9534 ;; This function is called by:
  9535 ;;		_main
  9536 ;; This function uses a reentrant model
  9537 ;;
  9538                           
  9539                           	psect	text16
  9540  0022F2                     __ptext16:
  9541                           	opt callstack 0
  9542  0022F2                     _init_port_dma:
  9543                           	opt callstack 15
  9544                           
  9545                           ;eadog.c: 106:  DMA2CON1bits.DMODE = 0;
  9546                           
  9547                           ; BSR set to: 57
  9548                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9549                           ;incstack = 0
  9550  0022F2  0E3F               	movlw	-193
  9551  0022F4  013B               	movlb	59	; () banked
  9552  0022F6  17DD               	andwf	221,f,b	;volatile
  9553                           
  9554                           ; BSR set to: 59
  9555                           ;eadog.c: 107:  DMA2CON1bits.DSTP = 0;
  9556  0022F8  9BDD               	bcf	221,5,b	;volatile
  9557                           
  9558                           ;eadog.c: 108:  DMA2CON1bits.SMODE = 1;
  9559  0022FA  51DD               	movf	221,w,b	;volatile
  9560  0022FC  0BF9               	andlw	-7
  9561  0022FE  0902               	iorlw	2
  9562  002300  6FDD               	movwf	221,b	;volatile
  9563                           
  9564                           ;eadog.c: 109:  DMA2CON1bits.SMR = 0;
  9565  002302  0EE7               	movlw	-25
  9566  002304  17DD               	andwf	221,f,b	;volatile
  9567                           
  9568                           ; BSR set to: 59
  9569                           ;eadog.c: 110:  DMA2CON1bits.SSTP = 1;
  9570  002306  81DD               	bsf	221,0,b	;volatile
  9571                           
  9572                           ; BSR set to: 59
  9573                           ;eadog.c: 111:  DMA2CON0bits.SIRQEN = 0;
  9574  002308  9DDC               	bcf	220,6,b	;volatile
  9575                           
  9576                           ;eadog.c: 112:  DMA2DSA = 0x3DEA;
  9577  00230A  0E3D               	movlw	61
  9578  00230C  6FD1               	movwf	209,b	;volatile
  9579  00230E  0EEA               	movlw	234
  9580  002310  6FD0               	movwf	208,b	;volatile
  9581                           
  9582                           ;eadog.c: 113:  DMA2SSA = (uint32_t) port_data;
  9583  002312  0EFF               	movlw	low _port_data
  9584  002314  6FD9               	movwf	217,b	;volatile
  9585  002316  0E06               	movlw	high _port_data
  9586  002318  6FDA               	movwf	218,b	;volatile
  9587  00231A  0E00               	movlw	low (_port_data shr (0+16))
  9588  00231C  6FDB               	movwf	219,b	;volatile
  9589                           
  9590                           ; BSR set to: 59
  9591                           ;eadog.c: 114:  DMA2CON0bits.DGO = 0;
  9592  00231E  9BDC               	bcf	220,5,b	;volatile
  9593                           
  9594                           ; BSR set to: 59
  9595                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  9596  002320  0012               	return		;funcret
  9597  002322                     __end_of_init_port_dma:
  9598                           	opt callstack 0
  9599                           
  9600 ;; *************** function _init_display *****************
  9601 ;; Defined at:
  9602 ;;		line 38 in file "eadog.c"
  9603 ;; Parameters:    Size  Location     Type
  9604 ;;		None
  9605 ;; Auto vars:     Size  Location     Type
  9606 ;;		None
  9607 ;; Return value:  Size  Location     Type
  9608 ;;                  1  [STACK] void 
  9609 ;; Registers used:
  9610 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9611 ;; Tracked objects:
  9612 ;;		On entry : 3F/3B
  9613 ;;		On exit  : 3F/3D
  9614 ;;		Unchanged: 0/0
  9615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9620 ;;Total ram usage:        0 bytes
  9621 ;; Hardware stack levels used:    1
  9622 ;; Hardware stack levels required when called:   17
  9623 ;; This function calls:
  9624 ;;		_ringBufS_init
  9625 ;;		_send_lcd_cmd
  9626 ;;		_send_lcd_cmd_long
  9627 ;;		_send_lcd_data
  9628 ;;		_wdtdelay
  9629 ;; This function is called by:
  9630 ;;		_main
  9631 ;; This function uses a reentrant model
  9632 ;;
  9633                           
  9634                           	psect	text17
  9635  000294                     __ptext17:
  9636                           	opt callstack 0
  9637  000294                     _init_display:
  9638                           	opt callstack 13
  9639                           
  9640                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  9641                           
  9642                           ; BSR set to: 59
  9643                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9644                           ;incstack = 0
  9645  000294  0E43               	movlw	low _ring_buf1
  9646  000296  0100               	movlb	0	; () banked
  9647  000298  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
  9648  00029A  0E05               	movlw	high _ring_buf1
  9649  00029C  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
  9650                           
  9651                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  9652  00029E  0E00               	movlw	low _ring_buf2
  9653  0002A0  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
  9654  0002A2  0E05               	movlw	high _ring_buf2
  9655  0002A4  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
  9656                           
  9657                           ; BSR set to: 0
  9658                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  9659  0002A6  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  9660  0002AC  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  9661  0002B2  EC47  F012         	call	_ringBufS_init	;wreg free
  9662                           
  9663                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  9664  0002B6  0060  F193  FFE6   	movff	_spi_link+4,postinc1
  9665  0002BC  0060  F197  FFE6   	movff	_spi_link+5,postinc1
  9666  0002C2  EC47  F012         	call	_ringBufS_init	;wreg free
  9667                           
  9668                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  9669  0002C6  84BE               	bsf	190,2,c	;volatile
  9670                           
  9671                           ;eadog.c: 47:  SPI1CON0bits.EN = 0;
  9672  0002C8  013D               	movlb	61	; () banked
  9673  0002CA  9F14               	bcf	20,7,b	;volatile
  9674                           
  9675                           ; BSR set to: 61
  9676                           ;eadog.c: 49:  SPI1CON1 = 0x20;
  9677  0002CC  0E20               	movlw	32
  9678  0002CE  6F15               	movwf	21,b	;volatile
  9679                           
  9680                           ; BSR set to: 61
  9681                           ;eadog.c: 51:  SPI1CON2 = 0x03;
  9682  0002D0  0E03               	movlw	3
  9683  0002D2  6F16               	movwf	22,b	;volatile
  9684                           
  9685                           ; BSR set to: 61
  9686                           ;eadog.c: 53:  SPI1BAUD = 0x04;
  9687  0002D4  0E04               	movlw	4
  9688  0002D6  6F19               	movwf	25,b	;volatile
  9689                           
  9690                           ; BSR set to: 61
  9691                           ;eadog.c: 55:  SPI1CLK = 0x02;
  9692  0002D8  0E02               	movlw	2
  9693  0002DA  6F1C               	movwf	28,b	;volatile
  9694                           
  9695                           ; BSR set to: 61
  9696                           ;eadog.c: 57:  SPI1CON0 = 0x83;
  9697  0002DC  0E83               	movlw	131
  9698  0002DE  6F14               	movwf	20,b	;volatile
  9699                           
  9700                           ; BSR set to: 61
  9701                           ;eadog.c: 58:  SPI1CON0bits.EN = 1;
  9702  0002E0  8F14               	bsf	20,7,b	;volatile
  9703                           
  9704                           ; BSR set to: 61
  9705                           ;eadog.c: 60:  wdtdelay(350000);
  9706  0002E2  0E30               	movlw	48
  9707  0002E4  6EE6               	movwf	postinc1,c
  9708  0002E6  0E57               	movlw	87
  9709  0002E8  6EE6               	movwf	postinc1,c
  9710  0002EA  0E05               	movlw	5
  9711  0002EC  6EE6               	movwf	postinc1,c
  9712  0002EE  0E00               	movlw	0
  9713  0002F0  6EE6               	movwf	postinc1,c
  9714  0002F2  EC2F  F00D         	call	_wdtdelay	;wreg free
  9715                           
  9716                           ; BSR set to: 0
  9717                           ;eadog.c: 61:  send_lcd_cmd_long(0x46);
  9718  0002F6  0E46               	movlw	70
  9719  0002F8  6EE6               	movwf	postinc1,c
  9720  0002FA  EC90  F00F         	call	_send_lcd_cmd_long	;wreg free
  9721                           
  9722                           ; BSR set to: 0
  9723                           ;eadog.c: 62:  send_lcd_cmd(0x41);
  9724  0002FE  0E41               	movlw	65
  9725  000300  6EE6               	movwf	postinc1,c
  9726  000302  ECB0  F00F         	call	_send_lcd_cmd	;wreg free
  9727                           
  9728                           ; BSR set to: 0
  9729                           ;eadog.c: 63:  wdtdelay(80);
  9730  000306  0E50               	movlw	80
  9731  000308  6EE6               	movwf	postinc1,c
  9732  00030A  0E00               	movlw	0
  9733  00030C  6EE6               	movwf	postinc1,c
  9734  00030E  0E00               	movlw	0
  9735  000310  6EE6               	movwf	postinc1,c
  9736  000312  0E00               	movlw	0
  9737  000314  6EE6               	movwf	postinc1,c
  9738  000316  EC2F  F00D         	call	_wdtdelay	;wreg free
  9739                           
  9740                           ; BSR set to: 0
  9741                           ;eadog.c: 64:  send_lcd_cmd(0x53);
  9742  00031A  0E53               	movlw	83
  9743  00031C  6EE6               	movwf	postinc1,c
  9744  00031E  ECB0  F00F         	call	_send_lcd_cmd	;wreg free
  9745                           
  9746                           ; BSR set to: 0
  9747                           ;eadog.c: 65:  send_lcd_data(2);
  9748  000322  0E02               	movlw	2
  9749  000324  6EE6               	movwf	postinc1,c
  9750  000326  EC74  F013         	call	_send_lcd_data	;wreg free
  9751                           
  9752                           ; BSR set to: 0
  9753                           ;eadog.c: 66:  wdtdelay(80);
  9754  00032A  0E50               	movlw	80
  9755  00032C  6EE6               	movwf	postinc1,c
  9756  00032E  0E00               	movlw	0
  9757  000330  6EE6               	movwf	postinc1,c
  9758  000332  0E00               	movlw	0
  9759  000334  6EE6               	movwf	postinc1,c
  9760  000336  0E00               	movlw	0
  9761  000338  6EE6               	movwf	postinc1,c
  9762  00033A  EC2F  F00D         	call	_wdtdelay	;wreg free
  9763                           
  9764                           ; BSR set to: 0
  9765                           ;eadog.c: 67:  send_lcd_cmd_long(0x51);
  9766  00033E  0E51               	movlw	81
  9767  000340  6EE6               	movwf	postinc1,c
  9768  000342  EC90  F00F         	call	_send_lcd_cmd_long	;wreg free
  9769                           
  9770                           ; BSR set to: 0
  9771                           ;eadog.c: 68:  SPI1CON0bits.EN = 0;
  9772  000346  013D               	movlb	61	; () banked
  9773  000348  9F14               	bcf	20,7,b	;volatile
  9774                           
  9775                           ; BSR set to: 61
  9776                           ;eadog.c: 69:  SPI1CON2 = 0x02;
  9777  00034A  0E02               	movlw	2
  9778  00034C  6F16               	movwf	22,b	;volatile
  9779                           
  9780                           ; BSR set to: 61
  9781                           ;eadog.c: 70:  SPI1CON0bits.EN = 1;
  9782  00034E  8F14               	bsf	20,7,b	;volatile
  9783                           
  9784                           ; BSR set to: 61
  9785                           ;eadog.c: 89:  SPI1INTFbits.SPI1TXUIF = 0;
  9786  000350  931A               	bcf	26,1,b	;volatile
  9787                           
  9788                           ; BSR set to: 61
  9789                           ;eadog.c: 90:  DMA1CON1bits.DMODE = 0;
  9790  000352  0E3F               	movlw	-193
  9791  000354  013B               	movlb	59	; () banked
  9792  000356  17FD               	andwf	253,f,b	;volatile
  9793                           
  9794                           ; BSR set to: 59
  9795                           ;eadog.c: 91:  DMA1CON1bits.DSTP = 0;
  9796  000358  9BFD               	bcf	253,5,b	;volatile
  9797                           
  9798                           ; BSR set to: 59
  9799                           ;eadog.c: 92:  DMA1CON1bits.SMODE = 1;
  9800  00035A  51FD               	movf	253,w,b	;volatile
  9801  00035C  0BF9               	andlw	-7
  9802  00035E  0902               	iorlw	2
  9803  000360  6FFD               	movwf	253,b	;volatile
  9804                           
  9805                           ; BSR set to: 59
  9806                           ;eadog.c: 93:  DMA1CON1bits.SMR = 0;
  9807  000362  0EE7               	movlw	-25
  9808  000364  17FD               	andwf	253,f,b	;volatile
  9809                           
  9810                           ; BSR set to: 59
  9811                           ;eadog.c: 94:  DMA1CON1bits.SSTP = 1;
  9812  000366  81FD               	bsf	253,0,b	;volatile
  9813                           
  9814                           ; BSR set to: 59
  9815                           ;eadog.c: 95:  DMA1SSA = (uint32_t) & ring_buf1;
  9816  000368  0E43               	movlw	low _ring_buf1
  9817  00036A  6FF9               	movwf	249,b	;volatile
  9818  00036C  0E05               	movlw	high _ring_buf1
  9819  00036E  6FFA               	movwf	250,b	;volatile
  9820  000370  0E00               	movlw	low (_ring_buf1 shr (0+16))
  9821  000372  6FFB               	movwf	251,b	;volatile
  9822                           
  9823                           ; BSR set to: 59
  9824                           ;eadog.c: 96:  DMA1CON0bits.DGO = 0;
  9825  000374  9BFC               	bcf	252,5,b	;volatile
  9826                           
  9827                           ; BSR set to: 59
  9828                           ;eadog.c: 97:  SPI1INTFbits.SPI1TXUIF = 1;
  9829  000376  013D               	movlb	61	; () banked
  9830  000378  831A               	bsf	26,1,b	;volatile
  9831                           
  9832                           ; BSR set to: 61
  9833                           ;eadog.c: 98:  LATEbits.LATE2 = 0;
  9834  00037A  94BE               	bcf	190,2,c	;volatile
  9835                           
  9836                           ; BSR set to: 61
  9837                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  9838  00037C  0012               	return		;funcret
  9839  00037E                     __end_of_init_display:
  9840                           	opt callstack 0
  9841                           
  9842 ;; *************** function _send_lcd_data *****************
  9843 ;; Defined at:
  9844 ;;		line 123 in file "eadog.c"
  9845 ;; Parameters:    Size  Location     Type
  9846 ;;  data            1  [STACK] const unsigned char 
  9847 ;; Auto vars:     Size  Location     Type
  9848 ;;		None
  9849 ;; Return value:  Size  Location     Type
  9850 ;;                  1  [STACK] void 
  9851 ;; Registers used:
  9852 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9853 ;; Tracked objects:
  9854 ;;		On entry : 3F/0
  9855 ;;		On exit  : 3F/0
  9856 ;;		Unchanged: 0/0
  9857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9862 ;;Total ram usage:        0 bytes
  9863 ;; Hardware stack levels used:    1
  9864 ;; Hardware stack levels required when called:   16
  9865 ;; This function calls:
  9866 ;;		_SPI1_Exchange8bit
  9867 ;;		_wdtdelay
  9868 ;; This function is called by:
  9869 ;;		_init_display
  9870 ;; This function uses a reentrant model
  9871 ;;
  9872                           
  9873                           	psect	text18
  9874  0026E8                     __ptext18:
  9875                           	opt callstack 0
  9876  0026E8                     _send_lcd_data:
  9877                           	opt callstack 13
  9878                           
  9879                           ; BSR set to: 61
  9880                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9881                           ;incstack = 0
  9882                           ;eadog.c: 123: static void send_lcd_data(const uint8_t data);eadog.c: 124: {;eadog.c: 12
      +                          5:  do { LATCbits.LATC2 = 0; } while(0);
  9883  0026E8  94BC               	bcf	188,2,c	;volatile
  9884                           
  9885                           ;eadog.c: 126:  SPI1_Exchange8bit(data);
  9886                           ;stkvar	_data @ sp[(0)+-1]
  9887  0026EA  0EFF               	movlw	-1
  9888  0026EC  50E3               	movf	plusw1,w,c
  9889  0026EE  6EE6               	movwf	postinc1,c
  9890  0026F0  EC33  F014         	call	_SPI1_Exchange8bit	;wreg free
  9891                           
  9892                           ; BSR set to: 57
  9893                           ;eadog.c: 127:  wdtdelay(8);
  9894  0026F4  0E08               	movlw	8
  9895  0026F6  6EE6               	movwf	postinc1,c
  9896  0026F8  0E00               	movlw	0
  9897  0026FA  6EE6               	movwf	postinc1,c
  9898  0026FC  0E00               	movlw	0
  9899  0026FE  6EE6               	movwf	postinc1,c
  9900  002700  0E00               	movlw	0
  9901  002702  6EE6               	movwf	postinc1,c
  9902  002704  EC2F  F00D         	call	_wdtdelay	;wreg free
  9903                           
  9904                           ; BSR set to: 0
  9905                           ; _send_lcd_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  9906  002708  52E5               	movf	postdec1,f,c
  9907  00270A  0012               	return		;funcret
  9908  00270C                     __end_of_send_lcd_data:
  9909                           	opt callstack 0
  9910                           
  9911 ;; *************** function _send_lcd_cmd_long *****************
  9912 ;; Defined at:
  9913 ;;		line 139 in file "eadog.c"
  9914 ;; Parameters:    Size  Location     Type
  9915 ;;  cmd             1  [STACK] const unsigned char 
  9916 ;; Auto vars:     Size  Location     Type
  9917 ;;		None
  9918 ;; Return value:  Size  Location     Type
  9919 ;;                  1  [STACK] void 
  9920 ;; Registers used:
  9921 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9922 ;; Tracked objects:
  9923 ;;		On entry : 3F/0
  9924 ;;		On exit  : 3F/0
  9925 ;;		Unchanged: 0/0
  9926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9931 ;;Total ram usage:        0 bytes
  9932 ;; Hardware stack levels used:    1
  9933 ;; Hardware stack levels required when called:   16
  9934 ;; This function calls:
  9935 ;;		_SPI1_Exchange8bit
  9936 ;;		_wdtdelay
  9937 ;; This function is called by:
  9938 ;;		_init_display
  9939 ;; This function uses a reentrant model
  9940 ;;
  9941                           
  9942                           	psect	text19
  9943  001F20                     __ptext19:
  9944                           	opt callstack 0
  9945  001F20                     _send_lcd_cmd_long:
  9946                           	opt callstack 13
  9947                           
  9948                           ; BSR set to: 0
  9949                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9950                           ;incstack = 0
  9951                           ;eadog.c: 139: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 140: {;eadog.c:
      +                           141:  do { LATCbits.LATC2 = 0; } while(0);
  9952  001F20  94BC               	bcf	188,2,c	;volatile
  9953                           
  9954                           ;eadog.c: 142:  SPI1_Exchange8bit(0xFE);
  9955  001F22  0EFE               	movlw	254
  9956  001F24  6EE6               	movwf	postinc1,c
  9957  001F26  EC33  F014         	call	_SPI1_Exchange8bit	;wreg free
  9958                           
  9959                           ; BSR set to: 57
  9960                           ;eadog.c: 143:  wdtdelay(8);
  9961  001F2A  0E08               	movlw	8
  9962  001F2C  6EE6               	movwf	postinc1,c
  9963  001F2E  0E00               	movlw	0
  9964  001F30  6EE6               	movwf	postinc1,c
  9965  001F32  0E00               	movlw	0
  9966  001F34  6EE6               	movwf	postinc1,c
  9967  001F36  0E00               	movlw	0
  9968  001F38  6EE6               	movwf	postinc1,c
  9969  001F3A  EC2F  F00D         	call	_wdtdelay	;wreg free
  9970                           
  9971                           ; BSR set to: 0
  9972                           ;eadog.c: 144:  SPI1_Exchange8bit(cmd);
  9973                           ;stkvar	_cmd @ sp[(0)+-1]
  9974  001F3E  0EFF               	movlw	-1
  9975  001F40  50E3               	movf	plusw1,w,c
  9976  001F42  6EE6               	movwf	postinc1,c
  9977  001F44  EC33  F014         	call	_SPI1_Exchange8bit	;wreg free
  9978                           
  9979                           ;eadog.c: 145:  wdtdelay(800);
  9980  001F48  0E20               	movlw	32
  9981  001F4A  6EE6               	movwf	postinc1,c
  9982  001F4C  0E03               	movlw	3
  9983  001F4E  6EE6               	movwf	postinc1,c
  9984  001F50  0E00               	movlw	0
  9985  001F52  6EE6               	movwf	postinc1,c
  9986  001F54  0E00               	movlw	0
  9987  001F56  6EE6               	movwf	postinc1,c
  9988  001F58  EC2F  F00D         	call	_wdtdelay	;wreg free
  9989                           
  9990                           ; BSR set to: 0
  9991                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  9992  001F5C  52E5               	movf	postdec1,f,c
  9993  001F5E  0012               	return		;funcret
  9994  001F60                     __end_of_send_lcd_cmd_long:
  9995                           	opt callstack 0
  9996                           
  9997 ;; *************** function _send_lcd_cmd *****************
  9998 ;; Defined at:
  9999 ;;		line 130 in file "eadog.c"
 10000 ;; Parameters:    Size  Location     Type
 10001 ;;  cmd             1  [STACK] const unsigned char 
 10002 ;; Auto vars:     Size  Location     Type
 10003 ;;		None
 10004 ;; Return value:  Size  Location     Type
 10005 ;;                  1  [STACK] void 
 10006 ;; Registers used:
 10007 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 10008 ;; Tracked objects:
 10009 ;;		On entry : 3F/0
 10010 ;;		On exit  : 3F/0
 10011 ;;		Unchanged: 0/0
 10012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10017 ;;Total ram usage:        0 bytes
 10018 ;; Hardware stack levels used:    1
 10019 ;; Hardware stack levels required when called:   16
 10020 ;; This function calls:
 10021 ;;		_SPI1_Exchange8bit
 10022 ;;		_wdtdelay
 10023 ;; This function is called by:
 10024 ;;		_init_display
 10025 ;; This function uses a reentrant model
 10026 ;;
 10027                           
 10028                           	psect	text20
 10029  001F60                     __ptext20:
 10030                           	opt callstack 0
 10031  001F60                     _send_lcd_cmd:
 10032                           	opt callstack 13
 10033                           
 10034                           ; BSR set to: 0
 10035                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10036                           ;incstack = 0
 10037                           ;eadog.c: 130: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 131: {;eadog.c: 132:
      +                            do { LATCbits.LATC2 = 0; } while(0);
 10038  001F60  94BC               	bcf	188,2,c	;volatile
 10039                           
 10040                           ;eadog.c: 133:  SPI1_Exchange8bit(0xFE);
 10041  001F62  0EFE               	movlw	254
 10042  001F64  6EE6               	movwf	postinc1,c
 10043  001F66  EC33  F014         	call	_SPI1_Exchange8bit	;wreg free
 10044                           
 10045                           ; BSR set to: 57
 10046                           ;eadog.c: 134:  wdtdelay(8);
 10047  001F6A  0E08               	movlw	8
 10048  001F6C  6EE6               	movwf	postinc1,c
 10049  001F6E  0E00               	movlw	0
 10050  001F70  6EE6               	movwf	postinc1,c
 10051  001F72  0E00               	movlw	0
 10052  001F74  6EE6               	movwf	postinc1,c
 10053  001F76  0E00               	movlw	0
 10054  001F78  6EE6               	movwf	postinc1,c
 10055  001F7A  EC2F  F00D         	call	_wdtdelay	;wreg free
 10056                           
 10057                           ; BSR set to: 0
 10058                           ;eadog.c: 135:  SPI1_Exchange8bit(cmd);
 10059                           ;stkvar	_cmd @ sp[(0)+-1]
 10060  001F7E  0EFF               	movlw	-1
 10061  001F80  50E3               	movf	plusw1,w,c
 10062  001F82  6EE6               	movwf	postinc1,c
 10063  001F84  EC33  F014         	call	_SPI1_Exchange8bit	;wreg free
 10064                           
 10065                           ;eadog.c: 136:  wdtdelay(8);
 10066  001F88  0E08               	movlw	8
 10067  001F8A  6EE6               	movwf	postinc1,c
 10068  001F8C  0E00               	movlw	0
 10069  001F8E  6EE6               	movwf	postinc1,c
 10070  001F90  0E00               	movlw	0
 10071  001F92  6EE6               	movwf	postinc1,c
 10072  001F94  0E00               	movlw	0
 10073  001F96  6EE6               	movwf	postinc1,c
 10074  001F98  EC2F  F00D         	call	_wdtdelay	;wreg free
 10075                           
 10076                           ; BSR set to: 0
 10077                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
 10078  001F9C  52E5               	movf	postdec1,f,c
 10079  001F9E  0012               	return		;funcret
 10080  001FA0                     __end_of_send_lcd_cmd:
 10081                           	opt callstack 0
 10082                           
 10083 ;; *************** function _wdtdelay *****************
 10084 ;; Defined at:
 10085 ;;		line 23 in file "eadog.c"
 10086 ;; Parameters:    Size  Location     Type
 10087 ;;  delay           4  [STACK] const unsigned long 
 10088 ;; Auto vars:     Size  Location     Type
 10089 ;;		None
 10090 ;; Return value:  Size  Location     Type
 10091 ;;                  1  [STACK] void 
 10092 ;; Registers used:
 10093 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 10094 ;; Tracked objects:
 10095 ;;		On entry : 2/3D
 10096 ;;		On exit  : 3F/0
 10097 ;;		Unchanged: 0/0
 10098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10103 ;;Total ram usage:        0 bytes
 10104 ;; Hardware stack levels used:    1
 10105 ;; Hardware stack levels required when called:   15
 10106 ;; This function calls:
 10107 ;;		Nothing
 10108 ;; This function is called by:
 10109 ;;		_init_display
 10110 ;;		_send_lcd_data
 10111 ;;		_send_lcd_cmd
 10112 ;;		_send_lcd_cmd_long
 10113 ;; This function uses a reentrant model
 10114 ;;
 10115                           
 10116                           	psect	text21
 10117  001A5E                     __ptext21:
 10118                           	opt callstack 0
 10119  001A5E                     _wdtdelay:
 10120                           	opt callstack 14
 10121                           
 10122                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 10123                           
 10124                           ; BSR set to: 0
 10125                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10126                           ;incstack = 0
 10127  001A5E  0100               	movlb	0	; () banked
 10128  001A60  6B90               	clrf	wdtdelay@dcount& (0+255),b
 10129  001A62  6B91               	clrf	(wdtdelay@dcount+1)& (0+255),b
 10130  001A64  6B92               	clrf	(wdtdelay@dcount+2)& (0+255),b
 10131  001A66  6B93               	clrf	(wdtdelay@dcount+3)& (0+255),b
 10132  001A68                     l1618:
 10133                           
 10134                           ; BSR set to: 0
 10135                           ;eadog.c: 28:   __nop();
 10136  001A68  F000               	nop	
 10137  001A6A  0004               	clrwdt		;# 
 10138                           
 10139                           ;eadog.c: 30:  };
 10140  001A6C  0E01               	movlw	1
 10141  001A6E  0100               	movlb	0	; () banked
 10142  001A70  2790               	addwf	wdtdelay@dcount& (0+255),f,b
 10143  001A72  0E00               	movlw	0
 10144  001A74  2391               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 10145  001A76  2392               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 10146  001A78  2393               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 10147                           
 10148                           ; BSR set to: 0
 10149                           ;stkvar	_delay @ sp[(0)+-4]
 10150  001A7A  0EFC               	movlw	-4
 10151  001A7C  006F FF8C  F02A    	movff	plusw1,btemp
 10152  001A82  5190               	movf	wdtdelay@dcount& (0+255),w,b
 10153  001A84  5C2A               	subwf	btemp^0,w,c
 10154  001A86  0EFD               	movlw	-3
 10155  001A88  006F FF8C  F02A    	movff	plusw1,btemp
 10156  001A8E  5191               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 10157  001A90  582A               	subwfb	btemp^0,w,c
 10158  001A92  0EFE               	movlw	-2
 10159  001A94  006F FF8C  F02A    	movff	plusw1,btemp
 10160  001A9A  5192               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 10161  001A9C  582A               	subwfb	btemp^0,w,c
 10162  001A9E  0EFF               	movlw	-1
 10163  001AA0  006F FF8C  F02A    	movff	plusw1,btemp
 10164  001AA6  5193               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 10165  001AA8  582A               	subwfb	btemp^0,w,c
 10166  001AAA  B0D8               	btfsc	status,0,c
 10167  001AAC  D7DD               	goto	l1618
 10168                           
 10169                           ; BSR set to: 0
 10170                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 10171  001AAE  52E5               	movf	postdec1,f,c
 10172  001AB0  52E5               	movf	postdec1,f,c
 10173  001AB2  52E5               	movf	postdec1,f,c
 10174  001AB4  52E5               	movf	postdec1,f,c
 10175  001AB6  0012               	return		;funcret
 10176  001AB8                     __end_of_wdtdelay:
 10177                           	opt callstack 0
 10178                           
 10179 ;; *************** function _SPI1_Exchange8bit *****************
 10180 ;; Defined at:
 10181 ;;		line 79 in file "mcc_generated_files/spi1.c"
 10182 ;; Parameters:    Size  Location     Type
 10183 ;;  data            1  [STACK] unsigned char 
 10184 ;; Auto vars:     Size  Location     Type
 10185 ;;		None
 10186 ;; Return value:  Size  Location     Type
 10187 ;;                  1  [STACK] unsigned char 
 10188 ;; Registers used:
 10189 ;;		wreg, fsr1l, fsr1h, status,2, btemp
 10190 ;; Tracked objects:
 10191 ;;		On entry : 0/1
 10192 ;;		On exit  : 3F/39
 10193 ;;		Unchanged: 0/0
 10194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10199 ;;Total ram usage:        0 bytes
 10200 ;; Hardware stack levels used:    1
 10201 ;; Hardware stack levels required when called:   15
 10202 ;; This function calls:
 10203 ;;		Nothing
 10204 ;; This function is called by:
 10205 ;;		_send_lcd_data
 10206 ;;		_send_lcd_cmd
 10207 ;;		_send_lcd_cmd_long
 10208 ;;		_set_dac
 10209 ;; This function uses a reentrant model
 10210 ;;
 10211                           
 10212                           	psect	text22
 10213  002866                     __ptext22:
 10214                           	opt callstack 0
 10215  002866                     _SPI1_Exchange8bit:
 10216                           	opt callstack 14
 10217                           
 10218                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
 10219                           
 10220                           ; BSR set to: 0
 10221                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10222                           ;incstack = 0
 10223  002866  0E01               	movlw	1
 10224  002868  013D               	movlb	61	; () banked
 10225  00286A  6F12               	movwf	18,b	;volatile
 10226                           
 10227                           ; BSR set to: 61
 10228                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
 10229                           ;stkvar	_data @ sp[(0)+-1]
 10230  00286C  0EFF               	movlw	-1
 10231  00286E  006F FF8F FD11     	movff	plusw1,15633	;volatile
 10232  002874                     l809:
 10233                           
 10234                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
 10235  002874  0139               	movlb	57	; () banked
 10236  002876  A9A2               	btfss	162,4,b	;volatile
 10237  002878  D7FD               	goto	l809
 10238                           
 10239                           ; BSR set to: 57
 10240                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
 10241  00287A  006F F440  F02A    	movff	15632,btemp	;volatile
 10242                           
 10243                           ; BSR set to: 57
 10244                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 10245  002880  52E5               	movf	postdec1,f,c
 10246  002882  0012               	return		;funcret
 10247  002884                     __end_of_SPI1_Exchange8bit:
 10248                           	opt callstack 0
 10249                           
 10250 ;; *************** function _ringBufS_init *****************
 10251 ;; Defined at:
 10252 ;;		line 22 in file "ringbufs.c"
 10253 ;; Parameters:    Size  Location     Type
 10254 ;;  _this           2  [STACK] PTR volatile struct ring
 10255 ;;		 -> ring_buf2(67), ring_buf1(67), 
 10256 ;; Auto vars:     Size  Location     Type
 10257 ;;		None
 10258 ;; Return value:  Size  Location     Type
 10259 ;;                  1  [STACK] void 
 10260 ;; Registers used:
 10261 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10262 ;; Tracked objects:
 10263 ;;		On entry : 0/0
 10264 ;;		On exit  : 0/0
 10265 ;;		Unchanged: 0/0
 10266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10271 ;;Total ram usage:        0 bytes
 10272 ;; Hardware stack levels used:    1
 10273 ;; Hardware stack levels required when called:   16
 10274 ;; This function calls:
 10275 ;;		_memset
 10276 ;; This function is called by:
 10277 ;;		_init_display
 10278 ;; This function uses a reentrant model
 10279 ;;
 10280                           
 10281                           	psect	text23
 10282  00248E                     __ptext23:
 10283                           	opt callstack 0
 10284  00248E                     _ringBufS_init:
 10285                           	opt callstack 13
 10286                           
 10287                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
 10288                           
 10289                           ; BSR set to: 57
 10290                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10291                           ;incstack = 0
 10292  00248E  0E43               	movlw	67
 10293  002490  6EE6               	movwf	postinc1,c
 10294  002492  0E00               	movlw	0
 10295  002494  6EE6               	movwf	postinc1,c
 10296  002496  0E00               	movlw	0
 10297  002498  6EE6               	movwf	postinc1,c
 10298  00249A  0E00               	movlw	0
 10299  00249C  6EE6               	movwf	postinc1,c
 10300                           
 10301                           ;stkvar	__this @ sp[(-4)+-2]
 10302  00249E  0EFA               	movlw	-6
 10303  0024A0  006F FF8F FFE6     	movff	plusw1,postinc1
 10304  0024A6  006F FF8F FFE6     	movff	plusw1,postinc1
 10305  0024AC  EC0E  F0D9         	call	_memset	;wreg free
 10306                           
 10307                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 10308  0024B0  52E5               	movf	postdec1,f,c
 10309  0024B2  52E5               	movf	postdec1,f,c
 10310  0024B4  0012               	return		;funcret
 10311  0024B6                     __end_of_ringBufS_init:
 10312                           	opt callstack 0
 10313                           
 10314 ;; *************** function _init_bsoc *****************
 10315 ;; Defined at:
 10316 ;;		line 110 in file "bsoc.c"
 10317 ;; Parameters:    Size  Location     Type
 10318 ;;		None
 10319 ;; Auto vars:     Size  Location     Type
 10320 ;;		None
 10321 ;; Return value:  Size  Location     Type
 10322 ;;                  1  [STACK] void 
 10323 ;; Registers used:
 10324 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 10325 ;; Tracked objects:
 10326 ;;		On entry : 0/1
 10327 ;;		On exit  : 0/0
 10328 ;;		Unchanged: 0/0
 10329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10334 ;;Total ram usage:        0 bytes
 10335 ;; Hardware stack levels used:    1
 10336 ;; Hardware stack levels required when called:   18
 10337 ;; This function calls:
 10338 ;;		_TMR3_SetInterruptHandler
 10339 ;;		_Volts_to_SOC
 10340 ;;		___fldiv
 10341 ;;		___flmul
 10342 ;;		___fltol
 10343 ;;		___xxtofl
 10344 ;;		_conv_raw_result
 10345 ;; This function is called by:
 10346 ;;		_main
 10347 ;; This function uses a reentrant model
 10348 ;;
 10349                           
 10350                           	psect	text24
 10351  01C76C                     __ptext24:
 10352                           	opt callstack 0
 10353  01C76C                     _init_bsoc:
 10354                           	opt callstack 12
 10355                           
 10356                           ;bsoc.c: 115:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
 10357                           
 10358                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10359                           ;incstack = 0
 10360  01C76C  0E00               	movlw	0
 10361  01C76E  6EE6               	movwf	postinc1,c
 10362  01C770  0E00               	movlw	0
 10363  01C772  6EE6               	movwf	postinc1,c
 10364  01C774  0E7A               	movlw	122
 10365  01C776  6EE6               	movwf	postinc1,c
 10366  01C778  0E44               	movlw	68
 10367  01C77A  6EE6               	movwf	postinc1,c
 10368  01C77C  0E00               	movlw	0
 10369  01C77E  6EE6               	movwf	postinc1,c
 10370  01C780  0E04               	movlw	4
 10371  01C782  6EE6               	movwf	postinc1,c
 10372  01C784  ECCB  F0C3         	call	_conv_raw_result	;wreg free
 10373  01C788  0060  F0AB  FFE6   	movff	btemp,postinc1
 10374  01C78E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10375  01C794  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10376  01C79A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10377  01C7A0  EC89  F0F3         	call	___fltol	;wreg free
 10378  01C7A4  0060  F0AB  FFE6   	movff	btemp,postinc1
 10379  01C7AA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10380  01C7B0  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10381  01C7B6  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10382  01C7BC  0E00               	movlw	0
 10383  01C7BE  6EE6               	movwf	postinc1,c
 10384  01C7C0  EC5A  F0EB         	call	___xxtofl	;wreg free
 10385  01C7C4  0060  F0AB  FFE6   	movff	btemp,postinc1
 10386  01C7CA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10387  01C7D0  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10388  01C7D6  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10389  01C7DC  EC32  F0B3         	call	___flmul	;wreg free
 10390  01C7E0  0060  F0AB  FFE6   	movff	btemp,postinc1
 10391  01C7E6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10392  01C7EC  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10393  01C7F2  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10394  01C7F8  EC89  F0F3         	call	___fltol	;wreg free
 10395  01C7FC  0060  F0AB  FFE6   	movff	btemp,postinc1
 10396  01C802  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10397  01C808  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10398  01C80E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10399  01C814  EC59  F003         	call	_Volts_to_SOC	;wreg free
 10400  01C818  0060  F0A8  F9B5   	movff	btemp,_C+182	;volatile
 10401  01C81E  0060  F0AC  F9B6   	movff	btemp+1,_C+183	;volatile
 10402                           
 10403                           ;bsoc.c: 116:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
 10404  01C824  EE22  F18B         	lfsr	2,_C+140	;volatile
 10405  01C828  006F FF7B FFE6     	movff	postinc2,postinc1
 10406  01C82E  006F FF7B FFE6     	movff	postinc2,postinc1
 10407  01C834  006F FF7B FFE6     	movff	postinc2,postinc1
 10408  01C83A  006F FF7B FFE6     	movff	postinc2,postinc1
 10409  01C840  0E00               	movlw	0
 10410  01C842  6EE6               	movwf	postinc1,c
 10411  01C844  0E00               	movlw	0
 10412  01C846  6EE6               	movwf	postinc1,c
 10413  01C848  0EC8               	movlw	200
 10414  01C84A  6EE6               	movwf	postinc1,c
 10415  01C84C  0E42               	movlw	66
 10416  01C84E  6EE6               	movwf	postinc1,c
 10417  01C850  0E00               	movlw	0
 10418  01C852  6EE6               	movwf	postinc1,c
 10419  01C854  0E00               	movlw	0
 10420  01C856  6EE6               	movwf	postinc1,c
 10421  01C858  0E7A               	movlw	122
 10422  01C85A  6EE6               	movwf	postinc1,c
 10423  01C85C  0E44               	movlw	68
 10424  01C85E  6EE6               	movwf	postinc1,c
 10425  01C860  0E00               	movlw	0
 10426  01C862  6EE6               	movwf	postinc1,c
 10427  01C864  0E04               	movlw	4
 10428  01C866  6EE6               	movwf	postinc1,c
 10429  01C868  ECCB  F0C3         	call	_conv_raw_result	;wreg free
 10430  01C86C  0060  F0AB  FFE6   	movff	btemp,postinc1
 10431  01C872  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10432  01C878  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10433  01C87E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10434  01C884  EC89  F0F3         	call	___fltol	;wreg free
 10435  01C888  0060  F0AB  FFE6   	movff	btemp,postinc1
 10436  01C88E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10437  01C894  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10438  01C89A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10439  01C8A0  0E00               	movlw	0
 10440  01C8A2  6EE6               	movwf	postinc1,c
 10441  01C8A4  EC5A  F0EB         	call	___xxtofl	;wreg free
 10442  01C8A8  0060  F0AB  FFE6   	movff	btemp,postinc1
 10443  01C8AE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10444  01C8B4  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10445  01C8BA  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10446  01C8C0  EC32  F0B3         	call	___flmul	;wreg free
 10447  01C8C4  0060  F0AB  FFE6   	movff	btemp,postinc1
 10448  01C8CA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10449  01C8D0  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10450  01C8D6  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10451  01C8DC  EC89  F0F3         	call	___fltol	;wreg free
 10452  01C8E0  0060  F0AB  FFE6   	movff	btemp,postinc1
 10453  01C8E6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10454  01C8EC  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10455  01C8F2  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10456  01C8F8  EC59  F003         	call	_Volts_to_SOC	;wreg free
 10457  01C8FC  0060  F0A8  F034   	movff	btemp,btemp+10
 10458  01C902  0060  F0AC  F035   	movff	btemp+1,btemp+11
 10459  01C908  5034               	movf	(btemp+10)^0,w,c
 10460  01C90A  6E2E               	movwf	(btemp+4)^0,c
 10461  01C90C  5035               	movf	(btemp+11)^0,w,c
 10462  01C90E  6E2F               	movwf	(btemp+5)^0,c
 10463  01C910  6A30               	clrf	(btemp+6)^0,c
 10464  01C912  6A31               	clrf	(btemp+7)^0,c
 10465  01C914  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 10466  01C91A  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 10467  01C920  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 10468  01C926  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 10469  01C92C  0E00               	movlw	0
 10470  01C92E  6EE6               	movwf	postinc1,c
 10471  01C930  EC5A  F0EB         	call	___xxtofl	;wreg free
 10472  01C934  0060  F0AB  FFE6   	movff	btemp,postinc1
 10473  01C93A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10474  01C940  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10475  01C946  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10476  01C94C  EC83  F0BE         	call	___fldiv	;wreg free
 10477  01C950  0060  F0AB  FFE6   	movff	btemp,postinc1
 10478  01C956  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10479  01C95C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10480  01C962  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10481  01C968  EC32  F0B3         	call	___flmul	;wreg free
 10482  01C96C  0060  F0A8  F98F   	movff	btemp,_C+144	;volatile
 10483  01C972  0060  F0AC  F990   	movff	btemp+1,_C+145	;volatile
 10484  01C978  0060  F0B0  F991   	movff	btemp+2,_C+146	;volatile
 10485  01C97E  0060  F0B4  F992   	movff	btemp+3,_C+147	;volatile
 10486                           
 10487                           ;bsoc.c: 117:  C.dynamic_ah_adj = C.dynamic_ah;
 10488  01C984  EE22  F18F         	lfsr	2,_C+144	;volatile
 10489  01C988  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
 10490  01C98E  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
 10491  01C994  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
 10492  01C99A  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
 10493                           
 10494                           ;bsoc.c: 118:  TMR3_SetInterruptHandler(calc_bsoc);
 10495  01C9A0  0EE2               	movlw	low _calc_bsoc
 10496  01C9A2  6EE6               	movwf	postinc1,c
 10497  01C9A4  0E49               	movlw	high _calc_bsoc
 10498  01C9A6  6EE6               	movwf	postinc1,c
 10499  01C9A8  0E01               	movlw	low (_calc_bsoc shr (0+16))
 10500  01C9AA  6EE6               	movwf	postinc1,c
 10501  01C9AC  ECD3  F012         	call	_TMR3_SetInterruptHandler	;wreg free
 10502                           
 10503                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 10504  01C9B0  0012               	return		;funcret
 10505  01C9B2                     __end_of_init_bsoc:
 10506                           	opt callstack 0
 10507                           
 10508 ;; *************** function _Volts_to_SOC *****************
 10509 ;; Defined at:
 10510 ;;		line 175 in file "bsoc.c"
 10511 ;; Parameters:    Size  Location     Type
 10512 ;;  cvoltage        4  [STACK] const unsigned long 
 10513 ;; Auto vars:     Size  Location     Type
 10514 ;;  soc             2  [STACK] unsigned short 
 10515 ;;  slot            1  [STACK] unsigned char 
 10516 ;; Return value:  Size  Location     Type
 10517 ;;                  2  [STACK] unsigned short 
 10518 ;; Registers used:
 10519 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 10520 ;; Tracked objects:
 10521 ;;		On entry : 0/1
 10522 ;;		On exit  : 0/0
 10523 ;;		Unchanged: 0/0
 10524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10529 ;;Total ram usage:        0 bytes
 10530 ;; Hardware stack levels used:    1
 10531 ;; Hardware stack levels required when called:   15
 10532 ;; This function calls:
 10533 ;;		Nothing
 10534 ;; This function is called by:
 10535 ;;		_init_bsoc
 10536 ;; This function uses a reentrant model
 10537 ;;
 10538                           
 10539                           	psect	text25
 10540  0006B2                     __ptext25:
 10541                           	opt callstack 0
 10542  0006B2                     _Volts_to_SOC:
 10543                           	opt callstack 0
 10544                           
 10545                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10546  0006B2  52E6               	movf	postinc1,f,c
 10547  0006B4  52E6               	movf	postinc1,f,c
 10548  0006B6  52E6               	movf	postinc1,f,c
 10549                           
 10550                           ;bsoc.c: 175: uint16_t Volts_to_SOC(const uint32_t cvoltage);bsoc.c: 176: {;bsoc.c: 177:
      +                            uint8_t slot;;bsoc.c: 178:  uint16_t soc = 0;
 10551                           ;stkvar	_soc @ sp[(-3)+0]
 10552                           
 10553                           ;incstack = 0
 10554  0006B8  0EFD               	movlw	-3
 10555  0006BA  6AE3               	clrf	plusw1,c
 10556  0006BC  0EFE               	movlw	-2
 10557  0006BE  6AE3               	clrf	plusw1,c
 10558                           
 10559                           ;bsoc.c: 183:  for (slot = 0; slot < 26; slot++) {
 10560                           ;stkvar	_slot @ sp[(-3)+2]
 10561  0006C0  0EFF               	movlw	-1
 10562  0006C2  6AE3               	clrf	plusw1,c
 10563  0006C4                     l13874:
 10564                           
 10565                           ;bsoc.c: 184:   if (cvoltage > BVSOC_TABLE[slot][0]) {
 10566                           ;stkvar	_cvoltage @ sp[(-3)+-4]
 10567                           ;stkvar	_slot @ sp[(-3)+2]
 10568  0006C4  0EFF               	movlw	-1
 10569  0006C6  50E3               	movf	plusw1,w,c
 10570  0006C8  0D08               	mullw	8
 10571  0006CA  0EAB               	movlw	low _BVSOC_TABLE
 10572  0006CC  24F3               	addwf	243,w,c
 10573  0006CE  6EF6               	movwf	tblptrl,c
 10574  0006D0  0EF7               	movlw	high _BVSOC_TABLE
 10575  0006D2  20F4               	addwfc	244,w,c
 10576  0006D4  6EF7               	movwf	tblptrh,c
 10577  0006D6                     	if	1	;There are 3 active tblptr bytes
 10578  0006D6  6AF8               	clrf	tblptru,c
 10579  0006D8  0E00               	movlw	low (__mediumconst shr (0+16))
 10580  0006DA  22F8               	addwfc	tblptru,f,c
 10581  0006DC                     	endif
 10582  0006DC  0EF9               	movlw	-7
 10583  0006DE  50E3               	movf	plusw1,w,c
 10584  0006E0  0009               	tblrd		*+
 10585  0006E2  5CF5               	subwf	tablat,w,c
 10586  0006E4  0EFA               	movlw	-6
 10587  0006E6  50E3               	movf	plusw1,w,c
 10588  0006E8  0009               	tblrd		*+
 10589  0006EA  58F5               	subwfb	tablat,w,c
 10590  0006EC  0EFB               	movlw	-5
 10591  0006EE  50E3               	movf	plusw1,w,c
 10592  0006F0  0009               	tblrd		*+
 10593  0006F2  58F5               	subwfb	tablat,w,c
 10594  0006F4  0EFC               	movlw	-4
 10595  0006F6  50E3               	movf	plusw1,w,c
 10596  0006F8  0009               	tblrd		*+
 10597  0006FA  58F5               	subwfb	tablat,w,c
 10598  0006FC  B0D8               	btfsc	status,0,c
 10599  0006FE  D020               	goto	l13878
 10600                           
 10601                           ;bsoc.c: 185:    soc = BVSOC_TABLE[slot][1];
 10602                           ;stkvar	_slot @ sp[(-3)+2]
 10603  000700  0EFF               	movlw	-1
 10604  000702  50E3               	movf	plusw1,w,c
 10605  000704  0D08               	mullw	8
 10606  000706  0E04               	movlw	4
 10607  000708  26F3               	addwf	243,f,c
 10608  00070A  0E00               	movlw	0
 10609  00070C  22F4               	addwfc	244,f,c
 10610  00070E  0EAB               	movlw	low _BVSOC_TABLE
 10611  000710  24F3               	addwf	243,w,c
 10612  000712  6EF6               	movwf	tblptrl,c
 10613  000714  0EF7               	movlw	high _BVSOC_TABLE
 10614  000716  20F4               	addwfc	244,w,c
 10615  000718  6EF7               	movwf	tblptrh,c
 10616  00071A                     	if	1	;There are 3 active tblptr bytes
 10617  00071A  6AF8               	clrf	tblptru,c
 10618  00071C  0E00               	movlw	low (__mediumconst shr (0+16))
 10619  00071E  22F8               	addwfc	tblptru,f,c
 10620  000720                     	endif
 10621  000720  0009               	tblrd		*+
 10622  000722  006F FFD4  F034    	movff	tablat,btemp+10
 10623  000728  0009               	tblrd		*+
 10624  00072A  006F FFD4  F035    	movff	tablat,btemp+11
 10625                           
 10626                           ;stkvar	_soc @ sp[(-3)+0]
 10627  000730  0EFD               	movlw	-3
 10628  000732  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 10629  000738  0EFE               	movlw	-2
 10630  00073A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 10631  000740                     l13878:
 10632                           
 10633                           ;bsoc.c: 187:  }
 10634                           ;stkvar	_slot @ sp[(-3)+2]
 10635  000740  0EFF               	movlw	-1
 10636  000742  2AE3               	incf	plusw1,f,c
 10637                           
 10638                           ;stkvar	_slot @ sp[(-3)+2]
 10639  000744  0EFF               	movlw	-1
 10640  000746  006F FF8C  F02A    	movff	plusw1,btemp
 10641  00074C  0E19               	movlw	25
 10642  00074E  642A               	cpfsgt	btemp^0,c
 10643  000750  D7B9               	goto	l13874
 10644                           
 10645                           ;bsoc.c: 188:  return soc;
 10646                           ;stkvar	_soc @ sp[(-3)+0]
 10647  000752  0EFD               	movlw	-3
 10648  000754  006F FF8C  F02A    	movff	plusw1,btemp
 10649  00075A  0EFE               	movlw	-2
 10650  00075C  006F FF8C  F02B    	movff	plusw1,btemp+1
 10651                           
 10652                           ; _Volts_to_SOC: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
 10653  000762  0EF9               	movlw	249
 10654  000764  26E1               	addwf	fsr1l,f,c
 10655  000766  0EFF               	movlw	255
 10656  000768  22E2               	addwfc	fsr1h,f,c
 10657  00076A  0012               	return		;funcret
 10658  00076C                     __end_of_Volts_to_SOC:
 10659                           	opt callstack 0
 10660                           
 10661 ;; *************** function _hid_display *****************
 10662 ;; Defined at:
 10663 ;;		line 22 in file "hid.c"
 10664 ;; Parameters:    Size  Location     Type
 10665 ;;  h               2  [STACK] PTR struct H_data
 10666 ;;		 -> H(9), 
 10667 ;; Auto vars:     Size  Location     Type
 10668 ;;		None
 10669 ;; Return value:  Size  Location     Type
 10670 ;;                  2  [STACK] PTR struct H_data
 10671 ;; Registers used:
 10672 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
 10673 ;; Tracked objects:
 10674 ;;		On entry : 0/39
 10675 ;;		On exit  : 0/0
 10676 ;;		Unchanged: 0/0
 10677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10682 ;;Total ram usage:        0 bytes
 10683 ;; Hardware stack levels used:    1
 10684 ;; Hardware stack levels required when called:   17
 10685 ;; This function calls:
 10686 ;;		_hid_input
 10687 ;; This function is called by:
 10688 ;;		_main
 10689 ;; This function uses a reentrant model
 10690 ;;
 10691                           
 10692                           	psect	text26
 10693  01D286                     __ptext26:
 10694                           	opt callstack 0
 10695  01D286                     _hid_display:
 10696                           	opt callstack 13
 10697                           
 10698                           ;hid.c: 22: H_data* hid_display(H_data* h);hid.c: 23: {;hid.c: 24:  hid_input(h);
 10699                           ;stkvar	_h @ sp[(0)+-2]
 10700                           
 10701                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10702                           ;incstack = 0
 10703  01D286  0EFE               	movlw	-2
 10704  01D288  006F FF8F FFE6     	movff	plusw1,postinc1
 10705  01D28E  006F FF8F FFE6     	movff	plusw1,postinc1
 10706  01D294  EC48  F0FA         	call	_hid_input	;wreg free
 10707                           
 10708                           ;hid.c: 26:  switch (h->h_state) {
 10709  01D298  D0E6               	goto	l17320
 10710  01D29A                     l17294:
 10711                           
 10712                           ;hid.c: 28:   h->h_state = H_STATE_DISPLAY;
 10713                           ;stkvar	_h @ sp[(0)+-2]
 10714  01D29A  0EFE               	movlw	-2
 10715  01D29C  006F FF8C  F034    	movff	plusw1,btemp+10
 10716  01D2A2  0EFF               	movlw	-1
 10717  01D2A4  006F FF8C  F035    	movff	plusw1,btemp+11
 10718  01D2AA  0E01               	movlw	1
 10719  01D2AC  2434               	addwf	(btemp+10)^0,w,c
 10720  01D2AE  6ED9               	movwf	fsr2l,c
 10721  01D2B0  0E00               	movlw	0
 10722  01D2B2  2035               	addwfc	(btemp+11)^0,w,c
 10723  01D2B4  6EDA               	movwf	fsr2h,c
 10724  01D2B6  0E01               	movlw	1
 10725  01D2B8  6EDF               	movwf	indf2,c
 10726                           
 10727                           ;hid.c: 29:   h->hid_display = HID_MAIN;
 10728                           ;stkvar	_h @ sp[(0)+-2]
 10729  01D2BA  0EFE               	movlw	-2
 10730  01D2BC  006F FF8F FFD9     	movff	plusw1,fsr2l
 10731  01D2C2  0EFF               	movlw	-1
 10732  01D2C4  006F FF8F FFDA     	movff	plusw1,fsr2h
 10733  01D2CA  0E00               	movlw	0
 10734  01D2CC  6EDF               	movwf	indf2,c
 10735                           
 10736                           ;hid.c: 30:   h->wait_enter = 1;
 10737                           ;stkvar	_h @ sp[(0)+-2]
 10738  01D2CE  0EFE               	movlw	-2
 10739  01D2D0  006F FF8C  F034    	movff	plusw1,btemp+10
 10740  01D2D6  0EFF               	movlw	-1
 10741  01D2D8  006F FF8C  F035    	movff	plusw1,btemp+11
 10742  01D2DE  0E04               	movlw	4
 10743  01D2E0  2434               	addwf	(btemp+10)^0,w,c
 10744  01D2E2  6ED9               	movwf	fsr2l,c
 10745  01D2E4  0E00               	movlw	0
 10746  01D2E6  2035               	addwfc	(btemp+11)^0,w,c
 10747  01D2E8  6EDA               	movwf	fsr2h,c
 10748  01D2EA  0E01               	movlw	1
 10749  01D2EC  6EDF               	movwf	indf2,c
 10750                           
 10751                           ;hid.c: 31:   h->wait_select = 1;
 10752                           ;stkvar	_h @ sp[(0)+-2]
 10753  01D2EE  0EFE               	movlw	-2
 10754  01D2F0  006F FF8C  F034    	movff	plusw1,btemp+10
 10755  01D2F6  0EFF               	movlw	-1
 10756  01D2F8  006F FF8C  F035    	movff	plusw1,btemp+11
 10757  01D2FE  0E02               	movlw	2
 10758  01D300  2434               	addwf	(btemp+10)^0,w,c
 10759  01D302  6ED9               	movwf	fsr2l,c
 10760  01D304  0E00               	movlw	0
 10761  01D306  2035               	addwfc	(btemp+11)^0,w,c
 10762  01D308  6EDA               	movwf	fsr2h,c
 10763  01D30A  0E01               	movlw	1
 10764  01D30C  6EDF               	movwf	indf2,c
 10765                           
 10766                           ;hid.c: 32:   h->wait_calib = 1;
 10767                           ;stkvar	_h @ sp[(0)+-2]
 10768  01D30E  0EFE               	movlw	-2
 10769  01D310  006F FF8C  F034    	movff	plusw1,btemp+10
 10770  01D316  0EFF               	movlw	-1
 10771  01D318  006F FF8C  F035    	movff	plusw1,btemp+11
 10772  01D31E  0E06               	movlw	6
 10773  01D320  2434               	addwf	(btemp+10)^0,w,c
 10774  01D322  6ED9               	movwf	fsr2l,c
 10775  01D324  0E00               	movlw	0
 10776  01D326  2035               	addwfc	(btemp+11)^0,w,c
 10777  01D328  6EDA               	movwf	fsr2h,c
 10778  01D32A  0E01               	movlw	1
 10779  01D32C  6EDF               	movwf	indf2,c
 10780                           
 10781                           ;hid.c: 33:   h->select_p = SW_OFF;
 10782                           ;stkvar	_h @ sp[(0)+-2]
 10783  01D32E  0EFE               	movlw	-2
 10784  01D330  006F FF8C  F034    	movff	plusw1,btemp+10
 10785  01D336  0EFF               	movlw	-1
 10786  01D338  006F FF8C  F035    	movff	plusw1,btemp+11
 10787  01D33E  0E03               	movlw	3
 10788  01D340  2434               	addwf	(btemp+10)^0,w,c
 10789  01D342  6ED9               	movwf	fsr2l,c
 10790  01D344  0E00               	movlw	0
 10791  01D346  2035               	addwfc	(btemp+11)^0,w,c
 10792  01D348  6EDA               	movwf	fsr2h,c
 10793  01D34A  0E00               	movlw	0
 10794  01D34C  6EDF               	movwf	indf2,c
 10795                           
 10796                           ;hid.c: 34:   h->enter_p = SW_OFF;
 10797                           ;stkvar	_h @ sp[(0)+-2]
 10798  01D34E  0EFE               	movlw	-2
 10799  01D350  006F FF8C  F034    	movff	plusw1,btemp+10
 10800  01D356  0EFF               	movlw	-1
 10801  01D358  006F FF8C  F035    	movff	plusw1,btemp+11
 10802  01D35E  0E05               	movlw	5
 10803  01D360  2434               	addwf	(btemp+10)^0,w,c
 10804  01D362  6ED9               	movwf	fsr2l,c
 10805  01D364  0E00               	movlw	0
 10806  01D366  2035               	addwfc	(btemp+11)^0,w,c
 10807  01D368  6EDA               	movwf	fsr2h,c
 10808  01D36A  0E00               	movlw	0
 10809  01D36C  6EDF               	movwf	indf2,c
 10810                           
 10811                           ;hid.c: 35:   h->calib_p = SW_OFF;
 10812                           ;stkvar	_h @ sp[(0)+-2]
 10813  01D36E  0EFE               	movlw	-2
 10814  01D370  006F FF8C  F034    	movff	plusw1,btemp+10
 10815  01D376  0EFF               	movlw	-1
 10816  01D378  006F FF8C  F035    	movff	plusw1,btemp+11
 10817  01D37E  0E07               	movlw	7
 10818  01D380  2434               	addwf	(btemp+10)^0,w,c
 10819  01D382  6ED9               	movwf	fsr2l,c
 10820  01D384  0E00               	movlw	0
 10821  01D386  2035               	addwfc	(btemp+11)^0,w,c
 10822  01D388  6EDA               	movwf	fsr2h,c
 10823  01D38A  0E00               	movlw	0
 10824  01D38C  D06A               	goto	L6
 10825  01D38E                     l17310:
 10826                           
 10827                           ;hid.c: 39:   if (!h->wait_select && (h->select_p == SW_OFF)) {
 10828                           ;stkvar	_h @ sp[(0)+-2]
 10829  01D38E  0EFE               	movlw	-2
 10830  01D390  006F FF8C  F034    	movff	plusw1,btemp+10
 10831  01D396  0EFF               	movlw	-1
 10832  01D398  006F FF8C  F035    	movff	plusw1,btemp+11
 10833  01D39E  0E02               	movlw	2
 10834  01D3A0  2434               	addwf	(btemp+10)^0,w,c
 10835  01D3A2  6ED9               	movwf	fsr2l,c
 10836  01D3A4  0E00               	movlw	0
 10837  01D3A6  2035               	addwfc	(btemp+11)^0,w,c
 10838  01D3A8  6EDA               	movwf	fsr2h,c
 10839  01D3AA  50DF               	movf	indf2,w,c
 10840  01D3AC  A4D8               	btfss	status,2,c
 10841  01D3AE  D076               	goto	l2296
 10842                           
 10843                           ;stkvar	_h @ sp[(0)+-2]
 10844  01D3B0  0EFE               	movlw	-2
 10845  01D3B2  006F FF8C  F034    	movff	plusw1,btemp+10
 10846  01D3B8  0EFF               	movlw	-1
 10847  01D3BA  006F FF8C  F035    	movff	plusw1,btemp+11
 10848  01D3C0  0E03               	movlw	3
 10849  01D3C2  2434               	addwf	(btemp+10)^0,w,c
 10850  01D3C4  6ED9               	movwf	fsr2l,c
 10851  01D3C6  0E00               	movlw	0
 10852  01D3C8  2035               	addwfc	(btemp+11)^0,w,c
 10853  01D3CA  6EDA               	movwf	fsr2h,c
 10854  01D3CC  50DF               	movf	indf2,w,c
 10855  01D3CE  A4D8               	btfss	status,2,c
 10856  01D3D0  D065               	goto	l2296
 10857                           
 10858                           ;hid.c: 40:    h->sequence = ++h->sequence & 0x3;
 10859                           ;stkvar	_h @ sp[(0)+-2]
 10860  01D3D2  0EFE               	movlw	-2
 10861  01D3D4  006F FF8C  F034    	movff	plusw1,btemp+10
 10862  01D3DA  0EFF               	movlw	-1
 10863  01D3DC  006F FF8C  F035    	movff	plusw1,btemp+11
 10864  01D3E2  0E08               	movlw	8
 10865  01D3E4  2434               	addwf	(btemp+10)^0,w,c
 10866  01D3E6  6ED9               	movwf	fsr2l,c
 10867  01D3E8  0E00               	movlw	0
 10868  01D3EA  2035               	addwfc	(btemp+11)^0,w,c
 10869  01D3EC  6EDA               	movwf	fsr2h,c
 10870                           
 10871                           ;stkvar	_h @ sp[(0)+-2]
 10872  01D3EE  0EFE               	movlw	-2
 10873  01D3F0  006F FF8C  F034    	movff	plusw1,btemp+10
 10874  01D3F6  0EFF               	movlw	-1
 10875  01D3F8  006F FF8C  F035    	movff	plusw1,btemp+11
 10876  01D3FE  0E08               	movlw	8
 10877  01D400  2434               	addwf	(btemp+10)^0,w,c
 10878  01D402  6EE9               	movwf	fsr0l,c
 10879  01D404  0E00               	movlw	0
 10880  01D406  2035               	addwfc	(btemp+11)^0,w,c
 10881  01D408  6EEA               	movwf	fsr0h,c
 10882  01D40A  2AEF               	incf	indf0,f,c
 10883  01D40C  50EF               	movf	indf0,w,c
 10884  01D40E  0B03               	andlw	3
 10885  01D410  6EDF               	movwf	indf2,c
 10886                           
 10887                           ;hid.c: 41:    h->hid_display = h->sequence;
 10888                           ;stkvar	_h @ sp[(0)+-2]
 10889  01D412  0EFE               	movlw	-2
 10890  01D414  006F FF8C  F034    	movff	plusw1,btemp+10
 10891  01D41A  0EFF               	movlw	-1
 10892  01D41C  006F FF8C  F035    	movff	plusw1,btemp+11
 10893  01D422  0E08               	movlw	8
 10894  01D424  2434               	addwf	(btemp+10)^0,w,c
 10895  01D426  6ED9               	movwf	fsr2l,c
 10896  01D428  0E00               	movlw	0
 10897  01D42A  2035               	addwfc	(btemp+11)^0,w,c
 10898  01D42C  6EDA               	movwf	fsr2h,c
 10899                           
 10900                           ;stkvar	_h @ sp[(0)+-2]
 10901  01D42E  0EFE               	movlw	-2
 10902  01D430  006F FF8F FFE9     	movff	plusw1,fsr0l
 10903  01D436  0EFF               	movlw	-1
 10904  01D438  006F FF8F FFEA     	movff	plusw1,fsr0h
 10905  01D43E  006F FF7F FFEF     	movff	indf2,indf0
 10906                           
 10907                           ;hid.c: 42:    h->wait_select = 1;
 10908                           ;stkvar	_h @ sp[(0)+-2]
 10909  01D444  0EFE               	movlw	-2
 10910  01D446  006F FF8C  F034    	movff	plusw1,btemp+10
 10911  01D44C  0EFF               	movlw	-1
 10912  01D44E  006F FF8C  F035    	movff	plusw1,btemp+11
 10913  01D454  0E02               	movlw	2
 10914  01D456  2434               	addwf	(btemp+10)^0,w,c
 10915  01D458  6ED9               	movwf	fsr2l,c
 10916  01D45A  0E00               	movlw	0
 10917  01D45C  2035               	addwfc	(btemp+11)^0,w,c
 10918  01D45E  6EDA               	movwf	fsr2h,c
 10919  01D460  0E01               	movlw	1
 10920  01D462                     L6:
 10921  01D462  6EDF               	movwf	indf2,c
 10922  01D464  D01B               	goto	l2296
 10923  01D466                     l17320:
 10924                           
 10925                           ;stkvar	_h @ sp[(0)+-2]
 10926  01D466  0EFE               	movlw	-2
 10927  01D468  006F FF8C  F034    	movff	plusw1,btemp+10
 10928  01D46E  0EFF               	movlw	-1
 10929  01D470  006F FF8C  F035    	movff	plusw1,btemp+11
 10930  01D476  0E01               	movlw	1
 10931  01D478  2434               	addwf	(btemp+10)^0,w,c
 10932  01D47A  6ED9               	movwf	fsr2l,c
 10933  01D47C  0E00               	movlw	0
 10934  01D47E  2035               	addwfc	(btemp+11)^0,w,c
 10935  01D480  6EDA               	movwf	fsr2h,c
 10936  01D482  50DF               	movf	indf2,w,c
 10937  01D484  6E34               	movwf	(btemp+10)^0,c
 10938  01D486  6A35               	clrf	(btemp+11)^0,c
 10939                           
 10940                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10941                           ; Switch size 1, requested type "simple"
 10942                           ; Number of cases is 1, Range of values is 0 to 0
 10943                           ; switch strategies available:
 10944                           ; Name         Instructions Cycles
 10945                           ; simple_byte            4     3 (average)
 10946                           ;	Chosen strategy is simple_byte
 10947  01D488  5035               	movf	(btemp+11)^0,w,c
 10948  01D48A  0A00               	xorlw	0	; case 0
 10949  01D48C  A4D8               	btfss	status,2,c
 10950  01D48E  D77F               	goto	l17310
 10951                           
 10952                           ; Switch size 1, requested type "simple"
 10953                           ; Number of cases is 2, Range of values is 0 to 1
 10954                           ; switch strategies available:
 10955                           ; Name         Instructions Cycles
 10956                           ; simple_byte            7     4 (average)
 10957                           ;	Chosen strategy is simple_byte
 10958  01D490  5034               	movf	(btemp+10)^0,w,c
 10959  01D492  0A00               	xorlw	0	; case 0
 10960  01D494  B4D8               	btfsc	status,2,c
 10961  01D496  D701               	goto	l17294
 10962  01D498  0A01               	xorlw	1	; case 1
 10963  01D49A  D779               	goto	l17310
 10964  01D49C                     l2296:
 10965                           
 10966                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, a
      +                          rgsize = 2, vargsize = 0
 10967  01D49C  52E5               	movf	postdec1,f,c
 10968  01D49E  52E5               	movf	postdec1,f,c
 10969  01D4A0  0012               	return		;funcret
 10970  01D4A2                     __end_of_hid_display:
 10971                           	opt callstack 0
 10972                           
 10973 ;; *************** function _hid_input *****************
 10974 ;; Defined at:
 10975 ;;		line 3 in file "hid.c"
 10976 ;; Parameters:    Size  Location     Type
 10977 ;;  h               2  [STACK] PTR struct H_data
 10978 ;;		 -> H(9), 
 10979 ;; Auto vars:     Size  Location     Type
 10980 ;;		None
 10981 ;; Return value:  Size  Location     Type
 10982 ;;                  2  [STACK] PTR struct H_data
 10983 ;; Registers used:
 10984 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 10985 ;; Tracked objects:
 10986 ;;		On entry : 0/39
 10987 ;;		On exit  : 0/0
 10988 ;;		Unchanged: 0/0
 10989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10994 ;;Total ram usage:        0 bytes
 10995 ;; Hardware stack levels used:    1
 10996 ;; Hardware stack levels required when called:   16
 10997 ;; This function calls:
 10998 ;;		_get_switch
 10999 ;; This function is called by:
 11000 ;;		_hid_display
 11001 ;; This function uses a reentrant model
 11002 ;;
 11003                           
 11004                           	psect	text27
 11005  01F490                     __ptext27:
 11006                           	opt callstack 0
 11007  01F490                     _hid_input:
 11008                           	opt callstack 13
 11009                           
 11010                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
 11011                           
 11012                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11013                           ;incstack = 0
 11014  01F490  0E02               	movlw	2
 11015  01F492  6EE6               	movwf	postinc1,c
 11016  01F494  ECF0  F011         	call	_get_switch	;wreg free
 11017  01F498  502A               	movf	btemp^0,w,c
 11018  01F49A  B4D8               	btfsc	status,2,c
 11019  01F49C  D02C               	goto	l17056
 11020                           
 11021                           ;hid.c: 6:   h->wait_select = 0;
 11022                           ;stkvar	_h @ sp[(0)+-2]
 11023  01F49E  0EFE               	movlw	-2
 11024  01F4A0  006F FF8C  F034    	movff	plusw1,btemp+10
 11025  01F4A6  0EFF               	movlw	-1
 11026  01F4A8  006F FF8C  F035    	movff	plusw1,btemp+11
 11027  01F4AE  0E02               	movlw	2
 11028  01F4B0  2434               	addwf	(btemp+10)^0,w,c
 11029  01F4B2  6ED9               	movwf	fsr2l,c
 11030  01F4B4  0E00               	movlw	0
 11031  01F4B6  2035               	addwfc	(btemp+11)^0,w,c
 11032  01F4B8  6EDA               	movwf	fsr2h,c
 11033  01F4BA  0E00               	movlw	0
 11034  01F4BC  6EDF               	movwf	indf2,c
 11035                           
 11036                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
 11037  01F4BE  0E02               	movlw	2
 11038  01F4C0  6EE6               	movwf	postinc1,c
 11039  01F4C2  ECF0  F011         	call	_get_switch	;wreg free
 11040  01F4C6  502A               	movf	btemp^0,w,c
 11041  01F4C8  B4D8               	btfsc	status,2,c
 11042  01F4CA  D003               	goto	u16590
 11043  01F4CC  6A35               	clrf	(btemp+11)^0,c
 11044  01F4CE  2A35               	incf	(btemp+11)^0,f,c
 11045  01F4D0  D001               	goto	u16608
 11046  01F4D2                     u16590:
 11047  01F4D2  6A35               	clrf	(btemp+11)^0,c
 11048  01F4D4                     u16608:
 11049                           
 11050                           ;stkvar	_h @ sp[(0)+-2]
 11051  01F4D4  0EFE               	movlw	-2
 11052  01F4D6  006F FF8C  F032    	movff	plusw1,btemp+8
 11053  01F4DC  0EFF               	movlw	-1
 11054  01F4DE  006F FF8C  F033    	movff	plusw1,btemp+9
 11055  01F4E4  0E03               	movlw	3
 11056  01F4E6  2432               	addwf	(btemp+8)^0,w,c
 11057  01F4E8  6ED9               	movwf	fsr2l,c
 11058  01F4EA  0E00               	movlw	0
 11059  01F4EC  2033               	addwfc	(btemp+9)^0,w,c
 11060  01F4EE  6EDA               	movwf	fsr2h,c
 11061  01F4F0  0060  F0D7  FFDF   	movff	btemp+11,indf2
 11062  01F4F6                     l17056:
 11063                           
 11064                           ;hid.c: 10:  if (get_switch(SENTER)) {
 11065  01F4F6  0E03               	movlw	3
 11066  01F4F8  6EE6               	movwf	postinc1,c
 11067  01F4FA  ECF0  F011         	call	_get_switch	;wreg free
 11068  01F4FE  502A               	movf	btemp^0,w,c
 11069  01F500  B4D8               	btfsc	status,2,c
 11070  01F502  D02C               	goto	l17062
 11071                           
 11072                           ;hid.c: 11:   h->wait_enter = 0;
 11073                           ;stkvar	_h @ sp[(0)+-2]
 11074  01F504  0EFE               	movlw	-2
 11075  01F506  006F FF8C  F034    	movff	plusw1,btemp+10
 11076  01F50C  0EFF               	movlw	-1
 11077  01F50E  006F FF8C  F035    	movff	plusw1,btemp+11
 11078  01F514  0E04               	movlw	4
 11079  01F516  2434               	addwf	(btemp+10)^0,w,c
 11080  01F518  6ED9               	movwf	fsr2l,c
 11081  01F51A  0E00               	movlw	0
 11082  01F51C  2035               	addwfc	(btemp+11)^0,w,c
 11083  01F51E  6EDA               	movwf	fsr2h,c
 11084  01F520  0E00               	movlw	0
 11085  01F522  6EDF               	movwf	indf2,c
 11086                           
 11087                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
 11088  01F524  0E03               	movlw	3
 11089  01F526  6EE6               	movwf	postinc1,c
 11090  01F528  ECF0  F011         	call	_get_switch	;wreg free
 11091  01F52C  502A               	movf	btemp^0,w,c
 11092  01F52E  B4D8               	btfsc	status,2,c
 11093  01F530  D003               	goto	u16620
 11094  01F532  6A35               	clrf	(btemp+11)^0,c
 11095  01F534  2A35               	incf	(btemp+11)^0,f,c
 11096  01F536  D001               	goto	u16638
 11097  01F538                     u16620:
 11098  01F538  6A35               	clrf	(btemp+11)^0,c
 11099  01F53A                     u16638:
 11100                           
 11101                           ;stkvar	_h @ sp[(0)+-2]
 11102  01F53A  0EFE               	movlw	-2
 11103  01F53C  006F FF8C  F032    	movff	plusw1,btemp+8
 11104  01F542  0EFF               	movlw	-1
 11105  01F544  006F FF8C  F033    	movff	plusw1,btemp+9
 11106  01F54A  0E05               	movlw	5
 11107  01F54C  2432               	addwf	(btemp+8)^0,w,c
 11108  01F54E  6ED9               	movwf	fsr2l,c
 11109  01F550  0E00               	movlw	0
 11110  01F552  2033               	addwfc	(btemp+9)^0,w,c
 11111  01F554  6EDA               	movwf	fsr2h,c
 11112  01F556  0060  F0D7  FFDF   	movff	btemp+11,indf2
 11113  01F55C                     l17062:
 11114                           
 11115                           ;hid.c: 15:  if (get_switch(SCALIB)) {
 11116  01F55C  0E04               	movlw	4
 11117  01F55E  6EE6               	movwf	postinc1,c
 11118  01F560  ECF0  F011         	call	_get_switch	;wreg free
 11119  01F564  502A               	movf	btemp^0,w,c
 11120  01F566  B4D8               	btfsc	status,2,c
 11121  01F568  D02C               	goto	l2287
 11122                           
 11123                           ;hid.c: 16:   h->wait_calib = 0;
 11124                           ;stkvar	_h @ sp[(0)+-2]
 11125  01F56A  0EFE               	movlw	-2
 11126  01F56C  006F FF8C  F034    	movff	plusw1,btemp+10
 11127  01F572  0EFF               	movlw	-1
 11128  01F574  006F FF8C  F035    	movff	plusw1,btemp+11
 11129  01F57A  0E06               	movlw	6
 11130  01F57C  2434               	addwf	(btemp+10)^0,w,c
 11131  01F57E  6ED9               	movwf	fsr2l,c
 11132  01F580  0E00               	movlw	0
 11133  01F582  2035               	addwfc	(btemp+11)^0,w,c
 11134  01F584  6EDA               	movwf	fsr2h,c
 11135  01F586  0E00               	movlw	0
 11136  01F588  6EDF               	movwf	indf2,c
 11137                           
 11138                           ;hid.c: 17:   h->calib_p = get_switch(SCALIB);
 11139  01F58A  0E04               	movlw	4
 11140  01F58C  6EE6               	movwf	postinc1,c
 11141  01F58E  ECF0  F011         	call	_get_switch	;wreg free
 11142  01F592  502A               	movf	btemp^0,w,c
 11143  01F594  B4D8               	btfsc	status,2,c
 11144  01F596  D003               	goto	u16650
 11145  01F598  6A35               	clrf	(btemp+11)^0,c
 11146  01F59A  2A35               	incf	(btemp+11)^0,f,c
 11147  01F59C  D001               	goto	u16668
 11148  01F59E                     u16650:
 11149  01F59E  6A35               	clrf	(btemp+11)^0,c
 11150  01F5A0                     u16668:
 11151                           
 11152                           ;stkvar	_h @ sp[(0)+-2]
 11153  01F5A0  0EFE               	movlw	-2
 11154  01F5A2  006F FF8C  F032    	movff	plusw1,btemp+8
 11155  01F5A8  0EFF               	movlw	-1
 11156  01F5AA  006F FF8C  F033    	movff	plusw1,btemp+9
 11157  01F5B0  0E07               	movlw	7
 11158  01F5B2  2432               	addwf	(btemp+8)^0,w,c
 11159  01F5B4  6ED9               	movwf	fsr2l,c
 11160  01F5B6  0E00               	movlw	0
 11161  01F5B8  2033               	addwfc	(btemp+9)^0,w,c
 11162  01F5BA  6EDA               	movwf	fsr2h,c
 11163  01F5BC  0060  F0D7  FFDF   	movff	btemp+11,indf2
 11164  01F5C2                     l2287:
 11165                           
 11166                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
 11167  01F5C2  52E5               	movf	postdec1,f,c
 11168  01F5C4  52E5               	movf	postdec1,f,c
 11169  01F5C6  0012               	return		;funcret
 11170  01F5C8                     __end_of_hid_input:
 11171                           	opt callstack 0
 11172                           
 11173 ;; *************** function _esr_check *****************
 11174 ;; Defined at:
 11175 ;;		line 197 in file "bsoc.c"
 11176 ;; Parameters:    Size  Location     Type
 11177 ;;  fsm             1  [STACK] const unsigned char 
 11178 ;; Auto vars:     Size  Location     Type
 11179 ;;		None
 11180 ;; Return value:  Size  Location     Type
 11181 ;;                  4  [STACK] float 
 11182 ;; Registers used:
 11183 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 11184 ;; Tracked objects:
 11185 ;;		On entry : 0/0
 11186 ;;		On exit  : 0/0
 11187 ;;		Unchanged: 0/0
 11188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11193 ;;Total ram usage:        0 bytes
 11194 ;; Hardware stack levels used:    1
 11195 ;; Hardware stack levels required when called:   18
 11196 ;; This function calls:
 11197 ;;		_StartTimer
 11198 ;;		_TimerDone
 11199 ;;		___fldiv
 11200 ;;		___flsub
 11201 ;;		_conv_raw_result
 11202 ;;		_fabsf
 11203 ;;		_set_load_relay_one
 11204 ;;		_set_load_relay_two
 11205 ;;		_update_adc_result
 11206 ;; This function is called by:
 11207 ;;		_main
 11208 ;; This function uses a reentrant model
 11209 ;;
 11210                           
 11211                           	psect	text28
 11212  01B7E2                     __ptext28:
 11213                           	opt callstack 0
 11214  01B7E2                     _esr_check:
 11215                           	opt callstack 12
 11216                           
 11217                           ;bsoc.c: 197: float esr_check(const uint8_t fsm);bsoc.c: 198: {;bsoc.c: 199:  static uin
      +                          t8_t esr_state = 0;;bsoc.c: 201:  if (fsm) {
 11218                           ;stkvar	_fsm @ sp[(0)+-1]
 11219                           
 11220                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11221                           ;incstack = 0
 11222  01B7E2  0EFF               	movlw	-1
 11223  01B7E4  50E3               	movf	plusw1,w,c
 11224  01B7E6  B4D8               	btfsc	status,2,c
 11225  01B7E8  D149               	goto	l14302
 11226                           
 11227                           ;bsoc.c: 202:   esr_state = 0;
 11228  01B7EA  0100               	movlb	0	; () banked
 11229  01B7EC  6BC6               	clrf	esr_check@esr_state& (0+255),b
 11230                           
 11231                           ; BSR set to: 0
 11232                           ;bsoc.c: 203:   return -10.0;
 11233  01B7EE  0E00               	movlw	0
 11234  01B7F0  6E2A               	movwf	btemp^0,c
 11235  01B7F2  0E00               	movlw	0
 11236  01B7F4  6E2B               	movwf	(btemp+1)^0,c
 11237  01B7F6  0E20               	movlw	32
 11238  01B7F8  6E2C               	movwf	(btemp+2)^0,c
 11239  01B7FA  0EC1               	movlw	193
 11240  01B7FC  D15B               	goto	L7
 11241  01B7FE                     l14234:
 11242                           
 11243                           ; BSR set to: 0
 11244                           ;bsoc.c: 208:   StartTimer(TMR_ESR, 10000);
 11245  01B7FE  0E10               	movlw	16
 11246  01B800  6EE6               	movwf	postinc1,c
 11247  01B802  0E27               	movlw	39
 11248  01B804  6EE6               	movwf	postinc1,c
 11249  01B806  0E0C               	movlw	12
 11250  01B808  6EE6               	movwf	postinc1,c
 11251  01B80A  ECD0  F00F         	call	_StartTimer	;wreg free
 11252  01B80E                     l14236:
 11253                           
 11254                           ;bsoc.c: 209:   esr_state++;
 11255  01B80E  0100               	movlb	0	; () banked
 11256  01B810  2BC6               	incf	esr_check@esr_state& (0+255),f,b
 11257                           
 11258                           ;bsoc.c: 210:   break;
 11259  01B812  D149               	goto	l14304
 11260  01B814                     l14238:
 11261                           
 11262                           ; BSR set to: 0
 11263                           ;bsoc.c: 215:   set_load_relay_one(0);
 11264  01B814  0E00               	movlw	0
 11265  01B816  6EE6               	movwf	postinc1,c
 11266  01B818  ECF1  F014         	call	_set_load_relay_one	;wreg free
 11267                           
 11268                           ;bsoc.c: 216:   set_load_relay_two(0);
 11269  01B81C  0E00               	movlw	0
 11270  01B81E  6EE6               	movwf	postinc1,c
 11271  01B820  ECE9  F014         	call	_set_load_relay_two	;wreg free
 11272                           
 11273                           ;bsoc.c: 217:   if (TimerDone(TMR_ESR)) {
 11274  01B824  0E0C               	movlw	12
 11275  01B826  6EE6               	movwf	postinc1,c
 11276  01B828  EC5B  F012         	call	_TimerDone	;wreg free
 11277  01B82C  502A               	movf	btemp^0,w,c
 11278  01B82E  B4D8               	btfsc	status,2,c
 11279  01B830  D009               	goto	l14244
 11280                           
 11281                           ;bsoc.c: 218:    StartTimer(TMR_ESR, 10000);
 11282  01B832  0E10               	movlw	16
 11283  01B834  6EE6               	movwf	postinc1,c
 11284  01B836  0E27               	movlw	39
 11285  01B838  6EE6               	movwf	postinc1,c
 11286  01B83A  0E0C               	movlw	12
 11287  01B83C  6EE6               	movwf	postinc1,c
 11288  01B83E  ECD0  F00F         	call	_StartTimer	;wreg free
 11289                           
 11290                           ;bsoc.c: 219:   } else {
 11291  01B842  D006               	goto	l14248
 11292  01B844                     l14244:
 11293                           
 11294                           ;bsoc.c: 220:    return -2.0;
 11295  01B844  0E00               	movlw	0
 11296  01B846  6E2A               	movwf	btemp^0,c
 11297  01B848  0E00               	movlw	0
 11298  01B84A  6E2B               	movwf	(btemp+1)^0,c
 11299  01B84C  0E00               	movlw	0
 11300  01B84E  D066               	goto	L9
 11301  01B850                     l14248:
 11302                           
 11303                           ;bsoc.c: 225:   update_adc_result();
 11304  01B850  EC6D  F010         	call	_update_adc_result	;wreg free
 11305                           
 11306                           ;bsoc.c: 226:   C.bv_noload = conv_raw_result(V_BAT, CONV);
 11307  01B854  0E00               	movlw	0
 11308  01B856  6EE6               	movwf	postinc1,c
 11309  01B858  0E04               	movlw	4
 11310  01B85A  6EE6               	movwf	postinc1,c
 11311  01B85C  ECCB  F0C3         	call	_conv_raw_result	;wreg free
 11312  01B860  0060  F0A8  FA21   	movff	btemp,_C+290	;volatile
 11313  01B866  0060  F0AC  FA22   	movff	btemp+1,_C+291	;volatile
 11314  01B86C  0060  F0B0  FA23   	movff	btemp+2,_C+292	;volatile
 11315  01B872  0060  F0B4  FA24   	movff	btemp+3,_C+293	;volatile
 11316  01B878  D7CA               	goto	l14236
 11317  01B87A                     l14254:
 11318                           
 11319                           ; BSR set to: 0
 11320                           ;bsoc.c: 230:   set_load_relay_one(1);
 11321  01B87A  0E01               	movlw	1
 11322  01B87C  6EE6               	movwf	postinc1,c
 11323  01B87E  ECF1  F014         	call	_set_load_relay_one	;wreg free
 11324                           
 11325                           ;bsoc.c: 231:   if (TimerDone(TMR_ESR)) {
 11326  01B882  0E0C               	movlw	12
 11327  01B884  6EE6               	movwf	postinc1,c
 11328  01B886  EC5B  F012         	call	_TimerDone	;wreg free
 11329  01B88A  502A               	movf	btemp^0,w,c
 11330  01B88C  B4D8               	btfsc	status,2,c
 11331  01B88E  D009               	goto	l14260
 11332                           
 11333                           ;bsoc.c: 232:    StartTimer(TMR_ESR, 10000);
 11334  01B890  0E10               	movlw	16
 11335  01B892  6EE6               	movwf	postinc1,c
 11336  01B894  0E27               	movlw	39
 11337  01B896  6EE6               	movwf	postinc1,c
 11338  01B898  0E0C               	movlw	12
 11339  01B89A  6EE6               	movwf	postinc1,c
 11340  01B89C  ECD0  F00F         	call	_StartTimer	;wreg free
 11341                           
 11342                           ;bsoc.c: 233:   } else {
 11343  01B8A0  D006               	goto	l14264
 11344  01B8A2                     l14260:
 11345                           
 11346                           ;bsoc.c: 234:    return -3.0;
 11347  01B8A2  0E00               	movlw	0
 11348  01B8A4  6E2A               	movwf	btemp^0,c
 11349  01B8A6  0E00               	movlw	0
 11350  01B8A8  6E2B               	movwf	(btemp+1)^0,c
 11351  01B8AA  0E40               	movlw	64
 11352  01B8AC  D037               	goto	L9
 11353  01B8AE                     l14264:
 11354                           
 11355                           ;bsoc.c: 237:   update_adc_result();
 11356  01B8AE  EC6D  F010         	call	_update_adc_result	;wreg free
 11357                           
 11358                           ;bsoc.c: 238:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
 11359  01B8B2  0E00               	movlw	0
 11360  01B8B4  6EE6               	movwf	postinc1,c
 11361  01B8B6  0E04               	movlw	4
 11362  01B8B8  6EE6               	movwf	postinc1,c
 11363  01B8BA  ECCB  F0C3         	call	_conv_raw_result	;wreg free
 11364  01B8BE  0060  F0A8  FA25   	movff	btemp,_C+294	;volatile
 11365  01B8C4  0060  F0AC  FA26   	movff	btemp+1,_C+295	;volatile
 11366  01B8CA  0060  F0B0  FA27   	movff	btemp+2,_C+296	;volatile
 11367  01B8D0  0060  F0B4  FA28   	movff	btemp+3,_C+297	;volatile
 11368                           
 11369                           ;bsoc.c: 239:   C.load_i1 = conv_raw_result(C_BATT, CONV);
 11370  01B8D6  0E00               	movlw	0
 11371  01B8D8  6EE6               	movwf	postinc1,c
 11372  01B8DA  0E00               	movlw	0
 11373  01B8DC  6EE6               	movwf	postinc1,c
 11374  01B8DE  ECCB  F0C3         	call	_conv_raw_result	;wreg free
 11375  01B8E2  0060  F0A8  FA19   	movff	btemp,_C+282	;volatile
 11376  01B8E8  0060  F0AC  FA1A   	movff	btemp+1,_C+283	;volatile
 11377  01B8EE  0060  F0B0  FA1B   	movff	btemp+2,_C+284	;volatile
 11378  01B8F4  0060  F0B4  FA1C   	movff	btemp+3,_C+285	;volatile
 11379  01B8FA  D789               	goto	l14236
 11380  01B8FC                     l14272:
 11381                           
 11382                           ; BSR set to: 0
 11383                           ;bsoc.c: 243:   set_load_relay_two(1);
 11384  01B8FC  0E01               	movlw	1
 11385  01B8FE  6EE6               	movwf	postinc1,c
 11386  01B900  ECE9  F014         	call	_set_load_relay_two	;wreg free
 11387                           
 11388                           ;bsoc.c: 244:   if (!TimerDone(TMR_ESR))
 11389  01B904  0E0C               	movlw	12
 11390  01B906  6EE6               	movwf	postinc1,c
 11391  01B908  EC5B  F012         	call	_TimerDone	;wreg free
 11392  01B90C  502A               	movf	btemp^0,w,c
 11393  01B90E  A4D8               	btfss	status,2,c
 11394  01B910  D008               	goto	l14280
 11395                           
 11396                           ;bsoc.c: 245:    return -4.0;
 11397  01B912  0E00               	movlw	0
 11398  01B914  6E2A               	movwf	btemp^0,c
 11399  01B916  0E00               	movlw	0
 11400  01B918  6E2B               	movwf	(btemp+1)^0,c
 11401  01B91A  0E80               	movlw	128
 11402  01B91C                     L9:
 11403  01B91C  6E2C               	movwf	(btemp+2)^0,c
 11404  01B91E  0EC0               	movlw	192
 11405  01B920  D0C9               	goto	L7
 11406  01B922                     l14280:
 11407                           
 11408                           ;bsoc.c: 247:   update_adc_result();
 11409  01B922  EC6D  F010         	call	_update_adc_result	;wreg free
 11410                           
 11411                           ;bsoc.c: 248:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
 11412  01B926  0E00               	movlw	0
 11413  01B928  6EE6               	movwf	postinc1,c
 11414  01B92A  0E04               	movlw	4
 11415  01B92C  6EE6               	movwf	postinc1,c
 11416  01B92E  ECCB  F0C3         	call	_conv_raw_result	;wreg free
 11417  01B932  0060  F0A8  FA29   	movff	btemp,_C+298	;volatile
 11418  01B938  0060  F0AC  FA2A   	movff	btemp+1,_C+299	;volatile
 11419  01B93E  0060  F0B0  FA2B   	movff	btemp+2,_C+300	;volatile
 11420  01B944  0060  F0B4  FA2C   	movff	btemp+3,_C+301	;volatile
 11421                           
 11422                           ;bsoc.c: 249:   C.load_i2 = conv_raw_result(C_BATT, CONV);
 11423  01B94A  0E00               	movlw	0
 11424  01B94C  6EE6               	movwf	postinc1,c
 11425  01B94E  0E00               	movlw	0
 11426  01B950  6EE6               	movwf	postinc1,c
 11427  01B952  ECCB  F0C3         	call	_conv_raw_result	;wreg free
 11428  01B956  0060  F0A8  FA1D   	movff	btemp,_C+286	;volatile
 11429  01B95C  0060  F0AC  FA1E   	movff	btemp+1,_C+287	;volatile
 11430  01B962  0060  F0B0  FA1F   	movff	btemp+2,_C+288	;volatile
 11431  01B968  0060  F0B4  FA20   	movff	btemp+3,_C+289	;volatile
 11432                           
 11433                           ;bsoc.c: 251:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
 11434  01B96E  EE22  F21D         	lfsr	2,_C+286	;volatile
 11435  01B972  006F FF7B FFE6     	movff	postinc2,postinc1
 11436  01B978  006F FF7B FFE6     	movff	postinc2,postinc1
 11437  01B97E  006F FF7B FFE6     	movff	postinc2,postinc1
 11438  01B984  006F FF7B FFE6     	movff	postinc2,postinc1
 11439  01B98A  EE22  F219         	lfsr	2,_C+282	;volatile
 11440  01B98E  006F FF7B FFE6     	movff	postinc2,postinc1
 11441  01B994  006F FF7B FFE6     	movff	postinc2,postinc1
 11442  01B99A  006F FF7B FFE6     	movff	postinc2,postinc1
 11443  01B9A0  006F FF7B FFE6     	movff	postinc2,postinc1
 11444  01B9A6  EC2A  F00F         	call	___flsub	;wreg free
 11445  01B9AA  0060  F0AB  FFE6   	movff	btemp,postinc1
 11446  01B9B0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11447  01B9B6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11448  01B9BC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11449  01B9C2  EE22  F229         	lfsr	2,_C+298	;volatile
 11450  01B9C6  006F FF7B FFE6     	movff	postinc2,postinc1
 11451  01B9CC  006F FF7B FFE6     	movff	postinc2,postinc1
 11452  01B9D2  006F FF7B FFE6     	movff	postinc2,postinc1
 11453  01B9D8  006F FF7B FFE6     	movff	postinc2,postinc1
 11454  01B9DE  EE22  F225         	lfsr	2,_C+294	;volatile
 11455  01B9E2  006F FF7B FFE6     	movff	postinc2,postinc1
 11456  01B9E8  006F FF7B FFE6     	movff	postinc2,postinc1
 11457  01B9EE  006F FF7B FFE6     	movff	postinc2,postinc1
 11458  01B9F4  006F FF7B FFE6     	movff	postinc2,postinc1
 11459  01B9FA  EC2A  F00F         	call	___flsub	;wreg free
 11460  01B9FE  0060  F0AB  FFE6   	movff	btemp,postinc1
 11461  01BA04  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11462  01BA0A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11463  01BA10  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11464  01BA16  EC83  F0BE         	call	___fldiv	;wreg free
 11465  01BA1A  0060  F0AB  FFE6   	movff	btemp,postinc1
 11466  01BA20  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11467  01BA26  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11468  01BA2C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11469  01BA32  EC6D  F004         	call	_fabsf	;wreg free
 11470  01BA36  0060  F0A8  F987   	movff	btemp,_C+136	;volatile
 11471  01BA3C  0060  F0AC  F988   	movff	btemp+1,_C+137	;volatile
 11472  01BA42  0060  F0B0  F989   	movff	btemp+2,_C+138	;volatile
 11473  01BA48  0060  F0B4  F98A   	movff	btemp+3,_C+139	;volatile
 11474                           
 11475                           ;bsoc.c: 252:   set_load_relay_one(0);
 11476  01BA4E  0E00               	movlw	0
 11477  01BA50  6EE6               	movwf	postinc1,c
 11478  01BA52  ECF1  F014         	call	_set_load_relay_one	;wreg free
 11479                           
 11480                           ;bsoc.c: 253:   set_load_relay_two(0);
 11481  01BA56  0E00               	movlw	0
 11482  01BA58  6EE6               	movwf	postinc1,c
 11483  01BA5A  ECE9  F014         	call	_set_load_relay_two	;wreg free
 11484                           
 11485                           ;bsoc.c: 254:   esr_state = 0;
 11486  01BA5E  0100               	movlb	0	; () banked
 11487  01BA60  6BC6               	clrf	esr_check@esr_state& (0+255),b
 11488                           
 11489                           ; BSR set to: 0
 11490                           ;bsoc.c: 255:   return C.esr;
 11491  01BA62  0062  F61C  F02A   	movff	_C+136,btemp	;volatile
 11492  01BA68  0062  F620  F02B   	movff	_C+137,btemp+1	;volatile
 11493  01BA6E  0062  F624  F02C   	movff	_C+138,btemp+2	;volatile
 11494  01BA74  0062  F628  F02D   	movff	_C+139,btemp+3	;volatile
 11495  01BA7A  D01D               	goto	l2412
 11496  01BA7C                     l14302:
 11497  01BA7C  0100               	movlb	0	; () banked
 11498  01BA7E  51C6               	movf	esr_check@esr_state& (0+255),w,b
 11499  01BA80  6E34               	movwf	(btemp+10)^0,c
 11500  01BA82  6A35               	clrf	(btemp+11)^0,c
 11501                           
 11502                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11503                           ; Switch size 1, requested type "simple"
 11504                           ; Number of cases is 1, Range of values is 0 to 0
 11505                           ; switch strategies available:
 11506                           ; Name         Instructions Cycles
 11507                           ; simple_byte            4     3 (average)
 11508                           ;	Chosen strategy is simple_byte
 11509  01BA84  5035               	movf	(btemp+11)^0,w,c
 11510  01BA86  0A00               	xorlw	0	; case 0
 11511  01BA88  A4D8               	btfss	status,2,c
 11512  01BA8A  D00D               	goto	l14304
 11513                           
 11514                           ; BSR set to: 0
 11515                           ; Switch size 1, requested type "simple"
 11516                           ; Number of cases is 4, Range of values is 0 to 3
 11517                           ; switch strategies available:
 11518                           ; Name         Instructions Cycles
 11519                           ; simple_byte           13     7 (average)
 11520                           ;	Chosen strategy is simple_byte
 11521  01BA8C  5034               	movf	(btemp+10)^0,w,c
 11522  01BA8E  0A00               	xorlw	0	; case 0
 11523  01BA90  B4D8               	btfsc	status,2,c
 11524  01BA92  D6B5               	goto	l14234
 11525  01BA94  0A01               	xorlw	1	; case 1
 11526  01BA96  B4D8               	btfsc	status,2,c
 11527  01BA98  D6BD               	goto	l14238
 11528  01BA9A  0A03               	xorlw	3	; case 2
 11529  01BA9C  B4D8               	btfsc	status,2,c
 11530  01BA9E  D6ED               	goto	l14254
 11531  01BAA0  0A01               	xorlw	1	; case 3
 11532  01BAA2  B4D8               	btfsc	status,2,c
 11533  01BAA4  D72B               	goto	l14272
 11534  01BAA6                     l14304:
 11535                           
 11536                           ; BSR set to: 0
 11537                           ;bsoc.c: 260:  return -1.0;
 11538  01BAA6  0E00               	movlw	0
 11539  01BAA8  6E2A               	movwf	btemp^0,c
 11540  01BAAA  0E00               	movlw	0
 11541  01BAAC  6E2B               	movwf	(btemp+1)^0,c
 11542  01BAAE  0E80               	movlw	128
 11543  01BAB0  6E2C               	movwf	(btemp+2)^0,c
 11544  01BAB2  0EBF               	movlw	191
 11545  01BAB4                     L7:
 11546  01BAB4  6E2D               	movwf	(btemp+3)^0,c
 11547  01BAB6                     l2412:
 11548                           
 11549                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 11550  01BAB6  52E5               	movf	postdec1,f,c
 11551  01BAB8  0012               	return		;funcret
 11552  01BABA                     __end_of_esr_check:
 11553                           	opt callstack 0
 11554                           
 11555 ;; *************** function _update_adc_result *****************
 11556 ;; Defined at:
 11557 ;;		line 111 in file "daq.c"
 11558 ;; Parameters:    Size  Location     Type
 11559 ;;		None
 11560 ;; Auto vars:     Size  Location     Type
 11561 ;;		None
 11562 ;; Return value:  Size  Location     Type
 11563 ;;                  1  [STACK] _Bool 
 11564 ;; Registers used:
 11565 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
 11566 ;; Tracked objects:
 11567 ;;		On entry : 0/0
 11568 ;;		On exit  : 0/0
 11569 ;;		Unchanged: 0/0
 11570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11575 ;;Total ram usage:        0 bytes
 11576 ;; Hardware stack levels used:    1
 11577 ;; Hardware stack levels required when called:   17
 11578 ;; This function calls:
 11579 ;;		_StartTimer
 11580 ;;		_TimerDone
 11581 ;;		_check_adc_scan
 11582 ;;		_clear_adc_scan
 11583 ;;		_start_adc_scan
 11584 ;; This function is called by:
 11585 ;;		_esr_check
 11586 ;; This function uses a reentrant model
 11587 ;;
 11588                           
 11589                           	psect	text29
 11590  0020DA                     __ptext29:
 11591                           	opt callstack 0
 11592  0020DA                     _update_adc_result:
 11593                           	opt callstack 12
 11594                           
 11595                           ;daq.c: 113:  if (R.done) {
 11596                           
 11597                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11598                           ;incstack = 0
 11599  0020DA  0101               	movlb	1	; () banked
 11600  0020DC  5135               	movf	(_R+53)& (0+255),w,b	;volatile
 11601  0020DE  B4D8               	btfsc	status,2,c
 11602  0020E0  0012               	return	
 11603                           
 11604                           ; BSR set to: 1
 11605                           ;daq.c: 114:   clear_adc_scan();
 11606  0020E2  EC73  F015         	call	_clear_adc_scan	;wreg free
 11607                           
 11608                           ; BSR set to: 1
 11609                           ;daq.c: 115:   start_adc_scan();
 11610  0020E6  EC0F  F00C         	call	_start_adc_scan	;wreg free
 11611                           
 11612                           ;daq.c: 116:   StartTimer(TMR_ADC, 200);
 11613  0020EA  0EC8               	movlw	200
 11614  0020EC  6EE6               	movwf	postinc1,c
 11615  0020EE  0E00               	movlw	0
 11616  0020F0  6EE6               	movwf	postinc1,c
 11617  0020F2  0E01               	movlw	1
 11618  0020F4  6EE6               	movwf	postinc1,c
 11619  0020F6  ECD0  F00F         	call	_StartTimer	;wreg free
 11620  0020FA                     l13662:
 11621  0020FA  0E01               	movlw	1
 11622  0020FC  6EE6               	movwf	postinc1,c
 11623  0020FE  EC5B  F012         	call	_TimerDone	;wreg free
 11624  002102  502A               	movf	btemp^0,w,c
 11625  002104  A4D8               	btfss	status,2,c
 11626  002106  0012               	return	
 11627  002108  EC59  F015         	call	_check_adc_scan	;wreg free
 11628  00210C  502A               	movf	btemp^0,w,c
 11629  00210E  A4D8               	btfss	status,2,c
 11630  002110  0012               	return	
 11631  002112  D7F3               	goto	l13662
 11632  002114                     __end_of_update_adc_result:
 11633                           	opt callstack 0
 11634                           
 11635 ;; *************** function _check_adc_scan *****************
 11636 ;; Defined at:
 11637 ;;		line 95 in file "daq.c"
 11638 ;; Parameters:    Size  Location     Type
 11639 ;;		None
 11640 ;; Auto vars:     Size  Location     Type
 11641 ;;		None
 11642 ;; Return value:  Size  Location     Type
 11643 ;;                  1  [STACK] _Bool 
 11644 ;; Registers used:
 11645 ;;		btemp
 11646 ;; Tracked objects:
 11647 ;;		On entry : 0/2
 11648 ;;		On exit  : 0/0
 11649 ;;		Unchanged: 0/0
 11650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11655 ;;Total ram usage:        0 bytes
 11656 ;; Hardware stack levels used:    1
 11657 ;; Hardware stack levels required when called:   15
 11658 ;; This function calls:
 11659 ;;		Nothing
 11660 ;; This function is called by:
 11661 ;;		_main
 11662 ;;		_update_adc_result
 11663 ;; This function uses a reentrant model
 11664 ;;
 11665                           
 11666                           	psect	text30
 11667  002AB2                     __ptext30:
 11668                           	opt callstack 0
 11669  002AB2                     _check_adc_scan:
 11670                           	opt callstack 13
 11671                           
 11672                           ;daq.c: 97:  return R.done;
 11673                           
 11674                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11675                           ;incstack = 0
 11676  002AB2  0060  F4D4  F02A   	movff	_R+53,btemp	;volatile
 11677                           
 11678                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 11679  002AB8  0012               	return		;funcret
 11680  002ABA                     __end_of_check_adc_scan:
 11681                           	opt callstack 0
 11682                           
 11683 ;; *************** function _set_load_relay_two *****************
 11684 ;; Defined at:
 11685 ;;		line 131 in file "mbmc.c"
 11686 ;; Parameters:    Size  Location     Type
 11687 ;;  mode            1  [STACK] const _Bool 
 11688 ;; Auto vars:     Size  Location     Type
 11689 ;;		None
 11690 ;; Return value:  Size  Location     Type
 11691 ;;                  1  [STACK] void 
 11692 ;; Registers used:
 11693 ;;		wreg, fsr1l, fsr1h
 11694 ;; Tracked objects:
 11695 ;;		On entry : 0/3D
 11696 ;;		On exit  : 0/0
 11697 ;;		Unchanged: 0/0
 11698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11703 ;;Total ram usage:        0 bytes
 11704 ;; Hardware stack levels used:    1
 11705 ;; Hardware stack levels required when called:   15
 11706 ;; This function calls:
 11707 ;;		Nothing
 11708 ;; This function is called by:
 11709 ;;		_main
 11710 ;;		_esr_check
 11711 ;; This function uses a reentrant model
 11712 ;;
 11713                           
 11714                           	psect	text31
 11715  0029D2                     __ptext31:
 11716                           	opt callstack 0
 11717  0029D2                     _set_load_relay_two:
 11718                           	opt callstack 15
 11719                           
 11720                           ;mbmc.c: 131: void set_load_relay_two(const _Bool mode);mbmc.c: 132: {;mbmc.c: 133:  LAT
      +                          Dbits.LATD5 = mode;
 11721                           ;stkvar	_mode @ sp[(0)+-1]
 11722                           
 11723                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11724                           ;incstack = 0
 11725  0029D2  0EFF               	movlw	-1
 11726  0029D4  B0E3               	btfsc	plusw1,0,c
 11727  0029D6  D002               	bra	u12525
 11728  0029D8  9ABD               	bcf	189,5,c	;volatile
 11729  0029DA  D001               	bra	u12526
 11730  0029DC                     u12525:
 11731  0029DC  8ABD               	bsf	189,5,c	;volatile
 11732  0029DE                     u12526:
 11733                           
 11734                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 11735  0029DE  52E5               	movf	postdec1,f,c
 11736  0029E0  0012               	return		;funcret
 11737  0029E2                     __end_of_set_load_relay_two:
 11738                           	opt callstack 0
 11739                           
 11740 ;; *************** function _set_load_relay_one *****************
 11741 ;; Defined at:
 11742 ;;		line 126 in file "mbmc.c"
 11743 ;; Parameters:    Size  Location     Type
 11744 ;;  mode            1  [STACK] const _Bool 
 11745 ;; Auto vars:     Size  Location     Type
 11746 ;;		None
 11747 ;; Return value:  Size  Location     Type
 11748 ;;                  1  [STACK] void 
 11749 ;; Registers used:
 11750 ;;		wreg, fsr1l, fsr1h
 11751 ;; Tracked objects:
 11752 ;;		On entry : 0/3D
 11753 ;;		On exit  : 0/0
 11754 ;;		Unchanged: 0/0
 11755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11760 ;;Total ram usage:        0 bytes
 11761 ;; Hardware stack levels used:    1
 11762 ;; Hardware stack levels required when called:   15
 11763 ;; This function calls:
 11764 ;;		Nothing
 11765 ;; This function is called by:
 11766 ;;		_main
 11767 ;;		_esr_check
 11768 ;; This function uses a reentrant model
 11769 ;;
 11770                           
 11771                           	psect	text32
 11772  0029E2                     __ptext32:
 11773                           	opt callstack 0
 11774  0029E2                     _set_load_relay_one:
 11775                           	opt callstack 15
 11776                           
 11777                           ;mbmc.c: 126: void set_load_relay_one(const _Bool mode);mbmc.c: 127: {;mbmc.c: 128:  LAT
      +                          Dbits.LATD4 = mode;
 11778                           ;stkvar	_mode @ sp[(0)+-1]
 11779                           
 11780                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11781                           ;incstack = 0
 11782  0029E2  0EFF               	movlw	-1
 11783  0029E4  B0E3               	btfsc	plusw1,0,c
 11784  0029E6  D002               	bra	u12515
 11785  0029E8  98BD               	bcf	189,4,c	;volatile
 11786  0029EA  D001               	bra	u12516
 11787  0029EC                     u12515:
 11788  0029EC  88BD               	bsf	189,4,c	;volatile
 11789  0029EE                     u12516:
 11790                           
 11791                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 11792  0029EE  52E5               	movf	postdec1,f,c
 11793  0029F0  0012               	return		;funcret
 11794  0029F2                     __end_of_set_load_relay_one:
 11795                           	opt callstack 0
 11796                           
 11797 ;; *************** function _eaDogM_WriteCommand *****************
 11798 ;; Defined at:
 11799 ;;		line 384 in file "eadog.c"
 11800 ;; Parameters:    Size  Location     Type
 11801 ;;  cmd             1  [STACK] const unsigned char 
 11802 ;; Auto vars:     Size  Location     Type
 11803 ;;		None
 11804 ;; Return value:  Size  Location     Type
 11805 ;;                  1  [STACK] void 
 11806 ;; Registers used:
 11807 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 11808 ;; Tracked objects:
 11809 ;;		On entry : 3F/3D
 11810 ;;		On exit  : 3F/3D
 11811 ;;		Unchanged: 0/0
 11812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11817 ;;Total ram usage:        0 bytes
 11818 ;; Hardware stack levels used:    1
 11819 ;; Hardware stack levels required when called:   19
 11820 ;; This function calls:
 11821 ;;		_send_lcd_cmd_dma
 11822 ;; This function is called by:
 11823 ;;		_main
 11824 ;; This function uses a reentrant model
 11825 ;;
 11826                           
 11827                           	psect	text33
 11828  002A22                     __ptext33:
 11829                           	opt callstack 0
 11830  002A22                     _eaDogM_WriteCommand:
 11831                           	opt callstack 11
 11832                           
 11833                           ;eadog.c: 384: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 385: {;eadog.c: 386:
      +                            send_lcd_cmd_dma(cmd);
 11834                           ;stkvar	_cmd @ sp[(0)+-1]
 11835                           
 11836                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11837                           ;incstack = 0
 11838  002A22  0EFF               	movlw	-1
 11839  002A24  50E3               	movf	plusw1,w,c
 11840  002A26  6EE6               	movwf	postinc1,c
 11841  002A28  EC42  F014         	call	_send_lcd_cmd_dma	;wreg free
 11842                           
 11843                           ; BSR set to: 61
 11844                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
 11845  002A2C  52E5               	movf	postdec1,f,c
 11846  002A2E  0012               	return		;funcret
 11847  002A30                     __end_of_eaDogM_WriteCommand:
 11848                           	opt callstack 0
 11849                           
 11850 ;; *************** function _display_history *****************
 11851 ;; Defined at:
 11852 ;;		line 634 in file "main.c"
 11853 ;; Parameters:    Size  Location     Type
 11854 ;;		None
 11855 ;; Auto vars:     Size  Location     Type
 11856 ;;		None
 11857 ;; Return value:  Size  Location     Type
 11858 ;;                  1  [STACK] _Bool 
 11859 ;; Registers used:
 11860 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
 11861 ;; Tracked objects:
 11862 ;;		On entry : 0/2
 11863 ;;		On exit  : 0/0
 11864 ;;		Unchanged: 0/0
 11865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11870 ;;Total ram usage:        0 bytes
 11871 ;; Hardware stack levels used:    1
 11872 ;; Hardware stack levels required when called:   27
 11873 ;; This function calls:
 11874 ;;		_WaitMs
 11875 ;;		_asctime
 11876 ;;		_get_switch
 11877 ;;		_get_vterm_ptr
 11878 ;;		_localtime
 11879 ;;		_sprintf
 11880 ;;		_time
 11881 ;;		_update_lcd
 11882 ;; This function is called by:
 11883 ;;		_main
 11884 ;; This function uses a reentrant model
 11885 ;;
 11886                           
 11887                           	psect	text34
 11888  01B508                     __ptext34:
 11889                           	opt callstack 0
 11890  01B508                     _display_history:
 11891                           	opt callstack 3
 11892                           
 11893                           ;main.c: 636:  static uint8_t bwait = 0;;main.c: 638:  if (get_switch(SCALIB) && (++bwai
      +                          t > 5)) {
 11894                           
 11895                           ; BSR set to: 61
 11896                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11897                           ;incstack = 0
 11898  01B508  0E04               	movlw	4
 11899  01B50A  6EE6               	movwf	postinc1,c
 11900  01B50C  ECF0  F011         	call	_get_switch	;wreg free
 11901  01B510  502A               	movf	btemp^0,w,c
 11902  01B512  B4D8               	btfsc	status,2,c
 11903  01B514  D15E               	goto	l17368
 11904  01B516  2A53               	incf	display_history@bwait^0,f,c
 11905  01B518  0E05               	movlw	5
 11906  01B51A  6453               	cpfsgt	display_history@bwait^0,c
 11907  01B51C  D15A               	goto	l17368
 11908                           
 11909                           ;main.c: 639:   pclock = time(((void*)0));
 11910  01B51E  0E00               	movlw	0
 11911  01B520  6EE6               	movwf	postinc1,c
 11912  01B522  0E00               	movlw	0
 11913  01B524  6EE6               	movwf	postinc1,c
 11914  01B526  ECD3  F00C         	call	_time	;wreg free
 11915  01B52A  52E5               	movf	postdec1,f,c
 11916  01B52C  006F FF9C  F041    	movff	indf1,btemp+23
 11917  01B532  52E5               	movf	postdec1,f,c
 11918  01B534  006F FF9C  F040    	movff	indf1,btemp+22
 11919  01B53A  52E5               	movf	postdec1,f,c
 11920  01B53C  006F FF9C  F03F    	movff	indf1,btemp+21
 11921  01B542  52E5               	movf	postdec1,f,c
 11922  01B544  006F FF9C  F03E    	movff	indf1,btemp+20
 11923  01B54A  52E5               	movf	postdec1,f,c
 11924  01B54C  006F FF9C  F03D    	movff	indf1,btemp+19
 11925  01B552  52E5               	movf	postdec1,f,c
 11926  01B554  006F FF9C  F03C    	movff	indf1,btemp+18
 11927  01B55A  52E5               	movf	postdec1,f,c
 11928  01B55C  006F FF9C  F03B    	movff	indf1,btemp+17
 11929  01B562  52E5               	movf	postdec1,f,c
 11930  01B564  006F FF9C  F03A    	movff	indf1,btemp+16
 11931  01B56A  0060  F0E8  F0DA   	movff	btemp+16,_pclock
 11932  01B570  0060  F0EC  F0DB   	movff	btemp+17,_pclock+1
 11933  01B576  0060  F0F0  F0DC   	movff	btemp+18,_pclock+2
 11934  01B57C  0060  F0F4  F0DD   	movff	btemp+19,_pclock+3
 11935  01B582  0060  F0F8  F0DE   	movff	btemp+20,_pclock+4
 11936  01B588  0060  F0FC  F0DF   	movff	btemp+21,_pclock+5
 11937  01B58E  0060  F100  F0E0   	movff	btemp+22,_pclock+6
 11938  01B594  0060  F104  F0E1   	movff	btemp+23,_pclock+7
 11939                           
 11940                           ; BSR set to: 57
 11941                           ;main.c: 640:   t_mbmc = localtime(&pclock);
 11942  01B59A  0EDA               	movlw	_pclock& (0+255)
 11943  01B59C  6EE6               	movwf	postinc1,c
 11944  01B59E  ECA1  F014         	call	_localtime	;wreg free
 11945  01B5A2  0060  F0A8  F0BC   	movff	btemp,_t_mbmc
 11946  01B5A8  0060  F0AC  F0BD   	movff	btemp+1,_t_mbmc+1
 11947                           
 11948                           ;main.c: 641:   sprintf(get_vterm_ptr(0, 0), "%d %d %d %d                ", C.hist[0].h[
      +                          0], C.hist[0].h[1], C.hist[0].h[2], C.hist[0].h[3]);
 11949  01B5AE  EE22  F1EA         	lfsr	2,_C+235	;volatile
 11950  01B5B2  006F FF78  F034    	movff	postinc2,btemp+10
 11951  01B5B8  006F FF74  F035    	movff	postdec2,btemp+11
 11952  01B5BE  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11953  01B5C4  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11954  01B5CA  EE22  F1E8         	lfsr	2,_C+233	;volatile
 11955  01B5CE  006F FF78  F034    	movff	postinc2,btemp+10
 11956  01B5D4  006F FF74  F035    	movff	postdec2,btemp+11
 11957  01B5DA  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11958  01B5E0  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11959  01B5E6  EE22  F1E6         	lfsr	2,_C+231	;volatile
 11960  01B5EA  006F FF78  F034    	movff	postinc2,btemp+10
 11961  01B5F0  006F FF74  F035    	movff	postdec2,btemp+11
 11962  01B5F6  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11963  01B5FC  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11964  01B602  EE22  F1E4         	lfsr	2,_C+229	;volatile
 11965  01B606  006F FF78  F034    	movff	postinc2,btemp+10
 11966  01B60C  006F FF74  F035    	movff	postdec2,btemp+11
 11967  01B612  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11968  01B618  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11969  01B61E  0EB9               	movlw	low STR_70
 11970  01B620  6EE6               	movwf	postinc1,c
 11971  01B622  0EFA               	movlw	high STR_70
 11972  01B624  6EE6               	movwf	postinc1,c
 11973  01B626  0E00               	movlw	0
 11974  01B628  6EE6               	movwf	postinc1,c
 11975  01B62A  0E00               	movlw	0
 11976  01B62C  6EE6               	movwf	postinc1,c
 11977  01B62E  ECD9  F011         	call	_get_vterm_ptr	;wreg free
 11978  01B632  0060  F0AB  FFE6   	movff	btemp,postinc1
 11979  01B638  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11980  01B63E  0E0C               	movlw	12
 11981  01B640  6EE6               	movwf	postinc1,c
 11982  01B642  ECA5  F0FD         	call	_sprintf	;wreg free
 11983                           
 11984                           ; BSR set to: 0
 11985                           ;main.c: 642:   sprintf(get_vterm_ptr(1, 0), "%d %d %d %d                ", C.hist[0].h[
      +                          4], C.hist[0].h[5], C.hist[0].h[6], C.hist[0].h[7]);
 11986  01B646  EE22  F1F2         	lfsr	2,_C+243	;volatile
 11987  01B64A  006F FF78  F034    	movff	postinc2,btemp+10
 11988  01B650  006F FF74  F035    	movff	postdec2,btemp+11
 11989  01B656  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11990  01B65C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11991  01B662  EE22  F1F0         	lfsr	2,_C+241	;volatile
 11992  01B666  006F FF78  F034    	movff	postinc2,btemp+10
 11993  01B66C  006F FF74  F035    	movff	postdec2,btemp+11
 11994  01B672  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11995  01B678  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11996  01B67E  EE22  F1EE         	lfsr	2,_C+239	;volatile
 11997  01B682  006F FF78  F034    	movff	postinc2,btemp+10
 11998  01B688  006F FF74  F035    	movff	postdec2,btemp+11
 11999  01B68E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12000  01B694  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12001  01B69A  EE22  F1EC         	lfsr	2,_C+237	;volatile
 12002  01B69E  006F FF78  F034    	movff	postinc2,btemp+10
 12003  01B6A4  006F FF74  F035    	movff	postdec2,btemp+11
 12004  01B6AA  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12005  01B6B0  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12006  01B6B6  0EB9               	movlw	low STR_70
 12007  01B6B8  6EE6               	movwf	postinc1,c
 12008  01B6BA  0EFA               	movlw	high STR_70
 12009  01B6BC  6EE6               	movwf	postinc1,c
 12010  01B6BE  0E00               	movlw	0
 12011  01B6C0  6EE6               	movwf	postinc1,c
 12012  01B6C2  0E01               	movlw	1
 12013  01B6C4  6EE6               	movwf	postinc1,c
 12014  01B6C6  ECD9  F011         	call	_get_vterm_ptr	;wreg free
 12015  01B6CA  0060  F0AB  FFE6   	movff	btemp,postinc1
 12016  01B6D0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 12017  01B6D6  0E0C               	movlw	12
 12018  01B6D8  6EE6               	movwf	postinc1,c
 12019  01B6DA  ECA5  F0FD         	call	_sprintf	;wreg free
 12020                           
 12021                           ; BSR set to: 0
 12022                           ;main.c: 643:   sprintf(get_vterm_ptr(2, 0), "%d %d %d %d                ", C.hist[0].h[
      +                          8], C.hist[0].h[9], C.hist[0].h[10], C.hist[0].h[12]);
 12023  01B6DE  EE22  F1FC         	lfsr	2,_C+253	;volatile
 12024  01B6E2  006F FF78  F034    	movff	postinc2,btemp+10
 12025  01B6E8  006F FF74  F035    	movff	postdec2,btemp+11
 12026  01B6EE  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12027  01B6F4  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12028  01B6FA  EE22  F1F8         	lfsr	2,_C+249	;volatile
 12029  01B6FE  006F FF78  F034    	movff	postinc2,btemp+10
 12030  01B704  006F FF74  F035    	movff	postdec2,btemp+11
 12031  01B70A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12032  01B710  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12033  01B716  EE22  F1F6         	lfsr	2,_C+247	;volatile
 12034  01B71A  006F FF78  F034    	movff	postinc2,btemp+10
 12035  01B720  006F FF74  F035    	movff	postdec2,btemp+11
 12036  01B726  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12037  01B72C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12038  01B732  EE22  F1F4         	lfsr	2,_C+245	;volatile
 12039  01B736  006F FF78  F034    	movff	postinc2,btemp+10
 12040  01B73C  006F FF74  F035    	movff	postdec2,btemp+11
 12041  01B742  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12042  01B748  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12043  01B74E  0EB9               	movlw	low STR_70
 12044  01B750  6EE6               	movwf	postinc1,c
 12045  01B752  0EFA               	movlw	high STR_70
 12046  01B754  6EE6               	movwf	postinc1,c
 12047  01B756  0E00               	movlw	0
 12048  01B758  6EE6               	movwf	postinc1,c
 12049  01B75A  0E02               	movlw	2
 12050  01B75C  6EE6               	movwf	postinc1,c
 12051  01B75E  ECD9  F011         	call	_get_vterm_ptr	;wreg free
 12052  01B762  0060  F0AB  FFE6   	movff	btemp,postinc1
 12053  01B768  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 12054  01B76E  0E0C               	movlw	12
 12055  01B770  6EE6               	movwf	postinc1,c
 12056  01B772  ECA5  F0FD         	call	_sprintf	;wreg free
 12057                           
 12058                           ; BSR set to: 0
 12059                           ;main.c: 644:   sprintf(get_vterm_ptr(3, 0), "%s           ", asctime(t_mbmc));
 12060  01B776  0060  F2F3  FFE6   	movff	_t_mbmc,postinc1
 12061  01B77C  0060  F2F7  FFE6   	movff	_t_mbmc+1,postinc1
 12062  01B782  EC40  F0C1         	call	_asctime	;wreg free
 12063  01B786  0060  F0AB  FFE6   	movff	btemp,postinc1
 12064  01B78C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 12065  01B792  0E76               	movlw	low (STR_77+5)
 12066  01B794  6EE6               	movwf	postinc1,c
 12067  01B796  0EFF               	movlw	high (STR_77+5)
 12068  01B798  6EE6               	movwf	postinc1,c
 12069  01B79A  0E00               	movlw	0
 12070  01B79C  6EE6               	movwf	postinc1,c
 12071  01B79E  0E03               	movlw	3
 12072  01B7A0  6EE6               	movwf	postinc1,c
 12073  01B7A2  ECD9  F011         	call	_get_vterm_ptr	;wreg free
 12074  01B7A6  0060  F0AB  FFE6   	movff	btemp,postinc1
 12075  01B7AC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 12076  01B7B2  0E06               	movlw	6
 12077  01B7B4  6EE6               	movwf	postinc1,c
 12078  01B7B6  ECA5  F0FD         	call	_sprintf	;wreg free
 12079                           
 12080                           ; BSR set to: 0
 12081                           ;main.c: 645:   update_lcd(0);
 12082  01B7BA  0E00               	movlw	0
 12083  01B7BC  6EE6               	movwf	postinc1,c
 12084  01B7BE  EC57  F0F6         	call	_update_lcd	;wreg free
 12085                           
 12086                           ;main.c: 646:   WaitMs(2000);
 12087  01B7C2  0ED0               	movlw	208
 12088  01B7C4  6EE6               	movwf	postinc1,c
 12089  01B7C6  0E07               	movlw	7
 12090  01B7C8  6EE6               	movwf	postinc1,c
 12091  01B7CA  ECDD  F010         	call	_WaitMs	;wreg free
 12092  01B7CE                     l17362:
 12093                           
 12094                           ;main.c: 647:   bwait = 0;
 12095  01B7CE  6A53               	clrf	display_history@bwait^0,c
 12096  01B7D0  0012               	return	
 12097  01B7D2                     l17368:
 12098                           
 12099                           ;main.c: 650:   if (!get_switch(SCALIB))
 12100  01B7D2  0E04               	movlw	4
 12101  01B7D4  6EE6               	movwf	postinc1,c
 12102  01B7D6  ECF0  F011         	call	_get_switch	;wreg free
 12103  01B7DA  502A               	movf	btemp^0,w,c
 12104  01B7DC  A4D8               	btfss	status,2,c
 12105  01B7DE  0012               	return	
 12106  01B7E0  D7F6               	goto	l17362
 12107  01B7E2                     __end_of_display_history:
 12108                           	opt callstack 0
 12109                           
 12110 ;; *************** function _time *****************
 12111 ;; Defined at:
 12112 ;;		line 251 in file "mbmc.c"
 12113 ;; Parameters:    Size  Location     Type
 12114 ;;  t               2  [STACK] PTR long long 
 12115 ;;		 -> time@current_time(8), NULL(0), 
 12116 ;; Auto vars:     Size  Location     Type
 12117 ;;		None
 12118 ;; Return value:  Size  Location     Type
 12119 ;;                  8  [STACK] long long 
 12120 ;; Registers used:
 12121 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl
 12122 ;; Tracked objects:
 12123 ;;		On entry : 0/1
 12124 ;;		On exit  : 3F/39
 12125 ;;		Unchanged: 0/0
 12126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12131 ;;Total ram usage:        0 bytes
 12132 ;; Hardware stack levels used:    1
 12133 ;; Hardware stack levels required when called:   15
 12134 ;; This function calls:
 12135 ;;		Nothing
 12136 ;; This function is called by:
 12137 ;;		_main
 12138 ;;		_display_history
 12139 ;;		_check_day_time
 12140 ;;		_load_hist_data
 12141 ;; This function uses a reentrant model
 12142 ;;
 12143                           
 12144                           	psect	text35
 12145  0019A6                     __ptext35:
 12146                           	opt callstack 0
 12147  0019A6                     _time:
 12148                           	opt callstack 0
 12149                           
 12150                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 8 argfudge = 6
 12151  0019A6  0E06               	movlw	6
 12152  0019A8  26E1               	addwf	fsr1l,f,c
 12153  0019AA  0E00               	movlw	0
 12154  0019AC  22E2               	addwfc	fsr1h,f,c
 12155                           
 12156                           ;mbmc.c: 251: time_t time(time_t * t);mbmc.c: 252: {;mbmc.c: 253:  static time_t current
      +                          _time;;mbmc.c: 254:  PIE8bits.TMR5IE = 0;
 12157                           
 12158                           ;incstack = 0
 12159 ;; hardware stack exceeded
 12160  0019AE  0139               	movlb	57	; () banked
 12161  0019B0  9D98               	bcf	152,6,b	;volatile
 12162                           
 12163                           ; BSR set to: 57
 12164                           ;mbmc.c: 255:  current_time = V.ticks;
 12165  0019B2  0102               	movlb	2	; () banked
 12166  0019B4  5188               	movf	(_V+129)& (0+255),w,b	;volatile
 12167  0019B6  0100               	movlb	0	; () banked
 12168  0019B8  6FD2               	movwf	time@current_time& (0+255),b
 12169  0019BA  0102               	movlb	2	; () banked
 12170  0019BC  5189               	movf	(_V+130)& (0+255),w,b	;volatile
 12171  0019BE  0100               	movlb	0	; () banked
 12172  0019C0  6FD3               	movwf	(time@current_time+1)& (0+255),b
 12173  0019C2  0102               	movlb	2	; () banked
 12174  0019C4  518A               	movf	(_V+131)& (0+255),w,b	;volatile
 12175  0019C6  0100               	movlb	0	; () banked
 12176  0019C8  6FD4               	movwf	(time@current_time+2)& (0+255),b
 12177  0019CA  0102               	movlb	2	; () banked
 12178  0019CC  518B               	movf	(_V+132)& (0+255),w,b	;volatile
 12179  0019CE  0100               	movlb	0	; () banked
 12180  0019D0  6FD5               	movwf	(time@current_time+3)& (0+255),b
 12181  0019D2  6BD6               	clrf	(time@current_time+4)& (0+255),b
 12182  0019D4  6BD7               	clrf	(time@current_time+5)& (0+255),b
 12183  0019D6  6BD8               	clrf	(time@current_time+6)& (0+255),b
 12184  0019D8  6BD9               	clrf	(time@current_time+7)& (0+255),b
 12185                           
 12186                           ; BSR set to: 0
 12187                           ;mbmc.c: 256:  PIE8bits.TMR5IE = 1;
 12188  0019DA  0139               	movlb	57	; () banked
 12189  0019DC  8D98               	bsf	152,6,b	;volatile
 12190                           
 12191                           ; BSR set to: 57
 12192                           ;mbmc.c: 257:  if (t) {
 12193                           ;stkvar	_t @ sp[(0)+-8]
 12194  0019DE  0EF8               	movlw	-8
 12195  0019E0  006F FF8C  F02A    	movff	plusw1,btemp
 12196  0019E6  0EF9               	movlw	-7
 12197  0019E8  50E3               	movf	plusw1,w,c
 12198  0019EA  102A               	iorwf	btemp^0,w,c
 12199                           
 12200                           ; BSR set to: 57
 12201                           ;mbmc.c: 260:  return current_time;
 12202                           
 12203                           ; BSR set to: 57
 12204  0019EC  EE20  F0D2         	lfsr	2,time@current_time
 12205                           
 12206                           ;stkvar	?_time @ sp[(0)+-8]
 12207  0019F0  0E08               	movlw	8
 12208  0019F2  6E2A               	movwf	btemp^0,c
 12209  0019F4  0EF8               	movlw	-8
 12210  0019F6                     us1160999:
 12211  0019F6  006F FF7B FFE3     	movff	postinc2,plusw1
 12212  0019FC  28E8               	incf	wreg,w,c
 12213  0019FE  2E2A               	decfsz	btemp^0,f,c
 12214  001A00  D7FA               	bra	us1160999
 12215                           
 12216                           ; BSR set to: 57
 12217                           ; _time: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize 
      +                          = 8, vargsize = 0
 12218  001A02  0012               	return		;funcret
 12219  001A04                     __end_of_time:
 12220                           	opt callstack 0
 12221                           
 12222 ;; *************** function _localtime *****************
 12223 ;; Defined at:
 12224 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/localtime.c"
 12225 ;; Parameters:    Size  Location     Type
 12226 ;;  t               1  [STACK] PTR const long long 
 12227 ;;		 -> pclock(8), 
 12228 ;; Auto vars:     Size  Location     Type
 12229 ;;		None
 12230 ;; Return value:  Size  Location     Type
 12231 ;;                  2  [STACK] PTR struct tm
 12232 ;; Registers used:
 12233 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
 12234 ;; Tracked objects:
 12235 ;;		On entry : 3F/39
 12236 ;;		On exit  : 0/0
 12237 ;;		Unchanged: 0/0
 12238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12243 ;;Total ram usage:        0 bytes
 12244 ;; Hardware stack levels used:    1
 12245 ;; Hardware stack levels required when called:   21
 12246 ;; This function calls:
 12247 ;;		___localtime_r
 12248 ;; This function is called by:
 12249 ;;		_main
 12250 ;;		_display_history
 12251 ;; This function uses a reentrant model
 12252 ;;
 12253                           
 12254                           	psect	text36
 12255  002942                     __ptext36:
 12256                           	opt callstack 0
 12257  002942                     _localtime:
 12258                           	opt callstack 9
 12259                           
 12260                           ; BSR set to: 57
 12261                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12262                           ;incstack = 0
 12263  002942  0EDF               	movlw	low localtime@tm
 12264  002944  6EE6               	movwf	postinc1,c
 12265  002946  0E03               	movlw	high localtime@tm
 12266  002948  6EE6               	movwf	postinc1,c
 12267                           
 12268                           ;stkvar	_t @ sp[(-2)+-1]
 12269  00294A  0EFD               	movlw	-3
 12270  00294C  50E3               	movf	plusw1,w,c
 12271  00294E  6EE6               	movwf	postinc1,c
 12272  002950  ECD9  F0E4         	call	___localtime_r	;wreg free
 12273                           
 12274                           ; _localtime: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 12275  002954  52E5               	movf	postdec1,f,c
 12276  002956  0012               	return		;funcret
 12277  002958                     __end_of_localtime:
 12278                           	opt callstack 0
 12279                           
 12280 ;; *************** function ___localtime_r *****************
 12281 ;; Defined at:
 12282 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/localtime_r.c"
 12283 ;; Parameters:    Size  Location     Type
 12284 ;;  t               1  [STACK] PTR const long long 
 12285 ;;		 -> pclock(8), 
 12286 ;;  tm              2  [STACK] PTR struct tm
 12287 ;;		 -> localtime@tm(24), 
 12288 ;; Auto vars:     Size  Location     Type
 12289 ;;		None
 12290 ;; Return value:  Size  Location     Type
 12291 ;;                  2  [STACK] PTR struct tm
 12292 ;; Registers used:
 12293 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
 12294 ;; Tracked objects:
 12295 ;;		On entry : 0/39
 12296 ;;		On exit  : 0/0
 12297 ;;		Unchanged: 0/0
 12298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12303 ;;Total ram usage:        0 bytes
 12304 ;; Hardware stack levels used:    1
 12305 ;; Hardware stack levels required when called:   20
 12306 ;; This function calls:
 12307 ;;		___secs_to_tm
 12308 ;;		___secs_to_zone
 12309 ;; This function is called by:
 12310 ;;		_localtime
 12311 ;; This function uses a reentrant model
 12312 ;;
 12313                           
 12314                           	psect	text37
 12315  01C9B2                     __ptext37:
 12316                           	opt callstack 0
 12317  01C9B2                     ___localtime_r:
 12318                           	opt callstack 9
 12319                           
 12320                           ;stkvar	_t @ sp[(0)+-1]
 12321                           
 12322                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12323                           ;incstack = 0
 12324  01C9B2  0EFF               	movlw	-1
 12325  01C9B4  50E3               	movf	plusw1,w,c
 12326  01C9B6  6ED9               	movwf	fsr2l,c
 12327  01C9B8  6ADA               	clrf	fsr2h,c
 12328  01C9BA  0E07               	movlw	7
 12329  01C9BC  AEDB               	btfss	plusw2,7,c
 12330  01C9BE  D010               	goto	u16500
 12331  01C9C0  52DE               	movf	postinc2,f,c
 12332  01C9C2  52DE               	movf	postinc2,f,c
 12333  01C9C4  0E80               	movlw	128
 12334  01C9C6  5CDE               	subwf	postinc2,w,c
 12335  01C9C8  0EBD               	movlw	189
 12336  01C9CA  58DE               	subwfb	postinc2,w,c
 12337  01C9CC  0E0E               	movlw	14
 12338  01C9CE  58DE               	subwfb	postinc2,w,c
 12339  01C9D0  0EFF               	movlw	255
 12340  01C9D2  58DE               	subwfb	postinc2,w,c
 12341  01C9D4  0EFF               	movlw	255
 12342  01C9D6  58DE               	subwfb	postinc2,w,c
 12343  01C9D8  0EFF               	movlw	255
 12344  01C9DA  58DE               	subwfb	postinc2,w,c
 12345  01C9DC  A0D8               	btfss	status,0,c
 12346  01C9DE  D01B               	goto	u16510
 12347  01C9E0                     u16500:
 12348                           
 12349                           ;stkvar	_t @ sp[(0)+-1]
 12350  01C9E0  0EFF               	movlw	-1
 12351  01C9E2  50E3               	movf	plusw1,w,c
 12352  01C9E4  6ED9               	movwf	fsr2l,c
 12353  01C9E6  6ADA               	clrf	fsr2h,c
 12354  01C9E8  0E07               	movlw	7
 12355  01C9EA  BEDB               	btfsc	plusw2,7,c
 12356  01C9EC  D019               	goto	l16918
 12357  01C9EE  0E07               	movlw	7
 12358  01C9F0  50DB               	movf	plusw2,w,c
 12359  01C9F2  E111               	bnz	u16510
 12360  01C9F4  0E06               	movlw	6
 12361  01C9F6  50DB               	movf	plusw2,w,c
 12362  01C9F8  E10E               	bnz	u16510
 12363  01C9FA  0E05               	movlw	5
 12364  01C9FC  50DB               	movf	plusw2,w,c
 12365  01C9FE  E10B               	bnz	u16510
 12366  01CA00  04DE               	decf	postinc2,w,c
 12367  01CA02  0E7B               	movlw	123
 12368  01CA04  58DE               	subwfb	postinc2,w,c
 12369  01CA06  0E9D               	movlw	157
 12370  01CA08  58DE               	subwfb	postinc2,w,c
 12371  01CA0A  0E40               	movlw	64
 12372  01CA0C  58DE               	subwfb	postinc2,w,c
 12373  01CA0E  0EF1               	movlw	241
 12374  01CA10  58DE               	subwfb	postinc2,w,c
 12375  01CA12  A0D8               	btfss	status,0,c
 12376  01CA14  D005               	goto	l16918
 12377  01CA16                     u16510:
 12378  01CA16  0E00               	movlw	0
 12379  01CA18  6E2A               	movwf	btemp^0,c
 12380  01CA1A  0E00               	movlw	0
 12381  01CA1C  6E2B               	movwf	(btemp+1)^0,c
 12382  01CA1E  D0E7               	goto	l3521
 12383  01CA20                     l16918:
 12384                           
 12385                           ;stkvar	_tm @ sp[(0)+-3]
 12386  01CA20  0EFD               	movlw	-3
 12387  01CA22  50E3               	movf	plusw1,w,c
 12388  01CA24  0F16               	addlw	22
 12389  01CA26  6E34               	movwf	(btemp+10)^0,c
 12390  01CA28  0EFE               	movlw	-2
 12391  01CA2A  006F FF8C  F035    	movff	plusw1,btemp+11
 12392  01CA30  0E00               	movlw	0
 12393  01CA32  2235               	addwfc	(btemp+11)^0,f,c
 12394  01CA34  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12395  01CA3A  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12396  01CA40  0E00               	movlw	0
 12397  01CA42  6EE6               	movwf	postinc1,c
 12398  01CA44  0E00               	movlw	0
 12399  01CA46  6EE6               	movwf	postinc1,c
 12400                           
 12401                           ;stkvar	_tm @ sp[(-4)+-3]
 12402  01CA48  0EF9               	movlw	-7
 12403  01CA4A  50E3               	movf	plusw1,w,c
 12404  01CA4C  0F12               	addlw	18
 12405  01CA4E  6E34               	movwf	(btemp+10)^0,c
 12406  01CA50  0EFA               	movlw	-6
 12407  01CA52  006F FF8C  F035    	movff	plusw1,btemp+11
 12408  01CA58  0E00               	movlw	0
 12409  01CA5A  2235               	addwfc	(btemp+11)^0,f,c
 12410  01CA5C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12411  01CA62  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12412                           
 12413                           ;stkvar	_tm @ sp[(-6)+-3]
 12414  01CA68  0EF7               	movlw	-9
 12415  01CA6A  50E3               	movf	plusw1,w,c
 12416  01CA6C  0F10               	addlw	16
 12417  01CA6E  6E34               	movwf	(btemp+10)^0,c
 12418  01CA70  0EF8               	movlw	-8
 12419  01CA72  006F FF8C  F035    	movff	plusw1,btemp+11
 12420  01CA78  0E00               	movlw	0
 12421  01CA7A  2235               	addwfc	(btemp+11)^0,f,c
 12422  01CA7C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12423  01CA82  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12424  01CA88  0E00               	movlw	0
 12425  01CA8A  6EE6               	movwf	postinc1,c
 12426  01CA8C  0E00               	movlw	0
 12427  01CA8E  6EE6               	movwf	postinc1,c
 12428                           
 12429                           ;stkvar	_t @ sp[(-10)+-1]
 12430  01CA90  0EF5               	movlw	-11
 12431  01CA92  50E3               	movf	plusw1,w,c
 12432  01CA94  6ED9               	movwf	fsr2l,c
 12433  01CA96  6ADA               	clrf	fsr2h,c
 12434  01CA98  006F FF7B FFE6     	movff	postinc2,postinc1
 12435  01CA9E  006F FF7B FFE6     	movff	postinc2,postinc1
 12436  01CAA4  006F FF7B FFE6     	movff	postinc2,postinc1
 12437  01CAAA  006F FF7B FFE6     	movff	postinc2,postinc1
 12438  01CAB0  006F FF7B FFE6     	movff	postinc2,postinc1
 12439  01CAB6  006F FF7B FFE6     	movff	postinc2,postinc1
 12440  01CABC  006F FF7B FFE6     	movff	postinc2,postinc1
 12441  01CAC2  006F FF7B FFE6     	movff	postinc2,postinc1
 12442  01CAC8  ECE1  F0AE         	call	___secs_to_zone	;wreg free
 12443                           
 12444                           ;stkvar	_tm @ sp[(0)+-3]
 12445  01CACC  0EFD               	movlw	-3
 12446  01CACE  006F FF8F FFE6     	movff	plusw1,postinc1
 12447  01CAD4  006F FF8F FFE6     	movff	plusw1,postinc1
 12448                           
 12449                           ;stkvar	_t @ sp[(-2)+-1]
 12450  01CADA  0EFD               	movlw	-3
 12451  01CADC  50E3               	movf	plusw1,w,c
 12452  01CADE  6ED9               	movwf	fsr2l,c
 12453  01CAE0  6ADA               	clrf	fsr2h,c
 12454  01CAE2  006F FF78  F03A    	movff	postinc2,btemp+16
 12455  01CAE8  006F FF78  F03B    	movff	postinc2,btemp+17
 12456  01CAEE  006F FF78  F03C    	movff	postinc2,btemp+18
 12457  01CAF4  006F FF78  F03D    	movff	postinc2,btemp+19
 12458  01CAFA  006F FF78  F03E    	movff	postinc2,btemp+20
 12459  01CB00  006F FF78  F03F    	movff	postinc2,btemp+21
 12460  01CB06  006F FF78  F040    	movff	postinc2,btemp+22
 12461  01CB0C  006F FF78  F041    	movff	postinc2,btemp+23
 12462                           
 12463                           ;stkvar	_tm @ sp[(-2)+-3]
 12464  01CB12  0EFB               	movlw	-5
 12465  01CB14  006F FF8C  F034    	movff	plusw1,btemp+10
 12466  01CB1A  0EFC               	movlw	-4
 12467  01CB1C  006F FF8C  F035    	movff	plusw1,btemp+11
 12468  01CB22  0E12               	movlw	18
 12469  01CB24  2434               	addwf	(btemp+10)^0,w,c
 12470  01CB26  6ED9               	movwf	fsr2l,c
 12471  01CB28  0E00               	movlw	0
 12472  01CB2A  2035               	addwfc	(btemp+11)^0,w,c
 12473  01CB2C  6EDA               	movwf	fsr2h,c
 12474  01CB2E  006F FF78  F032    	movff	postinc2,btemp+8
 12475  01CB34  006F FF78  F033    	movff	postinc2,btemp+9
 12476  01CB3A  006F FF78  F034    	movff	postinc2,btemp+10
 12477  01CB40  006F FF78  F035    	movff	postinc2,btemp+11
 12478  01CB46  0060  F0C8  F042   	movff	btemp+8,btemp+24
 12479  01CB4C  0060  F0CC  F043   	movff	btemp+9,btemp+25
 12480  01CB52  0060  F0D0  F044   	movff	btemp+10,btemp+26
 12481  01CB58  0060  F0D4  F045   	movff	btemp+11,btemp+27
 12482  01CB5E  6A46               	clrf	(btemp+28)^0,c
 12483  01CB60  BE45               	btfsc	(btemp+27)^0,7,c
 12484  01CB62  6846               	setf	(btemp+28)^0,c
 12485  01CB64  0060  F118  F047   	movff	btemp+28,btemp+29
 12486  01CB6A  0060  F118  F048   	movff	btemp+28,btemp+30
 12487  01CB70  0060  F118  F049   	movff	btemp+28,btemp+31
 12488  01CB76  503A               	movf	(btemp+16)^0,w,c
 12489  01CB78  2442               	addwf	(btemp+24)^0,w,c
 12490  01CB7A  6E32               	movwf	(btemp+8)^0,c
 12491  01CB7C  503B               	movf	(btemp+17)^0,w,c
 12492  01CB7E  2043               	addwfc	(btemp+25)^0,w,c
 12493  01CB80  6E33               	movwf	(btemp+9)^0,c
 12494  01CB82  503C               	movf	(btemp+18)^0,w,c
 12495  01CB84  2044               	addwfc	(btemp+26)^0,w,c
 12496  01CB86  6E34               	movwf	(btemp+10)^0,c
 12497  01CB88  503D               	movf	(btemp+19)^0,w,c
 12498  01CB8A  2045               	addwfc	(btemp+27)^0,w,c
 12499  01CB8C  6E35               	movwf	(btemp+11)^0,c
 12500  01CB8E  503E               	movf	(btemp+20)^0,w,c
 12501  01CB90  2046               	addwfc	(btemp+28)^0,w,c
 12502  01CB92  6E36               	movwf	(btemp+12)^0,c
 12503  01CB94  503F               	movf	(btemp+21)^0,w,c
 12504  01CB96  2047               	addwfc	(btemp+29)^0,w,c
 12505  01CB98  6E37               	movwf	(btemp+13)^0,c
 12506  01CB9A  5040               	movf	(btemp+22)^0,w,c
 12507  01CB9C  2048               	addwfc	(btemp+30)^0,w,c
 12508  01CB9E  6E38               	movwf	(btemp+14)^0,c
 12509  01CBA0  5041               	movf	(btemp+23)^0,w,c
 12510  01CBA2  2049               	addwfc	(btemp+31)^0,w,c
 12511  01CBA4  6E39               	movwf	(btemp+15)^0,c
 12512  01CBA6  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 12513  01CBAC  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 12514  01CBB2  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12515  01CBB8  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12516  01CBBE  0060  F0DB  FFE6   	movff	btemp+12,postinc1
 12517  01CBC4  0060  F0DF  FFE6   	movff	btemp+13,postinc1
 12518  01CBCA  0060  F0E3  FFE6   	movff	btemp+14,postinc1
 12519  01CBD0  0060  F0E7  FFE6   	movff	btemp+15,postinc1
 12520  01CBD6  ECB2  F094         	call	___secs_to_tm	;wreg free
 12521  01CBDA  BE2D               	btfsc	(btemp+3)^0,7,c
 12522  01CBDC  D71C               	goto	u16510
 12523                           
 12524                           ;stkvar	_tm @ sp[(0)+-3]
 12525  01CBDE  0EFD               	movlw	-3
 12526  01CBE0  006F FF8C  F02A    	movff	plusw1,btemp
 12527  01CBE6  0EFE               	movlw	-2
 12528  01CBE8  006F FF8C  F02B    	movff	plusw1,btemp+1
 12529  01CBEE                     l3521:
 12530                           
 12531                           ; ___localtime_r: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3,
      +                           argsize = 3, vargsize = 0
 12532  01CBEE  52E5               	movf	postdec1,f,c
 12533  01CBF0  52E5               	movf	postdec1,f,c
 12534  01CBF2  52E5               	movf	postdec1,f,c
 12535  01CBF4  0012               	return		;funcret
 12536  01CBF6                     __end_of___localtime_r:
 12537                           	opt callstack 0
 12538                           
 12539 ;; *************** function ___secs_to_zone *****************
 12540 ;; Defined at:
 12541 ;;		line 249 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 12542 ;; Parameters:    Size  Location     Type
 12543 ;;  t               8  [STACK] long long 
 12544 ;;  local           2  [STACK] int 
 12545 ;;  isdst           2  [STACK] PTR int 
 12546 ;;		 -> localtime@tm(24), 
 12547 ;;  offset          2  [STACK] PTR long 
 12548 ;;		 -> localtime@tm(24), 
 12549 ;;  oppoff          2  [STACK] PTR long 
 12550 ;;		 -> NULL(0), 
 12551 ;;  zonename        2  [STACK] PTR PTR const unsigned c
 12552 ;;		 -> localtime@tm(24), 
 12553 ;; Auto vars:     Size  Location     Type
 12554 ;;  alt             2  [STACK] unsigned int 
 12555 ;;  i               2    0        unsigned int 
 12556 ;;  y               8  [STACK] long long 
 12557 ;;  t1              8  [STACK] long long 
 12558 ;;  t0              8  [STACK] long long 
 12559 ;; Return value:  Size  Location     Type
 12560 ;;                  1  [STACK] void 
 12561 ;; Registers used:
 12562 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btem
      +p+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btem
      +p+31, tblptrl, tblptrh, tblptru, prodl, prodh
 12563 ;; Tracked objects:
 12564 ;;		On entry : 0/39
 12565 ;;		On exit  : 0/0
 12566 ;;		Unchanged: 0/0
 12567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12572 ;;Total ram usage:        0 bytes
 12573 ;; Hardware stack levels used:    1
 12574 ;; Hardware stack levels required when called:   19
 12575 ;; This function calls:
 12576 ;;		___aodiv
 12577 ;;		___year_to_secs
 12578 ;;		_do_tzset
 12579 ;;		_rule_to_secs
 12580 ;;		_scan_trans
 12581 ;;		_zi_read32
 12582 ;; This function is called by:
 12583 ;;		___localtime_r
 12584 ;; This function uses a reentrant model
 12585 ;;
 12586                           
 12587                           	psect	text38
 12588  015DC2                     __ptext38:
 12589                           	opt callstack 0
 12590  015DC2                     ___secs_to_zone:
 12591                           	opt callstack 0
 12592                           
 12593                           ; autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 18, argsize = 18 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 12594  015DC2  0E18               	movlw	24
 12595  015DC4  26E1               	addwf	fsr1l,f,c
 12596  015DC6  0E00               	movlw	0
 12597  015DC8  22E2               	addwfc	fsr1h,f,c
 12598                           
 12599                           ;incstack = 0
 12600  015DCA  ECBC  F0DE         	call	_do_tzset	;wreg free
 12601  015DCE  0100               	movlb	0	; () banked
 12602  015DD0  51B8               	movf	___daylight& (0+255),w,b
 12603  015DD2  11B9               	iorwf	(___daylight+1)& (0+255),w,b
 12604  015DD4  B4D8               	btfsc	status,2,c
 12605  015DD6  D356               	goto	u16290
 12606                           
 12607                           ; BSR set to: 0
 12608  015DD8  0E58               	movlw	88
 12609  015DDA  6EE6               	movwf	postinc1,c
 12610  015DDC  0E85               	movlw	133
 12611  015DDE  6EE6               	movwf	postinc1,c
 12612  015DE0  0EE1               	movlw	225
 12613  015DE2  6EE6               	movwf	postinc1,c
 12614  015DE4  0E01               	movlw	1
 12615  015DE6  6EE6               	movwf	postinc1,c
 12616  015DE8  0E00               	movlw	0
 12617  015DEA  6EE6               	movwf	postinc1,c
 12618  015DEC  0E00               	movlw	0
 12619  015DEE  6EE6               	movwf	postinc1,c
 12620  015DF0  0E00               	movlw	0
 12621  015DF2  6EE6               	movwf	postinc1,c
 12622  015DF4  0E00               	movlw	0
 12623  015DF6  6EE6               	movwf	postinc1,c
 12624                           
 12625                           ;stkvar	_t @ sp[(-32)+-8]
 12626  015DF8  50E1               	movf	fsr1l,w,c
 12627  015DFA  0FD8               	addlw	-40
 12628  015DFC  6ED9               	movwf	fsr2l,c
 12629  015DFE  50E2               	movf	fsr1h,w,c
 12630  015E00  6EDA               	movwf	fsr2h,c
 12631  015E02  0EFF               	movlw	255
 12632  015E04  22DA               	addwfc	fsr2h,f,c
 12633  015E06  006F FF7B FFE6     	movff	postinc2,postinc1
 12634  015E0C  006F FF7B FFE6     	movff	postinc2,postinc1
 12635  015E12  006F FF7B FFE6     	movff	postinc2,postinc1
 12636  015E18  006F FF7B FFE6     	movff	postinc2,postinc1
 12637  015E1E  006F FF7B FFE6     	movff	postinc2,postinc1
 12638  015E24  006F FF7B FFE6     	movff	postinc2,postinc1
 12639  015E2A  006F FF7B FFE6     	movff	postinc2,postinc1
 12640  015E30  006F FF7B FFE6     	movff	postinc2,postinc1
 12641  015E36  EC3C  F0E1         	call	___aodiv	;wreg free
 12642  015E3A  52E5               	movf	postdec1,f,c
 12643  015E3C  006F FF9C  F041    	movff	indf1,btemp+23
 12644  015E42  52E5               	movf	postdec1,f,c
 12645  015E44  006F FF9C  F040    	movff	indf1,btemp+22
 12646  015E4A  52E5               	movf	postdec1,f,c
 12647  015E4C  006F FF9C  F03F    	movff	indf1,btemp+21
 12648  015E52  52E5               	movf	postdec1,f,c
 12649  015E54  006F FF9C  F03E    	movff	indf1,btemp+20
 12650  015E5A  52E5               	movf	postdec1,f,c
 12651  015E5C  006F FF9C  F03D    	movff	indf1,btemp+19
 12652  015E62  52E5               	movf	postdec1,f,c
 12653  015E64  006F FF9C  F03C    	movff	indf1,btemp+18
 12654  015E6A  52E5               	movf	postdec1,f,c
 12655  015E6C  006F FF9C  F03B    	movff	indf1,btemp+17
 12656  015E72  52E5               	movf	postdec1,f,c
 12657  015E74  006F FF9C  F03A    	movff	indf1,btemp+16
 12658  015E7A  0EF8               	movlw	248
 12659  015E7C  26E1               	addwf	fsr1l,f,c
 12660  015E7E  0EFF               	movlw	255
 12661  015E80  22E2               	addwfc	fsr1h,f,c
 12662  015E82  0E46               	movlw	70
 12663  015E84  243A               	addwf	(btemp+16)^0,w,c
 12664  015E86  6E42               	movwf	(btemp+24)^0,c
 12665  015E88  0E00               	movlw	0
 12666  015E8A  203B               	addwfc	(btemp+17)^0,w,c
 12667  015E8C  6E43               	movwf	(btemp+25)^0,c
 12668  015E8E  0E00               	movlw	0
 12669  015E90  203C               	addwfc	(btemp+18)^0,w,c
 12670  015E92  6E44               	movwf	(btemp+26)^0,c
 12671  015E94  0E00               	movlw	0
 12672  015E96  203D               	addwfc	(btemp+19)^0,w,c
 12673  015E98  6E45               	movwf	(btemp+27)^0,c
 12674  015E9A  0E00               	movlw	0
 12675  015E9C  203E               	addwfc	(btemp+20)^0,w,c
 12676  015E9E  6E46               	movwf	(btemp+28)^0,c
 12677  015EA0  0E00               	movlw	0
 12678  015EA2  203F               	addwfc	(btemp+21)^0,w,c
 12679  015EA4  6E47               	movwf	(btemp+29)^0,c
 12680  015EA6  0E00               	movlw	0
 12681  015EA8  2040               	addwfc	(btemp+22)^0,w,c
 12682  015EAA  6E48               	movwf	(btemp+30)^0,c
 12683  015EAC  0E00               	movlw	0
 12684  015EAE  2041               	addwfc	(btemp+23)^0,w,c
 12685  015EB0  6E49               	movwf	(btemp+31)^0,c
 12686                           
 12687                           ;stkvar	_y @ sp[(-24)+0]
 12688  015EB2  0EE8               	movlw	-24
 12689  015EB4  0060  F10B  FFE3   	movff	btemp+24,plusw1
 12690  015EBA  0EE9               	movlw	-23
 12691  015EBC  0060  F10F  FFE3   	movff	btemp+25,plusw1
 12692  015EC2  0EEA               	movlw	-22
 12693  015EC4  0060  F113  FFE3   	movff	btemp+26,plusw1
 12694  015ECA  0EEB               	movlw	-21
 12695  015ECC  0060  F117  FFE3   	movff	btemp+27,plusw1
 12696  015ED2  0EEC               	movlw	-20
 12697  015ED4  0060  F11B  FFE3   	movff	btemp+28,plusw1
 12698  015EDA  0EED               	movlw	-19
 12699  015EDC  0060  F11F  FFE3   	movff	btemp+29,plusw1
 12700  015EE2  0EEE               	movlw	-18
 12701  015EE4  0060  F123  FFE3   	movff	btemp+30,plusw1
 12702  015EEA  0EEF               	movlw	-17
 12703  015EEC  0060  F127  FFE3   	movff	btemp+31,plusw1
 12704  015EF2  D010               	goto	l16688
 12705  015EF4                     l16686:
 12706                           
 12707                           ;stkvar	_y @ sp[(-24)+0]
 12708  015EF4  50E1               	movf	fsr1l,w,c
 12709  015EF6  0FE8               	addlw	-24
 12710  015EF8  6ED9               	movwf	fsr2l,c
 12711  015EFA  50E2               	movf	fsr1h,w,c
 12712  015EFC  6EDA               	movwf	fsr2h,c
 12713  015EFE  0EFF               	movlw	255
 12714  015F00  22DA               	addwfc	fsr2h,f,c
 12715  015F02  06DE               	decf	postinc2,f,c
 12716  015F04  0E00               	movlw	0
 12717  015F06  5ADE               	subwfb	postinc2,f,c
 12718  015F08  5ADE               	subwfb	postinc2,f,c
 12719  015F0A  5ADE               	subwfb	postinc2,f,c
 12720  015F0C  5ADE               	subwfb	postinc2,f,c
 12721  015F0E  5ADE               	subwfb	postinc2,f,c
 12722  015F10  5ADE               	subwfb	postinc2,f,c
 12723  015F12  5ADE               	subwfb	postinc2,f,c
 12724  015F14                     l16688:
 12725  015F14  0E00               	movlw	0
 12726  015F16  6EE6               	movwf	postinc1,c
 12727  015F18  0E00               	movlw	0
 12728  015F1A  6EE6               	movwf	postinc1,c
 12729                           
 12730                           ;stkvar	_y @ sp[(-26)+0]
 12731  015F1C  50E1               	movf	fsr1l,w,c
 12732  015F1E  0FE6               	addlw	-26
 12733  015F20  6ED9               	movwf	fsr2l,c
 12734  015F22  50E2               	movf	fsr1h,w,c
 12735  015F24  6EDA               	movwf	fsr2h,c
 12736  015F26  0EFF               	movlw	255
 12737  015F28  22DA               	addwfc	fsr2h,f,c
 12738  015F2A  006F FF7B FFE6     	movff	postinc2,postinc1
 12739  015F30  006F FF7B FFE6     	movff	postinc2,postinc1
 12740  015F36  006F FF7B FFE6     	movff	postinc2,postinc1
 12741  015F3C  006F FF7B FFE6     	movff	postinc2,postinc1
 12742  015F42  006F FF7B FFE6     	movff	postinc2,postinc1
 12743  015F48  006F FF7B FFE6     	movff	postinc2,postinc1
 12744  015F4E  006F FF7B FFE6     	movff	postinc2,postinc1
 12745  015F54  006F FF7B FFE6     	movff	postinc2,postinc1
 12746  015F5A  EC28  F0AA         	call	___year_to_secs	;wreg free
 12747  015F5E  52E5               	movf	postdec1,f,c
 12748  015F60  006F FF9C  F041    	movff	indf1,btemp+23
 12749  015F66  52E5               	movf	postdec1,f,c
 12750  015F68  006F FF9C  F040    	movff	indf1,btemp+22
 12751  015F6E  52E5               	movf	postdec1,f,c
 12752  015F70  006F FF9C  F03F    	movff	indf1,btemp+21
 12753  015F76  52E5               	movf	postdec1,f,c
 12754  015F78  006F FF9C  F03E    	movff	indf1,btemp+20
 12755  015F7E  52E5               	movf	postdec1,f,c
 12756  015F80  006F FF9C  F03D    	movff	indf1,btemp+19
 12757  015F86  52E5               	movf	postdec1,f,c
 12758  015F88  006F FF9C  F03C    	movff	indf1,btemp+18
 12759  015F8E  52E5               	movf	postdec1,f,c
 12760  015F90  006F FF9C  F03B    	movff	indf1,btemp+17
 12761  015F96  52E5               	movf	postdec1,f,c
 12762  015F98  006F FF9C  F03A    	movff	indf1,btemp+16
 12763  015F9E  52E5               	movf	postdec1,f,c
 12764  015FA0  52E5               	movf	postdec1,f,c
 12765                           
 12766                           ;stkvar	_t @ sp[(-24)+-8]
 12767  015FA2  0EE0               	movlw	-32
 12768  015FA4  006F FF8C  F02A    	movff	plusw1,btemp
 12769  015FAA  503A               	movf	(btemp+16)^0,w,c
 12770  015FAC  5C2A               	subwf	btemp^0,w,c
 12771  015FAE  0EE1               	movlw	-31
 12772  015FB0  006F FF8C  F02A    	movff	plusw1,btemp
 12773  015FB6  503B               	movf	(btemp+17)^0,w,c
 12774  015FB8  582A               	subwfb	btemp^0,w,c
 12775  015FBA  0EE2               	movlw	-30
 12776  015FBC  006F FF8C  F02A    	movff	plusw1,btemp
 12777  015FC2  503C               	movf	(btemp+18)^0,w,c
 12778  015FC4  582A               	subwfb	btemp^0,w,c
 12779  015FC6  0EE3               	movlw	-29
 12780  015FC8  006F FF8C  F02A    	movff	plusw1,btemp
 12781  015FCE  503D               	movf	(btemp+19)^0,w,c
 12782  015FD0  582A               	subwfb	btemp^0,w,c
 12783  015FD2  0EE4               	movlw	-28
 12784  015FD4  006F FF8C  F02A    	movff	plusw1,btemp
 12785  015FDA  503E               	movf	(btemp+20)^0,w,c
 12786  015FDC  582A               	subwfb	btemp^0,w,c
 12787  015FDE  0EE5               	movlw	-27
 12788  015FE0  006F FF8C  F02A    	movff	plusw1,btemp
 12789  015FE6  503F               	movf	(btemp+21)^0,w,c
 12790  015FE8  582A               	subwfb	btemp^0,w,c
 12791  015FEA  0EE6               	movlw	-26
 12792  015FEC  006F FF8C  F02A    	movff	plusw1,btemp
 12793  015FF2  5040               	movf	(btemp+22)^0,w,c
 12794  015FF4  582A               	subwfb	btemp^0,w,c
 12795  015FF6  0EE7               	movlw	-25
 12796  015FF8  50E3               	movf	plusw1,w,c
 12797  015FFA  0A80               	xorlw	128
 12798  015FFC  6E2A               	movwf	btemp^0,c
 12799  015FFE  5041               	movf	(btemp+23)^0,w,c
 12800  016000  0A80               	xorlw	128
 12801  016002  582A               	subwfb	btemp^0,w,c
 12802  016004  B0D8               	btfsc	status,0,c
 12803  016006  D011               	goto	l16692
 12804  016008  D775               	goto	l16686
 12805  01600A                     l16690:
 12806                           
 12807                           ;stkvar	_y @ sp[(-24)+0]
 12808  01600A  50E1               	movf	fsr1l,w,c
 12809  01600C  0FE8               	addlw	-24
 12810  01600E  6ED9               	movwf	fsr2l,c
 12811  016010  50E2               	movf	fsr1h,w,c
 12812  016012  6EDA               	movwf	fsr2h,c
 12813  016014  0EFF               	movlw	255
 12814  016016  22DA               	addwfc	fsr2h,f,c
 12815  016018  2ADE               	incf	postinc2,f,c
 12816  01601A  0E00               	movlw	0
 12817  01601C  22DE               	addwfc	postinc2,f,c
 12818  01601E  22DE               	addwfc	postinc2,f,c
 12819  016020  22DE               	addwfc	postinc2,f,c
 12820  016022  22DE               	addwfc	postinc2,f,c
 12821  016024  22DE               	addwfc	postinc2,f,c
 12822  016026  22DE               	addwfc	postinc2,f,c
 12823  016028  22DE               	addwfc	postinc2,f,c
 12824  01602A                     l16692:
 12825                           
 12826                           ;stkvar	_t @ sp[(-24)+-8]
 12827  01602A  0E00               	movlw	0
 12828  01602C  6EE6               	movwf	postinc1,c
 12829  01602E  0E00               	movlw	0
 12830  016030  6EE6               	movwf	postinc1,c
 12831                           
 12832                           ;stkvar	_y @ sp[(-26)+0]
 12833  016032  0EE6               	movlw	-26
 12834  016034  50E3               	movf	plusw1,w,c
 12835  016036  0F01               	addlw	1
 12836  016038  6E3A               	movwf	(btemp+16)^0,c
 12837  01603A  0EE7               	movlw	-25
 12838  01603C  006F FF8C  F03B    	movff	plusw1,btemp+17
 12839  016042  0E00               	movlw	0
 12840  016044  223B               	addwfc	(btemp+17)^0,f,c
 12841  016046  0EE8               	movlw	-24
 12842  016048  006F FF8C  F03C    	movff	plusw1,btemp+18
 12843  01604E  0E00               	movlw	0
 12844  016050  223C               	addwfc	(btemp+18)^0,f,c
 12845  016052  0EE9               	movlw	-23
 12846  016054  006F FF8C  F03D    	movff	plusw1,btemp+19
 12847  01605A  0E00               	movlw	0
 12848  01605C  223D               	addwfc	(btemp+19)^0,f,c
 12849  01605E  0EEA               	movlw	-22
 12850  016060  006F FF8C  F03E    	movff	plusw1,btemp+20
 12851  016066  0E00               	movlw	0
 12852  016068  223E               	addwfc	(btemp+20)^0,f,c
 12853  01606A  0EEB               	movlw	-21
 12854  01606C  006F FF8C  F03F    	movff	plusw1,btemp+21
 12855  016072  0E00               	movlw	0
 12856  016074  223F               	addwfc	(btemp+21)^0,f,c
 12857  016076  0EEC               	movlw	-20
 12858  016078  006F FF8C  F040    	movff	plusw1,btemp+22
 12859  01607E  0E00               	movlw	0
 12860  016080  2240               	addwfc	(btemp+22)^0,f,c
 12861  016082  0EED               	movlw	-19
 12862  016084  006F FF8C  F041    	movff	plusw1,btemp+23
 12863  01608A  0E00               	movlw	0
 12864  01608C  2241               	addwfc	(btemp+23)^0,f,c
 12865  01608E  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 12866  016094  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 12867  01609A  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 12868  0160A0  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 12869  0160A6  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 12870  0160AC  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 12871  0160B2  0060  F103  FFE6   	movff	btemp+22,postinc1
 12872  0160B8  0060  F107  FFE6   	movff	btemp+23,postinc1
 12873  0160BE  EC28  F0AA         	call	___year_to_secs	;wreg free
 12874  0160C2  52E5               	movf	postdec1,f,c
 12875  0160C4  006F FF9C  F041    	movff	indf1,btemp+23
 12876  0160CA  52E5               	movf	postdec1,f,c
 12877  0160CC  006F FF9C  F040    	movff	indf1,btemp+22
 12878  0160D2  52E5               	movf	postdec1,f,c
 12879  0160D4  006F FF9C  F03F    	movff	indf1,btemp+21
 12880  0160DA  52E5               	movf	postdec1,f,c
 12881  0160DC  006F FF9C  F03E    	movff	indf1,btemp+20
 12882  0160E2  52E5               	movf	postdec1,f,c
 12883  0160E4  006F FF9C  F03D    	movff	indf1,btemp+19
 12884  0160EA  52E5               	movf	postdec1,f,c
 12885  0160EC  006F FF9C  F03C    	movff	indf1,btemp+18
 12886  0160F2  52E5               	movf	postdec1,f,c
 12887  0160F4  006F FF9C  F03B    	movff	indf1,btemp+17
 12888  0160FA  52E5               	movf	postdec1,f,c
 12889  0160FC  006F FF9C  F03A    	movff	indf1,btemp+16
 12890  016102  52E5               	movf	postdec1,f,c
 12891  016104  52E5               	movf	postdec1,f,c
 12892  016106  0EE0               	movlw	-32
 12893  016108  50E3               	movf	plusw1,w,c
 12894  01610A  5C3A               	subwf	(btemp+16)^0,w,c
 12895  01610C  0EE1               	movlw	-31
 12896  01610E  50E3               	movf	plusw1,w,c
 12897  016110  583B               	subwfb	(btemp+17)^0,w,c
 12898  016112  0EE2               	movlw	-30
 12899  016114  50E3               	movf	plusw1,w,c
 12900  016116  583C               	subwfb	(btemp+18)^0,w,c
 12901  016118  0EE3               	movlw	-29
 12902  01611A  50E3               	movf	plusw1,w,c
 12903  01611C  583D               	subwfb	(btemp+19)^0,w,c
 12904  01611E  0EE4               	movlw	-28
 12905  016120  50E3               	movf	plusw1,w,c
 12906  016122  583E               	subwfb	(btemp+20)^0,w,c
 12907  016124  0EE5               	movlw	-27
 12908  016126  50E3               	movf	plusw1,w,c
 12909  016128  583F               	subwfb	(btemp+21)^0,w,c
 12910  01612A  0EE6               	movlw	-26
 12911  01612C  50E3               	movf	plusw1,w,c
 12912  01612E  5840               	subwfb	(btemp+22)^0,w,c
 12913  016130  5041               	movf	(btemp+23)^0,w,c
 12914  016132  0A80               	xorlw	128
 12915  016134  6E2A               	movwf	btemp^0,c
 12916  016136  0EE7               	movlw	-25
 12917  016138  50E3               	movf	plusw1,w,c
 12918  01613A  0A80               	xorlw	128
 12919  01613C  582A               	subwfb	btemp^0,w,c
 12920  01613E  A0D8               	btfss	status,0,c
 12921  016140  D764               	goto	l16690
 12922                           
 12923                           ;stkvar	_y @ sp[(-24)+0]
 12924  016142  0EE8               	movlw	-24
 12925  016144  006F FF8F FFE6     	movff	plusw1,postinc1
 12926  01614A  006F FF8F FFE6     	movff	plusw1,postinc1
 12927  016150  0EE5               	movlw	low _r0
 12928  016152  6EE6               	movwf	postinc1,c
 12929  016154  0E01               	movlw	high _r0
 12930  016156  6EE6               	movwf	postinc1,c
 12931  016158  EC25  F0BB         	call	_rule_to_secs	;wreg free
 12932  01615C  52E5               	movf	postdec1,f,c
 12933  01615E  006F FF9C  F041    	movff	indf1,btemp+23
 12934  016164  52E5               	movf	postdec1,f,c
 12935  016166  006F FF9C  F040    	movff	indf1,btemp+22
 12936  01616C  52E5               	movf	postdec1,f,c
 12937  01616E  006F FF9C  F03F    	movff	indf1,btemp+21
 12938  016174  52E5               	movf	postdec1,f,c
 12939  016176  006F FF9C  F03E    	movff	indf1,btemp+20
 12940  01617C  52E5               	movf	postdec1,f,c
 12941  01617E  006F FF9C  F03D    	movff	indf1,btemp+19
 12942  016184  52E5               	movf	postdec1,f,c
 12943  016186  006F FF9C  F03C    	movff	indf1,btemp+18
 12944  01618C  52E5               	movf	postdec1,f,c
 12945  01618E  006F FF9C  F03B    	movff	indf1,btemp+17
 12946  016194  52E5               	movf	postdec1,f,c
 12947  016196  006F FF9C  F03A    	movff	indf1,btemp+16
 12948                           
 12949                           ;stkvar	_t0 @ sp[(-24)+16]
 12950  01619C  0EF8               	movlw	-8
 12951  01619E  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 12952  0161A4  0EF9               	movlw	-7
 12953  0161A6  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 12954  0161AC  0EFA               	movlw	-6
 12955  0161AE  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 12956  0161B4  0EFB               	movlw	-5
 12957  0161B6  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 12958  0161BC  0EFC               	movlw	-4
 12959  0161BE  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 12960  0161C4  0EFD               	movlw	-3
 12961  0161C6  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 12962  0161CC  0EFE               	movlw	-2
 12963  0161CE  0060  F103  FFE3   	movff	btemp+22,plusw1
 12964  0161D4  0EFF               	movlw	-1
 12965  0161D6  0060  F107  FFE3   	movff	btemp+23,plusw1
 12966                           
 12967                           ;stkvar	_y @ sp[(-24)+0]
 12968  0161DC  0EE8               	movlw	-24
 12969  0161DE  006F FF8F FFE6     	movff	plusw1,postinc1
 12970  0161E4  006F FF8F FFE6     	movff	plusw1,postinc1
 12971  0161EA  0EDB               	movlw	low _r1
 12972  0161EC  6EE6               	movwf	postinc1,c
 12973  0161EE  0E01               	movlw	high _r1
 12974  0161F0  6EE6               	movwf	postinc1,c
 12975  0161F2  EC25  F0BB         	call	_rule_to_secs	;wreg free
 12976  0161F6  52E5               	movf	postdec1,f,c
 12977  0161F8  006F FF9C  F041    	movff	indf1,btemp+23
 12978  0161FE  52E5               	movf	postdec1,f,c
 12979  016200  006F FF9C  F040    	movff	indf1,btemp+22
 12980  016206  52E5               	movf	postdec1,f,c
 12981  016208  006F FF9C  F03F    	movff	indf1,btemp+21
 12982  01620E  52E5               	movf	postdec1,f,c
 12983  016210  006F FF9C  F03E    	movff	indf1,btemp+20
 12984  016216  52E5               	movf	postdec1,f,c
 12985  016218  006F FF9C  F03D    	movff	indf1,btemp+19
 12986  01621E  52E5               	movf	postdec1,f,c
 12987  016220  006F FF9C  F03C    	movff	indf1,btemp+18
 12988  016226  52E5               	movf	postdec1,f,c
 12989  016228  006F FF9C  F03B    	movff	indf1,btemp+17
 12990  01622E  52E5               	movf	postdec1,f,c
 12991  016230  006F FF9C  F03A    	movff	indf1,btemp+16
 12992                           
 12993                           ;stkvar	_t1 @ sp[(-24)+8]
 12994  016236  0EF0               	movlw	-16
 12995  016238  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 12996  01623E  0EF1               	movlw	-15
 12997  016240  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 12998  016246  0EF2               	movlw	-14
 12999  016248  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 13000  01624E  0EF3               	movlw	-13
 13001  016250  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 13002  016256  0EF4               	movlw	-12
 13003  016258  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 13004  01625E  0EF5               	movlw	-11
 13005  016260  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 13006  016266  0EF6               	movlw	-10
 13007  016268  0060  F103  FFE3   	movff	btemp+22,plusw1
 13008  01626E  0EF7               	movlw	-9
 13009  016270  0060  F107  FFE3   	movff	btemp+23,plusw1
 13010                           
 13011                           ;stkvar	_local @ sp[(-24)+-10]
 13012  016276  0EDE               	movlw	-34
 13013  016278  006F FF8C  F02A    	movff	plusw1,btemp
 13014  01627E  0EDF               	movlw	-33
 13015  016280  50E3               	movf	plusw1,w,c
 13016  016282  102A               	iorwf	btemp^0,w,c
 13017  016284  A4D8               	btfss	status,2,c
 13018  016286  D044               	goto	l16702
 13019  016288  0060  F1C0  F03A   	movff	___timezone,btemp+16
 13020  01628E  0060  F1C4  F03B   	movff	___timezone+1,btemp+17
 13021  016294  0060  F1C8  F03C   	movff	___timezone+2,btemp+18
 13022  01629A  0060  F1CC  F03D   	movff	___timezone+3,btemp+19
 13023  0162A0  6A3E               	clrf	(btemp+20)^0,c
 13024  0162A2  BE3D               	btfsc	(btemp+19)^0,7,c
 13025  0162A4  683E               	setf	(btemp+20)^0,c
 13026  0162A6  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 13027  0162AC  0060  F0F8  F040   	movff	btemp+20,btemp+22
 13028  0162B2  0060  F0F8  F041   	movff	btemp+20,btemp+23
 13029                           
 13030                           ;stkvar	_t0 @ sp[(-24)+16]
 13031  0162B8  50E1               	movf	fsr1l,w,c
 13032  0162BA  0FF8               	addlw	-8
 13033  0162BC  6ED9               	movwf	fsr2l,c
 13034  0162BE  50E2               	movf	fsr1h,w,c
 13035  0162C0  6EDA               	movwf	fsr2h,c
 13036  0162C2  0EFF               	movlw	255
 13037  0162C4  22DA               	addwfc	fsr2h,f,c
 13038  0162C6  503A               	movf	(btemp+16)^0,w,c
 13039  0162C8  26DE               	addwf	postinc2,f,c
 13040  0162CA  503B               	movf	(btemp+17)^0,w,c
 13041  0162CC  22DE               	addwfc	postinc2,f,c
 13042  0162CE  503C               	movf	(btemp+18)^0,w,c
 13043  0162D0  22DE               	addwfc	postinc2,f,c
 13044  0162D2  503D               	movf	(btemp+19)^0,w,c
 13045  0162D4  22DE               	addwfc	postinc2,f,c
 13046  0162D6  503E               	movf	(btemp+20)^0,w,c
 13047  0162D8  22DE               	addwfc	postinc2,f,c
 13048  0162DA  503F               	movf	(btemp+21)^0,w,c
 13049  0162DC  22DE               	addwfc	postinc2,f,c
 13050  0162DE  5040               	movf	(btemp+22)^0,w,c
 13051  0162E0  22DE               	addwfc	postinc2,f,c
 13052  0162E2  5041               	movf	(btemp+23)^0,w,c
 13053  0162E4  22DE               	addwfc	postinc2,f,c
 13054                           
 13055                           ;stkvar	_t1 @ sp[(-24)+8]
 13056  0162E6  50E1               	movf	fsr1l,w,c
 13057  0162E8  0FF0               	addlw	-16
 13058  0162EA  6ED9               	movwf	fsr2l,c
 13059  0162EC  50E2               	movf	fsr1h,w,c
 13060  0162EE  6EDA               	movwf	fsr2h,c
 13061  0162F0  0EFF               	movlw	255
 13062  0162F2  22DA               	addwfc	fsr2h,f,c
 13063  0162F4  0100               	movlb	0	; () banked
 13064  0162F6  51B6               	movf	_dst_off& (0+255),w,b
 13065  0162F8  26DE               	addwf	postinc2,f,c
 13066  0162FA  51B7               	movf	(_dst_off+1)& (0+255),w,b
 13067  0162FC  22DE               	addwfc	postinc2,f,c
 13068  0162FE  0E00               	movlw	0
 13069  016300  BFB7               	btfsc	(_dst_off+1)& (0+255),7,b
 13070  016302  0EFF               	movlw	255
 13071  016304  22DE               	addwfc	postinc2,f,c
 13072  016306  22DE               	addwfc	postinc2,f,c
 13073  016308  22DE               	addwfc	postinc2,f,c
 13074  01630A  22DE               	addwfc	postinc2,f,c
 13075  01630C  22DE               	addwfc	postinc2,f,c
 13076  01630E  22DE               	addwfc	postinc2,f,c
 13077  016310                     l16702:
 13078                           
 13079                           ;stkvar	_t1 @ sp[(-24)+8]
 13080                           ;stkvar	_t0 @ sp[(-24)+16]
 13081  016310  50E1               	movf	fsr1l,w,c
 13082  016312  0FF8               	addlw	-8
 13083  016314  6ED9               	movwf	fsr2l,c
 13084  016316  50E2               	movf	fsr1h,w,c
 13085  016318  6EDA               	movwf	fsr2h,c
 13086  01631A  0EFF               	movlw	255
 13087  01631C  22DA               	addwfc	fsr2h,f,c
 13088  01631E  0EF0               	movlw	-16
 13089  016320  50E3               	movf	plusw1,w,c
 13090  016322  5CDE               	subwf	postinc2,w,c
 13091  016324  0EF1               	movlw	-15
 13092  016326  50E3               	movf	plusw1,w,c
 13093  016328  58DE               	subwfb	postinc2,w,c
 13094  01632A  0EF2               	movlw	-14
 13095  01632C  50E3               	movf	plusw1,w,c
 13096  01632E  58DE               	subwfb	postinc2,w,c
 13097  016330  0EF3               	movlw	-13
 13098  016332  50E3               	movf	plusw1,w,c
 13099  016334  58DE               	subwfb	postinc2,w,c
 13100  016336  0EF4               	movlw	-12
 13101  016338  50E3               	movf	plusw1,w,c
 13102  01633A  58DE               	subwfb	postinc2,w,c
 13103  01633C  0EF5               	movlw	-11
 13104  01633E  50E3               	movf	plusw1,w,c
 13105  016340  58DE               	subwfb	postinc2,w,c
 13106  016342  0EF6               	movlw	-10
 13107  016344  50E3               	movf	plusw1,w,c
 13108  016346  58DE               	subwfb	postinc2,w,c
 13109  016348  50DE               	movf	postinc2,w,c
 13110  01634A  0A80               	xorlw	128
 13111  01634C  6E2A               	movwf	btemp^0,c
 13112  01634E  0EF7               	movlw	-9
 13113  016350  50E3               	movf	plusw1,w,c
 13114  016352  0A80               	xorlw	128
 13115  016354  582A               	subwfb	btemp^0,w,c
 13116  016356  B0D8               	btfsc	status,0,c
 13117  016358  D04B               	goto	l16712
 13118                           
 13119                           ;stkvar	_t0 @ sp[(-24)+16]
 13120                           ;stkvar	_t @ sp[(-24)+-8]
 13121  01635A  50E1               	movf	fsr1l,w,c
 13122  01635C  0FE0               	addlw	-32
 13123  01635E  6ED9               	movwf	fsr2l,c
 13124  016360  50E2               	movf	fsr1h,w,c
 13125  016362  6EDA               	movwf	fsr2h,c
 13126  016364  0EFF               	movlw	255
 13127  016366  22DA               	addwfc	fsr2h,f,c
 13128  016368  0EF8               	movlw	-8
 13129  01636A  50E3               	movf	plusw1,w,c
 13130  01636C  5CDE               	subwf	postinc2,w,c
 13131  01636E  0EF9               	movlw	-7
 13132  016370  50E3               	movf	plusw1,w,c
 13133  016372  58DE               	subwfb	postinc2,w,c
 13134  016374  0EFA               	movlw	-6
 13135  016376  50E3               	movf	plusw1,w,c
 13136  016378  58DE               	subwfb	postinc2,w,c
 13137  01637A  0EFB               	movlw	-5
 13138  01637C  50E3               	movf	plusw1,w,c
 13139  01637E  58DE               	subwfb	postinc2,w,c
 13140  016380  0EFC               	movlw	-4
 13141  016382  50E3               	movf	plusw1,w,c
 13142  016384  58DE               	subwfb	postinc2,w,c
 13143  016386  0EFD               	movlw	-3
 13144  016388  50E3               	movf	plusw1,w,c
 13145  01638A  58DE               	subwfb	postinc2,w,c
 13146  01638C  0EFE               	movlw	-2
 13147  01638E  50E3               	movf	plusw1,w,c
 13148  016390  58DE               	subwfb	postinc2,w,c
 13149  016392  50DE               	movf	postinc2,w,c
 13150  016394  0A80               	xorlw	128
 13151  016396  6E2A               	movwf	btemp^0,c
 13152  016398  0EFF               	movlw	-1
 13153  01639A  50E3               	movf	plusw1,w,c
 13154  01639C  0A80               	xorlw	128
 13155  01639E  582A               	subwfb	btemp^0,w,c
 13156  0163A0  A0D8               	btfss	status,0,c
 13157  0163A2  D070               	goto	u16290
 13158                           
 13159                           ;stkvar	_t1 @ sp[(-24)+8]
 13160                           ;stkvar	_t @ sp[(-24)+-8]
 13161  0163A4  50E1               	movf	fsr1l,w,c
 13162  0163A6  0FE0               	addlw	-32
 13163  0163A8  6ED9               	movwf	fsr2l,c
 13164  0163AA  50E2               	movf	fsr1h,w,c
 13165  0163AC  6EDA               	movwf	fsr2h,c
 13166  0163AE  0EFF               	movlw	255
 13167  0163B0  22DA               	addwfc	fsr2h,f,c
 13168  0163B2  0EF0               	movlw	-16
 13169  0163B4  50E3               	movf	plusw1,w,c
 13170  0163B6  5CDE               	subwf	postinc2,w,c
 13171  0163B8  0EF1               	movlw	-15
 13172  0163BA  50E3               	movf	plusw1,w,c
 13173  0163BC  58DE               	subwfb	postinc2,w,c
 13174  0163BE  0EF2               	movlw	-14
 13175  0163C0  50E3               	movf	plusw1,w,c
 13176  0163C2  58DE               	subwfb	postinc2,w,c
 13177  0163C4  0EF3               	movlw	-13
 13178  0163C6  50E3               	movf	plusw1,w,c
 13179  0163C8  58DE               	subwfb	postinc2,w,c
 13180  0163CA  0EF4               	movlw	-12
 13181  0163CC  50E3               	movf	plusw1,w,c
 13182  0163CE  58DE               	subwfb	postinc2,w,c
 13183  0163D0  0EF5               	movlw	-11
 13184  0163D2  50E3               	movf	plusw1,w,c
 13185  0163D4  58DE               	subwfb	postinc2,w,c
 13186  0163D6  0EF6               	movlw	-10
 13187  0163D8  50E3               	movf	plusw1,w,c
 13188  0163DA  58DE               	subwfb	postinc2,w,c
 13189  0163DC  50DE               	movf	postinc2,w,c
 13190  0163DE  0A80               	xorlw	128
 13191  0163E0  6E2A               	movwf	btemp^0,c
 13192  0163E2  0EF7               	movlw	-9
 13193  0163E4  50E3               	movf	plusw1,w,c
 13194  0163E6  0A80               	xorlw	128
 13195  0163E8  582A               	subwfb	btemp^0,w,c
 13196  0163EA  A0D8               	btfss	status,0,c
 13197  0163EC  D0C1               	goto	l16730
 13198  0163EE  D04A               	goto	u16290
 13199  0163F0                     l16712:
 13200                           
 13201                           ;stkvar	_t1 @ sp[(-24)+8]
 13202                           ;stkvar	_t @ sp[(-24)+-8]
 13203  0163F0  50E1               	movf	fsr1l,w,c
 13204  0163F2  0FE0               	addlw	-32
 13205  0163F4  6ED9               	movwf	fsr2l,c
 13206  0163F6  50E2               	movf	fsr1h,w,c
 13207  0163F8  6EDA               	movwf	fsr2h,c
 13208  0163FA  0EFF               	movlw	255
 13209  0163FC  22DA               	addwfc	fsr2h,f,c
 13210  0163FE  0EF0               	movlw	-16
 13211  016400  50E3               	movf	plusw1,w,c
 13212  016402  5CDE               	subwf	postinc2,w,c
 13213  016404  0EF1               	movlw	-15
 13214  016406  50E3               	movf	plusw1,w,c
 13215  016408  58DE               	subwfb	postinc2,w,c
 13216  01640A  0EF2               	movlw	-14
 13217  01640C  50E3               	movf	plusw1,w,c
 13218  01640E  58DE               	subwfb	postinc2,w,c
 13219  016410  0EF3               	movlw	-13
 13220  016412  50E3               	movf	plusw1,w,c
 13221  016414  58DE               	subwfb	postinc2,w,c
 13222  016416  0EF4               	movlw	-12
 13223  016418  50E3               	movf	plusw1,w,c
 13224  01641A  58DE               	subwfb	postinc2,w,c
 13225  01641C  0EF5               	movlw	-11
 13226  01641E  50E3               	movf	plusw1,w,c
 13227  016420  58DE               	subwfb	postinc2,w,c
 13228  016422  0EF6               	movlw	-10
 13229  016424  50E3               	movf	plusw1,w,c
 13230  016426  58DE               	subwfb	postinc2,w,c
 13231  016428  50DE               	movf	postinc2,w,c
 13232  01642A  0A80               	xorlw	128
 13233  01642C  6E2A               	movwf	btemp^0,c
 13234  01642E  0EF7               	movlw	-9
 13235  016430  50E3               	movf	plusw1,w,c
 13236  016432  0A80               	xorlw	128
 13237  016434  582A               	subwfb	btemp^0,w,c
 13238  016436  A0D8               	btfss	status,0,c
 13239  016438  D09B               	goto	l16730
 13240                           
 13241                           ;stkvar	_t0 @ sp[(-24)+16]
 13242                           ;stkvar	_t @ sp[(-24)+-8]
 13243  01643A  50E1               	movf	fsr1l,w,c
 13244  01643C  0FE0               	addlw	-32
 13245  01643E  6ED9               	movwf	fsr2l,c
 13246  016440  50E2               	movf	fsr1h,w,c
 13247  016442  6EDA               	movwf	fsr2h,c
 13248  016444  0EFF               	movlw	255
 13249  016446  22DA               	addwfc	fsr2h,f,c
 13250  016448  0EF8               	movlw	-8
 13251  01644A  50E3               	movf	plusw1,w,c
 13252  01644C  5CDE               	subwf	postinc2,w,c
 13253  01644E  0EF9               	movlw	-7
 13254  016450  50E3               	movf	plusw1,w,c
 13255  016452  58DE               	subwfb	postinc2,w,c
 13256  016454  0EFA               	movlw	-6
 13257  016456  50E3               	movf	plusw1,w,c
 13258  016458  58DE               	subwfb	postinc2,w,c
 13259  01645A  0EFB               	movlw	-5
 13260  01645C  50E3               	movf	plusw1,w,c
 13261  01645E  58DE               	subwfb	postinc2,w,c
 13262  016460  0EFC               	movlw	-4
 13263  016462  50E3               	movf	plusw1,w,c
 13264  016464  58DE               	subwfb	postinc2,w,c
 13265  016466  0EFD               	movlw	-3
 13266  016468  50E3               	movf	plusw1,w,c
 13267  01646A  58DE               	subwfb	postinc2,w,c
 13268  01646C  0EFE               	movlw	-2
 13269  01646E  50E3               	movf	plusw1,w,c
 13270  016470  58DE               	subwfb	postinc2,w,c
 13271  016472  50DE               	movf	postinc2,w,c
 13272  016474  0A80               	xorlw	128
 13273  016476  6E2A               	movwf	btemp^0,c
 13274  016478  0EFF               	movlw	-1
 13275  01647A  50E3               	movf	plusw1,w,c
 13276  01647C  0A80               	xorlw	128
 13277  01647E  582A               	subwfb	btemp^0,w,c
 13278  016480  B0D8               	btfsc	status,0,c
 13279  016482  D076               	goto	l16730
 13280  016484                     u16290:
 13281                           
 13282                           ;stkvar	_isdst @ sp[(-24)+-12]
 13283  016484  0EDC               	movlw	-36
 13284  016486  006F FF8F FFD9     	movff	plusw1,fsr2l
 13285  01648C  0EDD               	movlw	-35
 13286  01648E  006F FF8F FFDA     	movff	plusw1,fsr2h
 13287  016494  0E00               	movlw	0
 13288  016496  6EDE               	movwf	postinc2,c
 13289  016498  0E00               	movlw	0
 13290  01649A  6EDD               	movwf	postdec2,c
 13291  01649C  0060  F1C0  F032   	movff	___timezone,btemp+8
 13292  0164A2  0060  F1C4  F033   	movff	___timezone+1,btemp+9
 13293  0164A8  0060  F1C8  F034   	movff	___timezone+2,btemp+10
 13294  0164AE  0060  F1CC  F035   	movff	___timezone+3,btemp+11
 13295  0164B4  1E32               	comf	(btemp+8)^0,f,c
 13296  0164B6  1E33               	comf	(btemp+9)^0,f,c
 13297  0164B8  1E34               	comf	(btemp+10)^0,f,c
 13298  0164BA  1E35               	comf	(btemp+11)^0,f,c
 13299  0164BC  2A32               	incf	(btemp+8)^0,f,c
 13300  0164BE  0E00               	movlw	0
 13301  0164C0  2233               	addwfc	(btemp+9)^0,f,c
 13302  0164C2  2234               	addwfc	(btemp+10)^0,f,c
 13303  0164C4  2235               	addwfc	(btemp+11)^0,f,c
 13304                           
 13305                           ;stkvar	_offset @ sp[(-24)+-14]
 13306  0164C6  0EDA               	movlw	-38
 13307  0164C8  006F FF8F FFD9     	movff	plusw1,fsr2l
 13308  0164CE  0EDB               	movlw	-37
 13309  0164D0  006F FF8F FFDA     	movff	plusw1,fsr2h
 13310  0164D6  0060  F0CB  FFDE   	movff	btemp+8,postinc2
 13311  0164DC  0060  F0CF  FFDE   	movff	btemp+9,postinc2
 13312  0164E2  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 13313  0164E8  0060  F0D7  FFDE   	movff	btemp+11,postinc2
 13314                           
 13315                           ;stkvar	_oppoff @ sp[(-24)+-16]
 13316  0164EE  0ED8               	movlw	-40
 13317  0164F0  006F FF8C  F02A    	movff	plusw1,btemp
 13318  0164F6  0ED9               	movlw	-39
 13319  0164F8  50E3               	movf	plusw1,w,c
 13320  0164FA  102A               	iorwf	btemp^0,w,c
 13321  0164FC  B4D8               	btfsc	status,2,c
 13322  0164FE  D029               	goto	l16726
 13323  016500  0060  F2D8  F034   	movff	_dst_off,btemp+10
 13324  016506  0060  F2DC  F035   	movff	_dst_off+1,btemp+11
 13325  01650C  1E34               	comf	(btemp+10)^0,f,c
 13326  01650E  1E35               	comf	(btemp+11)^0,f,c
 13327  016510  4A34               	infsnz	(btemp+10)^0,f,c
 13328  016512  2A35               	incf	(btemp+11)^0,f,c
 13329  016514  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 13330  01651A  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 13331  016520  0E00               	movlw	0
 13332  016522  BE2F               	btfsc	(btemp+5)^0,7,c
 13333  016524  0EFF               	movlw	255
 13334  016526  6E30               	movwf	(btemp+6)^0,c
 13335  016528  6E31               	movwf	(btemp+7)^0,c
 13336                           
 13337                           ;stkvar	_oppoff @ sp[(-24)+-16]
 13338  01652A  0ED8               	movlw	-40
 13339  01652C  006F FF8F FFD9     	movff	plusw1,fsr2l
 13340  016532  0ED9               	movlw	-39
 13341  016534  006F FF8F FFDA     	movff	plusw1,fsr2h
 13342  01653A  0060  F0BB  FFDE   	movff	btemp+4,postinc2
 13343  016540  0060  F0BF  FFDE   	movff	btemp+5,postinc2
 13344  016546  0060  F0C3  FFDE   	movff	btemp+6,postinc2
 13345  01654C  0060  F0C7  FFDE   	movff	btemp+7,postinc2
 13346  016552                     l16726:
 13347                           
 13348                           ;stkvar	_zonename @ sp[(-24)+-18]
 13349  016552  0ED6               	movlw	-42
 13350  016554  006F FF8F FFD9     	movff	plusw1,fsr2l
 13351  01655A  0ED7               	movlw	-41
 13352  01655C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13353  016562  0060  F1B3  FFDE   	movff	___tzname,postinc2
 13354  016568  0060  F1B7  FFDD   	movff	___tzname+1,postdec2
 13355  01656E  D075               	goto	l4033
 13356  016570                     l16730:
 13357                           
 13358                           ;stkvar	_isdst @ sp[(-24)+-12]
 13359  016570  0EDC               	movlw	-36
 13360  016572  006F FF8F FFD9     	movff	plusw1,fsr2l
 13361  016578  0EDD               	movlw	-35
 13362  01657A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13363  016580  0E01               	movlw	1
 13364  016582  6EDE               	movwf	postinc2,c
 13365  016584  0E00               	movlw	0
 13366  016586  6EDD               	movwf	postdec2,c
 13367  016588  0060  F2D8  F034   	movff	_dst_off,btemp+10
 13368  01658E  0060  F2DC  F035   	movff	_dst_off+1,btemp+11
 13369  016594  1E34               	comf	(btemp+10)^0,f,c
 13370  016596  1E35               	comf	(btemp+11)^0,f,c
 13371  016598  4A34               	infsnz	(btemp+10)^0,f,c
 13372  01659A  2A35               	incf	(btemp+11)^0,f,c
 13373  01659C  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 13374  0165A2  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 13375  0165A8  0E00               	movlw	0
 13376  0165AA  BE2F               	btfsc	(btemp+5)^0,7,c
 13377  0165AC  0EFF               	movlw	255
 13378  0165AE  6E30               	movwf	(btemp+6)^0,c
 13379  0165B0  6E31               	movwf	(btemp+7)^0,c
 13380                           
 13381                           ;stkvar	_offset @ sp[(-24)+-14]
 13382  0165B2  0EDA               	movlw	-38
 13383  0165B4  006F FF8F FFD9     	movff	plusw1,fsr2l
 13384  0165BA  0EDB               	movlw	-37
 13385  0165BC  006F FF8F FFDA     	movff	plusw1,fsr2h
 13386  0165C2  0060  F0BB  FFDE   	movff	btemp+4,postinc2
 13387  0165C8  0060  F0BF  FFDE   	movff	btemp+5,postinc2
 13388  0165CE  0060  F0C3  FFDE   	movff	btemp+6,postinc2
 13389  0165D4  0060  F0C7  FFDE   	movff	btemp+7,postinc2
 13390                           
 13391                           ;stkvar	_oppoff @ sp[(-24)+-16]
 13392  0165DA  0ED8               	movlw	-40
 13393  0165DC  006F FF8C  F02A    	movff	plusw1,btemp
 13394  0165E2  0ED9               	movlw	-39
 13395  0165E4  50E3               	movf	plusw1,w,c
 13396  0165E6  102A               	iorwf	btemp^0,w,c
 13397  0165E8  B4D8               	btfsc	status,2,c
 13398  0165EA  D029               	goto	l16738
 13399  0165EC  0060  F1C0  F032   	movff	___timezone,btemp+8
 13400  0165F2  0060  F1C4  F033   	movff	___timezone+1,btemp+9
 13401  0165F8  0060  F1C8  F034   	movff	___timezone+2,btemp+10
 13402  0165FE  0060  F1CC  F035   	movff	___timezone+3,btemp+11
 13403  016604  1E32               	comf	(btemp+8)^0,f,c
 13404  016606  1E33               	comf	(btemp+9)^0,f,c
 13405  016608  1E34               	comf	(btemp+10)^0,f,c
 13406  01660A  1E35               	comf	(btemp+11)^0,f,c
 13407  01660C  2A32               	incf	(btemp+8)^0,f,c
 13408  01660E  0E00               	movlw	0
 13409  016610  2233               	addwfc	(btemp+9)^0,f,c
 13410  016612  2234               	addwfc	(btemp+10)^0,f,c
 13411  016614  2235               	addwfc	(btemp+11)^0,f,c
 13412                           
 13413                           ;stkvar	_oppoff @ sp[(-24)+-16]
 13414  016616  0ED8               	movlw	-40
 13415  016618  006F FF8F FFD9     	movff	plusw1,fsr2l
 13416  01661E  0ED9               	movlw	-39
 13417  016620  006F FF8F FFDA     	movff	plusw1,fsr2h
 13418  016626  0060  F0CB  FFDE   	movff	btemp+8,postinc2
 13419  01662C  0060  F0CF  FFDE   	movff	btemp+9,postinc2
 13420  016632  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 13421  016638  0060  F0D7  FFDE   	movff	btemp+11,postinc2
 13422  01663E                     l16738:
 13423                           
 13424                           ;stkvar	_zonename @ sp[(-24)+-18]
 13425  01663E  0ED6               	movlw	-42
 13426  016640  006F FF8F FFD9     	movff	plusw1,fsr2l
 13427  016646  0ED7               	movlw	-41
 13428  016648  006F FF8F FFDA     	movff	plusw1,fsr2h
 13429  01664E  0060  F1BB  FFDE   	movff	___tzname+2,postinc2
 13430  016654  0060  F1BF  FFDD   	movff	___tzname+3,postdec2
 13431  01665A                     l4033:
 13432                           
 13433                           ; ___secs_to_zone: autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          18, argsize = 18, vargsize = 0
 13434  01665A  0ED6               	movlw	214
 13435  01665C  26E1               	addwf	fsr1l,f,c
 13436  01665E  0EFF               	movlw	255
 13437  016660  22E2               	addwfc	fsr1h,f,c
 13438  016662  0012               	return		;funcret
 13439  016664                     __end_of___secs_to_zone:
 13440                           	opt callstack 0
 13441                           
 13442 ;; *************** function _scan_trans *****************
 13443 ;; Defined at:
 13444 ;;		line 145 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 13445 ;; Parameters:    Size  Location     Type
 13446 ;;  t               8  [STACK] long long 
 13447 ;;  local           2  [STACK] int 
 13448 ;;  alt             2  [STACK] PTR unsigned int 
 13449 ;;		 -> alt(2), 
 13450 ;; Auto vars:     Size  Location     Type
 13451 ;;  x               8    0        unsigned long long 
 13452 ;;  a               2    0        unsigned int 
 13453 ;;  scale           2    0        int 
 13454 ;;  n               2    0        unsigned int 
 13455 ;;  m               2    0        unsigned int 
 13456 ;;  off             2    0        int 
 13457 ;; Return value:  Size  Location     Type
 13458 ;;                  2  [STACK] unsigned int 
 13459 ;; Registers used:
 13460 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 13461 ;; Tracked objects:
 13462 ;;		On entry : 0/0
 13463 ;;		On exit  : 0/0
 13464 ;;		Unchanged: 0/0
 13465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13470 ;;Total ram usage:        0 bytes
 13471 ;; Hardware stack levels used:    1
 13472 ;; Hardware stack levels required when called:   16
 13473 ;; This function calls:
 13474 ;;		_zi_read32
 13475 ;; This function is called by:
 13476 ;;		___secs_to_zone
 13477 ;; This function uses a reentrant model
 13478 ;;
 13479                           
 13480                           	psect	text39
 13481  00209E                     __ptext39:
 13482                           	opt callstack 0
 13483  00209E                     _scan_trans:
 13484                           	opt callstack 11
 13485                           
 13486                           ;stkvar	_alt @ sp[(0)+-12]
 13487                           
 13488                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 12 v
      +                          argsize = 0, retsize = 0 argfudge = 0
 13489                           ;incstack = 0
 13490  00209E  0EF4               	movlw	-12
 13491  0020A0  006F FF8C  F02A    	movff	plusw1,btemp
 13492  0020A6  0EF5               	movlw	-11
 13493  0020A8  50E3               	movf	plusw1,w,c
 13494  0020AA  102A               	iorwf	btemp^0,w,c
 13495  0020AC  B4D8               	btfsc	status,2,c
 13496  0020AE  D00C               	goto	l16466
 13497                           
 13498                           ;stkvar	_alt @ sp[(0)+-12]
 13499  0020B0  0EF4               	movlw	-12
 13500  0020B2  006F FF8F FFD9     	movff	plusw1,fsr2l
 13501  0020B8  0EF5               	movlw	-11
 13502  0020BA  006F FF8F FFDA     	movff	plusw1,fsr2h
 13503  0020C0  0E00               	movlw	0
 13504  0020C2  6EDE               	movwf	postinc2,c
 13505  0020C4  0E00               	movlw	0
 13506  0020C6  6EDD               	movwf	postdec2,c
 13507  0020C8                     l16466:
 13508  0020C8  0E00               	movlw	0
 13509  0020CA  6E2A               	movwf	btemp^0,c
 13510  0020CC  0E00               	movlw	0
 13511  0020CE  6E2B               	movwf	(btemp+1)^0,c
 13512                           
 13513                           ; _scan_trans: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, a
      +                          rgsize = 12, vargsize = 0
 13514  0020D0  0EF4               	movlw	244
 13515  0020D2  26E1               	addwf	fsr1l,f,c
 13516  0020D4  0EFF               	movlw	255
 13517  0020D6  22E2               	addwfc	fsr1h,f,c
 13518  0020D8  0012               	return		;funcret
 13519  0020DA                     __end_of_scan_trans:
 13520                           	opt callstack 0
 13521                           
 13522 ;; *************** function _zi_read32 *****************
 13523 ;; Defined at:
 13524 ;;		line 100 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 13525 ;; Parameters:    Size  Location     Type
 13526 ;;  z               2  [STACK] PTR const unsigned char 
 13527 ;;		 -> NULL(0), 
 13528 ;; Auto vars:     Size  Location     Type
 13529 ;;		None
 13530 ;; Return value:  Size  Location     Type
 13531 ;;                  4  [STACK] unsigned long 
 13532 ;; Registers used:
 13533 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13534 ;; Tracked objects:
 13535 ;;		On entry : 0/0
 13536 ;;		On exit  : 0/0
 13537 ;;		Unchanged: 0/0
 13538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13543 ;;Total ram usage:        0 bytes
 13544 ;; Hardware stack levels used:    1
 13545 ;; Hardware stack levels required when called:   15
 13546 ;; This function calls:
 13547 ;;		Nothing
 13548 ;; This function is called by:
 13549 ;;		_scan_trans
 13550 ;;		___secs_to_zone
 13551 ;; This function uses a reentrant model
 13552 ;;
 13553                           
 13554                           	psect	text40
 13555  01FD4C                     __ptext40:
 13556                           	opt callstack 0
 13557  01FD4C                     _zi_read32:
 13558                           	opt callstack 12
 13559                           
 13560                           ;stkvar	_z @ sp[(0)+-2]
 13561                           
 13562                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13563                           ;incstack = 0
 13564  01FD4C  0EFE               	movlw	-2
 13565  01FD4E  006F FF8C  F034    	movff	plusw1,btemp+10
 13566  01FD54  0EFF               	movlw	-1
 13567  01FD56  006F FF8C  F035    	movff	plusw1,btemp+11
 13568  01FD5C  0E02               	movlw	2
 13569  01FD5E  2434               	addwf	(btemp+10)^0,w,c
 13570  01FD60  6ED9               	movwf	fsr2l,c
 13571  01FD62  0E00               	movlw	0
 13572  01FD64  2035               	addwfc	(btemp+11)^0,w,c
 13573  01FD66  6EDA               	movwf	fsr2h,c
 13574  01FD68  50DF               	movf	indf2,w,c
 13575  01FD6A  6E35               	movwf	(btemp+11)^0,c
 13576  01FD6C  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 13577  01FD72  6A2F               	clrf	(btemp+5)^0,c
 13578  01FD74  6A30               	clrf	(btemp+6)^0,c
 13579  01FD76  6A31               	clrf	(btemp+7)^0,c
 13580  01FD78  0060  F0C0  F031   	movff	btemp+6,btemp+7
 13581  01FD7E  0060  F0BC  F030   	movff	btemp+5,btemp+6
 13582  01FD84  0060  F0B8  F02F   	movff	btemp+4,btemp+5
 13583  01FD8A  6A2E               	clrf	(btemp+4)^0,c
 13584                           
 13585                           ;stkvar	_z @ sp[(0)+-2]
 13586  01FD8C  0EFE               	movlw	-2
 13587  01FD8E  006F FF8C  F034    	movff	plusw1,btemp+10
 13588  01FD94  0EFF               	movlw	-1
 13589  01FD96  006F FF8C  F035    	movff	plusw1,btemp+11
 13590  01FD9C  0E01               	movlw	1
 13591  01FD9E  2434               	addwf	(btemp+10)^0,w,c
 13592  01FDA0  6ED9               	movwf	fsr2l,c
 13593  01FDA2  0E00               	movlw	0
 13594  01FDA4  2035               	addwfc	(btemp+11)^0,w,c
 13595  01FDA6  6EDA               	movwf	fsr2h,c
 13596  01FDA8  50DF               	movf	indf2,w,c
 13597  01FDAA  6E35               	movwf	(btemp+11)^0,c
 13598  01FDAC  0060  F0D4  F02A   	movff	btemp+11,btemp
 13599  01FDB2  6A2B               	clrf	(btemp+1)^0,c
 13600  01FDB4  6A2C               	clrf	(btemp+2)^0,c
 13601  01FDB6  6A2D               	clrf	(btemp+3)^0,c
 13602  01FDB8  0060  F0AC  F02D   	movff	btemp+1,btemp+3
 13603  01FDBE  0060  F0A8  F02C   	movff	btemp,btemp+2
 13604  01FDC4  6A2B               	clrf	(btemp+1)^0,c
 13605  01FDC6  6A2A               	clrf	btemp^0,c
 13606                           
 13607                           ;stkvar	_z @ sp[(0)+-2]
 13608  01FDC8  0EFE               	movlw	-2
 13609  01FDCA  006F FF8F FFD9     	movff	plusw1,fsr2l
 13610  01FDD0  0EFF               	movlw	-1
 13611  01FDD2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13612  01FDD8  50DF               	movf	indf2,w,c
 13613  01FDDA  6E32               	movwf	(btemp+8)^0,c
 13614  01FDDC  6A33               	clrf	(btemp+9)^0,c
 13615  01FDDE  6A34               	clrf	(btemp+10)^0,c
 13616  01FDE0  6A35               	clrf	(btemp+11)^0,c
 13617  01FDE2  0060  F0C8  F035   	movff	btemp+8,btemp+11
 13618  01FDE8  6A34               	clrf	(btemp+10)^0,c
 13619  01FDEA  6A33               	clrf	(btemp+9)^0,c
 13620  01FDEC  6A32               	clrf	(btemp+8)^0,c
 13621  01FDEE  502A               	movf	btemp^0,w,c
 13622  01FDF0  1232               	iorwf	(btemp+8)^0,f,c
 13623  01FDF2  502B               	movf	(btemp+1)^0,w,c
 13624  01FDF4  1233               	iorwf	(btemp+9)^0,f,c
 13625  01FDF6  502C               	movf	(btemp+2)^0,w,c
 13626  01FDF8  1234               	iorwf	(btemp+10)^0,f,c
 13627  01FDFA  502D               	movf	(btemp+3)^0,w,c
 13628  01FDFC  1235               	iorwf	(btemp+11)^0,f,c
 13629  01FDFE  502E               	movf	(btemp+4)^0,w,c
 13630  01FE00  1232               	iorwf	(btemp+8)^0,f,c
 13631  01FE02  502F               	movf	(btemp+5)^0,w,c
 13632  01FE04  1233               	iorwf	(btemp+9)^0,f,c
 13633  01FE06  5030               	movf	(btemp+6)^0,w,c
 13634  01FE08  1234               	iorwf	(btemp+10)^0,f,c
 13635  01FE0A  5031               	movf	(btemp+7)^0,w,c
 13636  01FE0C  1235               	iorwf	(btemp+11)^0,f,c
 13637                           
 13638                           ;stkvar	_z @ sp[(0)+-2]
 13639  01FE0E  0EFE               	movlw	-2
 13640  01FE10  006F FF8C  F030    	movff	plusw1,btemp+6
 13641  01FE16  0EFF               	movlw	-1
 13642  01FE18  006F FF8C  F031    	movff	plusw1,btemp+7
 13643  01FE1E  0E03               	movlw	3
 13644  01FE20  2430               	addwf	(btemp+6)^0,w,c
 13645  01FE22  6ED9               	movwf	fsr2l,c
 13646  01FE24  0E00               	movlw	0
 13647  01FE26  2031               	addwfc	(btemp+7)^0,w,c
 13648  01FE28  6EDA               	movwf	fsr2h,c
 13649  01FE2A  50DF               	movf	indf2,w,c
 13650  01FE2C  1032               	iorwf	(btemp+8)^0,w,c
 13651  01FE2E  6E2A               	movwf	btemp^0,c
 13652  01FE30  5033               	movf	(btemp+9)^0,w,c
 13653  01FE32  6E2B               	movwf	(btemp+1)^0,c
 13654  01FE34  5034               	movf	(btemp+10)^0,w,c
 13655  01FE36  6E2C               	movwf	(btemp+2)^0,c
 13656  01FE38  5035               	movf	(btemp+11)^0,w,c
 13657  01FE3A  6E2D               	movwf	(btemp+3)^0,c
 13658                           
 13659                           ; _zi_read32: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
 13660  01FE3C  52E5               	movf	postdec1,f,c
 13661  01FE3E  52E5               	movf	postdec1,f,c
 13662  01FE40  0012               	return		;funcret
 13663  01FE42                     __end_of_zi_read32:
 13664                           	opt callstack 0
 13665                           
 13666 ;; *************** function _rule_to_secs *****************
 13667 ;; Defined at:
 13668 ;;		line 218 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 13669 ;; Parameters:    Size  Location     Type
 13670 ;;  rule            2  [STACK] PTR const int 
 13671 ;;		 -> r1(10), r0(10), 
 13672 ;;  year            2  [STACK] int 
 13673 ;; Auto vars:     Size  Location     Type
 13674 ;;  days            2  [STACK] int 
 13675 ;;  wday            2  [STACK] int 
 13676 ;;  t               8  [STACK] long long 
 13677 ;;  is_leap         2  [STACK] int 
 13678 ;;  n               2  [STACK] int 
 13679 ;;  x               2  [STACK] int 
 13680 ;;  m               2  [STACK] int 
 13681 ;;  d               2  [STACK] int 
 13682 ;; Return value:  Size  Location     Type
 13683 ;;                  8  [STACK] long long 
 13684 ;; Registers used:
 13685 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btem
      +p+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btem
      +p+31, tblptrl, tblptrh, tblptru, prodl, prodh
 13686 ;; Tracked objects:
 13687 ;;		On entry : 0/0
 13688 ;;		On exit  : 0/0
 13689 ;;		Unchanged: 0/0
 13690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13695 ;;Total ram usage:        0 bytes
 13696 ;; Hardware stack levels used:    1
 13697 ;; Hardware stack levels required when called:   17
 13698 ;; This function calls:
 13699 ;;		___aldiv
 13700 ;;		___aomod
 13701 ;;		___lmul
 13702 ;;		___month_to_secs
 13703 ;;		___year_to_secs
 13704 ;;		_days_in_month
 13705 ;; This function is called by:
 13706 ;;		___secs_to_zone
 13707 ;; This function uses a reentrant model
 13708 ;;
 13709                           
 13710                           	psect	text41
 13711  01764A                     __ptext41:
 13712                           	opt callstack 0
 13713  01764A                     _rule_to_secs:
 13714                           	opt callstack 0
 13715                           
 13716                           ; autosize = 22, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 8 argfudge = 4
 13717  01764A  0E1A               	movlw	26
 13718  01764C  26E1               	addwf	fsr1l,f,c
 13719  01764E  0E00               	movlw	0
 13720  017650  22E2               	addwfc	fsr1h,f,c
 13721                           
 13722                           ;stkvar	_is_leap @ sp[(-22)+12]
 13723                           
 13724                           ;incstack = 0
 13725  017652  0EF6               	movlw	246
 13726  017654  24E1               	addwf	fsr1l,w,c
 13727  017656  6E2A               	movwf	btemp^0,c
 13728  017658  0EFF               	movlw	255
 13729  01765A  20E2               	addwfc	fsr1h,w,c
 13730  01765C  6E2B               	movwf	(btemp+1)^0,c
 13731  01765E  0060  F0AB  FFE6   	movff	btemp,postinc1
 13732  017664  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 13733                           
 13734                           ;stkvar	_year @ sp[(-24)+-8]
 13735  01766A  0EE0               	movlw	-32
 13736  01766C  006F FF8C  F03A    	movff	plusw1,btemp+16
 13737  017672  0EE1               	movlw	-31
 13738  017674  006F FF8C  F03B    	movff	plusw1,btemp+17
 13739  01767A  6A3C               	clrf	(btemp+18)^0,c
 13740  01767C  BE3B               	btfsc	(btemp+17)^0,7,c
 13741  01767E  683C               	setf	(btemp+18)^0,c
 13742  017680  0060  F0F0  F03D   	movff	btemp+18,btemp+19
 13743  017686  0060  F0F0  F03E   	movff	btemp+18,btemp+20
 13744  01768C  0060  F0F0  F03F   	movff	btemp+18,btemp+21
 13745  017692  0060  F0F0  F040   	movff	btemp+18,btemp+22
 13746  017698  0060  F0F0  F041   	movff	btemp+18,btemp+23
 13747  01769E  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 13748  0176A4  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 13749  0176AA  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 13750  0176B0  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 13751  0176B6  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 13752  0176BC  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 13753  0176C2  0060  F103  FFE6   	movff	btemp+22,postinc1
 13754  0176C8  0060  F107  FFE6   	movff	btemp+23,postinc1
 13755  0176CE  EC28  F0AA         	call	___year_to_secs	;wreg free
 13756  0176D2  52E5               	movf	postdec1,f,c
 13757  0176D4  006F FF9C  F041    	movff	indf1,btemp+23
 13758  0176DA  52E5               	movf	postdec1,f,c
 13759  0176DC  006F FF9C  F040    	movff	indf1,btemp+22
 13760  0176E2  52E5               	movf	postdec1,f,c
 13761  0176E4  006F FF9C  F03F    	movff	indf1,btemp+21
 13762  0176EA  52E5               	movf	postdec1,f,c
 13763  0176EC  006F FF9C  F03E    	movff	indf1,btemp+20
 13764  0176F2  52E5               	movf	postdec1,f,c
 13765  0176F4  006F FF9C  F03D    	movff	indf1,btemp+19
 13766  0176FA  52E5               	movf	postdec1,f,c
 13767  0176FC  006F FF9C  F03C    	movff	indf1,btemp+18
 13768  017702  52E5               	movf	postdec1,f,c
 13769  017704  006F FF9C  F03B    	movff	indf1,btemp+17
 13770  01770A  52E5               	movf	postdec1,f,c
 13771  01770C  006F FF9C  F03A    	movff	indf1,btemp+16
 13772  017712  52E5               	movf	postdec1,f,c
 13773  017714  52E5               	movf	postdec1,f,c
 13774                           
 13775                           ;stkvar	_t @ sp[(-22)+4]
 13776  017716  0EEE               	movlw	-18
 13777  017718  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 13778  01771E  0EEF               	movlw	-17
 13779  017720  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 13780  017726  0EF0               	movlw	-16
 13781  017728  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 13782  01772E  0EF1               	movlw	-15
 13783  017730  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 13784  017736  0EF2               	movlw	-14
 13785  017738  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 13786  01773E  0EF3               	movlw	-13
 13787  017740  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 13788  017746  0EF4               	movlw	-12
 13789  017748  0060  F103  FFE3   	movff	btemp+22,plusw1
 13790  01774E  0EF5               	movlw	-11
 13791  017750  0060  F107  FFE3   	movff	btemp+23,plusw1
 13792                           
 13793                           ;stkvar	_rule @ sp[(-22)+-6]
 13794  017756  0EE4               	movlw	-28
 13795  017758  006F FF8F FFD9     	movff	plusw1,fsr2l
 13796  01775E  0EE5               	movlw	-27
 13797  017760  006F FF8F FFDA     	movff	plusw1,fsr2h
 13798  017766  0E4D               	movlw	77
 13799  017768  18DE               	xorwf	postinc2,w,c
 13800  01776A  10DE               	iorwf	postinc2,w,c
 13801  01776C  B4D8               	btfsc	status,2,c
 13802  01776E  D074               	goto	l16582
 13803                           
 13804                           ;stkvar	_rule @ sp[(-22)+-6]
 13805  017770  0EE4               	movlw	-28
 13806  017772  006F FF8C  F034    	movff	plusw1,btemp+10
 13807  017778  0EE5               	movlw	-27
 13808  01777A  006F FF8C  F035    	movff	plusw1,btemp+11
 13809  017780  0E02               	movlw	2
 13810  017782  2434               	addwf	(btemp+10)^0,w,c
 13811  017784  6ED9               	movwf	fsr2l,c
 13812  017786  0E00               	movlw	0
 13813  017788  2035               	addwfc	(btemp+11)^0,w,c
 13814  01778A  6EDA               	movwf	fsr2h,c
 13815  01778C  006F FF78  F034    	movff	postinc2,btemp+10
 13816  017792  006F FF74  F035    	movff	postdec2,btemp+11
 13817                           
 13818                           ;stkvar	_x @ sp[(-22)+16]
 13819  017798  0EFA               	movlw	-6
 13820  01779A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13821  0177A0  0EFB               	movlw	-5
 13822  0177A2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13823                           
 13824                           ;stkvar	_rule @ sp[(-22)+-6]
 13825  0177A8  0EE4               	movlw	-28
 13826  0177AA  006F FF8F FFD9     	movff	plusw1,fsr2l
 13827  0177B0  0EE5               	movlw	-27
 13828  0177B2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13829  0177B8  0E4A               	movlw	74
 13830  0177BA  18DE               	xorwf	postinc2,w,c
 13831  0177BC  10DE               	iorwf	postinc2,w,c
 13832  0177BE  A4D8               	btfss	status,2,c
 13833  0177C0  D021               	goto	l16580
 13834                           
 13835                           ;stkvar	_x @ sp[(-22)+16]
 13836  0177C2  0EFB               	movlw	-5
 13837  0177C4  BEE3               	btfsc	plusw1,7,c
 13838  0177C6  D014               	goto	u16120
 13839  0177C8  0EFB               	movlw	-5
 13840  0177CA  50E3               	movf	plusw1,w,c
 13841  0177CC  E108               	bnz	u16110
 13842  0177CE  0EFA               	movlw	-6
 13843  0177D0  006F FF8C  F02A    	movff	plusw1,btemp
 13844  0177D6  0E3C               	movlw	60
 13845  0177D8  5E2A               	subwf	btemp^0,f,c
 13846  0177DA  A0D8               	btfss	status,0,c
 13847  0177DC  D009               	goto	u16120
 13848  0177DE                     u16110:
 13849                           
 13850                           ;stkvar	_is_leap @ sp[(-22)+12]
 13851  0177DE  0EF6               	movlw	-10
 13852  0177E0  006F FF8C  F02A    	movff	plusw1,btemp
 13853  0177E6  0EF7               	movlw	-9
 13854  0177E8  50E3               	movf	plusw1,w,c
 13855  0177EA  102A               	iorwf	btemp^0,w,c
 13856  0177EC  A4D8               	btfss	status,2,c
 13857  0177EE  D00A               	goto	l16580
 13858  0177F0                     u16120:
 13859                           
 13860                           ;stkvar	_x @ sp[(-22)+16]
 13861  0177F0  50E1               	movf	fsr1l,w,c
 13862  0177F2  0FFA               	addlw	-6
 13863  0177F4  6ED9               	movwf	fsr2l,c
 13864  0177F6  50E2               	movf	fsr1h,w,c
 13865  0177F8  6EDA               	movwf	fsr2h,c
 13866  0177FA  0EFF               	movlw	255
 13867  0177FC  22DA               	addwfc	fsr2h,f,c
 13868  0177FE  06DE               	decf	postinc2,f,c
 13869  017800  0E00               	movlw	0
 13870  017802  5ADD               	subwfb	postdec2,f,c
 13871  017804                     l16580:
 13872  017804  0E80               	movlw	128
 13873  017806  6EE6               	movwf	postinc1,c
 13874  017808  0E51               	movlw	81
 13875  01780A  6EE6               	movwf	postinc1,c
 13876  01780C  0E01               	movlw	1
 13877  01780E  6EE6               	movwf	postinc1,c
 13878  017810  0E00               	movlw	0
 13879  017812  6EE6               	movwf	postinc1,c
 13880                           
 13881                           ;stkvar	_x @ sp[(-26)+16]
 13882  017814  0EF6               	movlw	-10
 13883  017816  006F FF8C  F034    	movff	plusw1,btemp+10
 13884  01781C  0EF7               	movlw	-9
 13885  01781E  006F FF8C  F035    	movff	plusw1,btemp+11
 13886  017824  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 13887  01782A  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 13888  017830  0E00               	movlw	0
 13889  017832  BE2F               	btfsc	(btemp+5)^0,7,c
 13890  017834  0EFF               	movlw	255
 13891  017836  6E30               	movwf	(btemp+6)^0,c
 13892  017838  6E31               	movwf	(btemp+7)^0,c
 13893  01783A  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 13894  017840  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 13895  017846  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 13896  01784C  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 13897  017852  ECBF  F001         	call	___lmul	;wreg free
 13898  017856  D1EC               	goto	L10
 13899  017858                     l16582:
 13900                           
 13901                           ;stkvar	_rule @ sp[(-22)+-6]
 13902  017858  0EE4               	movlw	-28
 13903  01785A  006F FF8C  F034    	movff	plusw1,btemp+10
 13904  017860  0EE5               	movlw	-27
 13905  017862  006F FF8C  F035    	movff	plusw1,btemp+11
 13906  017868  0E02               	movlw	2
 13907  01786A  2434               	addwf	(btemp+10)^0,w,c
 13908  01786C  6ED9               	movwf	fsr2l,c
 13909  01786E  0E00               	movlw	0
 13910  017870  2035               	addwfc	(btemp+11)^0,w,c
 13911  017872  6EDA               	movwf	fsr2h,c
 13912  017874  006F FF78  F034    	movff	postinc2,btemp+10
 13913  01787A  006F FF74  F035    	movff	postdec2,btemp+11
 13914                           
 13915                           ;stkvar	_m @ sp[(-22)+18]
 13916  017880  0EFC               	movlw	-4
 13917  017882  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13918  017888  0EFD               	movlw	-3
 13919  01788A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13920                           
 13921                           ;stkvar	_rule @ sp[(-22)+-6]
 13922  017890  0EE4               	movlw	-28
 13923  017892  006F FF8C  F034    	movff	plusw1,btemp+10
 13924  017898  0EE5               	movlw	-27
 13925  01789A  006F FF8C  F035    	movff	plusw1,btemp+11
 13926  0178A0  0E04               	movlw	4
 13927  0178A2  2434               	addwf	(btemp+10)^0,w,c
 13928  0178A4  6ED9               	movwf	fsr2l,c
 13929  0178A6  0E00               	movlw	0
 13930  0178A8  2035               	addwfc	(btemp+11)^0,w,c
 13931  0178AA  6EDA               	movwf	fsr2h,c
 13932  0178AC  006F FF78  F034    	movff	postinc2,btemp+10
 13933  0178B2  006F FF74  F035    	movff	postdec2,btemp+11
 13934                           
 13935                           ;stkvar	_n @ sp[(-22)+14]
 13936  0178B8  0EF8               	movlw	-8
 13937  0178BA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13938  0178C0  0EF9               	movlw	-7
 13939  0178C2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13940                           
 13941                           ;stkvar	_rule @ sp[(-22)+-6]
 13942  0178C8  0EE4               	movlw	-28
 13943  0178CA  006F FF8C  F034    	movff	plusw1,btemp+10
 13944  0178D0  0EE5               	movlw	-27
 13945  0178D2  006F FF8C  F035    	movff	plusw1,btemp+11
 13946  0178D8  0E06               	movlw	6
 13947  0178DA  2434               	addwf	(btemp+10)^0,w,c
 13948  0178DC  6ED9               	movwf	fsr2l,c
 13949  0178DE  0E00               	movlw	0
 13950  0178E0  2035               	addwfc	(btemp+11)^0,w,c
 13951  0178E2  6EDA               	movwf	fsr2h,c
 13952  0178E4  006F FF78  F034    	movff	postinc2,btemp+10
 13953  0178EA  006F FF74  F035    	movff	postdec2,btemp+11
 13954                           
 13955                           ;stkvar	_d @ sp[(-22)+20]
 13956  0178F0  0EFE               	movlw	-2
 13957  0178F2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13958  0178F8  0EFF               	movlw	-1
 13959  0178FA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13960                           
 13961                           ;stkvar	_is_leap @ sp[(-22)+12]
 13962  017900  0EF6               	movlw	-10
 13963  017902  006F FF8F FFE6     	movff	plusw1,postinc1
 13964  017908  006F FF8F FFE6     	movff	plusw1,postinc1
 13965                           
 13966                           ;stkvar	_m @ sp[(-24)+18]
 13967  01790E  0EFA               	movlw	-6
 13968  017910  50E3               	movf	plusw1,w,c
 13969  017912  0FFF               	addlw	255
 13970  017914  6E34               	movwf	(btemp+10)^0,c
 13971  017916  0EFB               	movlw	-5
 13972  017918  006F FF8C  F035    	movff	plusw1,btemp+11
 13973  01791E  0EFF               	movlw	255
 13974  017920  2235               	addwfc	(btemp+11)^0,f,c
 13975  017922  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 13976  017928  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 13977  01792E  ECD4  F000         	call	___month_to_secs	;wreg free
 13978  017932  0060  F0A8  F03A   	movff	btemp,btemp+16
 13979  017938  0060  F0AC  F03B   	movff	btemp+1,btemp+17
 13980  01793E  0060  F0B0  F03C   	movff	btemp+2,btemp+18
 13981  017944  0060  F0B4  F03D   	movff	btemp+3,btemp+19
 13982  01794A  6A3E               	clrf	(btemp+20)^0,c
 13983  01794C  BE3D               	btfsc	(btemp+19)^0,7,c
 13984  01794E  683E               	setf	(btemp+20)^0,c
 13985  017950  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 13986  017956  0060  F0F8  F040   	movff	btemp+20,btemp+22
 13987  01795C  0060  F0F8  F041   	movff	btemp+20,btemp+23
 13988                           
 13989                           ;stkvar	_t @ sp[(-22)+4]
 13990  017962  50E1               	movf	fsr1l,w,c
 13991  017964  0FEE               	addlw	-18
 13992  017966  6ED9               	movwf	fsr2l,c
 13993  017968  50E2               	movf	fsr1h,w,c
 13994  01796A  6EDA               	movwf	fsr2h,c
 13995  01796C  0EFF               	movlw	255
 13996  01796E  22DA               	addwfc	fsr2h,f,c
 13997  017970  503A               	movf	(btemp+16)^0,w,c
 13998  017972  26DE               	addwf	postinc2,f,c
 13999  017974  503B               	movf	(btemp+17)^0,w,c
 14000  017976  22DE               	addwfc	postinc2,f,c
 14001  017978  503C               	movf	(btemp+18)^0,w,c
 14002  01797A  22DE               	addwfc	postinc2,f,c
 14003  01797C  503D               	movf	(btemp+19)^0,w,c
 14004  01797E  22DE               	addwfc	postinc2,f,c
 14005  017980  503E               	movf	(btemp+20)^0,w,c
 14006  017982  22DE               	addwfc	postinc2,f,c
 14007  017984  503F               	movf	(btemp+21)^0,w,c
 14008  017986  22DE               	addwfc	postinc2,f,c
 14009  017988  5040               	movf	(btemp+22)^0,w,c
 14010  01798A  22DE               	addwfc	postinc2,f,c
 14011  01798C  5041               	movf	(btemp+23)^0,w,c
 14012  01798E  22DE               	addwfc	postinc2,f,c
 14013  017990  0E80               	movlw	128
 14014  017992  6EE6               	movwf	postinc1,c
 14015  017994  0E51               	movlw	81
 14016  017996  6EE6               	movwf	postinc1,c
 14017  017998  0E01               	movlw	1
 14018  01799A  6EE6               	movwf	postinc1,c
 14019  01799C  0E00               	movlw	0
 14020  01799E  6EE6               	movwf	postinc1,c
 14021  0179A0  0E80               	movlw	128
 14022  0179A2  6EE6               	movwf	postinc1,c
 14023  0179A4  0E3A               	movlw	58
 14024  0179A6  6EE6               	movwf	postinc1,c
 14025  0179A8  0E09               	movlw	9
 14026  0179AA  6EE6               	movwf	postinc1,c
 14027  0179AC  0E00               	movlw	0
 14028  0179AE  6EE6               	movwf	postinc1,c
 14029  0179B0  0E00               	movlw	0
 14030  0179B2  6EE6               	movwf	postinc1,c
 14031  0179B4  0E00               	movlw	0
 14032  0179B6  6EE6               	movwf	postinc1,c
 14033  0179B8  0E00               	movlw	0
 14034  0179BA  6EE6               	movwf	postinc1,c
 14035  0179BC  0E00               	movlw	0
 14036  0179BE  6EE6               	movwf	postinc1,c
 14037                           
 14038                           ;stkvar	_t @ sp[(-34)+4]
 14039  0179C0  0EE2               	movlw	-30
 14040  0179C2  50E3               	movf	plusw1,w,c
 14041  0179C4  0F00               	addlw	0
 14042  0179C6  6E3A               	movwf	(btemp+16)^0,c
 14043  0179C8  0EE3               	movlw	-29
 14044  0179CA  006F FF8C  F03B    	movff	plusw1,btemp+17
 14045  0179D0  0E46               	movlw	70
 14046  0179D2  223B               	addwfc	(btemp+17)^0,f,c
 14047  0179D4  0EE4               	movlw	-28
 14048  0179D6  006F FF8C  F03C    	movff	plusw1,btemp+18
 14049  0179DC  0E05               	movlw	5
 14050  0179DE  223C               	addwfc	(btemp+18)^0,f,c
 14051  0179E0  0EE5               	movlw	-27
 14052  0179E2  006F FF8C  F03D    	movff	plusw1,btemp+19
 14053  0179E8  0E00               	movlw	0
 14054  0179EA  223D               	addwfc	(btemp+19)^0,f,c
 14055  0179EC  0EE6               	movlw	-26
 14056  0179EE  006F FF8C  F03E    	movff	plusw1,btemp+20
 14057  0179F4  0E00               	movlw	0
 14058  0179F6  223E               	addwfc	(btemp+20)^0,f,c
 14059  0179F8  0EE7               	movlw	-25
 14060  0179FA  006F FF8C  F03F    	movff	plusw1,btemp+21
 14061  017A00  0E00               	movlw	0
 14062  017A02  223F               	addwfc	(btemp+21)^0,f,c
 14063  017A04  0EE8               	movlw	-24
 14064  017A06  006F FF8C  F040    	movff	plusw1,btemp+22
 14065  017A0C  0E00               	movlw	0
 14066  017A0E  2240               	addwfc	(btemp+22)^0,f,c
 14067  017A10  0EE9               	movlw	-23
 14068  017A12  006F FF8C  F041    	movff	plusw1,btemp+23
 14069  017A18  0E00               	movlw	0
 14070  017A1A  2241               	addwfc	(btemp+23)^0,f,c
 14071  017A1C  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 14072  017A22  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 14073  017A28  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 14074  017A2E  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 14075  017A34  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 14076  017A3A  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 14077  017A40  0060  F103  FFE6   	movff	btemp+22,postinc1
 14078  017A46  0060  F107  FFE6   	movff	btemp+23,postinc1
 14079  017A4C  ECFB  F0E5         	call	___aomod	;wreg free
 14080  017A50  52E5               	movf	postdec1,f,c
 14081  017A52  006F FF9C  F041    	movff	indf1,btemp+23
 14082  017A58  52E5               	movf	postdec1,f,c
 14083  017A5A  006F FF9C  F040    	movff	indf1,btemp+22
 14084  017A60  52E5               	movf	postdec1,f,c
 14085  017A62  006F FF9C  F03F    	movff	indf1,btemp+21
 14086  017A68  52E5               	movf	postdec1,f,c
 14087  017A6A  006F FF9C  F03E    	movff	indf1,btemp+20
 14088  017A70  52E5               	movf	postdec1,f,c
 14089  017A72  006F FF9C  F03D    	movff	indf1,btemp+19
 14090  017A78  52E5               	movf	postdec1,f,c
 14091  017A7A  006F FF9C  F03C    	movff	indf1,btemp+18
 14092  017A80  52E5               	movf	postdec1,f,c
 14093  017A82  006F FF9C  F03B    	movff	indf1,btemp+17
 14094  017A88  52E5               	movf	postdec1,f,c
 14095  017A8A  006F FF9C  F03A    	movff	indf1,btemp+16
 14096  017A90  0EF8               	movlw	248
 14097  017A92  26E1               	addwf	fsr1l,f,c
 14098  017A94  0EFF               	movlw	255
 14099  017A96  22E2               	addwfc	fsr1h,f,c
 14100  017A98  0060  F0E8  F034   	movff	btemp+16,btemp+10
 14101  017A9E  0060  F0EC  F035   	movff	btemp+17,btemp+11
 14102  017AA4  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 14103  017AAA  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 14104  017AB0  0E00               	movlw	0
 14105  017AB2  BE2F               	btfsc	(btemp+5)^0,7,c
 14106  017AB4  0EFF               	movlw	255
 14107  017AB6  6E30               	movwf	(btemp+6)^0,c
 14108  017AB8  6E31               	movwf	(btemp+7)^0,c
 14109  017ABA  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 14110  017AC0  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 14111  017AC6  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 14112  017ACC  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 14113  017AD2  ECBC  F0EF         	call	___aldiv	;wreg free
 14114  017AD6  0060  F0A8  F034   	movff	btemp,btemp+10
 14115  017ADC  0060  F0AC  F035   	movff	btemp+1,btemp+11
 14116                           
 14117                           ;stkvar	_wday @ sp[(-22)+2]
 14118  017AE2  0EEC               	movlw	-20
 14119  017AE4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14120  017AEA  0EED               	movlw	-19
 14121  017AEC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14122                           
 14123                           ;stkvar	_wday @ sp[(-22)+2]
 14124                           ;stkvar	_d @ sp[(-22)+20]
 14125  017AF2  0EFE               	movlw	-2
 14126  017AF4  006F FF8C  F034    	movff	plusw1,btemp+10
 14127  017AFA  0EFF               	movlw	-1
 14128  017AFC  006F FF8C  F035    	movff	plusw1,btemp+11
 14129  017B02  0EEC               	movlw	-20
 14130  017B04  50E3               	movf	plusw1,w,c
 14131  017B06  5E34               	subwf	(btemp+10)^0,f,c
 14132  017B08  0EED               	movlw	-19
 14133  017B0A  50E3               	movf	plusw1,w,c
 14134  017B0C  5A35               	subwfb	(btemp+11)^0,f,c
 14135                           
 14136                           ;stkvar	_days @ sp[(-22)+0]
 14137  017B0E  0EEA               	movlw	-22
 14138  017B10  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14139  017B16  0EEB               	movlw	-21
 14140  017B18  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14141                           
 14142                           ;stkvar	_days @ sp[(-22)+0]
 14143  017B1E  0EEB               	movlw	-21
 14144  017B20  AEE3               	btfss	plusw1,7,c
 14145  017B22  D011               	goto	l4025
 14146                           
 14147                           ;stkvar	_days @ sp[(-22)+0]
 14148  017B24  0EEA               	movlw	-22
 14149  017B26  50E3               	movf	plusw1,w,c
 14150  017B28  0F07               	addlw	7
 14151  017B2A  6E2A               	movwf	btemp^0,c
 14152  017B2C  0EEA               	movlw	-22
 14153  017B2E  0060  F0AB  FFE3   	movff	btemp,plusw1
 14154  017B34  6A2A               	clrf	btemp^0,c
 14155  017B36  0EEB               	movlw	-21
 14156  017B38  50E3               	movf	plusw1,w,c
 14157  017B3A  202A               	addwfc	btemp^0,w,c
 14158  017B3C  6E2A               	movwf	btemp^0,c
 14159  017B3E  0EEB               	movlw	-21
 14160  017B40  0060  F0AB  FFE3   	movff	btemp,plusw1
 14161  017B46                     l4025:
 14162                           
 14163                           ;stkvar	_n @ sp[(-22)+14]
 14164  017B46  0EF8               	movlw	-8
 14165  017B48  006F FF8C  F02A    	movff	plusw1,btemp
 14166  017B4E  0E05               	movlw	5
 14167  017B50  182A               	xorwf	btemp^0,w,c
 14168  017B52  E134               	bnz	l16598
 14169  017B54  0EF9               	movlw	-7
 14170  017B56  50E3               	movf	plusw1,w,c
 14171  017B58  A4D8               	btfss	status,2,c
 14172  017B5A  D030               	goto	l16598
 14173                           
 14174                           ;stkvar	_is_leap @ sp[(-22)+12]
 14175  017B5C  0EF6               	movlw	-10
 14176  017B5E  006F FF8F FFE6     	movff	plusw1,postinc1
 14177  017B64  006F FF8F FFE6     	movff	plusw1,postinc1
 14178                           
 14179                           ;stkvar	_m @ sp[(-24)+18]
 14180  017B6A  0EFA               	movlw	-6
 14181  017B6C  006F FF8F FFE6     	movff	plusw1,postinc1
 14182  017B72  006F FF8F FFE6     	movff	plusw1,postinc1
 14183  017B78  ECDD  F00B         	call	_days_in_month	;wreg free
 14184                           
 14185                           ;stkvar	_days @ sp[(-22)+0]
 14186  017B7C  0EEA               	movlw	-22
 14187  017B7E  50E3               	movf	plusw1,w,c
 14188  017B80  0F1C               	addlw	28
 14189  017B82  6E34               	movwf	(btemp+10)^0,c
 14190  017B84  0EEB               	movlw	-21
 14191  017B86  006F FF8C  F035    	movff	plusw1,btemp+11
 14192  017B8C  0E00               	movlw	0
 14193  017B8E  2235               	addwfc	(btemp+11)^0,f,c
 14194  017B90  502A               	movf	btemp^0,w,c
 14195  017B92  5C34               	subwf	(btemp+10)^0,w,c
 14196  017B94  5035               	movf	(btemp+11)^0,w,c
 14197  017B96  0A80               	xorlw	128
 14198  017B98  6E2C               	movwf	(btemp+2)^0,c
 14199  017B9A  502B               	movf	(btemp+1)^0,w,c
 14200  017B9C  0A80               	xorlw	128
 14201  017B9E  582C               	subwfb	(btemp+2)^0,w,c
 14202  017BA0  A0D8               	btfss	status,0,c
 14203  017BA2  D00C               	goto	l16598
 14204  017BA4  0E04               	movlw	4
 14205  017BA6  6E34               	movwf	(btemp+10)^0,c
 14206  017BA8  0E00               	movlw	0
 14207  017BAA  6E35               	movwf	(btemp+11)^0,c
 14208                           
 14209                           ;stkvar	_n @ sp[(-22)+14]
 14210  017BAC  0EF8               	movlw	-8
 14211  017BAE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14212  017BB4  0EF9               	movlw	-7
 14213  017BB6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14214  017BBC                     l16598:
 14215  017BBC  0E80               	movlw	128
 14216  017BBE  6EE6               	movwf	postinc1,c
 14217  017BC0  0E51               	movlw	81
 14218  017BC2  6EE6               	movwf	postinc1,c
 14219  017BC4  0E01               	movlw	1
 14220  017BC6  6EE6               	movwf	postinc1,c
 14221  017BC8  0E00               	movlw	0
 14222  017BCA  6EE6               	movwf	postinc1,c
 14223                           
 14224                           ;stkvar	_days @ sp[(-26)+0]
 14225                           ;stkvar	_n @ sp[(-26)+14]
 14226  017BCC  0EF4               	movlw	-12
 14227  017BCE  006F FF8C  F034    	movff	plusw1,btemp+10
 14228  017BD4  0EF5               	movlw	-11
 14229  017BD6  006F FF8C  F035    	movff	plusw1,btemp+11
 14230  017BDC  0E07               	movlw	7
 14231  017BDE  0234               	mulwf	(btemp+10)^0,c
 14232  017BE0  006F FFCC  F032    	movff	prodl,btemp+8
 14233  017BE6  006F FFD0  F033    	movff	prodh,btemp+9
 14234  017BEC  0235               	mulwf	(btemp+11)^0,c
 14235  017BEE  50F3               	movf	prodl,w,c
 14236  017BF0  2633               	addwf	(btemp+9)^0,f,c
 14237  017BF2  0EE6               	movlw	-26
 14238  017BF4  50E3               	movf	plusw1,w,c
 14239  017BF6  2632               	addwf	(btemp+8)^0,f,c
 14240  017BF8  0EE7               	movlw	-25
 14241  017BFA  50E3               	movf	plusw1,w,c
 14242  017BFC  2233               	addwfc	(btemp+9)^0,f,c
 14243  017BFE  0EF9               	movlw	249
 14244  017C00  2432               	addwf	(btemp+8)^0,w,c
 14245  017C02  6E2E               	movwf	(btemp+4)^0,c
 14246  017C04  0EFF               	movlw	255
 14247  017C06  2033               	addwfc	(btemp+9)^0,w,c
 14248  017C08  6E2F               	movwf	(btemp+5)^0,c
 14249  017C0A  6A30               	clrf	(btemp+6)^0,c
 14250  017C0C  BE2F               	btfsc	(btemp+5)^0,7,c
 14251  017C0E  0630               	decf	(btemp+6)^0,f,c
 14252  017C10  5030               	movf	(btemp+6)^0,w,c
 14253  017C12  6E31               	movwf	(btemp+7)^0,c
 14254  017C14  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 14255  017C1A  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 14256  017C20  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 14257  017C26  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 14258  017C2C  ECBF  F001         	call	___lmul	;wreg free
 14259  017C30                     L10:
 14260  017C30  0060  F0A8  F03A   	movff	btemp,btemp+16
 14261  017C36  0060  F0AC  F03B   	movff	btemp+1,btemp+17
 14262  017C3C  0060  F0B0  F03C   	movff	btemp+2,btemp+18
 14263  017C42  0060  F0B4  F03D   	movff	btemp+3,btemp+19
 14264  017C48  6A3E               	clrf	(btemp+20)^0,c
 14265  017C4A  BE3D               	btfsc	(btemp+19)^0,7,c
 14266  017C4C  683E               	setf	(btemp+20)^0,c
 14267  017C4E  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 14268  017C54  0060  F0F8  F040   	movff	btemp+20,btemp+22
 14269  017C5A  0060  F0F8  F041   	movff	btemp+20,btemp+23
 14270                           
 14271                           ;stkvar	_t @ sp[(-22)+4]
 14272  017C60  50E1               	movf	fsr1l,w,c
 14273  017C62  0FEE               	addlw	-18
 14274  017C64  6ED9               	movwf	fsr2l,c
 14275  017C66  50E2               	movf	fsr1h,w,c
 14276  017C68  6EDA               	movwf	fsr2h,c
 14277  017C6A  0EFF               	movlw	255
 14278  017C6C  22DA               	addwfc	fsr2h,f,c
 14279  017C6E  503A               	movf	(btemp+16)^0,w,c
 14280  017C70  26DE               	addwf	postinc2,f,c
 14281  017C72  503B               	movf	(btemp+17)^0,w,c
 14282  017C74  22DE               	addwfc	postinc2,f,c
 14283  017C76  503C               	movf	(btemp+18)^0,w,c
 14284  017C78  22DE               	addwfc	postinc2,f,c
 14285  017C7A  503D               	movf	(btemp+19)^0,w,c
 14286  017C7C  22DE               	addwfc	postinc2,f,c
 14287  017C7E  503E               	movf	(btemp+20)^0,w,c
 14288  017C80  22DE               	addwfc	postinc2,f,c
 14289  017C82  503F               	movf	(btemp+21)^0,w,c
 14290  017C84  22DE               	addwfc	postinc2,f,c
 14291  017C86  5040               	movf	(btemp+22)^0,w,c
 14292  017C88  22DE               	addwfc	postinc2,f,c
 14293  017C8A  5041               	movf	(btemp+23)^0,w,c
 14294  017C8C  22DE               	addwfc	postinc2,f,c
 14295                           
 14296                           ;stkvar	_rule @ sp[(-22)+-6]
 14297  017C8E  0EE4               	movlw	-28
 14298  017C90  006F FF8C  F034    	movff	plusw1,btemp+10
 14299  017C96  0EE5               	movlw	-27
 14300  017C98  006F FF8C  F035    	movff	plusw1,btemp+11
 14301  017C9E  0E08               	movlw	8
 14302  017CA0  2434               	addwf	(btemp+10)^0,w,c
 14303  017CA2  6ED9               	movwf	fsr2l,c
 14304  017CA4  0E00               	movlw	0
 14305  017CA6  2035               	addwfc	(btemp+11)^0,w,c
 14306  017CA8  6EDA               	movwf	fsr2h,c
 14307  017CAA  006F FF78  F034    	movff	postinc2,btemp+10
 14308  017CB0  006F FF74  F035    	movff	postdec2,btemp+11
 14309                           
 14310                           ;stkvar	_t @ sp[(-22)+4]
 14311  017CB6  50E1               	movf	fsr1l,w,c
 14312  017CB8  0FEE               	addlw	-18
 14313  017CBA  6ED9               	movwf	fsr2l,c
 14314  017CBC  50E2               	movf	fsr1h,w,c
 14315  017CBE  6EDA               	movwf	fsr2h,c
 14316  017CC0  0EFF               	movlw	255
 14317  017CC2  22DA               	addwfc	fsr2h,f,c
 14318  017CC4  5034               	movf	(btemp+10)^0,w,c
 14319  017CC6  26DE               	addwf	postinc2,f,c
 14320  017CC8  5035               	movf	(btemp+11)^0,w,c
 14321  017CCA  22DE               	addwfc	postinc2,f,c
 14322  017CCC  0E00               	movlw	0
 14323  017CCE  BE35               	btfsc	(btemp+11)^0,7,c
 14324  017CD0  0EFF               	movlw	255
 14325  017CD2  22DE               	addwfc	postinc2,f,c
 14326  017CD4  22DE               	addwfc	postinc2,f,c
 14327  017CD6  22DE               	addwfc	postinc2,f,c
 14328  017CD8  22DE               	addwfc	postinc2,f,c
 14329  017CDA  22DE               	addwfc	postinc2,f,c
 14330  017CDC  22DE               	addwfc	postinc2,f,c
 14331                           
 14332                           ;stkvar	_t @ sp[(-22)+4]
 14333  017CDE  0EEE               	movlw	238
 14334  017CE0  24E1               	addwf	fsr1l,w,c
 14335  017CE2  6ED9               	movwf	fsr2l,c
 14336  017CE4  0EFF               	movlw	255
 14337  017CE6  20E2               	addwfc	fsr1h,w,c
 14338  017CE8  6EDA               	movwf	fsr2h,c
 14339                           
 14340                           ;stkvar	?_rule_to_secs @ sp[(-22)+-8]
 14341  017CEA  0E08               	movlw	8
 14342  017CEC  6E2A               	movwf	btemp^0,c
 14343  017CEE  0EE2               	movlw	-30
 14344  017CF0                     us1616999:
 14345  017CF0  006F FF7B FFE3     	movff	postinc2,plusw1
 14346  017CF6  28E8               	incf	wreg,w,c
 14347  017CF8  2E2A               	decfsz	btemp^0,f,c
 14348  017CFA  D7FA               	bra	us1616999
 14349                           
 14350                           ; _rule_to_secs: autosize = 22, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8,
      +                           argsize = 8, vargsize = 0
 14351  017CFC  0EEA               	movlw	234
 14352  017CFE  26E1               	addwf	fsr1l,f,c
 14353  017D00  0EFF               	movlw	255
 14354  017D02  22E2               	addwfc	fsr1h,f,c
 14355  017D04  0012               	return		;funcret
 14356  017D06                     __end_of_rule_to_secs:
 14357                           	opt callstack 0
 14358                           
 14359 ;; *************** function _days_in_month *****************
 14360 ;; Defined at:
 14361 ;;		line 210 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 14362 ;; Parameters:    Size  Location     Type
 14363 ;;  m               2  [STACK] int 
 14364 ;;  is_leap         2  [STACK] int 
 14365 ;; Auto vars:     Size  Location     Type
 14366 ;;		None
 14367 ;; Return value:  Size  Location     Type
 14368 ;;                  2  [STACK] int 
 14369 ;; Registers used:
 14370 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 14371 ;; Tracked objects:
 14372 ;;		On entry : 0/0
 14373 ;;		On exit  : 0/0
 14374 ;;		Unchanged: 0/0
 14375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14380 ;;Total ram usage:        0 bytes
 14381 ;; Hardware stack levels used:    1
 14382 ;; Hardware stack levels required when called:   15
 14383 ;; This function calls:
 14384 ;;		Nothing
 14385 ;; This function is called by:
 14386 ;;		_rule_to_secs
 14387 ;; This function uses a reentrant model
 14388 ;;
 14389                           
 14390                           	psect	text42
 14391  0017BA                     __ptext42:
 14392                           	opt callstack 0
 14393  0017BA                     _days_in_month:
 14394                           	opt callstack 11
 14395                           
 14396                           ;stkvar	_m @ sp[(0)+-2]
 14397                           
 14398                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14399                           ;incstack = 0
 14400  0017BA  0EFE               	movlw	-2
 14401  0017BC  006F FF8C  F02A    	movff	plusw1,btemp
 14402  0017C2  0E02               	movlw	2
 14403  0017C4  182A               	xorwf	btemp^0,w,c
 14404  0017C6  E10D               	bnz	l11646
 14405  0017C8  0EFF               	movlw	-1
 14406  0017CA  50E3               	movf	plusw1,w,c
 14407  0017CC  A4D8               	btfss	status,2,c
 14408  0017CE  D009               	goto	l11646
 14409                           
 14410                           ;stkvar	_is_leap @ sp[(0)+-4]
 14411  0017D0  0EFC               	movlw	-4
 14412  0017D2  50E3               	movf	plusw1,w,c
 14413  0017D4  0F1C               	addlw	28
 14414  0017D6  6E2A               	movwf	btemp^0,c
 14415  0017D8  0EFD               	movlw	-3
 14416  0017DA  006F FF8C  F02B    	movff	plusw1,btemp+1
 14417  0017E0  D017               	goto	L11
 14418  0017E2                     l11646:
 14419  0017E2  0EFF               	movlw	255
 14420  0017E4  6E35               	movwf	(btemp+11)^0,c
 14421                           
 14422                           ;stkvar	_m @ sp[(0)+-2]
 14423  0017E6  0EFE               	movlw	-2
 14424  0017E8  50E3               	movf	plusw1,w,c
 14425  0017EA  2435               	addwf	(btemp+11)^0,w,c
 14426  0017EC  6E34               	movwf	(btemp+10)^0,c
 14427  0017EE  0ED5               	movlw	213
 14428  0017F0  6E2A               	movwf	btemp^0,c
 14429  0017F2  0E0A               	movlw	10
 14430  0017F4  6E2B               	movwf	(btemp+1)^0,c
 14431  0017F6  2A34               	incf	(btemp+10)^0,f,c
 14432  0017F8  D003               	goto	u10724
 14433  0017FA                     u10725:
 14434  0017FA  342B               	rlcf	(btemp+1)^0,w,c
 14435  0017FC  322B               	rrcf	(btemp+1)^0,f,c
 14436  0017FE  322A               	rrcf	btemp^0,f,c
 14437  001800                     u10724:
 14438  001800  2E34               	decfsz	(btemp+10)^0,f,c
 14439  001802  D7FB               	goto	u10725
 14440  001804  0E01               	movlw	1
 14441  001806  162A               	andwf	btemp^0,f,c
 14442  001808  0E00               	movlw	0
 14443  00180A  162B               	andwf	(btemp+1)^0,f,c
 14444  00180C  0E1E               	movlw	30
 14445  00180E  262A               	addwf	btemp^0,f,c
 14446  001810                     L11:
 14447  001810  0E00               	movlw	0
 14448  001812  222B               	addwfc	(btemp+1)^0,f,c
 14449                           
 14450                           ; _days_in_month: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 14451  001814  52E5               	movf	postdec1,f,c
 14452  001816  52E5               	movf	postdec1,f,c
 14453  001818  52E5               	movf	postdec1,f,c
 14454  00181A  52E5               	movf	postdec1,f,c
 14455  00181C  0012               	return		;funcret
 14456  00181E                     __end_of_days_in_month:
 14457                           	opt callstack 0
 14458                           
 14459 ;; *************** function ___year_to_secs *****************
 14460 ;; Defined at:
 14461 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__year_to_secs.c"
 14462 ;; Parameters:    Size  Location     Type
 14463 ;;  year            8  [STACK] long long 
 14464 ;;  is_leap         2  [STACK] PTR int 
 14465 ;;		 -> F5(2), is_leap(2), NULL(0), 
 14466 ;; Auto vars:     Size  Location     Type
 14467 ;;  y               2  [STACK] int 
 14468 ;;  leaps           2  [STACK] int 
 14469 ;;  rem             2  [STACK] int 
 14470 ;;  5               2  [STACK] int 
 14471 ;;  centuries       2  [STACK] int 
 14472 ;;  leaps           2  [STACK] int 
 14473 ;;  cycles          2  [STACK] int 
 14474 ;; Return value:  Size  Location     Type
 14475 ;;                  8  [STACK] long long 
 14476 ;; Registers used:
 14477 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btem
      +p+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btem
      +p+31, prodl, prodh
 14478 ;; Tracked objects:
 14479 ;;		On entry : 0/0
 14480 ;;		On exit  : 0/0
 14481 ;;		Unchanged: 0/0
 14482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14487 ;;Total ram usage:        0 bytes
 14488 ;; Hardware stack levels used:    1
 14489 ;; Hardware stack levels required when called:   16
 14490 ;; This function calls:
 14491 ;;		___aodiv
 14492 ;;		___aomod
 14493 ;;		___lmul
 14494 ;;		___omul
 14495 ;; This function is called by:
 14496 ;;		_rule_to_secs
 14497 ;;		___secs_to_zone
 14498 ;; This function uses a reentrant model
 14499 ;;
 14500                           
 14501                           	psect	text43
 14502  015450                     __ptext43:
 14503                           	opt callstack 0
 14504  015450                     ___year_to_secs:
 14505                           	opt callstack 0
 14506                           
 14507                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 14508  015450  0E0E               	movlw	14
 14509  015452  26E1               	addwf	fsr1l,f,c
 14510  015454  0E00               	movlw	0
 14511  015456  22E2               	addwfc	fsr1h,f,c
 14512                           
 14513                           ;stkvar	_year @ sp[(-14)+-8]
 14514                           
 14515                           ;incstack = 0
 14516  015458  0EEA               	movlw	-22
 14517  01545A  50E3               	movf	plusw1,w,c
 14518  01545C  0FFE               	addlw	254
 14519  01545E  6E3A               	movwf	(btemp+16)^0,c
 14520  015460  0EEB               	movlw	-21
 14521  015462  006F FF8C  F03B    	movff	plusw1,btemp+17
 14522  015468  0EFF               	movlw	255
 14523  01546A  223B               	addwfc	(btemp+17)^0,f,c
 14524  01546C  0EEC               	movlw	-20
 14525  01546E  006F FF8C  F03C    	movff	plusw1,btemp+18
 14526  015474  0EFF               	movlw	255
 14527  015476  223C               	addwfc	(btemp+18)^0,f,c
 14528  015478  0EED               	movlw	-19
 14529  01547A  006F FF8C  F03D    	movff	plusw1,btemp+19
 14530  015480  0EFF               	movlw	255
 14531  015482  223D               	addwfc	(btemp+19)^0,f,c
 14532  015484  0EEE               	movlw	-18
 14533  015486  006F FF8C  F03E    	movff	plusw1,btemp+20
 14534  01548C  0EFF               	movlw	255
 14535  01548E  223E               	addwfc	(btemp+20)^0,f,c
 14536  015490  0EEF               	movlw	-17
 14537  015492  006F FF8C  F03F    	movff	plusw1,btemp+21
 14538  015498  0EFF               	movlw	255
 14539  01549A  223F               	addwfc	(btemp+21)^0,f,c
 14540  01549C  0EF0               	movlw	-16
 14541  01549E  006F FF8C  F040    	movff	plusw1,btemp+22
 14542  0154A4  0EFF               	movlw	255
 14543  0154A6  2240               	addwfc	(btemp+22)^0,f,c
 14544  0154A8  0EF1               	movlw	-15
 14545  0154AA  006F FF8C  F041    	movff	plusw1,btemp+23
 14546  0154B0  0EFF               	movlw	255
 14547  0154B2  2241               	addwfc	(btemp+23)^0,f,c
 14548  0154B4  5041               	movf	(btemp+23)^0,w,c
 14549  0154B6  1040               	iorwf	(btemp+22)^0,w,c
 14550  0154B8  103F               	iorwf	(btemp+21)^0,w,c
 14551  0154BA  103E               	iorwf	(btemp+20)^0,w,c
 14552  0154BC  103D               	iorwf	(btemp+19)^0,w,c
 14553  0154BE  103C               	iorwf	(btemp+18)^0,w,c
 14554  0154C0  103B               	iorwf	(btemp+17)^0,w,c
 14555  0154C2  E103               	bnz	u10731
 14556  0154C4  0E89               	movlw	137
 14557  0154C6  5C3A               	subwf	(btemp+16)^0,w,c
 14558  0154C8  B0D8               	btfsc	status,0,c
 14559  0154CA                     u10731:
 14560  0154CA  D0E7               	goto	l11672
 14561                           
 14562                           ;stkvar	_year @ sp[(-14)+-8]
 14563                           ;stkvar	_y @ sp[(-14)+0]
 14564  0154CC  0EEA               	movlw	-22
 14565  0154CE  006F FF8C  F02A    	movff	plusw1,btemp
 14566  0154D4  0EF2               	movlw	-14
 14567  0154D6  0060  F0AB  FFE3   	movff	btemp,plusw1
 14568  0154DC  0EEB               	movlw	-21
 14569  0154DE  006F FF8C  F02A    	movff	plusw1,btemp
 14570  0154E4  0EF3               	movlw	-13
 14571  0154E6  0060  F0AB  FFE3   	movff	btemp,plusw1
 14572                           
 14573                           ;stkvar	_y @ sp[(-14)+0]
 14574  0154EC  0EF2               	movlw	-14
 14575  0154EE  50E3               	movf	plusw1,w,c
 14576  0154F0  0FBC               	addlw	188
 14577  0154F2  6E34               	movwf	(btemp+10)^0,c
 14578  0154F4  0EF3               	movlw	-13
 14579  0154F6  006F FF8C  F035    	movff	plusw1,btemp+11
 14580  0154FC  0EFF               	movlw	255
 14581  0154FE  2235               	addwfc	(btemp+11)^0,f,c
 14582  015500  3435               	rlcf	(btemp+11)^0,w,c
 14583  015502  3235               	rrcf	(btemp+11)^0,f,c
 14584  015504  3234               	rrcf	(btemp+10)^0,f,c
 14585  015506  3435               	rlcf	(btemp+11)^0,w,c
 14586  015508  3235               	rrcf	(btemp+11)^0,f,c
 14587  01550A  3234               	rrcf	(btemp+10)^0,f,c
 14588                           
 14589                           ;stkvar	_leaps @ sp[(-14)+2]
 14590  01550C  0EF4               	movlw	-12
 14591  01550E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14592  015514  0EF5               	movlw	-11
 14593  015516  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14594  01551C  0EBC               	movlw	188
 14595  01551E  6E35               	movwf	(btemp+11)^0,c
 14596                           
 14597                           ;stkvar	_y @ sp[(-14)+0]
 14598  015520  0EF2               	movlw	-14
 14599  015522  50E3               	movf	plusw1,w,c
 14600  015524  2435               	addwf	(btemp+11)^0,w,c
 14601  015526  6E34               	movwf	(btemp+10)^0,c
 14602  015528  0E03               	movlw	3
 14603  01552A  1634               	andwf	(btemp+10)^0,f,c
 14604  01552C  A4D8               	btfss	status,2,c
 14605  01552E  D01D               	goto	l11664
 14606                           
 14607                           ;stkvar	_leaps @ sp[(-14)+2]
 14608  015530  50E1               	movf	fsr1l,w,c
 14609  015532  0FF4               	addlw	-12
 14610  015534  6ED9               	movwf	fsr2l,c
 14611  015536  50E2               	movf	fsr1h,w,c
 14612  015538  6EDA               	movwf	fsr2h,c
 14613  01553A  0EFF               	movlw	255
 14614  01553C  22DA               	addwfc	fsr2h,f,c
 14615  01553E  06DE               	decf	postinc2,f,c
 14616  015540  0E00               	movlw	0
 14617  015542  5ADD               	subwfb	postdec2,f,c
 14618                           
 14619                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14620  015544  0EE8               	movlw	-24
 14621  015546  006F FF8C  F02A    	movff	plusw1,btemp
 14622  01554C  0EE9               	movlw	-23
 14623  01554E  50E3               	movf	plusw1,w,c
 14624  015550  102A               	iorwf	btemp^0,w,c
 14625  015552  B4D8               	btfsc	status,2,c
 14626  015554  D01F               	goto	l11668
 14627                           
 14628                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14629  015556  0EE8               	movlw	-24
 14630  015558  006F FF8F FFD9     	movff	plusw1,fsr2l
 14631  01555E  0EE9               	movlw	-23
 14632  015560  006F FF8F FFDA     	movff	plusw1,fsr2h
 14633  015566  0E01               	movlw	1
 14634  015568  D012               	goto	L12
 14635  01556A                     l11664:
 14636                           
 14637                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14638  01556A  0EE8               	movlw	-24
 14639  01556C  006F FF8C  F02A    	movff	plusw1,btemp
 14640  015572  0EE9               	movlw	-23
 14641  015574  50E3               	movf	plusw1,w,c
 14642  015576  102A               	iorwf	btemp^0,w,c
 14643  015578  B4D8               	btfsc	status,2,c
 14644  01557A  D00C               	goto	l11668
 14645                           
 14646                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14647  01557C  0EE8               	movlw	-24
 14648  01557E  006F FF8F FFD9     	movff	plusw1,fsr2l
 14649  015584  0EE9               	movlw	-23
 14650  015586  006F FF8F FFDA     	movff	plusw1,fsr2h
 14651  01558C  0E00               	movlw	0
 14652  01558E                     L12:
 14653  01558E  6EDE               	movwf	postinc2,c
 14654  015590  0E00               	movlw	0
 14655  015592  6EDD               	movwf	postdec2,c
 14656  015594                     l11668:
 14657  015594  0E80               	movlw	128
 14658  015596  6EE6               	movwf	postinc1,c
 14659  015598  0E33               	movlw	51
 14660  01559A  6EE6               	movwf	postinc1,c
 14661  01559C  0EE1               	movlw	225
 14662  01559E  6EE6               	movwf	postinc1,c
 14663  0155A0  0E01               	movlw	1
 14664  0155A2  6EE6               	movwf	postinc1,c
 14665                           
 14666                           ;stkvar	_y @ sp[(-18)+0]
 14667  0155A4  0EEE               	movlw	-18
 14668  0155A6  006F FF8C  F034    	movff	plusw1,btemp+10
 14669  0155AC  0EEF               	movlw	-17
 14670  0155AE  006F FF8C  F035    	movff	plusw1,btemp+11
 14671  0155B4  0EBA               	movlw	186
 14672  0155B6  2434               	addwf	(btemp+10)^0,w,c
 14673  0155B8  6E2E               	movwf	(btemp+4)^0,c
 14674  0155BA  0EFF               	movlw	255
 14675  0155BC  2035               	addwfc	(btemp+11)^0,w,c
 14676  0155BE  6E2F               	movwf	(btemp+5)^0,c
 14677  0155C0  6A30               	clrf	(btemp+6)^0,c
 14678  0155C2  BE2F               	btfsc	(btemp+5)^0,7,c
 14679  0155C4  0630               	decf	(btemp+6)^0,f,c
 14680  0155C6  5030               	movf	(btemp+6)^0,w,c
 14681  0155C8  6E31               	movwf	(btemp+7)^0,c
 14682  0155CA  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 14683  0155D0  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 14684  0155D6  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 14685  0155DC  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 14686  0155E2  ECBF  F001         	call	___lmul	;wreg free
 14687  0155E6  0060  F0A8  F032   	movff	btemp,btemp+8
 14688  0155EC  0060  F0AC  F033   	movff	btemp+1,btemp+9
 14689  0155F2  0060  F0B0  F034   	movff	btemp+2,btemp+10
 14690  0155F8  0060  F0B4  F035   	movff	btemp+3,btemp+11
 14691  0155FE  0E80               	movlw	128
 14692  015600  6EE6               	movwf	postinc1,c
 14693  015602  0E51               	movlw	81
 14694  015604  6EE6               	movwf	postinc1,c
 14695  015606  0E01               	movlw	1
 14696  015608  6EE6               	movwf	postinc1,c
 14697  01560A  0E00               	movlw	0
 14698  01560C  6EE6               	movwf	postinc1,c
 14699                           
 14700                           ;stkvar	_leaps @ sp[(-18)+2]
 14701  01560E  0EF0               	movlw	-16
 14702  015610  006F FF8C  F030    	movff	plusw1,btemp+6
 14703  015616  0EF1               	movlw	-15
 14704  015618  006F FF8C  F031    	movff	plusw1,btemp+7
 14705  01561E  0060  F0C0  F02A   	movff	btemp+6,btemp
 14706  015624  0060  F0C4  F02B   	movff	btemp+7,btemp+1
 14707  01562A  0E00               	movlw	0
 14708  01562C  BE2B               	btfsc	(btemp+1)^0,7,c
 14709  01562E  0EFF               	movlw	255
 14710  015630  6E2C               	movwf	(btemp+2)^0,c
 14711  015632  6E2D               	movwf	(btemp+3)^0,c
 14712  015634  0060  F0AB  FFE6   	movff	btemp,postinc1
 14713  01563A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 14714  015640  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 14715  015646  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 14716  01564C  ECBF  F001         	call	___lmul	;wreg free
 14717  015650  502A               	movf	btemp^0,w,c
 14718  015652  2432               	addwf	(btemp+8)^0,w,c
 14719  015654  6E2E               	movwf	(btemp+4)^0,c
 14720  015656  502B               	movf	(btemp+1)^0,w,c
 14721  015658  2033               	addwfc	(btemp+9)^0,w,c
 14722  01565A  6E2F               	movwf	(btemp+5)^0,c
 14723  01565C  502C               	movf	(btemp+2)^0,w,c
 14724  01565E  2034               	addwfc	(btemp+10)^0,w,c
 14725  015660  6E30               	movwf	(btemp+6)^0,c
 14726  015662  502D               	movf	(btemp+3)^0,w,c
 14727  015664  2035               	addwfc	(btemp+11)^0,w,c
 14728  015666  6E31               	movwf	(btemp+7)^0,c
 14729  015668  0060  F0B8  F03A   	movff	btemp+4,btemp+16
 14730  01566E  0060  F0BC  F03B   	movff	btemp+5,btemp+17
 14731  015674  0060  F0C0  F03C   	movff	btemp+6,btemp+18
 14732  01567A  0060  F0C4  F03D   	movff	btemp+7,btemp+19
 14733  015680  6A3E               	clrf	(btemp+20)^0,c
 14734  015682  BE3D               	btfsc	(btemp+19)^0,7,c
 14735  015684  683E               	setf	(btemp+20)^0,c
 14736  015686  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 14737  01568C  0060  F0F8  F040   	movff	btemp+20,btemp+22
 14738  015692  0060  F0F8  F041   	movff	btemp+20,btemp+23
 14739  015698  D36F               	goto	L13
 14740  01569A                     l11672:
 14741                           
 14742                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14743  01569A  0EE8               	movlw	-24
 14744  01569C  006F FF8C  F02A    	movff	plusw1,btemp
 14745  0156A2  0EE9               	movlw	-23
 14746  0156A4  50E3               	movf	plusw1,w,c
 14747  0156A6  102A               	iorwf	btemp^0,w,c
 14748  0156A8  A4D8               	btfss	status,2,c
 14749  0156AA  D012               	goto	l11678
 14750                           
 14751                           ;stkvar	F5 @ sp[(-14)+6]
 14752  0156AC  0EF8               	movlw	-8
 14753  0156AE  6AE3               	clrf	plusw1,c
 14754  0156B0  0EF9               	movlw	-7
 14755  0156B2  6AE3               	clrf	plusw1,c
 14756                           
 14757                           ;stkvar	F5 @ sp[(-14)+6]
 14758  0156B4  0EF8               	movlw	248
 14759  0156B6  24E1               	addwf	fsr1l,w,c
 14760  0156B8  6E34               	movwf	(btemp+10)^0,c
 14761  0156BA  0EFF               	movlw	255
 14762  0156BC  20E2               	addwfc	fsr1h,w,c
 14763  0156BE  6E35               	movwf	(btemp+11)^0,c
 14764                           
 14765                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14766  0156C0  0EE9               	movlw	-23
 14767  0156C2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14768  0156C8  0EE8               	movlw	-24
 14769  0156CA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14770  0156D0                     l11678:
 14771  0156D0  0E90               	movlw	144
 14772  0156D2  6EE6               	movwf	postinc1,c
 14773  0156D4  0E01               	movlw	1
 14774  0156D6  6EE6               	movwf	postinc1,c
 14775  0156D8  0E00               	movlw	0
 14776  0156DA  6EE6               	movwf	postinc1,c
 14777  0156DC  0E00               	movlw	0
 14778  0156DE  6EE6               	movwf	postinc1,c
 14779  0156E0  0E00               	movlw	0
 14780  0156E2  6EE6               	movwf	postinc1,c
 14781  0156E4  0E00               	movlw	0
 14782  0156E6  6EE6               	movwf	postinc1,c
 14783  0156E8  0E00               	movlw	0
 14784  0156EA  6EE6               	movwf	postinc1,c
 14785  0156EC  0E00               	movlw	0
 14786  0156EE  6EE6               	movwf	postinc1,c
 14787                           
 14788                           ;stkvar	_year @ sp[(-22)+-8]
 14789  0156F0  0EE2               	movlw	-30
 14790  0156F2  50E3               	movf	plusw1,w,c
 14791  0156F4  0F9C               	addlw	156
 14792  0156F6  6E3A               	movwf	(btemp+16)^0,c
 14793  0156F8  0EE3               	movlw	-29
 14794  0156FA  006F FF8C  F03B    	movff	plusw1,btemp+17
 14795  015700  0EFF               	movlw	255
 14796  015702  223B               	addwfc	(btemp+17)^0,f,c
 14797  015704  0EE4               	movlw	-28
 14798  015706  006F FF8C  F03C    	movff	plusw1,btemp+18
 14799  01570C  0EFF               	movlw	255
 14800  01570E  223C               	addwfc	(btemp+18)^0,f,c
 14801  015710  0EE5               	movlw	-27
 14802  015712  006F FF8C  F03D    	movff	plusw1,btemp+19
 14803  015718  0EFF               	movlw	255
 14804  01571A  223D               	addwfc	(btemp+19)^0,f,c
 14805  01571C  0EE6               	movlw	-26
 14806  01571E  006F FF8C  F03E    	movff	plusw1,btemp+20
 14807  015724  0EFF               	movlw	255
 14808  015726  223E               	addwfc	(btemp+20)^0,f,c
 14809  015728  0EE7               	movlw	-25
 14810  01572A  006F FF8C  F03F    	movff	plusw1,btemp+21
 14811  015730  0EFF               	movlw	255
 14812  015732  223F               	addwfc	(btemp+21)^0,f,c
 14813  015734  0EE8               	movlw	-24
 14814  015736  006F FF8C  F040    	movff	plusw1,btemp+22
 14815  01573C  0EFF               	movlw	255
 14816  01573E  2240               	addwfc	(btemp+22)^0,f,c
 14817  015740  0EE9               	movlw	-23
 14818  015742  006F FF8C  F041    	movff	plusw1,btemp+23
 14819  015748  0EFF               	movlw	255
 14820  01574A  2241               	addwfc	(btemp+23)^0,f,c
 14821  01574C  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 14822  015752  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 14823  015758  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 14824  01575E  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 14825  015764  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 14826  01576A  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 14827  015770  0060  F103  FFE6   	movff	btemp+22,postinc1
 14828  015776  0060  F107  FFE6   	movff	btemp+23,postinc1
 14829  01577C  EC3C  F0E1         	call	___aodiv	;wreg free
 14830  015780  52E5               	movf	postdec1,f,c
 14831  015782  006F FF9C  F041    	movff	indf1,btemp+23
 14832  015788  52E5               	movf	postdec1,f,c
 14833  01578A  006F FF9C  F040    	movff	indf1,btemp+22
 14834  015790  52E5               	movf	postdec1,f,c
 14835  015792  006F FF9C  F03F    	movff	indf1,btemp+21
 14836  015798  52E5               	movf	postdec1,f,c
 14837  01579A  006F FF9C  F03E    	movff	indf1,btemp+20
 14838  0157A0  52E5               	movf	postdec1,f,c
 14839  0157A2  006F FF9C  F03D    	movff	indf1,btemp+19
 14840  0157A8  52E5               	movf	postdec1,f,c
 14841  0157AA  006F FF9C  F03C    	movff	indf1,btemp+18
 14842  0157B0  52E5               	movf	postdec1,f,c
 14843  0157B2  006F FF9C  F03B    	movff	indf1,btemp+17
 14844  0157B8  52E5               	movf	postdec1,f,c
 14845  0157BA  006F FF9C  F03A    	movff	indf1,btemp+16
 14846  0157C0  0EF8               	movlw	248
 14847  0157C2  26E1               	addwf	fsr1l,f,c
 14848  0157C4  0EFF               	movlw	255
 14849  0157C6  22E2               	addwfc	fsr1h,f,c
 14850  0157C8  0060  F0E8  F034   	movff	btemp+16,btemp+10
 14851  0157CE  0060  F0EC  F035   	movff	btemp+17,btemp+11
 14852                           
 14853                           ;stkvar	_cycles @ sp[(-14)+12]
 14854  0157D4  0EFE               	movlw	-2
 14855  0157D6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14856  0157DC  0EFF               	movlw	-1
 14857  0157DE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14858  0157E4  0E90               	movlw	144
 14859  0157E6  6EE6               	movwf	postinc1,c
 14860  0157E8  0E01               	movlw	1
 14861  0157EA  6EE6               	movwf	postinc1,c
 14862  0157EC  0E00               	movlw	0
 14863  0157EE  6EE6               	movwf	postinc1,c
 14864  0157F0  0E00               	movlw	0
 14865  0157F2  6EE6               	movwf	postinc1,c
 14866  0157F4  0E00               	movlw	0
 14867  0157F6  6EE6               	movwf	postinc1,c
 14868  0157F8  0E00               	movlw	0
 14869  0157FA  6EE6               	movwf	postinc1,c
 14870  0157FC  0E00               	movlw	0
 14871  0157FE  6EE6               	movwf	postinc1,c
 14872  015800  0E00               	movlw	0
 14873  015802  6EE6               	movwf	postinc1,c
 14874                           
 14875                           ;stkvar	_year @ sp[(-22)+-8]
 14876  015804  0EE2               	movlw	-30
 14877  015806  50E3               	movf	plusw1,w,c
 14878  015808  0F9C               	addlw	156
 14879  01580A  6E3A               	movwf	(btemp+16)^0,c
 14880  01580C  0EE3               	movlw	-29
 14881  01580E  006F FF8C  F03B    	movff	plusw1,btemp+17
 14882  015814  0EFF               	movlw	255
 14883  015816  223B               	addwfc	(btemp+17)^0,f,c
 14884  015818  0EE4               	movlw	-28
 14885  01581A  006F FF8C  F03C    	movff	plusw1,btemp+18
 14886  015820  0EFF               	movlw	255
 14887  015822  223C               	addwfc	(btemp+18)^0,f,c
 14888  015824  0EE5               	movlw	-27
 14889  015826  006F FF8C  F03D    	movff	plusw1,btemp+19
 14890  01582C  0EFF               	movlw	255
 14891  01582E  223D               	addwfc	(btemp+19)^0,f,c
 14892  015830  0EE6               	movlw	-26
 14893  015832  006F FF8C  F03E    	movff	plusw1,btemp+20
 14894  015838  0EFF               	movlw	255
 14895  01583A  223E               	addwfc	(btemp+20)^0,f,c
 14896  01583C  0EE7               	movlw	-25
 14897  01583E  006F FF8C  F03F    	movff	plusw1,btemp+21
 14898  015844  0EFF               	movlw	255
 14899  015846  223F               	addwfc	(btemp+21)^0,f,c
 14900  015848  0EE8               	movlw	-24
 14901  01584A  006F FF8C  F040    	movff	plusw1,btemp+22
 14902  015850  0EFF               	movlw	255
 14903  015852  2240               	addwfc	(btemp+22)^0,f,c
 14904  015854  0EE9               	movlw	-23
 14905  015856  006F FF8C  F041    	movff	plusw1,btemp+23
 14906  01585C  0EFF               	movlw	255
 14907  01585E  2241               	addwfc	(btemp+23)^0,f,c
 14908  015860  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 14909  015866  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 14910  01586C  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 14911  015872  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 14912  015878  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 14913  01587E  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 14914  015884  0060  F103  FFE6   	movff	btemp+22,postinc1
 14915  01588A  0060  F107  FFE6   	movff	btemp+23,postinc1
 14916  015890  ECFB  F0E5         	call	___aomod	;wreg free
 14917  015894  52E5               	movf	postdec1,f,c
 14918  015896  006F FF9C  F041    	movff	indf1,btemp+23
 14919  01589C  52E5               	movf	postdec1,f,c
 14920  01589E  006F FF9C  F040    	movff	indf1,btemp+22
 14921  0158A4  52E5               	movf	postdec1,f,c
 14922  0158A6  006F FF9C  F03F    	movff	indf1,btemp+21
 14923  0158AC  52E5               	movf	postdec1,f,c
 14924  0158AE  006F FF9C  F03E    	movff	indf1,btemp+20
 14925  0158B4  52E5               	movf	postdec1,f,c
 14926  0158B6  006F FF9C  F03D    	movff	indf1,btemp+19
 14927  0158BC  52E5               	movf	postdec1,f,c
 14928  0158BE  006F FF9C  F03C    	movff	indf1,btemp+18
 14929  0158C4  52E5               	movf	postdec1,f,c
 14930  0158C6  006F FF9C  F03B    	movff	indf1,btemp+17
 14931  0158CC  52E5               	movf	postdec1,f,c
 14932  0158CE  006F FF9C  F03A    	movff	indf1,btemp+16
 14933  0158D4  0EF8               	movlw	248
 14934  0158D6  26E1               	addwf	fsr1l,f,c
 14935  0158D8  0EFF               	movlw	255
 14936  0158DA  22E2               	addwfc	fsr1h,f,c
 14937  0158DC  0060  F0E8  F034   	movff	btemp+16,btemp+10
 14938  0158E2  0060  F0EC  F035   	movff	btemp+17,btemp+11
 14939                           
 14940                           ;stkvar	_rem @ sp[(-14)+4]
 14941  0158E8  0EF6               	movlw	-10
 14942  0158EA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14943  0158F0  0EF7               	movlw	-9
 14944  0158F2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14945                           
 14946                           ;stkvar	_rem @ sp[(-14)+4]
 14947  0158F8  0EF7               	movlw	-9
 14948  0158FA  AEE3               	btfss	plusw1,7,c
 14949  0158FC  D015               	goto	l11688
 14950                           
 14951                           ;stkvar	_cycles @ sp[(-14)+12]
 14952  0158FE  50E1               	movf	fsr1l,w,c
 14953  015900  0FFE               	addlw	-2
 14954  015902  6ED9               	movwf	fsr2l,c
 14955  015904  50E2               	movf	fsr1h,w,c
 14956  015906  6EDA               	movwf	fsr2h,c
 14957  015908  0EFF               	movlw	255
 14958  01590A  22DA               	addwfc	fsr2h,f,c
 14959  01590C  06DE               	decf	postinc2,f,c
 14960  01590E  0E00               	movlw	0
 14961  015910  5ADD               	subwfb	postdec2,f,c
 14962                           
 14963                           ;stkvar	_rem @ sp[(-14)+4]
 14964  015912  50E1               	movf	fsr1l,w,c
 14965  015914  0FF6               	addlw	-10
 14966  015916  6ED9               	movwf	fsr2l,c
 14967  015918  50E2               	movf	fsr1h,w,c
 14968  01591A  6EDA               	movwf	fsr2h,c
 14969  01591C  0EFF               	movlw	255
 14970  01591E  22DA               	addwfc	fsr2h,f,c
 14971  015920  0E90               	movlw	144
 14972  015922  26DE               	addwf	postinc2,f,c
 14973  015924  0E01               	movlw	1
 14974  015926  22DD               	addwfc	postdec2,f,c
 14975  015928                     l11688:
 14976                           
 14977                           ;stkvar	_rem @ sp[(-14)+4]
 14978  015928  0EF6               	movlw	-10
 14979  01592A  006F FF8C  F02A    	movff	plusw1,btemp
 14980  015930  0EF7               	movlw	-9
 14981  015932  50E3               	movf	plusw1,w,c
 14982  015934  102A               	iorwf	btemp^0,w,c
 14983  015936  A4D8               	btfss	status,2,c
 14984  015938  D015               	goto	l11696
 14985                           
 14986                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14987  01593A  0EE8               	movlw	-24
 14988  01593C  006F FF8F FFD9     	movff	plusw1,fsr2l
 14989  015942  0EE9               	movlw	-23
 14990  015944  006F FF8F FFDA     	movff	plusw1,fsr2h
 14991  01594A  0E01               	movlw	1
 14992  01594C  6EDE               	movwf	postinc2,c
 14993  01594E  0E00               	movlw	0
 14994  015950  6EDD               	movwf	postdec2,c
 14995                           
 14996                           ;stkvar	_centuries @ sp[(-14)+8]
 14997  015952  0EFA               	movlw	-6
 14998  015954  6AE3               	clrf	plusw1,c
 14999  015956  0EFB               	movlw	-5
 15000  015958  6AE3               	clrf	plusw1,c
 15001  01595A                     l11694:
 15002                           
 15003                           ;stkvar	_leaps @ sp[(-14)+10]
 15004  01595A  0EFC               	movlw	-4
 15005  01595C  6AE3               	clrf	plusw1,c
 15006  01595E  0EFD               	movlw	-3
 15007  015960  6AE3               	clrf	plusw1,c
 15008  015962  D0D6               	goto	l11728
 15009  015964                     l11696:
 15010                           
 15011                           ;stkvar	_rem @ sp[(-14)+4]
 15012  015964  0EF7               	movlw	-9
 15013  015966  BEE3               	btfsc	plusw1,7,c
 15014  015968  D04A               	goto	l11708
 15015  01596A  0EF7               	movlw	-9
 15016  01596C  50E3               	movf	plusw1,w,c
 15017  01596E  E108               	bnz	u10800
 15018  015970  0EF6               	movlw	-10
 15019  015972  006F FF8C  F02A    	movff	plusw1,btemp
 15020  015978  0EC8               	movlw	200
 15021  01597A  5E2A               	subwf	btemp^0,f,c
 15022  01597C  A0D8               	btfss	status,0,c
 15023  01597E  D03F               	goto	l11708
 15024  015980                     u10800:
 15025                           
 15026                           ;stkvar	_rem @ sp[(-14)+4]
 15027  015980  0EF7               	movlw	-9
 15028  015982  BEE3               	btfsc	plusw1,7,c
 15029  015984  D025               	goto	l11704
 15030  015986  0EF6               	movlw	-10
 15031  015988  006F FF8C  F02A    	movff	plusw1,btemp
 15032  01598E  0E2C               	movlw	44
 15033  015990  5E2A               	subwf	btemp^0,f,c
 15034  015992  0EF7               	movlw	-9
 15035  015994  006F FF8C  F02A    	movff	plusw1,btemp
 15036  01599A  0E01               	movlw	1
 15037  01599C  5A2A               	subwfb	btemp^0,f,c
 15038  01599E  A0D8               	btfss	status,0,c
 15039  0159A0  D017               	goto	l11704
 15040  0159A2  0E03               	movlw	3
 15041  0159A4  6E34               	movwf	(btemp+10)^0,c
 15042  0159A6  0E00               	movlw	0
 15043  0159A8  6E35               	movwf	(btemp+11)^0,c
 15044                           
 15045                           ;stkvar	_centuries @ sp[(-14)+8]
 15046  0159AA  0EFA               	movlw	-6
 15047  0159AC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15048  0159B2  0EFB               	movlw	-5
 15049  0159B4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15050                           
 15051                           ;stkvar	_rem @ sp[(-14)+4]
 15052  0159BA  50E1               	movf	fsr1l,w,c
 15053  0159BC  0FF6               	addlw	-10
 15054  0159BE  6ED9               	movwf	fsr2l,c
 15055  0159C0  50E2               	movf	fsr1h,w,c
 15056  0159C2  6EDA               	movwf	fsr2h,c
 15057  0159C4  0EFF               	movlw	255
 15058  0159C6  22DA               	addwfc	fsr2h,f,c
 15059  0159C8  0ED4               	movlw	212
 15060  0159CA  26DE               	addwf	postinc2,f,c
 15061  0159CC  0EFE               	movlw	254
 15062  0159CE  D015               	goto	L14
 15063  0159D0                     l11704:
 15064  0159D0  0E02               	movlw	2
 15065  0159D2  6E34               	movwf	(btemp+10)^0,c
 15066  0159D4  0E00               	movlw	0
 15067  0159D6  6E35               	movwf	(btemp+11)^0,c
 15068                           
 15069                           ;stkvar	_centuries @ sp[(-14)+8]
 15070  0159D8  0EFA               	movlw	-6
 15071  0159DA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15072  0159E0  0EFB               	movlw	-5
 15073  0159E2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15074                           
 15075                           ;stkvar	_rem @ sp[(-14)+4]
 15076  0159E8  50E1               	movf	fsr1l,w,c
 15077  0159EA  0FF6               	addlw	-10
 15078  0159EC  6ED9               	movwf	fsr2l,c
 15079  0159EE  50E2               	movf	fsr1h,w,c
 15080  0159F0  6EDA               	movwf	fsr2h,c
 15081  0159F2  0EFF               	movlw	255
 15082  0159F4  22DA               	addwfc	fsr2h,f,c
 15083  0159F6  0E38               	movlw	56
 15084  0159F8  D024               	goto	L15
 15085  0159FA                     L14:
 15086  0159FA  22DD               	addwfc	postdec2,f,c
 15087  0159FC  D029               	goto	l11716
 15088  0159FE                     l11708:
 15089                           
 15090                           ;stkvar	_rem @ sp[(-14)+4]
 15091  0159FE  0EF7               	movlw	-9
 15092  015A00  BEE3               	btfsc	plusw1,7,c
 15093  015A02  D022               	goto	l11714
 15094  015A04  0EF7               	movlw	-9
 15095  015A06  50E3               	movf	plusw1,w,c
 15096  015A08  E108               	bnz	u10820
 15097  015A0A  0EF6               	movlw	-10
 15098  015A0C  006F FF8C  F02A    	movff	plusw1,btemp
 15099  015A12  0E64               	movlw	100
 15100  015A14  5E2A               	subwf	btemp^0,f,c
 15101  015A16  A0D8               	btfss	status,0,c
 15102  015A18  D017               	goto	l11714
 15103  015A1A                     u10820:
 15104  015A1A  0E01               	movlw	1
 15105  015A1C  6E34               	movwf	(btemp+10)^0,c
 15106  015A1E  0E00               	movlw	0
 15107  015A20  6E35               	movwf	(btemp+11)^0,c
 15108                           
 15109                           ;stkvar	_centuries @ sp[(-14)+8]
 15110  015A22  0EFA               	movlw	-6
 15111  015A24  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15112  015A2A  0EFB               	movlw	-5
 15113  015A2C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15114                           
 15115                           ;stkvar	_rem @ sp[(-14)+4]
 15116  015A32  50E1               	movf	fsr1l,w,c
 15117  015A34  0FF6               	addlw	-10
 15118  015A36  6ED9               	movwf	fsr2l,c
 15119  015A38  50E2               	movf	fsr1h,w,c
 15120  015A3A  6EDA               	movwf	fsr2h,c
 15121  015A3C  0EFF               	movlw	255
 15122  015A3E  22DA               	addwfc	fsr2h,f,c
 15123  015A40  0E9C               	movlw	156
 15124  015A42                     L15:
 15125  015A42  26DE               	addwf	postinc2,f,c
 15126  015A44  0EFF               	movlw	255
 15127  015A46  D7D9               	goto	L14
 15128  015A48                     l11714:
 15129                           
 15130                           ;stkvar	_centuries @ sp[(-14)+8]
 15131  015A48  0EFA               	movlw	-6
 15132  015A4A  6AE3               	clrf	plusw1,c
 15133  015A4C  0EFB               	movlw	-5
 15134  015A4E  6AE3               	clrf	plusw1,c
 15135  015A50                     l11716:
 15136                           
 15137                           ;stkvar	_rem @ sp[(-14)+4]
 15138  015A50  0EF6               	movlw	-10
 15139  015A52  006F FF8C  F02A    	movff	plusw1,btemp
 15140  015A58  0EF7               	movlw	-9
 15141  015A5A  50E3               	movf	plusw1,w,c
 15142  015A5C  102A               	iorwf	btemp^0,w,c
 15143  015A5E  A4D8               	btfss	status,2,c
 15144  015A60  D00D               	goto	l11722
 15145                           
 15146                           ;stkvar	_is_leap @ sp[(-14)+-10]
 15147  015A62  0EE8               	movlw	-24
 15148  015A64  006F FF8F FFD9     	movff	plusw1,fsr2l
 15149  015A6A  0EE9               	movlw	-23
 15150  015A6C  006F FF8F FFDA     	movff	plusw1,fsr2h
 15151  015A72  0E00               	movlw	0
 15152  015A74  6EDE               	movwf	postinc2,c
 15153  015A76  0E00               	movlw	0
 15154  015A78  6EDD               	movwf	postdec2,c
 15155  015A7A  D76F               	goto	l11694
 15156  015A7C                     l11722:
 15157                           
 15158                           ;stkvar	_rem @ sp[(-14)+4]
 15159  015A7C  0EF6               	movlw	-10
 15160  015A7E  006F FF8C  F034    	movff	plusw1,btemp+10
 15161  015A84  0EF7               	movlw	-9
 15162  015A86  006F FF8C  F035    	movff	plusw1,btemp+11
 15163  015A8C  90D8               	bcf	status,0,c
 15164  015A8E  3235               	rrcf	(btemp+11)^0,f,c
 15165  015A90  3234               	rrcf	(btemp+10)^0,f,c
 15166  015A92  90D8               	bcf	status,0,c
 15167  015A94  3235               	rrcf	(btemp+11)^0,f,c
 15168  015A96  3234               	rrcf	(btemp+10)^0,f,c
 15169                           
 15170                           ;stkvar	_leaps @ sp[(-14)+10]
 15171  015A98  0EFC               	movlw	-4
 15172  015A9A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15173  015AA0  0EFD               	movlw	-3
 15174  015AA2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15175  015AA8  0E03               	movlw	3
 15176  015AAA  6E34               	movwf	(btemp+10)^0,c
 15177  015AAC  0E00               	movlw	0
 15178  015AAE  6E35               	movwf	(btemp+11)^0,c
 15179                           
 15180                           ;stkvar	_rem @ sp[(-14)+4]
 15181  015AB0  0EF6               	movlw	-10
 15182  015AB2  006F FF8C  F02A    	movff	plusw1,btemp
 15183  015AB8  5034               	movf	(btemp+10)^0,w,c
 15184  015ABA  162A               	andwf	btemp^0,f,c
 15185  015ABC  0EF6               	movlw	-10
 15186  015ABE  0060  F0AB  FFE3   	movff	btemp,plusw1
 15187  015AC4  0EF7               	movlw	-9
 15188  015AC6  006F FF8C  F02A    	movff	plusw1,btemp
 15189  015ACC  5035               	movf	(btemp+11)^0,w,c
 15190  015ACE  162A               	andwf	btemp^0,f,c
 15191  015AD0  0EF7               	movlw	-9
 15192  015AD2  0060  F0AB  FFE3   	movff	btemp,plusw1
 15193                           
 15194                           ;stkvar	_rem @ sp[(-14)+4]
 15195  015AD8  0EF6               	movlw	-10
 15196  015ADA  006F FF8C  F02A    	movff	plusw1,btemp
 15197  015AE0  0EF7               	movlw	-9
 15198  015AE2  50E3               	movf	plusw1,w,c
 15199  015AE4  102A               	iorwf	btemp^0,w,c
 15200  015AE6  A4D8               	btfss	status,2,c
 15201  015AE8  D002               	goto	u10840
 15202  015AEA  0E01               	movlw	1
 15203  015AEC  D001               	goto	u10850
 15204  015AEE                     u10840:
 15205  015AEE  0E00               	movlw	0
 15206  015AF0                     u10850:
 15207  015AF0  6E34               	movwf	(btemp+10)^0,c
 15208  015AF2  6A35               	clrf	(btemp+11)^0,c
 15209                           
 15210                           ;stkvar	_is_leap @ sp[(-14)+-10]
 15211  015AF4  0EE8               	movlw	-24
 15212  015AF6  006F FF8F FFD9     	movff	plusw1,fsr2l
 15213  015AFC  0EE9               	movlw	-23
 15214  015AFE  006F FF8F FFDA     	movff	plusw1,fsr2h
 15215  015B04  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 15216  015B0A  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 15217  015B10                     l11728:
 15218                           
 15219                           ;stkvar	_is_leap @ sp[(-14)+-10]
 15220  015B10  0EE8               	movlw	-24
 15221  015B12  006F FF8F FFD9     	movff	plusw1,fsr2l
 15222  015B18  0EE9               	movlw	-23
 15223  015B1A  006F FF8F FFDA     	movff	plusw1,fsr2h
 15224  015B20  006F FF78  F034    	movff	postinc2,btemp+10
 15225  015B26  006F FF74  F035    	movff	postdec2,btemp+11
 15226                           
 15227                           ;stkvar	_centuries @ sp[(-14)+8]
 15228  015B2C  0EFA               	movlw	-6
 15229  015B2E  006F FF8C  F032    	movff	plusw1,btemp+8
 15230  015B34  0EFB               	movlw	-5
 15231  015B36  006F FF8C  F033    	movff	plusw1,btemp+9
 15232  015B3C  0E18               	movlw	24
 15233  015B3E  0232               	mulwf	(btemp+8)^0,c
 15234  015B40  006F FFCC  F030    	movff	prodl,btemp+6
 15235  015B46  006F FFD0  F031    	movff	prodh,btemp+7
 15236  015B4C  0233               	mulwf	(btemp+9)^0,c
 15237  015B4E  50F3               	movf	prodl,w,c
 15238  015B50  2631               	addwf	(btemp+7)^0,f,c
 15239                           
 15240                           ;stkvar	_cycles @ sp[(-14)+12]
 15241  015B52  0EFE               	movlw	-2
 15242  015B54  006F FF8C  F032    	movff	plusw1,btemp+8
 15243  015B5A  0EFF               	movlw	-1
 15244  015B5C  006F FF8C  F033    	movff	plusw1,btemp+9
 15245  015B62  0E61               	movlw	97
 15246  015B64  0232               	mulwf	(btemp+8)^0,c
 15247  015B66  006F FFCC  F02E    	movff	prodl,btemp+4
 15248  015B6C  006F FFD0  F02F    	movff	prodh,btemp+5
 15249  015B72  0233               	mulwf	(btemp+9)^0,c
 15250  015B74  50F3               	movf	prodl,w,c
 15251  015B76  262F               	addwf	(btemp+5)^0,f,c
 15252  015B78  5030               	movf	(btemp+6)^0,w,c
 15253  015B7A  262E               	addwf	(btemp+4)^0,f,c
 15254  015B7C  5031               	movf	(btemp+7)^0,w,c
 15255  015B7E  222F               	addwfc	(btemp+5)^0,f,c
 15256  015B80  5034               	movf	(btemp+10)^0,w,c
 15257  015B82  5E2E               	subwf	(btemp+4)^0,f,c
 15258  015B84  5035               	movf	(btemp+11)^0,w,c
 15259  015B86  5A2F               	subwfb	(btemp+5)^0,f,c
 15260                           
 15261                           ;stkvar	_leaps @ sp[(-14)+10]
 15262  015B88  50E1               	movf	fsr1l,w,c
 15263  015B8A  0FFC               	addlw	-4
 15264  015B8C  6ED9               	movwf	fsr2l,c
 15265  015B8E  50E2               	movf	fsr1h,w,c
 15266  015B90  6EDA               	movwf	fsr2h,c
 15267  015B92  0EFF               	movlw	255
 15268  015B94  22DA               	addwfc	fsr2h,f,c
 15269  015B96  502E               	movf	(btemp+4)^0,w,c
 15270  015B98  26DE               	addwf	postinc2,f,c
 15271  015B9A  502F               	movf	(btemp+5)^0,w,c
 15272  015B9C  22DD               	addwfc	postdec2,f,c
 15273  015B9E  0E80               	movlw	128
 15274  015BA0  6EE6               	movwf	postinc1,c
 15275  015BA2  0E51               	movlw	81
 15276  015BA4  6EE6               	movwf	postinc1,c
 15277  015BA6  0E01               	movlw	1
 15278  015BA8  6EE6               	movwf	postinc1,c
 15279  015BAA  0E00               	movlw	0
 15280  015BAC  6EE6               	movwf	postinc1,c
 15281  015BAE  0E00               	movlw	0
 15282  015BB0  6EE6               	movwf	postinc1,c
 15283  015BB2  0E00               	movlw	0
 15284  015BB4  6EE6               	movwf	postinc1,c
 15285  015BB6  0E00               	movlw	0
 15286  015BB8  6EE6               	movwf	postinc1,c
 15287  015BBA  0E00               	movlw	0
 15288  015BBC  6EE6               	movwf	postinc1,c
 15289                           
 15290                           ;stkvar	_leaps @ sp[(-22)+10]
 15291  015BBE  0EF4               	movlw	-12
 15292  015BC0  006F FF8C  F03A    	movff	plusw1,btemp+16
 15293  015BC6  0EF5               	movlw	-11
 15294  015BC8  006F FF8C  F03B    	movff	plusw1,btemp+17
 15295  015BCE  6A3C               	clrf	(btemp+18)^0,c
 15296  015BD0  BE3B               	btfsc	(btemp+17)^0,7,c
 15297  015BD2  683C               	setf	(btemp+18)^0,c
 15298  015BD4  0060  F0F0  F03D   	movff	btemp+18,btemp+19
 15299  015BDA  0060  F0F0  F03E   	movff	btemp+18,btemp+20
 15300  015BE0  0060  F0F0  F03F   	movff	btemp+18,btemp+21
 15301  015BE6  0060  F0F0  F040   	movff	btemp+18,btemp+22
 15302  015BEC  0060  F0F0  F041   	movff	btemp+18,btemp+23
 15303  015BF2  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 15304  015BF8  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 15305  015BFE  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 15306  015C04  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 15307  015C0A  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 15308  015C10  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 15309  015C16  0060  F103  FFE6   	movff	btemp+22,postinc1
 15310  015C1C  0060  F107  FFE6   	movff	btemp+23,postinc1
 15311  015C22  EC07  F0F7         	call	___omul	;wreg free
 15312  015C26  52E5               	movf	postdec1,f,c
 15313  015C28  006F FF9C  F041    	movff	indf1,btemp+23
 15314  015C2E  52E5               	movf	postdec1,f,c
 15315  015C30  006F FF9C  F040    	movff	indf1,btemp+22
 15316  015C36  52E5               	movf	postdec1,f,c
 15317  015C38  006F FF9C  F03F    	movff	indf1,btemp+21
 15318  015C3E  52E5               	movf	postdec1,f,c
 15319  015C40  006F FF9C  F03E    	movff	indf1,btemp+20
 15320  015C46  52E5               	movf	postdec1,f,c
 15321  015C48  006F FF9C  F03D    	movff	indf1,btemp+19
 15322  015C4E  52E5               	movf	postdec1,f,c
 15323  015C50  006F FF9C  F03C    	movff	indf1,btemp+18
 15324  015C56  52E5               	movf	postdec1,f,c
 15325  015C58  006F FF9C  F03B    	movff	indf1,btemp+17
 15326  015C5E  52E5               	movf	postdec1,f,c
 15327  015C60  006F FF9C  F03A    	movff	indf1,btemp+16
 15328  015C66  0EF8               	movlw	248
 15329  015C68  26E1               	addwf	fsr1l,f,c
 15330  015C6A  0EFF               	movlw	255
 15331  015C6C  22E2               	addwfc	fsr1h,f,c
 15332  015C6E  0E80               	movlw	128
 15333  015C70  6EE6               	movwf	postinc1,c
 15334  015C72  0E33               	movlw	51
 15335  015C74  6EE6               	movwf	postinc1,c
 15336  015C76  0EE1               	movlw	225
 15337  015C78  6EE6               	movwf	postinc1,c
 15338  015C7A  0E01               	movlw	1
 15339  015C7C  6EE6               	movwf	postinc1,c
 15340  015C7E  0E00               	movlw	0
 15341  015C80  6EE6               	movwf	postinc1,c
 15342  015C82  0E00               	movlw	0
 15343  015C84  6EE6               	movwf	postinc1,c
 15344  015C86  0E00               	movlw	0
 15345  015C88  6EE6               	movwf	postinc1,c
 15346  015C8A  0E00               	movlw	0
 15347  015C8C  6EE6               	movwf	postinc1,c
 15348                           
 15349                           ;stkvar	_year @ sp[(-22)+-8]
 15350  015C8E  50E1               	movf	fsr1l,w,c
 15351  015C90  0FE2               	addlw	-30
 15352  015C92  6ED9               	movwf	fsr2l,c
 15353  015C94  50E2               	movf	fsr1h,w,c
 15354  015C96  6EDA               	movwf	fsr2h,c
 15355  015C98  0EFF               	movlw	255
 15356  015C9A  22DA               	addwfc	fsr2h,f,c
 15357  015C9C  006F FF7B FFE6     	movff	postinc2,postinc1
 15358  015CA2  006F FF7B FFE6     	movff	postinc2,postinc1
 15359  015CA8  006F FF7B FFE6     	movff	postinc2,postinc1
 15360  015CAE  006F FF7B FFE6     	movff	postinc2,postinc1
 15361  015CB4  006F FF7B FFE6     	movff	postinc2,postinc1
 15362  015CBA  006F FF7B FFE6     	movff	postinc2,postinc1
 15363  015CC0  006F FF7B FFE6     	movff	postinc2,postinc1
 15364  015CC6  006F FF7B FFE6     	movff	postinc2,postinc1
 15365  015CCC  EC07  F0F7         	call	___omul	;wreg free
 15366  015CD0  52E5               	movf	postdec1,f,c
 15367  015CD2  006F FF9C  F049    	movff	indf1,btemp+31
 15368  015CD8  52E5               	movf	postdec1,f,c
 15369  015CDA  006F FF9C  F048    	movff	indf1,btemp+30
 15370  015CE0  52E5               	movf	postdec1,f,c
 15371  015CE2  006F FF9C  F047    	movff	indf1,btemp+29
 15372  015CE8  52E5               	movf	postdec1,f,c
 15373  015CEA  006F FF9C  F046    	movff	indf1,btemp+28
 15374  015CF0  52E5               	movf	postdec1,f,c
 15375  015CF2  006F FF9C  F045    	movff	indf1,btemp+27
 15376  015CF8  52E5               	movf	postdec1,f,c
 15377  015CFA  006F FF9C  F044    	movff	indf1,btemp+26
 15378  015D00  52E5               	movf	postdec1,f,c
 15379  015D02  006F FF9C  F043    	movff	indf1,btemp+25
 15380  015D08  52E5               	movf	postdec1,f,c
 15381  015D0A  006F FF9C  F042    	movff	indf1,btemp+24
 15382  015D10  0EF8               	movlw	248
 15383  015D12  26E1               	addwf	fsr1l,f,c
 15384  015D14  0EFF               	movlw	255
 15385  015D16  22E2               	addwfc	fsr1h,f,c
 15386  015D18  503A               	movf	(btemp+16)^0,w,c
 15387  015D1A  2442               	addwf	(btemp+24)^0,w,c
 15388  015D1C  6E32               	movwf	(btemp+8)^0,c
 15389  015D1E  503B               	movf	(btemp+17)^0,w,c
 15390  015D20  2043               	addwfc	(btemp+25)^0,w,c
 15391  015D22  6E33               	movwf	(btemp+9)^0,c
 15392  015D24  503C               	movf	(btemp+18)^0,w,c
 15393  015D26  2044               	addwfc	(btemp+26)^0,w,c
 15394  015D28  6E34               	movwf	(btemp+10)^0,c
 15395  015D2A  503D               	movf	(btemp+19)^0,w,c
 15396  015D2C  2045               	addwfc	(btemp+27)^0,w,c
 15397  015D2E  6E35               	movwf	(btemp+11)^0,c
 15398  015D30  503E               	movf	(btemp+20)^0,w,c
 15399  015D32  2046               	addwfc	(btemp+28)^0,w,c
 15400  015D34  6E36               	movwf	(btemp+12)^0,c
 15401  015D36  503F               	movf	(btemp+21)^0,w,c
 15402  015D38  2047               	addwfc	(btemp+29)^0,w,c
 15403  015D3A  6E37               	movwf	(btemp+13)^0,c
 15404  015D3C  5040               	movf	(btemp+22)^0,w,c
 15405  015D3E  2048               	addwfc	(btemp+30)^0,w,c
 15406  015D40  6E38               	movwf	(btemp+14)^0,c
 15407  015D42  5041               	movf	(btemp+23)^0,w,c
 15408  015D44  2049               	addwfc	(btemp+31)^0,w,c
 15409  015D46  6E39               	movwf	(btemp+15)^0,c
 15410  015D48  0E00               	movlw	0
 15411  015D4A  2432               	addwf	(btemp+8)^0,w,c
 15412  015D4C  6E3A               	movwf	(btemp+16)^0,c
 15413  015D4E  0E77               	movlw	119
 15414  015D50  2033               	addwfc	(btemp+9)^0,w,c
 15415  015D52  6E3B               	movwf	(btemp+17)^0,c
 15416  015D54  0E76               	movlw	118
 15417  015D56  2034               	addwfc	(btemp+10)^0,w,c
 15418  015D58  6E3C               	movwf	(btemp+18)^0,c
 15419  015D5A  0E7C               	movlw	124
 15420  015D5C  2035               	addwfc	(btemp+11)^0,w,c
 15421  015D5E  6E3D               	movwf	(btemp+19)^0,c
 15422  015D60  0EFF               	movlw	255
 15423  015D62  2036               	addwfc	(btemp+12)^0,w,c
 15424  015D64  6E3E               	movwf	(btemp+20)^0,c
 15425  015D66  0EFF               	movlw	255
 15426  015D68  2037               	addwfc	(btemp+13)^0,w,c
 15427  015D6A  6E3F               	movwf	(btemp+21)^0,c
 15428  015D6C  0EFF               	movlw	255
 15429  015D6E  2038               	addwfc	(btemp+14)^0,w,c
 15430  015D70  6E40               	movwf	(btemp+22)^0,c
 15431  015D72  0EFF               	movlw	255
 15432  015D74  2039               	addwfc	(btemp+15)^0,w,c
 15433  015D76  6E41               	movwf	(btemp+23)^0,c
 15434  015D78                     L13:
 15435                           
 15436                           ;stkvar	?___year_to_secs @ sp[(-14)+-8]
 15437  015D78  0EEA               	movlw	-22
 15438  015D7A  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 15439  015D80  0EEB               	movlw	-21
 15440  015D82  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 15441  015D88  0EEC               	movlw	-20
 15442  015D8A  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 15443  015D90  0EED               	movlw	-19
 15444  015D92  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 15445  015D98  0EEE               	movlw	-18
 15446  015D9A  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 15447  015DA0  0EEF               	movlw	-17
 15448  015DA2  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 15449  015DA8  0EF0               	movlw	-16
 15450  015DAA  0060  F103  FFE3   	movff	btemp+22,plusw1
 15451  015DB0  0EF1               	movlw	-15
 15452  015DB2  0060  F107  FFE3   	movff	btemp+23,plusw1
 15453                           
 15454                           ; ___year_to_secs: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          10, argsize = 10, vargsize = 0
 15455  015DB8  0EF2               	movlw	242
 15456  015DBA  26E1               	addwf	fsr1l,f,c
 15457  015DBC  0EFF               	movlw	255
 15458  015DBE  22E2               	addwfc	fsr1h,f,c
 15459  015DC0  0012               	return		;funcret
 15460  015DC2                     __end_of___year_to_secs:
 15461                           	opt callstack 0
 15462                           
 15463 ;; *************** function ___month_to_secs *****************
 15464 ;; Defined at:
 15465 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__month_to_secs.c"
 15466 ;; Parameters:    Size  Location     Type
 15467 ;;  month           2  [STACK] int 
 15468 ;;  is_leap         2  [STACK] int 
 15469 ;; Auto vars:     Size  Location     Type
 15470 ;;  t               4  [STACK] long 
 15471 ;; Return value:  Size  Location     Type
 15472 ;;                  4  [STACK] long 
 15473 ;; Registers used:
 15474 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl
 15475 ;; Tracked objects:
 15476 ;;		On entry : 0/0
 15477 ;;		On exit  : 0/0
 15478 ;;		Unchanged: 0/0
 15479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15484 ;;Total ram usage:        0 bytes
 15485 ;; Hardware stack levels used:    1
 15486 ;; Hardware stack levels required when called:   15
 15487 ;; This function calls:
 15488 ;;		Nothing
 15489 ;; This function is called by:
 15490 ;;		_rule_to_secs
 15491 ;; This function uses a reentrant model
 15492 ;;
 15493                           
 15494                           	psect	text44
 15495  0001A8                     __ptext44:
 15496                           	opt callstack 0
 15497  0001A8                     ___month_to_secs:
 15498                           	opt callstack 0
 15499                           
 15500                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15501  0001A8  52E6               	movf	postinc1,f,c
 15502  0001AA  52E6               	movf	postinc1,f,c
 15503  0001AC  52E6               	movf	postinc1,f,c
 15504  0001AE  52E6               	movf	postinc1,f,c
 15505                           
 15506                           ;stkvar	_month @ sp[(-4)+-2]
 15507                           
 15508                           ;incstack = 0
 15509  0001B0  0EFA               	movlw	-6
 15510  0001B2  006F FF8C  F034    	movff	plusw1,btemp+10
 15511  0001B8  0EFB               	movlw	-5
 15512  0001BA  006F FF8C  F035    	movff	plusw1,btemp+11
 15513  0001C0  90D8               	bcf	status,0,c
 15514  0001C2  3634               	rlcf	(btemp+10)^0,f,c
 15515  0001C4  3635               	rlcf	(btemp+11)^0,f,c
 15516  0001C6  90D8               	bcf	status,0,c
 15517  0001C8  3634               	rlcf	(btemp+10)^0,f,c
 15518  0001CA  3635               	rlcf	(btemp+11)^0,f,c
 15519  0001CC  0E7B               	movlw	low ___month_to_secs@secs_through_month
 15520  0001CE  2434               	addwf	(btemp+10)^0,w,c
 15521  0001D0  6EF6               	movwf	tblptrl,c
 15522  0001D2  0EF8               	movlw	high ___month_to_secs@secs_through_month
 15523  0001D4  2035               	addwfc	(btemp+11)^0,w,c
 15524  0001D6  6EF7               	movwf	tblptrh,c
 15525  0001D8                     	if	1	;There are 3 active tblptr bytes
 15526  0001D8  6AF8               	clrf	tblptru,c
 15527  0001DA  0E00               	movlw	low (__mediumconst shr (0+16))
 15528  0001DC  22F8               	addwfc	tblptru,f,c
 15529  0001DE                     	endif
 15530  0001DE  0009               	tblrd		*+
 15531  0001E0  006F FFD4  F032    	movff	tablat,btemp+8
 15532  0001E6  0009               	tblrd		*+
 15533  0001E8  006F FFD4  F033    	movff	tablat,btemp+9
 15534  0001EE  0009               	tblrd		*+
 15535  0001F0  006F FFD4  F034    	movff	tablat,btemp+10
 15536  0001F6  0009               	tblrd		*+
 15537  0001F8  006F FFD4  F035    	movff	tablat,btemp+11
 15538                           
 15539                           ;stkvar	_t @ sp[(-4)+0]
 15540  0001FE  0EFC               	movlw	-4
 15541  000200  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 15542  000206  0EFD               	movlw	-3
 15543  000208  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 15544  00020E  0EFE               	movlw	-2
 15545  000210  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15546  000216  0EFF               	movlw	-1
 15547  000218  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15548                           
 15549                           ;stkvar	_is_leap @ sp[(-4)+-4]
 15550  00021E  0EF8               	movlw	-8
 15551  000220  006F FF8C  F02A    	movff	plusw1,btemp
 15552  000226  0EF9               	movlw	-7
 15553  000228  50E3               	movf	plusw1,w,c
 15554  00022A  102A               	iorwf	btemp^0,w,c
 15555  00022C  B4D8               	btfsc	status,2,c
 15556  00022E  D01D               	goto	l11742
 15557                           
 15558                           ;stkvar	_month @ sp[(-4)+-2]
 15559  000230  0EFB               	movlw	-5
 15560  000232  BEE3               	btfsc	plusw1,7,c
 15561  000234  D01A               	goto	l11742
 15562  000236  0EFB               	movlw	-5
 15563  000238  50E3               	movf	plusw1,w,c
 15564  00023A  E108               	bnz	u10870
 15565  00023C  0EFA               	movlw	-6
 15566  00023E  006F FF8C  F02A    	movff	plusw1,btemp
 15567  000244  0E02               	movlw	2
 15568  000246  5E2A               	subwf	btemp^0,f,c
 15569  000248  A0D8               	btfss	status,0,c
 15570  00024A  D00F               	goto	l11742
 15571  00024C                     u10870:
 15572                           
 15573                           ;stkvar	_t @ sp[(-4)+0]
 15574  00024C  50E1               	movf	fsr1l,w,c
 15575  00024E  0FFC               	addlw	-4
 15576  000250  6ED9               	movwf	fsr2l,c
 15577  000252  50E2               	movf	fsr1h,w,c
 15578  000254  6EDA               	movwf	fsr2h,c
 15579  000256  0EFF               	movlw	255
 15580  000258  22DA               	addwfc	fsr2h,f,c
 15581  00025A  0E80               	movlw	128
 15582  00025C  26DE               	addwf	postinc2,f,c
 15583  00025E  0E51               	movlw	81
 15584  000260  22DE               	addwfc	postinc2,f,c
 15585  000262  0E01               	movlw	1
 15586  000264  22DE               	addwfc	postinc2,f,c
 15587  000266  0E00               	movlw	0
 15588  000268  22DE               	addwfc	postinc2,f,c
 15589  00026A                     l11742:
 15590                           
 15591                           ;stkvar	_t @ sp[(-4)+0]
 15592  00026A  0EFC               	movlw	-4
 15593  00026C  006F FF8C  F02A    	movff	plusw1,btemp
 15594  000272  0EFD               	movlw	-3
 15595  000274  006F FF8C  F02B    	movff	plusw1,btemp+1
 15596  00027A  0EFE               	movlw	-2
 15597  00027C  006F FF8C  F02C    	movff	plusw1,btemp+2
 15598  000282  0EFF               	movlw	-1
 15599  000284  006F FF8C  F02D    	movff	plusw1,btemp+3
 15600                           
 15601                           ; ___month_to_secs: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
 15602  00028A  0EF8               	movlw	248
 15603  00028C  26E1               	addwf	fsr1l,f,c
 15604  00028E  0EFF               	movlw	255
 15605  000290  22E2               	addwfc	fsr1h,f,c
 15606  000292  0012               	return		;funcret
 15607  000294                     __end_of___month_to_secs:
 15608                           	opt callstack 0
 15609                           
 15610 ;; *************** function _do_tzset *****************
 15611 ;; Defined at:
 15612 ;;		line 118 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 15613 ;; Parameters:    Size  Location     Type
 15614 ;;		None
 15615 ;; Auto vars:     Size  Location     Type
 15616 ;;  s               2  [STACK] PTR const unsigned char 
 15617 ;;		 -> __gmt(4), 
 15618 ;; Return value:  Size  Location     Type
 15619 ;;                  1  [STACK] void 
 15620 ;; Registers used:
 15621 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15622 ;; Tracked objects:
 15623 ;;		On entry : 0/39
 15624 ;;		On exit  : 0/0
 15625 ;;		Unchanged: 0/0
 15626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15631 ;;Total ram usage:        0 bytes
 15632 ;; Hardware stack levels used:    1
 15633 ;; Hardware stack levels required when called:   18
 15634 ;; This function calls:
 15635 ;;		_getname
 15636 ;;		_getoff
 15637 ;;		_getrule
 15638 ;; This function is called by:
 15639 ;;		___secs_to_zone
 15640 ;; This function uses a reentrant model
 15641 ;;
 15642                           
 15643                           	psect	text45
 15644  01BD78                     __ptext45:
 15645                           	opt callstack 0
 15646  01BD78                     _do_tzset:
 15647                           	opt callstack 0
 15648                           
 15649                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15650  01BD78  52E6               	movf	postinc1,f,c
 15651  01BD7A  52E6               	movf	postinc1,f,c
 15652                           
 15653                           ;stkvar	_s @ sp[(-2)+0]
 15654                           
 15655                           ;incstack = 0
 15656  01BD7C  0EF9               	movlw	high ___gmt
 15657  01BD7E  6E2A               	movwf	btemp^0,c
 15658  01BD80  0EFF               	movlw	-1
 15659  01BD82  0060  F0AB  FFE3   	movff	btemp,plusw1
 15660  01BD88  0EE7               	movlw	low ___gmt
 15661  01BD8A  6E2A               	movwf	btemp^0,c
 15662  01BD8C  0EFE               	movlw	-2
 15663  01BD8E  0060  F0AB  FFE3   	movff	btemp,plusw1
 15664                           
 15665                           ;stkvar	_s @ sp[(-2)+0]
 15666  01BD94  0EFE               	movlw	254
 15667  01BD96  24E1               	addwf	fsr1l,w,c
 15668  01BD98  6E2A               	movwf	btemp^0,c
 15669  01BD9A  0EFF               	movlw	255
 15670  01BD9C  20E2               	addwfc	fsr1h,w,c
 15671  01BD9E  6E2B               	movwf	(btemp+1)^0,c
 15672  01BDA0  0060  F0AB  FFE6   	movff	btemp,postinc1
 15673  01BDA6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15674  01BDAC  0EF6               	movlw	low _std_name
 15675  01BDAE  6EE6               	movwf	postinc1,c
 15676  01BDB0  0E01               	movlw	high _std_name
 15677  01BDB2  6EE6               	movwf	postinc1,c
 15678  01BDB4  EC90  F0D7         	call	_getname	;wreg free
 15679  01BDB8  0EF6               	movlw	low _std_name
 15680  01BDBA  0100               	movlb	0	; () banked
 15681  01BDBC  6F6C               	movwf	___tzname& (0+255),b
 15682  01BDBE  0E01               	movlw	high _std_name
 15683  01BDC0  6F6D               	movwf	(___tzname+1)& (0+255),b
 15684                           
 15685                           ; BSR set to: 0
 15686                           ;stkvar	_s @ sp[(-2)+0]
 15687  01BDC2  0EFE               	movlw	254
 15688  01BDC4  24E1               	addwf	fsr1l,w,c
 15689  01BDC6  6E2A               	movwf	btemp^0,c
 15690  01BDC8  0EFF               	movlw	255
 15691  01BDCA  20E2               	addwfc	fsr1h,w,c
 15692  01BDCC  6E2B               	movwf	(btemp+1)^0,c
 15693  01BDCE  0060  F0AB  FFE6   	movff	btemp,postinc1
 15694  01BDD4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15695  01BDDA  EC1B  F0E7         	call	_getoff	;wreg free
 15696  01BDDE  0060  F0A8  F070   	movff	btemp,___timezone
 15697  01BDE4  0060  F0AC  F071   	movff	btemp+1,___timezone+1
 15698  01BDEA  0100               	movlb	0	; () banked
 15699  01BDEC  0E00               	movlw	0
 15700  01BDEE  BF71               	btfsc	(___timezone+1)& (0+255),7,b
 15701  01BDF0  0EFF               	movlw	-1
 15702  01BDF2  6F72               	movwf	(___timezone+2)& (0+255),b
 15703  01BDF4  6F73               	movwf	(___timezone+3)& (0+255),b
 15704                           
 15705                           ; BSR set to: 0
 15706                           ;stkvar	_s @ sp[(-2)+0]
 15707  01BDF6  0EFE               	movlw	254
 15708  01BDF8  24E1               	addwf	fsr1l,w,c
 15709  01BDFA  6E2A               	movwf	btemp^0,c
 15710  01BDFC  0EFF               	movlw	255
 15711  01BDFE  20E2               	addwfc	fsr1h,w,c
 15712  01BE00  6E2B               	movwf	(btemp+1)^0,c
 15713  01BE02  0060  F0AB  FFE6   	movff	btemp,postinc1
 15714  01BE08  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15715  01BE0E  0EEF               	movlw	low _dst_name
 15716  01BE10  6EE6               	movwf	postinc1,c
 15717  01BE12  0E01               	movlw	high _dst_name
 15718  01BE14  6EE6               	movwf	postinc1,c
 15719  01BE16  EC90  F0D7         	call	_getname	;wreg free
 15720  01BE1A  0EEF               	movlw	low _dst_name
 15721  01BE1C  0100               	movlb	0	; () banked
 15722  01BE1E  6F6E               	movwf	(___tzname+2)& (0+255),b
 15723  01BE20  0E01               	movlw	high _dst_name
 15724  01BE22  6F6F               	movwf	(___tzname+3)& (0+255),b
 15725                           
 15726                           ; BSR set to: 0
 15727  01BE24  0101               	movlb	1	; () banked
 15728  01BE26  51EF               	movf	_dst_name& (0+255),w,b
 15729  01BE28  B4D8               	btfsc	status,2,c
 15730  01BE2A  D070               	goto	l3973
 15731                           
 15732                           ; BSR set to: 1
 15733  01BE2C  0E00               	movlw	0
 15734  01BE2E  0100               	movlb	0	; () banked
 15735  01BE30  6FB9               	movwf	(___daylight+1)& (0+255),b
 15736  01BE32  0E01               	movlw	1
 15737  01BE34  6FB8               	movwf	___daylight& (0+255),b
 15738                           
 15739                           ; BSR set to: 0
 15740                           ;stkvar	_s @ sp[(-2)+0]
 15741  01BE36  50E1               	movf	fsr1l,w,c
 15742  01BE38  0FFE               	addlw	-2
 15743  01BE3A  6ED9               	movwf	fsr2l,c
 15744  01BE3C  50E2               	movf	fsr1h,w,c
 15745  01BE3E  6EDA               	movwf	fsr2h,c
 15746  01BE40  0EFF               	movlw	255
 15747  01BE42  22DA               	addwfc	fsr2h,f,c
 15748  01BE44  006F FF7B FFF6     	movff	postinc2,tblptrl
 15749  01BE4A  006F FF77 FFF7     	movff	postdec2,tblptrh
 15750  01BE50                     	if	0	;tblptru may be non-zero
 15751  01BE50                     	endif
 15752  01BE50                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15753  01BE50  0E00               	movlw	low (__mediumconst shr (0+16))
 15754  01BE52  6EF8               	movwf	tblptru,c
 15755  01BE54                     	endif
 15756  01BE54  0008               	tblrd		*
 15757  01BE56  50F5               	movf	tablat,w,c
 15758  01BE58  0A2B               	xorlw	43
 15759  01BE5A  B4D8               	btfsc	status,2,c
 15760  01BE5C  D035               	goto	u16050
 15761                           
 15762                           ; BSR set to: 0
 15763                           ;stkvar	_s @ sp[(-2)+0]
 15764  01BE5E  50E1               	movf	fsr1l,w,c
 15765  01BE60  0FFE               	addlw	-2
 15766  01BE62  6ED9               	movwf	fsr2l,c
 15767  01BE64  50E2               	movf	fsr1h,w,c
 15768  01BE66  6EDA               	movwf	fsr2h,c
 15769  01BE68  0EFF               	movlw	255
 15770  01BE6A  22DA               	addwfc	fsr2h,f,c
 15771  01BE6C  006F FF7B FFF6     	movff	postinc2,tblptrl
 15772  01BE72  006F FF77 FFF7     	movff	postdec2,tblptrh
 15773  01BE78                     	if	0	;tblptru may be non-zero
 15774  01BE78                     	endif
 15775  01BE78                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15776  01BE78  0E00               	movlw	low (__mediumconst shr (0+16))
 15777  01BE7A  6EF8               	movwf	tblptru,c
 15778  01BE7C                     	endif
 15779  01BE7C  0008               	tblrd		*
 15780  01BE7E  50F5               	movf	tablat,w,c
 15781  01BE80  0A2D               	xorlw	45
 15782  01BE82  B4D8               	btfsc	status,2,c
 15783  01BE84  D021               	goto	u16050
 15784                           
 15785                           ; BSR set to: 0
 15786  01BE86  0ED0               	movlw	208
 15787  01BE88  6E34               	movwf	(btemp+10)^0,c
 15788  01BE8A  0EFF               	movlw	255
 15789  01BE8C  6E35               	movwf	(btemp+11)^0,c
 15790                           
 15791                           ;stkvar	_s @ sp[(-2)+0]
 15792  01BE8E  50E1               	movf	fsr1l,w,c
 15793  01BE90  0FFE               	addlw	-2
 15794  01BE92  6ED9               	movwf	fsr2l,c
 15795  01BE94  50E2               	movf	fsr1h,w,c
 15796  01BE96  6EDA               	movwf	fsr2h,c
 15797  01BE98  0EFF               	movlw	255
 15798  01BE9A  22DA               	addwfc	fsr2h,f,c
 15799  01BE9C  006F FF7B FFF6     	movff	postinc2,tblptrl
 15800  01BEA2  006F FF77 FFF7     	movff	postdec2,tblptrh
 15801  01BEA8                     	if	0	;tblptru may be non-zero
 15802  01BEA8                     	endif
 15803  01BEA8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15804  01BEA8  0E00               	movlw	low (__mediumconst shr (0+16))
 15805  01BEAA  6EF8               	movwf	tblptru,c
 15806  01BEAC                     	endif
 15807  01BEAC  0008               	tblrd		*
 15808  01BEAE  50F5               	movf	tablat,w,c
 15809  01BEB0  6E32               	movwf	(btemp+8)^0,c
 15810  01BEB2  6A33               	clrf	(btemp+9)^0,c
 15811  01BEB4  5034               	movf	(btemp+10)^0,w,c
 15812  01BEB6  2632               	addwf	(btemp+8)^0,f,c
 15813  01BEB8  5035               	movf	(btemp+11)^0,w,c
 15814  01BEBA  2233               	addwfc	(btemp+9)^0,f,c
 15815  01BEBC  5033               	movf	(btemp+9)^0,w,c
 15816  01BEBE  E119               	bnz	l16438
 15817  01BEC0  0E0A               	movlw	10
 15818  01BEC2  5C32               	subwf	(btemp+8)^0,w,c
 15819  01BEC4  B0D8               	btfsc	status,0,c
 15820  01BEC6  D015               	goto	l16438
 15821  01BEC8                     u16050:
 15822                           
 15823                           ; BSR set to: 0
 15824                           ;stkvar	_s @ sp[(-2)+0]
 15825  01BEC8  0EFE               	movlw	254
 15826  01BECA  24E1               	addwf	fsr1l,w,c
 15827  01BECC  6E2A               	movwf	btemp^0,c
 15828  01BECE  0EFF               	movlw	255
 15829  01BED0  20E2               	addwfc	fsr1h,w,c
 15830  01BED2  6E2B               	movwf	(btemp+1)^0,c
 15831  01BED4  0060  F0AB  FFE6   	movff	btemp,postinc1
 15832  01BEDA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15833  01BEE0  EC1B  F0E7         	call	_getoff	;wreg free
 15834  01BEE4  0060  F0A8  F0B6   	movff	btemp,_dst_off
 15835  01BEEA  0060  F0AC  F0B7   	movff	btemp+1,_dst_off+1
 15836  01BEF0  D012               	goto	l16440
 15837  01BEF2                     l16438:
 15838                           
 15839                           ; BSR set to: 0
 15840  01BEF2  0060  F1C0  F034   	movff	___timezone,btemp+10
 15841  01BEF8  0060  F1C4  F035   	movff	___timezone+1,btemp+11
 15842  01BEFE  0EF0               	movlw	240
 15843  01BF00  2434               	addwf	(btemp+10)^0,w,c
 15844  01BF02  6FB6               	movwf	_dst_off& (0+255),b
 15845  01BF04  0EF1               	movlw	241
 15846  01BF06  2035               	addwfc	(btemp+11)^0,w,c
 15847  01BF08  6FB7               	movwf	(_dst_off+1)& (0+255),b
 15848  01BF0A  D005               	goto	l16440
 15849  01BF0C                     l3973:
 15850                           
 15851                           ; BSR set to: 1
 15852  01BF0C  0100               	movlb	0	; () banked
 15853  01BF0E  6BB8               	clrf	___daylight& (0+255),b
 15854  01BF10  6BB9               	clrf	(___daylight+1)& (0+255),b
 15855  01BF12  6BB6               	clrf	_dst_off& (0+255),b
 15856  01BF14  6BB7               	clrf	(_dst_off+1)& (0+255),b
 15857  01BF16                     l16440:
 15858                           
 15859                           ;stkvar	_s @ sp[(-2)+0]
 15860  01BF16  50E1               	movf	fsr1l,w,c
 15861  01BF18  0FFE               	addlw	-2
 15862  01BF1A  6ED9               	movwf	fsr2l,c
 15863  01BF1C  50E2               	movf	fsr1h,w,c
 15864  01BF1E  6EDA               	movwf	fsr2h,c
 15865  01BF20  0EFF               	movlw	255
 15866  01BF22  22DA               	addwfc	fsr2h,f,c
 15867  01BF24  006F FF7B FFF6     	movff	postinc2,tblptrl
 15868  01BF2A  006F FF77 FFF7     	movff	postdec2,tblptrh
 15869  01BF30                     	if	0	;tblptru may be non-zero
 15870  01BF30                     	endif
 15871  01BF30                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15872  01BF30  0E00               	movlw	low (__mediumconst shr (0+16))
 15873  01BF32  6EF8               	movwf	tblptru,c
 15874  01BF34                     	endif
 15875  01BF34  0008               	tblrd		*
 15876  01BF36  50F5               	movf	tablat,w,c
 15877  01BF38  0A2C               	xorlw	44
 15878  01BF3A  A4D8               	btfss	status,2,c
 15879  01BF3C  D023               	goto	l16446
 15880                           
 15881                           ;stkvar	_s @ sp[(-2)+0]
 15882  01BF3E  0EFE               	movlw	-2
 15883  01BF40  50E3               	movf	plusw1,w,c
 15884  01BF42  0F01               	addlw	1
 15885  01BF44  6E2A               	movwf	btemp^0,c
 15886  01BF46  0EFE               	movlw	-2
 15887  01BF48  0060  F0AB  FFE3   	movff	btemp,plusw1
 15888  01BF4E  6A2A               	clrf	btemp^0,c
 15889  01BF50  0EFF               	movlw	-1
 15890  01BF52  50E3               	movf	plusw1,w,c
 15891  01BF54  202A               	addwfc	btemp^0,w,c
 15892  01BF56  6E2A               	movwf	btemp^0,c
 15893  01BF58  0EFF               	movlw	-1
 15894  01BF5A  0060  F0AB  FFE3   	movff	btemp,plusw1
 15895  01BF60  0EE5               	movlw	low _r0
 15896  01BF62  6EE6               	movwf	postinc1,c
 15897  01BF64  0E01               	movlw	high _r0
 15898  01BF66  6EE6               	movwf	postinc1,c
 15899                           
 15900                           ;stkvar	_s @ sp[(-4)+0]
 15901  01BF68  0EFC               	movlw	252
 15902  01BF6A  24E1               	addwf	fsr1l,w,c
 15903  01BF6C  6E2A               	movwf	btemp^0,c
 15904  01BF6E  0EFF               	movlw	255
 15905  01BF70  20E2               	addwfc	fsr1h,w,c
 15906  01BF72  6E2B               	movwf	(btemp+1)^0,c
 15907  01BF74  0060  F0AB  FFE6   	movff	btemp,postinc1
 15908  01BF7A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15909  01BF80  ECFC  F0DF         	call	_getrule	;wreg free
 15910  01BF84                     l16446:
 15911                           
 15912                           ;stkvar	_s @ sp[(-2)+0]
 15913  01BF84  50E1               	movf	fsr1l,w,c
 15914  01BF86  0FFE               	addlw	-2
 15915  01BF88  6ED9               	movwf	fsr2l,c
 15916  01BF8A  50E2               	movf	fsr1h,w,c
 15917  01BF8C  6EDA               	movwf	fsr2h,c
 15918  01BF8E  0EFF               	movlw	255
 15919  01BF90  22DA               	addwfc	fsr2h,f,c
 15920  01BF92  006F FF7B FFF6     	movff	postinc2,tblptrl
 15921  01BF98  006F FF77 FFF7     	movff	postdec2,tblptrh
 15922  01BF9E                     	if	0	;tblptru may be non-zero
 15923  01BF9E                     	endif
 15924  01BF9E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15925  01BF9E  0E00               	movlw	low (__mediumconst shr (0+16))
 15926  01BFA0  6EF8               	movwf	tblptru,c
 15927  01BFA2                     	endif
 15928  01BFA2  0008               	tblrd		*
 15929  01BFA4  50F5               	movf	tablat,w,c
 15930  01BFA6  0A2C               	xorlw	44
 15931  01BFA8  A4D8               	btfss	status,2,c
 15932  01BFAA  D023               	goto	l3981
 15933                           
 15934                           ;stkvar	_s @ sp[(-2)+0]
 15935  01BFAC  0EFE               	movlw	-2
 15936  01BFAE  50E3               	movf	plusw1,w,c
 15937  01BFB0  0F01               	addlw	1
 15938  01BFB2  6E2A               	movwf	btemp^0,c
 15939  01BFB4  0EFE               	movlw	-2
 15940  01BFB6  0060  F0AB  FFE3   	movff	btemp,plusw1
 15941  01BFBC  6A2A               	clrf	btemp^0,c
 15942  01BFBE  0EFF               	movlw	-1
 15943  01BFC0  50E3               	movf	plusw1,w,c
 15944  01BFC2  202A               	addwfc	btemp^0,w,c
 15945  01BFC4  6E2A               	movwf	btemp^0,c
 15946  01BFC6  0EFF               	movlw	-1
 15947  01BFC8  0060  F0AB  FFE3   	movff	btemp,plusw1
 15948  01BFCE  0EDB               	movlw	low _r1
 15949  01BFD0  6EE6               	movwf	postinc1,c
 15950  01BFD2  0E01               	movlw	high _r1
 15951  01BFD4  6EE6               	movwf	postinc1,c
 15952                           
 15953                           ;stkvar	_s @ sp[(-4)+0]
 15954  01BFD6  0EFC               	movlw	252
 15955  01BFD8  24E1               	addwf	fsr1l,w,c
 15956  01BFDA  6E2A               	movwf	btemp^0,c
 15957  01BFDC  0EFF               	movlw	255
 15958  01BFDE  20E2               	addwfc	fsr1h,w,c
 15959  01BFE0  6E2B               	movwf	(btemp+1)^0,c
 15960  01BFE2  0060  F0AB  FFE6   	movff	btemp,postinc1
 15961  01BFE8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15962  01BFEE  ECFC  F0DF         	call	_getrule	;wreg free
 15963  01BFF2                     l3981:
 15964                           
 15965                           ; _do_tzset: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
 15966  01BFF2  52E5               	movf	postdec1,f,c
 15967  01BFF4  52E5               	movf	postdec1,f,c
 15968  01BFF6  0012               	return		;funcret
 15969  01BFF8                     __end_of_do_tzset:
 15970                           	opt callstack 0
 15971                           
 15972 ;; *************** function _getrule *****************
 15973 ;; Defined at:
 15974 ;;		line 60 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 15975 ;; Parameters:    Size  Location     Type
 15976 ;;  p               2  [STACK] PTR PTR const unsigned c
 15977 ;;		 -> s(2), 
 15978 ;;  rule            2  [STACK] PTR int 
 15979 ;;		 -> r1(10), r0(10), 
 15980 ;; Auto vars:     Size  Location     Type
 15981 ;;  r               2  [STACK] int 
 15982 ;; Return value:  Size  Location     Type
 15983 ;;                  1  [STACK] void 
 15984 ;; Registers used:
 15985 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15986 ;; Tracked objects:
 15987 ;;		On entry : 0/0
 15988 ;;		On exit  : 0/0
 15989 ;;		Unchanged: 0/0
 15990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15995 ;;Total ram usage:        0 bytes
 15996 ;; Hardware stack levels used:    1
 15997 ;; Hardware stack levels required when called:   17
 15998 ;; This function calls:
 15999 ;;		_getint
 16000 ;;		_getoff
 16001 ;; This function is called by:
 16002 ;;		_do_tzset
 16003 ;; This function uses a reentrant model
 16004 ;;
 16005                           
 16006                           	psect	text46
 16007  01BFF8                     __ptext46:
 16008                           	opt callstack 0
 16009  01BFF8                     _getrule:
 16010                           	opt callstack 0
 16011                           
 16012                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16013  01BFF8  52E6               	movf	postinc1,f,c
 16014  01BFFA  52E6               	movf	postinc1,f,c
 16015                           
 16016                           ;stkvar	_p @ sp[(-2)+-2]
 16017                           
 16018                           ;incstack = 0
 16019  01BFFC  0EFC               	movlw	-4
 16020  01BFFE  006F FF8F FFD9     	movff	plusw1,fsr2l
 16021  01C004  0EFD               	movlw	-3
 16022  01C006  006F FF8F FFDA     	movff	plusw1,fsr2h
 16023  01C00C  006F FF7B FFF6     	movff	postinc2,tblptrl
 16024  01C012  006F FF77 FFF7     	movff	postdec2,tblptrh
 16025  01C018                     	if	0	;tblptru may be non-zero
 16026  01C018                     	endif
 16027  01C018                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16028  01C018  0E00               	movlw	low (__mediumconst shr (0+16))
 16029  01C01A  6EF8               	movwf	tblptru,c
 16030  01C01C                     	endif
 16031  01C01C  0008               	tblrd		*
 16032  01C01E  50F5               	movf	tablat,w,c
 16033  01C020  6E34               	movwf	(btemp+10)^0,c
 16034  01C022  6A35               	clrf	(btemp+11)^0,c
 16035                           
 16036                           ;stkvar	_rule @ sp[(-2)+-4]
 16037  01C024  0EFA               	movlw	-6
 16038  01C026  006F FF8F FFD9     	movff	plusw1,fsr2l
 16039  01C02C  0EFB               	movlw	-5
 16040  01C02E  006F FF8F FFDA     	movff	plusw1,fsr2h
 16041  01C034  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 16042  01C03A  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 16043  01C040  006F FF78  F034    	movff	postinc2,btemp+10
 16044  01C046  006F FF74  F035    	movff	postdec2,btemp+11
 16045                           
 16046                           ;stkvar	_r @ sp[(-2)+0]
 16047  01C04C  0EFE               	movlw	-2
 16048  01C04E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 16049  01C054  0EFF               	movlw	-1
 16050  01C056  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 16051                           
 16052                           ;stkvar	_r @ sp[(-2)+0]
 16053  01C05C  0EFE               	movlw	-2
 16054  01C05E  006F FF8C  F02A    	movff	plusw1,btemp
 16055  01C064  0E4D               	movlw	77
 16056  01C066  182A               	xorwf	btemp^0,w,c
 16057  01C068  E104               	bnz	u15630
 16058  01C06A  0EFF               	movlw	-1
 16059  01C06C  50E3               	movf	plusw1,w,c
 16060  01C06E  B4D8               	btfsc	status,2,c
 16061  01C070  D036               	goto	l16136
 16062  01C072                     u15630:
 16063                           
 16064                           ;stkvar	_r @ sp[(-2)+0]
 16065  01C072  0EFE               	movlw	-2
 16066  01C074  006F FF8C  F02A    	movff	plusw1,btemp
 16067  01C07A  0E4A               	movlw	74
 16068  01C07C  182A               	xorwf	btemp^0,w,c
 16069  01C07E  E110               	bnz	l16132
 16070  01C080  0EFF               	movlw	-1
 16071  01C082  50E3               	movf	plusw1,w,c
 16072  01C084  A4D8               	btfss	status,2,c
 16073  01C086  D00C               	goto	l16132
 16074                           
 16075                           ;stkvar	_p @ sp[(-2)+-2]
 16076  01C088  0EFC               	movlw	-4
 16077  01C08A  006F FF8F FFD9     	movff	plusw1,fsr2l
 16078  01C090  0EFD               	movlw	-3
 16079  01C092  006F FF8F FFDA     	movff	plusw1,fsr2h
 16080  01C098  2ADE               	incf	postinc2,f,c
 16081  01C09A  0E00               	movlw	0
 16082  01C09C  22DD               	addwfc	postdec2,f,c
 16083  01C09E  D00C               	goto	l16134
 16084  01C0A0                     l16132:
 16085                           
 16086                           ;stkvar	_rule @ sp[(-2)+-4]
 16087  01C0A0  0EFA               	movlw	-6
 16088  01C0A2  006F FF8F FFD9     	movff	plusw1,fsr2l
 16089  01C0A8  0EFB               	movlw	-5
 16090  01C0AA  006F FF8F FFDA     	movff	plusw1,fsr2h
 16091  01C0B0  0E00               	movlw	0
 16092  01C0B2  6EDE               	movwf	postinc2,c
 16093  01C0B4  0E00               	movlw	0
 16094  01C0B6  6EDD               	movwf	postdec2,c
 16095  01C0B8                     l16134:
 16096                           
 16097                           ;stkvar	_p @ sp[(-2)+-2]
 16098  01C0B8  0EFC               	movlw	-4
 16099  01C0BA  006F FF8F FFE6     	movff	plusw1,postinc1
 16100  01C0C0  006F FF8F FFE6     	movff	plusw1,postinc1
 16101  01C0C6  EC5B  F000         	call	_getint	;wreg free
 16102                           
 16103                           ;stkvar	_rule @ sp[(-2)+-4]
 16104  01C0CA  0EFA               	movlw	-6
 16105  01C0CC  006F FF8C  F034    	movff	plusw1,btemp+10
 16106  01C0D2  0EFB               	movlw	-5
 16107  01C0D4  006F FF8C  F035    	movff	plusw1,btemp+11
 16108  01C0DA  0E02               	movlw	2
 16109  01C0DC  D06D               	goto	L16
 16110  01C0DE                     l16136:
 16111                           
 16112                           ;stkvar	_p @ sp[(-2)+-2]
 16113  01C0DE  0EFC               	movlw	-4
 16114  01C0E0  006F FF8F FFD9     	movff	plusw1,fsr2l
 16115  01C0E6  0EFD               	movlw	-3
 16116  01C0E8  006F FF8F FFDA     	movff	plusw1,fsr2h
 16117  01C0EE  2ADE               	incf	postinc2,f,c
 16118  01C0F0  0E00               	movlw	0
 16119  01C0F2  22DD               	addwfc	postdec2,f,c
 16120                           
 16121                           ;stkvar	_p @ sp[(-2)+-2]
 16122  01C0F4  0EFC               	movlw	-4
 16123  01C0F6  006F FF8F FFE6     	movff	plusw1,postinc1
 16124  01C0FC  006F FF8F FFE6     	movff	plusw1,postinc1
 16125  01C102  EC5B  F000         	call	_getint	;wreg free
 16126                           
 16127                           ;stkvar	_rule @ sp[(-2)+-4]
 16128  01C106  0EFA               	movlw	-6
 16129  01C108  006F FF8C  F034    	movff	plusw1,btemp+10
 16130  01C10E  0EFB               	movlw	-5
 16131  01C110  006F FF8C  F035    	movff	plusw1,btemp+11
 16132  01C116  0E02               	movlw	2
 16133  01C118  2434               	addwf	(btemp+10)^0,w,c
 16134  01C11A  6ED9               	movwf	fsr2l,c
 16135  01C11C  0E00               	movlw	0
 16136  01C11E  2035               	addwfc	(btemp+11)^0,w,c
 16137  01C120  6EDA               	movwf	fsr2h,c
 16138  01C122  0060  F0AB  FFDE   	movff	btemp,postinc2
 16139  01C128  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 16140                           
 16141                           ;stkvar	_p @ sp[(-2)+-2]
 16142  01C12E  0EFC               	movlw	-4
 16143  01C130  006F FF8F FFD9     	movff	plusw1,fsr2l
 16144  01C136  0EFD               	movlw	-3
 16145  01C138  006F FF8F FFDA     	movff	plusw1,fsr2h
 16146  01C13E  2ADE               	incf	postinc2,f,c
 16147  01C140  0E00               	movlw	0
 16148  01C142  22DD               	addwfc	postdec2,f,c
 16149                           
 16150                           ;stkvar	_p @ sp[(-2)+-2]
 16151  01C144  0EFC               	movlw	-4
 16152  01C146  006F FF8F FFE6     	movff	plusw1,postinc1
 16153  01C14C  006F FF8F FFE6     	movff	plusw1,postinc1
 16154  01C152  EC5B  F000         	call	_getint	;wreg free
 16155                           
 16156                           ;stkvar	_rule @ sp[(-2)+-4]
 16157  01C156  0EFA               	movlw	-6
 16158  01C158  006F FF8C  F034    	movff	plusw1,btemp+10
 16159  01C15E  0EFB               	movlw	-5
 16160  01C160  006F FF8C  F035    	movff	plusw1,btemp+11
 16161  01C166  0E04               	movlw	4
 16162  01C168  2434               	addwf	(btemp+10)^0,w,c
 16163  01C16A  6ED9               	movwf	fsr2l,c
 16164  01C16C  0E00               	movlw	0
 16165  01C16E  2035               	addwfc	(btemp+11)^0,w,c
 16166  01C170  6EDA               	movwf	fsr2h,c
 16167  01C172  0060  F0AB  FFDE   	movff	btemp,postinc2
 16168  01C178  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 16169                           
 16170                           ;stkvar	_p @ sp[(-2)+-2]
 16171  01C17E  0EFC               	movlw	-4
 16172  01C180  006F FF8F FFD9     	movff	plusw1,fsr2l
 16173  01C186  0EFD               	movlw	-3
 16174  01C188  006F FF8F FFDA     	movff	plusw1,fsr2h
 16175  01C18E  2ADE               	incf	postinc2,f,c
 16176  01C190  0E00               	movlw	0
 16177  01C192  22DD               	addwfc	postdec2,f,c
 16178                           
 16179                           ;stkvar	_p @ sp[(-2)+-2]
 16180  01C194  0EFC               	movlw	-4
 16181  01C196  006F FF8F FFE6     	movff	plusw1,postinc1
 16182  01C19C  006F FF8F FFE6     	movff	plusw1,postinc1
 16183  01C1A2  EC5B  F000         	call	_getint	;wreg free
 16184                           
 16185                           ;stkvar	_rule @ sp[(-2)+-4]
 16186  01C1A6  0EFA               	movlw	-6
 16187  01C1A8  006F FF8C  F034    	movff	plusw1,btemp+10
 16188  01C1AE  0EFB               	movlw	-5
 16189  01C1B0  006F FF8C  F035    	movff	plusw1,btemp+11
 16190  01C1B6  0E06               	movlw	6
 16191  01C1B8                     L16:
 16192  01C1B8  2434               	addwf	(btemp+10)^0,w,c
 16193  01C1BA  6ED9               	movwf	fsr2l,c
 16194  01C1BC  0E00               	movlw	0
 16195  01C1BE  2035               	addwfc	(btemp+11)^0,w,c
 16196  01C1C0  6EDA               	movwf	fsr2h,c
 16197  01C1C2  0060  F0AB  FFDE   	movff	btemp,postinc2
 16198  01C1C8  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 16199                           
 16200                           ;stkvar	_p @ sp[(-2)+-2]
 16201  01C1CE  0EFC               	movlw	-4
 16202  01C1D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 16203  01C1D6  0EFD               	movlw	-3
 16204  01C1D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 16205  01C1DE  006F FF7B FFF6     	movff	postinc2,tblptrl
 16206  01C1E4  006F FF77 FFF7     	movff	postdec2,tblptrh
 16207  01C1EA                     	if	0	;tblptru may be non-zero
 16208  01C1EA                     	endif
 16209  01C1EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16210  01C1EA  0E00               	movlw	low (__mediumconst shr (0+16))
 16211  01C1EC  6EF8               	movwf	tblptru,c
 16212  01C1EE                     	endif
 16213  01C1EE  0008               	tblrd		*
 16214  01C1F0  50F5               	movf	tablat,w,c
 16215  01C1F2  0A2F               	xorlw	47
 16216  01C1F4  A4D8               	btfss	status,2,c
 16217  01C1F6  D029               	goto	l16152
 16218                           
 16219                           ;stkvar	_p @ sp[(-2)+-2]
 16220  01C1F8  0EFC               	movlw	-4
 16221  01C1FA  006F FF8F FFD9     	movff	plusw1,fsr2l
 16222  01C200  0EFD               	movlw	-3
 16223  01C202  006F FF8F FFDA     	movff	plusw1,fsr2h
 16224  01C208  2ADE               	incf	postinc2,f,c
 16225  01C20A  0E00               	movlw	0
 16226  01C20C  22DD               	addwfc	postdec2,f,c
 16227                           
 16228                           ;stkvar	_p @ sp[(-2)+-2]
 16229  01C20E  0EFC               	movlw	-4
 16230  01C210  006F FF8F FFE6     	movff	plusw1,postinc1
 16231  01C216  006F FF8F FFE6     	movff	plusw1,postinc1
 16232  01C21C  EC1B  F0E7         	call	_getoff	;wreg free
 16233                           
 16234                           ;stkvar	_rule @ sp[(-2)+-4]
 16235  01C220  0EFA               	movlw	-6
 16236  01C222  006F FF8C  F034    	movff	plusw1,btemp+10
 16237  01C228  0EFB               	movlw	-5
 16238  01C22A  006F FF8C  F035    	movff	plusw1,btemp+11
 16239  01C230  0E08               	movlw	8
 16240  01C232  2434               	addwf	(btemp+10)^0,w,c
 16241  01C234  6ED9               	movwf	fsr2l,c
 16242  01C236  0E00               	movlw	0
 16243  01C238  2035               	addwfc	(btemp+11)^0,w,c
 16244  01C23A  6EDA               	movwf	fsr2h,c
 16245  01C23C  0060  F0AB  FFDE   	movff	btemp,postinc2
 16246  01C242  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 16247  01C248  D012               	goto	l3946
 16248  01C24A                     l16152:
 16249                           
 16250                           ;stkvar	_rule @ sp[(-2)+-4]
 16251  01C24A  0EFA               	movlw	-6
 16252  01C24C  006F FF8C  F034    	movff	plusw1,btemp+10
 16253  01C252  0EFB               	movlw	-5
 16254  01C254  006F FF8C  F035    	movff	plusw1,btemp+11
 16255  01C25A  0E08               	movlw	8
 16256  01C25C  2434               	addwf	(btemp+10)^0,w,c
 16257  01C25E  6ED9               	movwf	fsr2l,c
 16258  01C260  0E00               	movlw	0
 16259  01C262  2035               	addwfc	(btemp+11)^0,w,c
 16260  01C264  6EDA               	movwf	fsr2h,c
 16261  01C266  0E20               	movlw	32
 16262  01C268  6EDE               	movwf	postinc2,c
 16263  01C26A  0E1C               	movlw	28
 16264  01C26C  6EDD               	movwf	postdec2,c
 16265  01C26E                     l3946:
 16266                           
 16267                           ; _getrule: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16268  01C26E  0EFA               	movlw	250
 16269  01C270  26E1               	addwf	fsr1l,f,c
 16270  01C272  0EFF               	movlw	255
 16271  01C274  22E2               	addwfc	fsr1h,f,c
 16272  01C276  0012               	return		;funcret
 16273  01C278                     __end_of_getrule:
 16274                           	opt callstack 0
 16275                           
 16276 ;; *************** function _getoff *****************
 16277 ;; Defined at:
 16278 ;;		line 39 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 16279 ;; Parameters:    Size  Location     Type
 16280 ;;  p               2  [STACK] PTR PTR const unsigned c
 16281 ;;		 -> s(2), 
 16282 ;; Auto vars:     Size  Location     Type
 16283 ;;  off             2  [STACK] int 
 16284 ;;  neg             2  [STACK] int 
 16285 ;; Return value:  Size  Location     Type
 16286 ;;                  2  [STACK] int 
 16287 ;; Registers used:
 16288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 16289 ;; Tracked objects:
 16290 ;;		On entry : 0/0
 16291 ;;		On exit  : 0/0
 16292 ;;		Unchanged: 0/0
 16293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16298 ;;Total ram usage:        0 bytes
 16299 ;; Hardware stack levels used:    1
 16300 ;; Hardware stack levels required when called:   16
 16301 ;; This function calls:
 16302 ;;		_getint
 16303 ;; This function is called by:
 16304 ;;		_getrule
 16305 ;;		_do_tzset
 16306 ;; This function uses a reentrant model
 16307 ;;
 16308                           
 16309                           	psect	text47
 16310  01CE36                     __ptext47:
 16311                           	opt callstack 0
 16312  01CE36                     _getoff:
 16313                           	opt callstack 0
 16314                           
 16315                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16316  01CE36  52E6               	movf	postinc1,f,c
 16317  01CE38  52E6               	movf	postinc1,f,c
 16318  01CE3A  52E6               	movf	postinc1,f,c
 16319  01CE3C  52E6               	movf	postinc1,f,c
 16320                           
 16321                           ;stkvar	_neg @ sp[(-4)+2]
 16322                           
 16323                           ;incstack = 0
 16324  01CE3E  0EFE               	movlw	-2
 16325  01CE40  6AE3               	clrf	plusw1,c
 16326  01CE42  0EFF               	movlw	-1
 16327  01CE44  6AE3               	clrf	plusw1,c
 16328                           
 16329                           ;stkvar	_p @ sp[(-4)+-2]
 16330  01CE46  0EFA               	movlw	-6
 16331  01CE48  006F FF8F FFD9     	movff	plusw1,fsr2l
 16332  01CE4E  0EFB               	movlw	-5
 16333  01CE50  006F FF8F FFDA     	movff	plusw1,fsr2h
 16334  01CE56  006F FF7B FFF6     	movff	postinc2,tblptrl
 16335  01CE5C  006F FF77 FFF7     	movff	postdec2,tblptrh
 16336  01CE62                     	if	0	;tblptru may be non-zero
 16337  01CE62                     	endif
 16338  01CE62                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16339  01CE62  0E00               	movlw	low (__mediumconst shr (0+16))
 16340  01CE64  6EF8               	movwf	tblptru,c
 16341  01CE66                     	endif
 16342  01CE66  0008               	tblrd		*
 16343  01CE68  50F5               	movf	tablat,w,c
 16344  01CE6A  0A2D               	xorlw	45
 16345  01CE6C  A4D8               	btfss	status,2,c
 16346  01CE6E  D018               	goto	l10878
 16347                           
 16348                           ;stkvar	_p @ sp[(-4)+-2]
 16349  01CE70  0EFA               	movlw	-6
 16350  01CE72  006F FF8F FFD9     	movff	plusw1,fsr2l
 16351  01CE78  0EFB               	movlw	-5
 16352  01CE7A  006F FF8F FFDA     	movff	plusw1,fsr2h
 16353  01CE80  2ADE               	incf	postinc2,f,c
 16354  01CE82  0E00               	movlw	0
 16355  01CE84  22DD               	addwfc	postdec2,f,c
 16356  01CE86  0E01               	movlw	1
 16357  01CE88  6E34               	movwf	(btemp+10)^0,c
 16358  01CE8A  0E00               	movlw	0
 16359  01CE8C  6E35               	movwf	(btemp+11)^0,c
 16360                           
 16361                           ;stkvar	_neg @ sp[(-4)+2]
 16362  01CE8E  0EFE               	movlw	-2
 16363  01CE90  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 16364  01CE96  0EFF               	movlw	-1
 16365  01CE98  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 16366  01CE9E  D020               	goto	l10882
 16367  01CEA0                     l10878:
 16368                           
 16369                           ;stkvar	_p @ sp[(-4)+-2]
 16370  01CEA0  0EFA               	movlw	-6
 16371  01CEA2  006F FF8F FFD9     	movff	plusw1,fsr2l
 16372  01CEA8  0EFB               	movlw	-5
 16373  01CEAA  006F FF8F FFDA     	movff	plusw1,fsr2h
 16374  01CEB0  006F FF7B FFF6     	movff	postinc2,tblptrl
 16375  01CEB6  006F FF77 FFF7     	movff	postdec2,tblptrh
 16376  01CEBC                     	if	0	;tblptru may be non-zero
 16377  01CEBC                     	endif
 16378  01CEBC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16379  01CEBC  0E00               	movlw	low (__mediumconst shr (0+16))
 16380  01CEBE  6EF8               	movwf	tblptru,c
 16381  01CEC0                     	endif
 16382  01CEC0  0008               	tblrd		*
 16383  01CEC2  50F5               	movf	tablat,w,c
 16384  01CEC4  0A2B               	xorlw	43
 16385  01CEC6  A4D8               	btfss	status,2,c
 16386  01CEC8  D00B               	goto	l10882
 16387                           
 16388                           ;stkvar	_p @ sp[(-4)+-2]
 16389  01CECA  0EFA               	movlw	-6
 16390  01CECC  006F FF8F FFD9     	movff	plusw1,fsr2l
 16391  01CED2  0EFB               	movlw	-5
 16392  01CED4  006F FF8F FFDA     	movff	plusw1,fsr2h
 16393  01CEDA  2ADE               	incf	postinc2,f,c
 16394  01CEDC  0E00               	movlw	0
 16395  01CEDE  22DD               	addwfc	postdec2,f,c
 16396  01CEE0                     l10882:
 16397                           
 16398                           ;stkvar	_p @ sp[(-4)+-2]
 16399  01CEE0  0EFA               	movlw	-6
 16400  01CEE2  006F FF8F FFE6     	movff	plusw1,postinc1
 16401  01CEE8  006F FF8F FFE6     	movff	plusw1,postinc1
 16402  01CEEE  EC5B  F000         	call	_getint	;wreg free
 16403  01CEF2  0060  F0A8  F034   	movff	btemp,btemp+10
 16404  01CEF8  0060  F0AC  F035   	movff	btemp+1,btemp+11
 16405  01CEFE  0E10               	movlw	16
 16406  01CF00  0234               	mulwf	(btemp+10)^0,c
 16407  01CF02  006F FFCC  F032    	movff	prodl,btemp+8
 16408  01CF08  006F FFD0  F033    	movff	prodh,btemp+9
 16409  01CF0E  0235               	mulwf	(btemp+11)^0,c
 16410  01CF10  50F3               	movf	prodl,w,c
 16411  01CF12  2633               	addwf	(btemp+9)^0,f,c
 16412  01CF14  0E0E               	movlw	14
 16413  01CF16  0234               	mulwf	(btemp+10)^0,c
 16414  01CF18  50F3               	movf	prodl,w,c
 16415  01CF1A  2633               	addwf	(btemp+9)^0,f,c
 16416                           
 16417                           ;stkvar	_off @ sp[(-4)+0]
 16418  01CF1C  0EFC               	movlw	-4
 16419  01CF1E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 16420  01CF24  0EFD               	movlw	-3
 16421  01CF26  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 16422                           
 16423                           ;stkvar	_p @ sp[(-4)+-2]
 16424  01CF2C  0EFA               	movlw	-6
 16425  01CF2E  006F FF8F FFD9     	movff	plusw1,fsr2l
 16426  01CF34  0EFB               	movlw	-5
 16427  01CF36  006F FF8F FFDA     	movff	plusw1,fsr2h
 16428  01CF3C  006F FF7B FFF6     	movff	postinc2,tblptrl
 16429  01CF42  006F FF77 FFF7     	movff	postdec2,tblptrh
 16430  01CF48                     	if	0	;tblptru may be non-zero
 16431  01CF48                     	endif
 16432  01CF48                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16433  01CF48  0E00               	movlw	low (__mediumconst shr (0+16))
 16434  01CF4A  6EF8               	movwf	tblptru,c
 16435  01CF4C                     	endif
 16436  01CF4C  0008               	tblrd		*
 16437  01CF4E  50F5               	movf	tablat,w,c
 16438  01CF50  0A3A               	xorlw	58
 16439  01CF52  A4D8               	btfss	status,2,c
 16440  01CF54  D064               	goto	l10896
 16441                           
 16442                           ;stkvar	_p @ sp[(-4)+-2]
 16443  01CF56  0EFA               	movlw	-6
 16444  01CF58  006F FF8F FFD9     	movff	plusw1,fsr2l
 16445  01CF5E  0EFB               	movlw	-5
 16446  01CF60  006F FF8F FFDA     	movff	plusw1,fsr2h
 16447  01CF66  2ADE               	incf	postinc2,f,c
 16448  01CF68  0E00               	movlw	0
 16449  01CF6A  22DD               	addwfc	postdec2,f,c
 16450                           
 16451                           ;stkvar	_p @ sp[(-4)+-2]
 16452  01CF6C  0EFA               	movlw	-6
 16453  01CF6E  006F FF8F FFE6     	movff	plusw1,postinc1
 16454  01CF74  006F FF8F FFE6     	movff	plusw1,postinc1
 16455  01CF7A  EC5B  F000         	call	_getint	;wreg free
 16456  01CF7E  0060  F0A8  F034   	movff	btemp,btemp+10
 16457  01CF84  0060  F0AC  F035   	movff	btemp+1,btemp+11
 16458  01CF8A  0E3C               	movlw	60
 16459  01CF8C  0234               	mulwf	(btemp+10)^0,c
 16460  01CF8E  006F FFCC  F032    	movff	prodl,btemp+8
 16461  01CF94  006F FFD0  F033    	movff	prodh,btemp+9
 16462  01CF9A  0235               	mulwf	(btemp+11)^0,c
 16463  01CF9C  50F3               	movf	prodl,w,c
 16464  01CF9E  2633               	addwf	(btemp+9)^0,f,c
 16465                           
 16466                           ;stkvar	_off @ sp[(-4)+0]
 16467  01CFA0  50E1               	movf	fsr1l,w,c
 16468  01CFA2  0FFC               	addlw	-4
 16469  01CFA4  6ED9               	movwf	fsr2l,c
 16470  01CFA6  50E2               	movf	fsr1h,w,c
 16471  01CFA8  6EDA               	movwf	fsr2h,c
 16472  01CFAA  0EFF               	movlw	255
 16473  01CFAC  22DA               	addwfc	fsr2h,f,c
 16474  01CFAE  5032               	movf	(btemp+8)^0,w,c
 16475  01CFB0  26DE               	addwf	postinc2,f,c
 16476  01CFB2  5033               	movf	(btemp+9)^0,w,c
 16477  01CFB4  22DD               	addwfc	postdec2,f,c
 16478                           
 16479                           ;stkvar	_p @ sp[(-4)+-2]
 16480  01CFB6  0EFA               	movlw	-6
 16481  01CFB8  006F FF8F FFD9     	movff	plusw1,fsr2l
 16482  01CFBE  0EFB               	movlw	-5
 16483  01CFC0  006F FF8F FFDA     	movff	plusw1,fsr2h
 16484  01CFC6  006F FF7B FFF6     	movff	postinc2,tblptrl
 16485  01CFCC  006F FF77 FFF7     	movff	postdec2,tblptrh
 16486  01CFD2                     	if	0	;tblptru may be non-zero
 16487  01CFD2                     	endif
 16488  01CFD2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16489  01CFD2  0E00               	movlw	low (__mediumconst shr (0+16))
 16490  01CFD4  6EF8               	movwf	tblptru,c
 16491  01CFD6                     	endif
 16492  01CFD6  0008               	tblrd		*
 16493  01CFD8  50F5               	movf	tablat,w,c
 16494  01CFDA  0A3A               	xorlw	58
 16495  01CFDC  A4D8               	btfss	status,2,c
 16496  01CFDE  D01F               	goto	l10896
 16497                           
 16498                           ;stkvar	_p @ sp[(-4)+-2]
 16499  01CFE0  0EFA               	movlw	-6
 16500  01CFE2  006F FF8F FFD9     	movff	plusw1,fsr2l
 16501  01CFE8  0EFB               	movlw	-5
 16502  01CFEA  006F FF8F FFDA     	movff	plusw1,fsr2h
 16503  01CFF0  2ADE               	incf	postinc2,f,c
 16504  01CFF2  0E00               	movlw	0
 16505  01CFF4  22DD               	addwfc	postdec2,f,c
 16506                           
 16507                           ;stkvar	_p @ sp[(-4)+-2]
 16508  01CFF6  0EFA               	movlw	-6
 16509  01CFF8  006F FF8F FFE6     	movff	plusw1,postinc1
 16510  01CFFE  006F FF8F FFE6     	movff	plusw1,postinc1
 16511  01D004  EC5B  F000         	call	_getint	;wreg free
 16512                           
 16513                           ;stkvar	_off @ sp[(-4)+0]
 16514  01D008  50E1               	movf	fsr1l,w,c
 16515  01D00A  0FFC               	addlw	-4
 16516  01D00C  6ED9               	movwf	fsr2l,c
 16517  01D00E  50E2               	movf	fsr1h,w,c
 16518  01D010  6EDA               	movwf	fsr2h,c
 16519  01D012  0EFF               	movlw	255
 16520  01D014  22DA               	addwfc	fsr2h,f,c
 16521  01D016  502A               	movf	btemp^0,w,c
 16522  01D018  26DE               	addwf	postinc2,f,c
 16523  01D01A  502B               	movf	(btemp+1)^0,w,c
 16524  01D01C  22DD               	addwfc	postdec2,f,c
 16525  01D01E                     l10896:
 16526                           
 16527                           ;stkvar	_neg @ sp[(-4)+2]
 16528  01D01E  0EFE               	movlw	-2
 16529  01D020  006F FF8C  F02A    	movff	plusw1,btemp
 16530  01D026  0EFF               	movlw	-1
 16531  01D028  50E3               	movf	plusw1,w,c
 16532  01D02A  102A               	iorwf	btemp^0,w,c
 16533  01D02C  A4D8               	btfss	status,2,c
 16534  01D02E  D009               	goto	l10900
 16535                           
 16536                           ;stkvar	_off @ sp[(-4)+0]
 16537  01D030  0EFC               	movlw	-4
 16538  01D032  006F FF8C  F02A    	movff	plusw1,btemp
 16539  01D038  0EFD               	movlw	-3
 16540  01D03A  006F FF8C  F02B    	movff	plusw1,btemp+1
 16541  01D040  D00D               	goto	l3937
 16542  01D042                     l10900:
 16543                           
 16544                           ;stkvar	_off @ sp[(-4)+0]
 16545  01D042  0EFC               	movlw	-4
 16546  01D044  006F FF8C  F02A    	movff	plusw1,btemp
 16547  01D04A  1E2A               	comf	btemp^0,f,c
 16548  01D04C  0EFD               	movlw	-3
 16549  01D04E  006F FF8C  F02B    	movff	plusw1,btemp+1
 16550  01D054  1E2B               	comf	(btemp+1)^0,f,c
 16551  01D056  2A2A               	incf	btemp^0,f,c
 16552  01D058  B4D8               	btfsc	status,2,c
 16553  01D05A  2A2B               	incf	(btemp+1)^0,f,c
 16554  01D05C                     l3937:
 16555                           
 16556                           ; _getoff: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 16557  01D05C  0EFA               	movlw	250
 16558  01D05E  26E1               	addwf	fsr1l,f,c
 16559  01D060  0EFF               	movlw	255
 16560  01D062  22E2               	addwfc	fsr1h,f,c
 16561  01D064  0012               	return		;funcret
 16562  01D066                     __end_of_getoff:
 16563                           	opt callstack 0
 16564                           
 16565 ;; *************** function _getint *****************
 16566 ;; Defined at:
 16567 ;;		line 32 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 16568 ;; Parameters:    Size  Location     Type
 16569 ;;  p               2  [STACK] PTR PTR const unsigned c
 16570 ;;		 -> s(2), 
 16571 ;; Auto vars:     Size  Location     Type
 16572 ;;  x               2  [STACK] unsigned int 
 16573 ;; Return value:  Size  Location     Type
 16574 ;;                  2  [STACK] int 
 16575 ;; Registers used:
 16576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 16577 ;; Tracked objects:
 16578 ;;		On entry : 0/0
 16579 ;;		On exit  : 0/0
 16580 ;;		Unchanged: 0/0
 16581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16586 ;;Total ram usage:        0 bytes
 16587 ;; Hardware stack levels used:    1
 16588 ;; Hardware stack levels required when called:   15
 16589 ;; This function calls:
 16590 ;;		Nothing
 16591 ;; This function is called by:
 16592 ;;		_getoff
 16593 ;;		_getrule
 16594 ;; This function uses a reentrant model
 16595 ;;
 16596                           
 16597                           	psect	text48
 16598  0000B6                     __ptext48:
 16599                           	opt callstack 0
 16600  0000B6                     _getint:
 16601                           	opt callstack 0
 16602                           
 16603                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16604  0000B6  52E6               	movf	postinc1,f,c
 16605  0000B8  52E6               	movf	postinc1,f,c
 16606                           
 16607                           ;stkvar	_x @ sp[(-2)+0]
 16608                           
 16609                           ;incstack = 0
 16610  0000BA  0EFE               	movlw	-2
 16611  0000BC  6AE3               	clrf	plusw1,c
 16612  0000BE  0EFF               	movlw	-1
 16613  0000C0  6AE3               	clrf	plusw1,c
 16614  0000C2  D043               	goto	l10034
 16615  0000C4                     l10030:
 16616  0000C4  0ED0               	movlw	208
 16617  0000C6  6E34               	movwf	(btemp+10)^0,c
 16618  0000C8  0EFF               	movlw	255
 16619  0000CA  6E35               	movwf	(btemp+11)^0,c
 16620                           
 16621                           ;stkvar	_x @ sp[(-2)+0]
 16622  0000CC  0EFE               	movlw	-2
 16623  0000CE  006F FF8C  F032    	movff	plusw1,btemp+8
 16624  0000D4  0EFF               	movlw	-1
 16625  0000D6  006F FF8C  F033    	movff	plusw1,btemp+9
 16626  0000DC  0E0A               	movlw	10
 16627  0000DE  0232               	mulwf	(btemp+8)^0,c
 16628  0000E0  006F FFCC  F030    	movff	prodl,btemp+6
 16629  0000E6  006F FFD0  F031    	movff	prodh,btemp+7
 16630  0000EC  0233               	mulwf	(btemp+9)^0,c
 16631  0000EE  50F3               	movf	prodl,w,c
 16632  0000F0  2631               	addwf	(btemp+7)^0,f,c
 16633                           
 16634                           ;stkvar	_p @ sp[(-2)+-2]
 16635  0000F2  0EFC               	movlw	-4
 16636  0000F4  006F FF8F FFD9     	movff	plusw1,fsr2l
 16637  0000FA  0EFD               	movlw	-3
 16638  0000FC  006F FF8F FFDA     	movff	plusw1,fsr2h
 16639  000102  006F FF7B FFF6     	movff	postinc2,tblptrl
 16640  000108  006F FF77 FFF7     	movff	postdec2,tblptrh
 16641  00010E                     	if	0	;tblptru may be non-zero
 16642  00010E                     	endif
 16643  00010E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16644  00010E  0E00               	movlw	low (__mediumconst shr (0+16))
 16645  000110  6EF8               	movwf	tblptru,c
 16646  000112                     	endif
 16647  000112  0008               	tblrd		*
 16648  000114  50F5               	movf	tablat,w,c
 16649  000116  2630               	addwf	(btemp+6)^0,f,c
 16650  000118  0E00               	movlw	0
 16651  00011A  2231               	addwfc	(btemp+7)^0,f,c
 16652  00011C  5034               	movf	(btemp+10)^0,w,c
 16653  00011E  2630               	addwf	(btemp+6)^0,f,c
 16654  000120  5035               	movf	(btemp+11)^0,w,c
 16655  000122  2231               	addwfc	(btemp+7)^0,f,c
 16656                           
 16657                           ;stkvar	_x @ sp[(-2)+0]
 16658  000124  0EFE               	movlw	-2
 16659  000126  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 16660  00012C  0EFF               	movlw	-1
 16661  00012E  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 16662                           
 16663                           ;stkvar	_p @ sp[(-2)+-2]
 16664  000134  0EFC               	movlw	-4
 16665  000136  006F FF8F FFD9     	movff	plusw1,fsr2l
 16666  00013C  0EFD               	movlw	-3
 16667  00013E  006F FF8F FFDA     	movff	plusw1,fsr2h
 16668  000144  2ADE               	incf	postinc2,f,c
 16669  000146  0E00               	movlw	0
 16670  000148  22DD               	addwfc	postdec2,f,c
 16671  00014A                     l10034:
 16672  00014A  0ED0               	movlw	208
 16673  00014C  6E34               	movwf	(btemp+10)^0,c
 16674  00014E  0EFF               	movlw	255
 16675  000150  6E35               	movwf	(btemp+11)^0,c
 16676                           
 16677                           ;stkvar	_p @ sp[(-2)+-2]
 16678  000152  0EFC               	movlw	-4
 16679  000154  006F FF8F FFD9     	movff	plusw1,fsr2l
 16680  00015A  0EFD               	movlw	-3
 16681  00015C  006F FF8F FFDA     	movff	plusw1,fsr2h
 16682  000162  006F FF7B FFF6     	movff	postinc2,tblptrl
 16683  000168  006F FF77 FFF7     	movff	postdec2,tblptrh
 16684  00016E                     	if	0	;tblptru may be non-zero
 16685  00016E                     	endif
 16686  00016E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16687  00016E  0E00               	movlw	low (__mediumconst shr (0+16))
 16688  000170  6EF8               	movwf	tblptru,c
 16689  000172                     	endif
 16690  000172  0008               	tblrd		*
 16691  000174  50F5               	movf	tablat,w,c
 16692  000176  6E32               	movwf	(btemp+8)^0,c
 16693  000178  6A33               	clrf	(btemp+9)^0,c
 16694  00017A  5034               	movf	(btemp+10)^0,w,c
 16695  00017C  2632               	addwf	(btemp+8)^0,f,c
 16696  00017E  5035               	movf	(btemp+11)^0,w,c
 16697  000180  2233               	addwfc	(btemp+9)^0,f,c
 16698  000182  5033               	movf	(btemp+9)^0,w,c
 16699  000184  E104               	bnz	u7660
 16700  000186  0E0A               	movlw	10
 16701  000188  5C32               	subwf	(btemp+8)^0,w,c
 16702  00018A  A0D8               	btfss	status,0,c
 16703  00018C  D79B               	goto	l10030
 16704  00018E                     u7660:
 16705                           
 16706                           ;stkvar	_x @ sp[(-2)+0]
 16707  00018E  0EFE               	movlw	-2
 16708  000190  006F FF8C  F02A    	movff	plusw1,btemp
 16709  000196  0EFF               	movlw	-1
 16710  000198  006F FF8C  F02B    	movff	plusw1,btemp+1
 16711                           
 16712                           ; _getint: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 16713  00019E  52E5               	movf	postdec1,f,c
 16714  0001A0  52E5               	movf	postdec1,f,c
 16715  0001A2  52E5               	movf	postdec1,f,c
 16716  0001A4  52E5               	movf	postdec1,f,c
 16717  0001A6  0012               	return		;funcret
 16718  0001A8                     __end_of_getint:
 16719                           	opt callstack 0
 16720                           
 16721 ;; *************** function _getname *****************
 16722 ;; Defined at:
 16723 ;;		line 82 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 16724 ;; Parameters:    Size  Location     Type
 16725 ;;  d               2  [STACK] PTR unsigned char 
 16726 ;;		 -> dst_name(7), std_name(7), 
 16727 ;;  p               2  [STACK] PTR PTR const unsigned c
 16728 ;;		 -> s(2), 
 16729 ;; Auto vars:     Size  Location     Type
 16730 ;;  i               2  [STACK] int 
 16731 ;; Return value:  Size  Location     Type
 16732 ;;                  1  [STACK] void 
 16733 ;; Registers used:
 16734 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11,
      + tblptrl, tblptrh, tblptru
 16735 ;; Tracked objects:
 16736 ;;		On entry : 0/39
 16737 ;;		On exit  : 0/0
 16738 ;;		Unchanged: 0/0
 16739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16744 ;;Total ram usage:        0 bytes
 16745 ;; Hardware stack levels used:    1
 16746 ;; Hardware stack levels required when called:   15
 16747 ;; This function calls:
 16748 ;;		Nothing
 16749 ;; This function is called by:
 16750 ;;		_do_tzset
 16751 ;; This function uses a reentrant model
 16752 ;;
 16753                           
 16754                           	psect	text49
 16755  01AF20                     __ptext49:
 16756                           	opt callstack 0
 16757  01AF20                     _getname:
 16758                           	opt callstack 0
 16759                           
 16760                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16761  01AF20  52E6               	movf	postinc1,f,c
 16762  01AF22  52E6               	movf	postinc1,f,c
 16763                           
 16764                           ;stkvar	_p @ sp[(-2)+-4]
 16765                           
 16766                           ;incstack = 0
 16767  01AF24  0EFA               	movlw	-6
 16768  01AF26  006F FF8F FFD9     	movff	plusw1,fsr2l
 16769  01AF2C  0EFB               	movlw	-5
 16770  01AF2E  006F FF8F FFDA     	movff	plusw1,fsr2h
 16771  01AF34  006F FF7B FFF6     	movff	postinc2,tblptrl
 16772  01AF3A  006F FF77 FFF7     	movff	postdec2,tblptrh
 16773  01AF40                     	if	0	;tblptru may be non-zero
 16774  01AF40                     	endif
 16775  01AF40                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16776  01AF40  0E00               	movlw	low (__mediumconst shr (0+16))
 16777  01AF42  6EF8               	movwf	tblptru,c
 16778  01AF44                     	endif
 16779  01AF44  0008               	tblrd		*
 16780  01AF46  50F5               	movf	tablat,w,c
 16781  01AF48  0A3C               	xorlw	60
 16782  01AF4A  A4D8               	btfss	status,2,c
 16783  01AF4C  D09E               	goto	l16170
 16784                           
 16785                           ;stkvar	_p @ sp[(-2)+-4]
 16786  01AF4E  0EFA               	movlw	-6
 16787  01AF50  006F FF8F FFD9     	movff	plusw1,fsr2l
 16788  01AF56  0EFB               	movlw	-5
 16789  01AF58  006F FF8F FFDA     	movff	plusw1,fsr2h
 16790  01AF5E  2ADE               	incf	postinc2,f,c
 16791  01AF60  0E00               	movlw	0
 16792  01AF62  22DD               	addwfc	postdec2,f,c
 16793                           
 16794                           ;stkvar	_i @ sp[(-2)+0]
 16795  01AF64  0EFE               	movlw	-2
 16796  01AF66  6AE3               	clrf	plusw1,c
 16797  01AF68  0EFF               	movlw	-1
 16798  01AF6A  6AE3               	clrf	plusw1,c
 16799  01AF6C  D04D               	goto	l16164
 16800  01AF6E                     l16160:
 16801                           
 16802                           ;stkvar	_i @ sp[(-2)+0]
 16803  01AF6E  0EFE               	movlw	-2
 16804  01AF70  006F FF8C  F034    	movff	plusw1,btemp+10
 16805  01AF76  0EFF               	movlw	-1
 16806  01AF78  006F FF8C  F035    	movff	plusw1,btemp+11
 16807                           
 16808                           ;stkvar	_p @ sp[(-2)+-4]
 16809  01AF7E  0EFA               	movlw	-6
 16810  01AF80  006F FF8F FFD9     	movff	plusw1,fsr2l
 16811  01AF86  0EFB               	movlw	-5
 16812  01AF88  006F FF8F FFDA     	movff	plusw1,fsr2h
 16813  01AF8E  006F FF78  F032    	movff	postinc2,btemp+8
 16814  01AF94  006F FF74  F033    	movff	postdec2,btemp+9
 16815  01AF9A  5034               	movf	(btemp+10)^0,w,c
 16816  01AF9C  2632               	addwf	(btemp+8)^0,f,c
 16817  01AF9E  5035               	movf	(btemp+11)^0,w,c
 16818  01AFA0  2233               	addwfc	(btemp+9)^0,f,c
 16819  01AFA2  0060  F0CB  FFF6   	movff	btemp+8,tblptrl
 16820  01AFA8  0060  F0CF  FFF7   	movff	btemp+9,tblptrh
 16821  01AFAE                     	if	0	;tblptru may be non-zero
 16822  01AFAE                     	endif
 16823  01AFAE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16824  01AFAE  0E00               	movlw	low (__mediumconst shr (0+16))
 16825  01AFB0  6EF8               	movwf	tblptru,c
 16826  01AFB2                     	endif
 16827                           
 16828                           ;stkvar	_i @ sp[(-2)+0]
 16829  01AFB2  0EFE               	movlw	-2
 16830  01AFB4  006F FF8C  F034    	movff	plusw1,btemp+10
 16831  01AFBA  0EFF               	movlw	-1
 16832  01AFBC  006F FF8C  F035    	movff	plusw1,btemp+11
 16833                           
 16834                           ;stkvar	_d @ sp[(-2)+-2]
 16835  01AFC2  0EFC               	movlw	-4
 16836  01AFC4  006F FF8C  F032    	movff	plusw1,btemp+8
 16837  01AFCA  0EFD               	movlw	-3
 16838  01AFCC  006F FF8C  F033    	movff	plusw1,btemp+9
 16839  01AFD2  5034               	movf	(btemp+10)^0,w,c
 16840  01AFD4  2432               	addwf	(btemp+8)^0,w,c
 16841  01AFD6  6ED9               	movwf	fsr2l,c
 16842  01AFD8  5035               	movf	(btemp+11)^0,w,c
 16843  01AFDA  2033               	addwfc	(btemp+9)^0,w,c
 16844  01AFDC  6EDA               	movwf	fsr2h,c
 16845  01AFDE  0008               	tblrd		*
 16846  01AFE0  006F FFD7 FFDF     	movff	tablat,indf2
 16847                           
 16848                           ;stkvar	_i @ sp[(-2)+0]
 16849  01AFE6  0EFE               	movlw	-2
 16850  01AFE8  50E3               	movf	plusw1,w,c
 16851  01AFEA  0F01               	addlw	1
 16852  01AFEC  6E2A               	movwf	btemp^0,c
 16853  01AFEE  0EFE               	movlw	-2
 16854  01AFF0  0060  F0AB  FFE3   	movff	btemp,plusw1
 16855  01AFF6  6A2A               	clrf	btemp^0,c
 16856  01AFF8  0EFF               	movlw	-1
 16857  01AFFA  50E3               	movf	plusw1,w,c
 16858  01AFFC  202A               	addwfc	btemp^0,w,c
 16859  01AFFE  6E2A               	movwf	btemp^0,c
 16860  01B000  0EFF               	movlw	-1
 16861  01B002  0060  F0AB  FFE3   	movff	btemp,plusw1
 16862  01B008                     l16164:
 16863                           
 16864                           ;stkvar	_i @ sp[(-2)+0]
 16865  01B008  0EFE               	movlw	-2
 16866  01B00A  006F FF8C  F034    	movff	plusw1,btemp+10
 16867  01B010  0EFF               	movlw	-1
 16868  01B012  006F FF8C  F035    	movff	plusw1,btemp+11
 16869                           
 16870                           ;stkvar	_p @ sp[(-2)+-4]
 16871  01B018  0EFA               	movlw	-6
 16872  01B01A  006F FF8F FFD9     	movff	plusw1,fsr2l
 16873  01B020  0EFB               	movlw	-5
 16874  01B022  006F FF8F FFDA     	movff	plusw1,fsr2h
 16875  01B028  006F FF78  F032    	movff	postinc2,btemp+8
 16876  01B02E  006F FF74  F033    	movff	postdec2,btemp+9
 16877  01B034  5034               	movf	(btemp+10)^0,w,c
 16878  01B036  2632               	addwf	(btemp+8)^0,f,c
 16879  01B038  5035               	movf	(btemp+11)^0,w,c
 16880  01B03A  2233               	addwfc	(btemp+9)^0,f,c
 16881  01B03C  0060  F0CB  FFF6   	movff	btemp+8,tblptrl
 16882  01B042  0060  F0CF  FFF7   	movff	btemp+9,tblptrh
 16883  01B048                     	if	0	;tblptru may be non-zero
 16884  01B048                     	endif
 16885  01B048                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16886  01B048  0E00               	movlw	low (__mediumconst shr (0+16))
 16887  01B04A  6EF8               	movwf	tblptru,c
 16888  01B04C                     	endif
 16889  01B04C  0008               	tblrd		*
 16890  01B04E  50F5               	movf	tablat,w,c
 16891  01B050  0A3E               	xorlw	62
 16892  01B052  B4D8               	btfsc	status,2,c
 16893  01B054  D00E               	goto	u15680
 16894                           
 16895                           ;stkvar	_i @ sp[(-2)+0]
 16896  01B056  0EFF               	movlw	-1
 16897  01B058  BEE3               	btfsc	plusw1,7,c
 16898  01B05A  D789               	goto	l16160
 16899  01B05C  0EFF               	movlw	-1
 16900  01B05E  50E3               	movf	plusw1,w,c
 16901  01B060  E108               	bnz	u15680
 16902  01B062  0EFE               	movlw	-2
 16903  01B064  006F FF8C  F02A    	movff	plusw1,btemp
 16904  01B06A  0E06               	movlw	6
 16905  01B06C  5E2A               	subwf	btemp^0,f,c
 16906  01B06E  A0D8               	btfss	status,0,c
 16907  01B070  D77E               	goto	l16160
 16908  01B072                     u15680:
 16909                           
 16910                           ;stkvar	_p @ sp[(-2)+-4]
 16911  01B072  0EFA               	movlw	-6
 16912  01B074  006F FF8F FFD9     	movff	plusw1,fsr2l
 16913  01B07A  0EFB               	movlw	-5
 16914  01B07C  006F FF8F FFDA     	movff	plusw1,fsr2h
 16915  01B082  2ADE               	incf	postinc2,f,c
 16916  01B084  0E00               	movlw	0
 16917  01B086  22DD               	addwfc	postdec2,f,c
 16918  01B088  D098               	goto	u15700
 16919  01B08A                     l16170:
 16920                           
 16921                           ;stkvar	_i @ sp[(-2)+0]
 16922  01B08A  0EFE               	movlw	-2
 16923  01B08C  6AE3               	clrf	plusw1,c
 16924  01B08E  0EFF               	movlw	-1
 16925  01B090  6AE3               	clrf	plusw1,c
 16926  01B092  D04D               	goto	l16176
 16927  01B094                     l16172:
 16928                           
 16929                           ;stkvar	_i @ sp[(-2)+0]
 16930  01B094  0EFE               	movlw	-2
 16931  01B096  006F FF8C  F034    	movff	plusw1,btemp+10
 16932  01B09C  0EFF               	movlw	-1
 16933  01B09E  006F FF8C  F035    	movff	plusw1,btemp+11
 16934                           
 16935                           ;stkvar	_p @ sp[(-2)+-4]
 16936  01B0A4  0EFA               	movlw	-6
 16937  01B0A6  006F FF8F FFD9     	movff	plusw1,fsr2l
 16938  01B0AC  0EFB               	movlw	-5
 16939  01B0AE  006F FF8F FFDA     	movff	plusw1,fsr2h
 16940  01B0B4  006F FF78  F032    	movff	postinc2,btemp+8
 16941  01B0BA  006F FF74  F033    	movff	postdec2,btemp+9
 16942  01B0C0  5034               	movf	(btemp+10)^0,w,c
 16943  01B0C2  2632               	addwf	(btemp+8)^0,f,c
 16944  01B0C4  5035               	movf	(btemp+11)^0,w,c
 16945  01B0C6  2233               	addwfc	(btemp+9)^0,f,c
 16946  01B0C8  0060  F0CB  FFF6   	movff	btemp+8,tblptrl
 16947  01B0CE  0060  F0CF  FFF7   	movff	btemp+9,tblptrh
 16948  01B0D4                     	if	0	;tblptru may be non-zero
 16949  01B0D4                     	endif
 16950  01B0D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16951  01B0D4  0E00               	movlw	low (__mediumconst shr (0+16))
 16952  01B0D6  6EF8               	movwf	tblptru,c
 16953  01B0D8                     	endif
 16954                           
 16955                           ;stkvar	_i @ sp[(-2)+0]
 16956  01B0D8  0EFE               	movlw	-2
 16957  01B0DA  006F FF8C  F034    	movff	plusw1,btemp+10
 16958  01B0E0  0EFF               	movlw	-1
 16959  01B0E2  006F FF8C  F035    	movff	plusw1,btemp+11
 16960                           
 16961                           ;stkvar	_d @ sp[(-2)+-2]
 16962  01B0E8  0EFC               	movlw	-4
 16963  01B0EA  006F FF8C  F032    	movff	plusw1,btemp+8
 16964  01B0F0  0EFD               	movlw	-3
 16965  01B0F2  006F FF8C  F033    	movff	plusw1,btemp+9
 16966  01B0F8  5034               	movf	(btemp+10)^0,w,c
 16967  01B0FA  2432               	addwf	(btemp+8)^0,w,c
 16968  01B0FC  6ED9               	movwf	fsr2l,c
 16969  01B0FE  5035               	movf	(btemp+11)^0,w,c
 16970  01B100  2033               	addwfc	(btemp+9)^0,w,c
 16971  01B102  6EDA               	movwf	fsr2h,c
 16972  01B104  0008               	tblrd		*
 16973  01B106  006F FFD7 FFDF     	movff	tablat,indf2
 16974                           
 16975                           ;stkvar	_i @ sp[(-2)+0]
 16976  01B10C  0EFE               	movlw	-2
 16977  01B10E  50E3               	movf	plusw1,w,c
 16978  01B110  0F01               	addlw	1
 16979  01B112  6E2A               	movwf	btemp^0,c
 16980  01B114  0EFE               	movlw	-2
 16981  01B116  0060  F0AB  FFE3   	movff	btemp,plusw1
 16982  01B11C  6A2A               	clrf	btemp^0,c
 16983  01B11E  0EFF               	movlw	-1
 16984  01B120  50E3               	movf	plusw1,w,c
 16985  01B122  202A               	addwfc	btemp^0,w,c
 16986  01B124  6E2A               	movwf	btemp^0,c
 16987  01B126  0EFF               	movlw	-1
 16988  01B128  0060  F0AB  FFE3   	movff	btemp,plusw1
 16989  01B12E                     l16176:
 16990  01B12E  0E9F               	movlw	159
 16991  01B130  6E34               	movwf	(btemp+10)^0,c
 16992  01B132  0EFF               	movlw	255
 16993  01B134  6E35               	movwf	(btemp+11)^0,c
 16994                           
 16995                           ;stkvar	_i @ sp[(-2)+0]
 16996  01B136  0EFE               	movlw	-2
 16997  01B138  006F FF8C  F032    	movff	plusw1,btemp+8
 16998  01B13E  0EFF               	movlw	-1
 16999  01B140  006F FF8C  F033    	movff	plusw1,btemp+9
 17000                           
 17001                           ;stkvar	_p @ sp[(-2)+-4]
 17002  01B146  0EFA               	movlw	-6
 17003  01B148  006F FF8F FFD9     	movff	plusw1,fsr2l
 17004  01B14E  0EFB               	movlw	-5
 17005  01B150  006F FF8F FFDA     	movff	plusw1,fsr2h
 17006  01B156  006F FF78  F030    	movff	postinc2,btemp+6
 17007  01B15C  006F FF74  F031    	movff	postdec2,btemp+7
 17008  01B162  5032               	movf	(btemp+8)^0,w,c
 17009  01B164  2630               	addwf	(btemp+6)^0,f,c
 17010  01B166  5033               	movf	(btemp+9)^0,w,c
 17011  01B168  2231               	addwfc	(btemp+7)^0,f,c
 17012  01B16A  0060  F0C3  FFF6   	movff	btemp+6,tblptrl
 17013  01B170  0060  F0C7  FFF7   	movff	btemp+7,tblptrh
 17014  01B176                     	if	0	;tblptru may be non-zero
 17015  01B176                     	endif
 17016  01B176                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17017  01B176  0E00               	movlw	low (__mediumconst shr (0+16))
 17018  01B178  6EF8               	movwf	tblptru,c
 17019  01B17A                     	endif
 17020  01B17A  0008               	tblrd		*
 17021  01B17C  50F5               	movf	tablat,w,c
 17022  01B17E  6E32               	movwf	(btemp+8)^0,c
 17023  01B180  6A33               	clrf	(btemp+9)^0,c
 17024  01B182  0E20               	movlw	32
 17025  01B184  1232               	iorwf	(btemp+8)^0,f,c
 17026  01B186  0E00               	movlw	0
 17027  01B188  1233               	iorwf	(btemp+9)^0,f,c
 17028  01B18A  5034               	movf	(btemp+10)^0,w,c
 17029  01B18C  2632               	addwf	(btemp+8)^0,f,c
 17030  01B18E  5035               	movf	(btemp+11)^0,w,c
 17031  01B190  2233               	addwfc	(btemp+9)^0,f,c
 17032  01B192  5033               	movf	(btemp+9)^0,w,c
 17033  01B194  E112               	bnz	l16180
 17034  01B196  0E1A               	movlw	26
 17035  01B198  5C32               	subwf	(btemp+8)^0,w,c
 17036  01B19A  B0D8               	btfsc	status,0,c
 17037  01B19C  D00E               	goto	u15700
 17038                           
 17039                           ;stkvar	_i @ sp[(-2)+0]
 17040  01B19E  0EFF               	movlw	-1
 17041  01B1A0  BEE3               	btfsc	plusw1,7,c
 17042  01B1A2  D778               	goto	l16172
 17043  01B1A4  0EFF               	movlw	-1
 17044  01B1A6  50E3               	movf	plusw1,w,c
 17045  01B1A8  E108               	bnz	u15700
 17046  01B1AA  0EFE               	movlw	-2
 17047  01B1AC  006F FF8C  F02A    	movff	plusw1,btemp
 17048  01B1B2  0E06               	movlw	6
 17049  01B1B4  5E2A               	subwf	btemp^0,f,c
 17050  01B1B6  A0D8               	btfss	status,0,c
 17051  01B1B8  D76D               	goto	l16172
 17052  01B1BA                     u15700:
 17053  01B1BA                     l16180:
 17054                           
 17055                           ;stkvar	_i @ sp[(-2)+0]
 17056  01B1BA  0EFE               	movlw	-2
 17057  01B1BC  006F FF8C  F034    	movff	plusw1,btemp+10
 17058  01B1C2  0EFF               	movlw	-1
 17059  01B1C4  006F FF8C  F035    	movff	plusw1,btemp+11
 17060                           
 17061                           ;stkvar	_p @ sp[(-2)+-4]
 17062  01B1CA  0EFA               	movlw	-6
 17063  01B1CC  006F FF8F FFD9     	movff	plusw1,fsr2l
 17064  01B1D2  0EFB               	movlw	-5
 17065  01B1D4  006F FF8F FFDA     	movff	plusw1,fsr2h
 17066  01B1DA  5034               	movf	(btemp+10)^0,w,c
 17067  01B1DC  26DE               	addwf	postinc2,f,c
 17068  01B1DE  5035               	movf	(btemp+11)^0,w,c
 17069  01B1E0  22DD               	addwfc	postdec2,f,c
 17070                           
 17071                           ;stkvar	_i @ sp[(-2)+0]
 17072  01B1E2  0EFE               	movlw	-2
 17073  01B1E4  006F FF8C  F034    	movff	plusw1,btemp+10
 17074  01B1EA  0EFF               	movlw	-1
 17075  01B1EC  006F FF8C  F035    	movff	plusw1,btemp+11
 17076                           
 17077                           ;stkvar	_d @ sp[(-2)+-2]
 17078  01B1F2  0EFC               	movlw	-4
 17079  01B1F4  006F FF8C  F032    	movff	plusw1,btemp+8
 17080  01B1FA  0EFD               	movlw	-3
 17081  01B1FC  006F FF8C  F033    	movff	plusw1,btemp+9
 17082  01B202  5034               	movf	(btemp+10)^0,w,c
 17083  01B204  2432               	addwf	(btemp+8)^0,w,c
 17084  01B206  6ED9               	movwf	fsr2l,c
 17085  01B208  5035               	movf	(btemp+11)^0,w,c
 17086  01B20A  2033               	addwfc	(btemp+9)^0,w,c
 17087  01B20C  6EDA               	movwf	fsr2h,c
 17088  01B20E  0E00               	movlw	0
 17089  01B210  6EDF               	movwf	indf2,c
 17090                           
 17091                           ; _getname: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17092  01B212  0EFA               	movlw	250
 17093  01B214  26E1               	addwf	fsr1l,f,c
 17094  01B216  0EFF               	movlw	255
 17095  01B218  22E2               	addwfc	fsr1h,f,c
 17096  01B21A  0012               	return		;funcret
 17097  01B21C                     __end_of_getname:
 17098                           	opt callstack 0
 17099                           
 17100 ;; *************** function ___secs_to_tm *****************
 17101 ;; Defined at:
 17102 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__secs_to_tm.c"
 17103 ;; Parameters:    Size  Location     Type
 17104 ;;  t               8  [STACK] long long 
 17105 ;;  tm              2  [STACK] PTR struct tm
 17106 ;;		 -> localtime@tm(24), 
 17107 ;; Auto vars:     Size  Location     Type
 17108 ;;  years           8  [STACK] long long 
 17109 ;;  days            8  [STACK] long long 
 17110 ;;  secs            8  [STACK] long long 
 17111 ;;  remdays         4  [STACK] long 
 17112 ;;  q_cycles        4  [STACK] long 
 17113 ;;  c_cycles        4  [STACK] long 
 17114 ;;  remyears        4  [STACK] long 
 17115 ;;  remsecs         4  [STACK] long 
 17116 ;;  qc_cycles       4  [STACK] long 
 17117 ;;  months          2  [STACK] int 
 17118 ;;  leap            2  [STACK] int 
 17119 ;;  yday            2  [STACK] int 
 17120 ;;  wday            2  [STACK] int 
 17121 ;; Return value:  Size  Location     Type
 17122 ;;                  4  [STACK] long 
 17123 ;; Registers used:
 17124 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru
 17125 ;; Tracked objects:
 17126 ;;		On entry : 0/39
 17127 ;;		On exit  : 0/0
 17128 ;;		Unchanged: 0/0
 17129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17134 ;;Total ram usage:        0 bytes
 17135 ;; Hardware stack levels used:    1
 17136 ;; Hardware stack levels required when called:   16
 17137 ;; This function calls:
 17138 ;;		___aldiv
 17139 ;;		___almod
 17140 ;;		___aodiv
 17141 ;;		___aomod
 17142 ;;		___lmul
 17143 ;;		___omul
 17144 ;; This function is called by:
 17145 ;;		___localtime_r
 17146 ;; This function uses a reentrant model
 17147 ;;
 17148                           
 17149                           	psect	text50
 17150  012964                     __ptext50:
 17151                           	opt callstack 0
 17152  012964                     ___secs_to_tm:
 17153                           	opt callstack 0
 17154                           
 17155                           ; autosize = 57, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 17156  012964  0E39               	movlw	57
 17157  012966  26E1               	addwf	fsr1l,f,c
 17158  012968  0E00               	movlw	0
 17159  01296A  22E2               	addwfc	fsr1h,f,c
 17160                           
 17161                           ;stkvar	_t @ sp[(-57)+-8]
 17162                           
 17163                           ;incstack = 0
 17164  01296C  0EC6               	movlw	-58
 17165  01296E  AEE3               	btfss	plusw1,7,c
 17166  012970  D026               	goto	u16320
 17167  012972  0EC1               	movlw	-63
 17168  012974  006F FF8C  F02A    	movff	plusw1,btemp
 17169  01297A  0E80               	movlw	128
 17170  01297C  5E2A               	subwf	btemp^0,f,c
 17171  01297E  0EC2               	movlw	-62
 17172  012980  006F FF8C  F02A    	movff	plusw1,btemp
 17173  012986  0EBD               	movlw	189
 17174  012988  5A2A               	subwfb	btemp^0,f,c
 17175  01298A  0EC3               	movlw	-61
 17176  01298C  006F FF8C  F02A    	movff	plusw1,btemp
 17177  012992  0E0E               	movlw	14
 17178  012994  5A2A               	subwfb	btemp^0,f,c
 17179  012996  0EC4               	movlw	-60
 17180  012998  006F FF8C  F02A    	movff	plusw1,btemp
 17181  01299E  0EFF               	movlw	255
 17182  0129A0  5A2A               	subwfb	btemp^0,f,c
 17183  0129A2  0EC5               	movlw	-59
 17184  0129A4  006F FF8C  F02A    	movff	plusw1,btemp
 17185  0129AA  0EFF               	movlw	255
 17186  0129AC  5A2A               	subwfb	btemp^0,f,c
 17187  0129AE  0EC6               	movlw	-58
 17188  0129B0  006F FF8C  F02A    	movff	plusw1,btemp
 17189  0129B6  0EFF               	movlw	255
 17190  0129B8  5A2A               	subwfb	btemp^0,f,c
 17191  0129BA  A0D8               	btfss	status,0,c
 17192  0129BC  D028               	goto	u16330
 17193  0129BE                     u16320:
 17194                           
 17195                           ;stkvar	_t @ sp[(-57)+-8]
 17196  0129BE  0EC6               	movlw	-58
 17197  0129C0  BEE3               	btfsc	plusw1,7,c
 17198  0129C2  D02F               	goto	l16748
 17199  0129C4  0EC6               	movlw	-58
 17200  0129C6  50E3               	movf	plusw1,w,c
 17201  0129C8  E122               	bnz	u16330
 17202  0129CA  0EC5               	movlw	-59
 17203  0129CC  50E3               	movf	plusw1,w,c
 17204  0129CE  E11F               	bnz	u16330
 17205  0129D0  0EC4               	movlw	-60
 17206  0129D2  50E3               	movf	plusw1,w,c
 17207  0129D4  E11C               	bnz	u16330
 17208  0129D6  0EBF               	movlw	-65
 17209  0129D8  04E3               	decf	plusw1,w,c
 17210  0129DA  0EC0               	movlw	-64
 17211  0129DC  006F FF8C  F02A    	movff	plusw1,btemp
 17212  0129E2  0E7B               	movlw	123
 17213  0129E4  5A2A               	subwfb	btemp^0,f,c
 17214  0129E6  0EC1               	movlw	-63
 17215  0129E8  006F FF8C  F02A    	movff	plusw1,btemp
 17216  0129EE  0E9D               	movlw	157
 17217  0129F0  5A2A               	subwfb	btemp^0,f,c
 17218  0129F2  0EC2               	movlw	-62
 17219  0129F4  006F FF8C  F02A    	movff	plusw1,btemp
 17220  0129FA  0E40               	movlw	64
 17221  0129FC  5A2A               	subwfb	btemp^0,f,c
 17222  0129FE  0EC3               	movlw	-61
 17223  012A00  006F FF8C  F02A    	movff	plusw1,btemp
 17224  012A06  0EF1               	movlw	241
 17225  012A08  5A2A               	subwfb	btemp^0,f,c
 17226  012A0A  A0D8               	btfss	status,0,c
 17227  012A0C  D00A               	goto	l16748
 17228  012A0E                     u16330:
 17229  012A0E  0EFF               	movlw	255
 17230  012A10  6E2A               	movwf	btemp^0,c
 17231  012A12  0EFF               	movlw	255
 17232  012A14  6E2B               	movwf	(btemp+1)^0,c
 17233  012A16  0EFF               	movlw	255
 17234  012A18  6E2C               	movwf	(btemp+2)^0,c
 17235  012A1A  0EFF               	movlw	255
 17236  012A1C  6E2D               	movwf	(btemp+3)^0,c
 17237  012A1E  EF16  F09D         	goto	l3853
 17238  012A22                     l16748:
 17239                           
 17240                           ;stkvar	_t @ sp[(-57)+-8]
 17241  012A22  0EBF               	movlw	-65
 17242  012A24  50E3               	movf	plusw1,w,c
 17243  012A26  0F80               	addlw	128
 17244  012A28  6E3A               	movwf	(btemp+16)^0,c
 17245  012A2A  0EC0               	movlw	-64
 17246  012A2C  006F FF8C  F03B    	movff	plusw1,btemp+17
 17247  012A32  0EA2               	movlw	162
 17248  012A34  223B               	addwfc	(btemp+17)^0,f,c
 17249  012A36  0EC1               	movlw	-63
 17250  012A38  006F FF8C  F03C    	movff	plusw1,btemp+18
 17251  012A3E  0E43               	movlw	67
 17252  012A40  223C               	addwfc	(btemp+18)^0,f,c
 17253  012A42  0EC2               	movlw	-62
 17254  012A44  006F FF8C  F03D    	movff	plusw1,btemp+19
 17255  012A4A  0EC7               	movlw	199
 17256  012A4C  223D               	addwfc	(btemp+19)^0,f,c
 17257  012A4E  0EC3               	movlw	-61
 17258  012A50  006F FF8C  F03E    	movff	plusw1,btemp+20
 17259  012A56  0EFF               	movlw	255
 17260  012A58  223E               	addwfc	(btemp+20)^0,f,c
 17261  012A5A  0EC4               	movlw	-60
 17262  012A5C  006F FF8C  F03F    	movff	plusw1,btemp+21
 17263  012A62  0EFF               	movlw	255
 17264  012A64  223F               	addwfc	(btemp+21)^0,f,c
 17265  012A66  0EC5               	movlw	-59
 17266  012A68  006F FF8C  F040    	movff	plusw1,btemp+22
 17267  012A6E  0EFF               	movlw	255
 17268  012A70  2240               	addwfc	(btemp+22)^0,f,c
 17269  012A72  0EC6               	movlw	-58
 17270  012A74  006F FF8C  F041    	movff	plusw1,btemp+23
 17271  012A7A  0EFF               	movlw	255
 17272  012A7C  2241               	addwfc	(btemp+23)^0,f,c
 17273                           
 17274                           ;stkvar	_secs @ sp[(-57)+17]
 17275  012A7E  0ED8               	movlw	-40
 17276  012A80  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 17277  012A86  0ED9               	movlw	-39
 17278  012A88  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 17279  012A8E  0EDA               	movlw	-38
 17280  012A90  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 17281  012A96  0EDB               	movlw	-37
 17282  012A98  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 17283  012A9E  0EDC               	movlw	-36
 17284  012AA0  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 17285  012AA6  0EDD               	movlw	-35
 17286  012AA8  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 17287  012AAE  0EDE               	movlw	-34
 17288  012AB0  0060  F103  FFE3   	movff	btemp+22,plusw1
 17289  012AB6  0EDF               	movlw	-33
 17290  012AB8  0060  F107  FFE3   	movff	btemp+23,plusw1
 17291  012ABE  0E80               	movlw	128
 17292  012AC0  6EE6               	movwf	postinc1,c
 17293  012AC2  0E51               	movlw	81
 17294  012AC4  6EE6               	movwf	postinc1,c
 17295  012AC6  0E01               	movlw	1
 17296  012AC8  6EE6               	movwf	postinc1,c
 17297  012ACA  0E00               	movlw	0
 17298  012ACC  6EE6               	movwf	postinc1,c
 17299  012ACE  0E00               	movlw	0
 17300  012AD0  6EE6               	movwf	postinc1,c
 17301  012AD2  0E00               	movlw	0
 17302  012AD4  6EE6               	movwf	postinc1,c
 17303  012AD6  0E00               	movlw	0
 17304  012AD8  6EE6               	movwf	postinc1,c
 17305  012ADA  0E00               	movlw	0
 17306  012ADC  6EE6               	movwf	postinc1,c
 17307                           
 17308                           ;stkvar	_secs @ sp[(-65)+17]
 17309  012ADE  50E1               	movf	fsr1l,w,c
 17310  012AE0  0FD0               	addlw	-48
 17311  012AE2  6ED9               	movwf	fsr2l,c
 17312  012AE4  50E2               	movf	fsr1h,w,c
 17313  012AE6  6EDA               	movwf	fsr2h,c
 17314  012AE8  0EFF               	movlw	255
 17315  012AEA  22DA               	addwfc	fsr2h,f,c
 17316  012AEC  006F FF7B FFE6     	movff	postinc2,postinc1
 17317  012AF2  006F FF7B FFE6     	movff	postinc2,postinc1
 17318  012AF8  006F FF7B FFE6     	movff	postinc2,postinc1
 17319  012AFE  006F FF7B FFE6     	movff	postinc2,postinc1
 17320  012B04  006F FF7B FFE6     	movff	postinc2,postinc1
 17321  012B0A  006F FF7B FFE6     	movff	postinc2,postinc1
 17322  012B10  006F FF7B FFE6     	movff	postinc2,postinc1
 17323  012B16  006F FF7B FFE6     	movff	postinc2,postinc1
 17324  012B1C  EC3C  F0E1         	call	___aodiv	;wreg free
 17325  012B20  52E5               	movf	postdec1,f,c
 17326  012B22  006F FF9C  F041    	movff	indf1,btemp+23
 17327  012B28  52E5               	movf	postdec1,f,c
 17328  012B2A  006F FF9C  F040    	movff	indf1,btemp+22
 17329  012B30  52E5               	movf	postdec1,f,c
 17330  012B32  006F FF9C  F03F    	movff	indf1,btemp+21
 17331  012B38  52E5               	movf	postdec1,f,c
 17332  012B3A  006F FF9C  F03E    	movff	indf1,btemp+20
 17333  012B40  52E5               	movf	postdec1,f,c
 17334  012B42  006F FF9C  F03D    	movff	indf1,btemp+19
 17335  012B48  52E5               	movf	postdec1,f,c
 17336  012B4A  006F FF9C  F03C    	movff	indf1,btemp+18
 17337  012B50  52E5               	movf	postdec1,f,c
 17338  012B52  006F FF9C  F03B    	movff	indf1,btemp+17
 17339  012B58  52E5               	movf	postdec1,f,c
 17340  012B5A  006F FF9C  F03A    	movff	indf1,btemp+16
 17341  012B60  0EF8               	movlw	248
 17342  012B62  26E1               	addwf	fsr1l,f,c
 17343  012B64  0EFF               	movlw	255
 17344  012B66  22E2               	addwfc	fsr1h,f,c
 17345                           
 17346                           ;stkvar	_days @ sp[(-57)+9]
 17347  012B68  0ED0               	movlw	-48
 17348  012B6A  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 17349  012B70  0ED1               	movlw	-47
 17350  012B72  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 17351  012B78  0ED2               	movlw	-46
 17352  012B7A  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 17353  012B80  0ED3               	movlw	-45
 17354  012B82  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 17355  012B88  0ED4               	movlw	-44
 17356  012B8A  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 17357  012B90  0ED5               	movlw	-43
 17358  012B92  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 17359  012B98  0ED6               	movlw	-42
 17360  012B9A  0060  F103  FFE3   	movff	btemp+22,plusw1
 17361  012BA0  0ED7               	movlw	-41
 17362  012BA2  0060  F107  FFE3   	movff	btemp+23,plusw1
 17363  012BA8  0E80               	movlw	128
 17364  012BAA  6EE6               	movwf	postinc1,c
 17365  012BAC  0E51               	movlw	81
 17366  012BAE  6EE6               	movwf	postinc1,c
 17367  012BB0  0E01               	movlw	1
 17368  012BB2  6EE6               	movwf	postinc1,c
 17369  012BB4  0E00               	movlw	0
 17370  012BB6  6EE6               	movwf	postinc1,c
 17371  012BB8  0E00               	movlw	0
 17372  012BBA  6EE6               	movwf	postinc1,c
 17373  012BBC  0E00               	movlw	0
 17374  012BBE  6EE6               	movwf	postinc1,c
 17375  012BC0  0E00               	movlw	0
 17376  012BC2  6EE6               	movwf	postinc1,c
 17377  012BC4  0E00               	movlw	0
 17378  012BC6  6EE6               	movwf	postinc1,c
 17379                           
 17380                           ;stkvar	_secs @ sp[(-65)+17]
 17381  012BC8  50E1               	movf	fsr1l,w,c
 17382  012BCA  0FD0               	addlw	-48
 17383  012BCC  6ED9               	movwf	fsr2l,c
 17384  012BCE  50E2               	movf	fsr1h,w,c
 17385  012BD0  6EDA               	movwf	fsr2h,c
 17386  012BD2  0EFF               	movlw	255
 17387  012BD4  22DA               	addwfc	fsr2h,f,c
 17388  012BD6  006F FF7B FFE6     	movff	postinc2,postinc1
 17389  012BDC  006F FF7B FFE6     	movff	postinc2,postinc1
 17390  012BE2  006F FF7B FFE6     	movff	postinc2,postinc1
 17391  012BE8  006F FF7B FFE6     	movff	postinc2,postinc1
 17392  012BEE  006F FF7B FFE6     	movff	postinc2,postinc1
 17393  012BF4  006F FF7B FFE6     	movff	postinc2,postinc1
 17394  012BFA  006F FF7B FFE6     	movff	postinc2,postinc1
 17395  012C00  006F FF7B FFE6     	movff	postinc2,postinc1
 17396  012C06  ECFB  F0E5         	call	___aomod	;wreg free
 17397  012C0A  52E5               	movf	postdec1,f,c
 17398  012C0C  006F FF9C  F041    	movff	indf1,btemp+23
 17399  012C12  52E5               	movf	postdec1,f,c
 17400  012C14  006F FF9C  F040    	movff	indf1,btemp+22
 17401  012C1A  52E5               	movf	postdec1,f,c
 17402  012C1C  006F FF9C  F03F    	movff	indf1,btemp+21
 17403  012C22  52E5               	movf	postdec1,f,c
 17404  012C24  006F FF9C  F03E    	movff	indf1,btemp+20
 17405  012C2A  52E5               	movf	postdec1,f,c
 17406  012C2C  006F FF9C  F03D    	movff	indf1,btemp+19
 17407  012C32  52E5               	movf	postdec1,f,c
 17408  012C34  006F FF9C  F03C    	movff	indf1,btemp+18
 17409  012C3A  52E5               	movf	postdec1,f,c
 17410  012C3C  006F FF9C  F03B    	movff	indf1,btemp+17
 17411  012C42  52E5               	movf	postdec1,f,c
 17412  012C44  006F FF9C  F03A    	movff	indf1,btemp+16
 17413  012C4A  0EF8               	movlw	248
 17414  012C4C  26E1               	addwf	fsr1l,f,c
 17415  012C4E  0EFF               	movlw	255
 17416  012C50  22E2               	addwfc	fsr1h,f,c
 17417  012C52  0060  F0E8  F032   	movff	btemp+16,btemp+8
 17418  012C58  0060  F0EC  F033   	movff	btemp+17,btemp+9
 17419  012C5E  0060  F0F0  F034   	movff	btemp+18,btemp+10
 17420  012C64  0060  F0F4  F035   	movff	btemp+19,btemp+11
 17421                           
 17422                           ;stkvar	_remsecs @ sp[(-57)+41]
 17423  012C6A  0EF0               	movlw	-16
 17424  012C6C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 17425  012C72  0EF1               	movlw	-15
 17426  012C74  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 17427  012C7A  0EF2               	movlw	-14
 17428  012C7C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17429  012C82  0EF3               	movlw	-13
 17430  012C84  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17431                           
 17432                           ;stkvar	_remsecs @ sp[(-57)+41]
 17433  012C8A  0EF3               	movlw	-13
 17434  012C8C  AEE3               	btfss	plusw1,7,c
 17435  012C8E  D01F               	goto	l16760
 17436                           
 17437                           ;stkvar	_remsecs @ sp[(-57)+41]
 17438  012C90  50E1               	movf	fsr1l,w,c
 17439  012C92  0FF0               	addlw	-16
 17440  012C94  6ED9               	movwf	fsr2l,c
 17441  012C96  50E2               	movf	fsr1h,w,c
 17442  012C98  6EDA               	movwf	fsr2h,c
 17443  012C9A  0EFF               	movlw	255
 17444  012C9C  22DA               	addwfc	fsr2h,f,c
 17445  012C9E  0E80               	movlw	128
 17446  012CA0  26DE               	addwf	postinc2,f,c
 17447  012CA2  0E51               	movlw	81
 17448  012CA4  22DE               	addwfc	postinc2,f,c
 17449  012CA6  0E01               	movlw	1
 17450  012CA8  22DE               	addwfc	postinc2,f,c
 17451  012CAA  0E00               	movlw	0
 17452  012CAC  22DE               	addwfc	postinc2,f,c
 17453                           
 17454                           ;stkvar	_days @ sp[(-57)+9]
 17455  012CAE  50E1               	movf	fsr1l,w,c
 17456  012CB0  0FD0               	addlw	-48
 17457  012CB2  6ED9               	movwf	fsr2l,c
 17458  012CB4  50E2               	movf	fsr1h,w,c
 17459  012CB6  6EDA               	movwf	fsr2h,c
 17460  012CB8  0EFF               	movlw	255
 17461  012CBA  22DA               	addwfc	fsr2h,f,c
 17462  012CBC  06DE               	decf	postinc2,f,c
 17463  012CBE  0E00               	movlw	0
 17464  012CC0  5ADE               	subwfb	postinc2,f,c
 17465  012CC2  5ADE               	subwfb	postinc2,f,c
 17466  012CC4  5ADE               	subwfb	postinc2,f,c
 17467  012CC6  5ADE               	subwfb	postinc2,f,c
 17468  012CC8  5ADE               	subwfb	postinc2,f,c
 17469  012CCA  5ADE               	subwfb	postinc2,f,c
 17470  012CCC  5ADE               	subwfb	postinc2,f,c
 17471  012CCE                     l16760:
 17472  012CCE  0E07               	movlw	7
 17473  012CD0  6EE6               	movwf	postinc1,c
 17474  012CD2  0E00               	movlw	0
 17475  012CD4  6EE6               	movwf	postinc1,c
 17476  012CD6  0E00               	movlw	0
 17477  012CD8  6EE6               	movwf	postinc1,c
 17478  012CDA  0E00               	movlw	0
 17479  012CDC  6EE6               	movwf	postinc1,c
 17480  012CDE  0E00               	movlw	0
 17481  012CE0  6EE6               	movwf	postinc1,c
 17482  012CE2  0E00               	movlw	0
 17483  012CE4  6EE6               	movwf	postinc1,c
 17484  012CE6  0E00               	movlw	0
 17485  012CE8  6EE6               	movwf	postinc1,c
 17486  012CEA  0E00               	movlw	0
 17487  012CEC  6EE6               	movwf	postinc1,c
 17488                           
 17489                           ;stkvar	_days @ sp[(-65)+9]
 17490  012CEE  0EC8               	movlw	-56
 17491  012CF0  50E3               	movf	plusw1,w,c
 17492  012CF2  0F03               	addlw	3
 17493  012CF4  6E3A               	movwf	(btemp+16)^0,c
 17494  012CF6  0EC9               	movlw	-55
 17495  012CF8  006F FF8C  F03B    	movff	plusw1,btemp+17
 17496  012CFE  0E00               	movlw	0
 17497  012D00  223B               	addwfc	(btemp+17)^0,f,c
 17498  012D02  0ECA               	movlw	-54
 17499  012D04  006F FF8C  F03C    	movff	plusw1,btemp+18
 17500  012D0A  0E00               	movlw	0
 17501  012D0C  223C               	addwfc	(btemp+18)^0,f,c
 17502  012D0E  0ECB               	movlw	-53
 17503  012D10  006F FF8C  F03D    	movff	plusw1,btemp+19
 17504  012D16  0E00               	movlw	0
 17505  012D18  223D               	addwfc	(btemp+19)^0,f,c
 17506  012D1A  0ECC               	movlw	-52
 17507  012D1C  006F FF8C  F03E    	movff	plusw1,btemp+20
 17508  012D22  0E00               	movlw	0
 17509  012D24  223E               	addwfc	(btemp+20)^0,f,c
 17510  012D26  0ECD               	movlw	-51
 17511  012D28  006F FF8C  F03F    	movff	plusw1,btemp+21
 17512  012D2E  0E00               	movlw	0
 17513  012D30  223F               	addwfc	(btemp+21)^0,f,c
 17514  012D32  0ECE               	movlw	-50
 17515  012D34  006F FF8C  F040    	movff	plusw1,btemp+22
 17516  012D3A  0E00               	movlw	0
 17517  012D3C  2240               	addwfc	(btemp+22)^0,f,c
 17518  012D3E  0ECF               	movlw	-49
 17519  012D40  006F FF8C  F041    	movff	plusw1,btemp+23
 17520  012D46  0E00               	movlw	0
 17521  012D48  2241               	addwfc	(btemp+23)^0,f,c
 17522  012D4A  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 17523  012D50  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 17524  012D56  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 17525  012D5C  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 17526  012D62  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 17527  012D68  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 17528  012D6E  0060  F103  FFE6   	movff	btemp+22,postinc1
 17529  012D74  0060  F107  FFE6   	movff	btemp+23,postinc1
 17530  012D7A  ECFB  F0E5         	call	___aomod	;wreg free
 17531  012D7E  52E5               	movf	postdec1,f,c
 17532  012D80  006F FF9C  F041    	movff	indf1,btemp+23
 17533  012D86  52E5               	movf	postdec1,f,c
 17534  012D88  006F FF9C  F040    	movff	indf1,btemp+22
 17535  012D8E  52E5               	movf	postdec1,f,c
 17536  012D90  006F FF9C  F03F    	movff	indf1,btemp+21
 17537  012D96  52E5               	movf	postdec1,f,c
 17538  012D98  006F FF9C  F03E    	movff	indf1,btemp+20
 17539  012D9E  52E5               	movf	postdec1,f,c
 17540  012DA0  006F FF9C  F03D    	movff	indf1,btemp+19
 17541  012DA6  52E5               	movf	postdec1,f,c
 17542  012DA8  006F FF9C  F03C    	movff	indf1,btemp+18
 17543  012DAE  52E5               	movf	postdec1,f,c
 17544  012DB0  006F FF9C  F03B    	movff	indf1,btemp+17
 17545  012DB6  52E5               	movf	postdec1,f,c
 17546  012DB8  006F FF9C  F03A    	movff	indf1,btemp+16
 17547  012DBE  0EF8               	movlw	248
 17548  012DC0  26E1               	addwf	fsr1l,f,c
 17549  012DC2  0EFF               	movlw	255
 17550  012DC4  22E2               	addwfc	fsr1h,f,c
 17551  012DC6  0060  F0E8  F034   	movff	btemp+16,btemp+10
 17552  012DCC  0060  F0EC  F035   	movff	btemp+17,btemp+11
 17553                           
 17554                           ;stkvar	_wday @ sp[(-57)+55]
 17555  012DD2  0EFE               	movlw	-2
 17556  012DD4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17557  012DDA  0EFF               	movlw	-1
 17558  012DDC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17559                           
 17560                           ;stkvar	_wday @ sp[(-57)+55]
 17561  012DE2  0EFF               	movlw	-1
 17562  012DE4  AEE3               	btfss	plusw1,7,c
 17563  012DE6  D011               	goto	l16766
 17564                           
 17565                           ;stkvar	_wday @ sp[(-57)+55]
 17566  012DE8  0EFE               	movlw	-2
 17567  012DEA  50E3               	movf	plusw1,w,c
 17568  012DEC  0F07               	addlw	7
 17569  012DEE  6E2A               	movwf	btemp^0,c
 17570  012DF0  0EFE               	movlw	-2
 17571  012DF2  0060  F0AB  FFE3   	movff	btemp,plusw1
 17572  012DF8  6A2A               	clrf	btemp^0,c
 17573  012DFA  0EFF               	movlw	-1
 17574  012DFC  50E3               	movf	plusw1,w,c
 17575  012DFE  202A               	addwfc	btemp^0,w,c
 17576  012E00  6E2A               	movwf	btemp^0,c
 17577  012E02  0EFF               	movlw	-1
 17578  012E04  0060  F0AB  FFE3   	movff	btemp,plusw1
 17579  012E0A                     l16766:
 17580  012E0A  0EB1               	movlw	177
 17581  012E0C  6EE6               	movwf	postinc1,c
 17582  012E0E  0E3A               	movlw	58
 17583  012E10  6EE6               	movwf	postinc1,c
 17584  012E12  0E02               	movlw	2
 17585  012E14  6EE6               	movwf	postinc1,c
 17586  012E16  0E00               	movlw	0
 17587  012E18  6EE6               	movwf	postinc1,c
 17588  012E1A  0E00               	movlw	0
 17589  012E1C  6EE6               	movwf	postinc1,c
 17590  012E1E  0E00               	movlw	0
 17591  012E20  6EE6               	movwf	postinc1,c
 17592  012E22  0E00               	movlw	0
 17593  012E24  6EE6               	movwf	postinc1,c
 17594  012E26  0E00               	movlw	0
 17595  012E28  6EE6               	movwf	postinc1,c
 17596                           
 17597                           ;stkvar	_days @ sp[(-65)+9]
 17598  012E2A  50E1               	movf	fsr1l,w,c
 17599  012E2C  0FC8               	addlw	-56
 17600  012E2E  6ED9               	movwf	fsr2l,c
 17601  012E30  50E2               	movf	fsr1h,w,c
 17602  012E32  6EDA               	movwf	fsr2h,c
 17603  012E34  0EFF               	movlw	255
 17604  012E36  22DA               	addwfc	fsr2h,f,c
 17605  012E38  006F FF7B FFE6     	movff	postinc2,postinc1
 17606  012E3E  006F FF7B FFE6     	movff	postinc2,postinc1
 17607  012E44  006F FF7B FFE6     	movff	postinc2,postinc1
 17608  012E4A  006F FF7B FFE6     	movff	postinc2,postinc1
 17609  012E50  006F FF7B FFE6     	movff	postinc2,postinc1
 17610  012E56  006F FF7B FFE6     	movff	postinc2,postinc1
 17611  012E5C  006F FF7B FFE6     	movff	postinc2,postinc1
 17612  012E62  006F FF7B FFE6     	movff	postinc2,postinc1
 17613  012E68  EC3C  F0E1         	call	___aodiv	;wreg free
 17614  012E6C  52E5               	movf	postdec1,f,c
 17615  012E6E  006F FF9C  F041    	movff	indf1,btemp+23
 17616  012E74  52E5               	movf	postdec1,f,c
 17617  012E76  006F FF9C  F040    	movff	indf1,btemp+22
 17618  012E7C  52E5               	movf	postdec1,f,c
 17619  012E7E  006F FF9C  F03F    	movff	indf1,btemp+21
 17620  012E84  52E5               	movf	postdec1,f,c
 17621  012E86  006F FF9C  F03E    	movff	indf1,btemp+20
 17622  012E8C  52E5               	movf	postdec1,f,c
 17623  012E8E  006F FF9C  F03D    	movff	indf1,btemp+19
 17624  012E94  52E5               	movf	postdec1,f,c
 17625  012E96  006F FF9C  F03C    	movff	indf1,btemp+18
 17626  012E9C  52E5               	movf	postdec1,f,c
 17627  012E9E  006F FF9C  F03B    	movff	indf1,btemp+17
 17628  012EA4  52E5               	movf	postdec1,f,c
 17629  012EA6  006F FF9C  F03A    	movff	indf1,btemp+16
 17630  012EAC  0EF8               	movlw	248
 17631  012EAE  26E1               	addwf	fsr1l,f,c
 17632  012EB0  0EFF               	movlw	255
 17633  012EB2  22E2               	addwfc	fsr1h,f,c
 17634  012EB4  0060  F0E8  F032   	movff	btemp+16,btemp+8
 17635  012EBA  0060  F0EC  F033   	movff	btemp+17,btemp+9
 17636  012EC0  0060  F0F0  F034   	movff	btemp+18,btemp+10
 17637  012EC6  0060  F0F4  F035   	movff	btemp+19,btemp+11
 17638                           
 17639                           ;stkvar	_qc_cycles @ sp[(-57)+45]
 17640  012ECC  0EF4               	movlw	-12
 17641  012ECE  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 17642  012ED4  0EF5               	movlw	-11
 17643  012ED6  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 17644  012EDC  0EF6               	movlw	-10
 17645  012EDE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17646  012EE4  0EF7               	movlw	-9
 17647  012EE6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17648  012EEC  0EB1               	movlw	177
 17649  012EEE  6EE6               	movwf	postinc1,c
 17650  012EF0  0E3A               	movlw	58
 17651  012EF2  6EE6               	movwf	postinc1,c
 17652  012EF4  0E02               	movlw	2
 17653  012EF6  6EE6               	movwf	postinc1,c
 17654  012EF8  0E00               	movlw	0
 17655  012EFA  6EE6               	movwf	postinc1,c
 17656  012EFC  0E00               	movlw	0
 17657  012EFE  6EE6               	movwf	postinc1,c
 17658  012F00  0E00               	movlw	0
 17659  012F02  6EE6               	movwf	postinc1,c
 17660  012F04  0E00               	movlw	0
 17661  012F06  6EE6               	movwf	postinc1,c
 17662  012F08  0E00               	movlw	0
 17663  012F0A  6EE6               	movwf	postinc1,c
 17664                           
 17665                           ;stkvar	_days @ sp[(-65)+9]
 17666  012F0C  50E1               	movf	fsr1l,w,c
 17667  012F0E  0FC8               	addlw	-56
 17668  012F10  6ED9               	movwf	fsr2l,c
 17669  012F12  50E2               	movf	fsr1h,w,c
 17670  012F14  6EDA               	movwf	fsr2h,c
 17671  012F16  0EFF               	movlw	255
 17672  012F18  22DA               	addwfc	fsr2h,f,c
 17673  012F1A  006F FF7B FFE6     	movff	postinc2,postinc1
 17674  012F20  006F FF7B FFE6     	movff	postinc2,postinc1
 17675  012F26  006F FF7B FFE6     	movff	postinc2,postinc1
 17676  012F2C  006F FF7B FFE6     	movff	postinc2,postinc1
 17677  012F32  006F FF7B FFE6     	movff	postinc2,postinc1
 17678  012F38  006F FF7B FFE6     	movff	postinc2,postinc1
 17679  012F3E  006F FF7B FFE6     	movff	postinc2,postinc1
 17680  012F44  006F FF7B FFE6     	movff	postinc2,postinc1
 17681  012F4A  ECFB  F0E5         	call	___aomod	;wreg free
 17682  012F4E  52E5               	movf	postdec1,f,c
 17683  012F50  006F FF9C  F041    	movff	indf1,btemp+23
 17684  012F56  52E5               	movf	postdec1,f,c
 17685  012F58  006F FF9C  F040    	movff	indf1,btemp+22
 17686  012F5E  52E5               	movf	postdec1,f,c
 17687  012F60  006F FF9C  F03F    	movff	indf1,btemp+21
 17688  012F66  52E5               	movf	postdec1,f,c
 17689  012F68  006F FF9C  F03E    	movff	indf1,btemp+20
 17690  012F6E  52E5               	movf	postdec1,f,c
 17691  012F70  006F FF9C  F03D    	movff	indf1,btemp+19
 17692  012F76  52E5               	movf	postdec1,f,c
 17693  012F78  006F FF9C  F03C    	movff	indf1,btemp+18
 17694  012F7E  52E5               	movf	postdec1,f,c
 17695  012F80  006F FF9C  F03B    	movff	indf1,btemp+17
 17696  012F86  52E5               	movf	postdec1,f,c
 17697  012F88  006F FF9C  F03A    	movff	indf1,btemp+16
 17698  012F8E  0EF8               	movlw	248
 17699  012F90  26E1               	addwf	fsr1l,f,c
 17700  012F92  0EFF               	movlw	255
 17701  012F94  22E2               	addwfc	fsr1h,f,c
 17702  012F96  0060  F0E8  F032   	movff	btemp+16,btemp+8
 17703  012F9C  0060  F0EC  F033   	movff	btemp+17,btemp+9
 17704  012FA2  0060  F0F0  F034   	movff	btemp+18,btemp+10
 17705  012FA8  0060  F0F4  F035   	movff	btemp+19,btemp+11
 17706                           
 17707                           ;stkvar	_remdays @ sp[(-57)+25]
 17708  012FAE  0EE0               	movlw	-32
 17709  012FB0  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 17710  012FB6  0EE1               	movlw	-31
 17711  012FB8  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 17712  012FBE  0EE2               	movlw	-30
 17713  012FC0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17714  012FC6  0EE3               	movlw	-29
 17715  012FC8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17716                           
 17717                           ;stkvar	_remdays @ sp[(-57)+25]
 17718  012FCE  0EE3               	movlw	-29
 17719  012FD0  AEE3               	btfss	plusw1,7,c
 17720  012FD2  D01B               	goto	l16774
 17721                           
 17722                           ;stkvar	_remdays @ sp[(-57)+25]
 17723  012FD4  50E1               	movf	fsr1l,w,c
 17724  012FD6  0FE0               	addlw	-32
 17725  012FD8  6ED9               	movwf	fsr2l,c
 17726  012FDA  50E2               	movf	fsr1h,w,c
 17727  012FDC  6EDA               	movwf	fsr2h,c
 17728  012FDE  0EFF               	movlw	255
 17729  012FE0  22DA               	addwfc	fsr2h,f,c
 17730  012FE2  0EB1               	movlw	177
 17731  012FE4  26DE               	addwf	postinc2,f,c
 17732  012FE6  0E3A               	movlw	58
 17733  012FE8  22DE               	addwfc	postinc2,f,c
 17734  012FEA  0E02               	movlw	2
 17735  012FEC  22DE               	addwfc	postinc2,f,c
 17736  012FEE  0E00               	movlw	0
 17737  012FF0  22DE               	addwfc	postinc2,f,c
 17738                           
 17739                           ;stkvar	_qc_cycles @ sp[(-57)+45]
 17740  012FF2  50E1               	movf	fsr1l,w,c
 17741  012FF4  0FF4               	addlw	-12
 17742  012FF6  6ED9               	movwf	fsr2l,c
 17743  012FF8  50E2               	movf	fsr1h,w,c
 17744  012FFA  6EDA               	movwf	fsr2h,c
 17745  012FFC  0EFF               	movlw	255
 17746  012FFE  22DA               	addwfc	fsr2h,f,c
 17747  013000  06DE               	decf	postinc2,f,c
 17748  013002  0E00               	movlw	0
 17749  013004  5ADE               	subwfb	postinc2,f,c
 17750  013006  5ADE               	subwfb	postinc2,f,c
 17751  013008  5ADE               	subwfb	postinc2,f,c
 17752  01300A                     l16774:
 17753  01300A  0EAC               	movlw	172
 17754  01300C  6EE6               	movwf	postinc1,c
 17755  01300E  0E8E               	movlw	142
 17756  013010  6EE6               	movwf	postinc1,c
 17757  013012  0E00               	movlw	0
 17758  013014  6EE6               	movwf	postinc1,c
 17759  013016  0E00               	movlw	0
 17760  013018  6EE6               	movwf	postinc1,c
 17761                           
 17762                           ;stkvar	_remdays @ sp[(-61)+25]
 17763  01301A  0EDC               	movlw	-36
 17764  01301C  006F FF8F FFE6     	movff	plusw1,postinc1
 17765  013022  006F FF8F FFE6     	movff	plusw1,postinc1
 17766  013028  006F FF8F FFE6     	movff	plusw1,postinc1
 17767  01302E  006F FF8F FFE6     	movff	plusw1,postinc1
 17768  013034  ECBC  F0EF         	call	___aldiv	;wreg free
 17769                           
 17770                           ;stkvar	_c_cycles @ sp[(-57)+33]
 17771  013038  0EE8               	movlw	-24
 17772  01303A  0060  F0AB  FFE3   	movff	btemp,plusw1
 17773  013040  0EE9               	movlw	-23
 17774  013042  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 17775  013048  0EEA               	movlw	-22
 17776  01304A  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 17777  013050  0EEB               	movlw	-21
 17778  013052  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 17779                           
 17780                           ;stkvar	_c_cycles @ sp[(-57)+33]
 17781  013058  0EE8               	movlw	-24
 17782  01305A  006F FF8C  F02A    	movff	plusw1,btemp
 17783  013060  0E04               	movlw	4
 17784  013062  182A               	xorwf	btemp^0,w,c
 17785  013064  E116               	bnz	l16780
 17786  013066  0EE9               	movlw	-23
 17787  013068  50E3               	movf	plusw1,w,c
 17788  01306A  E113               	bnz	l16780
 17789  01306C  0EEA               	movlw	-22
 17790  01306E  50E3               	movf	plusw1,w,c
 17791  013070  E110               	bnz	l16780
 17792  013072  0EEB               	movlw	-21
 17793  013074  50E3               	movf	plusw1,w,c
 17794  013076  A4D8               	btfss	status,2,c
 17795  013078  D00C               	goto	l16780
 17796                           
 17797                           ;stkvar	_c_cycles @ sp[(-57)+33]
 17798  01307A  50E1               	movf	fsr1l,w,c
 17799  01307C  0FE8               	addlw	-24
 17800  01307E  6ED9               	movwf	fsr2l,c
 17801  013080  50E2               	movf	fsr1h,w,c
 17802  013082  6EDA               	movwf	fsr2h,c
 17803  013084  0EFF               	movlw	255
 17804  013086  22DA               	addwfc	fsr2h,f,c
 17805  013088  06DE               	decf	postinc2,f,c
 17806  01308A  0E00               	movlw	0
 17807  01308C  5ADE               	subwfb	postinc2,f,c
 17808  01308E  5ADE               	subwfb	postinc2,f,c
 17809  013090  5ADE               	subwfb	postinc2,f,c
 17810  013092                     l16780:
 17811  013092  0EAC               	movlw	172
 17812  013094  6EE6               	movwf	postinc1,c
 17813  013096  0E8E               	movlw	142
 17814  013098  6EE6               	movwf	postinc1,c
 17815  01309A  0E00               	movlw	0
 17816  01309C  6EE6               	movwf	postinc1,c
 17817  01309E  0E00               	movlw	0
 17818  0130A0  6EE6               	movwf	postinc1,c
 17819                           
 17820                           ;stkvar	_c_cycles @ sp[(-61)+33]
 17821  0130A2  0EE4               	movlw	-28
 17822  0130A4  006F FF8F FFE6     	movff	plusw1,postinc1
 17823  0130AA  006F FF8F FFE6     	movff	plusw1,postinc1
 17824  0130B0  006F FF8F FFE6     	movff	plusw1,postinc1
 17825  0130B6  006F FF8F FFE6     	movff	plusw1,postinc1
 17826  0130BC  ECBF  F001         	call	___lmul	;wreg free
 17827                           
 17828                           ;stkvar	_remdays @ sp[(-57)+25]
 17829  0130C0  50E1               	movf	fsr1l,w,c
 17830  0130C2  0FE0               	addlw	-32
 17831  0130C4  6ED9               	movwf	fsr2l,c
 17832  0130C6  50E2               	movf	fsr1h,w,c
 17833  0130C8  6EDA               	movwf	fsr2h,c
 17834  0130CA  0EFF               	movlw	255
 17835  0130CC  22DA               	addwfc	fsr2h,f,c
 17836  0130CE  502A               	movf	btemp^0,w,c
 17837  0130D0  5EDE               	subwf	postinc2,f,c
 17838  0130D2  502B               	movf	(btemp+1)^0,w,c
 17839  0130D4  5ADE               	subwfb	postinc2,f,c
 17840  0130D6  502C               	movf	(btemp+2)^0,w,c
 17841  0130D8  5ADE               	subwfb	postinc2,f,c
 17842  0130DA  502D               	movf	(btemp+3)^0,w,c
 17843  0130DC  5ADE               	subwfb	postinc2,f,c
 17844  0130DE  0EB5               	movlw	181
 17845  0130E0  6EE6               	movwf	postinc1,c
 17846  0130E2  0E05               	movlw	5
 17847  0130E4  6EE6               	movwf	postinc1,c
 17848  0130E6  0E00               	movlw	0
 17849  0130E8  6EE6               	movwf	postinc1,c
 17850  0130EA  0E00               	movlw	0
 17851  0130EC  6EE6               	movwf	postinc1,c
 17852                           
 17853                           ;stkvar	_remdays @ sp[(-61)+25]
 17854  0130EE  0EDC               	movlw	-36
 17855  0130F0  006F FF8F FFE6     	movff	plusw1,postinc1
 17856  0130F6  006F FF8F FFE6     	movff	plusw1,postinc1
 17857  0130FC  006F FF8F FFE6     	movff	plusw1,postinc1
 17858  013102  006F FF8F FFE6     	movff	plusw1,postinc1
 17859  013108  ECBC  F0EF         	call	___aldiv	;wreg free
 17860                           
 17861                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17862  01310C  0EE4               	movlw	-28
 17863  01310E  0060  F0AB  FFE3   	movff	btemp,plusw1
 17864  013114  0EE5               	movlw	-27
 17865  013116  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 17866  01311C  0EE6               	movlw	-26
 17867  01311E  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 17868  013124  0EE7               	movlw	-25
 17869  013126  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 17870                           
 17871                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17872  01312C  0EE4               	movlw	-28
 17873  01312E  006F FF8C  F02A    	movff	plusw1,btemp
 17874  013134  0E19               	movlw	25
 17875  013136  182A               	xorwf	btemp^0,w,c
 17876  013138  E116               	bnz	l16788
 17877  01313A  0EE5               	movlw	-27
 17878  01313C  50E3               	movf	plusw1,w,c
 17879  01313E  E113               	bnz	l16788
 17880  013140  0EE6               	movlw	-26
 17881  013142  50E3               	movf	plusw1,w,c
 17882  013144  E110               	bnz	l16788
 17883  013146  0EE7               	movlw	-25
 17884  013148  50E3               	movf	plusw1,w,c
 17885  01314A  A4D8               	btfss	status,2,c
 17886  01314C  D00C               	goto	l16788
 17887                           
 17888                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17889  01314E  50E1               	movf	fsr1l,w,c
 17890  013150  0FE4               	addlw	-28
 17891  013152  6ED9               	movwf	fsr2l,c
 17892  013154  50E2               	movf	fsr1h,w,c
 17893  013156  6EDA               	movwf	fsr2h,c
 17894  013158  0EFF               	movlw	255
 17895  01315A  22DA               	addwfc	fsr2h,f,c
 17896  01315C  06DE               	decf	postinc2,f,c
 17897  01315E  0E00               	movlw	0
 17898  013160  5ADE               	subwfb	postinc2,f,c
 17899  013162  5ADE               	subwfb	postinc2,f,c
 17900  013164  5ADE               	subwfb	postinc2,f,c
 17901  013166                     l16788:
 17902  013166  0EB5               	movlw	181
 17903  013168  6EE6               	movwf	postinc1,c
 17904  01316A  0E05               	movlw	5
 17905  01316C  6EE6               	movwf	postinc1,c
 17906  01316E  0E00               	movlw	0
 17907  013170  6EE6               	movwf	postinc1,c
 17908  013172  0E00               	movlw	0
 17909  013174  6EE6               	movwf	postinc1,c
 17910                           
 17911                           ;stkvar	_q_cycles @ sp[(-61)+29]
 17912  013176  0EE0               	movlw	-32
 17913  013178  006F FF8F FFE6     	movff	plusw1,postinc1
 17914  01317E  006F FF8F FFE6     	movff	plusw1,postinc1
 17915  013184  006F FF8F FFE6     	movff	plusw1,postinc1
 17916  01318A  006F FF8F FFE6     	movff	plusw1,postinc1
 17917  013190  ECBF  F001         	call	___lmul	;wreg free
 17918                           
 17919                           ;stkvar	_remdays @ sp[(-57)+25]
 17920  013194  50E1               	movf	fsr1l,w,c
 17921  013196  0FE0               	addlw	-32
 17922  013198  6ED9               	movwf	fsr2l,c
 17923  01319A  50E2               	movf	fsr1h,w,c
 17924  01319C  6EDA               	movwf	fsr2h,c
 17925  01319E  0EFF               	movlw	255
 17926  0131A0  22DA               	addwfc	fsr2h,f,c
 17927  0131A2  502A               	movf	btemp^0,w,c
 17928  0131A4  5EDE               	subwf	postinc2,f,c
 17929  0131A6  502B               	movf	(btemp+1)^0,w,c
 17930  0131A8  5ADE               	subwfb	postinc2,f,c
 17931  0131AA  502C               	movf	(btemp+2)^0,w,c
 17932  0131AC  5ADE               	subwfb	postinc2,f,c
 17933  0131AE  502D               	movf	(btemp+3)^0,w,c
 17934  0131B0  5ADE               	subwfb	postinc2,f,c
 17935  0131B2  0E6D               	movlw	109
 17936  0131B4  6EE6               	movwf	postinc1,c
 17937  0131B6  0E01               	movlw	1
 17938  0131B8  6EE6               	movwf	postinc1,c
 17939  0131BA  0E00               	movlw	0
 17940  0131BC  6EE6               	movwf	postinc1,c
 17941  0131BE  0E00               	movlw	0
 17942  0131C0  6EE6               	movwf	postinc1,c
 17943                           
 17944                           ;stkvar	_remdays @ sp[(-61)+25]
 17945  0131C2  0EDC               	movlw	-36
 17946  0131C4  006F FF8F FFE6     	movff	plusw1,postinc1
 17947  0131CA  006F FF8F FFE6     	movff	plusw1,postinc1
 17948  0131D0  006F FF8F FFE6     	movff	plusw1,postinc1
 17949  0131D6  006F FF8F FFE6     	movff	plusw1,postinc1
 17950  0131DC  ECBC  F0EF         	call	___aldiv	;wreg free
 17951                           
 17952                           ;stkvar	_remyears @ sp[(-57)+37]
 17953  0131E0  0EEC               	movlw	-20
 17954  0131E2  0060  F0AB  FFE3   	movff	btemp,plusw1
 17955  0131E8  0EED               	movlw	-19
 17956  0131EA  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 17957  0131F0  0EEE               	movlw	-18
 17958  0131F2  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 17959  0131F8  0EEF               	movlw	-17
 17960  0131FA  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 17961                           
 17962                           ;stkvar	_remyears @ sp[(-57)+37]
 17963  013200  0EEC               	movlw	-20
 17964  013202  006F FF8C  F02A    	movff	plusw1,btemp
 17965  013208  0E04               	movlw	4
 17966  01320A  182A               	xorwf	btemp^0,w,c
 17967  01320C  E116               	bnz	l16796
 17968  01320E  0EED               	movlw	-19
 17969  013210  50E3               	movf	plusw1,w,c
 17970  013212  E113               	bnz	l16796
 17971  013214  0EEE               	movlw	-18
 17972  013216  50E3               	movf	plusw1,w,c
 17973  013218  E110               	bnz	l16796
 17974  01321A  0EEF               	movlw	-17
 17975  01321C  50E3               	movf	plusw1,w,c
 17976  01321E  A4D8               	btfss	status,2,c
 17977  013220  D00C               	goto	l16796
 17978                           
 17979                           ;stkvar	_remyears @ sp[(-57)+37]
 17980  013222  50E1               	movf	fsr1l,w,c
 17981  013224  0FEC               	addlw	-20
 17982  013226  6ED9               	movwf	fsr2l,c
 17983  013228  50E2               	movf	fsr1h,w,c
 17984  01322A  6EDA               	movwf	fsr2h,c
 17985  01322C  0EFF               	movlw	255
 17986  01322E  22DA               	addwfc	fsr2h,f,c
 17987  013230  06DE               	decf	postinc2,f,c
 17988  013232  0E00               	movlw	0
 17989  013234  5ADE               	subwfb	postinc2,f,c
 17990  013236  5ADE               	subwfb	postinc2,f,c
 17991  013238  5ADE               	subwfb	postinc2,f,c
 17992  01323A                     l16796:
 17993  01323A  0E6D               	movlw	109
 17994  01323C  6EE6               	movwf	postinc1,c
 17995  01323E  0E01               	movlw	1
 17996  013240  6EE6               	movwf	postinc1,c
 17997  013242  0E00               	movlw	0
 17998  013244  6EE6               	movwf	postinc1,c
 17999  013246  0E00               	movlw	0
 18000  013248  6EE6               	movwf	postinc1,c
 18001                           
 18002                           ;stkvar	_remyears @ sp[(-61)+37]
 18003  01324A  0EE8               	movlw	-24
 18004  01324C  006F FF8F FFE6     	movff	plusw1,postinc1
 18005  013252  006F FF8F FFE6     	movff	plusw1,postinc1
 18006  013258  006F FF8F FFE6     	movff	plusw1,postinc1
 18007  01325E  006F FF8F FFE6     	movff	plusw1,postinc1
 18008  013264  ECBF  F001         	call	___lmul	;wreg free
 18009                           
 18010                           ;stkvar	_remdays @ sp[(-57)+25]
 18011  013268  50E1               	movf	fsr1l,w,c
 18012  01326A  0FE0               	addlw	-32
 18013  01326C  6ED9               	movwf	fsr2l,c
 18014  01326E  50E2               	movf	fsr1h,w,c
 18015  013270  6EDA               	movwf	fsr2h,c
 18016  013272  0EFF               	movlw	255
 18017  013274  22DA               	addwfc	fsr2h,f,c
 18018  013276  502A               	movf	btemp^0,w,c
 18019  013278  5EDE               	subwf	postinc2,f,c
 18020  01327A  502B               	movf	(btemp+1)^0,w,c
 18021  01327C  5ADE               	subwfb	postinc2,f,c
 18022  01327E  502C               	movf	(btemp+2)^0,w,c
 18023  013280  5ADE               	subwfb	postinc2,f,c
 18024  013282  502D               	movf	(btemp+3)^0,w,c
 18025  013284  5ADE               	subwfb	postinc2,f,c
 18026                           
 18027                           ;stkvar	___secs_to_tm$7627 @ sp[(-57)+0]
 18028  013286  0EC7               	movlw	-57
 18029  013288  6AE3               	clrf	plusw1,c
 18030                           
 18031                           ;stkvar	_remyears @ sp[(-57)+37]
 18032  01328A  0EEC               	movlw	-20
 18033  01328C  50E3               	movf	plusw1,w,c
 18034  01328E  E127               	bnz	l16808
 18035  013290  0EED               	movlw	-19
 18036  013292  50E3               	movf	plusw1,w,c
 18037  013294  E124               	bnz	l16808
 18038  013296  0EEE               	movlw	-18
 18039  013298  50E3               	movf	plusw1,w,c
 18040  01329A  E121               	bnz	l16808
 18041  01329C  0EEF               	movlw	-17
 18042  01329E  50E3               	movf	plusw1,w,c
 18043  0132A0  A4D8               	btfss	status,2,c
 18044  0132A2  D01D               	goto	l16808
 18045                           
 18046                           ;stkvar	_q_cycles @ sp[(-57)+29]
 18047  0132A4  0EE4               	movlw	-28
 18048  0132A6  50E3               	movf	plusw1,w,c
 18049  0132A8  E117               	bnz	l16806
 18050  0132AA  0EE5               	movlw	-27
 18051  0132AC  50E3               	movf	plusw1,w,c
 18052  0132AE  E114               	bnz	l16806
 18053  0132B0  0EE6               	movlw	-26
 18054  0132B2  50E3               	movf	plusw1,w,c
 18055  0132B4  E111               	bnz	l16806
 18056  0132B6  0EE7               	movlw	-25
 18057  0132B8  50E3               	movf	plusw1,w,c
 18058  0132BA  A4D8               	btfss	status,2,c
 18059  0132BC  D00D               	goto	u16420
 18060                           
 18061                           ;stkvar	_c_cycles @ sp[(-57)+33]
 18062  0132BE  0EE8               	movlw	-24
 18063  0132C0  50E3               	movf	plusw1,w,c
 18064  0132C2  E10D               	bnz	l16808
 18065  0132C4  0EE9               	movlw	-23
 18066  0132C6  50E3               	movf	plusw1,w,c
 18067  0132C8  E10A               	bnz	l16808
 18068  0132CA  0EEA               	movlw	-22
 18069  0132CC  50E3               	movf	plusw1,w,c
 18070  0132CE  E107               	bnz	l16808
 18071  0132D0  0EEB               	movlw	-21
 18072  0132D2  50E3               	movf	plusw1,w,c
 18073  0132D4  A4D8               	btfss	status,2,c
 18074  0132D6  D003               	goto	l16808
 18075  0132D8                     u16420:
 18076  0132D8                     l16806:
 18077                           
 18078                           ;stkvar	___secs_to_tm$7627 @ sp[(-57)+0]
 18079  0132D8  0EC7               	movlw	-57
 18080  0132DA  6AE3               	clrf	plusw1,c
 18081  0132DC  2AE3               	incf	plusw1,f,c
 18082  0132DE                     l16808:
 18083                           
 18084                           ;stkvar	___secs_to_tm$7627 @ sp[(-57)+0]
 18085  0132DE  0EC7               	movlw	-57
 18086  0132E0  50E3               	movf	plusw1,w,c
 18087  0132E2  6E34               	movwf	(btemp+10)^0,c
 18088  0132E4  6A35               	clrf	(btemp+11)^0,c
 18089                           
 18090                           ;stkvar	_leap @ sp[(-57)+51]
 18091  0132E6  0EFA               	movlw	-6
 18092  0132E8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 18093  0132EE  0EFB               	movlw	-5
 18094  0132F0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 18095                           
 18096                           ;stkvar	_remdays @ sp[(-57)+25]
 18097                           ;stkvar	_leap @ sp[(-57)+51]
 18098  0132F6  0EFA               	movlw	-6
 18099  0132F8  006F FF8C  F034    	movff	plusw1,btemp+10
 18100  0132FE  0EFB               	movlw	-5
 18101  013300  006F FF8C  F035    	movff	plusw1,btemp+11
 18102  013306  0EE0               	movlw	-32
 18103  013308  50E3               	movf	plusw1,w,c
 18104  01330A  2634               	addwf	(btemp+10)^0,f,c
 18105  01330C  0EE1               	movlw	-31
 18106  01330E  50E3               	movf	plusw1,w,c
 18107  013310  2235               	addwfc	(btemp+11)^0,f,c
 18108  013312  0E3B               	movlw	59
 18109  013314  2634               	addwf	(btemp+10)^0,f,c
 18110  013316  0E00               	movlw	0
 18111  013318  2235               	addwfc	(btemp+11)^0,f,c
 18112                           
 18113                           ;stkvar	_yday @ sp[(-57)+53]
 18114  01331A  0EFC               	movlw	-4
 18115  01331C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 18116  013322  0EFD               	movlw	-3
 18117  013324  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 18118                           
 18119                           ;stkvar	_leap @ sp[(-57)+51]
 18120  01332A  0EFA               	movlw	-6
 18121  01332C  50E3               	movf	plusw1,w,c
 18122  01332E  0F6D               	addlw	109
 18123  013330  6E34               	movwf	(btemp+10)^0,c
 18124  013332  0EFB               	movlw	-5
 18125  013334  006F FF8C  F035    	movff	plusw1,btemp+11
 18126  01333A  0E01               	movlw	1
 18127  01333C  2235               	addwfc	(btemp+11)^0,f,c
 18128                           
 18129                           ;stkvar	_yday @ sp[(-57)+53]
 18130  01333E  0EFC               	movlw	-4
 18131  013340  006F FF8C  F02A    	movff	plusw1,btemp
 18132  013346  5034               	movf	(btemp+10)^0,w,c
 18133  013348  5C2A               	subwf	btemp^0,w,c
 18134  01334A  0EFD               	movlw	-3
 18135  01334C  50E3               	movf	plusw1,w,c
 18136  01334E  0A80               	xorlw	128
 18137  013350  6E2A               	movwf	btemp^0,c
 18138  013352  5035               	movf	(btemp+11)^0,w,c
 18139  013354  0A80               	xorlw	128
 18140  013356  582A               	subwfb	btemp^0,w,c
 18141  013358  A0D8               	btfss	status,0,c
 18142  01335A  D01E               	goto	l16816
 18143                           
 18144                           ;stkvar	_leap @ sp[(-57)+51]
 18145  01335C  0EFA               	movlw	-6
 18146  01335E  50E3               	movf	plusw1,w,c
 18147  013360  0F6D               	addlw	109
 18148  013362  6E34               	movwf	(btemp+10)^0,c
 18149  013364  0EFB               	movlw	-5
 18150  013366  006F FF8C  F035    	movff	plusw1,btemp+11
 18151  01336C  0E01               	movlw	1
 18152  01336E  2235               	addwfc	(btemp+11)^0,f,c
 18153                           
 18154                           ;stkvar	_yday @ sp[(-57)+53]
 18155  013370  0EFC               	movlw	-4
 18156  013372  006F FF8C  F02A    	movff	plusw1,btemp
 18157  013378  5034               	movf	(btemp+10)^0,w,c
 18158  01337A  5E2A               	subwf	btemp^0,f,c
 18159  01337C  0EFC               	movlw	-4
 18160  01337E  0060  F0AB  FFE3   	movff	btemp,plusw1
 18161  013384  0EFD               	movlw	-3
 18162  013386  006F FF8C  F02A    	movff	plusw1,btemp
 18163  01338C  5035               	movf	(btemp+11)^0,w,c
 18164  01338E  5A2A               	subwfb	btemp^0,f,c
 18165  013390  0EFD               	movlw	-3
 18166  013392  0060  F0AB  FFE3   	movff	btemp,plusw1
 18167  013398                     l16816:
 18168                           
 18169                           ;stkvar	_remyears @ sp[(-57)+37]
 18170                           ;stkvar	_q_cycles @ sp[(-57)+29]
 18171  013398  0EE4               	movlw	-28
 18172  01339A  006F FF8C  F032    	movff	plusw1,btemp+8
 18173  0133A0  0EE5               	movlw	-27
 18174  0133A2  006F FF8C  F033    	movff	plusw1,btemp+9
 18175  0133A8  0EE6               	movlw	-26
 18176  0133AA  006F FF8C  F034    	movff	plusw1,btemp+10
 18177  0133B0  0EE7               	movlw	-25
 18178  0133B2  006F FF8C  F035    	movff	plusw1,btemp+11
 18179  0133B8  0E02               	movlw	2
 18180  0133BA                     u16445:
 18181  0133BA  90D8               	bcf	status,0,c
 18182  0133BC  3632               	rlcf	(btemp+8)^0,f,c
 18183  0133BE  3633               	rlcf	(btemp+9)^0,f,c
 18184  0133C0  3634               	rlcf	(btemp+10)^0,f,c
 18185  0133C2  3635               	rlcf	(btemp+11)^0,f,c
 18186  0133C4  2EE8               	decfsz	wreg,f,c
 18187  0133C6  D7F9               	goto	u16445
 18188  0133C8  0E64               	movlw	100
 18189  0133CA  6EE6               	movwf	postinc1,c
 18190  0133CC  0E00               	movlw	0
 18191  0133CE  6EE6               	movwf	postinc1,c
 18192  0133D0  0E00               	movlw	0
 18193  0133D2  6EE6               	movwf	postinc1,c
 18194  0133D4  0E00               	movlw	0
 18195  0133D6  6EE6               	movwf	postinc1,c
 18196                           
 18197                           ;stkvar	_c_cycles @ sp[(-61)+33]
 18198  0133D8  0EE4               	movlw	-28
 18199  0133DA  006F FF8F FFE6     	movff	plusw1,postinc1
 18200  0133E0  006F FF8F FFE6     	movff	plusw1,postinc1
 18201  0133E6  006F FF8F FFE6     	movff	plusw1,postinc1
 18202  0133EC  006F FF8F FFE6     	movff	plusw1,postinc1
 18203  0133F2  ECBF  F001         	call	___lmul	;wreg free
 18204  0133F6  5032               	movf	(btemp+8)^0,w,c
 18205  0133F8  242A               	addwf	btemp^0,w,c
 18206  0133FA  6E2E               	movwf	(btemp+4)^0,c
 18207  0133FC  5033               	movf	(btemp+9)^0,w,c
 18208  0133FE  202B               	addwfc	(btemp+1)^0,w,c
 18209  013400  6E2F               	movwf	(btemp+5)^0,c
 18210  013402  5034               	movf	(btemp+10)^0,w,c
 18211  013404  202C               	addwfc	(btemp+2)^0,w,c
 18212  013406  6E30               	movwf	(btemp+6)^0,c
 18213  013408  5035               	movf	(btemp+11)^0,w,c
 18214  01340A  202D               	addwfc	(btemp+3)^0,w,c
 18215  01340C  6E31               	movwf	(btemp+7)^0,c
 18216  01340E  0EEC               	movlw	-20
 18217  013410  50E3               	movf	plusw1,w,c
 18218  013412  262E               	addwf	(btemp+4)^0,f,c
 18219  013414  0EED               	movlw	-19
 18220  013416  50E3               	movf	plusw1,w,c
 18221  013418  222F               	addwfc	(btemp+5)^0,f,c
 18222  01341A  0EEE               	movlw	-18
 18223  01341C  50E3               	movf	plusw1,w,c
 18224  01341E  2230               	addwfc	(btemp+6)^0,f,c
 18225  013420  0EEF               	movlw	-17
 18226  013422  50E3               	movf	plusw1,w,c
 18227  013424  2231               	addwfc	(btemp+7)^0,f,c
 18228  013426  0060  F0B8  F03A   	movff	btemp+4,btemp+16
 18229  01342C  0060  F0BC  F03B   	movff	btemp+5,btemp+17
 18230  013432  0060  F0C0  F03C   	movff	btemp+6,btemp+18
 18231  013438  0060  F0C4  F03D   	movff	btemp+7,btemp+19
 18232  01343E  6A3E               	clrf	(btemp+20)^0,c
 18233  013440  BE3D               	btfsc	(btemp+19)^0,7,c
 18234  013442  683E               	setf	(btemp+20)^0,c
 18235  013444  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 18236  01344A  0060  F0F8  F040   	movff	btemp+20,btemp+22
 18237  013450  0060  F0F8  F041   	movff	btemp+20,btemp+23
 18238  013456  0E90               	movlw	144
 18239  013458  6EE6               	movwf	postinc1,c
 18240  01345A  0E01               	movlw	1
 18241  01345C  6EE6               	movwf	postinc1,c
 18242  01345E  0E00               	movlw	0
 18243  013460  6EE6               	movwf	postinc1,c
 18244  013462  0E00               	movlw	0
 18245  013464  6EE6               	movwf	postinc1,c
 18246  013466  0E00               	movlw	0
 18247  013468  6EE6               	movwf	postinc1,c
 18248  01346A  0E00               	movlw	0
 18249  01346C  6EE6               	movwf	postinc1,c
 18250  01346E  0E00               	movlw	0
 18251  013470  6EE6               	movwf	postinc1,c
 18252  013472  0E00               	movlw	0
 18253  013474  6EE6               	movwf	postinc1,c
 18254                           
 18255                           ;stkvar	_qc_cycles @ sp[(-65)+45]
 18256  013476  0EEC               	movlw	-20
 18257  013478  006F FF8C  F042    	movff	plusw1,btemp+24
 18258  01347E  0EED               	movlw	-19
 18259  013480  006F FF8C  F043    	movff	plusw1,btemp+25
 18260  013486  0EEE               	movlw	-18
 18261  013488  006F FF8C  F044    	movff	plusw1,btemp+26
 18262  01348E  0EEF               	movlw	-17
 18263  013490  006F FF8C  F045    	movff	plusw1,btemp+27
 18264  013496  6A46               	clrf	(btemp+28)^0,c
 18265  013498  BE45               	btfsc	(btemp+27)^0,7,c
 18266  01349A  6846               	setf	(btemp+28)^0,c
 18267  01349C  0060  F118  F047   	movff	btemp+28,btemp+29
 18268  0134A2  0060  F118  F048   	movff	btemp+28,btemp+30
 18269  0134A8  0060  F118  F049   	movff	btemp+28,btemp+31
 18270  0134AE  0060  F10B  FFE6   	movff	btemp+24,postinc1
 18271  0134B4  0060  F10F  FFE6   	movff	btemp+25,postinc1
 18272  0134BA  0060  F113  FFE6   	movff	btemp+26,postinc1
 18273  0134C0  0060  F117  FFE6   	movff	btemp+27,postinc1
 18274  0134C6  0060  F11B  FFE6   	movff	btemp+28,postinc1
 18275  0134CC  0060  F11F  FFE6   	movff	btemp+29,postinc1
 18276  0134D2  0060  F123  FFE6   	movff	btemp+30,postinc1
 18277  0134D8  0060  F127  FFE6   	movff	btemp+31,postinc1
 18278  0134DE  EC07  F0F7         	call	___omul	;wreg free
 18279  0134E2  52E5               	movf	postdec1,f,c
 18280  0134E4  006F FF9C  F049    	movff	indf1,btemp+31
 18281  0134EA  52E5               	movf	postdec1,f,c
 18282  0134EC  006F FF9C  F048    	movff	indf1,btemp+30
 18283  0134F2  52E5               	movf	postdec1,f,c
 18284  0134F4  006F FF9C  F047    	movff	indf1,btemp+29
 18285  0134FA  52E5               	movf	postdec1,f,c
 18286  0134FC  006F FF9C  F046    	movff	indf1,btemp+28
 18287  013502  52E5               	movf	postdec1,f,c
 18288  013504  006F FF9C  F045    	movff	indf1,btemp+27
 18289  01350A  52E5               	movf	postdec1,f,c
 18290  01350C  006F FF9C  F044    	movff	indf1,btemp+26
 18291  013512  52E5               	movf	postdec1,f,c
 18292  013514  006F FF9C  F043    	movff	indf1,btemp+25
 18293  01351A  52E5               	movf	postdec1,f,c
 18294  01351C  006F FF9C  F042    	movff	indf1,btemp+24
 18295  013522  0EF8               	movlw	248
 18296  013524  26E1               	addwf	fsr1l,f,c
 18297  013526  0EFF               	movlw	255
 18298  013528  22E2               	addwfc	fsr1h,f,c
 18299  01352A  503A               	movf	(btemp+16)^0,w,c
 18300  01352C  2442               	addwf	(btemp+24)^0,w,c
 18301  01352E  6E32               	movwf	(btemp+8)^0,c
 18302  013530  503B               	movf	(btemp+17)^0,w,c
 18303  013532  2043               	addwfc	(btemp+25)^0,w,c
 18304  013534  6E33               	movwf	(btemp+9)^0,c
 18305  013536  503C               	movf	(btemp+18)^0,w,c
 18306  013538  2044               	addwfc	(btemp+26)^0,w,c
 18307  01353A  6E34               	movwf	(btemp+10)^0,c
 18308  01353C  503D               	movf	(btemp+19)^0,w,c
 18309  01353E  2045               	addwfc	(btemp+27)^0,w,c
 18310  013540  6E35               	movwf	(btemp+11)^0,c
 18311  013542  503E               	movf	(btemp+20)^0,w,c
 18312  013544  2046               	addwfc	(btemp+28)^0,w,c
 18313  013546  6E36               	movwf	(btemp+12)^0,c
 18314  013548  503F               	movf	(btemp+21)^0,w,c
 18315  01354A  2047               	addwfc	(btemp+29)^0,w,c
 18316  01354C  6E37               	movwf	(btemp+13)^0,c
 18317  01354E  5040               	movf	(btemp+22)^0,w,c
 18318  013550  2048               	addwfc	(btemp+30)^0,w,c
 18319  013552  6E38               	movwf	(btemp+14)^0,c
 18320  013554  5041               	movf	(btemp+23)^0,w,c
 18321  013556  2049               	addwfc	(btemp+31)^0,w,c
 18322  013558  6E39               	movwf	(btemp+15)^0,c
 18323                           
 18324                           ;stkvar	_years @ sp[(-57)+1]
 18325  01355A  0EC8               	movlw	-56
 18326  01355C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 18327  013562  0EC9               	movlw	-55
 18328  013564  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 18329  01356A  0ECA               	movlw	-54
 18330  01356C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 18331  013572  0ECB               	movlw	-53
 18332  013574  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 18333  01357A  0ECC               	movlw	-52
 18334  01357C  0060  F0DB  FFE3   	movff	btemp+12,plusw1
 18335  013582  0ECD               	movlw	-51
 18336  013584  0060  F0DF  FFE3   	movff	btemp+13,plusw1
 18337  01358A  0ECE               	movlw	-50
 18338  01358C  0060  F0E3  FFE3   	movff	btemp+14,plusw1
 18339  013592  0ECF               	movlw	-49
 18340  013594  0060  F0E7  FFE3   	movff	btemp+15,plusw1
 18341                           
 18342                           ;stkvar	_months @ sp[(-57)+49]
 18343  01359A  0EF8               	movlw	-8
 18344  01359C  6AE3               	clrf	plusw1,c
 18345  01359E  0EF9               	movlw	-7
 18346  0135A0  6AE3               	clrf	plusw1,c
 18347  0135A2  D030               	goto	l16824
 18348  0135A4                     l16820:
 18349                           
 18350                           ;stkvar	_remdays @ sp[(-57)+25]
 18351  0135A4  50E1               	movf	fsr1l,w,c
 18352  0135A6  0FE0               	addlw	-32
 18353  0135A8  6ED9               	movwf	fsr2l,c
 18354  0135AA  50E2               	movf	fsr1h,w,c
 18355  0135AC  6EDA               	movwf	fsr2h,c
 18356  0135AE  0EFF               	movlw	255
 18357  0135B0  22DA               	addwfc	fsr2h,f,c
 18358                           
 18359                           ;stkvar	_months @ sp[(-57)+49]
 18360  0135B2  0EF8               	movlw	-8
 18361  0135B4  006F FF8C  F034    	movff	plusw1,btemp+10
 18362  0135BA  0EF9               	movlw	-7
 18363  0135BC  006F FF8C  F035    	movff	plusw1,btemp+11
 18364  0135C2  0EAB               	movlw	low ___secs_to_tm@days_in_month
 18365  0135C4  2434               	addwf	(btemp+10)^0,w,c
 18366  0135C6  6EF6               	movwf	tblptrl,c
 18367  0135C8  0EF8               	movlw	high ___secs_to_tm@days_in_month
 18368  0135CA  2035               	addwfc	(btemp+11)^0,w,c
 18369  0135CC  6EF7               	movwf	tblptrh,c
 18370  0135CE                     	if	1	;There are 3 active tblptr bytes
 18371  0135CE  6AF8               	clrf	tblptru,c
 18372  0135D0  0E00               	movlw	low (__mediumconst shr (0+16))
 18373  0135D2  22F8               	addwfc	tblptru,f,c
 18374  0135D4                     	endif
 18375  0135D4  0008               	tblrd		*
 18376  0135D6  50F5               	movf	tablat,w,c
 18377  0135D8  5EDE               	subwf	postinc2,f,c
 18378  0135DA  0E00               	movlw	0
 18379  0135DC  5ADE               	subwfb	postinc2,f,c
 18380  0135DE  5ADE               	subwfb	postinc2,f,c
 18381  0135E0  5ADE               	subwfb	postinc2,f,c
 18382                           
 18383                           ;stkvar	_months @ sp[(-57)+49]
 18384  0135E2  0EF8               	movlw	-8
 18385  0135E4  50E3               	movf	plusw1,w,c
 18386  0135E6  0F01               	addlw	1
 18387  0135E8  6E2A               	movwf	btemp^0,c
 18388  0135EA  0EF8               	movlw	-8
 18389  0135EC  0060  F0AB  FFE3   	movff	btemp,plusw1
 18390  0135F2  6A2A               	clrf	btemp^0,c
 18391  0135F4  0EF9               	movlw	-7
 18392  0135F6  50E3               	movf	plusw1,w,c
 18393  0135F8  202A               	addwfc	btemp^0,w,c
 18394  0135FA  6E2A               	movwf	btemp^0,c
 18395  0135FC  0EF9               	movlw	-7
 18396  0135FE  0060  F0AB  FFE3   	movff	btemp,plusw1
 18397  013604                     l16824:
 18398                           
 18399                           ;stkvar	_months @ sp[(-57)+49]
 18400  013604  0EF8               	movlw	-8
 18401  013606  006F FF8C  F034    	movff	plusw1,btemp+10
 18402  01360C  0EF9               	movlw	-7
 18403  01360E  006F FF8C  F035    	movff	plusw1,btemp+11
 18404  013614  0EAB               	movlw	low ___secs_to_tm@days_in_month
 18405  013616  2434               	addwf	(btemp+10)^0,w,c
 18406  013618  6EF6               	movwf	tblptrl,c
 18407  01361A  0EF8               	movlw	high ___secs_to_tm@days_in_month
 18408  01361C  2035               	addwfc	(btemp+11)^0,w,c
 18409  01361E  6EF7               	movwf	tblptrh,c
 18410  013620                     	if	1	;There are 3 active tblptr bytes
 18411  013620  6AF8               	clrf	tblptru,c
 18412  013622  0E00               	movlw	low (__mediumconst shr (0+16))
 18413  013624  22F8               	addwfc	tblptru,f,c
 18414  013626                     	endif
 18415  013626  0008               	tblrd		*
 18416  013628  006F FFD4  F035    	movff	tablat,btemp+11
 18417  01362E  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 18418  013634  6A2F               	clrf	(btemp+5)^0,c
 18419  013636  6A30               	clrf	(btemp+6)^0,c
 18420  013638  6A31               	clrf	(btemp+7)^0,c
 18421                           
 18422                           ;stkvar	_remdays @ sp[(-57)+25]
 18423  01363A  0EE0               	movlw	-32
 18424  01363C  006F FF8C  F02A    	movff	plusw1,btemp
 18425  013642  502E               	movf	(btemp+4)^0,w,c
 18426  013644  5C2A               	subwf	btemp^0,w,c
 18427  013646  0EE1               	movlw	-31
 18428  013648  006F FF8C  F02A    	movff	plusw1,btemp
 18429  01364E  502F               	movf	(btemp+5)^0,w,c
 18430  013650  582A               	subwfb	btemp^0,w,c
 18431  013652  0EE2               	movlw	-30
 18432  013654  006F FF8C  F02A    	movff	plusw1,btemp
 18433  01365A  5030               	movf	(btemp+6)^0,w,c
 18434  01365C  582A               	subwfb	btemp^0,w,c
 18435  01365E  0EE3               	movlw	-29
 18436  013660  50E3               	movf	plusw1,w,c
 18437  013662  0A80               	xorlw	128
 18438  013664  6E2A               	movwf	btemp^0,c
 18439  013666  5031               	movf	(btemp+7)^0,w,c
 18440  013668  0A80               	xorlw	128
 18441  01366A  582A               	subwfb	btemp^0,w,c
 18442  01366C  B0D8               	btfsc	status,0,c
 18443  01366E  D79A               	goto	l16820
 18444                           
 18445                           ;stkvar	_months @ sp[(-57)+49]
 18446  013670  0EF9               	movlw	-7
 18447  013672  BEE3               	btfsc	plusw1,7,c
 18448  013674  D026               	goto	l16832
 18449  013676  0EF9               	movlw	-7
 18450  013678  50E3               	movf	plusw1,w,c
 18451  01367A  E108               	bnz	u16460
 18452  01367C  0EF8               	movlw	-8
 18453  01367E  006F FF8C  F02A    	movff	plusw1,btemp
 18454  013684  0E0A               	movlw	10
 18455  013686  5E2A               	subwf	btemp^0,f,c
 18456  013688  A0D8               	btfss	status,0,c
 18457  01368A  D01B               	goto	l16832
 18458  01368C                     u16460:
 18459                           
 18460                           ;stkvar	_months @ sp[(-57)+49]
 18461  01368C  50E1               	movf	fsr1l,w,c
 18462  01368E  0FF8               	addlw	-8
 18463  013690  6ED9               	movwf	fsr2l,c
 18464  013692  50E2               	movf	fsr1h,w,c
 18465  013694  6EDA               	movwf	fsr2h,c
 18466  013696  0EFF               	movlw	255
 18467  013698  22DA               	addwfc	fsr2h,f,c
 18468  01369A  0EF4               	movlw	244
 18469  01369C  26DE               	addwf	postinc2,f,c
 18470  01369E  0EFF               	movlw	255
 18471  0136A0  22DD               	addwfc	postdec2,f,c
 18472                           
 18473                           ;stkvar	_years @ sp[(-57)+1]
 18474  0136A2  50E1               	movf	fsr1l,w,c
 18475  0136A4  0FC8               	addlw	-56
 18476  0136A6  6ED9               	movwf	fsr2l,c
 18477  0136A8  50E2               	movf	fsr1h,w,c
 18478  0136AA  6EDA               	movwf	fsr2h,c
 18479  0136AC  0EFF               	movlw	255
 18480  0136AE  22DA               	addwfc	fsr2h,f,c
 18481  0136B0  2ADE               	incf	postinc2,f,c
 18482  0136B2  0E00               	movlw	0
 18483  0136B4  22DE               	addwfc	postinc2,f,c
 18484  0136B6  22DE               	addwfc	postinc2,f,c
 18485  0136B8  22DE               	addwfc	postinc2,f,c
 18486  0136BA  22DE               	addwfc	postinc2,f,c
 18487  0136BC  22DE               	addwfc	postinc2,f,c
 18488  0136BE  22DE               	addwfc	postinc2,f,c
 18489  0136C0  22DE               	addwfc	postinc2,f,c
 18490  0136C2                     l16832:
 18491                           
 18492                           ;stkvar	_years @ sp[(-57)+1]
 18493  0136C2  0EC8               	movlw	-56
 18494  0136C4  50E3               	movf	plusw1,w,c
 18495  0136C6  0F64               	addlw	100
 18496  0136C8  6E3A               	movwf	(btemp+16)^0,c
 18497  0136CA  0EC9               	movlw	-55
 18498  0136CC  006F FF8C  F03B    	movff	plusw1,btemp+17
 18499  0136D2  0E00               	movlw	0
 18500  0136D4  223B               	addwfc	(btemp+17)^0,f,c
 18501  0136D6  0ECA               	movlw	-54
 18502  0136D8  006F FF8C  F03C    	movff	plusw1,btemp+18
 18503  0136DE  0E00               	movlw	0
 18504  0136E0  223C               	addwfc	(btemp+18)^0,f,c
 18505  0136E2  0ECB               	movlw	-53
 18506  0136E4  006F FF8C  F03D    	movff	plusw1,btemp+19
 18507  0136EA  0E00               	movlw	0
 18508  0136EC  223D               	addwfc	(btemp+19)^0,f,c
 18509  0136EE  0ECC               	movlw	-52
 18510  0136F0  006F FF8C  F03E    	movff	plusw1,btemp+20
 18511  0136F6  0E00               	movlw	0
 18512  0136F8  223E               	addwfc	(btemp+20)^0,f,c
 18513  0136FA  0ECD               	movlw	-51
 18514  0136FC  006F FF8C  F03F    	movff	plusw1,btemp+21
 18515  013702  0E00               	movlw	0
 18516  013704  223F               	addwfc	(btemp+21)^0,f,c
 18517  013706  0ECE               	movlw	-50
 18518  013708  006F FF8C  F040    	movff	plusw1,btemp+22
 18519  01370E  0E00               	movlw	0
 18520  013710  2240               	addwfc	(btemp+22)^0,f,c
 18521  013712  0ECF               	movlw	-49
 18522  013714  006F FF8C  F041    	movff	plusw1,btemp+23
 18523  01371A  0E00               	movlw	0
 18524  01371C  2241               	addwfc	(btemp+23)^0,f,c
 18525  01371E  BE41               	btfsc	(btemp+23)^0,7,c
 18526  013720  D00C               	goto	u16470
 18527  013722  5041               	movf	(btemp+23)^0,w,c
 18528  013724  1040               	iorwf	(btemp+22)^0,w,c
 18529  013726  103F               	iorwf	(btemp+21)^0,w,c
 18530  013728  103E               	iorwf	(btemp+20)^0,w,c
 18531  01372A  103D               	iorwf	(btemp+19)^0,w,c
 18532  01372C  103C               	iorwf	(btemp+18)^0,w,c
 18533  01372E  E103               	bnz	u16471
 18534  013730  0E80               	movlw	128
 18535  013732  5C3B               	subwf	(btemp+17)^0,w,c
 18536  013734  B0D8               	btfsc	status,0,c
 18537  013736                     u16471:
 18538  013736  EF07  F095         	goto	u16330
 18539  01373A                     u16470:
 18540                           
 18541                           ;stkvar	_years @ sp[(-57)+1]
 18542  01373A  0EC8               	movlw	-56
 18543  01373C  50E3               	movf	plusw1,w,c
 18544  01373E  0F64               	addlw	100
 18545  013740  6E3A               	movwf	(btemp+16)^0,c
 18546  013742  0EC9               	movlw	-55
 18547  013744  006F FF8C  F03B    	movff	plusw1,btemp+17
 18548  01374A  0E00               	movlw	0
 18549  01374C  223B               	addwfc	(btemp+17)^0,f,c
 18550  01374E  0ECA               	movlw	-54
 18551  013750  006F FF8C  F03C    	movff	plusw1,btemp+18
 18552  013756  0E00               	movlw	0
 18553  013758  223C               	addwfc	(btemp+18)^0,f,c
 18554  01375A  0ECB               	movlw	-53
 18555  01375C  006F FF8C  F03D    	movff	plusw1,btemp+19
 18556  013762  0E00               	movlw	0
 18557  013764  223D               	addwfc	(btemp+19)^0,f,c
 18558  013766  0ECC               	movlw	-52
 18559  013768  006F FF8C  F03E    	movff	plusw1,btemp+20
 18560  01376E  0E00               	movlw	0
 18561  013770  223E               	addwfc	(btemp+20)^0,f,c
 18562  013772  0ECD               	movlw	-51
 18563  013774  006F FF8C  F03F    	movff	plusw1,btemp+21
 18564  01377A  0E00               	movlw	0
 18565  01377C  223F               	addwfc	(btemp+21)^0,f,c
 18566  01377E  0ECE               	movlw	-50
 18567  013780  006F FF8C  F040    	movff	plusw1,btemp+22
 18568  013786  0E00               	movlw	0
 18569  013788  2240               	addwfc	(btemp+22)^0,f,c
 18570  01378A  0ECF               	movlw	-49
 18571  01378C  006F FF8C  F041    	movff	plusw1,btemp+23
 18572  013792  0E00               	movlw	0
 18573  013794  2241               	addwfc	(btemp+23)^0,f,c
 18574  013796  AE41               	btfss	(btemp+23)^0,7,c
 18575  013798  D011               	goto	l16840
 18576  01379A  0E80               	movlw	128
 18577  01379C  5C3B               	subwf	(btemp+17)^0,w,c
 18578  01379E  0EFF               	movlw	255
 18579  0137A0  583C               	subwfb	(btemp+18)^0,w,c
 18580  0137A2  0EFF               	movlw	255
 18581  0137A4  583D               	subwfb	(btemp+19)^0,w,c
 18582  0137A6  0EFF               	movlw	255
 18583  0137A8  583E               	subwfb	(btemp+20)^0,w,c
 18584  0137AA  0EFF               	movlw	255
 18585  0137AC  583F               	subwfb	(btemp+21)^0,w,c
 18586  0137AE  0EFF               	movlw	255
 18587  0137B0  5840               	subwfb	(btemp+22)^0,w,c
 18588  0137B2  0EFF               	movlw	255
 18589  0137B4  5841               	subwfb	(btemp+23)^0,w,c
 18590  0137B6  A0D8               	btfss	status,0,c
 18591  0137B8  EF07  F095         	goto	u16330
 18592  0137BC                     l16840:
 18593                           
 18594                           ;stkvar	_years @ sp[(-57)+1]
 18595  0137BC  0EC8               	movlw	-56
 18596  0137BE  50E3               	movf	plusw1,w,c
 18597  0137C0  0F64               	addlw	100
 18598  0137C2  6E34               	movwf	(btemp+10)^0,c
 18599  0137C4  0EC9               	movlw	-55
 18600  0137C6  006F FF8C  F035    	movff	plusw1,btemp+11
 18601  0137CC  0E00               	movlw	0
 18602  0137CE  2235               	addwfc	(btemp+11)^0,f,c
 18603                           
 18604                           ;stkvar	_tm @ sp[(-57)+-10]
 18605  0137D0  0EBD               	movlw	-67
 18606  0137D2  006F FF8C  F032    	movff	plusw1,btemp+8
 18607  0137D8  0EBE               	movlw	-66
 18608  0137DA  006F FF8C  F033    	movff	plusw1,btemp+9
 18609  0137E0  0E0A               	movlw	10
 18610  0137E2  2432               	addwf	(btemp+8)^0,w,c
 18611  0137E4  6ED9               	movwf	fsr2l,c
 18612  0137E6  0E00               	movlw	0
 18613  0137E8  2033               	addwfc	(btemp+9)^0,w,c
 18614  0137EA  6EDA               	movwf	fsr2h,c
 18615  0137EC  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18616  0137F2  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18617                           
 18618                           ;stkvar	_months @ sp[(-57)+49]
 18619  0137F8  0EF8               	movlw	-8
 18620  0137FA  50E3               	movf	plusw1,w,c
 18621  0137FC  0F02               	addlw	2
 18622  0137FE  6E34               	movwf	(btemp+10)^0,c
 18623  013800  0EF9               	movlw	-7
 18624  013802  006F FF8C  F035    	movff	plusw1,btemp+11
 18625  013808  0E00               	movlw	0
 18626  01380A  2235               	addwfc	(btemp+11)^0,f,c
 18627                           
 18628                           ;stkvar	_tm @ sp[(-57)+-10]
 18629  01380C  0EBD               	movlw	-67
 18630  01380E  006F FF8C  F032    	movff	plusw1,btemp+8
 18631  013814  0EBE               	movlw	-66
 18632  013816  006F FF8C  F033    	movff	plusw1,btemp+9
 18633  01381C  0E08               	movlw	8
 18634  01381E  2432               	addwf	(btemp+8)^0,w,c
 18635  013820  6ED9               	movwf	fsr2l,c
 18636  013822  0E00               	movlw	0
 18637  013824  2033               	addwfc	(btemp+9)^0,w,c
 18638  013826  6EDA               	movwf	fsr2h,c
 18639  013828  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18640  01382E  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18641                           
 18642                           ;stkvar	_remdays @ sp[(-57)+25]
 18643  013834  0EE0               	movlw	-32
 18644  013836  50E3               	movf	plusw1,w,c
 18645  013838  0F01               	addlw	1
 18646  01383A  6E34               	movwf	(btemp+10)^0,c
 18647  01383C  0EE1               	movlw	-31
 18648  01383E  006F FF8C  F035    	movff	plusw1,btemp+11
 18649  013844  0E00               	movlw	0
 18650  013846  2235               	addwfc	(btemp+11)^0,f,c
 18651                           
 18652                           ;stkvar	_tm @ sp[(-57)+-10]
 18653  013848  0EBD               	movlw	-67
 18654  01384A  006F FF8C  F032    	movff	plusw1,btemp+8
 18655  013850  0EBE               	movlw	-66
 18656  013852  006F FF8C  F033    	movff	plusw1,btemp+9
 18657  013858  0E06               	movlw	6
 18658  01385A  2432               	addwf	(btemp+8)^0,w,c
 18659  01385C  6ED9               	movwf	fsr2l,c
 18660  01385E  0E00               	movlw	0
 18661  013860  2033               	addwfc	(btemp+9)^0,w,c
 18662  013862  6EDA               	movwf	fsr2h,c
 18663  013864  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18664  01386A  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18665                           
 18666                           ;stkvar	_wday @ sp[(-57)+55]
 18667  013870  50E1               	movf	fsr1l,w,c
 18668  013872  0FFE               	addlw	-2
 18669  013874  6ED9               	movwf	fsr2l,c
 18670  013876  50E2               	movf	fsr1h,w,c
 18671  013878  6EDA               	movwf	fsr2h,c
 18672  01387A  0EFF               	movlw	255
 18673  01387C  22DA               	addwfc	fsr2h,f,c
 18674                           
 18675                           ;stkvar	_tm @ sp[(-57)+-10]
 18676  01387E  0EBD               	movlw	-67
 18677  013880  006F FF8C  F034    	movff	plusw1,btemp+10
 18678  013886  0EBE               	movlw	-66
 18679  013888  006F FF8C  F035    	movff	plusw1,btemp+11
 18680  01388E  0E0C               	movlw	12
 18681  013890  2434               	addwf	(btemp+10)^0,w,c
 18682  013892  6EE9               	movwf	fsr0l,c
 18683  013894  0E00               	movlw	0
 18684  013896  2035               	addwfc	(btemp+11)^0,w,c
 18685  013898  6EEA               	movwf	fsr0h,c
 18686  01389A  006F FF7B FFEE     	movff	postinc2,postinc0
 18687  0138A0  006F FF77 FFED     	movff	postdec2,postdec0
 18688                           
 18689                           ;stkvar	_yday @ sp[(-57)+53]
 18690  0138A6  50E1               	movf	fsr1l,w,c
 18691  0138A8  0FFC               	addlw	-4
 18692  0138AA  6ED9               	movwf	fsr2l,c
 18693  0138AC  50E2               	movf	fsr1h,w,c
 18694  0138AE  6EDA               	movwf	fsr2h,c
 18695  0138B0  0EFF               	movlw	255
 18696  0138B2  22DA               	addwfc	fsr2h,f,c
 18697                           
 18698                           ;stkvar	_tm @ sp[(-57)+-10]
 18699  0138B4  0EBD               	movlw	-67
 18700  0138B6  006F FF8C  F034    	movff	plusw1,btemp+10
 18701  0138BC  0EBE               	movlw	-66
 18702  0138BE  006F FF8C  F035    	movff	plusw1,btemp+11
 18703  0138C4  0E0E               	movlw	14
 18704  0138C6  2434               	addwf	(btemp+10)^0,w,c
 18705  0138C8  6EE9               	movwf	fsr0l,c
 18706  0138CA  0E00               	movlw	0
 18707  0138CC  2035               	addwfc	(btemp+11)^0,w,c
 18708  0138CE  6EEA               	movwf	fsr0h,c
 18709  0138D0  006F FF7B FFEE     	movff	postinc2,postinc0
 18710  0138D6  006F FF77 FFED     	movff	postdec2,postdec0
 18711  0138DC  0E10               	movlw	16
 18712  0138DE  6EE6               	movwf	postinc1,c
 18713  0138E0  0E0E               	movlw	14
 18714  0138E2  6EE6               	movwf	postinc1,c
 18715  0138E4  0E00               	movlw	0
 18716  0138E6  6EE6               	movwf	postinc1,c
 18717  0138E8  0E00               	movlw	0
 18718  0138EA  6EE6               	movwf	postinc1,c
 18719                           
 18720                           ;stkvar	_remsecs @ sp[(-61)+41]
 18721  0138EC  0EEC               	movlw	-20
 18722  0138EE  006F FF8F FFE6     	movff	plusw1,postinc1
 18723  0138F4  006F FF8F FFE6     	movff	plusw1,postinc1
 18724  0138FA  006F FF8F FFE6     	movff	plusw1,postinc1
 18725  013900  006F FF8F FFE6     	movff	plusw1,postinc1
 18726  013906  ECBC  F0EF         	call	___aldiv	;wreg free
 18727  01390A  0060  F0A8  F034   	movff	btemp,btemp+10
 18728  013910  0060  F0AC  F035   	movff	btemp+1,btemp+11
 18729                           
 18730                           ;stkvar	_tm @ sp[(-57)+-10]
 18731  013916  0EBD               	movlw	-67
 18732  013918  006F FF8C  F032    	movff	plusw1,btemp+8
 18733  01391E  0EBE               	movlw	-66
 18734  013920  006F FF8C  F033    	movff	plusw1,btemp+9
 18735  013926  0E04               	movlw	4
 18736  013928  2432               	addwf	(btemp+8)^0,w,c
 18737  01392A  6ED9               	movwf	fsr2l,c
 18738  01392C  0E00               	movlw	0
 18739  01392E  2033               	addwfc	(btemp+9)^0,w,c
 18740  013930  6EDA               	movwf	fsr2h,c
 18741  013932  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18742  013938  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18743  01393E  0E3C               	movlw	60
 18744  013940  6EE6               	movwf	postinc1,c
 18745  013942  0E00               	movlw	0
 18746  013944  6EE6               	movwf	postinc1,c
 18747  013946  0E00               	movlw	0
 18748  013948  6EE6               	movwf	postinc1,c
 18749  01394A  0E00               	movlw	0
 18750  01394C  6EE6               	movwf	postinc1,c
 18751  01394E  0E3C               	movlw	60
 18752  013950  6EE6               	movwf	postinc1,c
 18753  013952  0E00               	movlw	0
 18754  013954  6EE6               	movwf	postinc1,c
 18755  013956  0E00               	movlw	0
 18756  013958  6EE6               	movwf	postinc1,c
 18757  01395A  0E00               	movlw	0
 18758  01395C  6EE6               	movwf	postinc1,c
 18759                           
 18760                           ;stkvar	_remsecs @ sp[(-65)+41]
 18761  01395E  0EE8               	movlw	-24
 18762  013960  006F FF8F FFE6     	movff	plusw1,postinc1
 18763  013966  006F FF8F FFE6     	movff	plusw1,postinc1
 18764  01396C  006F FF8F FFE6     	movff	plusw1,postinc1
 18765  013972  006F FF8F FFE6     	movff	plusw1,postinc1
 18766  013978  ECBC  F0EF         	call	___aldiv	;wreg free
 18767  01397C  0060  F0AB  FFE6   	movff	btemp,postinc1
 18768  013982  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 18769  013988  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 18770  01398E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 18771  013994  EC42  F0F4         	call	___almod	;wreg free
 18772  013998  0060  F0A8  F034   	movff	btemp,btemp+10
 18773  01399E  0060  F0AC  F035   	movff	btemp+1,btemp+11
 18774                           
 18775                           ;stkvar	_tm @ sp[(-57)+-10]
 18776  0139A4  0EBD               	movlw	-67
 18777  0139A6  006F FF8C  F032    	movff	plusw1,btemp+8
 18778  0139AC  0EBE               	movlw	-66
 18779  0139AE  006F FF8C  F033    	movff	plusw1,btemp+9
 18780  0139B4  0E02               	movlw	2
 18781  0139B6  2432               	addwf	(btemp+8)^0,w,c
 18782  0139B8  6ED9               	movwf	fsr2l,c
 18783  0139BA  0E00               	movlw	0
 18784  0139BC  2033               	addwfc	(btemp+9)^0,w,c
 18785  0139BE  6EDA               	movwf	fsr2h,c
 18786  0139C0  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18787  0139C6  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18788  0139CC  0E3C               	movlw	60
 18789  0139CE  6EE6               	movwf	postinc1,c
 18790  0139D0  0E00               	movlw	0
 18791  0139D2  6EE6               	movwf	postinc1,c
 18792  0139D4  0E00               	movlw	0
 18793  0139D6  6EE6               	movwf	postinc1,c
 18794  0139D8  0E00               	movlw	0
 18795  0139DA  6EE6               	movwf	postinc1,c
 18796                           
 18797                           ;stkvar	_remsecs @ sp[(-61)+41]
 18798  0139DC  0EEC               	movlw	-20
 18799  0139DE  006F FF8F FFE6     	movff	plusw1,postinc1
 18800  0139E4  006F FF8F FFE6     	movff	plusw1,postinc1
 18801  0139EA  006F FF8F FFE6     	movff	plusw1,postinc1
 18802  0139F0  006F FF8F FFE6     	movff	plusw1,postinc1
 18803  0139F6  EC42  F0F4         	call	___almod	;wreg free
 18804  0139FA  0060  F0A8  F034   	movff	btemp,btemp+10
 18805  013A00  0060  F0AC  F035   	movff	btemp+1,btemp+11
 18806                           
 18807                           ;stkvar	_tm @ sp[(-57)+-10]
 18808  013A06  0EBD               	movlw	-67
 18809  013A08  006F FF8F FFD9     	movff	plusw1,fsr2l
 18810  013A0E  0EBE               	movlw	-66
 18811  013A10  006F FF8F FFDA     	movff	plusw1,fsr2h
 18812  013A16  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18813  013A1C  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18814  013A22  0E00               	movlw	0
 18815  013A24  6E2A               	movwf	btemp^0,c
 18816  013A26  6A2B               	clrf	(btemp+1)^0,c
 18817  013A28  6A2C               	clrf	(btemp+2)^0,c
 18818  013A2A  6A2D               	clrf	(btemp+3)^0,c
 18819  013A2C                     l3853:
 18820                           
 18821                           ; ___secs_to_tm: autosize = 57, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10
      +                          , argsize = 10, vargsize = 0
 18822  013A2C  0EBD               	movlw	189
 18823  013A2E  26E1               	addwf	fsr1l,f,c
 18824  013A30  0EFF               	movlw	255
 18825  013A32  22E2               	addwfc	fsr1h,f,c
 18826  013A34  0012               	return		;funcret
 18827  013A36                     __end_of___secs_to_tm:
 18828                           	opt callstack 0
 18829                           
 18830 ;; *************** function ___omul *****************
 18831 ;; Defined at:
 18832 ;;		line 91 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul64.c"
 18833 ;; Parameters:    Size  Location     Type
 18834 ;;  multiplier      8  [STACK] unsigned long long 
 18835 ;;  multiplicand    8  [STACK] unsigned long long 
 18836 ;; Auto vars:     Size  Location     Type
 18837 ;;  product         8  [STACK] unsigned long long 
 18838 ;; Return value:  Size  Location     Type
 18839 ;;                  8  [STACK] unsigned long long 
 18840 ;; Registers used:
 18841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18842 ;; Tracked objects:
 18843 ;;		On entry : 0/0
 18844 ;;		On exit  : 0/0
 18845 ;;		Unchanged: 0/0
 18846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18851 ;;Total ram usage:        0 bytes
 18852 ;; Hardware stack levels used:    1
 18853 ;; Hardware stack levels required when called:   15
 18854 ;; This function calls:
 18855 ;;		Nothing
 18856 ;; This function is called by:
 18857 ;;		___secs_to_tm
 18858 ;;		___year_to_secs
 18859 ;; This function uses a reentrant model
 18860 ;;
 18861                           
 18862                           	psect	text51
 18863  01EE0E                     __ptext51:
 18864                           	opt callstack 0
 18865  01EE0E                     ___omul:
 18866                           	opt callstack 0
 18867                           
 18868                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 18869  01EE0E  0E08               	movlw	8
 18870  01EE10  26E1               	addwf	fsr1l,f,c
 18871  01EE12  0E00               	movlw	0
 18872  01EE14  22E2               	addwfc	fsr1h,f,c
 18873                           
 18874                           ;stkvar	_product @ sp[(-8)+0]
 18875                           
 18876                           ;incstack = 0
 18877  01EE16  0E07               	movlw	7
 18878  01EE18  6E2A               	movwf	btemp^0,c
 18879  01EE1A  0EF8               	movlw	-8
 18880  01EE1C                     u8081:
 18881  01EE1C  6AE3               	clrf	plusw1,c
 18882  01EE1E  2AE8               	incf	wreg,f,c
 18883  01EE20  062A               	decf	btemp^0,f,c
 18884  01EE22  E2FC               	bc	u8081
 18885  01EE24                     l10228:
 18886                           
 18887                           ;stkvar	_multiplier @ sp[(-8)+-8]
 18888  01EE24  0EF0               	movlw	-16
 18889  01EE26  A0E3               	btfss	plusw1,0,c
 18890  01EE28  D050               	goto	l10232
 18891                           
 18892                           ;stkvar	_multiplicand @ sp[(-8)+-16]
 18893                           ;stkvar	_product @ sp[(-8)+0]
 18894  01EE2A  0EF8               	movlw	-8
 18895  01EE2C  50E3               	movf	plusw1,w,c
 18896  01EE2E  6E2A               	movwf	btemp^0,c
 18897  01EE30  0EE8               	movlw	-24
 18898  01EE32  50E3               	movf	plusw1,w,c
 18899  01EE34  262A               	addwf	btemp^0,f,c
 18900  01EE36  0EF8               	movlw	-8
 18901  01EE38  0060  F0AB  FFE3   	movff	btemp,plusw1
 18902  01EE3E  0EF9               	movlw	-7
 18903  01EE40  50E3               	movf	plusw1,w,c
 18904  01EE42  6E2A               	movwf	btemp^0,c
 18905  01EE44  0EE9               	movlw	-23
 18906  01EE46  50E3               	movf	plusw1,w,c
 18907  01EE48  222A               	addwfc	btemp^0,f,c
 18908  01EE4A  0EF9               	movlw	-7
 18909  01EE4C  0060  F0AB  FFE3   	movff	btemp,plusw1
 18910  01EE52  0EFA               	movlw	-6
 18911  01EE54  50E3               	movf	plusw1,w,c
 18912  01EE56  6E2A               	movwf	btemp^0,c
 18913  01EE58  0EEA               	movlw	-22
 18914  01EE5A  50E3               	movf	plusw1,w,c
 18915  01EE5C  222A               	addwfc	btemp^0,f,c
 18916  01EE5E  0EFA               	movlw	-6
 18917  01EE60  0060  F0AB  FFE3   	movff	btemp,plusw1
 18918  01EE66  0EFB               	movlw	-5
 18919  01EE68  50E3               	movf	plusw1,w,c
 18920  01EE6A  6E2A               	movwf	btemp^0,c
 18921  01EE6C  0EEB               	movlw	-21
 18922  01EE6E  50E3               	movf	plusw1,w,c
 18923  01EE70  222A               	addwfc	btemp^0,f,c
 18924  01EE72  0EFB               	movlw	-5
 18925  01EE74  0060  F0AB  FFE3   	movff	btemp,plusw1
 18926  01EE7A  0EFC               	movlw	-4
 18927  01EE7C  50E3               	movf	plusw1,w,c
 18928  01EE7E  6E2A               	movwf	btemp^0,c
 18929  01EE80  0EEC               	movlw	-20
 18930  01EE82  50E3               	movf	plusw1,w,c
 18931  01EE84  222A               	addwfc	btemp^0,f,c
 18932  01EE86  0EFC               	movlw	-4
 18933  01EE88  0060  F0AB  FFE3   	movff	btemp,plusw1
 18934  01EE8E  0EFD               	movlw	-3
 18935  01EE90  50E3               	movf	plusw1,w,c
 18936  01EE92  6E2A               	movwf	btemp^0,c
 18937  01EE94  0EED               	movlw	-19
 18938  01EE96  50E3               	movf	plusw1,w,c
 18939  01EE98  222A               	addwfc	btemp^0,f,c
 18940  01EE9A  0EFD               	movlw	-3
 18941  01EE9C  0060  F0AB  FFE3   	movff	btemp,plusw1
 18942  01EEA2  0EFE               	movlw	-2
 18943  01EEA4  50E3               	movf	plusw1,w,c
 18944  01EEA6  6E2A               	movwf	btemp^0,c
 18945  01EEA8  0EEE               	movlw	-18
 18946  01EEAA  50E3               	movf	plusw1,w,c
 18947  01EEAC  222A               	addwfc	btemp^0,f,c
 18948  01EEAE  0EFE               	movlw	-2
 18949  01EEB0  0060  F0AB  FFE3   	movff	btemp,plusw1
 18950  01EEB6  0EFF               	movlw	-1
 18951  01EEB8  50E3               	movf	plusw1,w,c
 18952  01EEBA  6E2A               	movwf	btemp^0,c
 18953  01EEBC  0EEF               	movlw	-17
 18954  01EEBE  50E3               	movf	plusw1,w,c
 18955  01EEC0  222A               	addwfc	btemp^0,f,c
 18956  01EEC2  0EFF               	movlw	-1
 18957  01EEC4  0060  F0AB  FFE3   	movff	btemp,plusw1
 18958  01EECA                     l10232:
 18959                           
 18960                           ;stkvar	_multiplicand @ sp[(-8)+-16]
 18961  01EECA  90D8               	bcf	status,0,c
 18962  01EECC  0EE8               	movlw	-24
 18963  01EECE  36E3               	rlcf	plusw1,f,c
 18964  01EED0  0EE9               	movlw	-23
 18965  01EED2  36E3               	rlcf	plusw1,f,c
 18966  01EED4  0EEA               	movlw	-22
 18967  01EED6  36E3               	rlcf	plusw1,f,c
 18968  01EED8  0EEB               	movlw	-21
 18969  01EEDA  36E3               	rlcf	plusw1,f,c
 18970  01EEDC  0EEC               	movlw	-20
 18971  01EEDE  36E3               	rlcf	plusw1,f,c
 18972  01EEE0  0EED               	movlw	-19
 18973  01EEE2  36E3               	rlcf	plusw1,f,c
 18974  01EEE4  0EEE               	movlw	-18
 18975  01EEE6  36E3               	rlcf	plusw1,f,c
 18976  01EEE8  0EEF               	movlw	-17
 18977  01EEEA  36E3               	rlcf	plusw1,f,c
 18978                           
 18979                           ;stkvar	_multiplier @ sp[(-8)+-8]
 18980  01EEEC  90D8               	bcf	status,0,c
 18981  01EEEE  0EF7               	movlw	-9
 18982  01EEF0  32E3               	rrcf	plusw1,f,c
 18983  01EEF2  0EF6               	movlw	-10
 18984  01EEF4  32E3               	rrcf	plusw1,f,c
 18985  01EEF6  0EF5               	movlw	-11
 18986  01EEF8  32E3               	rrcf	plusw1,f,c
 18987  01EEFA  0EF4               	movlw	-12
 18988  01EEFC  32E3               	rrcf	plusw1,f,c
 18989  01EEFE  0EF3               	movlw	-13
 18990  01EF00  32E3               	rrcf	plusw1,f,c
 18991  01EF02  0EF2               	movlw	-14
 18992  01EF04  32E3               	rrcf	plusw1,f,c
 18993  01EF06  0EF1               	movlw	-15
 18994  01EF08  32E3               	rrcf	plusw1,f,c
 18995  01EF0A  0EF0               	movlw	-16
 18996  01EF0C  32E3               	rrcf	plusw1,f,c
 18997                           
 18998                           ;stkvar	_multiplier @ sp[(-8)+-8]
 18999  01EF0E  0EF0               	movlw	-16
 19000  01EF10  50E3               	movf	plusw1,w,c
 19001  01EF12  E188               	bnz	l10228
 19002  01EF14  0EF1               	movlw	-15
 19003  01EF16  50E3               	movf	plusw1,w,c
 19004  01EF18  E185               	bnz	l10228
 19005  01EF1A  0EF2               	movlw	-14
 19006  01EF1C  50E3               	movf	plusw1,w,c
 19007  01EF1E  E182               	bnz	l10228
 19008  01EF20  0EF3               	movlw	-13
 19009  01EF22  50E3               	movf	plusw1,w,c
 19010  01EF24  E10C               	bnz	u8101
 19011  01EF26  0EF4               	movlw	-12
 19012  01EF28  50E3               	movf	plusw1,w,c
 19013  01EF2A  E109               	bnz	u8101
 19014  01EF2C  0EF5               	movlw	-11
 19015  01EF2E  50E3               	movf	plusw1,w,c
 19016  01EF30  E106               	bnz	u8101
 19017  01EF32  0EF6               	movlw	-10
 19018  01EF34  50E3               	movf	plusw1,w,c
 19019  01EF36  E103               	bnz	u8101
 19020  01EF38  0EF7               	movlw	-9
 19021  01EF3A  50E3               	movf	plusw1,w,c
 19022  01EF3C  A4D8               	btfss	status,2,c
 19023  01EF3E                     u8101:
 19024  01EF3E  D772               	goto	l10228
 19025                           
 19026                           ;stkvar	_product @ sp[(-8)+0]
 19027  01EF40  0EF8               	movlw	248
 19028  01EF42  24E1               	addwf	fsr1l,w,c
 19029  01EF44  6ED9               	movwf	fsr2l,c
 19030  01EF46  0EFF               	movlw	255
 19031  01EF48  20E2               	addwfc	fsr1h,w,c
 19032  01EF4A  6EDA               	movwf	fsr2h,c
 19033                           
 19034                           ;stkvar	?___omul @ sp[(-8)+-8]
 19035  01EF4C  0E08               	movlw	8
 19036  01EF4E  6E2A               	movwf	btemp^0,c
 19037  01EF50  0EF0               	movlw	-16
 19038  01EF52                     us811999:
 19039  01EF52  006F FF7B FFE3     	movff	postinc2,plusw1
 19040  01EF58  28E8               	incf	wreg,w,c
 19041  01EF5A  2E2A               	decfsz	btemp^0,f,c
 19042  01EF5C  D7FA               	bra	us811999
 19043                           
 19044                           ; ___omul: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsi
      +                          ze = 16, vargsize = 0
 19045  01EF5E  0EF8               	movlw	248
 19046  01EF60  26E1               	addwf	fsr1l,f,c
 19047  01EF62  0EFF               	movlw	255
 19048  01EF64  22E2               	addwfc	fsr1h,f,c
 19049  01EF66  0012               	return		;funcret
 19050  01EF68                     __end_of___omul:
 19051                           	opt callstack 0
 19052                           
 19053 ;; *************** function ___lmul *****************
 19054 ;; Defined at:
 19055 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul32.c"
 19056 ;; Parameters:    Size  Location     Type
 19057 ;;  multiplier      4  [STACK] unsigned long 
 19058 ;;  multiplicand    4  [STACK] unsigned long 
 19059 ;; Auto vars:     Size  Location     Type
 19060 ;;  product         4  [STACK] unsigned long 
 19061 ;; Return value:  Size  Location     Type
 19062 ;;                  4  [STACK] unsigned long 
 19063 ;; Registers used:
 19064 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 19065 ;; Tracked objects:
 19066 ;;		On entry : 0/0
 19067 ;;		On exit  : 0/0
 19068 ;;		Unchanged: 0/0
 19069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19074 ;;Total ram usage:        0 bytes
 19075 ;; Hardware stack levels used:    1
 19076 ;; Hardware stack levels required when called:   15
 19077 ;; This function calls:
 19078 ;;		Nothing
 19079 ;; This function is called by:
 19080 ;;		___secs_to_tm
 19081 ;;		_rule_to_secs
 19082 ;;		___year_to_secs
 19083 ;; This function uses a reentrant model
 19084 ;;
 19085                           
 19086                           	psect	text52
 19087  00037E                     __ptext52:
 19088                           	opt callstack 0
 19089  00037E                     ___lmul:
 19090                           	opt callstack 0
 19091                           
 19092                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19093  00037E  52E6               	movf	postinc1,f,c
 19094  000380  52E6               	movf	postinc1,f,c
 19095  000382  52E6               	movf	postinc1,f,c
 19096  000384  52E6               	movf	postinc1,f,c
 19097                           
 19098                           ;stkvar	_product @ sp[(-4)+0]
 19099                           
 19100                           ;incstack = 0
 19101  000386  0EFC               	movlw	-4
 19102  000388  6AE3               	clrf	plusw1,c
 19103  00038A  0EFD               	movlw	-3
 19104  00038C  6AE3               	clrf	plusw1,c
 19105  00038E  0EFE               	movlw	-2
 19106  000390  6AE3               	clrf	plusw1,c
 19107  000392  0EFF               	movlw	-1
 19108  000394  6AE3               	clrf	plusw1,c
 19109  000396                     l2737:
 19110                           
 19111                           ;stkvar	_multiplier @ sp[(-4)+-4]
 19112  000396  0EF8               	movlw	-8
 19113  000398  A0E3               	btfss	plusw1,0,c
 19114  00039A  D028               	goto	l10218
 19115                           
 19116                           ;stkvar	_multiplicand @ sp[(-4)+-8]
 19117                           ;stkvar	_product @ sp[(-4)+0]
 19118  00039C  0EFC               	movlw	-4
 19119  00039E  50E3               	movf	plusw1,w,c
 19120  0003A0  6E2A               	movwf	btemp^0,c
 19121  0003A2  0EF4               	movlw	-12
 19122  0003A4  50E3               	movf	plusw1,w,c
 19123  0003A6  262A               	addwf	btemp^0,f,c
 19124  0003A8  0EFC               	movlw	-4
 19125  0003AA  0060  F0AB  FFE3   	movff	btemp,plusw1
 19126  0003B0  0EFD               	movlw	-3
 19127  0003B2  50E3               	movf	plusw1,w,c
 19128  0003B4  6E2A               	movwf	btemp^0,c
 19129  0003B6  0EF5               	movlw	-11
 19130  0003B8  50E3               	movf	plusw1,w,c
 19131  0003BA  222A               	addwfc	btemp^0,f,c
 19132  0003BC  0EFD               	movlw	-3
 19133  0003BE  0060  F0AB  FFE3   	movff	btemp,plusw1
 19134  0003C4  0EFE               	movlw	-2
 19135  0003C6  50E3               	movf	plusw1,w,c
 19136  0003C8  6E2A               	movwf	btemp^0,c
 19137  0003CA  0EF6               	movlw	-10
 19138  0003CC  50E3               	movf	plusw1,w,c
 19139  0003CE  222A               	addwfc	btemp^0,f,c
 19140  0003D0  0EFE               	movlw	-2
 19141  0003D2  0060  F0AB  FFE3   	movff	btemp,plusw1
 19142  0003D8  0EFF               	movlw	-1
 19143  0003DA  50E3               	movf	plusw1,w,c
 19144  0003DC  6E2A               	movwf	btemp^0,c
 19145  0003DE  0EF7               	movlw	-9
 19146  0003E0  50E3               	movf	plusw1,w,c
 19147  0003E2  222A               	addwfc	btemp^0,f,c
 19148  0003E4  0EFF               	movlw	-1
 19149  0003E6  0060  F0AB  FFE3   	movff	btemp,plusw1
 19150  0003EC                     l10218:
 19151                           
 19152                           ;stkvar	_multiplicand @ sp[(-4)+-8]
 19153  0003EC  90D8               	bcf	status,0,c
 19154  0003EE  0EF4               	movlw	-12
 19155  0003F0  36E3               	rlcf	plusw1,f,c
 19156  0003F2  0EF5               	movlw	-11
 19157  0003F4  36E3               	rlcf	plusw1,f,c
 19158  0003F6  0EF6               	movlw	-10
 19159  0003F8  36E3               	rlcf	plusw1,f,c
 19160  0003FA  0EF7               	movlw	-9
 19161  0003FC  36E3               	rlcf	plusw1,f,c
 19162                           
 19163                           ;stkvar	_multiplier @ sp[(-4)+-4]
 19164  0003FE  90D8               	bcf	status,0,c
 19165  000400  0EFB               	movlw	-5
 19166  000402  32E3               	rrcf	plusw1,f,c
 19167  000404  0EFA               	movlw	-6
 19168  000406  32E3               	rrcf	plusw1,f,c
 19169  000408  0EF9               	movlw	-7
 19170  00040A  32E3               	rrcf	plusw1,f,c
 19171  00040C  0EF8               	movlw	-8
 19172  00040E  32E3               	rrcf	plusw1,f,c
 19173                           
 19174                           ;stkvar	_multiplier @ sp[(-4)+-4]
 19175  000410  0EF8               	movlw	-8
 19176  000412  50E3               	movf	plusw1,w,c
 19177  000414  E1C0               	bnz	l2737
 19178  000416  0EF9               	movlw	-7
 19179  000418  50E3               	movf	plusw1,w,c
 19180  00041A  E1BD               	bnz	l2737
 19181  00041C  0EFA               	movlw	-6
 19182  00041E  50E3               	movf	plusw1,w,c
 19183  000420  E1BA               	bnz	l2737
 19184  000422  0EFB               	movlw	-5
 19185  000424  50E3               	movf	plusw1,w,c
 19186  000426  A4D8               	btfss	status,2,c
 19187  000428  D7B6               	goto	l2737
 19188                           
 19189                           ;stkvar	_product @ sp[(-4)+0]
 19190  00042A  0EFC               	movlw	-4
 19191  00042C  006F FF8C  F02A    	movff	plusw1,btemp
 19192  000432  0EFD               	movlw	-3
 19193  000434  006F FF8C  F02B    	movff	plusw1,btemp+1
 19194  00043A  0EFE               	movlw	-2
 19195  00043C  006F FF8C  F02C    	movff	plusw1,btemp+2
 19196  000442  0EFF               	movlw	-1
 19197  000444  006F FF8C  F02D    	movff	plusw1,btemp+3
 19198                           
 19199                           ; ___lmul: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 19200  00044A  0EF4               	movlw	244
 19201  00044C  26E1               	addwf	fsr1l,f,c
 19202  00044E  0EFF               	movlw	255
 19203  000450  22E2               	addwfc	fsr1h,f,c
 19204  000452  0012               	return		;funcret
 19205  000454                     __end_of___lmul:
 19206                           	opt callstack 0
 19207                           
 19208 ;; *************** function ___almod *****************
 19209 ;; Defined at:
 19210 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/almod.c"
 19211 ;; Parameters:    Size  Location     Type
 19212 ;;  dividend        4  [STACK] long 
 19213 ;;  divisor         4  [STACK] long 
 19214 ;; Auto vars:     Size  Location     Type
 19215 ;;  sign            1  [STACK] unsigned char 
 19216 ;;  counter         1  [STACK] unsigned char 
 19217 ;; Return value:  Size  Location     Type
 19218 ;;                  4  [STACK] long 
 19219 ;; Registers used:
 19220 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 19221 ;; Tracked objects:
 19222 ;;		On entry : 0/39
 19223 ;;		On exit  : 0/0
 19224 ;;		Unchanged: 0/0
 19225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19230 ;;Total ram usage:        0 bytes
 19231 ;; Hardware stack levels used:    1
 19232 ;; Hardware stack levels required when called:   15
 19233 ;; This function calls:
 19234 ;;		Nothing
 19235 ;; This function is called by:
 19236 ;;		___secs_to_tm
 19237 ;; This function uses a reentrant model
 19238 ;;
 19239                           
 19240                           	psect	text53
 19241  01E884                     __ptext53:
 19242                           	opt callstack 0
 19243  01E884                     ___almod:
 19244                           	opt callstack 0
 19245                           
 19246                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19247  01E884  52E6               	movf	postinc1,f,c
 19248  01E886  52E6               	movf	postinc1,f,c
 19249                           
 19250                           ;stkvar	_sign @ sp[(-2)+0]
 19251                           
 19252                           ;incstack = 0
 19253  01E888  0EFE               	movlw	-2
 19254  01E88A  6AE3               	clrf	plusw1,c
 19255                           
 19256                           ;stkvar	_dividend @ sp[(-2)+-4]
 19257  01E88C  0EFD               	movlw	-3
 19258  01E88E  AEE3               	btfss	plusw1,7,c
 19259  01E890  D014               	goto	l11996
 19260                           
 19261                           ;stkvar	_dividend @ sp[(-2)+-4]
 19262                           ;stkvar	_dividend @ sp[(-2)+-4]
 19263  01E892  0EFA               	movlw	-6
 19264  01E894  6CE3               	negf	plusw1,c
 19265  01E896  0EFB               	movlw	-5
 19266  01E898  1EE3               	comf	plusw1,f,c
 19267  01E89A  0EFC               	movlw	-4
 19268  01E89C  1EE3               	comf	plusw1,f,c
 19269  01E89E  0EFD               	movlw	-3
 19270  01E8A0  1EE3               	comf	plusw1,f,c
 19271  01E8A2  E308               	bnc	u11220
 19272  01E8A4  0EFB               	movlw	-5
 19273  01E8A6  2AE3               	incf	plusw1,f,c
 19274  01E8A8  E305               	bnc	u11220
 19275  01E8AA  0EFC               	movlw	-4
 19276  01E8AC  2AE3               	incf	plusw1,f,c
 19277  01E8AE  E302               	bnc	u11220
 19278  01E8B0  0EFD               	movlw	-3
 19279  01E8B2  2AE3               	incf	plusw1,f,c
 19280  01E8B4                     u11220:
 19281                           
 19282                           ;stkvar	_sign @ sp[(-2)+0]
 19283  01E8B4  0EFE               	movlw	-2
 19284  01E8B6  6AE3               	clrf	plusw1,c
 19285  01E8B8  2AE3               	incf	plusw1,f,c
 19286  01E8BA                     l11996:
 19287                           
 19288                           ;stkvar	_divisor @ sp[(-2)+-8]
 19289  01E8BA  0EF9               	movlw	-7
 19290  01E8BC  AEE3               	btfss	plusw1,7,c
 19291  01E8BE  D011               	goto	u11240
 19292                           
 19293                           ;stkvar	_divisor @ sp[(-2)+-8]
 19294                           ;stkvar	_divisor @ sp[(-2)+-8]
 19295  01E8C0  0EF6               	movlw	-10
 19296  01E8C2  6CE3               	negf	plusw1,c
 19297  01E8C4  0EF7               	movlw	-9
 19298  01E8C6  1EE3               	comf	plusw1,f,c
 19299  01E8C8  0EF8               	movlw	-8
 19300  01E8CA  1EE3               	comf	plusw1,f,c
 19301  01E8CC  0EF9               	movlw	-7
 19302  01E8CE  1EE3               	comf	plusw1,f,c
 19303  01E8D0  E308               	bnc	u11240
 19304  01E8D2  0EF7               	movlw	-9
 19305  01E8D4  2AE3               	incf	plusw1,f,c
 19306  01E8D6  E305               	bnc	u11240
 19307  01E8D8  0EF8               	movlw	-8
 19308  01E8DA  2AE3               	incf	plusw1,f,c
 19309  01E8DC  E302               	bnc	u11240
 19310  01E8DE  0EF9               	movlw	-7
 19311  01E8E0  2AE3               	incf	plusw1,f,c
 19312  01E8E2                     u11240:
 19313                           
 19314                           ;stkvar	_divisor @ sp[(-2)+-8]
 19315  01E8E2  0EF6               	movlw	-10
 19316  01E8E4  50E3               	movf	plusw1,w,c
 19317  01E8E6  E10A               	bnz	u11250
 19318  01E8E8  0EF7               	movlw	-9
 19319  01E8EA  50E3               	movf	plusw1,w,c
 19320  01E8EC  E107               	bnz	u11250
 19321  01E8EE  0EF8               	movlw	-8
 19322  01E8F0  50E3               	movf	plusw1,w,c
 19323  01E8F2  E104               	bnz	u11250
 19324  01E8F4  0EF9               	movlw	-7
 19325  01E8F6  50E3               	movf	plusw1,w,c
 19326  01E8F8  B4D8               	btfsc	status,2,c
 19327  01E8FA  D04D               	goto	u11280
 19328  01E8FC                     u11250:
 19329                           
 19330                           ;stkvar	_counter @ sp[(-2)+1]
 19331  01E8FC  0EFF               	movlw	-1
 19332  01E8FE  6AE3               	clrf	plusw1,c
 19333  01E900  D00A               	goto	L17
 19334  01E902                     l12004:
 19335                           
 19336                           ;stkvar	_divisor @ sp[(-2)+-8]
 19337  01E902  90D8               	bcf	status,0,c
 19338  01E904  0EF6               	movlw	-10
 19339  01E906  36E3               	rlcf	plusw1,f,c
 19340  01E908  0EF7               	movlw	-9
 19341  01E90A  36E3               	rlcf	plusw1,f,c
 19342  01E90C  0EF8               	movlw	-8
 19343  01E90E  36E3               	rlcf	plusw1,f,c
 19344  01E910  0EF9               	movlw	-7
 19345  01E912  36E3               	rlcf	plusw1,f,c
 19346                           
 19347                           ;stkvar	_counter @ sp[(-2)+1]
 19348  01E914  0EFF               	movlw	-1
 19349  01E916                     L17:
 19350  01E916  2AE3               	incf	plusw1,f,c
 19351                           
 19352                           ;stkvar	_divisor @ sp[(-2)+-8]
 19353  01E918  0EF9               	movlw	-7
 19354  01E91A  AEE3               	btfss	plusw1,7,c
 19355  01E91C  D7F2               	goto	l12004
 19356  01E91E                     u11260:
 19357                           
 19358                           ;stkvar	_divisor @ sp[(-2)+-8]
 19359                           ;stkvar	_dividend @ sp[(-2)+-4]
 19360  01E91E  50E1               	movf	fsr1l,w,c
 19361  01E920  0FFA               	addlw	-6
 19362  01E922  6ED9               	movwf	fsr2l,c
 19363  01E924  50E2               	movf	fsr1h,w,c
 19364  01E926  6EDA               	movwf	fsr2h,c
 19365  01E928  0EFF               	movlw	255
 19366  01E92A  22DA               	addwfc	fsr2h,f,c
 19367  01E92C  0EF6               	movlw	-10
 19368  01E92E  50E3               	movf	plusw1,w,c
 19369  01E930  5CDE               	subwf	postinc2,w,c
 19370  01E932  0EF7               	movlw	-9
 19371  01E934  50E3               	movf	plusw1,w,c
 19372  01E936  58DE               	subwfb	postinc2,w,c
 19373  01E938  0EF8               	movlw	-8
 19374  01E93A  50E3               	movf	plusw1,w,c
 19375  01E93C  58DE               	subwfb	postinc2,w,c
 19376  01E93E  0EF9               	movlw	-7
 19377  01E940  50E3               	movf	plusw1,w,c
 19378  01E942  58DE               	subwfb	postinc2,w,c
 19379  01E944  A0D8               	btfss	status,0,c
 19380  01E946  D013               	goto	l12012
 19381                           
 19382                           ;stkvar	_divisor @ sp[(-2)+-8]
 19383                           ;stkvar	_dividend @ sp[(-2)+-4]
 19384  01E948  50E1               	movf	fsr1l,w,c
 19385  01E94A  0FFA               	addlw	-6
 19386  01E94C  6ED9               	movwf	fsr2l,c
 19387  01E94E  50E2               	movf	fsr1h,w,c
 19388  01E950  6EDA               	movwf	fsr2h,c
 19389  01E952  0EFF               	movlw	255
 19390  01E954  22DA               	addwfc	fsr2h,f,c
 19391  01E956  0EF6               	movlw	-10
 19392  01E958  50E3               	movf	plusw1,w,c
 19393  01E95A  5EDE               	subwf	postinc2,f,c
 19394  01E95C  0EF7               	movlw	-9
 19395  01E95E  50E3               	movf	plusw1,w,c
 19396  01E960  5ADE               	subwfb	postinc2,f,c
 19397  01E962  0EF8               	movlw	-8
 19398  01E964  50E3               	movf	plusw1,w,c
 19399  01E966  5ADE               	subwfb	postinc2,f,c
 19400  01E968  0EF9               	movlw	-7
 19401  01E96A  50E3               	movf	plusw1,w,c
 19402  01E96C  5ADE               	subwfb	postinc2,f,c
 19403  01E96E                     l12012:
 19404                           
 19405                           ;stkvar	_divisor @ sp[(-2)+-8]
 19406  01E96E  90D8               	bcf	status,0,c
 19407  01E970  0EF9               	movlw	-7
 19408  01E972  32E3               	rrcf	plusw1,f,c
 19409  01E974  0EF8               	movlw	-8
 19410  01E976  32E3               	rrcf	plusw1,f,c
 19411  01E978  0EF7               	movlw	-9
 19412  01E97A  32E3               	rrcf	plusw1,f,c
 19413  01E97C  0EF6               	movlw	-10
 19414  01E97E  32E3               	rrcf	plusw1,f,c
 19415                           
 19416                           ;stkvar	_counter @ sp[(-2)+1]
 19417  01E980  0EFF               	movlw	-1
 19418  01E982  50E3               	movf	plusw1,w,c
 19419  01E984  6E2A               	movwf	btemp^0,c
 19420  01E986  0E01               	movlw	1
 19421  01E988  5E2A               	subwf	btemp^0,f,c
 19422  01E98A  0EFF               	movlw	-1
 19423  01E98C  0060  F0AB  FFE3   	movff	btemp,plusw1
 19424  01E992  A4D8               	btfss	status,2,c
 19425  01E994  D7C4               	goto	u11260
 19426  01E996                     u11280:
 19427                           
 19428                           ;stkvar	_sign @ sp[(-2)+0]
 19429  01E996  0EFE               	movlw	-2
 19430  01E998  50E3               	movf	plusw1,w,c
 19431  01E99A  B4D8               	btfsc	status,2,c
 19432  01E99C  D011               	goto	u11300
 19433                           
 19434                           ;stkvar	_dividend @ sp[(-2)+-4]
 19435                           ;stkvar	_dividend @ sp[(-2)+-4]
 19436  01E99E  0EFA               	movlw	-6
 19437  01E9A0  6CE3               	negf	plusw1,c
 19438  01E9A2  0EFB               	movlw	-5
 19439  01E9A4  1EE3               	comf	plusw1,f,c
 19440  01E9A6  0EFC               	movlw	-4
 19441  01E9A8  1EE3               	comf	plusw1,f,c
 19442  01E9AA  0EFD               	movlw	-3
 19443  01E9AC  1EE3               	comf	plusw1,f,c
 19444  01E9AE  E308               	bnc	u11300
 19445  01E9B0  0EFB               	movlw	-5
 19446  01E9B2  2AE3               	incf	plusw1,f,c
 19447  01E9B4  E305               	bnc	u11300
 19448  01E9B6  0EFC               	movlw	-4
 19449  01E9B8  2AE3               	incf	plusw1,f,c
 19450  01E9BA  E302               	bnc	u11300
 19451  01E9BC  0EFD               	movlw	-3
 19452  01E9BE  2AE3               	incf	plusw1,f,c
 19453  01E9C0                     u11300:
 19454                           
 19455                           ;stkvar	_dividend @ sp[(-2)+-4]
 19456  01E9C0  0EFA               	movlw	-6
 19457  01E9C2  006F FF8C  F02A    	movff	plusw1,btemp
 19458  01E9C8  0EFB               	movlw	-5
 19459  01E9CA  006F FF8C  F02B    	movff	plusw1,btemp+1
 19460  01E9D0  0EFC               	movlw	-4
 19461  01E9D2  006F FF8C  F02C    	movff	plusw1,btemp+2
 19462  01E9D8  0EFD               	movlw	-3
 19463  01E9DA  006F FF8C  F02D    	movff	plusw1,btemp+3
 19464                           
 19465                           ; ___almod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 19466  01E9E0  0EF6               	movlw	246
 19467  01E9E2  26E1               	addwf	fsr1l,f,c
 19468  01E9E4  0EFF               	movlw	255
 19469  01E9E6  22E2               	addwfc	fsr1h,f,c
 19470  01E9E8  0012               	return		;funcret
 19471  01E9EA                     __end_of___almod:
 19472                           	opt callstack 0
 19473                           
 19474 ;; *************** function ___aldiv *****************
 19475 ;; Defined at:
 19476 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aldiv.c"
 19477 ;; Parameters:    Size  Location     Type
 19478 ;;  dividend        4  [STACK] long 
 19479 ;;  divisor         4  [STACK] long 
 19480 ;; Auto vars:     Size  Location     Type
 19481 ;;  quotient        4  [STACK] long 
 19482 ;;  sign            1  [STACK] unsigned char 
 19483 ;;  counter         1  [STACK] unsigned char 
 19484 ;; Return value:  Size  Location     Type
 19485 ;;                  4  [STACK] long 
 19486 ;; Registers used:
 19487 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 19488 ;; Tracked objects:
 19489 ;;		On entry : 0/0
 19490 ;;		On exit  : 0/0
 19491 ;;		Unchanged: 0/0
 19492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19497 ;;Total ram usage:        0 bytes
 19498 ;; Hardware stack levels used:    1
 19499 ;; Hardware stack levels required when called:   15
 19500 ;; This function calls:
 19501 ;;		Nothing
 19502 ;; This function is called by:
 19503 ;;		___secs_to_tm
 19504 ;;		_rule_to_secs
 19505 ;; This function uses a reentrant model
 19506 ;;
 19507                           
 19508                           	psect	text54
 19509  01DF78                     __ptext54:
 19510                           	opt callstack 0
 19511  01DF78                     ___aldiv:
 19512                           	opt callstack 0
 19513                           
 19514                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19515  01DF78  0E06               	movlw	6
 19516  01DF7A  26E1               	addwf	fsr1l,f,c
 19517  01DF7C  0E00               	movlw	0
 19518  01DF7E  22E2               	addwfc	fsr1h,f,c
 19519                           
 19520                           ;stkvar	_sign @ sp[(-6)+4]
 19521                           
 19522                           ;incstack = 0
 19523  01DF80  0EFE               	movlw	-2
 19524  01DF82  6AE3               	clrf	plusw1,c
 19525                           
 19526                           ;stkvar	_divisor @ sp[(-6)+-8]
 19527  01DF84  0EF5               	movlw	-11
 19528  01DF86  AEE3               	btfss	plusw1,7,c
 19529  01DF88  D014               	goto	l11538
 19530                           
 19531                           ;stkvar	_divisor @ sp[(-6)+-8]
 19532                           ;stkvar	_divisor @ sp[(-6)+-8]
 19533  01DF8A  0EF2               	movlw	-14
 19534  01DF8C  6CE3               	negf	plusw1,c
 19535  01DF8E  0EF3               	movlw	-13
 19536  01DF90  1EE3               	comf	plusw1,f,c
 19537  01DF92  0EF4               	movlw	-12
 19538  01DF94  1EE3               	comf	plusw1,f,c
 19539  01DF96  0EF5               	movlw	-11
 19540  01DF98  1EE3               	comf	plusw1,f,c
 19541  01DF9A  E308               	bnc	u10540
 19542  01DF9C  0EF3               	movlw	-13
 19543  01DF9E  2AE3               	incf	plusw1,f,c
 19544  01DFA0  E305               	bnc	u10540
 19545  01DFA2  0EF4               	movlw	-12
 19546  01DFA4  2AE3               	incf	plusw1,f,c
 19547  01DFA6  E302               	bnc	u10540
 19548  01DFA8  0EF5               	movlw	-11
 19549  01DFAA  2AE3               	incf	plusw1,f,c
 19550  01DFAC                     u10540:
 19551                           
 19552                           ;stkvar	_sign @ sp[(-6)+4]
 19553  01DFAC  0EFE               	movlw	-2
 19554  01DFAE  6AE3               	clrf	plusw1,c
 19555  01DFB0  2AE3               	incf	plusw1,f,c
 19556  01DFB2                     l11538:
 19557                           
 19558                           ;stkvar	_dividend @ sp[(-6)+-4]
 19559  01DFB2  0EF9               	movlw	-7
 19560  01DFB4  AEE3               	btfss	plusw1,7,c
 19561  01DFB6  D013               	goto	l11544
 19562                           
 19563                           ;stkvar	_dividend @ sp[(-6)+-4]
 19564                           ;stkvar	_dividend @ sp[(-6)+-4]
 19565  01DFB8  0EF6               	movlw	-10
 19566  01DFBA  6CE3               	negf	plusw1,c
 19567  01DFBC  0EF7               	movlw	-9
 19568  01DFBE  1EE3               	comf	plusw1,f,c
 19569  01DFC0  0EF8               	movlw	-8
 19570  01DFC2  1EE3               	comf	plusw1,f,c
 19571  01DFC4  0EF9               	movlw	-7
 19572  01DFC6  1EE3               	comf	plusw1,f,c
 19573  01DFC8  E308               	bnc	u10560
 19574  01DFCA  0EF7               	movlw	-9
 19575  01DFCC  2AE3               	incf	plusw1,f,c
 19576  01DFCE  E305               	bnc	u10560
 19577  01DFD0  0EF8               	movlw	-8
 19578  01DFD2  2AE3               	incf	plusw1,f,c
 19579  01DFD4  E302               	bnc	u10560
 19580  01DFD6  0EF9               	movlw	-7
 19581  01DFD8  2AE3               	incf	plusw1,f,c
 19582  01DFDA                     u10560:
 19583                           
 19584                           ;stkvar	_sign @ sp[(-6)+4]
 19585  01DFDA  0EFE               	movlw	-2
 19586  01DFDC  70E3               	btg	plusw1,0,c
 19587  01DFDE                     l11544:
 19588                           
 19589                           ;stkvar	_quotient @ sp[(-6)+0]
 19590  01DFDE  0EFA               	movlw	-6
 19591  01DFE0  6AE3               	clrf	plusw1,c
 19592  01DFE2  0EFB               	movlw	-5
 19593  01DFE4  6AE3               	clrf	plusw1,c
 19594  01DFE6  0EFC               	movlw	-4
 19595  01DFE8  6AE3               	clrf	plusw1,c
 19596  01DFEA  0EFD               	movlw	-3
 19597  01DFEC  6AE3               	clrf	plusw1,c
 19598                           
 19599                           ;stkvar	_divisor @ sp[(-6)+-8]
 19600  01DFEE  0EF2               	movlw	-14
 19601  01DFF0  50E3               	movf	plusw1,w,c
 19602  01DFF2  E10A               	bnz	u10570
 19603  01DFF4  0EF3               	movlw	-13
 19604  01DFF6  50E3               	movf	plusw1,w,c
 19605  01DFF8  E107               	bnz	u10570
 19606  01DFFA  0EF4               	movlw	-12
 19607  01DFFC  50E3               	movf	plusw1,w,c
 19608  01DFFE  E104               	bnz	u10570
 19609  01E000  0EF5               	movlw	-11
 19610  01E002  50E3               	movf	plusw1,w,c
 19611  01E004  B4D8               	btfsc	status,2,c
 19612  01E006  D058               	goto	u10600
 19613  01E008                     u10570:
 19614                           
 19615                           ;stkvar	_counter @ sp[(-6)+5]
 19616  01E008  0EFF               	movlw	-1
 19617  01E00A  6AE3               	clrf	plusw1,c
 19618  01E00C  D00A               	goto	L18
 19619  01E00E                     l11550:
 19620                           
 19621                           ;stkvar	_divisor @ sp[(-6)+-8]
 19622  01E00E  90D8               	bcf	status,0,c
 19623  01E010  0EF2               	movlw	-14
 19624  01E012  36E3               	rlcf	plusw1,f,c
 19625  01E014  0EF3               	movlw	-13
 19626  01E016  36E3               	rlcf	plusw1,f,c
 19627  01E018  0EF4               	movlw	-12
 19628  01E01A  36E3               	rlcf	plusw1,f,c
 19629  01E01C  0EF5               	movlw	-11
 19630  01E01E  36E3               	rlcf	plusw1,f,c
 19631                           
 19632                           ;stkvar	_counter @ sp[(-6)+5]
 19633  01E020  0EFF               	movlw	-1
 19634  01E022                     L18:
 19635  01E022  2AE3               	incf	plusw1,f,c
 19636                           
 19637                           ;stkvar	_divisor @ sp[(-6)+-8]
 19638  01E024  0EF5               	movlw	-11
 19639  01E026  AEE3               	btfss	plusw1,7,c
 19640  01E028  D7F2               	goto	l11550
 19641  01E02A                     u10580:
 19642                           
 19643                           ;stkvar	_quotient @ sp[(-6)+0]
 19644  01E02A  90D8               	bcf	status,0,c
 19645  01E02C  0EFA               	movlw	-6
 19646  01E02E  36E3               	rlcf	plusw1,f,c
 19647  01E030  0EFB               	movlw	-5
 19648  01E032  36E3               	rlcf	plusw1,f,c
 19649  01E034  0EFC               	movlw	-4
 19650  01E036  36E3               	rlcf	plusw1,f,c
 19651  01E038  0EFD               	movlw	-3
 19652  01E03A  36E3               	rlcf	plusw1,f,c
 19653                           
 19654                           ;stkvar	_divisor @ sp[(-6)+-8]
 19655                           ;stkvar	_dividend @ sp[(-6)+-4]
 19656  01E03C  50E1               	movf	fsr1l,w,c
 19657  01E03E  0FF6               	addlw	-10
 19658  01E040  6ED9               	movwf	fsr2l,c
 19659  01E042  50E2               	movf	fsr1h,w,c
 19660  01E044  6EDA               	movwf	fsr2h,c
 19661  01E046  0EFF               	movlw	255
 19662  01E048  22DA               	addwfc	fsr2h,f,c
 19663  01E04A  0EF2               	movlw	-14
 19664  01E04C  50E3               	movf	plusw1,w,c
 19665  01E04E  5CDE               	subwf	postinc2,w,c
 19666  01E050  0EF3               	movlw	-13
 19667  01E052  50E3               	movf	plusw1,w,c
 19668  01E054  58DE               	subwfb	postinc2,w,c
 19669  01E056  0EF4               	movlw	-12
 19670  01E058  50E3               	movf	plusw1,w,c
 19671  01E05A  58DE               	subwfb	postinc2,w,c
 19672  01E05C  0EF5               	movlw	-11
 19673  01E05E  50E3               	movf	plusw1,w,c
 19674  01E060  58DE               	subwfb	postinc2,w,c
 19675  01E062  A0D8               	btfss	status,0,c
 19676  01E064  D015               	goto	l11562
 19677                           
 19678                           ;stkvar	_divisor @ sp[(-6)+-8]
 19679                           ;stkvar	_dividend @ sp[(-6)+-4]
 19680  01E066  50E1               	movf	fsr1l,w,c
 19681  01E068  0FF6               	addlw	-10
 19682  01E06A  6ED9               	movwf	fsr2l,c
 19683  01E06C  50E2               	movf	fsr1h,w,c
 19684  01E06E  6EDA               	movwf	fsr2h,c
 19685  01E070  0EFF               	movlw	255
 19686  01E072  22DA               	addwfc	fsr2h,f,c
 19687  01E074  0EF2               	movlw	-14
 19688  01E076  50E3               	movf	plusw1,w,c
 19689  01E078  5EDE               	subwf	postinc2,f,c
 19690  01E07A  0EF3               	movlw	-13
 19691  01E07C  50E3               	movf	plusw1,w,c
 19692  01E07E  5ADE               	subwfb	postinc2,f,c
 19693  01E080  0EF4               	movlw	-12
 19694  01E082  50E3               	movf	plusw1,w,c
 19695  01E084  5ADE               	subwfb	postinc2,f,c
 19696  01E086  0EF5               	movlw	-11
 19697  01E088  50E3               	movf	plusw1,w,c
 19698  01E08A  5ADE               	subwfb	postinc2,f,c
 19699                           
 19700                           ;stkvar	_quotient @ sp[(-6)+0]
 19701  01E08C  0EFA               	movlw	-6
 19702  01E08E  80E3               	bsf	plusw1,0,c
 19703  01E090                     l11562:
 19704                           
 19705                           ;stkvar	_divisor @ sp[(-6)+-8]
 19706  01E090  90D8               	bcf	status,0,c
 19707  01E092  0EF5               	movlw	-11
 19708  01E094  32E3               	rrcf	plusw1,f,c
 19709  01E096  0EF4               	movlw	-12
 19710  01E098  32E3               	rrcf	plusw1,f,c
 19711  01E09A  0EF3               	movlw	-13
 19712  01E09C  32E3               	rrcf	plusw1,f,c
 19713  01E09E  0EF2               	movlw	-14
 19714  01E0A0  32E3               	rrcf	plusw1,f,c
 19715                           
 19716                           ;stkvar	_counter @ sp[(-6)+5]
 19717  01E0A2  0EFF               	movlw	-1
 19718  01E0A4  50E3               	movf	plusw1,w,c
 19719  01E0A6  6E2A               	movwf	btemp^0,c
 19720  01E0A8  0E01               	movlw	1
 19721  01E0AA  5E2A               	subwf	btemp^0,f,c
 19722  01E0AC  0EFF               	movlw	-1
 19723  01E0AE  0060  F0AB  FFE3   	movff	btemp,plusw1
 19724  01E0B4  A4D8               	btfss	status,2,c
 19725  01E0B6  D7B9               	goto	u10580
 19726  01E0B8                     u10600:
 19727                           
 19728                           ;stkvar	_sign @ sp[(-6)+4]
 19729  01E0B8  0EFE               	movlw	-2
 19730  01E0BA  50E3               	movf	plusw1,w,c
 19731  01E0BC  B4D8               	btfsc	status,2,c
 19732  01E0BE  D011               	goto	u10620
 19733                           
 19734                           ;stkvar	_quotient @ sp[(-6)+0]
 19735                           ;stkvar	_quotient @ sp[(-6)+0]
 19736  01E0C0  0EFA               	movlw	-6
 19737  01E0C2  6CE3               	negf	plusw1,c
 19738  01E0C4  0EFB               	movlw	-5
 19739  01E0C6  1EE3               	comf	plusw1,f,c
 19740  01E0C8  0EFC               	movlw	-4
 19741  01E0CA  1EE3               	comf	plusw1,f,c
 19742  01E0CC  0EFD               	movlw	-3
 19743  01E0CE  1EE3               	comf	plusw1,f,c
 19744  01E0D0  E308               	bnc	u10620
 19745  01E0D2  0EFB               	movlw	-5
 19746  01E0D4  2AE3               	incf	plusw1,f,c
 19747  01E0D6  E305               	bnc	u10620
 19748  01E0D8  0EFC               	movlw	-4
 19749  01E0DA  2AE3               	incf	plusw1,f,c
 19750  01E0DC  E302               	bnc	u10620
 19751  01E0DE  0EFD               	movlw	-3
 19752  01E0E0  2AE3               	incf	plusw1,f,c
 19753  01E0E2                     u10620:
 19754                           
 19755                           ;stkvar	_quotient @ sp[(-6)+0]
 19756  01E0E2  0EFA               	movlw	-6
 19757  01E0E4  006F FF8C  F02A    	movff	plusw1,btemp
 19758  01E0EA  0EFB               	movlw	-5
 19759  01E0EC  006F FF8C  F02B    	movff	plusw1,btemp+1
 19760  01E0F2  0EFC               	movlw	-4
 19761  01E0F4  006F FF8C  F02C    	movff	plusw1,btemp+2
 19762  01E0FA  0EFD               	movlw	-3
 19763  01E0FC  006F FF8C  F02D    	movff	plusw1,btemp+3
 19764                           
 19765                           ; ___aldiv: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 19766  01E102  0EF2               	movlw	242
 19767  01E104  26E1               	addwf	fsr1l,f,c
 19768  01E106  0EFF               	movlw	255
 19769  01E108  22E2               	addwfc	fsr1h,f,c
 19770  01E10A  0012               	return		;funcret
 19771  01E10C                     __end_of___aldiv:
 19772                           	opt callstack 0
 19773                           
 19774 ;; *************** function _asctime *****************
 19775 ;; Defined at:
 19776 ;;		line 19 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/asctime.c"
 19777 ;; Parameters:    Size  Location     Type
 19778 ;;  tim             2  [STACK] PTR const struct tm
 19779 ;;		 -> localtime@tm(24), NULL(0), 
 19780 ;; Auto vars:     Size  Location     Type
 19781 ;;  cp              2  [STACK] PTR unsigned char 
 19782 ;;		 -> asctime@buf(27), 
 19783 ;;  s               2  [STACK] PTR const unsigned char 
 19784 ;;		 -> STR_133(37), STR_132(22), 
 19785 ;; Return value:  Size  Location     Type
 19786 ;;                  2  [STACK] PTR unsigned char 
 19787 ;; Registers used:
 19788 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 19789 ;; Tracked objects:
 19790 ;;		On entry : 0/39
 19791 ;;		On exit  : 0/0
 19792 ;;		Unchanged: 0/0
 19793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19798 ;;Total ram usage:        0 bytes
 19799 ;; Hardware stack levels used:    1
 19800 ;; Hardware stack levels required when called:   17
 19801 ;; This function calls:
 19802 ;;		___awdiv
 19803 ;;		___awmod
 19804 ;;		_put2d
 19805 ;; This function is called by:
 19806 ;;		_main
 19807 ;;		_display_history
 19808 ;; This function uses a reentrant model
 19809 ;;
 19810                           
 19811                           	psect	text55
 19812  018280                     __ptext55:
 19813                           	opt callstack 0
 19814  018280                     _asctime:
 19815                           	opt callstack 0
 19816                           
 19817                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19818  018280  52E6               	movf	postinc1,f,c
 19819  018282  52E6               	movf	postinc1,f,c
 19820  018284  52E6               	movf	postinc1,f,c
 19821  018286  52E6               	movf	postinc1,f,c
 19822                           
 19823                           ;stkvar	_tim @ sp[(-4)+-2]
 19824                           
 19825                           ;incstack = 0
 19826  018288  0EFA               	movlw	-6
 19827  01828A  006F FF8C  F034    	movff	plusw1,btemp+10
 19828  018290  0EFB               	movlw	-5
 19829  018292  006F FF8C  F035    	movff	plusw1,btemp+11
 19830  018298  0E0C               	movlw	12
 19831  01829A  2434               	addwf	(btemp+10)^0,w,c
 19832  01829C  6ED9               	movwf	fsr2l,c
 19833  01829E  0E00               	movlw	0
 19834  0182A0  2035               	addwfc	(btemp+11)^0,w,c
 19835  0182A2  6EDA               	movwf	fsr2h,c
 19836  0182A4  006F FF78  F034    	movff	postinc2,btemp+10
 19837  0182AA  006F FF74  F035    	movff	postdec2,btemp+11
 19838  0182B0  0E03               	movlw	3
 19839  0182B2  0234               	mulwf	(btemp+10)^0,c
 19840  0182B4  006F FFCC  F032    	movff	prodl,btemp+8
 19841  0182BA  006F FFD0  F033    	movff	prodh,btemp+9
 19842  0182C0  0235               	mulwf	(btemp+11)^0,c
 19843  0182C2  50F3               	movf	prodl,w,c
 19844  0182C4  2633               	addwf	(btemp+9)^0,f,c
 19845  0182C6  0E27               	movlw	low STR_132
 19846  0182C8  6E34               	movwf	(btemp+10)^0,c
 19847  0182CA  0EFD               	movlw	high STR_132
 19848  0182CC  6E35               	movwf	(btemp+11)^0,c
 19849  0182CE  5032               	movf	(btemp+8)^0,w,c
 19850  0182D0  2634               	addwf	(btemp+10)^0,f,c
 19851  0182D2  5033               	movf	(btemp+9)^0,w,c
 19852  0182D4  2235               	addwfc	(btemp+11)^0,f,c
 19853                           
 19854                           ;stkvar	_s @ sp[(-4)+2]
 19855  0182D6  0EFF               	movlw	-1
 19856  0182D8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 19857  0182DE  0EFE               	movlw	-2
 19858  0182E0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 19859                           
 19860                           ;stkvar	_cp @ sp[(-4)+0]
 19861  0182E6  0E03               	movlw	high asctime@buf
 19862  0182E8  6E2A               	movwf	btemp^0,c
 19863  0182EA  0EFD               	movlw	-3
 19864  0182EC  0060  F0AB  FFE3   	movff	btemp,plusw1
 19865  0182F2  0EC4               	movlw	low asctime@buf
 19866  0182F4  6E2A               	movwf	btemp^0,c
 19867  0182F6  0EFC               	movlw	-4
 19868  0182F8  0060  F0AB  FFE3   	movff	btemp,plusw1
 19869                           
 19870                           ;stkvar	_s @ sp[(-4)+2]
 19871  0182FE  50E1               	movf	fsr1l,w,c
 19872  018300  0FFE               	addlw	-2
 19873  018302  6ED9               	movwf	fsr2l,c
 19874  018304  50E2               	movf	fsr1h,w,c
 19875  018306  6EDA               	movwf	fsr2h,c
 19876  018308  0EFF               	movlw	255
 19877  01830A  22DA               	addwfc	fsr2h,f,c
 19878  01830C  006F FF7B FFF6     	movff	postinc2,tblptrl
 19879  018312  006F FF77 FFF7     	movff	postdec2,tblptrh
 19880  018318                     	if	0	;tblptru may be non-zero
 19881  018318                     	endif
 19882  018318                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19883  018318  0E00               	movlw	low (__mediumconst shr (0+16))
 19884  01831A  6EF8               	movwf	tblptru,c
 19885  01831C                     	endif
 19886                           
 19887                           ;stkvar	_cp @ sp[(-4)+0]
 19888  01831C  0EFC               	movlw	-4
 19889  01831E  006F FF8F FFD9     	movff	plusw1,fsr2l
 19890  018324  0EFD               	movlw	-3
 19891  018326  006F FF8F FFDA     	movff	plusw1,fsr2h
 19892  01832C  0008               	tblrd		*
 19893  01832E  006F FFD7 FFDF     	movff	tablat,indf2
 19894                           
 19895                           ;stkvar	_s @ sp[(-4)+2]
 19896  018334  0EFE               	movlw	-2
 19897  018336  50E3               	movf	plusw1,w,c
 19898  018338  0F01               	addlw	1
 19899  01833A  6E2A               	movwf	btemp^0,c
 19900  01833C  0EFE               	movlw	-2
 19901  01833E  0060  F0AB  FFE3   	movff	btemp,plusw1
 19902  018344  6A2A               	clrf	btemp^0,c
 19903  018346  0EFF               	movlw	-1
 19904  018348  50E3               	movf	plusw1,w,c
 19905  01834A  202A               	addwfc	btemp^0,w,c
 19906  01834C  6E2A               	movwf	btemp^0,c
 19907  01834E  0EFF               	movlw	-1
 19908  018350  0060  F0AB  FFE3   	movff	btemp,plusw1
 19909                           
 19910                           ;stkvar	_cp @ sp[(-4)+0]
 19911  018356  0EFC               	movlw	-4
 19912  018358  50E3               	movf	plusw1,w,c
 19913  01835A  0F01               	addlw	1
 19914  01835C  6E2A               	movwf	btemp^0,c
 19915  01835E  0EFC               	movlw	-4
 19916  018360  0060  F0AB  FFE3   	movff	btemp,plusw1
 19917  018366  6A2A               	clrf	btemp^0,c
 19918  018368  0EFD               	movlw	-3
 19919  01836A  50E3               	movf	plusw1,w,c
 19920  01836C  202A               	addwfc	btemp^0,w,c
 19921  01836E  6E2A               	movwf	btemp^0,c
 19922  018370  0EFD               	movlw	-3
 19923  018372  0060  F0AB  FFE3   	movff	btemp,plusw1
 19924                           
 19925                           ;stkvar	_s @ sp[(-4)+2]
 19926  018378  50E1               	movf	fsr1l,w,c
 19927  01837A  0FFE               	addlw	-2
 19928  01837C  6ED9               	movwf	fsr2l,c
 19929  01837E  50E2               	movf	fsr1h,w,c
 19930  018380  6EDA               	movwf	fsr2h,c
 19931  018382  0EFF               	movlw	255
 19932  018384  22DA               	addwfc	fsr2h,f,c
 19933  018386  006F FF7B FFF6     	movff	postinc2,tblptrl
 19934  01838C  006F FF77 FFF7     	movff	postdec2,tblptrh
 19935  018392                     	if	0	;tblptru may be non-zero
 19936  018392                     	endif
 19937  018392                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19938  018392  0E00               	movlw	low (__mediumconst shr (0+16))
 19939  018394  6EF8               	movwf	tblptru,c
 19940  018396                     	endif
 19941                           
 19942                           ;stkvar	_cp @ sp[(-4)+0]
 19943  018396  0EFC               	movlw	-4
 19944  018398  006F FF8F FFD9     	movff	plusw1,fsr2l
 19945  01839E  0EFD               	movlw	-3
 19946  0183A0  006F FF8F FFDA     	movff	plusw1,fsr2h
 19947  0183A6  0008               	tblrd		*
 19948  0183A8  006F FFD7 FFDF     	movff	tablat,indf2
 19949                           
 19950                           ;stkvar	_s @ sp[(-4)+2]
 19951  0183AE  0EFE               	movlw	-2
 19952  0183B0  50E3               	movf	plusw1,w,c
 19953  0183B2  0F01               	addlw	1
 19954  0183B4  6E2A               	movwf	btemp^0,c
 19955  0183B6  0EFE               	movlw	-2
 19956  0183B8  0060  F0AB  FFE3   	movff	btemp,plusw1
 19957  0183BE  6A2A               	clrf	btemp^0,c
 19958  0183C0  0EFF               	movlw	-1
 19959  0183C2  50E3               	movf	plusw1,w,c
 19960  0183C4  202A               	addwfc	btemp^0,w,c
 19961  0183C6  6E2A               	movwf	btemp^0,c
 19962  0183C8  0EFF               	movlw	-1
 19963  0183CA  0060  F0AB  FFE3   	movff	btemp,plusw1
 19964                           
 19965                           ;stkvar	_cp @ sp[(-4)+0]
 19966  0183D0  0EFC               	movlw	-4
 19967  0183D2  50E3               	movf	plusw1,w,c
 19968  0183D4  0F01               	addlw	1
 19969  0183D6  6E2A               	movwf	btemp^0,c
 19970  0183D8  0EFC               	movlw	-4
 19971  0183DA  0060  F0AB  FFE3   	movff	btemp,plusw1
 19972  0183E0  6A2A               	clrf	btemp^0,c
 19973  0183E2  0EFD               	movlw	-3
 19974  0183E4  50E3               	movf	plusw1,w,c
 19975  0183E6  202A               	addwfc	btemp^0,w,c
 19976  0183E8  6E2A               	movwf	btemp^0,c
 19977  0183EA  0EFD               	movlw	-3
 19978  0183EC  0060  F0AB  FFE3   	movff	btemp,plusw1
 19979                           
 19980                           ;stkvar	_s @ sp[(-4)+2]
 19981  0183F2  50E1               	movf	fsr1l,w,c
 19982  0183F4  0FFE               	addlw	-2
 19983  0183F6  6ED9               	movwf	fsr2l,c
 19984  0183F8  50E2               	movf	fsr1h,w,c
 19985  0183FA  6EDA               	movwf	fsr2h,c
 19986  0183FC  0EFF               	movlw	255
 19987  0183FE  22DA               	addwfc	fsr2h,f,c
 19988  018400  006F FF7B FFF6     	movff	postinc2,tblptrl
 19989  018406  006F FF77 FFF7     	movff	postdec2,tblptrh
 19990  01840C                     	if	0	;tblptru may be non-zero
 19991  01840C                     	endif
 19992  01840C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19993  01840C  0E00               	movlw	low (__mediumconst shr (0+16))
 19994  01840E  6EF8               	movwf	tblptru,c
 19995  018410                     	endif
 19996                           
 19997                           ;stkvar	_cp @ sp[(-4)+0]
 19998  018410  0EFC               	movlw	-4
 19999  018412  006F FF8F FFD9     	movff	plusw1,fsr2l
 20000  018418  0EFD               	movlw	-3
 20001  01841A  006F FF8F FFDA     	movff	plusw1,fsr2h
 20002  018420  0008               	tblrd		*
 20003  018422  006F FFD7 FFDF     	movff	tablat,indf2
 20004                           
 20005                           ;stkvar	_cp @ sp[(-4)+0]
 20006  018428  0EFC               	movlw	-4
 20007  01842A  50E3               	movf	plusw1,w,c
 20008  01842C  0F01               	addlw	1
 20009  01842E  6E2A               	movwf	btemp^0,c
 20010  018430  0EFC               	movlw	-4
 20011  018432  0060  F0AB  FFE3   	movff	btemp,plusw1
 20012  018438  6A2A               	clrf	btemp^0,c
 20013  01843A  0EFD               	movlw	-3
 20014  01843C  50E3               	movf	plusw1,w,c
 20015  01843E  202A               	addwfc	btemp^0,w,c
 20016  018440  6E2A               	movwf	btemp^0,c
 20017  018442  0EFD               	movlw	-3
 20018  018444  0060  F0AB  FFE3   	movff	btemp,plusw1
 20019                           
 20020                           ;stkvar	_cp @ sp[(-4)+0]
 20021  01844A  0EFC               	movlw	-4
 20022  01844C  006F FF8F FFD9     	movff	plusw1,fsr2l
 20023  018452  0EFD               	movlw	-3
 20024  018454  006F FF8F FFDA     	movff	plusw1,fsr2h
 20025  01845A  0E20               	movlw	32
 20026  01845C  6EDF               	movwf	indf2,c
 20027                           
 20028                           ;stkvar	_cp @ sp[(-4)+0]
 20029  01845E  0EFC               	movlw	-4
 20030  018460  50E3               	movf	plusw1,w,c
 20031  018462  0F01               	addlw	1
 20032  018464  6E2A               	movwf	btemp^0,c
 20033  018466  0EFC               	movlw	-4
 20034  018468  0060  F0AB  FFE3   	movff	btemp,plusw1
 20035  01846E  6A2A               	clrf	btemp^0,c
 20036  018470  0EFD               	movlw	-3
 20037  018472  50E3               	movf	plusw1,w,c
 20038  018474  202A               	addwfc	btemp^0,w,c
 20039  018476  6E2A               	movwf	btemp^0,c
 20040  018478  0EFD               	movlw	-3
 20041  01847A  0060  F0AB  FFE3   	movff	btemp,plusw1
 20042                           
 20043                           ;stkvar	_tim @ sp[(-4)+-2]
 20044  018480  0EFA               	movlw	-6
 20045  018482  006F FF8C  F034    	movff	plusw1,btemp+10
 20046  018488  0EFB               	movlw	-5
 20047  01848A  006F FF8C  F035    	movff	plusw1,btemp+11
 20048  018490  0E08               	movlw	8
 20049  018492  2434               	addwf	(btemp+10)^0,w,c
 20050  018494  6ED9               	movwf	fsr2l,c
 20051  018496  0E00               	movlw	0
 20052  018498  2035               	addwfc	(btemp+11)^0,w,c
 20053  01849A  6EDA               	movwf	fsr2h,c
 20054  01849C  006F FF78  F034    	movff	postinc2,btemp+10
 20055  0184A2  006F FF74  F035    	movff	postdec2,btemp+11
 20056  0184A8  0E03               	movlw	3
 20057  0184AA  0234               	mulwf	(btemp+10)^0,c
 20058  0184AC  006F FFCC  F032    	movff	prodl,btemp+8
 20059  0184B2  006F FFD0  F033    	movff	prodh,btemp+9
 20060  0184B8  0235               	mulwf	(btemp+11)^0,c
 20061  0184BA  50F3               	movf	prodl,w,c
 20062  0184BC  2633               	addwf	(btemp+9)^0,f,c
 20063  0184BE  0E76               	movlw	low STR_133
 20064  0184C0  6E34               	movwf	(btemp+10)^0,c
 20065  0184C2  0EFA               	movlw	high STR_133
 20066  0184C4  6E35               	movwf	(btemp+11)^0,c
 20067  0184C6  5032               	movf	(btemp+8)^0,w,c
 20068  0184C8  2634               	addwf	(btemp+10)^0,f,c
 20069  0184CA  5033               	movf	(btemp+9)^0,w,c
 20070  0184CC  2235               	addwfc	(btemp+11)^0,f,c
 20071                           
 20072                           ;stkvar	_s @ sp[(-4)+2]
 20073  0184CE  0EFF               	movlw	-1
 20074  0184D0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 20075  0184D6  0EFE               	movlw	-2
 20076  0184D8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 20077                           
 20078                           ;stkvar	_s @ sp[(-4)+2]
 20079  0184DE  50E1               	movf	fsr1l,w,c
 20080  0184E0  0FFE               	addlw	-2
 20081  0184E2  6ED9               	movwf	fsr2l,c
 20082  0184E4  50E2               	movf	fsr1h,w,c
 20083  0184E6  6EDA               	movwf	fsr2h,c
 20084  0184E8  0EFF               	movlw	255
 20085  0184EA  22DA               	addwfc	fsr2h,f,c
 20086  0184EC  006F FF7B FFF6     	movff	postinc2,tblptrl
 20087  0184F2  006F FF77 FFF7     	movff	postdec2,tblptrh
 20088  0184F8                     	if	0	;tblptru may be non-zero
 20089  0184F8                     	endif
 20090  0184F8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20091  0184F8  0E00               	movlw	low (__mediumconst shr (0+16))
 20092  0184FA  6EF8               	movwf	tblptru,c
 20093  0184FC                     	endif
 20094                           
 20095                           ;stkvar	_cp @ sp[(-4)+0]
 20096  0184FC  0EFC               	movlw	-4
 20097  0184FE  006F FF8F FFD9     	movff	plusw1,fsr2l
 20098  018504  0EFD               	movlw	-3
 20099  018506  006F FF8F FFDA     	movff	plusw1,fsr2h
 20100  01850C  0008               	tblrd		*
 20101  01850E  006F FFD7 FFDF     	movff	tablat,indf2
 20102                           
 20103                           ;stkvar	_s @ sp[(-4)+2]
 20104  018514  0EFE               	movlw	-2
 20105  018516  50E3               	movf	plusw1,w,c
 20106  018518  0F01               	addlw	1
 20107  01851A  6E2A               	movwf	btemp^0,c
 20108  01851C  0EFE               	movlw	-2
 20109  01851E  0060  F0AB  FFE3   	movff	btemp,plusw1
 20110  018524  6A2A               	clrf	btemp^0,c
 20111  018526  0EFF               	movlw	-1
 20112  018528  50E3               	movf	plusw1,w,c
 20113  01852A  202A               	addwfc	btemp^0,w,c
 20114  01852C  6E2A               	movwf	btemp^0,c
 20115  01852E  0EFF               	movlw	-1
 20116  018530  0060  F0AB  FFE3   	movff	btemp,plusw1
 20117                           
 20118                           ;stkvar	_cp @ sp[(-4)+0]
 20119  018536  0EFC               	movlw	-4
 20120  018538  50E3               	movf	plusw1,w,c
 20121  01853A  0F01               	addlw	1
 20122  01853C  6E2A               	movwf	btemp^0,c
 20123  01853E  0EFC               	movlw	-4
 20124  018540  0060  F0AB  FFE3   	movff	btemp,plusw1
 20125  018546  6A2A               	clrf	btemp^0,c
 20126  018548  0EFD               	movlw	-3
 20127  01854A  50E3               	movf	plusw1,w,c
 20128  01854C  202A               	addwfc	btemp^0,w,c
 20129  01854E  6E2A               	movwf	btemp^0,c
 20130  018550  0EFD               	movlw	-3
 20131  018552  0060  F0AB  FFE3   	movff	btemp,plusw1
 20132                           
 20133                           ;stkvar	_s @ sp[(-4)+2]
 20134  018558  50E1               	movf	fsr1l,w,c
 20135  01855A  0FFE               	addlw	-2
 20136  01855C  6ED9               	movwf	fsr2l,c
 20137  01855E  50E2               	movf	fsr1h,w,c
 20138  018560  6EDA               	movwf	fsr2h,c
 20139  018562  0EFF               	movlw	255
 20140  018564  22DA               	addwfc	fsr2h,f,c
 20141  018566  006F FF7B FFF6     	movff	postinc2,tblptrl
 20142  01856C  006F FF77 FFF7     	movff	postdec2,tblptrh
 20143  018572                     	if	0	;tblptru may be non-zero
 20144  018572                     	endif
 20145  018572                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20146  018572  0E00               	movlw	low (__mediumconst shr (0+16))
 20147  018574  6EF8               	movwf	tblptru,c
 20148  018576                     	endif
 20149                           
 20150                           ;stkvar	_cp @ sp[(-4)+0]
 20151  018576  0EFC               	movlw	-4
 20152  018578  006F FF8F FFD9     	movff	plusw1,fsr2l
 20153  01857E  0EFD               	movlw	-3
 20154  018580  006F FF8F FFDA     	movff	plusw1,fsr2h
 20155  018586  0008               	tblrd		*
 20156  018588  006F FFD7 FFDF     	movff	tablat,indf2
 20157                           
 20158                           ;stkvar	_s @ sp[(-4)+2]
 20159  01858E  0EFE               	movlw	-2
 20160  018590  50E3               	movf	plusw1,w,c
 20161  018592  0F01               	addlw	1
 20162  018594  6E2A               	movwf	btemp^0,c
 20163  018596  0EFE               	movlw	-2
 20164  018598  0060  F0AB  FFE3   	movff	btemp,plusw1
 20165  01859E  6A2A               	clrf	btemp^0,c
 20166  0185A0  0EFF               	movlw	-1
 20167  0185A2  50E3               	movf	plusw1,w,c
 20168  0185A4  202A               	addwfc	btemp^0,w,c
 20169  0185A6  6E2A               	movwf	btemp^0,c
 20170  0185A8  0EFF               	movlw	-1
 20171  0185AA  0060  F0AB  FFE3   	movff	btemp,plusw1
 20172                           
 20173                           ;stkvar	_cp @ sp[(-4)+0]
 20174  0185B0  0EFC               	movlw	-4
 20175  0185B2  50E3               	movf	plusw1,w,c
 20176  0185B4  0F01               	addlw	1
 20177  0185B6  6E2A               	movwf	btemp^0,c
 20178  0185B8  0EFC               	movlw	-4
 20179  0185BA  0060  F0AB  FFE3   	movff	btemp,plusw1
 20180  0185C0  6A2A               	clrf	btemp^0,c
 20181  0185C2  0EFD               	movlw	-3
 20182  0185C4  50E3               	movf	plusw1,w,c
 20183  0185C6  202A               	addwfc	btemp^0,w,c
 20184  0185C8  6E2A               	movwf	btemp^0,c
 20185  0185CA  0EFD               	movlw	-3
 20186  0185CC  0060  F0AB  FFE3   	movff	btemp,plusw1
 20187                           
 20188                           ;stkvar	_s @ sp[(-4)+2]
 20189  0185D2  50E1               	movf	fsr1l,w,c
 20190  0185D4  0FFE               	addlw	-2
 20191  0185D6  6ED9               	movwf	fsr2l,c
 20192  0185D8  50E2               	movf	fsr1h,w,c
 20193  0185DA  6EDA               	movwf	fsr2h,c
 20194  0185DC  0EFF               	movlw	255
 20195  0185DE  22DA               	addwfc	fsr2h,f,c
 20196  0185E0  006F FF7B FFF6     	movff	postinc2,tblptrl
 20197  0185E6  006F FF77 FFF7     	movff	postdec2,tblptrh
 20198  0185EC                     	if	0	;tblptru may be non-zero
 20199  0185EC                     	endif
 20200  0185EC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20201  0185EC  0E00               	movlw	low (__mediumconst shr (0+16))
 20202  0185EE  6EF8               	movwf	tblptru,c
 20203  0185F0                     	endif
 20204                           
 20205                           ;stkvar	_cp @ sp[(-4)+0]
 20206  0185F0  0EFC               	movlw	-4
 20207  0185F2  006F FF8F FFD9     	movff	plusw1,fsr2l
 20208  0185F8  0EFD               	movlw	-3
 20209  0185FA  006F FF8F FFDA     	movff	plusw1,fsr2h
 20210  018600  0008               	tblrd		*
 20211  018602  006F FFD7 FFDF     	movff	tablat,indf2
 20212  018608  0E20               	movlw	32
 20213  01860A  0103               	movlb	3	; () banked
 20214  01860C  6FCB               	movwf	(asctime@buf+7)& (0+255),b
 20215                           
 20216                           ; BSR set to: 3
 20217  01860E  0E20               	movlw	32
 20218  018610  6EE6               	movwf	postinc1,c
 20219  018612  0E20               	movlw	32
 20220  018614  6EE6               	movwf	postinc1,c
 20221                           
 20222                           ;stkvar	_tim @ sp[(-6)+-2]
 20223  018616  0EF8               	movlw	-8
 20224  018618  006F FF8C  F034    	movff	plusw1,btemp+10
 20225  01861E  0EF9               	movlw	-7
 20226  018620  006F FF8C  F035    	movff	plusw1,btemp+11
 20227  018626  0E06               	movlw	6
 20228  018628  2434               	addwf	(btemp+10)^0,w,c
 20229  01862A  6ED9               	movwf	fsr2l,c
 20230  01862C  0E00               	movlw	0
 20231  01862E  2035               	addwfc	(btemp+11)^0,w,c
 20232  018630  6EDA               	movwf	fsr2h,c
 20233  018632  50DF               	movf	indf2,w,c
 20234  018634  6EE6               	movwf	postinc1,c
 20235  018636  0ECE               	movlw	low (asctime@buf+10)
 20236  018638  6EE6               	movwf	postinc1,c
 20237  01863A  0E03               	movlw	high (asctime@buf+10)
 20238  01863C  6EE6               	movwf	postinc1,c
 20239  01863E  EC76  F0FB         	call	_put2d	;wreg free
 20240  018642  0E3A               	movlw	58
 20241  018644  6EE6               	movwf	postinc1,c
 20242  018646  0E30               	movlw	48
 20243  018648  6EE6               	movwf	postinc1,c
 20244                           
 20245                           ;stkvar	_tim @ sp[(-6)+-2]
 20246  01864A  0EF8               	movlw	-8
 20247  01864C  006F FF8C  F034    	movff	plusw1,btemp+10
 20248  018652  0EF9               	movlw	-7
 20249  018654  006F FF8C  F035    	movff	plusw1,btemp+11
 20250  01865A  0E04               	movlw	4
 20251  01865C  2434               	addwf	(btemp+10)^0,w,c
 20252  01865E  6ED9               	movwf	fsr2l,c
 20253  018660  0E00               	movlw	0
 20254  018662  2035               	addwfc	(btemp+11)^0,w,c
 20255  018664  6EDA               	movwf	fsr2h,c
 20256  018666  50DF               	movf	indf2,w,c
 20257  018668  6EE6               	movwf	postinc1,c
 20258  01866A  0ED1               	movlw	low (asctime@buf+13)
 20259  01866C  6EE6               	movwf	postinc1,c
 20260  01866E  0E03               	movlw	high (asctime@buf+13)
 20261  018670  6EE6               	movwf	postinc1,c
 20262  018672  EC76  F0FB         	call	_put2d	;wreg free
 20263  018676  0E3A               	movlw	58
 20264  018678  6EE6               	movwf	postinc1,c
 20265  01867A  0E30               	movlw	48
 20266  01867C  6EE6               	movwf	postinc1,c
 20267                           
 20268                           ;stkvar	_tim @ sp[(-6)+-2]
 20269  01867E  0EF8               	movlw	-8
 20270  018680  006F FF8C  F034    	movff	plusw1,btemp+10
 20271  018686  0EF9               	movlw	-7
 20272  018688  006F FF8C  F035    	movff	plusw1,btemp+11
 20273  01868E  0E02               	movlw	2
 20274  018690  2434               	addwf	(btemp+10)^0,w,c
 20275  018692  6ED9               	movwf	fsr2l,c
 20276  018694  0E00               	movlw	0
 20277  018696  2035               	addwfc	(btemp+11)^0,w,c
 20278  018698  6EDA               	movwf	fsr2h,c
 20279  01869A  50DF               	movf	indf2,w,c
 20280  01869C  6EE6               	movwf	postinc1,c
 20281  01869E  0ED4               	movlw	low (asctime@buf+16)
 20282  0186A0  6EE6               	movwf	postinc1,c
 20283  0186A2  0E03               	movlw	high (asctime@buf+16)
 20284  0186A4  6EE6               	movwf	postinc1,c
 20285  0186A6  EC76  F0FB         	call	_put2d	;wreg free
 20286  0186AA  0E20               	movlw	32
 20287  0186AC  6EE6               	movwf	postinc1,c
 20288  0186AE  0E30               	movlw	48
 20289  0186B0  6EE6               	movwf	postinc1,c
 20290                           
 20291                           ;stkvar	_tim @ sp[(-6)+-2]
 20292  0186B2  0EF8               	movlw	-8
 20293  0186B4  006F FF8F FFD9     	movff	plusw1,fsr2l
 20294  0186BA  0EF9               	movlw	-7
 20295  0186BC  006F FF8F FFDA     	movff	plusw1,fsr2h
 20296  0186C2  50DF               	movf	indf2,w,c
 20297  0186C4  6EE6               	movwf	postinc1,c
 20298  0186C6  0ED7               	movlw	low (asctime@buf+19)
 20299  0186C8  6EE6               	movwf	postinc1,c
 20300  0186CA  0E03               	movlw	high (asctime@buf+19)
 20301  0186CC  6EE6               	movwf	postinc1,c
 20302  0186CE  EC76  F0FB         	call	_put2d	;wreg free
 20303  0186D2  0E00               	movlw	0
 20304  0186D4  6EE6               	movwf	postinc1,c
 20305  0186D6  0E20               	movlw	32
 20306  0186D8  6EE6               	movwf	postinc1,c
 20307  0186DA  0E64               	movlw	100
 20308  0186DC  6EE6               	movwf	postinc1,c
 20309  0186DE  0E00               	movlw	0
 20310  0186E0  6EE6               	movwf	postinc1,c
 20311                           
 20312                           ;stkvar	_tim @ sp[(-8)+-2]
 20313  0186E2  0EF6               	movlw	-10
 20314  0186E4  006F FF8C  F034    	movff	plusw1,btemp+10
 20315  0186EA  0EF7               	movlw	-9
 20316  0186EC  006F FF8C  F035    	movff	plusw1,btemp+11
 20317  0186F2  0E0A               	movlw	10
 20318  0186F4  2434               	addwf	(btemp+10)^0,w,c
 20319  0186F6  6ED9               	movwf	fsr2l,c
 20320  0186F8  0E00               	movlw	0
 20321  0186FA  2035               	addwfc	(btemp+11)^0,w,c
 20322  0186FC  6EDA               	movwf	fsr2h,c
 20323  0186FE  006F FF78  F034    	movff	postinc2,btemp+10
 20324  018704  006F FF74  F035    	movff	postdec2,btemp+11
 20325  01870A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 20326  018710  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 20327  018716  EC60  F0F8         	call	___awdiv	;wreg free
 20328  01871A  502A               	movf	btemp^0,w,c
 20329  01871C  0F13               	addlw	19
 20330  01871E  6EE6               	movwf	postinc1,c
 20331  018720  0EDA               	movlw	low (asctime@buf+22)
 20332  018722  6EE6               	movwf	postinc1,c
 20333  018724  0E03               	movlw	high (asctime@buf+22)
 20334  018726  6EE6               	movwf	postinc1,c
 20335  018728  EC76  F0FB         	call	_put2d	;wreg free
 20336  01872C  0E0A               	movlw	10
 20337  01872E  6EE6               	movwf	postinc1,c
 20338  018730  0E30               	movlw	48
 20339  018732  6EE6               	movwf	postinc1,c
 20340  018734  0E64               	movlw	100
 20341  018736  6EE6               	movwf	postinc1,c
 20342  018738  0E00               	movlw	0
 20343  01873A  6EE6               	movwf	postinc1,c
 20344                           
 20345                           ;stkvar	_tim @ sp[(-8)+-2]
 20346  01873C  0EF6               	movlw	-10
 20347  01873E  006F FF8C  F034    	movff	plusw1,btemp+10
 20348  018744  0EF7               	movlw	-9
 20349  018746  006F FF8C  F035    	movff	plusw1,btemp+11
 20350  01874C  0E0A               	movlw	10
 20351  01874E  2434               	addwf	(btemp+10)^0,w,c
 20352  018750  6ED9               	movwf	fsr2l,c
 20353  018752  0E00               	movlw	0
 20354  018754  2035               	addwfc	(btemp+11)^0,w,c
 20355  018756  6EDA               	movwf	fsr2h,c
 20356  018758  006F FF78  F034    	movff	postinc2,btemp+10
 20357  01875E  006F FF74  F035    	movff	postdec2,btemp+11
 20358  018764  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 20359  01876A  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 20360  018770  EC8F  F0FC         	call	___awmod	;wreg free
 20361  018774  502A               	movf	btemp^0,w,c
 20362  018776  6EE6               	movwf	postinc1,c
 20363  018778  0EDC               	movlw	low (asctime@buf+24)
 20364  01877A  6EE6               	movwf	postinc1,c
 20365  01877C  0E03               	movlw	high (asctime@buf+24)
 20366  01877E  6EE6               	movwf	postinc1,c
 20367  018780  EC76  F0FB         	call	_put2d	;wreg free
 20368  018784  0EC4               	movlw	low asctime@buf
 20369  018786  6E2A               	movwf	btemp^0,c
 20370  018788  0E03               	movlw	high asctime@buf
 20371  01878A  6E2B               	movwf	(btemp+1)^0,c
 20372                           
 20373                           ; _asctime: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20374  01878C  0EFA               	movlw	250
 20375  01878E  26E1               	addwf	fsr1l,f,c
 20376  018790  0EFF               	movlw	255
 20377  018792  22E2               	addwfc	fsr1h,f,c
 20378  018794  0012               	return		;funcret
 20379  018796                     __end_of_asctime:
 20380                           	opt callstack 0
 20381                           
 20382 ;; *************** function _put2d *****************
 20383 ;; Defined at:
 20384 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/asctime.c"
 20385 ;; Parameters:    Size  Location     Type
 20386 ;;  cp              2  [STACK] PTR unsigned char 
 20387 ;;		 -> asctime@buf(27), 
 20388 ;;  i               1  [STACK] unsigned char 
 20389 ;;  cl              1  [STACK] unsigned char 
 20390 ;;  ct              1  [STACK] unsigned char 
 20391 ;; Auto vars:     Size  Location     Type
 20392 ;;		None
 20393 ;; Return value:  Size  Location     Type
 20394 ;;                  1  [STACK] void 
 20395 ;; Registers used:
 20396 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 20397 ;; Tracked objects:
 20398 ;;		On entry : 0/3
 20399 ;;		On exit  : 0/0
 20400 ;;		Unchanged: 0/0
 20401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20406 ;;Total ram usage:        0 bytes
 20407 ;; Hardware stack levels used:    1
 20408 ;; Hardware stack levels required when called:   16
 20409 ;; This function calls:
 20410 ;;		___awdiv
 20411 ;;		___lbmod
 20412 ;; This function is called by:
 20413 ;;		_asctime
 20414 ;; This function uses a reentrant model
 20415 ;;
 20416                           
 20417                           	psect	text56
 20418  01F6EC                     __ptext56:
 20419                           	opt callstack 0
 20420  01F6EC                     _put2d:
 20421                           	opt callstack 12
 20422                           
 20423                           ;stkvar	_ct @ sp[(0)+-5]
 20424                           ;stkvar	_cp @ sp[(0)+-2]
 20425                           
 20426                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20427                           ;incstack = 0
 20428  01F6EC  0EFE               	movlw	-2
 20429  01F6EE  006F FF8F FFD9     	movff	plusw1,fsr2l
 20430  01F6F4  0EFF               	movlw	-1
 20431  01F6F6  006F FF8F FFDA     	movff	plusw1,fsr2h
 20432  01F6FC  0EFB               	movlw	-5
 20433  01F6FE  006F FF8F FFDF     	movff	plusw1,indf2
 20434  01F704  0E0A               	movlw	10
 20435  01F706  6EE6               	movwf	postinc1,c
 20436                           
 20437                           ;stkvar	_i @ sp[(-1)+-3]
 20438  01F708  0EFC               	movlw	-4
 20439  01F70A  50E3               	movf	plusw1,w,c
 20440  01F70C  6EE6               	movwf	postinc1,c
 20441  01F70E  EC65  F006         	call	___lbmod	;wreg free
 20442  01F712  0E30               	movlw	48
 20443  01F714  262A               	addwf	btemp^0,f,c
 20444                           
 20445                           ;stkvar	_cp @ sp[(0)+-2]
 20446  01F716  0EFE               	movlw	-2
 20447  01F718  006F FF8C  F02B    	movff	plusw1,btemp+1
 20448  01F71E  0E01               	movlw	1
 20449  01F720  5E2B               	subwf	(btemp+1)^0,f,c
 20450  01F722  0EFE               	movlw	-2
 20451  01F724  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 20452  01F72A  0EFF               	movlw	-1
 20453  01F72C  006F FF8C  F02B    	movff	plusw1,btemp+1
 20454  01F732  0E00               	movlw	0
 20455  01F734  5A2B               	subwfb	(btemp+1)^0,f,c
 20456  01F736  0EFF               	movlw	-1
 20457  01F738  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 20458  01F73E  0EFE               	movlw	-2
 20459  01F740  006F FF8F FFD9     	movff	plusw1,fsr2l
 20460  01F746  0EFF               	movlw	-1
 20461  01F748  006F FF8F FFDA     	movff	plusw1,fsr2h
 20462  01F74E  0060  F0AB  FFDF   	movff	btemp,indf2
 20463  01F754  0E0A               	movlw	10
 20464  01F756  6EE6               	movwf	postinc1,c
 20465  01F758  0E00               	movlw	0
 20466  01F75A  6EE6               	movwf	postinc1,c
 20467                           
 20468                           ;stkvar	_i @ sp[(-2)+-3]
 20469  01F75C  0EFB               	movlw	-5
 20470  01F75E  50E3               	movf	plusw1,w,c
 20471  01F760  6EE6               	movwf	postinc1,c
 20472  01F762  0E00               	movlw	0
 20473  01F764  6EE6               	movwf	postinc1,c
 20474  01F766  EC60  F0F8         	call	___awdiv	;wreg free
 20475                           
 20476                           ;stkvar	_i @ sp[(0)+-3]
 20477  01F76A  0EFD               	movlw	-3
 20478  01F76C  0060  F0AB  FFE3   	movff	btemp,plusw1
 20479  01F772  0EFD               	movlw	-3
 20480  01F774  50E3               	movf	plusw1,w,c
 20481  01F776  B4D8               	btfsc	status,2,c
 20482  01F778  D021               	goto	l16908
 20483                           
 20484                           ;stkvar	_cp @ sp[(0)+-2]
 20485  01F77A  0EFE               	movlw	-2
 20486  01F77C  006F FF8C  F02A    	movff	plusw1,btemp
 20487  01F782  0E01               	movlw	1
 20488  01F784  5E2A               	subwf	btemp^0,f,c
 20489  01F786  0EFE               	movlw	-2
 20490  01F788  0060  F0AB  FFE3   	movff	btemp,plusw1
 20491  01F78E  0EFF               	movlw	-1
 20492  01F790  006F FF8C  F02A    	movff	plusw1,btemp
 20493  01F796  0E00               	movlw	0
 20494  01F798  5A2A               	subwfb	btemp^0,f,c
 20495  01F79A  0EFF               	movlw	-1
 20496  01F79C  0060  F0AB  FFE3   	movff	btemp,plusw1
 20497  01F7A2  0EFE               	movlw	-2
 20498  01F7A4  006F FF8F FFD9     	movff	plusw1,fsr2l
 20499  01F7AA  0EFF               	movlw	-1
 20500  01F7AC  006F FF8F FFDA     	movff	plusw1,fsr2h
 20501                           
 20502                           ;stkvar	_i @ sp[(0)+-3]
 20503  01F7B2  0EFD               	movlw	-3
 20504  01F7B4  50E3               	movf	plusw1,w,c
 20505  01F7B6  0F30               	addlw	48
 20506  01F7B8  6EDF               	movwf	indf2,c
 20507  01F7BA  D020               	goto	l3422
 20508  01F7BC                     l16908:
 20509                           
 20510                           ;stkvar	_cl @ sp[(0)+-4]
 20511                           ;stkvar	_cp @ sp[(0)+-2]
 20512  01F7BC  0EFE               	movlw	-2
 20513  01F7BE  006F FF8C  F02A    	movff	plusw1,btemp
 20514  01F7C4  0E01               	movlw	1
 20515  01F7C6  5E2A               	subwf	btemp^0,f,c
 20516  01F7C8  0EFE               	movlw	-2
 20517  01F7CA  0060  F0AB  FFE3   	movff	btemp,plusw1
 20518  01F7D0  0EFF               	movlw	-1
 20519  01F7D2  006F FF8C  F02A    	movff	plusw1,btemp
 20520  01F7D8  0E00               	movlw	0
 20521  01F7DA  5A2A               	subwfb	btemp^0,f,c
 20522  01F7DC  0EFF               	movlw	-1
 20523  01F7DE  0060  F0AB  FFE3   	movff	btemp,plusw1
 20524  01F7E4  0EFE               	movlw	-2
 20525  01F7E6  006F FF8F FFD9     	movff	plusw1,fsr2l
 20526  01F7EC  0EFF               	movlw	-1
 20527  01F7EE  006F FF8F FFDA     	movff	plusw1,fsr2h
 20528  01F7F4  0EFC               	movlw	-4
 20529  01F7F6  006F FF8F FFDF     	movff	plusw1,indf2
 20530  01F7FC                     l3422:
 20531                           
 20532                           ; _put2d: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize
      +                           = 5, vargsize = 0
 20533  01F7FC  0EFB               	movlw	251
 20534  01F7FE  26E1               	addwf	fsr1l,f,c
 20535  01F800  0EFF               	movlw	255
 20536  01F802  22E2               	addwfc	fsr1h,f,c
 20537  01F804  0012               	return		;funcret
 20538  01F806                     __end_of_put2d:
 20539                           	opt callstack 0
 20540                           
 20541 ;; *************** function ___lbmod *****************
 20542 ;; Defined at:
 20543 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lbmod.c"
 20544 ;; Parameters:    Size  Location     Type
 20545 ;;  dividend        1  [STACK] unsigned char 
 20546 ;;  divisor         1  [STACK] unsigned char 
 20547 ;; Auto vars:     Size  Location     Type
 20548 ;;  rem             1  [STACK] unsigned char 
 20549 ;;  counter         1  [STACK] unsigned char 
 20550 ;; Return value:  Size  Location     Type
 20551 ;;                  1  [STACK] unsigned char 
 20552 ;; Registers used:
 20553 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 20554 ;; Tracked objects:
 20555 ;;		On entry : 0/3
 20556 ;;		On exit  : 0/0
 20557 ;;		Unchanged: 0/0
 20558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20563 ;;Total ram usage:        0 bytes
 20564 ;; Hardware stack levels used:    1
 20565 ;; Hardware stack levels required when called:   15
 20566 ;; This function calls:
 20567 ;;		Nothing
 20568 ;; This function is called by:
 20569 ;;		_put2d
 20570 ;; This function uses a reentrant model
 20571 ;;
 20572                           
 20573                           	psect	text57
 20574  000CCA                     __ptext57:
 20575                           	opt callstack 0
 20576  000CCA                     ___lbmod:
 20577                           	opt callstack 0
 20578                           
 20579                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20580  000CCA  52E6               	movf	postinc1,f,c
 20581  000CCC  52E6               	movf	postinc1,f,c
 20582                           
 20583                           ;stkvar	_counter @ sp[(-2)+1]
 20584                           
 20585                           ;incstack = 0
 20586  000CCE  0EFF               	movlw	-1
 20587  000CD0  6AE3               	clrf	plusw1,c
 20588  000CD2  86E3               	bsf	plusw1,3,c
 20589                           
 20590                           ;stkvar	_rem @ sp[(-2)+0]
 20591  000CD4  0EFE               	movlw	-2
 20592  000CD6  6AE3               	clrf	plusw1,c
 20593  000CD8                     l16648:
 20594                           
 20595                           ;stkvar	_dividend @ sp[(-2)+-1]
 20596  000CD8  0EFD               	movlw	-3
 20597  000CDA  006F FF8C  F035    	movff	plusw1,btemp+11
 20598                           
 20599                           ;stkvar	_rem @ sp[(-2)+0]
 20600  000CE0  0EFE               	movlw	-2
 20601  000CE2  006F FF8C  F034    	movff	plusw1,btemp+10
 20602  000CE8  90D8               	bcf	status,0,c
 20603  000CEA  3435               	rlcf	(btemp+11)^0,w,c
 20604  000CEC  3434               	rlcf	(btemp+10)^0,w,c
 20605  000CEE  6E35               	movwf	(btemp+11)^0,c
 20606                           
 20607                           ;stkvar	_rem @ sp[(-2)+0]
 20608  000CF0  0EFE               	movlw	-2
 20609  000CF2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 20610                           
 20611                           ;stkvar	_dividend @ sp[(-2)+-1]
 20612  000CF8  50E1               	movf	fsr1l,w,c
 20613  000CFA  0FFD               	addlw	-3
 20614  000CFC  6ED9               	movwf	fsr2l,c
 20615  000CFE  50E2               	movf	fsr1h,w,c
 20616  000D00  6EDA               	movwf	fsr2h,c
 20617  000D02  0EFF               	movlw	255
 20618  000D04  22DA               	addwfc	fsr2h,f,c
 20619  000D06  90D8               	bcf	status,0,c
 20620  000D08  36DF               	rlcf	indf2,f,c
 20621                           
 20622                           ;stkvar	_divisor @ sp[(-2)+-2]
 20623                           ;stkvar	_rem @ sp[(-2)+0]
 20624  000D0A  50E1               	movf	fsr1l,w,c
 20625  000D0C  0FFE               	addlw	-2
 20626  000D0E  6ED9               	movwf	fsr2l,c
 20627  000D10  50E2               	movf	fsr1h,w,c
 20628  000D12  6EDA               	movwf	fsr2h,c
 20629  000D14  0EFF               	movlw	255
 20630  000D16  22DA               	addwfc	fsr2h,f,c
 20631  000D18  0EFC               	movlw	-4
 20632  000D1A  50E3               	movf	plusw1,w,c
 20633  000D1C  5CDE               	subwf	postinc2,w,c
 20634  000D1E  A0D8               	btfss	status,0,c
 20635  000D20  D00D               	goto	l16656
 20636                           
 20637                           ;stkvar	_divisor @ sp[(-2)+-2]
 20638  000D22  0EFC               	movlw	-4
 20639  000D24  006F FF8C  F035    	movff	plusw1,btemp+11
 20640                           
 20641                           ;stkvar	_rem @ sp[(-2)+0]
 20642  000D2A  50E1               	movf	fsr1l,w,c
 20643  000D2C  0FFE               	addlw	-2
 20644  000D2E  6ED9               	movwf	fsr2l,c
 20645  000D30  50E2               	movf	fsr1h,w,c
 20646  000D32  6EDA               	movwf	fsr2h,c
 20647  000D34  0EFF               	movlw	255
 20648  000D36  22DA               	addwfc	fsr2h,f,c
 20649  000D38  5035               	movf	(btemp+11)^0,w,c
 20650  000D3A  5EDF               	subwf	indf2,f,c
 20651  000D3C                     l16656:
 20652                           
 20653                           ;stkvar	_counter @ sp[(-2)+1]
 20654  000D3C  0EFF               	movlw	-1
 20655  000D3E  50E3               	movf	plusw1,w,c
 20656  000D40  6E2A               	movwf	btemp^0,c
 20657  000D42  0E01               	movlw	1
 20658  000D44  5E2A               	subwf	btemp^0,f,c
 20659  000D46  0EFF               	movlw	-1
 20660  000D48  0060  F0AB  FFE3   	movff	btemp,plusw1
 20661  000D4E  A4D8               	btfss	status,2,c
 20662  000D50  D7C3               	goto	l16648
 20663                           
 20664                           ;stkvar	_rem @ sp[(-2)+0]
 20665  000D52  0EFE               	movlw	-2
 20666  000D54  006F FF8C  F02A    	movff	plusw1,btemp
 20667                           
 20668                           ; ___lbmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20669  000D5A  52E5               	movf	postdec1,f,c
 20670  000D5C  52E5               	movf	postdec1,f,c
 20671  000D5E  52E5               	movf	postdec1,f,c
 20672  000D60  52E5               	movf	postdec1,f,c
 20673  000D62  0012               	return		;funcret
 20674  000D64                     __end_of___lbmod:
 20675                           	opt callstack 0
 20676                           
 20677 ;; *************** function _current_sensor_cal *****************
 20678 ;; Defined at:
 20679 ;;		line 525 in file "main.c"
 20680 ;; Parameters:    Size  Location     Type
 20681 ;;		None
 20682 ;; Auto vars:     Size  Location     Type
 20683 ;;  cp              4  [STACK] unsigned long 
 20684 ;;  cb              4  [STACK] unsigned long 
 20685 ;;  x               1  [STACK] unsigned char 
 20686 ;; Return value:  Size  Location     Type
 20687 ;;                  1  [STACK] _Bool 
 20688 ;; Registers used:
 20689 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 20690 ;; Tracked objects:
 20691 ;;		On entry : 0/2
 20692 ;;		On exit  : 0/0
 20693 ;;		Unchanged: 0/0
 20694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20699 ;;Total ram usage:        0 bytes
 20700 ;; Hardware stack levels used:    1
 20701 ;; Hardware stack levels required when called:   27
 20702 ;; This function calls:
 20703 ;;		_WaitMs
 20704 ;;		_cal_current_zero
 20705 ;;		_clear_adc_scan
 20706 ;;		_get_raw_result
 20707 ;;		_get_switch
 20708 ;;		_get_vterm_ptr
 20709 ;;		_spinners
 20710 ;;		_sprintf
 20711 ;;		_start_adc_scan
 20712 ;;		_update_lcd
 20713 ;;		_write_cal_data
 20714 ;; This function is called by:
 20715 ;;		_main
 20716 ;; This function uses a reentrant model
 20717 ;;
 20718                           
 20719                           	psect	text58
 20720  0190D2                     __ptext58:
 20721                           	opt callstack 0
 20722  0190D2                     _current_sensor_cal:
 20723                           	opt callstack 0
 20724                           
 20725                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20726  0190D2  0E09               	movlw	9
 20727  0190D4  26E1               	addwf	fsr1l,f,c
 20728  0190D6  0E00               	movlw	0
 20729  0190D8  22E2               	addwfc	fsr1h,f,c
 20730                           
 20731                           ;main.c: 527:  uint8_t x = 0;
 20732                           ;stkvar	_x @ sp[(-9)+8]
 20733                           
 20734                           ;incstack = 0
 20735  0190DA  0EFF               	movlw	-1
 20736  0190DC  6AE3               	clrf	plusw1,c
 20737                           
 20738                           ;main.c: 528:  uint32_t cb = 0, cp = 0;
 20739                           ;stkvar	_cb @ sp[(-9)+4]
 20740  0190DE  0EFB               	movlw	-5
 20741  0190E0  6AE3               	clrf	plusw1,c
 20742  0190E2  0EFC               	movlw	-4
 20743  0190E4  6AE3               	clrf	plusw1,c
 20744  0190E6  0EFD               	movlw	-3
 20745  0190E8  6AE3               	clrf	plusw1,c
 20746  0190EA  0EFE               	movlw	-2
 20747  0190EC  6AE3               	clrf	plusw1,c
 20748                           
 20749                           ;stkvar	_cp @ sp[(-9)+0]
 20750  0190EE  0EF7               	movlw	-9
 20751  0190F0  6AE3               	clrf	plusw1,c
 20752  0190F2  0EF8               	movlw	-8
 20753  0190F4  6AE3               	clrf	plusw1,c
 20754  0190F6  0EF9               	movlw	-7
 20755  0190F8  6AE3               	clrf	plusw1,c
 20756  0190FA  0EFA               	movlw	-6
 20757  0190FC  6AE3               	clrf	plusw1,c
 20758                           
 20759                           ;main.c: 530:  sprintf(get_vterm_ptr(0, 0), "Battery and PV       ");
 20760  0190FE  0E03               	movlw	low STR_57
 20761  019100  6EE6               	movwf	postinc1,c
 20762  019102  0EFE               	movlw	high STR_57
 20763  019104  6EE6               	movwf	postinc1,c
 20764  019106  0E00               	movlw	0
 20765  019108  6EE6               	movwf	postinc1,c
 20766  01910A  0E00               	movlw	0
 20767  01910C  6EE6               	movwf	postinc1,c
 20768  01910E  ECD9  F011         	call	_get_vterm_ptr	;wreg free
 20769  019112  0060  F0AB  FFE6   	movff	btemp,postinc1
 20770  019118  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20771  01911E  0E04               	movlw	4
 20772  019120  6EE6               	movwf	postinc1,c
 20773  019122  ECA5  F0FD         	call	_sprintf	;wreg free
 20774                           
 20775                           ; BSR set to: 0
 20776                           ;main.c: 531:  sprintf(get_vterm_ptr(1, 0), "Sensor Zero          ");
 20777  019126  0ED7               	movlw	low STR_58
 20778  019128  6EE6               	movwf	postinc1,c
 20779  01912A  0EFD               	movlw	high STR_58
 20780  01912C  6EE6               	movwf	postinc1,c
 20781  01912E  0E00               	movlw	0
 20782  019130  6EE6               	movwf	postinc1,c
 20783  019132  0E01               	movlw	1
 20784  019134  6EE6               	movwf	postinc1,c
 20785  019136  ECD9  F011         	call	_get_vterm_ptr	;wreg free
 20786  01913A  0060  F0AB  FFE6   	movff	btemp,postinc1
 20787  019140  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20788  019146  0E04               	movlw	4
 20789  019148  6EE6               	movwf	postinc1,c
 20790  01914A  ECA5  F0FD         	call	_sprintf	;wreg free
 20791                           
 20792                           ; BSR set to: 0
 20793                           ;main.c: 532:  sprintf(get_vterm_ptr(2, 0), "Calibration          ");
 20794  01914E  0EC1               	movlw	low STR_59
 20795  019150  6EE6               	movwf	postinc1,c
 20796  019152  0EFD               	movlw	high STR_59
 20797  019154  6EE6               	movwf	postinc1,c
 20798  019156  0E00               	movlw	0
 20799  019158  6EE6               	movwf	postinc1,c
 20800  01915A  0E02               	movlw	2
 20801  01915C  6EE6               	movwf	postinc1,c
 20802  01915E  ECD9  F011         	call	_get_vterm_ptr	;wreg free
 20803  019162  0060  F0AB  FFE6   	movff	btemp,postinc1
 20804  019168  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20805  01916E  0E04               	movlw	4
 20806  019170  6EE6               	movwf	postinc1,c
 20807  019172  ECA5  F0FD         	call	_sprintf	;wreg free
 20808                           
 20809                           ; BSR set to: 0
 20810                           ;main.c: 533:  update_lcd(0);
 20811  019176  0E00               	movlw	0
 20812  019178  6EE6               	movwf	postinc1,c
 20813  01917A  EC57  F0F6         	call	_update_lcd	;wreg free
 20814                           
 20815                           ;main.c: 534:  WaitMs(2000);
 20816  01917E  0ED0               	movlw	208
 20817  019180  6EE6               	movwf	postinc1,c
 20818  019182  0E07               	movlw	7
 20819  019184  6EE6               	movwf	postinc1,c
 20820  019186  ECDD  F010         	call	_WaitMs	;wreg free
 20821  01918A                     l17236:
 20822                           
 20823                           ;main.c: 536:   if (++x > 64)
 20824                           ;stkvar	_x @ sp[(-9)+8]
 20825  01918A  0EFF               	movlw	-1
 20826  01918C  2AE3               	incf	plusw1,f,c
 20827  01918E  0EFF               	movlw	-1
 20828  019190  006F FF8C  F02A    	movff	plusw1,btemp
 20829  019196  0E40               	movlw	64
 20830  019198  642A               	cpfsgt	btemp^0,c
 20831  01919A  D001               	goto	l17240
 20832  01919C  D1CF               	goto	l1524
 20833  01919E                     l17240:
 20834                           
 20835                           ;main.c: 538:   sprintf(get_vterm_ptr(2, 0), "Release button %c   ", spinners(4, 0));
 20836  01919E  0E00               	movlw	0
 20837  0191A0  6EE6               	movwf	postinc1,c
 20838  0191A2  0E04               	movlw	4
 20839  0191A4  6EE6               	movwf	postinc1,c
 20840  0191A6  EC21  F0FF         	call	_spinners	;wreg free
 20841  0191AA  502A               	movf	btemp^0,w,c
 20842  0191AC  6EE6               	movwf	postinc1,c
 20843  0191AE  0E00               	movlw	0
 20844  0191B0  6EE6               	movwf	postinc1,c
 20845  0191B2  0E47               	movlw	low STR_60
 20846  0191B4  6EE6               	movwf	postinc1,c
 20847  0191B6  0EFF               	movlw	high STR_60
 20848  0191B8  6EE6               	movwf	postinc1,c
 20849  0191BA  0E00               	movlw	0
 20850  0191BC  6EE6               	movwf	postinc1,c
 20851  0191BE  0E02               	movlw	2
 20852  0191C0  6EE6               	movwf	postinc1,c
 20853  0191C2  ECD9  F011         	call	_get_vterm_ptr	;wreg free
 20854  0191C6  0060  F0AB  FFE6   	movff	btemp,postinc1
 20855  0191CC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20856  0191D2  0E06               	movlw	6
 20857  0191D4  6EE6               	movwf	postinc1,c
 20858  0191D6  ECA5  F0FD         	call	_sprintf	;wreg free
 20859                           
 20860                           ;main.c: 539:   update_lcd(0);
 20861  0191DA  0E00               	movlw	0
 20862  0191DC  6EE6               	movwf	postinc1,c
 20863  0191DE  EC57  F0F6         	call	_update_lcd	;wreg free
 20864                           
 20865                           ;main.c: 540:   WaitMs(100);
 20866  0191E2  0E64               	movlw	100
 20867  0191E4  6EE6               	movwf	postinc1,c
 20868  0191E6  0E00               	movlw	0
 20869  0191E8  6EE6               	movwf	postinc1,c
 20870  0191EA  ECDD  F010         	call	_WaitMs	;wreg free
 20871                           
 20872                           ;main.c: 541:  } while (get_switch(SCALIB));
 20873  0191EE  0E04               	movlw	4
 20874  0191F0  6EE6               	movwf	postinc1,c
 20875  0191F2  ECF0  F011         	call	_get_switch	;wreg free
 20876  0191F6  502A               	movf	btemp^0,w,c
 20877  0191F8  A4D8               	btfss	status,2,c
 20878  0191FA  D7C7               	goto	l17236
 20879                           
 20880                           ;main.c: 543:  x = 0;
 20881                           ;stkvar	_x @ sp[(-9)+8]
 20882  0191FC  0EFF               	movlw	-1
 20883  0191FE  6AE3               	clrf	plusw1,c
 20884  019200                     l17248:
 20885                           
 20886                           ;main.c: 545:   cb += get_raw_result(C_BATT);
 20887  019200  0E00               	movlw	0
 20888  019202  6EE6               	movwf	postinc1,c
 20889  019204  ECE0  F013         	call	_get_raw_result	;wreg free
 20890                           
 20891                           ;stkvar	_cb @ sp[(-9)+4]
 20892  019208  50E1               	movf	fsr1l,w,c
 20893  01920A  0FFB               	addlw	-5
 20894  01920C  6ED9               	movwf	fsr2l,c
 20895  01920E  50E2               	movf	fsr1h,w,c
 20896  019210  6EDA               	movwf	fsr2h,c
 20897  019212  0EFF               	movlw	255
 20898  019214  22DA               	addwfc	fsr2h,f,c
 20899  019216  502A               	movf	btemp^0,w,c
 20900  019218  26DE               	addwf	postinc2,f,c
 20901  01921A  502B               	movf	(btemp+1)^0,w,c
 20902  01921C  22DE               	addwfc	postinc2,f,c
 20903  01921E  0E00               	movlw	0
 20904  019220  22DE               	addwfc	postinc2,f,c
 20905  019222  22DE               	addwfc	postinc2,f,c
 20906                           
 20907                           ;main.c: 546:   cp += get_raw_result(C_PV);
 20908  019224  0E01               	movlw	1
 20909  019226  6EE6               	movwf	postinc1,c
 20910  019228  ECE0  F013         	call	_get_raw_result	;wreg free
 20911                           
 20912                           ;stkvar	_cp @ sp[(-9)+0]
 20913  01922C  50E1               	movf	fsr1l,w,c
 20914  01922E  0FF7               	addlw	-9
 20915  019230  6ED9               	movwf	fsr2l,c
 20916  019232  50E2               	movf	fsr1h,w,c
 20917  019234  6EDA               	movwf	fsr2h,c
 20918  019236  0EFF               	movlw	255
 20919  019238  22DA               	addwfc	fsr2h,f,c
 20920  01923A  502A               	movf	btemp^0,w,c
 20921  01923C  26DE               	addwf	postinc2,f,c
 20922  01923E  502B               	movf	(btemp+1)^0,w,c
 20923  019240  22DE               	addwfc	postinc2,f,c
 20924  019242  0E00               	movlw	0
 20925  019244  22DE               	addwfc	postinc2,f,c
 20926  019246  22DE               	addwfc	postinc2,f,c
 20927                           
 20928                           ;main.c: 547:   sprintf(get_vterm_ptr(0, 0), "Sensor Readings      ");
 20929  019248  0E45               	movlw	low STR_61
 20930  01924A  6EE6               	movwf	postinc1,c
 20931  01924C  0EFE               	movlw	high STR_61
 20932  01924E  6EE6               	movwf	postinc1,c
 20933  019250  0E00               	movlw	0
 20934  019252  6EE6               	movwf	postinc1,c
 20935  019254  0E00               	movlw	0
 20936  019256  6EE6               	movwf	postinc1,c
 20937  019258  ECD9  F011         	call	_get_vterm_ptr	;wreg free
 20938  01925C  0060  F0AB  FFE6   	movff	btemp,postinc1
 20939  019262  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20940  019268  0E04               	movlw	4
 20941  01926A  6EE6               	movwf	postinc1,c
 20942  01926C  ECA5  F0FD         	call	_sprintf	;wreg free
 20943                           
 20944                           ; BSR set to: 0
 20945                           ;main.c: 548:   sprintf(get_vterm_ptr(1, 0), " %d %d               ", get_raw_result(C_B
      +                          ATT), get_raw_result(C_PV));
 20946  019270  0E01               	movlw	1
 20947  019272  6EE6               	movwf	postinc1,c
 20948  019274  ECE0  F013         	call	_get_raw_result	;wreg free
 20949  019278  0060  F0AB  FFE6   	movff	btemp,postinc1
 20950  01927E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20951  019284  0E00               	movlw	0
 20952  019286  6EE6               	movwf	postinc1,c
 20953  019288  ECE0  F013         	call	_get_raw_result	;wreg free
 20954  01928C  0060  F0AB  FFE6   	movff	btemp,postinc1
 20955  019292  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20956  019298  0E3D               	movlw	low STR_62
 20957  01929A  6EE6               	movwf	postinc1,c
 20958  01929C  0EFD               	movlw	high STR_62
 20959  01929E  6EE6               	movwf	postinc1,c
 20960  0192A0  0E00               	movlw	0
 20961  0192A2  6EE6               	movwf	postinc1,c
 20962  0192A4  0E01               	movlw	1
 20963  0192A6  6EE6               	movwf	postinc1,c
 20964  0192A8  ECD9  F011         	call	_get_vterm_ptr	;wreg free
 20965  0192AC  0060  F0AB  FFE6   	movff	btemp,postinc1
 20966  0192B2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20967  0192B8  0E08               	movlw	8
 20968  0192BA  6EE6               	movwf	postinc1,c
 20969  0192BC  ECA5  F0FD         	call	_sprintf	;wreg free
 20970                           
 20971                           ; BSR set to: 0
 20972                           ;main.c: 549:   sprintf(get_vterm_ptr(2, 0), "Stability clock %d   ", x);
 20973                           ;stkvar	_x @ sp[(-9)+8]
 20974  0192C0  0EFF               	movlw	-1
 20975  0192C2  50E3               	movf	plusw1,w,c
 20976  0192C4  6EE6               	movwf	postinc1,c
 20977  0192C6  0E00               	movlw	0
 20978  0192C8  6EE6               	movwf	postinc1,c
 20979  0192CA  0E9D               	movlw	low STR_63
 20980  0192CC  6EE6               	movwf	postinc1,c
 20981  0192CE  0EFE               	movlw	high STR_63
 20982  0192D0  6EE6               	movwf	postinc1,c
 20983  0192D2  0E00               	movlw	0
 20984  0192D4  6EE6               	movwf	postinc1,c
 20985  0192D6  0E02               	movlw	2
 20986  0192D8  6EE6               	movwf	postinc1,c
 20987  0192DA  ECD9  F011         	call	_get_vterm_ptr	;wreg free
 20988  0192DE  0060  F0AB  FFE6   	movff	btemp,postinc1
 20989  0192E4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20990  0192EA  0E06               	movlw	6
 20991  0192EC  6EE6               	movwf	postinc1,c
 20992  0192EE  ECA5  F0FD         	call	_sprintf	;wreg free
 20993                           
 20994                           ; BSR set to: 0
 20995                           ;main.c: 550:   update_lcd(0);
 20996  0192F2  0E00               	movlw	0
 20997  0192F4  6EE6               	movwf	postinc1,c
 20998  0192F6  EC57  F0F6         	call	_update_lcd	;wreg free
 20999                           
 21000                           ;main.c: 551:   clear_adc_scan();
 21001  0192FA  EC73  F015         	call	_clear_adc_scan	;wreg free
 21002                           
 21003                           ; BSR set to: 1
 21004                           ;main.c: 552:   start_adc_scan();
 21005  0192FE  EC0F  F00C         	call	_start_adc_scan	;wreg free
 21006                           
 21007                           ;main.c: 553:   WaitMs(100);
 21008  019302  0E64               	movlw	100
 21009  019304  6EE6               	movwf	postinc1,c
 21010  019306  0E00               	movlw	0
 21011  019308  6EE6               	movwf	postinc1,c
 21012  01930A  ECDD  F010         	call	_WaitMs	;wreg free
 21013                           
 21014                           ;main.c: 554:  } while (++x < 64);
 21015                           ;stkvar	_x @ sp[(-9)+8]
 21016  01930E  0EFF               	movlw	-1
 21017  019310  2AE3               	incf	plusw1,f,c
 21018  019312  0EFF               	movlw	-1
 21019  019314  006F FF8C  F02A    	movff	plusw1,btemp
 21020  01931A  0E3F               	movlw	63
 21021  01931C  642A               	cpfsgt	btemp^0,c
 21022  01931E  D770               	goto	l17248
 21023                           
 21024                           ;main.c: 555:  cb = cb >> 6;
 21025  019320  0E06               	movlw	6
 21026  019322  6E35               	movwf	(btemp+11)^0,c
 21027                           
 21028                           ;stkvar	_cb @ sp[(-9)+4]
 21029  019324  50E1               	movf	fsr1l,w,c
 21030  019326  0FFB               	addlw	-5
 21031  019328  6ED9               	movwf	fsr2l,c
 21032  01932A  50E2               	movf	fsr1h,w,c
 21033  01932C  6EDA               	movwf	fsr2h,c
 21034  01932E  0EFF               	movlw	255
 21035  019330  22DA               	addwfc	fsr2h,f,c
 21036  019332  2835               	incf	(btemp+11)^0,w,c
 21037  019334  52DE               	movf	postinc2,f,c
 21038  019336  D007               	goto	u16860
 21039  019338                     u16865:
 21040  019338  52DE               	movf	postinc2,f,c
 21041  01933A  52DE               	movf	postinc2,f,c
 21042  01933C  90D8               	bcf	status,0,c
 21043  01933E  32DD               	rrcf	postdec2,f,c
 21044  019340  32DD               	rrcf	postdec2,f,c
 21045  019342  32DD               	rrcf	postdec2,f,c
 21046  019344  32DE               	rrcf	postinc2,f,c
 21047  019346                     u16860:
 21048  019346  2EE8               	decfsz	wreg,f,c
 21049  019348  D7F7               	goto	u16865
 21050                           
 21051                           ;main.c: 556:  cp = cp >> 6;
 21052  01934A  0E06               	movlw	6
 21053  01934C  6E35               	movwf	(btemp+11)^0,c
 21054                           
 21055                           ;stkvar	_cp @ sp[(-9)+0]
 21056  01934E  50E1               	movf	fsr1l,w,c
 21057  019350  0FF7               	addlw	-9
 21058  019352  6ED9               	movwf	fsr2l,c
 21059  019354  50E2               	movf	fsr1h,w,c
 21060  019356  6EDA               	movwf	fsr2h,c
 21061  019358  0EFF               	movlw	255
 21062  01935A  22DA               	addwfc	fsr2h,f,c
 21063  01935C  2835               	incf	(btemp+11)^0,w,c
 21064  01935E  52DE               	movf	postinc2,f,c
 21065  019360  D007               	goto	u16870
 21066  019362                     u16875:
 21067  019362  52DE               	movf	postinc2,f,c
 21068  019364  52DE               	movf	postinc2,f,c
 21069  019366  90D8               	bcf	status,0,c
 21070  019368  32DD               	rrcf	postdec2,f,c
 21071  01936A  32DD               	rrcf	postdec2,f,c
 21072  01936C  32DD               	rrcf	postdec2,f,c
 21073  01936E  32DE               	rrcf	postinc2,f,c
 21074  019370                     u16870:
 21075  019370  2EE8               	decfsz	wreg,f,c
 21076  019372  D7F7               	goto	u16875
 21077                           
 21078                           ;main.c: 558:  if (cal_current_zero(0, cb, cp)) {
 21079                           ;stkvar	_cp @ sp[(-9)+0]
 21080  019374  0EF7               	movlw	-9
 21081  019376  006F FF8F FFE6     	movff	plusw1,postinc1
 21082  01937C  006F FF8F FFE6     	movff	plusw1,postinc1
 21083                           
 21084                           ;stkvar	_cb @ sp[(-11)+4]
 21085  019382  0EF9               	movlw	-7
 21086  019384  006F FF8F FFE6     	movff	plusw1,postinc1
 21087  01938A  006F FF8F FFE6     	movff	plusw1,postinc1
 21088  019390  0E00               	movlw	0
 21089  019392  6EE6               	movwf	postinc1,c
 21090  019394  ECFE  F006         	call	_cal_current_zero	;wreg free
 21091  019398  502A               	movf	btemp^0,w,c
 21092  01939A  B4D8               	btfsc	status,2,c
 21093  01939C  D075               	goto	l17286
 21094                           
 21095                           ;main.c: 559:   cal_current_zero(1, cb, cp);
 21096                           ;stkvar	_cp @ sp[(-9)+0]
 21097  01939E  0EF7               	movlw	-9
 21098  0193A0  006F FF8F FFE6     	movff	plusw1,postinc1
 21099  0193A6  006F FF8F FFE6     	movff	plusw1,postinc1
 21100                           
 21101                           ;stkvar	_cb @ sp[(-11)+4]
 21102  0193AC  0EF9               	movlw	-7
 21103  0193AE  006F FF8F FFE6     	movff	plusw1,postinc1
 21104  0193B4  006F FF8F FFE6     	movff	plusw1,postinc1
 21105  0193BA  0E01               	movlw	1
 21106  0193BC  6EE6               	movwf	postinc1,c
 21107  0193BE  ECFE  F006         	call	_cal_current_zero	;wreg free
 21108                           
 21109                           ;main.c: 560:   sprintf(get_vterm_ptr(0, 0), "Battery and PV       ");
 21110  0193C2  0E03               	movlw	low STR_57
 21111  0193C4  6EE6               	movwf	postinc1,c
 21112  0193C6  0EFE               	movlw	high STR_57
 21113  0193C8  6EE6               	movwf	postinc1,c
 21114  0193CA  0E00               	movlw	0
 21115  0193CC  6EE6               	movwf	postinc1,c
 21116  0193CE  0E00               	movlw	0
 21117  0193D0  6EE6               	movwf	postinc1,c
 21118  0193D2  ECD9  F011         	call	_get_vterm_ptr	;wreg free
 21119  0193D6  0060  F0AB  FFE6   	movff	btemp,postinc1
 21120  0193DC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21121  0193E2  0E04               	movlw	4
 21122  0193E4  6EE6               	movwf	postinc1,c
 21123  0193E6  ECA5  F0FD         	call	_sprintf	;wreg free
 21124                           
 21125                           ; BSR set to: 0
 21126                           ;main.c: 561:   sprintf(get_vterm_ptr(1, 0), " %ld %ld             ", cb, cp);
 21127                           ;stkvar	_cp @ sp[(-9)+0]
 21128  0193EA  0EF7               	movlw	-9
 21129  0193EC  006F FF8F FFE6     	movff	plusw1,postinc1
 21130  0193F2  006F FF8F FFE6     	movff	plusw1,postinc1
 21131  0193F8  006F FF8F FFE6     	movff	plusw1,postinc1
 21132  0193FE  006F FF8F FFE6     	movff	plusw1,postinc1
 21133                           
 21134                           ;stkvar	_cb @ sp[(-13)+4]
 21135  019404  0EF7               	movlw	-9
 21136  019406  006F FF8F FFE6     	movff	plusw1,postinc1
 21137  01940C  006F FF8F FFE6     	movff	plusw1,postinc1
 21138  019412  006F FF8F FFE6     	movff	plusw1,postinc1
 21139  019418  006F FF8F FFE6     	movff	plusw1,postinc1
 21140  01941E  0E53               	movlw	low STR_65
 21141  019420  6EE6               	movwf	postinc1,c
 21142  019422  0EFD               	movlw	high STR_65
 21143  019424  6EE6               	movwf	postinc1,c
 21144  019426  0E00               	movlw	0
 21145  019428  6EE6               	movwf	postinc1,c
 21146  01942A  0E01               	movlw	1
 21147  01942C  6EE6               	movwf	postinc1,c
 21148  01942E  ECD9  F011         	call	_get_vterm_ptr	;wreg free
 21149  019432  0060  F0AB  FFE6   	movff	btemp,postinc1
 21150  019438  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21151  01943E  0E0C               	movlw	12
 21152  019440  6EE6               	movwf	postinc1,c
 21153  019442  ECA5  F0FD         	call	_sprintf	;wreg free
 21154                           
 21155                           ; BSR set to: 0
 21156                           ;main.c: 562:   sprintf(get_vterm_ptr(2, 0), "Zero Cal Set         ");
 21157  019446  0EED               	movlw	low STR_66
 21158  019448  6EE6               	movwf	postinc1,c
 21159  01944A  0EFD               	movlw	high STR_66
 21160  01944C  6EE6               	movwf	postinc1,c
 21161  01944E  0E00               	movlw	0
 21162  019450  6EE6               	movwf	postinc1,c
 21163  019452  0E02               	movlw	2
 21164  019454  6EE6               	movwf	postinc1,c
 21165  019456  ECD9  F011         	call	_get_vterm_ptr	;wreg free
 21166  01945A  0060  F0AB  FFE6   	movff	btemp,postinc1
 21167  019460  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21168  019466  0E04               	movlw	4
 21169  019468  6EE6               	movwf	postinc1,c
 21170  01946A  ECA5  F0FD         	call	_sprintf	;wreg free
 21171                           
 21172                           ; BSR set to: 0
 21173                           ;main.c: 563:   update_lcd(0);
 21174  01946E  0E00               	movlw	0
 21175  019470  6EE6               	movwf	postinc1,c
 21176  019472  EC57  F0F6         	call	_update_lcd	;wreg free
 21177                           
 21178                           ;main.c: 564:   WaitMs(2000);
 21179  019476  0ED0               	movlw	208
 21180  019478  6EE6               	movwf	postinc1,c
 21181  01947A  0E07               	movlw	7
 21182  01947C  6EE6               	movwf	postinc1,c
 21183  01947E  ECDD  F010         	call	_WaitMs	;wreg free
 21184                           
 21185                           ;main.c: 565:   write_cal_data();
 21186  019482  ECB4  F0F7         	call	_write_cal_data	;wreg free
 21187                           
 21188                           ;main.c: 566:  } else {
 21189  019486  D05A               	goto	l1524
 21190  019488                     l17286:
 21191                           
 21192                           ;main.c: 567:   sprintf(get_vterm_ptr(0, 0), "Battery and PV       ");
 21193  019488  0E03               	movlw	low STR_57
 21194  01948A  6EE6               	movwf	postinc1,c
 21195  01948C  0EFE               	movlw	high STR_57
 21196  01948E  6EE6               	movwf	postinc1,c
 21197  019490  0E00               	movlw	0
 21198  019492  6EE6               	movwf	postinc1,c
 21199  019494  0E00               	movlw	0
 21200  019496  6EE6               	movwf	postinc1,c
 21201  019498  ECD9  F011         	call	_get_vterm_ptr	;wreg free
 21202  01949C  0060  F0AB  FFE6   	movff	btemp,postinc1
 21203  0194A2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21204  0194A8  0E04               	movlw	4
 21205  0194AA  6EE6               	movwf	postinc1,c
 21206  0194AC  ECA5  F0FD         	call	_sprintf	;wreg free
 21207                           
 21208                           ;main.c: 568:   sprintf(get_vterm_ptr(1, 0), " %ld %ld             ", get_raw_result(C_B
      +                          ATT), get_raw_result(C_PV));
 21209  0194B0  0E01               	movlw	1
 21210  0194B2  6EE6               	movwf	postinc1,c
 21211  0194B4  ECE0  F013         	call	_get_raw_result	;wreg free
 21212  0194B8  0060  F0AB  FFE6   	movff	btemp,postinc1
 21213  0194BE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21214  0194C4  0E00               	movlw	0
 21215  0194C6  6EE6               	movwf	postinc1,c
 21216  0194C8  ECE0  F013         	call	_get_raw_result	;wreg free
 21217  0194CC  0060  F0AB  FFE6   	movff	btemp,postinc1
 21218  0194D2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21219  0194D8  0E53               	movlw	low STR_65
 21220  0194DA  6EE6               	movwf	postinc1,c
 21221  0194DC  0EFD               	movlw	high STR_65
 21222  0194DE  6EE6               	movwf	postinc1,c
 21223  0194E0  0E00               	movlw	0
 21224  0194E2  6EE6               	movwf	postinc1,c
 21225  0194E4  0E01               	movlw	1
 21226  0194E6  6EE6               	movwf	postinc1,c
 21227  0194E8  ECD9  F011         	call	_get_vterm_ptr	;wreg free
 21228  0194EC  0060  F0AB  FFE6   	movff	btemp,postinc1
 21229  0194F2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21230  0194F8  0E08               	movlw	8
 21231  0194FA  6EE6               	movwf	postinc1,c
 21232  0194FC  ECA5  F0FD         	call	_sprintf	;wreg free
 21233                           
 21234                           ;main.c: 569:   sprintf(get_vterm_ptr(2, 0), "Zero Out Of Range    ");
 21235  019500  0E71               	movlw	low STR_69
 21236  019502  6EE6               	movwf	postinc1,c
 21237  019504  0EFE               	movlw	high STR_69
 21238  019506  6EE6               	movwf	postinc1,c
 21239  019508  0E00               	movlw	0
 21240  01950A  6EE6               	movwf	postinc1,c
 21241  01950C  0E02               	movlw	2
 21242  01950E  6EE6               	movwf	postinc1,c
 21243  019510  ECD9  F011         	call	_get_vterm_ptr	;wreg free
 21244  019514  0060  F0AB  FFE6   	movff	btemp,postinc1
 21245  01951A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21246  019520  0E04               	movlw	4
 21247  019522  6EE6               	movwf	postinc1,c
 21248  019524  ECA5  F0FD         	call	_sprintf	;wreg free
 21249                           
 21250                           ;main.c: 570:   update_lcd(0);
 21251  019528  0E00               	movlw	0
 21252  01952A  6EE6               	movwf	postinc1,c
 21253  01952C  EC57  F0F6         	call	_update_lcd	;wreg free
 21254                           
 21255                           ;main.c: 571:   WaitMs(2000);
 21256  019530  0ED0               	movlw	208
 21257  019532  6EE6               	movwf	postinc1,c
 21258  019534  0E07               	movlw	7
 21259  019536  6EE6               	movwf	postinc1,c
 21260  019538  ECDD  F010         	call	_WaitMs	;wreg free
 21261  01953C                     l1524:
 21262                           
 21263                           ; _current_sensor_cal: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 21264  01953C  0EF7               	movlw	247
 21265  01953E  26E1               	addwf	fsr1l,f,c
 21266  019540  0EFF               	movlw	255
 21267  019542  22E2               	addwfc	fsr1h,f,c
 21268  019544  0012               	return		;funcret
 21269  019546                     __end_of_current_sensor_cal:
 21270                           	opt callstack 0
 21271                           
 21272 ;; *************** function _write_cal_data *****************
 21273 ;; Defined at:
 21274 ;;		line 408 in file "daq.c"
 21275 ;; Parameters:    Size  Location     Type
 21276 ;;		None
 21277 ;; Auto vars:     Size  Location     Type
 21278 ;;  x               2  [STACK] unsigned short 
 21279 ;;  r_cal_ptr       2  [STACK] PTR unsigned char 
 21280 ;;		 -> R(155), 
 21281 ;;  y               2  [STACK] unsigned short 
 21282 ;;  crcVal          1  [STACK] unsigned char 
 21283 ;; Return value:  Size  Location     Type
 21284 ;;                  1  [STACK] void 
 21285 ;; Registers used:
 21286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
 21287 ;; Tracked objects:
 21288 ;;		On entry : 0/39
 21289 ;;		On exit  : 0/0
 21290 ;;		Unchanged: 0/0
 21291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21296 ;;Total ram usage:        0 bytes
 21297 ;; Hardware stack levels used:    1
 21298 ;; Hardware stack levels required when called:   17
 21299 ;; This function calls:
 21300 ;;		_CRC_8BitDataWrite
 21301 ;;		_CRC_CalculatedResultGet
 21302 ;;		_CRC_Initialize
 21303 ;;		_CRC_IsBusy
 21304 ;;		_CRC_Start
 21305 ;;		_DATAEE_WriteByte
 21306 ;; This function is called by:
 21307 ;;		_main
 21308 ;;		_current_sensor_cal
 21309 ;; This function uses a reentrant model
 21310 ;;
 21311                           
 21312                           	psect	text59
 21313  01EF68                     __ptext59:
 21314                           	opt callstack 0
 21315  01EF68                     _write_cal_data:
 21316                           	opt callstack 0
 21317                           
 21318                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21319  01EF68  0E07               	movlw	7
 21320  01EF6A  26E1               	addwf	fsr1l,f,c
 21321  01EF6C  0E00               	movlw	0
 21322  01EF6E  22E2               	addwfc	fsr1h,f,c
 21323                           
 21324                           ;daq.c: 410:  uint16_t x = 0, y;
 21325                           ;stkvar	_x @ sp[(-7)+0]
 21326                           
 21327                           ;incstack = 0
 21328  01EF70  0EF9               	movlw	-7
 21329  01EF72  6AE3               	clrf	plusw1,c
 21330  01EF74  0EFA               	movlw	-6
 21331  01EF76  6AE3               	clrf	plusw1,c
 21332                           
 21333                           ;daq.c: 411:  uint8_t *r_cal_ptr, crcVal;;daq.c: 413:  y = sizeof(R);
 21334  01EF78  0E9B               	movlw	155
 21335  01EF7A  6E34               	movwf	(btemp+10)^0,c
 21336  01EF7C  0E00               	movlw	0
 21337  01EF7E  6E35               	movwf	(btemp+11)^0,c
 21338                           
 21339                           ;stkvar	_y @ sp[(-7)+4]
 21340  01EF80  0EFD               	movlw	-3
 21341  01EF82  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 21342  01EF88  0EFE               	movlw	-2
 21343  01EF8A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 21344                           
 21345                           ;daq.c: 414:  R.crc = 0x42;
 21346  01EF90  0E42               	movlw	66
 21347  01EF92  0101               	movlb	1	; () banked
 21348  01EF94  6F9A               	movwf	(_R+154)& (0+255),b	;volatile
 21349                           
 21350                           ; BSR set to: 1
 21351                           ;daq.c: 415:  r_cal_ptr = (uint8_t*) & R;
 21352                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 21353  01EF96  0E01               	movlw	high _R
 21354  01EF98  6E2A               	movwf	btemp^0,c
 21355  01EF9A  0EFC               	movlw	-4
 21356  01EF9C  0060  F0AB  FFE3   	movff	btemp,plusw1
 21357  01EFA2  0E00               	movlw	low _R
 21358  01EFA4  6E2A               	movwf	btemp^0,c
 21359  01EFA6  0EFB               	movlw	-5
 21360  01EFA8  0060  F0AB  FFE3   	movff	btemp,plusw1
 21361                           
 21362                           ; BSR set to: 1
 21363                           ;daq.c: 416:  R.checkmark = 0x1957;
 21364  01EFAE  0E19               	movlw	25
 21365  01EFB0  6F99               	movwf	(_R+153)& (0+255),b	;volatile
 21366  01EFB2  0E57               	movlw	87
 21367  01EFB4  6F98               	movwf	(_R+152)& (0+255),b	;volatile
 21368                           
 21369                           ; BSR set to: 1
 21370                           ;daq.c: 418:  CRC_Initialize();
 21371  01EFB6  EC22  F008         	call	_CRC_Initialize	;wreg free
 21372                           
 21373                           ; BSR set to: 0
 21374                           ;daq.c: 421:  CRC_Start();
 21375  01EFBA  EC70  F015         	call	_CRC_Start	;wreg free
 21376  01EFBE                     l13530:
 21377                           
 21378                           ;daq.c: 424:   DATAEE_WriteByte(x, r_cal_ptr[x]);
 21379                           ;stkvar	_x @ sp[(-7)+0]
 21380  01EFBE  0EF9               	movlw	-7
 21381  01EFC0  006F FF8C  F034    	movff	plusw1,btemp+10
 21382  01EFC6  0EFA               	movlw	-6
 21383  01EFC8  006F FF8C  F035    	movff	plusw1,btemp+11
 21384                           
 21385                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 21386  01EFCE  0EFB               	movlw	-5
 21387  01EFD0  006F FF8C  F032    	movff	plusw1,btemp+8
 21388  01EFD6  0EFC               	movlw	-4
 21389  01EFD8  006F FF8C  F033    	movff	plusw1,btemp+9
 21390  01EFDE  5034               	movf	(btemp+10)^0,w,c
 21391  01EFE0  2432               	addwf	(btemp+8)^0,w,c
 21392  01EFE2  6ED9               	movwf	fsr2l,c
 21393  01EFE4  5035               	movf	(btemp+11)^0,w,c
 21394  01EFE6  2033               	addwfc	(btemp+9)^0,w,c
 21395  01EFE8  6EDA               	movwf	fsr2h,c
 21396  01EFEA  50DF               	movf	indf2,w,c
 21397  01EFEC  6EE6               	movwf	postinc1,c
 21398                           
 21399                           ;stkvar	_x @ sp[(-8)+0]
 21400  01EFEE  0EF8               	movlw	-8
 21401  01EFF0  006F FF8F FFE6     	movff	plusw1,postinc1
 21402  01EFF6  006F FF8F FFE6     	movff	plusw1,postinc1
 21403  01EFFC  EC43  F00B         	call	_DATAEE_WriteByte	;wreg free
 21404                           
 21405                           ;daq.c: 425:   CRC_8BitDataWrite(r_cal_ptr[x]);
 21406                           ;stkvar	_x @ sp[(-7)+0]
 21407  01F000  0EF9               	movlw	-7
 21408  01F002  006F FF8C  F034    	movff	plusw1,btemp+10
 21409  01F008  0EFA               	movlw	-6
 21410  01F00A  006F FF8C  F035    	movff	plusw1,btemp+11
 21411                           
 21412                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 21413  01F010  0EFB               	movlw	-5
 21414  01F012  006F FF8C  F032    	movff	plusw1,btemp+8
 21415  01F018  0EFC               	movlw	-4
 21416  01F01A  006F FF8C  F033    	movff	plusw1,btemp+9
 21417  01F020  5034               	movf	(btemp+10)^0,w,c
 21418  01F022  2432               	addwf	(btemp+8)^0,w,c
 21419  01F024  6ED9               	movwf	fsr2l,c
 21420  01F026  5035               	movf	(btemp+11)^0,w,c
 21421  01F028  2033               	addwfc	(btemp+9)^0,w,c
 21422  01F02A  6EDA               	movwf	fsr2h,c
 21423  01F02C  50DF               	movf	indf2,w,c
 21424  01F02E  6EE6               	movwf	postinc1,c
 21425  01F030  ECD7  F014         	call	_CRC_8BitDataWrite	;wreg free
 21426  01F034                     l13534:
 21427  01F034  ECF9  F014         	call	_CRC_IsBusy	;wreg free
 21428  01F038  502A               	movf	btemp^0,w,c
 21429  01F03A  A4D8               	btfss	status,2,c
 21430  01F03C  D7FB               	goto	l13534
 21431                           
 21432                           ;daq.c: 427:  } while (++x < y);
 21433                           ;stkvar	_y @ sp[(-7)+4]
 21434  01F03E  0EFD               	movlw	-3
 21435  01F040  006F FF8C  F034    	movff	plusw1,btemp+10
 21436  01F046  0EFE               	movlw	-2
 21437  01F048  006F FF8C  F035    	movff	plusw1,btemp+11
 21438                           
 21439                           ;stkvar	_x @ sp[(-7)+0]
 21440  01F04E  0EF9               	movlw	-7
 21441  01F050  50E3               	movf	plusw1,w,c
 21442  01F052  0F01               	addlw	1
 21443  01F054  6E2A               	movwf	btemp^0,c
 21444  01F056  0EF9               	movlw	-7
 21445  01F058  0060  F0AB  FFE3   	movff	btemp,plusw1
 21446  01F05E  6A2A               	clrf	btemp^0,c
 21447  01F060  0EFA               	movlw	-6
 21448  01F062  50E3               	movf	plusw1,w,c
 21449  01F064  202A               	addwfc	btemp^0,w,c
 21450  01F066  6E2A               	movwf	btemp^0,c
 21451  01F068  0EFA               	movlw	-6
 21452  01F06A  0060  F0AB  FFE3   	movff	btemp,plusw1
 21453  01F070  0EF9               	movlw	-7
 21454  01F072  006F FF8C  F032    	movff	plusw1,btemp+8
 21455  01F078  0EFA               	movlw	-6
 21456  01F07A  006F FF8C  F033    	movff	plusw1,btemp+9
 21457  01F080  5034               	movf	(btemp+10)^0,w,c
 21458  01F082  5C32               	subwf	(btemp+8)^0,w,c
 21459  01F084  5035               	movf	(btemp+11)^0,w,c
 21460  01F086  5833               	subwfb	(btemp+9)^0,w,c
 21461  01F088  A0D8               	btfss	status,0,c
 21462  01F08A  D799               	goto	l13530
 21463                           
 21464                           ;daq.c: 429:  crcVal = CRC_CalculatedResultGet(0, 0x00);
 21465  01F08C  0E00               	movlw	0
 21466  01F08E  6EE6               	movwf	postinc1,c
 21467  01F090  0E00               	movlw	0
 21468  01F092  6EE6               	movwf	postinc1,c
 21469  01F094  0E00               	movlw	0
 21470  01F096  6EE6               	movwf	postinc1,c
 21471  01F098  ECD0  F0F2         	call	_CRC_CalculatedResultGet	;wreg free
 21472                           
 21473                           ;stkvar	_crcVal @ sp[(-7)+6]
 21474  01F09C  0EFF               	movlw	-1
 21475  01F09E  0060  F0AB  FFE3   	movff	btemp,plusw1
 21476                           
 21477                           ;daq.c: 431:  DATAEE_WriteByte(sizeof(R) - 1, crcVal);
 21478                           ;stkvar	_crcVal @ sp[(-7)+6]
 21479  01F0A4  0EFF               	movlw	-1
 21480  01F0A6  50E3               	movf	plusw1,w,c
 21481  01F0A8  6EE6               	movwf	postinc1,c
 21482  01F0AA  0E9A               	movlw	154
 21483  01F0AC  6EE6               	movwf	postinc1,c
 21484  01F0AE  0E00               	movlw	0
 21485  01F0B0  6EE6               	movwf	postinc1,c
 21486  01F0B2  EC43  F00B         	call	_DATAEE_WriteByte	;wreg free
 21487                           
 21488                           ; _write_cal_data: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 21489  01F0B6  0EF9               	movlw	249
 21490  01F0B8  26E1               	addwf	fsr1l,f,c
 21491  01F0BA  0EFF               	movlw	255
 21492  01F0BC  22E2               	addwfc	fsr1h,f,c
 21493  01F0BE  0012               	return		;funcret
 21494  01F0C0                     __end_of_write_cal_data:
 21495                           	opt callstack 0
 21496                           
 21497 ;; *************** function _DATAEE_WriteByte *****************
 21498 ;; Defined at:
 21499 ;;		line 172 in file "mcc_generated_files/memory.c"
 21500 ;; Parameters:    Size  Location     Type
 21501 ;;  bAdd            2  [STACK] unsigned short 
 21502 ;;  bData           1  [STACK] unsigned char 
 21503 ;; Auto vars:     Size  Location     Type
 21504 ;;  GIEBitValue     1  [STACK] unsigned char 
 21505 ;; Return value:  Size  Location     Type
 21506 ;;                  1  [STACK] void 
 21507 ;; Registers used:
 21508 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 21509 ;; Tracked objects:
 21510 ;;		On entry : 0/39
 21511 ;;		On exit  : 0/0
 21512 ;;		Unchanged: 0/0
 21513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21518 ;;Total ram usage:        0 bytes
 21519 ;; Hardware stack levels used:    1
 21520 ;; Hardware stack levels required when called:   15
 21521 ;; This function calls:
 21522 ;;		Nothing
 21523 ;; This function is called by:
 21524 ;;		_write_cal_data
 21525 ;; This function uses a reentrant model
 21526 ;;
 21527                           
 21528                           	psect	text60
 21529  001686                     __ptext60:
 21530                           	opt callstack 0
 21531  001686                     _DATAEE_WriteByte:
 21532                           	opt callstack 0
 21533                           
 21534                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21535  001686  52E6               	movf	postinc1,f,c
 21536                           
 21537                           ;mcc_generated_files/memory.c: 172: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 173: {;mcc_generated_files/memory.c: 174:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
 21538                           
 21539                           ;incstack = 0
 21540  001688  AED2               	btfss	210,7,c	;volatile
 21541  00168A  D003               	goto	u12080
 21542  00168C  6A35               	clrf	(btemp+11)^0,c
 21543  00168E  2A35               	incf	(btemp+11)^0,f,c
 21544  001690  D001               	goto	u12088
 21545  001692                     u12080:
 21546  001692  6A35               	clrf	(btemp+11)^0,c
 21547  001694                     u12088:
 21548                           
 21549                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 21550  001694  0EFF               	movlw	-1
 21551  001696  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 21552                           
 21553                           ;mcc_generated_files/memory.c: 176:     NVMADRH = (uint8_t)((bAdd >> 8) & 0x03);
 21554                           ;stkvar	_bAdd @ sp[(-1)+-2]
 21555  00169C  0EFE               	movlw	254
 21556  00169E  24E1               	addwf	fsr1l,w,c
 21557  0016A0  6ED9               	movwf	fsr2l,c
 21558  0016A2  0EFF               	movlw	255
 21559  0016A4  20E2               	addwfc	fsr1h,w,c
 21560  0016A6  6EDA               	movwf	fsr2h,c
 21561  0016A8  50DF               	movf	indf2,w,c
 21562  0016AA  0B03               	andlw	3
 21563  0016AC  0139               	movlb	57	; () banked
 21564  0016AE  6FE1               	movwf	225,b	;volatile
 21565                           
 21566                           ; BSR set to: 57
 21567                           ;mcc_generated_files/memory.c: 177:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 21568                           ;stkvar	_bAdd @ sp[(-1)+-2]
 21569  0016B0  0EFD               	movlw	-3
 21570  0016B2  006F FF8F F9E0     	movff	plusw1,14816	;volatile
 21571                           
 21572                           ; BSR set to: 57
 21573                           ;mcc_generated_files/memory.c: 178:     NVMDAT = bData;
 21574                           ;stkvar	_bData @ sp[(-1)+-3]
 21575  0016B8  0EFC               	movlw	-4
 21576  0016BA  006F FF8F F9E3     	movff	plusw1,14819	;volatile
 21577                           
 21578                           ; BSR set to: 57
 21579                           ;mcc_generated_files/memory.c: 179:     NVMCON1bits.NVMREG = 0;
 21580  0016C0  0E3F               	movlw	-193
 21581  0016C2  17E5               	andwf	229,f,b	;volsfr
 21582                           
 21583                           ; BSR set to: 57
 21584                           ;mcc_generated_files/memory.c: 180:     NVMCON1bits.WREN = 1;
 21585  0016C4  85E5               	bsf	229,2,b	;volsfr
 21586                           
 21587                           ; BSR set to: 57
 21588                           ;mcc_generated_files/memory.c: 181:     INTCON0bits.GIE = 0;
 21589  0016C6  9ED2               	bcf	210,7,c	;volatile
 21590                           
 21591                           ; BSR set to: 57
 21592                           ;mcc_generated_files/memory.c: 182:     NVMCON2 = 0x55;
 21593  0016C8  0E55               	movlw	85
 21594  0016CA  6FE6               	movwf	230,b	;volsfr
 21595                           
 21596                           ; BSR set to: 57
 21597                           ;mcc_generated_files/memory.c: 183:     NVMCON2 = 0xAA;
 21598  0016CC  0EAA               	movlw	170
 21599  0016CE  6FE6               	movwf	230,b	;volsfr
 21600                           
 21601                           ; BSR set to: 57
 21602                           ;mcc_generated_files/memory.c: 184:     NVMCON1bits.WR = 1;
 21603  0016D0  83E5               	bsf	229,1,b	;volsfr
 21604  0016D2                     l942:
 21605                           
 21606                           ; BSR set to: 57
 21607                           ;mcc_generated_files/memory.c: 186:     while (NVMCON1bits.WR)
 21608  0016D2  B3E5               	btfsc	229,1,b	;volsfr
 21609  0016D4  D7FE               	goto	l942
 21610                           
 21611                           ; BSR set to: 57
 21612                           ;mcc_generated_files/memory.c: 190:     NVMCON1bits.WREN = 0;
 21613  0016D6  95E5               	bcf	229,2,b	;volsfr
 21614                           
 21615                           ; BSR set to: 57
 21616                           ;mcc_generated_files/memory.c: 191:     INTCON0bits.GIE = GIEBitValue;
 21617                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 21618  0016D8  0EFF               	movlw	-1
 21619  0016DA  B0E3               	btfsc	plusw1,0,c
 21620  0016DC  D002               	bra	u12105
 21621  0016DE  9ED2               	bcf	210,7,c	;volatile
 21622  0016E0  D001               	bra	u12106
 21623  0016E2                     u12105:
 21624  0016E2  8ED2               	bsf	210,7,c	;volatile
 21625  0016E4                     u12106:
 21626                           
 21627                           ; _DATAEE_WriteByte: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 21628  0016E4  52E5               	movf	postdec1,f,c
 21629  0016E6  52E5               	movf	postdec1,f,c
 21630  0016E8  52E5               	movf	postdec1,f,c
 21631  0016EA  52E5               	movf	postdec1,f,c
 21632  0016EC  0012               	return		;funcret
 21633  0016EE                     __end_of_DATAEE_WriteByte:
 21634                           	opt callstack 0
 21635                           
 21636 ;; *************** function _CRC_Start *****************
 21637 ;; Defined at:
 21638 ;;		line 119 in file "mcc_generated_files/crc.c"
 21639 ;; Parameters:    Size  Location     Type
 21640 ;;		None
 21641 ;; Auto vars:     Size  Location     Type
 21642 ;;		None
 21643 ;; Return value:  Size  Location     Type
 21644 ;;                  1  [STACK] void 
 21645 ;; Registers used:
 21646 ;;		None
 21647 ;; Tracked objects:
 21648 ;;		On entry : 3F/0
 21649 ;;		On exit  : 3F/39
 21650 ;;		Unchanged: 0/0
 21651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21656 ;;Total ram usage:        0 bytes
 21657 ;; Hardware stack levels used:    1
 21658 ;; Hardware stack levels required when called:   15
 21659 ;; This function calls:
 21660 ;;		Nothing
 21661 ;; This function is called by:
 21662 ;;		_read_cal_data
 21663 ;;		_write_cal_data
 21664 ;; This function uses a reentrant model
 21665 ;;
 21666                           
 21667                           	psect	text61
 21668  002AE0                     __ptext61:
 21669                           	opt callstack 0
 21670  002AE0                     _CRC_Start:
 21671                           	opt callstack 14
 21672                           
 21673                           ;mcc_generated_files/crc.c: 122:     CRCCON0bits.CRCGO = 1;
 21674                           
 21675                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21676                           ;incstack = 0
 21677  002AE0  0139               	movlb	57	; () banked
 21678  002AE2  8D68               	bsf	104,6,b	;volatile
 21679                           
 21680                           ; BSR set to: 57
 21681                           ; _CRC_Start: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 21682  002AE4  0012               	return		;funcret
 21683  002AE6                     __end_of_CRC_Start:
 21684                           	opt callstack 0
 21685                           
 21686 ;; *************** function _CRC_IsBusy *****************
 21687 ;; Defined at:
 21688 ;;		line 201 in file "mcc_generated_files/crc.c"
 21689 ;; Parameters:    Size  Location     Type
 21690 ;;		None
 21691 ;; Auto vars:     Size  Location     Type
 21692 ;;		None
 21693 ;; Return value:  Size  Location     Type
 21694 ;;                  1  [STACK] _Bool 
 21695 ;; Registers used:
 21696 ;;		btemp
 21697 ;; Tracked objects:
 21698 ;;		On entry : 0/39
 21699 ;;		On exit  : 0/0
 21700 ;;		Unchanged: 0/0
 21701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21706 ;;Total ram usage:        0 bytes
 21707 ;; Hardware stack levels used:    1
 21708 ;; Hardware stack levels required when called:   15
 21709 ;; This function calls:
 21710 ;;		Nothing
 21711 ;; This function is called by:
 21712 ;;		_read_cal_data
 21713 ;;		_write_cal_data
 21714 ;; This function uses a reentrant model
 21715 ;;
 21716                           
 21717                           	psect	text62
 21718  0029F2                     __ptext62:
 21719                           	opt callstack 0
 21720  0029F2                     _CRC_IsBusy:
 21721                           	opt callstack 14
 21722                           
 21723                           ;mcc_generated_files/crc.c: 204:     return(CRCCON0bits.BUSY);
 21724                           
 21725                           ; BSR set to: 57
 21726                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21727                           ;incstack = 0
 21728  0029F2  0139               	movlb	57	; () banked
 21729  0029F4  AB68               	btfss	104,5,b	;volatile
 21730  0029F6  D003               	goto	u12310
 21731  0029F8  6A2A               	clrf	btemp^0,c
 21732  0029FA  2A2A               	incf	btemp^0,f,c
 21733  0029FC  0012               	return	
 21734  0029FE                     u12310:
 21735  0029FE  6A2A               	clrf	btemp^0,c
 21736                           
 21737                           ; _CRC_IsBusy: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 21738  002A00  0012               	return		;funcret
 21739  002A02                     __end_of_CRC_IsBusy:
 21740                           	opt callstack 0
 21741                           
 21742 ;; *************** function _CRC_CalculatedResultGet *****************
 21743 ;; Defined at:
 21744 ;;		line 159 in file "mcc_generated_files/crc.c"
 21745 ;; Parameters:    Size  Location     Type
 21746 ;;  reverse         1  [STACK] _Bool 
 21747 ;;  xorValue        2  [STACK] unsigned short 
 21748 ;; Auto vars:     Size  Location     Type
 21749 ;;  result          2  [STACK] unsigned short 
 21750 ;;  mask            2  [STACK] unsigned short 
 21751 ;; Return value:  Size  Location     Type
 21752 ;;                  2  [STACK] unsigned short 
 21753 ;; Registers used:
 21754 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+9, btemp+10, btemp+11,
      + prodl
 21755 ;; Tracked objects:
 21756 ;;		On entry : 0/39
 21757 ;;		On exit  : 0/0
 21758 ;;		Unchanged: 0/0
 21759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21764 ;;Total ram usage:        0 bytes
 21765 ;; Hardware stack levels used:    1
 21766 ;; Hardware stack levels required when called:   16
 21767 ;; This function calls:
 21768 ;;		_CRC_ReverseValue
 21769 ;; This function is called by:
 21770 ;;		_read_cal_data
 21771 ;;		_write_cal_data
 21772 ;; This function uses a reentrant model
 21773 ;;
 21774                           
 21775                           	psect	text63
 21776  01E5A0                     __ptext63:
 21777                           	opt callstack 0
 21778  01E5A0                     _CRC_CalculatedResultGet:
 21779                           	opt callstack 0
 21780                           
 21781                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21782  01E5A0  52E6               	movf	postinc1,f,c
 21783  01E5A2  52E6               	movf	postinc1,f,c
 21784  01E5A4  52E6               	movf	postinc1,f,c
 21785  01E5A6  52E6               	movf	postinc1,f,c
 21786                           
 21787                           ;mcc_generated_files/crc.c: 159: uint16_t CRC_CalculatedResultGet(_Bool reverse, uint16_
      +                          t xorValue);mcc_generated_files/crc.c: 160: {;mcc_generated_files/crc.c: 161:     uint16
      +                          _t result,mask;;mcc_generated_files/crc.c: 164:      CRCCON0bits.CRCGO = 0;
 21788                           
 21789                           ;incstack = 0
 21790  01E5A8  0139               	movlb	57	; () banked
 21791  01E5AA  9D68               	bcf	104,6,b	;volatile
 21792                           
 21793                           ;mcc_generated_files/crc.c: 165:      PIR0bits.CRCIF = 0;
 21794  01E5AC  9DA0               	bcf	160,6,b	;volatile
 21795                           
 21796                           ; BSR set to: 57
 21797                           ;mcc_generated_files/crc.c: 166:      CRCCON1bits.DLEN= CRCCON1bits.PLEN;
 21798  01E5AE  5169               	movf	105,w,b	;volatile
 21799  01E5B0  0B0F               	andlw	15
 21800  01E5B2  6E35               	movwf	(btemp+11)^0,c
 21801  01E5B4  3A35               	swapf	(btemp+11)^0,f,c
 21802  01E5B6  5169               	movf	105,w,b	;volatile
 21803  01E5B8  1835               	xorwf	(btemp+11)^0,w,c
 21804  01E5BA  0B0F               	andlw	-241
 21805  01E5BC  1835               	xorwf	(btemp+11)^0,w,c
 21806  01E5BE  6F69               	movwf	105,b	;volatile
 21807                           
 21808                           ; BSR set to: 57
 21809                           ;mcc_generated_files/crc.c: 168:      if(crcObj.polyWidth > 8)
 21810  01E5C0  0E08               	movlw	8
 21811  01E5C2  0100               	movlb	0	; () banked
 21812  01E5C4  65E3               	cpfsgt	(_crcObj+1)& (0+255),b
 21813  01E5C6  D003               	goto	l1282
 21814                           
 21815                           ; BSR set to: 0
 21816                           ;mcc_generated_files/crc.c: 169:      {;mcc_generated_files/crc.c: 170:          CRCDATH
      +                           = 0;
 21817  01E5C8  0139               	movlb	57	; () banked
 21818  01E5CA  6B61               	clrf	97,b	;volatile
 21819  01E5CC  D001               	goto	L19
 21820  01E5CE                     l1282:
 21821                           
 21822                           ; BSR set to: 0
 21823                           ;mcc_generated_files/crc.c: 174:      {;mcc_generated_files/crc.c: 175:          CRCDATL
      +                           = 0;
 21824  01E5CE  0139               	movlb	57	; () banked
 21825  01E5D0                     L19:
 21826  01E5D0  6B60               	clrf	96,b	;volatile
 21827                           
 21828                           ; BSR set to: 57
 21829                           ;mcc_generated_files/crc.c: 178:      CRCCON0bits.CRCGO = 1;
 21830                           
 21831                           ;mcc_generated_files/crc.c: 176:      }
 21832  01E5D2  8D68               	bsf	104,6,b	;volatile
 21833  01E5D4                     l1284:
 21834                           
 21835                           ; BSR set to: 57
 21836  01E5D4  ADA0               	btfss	160,6,b	;volatile
 21837  01E5D6  D7FE               	goto	l1284
 21838                           
 21839                           ; BSR set to: 57
 21840                           ;mcc_generated_files/crc.c: 180:      PIR0bits.CRCIF = 0;
 21841  01E5D8  9DA0               	bcf	160,6,b	;volatile
 21842                           
 21843                           ;mcc_generated_files/crc.c: 182:      CRCCON0bits.CRCGO = 0;
 21844  01E5DA  9D68               	bcf	104,6,b	;volatile
 21845                           
 21846                           ; BSR set to: 57
 21847                           ;mcc_generated_files/crc.c: 183:      CRCCON1bits.DLEN = (uint8_t)(crcObj.dataWidth - 1)
      +                          ;
 21848  01E5DC  0060  F388  F035   	movff	_crcObj,btemp+11
 21849  01E5E2  0EFF               	movlw	255
 21850  01E5E4  2635               	addwf	(btemp+11)^0,f,c
 21851  01E5E6  3A35               	swapf	(btemp+11)^0,f,c
 21852  01E5E8  5169               	movf	105,w,b	;volatile
 21853  01E5EA  1835               	xorwf	(btemp+11)^0,w,c
 21854  01E5EC  0B0F               	andlw	-241
 21855  01E5EE  1835               	xorwf	(btemp+11)^0,w,c
 21856  01E5F0  6F69               	movwf	105,b	;volatile
 21857                           
 21858                           ; BSR set to: 57
 21859                           ;mcc_generated_files/crc.c: 185:      result = ((uint16_t)CRCACCH << 8)|CRCACCL;
 21860  01E5F2  5162               	movf	98,w,b	;volatile
 21861  01E5F4  006E F58C  F02A    	movff	14691,btemp	;volatile
 21862  01E5FA  6A2B               	clrf	(btemp+1)^0,c
 21863  01E5FC  0060  F0A8  F02B   	movff	btemp,btemp+1
 21864  01E602  6A2A               	clrf	btemp^0,c
 21865  01E604  122A               	iorwf	btemp^0,f,c
 21866  01E606  0E00               	movlw	0
 21867  01E608  122B               	iorwf	(btemp+1)^0,f,c
 21868                           
 21869                           ;stkvar	_result @ sp[(-4)+0]
 21870  01E60A  0EFC               	movlw	-4
 21871  01E60C  0060  F0AB  FFE3   	movff	btemp,plusw1
 21872  01E612  0EFD               	movlw	-3
 21873  01E614  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 21874                           
 21875                           ; BSR set to: 57
 21876                           ;mcc_generated_files/crc.c: 186:      if(crcObj.polyWidth < 16)
 21877  01E61A  0E10               	movlw	16
 21878  01E61C  0100               	movlb	0	; () banked
 21879  01E61E  61E3               	cpfslt	(_crcObj+1)& (0+255),b
 21880  01E620  D03A               	goto	l12802
 21881                           
 21882                           ; BSR set to: 0
 21883                           ;mcc_generated_files/crc.c: 187:      {;mcc_generated_files/crc.c: 189:         mask = (
      +                          uint16_t)((1 << crcObj.polyWidth) - 1);
 21884  01E622  0EFF               	movlw	255
 21885  01E624  6E34               	movwf	(btemp+10)^0,c
 21886  01E626  0EFF               	movlw	255
 21887  01E628  6E35               	movwf	(btemp+11)^0,c
 21888  01E62A  0060  F38C  F033   	movff	_crcObj+1,btemp+9
 21889  01E630  0E01               	movlw	1
 21890  01E632  6E30               	movwf	(btemp+6)^0,c
 21891  01E634  0E00               	movlw	0
 21892  01E636  6E31               	movwf	(btemp+7)^0,c
 21893  01E638  2A33               	incf	(btemp+9)^0,f,c
 21894  01E63A  D003               	goto	u12294
 21895  01E63C                     u12295:
 21896  01E63C  90D8               	bcf	status,0,c
 21897  01E63E  3630               	rlcf	(btemp+6)^0,f,c
 21898  01E640  3631               	rlcf	(btemp+7)^0,f,c
 21899  01E642                     u12294:
 21900  01E642  2E33               	decfsz	(btemp+9)^0,f,c
 21901  01E644  D7FB               	goto	u12295
 21902  01E646  5034               	movf	(btemp+10)^0,w,c
 21903  01E648  2630               	addwf	(btemp+6)^0,f,c
 21904  01E64A  5035               	movf	(btemp+11)^0,w,c
 21905  01E64C  2231               	addwfc	(btemp+7)^0,f,c
 21906                           
 21907                           ;stkvar	_mask @ sp[(-4)+2]
 21908  01E64E  0EFE               	movlw	-2
 21909  01E650  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 21910  01E656  0EFF               	movlw	-1
 21911  01E658  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 21912                           
 21913                           ;mcc_generated_files/crc.c: 190:         result &= mask;
 21914                           ;stkvar	_mask @ sp[(-4)+2]
 21915  01E65E  0EFE               	movlw	-2
 21916  01E660  006F FF8C  F034    	movff	plusw1,btemp+10
 21917  01E666  0EFF               	movlw	-1
 21918  01E668  006F FF8C  F035    	movff	plusw1,btemp+11
 21919                           
 21920                           ;stkvar	_result @ sp[(-4)+0]
 21921  01E66E  0EFC               	movlw	-4
 21922  01E670  006F FF8C  F02A    	movff	plusw1,btemp
 21923  01E676  5034               	movf	(btemp+10)^0,w,c
 21924  01E678  162A               	andwf	btemp^0,f,c
 21925  01E67A  0EFC               	movlw	-4
 21926  01E67C  0060  F0AB  FFE3   	movff	btemp,plusw1
 21927  01E682  0EFD               	movlw	-3
 21928  01E684  006F FF8C  F02A    	movff	plusw1,btemp
 21929  01E68A  5035               	movf	(btemp+11)^0,w,c
 21930  01E68C  162A               	andwf	btemp^0,f,c
 21931  01E68E  0EFD               	movlw	-3
 21932  01E690  0060  F0AB  FFE3   	movff	btemp,plusw1
 21933  01E696                     l12802:
 21934                           
 21935                           ;mcc_generated_files/crc.c: 193:     if(reverse)
 21936                           ;stkvar	_reverse @ sp[(-4)+-1]
 21937  01E696  0EFB               	movlw	-5
 21938  01E698  50E3               	movf	plusw1,w,c
 21939  01E69A  B4D8               	btfsc	status,2,c
 21940  01E69C  D011               	goto	l12806
 21941                           
 21942                           ;mcc_generated_files/crc.c: 194:         result = CRC_ReverseValue(result);
 21943                           ;stkvar	_result @ sp[(-4)+0]
 21944  01E69E  0EFC               	movlw	-4
 21945  01E6A0  006F FF8F FFE6     	movff	plusw1,postinc1
 21946  01E6A6  006F FF8F FFE6     	movff	plusw1,postinc1
 21947  01E6AC  EC94  F002         	call	_CRC_ReverseValue	;wreg free
 21948                           
 21949                           ;stkvar	_result @ sp[(-4)+0]
 21950  01E6B0  0EFC               	movlw	-4
 21951  01E6B2  0060  F0AB  FFE3   	movff	btemp,plusw1
 21952  01E6B8  0EFD               	movlw	-3
 21953  01E6BA  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 21954  01E6C0                     l12806:
 21955                           
 21956                           ;mcc_generated_files/crc.c: 196:     result ^= xorValue;
 21957                           ;stkvar	_xorValue @ sp[(-4)+-3]
 21958  01E6C0  0EF9               	movlw	-7
 21959  01E6C2  006F FF8C  F034    	movff	plusw1,btemp+10
 21960  01E6C8  0EFA               	movlw	-6
 21961  01E6CA  006F FF8C  F035    	movff	plusw1,btemp+11
 21962                           
 21963                           ;stkvar	_result @ sp[(-4)+0]
 21964  01E6D0  0EFC               	movlw	-4
 21965  01E6D2  006F FF8C  F02A    	movff	plusw1,btemp
 21966  01E6D8  5034               	movf	(btemp+10)^0,w,c
 21967  01E6DA  1A2A               	xorwf	btemp^0,f,c
 21968  01E6DC  0EFC               	movlw	-4
 21969  01E6DE  0060  F0AB  FFE3   	movff	btemp,plusw1
 21970  01E6E4  0EFD               	movlw	-3
 21971  01E6E6  006F FF8C  F02A    	movff	plusw1,btemp
 21972  01E6EC  5035               	movf	(btemp+11)^0,w,c
 21973  01E6EE  1A2A               	xorwf	btemp^0,f,c
 21974  01E6F0  0EFD               	movlw	-3
 21975  01E6F2  0060  F0AB  FFE3   	movff	btemp,plusw1
 21976                           
 21977                           ;mcc_generated_files/crc.c: 198:     return result;
 21978                           ;stkvar	_result @ sp[(-4)+0]
 21979  01E6F8  0EFC               	movlw	-4
 21980  01E6FA  006F FF8C  F02A    	movff	plusw1,btemp
 21981  01E700  0EFD               	movlw	-3
 21982  01E702  006F FF8C  F02B    	movff	plusw1,btemp+1
 21983                           
 21984                           ; _CRC_CalculatedResultGet: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
 21985  01E708  0EF9               	movlw	249
 21986  01E70A  26E1               	addwf	fsr1l,f,c
 21987  01E70C  0EFF               	movlw	255
 21988  01E70E  22E2               	addwfc	fsr1h,f,c
 21989  01E710  0012               	return		;funcret
 21990  01E712                     __end_of_CRC_CalculatedResultGet:
 21991                           	opt callstack 0
 21992                           
 21993 ;; *************** function _CRC_ReverseValue *****************
 21994 ;; Defined at:
 21995 ;;		line 138 in file "mcc_generated_files/crc.c"
 21996 ;; Parameters:    Size  Location     Type
 21997 ;;  crc             2  [STACK] unsigned short 
 21998 ;; Auto vars:     Size  Location     Type
 21999 ;;  mask            2  [STACK] unsigned short 
 22000 ;;  reverse         2  [STACK] unsigned short 
 22001 ;; Return value:  Size  Location     Type
 22002 ;;                  2  [STACK] unsigned short 
 22003 ;; Registers used:
 22004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 22005 ;; Tracked objects:
 22006 ;;		On entry : 0/0
 22007 ;;		On exit  : 0/0
 22008 ;;		Unchanged: 0/0
 22009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22014 ;;Total ram usage:        0 bytes
 22015 ;; Hardware stack levels used:    1
 22016 ;; Hardware stack levels required when called:   15
 22017 ;; This function calls:
 22018 ;;		Nothing
 22019 ;; This function is called by:
 22020 ;;		_CRC_CalculatedResultGet
 22021 ;; This function uses a reentrant model
 22022 ;;
 22023                           
 22024                           	psect	text64
 22025  000528                     __ptext64:
 22026                           	opt callstack 0
 22027  000528                     _CRC_ReverseValue:
 22028                           	opt callstack 0
 22029                           
 22030                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22031  000528  52E6               	movf	postinc1,f,c
 22032  00052A  52E6               	movf	postinc1,f,c
 22033  00052C  52E6               	movf	postinc1,f,c
 22034  00052E  52E6               	movf	postinc1,f,c
 22035                           
 22036                           ;mcc_generated_files/crc.c: 138: static uint16_t CRC_ReverseValue(uint16_t crc);mcc_gene
      +                          rated_files/crc.c: 139: {;mcc_generated_files/crc.c: 140:     uint16_t mask;;mcc_generat
      +                          ed_files/crc.c: 141:     uint16_t reverse;;mcc_generated_files/crc.c: 143:     mask = 1;
 22037                           
 22038                           ;incstack = 0
 22039  000530  0E01               	movlw	1
 22040  000532  6E34               	movwf	(btemp+10)^0,c
 22041  000534  0E00               	movlw	0
 22042  000536  6E35               	movwf	(btemp+11)^0,c
 22043                           
 22044                           ;stkvar	_mask @ sp[(-4)+0]
 22045  000538  0EFC               	movlw	-4
 22046  00053A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 22047  000540  0EFD               	movlw	-3
 22048  000542  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 22049                           
 22050                           ;mcc_generated_files/crc.c: 144:     mask <<= crcObj.polyWidth - 1;
 22051  000548  0060  F38C  F035   	movff	_crcObj+1,btemp+11
 22052  00054E  0EFF               	movlw	255
 22053  000550  2635               	addwf	(btemp+11)^0,f,c
 22054                           
 22055                           ;stkvar	_mask @ sp[(-4)+0]
 22056  000552  50E1               	movf	fsr1l,w,c
 22057  000554  0FFC               	addlw	-4
 22058  000556  6ED9               	movwf	fsr2l,c
 22059  000558  50E2               	movf	fsr1h,w,c
 22060  00055A  6EDA               	movwf	fsr2h,c
 22061  00055C  0EFF               	movlw	255
 22062  00055E  22DA               	addwfc	fsr2h,f,c
 22063  000560  2835               	incf	(btemp+11)^0,w,c
 22064  000562  D003               	goto	u11560
 22065  000564                     u11565:
 22066  000564  90D8               	bcf	status,0,c
 22067  000566  36DE               	rlcf	postinc2,f,c
 22068  000568  36DD               	rlcf	postdec2,f,c
 22069  00056A                     u11560:
 22070  00056A  2EE8               	decfsz	wreg,f,c
 22071  00056C  D7FB               	goto	u11565
 22072                           
 22073                           ;mcc_generated_files/crc.c: 145:     reverse = 0;
 22074                           ;stkvar	_reverse @ sp[(-4)+2]
 22075  00056E  0EFE               	movlw	-2
 22076  000570  6AE3               	clrf	plusw1,c
 22077  000572  0EFF               	movlw	-1
 22078  000574  6AE3               	clrf	plusw1,c
 22079                           
 22080                           ;mcc_generated_files/crc.c: 147:     while(crc)
 22081  000576  D029               	goto	l12286
 22082  000578                     l12278:
 22083                           
 22084                           ;mcc_generated_files/crc.c: 148:     {;mcc_generated_files/crc.c: 149:         if(crc & 
      +                          0x01)
 22085                           ;stkvar	_crc @ sp[(-4)+-2]
 22086  000578  0EFA               	movlw	-6
 22087  00057A  A0E3               	btfss	plusw1,0,c
 22088  00057C  D01C               	goto	l12282
 22089                           
 22090                           ;mcc_generated_files/crc.c: 150:         {;mcc_generated_files/crc.c: 151:             r
      +                          everse |= mask;
 22091                           ;stkvar	_mask @ sp[(-4)+0]
 22092  00057E  0EFC               	movlw	-4
 22093  000580  006F FF8C  F034    	movff	plusw1,btemp+10
 22094  000586  0EFD               	movlw	-3
 22095  000588  006F FF8C  F035    	movff	plusw1,btemp+11
 22096                           
 22097                           ;stkvar	_reverse @ sp[(-4)+2]
 22098  00058E  0EFE               	movlw	-2
 22099  000590  006F FF8C  F02A    	movff	plusw1,btemp
 22100  000596  5034               	movf	(btemp+10)^0,w,c
 22101  000598  122A               	iorwf	btemp^0,f,c
 22102  00059A  0EFE               	movlw	-2
 22103  00059C  0060  F0AB  FFE3   	movff	btemp,plusw1
 22104  0005A2  0EFF               	movlw	-1
 22105  0005A4  006F FF8C  F02A    	movff	plusw1,btemp
 22106  0005AA  5035               	movf	(btemp+11)^0,w,c
 22107  0005AC  122A               	iorwf	btemp^0,f,c
 22108  0005AE  0EFF               	movlw	-1
 22109  0005B0  0060  F0AB  FFE3   	movff	btemp,plusw1
 22110  0005B6                     l12282:
 22111                           
 22112                           ;mcc_generated_files/crc.c: 153:         mask >>= 1;
 22113                           ;stkvar	_mask @ sp[(-4)+0]
 22114  0005B6  90D8               	bcf	status,0,c
 22115  0005B8  0EFD               	movlw	-3
 22116  0005BA  32E3               	rrcf	plusw1,f,c
 22117  0005BC  0EFC               	movlw	-4
 22118  0005BE  32E3               	rrcf	plusw1,f,c
 22119                           
 22120                           ;mcc_generated_files/crc.c: 154:         crc >>= 1;
 22121                           ;stkvar	_crc @ sp[(-4)+-2]
 22122  0005C0  90D8               	bcf	status,0,c
 22123  0005C2  0EFB               	movlw	-5
 22124  0005C4  32E3               	rrcf	plusw1,f,c
 22125  0005C6  0EFA               	movlw	-6
 22126  0005C8  32E3               	rrcf	plusw1,f,c
 22127  0005CA                     l12286:
 22128                           
 22129                           ;mcc_generated_files/crc.c: 147:     while(crc)
 22130                           ;stkvar	_crc @ sp[(-4)+-2]
 22131  0005CA  0EFA               	movlw	-6
 22132  0005CC  006F FF8C  F02A    	movff	plusw1,btemp
 22133  0005D2  0EFB               	movlw	-5
 22134  0005D4  50E3               	movf	plusw1,w,c
 22135  0005D6  102A               	iorwf	btemp^0,w,c
 22136  0005D8  A4D8               	btfss	status,2,c
 22137  0005DA  D7CE               	goto	l12278
 22138                           
 22139                           ;mcc_generated_files/crc.c: 156:     return reverse;
 22140                           ;stkvar	_reverse @ sp[(-4)+2]
 22141  0005DC  0EFE               	movlw	-2
 22142  0005DE  006F FF8C  F02A    	movff	plusw1,btemp
 22143  0005E4  0EFF               	movlw	-1
 22144  0005E6  006F FF8C  F02B    	movff	plusw1,btemp+1
 22145                           
 22146                           ; _CRC_ReverseValue: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 22147  0005EC  0EFA               	movlw	250
 22148  0005EE  26E1               	addwf	fsr1l,f,c
 22149  0005F0  0EFF               	movlw	255
 22150  0005F2  22E2               	addwfc	fsr1h,f,c
 22151  0005F4  0012               	return		;funcret
 22152  0005F6                     __end_of_CRC_ReverseValue:
 22153                           	opt callstack 0
 22154                           
 22155 ;; *************** function _CRC_8BitDataWrite *****************
 22156 ;; Defined at:
 22157 ;;		line 125 in file "mcc_generated_files/crc.c"
 22158 ;; Parameters:    Size  Location     Type
 22159 ;;  data            1  [STACK] unsigned char 
 22160 ;; Auto vars:     Size  Location     Type
 22161 ;;		None
 22162 ;; Return value:  Size  Location     Type
 22163 ;;                  1  [STACK] _Bool 
 22164 ;; Registers used:
 22165 ;;		fsr1l, fsr1h
 22166 ;; Tracked objects:
 22167 ;;		On entry : 0/4
 22168 ;;		On exit  : 3F/39
 22169 ;;		Unchanged: 0/0
 22170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22175 ;;Total ram usage:        0 bytes
 22176 ;; Hardware stack levels used:    1
 22177 ;; Hardware stack levels required when called:   15
 22178 ;; This function calls:
 22179 ;;		Nothing
 22180 ;; This function is called by:
 22181 ;;		_read_cal_data
 22182 ;;		_write_cal_data
 22183 ;; This function uses a reentrant model
 22184 ;;
 22185                           
 22186                           	psect	text65
 22187  0029AE                     __ptext65:
 22188                           	opt callstack 0
 22189  0029AE                     _CRC_8BitDataWrite:
 22190                           	opt callstack 14
 22191                           
 22192                           ;mcc_generated_files/crc.c: 125: _Bool CRC_8BitDataWrite(uint8_t data);mcc_generated_fil
      +                          es/crc.c: 126: {;mcc_generated_files/crc.c: 127:     if(!CRCCON0bits.FULL)
 22193                           
 22194                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22195                           ;incstack = 0
 22196  0029AE  0139               	movlb	57	; () banked
 22197  0029B0  B168               	btfsc	104,0,b	;volatile
 22198  0029B2  D004               	goto	l1271
 22199                           
 22200                           ; BSR set to: 57
 22201                           ;mcc_generated_files/crc.c: 128:     {;mcc_generated_files/crc.c: 129:         CRCDATL =
      +                           data;
 22202                           ;stkvar	_data @ sp[(0)+-1]
 22203  0029B4  0EFF               	movlw	-1
 22204  0029B6  006F FF8F F960     	movff	plusw1,14688	;volatile
 22205  0029BC                     l1271:
 22206                           
 22207                           ; BSR set to: 57
 22208                           ; _CRC_8BitDataWrite: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 22209  0029BC  52E5               	movf	postdec1,f,c
 22210  0029BE  0012               	return		;funcret
 22211  0029C0                     __end_of_CRC_8BitDataWrite:
 22212                           	opt callstack 0
 22213                           
 22214 ;; *************** function _start_adc_scan *****************
 22215 ;; Defined at:
 22216 ;;		line 72 in file "daq.c"
 22217 ;; Parameters:    Size  Location     Type
 22218 ;;		None
 22219 ;; Auto vars:     Size  Location     Type
 22220 ;;		None
 22221 ;; Return value:  Size  Location     Type
 22222 ;;                  1  [STACK] _Bool 
 22223 ;; Registers used:
 22224 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 22225 ;; Tracked objects:
 22226 ;;		On entry : 0/0
 22227 ;;		On exit  : 0/0
 22228 ;;		Unchanged: 0/0
 22229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22234 ;;Total ram usage:        0 bytes
 22235 ;; Hardware stack levels used:    1
 22236 ;; Hardware stack levels required when called:   16
 22237 ;; This function calls:
 22238 ;;		_ADCC_DischargeSampleCapacitor
 22239 ;;		_ADCC_SetADIInterruptHandler
 22240 ;;		_ADCC_SetADTIInterruptHandler
 22241 ;;		_ADCC_StartConversion
 22242 ;; This function is called by:
 22243 ;;		_main
 22244 ;;		_current_sensor_cal
 22245 ;;		_update_adc_result
 22246 ;; This function uses a reentrant model
 22247 ;;
 22248                           
 22249                           	psect	text66
 22250  00181E                     __ptext66:
 22251                           	opt callstack 0
 22252  00181E                     _start_adc_scan:
 22253                           	opt callstack 14
 22254                           
 22255                           ;daq.c: 74:  if (R.done)
 22256                           
 22257                           ; BSR set to: 57
 22258                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22259                           ;incstack = 0
 22260  00181E  0101               	movlb	1	; () banked
 22261  001820  5135               	movf	(_R+53)& (0+255),w,b	;volatile
 22262  001822  A4D8               	btfss	status,2,c
 22263  001824  0012               	return	
 22264                           
 22265                           ; BSR set to: 1
 22266                           ;daq.c: 77:  R.scan_index = 0;
 22267  001826  6B32               	clrf	(_R+50)& (0+255),b	;volatile
 22268                           
 22269                           ; BSR set to: 1
 22270                           ;daq.c: 78:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
 22271  001828  013A               	movlb	58	; () banked
 22272  00182A  5140               	movf	64,w,b	;volatile
 22273  00182C  006E F940  F02A    	movff	14928,btemp	;volatile
 22274  001832  6A2B               	clrf	(btemp+1)^0,c
 22275  001834  0060  F0A8  F02B   	movff	btemp,btemp+1
 22276  00183A  6A2A               	clrf	btemp^0,c
 22277  00183C  262A               	addwf	btemp^0,f,c
 22278  00183E  0E00               	movlw	0
 22279  001840  222B               	addwfc	(btemp+1)^0,f,c
 22280  001842  0E77               	movlw	119
 22281  001844  142A               	andwf	btemp^0,w,c
 22282  001846  0101               	movlb	1	; () banked
 22283  001848  6F33               	movwf	(_R+51)& (0+255),b	;volatile
 22284  00184A  0E3C               	movlw	60
 22285  00184C  142B               	andwf	(btemp+1)^0,w,c
 22286  00184E  6F34               	movwf	(_R+52)& (0+255),b	;volatile
 22287                           
 22288                           ; BSR set to: 1
 22289                           ;daq.c: 79:  ADCC_SetADIInterruptHandler(adc_int_handler);
 22290  001850  0E08               	movlw	low _adc_int_handler
 22291  001852  6EE6               	movwf	postinc1,c
 22292  001854  0E2B               	movlw	high _adc_int_handler
 22293  001856  6EE6               	movwf	postinc1,c
 22294  001858  0E00               	movlw	low (_adc_int_handler shr (0+16))
 22295  00185A  6EE6               	movwf	postinc1,c
 22296  00185C  EC23  F013         	call	_ADCC_SetADIInterruptHandler	;wreg free
 22297                           
 22298                           ;daq.c: 80:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
 22299  001860  0E66               	movlw	low _adc_int_t_handler
 22300  001862  6EE6               	movwf	postinc1,c
 22301  001864  0E12               	movlw	high _adc_int_t_handler
 22302  001866  6EE6               	movwf	postinc1,c
 22303  001868  0E00               	movlw	low (_adc_int_t_handler shr (0+16))
 22304  00186A  6EE6               	movwf	postinc1,c
 22305  00186C  EC0F  F013         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 22306                           
 22307                           ;daq.c: 81:  ADCC_DischargeSampleCapacitor();
 22308  001870  EC5D  F015         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 22309                           
 22310                           ; BSR set to: 62
 22311                           ;daq.c: 82:  ADCC_StartConversion(R.scan_index & 0xf);
 22312  001874  0101               	movlb	1	; () banked
 22313  001876  5132               	movf	(_R+50)& (0+255),w,b	;volatile
 22314  001878  0B0F               	andlw	15
 22315  00187A  6EE6               	movwf	postinc1,c
 22316  00187C  ECE0  F014         	call	_ADCC_StartConversion	;wreg free
 22317                           
 22318                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22319  001880  0012               	return		;funcret
 22320  001882                     __end_of_start_adc_scan:
 22321                           	opt callstack 0
 22322                           
 22323 ;; *************** function _ADCC_StartConversion *****************
 22324 ;; Defined at:
 22325 ;;		line 128 in file "mcc_generated_files/adcc.c"
 22326 ;; Parameters:    Size  Location     Type
 22327 ;;  channel         1  [STACK] enum E16136
 22328 ;; Auto vars:     Size  Location     Type
 22329 ;;		None
 22330 ;; Return value:  Size  Location     Type
 22331 ;;                  1  [STACK] void 
 22332 ;; Registers used:
 22333 ;;		fsr1l, fsr1h
 22334 ;; Tracked objects:
 22335 ;;		On entry : 3F/1
 22336 ;;		On exit  : 3F/3E
 22337 ;;		Unchanged: 0/0
 22338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22343 ;;Total ram usage:        0 bytes
 22344 ;; Hardware stack levels used:    1
 22345 ;; Hardware stack levels required when called:   15
 22346 ;; This function calls:
 22347 ;;		Nothing
 22348 ;; This function is called by:
 22349 ;;		_start_adc_scan
 22350 ;;		_adc_int_t_handler
 22351 ;; This function uses a reentrant model
 22352 ;;
 22353                           
 22354                           	psect	text67
 22355  0029C0                     __ptext67:
 22356                           	opt callstack 0
 22357  0029C0                     _ADCC_StartConversion:
 22358                           	opt callstack 0
 22359                           
 22360                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
 22361                           ;stkvar	_channel @ sp[(0)+-1]
 22362                           
 22363                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22364                           ;incstack = 0
 22365 ;; hardware stack exceeded
 22366  0029C0  0EFF               	movlw	-1
 22367  0029C2  006F FF8F FEF1     	movff	plusw1,16113	;volatile
 22368                           
 22369                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
 22370  0029C8  013E               	movlb	62	; () banked
 22371  0029CA  8FF8               	bsf	248,7,b	;volatile
 22372                           
 22373                           ; BSR set to: 62
 22374                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
 22375  0029CC  81F8               	bsf	248,0,b	;volatile
 22376                           
 22377                           ; BSR set to: 62
 22378                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 22379  0029CE  52E5               	movf	postdec1,f,c
 22380  0029D0  0012               	return		;funcret
 22381  0029D2                     __end_of_ADCC_StartConversion:
 22382                           	opt callstack 0
 22383                           
 22384 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 22385 ;; Defined at:
 22386 ;;		line 189 in file "mcc_generated_files/adcc.c"
 22387 ;; Parameters:    Size  Location     Type
 22388 ;;		None
 22389 ;; Auto vars:     Size  Location     Type
 22390 ;;		None
 22391 ;; Return value:  Size  Location     Type
 22392 ;;                  1  [STACK] void 
 22393 ;; Registers used:
 22394 ;;		wreg, status,2
 22395 ;; Tracked objects:
 22396 ;;		On entry : 0/1
 22397 ;;		On exit  : 3F/3E
 22398 ;;		Unchanged: 0/0
 22399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22404 ;;Total ram usage:        0 bytes
 22405 ;; Hardware stack levels used:    1
 22406 ;; Hardware stack levels required when called:   15
 22407 ;; This function calls:
 22408 ;;		Nothing
 22409 ;; This function is called by:
 22410 ;;		_start_adc_scan
 22411 ;;		_adc_int_t_handler
 22412 ;; This function uses a reentrant model
 22413 ;;
 22414                           
 22415                           	psect	text68
 22416  002ABA                     __ptext68:
 22417                           	opt callstack 0
 22418  002ABA                     _ADCC_DischargeSampleCapacitor:
 22419                           	opt callstack 0
 22420                           
 22421                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
 22422                           
 22423                           ; BSR set to: 62
 22424                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22425                           ;incstack = 0
 22426 ;; hardware stack exceeded
 22427  002ABA  0E3B               	movlw	59
 22428  002ABC  013E               	movlb	62	; () banked
 22429  002ABE  6FF1               	movwf	241,b	;volatile
 22430                           
 22431                           ; BSR set to: 62
 22432                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
 22433  002AC0  0012               	return		;funcret
 22434  002AC2                     __end_of_ADCC_DischargeSampleCapacitor:
 22435                           	opt callstack 0
 22436                           
 22437 ;; *************** function _spinners *****************
 22438 ;; Defined at:
 22439 ;;		line 147 in file "mbmc.c"
 22440 ;; Parameters:    Size  Location     Type
 22441 ;;  shape           1  [STACK] unsigned char 
 22442 ;;  reset           1  [STACK] const unsigned char 
 22443 ;; Auto vars:     Size  Location     Type
 22444 ;;  c               1  [STACK] unsigned char 
 22445 ;; Return value:  Size  Location     Type
 22446 ;;                  1  [STACK] unsigned char 
 22447 ;; Registers used:
 22448 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh
 22449 ;; Tracked objects:
 22450 ;;		On entry : 0/0
 22451 ;;		On exit  : 0/0
 22452 ;;		Unchanged: 0/0
 22453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22458 ;;Total ram usage:        0 bytes
 22459 ;; Hardware stack levels used:    1
 22460 ;; Hardware stack levels required when called:   16
 22461 ;; This function calls:
 22462 ;;		_strlen
 22463 ;; This function is called by:
 22464 ;;		_main
 22465 ;;		_current_sensor_cal
 22466 ;; This function uses a reentrant model
 22467 ;;
 22468                           
 22469                           	psect	text69
 22470  01FE42                     __ptext69:
 22471                           	opt callstack 0
 22472  01FE42                     _spinners:
 22473                           	opt callstack 0
 22474                           
 22475                           ; BSR set to: 62
 22476                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22477  01FE42  52E6               	movf	postinc1,f,c
 22478                           
 22479                           ;mbmc.c: 147: char spinners(uint8_t shape, const uint8_t reset);mbmc.c: 148: {;mbmc.c: 1
      +                          49:  static uint8_t s[6];;mbmc.c: 150:  char c;;mbmc.c: 152:  if (shape > (6 - 1))
 22480                           ;stkvar	_shape @ sp[(-1)+-1]
 22481                           
 22482                           ;incstack = 0
 22483  01FE44  0EFE               	movlw	-2
 22484  01FE46  006F FF8C  F02A    	movff	plusw1,btemp
 22485  01FE4C  0E05               	movlw	5
 22486  01FE4E  642A               	cpfsgt	btemp^0,c
 22487  01FE50  D002               	goto	l2188
 22488                           
 22489                           ;mbmc.c: 153:   shape = 0;
 22490                           ;stkvar	_shape @ sp[(-1)+-1]
 22491  01FE52  0EFE               	movlw	-2
 22492  01FE54  6AE3               	clrf	plusw1,c
 22493  01FE56                     l2188:
 22494                           
 22495                           ;mbmc.c: 154:  if (reset)
 22496                           ;stkvar	_reset @ sp[(-1)+-2]
 22497  01FE56  0EFD               	movlw	-3
 22498  01FE58  50E3               	movf	plusw1,w,c
 22499  01FE5A  B4D8               	btfsc	status,2,c
 22500  01FE5C  D00C               	goto	l16964
 22501                           
 22502                           ;mbmc.c: 155:   s[shape] = 0;
 22503                           ;stkvar	_shape @ sp[(-1)+-1]
 22504  01FE5E  0EFE               	movlw	-2
 22505  01FE60  50E3               	movf	plusw1,w,c
 22506  01FE62  6E34               	movwf	(btemp+10)^0,c
 22507  01FE64  6A35               	clrf	(btemp+11)^0,c
 22508  01FE66  0ECD               	movlw	low spinners@s
 22509  01FE68  2434               	addwf	(btemp+10)^0,w,c
 22510  01FE6A  6ED9               	movwf	fsr2l,c
 22511  01FE6C  0E01               	movlw	high spinners@s
 22512  01FE6E  2035               	addwfc	(btemp+11)^0,w,c
 22513  01FE70  6EDA               	movwf	fsr2h,c
 22514  01FE72  0E00               	movlw	0
 22515  01FE74  6EDF               	movwf	indf2,c
 22516  01FE76                     l16964:
 22517                           
 22518                           ;mbmc.c: 156:  c = spin[shape][s[shape]];
 22519                           ;stkvar	_shape @ sp[(-1)+-1]
 22520  01FE76  0EFE               	movlw	-2
 22521  01FE78  50E3               	movf	plusw1,w,c
 22522  01FE7A  0D14               	mullw	20
 22523  01FE7C  0E67               	movlw	low _spin
 22524  01FE7E  6E34               	movwf	(btemp+10)^0,c
 22525  01FE80  0EF9               	movlw	high _spin
 22526  01FE82  6E35               	movwf	(btemp+11)^0,c
 22527  01FE84  50F3               	movf	243,w,c
 22528  01FE86  2634               	addwf	(btemp+10)^0,f,c
 22529  01FE88  50F4               	movf	244,w,c
 22530  01FE8A  2235               	addwfc	(btemp+11)^0,f,c
 22531                           
 22532                           ;stkvar	_shape @ sp[(-1)+-1]
 22533  01FE8C  0EFE               	movlw	-2
 22534  01FE8E  50E3               	movf	plusw1,w,c
 22535  01FE90  6E32               	movwf	(btemp+8)^0,c
 22536  01FE92  6A33               	clrf	(btemp+9)^0,c
 22537  01FE94  0ECD               	movlw	low spinners@s
 22538  01FE96  2432               	addwf	(btemp+8)^0,w,c
 22539  01FE98  6ED9               	movwf	fsr2l,c
 22540  01FE9A  0E01               	movlw	high spinners@s
 22541  01FE9C  2033               	addwfc	(btemp+9)^0,w,c
 22542  01FE9E  6EDA               	movwf	fsr2h,c
 22543  01FEA0  50DF               	movf	indf2,w,c
 22544  01FEA2  2634               	addwf	(btemp+10)^0,f,c
 22545  01FEA4  0E00               	movlw	0
 22546  01FEA6  2235               	addwfc	(btemp+11)^0,f,c
 22547  01FEA8  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 22548  01FEAE  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 22549  01FEB4                     	if	0	;tblptru may be non-zero
 22550  01FEB4                     	endif
 22551  01FEB4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22552  01FEB4  0E00               	movlw	low (__mediumconst shr (0+16))
 22553  01FEB6  6EF8               	movwf	tblptru,c
 22554  01FEB8                     	endif
 22555                           
 22556                           ;stkvar	_c @ sp[(-1)+0]
 22557  01FEB8  0008               	tblrd		*
 22558  01FEBA  0EFF               	movlw	-1
 22559  01FEBC  006F FFD7 FFE3     	movff	tablat,plusw1
 22560                           
 22561                           ;mbmc.c: 157:  if (++s[shape] >= strlen(spin[shape]))
 22562                           ;stkvar	_shape @ sp[(-1)+-1]
 22563  01FEC2  0EFE               	movlw	-2
 22564  01FEC4  50E3               	movf	plusw1,w,c
 22565  01FEC6  0D14               	mullw	20
 22566  01FEC8  0E67               	movlw	low _spin
 22567  01FECA  6E34               	movwf	(btemp+10)^0,c
 22568  01FECC  0EF9               	movlw	high _spin
 22569  01FECE  6E35               	movwf	(btemp+11)^0,c
 22570  01FED0  50F3               	movf	243,w,c
 22571  01FED2  2634               	addwf	(btemp+10)^0,f,c
 22572  01FED4  50F4               	movf	244,w,c
 22573  01FED6  2235               	addwfc	(btemp+11)^0,f,c
 22574  01FED8  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 22575  01FEDE  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 22576  01FEE4  EC14  F006         	call	_strlen	;wreg free
 22577                           
 22578                           ;stkvar	_shape @ sp[(-1)+-1]
 22579  01FEE8  0EFE               	movlw	-2
 22580  01FEEA  50E3               	movf	plusw1,w,c
 22581  01FEEC  6E34               	movwf	(btemp+10)^0,c
 22582  01FEEE  6A35               	clrf	(btemp+11)^0,c
 22583  01FEF0  0ECD               	movlw	low spinners@s
 22584  01FEF2  2434               	addwf	(btemp+10)^0,w,c
 22585  01FEF4  6ED9               	movwf	fsr2l,c
 22586  01FEF6  0E01               	movlw	high spinners@s
 22587  01FEF8  2035               	addwfc	(btemp+11)^0,w,c
 22588  01FEFA  6EDA               	movwf	fsr2h,c
 22589  01FEFC  2ADF               	incf	indf2,f,c
 22590  01FEFE  50DF               	movf	indf2,w,c
 22591  01FF00  6E34               	movwf	(btemp+10)^0,c
 22592  01FF02  6A35               	clrf	(btemp+11)^0,c
 22593  01FF04  502A               	movf	btemp^0,w,c
 22594  01FF06  5C34               	subwf	(btemp+10)^0,w,c
 22595  01FF08  502B               	movf	(btemp+1)^0,w,c
 22596  01FF0A  5835               	subwfb	(btemp+11)^0,w,c
 22597  01FF0C  A0D8               	btfss	status,0,c
 22598  01FF0E  D00C               	goto	l16970
 22599                           
 22600                           ;mbmc.c: 158:   s[shape] = 0;
 22601                           ;stkvar	_shape @ sp[(-1)+-1]
 22602  01FF10  0EFE               	movlw	-2
 22603  01FF12  50E3               	movf	plusw1,w,c
 22604  01FF14  6E34               	movwf	(btemp+10)^0,c
 22605  01FF16  6A35               	clrf	(btemp+11)^0,c
 22606  01FF18  0ECD               	movlw	low spinners@s
 22607  01FF1A  2434               	addwf	(btemp+10)^0,w,c
 22608  01FF1C  6ED9               	movwf	fsr2l,c
 22609  01FF1E  0E01               	movlw	high spinners@s
 22610  01FF20  2035               	addwfc	(btemp+11)^0,w,c
 22611  01FF22  6EDA               	movwf	fsr2h,c
 22612  01FF24  0E00               	movlw	0
 22613  01FF26  6EDF               	movwf	indf2,c
 22614  01FF28                     l16970:
 22615                           
 22616                           ;mbmc.c: 159:  return c;
 22617                           ;stkvar	_c @ sp[(-1)+0]
 22618  01FF28  0EFF               	movlw	-1
 22619  01FF2A  006F FF8C  F02A    	movff	plusw1,btemp
 22620                           
 22621                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
 22622  01FF30  52E5               	movf	postdec1,f,c
 22623  01FF32  52E5               	movf	postdec1,f,c
 22624  01FF34  52E5               	movf	postdec1,f,c
 22625  01FF36  0012               	return		;funcret
 22626  01FF38                     __end_of_spinners:
 22627                           	opt callstack 0
 22628                           
 22629 ;; *************** function _get_switch *****************
 22630 ;; Defined at:
 22631 ;;		line 18 in file "dio.c"
 22632 ;; Parameters:    Size  Location     Type
 22633 ;;  i               1  [STACK] const unsigned char 
 22634 ;; Auto vars:     Size  Location     Type
 22635 ;;		None
 22636 ;; Return value:  Size  Location     Type
 22637 ;;                  1  [STACK] enum E17187
 22638 ;; Registers used:
 22639 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22640 ;; Tracked objects:
 22641 ;;		On entry : 0/0
 22642 ;;		On exit  : 0/0
 22643 ;;		Unchanged: 0/0
 22644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22649 ;;Total ram usage:        0 bytes
 22650 ;; Hardware stack levels used:    1
 22651 ;; Hardware stack levels required when called:   15
 22652 ;; This function calls:
 22653 ;;		Nothing
 22654 ;; This function is called by:
 22655 ;;		_main
 22656 ;;		_current_sensor_cal
 22657 ;;		_display_history
 22658 ;;		_hid_input
 22659 ;; This function uses a reentrant model
 22660 ;;
 22661                           
 22662                           	psect	text70
 22663  0023E0                     __ptext70:
 22664                           	opt callstack 0
 22665  0023E0                     _get_switch:
 22666                           	opt callstack 13
 22667                           
 22668                           ;dio.c: 18: SW_STATES get_switch(const uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 6)
 22669                           ;stkvar	_i @ sp[(0)+-1]
 22670                           
 22671                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22672                           ;incstack = 0
 22673  0023E0  0EFF               	movlw	-1
 22674  0023E2  006F FF8C  F02A    	movff	plusw1,btemp
 22675  0023E8  0E05               	movlw	5
 22676  0023EA  642A               	cpfsgt	btemp^0,c
 22677  0023EC  D002               	goto	l12872
 22678                           
 22679                           ;dio.c: 21:   return SW_OFF;
 22680  0023EE  0E00               	movlw	0
 22681  0023F0  D00A               	goto	L20
 22682  0023F2                     l12872:
 22683                           
 22684                           ;dio.c: 23:  return S.button[i].sw;
 22685                           ;stkvar	_i @ sp[(0)+-1]
 22686  0023F2  0EFF               	movlw	-1
 22687  0023F4  50E3               	movf	plusw1,w,c
 22688  0023F6  0D05               	mullw	5
 22689  0023F8  0EA4               	movlw	low _S
 22690  0023FA  24F3               	addwf	243,w,c
 22691  0023FC  6ED9               	movwf	fsr2l,c
 22692  0023FE  0E01               	movlw	high _S
 22693  002400  20F4               	addwfc	prodh,w,c
 22694  002402  6EDA               	movwf	fsr2h,c
 22695  002404  50DF               	movf	indf2,w,c
 22696  002406                     L20:
 22697  002406  6E2A               	movwf	btemp^0,c
 22698                           
 22699                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 22700  002408  52E5               	movf	postdec1,f,c
 22701  00240A  0012               	return		;funcret
 22702  00240C                     __end_of_get_switch:
 22703                           	opt callstack 0
 22704                           
 22705 ;; *************** function _clear_adc_scan *****************
 22706 ;; Defined at:
 22707 ;;		line 103 in file "daq.c"
 22708 ;; Parameters:    Size  Location     Type
 22709 ;;		None
 22710 ;; Auto vars:     Size  Location     Type
 22711 ;;		None
 22712 ;; Return value:  Size  Location     Type
 22713 ;;                  1  [STACK] void 
 22714 ;; Registers used:
 22715 ;;		None
 22716 ;; Tracked objects:
 22717 ;;		On entry : 0/0
 22718 ;;		On exit  : 3F/1
 22719 ;;		Unchanged: 0/0
 22720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22725 ;;Total ram usage:        0 bytes
 22726 ;; Hardware stack levels used:    1
 22727 ;; Hardware stack levels required when called:   15
 22728 ;; This function calls:
 22729 ;;		Nothing
 22730 ;; This function is called by:
 22731 ;;		_main
 22732 ;;		_current_sensor_cal
 22733 ;;		_update_adc_result
 22734 ;; This function uses a reentrant model
 22735 ;;
 22736                           
 22737                           	psect	text71
 22738  002AE6                     __ptext71:
 22739                           	opt callstack 0
 22740  002AE6                     _clear_adc_scan:
 22741                           	opt callstack 13
 22742                           
 22743                           ;daq.c: 105:  R.done = 0;
 22744                           
 22745                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22746                           ;incstack = 0
 22747  002AE6  0101               	movlb	1	; () banked
 22748  002AE8  6B35               	clrf	(_R+53)& (0+255),b	;volatile
 22749                           
 22750                           ; BSR set to: 1
 22751                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22752  002AEA  0012               	return		;funcret
 22753  002AEC                     __end_of_clear_adc_scan:
 22754                           	opt callstack 0
 22755                           
 22756 ;; *************** function _cal_current_zero *****************
 22757 ;; Defined at:
 22758 ;;		line 329 in file "daq.c"
 22759 ;; Parameters:    Size  Location     Type
 22760 ;;  mode            1  [STACK] const _Bool 
 22761 ;;  cb              2  [STACK] const short 
 22762 ;;  cp              2  [STACK] const short 
 22763 ;; Auto vars:     Size  Location     Type
 22764 ;;		None
 22765 ;; Return value:  Size  Location     Type
 22766 ;;                  1  [STACK] _Bool 
 22767 ;; Registers used:
 22768 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22769 ;; Tracked objects:
 22770 ;;		On entry : 0/1
 22771 ;;		On exit  : 0/0
 22772 ;;		Unchanged: 0/0
 22773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22778 ;;Total ram usage:        0 bytes
 22779 ;; Hardware stack levels used:    1
 22780 ;; Hardware stack levels required when called:   16
 22781 ;; This function calls:
 22782 ;;		_check_range
 22783 ;; This function is called by:
 22784 ;;		_current_sensor_cal
 22785 ;; This function uses a reentrant model
 22786 ;;
 22787                           
 22788                           	psect	text72
 22789  000DFC                     __ptext72:
 22790                           	opt callstack 0
 22791  000DFC                     _cal_current_zero:
 22792                           	opt callstack 13
 22793                           
 22794                           ;daq.c: 329: _Bool cal_current_zero(const _Bool mode, const int16_t cb, const int16_t cp
      +                          );daq.c: 330: {;daq.c: 332:  if (!check_range(cb, 100, 4000))
 22795                           
 22796                           ; BSR set to: 1
 22797                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22798                           ;incstack = 0
 22799  000DFC  0EA0               	movlw	160
 22800  000DFE  6EE6               	movwf	postinc1,c
 22801  000E00  0E0F               	movlw	15
 22802  000E02  6EE6               	movwf	postinc1,c
 22803  000E04  0E64               	movlw	100
 22804  000E06  6EE6               	movwf	postinc1,c
 22805  000E08  0E00               	movlw	0
 22806  000E0A  6EE6               	movwf	postinc1,c
 22807                           
 22808                           ;stkvar	_cb @ sp[(-4)+-3]
 22809  000E0C  0EF9               	movlw	-7
 22810  000E0E  006F FF8F FFE6     	movff	plusw1,postinc1
 22811  000E14  006F FF8F FFE6     	movff	plusw1,postinc1
 22812  000E1A  EC74  F009         	call	_check_range	;wreg free
 22813  000E1E  502A               	movf	btemp^0,w,c
 22814  000E20  A4D8               	btfss	status,2,c
 22815  000E22  D002               	goto	l13572
 22816  000E24                     u12640:
 22817                           
 22818                           ;daq.c: 333:   return 0;
 22819  000E24  0E00               	movlw	0
 22820  000E26  D019               	goto	L21
 22821  000E28                     l13572:
 22822                           
 22823                           ;daq.c: 335:  if (!check_range(cp, 100, 4000))
 22824  000E28  0EA0               	movlw	160
 22825  000E2A  6EE6               	movwf	postinc1,c
 22826  000E2C  0E0F               	movlw	15
 22827  000E2E  6EE6               	movwf	postinc1,c
 22828  000E30  0E64               	movlw	100
 22829  000E32  6EE6               	movwf	postinc1,c
 22830  000E34  0E00               	movlw	0
 22831  000E36  6EE6               	movwf	postinc1,c
 22832                           
 22833                           ;stkvar	_cp @ sp[(-4)+-5]
 22834  000E38  0EF7               	movlw	-9
 22835  000E3A  006F FF8F FFE6     	movff	plusw1,postinc1
 22836  000E40  006F FF8F FFE6     	movff	plusw1,postinc1
 22837  000E46  EC74  F009         	call	_check_range	;wreg free
 22838  000E4A  502A               	movf	btemp^0,w,c
 22839  000E4C  B4D8               	btfsc	status,2,c
 22840  000E4E  D7EA               	goto	u12640
 22841                           
 22842                           ;daq.c: 338:  if (!mode)
 22843                           ;stkvar	_mode @ sp[(0)+-1]
 22844  000E50  0EFF               	movlw	-1
 22845  000E52  50E3               	movf	plusw1,w,c
 22846  000E54  A4D8               	btfss	status,2,c
 22847  000E56  D003               	goto	l13584
 22848  000E58                     u12660:
 22849                           
 22850                           ;daq.c: 339:   return 1;
 22851  000E58  0E01               	movlw	1
 22852  000E5A                     L21:
 22853  000E5A  6E2A               	movwf	btemp^0,c
 22854  000E5C  D013               	goto	l2062
 22855  000E5E                     l13584:
 22856                           
 22857                           ;daq.c: 341:  R.n_offset[0] = cb;
 22858                           ;stkvar	_cb @ sp[(0)+-3]
 22859  000E5E  0EFD               	movlw	-3
 22860  000E60  006F FF8C  F126    	movff	plusw1,_R+38	;volatile
 22861  000E66  0EFE               	movlw	-2
 22862  000E68  006F FF8C  F127    	movff	plusw1,_R+39	;volatile
 22863                           
 22864                           ;daq.c: 342:  R.n_offset[1] = cp;
 22865                           ;stkvar	_cp @ sp[(0)+-5]
 22866  000E6E  0EFB               	movlw	-5
 22867  000E70  006F FF8C  F128    	movff	plusw1,_R+40	;volatile
 22868  000E76  0EFC               	movlw	-4
 22869  000E78  006F FF8C  F129    	movff	plusw1,_R+41	;volatile
 22870                           
 22871                           ;daq.c: 343:  R.c_zero_cal = 1;
 22872  000E7E  0101               	movlb	1	; () banked
 22873  000E80  8597               	bsf	(_R+151)& (0+255),2,b	;volatile
 22874  000E82  D7EA               	goto	u12660
 22875  000E84                     l2062:
 22876                           
 22877                           ; _cal_current_zero: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           5, argsize = 5, vargsize = 0
 22878  000E84  0EFB               	movlw	251
 22879  000E86  26E1               	addwf	fsr1l,f,c
 22880  000E88  0EFF               	movlw	255
 22881  000E8A  22E2               	addwfc	fsr1h,f,c
 22882  000E8C  0012               	return		;funcret
 22883  000E8E                     __end_of_cal_current_zero:
 22884                           	opt callstack 0
 22885                           
 22886 ;; *************** function _check_range *****************
 22887 ;; Defined at:
 22888 ;;		line 317 in file "daq.c"
 22889 ;; Parameters:    Size  Location     Type
 22890 ;;  value           2  [STACK] const short 
 22891 ;;  window          2  [STACK] const short 
 22892 ;;  standard        2  [STACK] const short 
 22893 ;; Auto vars:     Size  Location     Type
 22894 ;;		None
 22895 ;; Return value:  Size  Location     Type
 22896 ;;                  1  [STACK] _Bool 
 22897 ;; Registers used:
 22898 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22899 ;; Tracked objects:
 22900 ;;		On entry : 0/1
 22901 ;;		On exit  : 0/0
 22902 ;;		Unchanged: 0/0
 22903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22908 ;;Total ram usage:        0 bytes
 22909 ;; Hardware stack levels used:    1
 22910 ;; Hardware stack levels required when called:   15
 22911 ;; This function calls:
 22912 ;;		Nothing
 22913 ;; This function is called by:
 22914 ;;		_cal_current_zero
 22915 ;; This function uses a reentrant model
 22916 ;;
 22917                           
 22918                           	psect	text73
 22919  0012E8                     __ptext73:
 22920                           	opt callstack 0
 22921  0012E8                     _check_range:
 22922                           	opt callstack 13
 22923                           
 22924                           ;daq.c: 317: static _Bool check_range(const int16_t value, const int16_t window, const i
      +                          nt16_t standard);daq.c: 318: {;daq.c: 319:  if (value > (standard + window))
 22925                           ;stkvar	_value @ sp[(0)+-2]
 22926                           ;stkvar	_window @ sp[(0)+-4]
 22927                           ;stkvar	_standard @ sp[(0)+-6]
 22928                           
 22929                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22930                           ;incstack = 0
 22931  0012E8  0EFA               	movlw	-6
 22932  0012EA  006F FF8C  F034    	movff	plusw1,btemp+10
 22933  0012F0  0EFB               	movlw	-5
 22934  0012F2  006F FF8C  F035    	movff	plusw1,btemp+11
 22935  0012F8  0EFC               	movlw	-4
 22936  0012FA  50E3               	movf	plusw1,w,c
 22937  0012FC  2634               	addwf	(btemp+10)^0,f,c
 22938  0012FE  0EFD               	movlw	-3
 22939  001300  50E3               	movf	plusw1,w,c
 22940  001302  2235               	addwfc	(btemp+11)^0,f,c
 22941  001304  0EFE               	movlw	-2
 22942  001306  50E3               	movf	plusw1,w,c
 22943  001308  5C34               	subwf	(btemp+10)^0,w,c
 22944  00130A  5035               	movf	(btemp+11)^0,w,c
 22945  00130C  0A80               	xorlw	128
 22946  00130E  6E2A               	movwf	btemp^0,c
 22947  001310  0EFF               	movlw	-1
 22948  001312  50E3               	movf	plusw1,w,c
 22949  001314  0A80               	xorlw	128
 22950  001316  582A               	subwfb	btemp^0,w,c
 22951  001318  B0D8               	btfsc	status,0,c
 22952  00131A  D002               	goto	l12944
 22953  00131C                     u12370:
 22954                           
 22955                           ;daq.c: 320:   return 0;
 22956  00131C  0E00               	movlw	0
 22957  00131E  D01E               	goto	L22
 22958  001320                     l12944:
 22959                           
 22960                           ;daq.c: 321:  if (value < (standard - window))
 22961                           ;stkvar	_window @ sp[(0)+-4]
 22962                           ;stkvar	_standard @ sp[(0)+-6]
 22963  001320  0EFA               	movlw	-6
 22964  001322  006F FF8C  F034    	movff	plusw1,btemp+10
 22965  001328  0EFB               	movlw	-5
 22966  00132A  006F FF8C  F035    	movff	plusw1,btemp+11
 22967  001330  0EFC               	movlw	-4
 22968  001332  50E3               	movf	plusw1,w,c
 22969  001334  5E34               	subwf	(btemp+10)^0,f,c
 22970  001336  0EFD               	movlw	-3
 22971  001338  50E3               	movf	plusw1,w,c
 22972  00133A  5A35               	subwfb	(btemp+11)^0,f,c
 22973                           
 22974                           ;stkvar	_value @ sp[(0)+-2]
 22975  00133C  0EFE               	movlw	-2
 22976  00133E  006F FF8C  F02A    	movff	plusw1,btemp
 22977  001344  5034               	movf	(btemp+10)^0,w,c
 22978  001346  5C2A               	subwf	btemp^0,w,c
 22979  001348  0EFF               	movlw	-1
 22980  00134A  50E3               	movf	plusw1,w,c
 22981  00134C  0A80               	xorlw	128
 22982  00134E  6E2A               	movwf	btemp^0,c
 22983  001350  5035               	movf	(btemp+11)^0,w,c
 22984  001352  0A80               	xorlw	128
 22985  001354  582A               	subwfb	btemp^0,w,c
 22986  001356  A0D8               	btfss	status,0,c
 22987  001358  D7E1               	goto	u12370
 22988                           
 22989                           ;daq.c: 323:  return 1;
 22990  00135A  0E01               	movlw	1
 22991  00135C                     L22:
 22992  00135C  6E2A               	movwf	btemp^0,c
 22993                           
 22994                           ; _check_range: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
 22995  00135E  0EFA               	movlw	250
 22996  001360  26E1               	addwf	fsr1l,f,c
 22997  001362  0EFF               	movlw	255
 22998  001364  22E2               	addwfc	fsr1h,f,c
 22999  001366  0012               	return		;funcret
 23000  001368                     __end_of_check_range:
 23001                           	opt callstack 0
 23002                           
 23003 ;; *************** function _convert_adc_data *****************
 23004 ;; Defined at:
 23005 ;;		line 51 in file "mbmc.c"
 23006 ;; Parameters:    Size  Location     Type
 23007 ;;		None
 23008 ;; Auto vars:     Size  Location     Type
 23009 ;;  i               1  [STACK] unsigned char 
 23010 ;; Return value:  Size  Location     Type
 23011 ;;                  1  [STACK] void 
 23012 ;; Registers used:
 23013 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23014 ;; Tracked objects:
 23015 ;;		On entry : 0/2
 23016 ;;		On exit  : 0/0
 23017 ;;		Unchanged: 0/0
 23018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23023 ;;Total ram usage:        0 bytes
 23024 ;; Hardware stack levels used:    1
 23025 ;; Hardware stack levels required when called:   18
 23026 ;; This function calls:
 23027 ;;		_conv_raw_result
 23028 ;;		_lp_filter
 23029 ;; This function is called by:
 23030 ;;		_main
 23031 ;; This function uses a reentrant model
 23032 ;;
 23033                           
 23034                           	psect	text74
 23035  00076C                     __ptext74:
 23036                           	opt callstack 0
 23037  00076C                     _convert_adc_data:
 23038                           	opt callstack 0
 23039                           
 23040                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23041  00076C  52E6               	movf	postinc1,f,c
 23042                           
 23043                           ;mbmc.c: 53:  uint8_t i = 0;
 23044                           ;stkvar	_i @ sp[(-1)+0]
 23045                           
 23046                           ;incstack = 0
 23047  00076E  0EFF               	movlw	-1
 23048  000770  6AE3               	clrf	plusw1,c
 23049  000772                     l14386:
 23050                           
 23051                           ;mbmc.c: 56:   if (V.calib) {
 23052  000772  0102               	movlb	2	; () banked
 23053  000774  51B0               	movf	(_V+169)& (0+255),w,b	;volatile
 23054  000776  B4D8               	btfsc	status,2,c
 23055  000778  D01B               	goto	l14390
 23056                           
 23057                           ; BSR set to: 2
 23058                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
 23059  00077A  0E01               	movlw	1
 23060  00077C  6EE6               	movwf	postinc1,c
 23061                           
 23062                           ;stkvar	_i @ sp[(-2)+0]
 23063  00077E  0EFE               	movlw	-2
 23064  000780  50E3               	movf	plusw1,w,c
 23065  000782  6EE6               	movwf	postinc1,c
 23066  000784  0E01               	movlw	1
 23067  000786  6EE6               	movwf	postinc1,c
 23068                           
 23069                           ;stkvar	_i @ sp[(-4)+0]
 23070  000788  0EFC               	movlw	-4
 23071  00078A  50E3               	movf	plusw1,w,c
 23072  00078C  6EE6               	movwf	postinc1,c
 23073  00078E  ECCB  F0C3         	call	_conv_raw_result	;wreg free
 23074  000792  0060  F0AB  FFE6   	movff	btemp,postinc1
 23075  000798  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23076  00079E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 23077  0007A4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 23078  0007AA  EC41  F0ED         	call	_lp_filter	;wreg free
 23079  0007AE  D01A               	goto	L23
 23080  0007B0                     l14390:
 23081                           
 23082                           ; BSR set to: 2
 23083                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
 23084  0007B0  0E00               	movlw	0
 23085  0007B2  6EE6               	movwf	postinc1,c
 23086                           
 23087                           ;stkvar	_i @ sp[(-2)+0]
 23088  0007B4  0EFE               	movlw	-2
 23089  0007B6  50E3               	movf	plusw1,w,c
 23090  0007B8  6EE6               	movwf	postinc1,c
 23091  0007BA  0E00               	movlw	0
 23092  0007BC  6EE6               	movwf	postinc1,c
 23093                           
 23094                           ;stkvar	_i @ sp[(-4)+0]
 23095  0007BE  0EFC               	movlw	-4
 23096  0007C0  50E3               	movf	plusw1,w,c
 23097  0007C2  6EE6               	movwf	postinc1,c
 23098  0007C4  ECCB  F0C3         	call	_conv_raw_result	;wreg free
 23099  0007C8  0060  F0AB  FFE6   	movff	btemp,postinc1
 23100  0007CE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23101  0007D4  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 23102  0007DA  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 23103  0007E0  EC41  F0ED         	call	_lp_filter	;wreg free
 23104  0007E4                     L23:
 23105                           
 23106                           ;stkvar	_i @ sp[(-1)+0]
 23107  0007E4  0EFF               	movlw	-1
 23108  0007E6  50E3               	movf	plusw1,w,c
 23109  0007E8  0D04               	mullw	4
 23110  0007EA  0EFF               	movlw	low _C
 23111  0007EC  24F3               	addwf	243,w,c
 23112  0007EE  6ED9               	movwf	fsr2l,c
 23113  0007F0  0E08               	movlw	high _C
 23114  0007F2  20F4               	addwfc	prodh,w,c
 23115  0007F4  6EDA               	movwf	fsr2h,c
 23116  0007F6  0060  F0AB  FFDE   	movff	btemp,postinc2
 23117  0007FC  0060  F0AF  FFDE   	movff	btemp+1,postinc2
 23118  000802  0060  F0B3  FFDE   	movff	btemp+2,postinc2
 23119  000808  0060  F0B7  FFDE   	movff	btemp+3,postinc2
 23120                           
 23121                           ;mbmc.c: 61:  } while (++i < 16);
 23122                           ;stkvar	_i @ sp[(-1)+0]
 23123  00080E  0EFF               	movlw	-1
 23124  000810  2AE3               	incf	plusw1,f,c
 23125  000812  0EFF               	movlw	-1
 23126  000814  006F FF8C  F02A    	movff	plusw1,btemp
 23127  00081A  0E0F               	movlw	15
 23128  00081C  642A               	cpfsgt	btemp^0,c
 23129  00081E  D7A9               	goto	l14386
 23130                           
 23131                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23132  000820  52E5               	movf	postdec1,f,c
 23133  000822  0012               	return		;funcret
 23134  000824                     __end_of_convert_adc_data:
 23135                           	opt callstack 0
 23136                           
 23137 ;; *************** function _clear_hid_pflags *****************
 23138 ;; Defined at:
 23139 ;;		line 67 in file "hid.c"
 23140 ;; Parameters:    Size  Location     Type
 23141 ;;  h               2  [STACK] PTR struct H_data
 23142 ;;		 -> H(9), 
 23143 ;; Auto vars:     Size  Location     Type
 23144 ;;		None
 23145 ;; Return value:  Size  Location     Type
 23146 ;;                  1  [STACK] void 
 23147 ;; Registers used:
 23148 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 23149 ;; Tracked objects:
 23150 ;;		On entry : 3E/0
 23151 ;;		On exit  : 0/0
 23152 ;;		Unchanged: 0/0
 23153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23158 ;;Total ram usage:        0 bytes
 23159 ;; Hardware stack levels used:    1
 23160 ;; Hardware stack levels required when called:   15
 23161 ;; This function calls:
 23162 ;;		Nothing
 23163 ;; This function is called by:
 23164 ;;		_main
 23165 ;; This function uses a reentrant model
 23166 ;;
 23167                           
 23168                           	psect	text75
 23169  0016EE                     __ptext75:
 23170                           	opt callstack 0
 23171  0016EE                     _clear_hid_pflags:
 23172                           	opt callstack 15
 23173                           
 23174                           ;hid.c: 67: void clear_hid_pflags(H_data* h);hid.c: 68: {;hid.c: 69:  h->select_p = SW_O
      +                          FF;
 23175                           ;stkvar	_h @ sp[(0)+-2]
 23176                           
 23177                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23178                           ;incstack = 0
 23179  0016EE  0EFE               	movlw	-2
 23180  0016F0  006F FF8C  F034    	movff	plusw1,btemp+10
 23181  0016F6  0EFF               	movlw	-1
 23182  0016F8  006F FF8C  F035    	movff	plusw1,btemp+11
 23183  0016FE  0E03               	movlw	3
 23184  001700  2434               	addwf	(btemp+10)^0,w,c
 23185  001702  6ED9               	movwf	fsr2l,c
 23186  001704  0E00               	movlw	0
 23187  001706  2035               	addwfc	(btemp+11)^0,w,c
 23188  001708  6EDA               	movwf	fsr2h,c
 23189  00170A  0E00               	movlw	0
 23190  00170C  6EDF               	movwf	indf2,c
 23191                           
 23192                           ;hid.c: 70:  h->enter_p = SW_OFF;
 23193                           ;stkvar	_h @ sp[(0)+-2]
 23194  00170E  0EFE               	movlw	-2
 23195  001710  006F FF8C  F034    	movff	plusw1,btemp+10
 23196  001716  0EFF               	movlw	-1
 23197  001718  006F FF8C  F035    	movff	plusw1,btemp+11
 23198  00171E  0E05               	movlw	5
 23199  001720  2434               	addwf	(btemp+10)^0,w,c
 23200  001722  6ED9               	movwf	fsr2l,c
 23201  001724  0E00               	movlw	0
 23202  001726  2035               	addwfc	(btemp+11)^0,w,c
 23203  001728  6EDA               	movwf	fsr2h,c
 23204  00172A  0E00               	movlw	0
 23205  00172C  6EDF               	movwf	indf2,c
 23206                           
 23207                           ;hid.c: 71:  h->calib_p = SW_OFF;
 23208                           ;stkvar	_h @ sp[(0)+-2]
 23209  00172E  0EFE               	movlw	-2
 23210  001730  006F FF8C  F034    	movff	plusw1,btemp+10
 23211  001736  0EFF               	movlw	-1
 23212  001738  006F FF8C  F035    	movff	plusw1,btemp+11
 23213  00173E  0E07               	movlw	7
 23214  001740  2434               	addwf	(btemp+10)^0,w,c
 23215  001742  6ED9               	movwf	fsr2l,c
 23216  001744  0E00               	movlw	0
 23217  001746  2035               	addwfc	(btemp+11)^0,w,c
 23218  001748  6EDA               	movwf	fsr2h,c
 23219  00174A  0E00               	movlw	0
 23220  00174C  6EDF               	movwf	indf2,c
 23221                           
 23222                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 23223  00174E  52E5               	movf	postdec1,f,c
 23224  001750  52E5               	movf	postdec1,f,c
 23225  001752  0012               	return		;funcret
 23226  001754                     __end_of_clear_hid_pflags:
 23227                           	opt callstack 0
 23228                           
 23229 ;; *************** function _check_help *****************
 23230 ;; Defined at:
 23231 ;;		line 40 in file "mconfig.c"
 23232 ;; Parameters:    Size  Location     Type
 23233 ;;  flipper         1  [STACK] const _Bool 
 23234 ;; Auto vars:     Size  Location     Type
 23235 ;;  estatus         1    0        _Bool 
 23236 ;; Return value:  Size  Location     Type
 23237 ;;                  1  [STACK] _Bool 
 23238 ;; Registers used:
 23239 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 23240 ;; Tracked objects:
 23241 ;;		On entry : 3F/2
 23242 ;;		On exit  : 0/0
 23243 ;;		Unchanged: 0/0
 23244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23249 ;;Total ram usage:        0 bytes
 23250 ;; Hardware stack levels used:    1
 23251 ;; Hardware stack levels required when called:   27
 23252 ;; This function calls:
 23253 ;;		_StartTimer
 23254 ;;		_TimerDone
 23255 ;;		_display_help
 23256 ;;		_display_info
 23257 ;;		_get_vterm_ptr
 23258 ;;		_help_button
 23259 ;;		_mode_lamp_bright
 23260 ;;		_mode_lamp_dim
 23261 ;;		_set_display_info
 23262 ;;		_set_temp_display_help
 23263 ;;		_set_vterm
 23264 ;;		_sprintf
 23265 ;;		_update_lcd
 23266 ;;		_vterm_dump
 23267 ;; This function is called by:
 23268 ;;		_main
 23269 ;; This function uses a reentrant model
 23270 ;;
 23271                           
 23272                           	psect	text76
 23273  01D4A2                     __ptext76:
 23274                           	opt callstack 0
 23275  01D4A2                     _check_help:
 23276                           	opt callstack 3
 23277                           
 23278                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
 23279                           
 23280                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23281                           ;incstack = 0
 23282  01D4A2  EC8A  F010         	call	_help_button	;wreg free
 23283  01D4A6  502A               	movf	btemp^0,w,c
 23284  01D4A8  B4D8               	btfsc	status,2,c
 23285  01D4AA  D0D0               	goto	l17408
 23286  01D4AC  EC61  F015         	call	_display_info	;wreg free
 23287  01D4B0  042A               	decf	btemp^0,w,c
 23288  01D4B2  B4D8               	btfsc	status,2,c
 23289  01D4B4  D0CB               	goto	l17408
 23290                           
 23291                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
 23292  01D4B6  0EDC               	movlw	220
 23293  01D4B8  6EE6               	movwf	postinc1,c
 23294  01D4BA  0E05               	movlw	5
 23295  01D4BC  6EE6               	movwf	postinc1,c
 23296  01D4BE  0E0B               	movlw	11
 23297  01D4C0  6EE6               	movwf	postinc1,c
 23298  01D4C2  ECD0  F00F         	call	_StartTimer	;wreg free
 23299                           
 23300                           ;mconfig.c: 48:   if (V.debug)
 23301  01D4C6  0102               	movlb	2	; () banked
 23302  01D4C8  B39F               	btfsc	(_V+152)& (0+255),1,b	;volatile
 23303                           
 23304                           ; BSR set to: 2
 23305                           ;mconfig.c: 49:    vterm_dump();
 23306  01D4CA  EC86  F0F0         	call	_vterm_dump	;wreg free
 23307                           
 23308                           ;mconfig.c: 51:   set_vterm(1);
 23309  01D4CE  0E01               	movlw	1
 23310  01D4D0  6EE6               	movwf	postinc1,c
 23311  01D4D2  EC51  F014         	call	_set_vterm	;wreg free
 23312                           
 23313                           ;mconfig.c: 52:   set_temp_display_help(display_info());
 23314  01D4D6  EC61  F015         	call	_display_info	;wreg free
 23315  01D4DA  502A               	movf	btemp^0,w,c
 23316  01D4DC  6EE6               	movwf	postinc1,c
 23317  01D4DE  EC01  F015         	call	_set_temp_display_help	;wreg free
 23318                           
 23319                           ; BSR set to: 2
 23320                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
 23321  01D4E2  0E01               	movlw	1
 23322  01D4E4  6EE6               	movwf	postinc1,c
 23323  01D4E6  EC60  F014         	call	_set_display_info	;wreg free
 23324                           
 23325                           ;mconfig.c: 54:   if (flipper) {
 23326                           ;stkvar	_flipper @ sp[(0)+-1]
 23327  01D4EA  0EFF               	movlw	-1
 23328  01D4EC  50E3               	movf	plusw1,w,c
 23329  01D4EE  B4D8               	btfsc	status,2,c
 23330  01D4F0  D019               	goto	l17394
 23331                           
 23332                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
 23333  01D4F2  0EB6               	movlw	low STR_75
 23334  01D4F4  6EE6               	movwf	postinc1,c
 23335  01D4F6  0EFF               	movlw	high STR_75
 23336  01D4F8  6EE6               	movwf	postinc1,c
 23337  01D4FA  0E71               	movlw	low STR_77
 23338  01D4FC  6EE6               	movwf	postinc1,c
 23339  01D4FE  0EFF               	movlw	high STR_77
 23340  01D500  6EE6               	movwf	postinc1,c
 23341  01D502  0E01               	movlw	1
 23342  01D504  6EE6               	movwf	postinc1,c
 23343  01D506  0E00               	movlw	0
 23344  01D508  6EE6               	movwf	postinc1,c
 23345  01D50A  ECD9  F011         	call	_get_vterm_ptr	;wreg free
 23346  01D50E  0060  F0AB  FFE6   	movff	btemp,postinc1
 23347  01D514  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23348  01D51A  0E06               	movlw	6
 23349  01D51C  6EE6               	movwf	postinc1,c
 23350  01D51E  ECA5  F0FD         	call	_sprintf	;wreg free
 23351                           
 23352                           ;mconfig.c: 56:   } else {
 23353  01D522  D018               	goto	l1833
 23354  01D524                     l17394:
 23355                           
 23356                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
 23357  01D524  0ECC               	movlw	low STR_76
 23358  01D526  6EE6               	movwf	postinc1,c
 23359  01D528  0EFF               	movlw	high STR_76
 23360  01D52A  6EE6               	movwf	postinc1,c
 23361  01D52C  0E71               	movlw	low STR_77
 23362  01D52E  6EE6               	movwf	postinc1,c
 23363  01D530  0EFF               	movlw	high STR_77
 23364  01D532  6EE6               	movwf	postinc1,c
 23365  01D534  0E01               	movlw	1
 23366  01D536  6EE6               	movwf	postinc1,c
 23367  01D538  0E00               	movlw	0
 23368  01D53A  6EE6               	movwf	postinc1,c
 23369  01D53C  ECD9  F011         	call	_get_vterm_ptr	;wreg free
 23370  01D540  0060  F0AB  FFE6   	movff	btemp,postinc1
 23371  01D546  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23372  01D54C  0E06               	movlw	6
 23373  01D54E  6EE6               	movwf	postinc1,c
 23374  01D550  ECA5  F0FD         	call	_sprintf	;wreg free
 23375  01D554                     l1833:
 23376                           
 23377                           ; BSR set to: 0
 23378                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
 23379  01D554  0102               	movlb	2	; () banked
 23380  01D556  399F               	swapf	(_V+152)& (0+255),w,b	;volatile
 23381  01D558  32E8               	rrcf	wreg,f,c
 23382  01D55A  32E8               	rrcf	wreg,f,c
 23383  01D55C  0B03               	andlw	3
 23384  01D55E  0D2C               	mullw	44
 23385  01D560  0E16               	movlw	22
 23386  01D562  26F3               	addwf	243,f,c
 23387  01D564  0E00               	movlw	0
 23388  01D566  22F4               	addwfc	244,f,c
 23389  01D568  0EB7               	movlw	low _T
 23390  01D56A  6E34               	movwf	(btemp+10)^0,c
 23391  01D56C  0EF8               	movlw	high _T
 23392  01D56E  6E35               	movwf	(btemp+11)^0,c
 23393  01D570  50F3               	movf	243,w,c
 23394  01D572  2634               	addwf	(btemp+10)^0,f,c
 23395  01D574  50F4               	movf	244,w,c
 23396  01D576  2235               	addwfc	(btemp+11)^0,f,c
 23397  01D578  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 23398  01D57E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 23399  01D584  0EC2               	movlw	low STR_79
 23400  01D586  6EE6               	movwf	postinc1,c
 23401  01D588  0EFF               	movlw	high STR_79
 23402  01D58A  6EE6               	movwf	postinc1,c
 23403  01D58C  0E01               	movlw	1
 23404  01D58E  6EE6               	movwf	postinc1,c
 23405  01D590  0E01               	movlw	1
 23406  01D592  6EE6               	movwf	postinc1,c
 23407  01D594  ECD9  F011         	call	_get_vterm_ptr	;wreg free
 23408  01D598  0060  F0AB  FFE6   	movff	btemp,postinc1
 23409  01D59E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23410  01D5A4  0E06               	movlw	6
 23411  01D5A6  6EE6               	movwf	postinc1,c
 23412  01D5A8  ECA5  F0FD         	call	_sprintf	;wreg free
 23413                           
 23414                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
 23415  01D5AC  0102               	movlb	2	; () banked
 23416  01D5AE  399F               	swapf	(_V+152)& (0+255),w,b	;volatile
 23417  01D5B0  32E8               	rrcf	wreg,f,c
 23418  01D5B2  32E8               	rrcf	wreg,f,c
 23419  01D5B4  0B03               	andlw	3
 23420  01D5B6  0D2C               	mullw	44
 23421  01D5B8  0EB7               	movlw	low _T
 23422  01D5BA  6E34               	movwf	(btemp+10)^0,c
 23423  01D5BC  0EF8               	movlw	high _T
 23424  01D5BE  6E35               	movwf	(btemp+11)^0,c
 23425  01D5C0  50F3               	movf	243,w,c
 23426  01D5C2  2634               	addwf	(btemp+10)^0,f,c
 23427  01D5C4  50F4               	movf	244,w,c
 23428  01D5C6  2235               	addwfc	(btemp+11)^0,f,c
 23429  01D5C8  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 23430  01D5CE  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 23431  01D5D4  0EC2               	movlw	low STR_79
 23432  01D5D6  6EE6               	movwf	postinc1,c
 23433  01D5D8  0EFF               	movlw	high STR_79
 23434  01D5DA  6EE6               	movwf	postinc1,c
 23435  01D5DC  0E01               	movlw	1
 23436  01D5DE  6EE6               	movwf	postinc1,c
 23437  01D5E0  0E02               	movlw	2
 23438  01D5E2  6EE6               	movwf	postinc1,c
 23439  01D5E4  ECD9  F011         	call	_get_vterm_ptr	;wreg free
 23440  01D5E8  0060  F0AB  FFE6   	movff	btemp,postinc1
 23441  01D5EE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23442  01D5F4  0E06               	movlw	6
 23443  01D5F6  6EE6               	movwf	postinc1,c
 23444  01D5F8  ECA5  F0FD         	call	_sprintf	;wreg free
 23445                           
 23446                           ; BSR set to: 0
 23447                           ;mconfig.c: 61:   V.help_id++;
 23448  01D5FC  EE20  F29F         	lfsr	2,_V+152	;volatile
 23449  01D600  38DF               	swapf	223,w,c
 23450  01D602  6E35               	movwf	(btemp+11)^0,c
 23451  01D604  3235               	rrcf	(btemp+11)^0,f,c
 23452  01D606  3035               	rrcf	(btemp+11)^0,w,c
 23453  01D608  0B03               	andlw	3
 23454  01D60A  6E35               	movwf	(btemp+11)^0,c
 23455  01D60C  2A35               	incf	(btemp+11)^0,f,c
 23456  01D60E  3A35               	swapf	(btemp+11)^0,f,c
 23457  01D610  3635               	rlcf	(btemp+11)^0,f,c
 23458  01D612  3635               	rlcf	(btemp+11)^0,f,c
 23459  01D614  50DF               	movf	223,w,c
 23460  01D616  1835               	xorwf	(btemp+11)^0,w,c
 23461  01D618  0B3F               	andlw	-193
 23462  01D61A  1835               	xorwf	(btemp+11)^0,w,c
 23463  01D61C  6EDF               	movwf	223,c
 23464                           
 23465                           ; BSR set to: 0
 23466                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
 23467  01D61E  0EB8               	movlw	184
 23468  01D620  6EE6               	movwf	postinc1,c
 23469  01D622  0E0B               	movlw	11
 23470  01D624  6EE6               	movwf	postinc1,c
 23471  01D626  0E09               	movlw	9
 23472  01D628  6EE6               	movwf	postinc1,c
 23473  01D62A  ECD0  F00F         	call	_StartTimer	;wreg free
 23474                           
 23475                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
 23476  01D62E  0EB8               	movlw	184
 23477  01D630  6EE6               	movwf	postinc1,c
 23478  01D632  0E0B               	movlw	11
 23479  01D634  6EE6               	movwf	postinc1,c
 23480  01D636  0E07               	movlw	7
 23481  01D638  6EE6               	movwf	postinc1,c
 23482  01D63A  ECD0  F00F         	call	_StartTimer	;wreg free
 23483                           
 23484                           ;mconfig.c: 64:   mode_lamp_bright();
 23485  01D63E  EC1F  F015         	call	_mode_lamp_bright	;wreg free
 23486                           
 23487                           ;mconfig.c: 65:   update_lcd(1);
 23488  01D642  0E01               	movlw	1
 23489  01D644  6EE6               	movwf	postinc1,c
 23490  01D646  EC57  F0F6         	call	_update_lcd	;wreg free
 23491                           
 23492                           ;mconfig.c: 67:  } else {
 23493  01D64A  D032               	goto	l1834
 23494  01D64C                     l17408:
 23495                           
 23496                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
 23497  01D64C  0E09               	movlw	9
 23498  01D64E  6EE6               	movwf	postinc1,c
 23499  01D650  EC5B  F012         	call	_TimerDone	;wreg free
 23500  01D654  502A               	movf	btemp^0,w,c
 23501  01D656  B4D8               	btfsc	status,2,c
 23502  01D658  D02B               	goto	l1834
 23503                           
 23504                           ;mconfig.c: 69:    set_vterm(0);
 23505  01D65A  0E00               	movlw	0
 23506  01D65C  6EE6               	movwf	postinc1,c
 23507  01D65E  EC51  F014         	call	_set_vterm	;wreg free
 23508                           
 23509                           ;mconfig.c: 70:    V.help = 0;
 23510  01D662  0102               	movlb	2	; () banked
 23511  01D664  959F               	bcf	(_V+152)& (0+255),2,b	;volatile
 23512                           
 23513                           ; BSR set to: 2
 23514                           ;mconfig.c: 71:    set_display_info(display_help());
 23515  01D666  EC65  F015         	call	_display_help	;wreg free
 23516  01D66A  502A               	movf	btemp^0,w,c
 23517  01D66C  6EE6               	movwf	postinc1,c
 23518  01D66E  EC60  F014         	call	_set_display_info	;wreg free
 23519                           
 23520                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
 23521  01D672  0060  FA67  FFE6   	movff	_V+146,postinc1
 23522  01D678  0060  FA6B  FFE6   	movff	_V+147,postinc1
 23523  01D67E  EC89  F014         	call	_mode_lamp_dim	;wreg free
 23524                           
 23525                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
 23526  01D682  0E0B               	movlw	11
 23527  01D684  6EE6               	movwf	postinc1,c
 23528  01D686  EC5B  F012         	call	_TimerDone	;wreg free
 23529  01D68A  502A               	movf	btemp^0,w,c
 23530  01D68C  B4D8               	btfsc	status,2,c
 23531  01D68E  D010               	goto	l1834
 23532                           
 23533                           ;mconfig.c: 74:     V.flipper = !V.flipper;
 23534  01D690  0102               	movlb	2	; () banked
 23535  01D692  51AF               	movf	(_V+168)& (0+255),w,b	;volatile
 23536  01D694  A4D8               	btfss	status,2,c
 23537  01D696  D002               	goto	u17020
 23538  01D698  0E01               	movlw	1
 23539  01D69A  D001               	goto	u17030
 23540  01D69C                     u17020:
 23541  01D69C  0E00               	movlw	0
 23542  01D69E                     u17030:
 23543  01D69E  6FAF               	movwf	(_V+168)& (0+255),b	;volatile
 23544                           
 23545                           ; BSR set to: 2
 23546                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
 23547  01D6A0  0EDC               	movlw	220
 23548  01D6A2  6EE6               	movwf	postinc1,c
 23549  01D6A4  0E05               	movlw	5
 23550  01D6A6  6EE6               	movwf	postinc1,c
 23551  01D6A8  0E0B               	movlw	11
 23552  01D6AA  6EE6               	movwf	postinc1,c
 23553  01D6AC  ECD0  F00F         	call	_StartTimer	;wreg free
 23554  01D6B0                     l1834:
 23555                           
 23556                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 23557  01D6B0  52E5               	movf	postdec1,f,c
 23558  01D6B2  0012               	return		;funcret
 23559  01D6B4                     __end_of_check_help:
 23560                           	opt callstack 0
 23561                           
 23562 ;; *************** function _vterm_dump *****************
 23563 ;; Defined at:
 23564 ;;		line 124 in file "mconfig.c"
 23565 ;; Parameters:    Size  Location     Type
 23566 ;;		None
 23567 ;; Auto vars:     Size  Location     Type
 23568 ;;		None
 23569 ;; Return value:  Size  Location     Type
 23570 ;;                  1  [STACK] void 
 23571 ;; Registers used:
 23572 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 23573 ;; Tracked objects:
 23574 ;;		On entry : 3F/2
 23575 ;;		On exit  : 0/0
 23576 ;;		Unchanged: 0/0
 23577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23582 ;;Total ram usage:        0 bytes
 23583 ;; Hardware stack levels used:    1
 23584 ;; Hardware stack levels required when called:   26
 23585 ;; This function calls:
 23586 ;;		_WaitMs
 23587 ;;		_eaDogM_WriteStringAtPos
 23588 ;;		_get_vterm_ptr
 23589 ;;		_sprintf
 23590 ;;		_wait_lcd_done
 23591 ;; This function is called by:
 23592 ;;		_check_help
 23593 ;; This function uses a reentrant model
 23594 ;;
 23595                           
 23596                           	psect	text77
 23597  01E10C                     __ptext77:
 23598                           	opt callstack 0
 23599  01E10C                     _vterm_dump:
 23600                           	opt callstack 3
 23601                           
 23602                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
 23603                           
 23604                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23605                           ;incstack = 0
 23606  01E10C  0E01               	movlw	1
 23607  01E10E  6EE6               	movwf	postinc1,c
 23608  01E110  0E00               	movlw	0
 23609  01E112  6EE6               	movwf	postinc1,c
 23610  01E114  ECD9  F011         	call	_get_vterm_ptr	;wreg free
 23611  01E118  0060  F0AB  FFE6   	movff	btemp,postinc1
 23612  01E11E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23613  01E124  0E00               	movlw	0
 23614  01E126  6EE6               	movwf	postinc1,c
 23615  01E128  0E00               	movlw	0
 23616  01E12A  6EE6               	movwf	postinc1,c
 23617  01E12C  ECD9  F011         	call	_get_vterm_ptr	;wreg free
 23618  01E130  0060  F0AB  FFE6   	movff	btemp,postinc1
 23619  01E136  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23620  01E13C  0EA7               	movlw	low STR_81
 23621  01E13E  6EE6               	movwf	postinc1,c
 23622  01E140  0EFF               	movlw	high STR_81
 23623  01E142  6EE6               	movwf	postinc1,c
 23624  01E144  0E08               	movlw	low (_V+1)
 23625  01E146  6EE6               	movwf	postinc1,c
 23626  01E148  0E02               	movlw	high (_V+1)
 23627  01E14A  6EE6               	movwf	postinc1,c
 23628  01E14C  0E08               	movlw	8
 23629  01E14E  6EE6               	movwf	postinc1,c
 23630  01E150  ECA5  F0FD         	call	_sprintf	;wreg free
 23631                           
 23632                           ; BSR set to: 0
 23633                           ;mconfig.c: 127:  wait_lcd_done();
 23634  01E154  EC18  F015         	call	_wait_lcd_done	;wreg free
 23635                           
 23636                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(0, 0, V.buf);
 23637  01E158  0E08               	movlw	low (_V+1)
 23638  01E15A  6EE6               	movwf	postinc1,c
 23639  01E15C  0E02               	movlw	high (_V+1)
 23640  01E15E  6EE6               	movwf	postinc1,c
 23641  01E160  0E00               	movlw	0
 23642  01E162  6EE6               	movwf	postinc1,c
 23643  01E164  0E00               	movlw	0
 23644  01E166  6EE6               	movwf	postinc1,c
 23645  01E168  EC47  F007         	call	_eaDogM_WriteStringAtPos	;wreg free
 23646                           
 23647                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
 23648  01E16C  0E01               	movlw	1
 23649  01E16E  6EE6               	movwf	postinc1,c
 23650  01E170  0E01               	movlw	1
 23651  01E172  6EE6               	movwf	postinc1,c
 23652  01E174  ECD9  F011         	call	_get_vterm_ptr	;wreg free
 23653  01E178  0060  F0AB  FFE6   	movff	btemp,postinc1
 23654  01E17E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23655  01E184  0E00               	movlw	0
 23656  01E186  6EE6               	movwf	postinc1,c
 23657  01E188  0E01               	movlw	1
 23658  01E18A  6EE6               	movwf	postinc1,c
 23659  01E18C  ECD9  F011         	call	_get_vterm_ptr	;wreg free
 23660  01E190  0060  F0AB  FFE6   	movff	btemp,postinc1
 23661  01E196  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23662  01E19C  0EA7               	movlw	low STR_81
 23663  01E19E  6EE6               	movwf	postinc1,c
 23664  01E1A0  0EFF               	movlw	high STR_81
 23665  01E1A2  6EE6               	movwf	postinc1,c
 23666  01E1A4  0E08               	movlw	low (_V+1)
 23667  01E1A6  6EE6               	movwf	postinc1,c
 23668  01E1A8  0E02               	movlw	high (_V+1)
 23669  01E1AA  6EE6               	movwf	postinc1,c
 23670  01E1AC  0E08               	movlw	8
 23671  01E1AE  6EE6               	movwf	postinc1,c
 23672  01E1B0  ECA5  F0FD         	call	_sprintf	;wreg free
 23673                           
 23674                           ; BSR set to: 0
 23675                           ;mconfig.c: 130:  wait_lcd_done();
 23676  01E1B4  EC18  F015         	call	_wait_lcd_done	;wreg free
 23677                           
 23678                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(1, 0, V.buf);
 23679  01E1B8  0E08               	movlw	low (_V+1)
 23680  01E1BA  6EE6               	movwf	postinc1,c
 23681  01E1BC  0E02               	movlw	high (_V+1)
 23682  01E1BE  6EE6               	movwf	postinc1,c
 23683  01E1C0  0E00               	movlw	0
 23684  01E1C2  6EE6               	movwf	postinc1,c
 23685  01E1C4  0E01               	movlw	1
 23686  01E1C6  6EE6               	movwf	postinc1,c
 23687  01E1C8  EC47  F007         	call	_eaDogM_WriteStringAtPos	;wreg free
 23688                           
 23689                           ;mconfig.c: 132:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
 23690  01E1CC  0E01               	movlw	1
 23691  01E1CE  6EE6               	movwf	postinc1,c
 23692  01E1D0  0E02               	movlw	2
 23693  01E1D2  6EE6               	movwf	postinc1,c
 23694  01E1D4  ECD9  F011         	call	_get_vterm_ptr	;wreg free
 23695  01E1D8  0060  F0AB  FFE6   	movff	btemp,postinc1
 23696  01E1DE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23697  01E1E4  0E00               	movlw	0
 23698  01E1E6  6EE6               	movwf	postinc1,c
 23699  01E1E8  0E02               	movlw	2
 23700  01E1EA  6EE6               	movwf	postinc1,c
 23701  01E1EC  ECD9  F011         	call	_get_vterm_ptr	;wreg free
 23702  01E1F0  0060  F0AB  FFE6   	movff	btemp,postinc1
 23703  01E1F6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23704  01E1FC  0EA7               	movlw	low STR_81
 23705  01E1FE  6EE6               	movwf	postinc1,c
 23706  01E200  0EFF               	movlw	high STR_81
 23707  01E202  6EE6               	movwf	postinc1,c
 23708  01E204  0E08               	movlw	low (_V+1)
 23709  01E206  6EE6               	movwf	postinc1,c
 23710  01E208  0E02               	movlw	high (_V+1)
 23711  01E20A  6EE6               	movwf	postinc1,c
 23712  01E20C  0E08               	movlw	8
 23713  01E20E  6EE6               	movwf	postinc1,c
 23714  01E210  ECA5  F0FD         	call	_sprintf	;wreg free
 23715                           
 23716                           ; BSR set to: 0
 23717                           ;mconfig.c: 133:  wait_lcd_done();
 23718  01E214  EC18  F015         	call	_wait_lcd_done	;wreg free
 23719                           
 23720                           ;mconfig.c: 134:  eaDogM_WriteStringAtPos(2, 0, V.buf);
 23721  01E218  0E08               	movlw	low (_V+1)
 23722  01E21A  6EE6               	movwf	postinc1,c
 23723  01E21C  0E02               	movlw	high (_V+1)
 23724  01E21E  6EE6               	movwf	postinc1,c
 23725  01E220  0E00               	movlw	0
 23726  01E222  6EE6               	movwf	postinc1,c
 23727  01E224  0E02               	movlw	2
 23728  01E226  6EE6               	movwf	postinc1,c
 23729  01E228  EC47  F007         	call	_eaDogM_WriteStringAtPos	;wreg free
 23730                           
 23731                           ;mconfig.c: 135:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(3, 0), get_vterm_ptr(3,
      +                           1));
 23732  01E22C  0E01               	movlw	1
 23733  01E22E  6EE6               	movwf	postinc1,c
 23734  01E230  0E03               	movlw	3
 23735  01E232  6EE6               	movwf	postinc1,c
 23736  01E234  ECD9  F011         	call	_get_vterm_ptr	;wreg free
 23737  01E238  0060  F0AB  FFE6   	movff	btemp,postinc1
 23738  01E23E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23739  01E244  0E00               	movlw	0
 23740  01E246  6EE6               	movwf	postinc1,c
 23741  01E248  0E03               	movlw	3
 23742  01E24A  6EE6               	movwf	postinc1,c
 23743  01E24C  ECD9  F011         	call	_get_vterm_ptr	;wreg free
 23744  01E250  0060  F0AB  FFE6   	movff	btemp,postinc1
 23745  01E256  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23746  01E25C  0EA7               	movlw	low STR_81
 23747  01E25E  6EE6               	movwf	postinc1,c
 23748  01E260  0EFF               	movlw	high STR_81
 23749  01E262  6EE6               	movwf	postinc1,c
 23750  01E264  0E08               	movlw	low (_V+1)
 23751  01E266  6EE6               	movwf	postinc1,c
 23752  01E268  0E02               	movlw	high (_V+1)
 23753  01E26A  6EE6               	movwf	postinc1,c
 23754  01E26C  0E08               	movlw	8
 23755  01E26E  6EE6               	movwf	postinc1,c
 23756  01E270  ECA5  F0FD         	call	_sprintf	;wreg free
 23757                           
 23758                           ; BSR set to: 0
 23759                           ;mconfig.c: 136:  wait_lcd_done();
 23760  01E274  EC18  F015         	call	_wait_lcd_done	;wreg free
 23761                           
 23762                           ;mconfig.c: 137:  eaDogM_WriteStringAtPos(3, 0, V.buf);
 23763  01E278  0E08               	movlw	low (_V+1)
 23764  01E27A  6EE6               	movwf	postinc1,c
 23765  01E27C  0E02               	movlw	high (_V+1)
 23766  01E27E  6EE6               	movwf	postinc1,c
 23767  01E280  0E00               	movlw	0
 23768  01E282  6EE6               	movwf	postinc1,c
 23769  01E284  0E03               	movlw	3
 23770  01E286  6EE6               	movwf	postinc1,c
 23771  01E288  EC47  F007         	call	_eaDogM_WriteStringAtPos	;wreg free
 23772                           
 23773                           ; BSR set to: 59
 23774                           ;mconfig.c: 138:  WaitMs(3000);
 23775  01E28C  0EB8               	movlw	184
 23776  01E28E  6EE6               	movwf	postinc1,c
 23777  01E290  0E0B               	movlw	11
 23778  01E292  6EE6               	movwf	postinc1,c
 23779  01E294  ECDD  F010         	call	_WaitMs	;wreg free
 23780                           
 23781                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 23782  01E298  0012               	return		;funcret
 23783  01E29A                     __end_of_vterm_dump:
 23784                           	opt callstack 0
 23785                           
 23786 ;; *************** function _sprintf *****************
 23787 ;; Defined at:
 23788 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 23789 ;; Parameters:    Size  Location     Type
 23790 ;;  s               2  [STACK] PTR unsigned char 
 23791 ;;		 -> D.lcd(640), D(642), port_data(512), V(181), 
 23792 ;;  fmt             2  [STACK] PTR const unsigned char 
 23793 ;;		 -> STR_95(127), STR_93(3), STR_92(3), STR_91(21), 
 23794 ;;		 -> STR_90(21), STR_89(21), STR_88(21), STR_87(21), 
 23795 ;;		 -> STR_86(21), STR_85(26), STR_84(15), STR_83(15), 
 23796 ;;		 -> STR_82(15), STR_81(15), STR_80(10), STR_79(10), 
 23797 ;;		 -> STR_78(19), STR_77(19), STR_73(14), STR_72(28), 
 23798 ;;		 -> STR_71(28), STR_70(28), STR_69(22), STR_68(22), 
 23799 ;;		 -> STR_67(22), STR_66(22), STR_65(22), STR_64(22), 
 23800 ;;		 -> STR_63(22), STR_62(22), STR_61(22), STR_60(21), 
 23801 ;;		 -> STR_59(22), STR_58(22), STR_57(22), STR_56(22), 
 23802 ;;		 -> STR_55(22), STR_54(22), STR_53(24), STR_52(24), 
 23803 ;;		 -> STR_51(24), STR_50(30), STR_49(24), STR_48(24), 
 23804 ;;		 -> STR_47(23), STR_46(23), STR_45(23), STR_44(23), 
 23805 ;;		 -> STR_43(23), STR_42(23), STR_41(23), STR_40(23), 
 23806 ;;		 -> STR_39(23), STR_38(23), STR_37(23), STR_36(23), 
 23807 ;;		 -> STR_35(18), STR_34(17), STR_33(17), STR_32(22), 
 23808 ;;		 -> STR_31(22), STR_30(22), STR_29(14), STR_28(14), 
 23809 ;;		 -> STR_27(27), STR_26(27), STR_25(23), STR_24(22), 
 23810 ;;		 -> STR_23(22), STR_22(22), STR_21(22), STR_20(23), 
 23811 ;;		 -> STR_19(23), STR_18(23), STR_17(26), STR_16(22), 
 23812 ;;		 -> STR_15(21), STR_14(21), STR_13(21), STR_12(21), 
 23813 ;;		 -> STR_11(21), STR_10(21), STR_9(21), STR_8(21), 
 23814 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 23815 ;;		 -> STR_2(21), STR_1(21), 
 23816 ;; Auto vars:     Size  Location     Type
 23817 ;;  f               6  [STACK] struct _IO_FILE
 23818 ;;  ap              2  [STACK] PTR void [1]
 23819 ;;		 -> ?_printf(2), ?_sprintf(2), 
 23820 ;;  ret             2    0        int 
 23821 ;; Return value:  Size  Location     Type
 23822 ;;                  2  [STACK] int 
 23823 ;; Registers used:
 23824 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 23825 ;; Tracked objects:
 23826 ;;		On entry : 0/2
 23827 ;;		On exit  : 3F/0
 23828 ;;		Unchanged: 0/0
 23829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23834 ;;Total ram usage:        0 bytes
 23835 ;; Hardware stack levels used:    1
 23836 ;; Hardware stack levels required when called:   23
 23837 ;; This function calls:
 23838 ;;		_vfprintf
 23839 ;; This function is called by:
 23840 ;;		_main
 23841 ;;		_current_sensor_cal
 23842 ;;		_display_history
 23843 ;;		_check_help
 23844 ;;		_vterm_dump
 23845 ;;		_calc_bsoc
 23846 ;; This function uses a reentrant model
 23847 ;;
 23848                           
 23849                           	psect	text78
 23850  01FB4A                     __ptext78:
 23851                           	opt callstack 0
 23852  01FB4A                     _sprintf:
 23853                           	opt callstack 0
 23854                           
 23855                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 23856  01FB4A  0E08               	movlw	8
 23857  01FB4C  26E1               	addwf	fsr1l,f,c
 23858  01FB4E  0E00               	movlw	0
 23859  01FB50  22E2               	addwfc	fsr1h,f,c
 23860                           
 23861                           ;incstack = 0
 23862 ;; hardware stack exceeded
 23863  01FB52  0EFE               	movlw	254
 23864  01FB54  6E34               	movwf	(btemp+10)^0,c
 23865  01FB56  0EFF               	movlw	255
 23866  01FB58  6E35               	movwf	(btemp+11)^0,c
 23867                           
 23868                           ;stkvar	?_sprintf @ sp[(-8)+-3]
 23869  01FB5A  0EF5               	movlw	245
 23870  01FB5C  24E1               	addwf	fsr1l,w,c
 23871  01FB5E  6E32               	movwf	(btemp+8)^0,c
 23872  01FB60  0EFF               	movlw	255
 23873  01FB62  20E2               	addwfc	fsr1h,w,c
 23874  01FB64  6E33               	movwf	(btemp+9)^0,c
 23875  01FB66  5034               	movf	(btemp+10)^0,w,c
 23876  01FB68  2632               	addwf	(btemp+8)^0,f,c
 23877  01FB6A  5035               	movf	(btemp+11)^0,w,c
 23878  01FB6C  2233               	addwfc	(btemp+9)^0,f,c
 23879                           
 23880                           ;stkvar	_ap @ sp[(-8)+6]
 23881  01FB6E  0EFF               	movlw	-1
 23882  01FB70  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 23883  01FB76  0EFE               	movlw	-2
 23884  01FB78  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 23885                           
 23886                           ;stkvar	_s @ sp[(-8)+-3]
 23887  01FB7E  0EF5               	movlw	-11
 23888  01FB80  006F FF8C  F034    	movff	plusw1,btemp+10
 23889  01FB86  0EF6               	movlw	-10
 23890  01FB88  006F FF8C  F035    	movff	plusw1,btemp+11
 23891                           
 23892                           ;stkvar	_f @ sp[(-8)+0]
 23893  01FB8E  0EF9               	movlw	-7
 23894  01FB90  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 23895  01FB96  0EF8               	movlw	-8
 23896  01FB98  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 23897                           
 23898                           ;stkvar	_f @ sp[(-8)+0]
 23899  01FB9E  0EFA               	movlw	250
 23900  01FBA0  24E1               	addwf	fsr1l,w,c
 23901  01FBA2  6ED9               	movwf	fsr2l,c
 23902  01FBA4  0EFF               	movlw	255
 23903  01FBA6  20E2               	addwfc	fsr1h,w,c
 23904  01FBA8  6EDA               	movwf	fsr2h,c
 23905  01FBAA  0E00               	movlw	0
 23906  01FBAC  6EDE               	movwf	postinc2,c
 23907  01FBAE  0E00               	movlw	0
 23908  01FBB0  6EDD               	movwf	postdec2,c
 23909                           
 23910                           ;stkvar	_f @ sp[(-8)+0]
 23911  01FBB2  0EFC               	movlw	252
 23912  01FBB4  24E1               	addwf	fsr1l,w,c
 23913  01FBB6  6ED9               	movwf	fsr2l,c
 23914  01FBB8  0EFF               	movlw	255
 23915  01FBBA  20E2               	addwfc	fsr1h,w,c
 23916  01FBBC  6EDA               	movwf	fsr2h,c
 23917  01FBBE  0E00               	movlw	0
 23918  01FBC0  6EDE               	movwf	postinc2,c
 23919  01FBC2  0E00               	movlw	0
 23920  01FBC4  6EDD               	movwf	postdec2,c
 23921                           
 23922                           ;stkvar	_ap @ sp[(-8)+6]
 23923  01FBC6  0EFE               	movlw	254
 23924  01FBC8  24E1               	addwf	fsr1l,w,c
 23925  01FBCA  6E2A               	movwf	btemp^0,c
 23926  01FBCC  0EFF               	movlw	255
 23927  01FBCE  20E2               	addwfc	fsr1h,w,c
 23928  01FBD0  6E2B               	movwf	(btemp+1)^0,c
 23929  01FBD2  0060  F0AB  FFE6   	movff	btemp,postinc1
 23930  01FBD8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23931                           
 23932                           ;stkvar	_fmt @ sp[(-10)+-5]
 23933  01FBDE  0EF1               	movlw	-15
 23934  01FBE0  006F FF8F FFE6     	movff	plusw1,postinc1
 23935  01FBE6  006F FF8F FFE6     	movff	plusw1,postinc1
 23936                           
 23937                           ;stkvar	_f @ sp[(-12)+0]
 23938  01FBEC  0EF4               	movlw	244
 23939  01FBEE  24E1               	addwf	fsr1l,w,c
 23940  01FBF0  6E2A               	movwf	btemp^0,c
 23941  01FBF2  0EFF               	movlw	255
 23942  01FBF4  20E2               	addwfc	fsr1h,w,c
 23943  01FBF6  6E2B               	movwf	(btemp+1)^0,c
 23944  01FBF8  0060  F0AB  FFE6   	movff	btemp,postinc1
 23945  01FBFE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23946  01FC04  ECC4  F004         	call	_vfprintf	;wreg free
 23947                           
 23948                           ; BSR set to: 0
 23949                           ;stkvar	_f @ sp[(-8)+0]
 23950  01FC08  0EFA               	movlw	250
 23951  01FC0A  24E1               	addwf	fsr1l,w,c
 23952  01FC0C  6ED9               	movwf	fsr2l,c
 23953  01FC0E  0EFF               	movlw	255
 23954  01FC10  20E2               	addwfc	fsr1h,w,c
 23955  01FC12  6EDA               	movwf	fsr2h,c
 23956  01FC14  006F FF78  F034    	movff	postinc2,btemp+10
 23957  01FC1A  006F FF74  F035    	movff	postdec2,btemp+11
 23958                           
 23959                           ;stkvar	_s @ sp[(-8)+-3]
 23960  01FC20  0EF5               	movlw	-11
 23961  01FC22  006F FF8C  F032    	movff	plusw1,btemp+8
 23962  01FC28  0EF6               	movlw	-10
 23963  01FC2A  006F FF8C  F033    	movff	plusw1,btemp+9
 23964  01FC30  5034               	movf	(btemp+10)^0,w,c
 23965  01FC32  2432               	addwf	(btemp+8)^0,w,c
 23966  01FC34  6ED9               	movwf	fsr2l,c
 23967  01FC36  5035               	movf	(btemp+11)^0,w,c
 23968  01FC38  2033               	addwfc	(btemp+9)^0,w,c
 23969  01FC3A  6EDA               	movwf	fsr2h,c
 23970  01FC3C  0E00               	movlw	0
 23971  01FC3E  6EDF               	movwf	indf2,c
 23972                           
 23973                           ; BSR set to: 0
 23974                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, args
      +                          ize = 4, vargsize = 0
 23975  01FC40  0EF8               	movlw	248
 23976  01FC42  26E1               	addwf	fsr1l,f,c
 23977  01FC44  0EFF               	movlw	255
 23978  01FC46  22E2               	addwfc	fsr1h,f,c
 23979  01FC48  52E5               	movf	postdec1,f,c
 23980  01FC4A  50E7               	movf	indf1,w,c
 23981  01FC4C  5EE1               	subwf	fsr1l,f,c
 23982  01FC4E  0E00               	movlw	0
 23983  01FC50  5AE2               	subwfb	fsr1h,f,c
 23984  01FC52  0012               	return		;funcret
 23985  01FC54                     __end_of_sprintf:
 23986                           	opt callstack 0
 23987                           
 23988 ;; *************** function _get_vterm_ptr *****************
 23989 ;; Defined at:
 23990 ;;		line 119 in file "mconfig.c"
 23991 ;; Parameters:    Size  Location     Type
 23992 ;;  line            1  [STACK] const unsigned char 
 23993 ;;  vterm           1  [STACK] const unsigned char 
 23994 ;; Auto vars:     Size  Location     Type
 23995 ;;		None
 23996 ;; Return value:  Size  Location     Type
 23997 ;;                  2  [STACK] PTR unsigned char 
 23998 ;; Registers used:
 23999 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
 24000 ;; Tracked objects:
 24001 ;;		On entry : 0/2
 24002 ;;		On exit  : 0/0
 24003 ;;		Unchanged: 0/0
 24004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24009 ;;Total ram usage:        0 bytes
 24010 ;; Hardware stack levels used:    1
 24011 ;; Hardware stack levels required when called:   15
 24012 ;; This function calls:
 24013 ;;		Nothing
 24014 ;; This function is called by:
 24015 ;;		_main
 24016 ;;		_current_sensor_cal
 24017 ;;		_display_history
 24018 ;;		_check_help
 24019 ;;		_vterm_dump
 24020 ;; This function uses a reentrant model
 24021 ;;
 24022                           
 24023                           	psect	text79
 24024  0023B2                     __ptext79:
 24025                           	opt callstack 0
 24026  0023B2                     _get_vterm_ptr:
 24027                           	opt callstack 15
 24028                           
 24029                           ;mconfig.c: 119: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 120: {;mconfig.c: 121:  return D.lcd[vterm & 0x03][line & 0x03];
 24030                           ;stkvar	_vterm @ sp[(0)+-2]
 24031                           
 24032                           ; BSR set to: 0
 24033                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24034                           ;incstack = 0
 24035  0023B2  0EFE               	movlw	-2
 24036  0023B4  50E3               	movf	plusw1,w,c
 24037  0023B6  0B03               	andlw	3
 24038  0023B8  0DA0               	mullw	160
 24039  0023BA  0E3F               	movlw	low _D
 24040  0023BC  6E2A               	movwf	btemp^0,c
 24041  0023BE  0E0A               	movlw	high _D
 24042  0023C0  6E2B               	movwf	(btemp+1)^0,c
 24043  0023C2  50F3               	movf	243,w,c
 24044  0023C4  262A               	addwf	btemp^0,f,c
 24045  0023C6  50F4               	movf	244,w,c
 24046  0023C8  222B               	addwfc	(btemp+1)^0,f,c
 24047                           
 24048                           ;stkvar	_line @ sp[(0)+-1]
 24049  0023CA  0EFF               	movlw	-1
 24050  0023CC  50E3               	movf	plusw1,w,c
 24051  0023CE  0B03               	andlw	3
 24052  0023D0  0D28               	mullw	40
 24053  0023D2  50F3               	movf	243,w,c
 24054  0023D4  262A               	addwf	btemp^0,f,c
 24055  0023D6  50F4               	movf	244,w,c
 24056  0023D8  222B               	addwfc	(btemp+1)^0,f,c
 24057                           
 24058                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 24059  0023DA  52E5               	movf	postdec1,f,c
 24060  0023DC  52E5               	movf	postdec1,f,c
 24061  0023DE  0012               	return		;funcret
 24062  0023E0                     __end_of_get_vterm_ptr:
 24063                           	opt callstack 0
 24064                           
 24065 ;; *************** function _WaitMs *****************
 24066 ;; Defined at:
 24067 ;;		line 32 in file "timers.c"
 24068 ;; Parameters:    Size  Location     Type
 24069 ;;  numMilliseco    2  [STACK] const unsigned short 
 24070 ;; Auto vars:     Size  Location     Type
 24071 ;;		None
 24072 ;; Return value:  Size  Location     Type
 24073 ;;                  1  [STACK] void 
 24074 ;; Registers used:
 24075 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24076 ;; Tracked objects:
 24077 ;;		On entry : 0/2
 24078 ;;		On exit  : 0/0
 24079 ;;		Unchanged: 0/0
 24080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24085 ;;Total ram usage:        0 bytes
 24086 ;; Hardware stack levels used:    1
 24087 ;; Hardware stack levels required when called:   16
 24088 ;; This function calls:
 24089 ;;		_StartTimer
 24090 ;;		_TimerDone
 24091 ;; This function is called by:
 24092 ;;		_main
 24093 ;;		_current_sensor_cal
 24094 ;;		_display_history
 24095 ;;		_vterm_dump
 24096 ;; This function uses a reentrant model
 24097 ;;
 24098                           
 24099                           	psect	text80
 24100  0021BA                     __ptext80:
 24101                           	opt callstack 0
 24102  0021BA                     _WaitMs:
 24103                           	opt callstack 13
 24104                           
 24105                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 24106                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
 24107                           
 24108                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24109                           ;incstack = 0
 24110  0021BA  0EFE               	movlw	-2
 24111  0021BC  006F FF8F FFE6     	movff	plusw1,postinc1
 24112  0021C2  006F FF8F FFE6     	movff	plusw1,postinc1
 24113  0021C8  0E00               	movlw	0
 24114  0021CA  6EE6               	movwf	postinc1,c
 24115  0021CC  ECD0  F00F         	call	_StartTimer	;wreg free
 24116                           
 24117                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 24118  0021D0  D005               	goto	l12818
 24119  0021D2                     l1765:
 24120                           
 24121                           ;timers.c: 36:   __nop();
 24122  0021D2  F000               	nop	
 24123                           
 24124                           ;timers.c: 37:   __nop();
 24125  0021D4  F000               	nop	
 24126                           
 24127                           ;timers.c: 38:   __nop();
 24128  0021D6  F000               	nop	
 24129                           
 24130                           ;timers.c: 39:   __nop();
 24131  0021D8  F000               	nop	
 24132  0021DA  0004               	clrwdt		;# 
 24133  0021DC                     l12818:
 24134                           
 24135                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 24136  0021DC  0E00               	movlw	0
 24137  0021DE  6EE6               	movwf	postinc1,c
 24138  0021E0  EC5B  F012         	call	_TimerDone	;wreg free
 24139  0021E4  502A               	movf	btemp^0,w,c
 24140  0021E6  B4D8               	btfsc	status,2,c
 24141  0021E8  D7F4               	goto	l1765
 24142                           
 24143                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 24144  0021EA  52E5               	movf	postdec1,f,c
 24145  0021EC  52E5               	movf	postdec1,f,c
 24146  0021EE  0012               	return		;funcret
 24147  0021F0                     __end_of_WaitMs:
 24148                           	opt callstack 0
 24149                           
 24150 ;; *************** function _update_lcd *****************
 24151 ;; Defined at:
 24152 ;;		line 85 in file "mconfig.c"
 24153 ;; Parameters:    Size  Location     Type
 24154 ;;  vterm           1  [STACK] unsigned char 
 24155 ;; Auto vars:     Size  Location     Type
 24156 ;;		None
 24157 ;; Return value:  Size  Location     Type
 24158 ;;                  1  [STACK] unsigned char 
 24159 ;; Registers used:
 24160 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 24161 ;; Tracked objects:
 24162 ;;		On entry : 0/0
 24163 ;;		On exit  : 0/0
 24164 ;;		Unchanged: 0/0
 24165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24170 ;;Total ram usage:        0 bytes
 24171 ;; Hardware stack levels used:    1
 24172 ;; Hardware stack levels required when called:   26
 24173 ;; This function calls:
 24174 ;;		_eaDogM_WriteStringAtPos
 24175 ;;		_wait_lcd_done
 24176 ;; This function is called by:
 24177 ;;		_main
 24178 ;;		_current_sensor_cal
 24179 ;;		_display_history
 24180 ;;		_check_help
 24181 ;; This function uses a reentrant model
 24182 ;;
 24183                           
 24184                           	psect	text81
 24185  01ECAE                     __ptext81:
 24186                           	opt callstack 0
 24187  01ECAE                     _update_lcd:
 24188                           	opt callstack 4
 24189                           
 24190                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
 24191                           ;stkvar	_vterm @ sp[(0)+-1]
 24192                           
 24193                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24194                           ;incstack = 0
 24195  01ECAE  0EFF               	movlw	-1
 24196  01ECB0  006F FF8C  F02A    	movff	plusw1,btemp
 24197  01ECB6  0E03               	movlw	3
 24198  01ECB8  162A               	andwf	btemp^0,f,c
 24199  01ECBA  0EFF               	movlw	-1
 24200  01ECBC  0060  F0AB  FFE3   	movff	btemp,plusw1
 24201                           
 24202                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
 24203  01ECC2  EE23  F0BF         	lfsr	2,_D+640
 24204  01ECC6  A0DF               	btfss	indf2,0,c
 24205  01ECC8  D004               	goto	l16938
 24206                           
 24207                           ;stkvar	_vterm @ sp[(0)+-1]
 24208  01ECCA  0EFF               	movlw	-1
 24209  01ECCC  50E3               	movf	plusw1,w,c
 24210  01ECCE  B4D8               	btfsc	status,2,c
 24211  01ECD0  D09C               	goto	l1841
 24212  01ECD2                     l16938:
 24213                           
 24214                           ;mconfig.c: 92:  D.lcd[vterm][0][20] = 0;
 24215                           ;stkvar	_vterm @ sp[(0)+-1]
 24216  01ECD2  0EFF               	movlw	-1
 24217  01ECD4  50E3               	movf	plusw1,w,c
 24218  01ECD6  0DA0               	mullw	160
 24219  01ECD8  0E53               	movlw	low (_D+20)
 24220  01ECDA  24F3               	addwf	243,w,c
 24221  01ECDC  6ED9               	movwf	fsr2l,c
 24222  01ECDE  0E0A               	movlw	high (_D+20)
 24223  01ECE0  20F4               	addwfc	prodh,w,c
 24224  01ECE2  6EDA               	movwf	fsr2h,c
 24225  01ECE4  0E00               	movlw	0
 24226  01ECE6  6EDF               	movwf	indf2,c
 24227                           
 24228                           ;mconfig.c: 93:  D.lcd[vterm][1][20] = 0;
 24229                           ;stkvar	_vterm @ sp[(0)+-1]
 24230  01ECE8  0EFF               	movlw	-1
 24231  01ECEA  50E3               	movf	plusw1,w,c
 24232  01ECEC  0DA0               	mullw	160
 24233  01ECEE  0E7B               	movlw	low (_D+60)
 24234  01ECF0  24F3               	addwf	243,w,c
 24235  01ECF2  6ED9               	movwf	fsr2l,c
 24236  01ECF4  0E0A               	movlw	high (_D+60)
 24237  01ECF6  20F4               	addwfc	prodh,w,c
 24238  01ECF8  6EDA               	movwf	fsr2h,c
 24239  01ECFA  0E00               	movlw	0
 24240  01ECFC  6EDF               	movwf	indf2,c
 24241                           
 24242                           ;mconfig.c: 94:  D.lcd[vterm][2][20] = 0;
 24243                           ;stkvar	_vterm @ sp[(0)+-1]
 24244  01ECFE  0EFF               	movlw	-1
 24245  01ED00  50E3               	movf	plusw1,w,c
 24246  01ED02  0DA0               	mullw	160
 24247  01ED04  0EA3               	movlw	low (_D+100)
 24248  01ED06  24F3               	addwf	243,w,c
 24249  01ED08  6ED9               	movwf	fsr2l,c
 24250  01ED0A  0E0A               	movlw	high (_D+100)
 24251  01ED0C  20F4               	addwfc	prodh,w,c
 24252  01ED0E  6EDA               	movwf	fsr2h,c
 24253  01ED10  0E00               	movlw	0
 24254  01ED12  6EDF               	movwf	indf2,c
 24255                           
 24256                           ;mconfig.c: 95:  D.lcd[vterm][3][20] = 0;
 24257                           ;stkvar	_vterm @ sp[(0)+-1]
 24258  01ED14  0EFF               	movlw	-1
 24259  01ED16  50E3               	movf	plusw1,w,c
 24260  01ED18  0DA0               	mullw	160
 24261  01ED1A  0ECB               	movlw	low (_D+140)
 24262  01ED1C  24F3               	addwf	243,w,c
 24263  01ED1E  6ED9               	movwf	fsr2l,c
 24264  01ED20  0E0A               	movlw	high (_D+140)
 24265  01ED22  20F4               	addwfc	prodh,w,c
 24266  01ED24  6EDA               	movwf	fsr2h,c
 24267  01ED26  0E00               	movlw	0
 24268  01ED28  6EDF               	movwf	indf2,c
 24269                           
 24270                           ;mconfig.c: 96:  wait_lcd_done();
 24271  01ED2A  EC18  F015         	call	_wait_lcd_done	;wreg free
 24272                           
 24273                           ; BSR set to: 61
 24274                           ;mconfig.c: 97:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 24275                           ;stkvar	_vterm @ sp[(0)+-1]
 24276  01ED2E  0EFF               	movlw	-1
 24277  01ED30  50E3               	movf	plusw1,w,c
 24278  01ED32  0DA0               	mullw	160
 24279  01ED34  0E3F               	movlw	low _D
 24280  01ED36  6E34               	movwf	(btemp+10)^0,c
 24281  01ED38  0E0A               	movlw	high _D
 24282  01ED3A  6E35               	movwf	(btemp+11)^0,c
 24283  01ED3C  50F3               	movf	243,w,c
 24284  01ED3E  2634               	addwf	(btemp+10)^0,f,c
 24285  01ED40  50F4               	movf	244,w,c
 24286  01ED42  2235               	addwfc	(btemp+11)^0,f,c
 24287  01ED44  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 24288  01ED4A  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 24289  01ED50  0E00               	movlw	0
 24290  01ED52  6EE6               	movwf	postinc1,c
 24291  01ED54  0E00               	movlw	0
 24292  01ED56  6EE6               	movwf	postinc1,c
 24293  01ED58  EC47  F007         	call	_eaDogM_WriteStringAtPos	;wreg free
 24294                           
 24295                           ; BSR set to: 59
 24296                           ;mconfig.c: 98:  wait_lcd_done();
 24297  01ED5C  EC18  F015         	call	_wait_lcd_done	;wreg free
 24298                           
 24299                           ; BSR set to: 61
 24300                           ;mconfig.c: 99:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 24301                           ;stkvar	_vterm @ sp[(0)+-1]
 24302  01ED60  0EFF               	movlw	-1
 24303  01ED62  50E3               	movf	plusw1,w,c
 24304  01ED64  0DA0               	mullw	160
 24305  01ED66  0E3F               	movlw	low _D
 24306  01ED68  6E34               	movwf	(btemp+10)^0,c
 24307  01ED6A  0E0A               	movlw	high _D
 24308  01ED6C  6E35               	movwf	(btemp+11)^0,c
 24309  01ED6E  0E28               	movlw	40
 24310  01ED70  2634               	addwf	(btemp+10)^0,f,c
 24311  01ED72  0E00               	movlw	0
 24312  01ED74  2235               	addwfc	(btemp+11)^0,f,c
 24313  01ED76  50F3               	movf	243,w,c
 24314  01ED78  2634               	addwf	(btemp+10)^0,f,c
 24315  01ED7A  50F4               	movf	244,w,c
 24316  01ED7C  2235               	addwfc	(btemp+11)^0,f,c
 24317  01ED7E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 24318  01ED84  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 24319  01ED8A  0E00               	movlw	0
 24320  01ED8C  6EE6               	movwf	postinc1,c
 24321  01ED8E  0E01               	movlw	1
 24322  01ED90  6EE6               	movwf	postinc1,c
 24323  01ED92  EC47  F007         	call	_eaDogM_WriteStringAtPos	;wreg free
 24324                           
 24325                           ; BSR set to: 59
 24326                           ;mconfig.c: 100:  wait_lcd_done();
 24327  01ED96  EC18  F015         	call	_wait_lcd_done	;wreg free
 24328                           
 24329                           ; BSR set to: 61
 24330                           ;mconfig.c: 101:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 24331                           ;stkvar	_vterm @ sp[(0)+-1]
 24332  01ED9A  0EFF               	movlw	-1
 24333  01ED9C  50E3               	movf	plusw1,w,c
 24334  01ED9E  0DA0               	mullw	160
 24335  01EDA0  0E3F               	movlw	low _D
 24336  01EDA2  6E34               	movwf	(btemp+10)^0,c
 24337  01EDA4  0E0A               	movlw	high _D
 24338  01EDA6  6E35               	movwf	(btemp+11)^0,c
 24339  01EDA8  0E50               	movlw	80
 24340  01EDAA  2634               	addwf	(btemp+10)^0,f,c
 24341  01EDAC  0E00               	movlw	0
 24342  01EDAE  2235               	addwfc	(btemp+11)^0,f,c
 24343  01EDB0  50F3               	movf	243,w,c
 24344  01EDB2  2634               	addwf	(btemp+10)^0,f,c
 24345  01EDB4  50F4               	movf	244,w,c
 24346  01EDB6  2235               	addwfc	(btemp+11)^0,f,c
 24347  01EDB8  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 24348  01EDBE  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 24349  01EDC4  0E00               	movlw	0
 24350  01EDC6  6EE6               	movwf	postinc1,c
 24351  01EDC8  0E02               	movlw	2
 24352  01EDCA  6EE6               	movwf	postinc1,c
 24353  01EDCC  EC47  F007         	call	_eaDogM_WriteStringAtPos	;wreg free
 24354                           
 24355                           ; BSR set to: 59
 24356                           ;mconfig.c: 102:  wait_lcd_done();
 24357  01EDD0  EC18  F015         	call	_wait_lcd_done	;wreg free
 24358                           
 24359                           ; BSR set to: 61
 24360                           ;mconfig.c: 103:  eaDogM_WriteStringAtPos(3, 0, D.lcd[vterm][3]);
 24361                           ;stkvar	_vterm @ sp[(0)+-1]
 24362  01EDD4  0EFF               	movlw	-1
 24363  01EDD6  50E3               	movf	plusw1,w,c
 24364  01EDD8  0DA0               	mullw	160
 24365  01EDDA  0E3F               	movlw	low _D
 24366  01EDDC  6E34               	movwf	(btemp+10)^0,c
 24367  01EDDE  0E0A               	movlw	high _D
 24368  01EDE0  6E35               	movwf	(btemp+11)^0,c
 24369  01EDE2  0E78               	movlw	120
 24370  01EDE4  2634               	addwf	(btemp+10)^0,f,c
 24371  01EDE6  0E00               	movlw	0
 24372  01EDE8  2235               	addwfc	(btemp+11)^0,f,c
 24373  01EDEA  50F3               	movf	243,w,c
 24374  01EDEC  2634               	addwf	(btemp+10)^0,f,c
 24375  01EDEE  50F4               	movf	244,w,c
 24376  01EDF0  2235               	addwfc	(btemp+11)^0,f,c
 24377  01EDF2  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 24378  01EDF8  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 24379  01EDFE  0E00               	movlw	0
 24380  01EE00  6EE6               	movwf	postinc1,c
 24381  01EE02  0E03               	movlw	3
 24382  01EE04  6EE6               	movwf	postinc1,c
 24383  01EE06  EC47  F007         	call	_eaDogM_WriteStringAtPos	;wreg free
 24384  01EE0A                     l1841:
 24385                           
 24386                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 24387  01EE0A  52E5               	movf	postdec1,f,c
 24388  01EE0C  0012               	return		;funcret
 24389  01EE0E                     __end_of_update_lcd:
 24390                           	opt callstack 0
 24391                           
 24392 ;; *************** function _eaDogM_WriteStringAtPos *****************
 24393 ;; Defined at:
 24394 ;;		line 195 in file "eadog.c"
 24395 ;; Parameters:    Size  Location     Type
 24396 ;;  r               1  [STACK] const unsigned char 
 24397 ;;  c               1  [STACK] const unsigned char 
 24398 ;;  strPtr          2  [STACK] PTR unsigned char 
 24399 ;;		 -> D.lcd(640), D(642), V(181), 
 24400 ;; Auto vars:     Size  Location     Type
 24401 ;;  row             1  [STACK] unsigned char 
 24402 ;; Return value:  Size  Location     Type
 24403 ;;                  1  [STACK] void 
 24404 ;; Registers used:
 24405 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 24406 ;; Tracked objects:
 24407 ;;		On entry : 3F/3D
 24408 ;;		On exit  : 3F/3B
 24409 ;;		Unchanged: 0/0
 24410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24415 ;;Total ram usage:        0 bytes
 24416 ;; Hardware stack levels used:    1
 24417 ;; Hardware stack levels required when called:   25
 24418 ;; This function calls:
 24419 ;;		_eaDogM_WriteString
 24420 ;;		_send_lcd_cmd_dma
 24421 ;;		_send_lcd_data_dma
 24422 ;;		_wait_lcd_done
 24423 ;; This function is called by:
 24424 ;;		_update_lcd
 24425 ;;		_vterm_dump
 24426 ;; This function uses a reentrant model
 24427 ;;
 24428                           
 24429                           	psect	text82
 24430  000E8E                     __ptext82:
 24431                           	opt callstack 0
 24432  000E8E                     _eaDogM_WriteStringAtPos:
 24433                           	opt callstack 0
 24434                           
 24435                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24436  000E8E  52E6               	movf	postinc1,f,c
 24437                           
 24438                           ;eadog.c: 195: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 196: {;eadog.c: 197:  uint8_t row;;eadog.c: 199:  switch (r) {
 24439                           
 24440                           ;incstack = 0
 24441  000E90  D013               	goto	l16884
 24442  000E92                     l16872:
 24443                           
 24444                           ;eadog.c: 201:   row = 0x40;
 24445                           ;stkvar	_row @ sp[(-1)+0]
 24446  000E92  0EFF               	movlw	-1
 24447  000E94  6AE3               	clrf	plusw1,c
 24448  000E96  8CE3               	bsf	plusw1,6,c
 24449                           
 24450                           ;eadog.c: 202:   break;
 24451  000E98  D025               	goto	l16886
 24452  000E9A                     l16874:
 24453                           
 24454                           ;eadog.c: 204:   row = 0x14;
 24455                           ;stkvar	_row @ sp[(-1)+0]
 24456  000E9A  0EFF               	movlw	-1
 24457  000E9C  6AE3               	clrf	plusw1,c
 24458  000E9E  84E3               	bsf	plusw1,2,c
 24459  000EA0  88E3               	bsf	plusw1,4,c	;indir
 24460                           
 24461                           ;eadog.c: 205:   break;
 24462  000EA2  D020               	goto	l16886
 24463  000EA4                     l16876:
 24464                           
 24465                           ;eadog.c: 207:   row = 0x54;
 24466  000EA4  0E54               	movlw	84
 24467  000EA6  6E35               	movwf	(btemp+11)^0,c
 24468                           
 24469                           ;stkvar	_row @ sp[(-1)+0]
 24470  000EA8  0EFF               	movlw	-1
 24471  000EAA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 24472                           
 24473                           ;eadog.c: 208:   break;
 24474  000EB0  D019               	goto	l16886
 24475  000EB2                     l16878:
 24476                           
 24477                           ;eadog.c: 210:   row = 0x00;
 24478                           ;stkvar	_row @ sp[(-1)+0]
 24479  000EB2  0EFF               	movlw	-1
 24480  000EB4  6AE3               	clrf	plusw1,c
 24481                           
 24482                           ;eadog.c: 211:   break;
 24483  000EB6  D016               	goto	l16886
 24484  000EB8                     l16884:
 24485                           
 24486                           ;stkvar	_r @ sp[(-1)+-1]
 24487  000EB8  0EFE               	movlw	-2
 24488  000EBA  50E3               	movf	plusw1,w,c
 24489  000EBC  6E34               	movwf	(btemp+10)^0,c
 24490  000EBE  6A35               	clrf	(btemp+11)^0,c
 24491                           
 24492                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24493                           ; Switch size 1, requested type "simple"
 24494                           ; Number of cases is 1, Range of values is 0 to 0
 24495                           ; switch strategies available:
 24496                           ; Name         Instructions Cycles
 24497                           ; simple_byte            4     3 (average)
 24498                           ;	Chosen strategy is simple_byte
 24499  000EC0  5035               	movf	(btemp+11)^0,w,c
 24500  000EC2  0A00               	xorlw	0	; case 0
 24501  000EC4  A4D8               	btfss	status,2,c
 24502  000EC6  D7E5               	goto	l16872
 24503                           
 24504                           ; Switch size 1, requested type "simple"
 24505                           ; Number of cases is 4, Range of values is 0 to 3
 24506                           ; switch strategies available:
 24507                           ; Name         Instructions Cycles
 24508                           ; simple_byte           13     7 (average)
 24509                           ;	Chosen strategy is simple_byte
 24510  000EC8  5034               	movf	(btemp+10)^0,w,c
 24511  000ECA  0A00               	xorlw	0	; case 0
 24512  000ECC  B4D8               	btfsc	status,2,c
 24513  000ECE  D7E1               	goto	l16872
 24514  000ED0  0A01               	xorlw	1	; case 1
 24515  000ED2  B4D8               	btfsc	status,2,c
 24516  000ED4  D7E2               	goto	l16874
 24517  000ED6  0A03               	xorlw	3	; case 2
 24518  000ED8  B4D8               	btfsc	status,2,c
 24519  000EDA  D7E4               	goto	l16876
 24520  000EDC  0A01               	xorlw	1	; case 3
 24521  000EDE  B4D8               	btfsc	status,2,c
 24522  000EE0  D7E8               	goto	l16878
 24523  000EE2  D7D7               	goto	l16872
 24524  000EE4                     l16886:
 24525                           
 24526                           ;eadog.c: 216:  send_lcd_cmd_dma(0x45);
 24527  000EE4  0E45               	movlw	69
 24528  000EE6  6EE6               	movwf	postinc1,c
 24529  000EE8  EC42  F014         	call	_send_lcd_cmd_dma	;wreg free
 24530                           
 24531                           ;eadog.c: 217:  send_lcd_data_dma(row + c);
 24532                           ;stkvar	_c @ sp[(-1)+-2]
 24533  000EEC  0EFD               	movlw	-3
 24534  000EEE  006F FF8C  F035    	movff	plusw1,btemp+11
 24535                           
 24536                           ;stkvar	_row @ sp[(-1)+0]
 24537  000EF4  0EFF               	movlw	-1
 24538  000EF6  50E3               	movf	plusw1,w,c
 24539  000EF8  2435               	addwf	(btemp+11)^0,w,c
 24540  000EFA  6EE6               	movwf	postinc1,c
 24541  000EFC  ECE4  F00E         	call	_send_lcd_data_dma	;wreg free
 24542                           
 24543                           ; BSR set to: 59
 24544                           ;eadog.c: 218:  wait_lcd_done();
 24545  000F00  EC18  F015         	call	_wait_lcd_done	;wreg free
 24546                           
 24547                           ; BSR set to: 61
 24548                           ;eadog.c: 219:  eaDogM_WriteString(strPtr);
 24549                           ;stkvar	_strPtr @ sp[(-1)+-4]
 24550  000F04  0EFB               	movlw	-5
 24551  000F06  006F FF8F FFE6     	movff	plusw1,postinc1
 24552  000F0C  006F FF8F FFE6     	movff	plusw1,postinc1
 24553  000F12  EC6F  F005         	call	_eaDogM_WriteString	;wreg free
 24554                           
 24555                           ; BSR set to: 59
 24556                           ; _eaDogM_WriteStringAtPos: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 24557  000F16  0EFB               	movlw	251
 24558  000F18  26E1               	addwf	fsr1l,f,c
 24559  000F1A  0EFF               	movlw	255
 24560  000F1C  22E2               	addwfc	fsr1h,f,c
 24561  000F1E  0012               	return		;funcret
 24562  000F20                     __end_of_eaDogM_WriteStringAtPos:
 24563                           	opt callstack 0
 24564                           
 24565 ;; *************** function _send_lcd_cmd_dma *****************
 24566 ;; Defined at:
 24567 ;;		line 171 in file "eadog.c"
 24568 ;; Parameters:    Size  Location     Type
 24569 ;;  strPtr          1  [STACK] const unsigned char 
 24570 ;; Auto vars:     Size  Location     Type
 24571 ;;		None
 24572 ;; Return value:  Size  Location     Type
 24573 ;;                  1  [STACK] void 
 24574 ;; Registers used:
 24575 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 24576 ;; Tracked objects:
 24577 ;;		On entry : 0/3D
 24578 ;;		On exit  : 3F/3D
 24579 ;;		Unchanged: 0/0
 24580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24585 ;;Total ram usage:        0 bytes
 24586 ;; Hardware stack levels used:    1
 24587 ;; Hardware stack levels required when called:   18
 24588 ;; This function calls:
 24589 ;;		_send_lcd_data_dma
 24590 ;;		_wait_lcd_done
 24591 ;; This function is called by:
 24592 ;;		_eaDogM_WriteStringAtPos
 24593 ;;		_eaDogM_WriteCommand
 24594 ;; This function uses a reentrant model
 24595 ;;
 24596                           
 24597                           	psect	text83
 24598  002884                     __ptext83:
 24599                           	opt callstack 0
 24600  002884                     _send_lcd_cmd_dma:
 24601                           	opt callstack 10
 24602                           
 24603                           ;eadog.c: 171: void send_lcd_cmd_dma(const uint8_t strPtr);eadog.c: 172: {;eadog.c: 173:
      +                            send_lcd_data_dma(0xFE);
 24604                           
 24605                           ; BSR set to: 59
 24606                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24607                           ;incstack = 0
 24608  002884  0EFE               	movlw	254
 24609  002886  6EE6               	movwf	postinc1,c
 24610  002888  ECE4  F00E         	call	_send_lcd_data_dma	;wreg free
 24611                           
 24612                           ; BSR set to: 59
 24613                           ;eadog.c: 174:  wait_lcd_done();
 24614  00288C  EC18  F015         	call	_wait_lcd_done	;wreg free
 24615                           
 24616                           ;eadog.c: 175:  send_lcd_data_dma(strPtr);
 24617                           ;stkvar	_strPtr @ sp[(0)+-1]
 24618  002890  0EFF               	movlw	-1
 24619  002892  50E3               	movf	plusw1,w,c
 24620  002894  6EE6               	movwf	postinc1,c
 24621  002896  ECE4  F00E         	call	_send_lcd_data_dma	;wreg free
 24622                           
 24623                           ; BSR set to: 59
 24624                           ;eadog.c: 176:  wait_lcd_done();
 24625  00289A  EC18  F015         	call	_wait_lcd_done	;wreg free
 24626                           
 24627                           ; BSR set to: 61
 24628                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 24629  00289E  52E5               	movf	postdec1,f,c
 24630  0028A0  0012               	return		;funcret
 24631  0028A2                     __end_of_send_lcd_cmd_dma:
 24632                           	opt callstack 0
 24633                           
 24634 ;; *************** function _wait_lcd_done *****************
 24635 ;; Defined at:
 24636 ;;		line 443 in file "eadog.c"
 24637 ;; Parameters:    Size  Location     Type
 24638 ;;		None
 24639 ;; Auto vars:     Size  Location     Type
 24640 ;;		None
 24641 ;; Return value:  Size  Location     Type
 24642 ;;                  1  [STACK] void 
 24643 ;; Registers used:
 24644 ;;		None
 24645 ;; Tracked objects:
 24646 ;;		On entry : 0/2
 24647 ;;		On exit  : 3F/3D
 24648 ;;		Unchanged: 0/0
 24649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24654 ;;Total ram usage:        0 bytes
 24655 ;; Hardware stack levels used:    1
 24656 ;; Hardware stack levels required when called:   15
 24657 ;; This function calls:
 24658 ;;		Nothing
 24659 ;; This function is called by:
 24660 ;;		_main
 24661 ;;		_send_lcd_cmd_dma
 24662 ;;		_eaDogM_WriteStringAtPos
 24663 ;;		_update_lcd
 24664 ;;		_vterm_dump
 24665 ;; This function uses a reentrant model
 24666 ;;
 24667                           
 24668                           	psect	text84
 24669  002A30                     __ptext84:
 24670                           	opt callstack 0
 24671  002A30                     _wait_lcd_done:
 24672                           	opt callstack 15
 24673                           
 24674                           ;eadog.c: 445:  while (spi_link.LCD_DATA);
 24675                           
 24676                           ; BSR set to: 61
 24677                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24678                           ;incstack = 0
 24679  002A30  0100               	movlb	0	; () banked
 24680  002A32  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
 24681  002A34  D7FD               	goto	_wait_lcd_done
 24682  002A36                     u10880:
 24683  002A36  013D               	movlb	61	; () banked
 24684  002A38  BB17               	btfsc	23,5,b	;volatile
 24685  002A3A  0012               	return	
 24686  002A3C  D7FC               	goto	u10880
 24687  002A3E                     __end_of_wait_lcd_done:
 24688                           	opt callstack 0
 24689                           
 24690 ;; *************** function _send_lcd_data_dma *****************
 24691 ;; Defined at:
 24692 ;;		line 182 in file "eadog.c"
 24693 ;; Parameters:    Size  Location     Type
 24694 ;;  strPtr          1  [STACK] const unsigned char 
 24695 ;; Auto vars:     Size  Location     Type
 24696 ;;		None
 24697 ;; Return value:  Size  Location     Type
 24698 ;;                  1  [STACK] void 
 24699 ;; Registers used:
 24700 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 24701 ;; Tracked objects:
 24702 ;;		On entry : 0/3D
 24703 ;;		On exit  : 3F/3B
 24704 ;;		Unchanged: 0/0
 24705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24710 ;;Total ram usage:        0 bytes
 24711 ;; Hardware stack levels used:    1
 24712 ;; Hardware stack levels required when called:   17
 24713 ;; This function calls:
 24714 ;;		_ringBufS_flush
 24715 ;;		_ringBufS_put_dma
 24716 ;;		_start_lcd
 24717 ;;		_wait_lcd_set
 24718 ;; This function is called by:
 24719 ;;		_send_lcd_cmd_dma
 24720 ;;		_eaDogM_WriteStringAtPos
 24721 ;; This function uses a reentrant model
 24722 ;;
 24723                           
 24724                           	psect	text85
 24725  001DC8                     __ptext85:
 24726                           	opt callstack 0
 24727  001DC8                     _send_lcd_data_dma:
 24728                           	opt callstack 11
 24729                           
 24730                           ;eadog.c: 182: void send_lcd_data_dma(const uint8_t strPtr);eadog.c: 183: {;eadog.c: 184
      +                          :  wait_lcd_set();
 24731                           
 24732                           ; BSR set to: 61
 24733                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24734                           ;incstack = 0
 24735  001DC8  EC76  F015         	call	_wait_lcd_set	;wreg free
 24736                           
 24737                           ; BSR set to: 0
 24738                           ;eadog.c: 186:  ringBufS_flush(spi_link.tx1a, 0);
 24739  001DCC  0E00               	movlw	0
 24740  001DCE  6EE6               	movwf	postinc1,c
 24741  001DD0  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 24742  001DD6  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 24743  001DDC  EC90  F007         	call	_ringBufS_flush	;wreg free
 24744  001DE0  94BC               	bcf	188,2,c	;volatile
 24745                           
 24746                           ;eadog.c: 188:  DMA1CON0bits.EN = 0;
 24747  001DE2  013B               	movlb	59	; () banked
 24748  001DE4  9FFC               	bcf	252,7,b	;volatile
 24749                           
 24750                           ; BSR set to: 59
 24751                           ;eadog.c: 189:  DMA1SSZ = 1;
 24752  001DE6  0E00               	movlw	0
 24753  001DE8  6FF8               	movwf	248,b	;volatile
 24754  001DEA  0E01               	movlw	1
 24755  001DEC  6FF7               	movwf	247,b	;volatile
 24756                           
 24757                           ; BSR set to: 59
 24758                           ;eadog.c: 190:  DMA1CON0bits.EN = 1;
 24759  001DEE  8FFC               	bsf	252,7,b	;volatile
 24760                           
 24761                           ; BSR set to: 59
 24762                           ;eadog.c: 191:  ringBufS_put_dma(spi_link.tx1a, strPtr);
 24763                           ;stkvar	_strPtr @ sp[(0)+-1]
 24764  001DF0  0EFF               	movlw	-1
 24765  001DF2  50E3               	movf	plusw1,w,c
 24766  001DF4  6EE6               	movwf	postinc1,c
 24767  001DF6  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 24768  001DFC  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 24769  001E02  EC1A  F005         	call	_ringBufS_put_dma	;wreg free
 24770                           
 24771                           ;eadog.c: 192:  start_lcd();
 24772  001E06  EC79  F015         	call	_start_lcd	;wreg free
 24773                           
 24774                           ; BSR set to: 59
 24775                           ; _send_lcd_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 24776  001E0A  52E5               	movf	postdec1,f,c
 24777  001E0C  0012               	return		;funcret
 24778  001E0E                     __end_of_send_lcd_data_dma:
 24779                           	opt callstack 0
 24780                           
 24781 ;; *************** function _eaDogM_WriteString *****************
 24782 ;; Defined at:
 24783 ;;		line 151 in file "eadog.c"
 24784 ;; Parameters:    Size  Location     Type
 24785 ;;  strPtr          2  [STACK] PTR unsigned char 
 24786 ;;		 -> D.lcd(640), D(642), V(181), 
 24787 ;; Auto vars:     Size  Location     Type
 24788 ;;		None
 24789 ;; Return value:  Size  Location     Type
 24790 ;;                  1  [STACK] void 
 24791 ;; Registers used:
 24792 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 24793 ;; Tracked objects:
 24794 ;;		On entry : 3F/3D
 24795 ;;		On exit  : 3F/3B
 24796 ;;		Unchanged: 0/0
 24797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24802 ;;Total ram usage:        0 bytes
 24803 ;; Hardware stack levels used:    1
 24804 ;; Hardware stack levels required when called:   24
 24805 ;; This function calls:
 24806 ;;		_printf
 24807 ;;		_ringBufS_flush
 24808 ;;		_start_lcd
 24809 ;;		_strlen
 24810 ;;		_wait_lcd_set
 24811 ;; This function is called by:
 24812 ;;		_eaDogM_WriteStringAtPos
 24813 ;; This function uses a reentrant model
 24814 ;;
 24815                           
 24816                           	psect	text86
 24817  000ADE                     __ptext86:
 24818                           	opt callstack 0
 24819  000ADE                     _eaDogM_WriteString:
 24820                           	opt callstack 4
 24821                           
 24822                           ;eadog.c: 151: void eaDogM_WriteString(char *strPtr);eadog.c: 152: {;eadog.c: 153:  wait
      +                          _lcd_set();
 24823                           
 24824                           ; BSR set to: 59
 24825                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24826                           ;incstack = 0
 24827  000ADE  EC76  F015         	call	_wait_lcd_set	;wreg free
 24828                           
 24829                           ; BSR set to: 0
 24830                           ;eadog.c: 155:  ringBufS_flush(spi_link.tx1a, 0);
 24831  000AE2  0E00               	movlw	0
 24832  000AE4  6EE6               	movwf	postinc1,c
 24833  000AE6  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 24834  000AEC  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 24835  000AF2  EC90  F007         	call	_ringBufS_flush	;wreg free
 24836  000AF6  94BC               	bcf	188,2,c	;volatile
 24837                           
 24838                           ;eadog.c: 157:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 24839                           ;stkvar	_strPtr @ sp[(0)+-2]
 24840  000AF8  0EFE               	movlw	-2
 24841  000AFA  006F FF8F FFE6     	movff	plusw1,postinc1
 24842  000B00  006F FF8F FFE6     	movff	plusw1,postinc1
 24843  000B06  EC14  F006         	call	_strlen	;wreg free
 24844  000B0A  502B               	movf	(btemp+1)^0,w,c
 24845  000B0C  E104               	bnz	u16170
 24846  000B0E  0E41               	movlw	65
 24847  000B10  5C2A               	subwf	btemp^0,w,c
 24848  000B12  A0D8               	btfss	status,0,c
 24849  000B14  D010               	goto	l16616
 24850  000B16                     u16170:
 24851                           
 24852                           ;stkvar	_strPtr @ sp[(0)+-2]
 24853  000B16  0EFE               	movlw	-2
 24854  000B18  006F FF8C  F034    	movff	plusw1,btemp+10
 24855  000B1E  0EFF               	movlw	-1
 24856  000B20  006F FF8C  F035    	movff	plusw1,btemp+11
 24857  000B26  0E40               	movlw	64
 24858  000B28  2434               	addwf	(btemp+10)^0,w,c
 24859  000B2A  6ED9               	movwf	fsr2l,c
 24860  000B2C  0E00               	movlw	0
 24861  000B2E  2035               	addwfc	(btemp+11)^0,w,c
 24862  000B30  6EDA               	movwf	fsr2h,c
 24863  000B32  0E00               	movlw	0
 24864  000B34  6EDF               	movwf	indf2,c
 24865  000B36                     l16616:
 24866                           
 24867                           ;eadog.c: 158:  DMA1CON0bits.EN = 0;
 24868  000B36  013B               	movlb	59	; () banked
 24869  000B38  9FFC               	bcf	252,7,b	;volatile
 24870                           
 24871                           ; BSR set to: 59
 24872                           ;eadog.c: 159:  DMA1SSZ = strlen(strPtr);
 24873                           ;stkvar	_strPtr @ sp[(0)+-2]
 24874  000B3A  0EFE               	movlw	-2
 24875  000B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 24876  000B42  006F FF8F FFE6     	movff	plusw1,postinc1
 24877  000B48  EC14  F006         	call	_strlen	;wreg free
 24878  000B4C  0060  F0AB  FBF7   	movff	btemp,15351	;volatile
 24879  000B52  0060  F0AF  FBF8   	movff	btemp+1,15352	;volatile
 24880                           
 24881                           ;eadog.c: 160:  DMA1CON0bits.EN = 1;
 24882  000B58  013B               	movlb	59	; () banked
 24883  000B5A  8FFC               	bsf	252,7,b	;volatile
 24884                           
 24885                           ; BSR set to: 59
 24886                           ;eadog.c: 161:  printf("%s", strPtr);
 24887                           ;stkvar	_strPtr @ sp[(0)+-2]
 24888  000B5C  0EFE               	movlw	-2
 24889  000B5E  006F FF8F FFE6     	movff	plusw1,postinc1
 24890  000B64  006F FF8F FFE6     	movff	plusw1,postinc1
 24891  000B6A  0EFC               	movlw	low STR_74
 24892  000B6C  6EE6               	movwf	postinc1,c
 24893  000B6E  0EFF               	movlw	high STR_74
 24894  000B70  6EE6               	movwf	postinc1,c
 24895  000B72  0E04               	movlw	4
 24896  000B74  6EE6               	movwf	postinc1,c
 24897  000B76  EC41  F00C         	call	_printf	;wreg free
 24898                           
 24899                           ; BSR set to: 0
 24900                           ;eadog.c: 162:  start_lcd();
 24901  000B7A  EC79  F015         	call	_start_lcd	;wreg free
 24902                           
 24903                           ; BSR set to: 59
 24904                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 24905  000B7E  52E5               	movf	postdec1,f,c
 24906  000B80  52E5               	movf	postdec1,f,c
 24907  000B82  0012               	return		;funcret
 24908  000B84                     __end_of_eaDogM_WriteString:
 24909                           	opt callstack 0
 24910                           
 24911 ;; *************** function _wait_lcd_set *****************
 24912 ;; Defined at:
 24913 ;;		line 433 in file "eadog.c"
 24914 ;; Parameters:    Size  Location     Type
 24915 ;;		None
 24916 ;; Auto vars:     Size  Location     Type
 24917 ;;		None
 24918 ;; Return value:  Size  Location     Type
 24919 ;;                  1  [STACK] void 
 24920 ;; Registers used:
 24921 ;;		None
 24922 ;; Tracked objects:
 24923 ;;		On entry : 0/3D
 24924 ;;		On exit  : 3F/0
 24925 ;;		Unchanged: 0/0
 24926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24931 ;;Total ram usage:        0 bytes
 24932 ;; Hardware stack levels used:    1
 24933 ;; Hardware stack levels required when called:   15
 24934 ;; This function calls:
 24935 ;;		Nothing
 24936 ;; This function is called by:
 24937 ;;		_eaDogM_WriteString
 24938 ;;		_send_lcd_data_dma
 24939 ;; This function uses a reentrant model
 24940 ;;
 24941                           
 24942                           	psect	text87
 24943  002AEC                     __ptext87:
 24944                           	opt callstack 0
 24945  002AEC                     _wait_lcd_set:
 24946                           	opt callstack 12
 24947                           
 24948                           ;eadog.c: 435:  spi_link.LCD_DATA = 1;
 24949                           
 24950                           ; BSR set to: 59
 24951                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24952                           ;incstack = 0
 24953  002AEC  0100               	movlb	0	; () banked
 24954  002AEE  8760               	bsf	_spi_link& (0+255),3,b	;volatile
 24955                           
 24956                           ; BSR set to: 0
 24957                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 24958  002AF0  0012               	return		;funcret
 24959  002AF2                     __end_of_wait_lcd_set:
 24960                           	opt callstack 0
 24961                           
 24962 ;; *************** function _start_lcd *****************
 24963 ;; Defined at:
 24964 ;;		line 428 in file "eadog.c"
 24965 ;; Parameters:    Size  Location     Type
 24966 ;;		None
 24967 ;; Auto vars:     Size  Location     Type
 24968 ;;		None
 24969 ;; Return value:  Size  Location     Type
 24970 ;;                  1  [STACK] void 
 24971 ;; Registers used:
 24972 ;;		None
 24973 ;; Tracked objects:
 24974 ;;		On entry : 0/3B
 24975 ;;		On exit  : 3F/3B
 24976 ;;		Unchanged: 0/0
 24977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24982 ;;Total ram usage:        0 bytes
 24983 ;; Hardware stack levels used:    1
 24984 ;; Hardware stack levels required when called:   15
 24985 ;; This function calls:
 24986 ;;		Nothing
 24987 ;; This function is called by:
 24988 ;;		_eaDogM_WriteString
 24989 ;;		_send_lcd_data_dma
 24990 ;; This function uses a reentrant model
 24991 ;;
 24992                           
 24993                           	psect	text88
 24994  002AF2                     __ptext88:
 24995                           	opt callstack 0
 24996  002AF2                     _start_lcd:
 24997                           	opt callstack 12
 24998                           
 24999                           ;eadog.c: 430:  DMA1CON0bits.DMA1SIRQEN = 1;
 25000                           
 25001                           ; BSR set to: 0
 25002                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25003                           ;incstack = 0
 25004  002AF2  013B               	movlb	59	; () banked
 25005  002AF4  8DFC               	bsf	252,6,b	;volatile
 25006                           
 25007                           ; BSR set to: 59
 25008                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 25009  002AF6  0012               	return		;funcret
 25010  002AF8                     __end_of_start_lcd:
 25011                           	opt callstack 0
 25012                           
 25013 ;; *************** function _ringBufS_flush *****************
 25014 ;; Defined at:
 25015 ;;		line 76 in file "ringbufs.c"
 25016 ;; Parameters:    Size  Location     Type
 25017 ;;  _this           2  [STACK] PTR struct ringBufS_t
 25018 ;;		 -> ring_buf1(67), 
 25019 ;;  clearBuffer     1  [STACK] const char 
 25020 ;; Auto vars:     Size  Location     Type
 25021 ;;		None
 25022 ;; Return value:  Size  Location     Type
 25023 ;;                  1  [STACK] void 
 25024 ;; Registers used:
 25025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 25026 ;; Tracked objects:
 25027 ;;		On entry : 3F/0
 25028 ;;		On exit  : 0/0
 25029 ;;		Unchanged: 0/0
 25030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25035 ;;Total ram usage:        0 bytes
 25036 ;; Hardware stack levels used:    1
 25037 ;; Hardware stack levels required when called:   16
 25038 ;; This function calls:
 25039 ;;		_memset
 25040 ;; This function is called by:
 25041 ;;		_eaDogM_WriteString
 25042 ;;		_send_lcd_data_dma
 25043 ;; This function uses a reentrant model
 25044 ;;
 25045                           
 25046                           	psect	text89
 25047  000F20                     __ptext89:
 25048                           	opt callstack 0
 25049  000F20                     _ringBufS_flush:
 25050                           	opt callstack 11
 25051                           
 25052                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 25053                           ;stkvar	__this @ sp[(0)+-2]
 25054                           
 25055                           ; BSR set to: 59
 25056                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25057                           ;incstack = 0
 25058  000F20  0EFE               	movlw	-2
 25059  000F22  006F FF8C  F034    	movff	plusw1,btemp+10
 25060  000F28  0EFF               	movlw	-1
 25061  000F2A  006F FF8C  F035    	movff	plusw1,btemp+11
 25062  000F30  0E42               	movlw	66
 25063  000F32  2434               	addwf	(btemp+10)^0,w,c
 25064  000F34  6ED9               	movwf	fsr2l,c
 25065  000F36  0E00               	movlw	0
 25066  000F38  2035               	addwfc	(btemp+11)^0,w,c
 25067  000F3A  6EDA               	movwf	fsr2h,c
 25068  000F3C  0E00               	movlw	0
 25069  000F3E  6EDF               	movwf	indf2,c
 25070                           
 25071                           ;ringbufs.c: 79:  _this->head = 0;
 25072                           ;stkvar	__this @ sp[(0)+-2]
 25073  000F40  0EFE               	movlw	-2
 25074  000F42  006F FF8C  F034    	movff	plusw1,btemp+10
 25075  000F48  0EFF               	movlw	-1
 25076  000F4A  006F FF8C  F035    	movff	plusw1,btemp+11
 25077  000F50  0E40               	movlw	64
 25078  000F52  2434               	addwf	(btemp+10)^0,w,c
 25079  000F54  6ED9               	movwf	fsr2l,c
 25080  000F56  0E00               	movlw	0
 25081  000F58  2035               	addwfc	(btemp+11)^0,w,c
 25082  000F5A  6EDA               	movwf	fsr2h,c
 25083  000F5C  0E00               	movlw	0
 25084  000F5E  6EDF               	movwf	indf2,c
 25085                           
 25086                           ;ringbufs.c: 80:  _this->tail = 0;
 25087                           ;stkvar	__this @ sp[(0)+-2]
 25088  000F60  0EFE               	movlw	-2
 25089  000F62  006F FF8C  F034    	movff	plusw1,btemp+10
 25090  000F68  0EFF               	movlw	-1
 25091  000F6A  006F FF8C  F035    	movff	plusw1,btemp+11
 25092  000F70  0E41               	movlw	65
 25093  000F72  2434               	addwf	(btemp+10)^0,w,c
 25094  000F74  6ED9               	movwf	fsr2l,c
 25095  000F76  0E00               	movlw	0
 25096  000F78  2035               	addwfc	(btemp+11)^0,w,c
 25097  000F7A  6EDA               	movwf	fsr2h,c
 25098  000F7C  0E00               	movlw	0
 25099  000F7E  6EDF               	movwf	indf2,c
 25100                           
 25101                           ;ringbufs.c: 81:  if (clearBuffer) {
 25102                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 25103  000F80  0EFD               	movlw	-3
 25104  000F82  50E3               	movf	plusw1,w,c
 25105  000F84  B4D8               	btfsc	status,2,c
 25106  000F86  D011               	goto	l1750
 25107                           
 25108                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 25109  000F88  0E40               	movlw	64
 25110  000F8A  6EE6               	movwf	postinc1,c
 25111  000F8C  0E00               	movlw	0
 25112  000F8E  6EE6               	movwf	postinc1,c
 25113  000F90  0E00               	movlw	0
 25114  000F92  6EE6               	movwf	postinc1,c
 25115  000F94  0E00               	movlw	0
 25116  000F96  6EE6               	movwf	postinc1,c
 25117                           
 25118                           ;stkvar	__this @ sp[(-4)+-2]
 25119  000F98  0EFA               	movlw	-6
 25120  000F9A  006F FF8F FFE6     	movff	plusw1,postinc1
 25121  000FA0  006F FF8F FFE6     	movff	plusw1,postinc1
 25122  000FA6  EC0E  F0D9         	call	_memset	;wreg free
 25123  000FAA                     l1750:
 25124                           
 25125                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 25126  000FAA  52E5               	movf	postdec1,f,c
 25127  000FAC  52E5               	movf	postdec1,f,c
 25128  000FAE  52E5               	movf	postdec1,f,c
 25129  000FB0  0012               	return		;funcret
 25130  000FB2                     __end_of_ringBufS_flush:
 25131                           	opt callstack 0
 25132                           
 25133 ;; *************** function _memset *****************
 25134 ;; Defined at:
 25135 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 25136 ;; Parameters:    Size  Location     Type
 25137 ;;  dest            2  [STACK] PTR void 
 25138 ;;		 -> ring_buf2(67), ring_buf1(67), 
 25139 ;;  c               2  [STACK] int 
 25140 ;;  n               2  [STACK] unsigned int 
 25141 ;; Auto vars:     Size  Location     Type
 25142 ;;  s               2  [STACK] PTR unsigned char 
 25143 ;;		 -> ring_buf2(67), ring_buf1(67), 
 25144 ;;  k               2  [STACK] unsigned int 
 25145 ;; Return value:  Size  Location     Type
 25146 ;;                  2  [STACK] PTR void 
 25147 ;; Registers used:
 25148 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 25149 ;; Tracked objects:
 25150 ;;		On entry : 0/0
 25151 ;;		On exit  : 0/0
 25152 ;;		Unchanged: 0/0
 25153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25158 ;;Total ram usage:        0 bytes
 25159 ;; Hardware stack levels used:    1
 25160 ;; Hardware stack levels required when called:   15
 25161 ;; This function calls:
 25162 ;;		Nothing
 25163 ;; This function is called by:
 25164 ;;		_ringBufS_init
 25165 ;;		_ringBufS_flush
 25166 ;; This function uses a reentrant model
 25167 ;;
 25168                           
 25169                           	psect	text90
 25170  01B21C                     __ptext90:
 25171                           	opt callstack 0
 25172  01B21C                     _memset:
 25173                           	opt callstack 0
 25174                           
 25175                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25176  01B21C  52E6               	movf	postinc1,f,c
 25177  01B21E  52E6               	movf	postinc1,f,c
 25178  01B220  52E6               	movf	postinc1,f,c
 25179  01B222  52E6               	movf	postinc1,f,c
 25180                           
 25181                           ;stkvar	_dest @ sp[(-4)+-2]
 25182                           
 25183                           ;incstack = 0
 25184  01B224  0EFA               	movlw	-6
 25185  01B226  006F FF8C  F034    	movff	plusw1,btemp+10
 25186  01B22C  0EFB               	movlw	-5
 25187  01B22E  006F FF8C  F035    	movff	plusw1,btemp+11
 25188                           
 25189                           ;stkvar	_s @ sp[(-4)+0]
 25190  01B234  0EFD               	movlw	-3
 25191  01B236  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 25192  01B23C  0EFC               	movlw	-4
 25193  01B23E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 25194                           
 25195                           ;stkvar	_n @ sp[(-4)+-6]
 25196  01B244  0EF6               	movlw	-10
 25197  01B246  006F FF8C  F02A    	movff	plusw1,btemp
 25198  01B24C  0EF7               	movlw	-9
 25199  01B24E  50E3               	movf	plusw1,w,c
 25200  01B250  102A               	iorwf	btemp^0,w,c
 25201  01B252  B4D8               	btfsc	status,2,c
 25202  01B254  D154               	goto	u14350
 25203                           
 25204                           ;stkvar	_c @ sp[(-4)+-4]
 25205                           ;stkvar	_s @ sp[(-4)+0]
 25206  01B256  0EFC               	movlw	-4
 25207  01B258  006F FF8F FFD9     	movff	plusw1,fsr2l
 25208  01B25E  0EFD               	movlw	-3
 25209  01B260  006F FF8F FFDA     	movff	plusw1,fsr2h
 25210  01B266  0EF8               	movlw	-8
 25211  01B268  006F FF8F FFDF     	movff	plusw1,indf2
 25212                           
 25213                           ;stkvar	_c @ sp[(-4)+-4]
 25214                           ;stkvar	_n @ sp[(-4)+-6]
 25215                           ;stkvar	_s @ sp[(-4)+0]
 25216  01B26E  0EFC               	movlw	-4
 25217  01B270  006F FF8C  F034    	movff	plusw1,btemp+10
 25218  01B276  0EFD               	movlw	-3
 25219  01B278  006F FF8C  F035    	movff	plusw1,btemp+11
 25220  01B27E  0EF6               	movlw	-10
 25221  01B280  50E3               	movf	plusw1,w,c
 25222  01B282  2634               	addwf	(btemp+10)^0,f,c
 25223  01B284  0EF7               	movlw	-9
 25224  01B286  50E3               	movf	plusw1,w,c
 25225  01B288  2235               	addwfc	(btemp+11)^0,f,c
 25226  01B28A  0EFF               	movlw	255
 25227  01B28C  2434               	addwf	(btemp+10)^0,w,c
 25228  01B28E  6ED9               	movwf	fsr2l,c
 25229  01B290  0EFF               	movlw	255
 25230  01B292  2035               	addwfc	(btemp+11)^0,w,c
 25231  01B294  6EDA               	movwf	fsr2h,c
 25232  01B296  0EF8               	movlw	-8
 25233  01B298  006F FF8F FFDF     	movff	plusw1,indf2
 25234                           
 25235                           ;stkvar	_n @ sp[(-4)+-6]
 25236  01B29E  0EF7               	movlw	-9
 25237  01B2A0  50E3               	movf	plusw1,w,c
 25238  01B2A2  E108               	bnz	l15432
 25239  01B2A4  0EF6               	movlw	-10
 25240  01B2A6  006F FF8C  F02A    	movff	plusw1,btemp
 25241  01B2AC  0E03               	movlw	3
 25242  01B2AE  5E2A               	subwf	btemp^0,f,c
 25243  01B2B0  A0D8               	btfss	status,0,c
 25244  01B2B2  D125               	goto	u14350
 25245  01B2B4                     l15432:
 25246                           
 25247                           ;stkvar	_c @ sp[(-4)+-4]
 25248                           ;stkvar	_s @ sp[(-4)+0]
 25249  01B2B4  0EFC               	movlw	-4
 25250  01B2B6  006F FF8C  F034    	movff	plusw1,btemp+10
 25251  01B2BC  0EFD               	movlw	-3
 25252  01B2BE  006F FF8C  F035    	movff	plusw1,btemp+11
 25253  01B2C4  0E01               	movlw	1
 25254  01B2C6  2434               	addwf	(btemp+10)^0,w,c
 25255  01B2C8  6ED9               	movwf	fsr2l,c
 25256  01B2CA  0E00               	movlw	0
 25257  01B2CC  2035               	addwfc	(btemp+11)^0,w,c
 25258  01B2CE  6EDA               	movwf	fsr2h,c
 25259  01B2D0  0EF8               	movlw	-8
 25260  01B2D2  006F FF8F FFDF     	movff	plusw1,indf2
 25261                           
 25262                           ;stkvar	_c @ sp[(-4)+-4]
 25263                           ;stkvar	_s @ sp[(-4)+0]
 25264  01B2D8  0EFC               	movlw	-4
 25265  01B2DA  006F FF8C  F034    	movff	plusw1,btemp+10
 25266  01B2E0  0EFD               	movlw	-3
 25267  01B2E2  006F FF8C  F035    	movff	plusw1,btemp+11
 25268  01B2E8  0E02               	movlw	2
 25269  01B2EA  2434               	addwf	(btemp+10)^0,w,c
 25270  01B2EC  6ED9               	movwf	fsr2l,c
 25271  01B2EE  0E00               	movlw	0
 25272  01B2F0  2035               	addwfc	(btemp+11)^0,w,c
 25273  01B2F2  6EDA               	movwf	fsr2h,c
 25274  01B2F4  0EF8               	movlw	-8
 25275  01B2F6  006F FF8F FFDF     	movff	plusw1,indf2
 25276                           
 25277                           ;stkvar	_c @ sp[(-4)+-4]
 25278                           ;stkvar	_n @ sp[(-4)+-6]
 25279                           ;stkvar	_s @ sp[(-4)+0]
 25280  01B2FC  0EFC               	movlw	-4
 25281  01B2FE  006F FF8C  F034    	movff	plusw1,btemp+10
 25282  01B304  0EFD               	movlw	-3
 25283  01B306  006F FF8C  F035    	movff	plusw1,btemp+11
 25284  01B30C  0EF6               	movlw	-10
 25285  01B30E  50E3               	movf	plusw1,w,c
 25286  01B310  2634               	addwf	(btemp+10)^0,f,c
 25287  01B312  0EF7               	movlw	-9
 25288  01B314  50E3               	movf	plusw1,w,c
 25289  01B316  2235               	addwfc	(btemp+11)^0,f,c
 25290  01B318  0EFE               	movlw	254
 25291  01B31A  2434               	addwf	(btemp+10)^0,w,c
 25292  01B31C  6ED9               	movwf	fsr2l,c
 25293  01B31E  0EFF               	movlw	255
 25294  01B320  2035               	addwfc	(btemp+11)^0,w,c
 25295  01B322  6EDA               	movwf	fsr2h,c
 25296  01B324  0EF8               	movlw	-8
 25297  01B326  006F FF8F FFDF     	movff	plusw1,indf2
 25298                           
 25299                           ;stkvar	_c @ sp[(-4)+-4]
 25300                           ;stkvar	_n @ sp[(-4)+-6]
 25301                           ;stkvar	_s @ sp[(-4)+0]
 25302  01B32C  0EFC               	movlw	-4
 25303  01B32E  006F FF8C  F034    	movff	plusw1,btemp+10
 25304  01B334  0EFD               	movlw	-3
 25305  01B336  006F FF8C  F035    	movff	plusw1,btemp+11
 25306  01B33C  0EF6               	movlw	-10
 25307  01B33E  50E3               	movf	plusw1,w,c
 25308  01B340  2634               	addwf	(btemp+10)^0,f,c
 25309  01B342  0EF7               	movlw	-9
 25310  01B344  50E3               	movf	plusw1,w,c
 25311  01B346  2235               	addwfc	(btemp+11)^0,f,c
 25312  01B348  0EFD               	movlw	253
 25313  01B34A  2434               	addwf	(btemp+10)^0,w,c
 25314  01B34C  6ED9               	movwf	fsr2l,c
 25315  01B34E  0EFF               	movlw	255
 25316  01B350  2035               	addwfc	(btemp+11)^0,w,c
 25317  01B352  6EDA               	movwf	fsr2h,c
 25318  01B354  0EF8               	movlw	-8
 25319  01B356  006F FF8F FFDF     	movff	plusw1,indf2
 25320                           
 25321                           ;stkvar	_n @ sp[(-4)+-6]
 25322  01B35C  0EF7               	movlw	-9
 25323  01B35E  50E3               	movf	plusw1,w,c
 25324  01B360  E108               	bnz	l15438
 25325  01B362  0EF6               	movlw	-10
 25326  01B364  006F FF8C  F02A    	movff	plusw1,btemp
 25327  01B36A  0E07               	movlw	7
 25328  01B36C  5E2A               	subwf	btemp^0,f,c
 25329  01B36E  A0D8               	btfss	status,0,c
 25330  01B370  D0C6               	goto	u14350
 25331  01B372                     l15438:
 25332                           
 25333                           ;stkvar	_c @ sp[(-4)+-4]
 25334                           ;stkvar	_s @ sp[(-4)+0]
 25335  01B372  0EFC               	movlw	-4
 25336  01B374  006F FF8C  F034    	movff	plusw1,btemp+10
 25337  01B37A  0EFD               	movlw	-3
 25338  01B37C  006F FF8C  F035    	movff	plusw1,btemp+11
 25339  01B382  0E03               	movlw	3
 25340  01B384  2434               	addwf	(btemp+10)^0,w,c
 25341  01B386  6ED9               	movwf	fsr2l,c
 25342  01B388  0E00               	movlw	0
 25343  01B38A  2035               	addwfc	(btemp+11)^0,w,c
 25344  01B38C  6EDA               	movwf	fsr2h,c
 25345  01B38E  0EF8               	movlw	-8
 25346  01B390  006F FF8F FFDF     	movff	plusw1,indf2
 25347                           
 25348                           ;stkvar	_c @ sp[(-4)+-4]
 25349                           ;stkvar	_n @ sp[(-4)+-6]
 25350                           ;stkvar	_s @ sp[(-4)+0]
 25351  01B396  0EFC               	movlw	-4
 25352  01B398  006F FF8C  F034    	movff	plusw1,btemp+10
 25353  01B39E  0EFD               	movlw	-3
 25354  01B3A0  006F FF8C  F035    	movff	plusw1,btemp+11
 25355  01B3A6  0EF6               	movlw	-10
 25356  01B3A8  50E3               	movf	plusw1,w,c
 25357  01B3AA  2634               	addwf	(btemp+10)^0,f,c
 25358  01B3AC  0EF7               	movlw	-9
 25359  01B3AE  50E3               	movf	plusw1,w,c
 25360  01B3B0  2235               	addwfc	(btemp+11)^0,f,c
 25361  01B3B2  0EFC               	movlw	252
 25362  01B3B4  2434               	addwf	(btemp+10)^0,w,c
 25363  01B3B6  6ED9               	movwf	fsr2l,c
 25364  01B3B8  0EFF               	movlw	255
 25365  01B3BA  2035               	addwfc	(btemp+11)^0,w,c
 25366  01B3BC  6EDA               	movwf	fsr2h,c
 25367  01B3BE  0EF8               	movlw	-8
 25368  01B3C0  006F FF8F FFDF     	movff	plusw1,indf2
 25369                           
 25370                           ;stkvar	_n @ sp[(-4)+-6]
 25371  01B3C6  0EF7               	movlw	-9
 25372  01B3C8  50E3               	movf	plusw1,w,c
 25373  01B3CA  E108               	bnz	l15444
 25374  01B3CC  0EF6               	movlw	-10
 25375  01B3CE  006F FF8C  F02A    	movff	plusw1,btemp
 25376  01B3D4  0E09               	movlw	9
 25377  01B3D6  5E2A               	subwf	btemp^0,f,c
 25378  01B3D8  A0D8               	btfss	status,0,c
 25379  01B3DA  D091               	goto	u14350
 25380  01B3DC                     l15444:
 25381                           
 25382                           ;stkvar	_s @ sp[(-4)+0]
 25383  01B3DC  0EFC               	movlw	-4
 25384  01B3DE  006F FF8C  F034    	movff	plusw1,btemp+10
 25385  01B3E4  1E34               	comf	(btemp+10)^0,f,c
 25386  01B3E6  0EFD               	movlw	-3
 25387  01B3E8  006F FF8C  F035    	movff	plusw1,btemp+11
 25388  01B3EE  1E35               	comf	(btemp+11)^0,f,c
 25389  01B3F0  2A34               	incf	(btemp+10)^0,f,c
 25390  01B3F2  B4D8               	btfsc	status,2,c
 25391  01B3F4  2A35               	incf	(btemp+11)^0,f,c
 25392  01B3F6  0E03               	movlw	3
 25393  01B3F8  1634               	andwf	(btemp+10)^0,f,c
 25394  01B3FA  0E00               	movlw	0
 25395  01B3FC  1635               	andwf	(btemp+11)^0,f,c
 25396                           
 25397                           ;stkvar	_k @ sp[(-4)+2]
 25398  01B3FE  0EFE               	movlw	-2
 25399  01B400  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 25400  01B406  0EFF               	movlw	-1
 25401  01B408  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 25402                           
 25403                           ;stkvar	_k @ sp[(-4)+2]
 25404                           ;stkvar	_s @ sp[(-4)+0]
 25405  01B40E  0EFC               	movlw	-4
 25406  01B410  50E3               	movf	plusw1,w,c
 25407  01B412  6E2A               	movwf	btemp^0,c
 25408  01B414  0EFE               	movlw	-2
 25409  01B416  50E3               	movf	plusw1,w,c
 25410  01B418  262A               	addwf	btemp^0,f,c
 25411  01B41A  0EFC               	movlw	-4
 25412  01B41C  0060  F0AB  FFE3   	movff	btemp,plusw1
 25413  01B422  0EFD               	movlw	-3
 25414  01B424  50E3               	movf	plusw1,w,c
 25415  01B426  6E2A               	movwf	btemp^0,c
 25416  01B428  0EFF               	movlw	-1
 25417  01B42A  50E3               	movf	plusw1,w,c
 25418  01B42C  222A               	addwfc	btemp^0,f,c
 25419  01B42E  0EFD               	movlw	-3
 25420  01B430  0060  F0AB  FFE3   	movff	btemp,plusw1
 25421                           
 25422                           ;stkvar	_k @ sp[(-4)+2]
 25423                           ;stkvar	_n @ sp[(-4)+-6]
 25424  01B436  0EF6               	movlw	-10
 25425  01B438  50E3               	movf	plusw1,w,c
 25426  01B43A  6E2A               	movwf	btemp^0,c
 25427  01B43C  0EFE               	movlw	-2
 25428  01B43E  50E3               	movf	plusw1,w,c
 25429  01B440  5E2A               	subwf	btemp^0,f,c
 25430  01B442  0EF6               	movlw	-10
 25431  01B444  0060  F0AB  FFE3   	movff	btemp,plusw1
 25432  01B44A  0EF7               	movlw	-9
 25433  01B44C  50E3               	movf	plusw1,w,c
 25434  01B44E  6E2A               	movwf	btemp^0,c
 25435  01B450  0EFF               	movlw	-1
 25436  01B452  50E3               	movf	plusw1,w,c
 25437  01B454  5A2A               	subwfb	btemp^0,f,c
 25438  01B456  0EF7               	movlw	-9
 25439  01B458  0060  F0AB  FFE3   	movff	btemp,plusw1
 25440  01B45E  0EFC               	movlw	252
 25441  01B460  6E34               	movwf	(btemp+10)^0,c
 25442  01B462  0EFF               	movlw	255
 25443  01B464  6E35               	movwf	(btemp+11)^0,c
 25444                           
 25445                           ;stkvar	_n @ sp[(-4)+-6]
 25446  01B466  0EF6               	movlw	-10
 25447  01B468  006F FF8C  F02A    	movff	plusw1,btemp
 25448  01B46E  5034               	movf	(btemp+10)^0,w,c
 25449  01B470  162A               	andwf	btemp^0,f,c
 25450  01B472  0EF6               	movlw	-10
 25451  01B474  0060  F0AB  FFE3   	movff	btemp,plusw1
 25452  01B47A  0EF7               	movlw	-9
 25453  01B47C  006F FF8C  F02A    	movff	plusw1,btemp
 25454  01B482  5035               	movf	(btemp+11)^0,w,c
 25455  01B484  162A               	andwf	btemp^0,f,c
 25456  01B486  0EF7               	movlw	-9
 25457  01B488  D02E               	goto	L24
 25458  01B48A                     l15452:
 25459                           
 25460                           ;stkvar	_c @ sp[(-4)+-4]
 25461                           ;stkvar	_s @ sp[(-4)+0]
 25462  01B48A  0EFC               	movlw	-4
 25463  01B48C  006F FF8F FFD9     	movff	plusw1,fsr2l
 25464  01B492  0EFD               	movlw	-3
 25465  01B494  006F FF8F FFDA     	movff	plusw1,fsr2h
 25466  01B49A  0EF8               	movlw	-8
 25467  01B49C  006F FF8F FFDF     	movff	plusw1,indf2
 25468                           
 25469                           ;stkvar	_n @ sp[(-4)+-6]
 25470  01B4A2  0EF6               	movlw	-10
 25471  01B4A4  006F FF8C  F02A    	movff	plusw1,btemp
 25472  01B4AA  0E01               	movlw	1
 25473  01B4AC  5E2A               	subwf	btemp^0,f,c
 25474  01B4AE  0EF6               	movlw	-10
 25475  01B4B0  0060  F0AB  FFE3   	movff	btemp,plusw1
 25476  01B4B6  0EF7               	movlw	-9
 25477  01B4B8  006F FF8C  F02A    	movff	plusw1,btemp
 25478  01B4BE  0E00               	movlw	0
 25479  01B4C0  5A2A               	subwfb	btemp^0,f,c
 25480  01B4C2  0EF7               	movlw	-9
 25481  01B4C4  0060  F0AB  FFE3   	movff	btemp,plusw1
 25482                           
 25483                           ;stkvar	_s @ sp[(-4)+0]
 25484  01B4CA  0EFC               	movlw	-4
 25485  01B4CC  50E3               	movf	plusw1,w,c
 25486  01B4CE  0F01               	addlw	1
 25487  01B4D0  6E2A               	movwf	btemp^0,c
 25488  01B4D2  0EFC               	movlw	-4
 25489  01B4D4  0060  F0AB  FFE3   	movff	btemp,plusw1
 25490  01B4DA  6A2A               	clrf	btemp^0,c
 25491  01B4DC  0EFD               	movlw	-3
 25492  01B4DE  50E3               	movf	plusw1,w,c
 25493  01B4E0  202A               	addwfc	btemp^0,w,c
 25494  01B4E2  6E2A               	movwf	btemp^0,c
 25495  01B4E4  0EFD               	movlw	-3
 25496  01B4E6                     L24:
 25497  01B4E6  0060  F0AB  FFE3   	movff	btemp,plusw1
 25498                           
 25499                           ;stkvar	_n @ sp[(-4)+-6]
 25500  01B4EC  0EF6               	movlw	-10
 25501  01B4EE  006F FF8C  F02A    	movff	plusw1,btemp
 25502  01B4F4  0EF7               	movlw	-9
 25503  01B4F6  50E3               	movf	plusw1,w,c
 25504  01B4F8  102A               	iorwf	btemp^0,w,c
 25505  01B4FA  A4D8               	btfss	status,2,c
 25506  01B4FC  D7C6               	goto	l15452
 25507  01B4FE                     u14350:
 25508                           
 25509                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 25510  01B4FE  0EF6               	movlw	246
 25511  01B500  26E1               	addwf	fsr1l,f,c
 25512  01B502  0EFF               	movlw	255
 25513  01B504  22E2               	addwfc	fsr1h,f,c
 25514  01B506  0012               	return		;funcret
 25515  01B508                     __end_of_memset:
 25516                           	opt callstack 0
 25517                           
 25518 ;; *************** function _printf *****************
 25519 ;; Defined at:
 25520 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 25521 ;; Parameters:    Size  Location     Type
 25522 ;;  fmt             2  [STACK] PTR const unsigned char 
 25523 ;;		 -> STR_74(3), 
 25524 ;; Auto vars:     Size  Location     Type
 25525 ;;  ap              2  [STACK] PTR void [1]
 25526 ;;		 -> ?_printf(2), ?_sprintf(2), 
 25527 ;;  ret             2    0        int 
 25528 ;; Return value:  Size  Location     Type
 25529 ;;                  2  [STACK] int 
 25530 ;; Registers used:
 25531 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 25532 ;; Tracked objects:
 25533 ;;		On entry : 3F/3B
 25534 ;;		On exit  : 3F/0
 25535 ;;		Unchanged: 0/0
 25536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25541 ;;Total ram usage:        0 bytes
 25542 ;; Hardware stack levels used:    1
 25543 ;; Hardware stack levels required when called:   23
 25544 ;; This function calls:
 25545 ;;		_vfprintf
 25546 ;; This function is called by:
 25547 ;;		_eaDogM_WriteString
 25548 ;; This function uses a reentrant model
 25549 ;;
 25550                           
 25551                           	psect	text91
 25552  001882                     __ptext91:
 25553                           	opt callstack 0
 25554  001882                     _printf:
 25555                           	opt callstack 0
 25556                           
 25557                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25558  001882  52E6               	movf	postinc1,f,c
 25559  001884  52E6               	movf	postinc1,f,c
 25560                           
 25561                           ;stkvar	?_printf @ sp[(-2)+-3]
 25562                           
 25563                           ;incstack = 0
 25564  001886  0EFB               	movlw	251
 25565  001888  24E1               	addwf	fsr1l,w,c
 25566  00188A  6E34               	movwf	(btemp+10)^0,c
 25567  00188C  0EFF               	movlw	255
 25568  00188E  20E2               	addwfc	fsr1h,w,c
 25569  001890  6E35               	movwf	(btemp+11)^0,c
 25570                           
 25571                           ;stkvar	_ap @ sp[(-2)+0]
 25572  001892  0EFF               	movlw	-1
 25573  001894  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 25574  00189A  0EFE               	movlw	-2
 25575  00189C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 25576                           
 25577                           ;stkvar	_ap @ sp[(-2)+0]
 25578  0018A2  0EFE               	movlw	254
 25579  0018A4  24E1               	addwf	fsr1l,w,c
 25580  0018A6  6E2A               	movwf	btemp^0,c
 25581  0018A8  0EFF               	movlw	255
 25582  0018AA  20E2               	addwfc	fsr1h,w,c
 25583  0018AC  6E2B               	movwf	(btemp+1)^0,c
 25584  0018AE  0060  F0AB  FFE6   	movff	btemp,postinc1
 25585  0018B4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 25586                           
 25587                           ;stkvar	_fmt @ sp[(-4)+-3]
 25588  0018BA  0EF9               	movlw	-7
 25589  0018BC  006F FF8F FFE6     	movff	plusw1,postinc1
 25590  0018C2  006F FF8F FFE6     	movff	plusw1,postinc1
 25591  0018C8  0E00               	movlw	0
 25592  0018CA  6EE6               	movwf	postinc1,c
 25593  0018CC  0E00               	movlw	0
 25594  0018CE  6EE6               	movwf	postinc1,c
 25595  0018D0  ECC4  F004         	call	_vfprintf	;wreg free
 25596                           
 25597                           ; BSR set to: 0
 25598                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 25599  0018D4  52E5               	movf	postdec1,f,c
 25600  0018D6  52E5               	movf	postdec1,f,c
 25601  0018D8  52E5               	movf	postdec1,f,c
 25602  0018DA  50E7               	movf	indf1,w,c
 25603  0018DC  5EE1               	subwf	fsr1l,f,c
 25604  0018DE  0E00               	movlw	0
 25605  0018E0  5AE2               	subwfb	fsr1h,f,c
 25606  0018E2  0012               	return		;funcret
 25607  0018E4                     __end_of_printf:
 25608                           	opt callstack 0
 25609                           
 25610 ;; *************** function _vfprintf *****************
 25611 ;; Defined at:
 25612 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 25613 ;; Parameters:    Size  Location     Type
 25614 ;;  fp              2  [STACK] PTR struct _IO_FILE
 25615 ;;		 -> f(6), NULL(0), 
 25616 ;;  fmt             2  [STACK] PTR const unsigned char 
 25617 ;;		 -> STR_95(127), STR_93(3), STR_92(3), STR_91(21), 
 25618 ;;		 -> STR_90(21), STR_89(21), STR_88(21), STR_87(21), 
 25619 ;;		 -> STR_86(21), STR_85(26), STR_84(15), STR_83(15), 
 25620 ;;		 -> STR_82(15), STR_81(15), STR_80(10), STR_79(10), 
 25621 ;;		 -> STR_78(19), STR_77(19), STR_74(3), STR_73(14), 
 25622 ;;		 -> STR_72(28), STR_71(28), STR_70(28), STR_69(22), 
 25623 ;;		 -> STR_68(22), STR_67(22), STR_66(22), STR_65(22), 
 25624 ;;		 -> STR_64(22), STR_63(22), STR_62(22), STR_61(22), 
 25625 ;;		 -> STR_60(21), STR_59(22), STR_58(22), STR_57(22), 
 25626 ;;		 -> STR_56(22), STR_55(22), STR_54(22), STR_53(24), 
 25627 ;;		 -> STR_52(24), STR_51(24), STR_50(30), STR_49(24), 
 25628 ;;		 -> STR_48(24), STR_47(23), STR_46(23), STR_45(23), 
 25629 ;;		 -> STR_44(23), STR_43(23), STR_42(23), STR_41(23), 
 25630 ;;		 -> STR_40(23), STR_39(23), STR_38(23), STR_37(23), 
 25631 ;;		 -> STR_36(23), STR_35(18), STR_34(17), STR_33(17), 
 25632 ;;		 -> STR_32(22), STR_31(22), STR_30(22), STR_29(14), 
 25633 ;;		 -> STR_28(14), STR_27(27), STR_26(27), STR_25(23), 
 25634 ;;		 -> STR_24(22), STR_23(22), STR_22(22), STR_21(22), 
 25635 ;;		 -> STR_20(23), STR_19(23), STR_18(23), STR_17(26), 
 25636 ;;		 -> STR_16(22), STR_15(21), STR_14(21), STR_13(21), 
 25637 ;;		 -> STR_12(21), STR_11(21), STR_10(21), STR_9(21), 
 25638 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 25639 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 25640 ;;  ap              2  [STACK] PTR PTR void 
 25641 ;;		 -> ap(2), ap(2), 
 25642 ;; Auto vars:     Size  Location     Type
 25643 ;;  cfmt            2  [STACK] PTR unsigned char 
 25644 ;;		 -> STR_95(127), STR_93(3), STR_92(3), STR_91(21), 
 25645 ;;		 -> STR_90(21), STR_89(21), STR_88(21), STR_87(21), 
 25646 ;;		 -> STR_86(21), STR_85(26), STR_84(15), STR_83(15), 
 25647 ;;		 -> STR_82(15), STR_81(15), STR_80(10), STR_79(10), 
 25648 ;;		 -> STR_78(19), STR_77(19), STR_74(3), STR_73(14), 
 25649 ;;		 -> STR_72(28), STR_71(28), STR_70(28), STR_69(22), 
 25650 ;;		 -> STR_68(22), STR_67(22), STR_66(22), STR_65(22), 
 25651 ;;		 -> STR_64(22), STR_63(22), STR_62(22), STR_61(22), 
 25652 ;;		 -> STR_60(21), STR_59(22), STR_58(22), STR_57(22), 
 25653 ;;		 -> STR_56(22), STR_55(22), STR_54(22), STR_53(24), 
 25654 ;;		 -> STR_52(24), STR_51(24), STR_50(30), STR_49(24), 
 25655 ;;		 -> STR_48(24), STR_47(23), STR_46(23), STR_45(23), 
 25656 ;;		 -> STR_44(23), STR_43(23), STR_42(23), STR_41(23), 
 25657 ;;		 -> STR_40(23), STR_39(23), STR_38(23), STR_37(23), 
 25658 ;;		 -> STR_36(23), STR_35(18), STR_34(17), STR_33(17), 
 25659 ;;		 -> STR_32(22), STR_31(22), STR_30(22), STR_29(14), 
 25660 ;;		 -> STR_28(14), STR_27(27), STR_26(27), STR_25(23), 
 25661 ;;		 -> STR_24(22), STR_23(22), STR_22(22), STR_21(22), 
 25662 ;;		 -> STR_20(23), STR_19(23), STR_18(23), STR_17(26), 
 25663 ;;		 -> STR_16(22), STR_15(21), STR_14(21), STR_13(21), 
 25664 ;;		 -> STR_12(21), STR_11(21), STR_10(21), STR_9(21), 
 25665 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 25666 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 25667 ;; Return value:  Size  Location     Type
 25668 ;;                  2  [STACK] int 
 25669 ;; Registers used:
 25670 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 25671 ;; Tracked objects:
 25672 ;;		On entry : 0/2
 25673 ;;		On exit  : 3F/0
 25674 ;;		Unchanged: 0/0
 25675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25680 ;;Total ram usage:        0 bytes
 25681 ;; Hardware stack levels used:    1
 25682 ;; Hardware stack levels required when called:   22
 25683 ;; This function calls:
 25684 ;;		_vfpfcnvrt
 25685 ;; This function is called by:
 25686 ;;		_sprintf
 25687 ;;		_printf
 25688 ;; This function uses a reentrant model
 25689 ;;
 25690                           
 25691                           	psect	text92
 25692  000988                     __ptext92:
 25693                           	opt callstack 0
 25694  000988                     _vfprintf:
 25695                           	opt callstack 0
 25696                           
 25697                           ; BSR set to: 0
 25698                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25699  000988  52E6               	movf	postinc1,f,c
 25700  00098A  52E6               	movf	postinc1,f,c
 25701                           
 25702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 25703                           ;stkvar	_fmt @ sp[(-2)+-4]
 25704                           
 25705                           ;incstack = 0
 25706 ;; hardware stack exceeded
 25707  00098C  0EFA               	movlw	-6
 25708  00098E  006F FF8C  F034    	movff	plusw1,btemp+10
 25709  000994  0EFB               	movlw	-5
 25710  000996  006F FF8C  F035    	movff	plusw1,btemp+11
 25711                           
 25712                           ;stkvar	_cfmt @ sp[(-2)+0]
 25713  00099C  0EFF               	movlw	-1
 25714  00099E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 25715  0009A4  0EFE               	movlw	-2
 25716  0009A6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 25717                           
 25718                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 25719  0009AC  0100               	movlb	0	; () banked
 25720  0009AE  6BBA               	clrf	_nout& (0+255),b
 25721  0009B0  6BBB               	clrf	(_nout+1)& (0+255),b
 25722                           
 25723                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 25724  0009B2  D021               	goto	l16638
 25725  0009B4                     l16636:
 25726                           
 25727                           ; BSR set to: 0
 25728                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 25729                           ;stkvar	_ap @ sp[(-2)+-6]
 25730  0009B4  0EF8               	movlw	-8
 25731  0009B6  006F FF8F FFE6     	movff	plusw1,postinc1
 25732  0009BC  006F FF8F FFE6     	movff	plusw1,postinc1
 25733                           
 25734                           ;stkvar	_cfmt @ sp[(-4)+0]
 25735  0009C2  0EFC               	movlw	252
 25736  0009C4  24E1               	addwf	fsr1l,w,c
 25737  0009C6  6E2A               	movwf	btemp^0,c
 25738  0009C8  0EFF               	movlw	255
 25739  0009CA  20E2               	addwfc	fsr1h,w,c
 25740  0009CC  6E2B               	movwf	(btemp+1)^0,c
 25741  0009CE  0060  F0AB  FFE6   	movff	btemp,postinc1
 25742  0009D4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 25743                           
 25744                           ;stkvar	_fp @ sp[(-6)+-2]
 25745  0009DA  0EF8               	movlw	-8
 25746  0009DC  006F FF8F FFE6     	movff	plusw1,postinc1
 25747  0009E2  006F FF8F FFE6     	movff	plusw1,postinc1
 25748  0009E8  EC1B  F09D         	call	_vfpfcnvrt	;wreg free
 25749  0009EC  502A               	movf	btemp^0,w,c
 25750  0009EE  0100               	movlb	0	; () banked
 25751  0009F0  27BA               	addwf	_nout& (0+255),f,b
 25752  0009F2  502B               	movf	(btemp+1)^0,w,c
 25753  0009F4  23BB               	addwfc	(_nout+1)& (0+255),f,b
 25754  0009F6                     l16638:
 25755                           
 25756                           ; BSR set to: 0
 25757                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 25758                           ;stkvar	_cfmt @ sp[(-2)+0]
 25759  0009F6  50E1               	movf	fsr1l,w,c
 25760  0009F8  0FFE               	addlw	-2
 25761  0009FA  6ED9               	movwf	fsr2l,c
 25762  0009FC  50E2               	movf	fsr1h,w,c
 25763  0009FE  6EDA               	movwf	fsr2h,c
 25764  000A00  0EFF               	movlw	255
 25765  000A02  22DA               	addwfc	fsr2h,f,c
 25766  000A04  006F FF7B FFF6     	movff	postinc2,tblptrl
 25767  000A0A  006F FF77 FFF7     	movff	postdec2,tblptrh
 25768  000A10                     	if	0	;tblptru may be non-zero
 25769  000A10                     	endif
 25770  000A10                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25771  000A10  0E00               	movlw	low (__mediumconst shr (0+16))
 25772  000A12  6EF8               	movwf	tblptru,c
 25773  000A14                     	endif
 25774  000A14  0008               	tblrd		*
 25775  000A16  50F5               	movf	tablat,w,c
 25776  000A18  0900               	iorlw	0
 25777  000A1A  A4D8               	btfss	status,2,c
 25778  000A1C  D7CB               	goto	l16636
 25779                           
 25780                           ; BSR set to: 0
 25781                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 25782  000A1E  0060  F2E8  F02A   	movff	_nout,btemp
 25783  000A24  0060  F2EC  F02B   	movff	_nout+1,btemp+1
 25784                           
 25785                           ; BSR set to: 0
 25786                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 25787  000A2A  0EF8               	movlw	248
 25788  000A2C  26E1               	addwf	fsr1l,f,c
 25789  000A2E  0EFF               	movlw	255
 25790  000A30  22E2               	addwfc	fsr1h,f,c
 25791  000A32  0012               	return		;funcret
 25792  000A34                     __end_of_vfprintf:
 25793                           	opt callstack 0
 25794                           
 25795 ;; *************** function _vfpfcnvrt *****************
 25796 ;; Defined at:
 25797 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 25798 ;; Parameters:    Size  Location     Type
 25799 ;;  fp              2  [STACK] PTR struct _IO_FILE
 25800 ;;		 -> f(6), NULL(0), 
 25801 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 25802 ;;		 -> cfmt(2), 
 25803 ;;  ap              2  [STACK] PTR PTR void 
 25804 ;;		 -> ap(2), ap(2), 
 25805 ;; Auto vars:     Size  Location     Type
 25806 ;;  llu             8  [STACK] unsigned long long 
 25807 ;;  ll              8  [STACK] long long 
 25808 ;;  f               4  [STACK] long long 
 25809 ;;  ct              3  [STACK] unsigned char [3]
 25810 ;;  vp              3    0        PTR void 
 25811 ;;  cp              2  [STACK] PTR unsigned char 
 25812 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), STR_76(9), 
 25813 ;;		 -> STR_75(12), D.lcd(640), D(642), T(176), 
 25814 ;;		 -> STR_3(5), V(181), 
 25815 ;;  i               2    0        int 
 25816 ;;  done            2    0        int 
 25817 ;;  c               1  [STACK] unsigned char 
 25818 ;; Return value:  Size  Location     Type
 25819 ;;                  2  [STACK] int 
 25820 ;; Registers used:
 25821 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 25822 ;; Tracked objects:
 25823 ;;		On entry : 0/0
 25824 ;;		On exit  : 0/0
 25825 ;;		Unchanged: 0/0
 25826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25831 ;;Total ram usage:        0 bytes
 25832 ;; Hardware stack levels used:    1
 25833 ;; Hardware stack levels required when called:   21
 25834 ;; This function calls:
 25835 ;;		_atoi
 25836 ;;		_ctoa
 25837 ;;		_dtoa
 25838 ;;		_efgtoa
 25839 ;;		_fputc
 25840 ;;		_isdigit
 25841 ;;		_isupper
 25842 ;;		_stoa
 25843 ;;		_strncmp
 25844 ;;		_tolower
 25845 ;;		_utoa
 25846 ;;		_xtoa
 25847 ;; This function is called by:
 25848 ;;		_vfprintf
 25849 ;; This function uses a reentrant model
 25850 ;;
 25851                           
 25852                           	psect	text93
 25853  013A36                     __ptext93:
 25854                           	opt callstack 0
 25855  013A36                     _vfpfcnvrt:
 25856                           	opt callstack 0
 25857                           
 25858                           ; BSR set to: 0
 25859                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 25860  013A36  0E20               	movlw	32
 25861  013A38  26E1               	addwf	fsr1l,f,c
 25862  013A3A  0E00               	movlw	0
 25863  013A3C  22E2               	addwfc	fsr1h,f,c
 25864                           
 25865                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 25866                           ;stkvar	_fmt @ sp[(-32)+-4]
 25867                           
 25868                           ;incstack = 0
 25869 ;; hardware stack exceeded
 25870  013A3E  0EDC               	movlw	-36
 25871  013A40  006F FF8F FFD9     	movff	plusw1,fsr2l
 25872  013A46  0EDD               	movlw	-35
 25873  013A48  006F FF8F FFDA     	movff	plusw1,fsr2h
 25874  013A4E  006F FF7B FFF6     	movff	postinc2,tblptrl
 25875  013A54  006F FF77 FFF7     	movff	postdec2,tblptrh
 25876  013A5A                     	if	0	;tblptru may be non-zero
 25877  013A5A                     	endif
 25878  013A5A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25879  013A5A  0E00               	movlw	low (__mediumconst shr (0+16))
 25880  013A5C  6EF8               	movwf	tblptru,c
 25881  013A5E                     	endif
 25882  013A5E  0008               	tblrd		*
 25883  013A60  50F5               	movf	tablat,w,c
 25884  013A62  0A25               	xorlw	37
 25885  013A64  A4D8               	btfss	status,2,c
 25886  013A66  EFC2  F0A4         	goto	l16406
 25887                           
 25888                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 25889                           ;stkvar	_fmt @ sp[(-32)+-4]
 25890  013A6A  0EDC               	movlw	-36
 25891  013A6C  006F FF8F FFD9     	movff	plusw1,fsr2l
 25892  013A72  0EDD               	movlw	-35
 25893  013A74  006F FF8F FFDA     	movff	plusw1,fsr2h
 25894  013A7A  2ADE               	incf	postinc2,f,c
 25895  013A7C  0E00               	movlw	0
 25896  013A7E  22DD               	addwfc	postdec2,f,c
 25897                           
 25898                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 25899  013A80  6A4A               	clrf	_width^0,c
 25900  013A82  6A4B               	clrf	(_width+1)^0,c
 25901  013A84  6A4E               	clrf	_flags^0,c
 25902  013A86  6A4F               	clrf	(_flags+1)^0,c
 25903                           
 25904                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 25905  013A88  684C               	setf	_prec^0,c
 25906  013A8A  684D               	setf	(_prec+1)^0,c
 25907                           
 25908                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 25909                           ;stkvar	_fmt @ sp[(-32)+-4]
 25910  013A8C  0EDC               	movlw	-36
 25911  013A8E  006F FF8F FFD9     	movff	plusw1,fsr2l
 25912  013A94  0EDD               	movlw	-35
 25913  013A96  006F FF8F FFDA     	movff	plusw1,fsr2h
 25914  013A9C  006F FF7B FFF6     	movff	postinc2,tblptrl
 25915  013AA2  006F FF77 FFF7     	movff	postdec2,tblptrh
 25916  013AA8                     	if	0	;tblptru may be non-zero
 25917  013AA8                     	endif
 25918  013AA8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25919  013AA8  0E00               	movlw	low (__mediumconst shr (0+16))
 25920  013AAA  6EF8               	movwf	tblptru,c
 25921  013AAC                     	endif
 25922  013AAC  0008               	tblrd		*
 25923  013AAE  50F5               	movf	tablat,w,c
 25924  013AB0  0A2A               	xorlw	42
 25925  013AB2  A4D8               	btfss	status,2,c
 25926  013AB4  D031               	goto	l16224
 25927                           
 25928                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 25929                           ;stkvar	_fmt @ sp[(-32)+-4]
 25930  013AB6  0EDC               	movlw	-36
 25931  013AB8  006F FF8F FFD9     	movff	plusw1,fsr2l
 25932  013ABE  0EDD               	movlw	-35
 25933  013AC0  006F FF8F FFDA     	movff	plusw1,fsr2h
 25934  013AC6  2ADE               	incf	postinc2,f,c
 25935  013AC8  0E00               	movlw	0
 25936  013ACA  22DD               	addwfc	postdec2,f,c
 25937                           
 25938                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 25939                           ;stkvar	_ap @ sp[(-32)+-6]
 25940  013ACC  0EDA               	movlw	-38
 25941  013ACE  006F FF8F FFD9     	movff	plusw1,fsr2l
 25942  013AD4  0EDB               	movlw	-37
 25943  013AD6  006F FF8F FFDA     	movff	plusw1,fsr2h
 25944  013ADC  0E02               	movlw	2
 25945  013ADE  5EDE               	subwf	postinc2,f,c
 25946  013AE0  0E00               	movlw	0
 25947  013AE2  5ADD               	subwfb	postdec2,f,c
 25948  013AE4  006F FF78  F034    	movff	postinc2,btemp+10
 25949  013AEA  006F FF74  F035    	movff	postdec2,btemp+11
 25950  013AF0  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 25951  013AF6  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 25952  013AFC  006F FF78  F04A    	movff	postinc2,_width
 25953  013B02  006F FF74  F04B    	movff	postdec2,_width+1
 25954                           
 25955                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 25956  013B08  AE4B               	btfss	(_width+1)^0,7,c
 25957  013B0A  D066               	goto	u15760
 25958                           
 25959                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 25960  013B0C  804E               	bsf	_flags^0,0,c
 25961                           
 25962                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 25963  013B0E  6C4A               	negf	_width^0,c
 25964  013B10  1E4B               	comf	(_width+1)^0,f,c
 25965  013B12  B0D8               	btfsc	status,0,c
 25966  013B14  2A4B               	incf	(_width+1)^0,f,c
 25967  013B16  D060               	goto	u15760
 25968  013B18                     l16224:
 25969                           
 25970                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 25971                           ;stkvar	_fmt @ sp[(-32)+-4]
 25972  013B18  0EDC               	movlw	-36
 25973  013B1A  006F FF8F FFD9     	movff	plusw1,fsr2l
 25974  013B20  0EDD               	movlw	-35
 25975  013B22  006F FF8F FFDA     	movff	plusw1,fsr2h
 25976  013B28  006F FF78  F034    	movff	postinc2,btemp+10
 25977  013B2E  006F FF74  F035    	movff	postdec2,btemp+11
 25978  013B34  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 25979  013B3A  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 25980  013B40  EC7C  F0E2         	call	_atoi	;wreg free
 25981  013B44  0060  F0A8  F04A   	movff	btemp,_width
 25982  013B4A  0060  F0AC  F04B   	movff	btemp+1,_width+1
 25983                           
 25984                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 25985  013B50  D00B               	goto	l16228
 25986  013B52                     l16226:
 25987                           
 25988                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 25989                           ;stkvar	_fmt @ sp[(-32)+-4]
 25990  013B52  0EDC               	movlw	-36
 25991  013B54  006F FF8F FFD9     	movff	plusw1,fsr2l
 25992  013B5A  0EDD               	movlw	-35
 25993  013B5C  006F FF8F FFDA     	movff	plusw1,fsr2h
 25994  013B62  2ADE               	incf	postinc2,f,c
 25995  013B64  0E00               	movlw	0
 25996  013B66  22DD               	addwfc	postdec2,f,c
 25997  013B68                     l16228:
 25998  013B68  0ED0               	movlw	208
 25999  013B6A  6E34               	movwf	(btemp+10)^0,c
 26000  013B6C  0EFF               	movlw	255
 26001  013B6E  6E35               	movwf	(btemp+11)^0,c
 26002                           
 26003                           ;stkvar	_fmt @ sp[(-32)+-4]
 26004  013B70  0EDC               	movlw	-36
 26005  013B72  006F FF8F FFD9     	movff	plusw1,fsr2l
 26006  013B78  0EDD               	movlw	-35
 26007  013B7A  006F FF8F FFDA     	movff	plusw1,fsr2h
 26008  013B80  006F FF7B FFF6     	movff	postinc2,tblptrl
 26009  013B86  006F FF77 FFF7     	movff	postdec2,tblptrh
 26010  013B8C                     	if	0	;tblptru may be non-zero
 26011  013B8C                     	endif
 26012  013B8C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26013  013B8C  0E00               	movlw	low (__mediumconst shr (0+16))
 26014  013B8E  6EF8               	movwf	tblptru,c
 26015  013B90                     	endif
 26016  013B90  0008               	tblrd		*
 26017  013B92  50F5               	movf	tablat,w,c
 26018  013B94  6E32               	movwf	(btemp+8)^0,c
 26019  013B96  6A33               	clrf	(btemp+9)^0,c
 26020  013B98  5034               	movf	(btemp+10)^0,w,c
 26021  013B9A  2632               	addwf	(btemp+8)^0,f,c
 26022  013B9C  5035               	movf	(btemp+11)^0,w,c
 26023  013B9E  2233               	addwfc	(btemp+9)^0,f,c
 26024  013BA0  5033               	movf	(btemp+9)^0,w,c
 26025  013BA2  E106               	bnz	u15740
 26026  013BA4  0E0A               	movlw	10
 26027  013BA6  5C32               	subwf	(btemp+8)^0,w,c
 26028  013BA8  B0D8               	btfsc	status,0,c
 26029  013BAA  D002               	goto	u15740
 26030  013BAC  0E01               	movlw	1
 26031  013BAE  D001               	goto	u15750
 26032  013BB0                     u15740:
 26033  013BB0  0E00               	movlw	0
 26034  013BB2                     u15750:
 26035  013BB2  6E34               	movwf	(btemp+10)^0,c
 26036  013BB4  6A35               	clrf	(btemp+11)^0,c
 26037                           
 26038                           ;stkvar	_vfpfcnvrt$6667 @ sp[(-32)+4]
 26039  013BB6  0EE4               	movlw	-28
 26040  013BB8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26041  013BBE  0EE5               	movlw	-27
 26042  013BC0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26043                           
 26044                           ;stkvar	_vfpfcnvrt$6667 @ sp[(-32)+4]
 26045  013BC6  0EE4               	movlw	-28
 26046  013BC8  006F FF8C  F02A    	movff	plusw1,btemp
 26047  013BCE  0EE5               	movlw	-27
 26048  013BD0  50E3               	movf	plusw1,w,c
 26049  013BD2  102A               	iorwf	btemp^0,w,c
 26050  013BD4  A4D8               	btfss	status,2,c
 26051  013BD6  D7BD               	goto	l16226
 26052  013BD8                     u15760:
 26053                           
 26054                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 26055                           ;stkvar	_fmt @ sp[(-32)+-4]
 26056  013BD8  0EDC               	movlw	-36
 26057  013BDA  006F FF8F FFD9     	movff	plusw1,fsr2l
 26058  013BE0  0EDD               	movlw	-35
 26059  013BE2  006F FF8F FFDA     	movff	plusw1,fsr2h
 26060  013BE8  006F FF7B FFF6     	movff	postinc2,tblptrl
 26061  013BEE  006F FF77 FFF7     	movff	postdec2,tblptrh
 26062  013BF4                     	if	0	;tblptru may be non-zero
 26063  013BF4                     	endif
 26064  013BF4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26065  013BF4  0E00               	movlw	low (__mediumconst shr (0+16))
 26066  013BF6  6EF8               	movwf	tblptru,c
 26067  013BF8                     	endif
 26068  013BF8  0008               	tblrd		*
 26069  013BFA  50F5               	movf	tablat,w,c
 26070  013BFC  0A2E               	xorlw	46
 26071  013BFE  A4D8               	btfss	status,2,c
 26072  013C00  D0AC               	goto	u15810
 26073                           
 26074                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 26075  013C02  6A4C               	clrf	_prec^0,c
 26076  013C04  6A4D               	clrf	(_prec+1)^0,c
 26077                           
 26078                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 26079                           ;stkvar	_fmt @ sp[(-32)+-4]
 26080  013C06  0EDC               	movlw	-36
 26081  013C08  006F FF8F FFD9     	movff	plusw1,fsr2l
 26082  013C0E  0EDD               	movlw	-35
 26083  013C10  006F FF8F FFDA     	movff	plusw1,fsr2h
 26084  013C16  2ADE               	incf	postinc2,f,c
 26085  013C18  0E00               	movlw	0
 26086  013C1A  22DD               	addwfc	postdec2,f,c
 26087                           
 26088                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 26089                           ;stkvar	_fmt @ sp[(-32)+-4]
 26090  013C1C  0EDC               	movlw	-36
 26091  013C1E  006F FF8F FFD9     	movff	plusw1,fsr2l
 26092  013C24  0EDD               	movlw	-35
 26093  013C26  006F FF8F FFDA     	movff	plusw1,fsr2h
 26094  013C2C  006F FF7B FFF6     	movff	postinc2,tblptrl
 26095  013C32  006F FF77 FFF7     	movff	postdec2,tblptrh
 26096  013C38                     	if	0	;tblptru may be non-zero
 26097  013C38                     	endif
 26098  013C38                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26099  013C38  0E00               	movlw	low (__mediumconst shr (0+16))
 26100  013C3A  6EF8               	movwf	tblptru,c
 26101  013C3C                     	endif
 26102  013C3C  0008               	tblrd		*
 26103  013C3E  50F5               	movf	tablat,w,c
 26104  013C40  0A2A               	xorlw	42
 26105  013C42  A4D8               	btfss	status,2,c
 26106  013C44  D02A               	goto	l16246
 26107                           
 26108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 26109                           ;stkvar	_fmt @ sp[(-32)+-4]
 26110  013C46  0EDC               	movlw	-36
 26111  013C48  006F FF8F FFD9     	movff	plusw1,fsr2l
 26112  013C4E  0EDD               	movlw	-35
 26113  013C50  006F FF8F FFDA     	movff	plusw1,fsr2h
 26114  013C56  2ADE               	incf	postinc2,f,c
 26115  013C58  0E00               	movlw	0
 26116  013C5A  22DD               	addwfc	postdec2,f,c
 26117                           
 26118                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 26119                           ;stkvar	_ap @ sp[(-32)+-6]
 26120  013C5C  0EDA               	movlw	-38
 26121  013C5E  006F FF8F FFD9     	movff	plusw1,fsr2l
 26122  013C64  0EDB               	movlw	-37
 26123  013C66  006F FF8F FFDA     	movff	plusw1,fsr2h
 26124  013C6C  0E02               	movlw	2
 26125  013C6E  5EDE               	subwf	postinc2,f,c
 26126  013C70  0E00               	movlw	0
 26127  013C72  5ADD               	subwfb	postdec2,f,c
 26128  013C74  006F FF78  F034    	movff	postinc2,btemp+10
 26129  013C7A  006F FF74  F035    	movff	postdec2,btemp+11
 26130  013C80  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26131  013C86  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26132  013C8C  006F FF78  F04C    	movff	postinc2,_prec
 26133  013C92  006F FF74  F04D    	movff	postdec2,_prec+1
 26134                           
 26135                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 26136  013C98  D060               	goto	u15810
 26137  013C9A                     l16246:
 26138                           
 26139                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 26140                           ;stkvar	_fmt @ sp[(-32)+-4]
 26141  013C9A  0EDC               	movlw	-36
 26142  013C9C  006F FF8F FFD9     	movff	plusw1,fsr2l
 26143  013CA2  0EDD               	movlw	-35
 26144  013CA4  006F FF8F FFDA     	movff	plusw1,fsr2h
 26145  013CAA  006F FF78  F034    	movff	postinc2,btemp+10
 26146  013CB0  006F FF74  F035    	movff	postdec2,btemp+11
 26147  013CB6  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 26148  013CBC  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 26149  013CC2  EC7C  F0E2         	call	_atoi	;wreg free
 26150  013CC6  0060  F0A8  F04C   	movff	btemp,_prec
 26151  013CCC  0060  F0AC  F04D   	movff	btemp+1,_prec+1
 26152                           
 26153                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 26154  013CD2  D00B               	goto	l16250
 26155  013CD4                     l16248:
 26156                           
 26157                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 26158                           ;stkvar	_fmt @ sp[(-32)+-4]
 26159  013CD4  0EDC               	movlw	-36
 26160  013CD6  006F FF8F FFD9     	movff	plusw1,fsr2l
 26161  013CDC  0EDD               	movlw	-35
 26162  013CDE  006F FF8F FFDA     	movff	plusw1,fsr2h
 26163  013CE4  2ADE               	incf	postinc2,f,c
 26164  013CE6  0E00               	movlw	0
 26165  013CE8  22DD               	addwfc	postdec2,f,c
 26166  013CEA                     l16250:
 26167  013CEA  0ED0               	movlw	208
 26168  013CEC  6E34               	movwf	(btemp+10)^0,c
 26169  013CEE  0EFF               	movlw	255
 26170  013CF0  6E35               	movwf	(btemp+11)^0,c
 26171                           
 26172                           ;stkvar	_fmt @ sp[(-32)+-4]
 26173  013CF2  0EDC               	movlw	-36
 26174  013CF4  006F FF8F FFD9     	movff	plusw1,fsr2l
 26175  013CFA  0EDD               	movlw	-35
 26176  013CFC  006F FF8F FFDA     	movff	plusw1,fsr2h
 26177  013D02  006F FF7B FFF6     	movff	postinc2,tblptrl
 26178  013D08  006F FF77 FFF7     	movff	postdec2,tblptrh
 26179  013D0E                     	if	0	;tblptru may be non-zero
 26180  013D0E                     	endif
 26181  013D0E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26182  013D0E  0E00               	movlw	low (__mediumconst shr (0+16))
 26183  013D10  6EF8               	movwf	tblptru,c
 26184  013D12                     	endif
 26185  013D12  0008               	tblrd		*
 26186  013D14  50F5               	movf	tablat,w,c
 26187  013D16  6E32               	movwf	(btemp+8)^0,c
 26188  013D18  6A33               	clrf	(btemp+9)^0,c
 26189  013D1A  5034               	movf	(btemp+10)^0,w,c
 26190  013D1C  2632               	addwf	(btemp+8)^0,f,c
 26191  013D1E  5035               	movf	(btemp+11)^0,w,c
 26192  013D20  2233               	addwfc	(btemp+9)^0,f,c
 26193  013D22  5033               	movf	(btemp+9)^0,w,c
 26194  013D24  E106               	bnz	u15790
 26195  013D26  0E0A               	movlw	10
 26196  013D28  5C32               	subwf	(btemp+8)^0,w,c
 26197  013D2A  B0D8               	btfsc	status,0,c
 26198  013D2C  D002               	goto	u15790
 26199  013D2E  0E01               	movlw	1
 26200  013D30  D001               	goto	u15800
 26201  013D32                     u15790:
 26202  013D32  0E00               	movlw	0
 26203  013D34                     u15800:
 26204  013D34  6E34               	movwf	(btemp+10)^0,c
 26205  013D36  6A35               	clrf	(btemp+11)^0,c
 26206                           
 26207                           ;stkvar	_vfpfcnvrt$6668 @ sp[(-32)+0]
 26208  013D38  0EE0               	movlw	-32
 26209  013D3A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26210  013D40  0EE1               	movlw	-31
 26211  013D42  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26212                           
 26213                           ;stkvar	_vfpfcnvrt$6668 @ sp[(-32)+0]
 26214  013D48  0EE0               	movlw	-32
 26215  013D4A  006F FF8C  F02A    	movff	plusw1,btemp
 26216  013D50  0EE1               	movlw	-31
 26217  013D52  50E3               	movf	plusw1,w,c
 26218  013D54  102A               	iorwf	btemp^0,w,c
 26219  013D56  A4D8               	btfss	status,2,c
 26220  013D58  D7BD               	goto	l16248
 26221  013D5A                     u15810:
 26222                           
 26223                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 26224                           ;stkvar	_fmt @ sp[(-32)+-4]
 26225  013D5A  0EDC               	movlw	-36
 26226  013D5C  006F FF8F FFD9     	movff	plusw1,fsr2l
 26227  013D62  0EDD               	movlw	-35
 26228  013D64  006F FF8F FFDA     	movff	plusw1,fsr2h
 26229  013D6A  006F FF7B FFF6     	movff	postinc2,tblptrl
 26230  013D70  006F FF77 FFF7     	movff	postdec2,tblptrh
 26231  013D76                     	if	0	;tblptru may be non-zero
 26232  013D76                     	endif
 26233  013D76                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26234  013D76  0E00               	movlw	low (__mediumconst shr (0+16))
 26235  013D78  6EF8               	movwf	tblptru,c
 26236  013D7A                     	endif
 26237  013D7A  0008               	tblrd		*
 26238  013D7C  50F5               	movf	tablat,w,c
 26239  013D7E  6EE6               	movwf	postinc1,c
 26240  013D80  0E00               	movlw	0
 26241  013D82  6EE6               	movwf	postinc1,c
 26242  013D84  ECF1  F008         	call	_tolower	;wreg free
 26243                           
 26244                           ;stkvar	_ct @ sp[(-32)+26]
 26245  013D88  0EFA               	movlw	-6
 26246  013D8A  0060  F0AB  FFE3   	movff	btemp,plusw1
 26247                           
 26248                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 26249                           ;stkvar	_ct @ sp[(-32)+26]
 26250  013D90  0EFA               	movlw	-6
 26251  013D92  50E3               	movf	plusw1,w,c
 26252  013D94  B4D8               	btfsc	status,2,c
 26253  013D96  D05B               	goto	l16266
 26254                           
 26255                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 26256                           ;stkvar	_ct @ sp[(-32)+26]
 26257  013D98  0EFB               	movlw	251
 26258  013D9A  24E1               	addwf	fsr1l,w,c
 26259  013D9C  6ED9               	movwf	fsr2l,c
 26260  013D9E  0EFF               	movlw	255
 26261  013DA0  20E2               	addwfc	fsr1h,w,c
 26262  013DA2  6EDA               	movwf	fsr2h,c
 26263                           
 26264                           ;stkvar	_fmt @ sp[(-32)+-4]
 26265  013DA4  0EDC               	movlw	-36
 26266  013DA6  006F FF8F FFE9     	movff	plusw1,fsr0l
 26267  013DAC  0EDD               	movlw	-35
 26268  013DAE  006F FF8F FFEA     	movff	plusw1,fsr0h
 26269  013DB4  006F FFB8  F034    	movff	postinc0,btemp+10
 26270  013DBA  006F FFB4  F035    	movff	postdec0,btemp+11
 26271  013DC0  0E01               	movlw	1
 26272  013DC2  2634               	addwf	(btemp+10)^0,f,c
 26273  013DC4  0E00               	movlw	0
 26274  013DC6  2235               	addwfc	(btemp+11)^0,f,c
 26275  013DC8  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 26276  013DCE  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 26277  013DD4                     	if	0	;tblptru may be non-zero
 26278  013DD4                     	endif
 26279  013DD4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26280  013DD4  0E00               	movlw	low (__mediumconst shr (0+16))
 26281  013DD6  6EF8               	movwf	tblptru,c
 26282  013DD8                     	endif
 26283  013DD8  0008               	tblrd		*
 26284  013DDA  50F5               	movf	tablat,w,c
 26285  013DDC  6EE6               	movwf	postinc1,c
 26286  013DDE  0E00               	movlw	0
 26287  013DE0  6EE6               	movwf	postinc1,c
 26288  013DE2  ECF1  F008         	call	_tolower	;wreg free
 26289  013DE6  502A               	movf	btemp^0,w,c
 26290  013DE8  6EDF               	movwf	indf2,c
 26291                           
 26292                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 26293                           ;stkvar	_ct @ sp[(-32)+26]
 26294  013DEA  0EFB               	movlw	251
 26295  013DEC  24E1               	addwf	fsr1l,w,c
 26296  013DEE  6ED9               	movwf	fsr2l,c
 26297  013DF0  0EFF               	movlw	255
 26298  013DF2  20E2               	addwfc	fsr1h,w,c
 26299  013DF4  6EDA               	movwf	fsr2h,c
 26300  013DF6  50DF               	movf	indf2,w,c
 26301  013DF8  B4D8               	btfsc	status,2,c
 26302  013DFA  D029               	goto	l16266
 26303                           
 26304                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 26305                           ;stkvar	_ct @ sp[(-32)+26]
 26306  013DFC  0EFC               	movlw	252
 26307  013DFE  24E1               	addwf	fsr1l,w,c
 26308  013E00  6ED9               	movwf	fsr2l,c
 26309  013E02  0EFF               	movlw	255
 26310  013E04  20E2               	addwfc	fsr1h,w,c
 26311  013E06  6EDA               	movwf	fsr2h,c
 26312                           
 26313                           ;stkvar	_fmt @ sp[(-32)+-4]
 26314  013E08  0EDC               	movlw	-36
 26315  013E0A  006F FF8F FFE9     	movff	plusw1,fsr0l
 26316  013E10  0EDD               	movlw	-35
 26317  013E12  006F FF8F FFEA     	movff	plusw1,fsr0h
 26318  013E18  006F FFB8  F034    	movff	postinc0,btemp+10
 26319  013E1E  006F FFB4  F035    	movff	postdec0,btemp+11
 26320  013E24  0E02               	movlw	2
 26321  013E26  2634               	addwf	(btemp+10)^0,f,c
 26322  013E28  0E00               	movlw	0
 26323  013E2A  2235               	addwfc	(btemp+11)^0,f,c
 26324  013E2C  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 26325  013E32  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 26326  013E38                     	if	0	;tblptru may be non-zero
 26327  013E38                     	endif
 26328  013E38                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26329  013E38  0E00               	movlw	low (__mediumconst shr (0+16))
 26330  013E3A  6EF8               	movwf	tblptru,c
 26331  013E3C                     	endif
 26332  013E3C  0008               	tblrd		*
 26333  013E3E  50F5               	movf	tablat,w,c
 26334  013E40  6EE6               	movwf	postinc1,c
 26335  013E42  0E00               	movlw	0
 26336  013E44  6EE6               	movwf	postinc1,c
 26337  013E46  ECF1  F008         	call	_tolower	;wreg free
 26338  013E4A  502A               	movf	btemp^0,w,c
 26339  013E4C  6EDF               	movwf	indf2,c
 26340  013E4E                     l16266:
 26341                           
 26342                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 26343                           ;stkvar	_fmt @ sp[(-32)+-4]
 26344  013E4E  0EDC               	movlw	-36
 26345  013E50  006F FF8F FFD9     	movff	plusw1,fsr2l
 26346  013E56  0EDD               	movlw	-35
 26347  013E58  006F FF8F FFDA     	movff	plusw1,fsr2h
 26348  013E5E  006F FF7B FFF6     	movff	postinc2,tblptrl
 26349  013E64  006F FF77 FFF7     	movff	postdec2,tblptrh
 26350  013E6A                     	if	0	;tblptru may be non-zero
 26351  013E6A                     	endif
 26352  013E6A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26353  013E6A  0E00               	movlw	low (__mediumconst shr (0+16))
 26354  013E6C  6EF8               	movwf	tblptru,c
 26355  013E6E                     	endif
 26356  013E6E  0008               	tblrd		*
 26357  013E70  50F5               	movf	tablat,w,c
 26358  013E72  0A63               	xorlw	99
 26359  013E74  A4D8               	btfss	status,2,c
 26360  013E76  D037               	goto	l16276
 26361                           
 26362                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 26363                           ;stkvar	_fmt @ sp[(-32)+-4]
 26364  013E78  0EDC               	movlw	-36
 26365  013E7A  006F FF8F FFD9     	movff	plusw1,fsr2l
 26366  013E80  0EDD               	movlw	-35
 26367  013E82  006F FF8F FFDA     	movff	plusw1,fsr2h
 26368  013E88  2ADE               	incf	postinc2,f,c
 26369  013E8A  0E00               	movlw	0
 26370  013E8C  22DD               	addwfc	postdec2,f,c
 26371                           
 26372                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 26373                           ;stkvar	_ap @ sp[(-32)+-6]
 26374  013E8E  0EDA               	movlw	-38
 26375  013E90  006F FF8F FFD9     	movff	plusw1,fsr2l
 26376  013E96  0EDB               	movlw	-37
 26377  013E98  006F FF8F FFDA     	movff	plusw1,fsr2h
 26378  013E9E  0E02               	movlw	2
 26379  013EA0  5EDE               	subwf	postinc2,f,c
 26380  013EA2  0E00               	movlw	0
 26381  013EA4  5ADD               	subwfb	postdec2,f,c
 26382  013EA6  006F FF78  F034    	movff	postinc2,btemp+10
 26383  013EAC  006F FF74  F035    	movff	postdec2,btemp+11
 26384  013EB2  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26385  013EB8  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26386  013EBE  50DF               	movf	indf2,w,c
 26387  013EC0  6E35               	movwf	(btemp+11)^0,c
 26388                           
 26389                           ;stkvar	_c @ sp[(-32)+31]
 26390  013EC2  0EFF               	movlw	-1
 26391  013EC4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26392                           
 26393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 26394                           ;stkvar	_c @ sp[(-32)+31]
 26395  013ECA  0EFF               	movlw	-1
 26396  013ECC  50E3               	movf	plusw1,w,c
 26397  013ECE  6EE6               	movwf	postinc1,c
 26398                           
 26399                           ;stkvar	_fp @ sp[(-33)+-2]
 26400  013ED0  0EDD               	movlw	-35
 26401  013ED2  006F FF8F FFE6     	movff	plusw1,postinc1
 26402  013ED8  006F FF8F FFE6     	movff	plusw1,postinc1
 26403  013EDE  EC6B  F008         	call	_ctoa	;wreg free
 26404  013EE2  EFEC  F0A4         	goto	l2695
 26405  013EE6                     l16276:
 26406                           
 26407                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 26408                           ;stkvar	_fmt @ sp[(-32)+-4]
 26409  013EE6  0EDC               	movlw	-36
 26410  013EE8  006F FF8F FFD9     	movff	plusw1,fsr2l
 26411  013EEE  0EDD               	movlw	-35
 26412  013EF0  006F FF8F FFDA     	movff	plusw1,fsr2h
 26413  013EF6  006F FF7B FFF6     	movff	postinc2,tblptrl
 26414  013EFC  006F FF77 FFF7     	movff	postdec2,tblptrh
 26415  013F02                     	if	0	;tblptru may be non-zero
 26416  013F02                     	endif
 26417  013F02                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26418  013F02  0E00               	movlw	low (__mediumconst shr (0+16))
 26419  013F04  6EF8               	movwf	tblptru,c
 26420  013F06                     	endif
 26421  013F06  0008               	tblrd		*
 26422  013F08  50F5               	movf	tablat,w,c
 26423  013F0A  0A64               	xorlw	100
 26424  013F0C  B4D8               	btfsc	status,2,c
 26425  013F0E  D015               	goto	u15860
 26426                           
 26427                           ;stkvar	_fmt @ sp[(-32)+-4]
 26428  013F10  0EDC               	movlw	-36
 26429  013F12  006F FF8F FFD9     	movff	plusw1,fsr2l
 26430  013F18  0EDD               	movlw	-35
 26431  013F1A  006F FF8F FFDA     	movff	plusw1,fsr2h
 26432  013F20  006F FF7B FFF6     	movff	postinc2,tblptrl
 26433  013F26  006F FF77 FFF7     	movff	postdec2,tblptrh
 26434  013F2C                     	if	0	;tblptru may be non-zero
 26435  013F2C                     	endif
 26436  013F2C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26437  013F2C  0E00               	movlw	low (__mediumconst shr (0+16))
 26438  013F2E  6EF8               	movwf	tblptru,c
 26439  013F30                     	endif
 26440  013F30  0008               	tblrd		*
 26441  013F32  50F5               	movf	tablat,w,c
 26442  013F34  0A69               	xorlw	105
 26443  013F36  A4D8               	btfss	status,2,c
 26444  013F38  D076               	goto	l16288
 26445  013F3A                     u15860:
 26446                           
 26447                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 26448                           ;stkvar	_fmt @ sp[(-32)+-4]
 26449  013F3A  0EDC               	movlw	-36
 26450  013F3C  006F FF8F FFD9     	movff	plusw1,fsr2l
 26451  013F42  0EDD               	movlw	-35
 26452  013F44  006F FF8F FFDA     	movff	plusw1,fsr2h
 26453  013F4A  2ADE               	incf	postinc2,f,c
 26454  013F4C  0E00               	movlw	0
 26455  013F4E  22DD               	addwfc	postdec2,f,c
 26456                           
 26457                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 26458                           ;stkvar	_ap @ sp[(-32)+-6]
 26459  013F50  0EDA               	movlw	-38
 26460  013F52  006F FF8F FFD9     	movff	plusw1,fsr2l
 26461  013F58  0EDB               	movlw	-37
 26462  013F5A  006F FF8F FFDA     	movff	plusw1,fsr2h
 26463  013F60  0E02               	movlw	2
 26464  013F62  5EDE               	subwf	postinc2,f,c
 26465  013F64  0E00               	movlw	0
 26466  013F66  5ADD               	subwfb	postdec2,f,c
 26467  013F68  006F FF78  F034    	movff	postinc2,btemp+10
 26468  013F6E  006F FF74  F035    	movff	postdec2,btemp+11
 26469  013F74  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26470  013F7A  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26471  013F80  006F FF78  F034    	movff	postinc2,btemp+10
 26472  013F86  006F FF74  F035    	movff	postdec2,btemp+11
 26473                           
 26474                           ;stkvar	_ll @ sp[(-32)+14]
 26475  013F8C  0EEE               	movlw	-18
 26476  013F8E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26477  013F94  0EEF               	movlw	-17
 26478  013F96  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26479  013F9C  6A2A               	clrf	btemp^0,c
 26480  013F9E  BEE3               	btfsc	plusw1,7,c
 26481  013FA0  682A               	setf	btemp^0,c
 26482  013FA2  0EF0               	movlw	-16
 26483  013FA4  0060  F0AB  FFE3   	movff	btemp,plusw1
 26484  013FAA  0EF1               	movlw	-15
 26485  013FAC  0060  F0AB  FFE3   	movff	btemp,plusw1
 26486  013FB2  0EF2               	movlw	-14
 26487  013FB4  0060  F0AB  FFE3   	movff	btemp,plusw1
 26488  013FBA  0EF3               	movlw	-13
 26489  013FBC  0060  F0AB  FFE3   	movff	btemp,plusw1
 26490  013FC2  0EF4               	movlw	-12
 26491  013FC4  0060  F0AB  FFE3   	movff	btemp,plusw1
 26492  013FCA  0EF5               	movlw	-11
 26493  013FCC  0060  F0AB  FFE3   	movff	btemp,plusw1
 26494  013FD2                     l16284:
 26495                           
 26496                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 26497                           ;stkvar	_ll @ sp[(-32)+14]
 26498  013FD2  50E1               	movf	fsr1l,w,c
 26499  013FD4  0FEE               	addlw	-18
 26500  013FD6  6ED9               	movwf	fsr2l,c
 26501  013FD8  50E2               	movf	fsr1h,w,c
 26502  013FDA  6EDA               	movwf	fsr2h,c
 26503  013FDC  0EFF               	movlw	255
 26504  013FDE  22DA               	addwfc	fsr2h,f,c
 26505  013FE0  006F FF7B FFE6     	movff	postinc2,postinc1
 26506  013FE6  006F FF7B FFE6     	movff	postinc2,postinc1
 26507  013FEC  006F FF7B FFE6     	movff	postinc2,postinc1
 26508  013FF2  006F FF7B FFE6     	movff	postinc2,postinc1
 26509  013FF8  006F FF7B FFE6     	movff	postinc2,postinc1
 26510  013FFE  006F FF7B FFE6     	movff	postinc2,postinc1
 26511  014004  006F FF7B FFE6     	movff	postinc2,postinc1
 26512  01400A  006F FF7B FFE6     	movff	postinc2,postinc1
 26513                           
 26514                           ;stkvar	_fp @ sp[(-40)+-2]
 26515  014010  0ED6               	movlw	-42
 26516  014012  006F FF8F FFE6     	movff	plusw1,postinc1
 26517  014018  006F FF8F FFE6     	movff	plusw1,postinc1
 26518  01401E  EC29  F0C6         	call	_dtoa	;wreg free
 26519  014022  EFEC  F0A4         	goto	l2695
 26520  014026                     l16288:
 26521                           
 26522                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 26523  014026  0E02               	movlw	2
 26524  014028  6EE6               	movwf	postinc1,c
 26525  01402A  0E00               	movlw	0
 26526  01402C  6EE6               	movwf	postinc1,c
 26527  01402E  0EED               	movlw	low STR_104
 26528  014030  6EE6               	movwf	postinc1,c
 26529  014032  0EFF               	movlw	high STR_104
 26530  014034  6EE6               	movwf	postinc1,c
 26531                           
 26532                           ;stkvar	_fmt @ sp[(-36)+-4]
 26533  014036  0ED8               	movlw	-40
 26534  014038  006F FF8F FFD9     	movff	plusw1,fsr2l
 26535  01403E  0ED9               	movlw	-39
 26536  014040  006F FF8F FFDA     	movff	plusw1,fsr2h
 26537  014046  006F FF78  F034    	movff	postinc2,btemp+10
 26538  01404C  006F FF74  F035    	movff	postdec2,btemp+11
 26539  014052  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 26540  014058  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 26541  01405E  EC33  F0E8         	call	_strncmp	;wreg free
 26542  014062  502A               	movf	btemp^0,w,c
 26543  014064  102B               	iorwf	(btemp+1)^0,w,c
 26544  014066  B4D8               	btfsc	status,2,c
 26545  014068  D022               	goto	u15880
 26546  01406A  0E02               	movlw	2
 26547  01406C  6EE6               	movwf	postinc1,c
 26548  01406E  0E00               	movlw	0
 26549  014070  6EE6               	movwf	postinc1,c
 26550  014072  0EF3               	movlw	low STR_108
 26551  014074  6EE6               	movwf	postinc1,c
 26552  014076  0EFF               	movlw	high STR_108
 26553  014078  6EE6               	movwf	postinc1,c
 26554                           
 26555                           ;stkvar	_fmt @ sp[(-36)+-4]
 26556  01407A  0ED8               	movlw	-40
 26557  01407C  006F FF8F FFD9     	movff	plusw1,fsr2l
 26558  014082  0ED9               	movlw	-39
 26559  014084  006F FF8F FFDA     	movff	plusw1,fsr2h
 26560  01408A  006F FF78  F034    	movff	postinc2,btemp+10
 26561  014090  006F FF74  F035    	movff	postdec2,btemp+11
 26562  014096  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 26563  01409C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 26564  0140A2  EC33  F0E8         	call	_strncmp	;wreg free
 26565  0140A6  502A               	movf	btemp^0,w,c
 26566  0140A8  102B               	iorwf	(btemp+1)^0,w,c
 26567  0140AA  A4D8               	btfss	status,2,c
 26568  0140AC  D069               	goto	l16300
 26569  0140AE                     u15880:
 26570                           
 26571                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 26572                           ;stkvar	_fmt @ sp[(-32)+-4]
 26573  0140AE  0EDC               	movlw	-36
 26574  0140B0  006F FF8F FFD9     	movff	plusw1,fsr2l
 26575  0140B6  0EDD               	movlw	-35
 26576  0140B8  006F FF8F FFDA     	movff	plusw1,fsr2h
 26577  0140BE  0E02               	movlw	2
 26578  0140C0  26DE               	addwf	postinc2,f,c
 26579  0140C2  0E00               	movlw	0
 26580  0140C4  22DD               	addwfc	postdec2,f,c
 26581                           
 26582                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 26583                           ;stkvar	_ap @ sp[(-32)+-6]
 26584  0140C6  0EDA               	movlw	-38
 26585  0140C8  006F FF8F FFD9     	movff	plusw1,fsr2l
 26586  0140CE  0EDB               	movlw	-37
 26587  0140D0  006F FF8F FFDA     	movff	plusw1,fsr2h
 26588  0140D6  0E04               	movlw	4
 26589  0140D8  5EDE               	subwf	postinc2,f,c
 26590  0140DA  0E00               	movlw	0
 26591  0140DC  5ADD               	subwfb	postdec2,f,c
 26592  0140DE  006F FF78  F034    	movff	postinc2,btemp+10
 26593  0140E4  006F FF74  F035    	movff	postdec2,btemp+11
 26594  0140EA  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26595  0140F0  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26596  0140F6  006F FF78  F032    	movff	postinc2,btemp+8
 26597  0140FC  006F FF78  F033    	movff	postinc2,btemp+9
 26598  014102  006F FF78  F034    	movff	postinc2,btemp+10
 26599  014108  006F FF78  F035    	movff	postinc2,btemp+11
 26600  01410E  0060  F0C8  F03A   	movff	btemp+8,btemp+16
 26601  014114  0060  F0CC  F03B   	movff	btemp+9,btemp+17
 26602  01411A  0060  F0D0  F03C   	movff	btemp+10,btemp+18
 26603  014120  0060  F0D4  F03D   	movff	btemp+11,btemp+19
 26604  014126  6A3E               	clrf	(btemp+20)^0,c
 26605  014128  BE3D               	btfsc	(btemp+19)^0,7,c
 26606  01412A  683E               	setf	(btemp+20)^0,c
 26607  01412C  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 26608  014132  0060  F0F8  F040   	movff	btemp+20,btemp+22
 26609  014138  0060  F0F8  F041   	movff	btemp+20,btemp+23
 26610                           
 26611                           ;stkvar	_ll @ sp[(-32)+14]
 26612  01413E  0EEE               	movlw	-18
 26613  014140  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 26614  014146  0EEF               	movlw	-17
 26615  014148  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 26616  01414E  0EF0               	movlw	-16
 26617  014150  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 26618  014156  0EF1               	movlw	-15
 26619  014158  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 26620  01415E  0EF2               	movlw	-14
 26621  014160  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 26622  014166  0EF3               	movlw	-13
 26623  014168  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 26624  01416E  0EF4               	movlw	-12
 26625  014170  0060  F103  FFE3   	movff	btemp+22,plusw1
 26626  014176  0EF5               	movlw	-11
 26627  014178  0060  F107  FFE3   	movff	btemp+23,plusw1
 26628  01417E  D729               	goto	l16284
 26629  014180                     l16300:
 26630                           
 26631                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 26632                           ;stkvar	_ct @ sp[(-32)+26]
 26633  014180  0EFA               	movlw	-6
 26634  014182  006F FF8C  F02A    	movff	plusw1,btemp
 26635  014188  0E66               	movlw	102
 26636  01418A  182A               	xorwf	btemp^0,w,c
 26637  01418C  A4D8               	btfss	status,2,c
 26638  01418E  D06E               	goto	l16312
 26639                           
 26640                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 26641                           ;stkvar	_fmt @ sp[(-32)+-4]
 26642  014190  0EDC               	movlw	-36
 26643  014192  006F FF8F FFD9     	movff	plusw1,fsr2l
 26644  014198  0EDD               	movlw	-35
 26645  01419A  006F FF8F FFDA     	movff	plusw1,fsr2h
 26646  0141A0  006F FF7B FFF6     	movff	postinc2,tblptrl
 26647  0141A6  006F FF77 FFF7     	movff	postdec2,tblptrh
 26648  0141AC                     	if	0	;tblptru may be non-zero
 26649  0141AC                     	endif
 26650  0141AC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26651  0141AC  0E00               	movlw	low (__mediumconst shr (0+16))
 26652  0141AE  6EF8               	movwf	tblptru,c
 26653  0141B0                     	endif
 26654                           
 26655                           ;stkvar	_c @ sp[(-32)+31]
 26656  0141B0  0008               	tblrd		*
 26657  0141B2  0EFF               	movlw	-1
 26658  0141B4  006F FFD7 FFE3     	movff	tablat,plusw1
 26659                           
 26660                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 26661                           ;stkvar	_fmt @ sp[(-32)+-4]
 26662  0141BA  0EDC               	movlw	-36
 26663  0141BC  006F FF8F FFD9     	movff	plusw1,fsr2l
 26664  0141C2  0EDD               	movlw	-35
 26665  0141C4  006F FF8F FFDA     	movff	plusw1,fsr2h
 26666  0141CA  2ADE               	incf	postinc2,f,c
 26667  0141CC  0E00               	movlw	0
 26668  0141CE  22DD               	addwfc	postdec2,f,c
 26669                           
 26670                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 26671                           ;stkvar	_ap @ sp[(-32)+-6]
 26672  0141D0  0EDA               	movlw	-38
 26673  0141D2  006F FF8F FFD9     	movff	plusw1,fsr2l
 26674  0141D8  0EDB               	movlw	-37
 26675  0141DA  006F FF8F FFDA     	movff	plusw1,fsr2h
 26676  0141E0  0E04               	movlw	4
 26677  0141E2  5EDE               	subwf	postinc2,f,c
 26678  0141E4  0E00               	movlw	0
 26679  0141E6  5ADD               	subwfb	postdec2,f,c
 26680  0141E8  006F FF78  F034    	movff	postinc2,btemp+10
 26681  0141EE  006F FF74  F035    	movff	postdec2,btemp+11
 26682  0141F4  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26683  0141FA  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26684  014200  006F FF78  F032    	movff	postinc2,btemp+8
 26685  014206  006F FF78  F033    	movff	postinc2,btemp+9
 26686  01420C  006F FF78  F034    	movff	postinc2,btemp+10
 26687  014212  006F FF78  F035    	movff	postinc2,btemp+11
 26688                           
 26689                           ;stkvar	_f @ sp[(-32)+22]
 26690  014218  0EF6               	movlw	-10
 26691  01421A  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 26692  014220  0EF7               	movlw	-9
 26693  014222  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 26694  014228  0EF8               	movlw	-8
 26695  01422A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26696  014230  0EF9               	movlw	-7
 26697  014232  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26698  014238                     l16308:
 26699                           
 26700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 26701                           ;stkvar	_c @ sp[(-32)+31]
 26702  014238  0EFF               	movlw	-1
 26703  01423A  50E3               	movf	plusw1,w,c
 26704  01423C  6EE6               	movwf	postinc1,c
 26705                           
 26706                           ;stkvar	_f @ sp[(-33)+22]
 26707  01423E  0EF5               	movlw	-11
 26708  014240  006F FF8F FFE6     	movff	plusw1,postinc1
 26709  014246  006F FF8F FFE6     	movff	plusw1,postinc1
 26710  01424C  006F FF8F FFE6     	movff	plusw1,postinc1
 26711  014252  006F FF8F FFE6     	movff	plusw1,postinc1
 26712                           
 26713                           ;stkvar	_fp @ sp[(-37)+-2]
 26714  014258  0ED9               	movlw	-39
 26715  01425A  006F FF8F FFE6     	movff	plusw1,postinc1
 26716  014260  006F FF8F FFE6     	movff	plusw1,postinc1
 26717  014266  EC90  F08B         	call	_efgtoa	;wreg free
 26718  01426A  D3B6               	goto	l2695
 26719  01426C                     l16312:
 26720                           
 26721                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 26722  01426C  0E02               	movlw	2
 26723  01426E  6EE6               	movwf	postinc1,c
 26724  014270  0E00               	movlw	0
 26725  014272  6EE6               	movwf	postinc1,c
 26726  014274  0EF0               	movlw	low STR_113
 26727  014276  6EE6               	movwf	postinc1,c
 26728  014278  0EFF               	movlw	high STR_113
 26729  01427A  6EE6               	movwf	postinc1,c
 26730                           
 26731                           ;stkvar	_ct @ sp[(-36)+26]
 26732  01427C  0EF6               	movlw	246
 26733  01427E  24E1               	addwf	fsr1l,w,c
 26734  014280  6E2A               	movwf	btemp^0,c
 26735  014282  0EFF               	movlw	255
 26736  014284  20E2               	addwfc	fsr1h,w,c
 26737  014286  6E2B               	movwf	(btemp+1)^0,c
 26738  014288  0060  F0AB  FFE6   	movff	btemp,postinc1
 26739  01428E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 26740  014294  EC33  F0E8         	call	_strncmp	;wreg free
 26741  014298  502A               	movf	btemp^0,w,c
 26742  01429A  102B               	iorwf	(btemp+1)^0,w,c
 26743  01429C  A4D8               	btfss	status,2,c
 26744  01429E  D096               	goto	l16332
 26745                           
 26746                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 26747                           ;stkvar	_fmt @ sp[(-32)+-4]
 26748  0142A0  0EDC               	movlw	-36
 26749  0142A2  006F FF8F FFD9     	movff	plusw1,fsr2l
 26750  0142A8  0EDD               	movlw	-35
 26751  0142AA  006F FF8F FFDA     	movff	plusw1,fsr2h
 26752  0142B0  006F FF78  F034    	movff	postinc2,btemp+10
 26753  0142B6  006F FF74  F035    	movff	postdec2,btemp+11
 26754  0142BC  0E01               	movlw	1
 26755  0142BE  2634               	addwf	(btemp+10)^0,f,c
 26756  0142C0  0E00               	movlw	0
 26757  0142C2  2235               	addwfc	(btemp+11)^0,f,c
 26758  0142C4  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 26759  0142CA  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 26760  0142D0                     	if	0	;tblptru may be non-zero
 26761  0142D0                     	endif
 26762  0142D0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26763  0142D0  0E00               	movlw	low (__mediumconst shr (0+16))
 26764  0142D2  6EF8               	movwf	tblptru,c
 26765  0142D4                     	endif
 26766                           
 26767                           ;stkvar	_c @ sp[(-32)+31]
 26768  0142D4  0008               	tblrd		*
 26769  0142D6  0EFF               	movlw	-1
 26770  0142D8  006F FFD7 FFE3     	movff	tablat,plusw1
 26771  0142DE  0EBF               	movlw	191
 26772  0142E0  6E34               	movwf	(btemp+10)^0,c
 26773  0142E2  0EFF               	movlw	255
 26774  0142E4  6E35               	movwf	(btemp+11)^0,c
 26775                           
 26776                           ;stkvar	_fmt @ sp[(-32)+-4]
 26777  0142E6  0EDC               	movlw	-36
 26778  0142E8  006F FF8F FFD9     	movff	plusw1,fsr2l
 26779  0142EE  0EDD               	movlw	-35
 26780  0142F0  006F FF8F FFDA     	movff	plusw1,fsr2h
 26781  0142F6  006F FF7B FFF6     	movff	postinc2,tblptrl
 26782  0142FC  006F FF77 FFF7     	movff	postdec2,tblptrh
 26783  014302                     	if	0	;tblptru may be non-zero
 26784  014302                     	endif
 26785  014302                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26786  014302  0E00               	movlw	low (__mediumconst shr (0+16))
 26787  014304  6EF8               	movwf	tblptru,c
 26788  014306                     	endif
 26789  014306  0008               	tblrd		*
 26790  014308  50F5               	movf	tablat,w,c
 26791  01430A  6E32               	movwf	(btemp+8)^0,c
 26792  01430C  6A33               	clrf	(btemp+9)^0,c
 26793  01430E  5034               	movf	(btemp+10)^0,w,c
 26794  014310  2632               	addwf	(btemp+8)^0,f,c
 26795  014312  5035               	movf	(btemp+11)^0,w,c
 26796  014314  2233               	addwfc	(btemp+9)^0,f,c
 26797  014316  5033               	movf	(btemp+9)^0,w,c
 26798  014318  E106               	bnz	u15910
 26799  01431A  0E1A               	movlw	26
 26800  01431C  5C32               	subwf	(btemp+8)^0,w,c
 26801  01431E  B0D8               	btfsc	status,0,c
 26802  014320  D002               	goto	u15910
 26803  014322  0E01               	movlw	1
 26804  014324  D001               	goto	u15920
 26805  014326                     u15910:
 26806  014326  0E00               	movlw	0
 26807  014328                     u15920:
 26808  014328  6E34               	movwf	(btemp+10)^0,c
 26809  01432A  6A35               	clrf	(btemp+11)^0,c
 26810                           
 26811                           ;stkvar	_vfpfcnvrt$6679 @ sp[(-32)+2]
 26812  01432C  0EE2               	movlw	-30
 26813  01432E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26814  014334  0EE3               	movlw	-29
 26815  014336  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26816                           
 26817                           ;stkvar	_vfpfcnvrt$6679 @ sp[(-32)+2]
 26818  01433C  0EE2               	movlw	-30
 26819  01433E  006F FF8C  F02A    	movff	plusw1,btemp
 26820  014344  0EE3               	movlw	-29
 26821  014346  50E3               	movf	plusw1,w,c
 26822  014348  102A               	iorwf	btemp^0,w,c
 26823                           
 26824                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 26825                           ;stkvar	_ap @ sp[(-32)+-6]
 26826                           
 26827                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 26828                           
 26829                           ;stkvar	_f @ sp[(-32)+22]
 26830                           
 26831                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 26832                           ;stkvar	_ap @ sp[(-32)+-6]
 26833  01434A  0EDA               	movlw	-38
 26834  01434C  006F FF8F FFD9     	movff	plusw1,fsr2l
 26835  014352  0EDB               	movlw	-37
 26836  014354  006F FF8F FFDA     	movff	plusw1,fsr2h
 26837  01435A  0E04               	movlw	4
 26838  01435C  5EDE               	subwf	postinc2,f,c
 26839  01435E  0E00               	movlw	0
 26840  014360  5ADD               	subwfb	postdec2,f,c
 26841  014362  006F FF78  F034    	movff	postinc2,btemp+10
 26842  014368  006F FF74  F035    	movff	postdec2,btemp+11
 26843  01436E  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26844  014374  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26845  01437A  006F FF78  F032    	movff	postinc2,btemp+8
 26846  014380  006F FF78  F033    	movff	postinc2,btemp+9
 26847  014386  006F FF78  F034    	movff	postinc2,btemp+10
 26848  01438C  006F FF78  F035    	movff	postinc2,btemp+11
 26849                           
 26850                           ;stkvar	_f @ sp[(-32)+22]
 26851  014392  0EF6               	movlw	-10
 26852  014394  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 26853  01439A  0EF7               	movlw	-9
 26854  01439C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 26855  0143A2  0EF8               	movlw	-8
 26856  0143A4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26857  0143AA  0EF9               	movlw	-7
 26858  0143AC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26859                           
 26860                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 26861                           ;stkvar	_fmt @ sp[(-32)+-4]
 26862  0143B2  0EDC               	movlw	-36
 26863  0143B4  006F FF8F FFD9     	movff	plusw1,fsr2l
 26864  0143BA  0EDD               	movlw	-35
 26865  0143BC  006F FF8F FFDA     	movff	plusw1,fsr2h
 26866  0143C2  0E02               	movlw	2
 26867  0143C4  26DE               	addwf	postinc2,f,c
 26868  0143C6  0E00               	movlw	0
 26869  0143C8  22DD               	addwfc	postdec2,f,c
 26870  0143CA  D736               	goto	l16308
 26871  0143CC                     l16332:
 26872                           
 26873                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 26874                           ;stkvar	_fmt @ sp[(-32)+-4]
 26875  0143CC  0EDC               	movlw	-36
 26876  0143CE  006F FF8F FFD9     	movff	plusw1,fsr2l
 26877  0143D4  0EDD               	movlw	-35
 26878  0143D6  006F FF8F FFDA     	movff	plusw1,fsr2h
 26879  0143DC  006F FF7B FFF6     	movff	postinc2,tblptrl
 26880  0143E2  006F FF77 FFF7     	movff	postdec2,tblptrh
 26881  0143E8                     	if	0	;tblptru may be non-zero
 26882  0143E8                     	endif
 26883  0143E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26884  0143E8  0E00               	movlw	low (__mediumconst shr (0+16))
 26885  0143EA  6EF8               	movwf	tblptru,c
 26886  0143EC                     	endif
 26887  0143EC  0008               	tblrd		*
 26888  0143EE  50F5               	movf	tablat,w,c
 26889  0143F0  0A73               	xorlw	115
 26890  0143F2  A4D8               	btfss	status,2,c
 26891  0143F4  D042               	goto	l16342
 26892                           
 26893                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 26894                           ;stkvar	_fmt @ sp[(-32)+-4]
 26895  0143F6  0EDC               	movlw	-36
 26896  0143F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 26897  0143FE  0EDD               	movlw	-35
 26898  014400  006F FF8F FFDA     	movff	plusw1,fsr2h
 26899  014406  2ADE               	incf	postinc2,f,c
 26900  014408  0E00               	movlw	0
 26901  01440A  22DD               	addwfc	postdec2,f,c
 26902                           
 26903                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 26904                           ;stkvar	_ap @ sp[(-32)+-6]
 26905  01440C  0EDA               	movlw	-38
 26906  01440E  006F FF8F FFD9     	movff	plusw1,fsr2l
 26907  014414  0EDB               	movlw	-37
 26908  014416  006F FF8F FFDA     	movff	plusw1,fsr2h
 26909  01441C  0E02               	movlw	2
 26910  01441E  5EDE               	subwf	postinc2,f,c
 26911  014420  0E00               	movlw	0
 26912  014422  5ADD               	subwfb	postdec2,f,c
 26913  014424  006F FF78  F034    	movff	postinc2,btemp+10
 26914  01442A  006F FF74  F035    	movff	postdec2,btemp+11
 26915  014430  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26916  014436  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26917  01443C  006F FF78  F034    	movff	postinc2,btemp+10
 26918  014442  006F FF74  F035    	movff	postdec2,btemp+11
 26919                           
 26920                           ;stkvar	_cp @ sp[(-32)+29]
 26921  014448  0EFE               	movlw	-2
 26922  01444A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26923  014450  0EFD               	movlw	-3
 26924  014452  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26925                           
 26926                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 26927                           ;stkvar	_cp @ sp[(-32)+29]
 26928  014458  0EFD               	movlw	-3
 26929  01445A  006F FF8F FFE6     	movff	plusw1,postinc1
 26930  014460  006F FF8F FFE6     	movff	plusw1,postinc1
 26931                           
 26932                           ;stkvar	_fp @ sp[(-34)+-2]
 26933  014466  0EDC               	movlw	-36
 26934  014468  006F FF8F FFE6     	movff	plusw1,postinc1
 26935  01446E  006F FF8F FFE6     	movff	plusw1,postinc1
 26936  014474  EC5D  F0DD         	call	_stoa	;wreg free
 26937  014478  D2AF               	goto	l2695
 26938  01447A                     l16342:
 26939                           
 26940                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 26941                           ;stkvar	_fmt @ sp[(-32)+-4]
 26942  01447A  0EDC               	movlw	-36
 26943  01447C  006F FF8F FFD9     	movff	plusw1,fsr2l
 26944  014482  0EDD               	movlw	-35
 26945  014484  006F FF8F FFDA     	movff	plusw1,fsr2h
 26946  01448A  006F FF7B FFF6     	movff	postinc2,tblptrl
 26947  014490  006F FF77 FFF7     	movff	postdec2,tblptrh
 26948  014496                     	if	0	;tblptru may be non-zero
 26949  014496                     	endif
 26950  014496                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26951  014496  0E00               	movlw	low (__mediumconst shr (0+16))
 26952  014498  6EF8               	movwf	tblptru,c
 26953  01449A                     	endif
 26954  01449A  0008               	tblrd		*
 26955  01449C  50F5               	movf	tablat,w,c
 26956  01449E  0A75               	xorlw	117
 26957  0144A0  A4D8               	btfss	status,2,c
 26958  0144A2  D07C               	goto	l16352
 26959                           
 26960                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 26961                           ;stkvar	_fmt @ sp[(-32)+-4]
 26962  0144A4  0EDC               	movlw	-36
 26963  0144A6  006F FF8F FFD9     	movff	plusw1,fsr2l
 26964  0144AC  0EDD               	movlw	-35
 26965  0144AE  006F FF8F FFDA     	movff	plusw1,fsr2h
 26966  0144B4  2ADE               	incf	postinc2,f,c
 26967  0144B6  0E00               	movlw	0
 26968  0144B8  22DD               	addwfc	postdec2,f,c
 26969                           
 26970                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 26971                           ;stkvar	_ap @ sp[(-32)+-6]
 26972  0144BA  0EDA               	movlw	-38
 26973  0144BC  006F FF8F FFD9     	movff	plusw1,fsr2l
 26974  0144C2  0EDB               	movlw	-37
 26975  0144C4  006F FF8F FFDA     	movff	plusw1,fsr2h
 26976  0144CA  0E02               	movlw	2
 26977  0144CC  5EDE               	subwf	postinc2,f,c
 26978  0144CE  0E00               	movlw	0
 26979  0144D0  5ADD               	subwfb	postdec2,f,c
 26980  0144D2  006F FF78  F034    	movff	postinc2,btemp+10
 26981  0144D8  006F FF74  F035    	movff	postdec2,btemp+11
 26982  0144DE  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26983  0144E4  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26984  0144EA  006F FF78  F034    	movff	postinc2,btemp+10
 26985  0144F0  006F FF74  F035    	movff	postdec2,btemp+11
 26986  0144F6  5034               	movf	(btemp+10)^0,w,c
 26987  0144F8  6E3A               	movwf	(btemp+16)^0,c
 26988  0144FA  5035               	movf	(btemp+11)^0,w,c
 26989  0144FC  6E3B               	movwf	(btemp+17)^0,c
 26990  0144FE  6A3C               	clrf	(btemp+18)^0,c
 26991  014500  6A3D               	clrf	(btemp+19)^0,c
 26992  014502  6A3E               	clrf	(btemp+20)^0,c
 26993  014504  6A3F               	clrf	(btemp+21)^0,c
 26994  014506  6A40               	clrf	(btemp+22)^0,c
 26995  014508  6A41               	clrf	(btemp+23)^0,c
 26996                           
 26997                           ;stkvar	_llu @ sp[(-32)+6]
 26998  01450A  0EE6               	movlw	-26
 26999  01450C  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 27000  014512  0EE7               	movlw	-25
 27001  014514  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 27002  01451A  0EE8               	movlw	-24
 27003  01451C  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 27004  014522  0EE9               	movlw	-23
 27005  014524  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 27006  01452A  0EEA               	movlw	-22
 27007  01452C  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 27008  014532  0EEB               	movlw	-21
 27009  014534  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 27010  01453A  0EEC               	movlw	-20
 27011  01453C  0060  F103  FFE3   	movff	btemp+22,plusw1
 27012  014542  0EED               	movlw	-19
 27013  014544  0060  F107  FFE3   	movff	btemp+23,plusw1
 27014                           
 27015                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 27016                           ;stkvar	_llu @ sp[(-32)+6]
 27017  01454A  50E1               	movf	fsr1l,w,c
 27018  01454C  0FE6               	addlw	-26
 27019  01454E  6ED9               	movwf	fsr2l,c
 27020  014550  50E2               	movf	fsr1h,w,c
 27021  014552  6EDA               	movwf	fsr2h,c
 27022  014554  0EFF               	movlw	255
 27023  014556  22DA               	addwfc	fsr2h,f,c
 27024  014558  006F FF7B FFE6     	movff	postinc2,postinc1
 27025  01455E  006F FF7B FFE6     	movff	postinc2,postinc1
 27026  014564  006F FF7B FFE6     	movff	postinc2,postinc1
 27027  01456A  006F FF7B FFE6     	movff	postinc2,postinc1
 27028  014570  006F FF7B FFE6     	movff	postinc2,postinc1
 27029  014576  006F FF7B FFE6     	movff	postinc2,postinc1
 27030  01457C  006F FF7B FFE6     	movff	postinc2,postinc1
 27031  014582  006F FF7B FFE6     	movff	postinc2,postinc1
 27032                           
 27033                           ;stkvar	_fp @ sp[(-40)+-2]
 27034  014588  0ED6               	movlw	-42
 27035  01458A  006F FF8F FFE6     	movff	plusw1,postinc1
 27036  014590  006F FF8F FFE6     	movff	plusw1,postinc1
 27037  014596  ECF0  F0D5         	call	_utoa	;wreg free
 27038  01459A  D21E               	goto	l2695
 27039  01459C                     l16352:
 27040                           
 27041                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 27042  01459C  0E02               	movlw	2
 27043  01459E  6EE6               	movwf	postinc1,c
 27044  0145A0  0E00               	movlw	0
 27045  0145A2  6EE6               	movwf	postinc1,c
 27046  0145A4  0EF6               	movlw	low STR_118
 27047  0145A6  6EE6               	movwf	postinc1,c
 27048  0145A8  0EFF               	movlw	high STR_118
 27049  0145AA  6EE6               	movwf	postinc1,c
 27050                           
 27051                           ;stkvar	_fmt @ sp[(-36)+-4]
 27052  0145AC  0ED8               	movlw	-40
 27053  0145AE  006F FF8F FFD9     	movff	plusw1,fsr2l
 27054  0145B4  0ED9               	movlw	-39
 27055  0145B6  006F FF8F FFDA     	movff	plusw1,fsr2h
 27056  0145BC  006F FF78  F034    	movff	postinc2,btemp+10
 27057  0145C2  006F FF74  F035    	movff	postdec2,btemp+11
 27058  0145C8  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 27059  0145CE  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 27060  0145D4  EC33  F0E8         	call	_strncmp	;wreg free
 27061  0145D8  502A               	movf	btemp^0,w,c
 27062  0145DA  102B               	iorwf	(btemp+1)^0,w,c
 27063  0145DC  A4D8               	btfss	status,2,c
 27064  0145DE  D039               	goto	l16362
 27065                           
 27066                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 27067                           ;stkvar	_fmt @ sp[(-32)+-4]
 27068  0145E0  0EDC               	movlw	-36
 27069  0145E2  006F FF8F FFD9     	movff	plusw1,fsr2l
 27070  0145E8  0EDD               	movlw	-35
 27071  0145EA  006F FF8F FFDA     	movff	plusw1,fsr2h
 27072  0145F0  0E02               	movlw	2
 27073  0145F2  26DE               	addwf	postinc2,f,c
 27074  0145F4  0E00               	movlw	0
 27075  0145F6  22DD               	addwfc	postdec2,f,c
 27076                           
 27077                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 27078                           ;stkvar	_ap @ sp[(-32)+-6]
 27079  0145F8  0EDA               	movlw	-38
 27080  0145FA  006F FF8F FFD9     	movff	plusw1,fsr2l
 27081  014600  0EDB               	movlw	-37
 27082  014602  006F FF8F FFDA     	movff	plusw1,fsr2h
 27083  014608  0E04               	movlw	4
 27084  01460A  5EDE               	subwf	postinc2,f,c
 27085  01460C  0E00               	movlw	0
 27086  01460E  5ADD               	subwfb	postdec2,f,c
 27087  014610  006F FF78  F034    	movff	postinc2,btemp+10
 27088  014616  006F FF74  F035    	movff	postdec2,btemp+11
 27089  01461C  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27090  014622  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27091  014628  006F FF78  F032    	movff	postinc2,btemp+8
 27092  01462E  006F FF78  F033    	movff	postinc2,btemp+9
 27093  014634  006F FF78  F034    	movff	postinc2,btemp+10
 27094  01463A  006F FF78  F035    	movff	postinc2,btemp+11
 27095  014640  5032               	movf	(btemp+8)^0,w,c
 27096  014642  6E3A               	movwf	(btemp+16)^0,c
 27097  014644  5033               	movf	(btemp+9)^0,w,c
 27098  014646  6E3B               	movwf	(btemp+17)^0,c
 27099  014648  5034               	movf	(btemp+10)^0,w,c
 27100  01464A  6E3C               	movwf	(btemp+18)^0,c
 27101  01464C  5035               	movf	(btemp+11)^0,w,c
 27102  01464E  6E3D               	movwf	(btemp+19)^0,c
 27103  014650  D758               	goto	L25
 27104  014652                     l16362:
 27105                           
 27106                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 27107                           ;stkvar	_fmt @ sp[(-32)+-4]
 27108  014652  0EDC               	movlw	-36
 27109  014654  006F FF8F FFD9     	movff	plusw1,fsr2l
 27110  01465A  0EDD               	movlw	-35
 27111  01465C  006F FF8F FFDA     	movff	plusw1,fsr2h
 27112  014662  006F FF7B FFF6     	movff	postinc2,tblptrl
 27113  014668  006F FF77 FFF7     	movff	postdec2,tblptrh
 27114  01466E                     	if	0	;tblptru may be non-zero
 27115  01466E                     	endif
 27116  01466E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27117  01466E  0E00               	movlw	low (__mediumconst shr (0+16))
 27118  014670  6EF8               	movwf	tblptru,c
 27119  014672                     	endif
 27120  014672  0008               	tblrd		*
 27121  014674  50F5               	movf	tablat,w,c
 27122  014676  0A78               	xorlw	120
 27123  014678  B4D8               	btfsc	status,2,c
 27124  01467A  D015               	goto	u15980
 27125                           
 27126                           ;stkvar	_fmt @ sp[(-32)+-4]
 27127  01467C  0EDC               	movlw	-36
 27128  01467E  006F FF8F FFD9     	movff	plusw1,fsr2l
 27129  014684  0EDD               	movlw	-35
 27130  014686  006F FF8F FFDA     	movff	plusw1,fsr2h
 27131  01468C  006F FF7B FFF6     	movff	postinc2,tblptrl
 27132  014692  006F FF77 FFF7     	movff	postdec2,tblptrh
 27133  014698                     	if	0	;tblptru may be non-zero
 27134  014698                     	endif
 27135  014698                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27136  014698  0E00               	movlw	low (__mediumconst shr (0+16))
 27137  01469A  6EF8               	movwf	tblptru,c
 27138  01469C                     	endif
 27139  01469C  0008               	tblrd		*
 27140  01469E  50F5               	movf	tablat,w,c
 27141  0146A0  0A58               	xorlw	88
 27142  0146A2  A4D8               	btfss	status,2,c
 27143  0146A4  D094               	goto	l16376
 27144  0146A6                     u15980:
 27145                           
 27146                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 27147                           ;stkvar	_fmt @ sp[(-32)+-4]
 27148  0146A6  0EDC               	movlw	-36
 27149  0146A8  006F FF8F FFD9     	movff	plusw1,fsr2l
 27150  0146AE  0EDD               	movlw	-35
 27151  0146B0  006F FF8F FFDA     	movff	plusw1,fsr2h
 27152  0146B6  006F FF7B FFF6     	movff	postinc2,tblptrl
 27153  0146BC  006F FF77 FFF7     	movff	postdec2,tblptrh
 27154  0146C2                     	if	0	;tblptru may be non-zero
 27155  0146C2                     	endif
 27156  0146C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27157  0146C2  0E00               	movlw	low (__mediumconst shr (0+16))
 27158  0146C4  6EF8               	movwf	tblptru,c
 27159  0146C6                     	endif
 27160                           
 27161                           ;stkvar	_c @ sp[(-32)+31]
 27162  0146C6  0008               	tblrd		*
 27163  0146C8  0EFF               	movlw	-1
 27164  0146CA  006F FFD7 FFE3     	movff	tablat,plusw1
 27165                           
 27166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 27167                           ;stkvar	_fmt @ sp[(-32)+-4]
 27168  0146D0  0EDC               	movlw	-36
 27169  0146D2  006F FF8F FFD9     	movff	plusw1,fsr2l
 27170  0146D8  0EDD               	movlw	-35
 27171  0146DA  006F FF8F FFDA     	movff	plusw1,fsr2h
 27172  0146E0  2ADE               	incf	postinc2,f,c
 27173  0146E2  0E00               	movlw	0
 27174  0146E4  22DD               	addwfc	postdec2,f,c
 27175                           
 27176                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 27177                           ;stkvar	_ap @ sp[(-32)+-6]
 27178  0146E6  0EDA               	movlw	-38
 27179  0146E8  006F FF8F FFD9     	movff	plusw1,fsr2l
 27180  0146EE  0EDB               	movlw	-37
 27181  0146F0  006F FF8F FFDA     	movff	plusw1,fsr2h
 27182  0146F6  0E02               	movlw	2
 27183  0146F8  5EDE               	subwf	postinc2,f,c
 27184  0146FA  0E00               	movlw	0
 27185  0146FC  5ADD               	subwfb	postdec2,f,c
 27186  0146FE  006F FF78  F034    	movff	postinc2,btemp+10
 27187  014704  006F FF74  F035    	movff	postdec2,btemp+11
 27188  01470A  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27189  014710  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27190  014716  006F FF78  F034    	movff	postinc2,btemp+10
 27191  01471C  006F FF74  F035    	movff	postdec2,btemp+11
 27192  014722  5034               	movf	(btemp+10)^0,w,c
 27193  014724  6E3A               	movwf	(btemp+16)^0,c
 27194  014726  5035               	movf	(btemp+11)^0,w,c
 27195  014728  6E3B               	movwf	(btemp+17)^0,c
 27196  01472A  6A3C               	clrf	(btemp+18)^0,c
 27197  01472C  6A3D               	clrf	(btemp+19)^0,c
 27198  01472E  6A3E               	clrf	(btemp+20)^0,c
 27199  014730  6A3F               	clrf	(btemp+21)^0,c
 27200  014732  6A40               	clrf	(btemp+22)^0,c
 27201  014734  6A41               	clrf	(btemp+23)^0,c
 27202                           
 27203                           ;stkvar	_llu @ sp[(-32)+6]
 27204  014736  0EE6               	movlw	-26
 27205  014738  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 27206  01473E  0EE7               	movlw	-25
 27207  014740  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 27208  014746  0EE8               	movlw	-24
 27209  014748  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 27210  01474E  0EE9               	movlw	-23
 27211  014750  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 27212  014756  0EEA               	movlw	-22
 27213  014758  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 27214  01475E  0EEB               	movlw	-21
 27215  014760  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 27216  014766  0EEC               	movlw	-20
 27217  014768  0060  F103  FFE3   	movff	btemp+22,plusw1
 27218  01476E  0EED               	movlw	-19
 27219  014770  0060  F107  FFE3   	movff	btemp+23,plusw1
 27220                           
 27221                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 27222                           ;stkvar	_c @ sp[(-32)+31]
 27223  014776  0EFF               	movlw	-1
 27224  014778  50E3               	movf	plusw1,w,c
 27225  01477A  6EE6               	movwf	postinc1,c
 27226                           
 27227                           ;stkvar	_llu @ sp[(-33)+6]
 27228  01477C  50E1               	movf	fsr1l,w,c
 27229  01477E  0FE5               	addlw	-27
 27230  014780  6ED9               	movwf	fsr2l,c
 27231  014782  50E2               	movf	fsr1h,w,c
 27232  014784  6EDA               	movwf	fsr2h,c
 27233  014786  0EFF               	movlw	255
 27234  014788  22DA               	addwfc	fsr2h,f,c
 27235  01478A  006F FF7B FFE6     	movff	postinc2,postinc1
 27236  014790  006F FF7B FFE6     	movff	postinc2,postinc1
 27237  014796  006F FF7B FFE6     	movff	postinc2,postinc1
 27238  01479C  006F FF7B FFE6     	movff	postinc2,postinc1
 27239  0147A2  006F FF7B FFE6     	movff	postinc2,postinc1
 27240  0147A8  006F FF7B FFE6     	movff	postinc2,postinc1
 27241  0147AE  006F FF7B FFE6     	movff	postinc2,postinc1
 27242  0147B4  006F FF7B FFE6     	movff	postinc2,postinc1
 27243                           
 27244                           ;stkvar	_fp @ sp[(-41)+-2]
 27245  0147BA  0ED5               	movlw	-43
 27246  0147BC  006F FF8F FFE6     	movff	plusw1,postinc1
 27247  0147C2  006F FF8F FFE6     	movff	plusw1,postinc1
 27248  0147C8  EC03  F0CF         	call	_xtoa	;wreg free
 27249  0147CC  D105               	goto	l2695
 27250  0147CE                     l16376:
 27251                           
 27252                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 27253  0147CE  0E02               	movlw	2
 27254  0147D0  6EE6               	movwf	postinc1,c
 27255  0147D2  0E00               	movlw	0
 27256  0147D4  6EE6               	movwf	postinc1,c
 27257  0147D6  0EF9               	movlw	low STR_123
 27258  0147D8  6EE6               	movwf	postinc1,c
 27259  0147DA  0EFF               	movlw	high STR_123
 27260  0147DC  6EE6               	movwf	postinc1,c
 27261                           
 27262                           ;stkvar	_fmt @ sp[(-36)+-4]
 27263  0147DE  0ED8               	movlw	-40
 27264  0147E0  006F FF8F FFD9     	movff	plusw1,fsr2l
 27265  0147E6  0ED9               	movlw	-39
 27266  0147E8  006F FF8F FFDA     	movff	plusw1,fsr2h
 27267  0147EE  006F FF78  F034    	movff	postinc2,btemp+10
 27268  0147F4  006F FF74  F035    	movff	postdec2,btemp+11
 27269  0147FA  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 27270  014800  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 27271  014806  EC33  F0E8         	call	_strncmp	;wreg free
 27272  01480A  502A               	movf	btemp^0,w,c
 27273  01480C  102B               	iorwf	(btemp+1)^0,w,c
 27274  01480E  B4D8               	btfsc	status,2,c
 27275  014810  D022               	goto	u16000
 27276  014812  0E02               	movlw	2
 27277  014814  6EE6               	movwf	postinc1,c
 27278  014816  0E00               	movlw	0
 27279  014818  6EE6               	movwf	postinc1,c
 27280  01481A  0EEA               	movlw	low STR_127
 27281  01481C  6EE6               	movwf	postinc1,c
 27282  01481E  0EFF               	movlw	high STR_127
 27283  014820  6EE6               	movwf	postinc1,c
 27284                           
 27285                           ;stkvar	_fmt @ sp[(-36)+-4]
 27286  014822  0ED8               	movlw	-40
 27287  014824  006F FF8F FFD9     	movff	plusw1,fsr2l
 27288  01482A  0ED9               	movlw	-39
 27289  01482C  006F FF8F FFDA     	movff	plusw1,fsr2h
 27290  014832  006F FF78  F034    	movff	postinc2,btemp+10
 27291  014838  006F FF74  F035    	movff	postdec2,btemp+11
 27292  01483E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 27293  014844  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 27294  01484A  EC33  F0E8         	call	_strncmp	;wreg free
 27295  01484E  502A               	movf	btemp^0,w,c
 27296  014850  102B               	iorwf	(btemp+1)^0,w,c
 27297  014852  A4D8               	btfss	status,2,c
 27298  014854  D058               	goto	l16390
 27299  014856                     u16000:
 27300                           
 27301                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 27302                           ;stkvar	_fmt @ sp[(-32)+-4]
 27303  014856  0EDC               	movlw	-36
 27304  014858  006F FF8F FFD9     	movff	plusw1,fsr2l
 27305  01485E  0EDD               	movlw	-35
 27306  014860  006F FF8F FFDA     	movff	plusw1,fsr2h
 27307  014866  006F FF78  F034    	movff	postinc2,btemp+10
 27308  01486C  006F FF74  F035    	movff	postdec2,btemp+11
 27309  014872  0E01               	movlw	1
 27310  014874  2634               	addwf	(btemp+10)^0,f,c
 27311  014876  0E00               	movlw	0
 27312  014878  2235               	addwfc	(btemp+11)^0,f,c
 27313  01487A  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 27314  014880  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 27315  014886                     	if	0	;tblptru may be non-zero
 27316  014886                     	endif
 27317  014886                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27318  014886  0E00               	movlw	low (__mediumconst shr (0+16))
 27319  014888  6EF8               	movwf	tblptru,c
 27320  01488A                     	endif
 27321                           
 27322                           ;stkvar	_c @ sp[(-32)+31]
 27323  01488A  0008               	tblrd		*
 27324  01488C  0EFF               	movlw	-1
 27325  01488E  006F FFD7 FFE3     	movff	tablat,plusw1
 27326                           
 27327                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 27328                           ;stkvar	_fmt @ sp[(-32)+-4]
 27329  014894  0EDC               	movlw	-36
 27330  014896  006F FF8F FFD9     	movff	plusw1,fsr2l
 27331  01489C  0EDD               	movlw	-35
 27332  01489E  006F FF8F FFDA     	movff	plusw1,fsr2h
 27333  0148A4  0E02               	movlw	2
 27334  0148A6  26DE               	addwf	postinc2,f,c
 27335  0148A8  0E00               	movlw	0
 27336  0148AA  22DD               	addwfc	postdec2,f,c
 27337                           
 27338                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 27339                           ;stkvar	_ap @ sp[(-32)+-6]
 27340  0148AC  0EDA               	movlw	-38
 27341  0148AE  006F FF8F FFD9     	movff	plusw1,fsr2l
 27342  0148B4  0EDB               	movlw	-37
 27343  0148B6  006F FF8F FFDA     	movff	plusw1,fsr2h
 27344  0148BC  0E04               	movlw	4
 27345  0148BE  5EDE               	subwf	postinc2,f,c
 27346  0148C0  0E00               	movlw	0
 27347  0148C2  5ADD               	subwfb	postdec2,f,c
 27348  0148C4  006F FF78  F034    	movff	postinc2,btemp+10
 27349  0148CA  006F FF74  F035    	movff	postdec2,btemp+11
 27350  0148D0  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27351  0148D6  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27352  0148DC  006F FF78  F032    	movff	postinc2,btemp+8
 27353  0148E2  006F FF78  F033    	movff	postinc2,btemp+9
 27354  0148E8  006F FF78  F034    	movff	postinc2,btemp+10
 27355  0148EE  006F FF78  F035    	movff	postinc2,btemp+11
 27356  0148F4  5032               	movf	(btemp+8)^0,w,c
 27357  0148F6  6E3A               	movwf	(btemp+16)^0,c
 27358  0148F8  5033               	movf	(btemp+9)^0,w,c
 27359  0148FA  6E3B               	movwf	(btemp+17)^0,c
 27360  0148FC  5034               	movf	(btemp+10)^0,w,c
 27361  0148FE  6E3C               	movwf	(btemp+18)^0,c
 27362  014900  5035               	movf	(btemp+11)^0,w,c
 27363  014902  6E3D               	movwf	(btemp+19)^0,c
 27364  014904  D714               	goto	L26
 27365  014906                     l16390:
 27366                           
 27367                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 27368                           ;stkvar	_fmt @ sp[(-32)+-4]
 27369  014906  0EDC               	movlw	-36
 27370  014908  006F FF8F FFD9     	movff	plusw1,fsr2l
 27371  01490E  0EDD               	movlw	-35
 27372  014910  006F FF8F FFDA     	movff	plusw1,fsr2h
 27373  014916  006F FF7B FFF6     	movff	postinc2,tblptrl
 27374  01491C  006F FF77 FFF7     	movff	postdec2,tblptrh
 27375  014922                     	if	0	;tblptru may be non-zero
 27376  014922                     	endif
 27377  014922                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27378  014922  0E00               	movlw	low (__mediumconst shr (0+16))
 27379  014924  6EF8               	movwf	tblptru,c
 27380  014926                     	endif
 27381  014926  0008               	tblrd		*
 27382  014928  50F5               	movf	tablat,w,c
 27383  01492A  0A25               	xorlw	37
 27384  01492C  A4D8               	btfss	status,2,c
 27385  01492E  D01A               	goto	l16400
 27386                           
 27387                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 27388                           ;stkvar	_fmt @ sp[(-32)+-4]
 27389  014930  0EDC               	movlw	-36
 27390  014932  006F FF8F FFD9     	movff	plusw1,fsr2l
 27391  014938  0EDD               	movlw	-35
 27392  01493A  006F FF8F FFDA     	movff	plusw1,fsr2h
 27393  014940  2ADE               	incf	postinc2,f,c
 27394  014942  0E00               	movlw	0
 27395  014944  22DD               	addwfc	postdec2,f,c
 27396                           
 27397                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 27398                           ;stkvar	_fp @ sp[(-32)+-2]
 27399  014946  0EDE               	movlw	-34
 27400  014948  006F FF8F FFE6     	movff	plusw1,postinc1
 27401  01494E  006F FF8F FFE6     	movff	plusw1,postinc1
 27402  014954  0E25               	movlw	37
 27403  014956  6EE6               	movwf	postinc1,c
 27404  014958  0E00               	movlw	0
 27405  01495A  6EE6               	movwf	postinc1,c
 27406  01495C  ECE4  F0FA         	call	_fputc	;wreg free
 27407  014960                     l16396:
 27408                           
 27409                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 27410  014960  0E01               	movlw	1
 27411  014962  D00C               	goto	L27
 27412  014964                     l16400:
 27413                           
 27414                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 27415                           ;stkvar	_fmt @ sp[(-32)+-4]
 27416  014964  0EDC               	movlw	-36
 27417  014966  006F FF8F FFD9     	movff	plusw1,fsr2l
 27418  01496C  0EDD               	movlw	-35
 27419  01496E  006F FF8F FFDA     	movff	plusw1,fsr2h
 27420  014974  2ADE               	incf	postinc2,f,c
 27421  014976  0E00               	movlw	0
 27422  014978  22DD               	addwfc	postdec2,f,c
 27423                           
 27424                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 27425  01497A  0E00               	movlw	0
 27426  01497C                     L27:
 27427  01497C  6E2A               	movwf	btemp^0,c
 27428  01497E  0E00               	movlw	0
 27429  014980  6E2B               	movwf	(btemp+1)^0,c
 27430  014982  D02A               	goto	l2695
 27431  014984                     l16406:
 27432                           
 27433                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 27434                           ;stkvar	_fp @ sp[(-32)+-2]
 27435  014984  0EDE               	movlw	-34
 27436  014986  006F FF8F FFE6     	movff	plusw1,postinc1
 27437  01498C  006F FF8F FFE6     	movff	plusw1,postinc1
 27438                           
 27439                           ;stkvar	_fmt @ sp[(-34)+-4]
 27440  014992  0EDA               	movlw	-38
 27441  014994  006F FF8F FFD9     	movff	plusw1,fsr2l
 27442  01499A  0EDB               	movlw	-37
 27443  01499C  006F FF8F FFDA     	movff	plusw1,fsr2h
 27444  0149A2  006F FF7B FFF6     	movff	postinc2,tblptrl
 27445  0149A8  006F FF77 FFF7     	movff	postdec2,tblptrh
 27446  0149AE                     	if	0	;tblptru may be non-zero
 27447  0149AE                     	endif
 27448  0149AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27449  0149AE  0E00               	movlw	low (__mediumconst shr (0+16))
 27450  0149B0  6EF8               	movwf	tblptru,c
 27451  0149B2                     	endif
 27452  0149B2  0008               	tblrd		*
 27453  0149B4  50F5               	movf	tablat,w,c
 27454  0149B6  6EE6               	movwf	postinc1,c
 27455  0149B8  0E00               	movlw	0
 27456  0149BA  6EE6               	movwf	postinc1,c
 27457  0149BC  ECE4  F0FA         	call	_fputc	;wreg free
 27458                           
 27459                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 27460                           ;stkvar	_fmt @ sp[(-32)+-4]
 27461  0149C0  0EDC               	movlw	-36
 27462  0149C2  006F FF8F FFD9     	movff	plusw1,fsr2l
 27463  0149C8  0EDD               	movlw	-35
 27464  0149CA  006F FF8F FFDA     	movff	plusw1,fsr2h
 27465  0149D0  2ADE               	incf	postinc2,f,c
 27466  0149D2  0E00               	movlw	0
 27467  0149D4  22DD               	addwfc	postdec2,f,c
 27468  0149D6  D7C4               	goto	l16396
 27469  0149D8                     l2695:
 27470                           
 27471                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 27472  0149D8  0EDA               	movlw	218
 27473  0149DA  26E1               	addwf	fsr1l,f,c
 27474  0149DC  0EFF               	movlw	255
 27475  0149DE  22E2               	addwfc	fsr1h,f,c
 27476  0149E0  0012               	return		;funcret
 27477  0149E2                     __end_of_vfpfcnvrt:
 27478                           	opt callstack 0
 27479                           
 27480 ;; *************** function _xtoa *****************
 27481 ;; Defined at:
 27482 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 27483 ;; Parameters:    Size  Location     Type
 27484 ;;  fp              2  [STACK] PTR struct _IO_FILE
 27485 ;;		 -> f(6), NULL(0), 
 27486 ;;  d               8  [STACK] unsigned long long 
 27487 ;;  x               1  [STACK] unsigned char 
 27488 ;; Auto vars:     Size  Location     Type
 27489 ;;  n               8  [STACK] unsigned long long 
 27490 ;;  c               2  [STACK] int 
 27491 ;;  i               2  [STACK] int 
 27492 ;;  w               2  [STACK] int 
 27493 ;;  p               2  [STACK] int 
 27494 ;; Return value:  Size  Location     Type
 27495 ;;                  2  [STACK] int 
 27496 ;; Registers used:
 27497 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 27498 ;; Tracked objects:
 27499 ;;		On entry : 0/0
 27500 ;;		On exit  : 0/0
 27501 ;;		Unchanged: 0/0
 27502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27507 ;;Total ram usage:        0 bytes
 27508 ;; Hardware stack levels used:    1
 27509 ;; Hardware stack levels required when called:   20
 27510 ;; This function calls:
 27511 ;;		_isalpha
 27512 ;;		_isupper
 27513 ;;		_pad
 27514 ;;		_toupper
 27515 ;; This function is called by:
 27516 ;;		_vfpfcnvrt
 27517 ;; This function uses a reentrant model
 27518 ;;
 27519                           
 27520                           	psect	text94
 27521  019E06                     __ptext94:
 27522                           	opt callstack 0
 27523  019E06                     _xtoa:
 27524                           	opt callstack 0
 27525                           
 27526                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 27527  019E06  0E14               	movlw	20
 27528  019E08  26E1               	addwf	fsr1l,f,c
 27529  019E0A  0E00               	movlw	0
 27530  019E0C  22E2               	addwfc	fsr1h,f,c
 27531                           
 27532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 27533                           
 27534                           ;incstack = 0
 27535 ;; hardware stack exceeded
 27536  019E0E  AE4D               	btfss	(_prec+1)^0,7,c
 27537                           
 27538                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 27539  019E10  924E               	bcf	_flags^0,1,c
 27540                           
 27541                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 27542  019E12  BE4D               	btfsc	(_prec+1)^0,7,c
 27543  019E14  D005               	goto	u15460
 27544  019E16  504D               	movf	(_prec+1)^0,w,c
 27545  019E18  E110               	bnz	l16060
 27546  019E1A  044C               	decf	_prec^0,w,c
 27547  019E1C  B0D8               	btfsc	status,0,c
 27548  019E1E  D00D               	goto	l16060
 27549  019E20                     u15460:
 27550  019E20  0E01               	movlw	1
 27551  019E22  6E34               	movwf	(btemp+10)^0,c
 27552  019E24  0E00               	movlw	0
 27553  019E26  6E35               	movwf	(btemp+11)^0,c
 27554                           
 27555                           ;stkvar	_p @ sp[(-20)+18]
 27556  019E28  0EFE               	movlw	-2
 27557  019E2A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27558  019E30  0EFF               	movlw	-1
 27559  019E32  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27560  019E38  D008               	goto	l2645
 27561  019E3A                     l16060:
 27562                           
 27563                           ;stkvar	_p @ sp[(-20)+18]
 27564  019E3A  0EFE               	movlw	-2
 27565  019E3C  0060  F133  FFE3   	movff	_prec,plusw1
 27566  019E42  0EFF               	movlw	-1
 27567  019E44  0060  F137  FFE3   	movff	_prec+1,plusw1
 27568  019E4A                     l2645:
 27569                           
 27570                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 27571                           ;stkvar	_w @ sp[(-20)+16]
 27572  019E4A  0EFC               	movlw	-4
 27573  019E4C  0060  F12B  FFE3   	movff	_width,plusw1
 27574  019E52  0EFD               	movlw	-3
 27575  019E54  0060  F12F  FFE3   	movff	_width+1,plusw1
 27576                           
 27577                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 27578  019E5A  A84E               	btfss	_flags^0,4,c
 27579  019E5C  D00B               	goto	l16066
 27580                           
 27581                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 27582                           ;stkvar	_w @ sp[(-20)+16]
 27583  019E5E  50E1               	movf	fsr1l,w,c
 27584  019E60  0FFC               	addlw	-4
 27585  019E62  6ED9               	movwf	fsr2l,c
 27586  019E64  50E2               	movf	fsr1h,w,c
 27587  019E66  6EDA               	movwf	fsr2h,c
 27588  019E68  0EFF               	movlw	255
 27589  019E6A  22DA               	addwfc	fsr2h,f,c
 27590  019E6C  0EFE               	movlw	254
 27591  019E6E  26DE               	addwf	postinc2,f,c
 27592  019E70  0EFF               	movlw	255
 27593  019E72  22DD               	addwfc	postdec2,f,c
 27594  019E74                     l16066:
 27595                           
 27596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 27597                           ;stkvar	_d @ sp[(-20)+-10]
 27598  019E74  0EE2               	movlw	226
 27599  019E76  24E1               	addwf	fsr1l,w,c
 27600  019E78  6ED9               	movwf	fsr2l,c
 27601  019E7A  0EFF               	movlw	255
 27602  019E7C  20E2               	addwfc	fsr1h,w,c
 27603  019E7E  6EDA               	movwf	fsr2h,c
 27604                           
 27605                           ;stkvar	_n @ sp[(-20)+4]
 27606  019E80  0E08               	movlw	8
 27607  019E82  6E2A               	movwf	btemp^0,c
 27608  019E84  0EF0               	movlw	-16
 27609  019E86                     us1548999:
 27610  019E86  006F FF7B FFE3     	movff	postinc2,plusw1
 27611  019E8C  28E8               	incf	wreg,w,c
 27612  019E8E  2E2A               	decfsz	btemp^0,f,c
 27613  019E90  D7FA               	bra	us1548999
 27614                           
 27615                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 27616  019E92  0E4F               	movlw	79
 27617  019E94  6E34               	movwf	(btemp+10)^0,c
 27618  019E96  0E00               	movlw	0
 27619  019E98  6E35               	movwf	(btemp+11)^0,c
 27620                           
 27621                           ;stkvar	_i @ sp[(-20)+14]
 27622  019E9A  0EFA               	movlw	-6
 27623  019E9C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27624  019EA2  0EFB               	movlw	-5
 27625  019EA4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27626                           
 27627                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 27628  019EAA  0103               	movlb	3	; () banked
 27629  019EAC  6BA3               	clrf	(_dbuf+79)& (0+255),b
 27630                           
 27631                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 27632  019EAE  D0EE               	goto	l16104
 27633  019EB0                     l16072:
 27634                           
 27635                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 27636                           ;stkvar	_i @ sp[(-20)+14]
 27637  019EB0  50E1               	movf	fsr1l,w,c
 27638  019EB2  0FFA               	addlw	-6
 27639  019EB4  6ED9               	movwf	fsr2l,c
 27640  019EB6  50E2               	movf	fsr1h,w,c
 27641  019EB8  6EDA               	movwf	fsr2h,c
 27642  019EBA  0EFF               	movlw	255
 27643  019EBC  22DA               	addwfc	fsr2h,f,c
 27644  019EBE  06DE               	decf	postinc2,f,c
 27645  019EC0  0E00               	movlw	0
 27646  019EC2  5ADD               	subwfb	postdec2,f,c
 27647                           
 27648                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 27649                           ;stkvar	_n @ sp[(-20)+4]
 27650  019EC4  0EF0               	movlw	-16
 27651  019EC6  006F FF8C  F034    	movff	plusw1,btemp+10
 27652  019ECC  0EF1               	movlw	-15
 27653  019ECE  006F FF8C  F035    	movff	plusw1,btemp+11
 27654  019ED4  0E0F               	movlw	15
 27655  019ED6  1634               	andwf	(btemp+10)^0,f,c
 27656  019ED8  0E00               	movlw	0
 27657  019EDA  1635               	andwf	(btemp+11)^0,f,c
 27658                           
 27659                           ;stkvar	_c @ sp[(-20)+12]
 27660  019EDC  0EF8               	movlw	-8
 27661  019EDE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27662  019EE4  0EF9               	movlw	-7
 27663  019EE6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27664                           
 27665                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 27666                           ;stkvar	_c @ sp[(-20)+12]
 27667  019EEC  0EF9               	movlw	-7
 27668  019EEE  BEE3               	btfsc	plusw1,7,c
 27669  019EF0  D00F               	goto	l16080
 27670  019EF2  0EF9               	movlw	-7
 27671  019EF4  50E3               	movf	plusw1,w,c
 27672  019EF6  E108               	bnz	u15490
 27673  019EF8  0EF8               	movlw	-8
 27674  019EFA  006F FF8C  F02A    	movff	plusw1,btemp
 27675  019F00  0E0A               	movlw	10
 27676  019F02  5E2A               	subwf	btemp^0,f,c
 27677  019F04  A0D8               	btfss	status,0,c
 27678  019F06  D004               	goto	l16080
 27679  019F08                     u15490:
 27680                           
 27681                           ;stkvar	_c @ sp[(-20)+12]
 27682  019F08  0EF8               	movlw	-8
 27683  019F0A  50E3               	movf	plusw1,w,c
 27684  019F0C  0F57               	addlw	87
 27685  019F0E  D003               	goto	L28
 27686  019F10                     l16080:
 27687                           
 27688                           ;stkvar	_c @ sp[(-20)+12]
 27689  019F10  0EF8               	movlw	-8
 27690  019F12  50E3               	movf	plusw1,w,c
 27691  019F14  0F30               	addlw	48
 27692  019F16                     L28:
 27693  019F16  6E34               	movwf	(btemp+10)^0,c
 27694  019F18  0EF9               	movlw	-7
 27695  019F1A  006F FF8C  F035    	movff	plusw1,btemp+11
 27696  019F20  0E00               	movlw	0
 27697  019F22  2235               	addwfc	(btemp+11)^0,f,c
 27698                           
 27699                           ;stkvar	_c @ sp[(-20)+12]
 27700  019F24  0EF8               	movlw	-8
 27701  019F26  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27702  019F2C  0EF9               	movlw	-7
 27703  019F2E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27704  019F34  0EBF               	movlw	191
 27705  019F36  6E34               	movwf	(btemp+10)^0,c
 27706  019F38  0EFF               	movlw	255
 27707  019F3A  6E35               	movwf	(btemp+11)^0,c
 27708                           
 27709                           ;stkvar	_x @ sp[(-20)+-11]
 27710  019F3C  0EE1               	movlw	-31
 27711  019F3E  50E3               	movf	plusw1,w,c
 27712  019F40  6E32               	movwf	(btemp+8)^0,c
 27713  019F42  6A33               	clrf	(btemp+9)^0,c
 27714  019F44  5034               	movf	(btemp+10)^0,w,c
 27715  019F46  2632               	addwf	(btemp+8)^0,f,c
 27716  019F48  5035               	movf	(btemp+11)^0,w,c
 27717  019F4A  2233               	addwfc	(btemp+9)^0,f,c
 27718  019F4C  5033               	movf	(btemp+9)^0,w,c
 27719  019F4E  E106               	bnz	u15500
 27720  019F50  0E1A               	movlw	26
 27721  019F52  5C32               	subwf	(btemp+8)^0,w,c
 27722  019F54  B0D8               	btfsc	status,0,c
 27723  019F56  D002               	goto	u15500
 27724  019F58  0E01               	movlw	1
 27725  019F5A  D001               	goto	u15510
 27726  019F5C                     u15500:
 27727  019F5C  0E00               	movlw	0
 27728  019F5E                     u15510:
 27729  019F5E  6E34               	movwf	(btemp+10)^0,c
 27730  019F60  6A35               	clrf	(btemp+11)^0,c
 27731                           
 27732                           ;stkvar	_xtoa$6652 @ sp[(-20)+2]
 27733  019F62  0EEE               	movlw	-18
 27734  019F64  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27735  019F6A  0EEF               	movlw	-17
 27736  019F6C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27737                           
 27738                           ;stkvar	_xtoa$6652 @ sp[(-20)+2]
 27739  019F72  0EEE               	movlw	-18
 27740  019F74  006F FF8C  F02A    	movff	plusw1,btemp
 27741  019F7A  0EEF               	movlw	-17
 27742  019F7C  50E3               	movf	plusw1,w,c
 27743  019F7E  102A               	iorwf	btemp^0,w,c
 27744  019F80  B4D8               	btfsc	status,2,c
 27745  019F82  D041               	goto	l16096
 27746  019F84  0E9F               	movlw	159
 27747  019F86  6E34               	movwf	(btemp+10)^0,c
 27748  019F88  0EFF               	movlw	255
 27749  019F8A  6E35               	movwf	(btemp+11)^0,c
 27750                           
 27751                           ;stkvar	_c @ sp[(-20)+12]
 27752  019F8C  0EF8               	movlw	-8
 27753  019F8E  006F FF8C  F032    	movff	plusw1,btemp+8
 27754  019F94  0EF9               	movlw	-7
 27755  019F96  006F FF8C  F033    	movff	plusw1,btemp+9
 27756  019F9C  0E20               	movlw	32
 27757  019F9E  1232               	iorwf	(btemp+8)^0,f,c
 27758  019FA0  0E00               	movlw	0
 27759  019FA2  1233               	iorwf	(btemp+9)^0,f,c
 27760  019FA4  5034               	movf	(btemp+10)^0,w,c
 27761  019FA6  2632               	addwf	(btemp+8)^0,f,c
 27762  019FA8  5035               	movf	(btemp+11)^0,w,c
 27763  019FAA  2233               	addwfc	(btemp+9)^0,f,c
 27764  019FAC  5033               	movf	(btemp+9)^0,w,c
 27765  019FAE  E106               	bnz	u15530
 27766  019FB0  0E1A               	movlw	26
 27767  019FB2  5C32               	subwf	(btemp+8)^0,w,c
 27768  019FB4  B0D8               	btfsc	status,0,c
 27769  019FB6  D002               	goto	u15530
 27770  019FB8  0E01               	movlw	1
 27771  019FBA  D001               	goto	u15540
 27772  019FBC                     u15530:
 27773  019FBC  0E00               	movlw	0
 27774  019FBE                     u15540:
 27775  019FBE  6E34               	movwf	(btemp+10)^0,c
 27776  019FC0  6A35               	clrf	(btemp+11)^0,c
 27777                           
 27778                           ;stkvar	_xtoa$6653 @ sp[(-20)+0]
 27779  019FC2  0EEC               	movlw	-20
 27780  019FC4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27781  019FCA  0EED               	movlw	-19
 27782  019FCC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27783                           
 27784                           ;stkvar	_xtoa$6653 @ sp[(-20)+0]
 27785  019FD2  0EEC               	movlw	-20
 27786  019FD4  006F FF8C  F02A    	movff	plusw1,btemp
 27787  019FDA  0EED               	movlw	-19
 27788  019FDC  50E3               	movf	plusw1,w,c
 27789  019FDE  102A               	iorwf	btemp^0,w,c
 27790  019FE0  B4D8               	btfsc	status,2,c
 27791  019FE2  D011               	goto	l16096
 27792                           
 27793                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 27794                           ;stkvar	_c @ sp[(-20)+12]
 27795  019FE4  0EF8               	movlw	-8
 27796  019FE6  006F FF8F FFE6     	movff	plusw1,postinc1
 27797  019FEC  006F FF8F FFE6     	movff	plusw1,postinc1
 27798  019FF2  ECAF  F008         	call	_toupper	;wreg free
 27799                           
 27800                           ;stkvar	_c @ sp[(-20)+12]
 27801  019FF6  0EF8               	movlw	-8
 27802  019FF8  0060  F0AB  FFE3   	movff	btemp,plusw1
 27803  019FFE  0EF9               	movlw	-7
 27804  01A000  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 27805  01A006                     l16096:
 27806                           
 27807                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 27808                           ;stkvar	_c @ sp[(-20)+12]
 27809                           ;stkvar	_i @ sp[(-20)+14]
 27810  01A006  0EFA               	movlw	-6
 27811  01A008  006F FF8C  F034    	movff	plusw1,btemp+10
 27812  01A00E  0EFB               	movlw	-5
 27813  01A010  006F FF8C  F035    	movff	plusw1,btemp+11
 27814  01A016  0E54               	movlw	low _dbuf
 27815  01A018  2434               	addwf	(btemp+10)^0,w,c
 27816  01A01A  6ED9               	movwf	fsr2l,c
 27817  01A01C  0E03               	movlw	high _dbuf
 27818  01A01E  2035               	addwfc	(btemp+11)^0,w,c
 27819  01A020  6EDA               	movwf	fsr2h,c
 27820  01A022  0EF8               	movlw	-8
 27821  01A024  006F FF8F FFDF     	movff	plusw1,indf2
 27822                           
 27823                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 27824                           ;stkvar	_p @ sp[(-20)+18]
 27825  01A02A  50E1               	movf	fsr1l,w,c
 27826  01A02C  0FFE               	addlw	-2
 27827  01A02E  6ED9               	movwf	fsr2l,c
 27828  01A030  50E2               	movf	fsr1h,w,c
 27829  01A032  6EDA               	movwf	fsr2h,c
 27830  01A034  0EFF               	movlw	255
 27831  01A036  22DA               	addwfc	fsr2h,f,c
 27832  01A038  06DE               	decf	postinc2,f,c
 27833  01A03A  0E00               	movlw	0
 27834  01A03C  5ADD               	subwfb	postdec2,f,c
 27835                           
 27836                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 27837                           ;stkvar	_w @ sp[(-20)+16]
 27838  01A03E  50E1               	movf	fsr1l,w,c
 27839  01A040  0FFC               	addlw	-4
 27840  01A042  6ED9               	movwf	fsr2l,c
 27841  01A044  50E2               	movf	fsr1h,w,c
 27842  01A046  6EDA               	movwf	fsr2h,c
 27843  01A048  0EFF               	movlw	255
 27844  01A04A  22DA               	addwfc	fsr2h,f,c
 27845  01A04C  06DE               	decf	postinc2,f,c
 27846  01A04E  0E00               	movlw	0
 27847  01A050  5ADD               	subwfb	postdec2,f,c
 27848                           
 27849                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 27850  01A052  0E04               	movlw	4
 27851  01A054  6E35               	movwf	(btemp+11)^0,c
 27852                           
 27853                           ;stkvar	_n @ sp[(-20)+4]
 27854  01A056  50E1               	movf	fsr1l,w,c
 27855  01A058  0FF0               	addlw	-16
 27856  01A05A  6ED9               	movwf	fsr2l,c
 27857  01A05C  50E2               	movf	fsr1h,w,c
 27858  01A05E  6EDA               	movwf	fsr2h,c
 27859  01A060  0EFF               	movlw	255
 27860  01A062  22DA               	addwfc	fsr2h,f,c
 27861  01A064  2835               	incf	(btemp+11)^0,w,c
 27862  01A066  52DE               	movf	postinc2,f,c
 27863  01A068  D00F               	goto	u15560
 27864  01A06A                     u15565:
 27865  01A06A  52DE               	movf	postinc2,f,c
 27866  01A06C  52DE               	movf	postinc2,f,c
 27867  01A06E  52DE               	movf	postinc2,f,c
 27868  01A070  52DE               	movf	postinc2,f,c
 27869  01A072  52DE               	movf	postinc2,f,c
 27870  01A074  52DE               	movf	postinc2,f,c
 27871  01A076  90D8               	bcf	status,0,c
 27872  01A078  32DD               	rrcf	postdec2,f,c
 27873  01A07A  32DD               	rrcf	postdec2,f,c
 27874  01A07C  32DD               	rrcf	postdec2,f,c
 27875  01A07E  32DD               	rrcf	postdec2,f,c
 27876  01A080  32DD               	rrcf	postdec2,f,c
 27877  01A082  32DD               	rrcf	postdec2,f,c
 27878  01A084  32DD               	rrcf	postdec2,f,c
 27879  01A086  32DE               	rrcf	postinc2,f,c
 27880  01A088                     u15560:
 27881  01A088  2EE8               	decfsz	wreg,f,c
 27882  01A08A  D7EF               	goto	u15565
 27883  01A08C                     l16104:
 27884                           
 27885                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 27886                           ;stkvar	_i @ sp[(-20)+14]
 27887  01A08C  0EFB               	movlw	-5
 27888  01A08E  BEE3               	btfsc	plusw1,7,c
 27889  01A090  D03A               	goto	u15610
 27890  01A092  0EFB               	movlw	-5
 27891  01A094  50E3               	movf	plusw1,w,c
 27892  01A096  E108               	bnz	u15570
 27893  01A098  0EFA               	movlw	-6
 27894  01A09A  006F FF8C  F02A    	movff	plusw1,btemp
 27895  01A0A0  0E02               	movlw	2
 27896  01A0A2  5E2A               	subwf	btemp^0,f,c
 27897  01A0A4  A0D8               	btfss	status,0,c
 27898  01A0A6  D02F               	goto	u15610
 27899  01A0A8                     u15570:
 27900                           
 27901                           ;stkvar	_n @ sp[(-20)+4]
 27902  01A0A8  0EF0               	movlw	-16
 27903  01A0AA  50E3               	movf	plusw1,w,c
 27904  01A0AC  E115               	bnz	u15581
 27905  01A0AE  0EF1               	movlw	-15
 27906  01A0B0  50E3               	movf	plusw1,w,c
 27907  01A0B2  E112               	bnz	u15581
 27908  01A0B4  0EF2               	movlw	-14
 27909  01A0B6  50E3               	movf	plusw1,w,c
 27910  01A0B8  E10F               	bnz	u15581
 27911  01A0BA  0EF3               	movlw	-13
 27912  01A0BC  50E3               	movf	plusw1,w,c
 27913  01A0BE  E10C               	bnz	u15581
 27914  01A0C0  0EF4               	movlw	-12
 27915  01A0C2  50E3               	movf	plusw1,w,c
 27916  01A0C4  E109               	bnz	u15581
 27917  01A0C6  0EF5               	movlw	-11
 27918  01A0C8  50E3               	movf	plusw1,w,c
 27919  01A0CA  E106               	bnz	u15581
 27920  01A0CC  0EF6               	movlw	-10
 27921  01A0CE  50E3               	movf	plusw1,w,c
 27922  01A0D0  E103               	bnz	u15581
 27923  01A0D2  0EF7               	movlw	-9
 27924  01A0D4  50E3               	movf	plusw1,w,c
 27925  01A0D6  A4D8               	btfss	status,2,c
 27926  01A0D8                     u15581:
 27927  01A0D8  D6EB               	goto	l16072
 27928                           
 27929                           ;stkvar	_p @ sp[(-20)+18]
 27930  01A0DA  0EFF               	movlw	-1
 27931  01A0DC  BEE3               	btfsc	plusw1,7,c
 27932  01A0DE  D007               	goto	u15590
 27933  01A0E0  0EFF               	movlw	-1
 27934  01A0E2  50E3               	movf	plusw1,w,c
 27935  01A0E4  E103               	bnz	u15591
 27936  01A0E6  0EFE               	movlw	-2
 27937  01A0E8  04E3               	decf	plusw1,w,c
 27938  01A0EA  B0D8               	btfsc	status,0,c
 27939  01A0EC                     u15591:
 27940  01A0EC  D6E1               	goto	l16072
 27941  01A0EE                     u15590:
 27942                           
 27943                           ;stkvar	_w @ sp[(-20)+16]
 27944  01A0EE  0EFD               	movlw	-3
 27945  01A0F0  BEE3               	btfsc	plusw1,7,c
 27946  01A0F2  D009               	goto	u15610
 27947  01A0F4  0EFD               	movlw	-3
 27948  01A0F6  50E3               	movf	plusw1,w,c
 27949  01A0F8  E104               	bnz	u15600
 27950  01A0FA  0EFC               	movlw	-4
 27951  01A0FC  04E3               	decf	plusw1,w,c
 27952  01A0FE  A0D8               	btfss	status,0,c
 27953  01A100  D002               	goto	u15610
 27954  01A102                     u15600:
 27955  01A102  B24E               	btfsc	_flags^0,1,c
 27956  01A104  D6D5               	goto	l16072
 27957  01A106                     u15610:
 27958                           
 27959                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 27960  01A106  A84E               	btfss	_flags^0,4,c
 27961  01A108  D036               	goto	l16120
 27962                           
 27963                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 27964                           ;stkvar	_i @ sp[(-20)+14]
 27965  01A10A  50E1               	movf	fsr1l,w,c
 27966  01A10C  0FFA               	addlw	-6
 27967  01A10E  6ED9               	movwf	fsr2l,c
 27968  01A110  50E2               	movf	fsr1h,w,c
 27969  01A112  6EDA               	movwf	fsr2h,c
 27970  01A114  0EFF               	movlw	255
 27971  01A116  22DA               	addwfc	fsr2h,f,c
 27972  01A118  06DE               	decf	postinc2,f,c
 27973  01A11A  0E00               	movlw	0
 27974  01A11C  5ADD               	subwfb	postdec2,f,c
 27975                           
 27976                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 27977                           ;stkvar	_x @ sp[(-20)+-11]
 27978                           ;stkvar	_i @ sp[(-20)+14]
 27979  01A11E  0EFA               	movlw	-6
 27980  01A120  006F FF8C  F034    	movff	plusw1,btemp+10
 27981  01A126  0EFB               	movlw	-5
 27982  01A128  006F FF8C  F035    	movff	plusw1,btemp+11
 27983  01A12E  0E54               	movlw	low _dbuf
 27984  01A130  2434               	addwf	(btemp+10)^0,w,c
 27985  01A132  6ED9               	movwf	fsr2l,c
 27986  01A134  0E03               	movlw	high _dbuf
 27987  01A136  2035               	addwfc	(btemp+11)^0,w,c
 27988  01A138  6EDA               	movwf	fsr2h,c
 27989  01A13A  0EE1               	movlw	-31
 27990  01A13C  006F FF8F FFDF     	movff	plusw1,indf2
 27991                           
 27992                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 27993                           ;stkvar	_i @ sp[(-20)+14]
 27994  01A142  50E1               	movf	fsr1l,w,c
 27995  01A144  0FFA               	addlw	-6
 27996  01A146  6ED9               	movwf	fsr2l,c
 27997  01A148  50E2               	movf	fsr1h,w,c
 27998  01A14A  6EDA               	movwf	fsr2h,c
 27999  01A14C  0EFF               	movlw	255
 28000  01A14E  22DA               	addwfc	fsr2h,f,c
 28001  01A150  06DE               	decf	postinc2,f,c
 28002  01A152  0E00               	movlw	0
 28003  01A154  5ADD               	subwfb	postdec2,f,c
 28004                           
 28005                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 28006                           ;stkvar	_i @ sp[(-20)+14]
 28007  01A156  0EFA               	movlw	-6
 28008  01A158  006F FF8C  F034    	movff	plusw1,btemp+10
 28009  01A15E  0EFB               	movlw	-5
 28010  01A160  006F FF8C  F035    	movff	plusw1,btemp+11
 28011  01A166  0E54               	movlw	low _dbuf
 28012  01A168  2434               	addwf	(btemp+10)^0,w,c
 28013  01A16A  6ED9               	movwf	fsr2l,c
 28014  01A16C  0E03               	movlw	high _dbuf
 28015  01A16E  2035               	addwfc	(btemp+11)^0,w,c
 28016  01A170  6EDA               	movwf	fsr2h,c
 28017  01A172  0E30               	movlw	48
 28018  01A174  6EDF               	movwf	indf2,c
 28019  01A176                     l16120:
 28020                           
 28021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 28022                           ;stkvar	_w @ sp[(-20)+16]
 28023  01A176  0EFC               	movlw	-4
 28024  01A178  006F FF8F FFE6     	movff	plusw1,postinc1
 28025  01A17E  006F FF8F FFE6     	movff	plusw1,postinc1
 28026                           
 28027                           ;stkvar	_i @ sp[(-22)+14]
 28028  01A184  0E54               	movlw	low _dbuf
 28029  01A186  6E34               	movwf	(btemp+10)^0,c
 28030  01A188  0E03               	movlw	high _dbuf
 28031  01A18A  6E35               	movwf	(btemp+11)^0,c
 28032  01A18C  0EF8               	movlw	-8
 28033  01A18E  50E3               	movf	plusw1,w,c
 28034  01A190  2634               	addwf	(btemp+10)^0,f,c
 28035  01A192  0EF9               	movlw	-7
 28036  01A194  50E3               	movf	plusw1,w,c
 28037  01A196  2235               	addwfc	(btemp+11)^0,f,c
 28038  01A198  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 28039  01A19E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 28040                           
 28041                           ;stkvar	_fp @ sp[(-24)+-2]
 28042  01A1A4  0EE6               	movlw	-26
 28043  01A1A6  006F FF8F FFE6     	movff	plusw1,postinc1
 28044  01A1AC  006F FF8F FFE6     	movff	plusw1,postinc1
 28045  01A1B2  EC1B  F0FD         	call	_pad	;wreg free
 28046                           
 28047                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 28048  01A1B6  0EE1               	movlw	225
 28049  01A1B8  26E1               	addwf	fsr1l,f,c
 28050  01A1BA  0EFF               	movlw	255
 28051  01A1BC  22E2               	addwfc	fsr1h,f,c
 28052  01A1BE  0012               	return		;funcret
 28053  01A1C0                     __end_of_xtoa:
 28054                           	opt callstack 0
 28055                           
 28056 ;; *************** function _toupper *****************
 28057 ;; Defined at:
 28058 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 28059 ;; Parameters:    Size  Location     Type
 28060 ;;  c               2  [STACK] int 
 28061 ;; Auto vars:     Size  Location     Type
 28062 ;;		None
 28063 ;; Return value:  Size  Location     Type
 28064 ;;                  2  [STACK] int 
 28065 ;; Registers used:
 28066 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 28067 ;; Tracked objects:
 28068 ;;		On entry : 0/3
 28069 ;;		On exit  : 0/0
 28070 ;;		Unchanged: 0/0
 28071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28076 ;;Total ram usage:        0 bytes
 28077 ;; Hardware stack levels used:    1
 28078 ;; Hardware stack levels required when called:   16
 28079 ;; This function calls:
 28080 ;;		_islower
 28081 ;; This function is called by:
 28082 ;;		_xtoa
 28083 ;; This function uses a reentrant model
 28084 ;;
 28085                           
 28086                           	psect	text95
 28087  00115E                     __ptext95:
 28088                           	opt callstack 0
 28089  00115E                     _toupper:
 28090                           	opt callstack 0
 28091                           
 28092                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28093  00115E  52E6               	movf	postinc1,f,c
 28094  001160  52E6               	movf	postinc1,f,c
 28095                           
 28096                           ;stkvar	_c @ sp[(-2)+-2]
 28097                           
 28098                           ;incstack = 0
 28099 ;; hardware stack exceeded
 28100  001162  0EFC               	movlw	-4
 28101  001164  50E3               	movf	plusw1,w,c
 28102  001166  0F9F               	addlw	159
 28103  001168  6E34               	movwf	(btemp+10)^0,c
 28104  00116A  0EFD               	movlw	-3
 28105  00116C  006F FF8C  F035    	movff	plusw1,btemp+11
 28106  001172  0EFF               	movlw	255
 28107  001174  2235               	addwfc	(btemp+11)^0,f,c
 28108  001176  5035               	movf	(btemp+11)^0,w,c
 28109  001178  E106               	bnz	u8010
 28110  00117A  0E1A               	movlw	26
 28111  00117C  5C34               	subwf	(btemp+10)^0,w,c
 28112  00117E  B0D8               	btfsc	status,0,c
 28113  001180  D002               	goto	u8010
 28114  001182  0E01               	movlw	1
 28115  001184  D001               	goto	u8020
 28116  001186                     u8010:
 28117  001186  0E00               	movlw	0
 28118  001188                     u8020:
 28119  001188  6E34               	movwf	(btemp+10)^0,c
 28120  00118A  6A35               	clrf	(btemp+11)^0,c
 28121                           
 28122                           ;stkvar	_toupper$7594 @ sp[(-2)+0]
 28123  00118C  0EFE               	movlw	-2
 28124  00118E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28125  001194  0EFF               	movlw	-1
 28126  001196  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28127                           
 28128                           ;stkvar	_toupper$7594 @ sp[(-2)+0]
 28129  00119C  0EFE               	movlw	-2
 28130  00119E  006F FF8C  F02A    	movff	plusw1,btemp
 28131  0011A4  0EFF               	movlw	-1
 28132  0011A6  50E3               	movf	plusw1,w,c
 28133  0011A8  102A               	iorwf	btemp^0,w,c
 28134  0011AA  B4D8               	btfsc	status,2,c
 28135  0011AC  D00D               	goto	l10206
 28136                           
 28137                           ;stkvar	_c @ sp[(-2)+-2]
 28138  0011AE  0EFC               	movlw	-4
 28139  0011B0  006F FF8C  F02A    	movff	plusw1,btemp
 28140  0011B6  0EFD               	movlw	-3
 28141  0011B8  006F FF8C  F02B    	movff	plusw1,btemp+1
 28142  0011BE  0E5F               	movlw	95
 28143  0011C0  162A               	andwf	btemp^0,f,c
 28144  0011C2  0E00               	movlw	0
 28145  0011C4  162B               	andwf	(btemp+1)^0,f,c
 28146  0011C6  D008               	goto	l3842
 28147  0011C8                     l10206:
 28148                           
 28149                           ;stkvar	_c @ sp[(-2)+-2]
 28150  0011C8  0EFC               	movlw	-4
 28151  0011CA  006F FF8C  F02A    	movff	plusw1,btemp
 28152  0011D0  0EFD               	movlw	-3
 28153  0011D2  006F FF8C  F02B    	movff	plusw1,btemp+1
 28154  0011D8                     l3842:
 28155                           
 28156                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 28157  0011D8  52E5               	movf	postdec1,f,c
 28158  0011DA  52E5               	movf	postdec1,f,c
 28159  0011DC  52E5               	movf	postdec1,f,c
 28160  0011DE  52E5               	movf	postdec1,f,c
 28161  0011E0  0012               	return		;funcret
 28162  0011E2                     __end_of_toupper:
 28163                           	opt callstack 0
 28164                           
 28165 ;; *************** function _islower *****************
 28166 ;; Defined at:
 28167 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 28168 ;; Parameters:    Size  Location     Type
 28169 ;;  c               2  [STACK] int 
 28170 ;; Auto vars:     Size  Location     Type
 28171 ;;		None
 28172 ;; Return value:  Size  Location     Type
 28173 ;;                  2  [STACK] int 
 28174 ;; Registers used:
 28175 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 28176 ;; Tracked objects:
 28177 ;;		On entry : 0/0
 28178 ;;		On exit  : 0/0
 28179 ;;		Unchanged: 0/0
 28180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28185 ;;Total ram usage:        0 bytes
 28186 ;; Hardware stack levels used:    1
 28187 ;; Hardware stack levels required when called:   15
 28188 ;; This function calls:
 28189 ;;		Nothing
 28190 ;; This function is called by:
 28191 ;;		_toupper
 28192 ;; This function uses a reentrant model
 28193 ;;
 28194                           
 28195                           	psect	text96
 28196  002322                     __ptext96:
 28197                           	opt callstack 0
 28198  002322                     _islower:
 28199                           	opt callstack 0
 28200                           
 28201                           ;stkvar	_c @ sp[(0)+-2]
 28202                           
 28203                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28204                           ;incstack = 0
 28205 ;; hardware stack exceeded
 28206  002322  0EFE               	movlw	-2
 28207  002324  50E3               	movf	plusw1,w,c
 28208  002326  0F9F               	addlw	159
 28209  002328  6E34               	movwf	(btemp+10)^0,c
 28210  00232A  0EFF               	movlw	-1
 28211  00232C  006F FF8C  F035    	movff	plusw1,btemp+11
 28212  002332  0EFF               	movlw	255
 28213  002334  2235               	addwfc	(btemp+11)^0,f,c
 28214  002336  5035               	movf	(btemp+11)^0,w,c
 28215  002338  E106               	bnz	u7640
 28216  00233A  0E1A               	movlw	26
 28217  00233C  5C34               	subwf	(btemp+10)^0,w,c
 28218  00233E  B0D8               	btfsc	status,0,c
 28219  002340  D002               	goto	u7640
 28220  002342  0E01               	movlw	1
 28221  002344  D001               	goto	u7650
 28222  002346                     u7640:
 28223  002346  0E00               	movlw	0
 28224  002348                     u7650:
 28225  002348  6E2A               	movwf	btemp^0,c
 28226  00234A  6A2B               	clrf	(btemp+1)^0,c
 28227                           
 28228                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 28229  00234C  52E5               	movf	postdec1,f,c
 28230  00234E  52E5               	movf	postdec1,f,c
 28231  002350  0012               	return		;funcret
 28232  002352                     __end_of_islower:
 28233                           	opt callstack 0
 28234                           
 28235 ;; *************** function _isalpha *****************
 28236 ;; Defined at:
 28237 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 28238 ;; Parameters:    Size  Location     Type
 28239 ;;  c               2  [STACK] int 
 28240 ;; Auto vars:     Size  Location     Type
 28241 ;;		None
 28242 ;; Return value:  Size  Location     Type
 28243 ;;                  2  [STACK] int 
 28244 ;; Registers used:
 28245 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 28246 ;; Tracked objects:
 28247 ;;		On entry : 0/0
 28248 ;;		On exit  : 0/0
 28249 ;;		Unchanged: 0/0
 28250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28255 ;;Total ram usage:        0 bytes
 28256 ;; Hardware stack levels used:    1
 28257 ;; Hardware stack levels required when called:   15
 28258 ;; This function calls:
 28259 ;;		Nothing
 28260 ;; This function is called by:
 28261 ;;		_xtoa
 28262 ;; This function uses a reentrant model
 28263 ;;
 28264                           
 28265                           	psect	text97
 28266  001E9A                     __ptext97:
 28267                           	opt callstack 0
 28268  001E9A                     _isalpha:
 28269                           	opt callstack 0
 28270                           
 28271                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28272                           ;incstack = 0
 28273 ;; hardware stack exceeded
 28274  001E9A  0E9F               	movlw	159
 28275  001E9C  6E34               	movwf	(btemp+10)^0,c
 28276  001E9E  0EFF               	movlw	255
 28277  001EA0  6E35               	movwf	(btemp+11)^0,c
 28278                           
 28279                           ;stkvar	_c @ sp[(0)+-2]
 28280  001EA2  0EFE               	movlw	-2
 28281  001EA4  006F FF8C  F032    	movff	plusw1,btemp+8
 28282  001EAA  0EFF               	movlw	-1
 28283  001EAC  006F FF8C  F033    	movff	plusw1,btemp+9
 28284  001EB2  0E20               	movlw	32
 28285  001EB4  1232               	iorwf	(btemp+8)^0,f,c
 28286  001EB6  0E00               	movlw	0
 28287  001EB8  1233               	iorwf	(btemp+9)^0,f,c
 28288  001EBA  5034               	movf	(btemp+10)^0,w,c
 28289  001EBC  2632               	addwf	(btemp+8)^0,f,c
 28290  001EBE  5035               	movf	(btemp+11)^0,w,c
 28291  001EC0  2233               	addwfc	(btemp+9)^0,f,c
 28292  001EC2  5033               	movf	(btemp+9)^0,w,c
 28293  001EC4  E106               	bnz	u7990
 28294  001EC6  0E1A               	movlw	26
 28295  001EC8  5C32               	subwf	(btemp+8)^0,w,c
 28296  001ECA  B0D8               	btfsc	status,0,c
 28297  001ECC  D002               	goto	u7990
 28298  001ECE  0E01               	movlw	1
 28299  001ED0  D001               	goto	u8000
 28300  001ED2                     u7990:
 28301  001ED2  0E00               	movlw	0
 28302  001ED4                     u8000:
 28303  001ED4  6E2A               	movwf	btemp^0,c
 28304  001ED6  6A2B               	clrf	(btemp+1)^0,c
 28305                           
 28306                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 28307  001ED8  52E5               	movf	postdec1,f,c
 28308  001EDA  52E5               	movf	postdec1,f,c
 28309  001EDC  0012               	return		;funcret
 28310  001EDE                     __end_of_isalpha:
 28311                           	opt callstack 0
 28312                           
 28313 ;; *************** function _utoa *****************
 28314 ;; Defined at:
 28315 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 28316 ;; Parameters:    Size  Location     Type
 28317 ;;  fp              2  [STACK] PTR struct _IO_FILE
 28318 ;;		 -> f(6), NULL(0), 
 28319 ;;  d               8  [STACK] unsigned long long 
 28320 ;; Auto vars:     Size  Location     Type
 28321 ;;  n               8  [STACK] unsigned long long 
 28322 ;;  i               2  [STACK] int 
 28323 ;;  w               2  [STACK] int 
 28324 ;;  p               2  [STACK] int 
 28325 ;; Return value:  Size  Location     Type
 28326 ;;                  2  [STACK] int 
 28327 ;; Registers used:
 28328 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 28329 ;; Tracked objects:
 28330 ;;		On entry : 0/0
 28331 ;;		On exit  : 0/0
 28332 ;;		Unchanged: 0/0
 28333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28338 ;;Total ram usage:        0 bytes
 28339 ;; Hardware stack levels used:    1
 28340 ;; Hardware stack levels required when called:   20
 28341 ;; This function calls:
 28342 ;;		___lodiv
 28343 ;;		___lomod
 28344 ;;		_pad
 28345 ;; This function is called by:
 28346 ;;		_vfpfcnvrt
 28347 ;; This function uses a reentrant model
 28348 ;;
 28349                           
 28350                           	psect	text98
 28351  01ABE0                     __ptext98:
 28352                           	opt callstack 0
 28353  01ABE0                     _utoa:
 28354                           	opt callstack 0
 28355                           
 28356                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 28357  01ABE0  0E0E               	movlw	14
 28358  01ABE2  26E1               	addwf	fsr1l,f,c
 28359  01ABE4  0E00               	movlw	0
 28360  01ABE6  22E2               	addwfc	fsr1h,f,c
 28361                           
 28362                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 28363                           
 28364                           ;incstack = 0
 28365 ;; hardware stack exceeded
 28366  01ABE8  AE4D               	btfss	(_prec+1)^0,7,c
 28367                           
 28368                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 28369  01ABEA  924E               	bcf	_flags^0,1,c
 28370                           
 28371                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 28372  01ABEC  BE4D               	btfsc	(_prec+1)^0,7,c
 28373  01ABEE  D005               	goto	u15380
 28374  01ABF0  504D               	movf	(_prec+1)^0,w,c
 28375  01ABF2  E110               	bnz	l16020
 28376  01ABF4  044C               	decf	_prec^0,w,c
 28377  01ABF6  B0D8               	btfsc	status,0,c
 28378  01ABF8  D00D               	goto	l16020
 28379  01ABFA                     u15380:
 28380  01ABFA  0E01               	movlw	1
 28381  01ABFC  6E34               	movwf	(btemp+10)^0,c
 28382  01ABFE  0E00               	movlw	0
 28383  01AC00  6E35               	movwf	(btemp+11)^0,c
 28384                           
 28385                           ;stkvar	_p @ sp[(-14)+12]
 28386  01AC02  0EFE               	movlw	-2
 28387  01AC04  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28388  01AC0A  0EFF               	movlw	-1
 28389  01AC0C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28390  01AC12  D008               	goto	l2630
 28391  01AC14                     l16020:
 28392                           
 28393                           ;stkvar	_p @ sp[(-14)+12]
 28394  01AC14  0EFE               	movlw	-2
 28395  01AC16  0060  F133  FFE3   	movff	_prec,plusw1
 28396  01AC1C  0EFF               	movlw	-1
 28397  01AC1E  0060  F137  FFE3   	movff	_prec+1,plusw1
 28398  01AC24                     l2630:
 28399                           
 28400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 28401                           ;stkvar	_w @ sp[(-14)+10]
 28402  01AC24  0EFC               	movlw	-4
 28403  01AC26  0060  F12B  FFE3   	movff	_width,plusw1
 28404  01AC2C  0EFD               	movlw	-3
 28405  01AC2E  0060  F12F  FFE3   	movff	_width+1,plusw1
 28406                           
 28407                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 28408                           ;stkvar	_d @ sp[(-14)+-10]
 28409  01AC34  0EE8               	movlw	232
 28410  01AC36  24E1               	addwf	fsr1l,w,c
 28411  01AC38  6ED9               	movwf	fsr2l,c
 28412  01AC3A  0EFF               	movlw	255
 28413  01AC3C  20E2               	addwfc	fsr1h,w,c
 28414  01AC3E  6EDA               	movwf	fsr2h,c
 28415                           
 28416                           ;stkvar	_n @ sp[(-14)+0]
 28417  01AC40  0E08               	movlw	8
 28418  01AC42  6E2A               	movwf	btemp^0,c
 28419  01AC44  0EF2               	movlw	-14
 28420  01AC46                     us1539999:
 28421  01AC46  006F FF7B FFE3     	movff	postinc2,plusw1
 28422  01AC4C  28E8               	incf	wreg,w,c
 28423  01AC4E  2E2A               	decfsz	btemp^0,f,c
 28424  01AC50  D7FA               	bra	us1539999
 28425                           
 28426                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 28427  01AC52  0E4F               	movlw	79
 28428  01AC54  6E34               	movwf	(btemp+10)^0,c
 28429  01AC56  0E00               	movlw	0
 28430  01AC58  6E35               	movwf	(btemp+11)^0,c
 28431                           
 28432                           ;stkvar	_i @ sp[(-14)+8]
 28433  01AC5A  0EFA               	movlw	-6
 28434  01AC5C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28435  01AC62  0EFB               	movlw	-5
 28436  01AC64  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28437                           
 28438                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 28439  01AC6A  0103               	movlb	3	; () banked
 28440  01AC6C  6BA3               	clrf	(_dbuf+79)& (0+255),b
 28441                           
 28442                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 28443  01AC6E  D0FB               	goto	l16038
 28444  01AC70                     l16028:
 28445                           
 28446                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 28447                           ;stkvar	_i @ sp[(-14)+8]
 28448  01AC70  50E1               	movf	fsr1l,w,c
 28449  01AC72  0FFA               	addlw	-6
 28450  01AC74  6ED9               	movwf	fsr2l,c
 28451  01AC76  50E2               	movf	fsr1h,w,c
 28452  01AC78  6EDA               	movwf	fsr2h,c
 28453  01AC7A  0EFF               	movlw	255
 28454  01AC7C  22DA               	addwfc	fsr2h,f,c
 28455  01AC7E  06DE               	decf	postinc2,f,c
 28456  01AC80  0E00               	movlw	0
 28457  01AC82  5ADD               	subwfb	postdec2,f,c
 28458                           
 28459                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 28460  01AC84  0E0A               	movlw	10
 28461  01AC86  6EE6               	movwf	postinc1,c
 28462  01AC88  0E00               	movlw	0
 28463  01AC8A  6EE6               	movwf	postinc1,c
 28464  01AC8C  0E00               	movlw	0
 28465  01AC8E  6EE6               	movwf	postinc1,c
 28466  01AC90  0E00               	movlw	0
 28467  01AC92  6EE6               	movwf	postinc1,c
 28468  01AC94  0E00               	movlw	0
 28469  01AC96  6EE6               	movwf	postinc1,c
 28470  01AC98  0E00               	movlw	0
 28471  01AC9A  6EE6               	movwf	postinc1,c
 28472  01AC9C  0E00               	movlw	0
 28473  01AC9E  6EE6               	movwf	postinc1,c
 28474  01ACA0  0E00               	movlw	0
 28475  01ACA2  6EE6               	movwf	postinc1,c
 28476                           
 28477                           ;stkvar	_n @ sp[(-22)+0]
 28478  01ACA4  50E1               	movf	fsr1l,w,c
 28479  01ACA6  0FEA               	addlw	-22
 28480  01ACA8  6ED9               	movwf	fsr2l,c
 28481  01ACAA  50E2               	movf	fsr1h,w,c
 28482  01ACAC  6EDA               	movwf	fsr2h,c
 28483  01ACAE  0EFF               	movlw	255
 28484  01ACB0  22DA               	addwfc	fsr2h,f,c
 28485  01ACB2  006F FF7B FFE6     	movff	postinc2,postinc1
 28486  01ACB8  006F FF7B FFE6     	movff	postinc2,postinc1
 28487  01ACBE  006F FF7B FFE6     	movff	postinc2,postinc1
 28488  01ACC4  006F FF7B FFE6     	movff	postinc2,postinc1
 28489  01ACCA  006F FF7B FFE6     	movff	postinc2,postinc1
 28490  01ACD0  006F FF7B FFE6     	movff	postinc2,postinc1
 28491  01ACD6  006F FF7B FFE6     	movff	postinc2,postinc1
 28492  01ACDC  006F FF7B FFE6     	movff	postinc2,postinc1
 28493  01ACE2  ECA8  F0F9         	call	___lomod	;wreg free
 28494  01ACE6  52E5               	movf	postdec1,f,c
 28495  01ACE8  006F FF9C  F041    	movff	indf1,btemp+23
 28496  01ACEE  52E5               	movf	postdec1,f,c
 28497  01ACF0  006F FF9C  F040    	movff	indf1,btemp+22
 28498  01ACF6  52E5               	movf	postdec1,f,c
 28499  01ACF8  006F FF9C  F03F    	movff	indf1,btemp+21
 28500  01ACFE  52E5               	movf	postdec1,f,c
 28501  01AD00  006F FF9C  F03E    	movff	indf1,btemp+20
 28502  01AD06  52E5               	movf	postdec1,f,c
 28503  01AD08  006F FF9C  F03D    	movff	indf1,btemp+19
 28504  01AD0E  52E5               	movf	postdec1,f,c
 28505  01AD10  006F FF9C  F03C    	movff	indf1,btemp+18
 28506  01AD16  52E5               	movf	postdec1,f,c
 28507  01AD18  006F FF9C  F03B    	movff	indf1,btemp+17
 28508  01AD1E  52E5               	movf	postdec1,f,c
 28509  01AD20  006F FF9C  F03A    	movff	indf1,btemp+16
 28510  01AD26  0EF8               	movlw	248
 28511  01AD28  26E1               	addwf	fsr1l,f,c
 28512  01AD2A  0EFF               	movlw	255
 28513  01AD2C  22E2               	addwfc	fsr1h,f,c
 28514  01AD2E  0E30               	movlw	48
 28515  01AD30  263A               	addwf	(btemp+16)^0,f,c
 28516                           
 28517                           ;stkvar	_i @ sp[(-14)+8]
 28518  01AD32  0EFA               	movlw	-6
 28519  01AD34  006F FF8C  F034    	movff	plusw1,btemp+10
 28520  01AD3A  0EFB               	movlw	-5
 28521  01AD3C  006F FF8C  F035    	movff	plusw1,btemp+11
 28522  01AD42  0E54               	movlw	low _dbuf
 28523  01AD44  2434               	addwf	(btemp+10)^0,w,c
 28524  01AD46  6ED9               	movwf	fsr2l,c
 28525  01AD48  0E03               	movlw	high _dbuf
 28526  01AD4A  2035               	addwfc	(btemp+11)^0,w,c
 28527  01AD4C  6EDA               	movwf	fsr2h,c
 28528  01AD4E  0060  F0EB  FFDF   	movff	btemp+16,indf2
 28529                           
 28530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 28531                           ;stkvar	_p @ sp[(-14)+12]
 28532  01AD54  50E1               	movf	fsr1l,w,c
 28533  01AD56  0FFE               	addlw	-2
 28534  01AD58  6ED9               	movwf	fsr2l,c
 28535  01AD5A  50E2               	movf	fsr1h,w,c
 28536  01AD5C  6EDA               	movwf	fsr2h,c
 28537  01AD5E  0EFF               	movlw	255
 28538  01AD60  22DA               	addwfc	fsr2h,f,c
 28539  01AD62  06DE               	decf	postinc2,f,c
 28540  01AD64  0E00               	movlw	0
 28541  01AD66  5ADD               	subwfb	postdec2,f,c
 28542                           
 28543                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 28544                           ;stkvar	_w @ sp[(-14)+10]
 28545  01AD68  50E1               	movf	fsr1l,w,c
 28546  01AD6A  0FFC               	addlw	-4
 28547  01AD6C  6ED9               	movwf	fsr2l,c
 28548  01AD6E  50E2               	movf	fsr1h,w,c
 28549  01AD70  6EDA               	movwf	fsr2h,c
 28550  01AD72  0EFF               	movlw	255
 28551  01AD74  22DA               	addwfc	fsr2h,f,c
 28552  01AD76  06DE               	decf	postinc2,f,c
 28553  01AD78  0E00               	movlw	0
 28554  01AD7A  5ADD               	subwfb	postdec2,f,c
 28555                           
 28556                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 28557  01AD7C  0E0A               	movlw	10
 28558  01AD7E  6EE6               	movwf	postinc1,c
 28559  01AD80  0E00               	movlw	0
 28560  01AD82  6EE6               	movwf	postinc1,c
 28561  01AD84  0E00               	movlw	0
 28562  01AD86  6EE6               	movwf	postinc1,c
 28563  01AD88  0E00               	movlw	0
 28564  01AD8A  6EE6               	movwf	postinc1,c
 28565  01AD8C  0E00               	movlw	0
 28566  01AD8E  6EE6               	movwf	postinc1,c
 28567  01AD90  0E00               	movlw	0
 28568  01AD92  6EE6               	movwf	postinc1,c
 28569  01AD94  0E00               	movlw	0
 28570  01AD96  6EE6               	movwf	postinc1,c
 28571  01AD98  0E00               	movlw	0
 28572  01AD9A  6EE6               	movwf	postinc1,c
 28573                           
 28574                           ;stkvar	_n @ sp[(-22)+0]
 28575  01AD9C  50E1               	movf	fsr1l,w,c
 28576  01AD9E  0FEA               	addlw	-22
 28577  01ADA0  6ED9               	movwf	fsr2l,c
 28578  01ADA2  50E2               	movf	fsr1h,w,c
 28579  01ADA4  6EDA               	movwf	fsr2h,c
 28580  01ADA6  0EFF               	movlw	255
 28581  01ADA8  22DA               	addwfc	fsr2h,f,c
 28582  01ADAA  006F FF7B FFE6     	movff	postinc2,postinc1
 28583  01ADB0  006F FF7B FFE6     	movff	postinc2,postinc1
 28584  01ADB6  006F FF7B FFE6     	movff	postinc2,postinc1
 28585  01ADBC  006F FF7B FFE6     	movff	postinc2,postinc1
 28586  01ADC2  006F FF7B FFE6     	movff	postinc2,postinc1
 28587  01ADC8  006F FF7B FFE6     	movff	postinc2,postinc1
 28588  01ADCE  006F FF7B FFE6     	movff	postinc2,postinc1
 28589  01ADD4  006F FF7B FFE6     	movff	postinc2,postinc1
 28590  01ADDA  EC10  F0F2         	call	___lodiv	;wreg free
 28591  01ADDE  52E5               	movf	postdec1,f,c
 28592  01ADE0  006F FF9C  F041    	movff	indf1,btemp+23
 28593  01ADE6  52E5               	movf	postdec1,f,c
 28594  01ADE8  006F FF9C  F040    	movff	indf1,btemp+22
 28595  01ADEE  52E5               	movf	postdec1,f,c
 28596  01ADF0  006F FF9C  F03F    	movff	indf1,btemp+21
 28597  01ADF6  52E5               	movf	postdec1,f,c
 28598  01ADF8  006F FF9C  F03E    	movff	indf1,btemp+20
 28599  01ADFE  52E5               	movf	postdec1,f,c
 28600  01AE00  006F FF9C  F03D    	movff	indf1,btemp+19
 28601  01AE06  52E5               	movf	postdec1,f,c
 28602  01AE08  006F FF9C  F03C    	movff	indf1,btemp+18
 28603  01AE0E  52E5               	movf	postdec1,f,c
 28604  01AE10  006F FF9C  F03B    	movff	indf1,btemp+17
 28605  01AE16  52E5               	movf	postdec1,f,c
 28606  01AE18  006F FF9C  F03A    	movff	indf1,btemp+16
 28607  01AE1E  0EF8               	movlw	248
 28608  01AE20  26E1               	addwf	fsr1l,f,c
 28609  01AE22  0EFF               	movlw	255
 28610  01AE24  22E2               	addwfc	fsr1h,f,c
 28611                           
 28612                           ;stkvar	_n @ sp[(-14)+0]
 28613  01AE26  0EF2               	movlw	-14
 28614  01AE28  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 28615  01AE2E  0EF3               	movlw	-13
 28616  01AE30  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 28617  01AE36  0EF4               	movlw	-12
 28618  01AE38  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 28619  01AE3E  0EF5               	movlw	-11
 28620  01AE40  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 28621  01AE46  0EF6               	movlw	-10
 28622  01AE48  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 28623  01AE4E  0EF7               	movlw	-9
 28624  01AE50  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 28625  01AE56  0EF8               	movlw	-8
 28626  01AE58  0060  F103  FFE3   	movff	btemp+22,plusw1
 28627  01AE5E  0EF9               	movlw	-7
 28628  01AE60  0060  F107  FFE3   	movff	btemp+23,plusw1
 28629  01AE66                     l16038:
 28630                           
 28631                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 28632                           ;stkvar	_i @ sp[(-14)+8]
 28633  01AE66  0EFA               	movlw	-6
 28634  01AE68  006F FF8C  F02A    	movff	plusw1,btemp
 28635  01AE6E  0EFB               	movlw	-5
 28636  01AE70  50E3               	movf	plusw1,w,c
 28637  01AE72  102A               	iorwf	btemp^0,w,c
 28638  01AE74  B4D8               	btfsc	status,2,c
 28639  01AE76  D02F               	goto	u15440
 28640                           
 28641                           ;stkvar	_n @ sp[(-14)+0]
 28642  01AE78  0EF2               	movlw	-14
 28643  01AE7A  50E3               	movf	plusw1,w,c
 28644  01AE7C  E115               	bnz	u15411
 28645  01AE7E  0EF3               	movlw	-13
 28646  01AE80  50E3               	movf	plusw1,w,c
 28647  01AE82  E112               	bnz	u15411
 28648  01AE84  0EF4               	movlw	-12
 28649  01AE86  50E3               	movf	plusw1,w,c
 28650  01AE88  E10F               	bnz	u15411
 28651  01AE8A  0EF5               	movlw	-11
 28652  01AE8C  50E3               	movf	plusw1,w,c
 28653  01AE8E  E10C               	bnz	u15411
 28654  01AE90  0EF6               	movlw	-10
 28655  01AE92  50E3               	movf	plusw1,w,c
 28656  01AE94  E109               	bnz	u15411
 28657  01AE96  0EF7               	movlw	-9
 28658  01AE98  50E3               	movf	plusw1,w,c
 28659  01AE9A  E106               	bnz	u15411
 28660  01AE9C  0EF8               	movlw	-8
 28661  01AE9E  50E3               	movf	plusw1,w,c
 28662  01AEA0  E103               	bnz	u15411
 28663  01AEA2  0EF9               	movlw	-7
 28664  01AEA4  50E3               	movf	plusw1,w,c
 28665  01AEA6  A4D8               	btfss	status,2,c
 28666  01AEA8                     u15411:
 28667  01AEA8  D6E3               	goto	l16028
 28668                           
 28669                           ;stkvar	_p @ sp[(-14)+12]
 28670  01AEAA  0EFF               	movlw	-1
 28671  01AEAC  BEE3               	btfsc	plusw1,7,c
 28672  01AEAE  D007               	goto	u15420
 28673  01AEB0  0EFF               	movlw	-1
 28674  01AEB2  50E3               	movf	plusw1,w,c
 28675  01AEB4  E103               	bnz	u15421
 28676  01AEB6  0EFE               	movlw	-2
 28677  01AEB8  04E3               	decf	plusw1,w,c
 28678  01AEBA  B0D8               	btfsc	status,0,c
 28679  01AEBC                     u15421:
 28680  01AEBC  D6D9               	goto	l16028
 28681  01AEBE                     u15420:
 28682                           
 28683                           ;stkvar	_w @ sp[(-14)+10]
 28684  01AEBE  0EFD               	movlw	-3
 28685  01AEC0  BEE3               	btfsc	plusw1,7,c
 28686  01AEC2  D009               	goto	u15440
 28687  01AEC4  0EFD               	movlw	-3
 28688  01AEC6  50E3               	movf	plusw1,w,c
 28689  01AEC8  E104               	bnz	u15430
 28690  01AECA  0EFC               	movlw	-4
 28691  01AECC  04E3               	decf	plusw1,w,c
 28692  01AECE  A0D8               	btfss	status,0,c
 28693  01AED0  D002               	goto	u15440
 28694  01AED2                     u15430:
 28695  01AED2  B24E               	btfsc	_flags^0,1,c
 28696  01AED4  D6CD               	goto	l16028
 28697  01AED6                     u15440:
 28698                           
 28699                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 28700                           ;stkvar	_w @ sp[(-14)+10]
 28701  01AED6  0EFC               	movlw	-4
 28702  01AED8  006F FF8F FFE6     	movff	plusw1,postinc1
 28703  01AEDE  006F FF8F FFE6     	movff	plusw1,postinc1
 28704                           
 28705                           ;stkvar	_i @ sp[(-16)+8]
 28706  01AEE4  0E54               	movlw	low _dbuf
 28707  01AEE6  6E34               	movwf	(btemp+10)^0,c
 28708  01AEE8  0E03               	movlw	high _dbuf
 28709  01AEEA  6E35               	movwf	(btemp+11)^0,c
 28710  01AEEC  0EF8               	movlw	-8
 28711  01AEEE  50E3               	movf	plusw1,w,c
 28712  01AEF0  2634               	addwf	(btemp+10)^0,f,c
 28713  01AEF2  0EF9               	movlw	-7
 28714  01AEF4  50E3               	movf	plusw1,w,c
 28715  01AEF6  2235               	addwfc	(btemp+11)^0,f,c
 28716  01AEF8  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 28717  01AEFE  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 28718                           
 28719                           ;stkvar	_fp @ sp[(-18)+-2]
 28720  01AF04  0EEC               	movlw	-20
 28721  01AF06  006F FF8F FFE6     	movff	plusw1,postinc1
 28722  01AF0C  006F FF8F FFE6     	movff	plusw1,postinc1
 28723  01AF12  EC1B  F0FD         	call	_pad	;wreg free
 28724                           
 28725                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 28726  01AF16  0EE8               	movlw	232
 28727  01AF18  26E1               	addwf	fsr1l,f,c
 28728  01AF1A  0EFF               	movlw	255
 28729  01AF1C  22E2               	addwfc	fsr1h,f,c
 28730  01AF1E  0012               	return		;funcret
 28731  01AF20                     __end_of_utoa:
 28732                           	opt callstack 0
 28733                           
 28734 ;; *************** function ___lomod *****************
 28735 ;; Defined at:
 28736 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 28737 ;; Parameters:    Size  Location     Type
 28738 ;;  dividend        8  [STACK] unsigned long long 
 28739 ;;  divisor         8  [STACK] unsigned long long 
 28740 ;; Auto vars:     Size  Location     Type
 28741 ;;  counter         1  [STACK] unsigned char 
 28742 ;; Return value:  Size  Location     Type
 28743 ;;                  8  [STACK] unsigned long long 
 28744 ;; Registers used:
 28745 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 28746 ;; Tracked objects:
 28747 ;;		On entry : 0/3
 28748 ;;		On exit  : 0/0
 28749 ;;		Unchanged: 0/0
 28750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28755 ;;Total ram usage:        0 bytes
 28756 ;; Hardware stack levels used:    1
 28757 ;; Hardware stack levels required when called:   15
 28758 ;; This function calls:
 28759 ;;		Nothing
 28760 ;; This function is called by:
 28761 ;;		_utoa
 28762 ;; This function uses a reentrant model
 28763 ;;
 28764                           
 28765                           	psect	text99
 28766  01F350                     __ptext99:
 28767                           	opt callstack 0
 28768  01F350                     ___lomod:
 28769                           	opt callstack 0
 28770                           
 28771                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 28772  01F350  52E6               	movf	postinc1,f,c
 28773                           
 28774                           ;stkvar	_divisor @ sp[(-1)+-16]
 28775                           
 28776                           ;incstack = 0
 28777 ;; hardware stack exceeded
 28778  01F352  0EEF               	movlw	-17
 28779  01F354  50E3               	movf	plusw1,w,c
 28780  01F356  E116               	bnz	u9200
 28781  01F358  0EF0               	movlw	-16
 28782  01F35A  50E3               	movf	plusw1,w,c
 28783  01F35C  E113               	bnz	u9200
 28784  01F35E  0EF1               	movlw	-15
 28785  01F360  50E3               	movf	plusw1,w,c
 28786  01F362  E110               	bnz	u9200
 28787  01F364  0EF2               	movlw	-14
 28788  01F366  50E3               	movf	plusw1,w,c
 28789  01F368  E10D               	bnz	u9200
 28790  01F36A  0EF3               	movlw	-13
 28791  01F36C  50E3               	movf	plusw1,w,c
 28792  01F36E  E10A               	bnz	u9200
 28793  01F370  0EF4               	movlw	-12
 28794  01F372  50E3               	movf	plusw1,w,c
 28795  01F374  E107               	bnz	u9200
 28796  01F376  0EF5               	movlw	-11
 28797  01F378  50E3               	movf	plusw1,w,c
 28798  01F37A  E104               	bnz	u9200
 28799  01F37C  0EF6               	movlw	-10
 28800  01F37E  50E3               	movf	plusw1,w,c
 28801  01F380  B4D8               	btfsc	status,2,c
 28802  01F382  D075               	goto	u9230
 28803  01F384                     u9200:
 28804                           
 28805                           ;stkvar	_counter @ sp[(-1)+0]
 28806  01F384  0EFF               	movlw	-1
 28807  01F386  6AE3               	clrf	plusw1,c
 28808  01F388  D012               	goto	L29
 28809  01F38A                     l10842:
 28810                           
 28811                           ;stkvar	_divisor @ sp[(-1)+-16]
 28812  01F38A  90D8               	bcf	status,0,c
 28813  01F38C  0EEF               	movlw	-17
 28814  01F38E  36E3               	rlcf	plusw1,f,c
 28815  01F390  0EF0               	movlw	-16
 28816  01F392  36E3               	rlcf	plusw1,f,c
 28817  01F394  0EF1               	movlw	-15
 28818  01F396  36E3               	rlcf	plusw1,f,c
 28819  01F398  0EF2               	movlw	-14
 28820  01F39A  36E3               	rlcf	plusw1,f,c
 28821  01F39C  0EF3               	movlw	-13
 28822  01F39E  36E3               	rlcf	plusw1,f,c
 28823  01F3A0  0EF4               	movlw	-12
 28824  01F3A2  36E3               	rlcf	plusw1,f,c
 28825  01F3A4  0EF5               	movlw	-11
 28826  01F3A6  36E3               	rlcf	plusw1,f,c
 28827  01F3A8  0EF6               	movlw	-10
 28828  01F3AA  36E3               	rlcf	plusw1,f,c
 28829                           
 28830                           ;stkvar	_counter @ sp[(-1)+0]
 28831  01F3AC  0EFF               	movlw	-1
 28832  01F3AE                     L29:
 28833  01F3AE  2AE3               	incf	plusw1,f,c
 28834                           
 28835                           ;stkvar	_divisor @ sp[(-1)+-16]
 28836  01F3B0  0EF6               	movlw	-10
 28837  01F3B2  AEE3               	btfss	plusw1,7,c
 28838  01F3B4  D7EA               	goto	l10842
 28839  01F3B6                     u9210:
 28840                           
 28841                           ;stkvar	_divisor @ sp[(-1)+-16]
 28842                           ;stkvar	_dividend @ sp[(-1)+-8]
 28843  01F3B6  50E1               	movf	fsr1l,w,c
 28844  01F3B8  0FF7               	addlw	-9
 28845  01F3BA  6ED9               	movwf	fsr2l,c
 28846  01F3BC  50E2               	movf	fsr1h,w,c
 28847  01F3BE  6EDA               	movwf	fsr2h,c
 28848  01F3C0  0EFF               	movlw	255
 28849  01F3C2  22DA               	addwfc	fsr2h,f,c
 28850  01F3C4  0EEF               	movlw	-17
 28851  01F3C6  50E3               	movf	plusw1,w,c
 28852  01F3C8  5CDE               	subwf	postinc2,w,c
 28853  01F3CA  0EF0               	movlw	-16
 28854  01F3CC  50E3               	movf	plusw1,w,c
 28855  01F3CE  58DE               	subwfb	postinc2,w,c
 28856  01F3D0  0EF1               	movlw	-15
 28857  01F3D2  50E3               	movf	plusw1,w,c
 28858  01F3D4  58DE               	subwfb	postinc2,w,c
 28859  01F3D6  0EF2               	movlw	-14
 28860  01F3D8  50E3               	movf	plusw1,w,c
 28861  01F3DA  58DE               	subwfb	postinc2,w,c
 28862  01F3DC  0EF3               	movlw	-13
 28863  01F3DE  50E3               	movf	plusw1,w,c
 28864  01F3E0  58DE               	subwfb	postinc2,w,c
 28865  01F3E2  0EF4               	movlw	-12
 28866  01F3E4  50E3               	movf	plusw1,w,c
 28867  01F3E6  58DE               	subwfb	postinc2,w,c
 28868  01F3E8  0EF5               	movlw	-11
 28869  01F3EA  50E3               	movf	plusw1,w,c
 28870  01F3EC  58DE               	subwfb	postinc2,w,c
 28871  01F3EE  0EF6               	movlw	-10
 28872  01F3F0  50E3               	movf	plusw1,w,c
 28873  01F3F2  58DE               	subwfb	postinc2,w,c
 28874  01F3F4  A0D8               	btfss	status,0,c
 28875  01F3F6  D01F               	goto	l10850
 28876                           
 28877                           ;stkvar	_divisor @ sp[(-1)+-16]
 28878                           ;stkvar	_dividend @ sp[(-1)+-8]
 28879  01F3F8  50E1               	movf	fsr1l,w,c
 28880  01F3FA  0FF7               	addlw	-9
 28881  01F3FC  6ED9               	movwf	fsr2l,c
 28882  01F3FE  50E2               	movf	fsr1h,w,c
 28883  01F400  6EDA               	movwf	fsr2h,c
 28884  01F402  0EFF               	movlw	255
 28885  01F404  22DA               	addwfc	fsr2h,f,c
 28886  01F406  0EEF               	movlw	-17
 28887  01F408  50E3               	movf	plusw1,w,c
 28888  01F40A  5EDE               	subwf	postinc2,f,c
 28889  01F40C  0EF0               	movlw	-16
 28890  01F40E  50E3               	movf	plusw1,w,c
 28891  01F410  5ADE               	subwfb	postinc2,f,c
 28892  01F412  0EF1               	movlw	-15
 28893  01F414  50E3               	movf	plusw1,w,c
 28894  01F416  5ADE               	subwfb	postinc2,f,c
 28895  01F418  0EF2               	movlw	-14
 28896  01F41A  50E3               	movf	plusw1,w,c
 28897  01F41C  5ADE               	subwfb	postinc2,f,c
 28898  01F41E  0EF3               	movlw	-13
 28899  01F420  50E3               	movf	plusw1,w,c
 28900  01F422  5ADE               	subwfb	postinc2,f,c
 28901  01F424  0EF4               	movlw	-12
 28902  01F426  50E3               	movf	plusw1,w,c
 28903  01F428  5ADE               	subwfb	postinc2,f,c
 28904  01F42A  0EF5               	movlw	-11
 28905  01F42C  50E3               	movf	plusw1,w,c
 28906  01F42E  5ADE               	subwfb	postinc2,f,c
 28907  01F430  0EF6               	movlw	-10
 28908  01F432  50E3               	movf	plusw1,w,c
 28909  01F434  5ADE               	subwfb	postinc2,f,c
 28910  01F436                     l10850:
 28911                           
 28912                           ;stkvar	_divisor @ sp[(-1)+-16]
 28913  01F436  90D8               	bcf	status,0,c
 28914  01F438  0EF6               	movlw	-10
 28915  01F43A  32E3               	rrcf	plusw1,f,c
 28916  01F43C  0EF5               	movlw	-11
 28917  01F43E  32E3               	rrcf	plusw1,f,c
 28918  01F440  0EF4               	movlw	-12
 28919  01F442  32E3               	rrcf	plusw1,f,c
 28920  01F444  0EF3               	movlw	-13
 28921  01F446  32E3               	rrcf	plusw1,f,c
 28922  01F448  0EF2               	movlw	-14
 28923  01F44A  32E3               	rrcf	plusw1,f,c
 28924  01F44C  0EF1               	movlw	-15
 28925  01F44E  32E3               	rrcf	plusw1,f,c
 28926  01F450  0EF0               	movlw	-16
 28927  01F452  32E3               	rrcf	plusw1,f,c
 28928  01F454  0EEF               	movlw	-17
 28929  01F456  32E3               	rrcf	plusw1,f,c
 28930                           
 28931                           ;stkvar	_counter @ sp[(-1)+0]
 28932  01F458  0EFF               	movlw	-1
 28933  01F45A  50E3               	movf	plusw1,w,c
 28934  01F45C  6E2A               	movwf	btemp^0,c
 28935  01F45E  0E01               	movlw	1
 28936  01F460  5E2A               	subwf	btemp^0,f,c
 28937  01F462  0EFF               	movlw	-1
 28938  01F464  0060  F0AB  FFE3   	movff	btemp,plusw1
 28939  01F46A  A4D8               	btfss	status,2,c
 28940  01F46C  D7A4               	goto	u9210
 28941  01F46E                     u9230:
 28942                           
 28943                           ;stkvar	_dividend @ sp[(-1)+-8]
 28944  01F46E  0EF7               	movlw	247
 28945  01F470  24E1               	addwf	fsr1l,w,c
 28946  01F472  6ED9               	movwf	fsr2l,c
 28947  01F474  0EFF               	movlw	255
 28948  01F476  20E2               	addwfc	fsr1h,w,c
 28949  01F478  6EDA               	movwf	fsr2h,c
 28950                           
 28951                           ;stkvar	?___lomod @ sp[(-1)+-8]
 28952  01F47A  0E08               	movlw	8
 28953  01F47C  6E2A               	movwf	btemp^0,c
 28954  01F47E  0EF7               	movlw	-9
 28955  01F480                     us924999:
 28956  01F480  006F FF7B FFE3     	movff	postinc2,plusw1
 28957  01F486  28E8               	incf	wreg,w,c
 28958  01F488  2E2A               	decfsz	btemp^0,f,c
 28959  01F48A  D7FA               	bra	us924999
 28960                           
 28961                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 28962  01F48C  52E5               	movf	postdec1,f,c
 28963  01F48E  0012               	return		;funcret
 28964  01F490                     __end_of___lomod:
 28965                           	opt callstack 0
 28966                           
 28967 ;; *************** function ___lodiv *****************
 28968 ;; Defined at:
 28969 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 28970 ;; Parameters:    Size  Location     Type
 28971 ;;  dividend        8  [STACK] unsigned long long 
 28972 ;;  divisor         8  [STACK] unsigned long long 
 28973 ;; Auto vars:     Size  Location     Type
 28974 ;;  quotient        8  [STACK] unsigned long long 
 28975 ;;  counter         1  [STACK] unsigned char 
 28976 ;; Return value:  Size  Location     Type
 28977 ;;                  8  [STACK] unsigned long long 
 28978 ;; Registers used:
 28979 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 28980 ;; Tracked objects:
 28981 ;;		On entry : 0/3
 28982 ;;		On exit  : 0/0
 28983 ;;		Unchanged: 0/0
 28984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28989 ;;Total ram usage:        0 bytes
 28990 ;; Hardware stack levels used:    1
 28991 ;; Hardware stack levels required when called:   15
 28992 ;; This function calls:
 28993 ;;		Nothing
 28994 ;; This function is called by:
 28995 ;;		_utoa
 28996 ;; This function uses a reentrant model
 28997 ;;
 28998                           
 28999                           	psect	text100
 29000  01E420                     __ptext100:
 29001                           	opt callstack 0
 29002  01E420                     ___lodiv:
 29003                           	opt callstack 0
 29004                           
 29005                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 29006  01E420  0E09               	movlw	9
 29007  01E422  26E1               	addwf	fsr1l,f,c
 29008  01E424  0E00               	movlw	0
 29009  01E426  22E2               	addwfc	fsr1h,f,c
 29010                           
 29011                           ;stkvar	_quotient @ sp[(-9)+0]
 29012                           
 29013                           ;incstack = 0
 29014 ;; hardware stack exceeded
 29015  01E428  0E07               	movlw	7
 29016  01E42A  6E2A               	movwf	btemp^0,c
 29017  01E42C  0EF7               	movlw	-9
 29018  01E42E                     u9141:
 29019  01E42E  6AE3               	clrf	plusw1,c
 29020  01E430  2AE8               	incf	wreg,f,c
 29021  01E432  062A               	decf	btemp^0,f,c
 29022  01E434  E2FC               	bc	u9141
 29023                           
 29024                           ;stkvar	_divisor @ sp[(-9)+-16]
 29025  01E436  0EE7               	movlw	-25
 29026  01E438  50E3               	movf	plusw1,w,c
 29027  01E43A  E116               	bnz	u9150
 29028  01E43C  0EE8               	movlw	-24
 29029  01E43E  50E3               	movf	plusw1,w,c
 29030  01E440  E113               	bnz	u9150
 29031  01E442  0EE9               	movlw	-23
 29032  01E444  50E3               	movf	plusw1,w,c
 29033  01E446  E110               	bnz	u9150
 29034  01E448  0EEA               	movlw	-22
 29035  01E44A  50E3               	movf	plusw1,w,c
 29036  01E44C  E10D               	bnz	u9150
 29037  01E44E  0EEB               	movlw	-21
 29038  01E450  50E3               	movf	plusw1,w,c
 29039  01E452  E10A               	bnz	u9150
 29040  01E454  0EEC               	movlw	-20
 29041  01E456  50E3               	movf	plusw1,w,c
 29042  01E458  E107               	bnz	u9150
 29043  01E45A  0EED               	movlw	-19
 29044  01E45C  50E3               	movf	plusw1,w,c
 29045  01E45E  E104               	bnz	u9150
 29046  01E460  0EEE               	movlw	-18
 29047  01E462  50E3               	movf	plusw1,w,c
 29048  01E464  B4D8               	btfsc	status,2,c
 29049  01E466  D088               	goto	u9180
 29050  01E468                     u9150:
 29051                           
 29052                           ;stkvar	_counter @ sp[(-9)+8]
 29053  01E468  0EFF               	movlw	-1
 29054  01E46A  6AE3               	clrf	plusw1,c
 29055  01E46C  D012               	goto	L30
 29056  01E46E                     l10818:
 29057                           
 29058                           ;stkvar	_divisor @ sp[(-9)+-16]
 29059  01E46E  90D8               	bcf	status,0,c
 29060  01E470  0EE7               	movlw	-25
 29061  01E472  36E3               	rlcf	plusw1,f,c
 29062  01E474  0EE8               	movlw	-24
 29063  01E476  36E3               	rlcf	plusw1,f,c
 29064  01E478  0EE9               	movlw	-23
 29065  01E47A  36E3               	rlcf	plusw1,f,c
 29066  01E47C  0EEA               	movlw	-22
 29067  01E47E  36E3               	rlcf	plusw1,f,c
 29068  01E480  0EEB               	movlw	-21
 29069  01E482  36E3               	rlcf	plusw1,f,c
 29070  01E484  0EEC               	movlw	-20
 29071  01E486  36E3               	rlcf	plusw1,f,c
 29072  01E488  0EED               	movlw	-19
 29073  01E48A  36E3               	rlcf	plusw1,f,c
 29074  01E48C  0EEE               	movlw	-18
 29075  01E48E  36E3               	rlcf	plusw1,f,c
 29076                           
 29077                           ;stkvar	_counter @ sp[(-9)+8]
 29078  01E490  0EFF               	movlw	-1
 29079  01E492                     L30:
 29080  01E492  2AE3               	incf	plusw1,f,c
 29081                           
 29082                           ;stkvar	_divisor @ sp[(-9)+-16]
 29083  01E494  0EEE               	movlw	-18
 29084  01E496  AEE3               	btfss	plusw1,7,c
 29085  01E498  D7EA               	goto	l10818
 29086  01E49A                     u9160:
 29087                           
 29088                           ;stkvar	_quotient @ sp[(-9)+0]
 29089  01E49A  90D8               	bcf	status,0,c
 29090  01E49C  0EF7               	movlw	-9
 29091  01E49E  36E3               	rlcf	plusw1,f,c
 29092  01E4A0  0EF8               	movlw	-8
 29093  01E4A2  36E3               	rlcf	plusw1,f,c
 29094  01E4A4  0EF9               	movlw	-7
 29095  01E4A6  36E3               	rlcf	plusw1,f,c
 29096  01E4A8  0EFA               	movlw	-6
 29097  01E4AA  36E3               	rlcf	plusw1,f,c
 29098  01E4AC  0EFB               	movlw	-5
 29099  01E4AE  36E3               	rlcf	plusw1,f,c
 29100  01E4B0  0EFC               	movlw	-4
 29101  01E4B2  36E3               	rlcf	plusw1,f,c
 29102  01E4B4  0EFD               	movlw	-3
 29103  01E4B6  36E3               	rlcf	plusw1,f,c
 29104  01E4B8  0EFE               	movlw	-2
 29105  01E4BA  36E3               	rlcf	plusw1,f,c
 29106                           
 29107                           ;stkvar	_divisor @ sp[(-9)+-16]
 29108                           ;stkvar	_dividend @ sp[(-9)+-8]
 29109  01E4BC  50E1               	movf	fsr1l,w,c
 29110  01E4BE  0FEF               	addlw	-17
 29111  01E4C0  6ED9               	movwf	fsr2l,c
 29112  01E4C2  50E2               	movf	fsr1h,w,c
 29113  01E4C4  6EDA               	movwf	fsr2h,c
 29114  01E4C6  0EFF               	movlw	255
 29115  01E4C8  22DA               	addwfc	fsr2h,f,c
 29116  01E4CA  0EE7               	movlw	-25
 29117  01E4CC  50E3               	movf	plusw1,w,c
 29118  01E4CE  5CDE               	subwf	postinc2,w,c
 29119  01E4D0  0EE8               	movlw	-24
 29120  01E4D2  50E3               	movf	plusw1,w,c
 29121  01E4D4  58DE               	subwfb	postinc2,w,c
 29122  01E4D6  0EE9               	movlw	-23
 29123  01E4D8  50E3               	movf	plusw1,w,c
 29124  01E4DA  58DE               	subwfb	postinc2,w,c
 29125  01E4DC  0EEA               	movlw	-22
 29126  01E4DE  50E3               	movf	plusw1,w,c
 29127  01E4E0  58DE               	subwfb	postinc2,w,c
 29128  01E4E2  0EEB               	movlw	-21
 29129  01E4E4  50E3               	movf	plusw1,w,c
 29130  01E4E6  58DE               	subwfb	postinc2,w,c
 29131  01E4E8  0EEC               	movlw	-20
 29132  01E4EA  50E3               	movf	plusw1,w,c
 29133  01E4EC  58DE               	subwfb	postinc2,w,c
 29134  01E4EE  0EED               	movlw	-19
 29135  01E4F0  50E3               	movf	plusw1,w,c
 29136  01E4F2  58DE               	subwfb	postinc2,w,c
 29137  01E4F4  0EEE               	movlw	-18
 29138  01E4F6  50E3               	movf	plusw1,w,c
 29139  01E4F8  58DE               	subwfb	postinc2,w,c
 29140  01E4FA  A0D8               	btfss	status,0,c
 29141  01E4FC  D021               	goto	l10830
 29142                           
 29143                           ;stkvar	_divisor @ sp[(-9)+-16]
 29144                           ;stkvar	_dividend @ sp[(-9)+-8]
 29145  01E4FE  50E1               	movf	fsr1l,w,c
 29146  01E500  0FEF               	addlw	-17
 29147  01E502  6ED9               	movwf	fsr2l,c
 29148  01E504  50E2               	movf	fsr1h,w,c
 29149  01E506  6EDA               	movwf	fsr2h,c
 29150  01E508  0EFF               	movlw	255
 29151  01E50A  22DA               	addwfc	fsr2h,f,c
 29152  01E50C  0EE7               	movlw	-25
 29153  01E50E  50E3               	movf	plusw1,w,c
 29154  01E510  5EDE               	subwf	postinc2,f,c
 29155  01E512  0EE8               	movlw	-24
 29156  01E514  50E3               	movf	plusw1,w,c
 29157  01E516  5ADE               	subwfb	postinc2,f,c
 29158  01E518  0EE9               	movlw	-23
 29159  01E51A  50E3               	movf	plusw1,w,c
 29160  01E51C  5ADE               	subwfb	postinc2,f,c
 29161  01E51E  0EEA               	movlw	-22
 29162  01E520  50E3               	movf	plusw1,w,c
 29163  01E522  5ADE               	subwfb	postinc2,f,c
 29164  01E524  0EEB               	movlw	-21
 29165  01E526  50E3               	movf	plusw1,w,c
 29166  01E528  5ADE               	subwfb	postinc2,f,c
 29167  01E52A  0EEC               	movlw	-20
 29168  01E52C  50E3               	movf	plusw1,w,c
 29169  01E52E  5ADE               	subwfb	postinc2,f,c
 29170  01E530  0EED               	movlw	-19
 29171  01E532  50E3               	movf	plusw1,w,c
 29172  01E534  5ADE               	subwfb	postinc2,f,c
 29173  01E536  0EEE               	movlw	-18
 29174  01E538  50E3               	movf	plusw1,w,c
 29175  01E53A  5ADE               	subwfb	postinc2,f,c
 29176                           
 29177                           ;stkvar	_quotient @ sp[(-9)+0]
 29178  01E53C  0EF7               	movlw	-9
 29179  01E53E  80E3               	bsf	plusw1,0,c
 29180  01E540                     l10830:
 29181                           
 29182                           ;stkvar	_divisor @ sp[(-9)+-16]
 29183  01E540  90D8               	bcf	status,0,c
 29184  01E542  0EEE               	movlw	-18
 29185  01E544  32E3               	rrcf	plusw1,f,c
 29186  01E546  0EED               	movlw	-19
 29187  01E548  32E3               	rrcf	plusw1,f,c
 29188  01E54A  0EEC               	movlw	-20
 29189  01E54C  32E3               	rrcf	plusw1,f,c
 29190  01E54E  0EEB               	movlw	-21
 29191  01E550  32E3               	rrcf	plusw1,f,c
 29192  01E552  0EEA               	movlw	-22
 29193  01E554  32E3               	rrcf	plusw1,f,c
 29194  01E556  0EE9               	movlw	-23
 29195  01E558  32E3               	rrcf	plusw1,f,c
 29196  01E55A  0EE8               	movlw	-24
 29197  01E55C  32E3               	rrcf	plusw1,f,c
 29198  01E55E  0EE7               	movlw	-25
 29199  01E560  32E3               	rrcf	plusw1,f,c
 29200                           
 29201                           ;stkvar	_counter @ sp[(-9)+8]
 29202  01E562  0EFF               	movlw	-1
 29203  01E564  50E3               	movf	plusw1,w,c
 29204  01E566  6E2A               	movwf	btemp^0,c
 29205  01E568  0E01               	movlw	1
 29206  01E56A  5E2A               	subwf	btemp^0,f,c
 29207  01E56C  0EFF               	movlw	-1
 29208  01E56E  0060  F0AB  FFE3   	movff	btemp,plusw1
 29209  01E574  A4D8               	btfss	status,2,c
 29210  01E576  D791               	goto	u9160
 29211  01E578                     u9180:
 29212                           
 29213                           ;stkvar	_quotient @ sp[(-9)+0]
 29214  01E578  0EF7               	movlw	247
 29215  01E57A  24E1               	addwf	fsr1l,w,c
 29216  01E57C  6ED9               	movwf	fsr2l,c
 29217  01E57E  0EFF               	movlw	255
 29218  01E580  20E2               	addwfc	fsr1h,w,c
 29219  01E582  6EDA               	movwf	fsr2h,c
 29220                           
 29221                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 29222  01E584  0E08               	movlw	8
 29223  01E586  6E2A               	movwf	btemp^0,c
 29224  01E588  0EEF               	movlw	-17
 29225  01E58A                     us919999:
 29226  01E58A  006F FF7B FFE3     	movff	postinc2,plusw1
 29227  01E590  28E8               	incf	wreg,w,c
 29228  01E592  2E2A               	decfsz	btemp^0,f,c
 29229  01E594  D7FA               	bra	us919999
 29230                           
 29231                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 29232  01E596  0EF7               	movlw	247
 29233  01E598  26E1               	addwf	fsr1l,f,c
 29234  01E59A  0EFF               	movlw	255
 29235  01E59C  22E2               	addwfc	fsr1h,f,c
 29236  01E59E  0012               	return		;funcret
 29237  01E5A0                     __end_of___lodiv:
 29238                           	opt callstack 0
 29239                           
 29240 ;; *************** function _strncmp *****************
 29241 ;; Defined at:
 29242 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 29243 ;; Parameters:    Size  Location     Type
 29244 ;;  _l              2  [STACK] PTR const unsigned char 
 29245 ;;		 -> ct(3), STR_95(127), STR_93(3), STR_92(3), 
 29246 ;;		 -> STR_91(21), STR_90(21), STR_89(21), STR_88(21), 
 29247 ;;		 -> STR_87(21), STR_86(21), STR_85(26), STR_84(15), 
 29248 ;;		 -> STR_83(15), STR_82(15), STR_81(15), STR_80(10), 
 29249 ;;		 -> STR_79(10), STR_78(19), STR_77(19), STR_74(3), 
 29250 ;;		 -> STR_73(14), STR_72(28), STR_71(28), STR_70(28), 
 29251 ;;		 -> STR_69(22), STR_68(22), STR_67(22), STR_66(22), 
 29252 ;;		 -> STR_65(22), STR_64(22), STR_63(22), STR_62(22), 
 29253 ;;		 -> STR_61(22), STR_60(21), STR_59(22), STR_58(22), 
 29254 ;;		 -> STR_57(22), STR_56(22), STR_55(22), STR_54(22), 
 29255 ;;		 -> STR_53(24), STR_52(24), STR_51(24), STR_50(30), 
 29256 ;;		 -> STR_49(24), STR_48(24), STR_47(23), STR_46(23), 
 29257 ;;		 -> STR_45(23), STR_44(23), STR_43(23), STR_42(23), 
 29258 ;;		 -> STR_41(23), STR_40(23), STR_39(23), STR_38(23), 
 29259 ;;		 -> STR_37(23), STR_36(23), STR_35(18), STR_34(17), 
 29260 ;;		 -> STR_33(17), STR_32(22), STR_31(22), STR_30(22), 
 29261 ;;		 -> STR_29(14), STR_28(14), STR_27(27), STR_26(27), 
 29262 ;;		 -> STR_25(23), STR_24(22), STR_23(22), STR_22(22), 
 29263 ;;		 -> STR_21(22), STR_20(23), STR_19(23), STR_18(23), 
 29264 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 29265 ;;		 -> STR_13(21), STR_12(21), STR_11(21), STR_10(21), 
 29266 ;;		 -> STR_9(21), STR_8(21), STR_7(21), STR_6(21), 
 29267 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 29268 ;;  _r              2  [STACK] PTR const unsigned char 
 29269 ;;		 -> STR_129(3), STR_125(3), STR_120(3), STR_115(3), 
 29270 ;;		 -> STR_110(3), STR_106(3), 
 29271 ;;  n               2  [STACK] unsigned int 
 29272 ;; Auto vars:     Size  Location     Type
 29273 ;;  r               2  [STACK] PTR const unsigned char 
 29274 ;;		 -> STR_129(3), STR_125(3), STR_120(3), STR_115(3), 
 29275 ;;		 -> STR_110(3), STR_106(3), 
 29276 ;;  l               2  [STACK] PTR const unsigned char 
 29277 ;;		 -> ct(3), STR_95(127), STR_93(3), STR_92(3), 
 29278 ;;		 -> STR_91(21), STR_90(21), STR_89(21), STR_88(21), 
 29279 ;;		 -> STR_87(21), STR_86(21), STR_85(26), STR_84(15), 
 29280 ;;		 -> STR_83(15), STR_82(15), STR_81(15), STR_80(10), 
 29281 ;;		 -> STR_79(10), STR_78(19), STR_77(19), STR_74(3), 
 29282 ;;		 -> STR_73(14), STR_72(28), STR_71(28), STR_70(28), 
 29283 ;;		 -> STR_69(22), STR_68(22), STR_67(22), STR_66(22), 
 29284 ;;		 -> STR_65(22), STR_64(22), STR_63(22), STR_62(22), 
 29285 ;;		 -> STR_61(22), STR_60(21), STR_59(22), STR_58(22), 
 29286 ;;		 -> STR_57(22), STR_56(22), STR_55(22), STR_54(22), 
 29287 ;;		 -> STR_53(24), STR_52(24), STR_51(24), STR_50(30), 
 29288 ;;		 -> STR_49(24), STR_48(24), STR_47(23), STR_46(23), 
 29289 ;;		 -> STR_45(23), STR_44(23), STR_43(23), STR_42(23), 
 29290 ;;		 -> STR_41(23), STR_40(23), STR_39(23), STR_38(23), 
 29291 ;;		 -> STR_37(23), STR_36(23), STR_35(18), STR_34(17), 
 29292 ;;		 -> STR_33(17), STR_32(22), STR_31(22), STR_30(22), 
 29293 ;;		 -> STR_29(14), STR_28(14), STR_27(27), STR_26(27), 
 29294 ;;		 -> STR_25(23), STR_24(22), STR_23(22), STR_22(22), 
 29295 ;;		 -> STR_21(22), STR_20(23), STR_19(23), STR_18(23), 
 29296 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 29297 ;;		 -> STR_13(21), STR_12(21), STR_11(21), STR_10(21), 
 29298 ;;		 -> STR_9(21), STR_8(21), STR_7(21), STR_6(21), 
 29299 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 29300 ;; Return value:  Size  Location     Type
 29301 ;;                  2  [STACK] int 
 29302 ;; Registers used:
 29303 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 29304 ;; Tracked objects:
 29305 ;;		On entry : 0/0
 29306 ;;		On exit  : 0/0
 29307 ;;		Unchanged: 0/0
 29308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29313 ;;Total ram usage:        0 bytes
 29314 ;; Hardware stack levels used:    1
 29315 ;; Hardware stack levels required when called:   15
 29316 ;; This function calls:
 29317 ;;		Nothing
 29318 ;; This function is called by:
 29319 ;;		_vfpfcnvrt
 29320 ;; This function uses a reentrant model
 29321 ;;
 29322                           
 29323                           	psect	text101
 29324  01D066                     __ptext101:
 29325                           	opt callstack 0
 29326  01D066                     _strncmp:
 29327                           	opt callstack 0
 29328                           
 29329                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29330  01D066  52E6               	movf	postinc1,f,c
 29331  01D068  52E6               	movf	postinc1,f,c
 29332  01D06A  52E6               	movf	postinc1,f,c
 29333  01D06C  52E6               	movf	postinc1,f,c
 29334                           
 29335                           ;stkvar	__l @ sp[(-4)+-2]
 29336                           
 29337                           ;incstack = 0
 29338 ;; hardware stack exceeded
 29339  01D06E  0EFA               	movlw	-6
 29340  01D070  006F FF8C  F034    	movff	plusw1,btemp+10
 29341  01D076  0EFB               	movlw	-5
 29342  01D078  006F FF8C  F035    	movff	plusw1,btemp+11
 29343                           
 29344                           ;stkvar	_l @ sp[(-4)+2]
 29345  01D07E  0EFF               	movlw	-1
 29346  01D080  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29347  01D086  0EFE               	movlw	-2
 29348  01D088  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29349                           
 29350                           ;stkvar	__r @ sp[(-4)+-4]
 29351  01D08E  0EF8               	movlw	-8
 29352  01D090  006F FF8C  F034    	movff	plusw1,btemp+10
 29353  01D096  0EF9               	movlw	-7
 29354  01D098  006F FF8C  F035    	movff	plusw1,btemp+11
 29355                           
 29356                           ;stkvar	_r @ sp[(-4)+0]
 29357  01D09E  0EFD               	movlw	-3
 29358  01D0A0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29359  01D0A6  0EFC               	movlw	-4
 29360  01D0A8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29361                           
 29362                           ;stkvar	_n @ sp[(-4)+-6]
 29363  01D0AE  0EF6               	movlw	-10
 29364  01D0B0  006F FF8C  F02A    	movff	plusw1,btemp
 29365  01D0B6  0E01               	movlw	1
 29366  01D0B8  5E2A               	subwf	btemp^0,f,c
 29367  01D0BA  0EF6               	movlw	-10
 29368  01D0BC  0060  F0AB  FFE3   	movff	btemp,plusw1
 29369  01D0C2  0EF7               	movlw	-9
 29370  01D0C4  006F FF8C  F02A    	movff	plusw1,btemp
 29371  01D0CA  0E00               	movlw	0
 29372  01D0CC  5A2A               	subwfb	btemp^0,f,c
 29373  01D0CE  0EF7               	movlw	-9
 29374  01D0D0  0060  F0AB  FFE3   	movff	btemp,plusw1
 29375  01D0D6  0EF6               	movlw	-10
 29376  01D0D8  28E3               	incf	plusw1,w,c
 29377  01D0DA  E13F               	bnz	l11518
 29378  01D0DC  0EF7               	movlw	-9
 29379  01D0DE  28E3               	incf	plusw1,w,c
 29380  01D0E0  A4D8               	btfss	status,2,c
 29381  01D0E2  D03B               	goto	l11518
 29382  01D0E4  0E00               	movlw	0
 29383  01D0E6  6E2A               	movwf	btemp^0,c
 29384  01D0E8  0E00               	movlw	0
 29385  01D0EA  6E2B               	movwf	(btemp+1)^0,c
 29386  01D0EC  D0C7               	goto	l3814
 29387  01D0EE                     l11516:
 29388                           
 29389                           ;stkvar	_l @ sp[(-4)+2]
 29390  01D0EE  0EFE               	movlw	-2
 29391  01D0F0  50E3               	movf	plusw1,w,c
 29392  01D0F2  0F01               	addlw	1
 29393  01D0F4  6E2A               	movwf	btemp^0,c
 29394  01D0F6  0EFE               	movlw	-2
 29395  01D0F8  0060  F0AB  FFE3   	movff	btemp,plusw1
 29396  01D0FE  6A2A               	clrf	btemp^0,c
 29397  01D100  0EFF               	movlw	-1
 29398  01D102  50E3               	movf	plusw1,w,c
 29399  01D104  202A               	addwfc	btemp^0,w,c
 29400  01D106  6E2A               	movwf	btemp^0,c
 29401  01D108  0EFF               	movlw	-1
 29402  01D10A  0060  F0AB  FFE3   	movff	btemp,plusw1
 29403                           
 29404                           ;stkvar	_r @ sp[(-4)+0]
 29405  01D110  0EFC               	movlw	-4
 29406  01D112  50E3               	movf	plusw1,w,c
 29407  01D114  0F01               	addlw	1
 29408  01D116  6E2A               	movwf	btemp^0,c
 29409  01D118  0EFC               	movlw	-4
 29410  01D11A  0060  F0AB  FFE3   	movff	btemp,plusw1
 29411  01D120  6A2A               	clrf	btemp^0,c
 29412  01D122  0EFD               	movlw	-3
 29413  01D124  50E3               	movf	plusw1,w,c
 29414  01D126  202A               	addwfc	btemp^0,w,c
 29415  01D128  6E2A               	movwf	btemp^0,c
 29416  01D12A  0EFD               	movlw	-3
 29417  01D12C  0060  F0AB  FFE3   	movff	btemp,plusw1
 29418                           
 29419                           ;stkvar	_n @ sp[(-4)+-6]
 29420  01D132  0EF6               	movlw	-10
 29421  01D134  006F FF8C  F02A    	movff	plusw1,btemp
 29422  01D13A  0E01               	movlw	1
 29423  01D13C  5E2A               	subwf	btemp^0,f,c
 29424  01D13E  0EF6               	movlw	-10
 29425  01D140  0060  F0AB  FFE3   	movff	btemp,plusw1
 29426  01D146  0EF7               	movlw	-9
 29427  01D148  006F FF8C  F02A    	movff	plusw1,btemp
 29428  01D14E  0E00               	movlw	0
 29429  01D150  5A2A               	subwfb	btemp^0,f,c
 29430  01D152  0EF7               	movlw	-9
 29431  01D154  0060  F0AB  FFE3   	movff	btemp,plusw1
 29432  01D15A                     l11518:
 29433                           
 29434                           ;stkvar	_l @ sp[(-4)+2]
 29435  01D15A  0EFE               	movlw	-2
 29436  01D15C  006F FF8F FFF6     	movff	plusw1,tblptrl
 29437  01D162  0EFF               	movlw	-1
 29438  01D164  006F FF8F FFF7     	movff	plusw1,tblptrh
 29439  01D16A  0E00               	movlw	low (__mediumconst shr (0+16))
 29440  01D16C  6EF8               	movwf	tblptru,c
 29441  01D16E  0E1F               	movlw	(high __ramtop+-1)
 29442  01D170  64F7               	cpfsgt	tblptrh,c
 29443  01D172  D003               	bra	u10477
 29444  01D174  0008               	tblrd		*
 29445  01D176  50F5               	movf	tablat,w,c
 29446  01D178  D007               	bra	u10470
 29447  01D17A                     u10477:
 29448  01D17A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 29449  01D180  006F FFDF FFEA     	movff	tblptrh,fsr0h
 29450  01D186  50EF               	movf	indf0,w,c
 29451  01D188                     u10470:
 29452  01D188  0900               	iorlw	0
 29453  01D18A  B4D8               	btfsc	status,2,c
 29454  01D18C  D04A               	goto	u10510
 29455                           
 29456                           ;stkvar	_r @ sp[(-4)+0]
 29457  01D18E  50E1               	movf	fsr1l,w,c
 29458  01D190  0FFC               	addlw	-4
 29459  01D192  6ED9               	movwf	fsr2l,c
 29460  01D194  50E2               	movf	fsr1h,w,c
 29461  01D196  6EDA               	movwf	fsr2h,c
 29462  01D198  0EFF               	movlw	255
 29463  01D19A  22DA               	addwfc	fsr2h,f,c
 29464  01D19C  006F FF7B FFF6     	movff	postinc2,tblptrl
 29465  01D1A2  006F FF77 FFF7     	movff	postdec2,tblptrh
 29466  01D1A8                     	if	0	;tblptru may be non-zero
 29467  01D1A8                     	endif
 29468  01D1A8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 29469  01D1A8  0E00               	movlw	low (__mediumconst shr (0+16))
 29470  01D1AA  6EF8               	movwf	tblptru,c
 29471  01D1AC                     	endif
 29472  01D1AC  0008               	tblrd		*
 29473  01D1AE  50F5               	movf	tablat,w,c
 29474  01D1B0  0900               	iorlw	0
 29475  01D1B2  B4D8               	btfsc	status,2,c
 29476  01D1B4  D036               	goto	u10510
 29477                           
 29478                           ;stkvar	_n @ sp[(-4)+-6]
 29479  01D1B6  0EF6               	movlw	-10
 29480  01D1B8  006F FF8C  F02A    	movff	plusw1,btemp
 29481  01D1BE  0EF7               	movlw	-9
 29482  01D1C0  50E3               	movf	plusw1,w,c
 29483  01D1C2  102A               	iorwf	btemp^0,w,c
 29484  01D1C4  B4D8               	btfsc	status,2,c
 29485  01D1C6  D02D               	goto	u10510
 29486                           
 29487                           ;stkvar	_r @ sp[(-4)+0]
 29488  01D1C8  50E1               	movf	fsr1l,w,c
 29489  01D1CA  0FFC               	addlw	-4
 29490  01D1CC  6ED9               	movwf	fsr2l,c
 29491  01D1CE  50E2               	movf	fsr1h,w,c
 29492  01D1D0  6EDA               	movwf	fsr2h,c
 29493  01D1D2  0EFF               	movlw	255
 29494  01D1D4  22DA               	addwfc	fsr2h,f,c
 29495  01D1D6  006F FF7B FFF6     	movff	postinc2,tblptrl
 29496  01D1DC  006F FF77 FFF7     	movff	postdec2,tblptrh
 29497  01D1E2                     	if	0	;tblptru may be non-zero
 29498  01D1E2                     	endif
 29499  01D1E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 29500  01D1E2  0E00               	movlw	low (__mediumconst shr (0+16))
 29501  01D1E4  6EF8               	movwf	tblptru,c
 29502  01D1E6                     	endif
 29503  01D1E6  0008               	tblrd		*
 29504  01D1E8  006F FFD4  F035    	movff	tablat,btemp+11
 29505                           
 29506                           ;stkvar	_l @ sp[(-4)+2]
 29507  01D1EE  0EFE               	movlw	-2
 29508  01D1F0  006F FF8F FFF6     	movff	plusw1,tblptrl
 29509  01D1F6  0EFF               	movlw	-1
 29510  01D1F8  006F FF8F FFF7     	movff	plusw1,tblptrh
 29511  01D1FE  0E00               	movlw	low (__mediumconst shr (0+16))
 29512  01D200  6EF8               	movwf	tblptru,c
 29513  01D202  0E1F               	movlw	(high __ramtop+-1)
 29514  01D204  64F7               	cpfsgt	tblptrh,c
 29515  01D206  D003               	bra	u10517
 29516  01D208  0008               	tblrd		*
 29517  01D20A  50F5               	movf	tablat,w,c
 29518  01D20C  D007               	bra	u10515
 29519  01D20E                     u10517:
 29520  01D20E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 29521  01D214  006F FFDF FFEA     	movff	tblptrh,fsr0h
 29522  01D21A  50EF               	movf	indf0,w,c
 29523  01D21C                     u10515:
 29524  01D21C  1835               	xorwf	(btemp+11)^0,w,c
 29525  01D21E  B4D8               	btfsc	status,2,c
 29526  01D220  D766               	goto	l11516
 29527  01D222                     u10510:
 29528                           
 29529                           ;stkvar	_l @ sp[(-4)+2]
 29530  01D222  0EFE               	movlw	-2
 29531  01D224  006F FF8F FFF6     	movff	plusw1,tblptrl
 29532  01D22A  0EFF               	movlw	-1
 29533  01D22C  006F FF8F FFF7     	movff	plusw1,tblptrh
 29534  01D232  0E00               	movlw	low (__mediumconst shr (0+16))
 29535  01D234  6EF8               	movwf	tblptru,c
 29536  01D236  0E1F               	movlw	(high __ramtop+-1)
 29537  01D238  64F7               	cpfsgt	tblptrh,c
 29538  01D23A  D003               	bra	u10527
 29539  01D23C  0008               	tblrd		*
 29540  01D23E  50F5               	movf	tablat,w,c
 29541  01D240  D007               	bra	u10520
 29542  01D242                     u10527:
 29543  01D242  006F FFDB FFE9     	movff	tblptrl,fsr0l
 29544  01D248  006F FFDF FFEA     	movff	tblptrh,fsr0h
 29545  01D24E  50EF               	movf	indf0,w,c
 29546  01D250                     u10520:
 29547  01D250  6E2A               	movwf	btemp^0,c
 29548  01D252  6A2B               	clrf	(btemp+1)^0,c
 29549                           
 29550                           ;stkvar	_r @ sp[(-4)+0]
 29551  01D254  50E1               	movf	fsr1l,w,c
 29552  01D256  0FFC               	addlw	-4
 29553  01D258  6ED9               	movwf	fsr2l,c
 29554  01D25A  50E2               	movf	fsr1h,w,c
 29555  01D25C  6EDA               	movwf	fsr2h,c
 29556  01D25E  0EFF               	movlw	255
 29557  01D260  22DA               	addwfc	fsr2h,f,c
 29558  01D262  006F FF7B FFF6     	movff	postinc2,tblptrl
 29559  01D268  006F FF77 FFF7     	movff	postdec2,tblptrh
 29560  01D26E                     	if	0	;tblptru may be non-zero
 29561  01D26E                     	endif
 29562  01D26E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 29563  01D26E  0E00               	movlw	low (__mediumconst shr (0+16))
 29564  01D270  6EF8               	movwf	tblptru,c
 29565  01D272                     	endif
 29566  01D272  0008               	tblrd		*
 29567  01D274  50F5               	movf	tablat,w,c
 29568  01D276  5E2A               	subwf	btemp^0,f,c
 29569  01D278  0E00               	movlw	0
 29570  01D27A  5A2B               	subwfb	(btemp+1)^0,f,c
 29571  01D27C                     l3814:
 29572                           
 29573                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 29574  01D27C  0EF6               	movlw	246
 29575  01D27E  26E1               	addwf	fsr1l,f,c
 29576  01D280  0EFF               	movlw	255
 29577  01D282  22E2               	addwfc	fsr1h,f,c
 29578  01D284  0012               	return		;funcret
 29579  01D286                     __end_of_strncmp:
 29580                           	opt callstack 0
 29581                           
 29582 ;; *************** function _stoa *****************
 29583 ;; Defined at:
 29584 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 29585 ;; Parameters:    Size  Location     Type
 29586 ;;  fp              2  [STACK] PTR struct _IO_FILE
 29587 ;;		 -> f(6), NULL(0), 
 29588 ;;  s               2  [STACK] PTR unsigned char 
 29589 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), STR_76(9), 
 29590 ;;		 -> STR_75(12), D.lcd(640), D(642), T(176), 
 29591 ;;		 -> STR_3(5), V(181), 
 29592 ;; Auto vars:     Size  Location     Type
 29593 ;;  nuls            7  [STACK] unsigned char [7]
 29594 ;;  l               2  [STACK] int 
 29595 ;;  p               2  [STACK] int 
 29596 ;;  cp              2  [STACK] PTR unsigned char 
 29597 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), nuls(7), 
 29598 ;;		 -> STR_76(9), STR_75(12), D.lcd(640), D(642), 
 29599 ;;		 -> T(176), STR_3(5), V(181), 
 29600 ;;  w               2  [STACK] int 
 29601 ;;  i               2  [STACK] int 
 29602 ;; Return value:  Size  Location     Type
 29603 ;;                  2  [STACK] int 
 29604 ;; Registers used:
 29605 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 29606 ;; Tracked objects:
 29607 ;;		On entry : 0/0
 29608 ;;		On exit  : 0/0
 29609 ;;		Unchanged: 0/0
 29610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29615 ;;Total ram usage:        0 bytes
 29616 ;; Hardware stack levels used:    1
 29617 ;; Hardware stack levels required when called:   18
 29618 ;; This function calls:
 29619 ;;		_fputc
 29620 ;;		_strlen
 29621 ;; This function is called by:
 29622 ;;		_vfpfcnvrt
 29623 ;; This function uses a reentrant model
 29624 ;;
 29625                           
 29626                           	psect	text102
 29627  01BABA                     __ptext102:
 29628                           	opt callstack 0
 29629  01BABA                     _stoa:
 29630                           	opt callstack 0
 29631                           
 29632                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 29633  01BABA  0E11               	movlw	17
 29634  01BABC  26E1               	addwf	fsr1l,f,c
 29635  01BABE  0E00               	movlw	0
 29636  01BAC0  22E2               	addwfc	fsr1h,f,c
 29637                           
 29638                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 29639                           
 29640                           ;incstack = 0
 29641 ;; hardware stack exceeded
 29642  01BAC2  EE20  F200         	lfsr	2,stoa@F1166
 29643                           
 29644                           ;stkvar	_nuls @ sp[(-17)+0]
 29645  01BAC6  0E07               	movlw	7
 29646  01BAC8  6E2A               	movwf	btemp^0,c
 29647  01BACA  0EEF               	movlw	-17
 29648  01BACC                     us1527999:
 29649  01BACC  006F FF7B FFE3     	movff	postinc2,plusw1
 29650  01BAD2  28E8               	incf	wreg,w,c
 29651  01BAD4  2E2A               	decfsz	btemp^0,f,c
 29652  01BAD6  D7FA               	bra	us1527999
 29653                           
 29654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 29655                           ;stkvar	_s @ sp[(-17)+-4]
 29656  01BAD8  0EEB               	movlw	-21
 29657  01BADA  006F FF8C  F034    	movff	plusw1,btemp+10
 29658  01BAE0  0EEC               	movlw	-20
 29659  01BAE2  006F FF8C  F035    	movff	plusw1,btemp+11
 29660                           
 29661                           ;stkvar	_cp @ sp[(-17)+11]
 29662  01BAE8  0EFB               	movlw	-5
 29663  01BAEA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29664  01BAF0  0EFA               	movlw	-6
 29665  01BAF2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29666                           
 29667                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 29668                           ;stkvar	_cp @ sp[(-17)+11]
 29669  01BAF8  0EFA               	movlw	-6
 29670  01BAFA  006F FF8C  F02A    	movff	plusw1,btemp
 29671  01BB00  0EFB               	movlw	-5
 29672  01BB02  50E3               	movf	plusw1,w,c
 29673  01BB04  102A               	iorwf	btemp^0,w,c
 29674  01BB06  A4D8               	btfss	status,2,c
 29675  01BB08  D00E               	goto	l15968
 29676                           
 29677                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 29678                           ;stkvar	_nuls @ sp[(-17)+0]
 29679  01BB0A  0EEF               	movlw	239
 29680  01BB0C  24E1               	addwf	fsr1l,w,c
 29681  01BB0E  6E34               	movwf	(btemp+10)^0,c
 29682  01BB10  0EFF               	movlw	255
 29683  01BB12  20E2               	addwfc	fsr1h,w,c
 29684  01BB14  6E35               	movwf	(btemp+11)^0,c
 29685                           
 29686                           ;stkvar	_cp @ sp[(-17)+11]
 29687  01BB16  0EFB               	movlw	-5
 29688  01BB18  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29689  01BB1E  0EFA               	movlw	-6
 29690  01BB20  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29691  01BB26                     l15968:
 29692                           
 29693                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 29694                           ;stkvar	_cp @ sp[(-17)+11]
 29695  01BB26  0EFA               	movlw	-6
 29696  01BB28  006F FF8F FFE6     	movff	plusw1,postinc1
 29697  01BB2E  006F FF8F FFE6     	movff	plusw1,postinc1
 29698  01BB34  EC14  F006         	call	_strlen	;wreg free
 29699                           
 29700                           ;stkvar	_l @ sp[(-17)+7]
 29701  01BB38  0EF6               	movlw	-10
 29702  01BB3A  0060  F0AB  FFE3   	movff	btemp,plusw1
 29703  01BB40  0EF7               	movlw	-9
 29704  01BB42  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 29705                           
 29706                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 29707                           ;stkvar	_p @ sp[(-17)+9]
 29708  01BB48  0EF8               	movlw	-8
 29709  01BB4A  0060  F133  FFE3   	movff	_prec,plusw1
 29710  01BB50  0EF9               	movlw	-7
 29711  01BB52  0060  F137  FFE3   	movff	_prec+1,plusw1
 29712                           
 29713                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 29714                           ;stkvar	_p @ sp[(-17)+9]
 29715  01BB58  0EF9               	movlw	-7
 29716  01BB5A  BEE3               	btfsc	plusw1,7,c
 29717  01BB5C  D023               	goto	l2609
 29718                           
 29719                           ;stkvar	_l @ sp[(-17)+7]
 29720                           ;stkvar	_p @ sp[(-17)+9]
 29721  01BB5E  50E1               	movf	fsr1l,w,c
 29722  01BB60  0FF8               	addlw	-8
 29723  01BB62  6ED9               	movwf	fsr2l,c
 29724  01BB64  50E2               	movf	fsr1h,w,c
 29725  01BB66  6EDA               	movwf	fsr2h,c
 29726  01BB68  0EFF               	movlw	255
 29727  01BB6A  22DA               	addwfc	fsr2h,f,c
 29728  01BB6C  0EF6               	movlw	-10
 29729  01BB6E  50E3               	movf	plusw1,w,c
 29730  01BB70  5CDE               	subwf	postinc2,w,c
 29731  01BB72  50DE               	movf	postinc2,w,c
 29732  01BB74  0A80               	xorlw	128
 29733  01BB76  6E2A               	movwf	btemp^0,c
 29734  01BB78  0EF7               	movlw	-9
 29735  01BB7A  50E3               	movf	plusw1,w,c
 29736  01BB7C  0A80               	xorlw	128
 29737  01BB7E  582A               	subwfb	btemp^0,w,c
 29738  01BB80  B0D8               	btfsc	status,0,c
 29739  01BB82  D010               	goto	l2609
 29740                           
 29741                           ;stkvar	_p @ sp[(-17)+9]
 29742                           ;stkvar	_l @ sp[(-17)+7]
 29743  01BB84  0EF8               	movlw	-8
 29744  01BB86  006F FF8C  F02A    	movff	plusw1,btemp
 29745  01BB8C  0EF6               	movlw	-10
 29746  01BB8E  0060  F0AB  FFE3   	movff	btemp,plusw1
 29747  01BB94  0EF9               	movlw	-7
 29748  01BB96  006F FF8C  F02A    	movff	plusw1,btemp
 29749  01BB9C  0EF7               	movlw	-9
 29750  01BB9E  0060  F0AB  FFE3   	movff	btemp,plusw1
 29751  01BBA4                     l2609:
 29752                           
 29753                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 29754                           ;stkvar	_l @ sp[(-17)+7]
 29755                           ;stkvar	_p @ sp[(-17)+9]
 29756  01BBA4  0EF6               	movlw	-10
 29757  01BBA6  006F FF8C  F02A    	movff	plusw1,btemp
 29758  01BBAC  0EF8               	movlw	-8
 29759  01BBAE  0060  F0AB  FFE3   	movff	btemp,plusw1
 29760  01BBB4  0EF7               	movlw	-9
 29761  01BBB6  006F FF8C  F02A    	movff	plusw1,btemp
 29762  01BBBC  0EF9               	movlw	-7
 29763  01BBBE  0060  F0AB  FFE3   	movff	btemp,plusw1
 29764                           
 29765                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 29766                           ;stkvar	_w @ sp[(-17)+13]
 29767  01BBC4  0EFC               	movlw	-4
 29768  01BBC6  0060  F12B  FFE3   	movff	_width,plusw1
 29769  01BBCC  0EFD               	movlw	-3
 29770  01BBCE  0060  F12F  FFE3   	movff	_width+1,plusw1
 29771                           
 29772                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 29773  01BBD4  A04E               	btfss	_flags^0,0,c
 29774  01BBD6  D01F               	goto	l15988
 29775  01BBD8  D031               	goto	u15320
 29776  01BBDA                     l15984:
 29777                           
 29778                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 29779                           ;stkvar	_fp @ sp[(-17)+-2]
 29780  01BBDA  0EED               	movlw	-19
 29781  01BBDC  006F FF8F FFE6     	movff	plusw1,postinc1
 29782  01BBE2  006F FF8F FFE6     	movff	plusw1,postinc1
 29783  01BBE8  0E20               	movlw	32
 29784  01BBEA  6EE6               	movwf	postinc1,c
 29785  01BBEC  0E00               	movlw	0
 29786  01BBEE  6EE6               	movwf	postinc1,c
 29787  01BBF0  ECE4  F0FA         	call	_fputc	;wreg free
 29788                           
 29789                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 29790                           ;stkvar	_l @ sp[(-17)+7]
 29791  01BBF4  0EF6               	movlw	-10
 29792  01BBF6  50E3               	movf	plusw1,w,c
 29793  01BBF8  0F01               	addlw	1
 29794  01BBFA  6E2A               	movwf	btemp^0,c
 29795  01BBFC  0EF6               	movlw	-10
 29796  01BBFE  0060  F0AB  FFE3   	movff	btemp,plusw1
 29797  01BC04  6A2A               	clrf	btemp^0,c
 29798  01BC06  0EF7               	movlw	-9
 29799  01BC08  50E3               	movf	plusw1,w,c
 29800  01BC0A  202A               	addwfc	btemp^0,w,c
 29801  01BC0C  6E2A               	movwf	btemp^0,c
 29802  01BC0E  0EF7               	movlw	-9
 29803  01BC10  0060  F0AB  FFE3   	movff	btemp,plusw1
 29804  01BC16                     l15988:
 29805                           
 29806                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 29807                           ;stkvar	_w @ sp[(-17)+13]
 29808                           ;stkvar	_l @ sp[(-17)+7]
 29809  01BC16  50E1               	movf	fsr1l,w,c
 29810  01BC18  0FF6               	addlw	-10
 29811  01BC1A  6ED9               	movwf	fsr2l,c
 29812  01BC1C  50E2               	movf	fsr1h,w,c
 29813  01BC1E  6EDA               	movwf	fsr2h,c
 29814  01BC20  0EFF               	movlw	255
 29815  01BC22  22DA               	addwfc	fsr2h,f,c
 29816  01BC24  0EFC               	movlw	-4
 29817  01BC26  50E3               	movf	plusw1,w,c
 29818  01BC28  5CDE               	subwf	postinc2,w,c
 29819  01BC2A  50DE               	movf	postinc2,w,c
 29820  01BC2C  0A80               	xorlw	128
 29821  01BC2E  6E2A               	movwf	btemp^0,c
 29822  01BC30  0EFD               	movlw	-3
 29823  01BC32  50E3               	movf	plusw1,w,c
 29824  01BC34  0A80               	xorlw	128
 29825  01BC36  582A               	subwfb	btemp^0,w,c
 29826  01BC38  A0D8               	btfss	status,0,c
 29827  01BC3A  D7CF               	goto	l15984
 29828  01BC3C                     u15320:
 29829                           
 29830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 29831                           ;stkvar	_i @ sp[(-17)+15]
 29832  01BC3C  0EFE               	movlw	-2
 29833  01BC3E  6AE3               	clrf	plusw1,c
 29834  01BC40  0EFF               	movlw	-1
 29835  01BC42  6AE3               	clrf	plusw1,c
 29836                           
 29837                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 29838  01BC44  D045               	goto	l15998
 29839  01BC46                     l15992:
 29840                           
 29841                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 29842                           ;stkvar	_fp @ sp[(-17)+-2]
 29843  01BC46  0EED               	movlw	-19
 29844  01BC48  006F FF8F FFE6     	movff	plusw1,postinc1
 29845  01BC4E  006F FF8F FFE6     	movff	plusw1,postinc1
 29846                           
 29847                           ;stkvar	_cp @ sp[(-19)+11]
 29848  01BC54  0EF8               	movlw	-8
 29849  01BC56  006F FF8F FFF6     	movff	plusw1,tblptrl
 29850  01BC5C  0EF9               	movlw	-7
 29851  01BC5E  006F FF8F FFF7     	movff	plusw1,tblptrh
 29852  01BC64  0E00               	movlw	low (__mediumconst shr (0+16))
 29853  01BC66  6EF8               	movwf	tblptru,c
 29854  01BC68  0E1F               	movlw	(high __ramtop+-1)
 29855  01BC6A  64F7               	cpfsgt	tblptrh,c
 29856  01BC6C  D003               	bra	u15337
 29857  01BC6E  0008               	tblrd		*
 29858  01BC70  50F5               	movf	tablat,w,c
 29859  01BC72  D007               	bra	u15330
 29860  01BC74                     u15337:
 29861  01BC74  006F FFDB FFE9     	movff	tblptrl,fsr0l
 29862  01BC7A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 29863  01BC80  50EF               	movf	indf0,w,c
 29864  01BC82                     u15330:
 29865  01BC82  6EE6               	movwf	postinc1,c
 29866  01BC84  0E00               	movlw	0
 29867  01BC86  6EE6               	movwf	postinc1,c
 29868  01BC88  ECE4  F0FA         	call	_fputc	;wreg free
 29869                           
 29870                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 29871                           ;stkvar	_cp @ sp[(-17)+11]
 29872  01BC8C  0EFA               	movlw	-6
 29873  01BC8E  50E3               	movf	plusw1,w,c
 29874  01BC90  0F01               	addlw	1
 29875  01BC92  6E2A               	movwf	btemp^0,c
 29876  01BC94  0EFA               	movlw	-6
 29877  01BC96  0060  F0AB  FFE3   	movff	btemp,plusw1
 29878  01BC9C  6A2A               	clrf	btemp^0,c
 29879  01BC9E  0EFB               	movlw	-5
 29880  01BCA0  50E3               	movf	plusw1,w,c
 29881  01BCA2  202A               	addwfc	btemp^0,w,c
 29882  01BCA4  6E2A               	movwf	btemp^0,c
 29883  01BCA6  0EFB               	movlw	-5
 29884  01BCA8  0060  F0AB  FFE3   	movff	btemp,plusw1
 29885                           
 29886                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 29887                           ;stkvar	_i @ sp[(-17)+15]
 29888  01BCAE  0EFE               	movlw	-2
 29889  01BCB0  50E3               	movf	plusw1,w,c
 29890  01BCB2  0F01               	addlw	1
 29891  01BCB4  6E2A               	movwf	btemp^0,c
 29892  01BCB6  0EFE               	movlw	-2
 29893  01BCB8  0060  F0AB  FFE3   	movff	btemp,plusw1
 29894  01BCBE  6A2A               	clrf	btemp^0,c
 29895  01BCC0  0EFF               	movlw	-1
 29896  01BCC2  50E3               	movf	plusw1,w,c
 29897  01BCC4  202A               	addwfc	btemp^0,w,c
 29898  01BCC6  6E2A               	movwf	btemp^0,c
 29899  01BCC8  0EFF               	movlw	-1
 29900  01BCCA  0060  F0AB  FFE3   	movff	btemp,plusw1
 29901  01BCD0                     l15998:
 29902                           
 29903                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 29904                           ;stkvar	_p @ sp[(-17)+9]
 29905                           ;stkvar	_i @ sp[(-17)+15]
 29906  01BCD0  50E1               	movf	fsr1l,w,c
 29907  01BCD2  0FFE               	addlw	-2
 29908  01BCD4  6ED9               	movwf	fsr2l,c
 29909  01BCD6  50E2               	movf	fsr1h,w,c
 29910  01BCD8  6EDA               	movwf	fsr2h,c
 29911  01BCDA  0EFF               	movlw	255
 29912  01BCDC  22DA               	addwfc	fsr2h,f,c
 29913  01BCDE  0EF8               	movlw	-8
 29914  01BCE0  50E3               	movf	plusw1,w,c
 29915  01BCE2  5CDE               	subwf	postinc2,w,c
 29916  01BCE4  50DE               	movf	postinc2,w,c
 29917  01BCE6  0A80               	xorlw	128
 29918  01BCE8  6E2A               	movwf	btemp^0,c
 29919  01BCEA  0EF9               	movlw	-7
 29920  01BCEC  50E3               	movf	plusw1,w,c
 29921  01BCEE  0A80               	xorlw	128
 29922  01BCF0  582A               	subwfb	btemp^0,w,c
 29923  01BCF2  A0D8               	btfss	status,0,c
 29924  01BCF4  D7A8               	goto	l15992
 29925                           
 29926                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 29927  01BCF6  B04E               	btfsc	_flags^0,0,c
 29928  01BCF8  D01F               	goto	l16006
 29929  01BCFA  D031               	goto	u15360
 29930  01BCFC                     l16002:
 29931                           
 29932                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 29933                           ;stkvar	_fp @ sp[(-17)+-2]
 29934  01BCFC  0EED               	movlw	-19
 29935  01BCFE  006F FF8F FFE6     	movff	plusw1,postinc1
 29936  01BD04  006F FF8F FFE6     	movff	plusw1,postinc1
 29937  01BD0A  0E20               	movlw	32
 29938  01BD0C  6EE6               	movwf	postinc1,c
 29939  01BD0E  0E00               	movlw	0
 29940  01BD10  6EE6               	movwf	postinc1,c
 29941  01BD12  ECE4  F0FA         	call	_fputc	;wreg free
 29942                           
 29943                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 29944                           ;stkvar	_l @ sp[(-17)+7]
 29945  01BD16  0EF6               	movlw	-10
 29946  01BD18  50E3               	movf	plusw1,w,c
 29947  01BD1A  0F01               	addlw	1
 29948  01BD1C  6E2A               	movwf	btemp^0,c
 29949  01BD1E  0EF6               	movlw	-10
 29950  01BD20  0060  F0AB  FFE3   	movff	btemp,plusw1
 29951  01BD26  6A2A               	clrf	btemp^0,c
 29952  01BD28  0EF7               	movlw	-9
 29953  01BD2A  50E3               	movf	plusw1,w,c
 29954  01BD2C  202A               	addwfc	btemp^0,w,c
 29955  01BD2E  6E2A               	movwf	btemp^0,c
 29956  01BD30  0EF7               	movlw	-9
 29957  01BD32  0060  F0AB  FFE3   	movff	btemp,plusw1
 29958  01BD38                     l16006:
 29959                           
 29960                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 29961                           ;stkvar	_w @ sp[(-17)+13]
 29962                           ;stkvar	_l @ sp[(-17)+7]
 29963  01BD38  50E1               	movf	fsr1l,w,c
 29964  01BD3A  0FF6               	addlw	-10
 29965  01BD3C  6ED9               	movwf	fsr2l,c
 29966  01BD3E  50E2               	movf	fsr1h,w,c
 29967  01BD40  6EDA               	movwf	fsr2h,c
 29968  01BD42  0EFF               	movlw	255
 29969  01BD44  22DA               	addwfc	fsr2h,f,c
 29970  01BD46  0EFC               	movlw	-4
 29971  01BD48  50E3               	movf	plusw1,w,c
 29972  01BD4A  5CDE               	subwf	postinc2,w,c
 29973  01BD4C  50DE               	movf	postinc2,w,c
 29974  01BD4E  0A80               	xorlw	128
 29975  01BD50  6E2A               	movwf	btemp^0,c
 29976  01BD52  0EFD               	movlw	-3
 29977  01BD54  50E3               	movf	plusw1,w,c
 29978  01BD56  0A80               	xorlw	128
 29979  01BD58  582A               	subwfb	btemp^0,w,c
 29980  01BD5A  A0D8               	btfss	status,0,c
 29981  01BD5C  D7CF               	goto	l16002
 29982  01BD5E                     u15360:
 29983                           
 29984                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 29985                           ;stkvar	_l @ sp[(-17)+7]
 29986  01BD5E  0EF6               	movlw	-10
 29987  01BD60  006F FF8C  F02A    	movff	plusw1,btemp
 29988  01BD66  0EF7               	movlw	-9
 29989  01BD68  006F FF8C  F02B    	movff	plusw1,btemp+1
 29990                           
 29991                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 29992  01BD6E  0EEB               	movlw	235
 29993  01BD70  26E1               	addwf	fsr1l,f,c
 29994  01BD72  0EFF               	movlw	255
 29995  01BD74  22E2               	addwfc	fsr1h,f,c
 29996  01BD76  0012               	return		;funcret
 29997  01BD78                     __end_of_stoa:
 29998                           	opt callstack 0
 29999                           
 30000 ;; *************** function _efgtoa *****************
 30001 ;; Defined at:
 30002 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 30003 ;; Parameters:    Size  Location     Type
 30004 ;;  fp              2  [STACK] PTR struct _IO_FILE
 30005 ;;		 -> f(6), NULL(0), 
 30006 ;;  f               4  [STACK] PTR struct _IO_FILE
 30007 ;;  c               1  [STACK] unsigned char 
 30008 ;; Auto vars:     Size  Location     Type
 30009 ;;  u               4  [STACK] unsigned char 
 30010 ;;  g               4  [STACK] unsigned char 
 30011 ;;  l               4  [STACK] unsigned char 
 30012 ;;  h               4  [STACK] unsigned char 
 30013 ;;  ou              4  [STACK] unsigned char 
 30014 ;;  n               2  [STACK] int 
 30015 ;;  e               2  [STACK] int 
 30016 ;;  i               2  [STACK] int 
 30017 ;;  w               2  [STACK] int 
 30018 ;;  p               2  [STACK] int 
 30019 ;;  sign            2  [STACK] int 
 30020 ;;  d               2  [STACK] int 
 30021 ;;  ne              2  [STACK] int 
 30022 ;;  m               2  [STACK] int 
 30023 ;;  pp              2  [STACK] int 
 30024 ;;  t               2  [STACK] int 
 30025 ;;  mode            1  [STACK] unsigned char 
 30026 ;;  nmode           1  [STACK] unsigned char 
 30027 ;; Return value:  Size  Location     Type
 30028 ;;                  2  [STACK] int 
 30029 ;; Registers used:
 30030 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 30031 ;; Tracked objects:
 30032 ;;		On entry : 0/0
 30033 ;;		On exit  : 0/0
 30034 ;;		Unchanged: 0/0
 30035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30040 ;;Total ram usage:        0 bytes
 30041 ;; Hardware stack levels used:    1
 30042 ;; Hardware stack levels required when called:   20
 30043 ;; This function calls:
 30044 ;;		___awdiv
 30045 ;;		___awmod
 30046 ;;		___fladd
 30047 ;;		___fldiv
 30048 ;;		___fleq
 30049 ;;		___flge
 30050 ;;		___flmul
 30051 ;;		___flneg
 30052 ;;		___flsub
 30053 ;;		___fltol
 30054 ;;		___fpclassifyf
 30055 ;;		_floorf
 30056 ;;		_isupper
 30057 ;;		_pad
 30058 ;;		_strcpy
 30059 ;;		_tolower
 30060 ;; This function is called by:
 30061 ;;		_vfpfcnvrt
 30062 ;; This function uses a reentrant model
 30063 ;;
 30064                           
 30065                           	psect	text103
 30066  011720                     __ptext103:
 30067                           	opt callstack 0
 30068  011720                     _efgtoa:
 30069                           	opt callstack 0
 30070                           
 30071                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 30072  011720  0E38               	movlw	56
 30073  011722  26E1               	addwf	fsr1l,f,c
 30074  011724  0E00               	movlw	0
 30075  011726  22E2               	addwfc	fsr1h,f,c
 30076                           
 30077                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 30078                           ;stkvar	_sign @ sp[(-56)+42]
 30079                           
 30080                           ;incstack = 0
 30081 ;; hardware stack exceeded
 30082  011728  0EF2               	movlw	-14
 30083  01172A  6AE3               	clrf	plusw1,c
 30084  01172C  0EF3               	movlw	-13
 30085  01172E  6AE3               	clrf	plusw1,c
 30086                           
 30087                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 30088                           ;stkvar	_f @ sp[(-56)+-6]
 30089  011730  0EC2               	movlw	-62
 30090  011732  006F FF8C  F032    	movff	plusw1,btemp+8
 30091  011738  0EC3               	movlw	-61
 30092  01173A  006F FF8C  F033    	movff	plusw1,btemp+9
 30093  011740  0EC4               	movlw	-60
 30094  011742  006F FF8C  F034    	movff	plusw1,btemp+10
 30095  011748  0EC5               	movlw	-59
 30096  01174A  006F FF8C  F035    	movff	plusw1,btemp+11
 30097                           
 30098                           ;stkvar	_g @ sp[(-56)+16]
 30099  011750  0ED8               	movlw	-40
 30100  011752  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 30101  011758  0ED9               	movlw	-39
 30102  01175A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 30103  011760  0EDA               	movlw	-38
 30104  011762  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30105  011768  0EDB               	movlw	-37
 30106  01176A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30107                           
 30108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 30109                           ;stkvar	_g @ sp[(-56)+16]
 30110  011770  0EDB               	movlw	-37
 30111  011772  AEE3               	btfss	plusw1,7,c
 30112  011774  D02B               	goto	l15666
 30113                           
 30114                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 30115  011776  0E01               	movlw	1
 30116  011778  6E34               	movwf	(btemp+10)^0,c
 30117  01177A  0E00               	movlw	0
 30118  01177C  6E35               	movwf	(btemp+11)^0,c
 30119                           
 30120                           ;stkvar	_sign @ sp[(-56)+42]
 30121  01177E  0EF2               	movlw	-14
 30122  011780  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30123  011786  0EF3               	movlw	-13
 30124  011788  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30125                           
 30126                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 30127                           ;stkvar	_g @ sp[(-56)+16]
 30128  01178E  0ED8               	movlw	-40
 30129  011790  006F FF8F FFE6     	movff	plusw1,postinc1
 30130  011796  006F FF8F FFE6     	movff	plusw1,postinc1
 30131  01179C  006F FF8F FFE6     	movff	plusw1,postinc1
 30132  0117A2  006F FF8F FFE6     	movff	plusw1,postinc1
 30133  0117A8  EC54  F00E         	call	___flneg	;wreg free
 30134                           
 30135                           ;stkvar	_g @ sp[(-56)+16]
 30136  0117AC  0ED8               	movlw	-40
 30137  0117AE  0060  F0AB  FFE3   	movff	btemp,plusw1
 30138  0117B4  0ED9               	movlw	-39
 30139  0117B6  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30140  0117BC  0EDA               	movlw	-38
 30141  0117BE  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 30142  0117C4  0EDB               	movlw	-37
 30143  0117C6  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 30144  0117CC                     l15666:
 30145                           
 30146                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 30147                           ;stkvar	_n @ sp[(-56)+32]
 30148  0117CC  0EE8               	movlw	-24
 30149  0117CE  6AE3               	clrf	plusw1,c
 30150  0117D0  0EE9               	movlw	-23
 30151  0117D2  6AE3               	clrf	plusw1,c
 30152                           
 30153                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 30154                           ;stkvar	_w @ sp[(-56)+38]
 30155  0117D4  0EEE               	movlw	-18
 30156  0117D6  0060  F12B  FFE3   	movff	_width,plusw1
 30157  0117DC  0EEF               	movlw	-17
 30158  0117DE  0060  F12F  FFE3   	movff	_width+1,plusw1
 30159                           
 30160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 30161                           ;stkvar	_sign @ sp[(-56)+42]
 30162  0117E4  0EF2               	movlw	-14
 30163  0117E6  006F FF8C  F02A    	movff	plusw1,btemp
 30164  0117EC  0EF3               	movlw	-13
 30165  0117EE  50E3               	movf	plusw1,w,c
 30166  0117F0  102A               	iorwf	btemp^0,w,c
 30167  0117F2  A4D8               	btfss	status,2,c
 30168  0117F4  D002               	goto	u14770
 30169  0117F6  A44E               	btfss	_flags^0,2,c
 30170  0117F8  D036               	goto	l15686
 30171  0117FA                     u14770:
 30172                           
 30173                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 30174                           ;stkvar	_sign @ sp[(-56)+42]
 30175  0117FA  0EF2               	movlw	-14
 30176  0117FC  006F FF8C  F02A    	movff	plusw1,btemp
 30177  011802  0EF3               	movlw	-13
 30178  011804  50E3               	movf	plusw1,w,c
 30179  011806  102A               	iorwf	btemp^0,w,c
 30180  011808  A4D8               	btfss	status,2,c
 30181  01180A  D002               	goto	l15678
 30182  01180C  0E2B               	movlw	43
 30183  01180E  D001               	goto	L31
 30184  011810                     l15678:
 30185  011810  0E2D               	movlw	45
 30186  011812                     L31:
 30187  011812  6E34               	movwf	(btemp+10)^0,c
 30188  011814  0E00               	movlw	0
 30189  011816  6E35               	movwf	(btemp+11)^0,c
 30190                           
 30191                           ;stkvar	_efgtoa$6614 @ sp[(-56)+10]
 30192  011818  0ED2               	movlw	-46
 30193  01181A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30194  011820  0ED3               	movlw	-45
 30195  011822  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30196                           
 30197                           ;stkvar	_efgtoa$6614 @ sp[(-56)+10]
 30198  011828  0ED2               	movlw	-46
 30199  01182A  006F FF8C  F354    	movff	plusw1,_dbuf
 30200                           
 30201                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 30202                           ;stkvar	_n @ sp[(-56)+32]
 30203  011830  0EE8               	movlw	-24
 30204  011832  50E3               	movf	plusw1,w,c
 30205  011834  0F01               	addlw	1
 30206  011836  6E2A               	movwf	btemp^0,c
 30207  011838  0EE8               	movlw	-24
 30208  01183A  0060  F0AB  FFE3   	movff	btemp,plusw1
 30209  011840  6A2A               	clrf	btemp^0,c
 30210  011842  0EE9               	movlw	-23
 30211  011844  50E3               	movf	plusw1,w,c
 30212  011846  202A               	addwfc	btemp^0,w,c
 30213  011848  6E2A               	movwf	btemp^0,c
 30214  01184A  0EE9               	movlw	-23
 30215  01184C  0060  F0AB  FFE3   	movff	btemp,plusw1
 30216                           
 30217                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 30218                           ;stkvar	_w @ sp[(-56)+38]
 30219  011852  50E1               	movf	fsr1l,w,c
 30220  011854  0FEE               	addlw	-18
 30221  011856  6ED9               	movwf	fsr2l,c
 30222  011858  50E2               	movf	fsr1h,w,c
 30223  01185A  6EDA               	movwf	fsr2h,c
 30224  01185C  0EFF               	movlw	255
 30225  01185E  22DA               	addwfc	fsr2h,f,c
 30226  011860  06DE               	decf	postinc2,f,c
 30227  011862  0E00               	movlw	0
 30228  011864  5ADD               	subwfb	postdec2,f,c
 30229  011866                     l15686:
 30230                           
 30231                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 30232                           ;stkvar	_g @ sp[(-56)+16]
 30233  011866  0ED8               	movlw	-40
 30234  011868  006F FF8F FFE6     	movff	plusw1,postinc1
 30235  01186E  006F FF8F FFE6     	movff	plusw1,postinc1
 30236  011874  006F FF8F FFE6     	movff	plusw1,postinc1
 30237  01187A  006F FF8F FFE6     	movff	plusw1,postinc1
 30238  011880  ECF1  F0EE         	call	___fpclassifyf	;wreg free
 30239  011884  042A               	decf	btemp^0,w,c
 30240  011886  102B               	iorwf	(btemp+1)^0,w,c
 30241  011888  A4D8               	btfss	status,2,c
 30242  01188A  D076               	goto	l15704
 30243  01188C  0EBF               	movlw	191
 30244  01188E  6E34               	movwf	(btemp+10)^0,c
 30245  011890  0EFF               	movlw	255
 30246  011892  6E35               	movwf	(btemp+11)^0,c
 30247                           
 30248                           ;stkvar	_c @ sp[(-56)+-7]
 30249  011894  0EC1               	movlw	-63
 30250  011896  50E3               	movf	plusw1,w,c
 30251  011898  6E32               	movwf	(btemp+8)^0,c
 30252  01189A  6A33               	clrf	(btemp+9)^0,c
 30253  01189C  5034               	movf	(btemp+10)^0,w,c
 30254  01189E  2632               	addwf	(btemp+8)^0,f,c
 30255  0118A0  5035               	movf	(btemp+11)^0,w,c
 30256  0118A2  2233               	addwfc	(btemp+9)^0,f,c
 30257  0118A4  5033               	movf	(btemp+9)^0,w,c
 30258  0118A6  E106               	bnz	u14800
 30259  0118A8  0E1A               	movlw	26
 30260  0118AA  5C32               	subwf	(btemp+8)^0,w,c
 30261  0118AC  B0D8               	btfsc	status,0,c
 30262  0118AE  D002               	goto	u14800
 30263  0118B0  0E01               	movlw	1
 30264  0118B2  D001               	goto	u14810
 30265  0118B4                     u14800:
 30266  0118B4  0E00               	movlw	0
 30267  0118B6                     u14810:
 30268  0118B6  6E34               	movwf	(btemp+10)^0,c
 30269  0118B8  6A35               	clrf	(btemp+11)^0,c
 30270                           
 30271                           ;stkvar	_efgtoa$6615 @ sp[(-56)+8]
 30272  0118BA  0ED0               	movlw	-48
 30273  0118BC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30274  0118C2  0ED1               	movlw	-47
 30275  0118C4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30276                           
 30277                           ;stkvar	_efgtoa$6615 @ sp[(-56)+8]
 30278  0118CA  0ED0               	movlw	-48
 30279  0118CC  006F FF8C  F02A    	movff	plusw1,btemp
 30280  0118D2  0ED1               	movlw	-47
 30281  0118D4  50E3               	movf	plusw1,w,c
 30282  0118D6  102A               	iorwf	btemp^0,w,c
 30283  0118D8  B4D8               	btfsc	status,2,c
 30284  0118DA  D017               	goto	l15696
 30285                           
 30286                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 30287  0118DC  0EDA               	movlw	low STR_96
 30288  0118DE  6EE6               	movwf	postinc1,c
 30289  0118E0  0EFF               	movlw	high STR_96
 30290  0118E2  6EE6               	movwf	postinc1,c
 30291                           
 30292                           ;stkvar	_n @ sp[(-58)+32]
 30293  0118E4  0E54               	movlw	low _dbuf
 30294  0118E6  6E34               	movwf	(btemp+10)^0,c
 30295  0118E8  0E03               	movlw	high _dbuf
 30296  0118EA  6E35               	movwf	(btemp+11)^0,c
 30297  0118EC  0EE6               	movlw	-26
 30298  0118EE  50E3               	movf	plusw1,w,c
 30299  0118F0  2634               	addwf	(btemp+10)^0,f,c
 30300  0118F2  0EE7               	movlw	-25
 30301  0118F4  50E3               	movf	plusw1,w,c
 30302  0118F6  2235               	addwfc	(btemp+11)^0,f,c
 30303  0118F8  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 30304  0118FE  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 30305  011904  EC2A  F002         	call	_strcpy	;wreg free
 30306                           
 30307                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 30308  011908  D016               	goto	l15698
 30309  01190A                     l15696:
 30310                           
 30311                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 30312  01190A  0EE2               	movlw	low STR_97
 30313  01190C  6EE6               	movwf	postinc1,c
 30314  01190E  0EFF               	movlw	high STR_97
 30315  011910  6EE6               	movwf	postinc1,c
 30316                           
 30317                           ;stkvar	_n @ sp[(-58)+32]
 30318  011912  0E54               	movlw	low _dbuf
 30319  011914  6E34               	movwf	(btemp+10)^0,c
 30320  011916  0E03               	movlw	high _dbuf
 30321  011918  6E35               	movwf	(btemp+11)^0,c
 30322  01191A  0EE6               	movlw	-26
 30323  01191C  50E3               	movf	plusw1,w,c
 30324  01191E  2634               	addwf	(btemp+10)^0,f,c
 30325  011920  0EE7               	movlw	-25
 30326  011922  50E3               	movf	plusw1,w,c
 30327  011924  2235               	addwfc	(btemp+11)^0,f,c
 30328  011926  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 30329  01192C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 30330  011932  EC2A  F002         	call	_strcpy	;wreg free
 30331  011936                     l15698:
 30332                           
 30333                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 30334                           ;stkvar	_w @ sp[(-56)+38]
 30335  011936  50E1               	movf	fsr1l,w,c
 30336  011938  0FEE               	addlw	-18
 30337  01193A  6ED9               	movwf	fsr2l,c
 30338  01193C  50E2               	movf	fsr1h,w,c
 30339  01193E  6EDA               	movwf	fsr2h,c
 30340  011940  0EFF               	movlw	255
 30341  011942  22DA               	addwfc	fsr2h,f,c
 30342  011944  0EFD               	movlw	253
 30343  011946  26DE               	addwf	postinc2,f,c
 30344  011948  0EFF               	movlw	255
 30345  01194A  22DD               	addwfc	postdec2,f,c
 30346  01194C                     l15700:
 30347                           
 30348                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 30349                           ;stkvar	_w @ sp[(-56)+38]
 30350  01194C  0EEE               	movlw	-18
 30351  01194E  006F FF8F FFE6     	movff	plusw1,postinc1
 30352  011954  006F FF8F FFE6     	movff	plusw1,postinc1
 30353  01195A  0E54               	movlw	low _dbuf
 30354  01195C  6EE6               	movwf	postinc1,c
 30355  01195E  0E03               	movlw	high _dbuf
 30356  011960  6EE6               	movwf	postinc1,c
 30357                           
 30358                           ;stkvar	_fp @ sp[(-60)+-2]
 30359  011962  0EC2               	movlw	-62
 30360  011964  006F FF8F FFE6     	movff	plusw1,postinc1
 30361  01196A  006F FF8F FFE6     	movff	plusw1,postinc1
 30362  011970  EC1B  F0FD         	call	_pad	;wreg free
 30363  011974  EFAD  F094         	goto	l2527
 30364  011978                     l15704:
 30365                           
 30366                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 30367                           ;stkvar	_g @ sp[(-56)+16]
 30368  011978  0ED8               	movlw	-40
 30369  01197A  006F FF8F FFE6     	movff	plusw1,postinc1
 30370  011980  006F FF8F FFE6     	movff	plusw1,postinc1
 30371  011986  006F FF8F FFE6     	movff	plusw1,postinc1
 30372  01198C  006F FF8F FFE6     	movff	plusw1,postinc1
 30373  011992  ECF1  F0EE         	call	___fpclassifyf	;wreg free
 30374  011996  502A               	movf	btemp^0,w,c
 30375  011998  102B               	iorwf	(btemp+1)^0,w,c
 30376  01199A  A4D8               	btfss	status,2,c
 30377  01199C  D056               	goto	l15722
 30378  01199E  0EBF               	movlw	191
 30379  0119A0  6E34               	movwf	(btemp+10)^0,c
 30380  0119A2  0EFF               	movlw	255
 30381  0119A4  6E35               	movwf	(btemp+11)^0,c
 30382                           
 30383                           ;stkvar	_c @ sp[(-56)+-7]
 30384  0119A6  0EC1               	movlw	-63
 30385  0119A8  50E3               	movf	plusw1,w,c
 30386  0119AA  6E32               	movwf	(btemp+8)^0,c
 30387  0119AC  6A33               	clrf	(btemp+9)^0,c
 30388  0119AE  5034               	movf	(btemp+10)^0,w,c
 30389  0119B0  2632               	addwf	(btemp+8)^0,f,c
 30390  0119B2  5035               	movf	(btemp+11)^0,w,c
 30391  0119B4  2233               	addwfc	(btemp+9)^0,f,c
 30392  0119B6  5033               	movf	(btemp+9)^0,w,c
 30393  0119B8  E106               	bnz	u14840
 30394  0119BA  0E1A               	movlw	26
 30395  0119BC  5C32               	subwf	(btemp+8)^0,w,c
 30396  0119BE  B0D8               	btfsc	status,0,c
 30397  0119C0  D002               	goto	u14840
 30398  0119C2  0E01               	movlw	1
 30399  0119C4  D001               	goto	u14850
 30400  0119C6                     u14840:
 30401  0119C6  0E00               	movlw	0
 30402  0119C8                     u14850:
 30403  0119C8  6E34               	movwf	(btemp+10)^0,c
 30404  0119CA  6A35               	clrf	(btemp+11)^0,c
 30405                           
 30406                           ;stkvar	_efgtoa$6619 @ sp[(-56)+6]
 30407  0119CC  0ECE               	movlw	-50
 30408  0119CE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30409  0119D4  0ECF               	movlw	-49
 30410  0119D6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30411                           
 30412                           ;stkvar	_efgtoa$6619 @ sp[(-56)+6]
 30413  0119DC  0ECE               	movlw	-50
 30414  0119DE  006F FF8C  F02A    	movff	plusw1,btemp
 30415  0119E4  0ECF               	movlw	-49
 30416  0119E6  50E3               	movf	plusw1,w,c
 30417  0119E8  102A               	iorwf	btemp^0,w,c
 30418  0119EA  B4D8               	btfsc	status,2,c
 30419  0119EC  D017               	goto	l15714
 30420                           
 30421                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 30422  0119EE  0EDE               	movlw	low STR_100
 30423  0119F0  6EE6               	movwf	postinc1,c
 30424  0119F2  0EFF               	movlw	high STR_100
 30425  0119F4  6EE6               	movwf	postinc1,c
 30426                           
 30427                           ;stkvar	_n @ sp[(-58)+32]
 30428  0119F6  0E54               	movlw	low _dbuf
 30429  0119F8  6E34               	movwf	(btemp+10)^0,c
 30430  0119FA  0E03               	movlw	high _dbuf
 30431  0119FC  6E35               	movwf	(btemp+11)^0,c
 30432  0119FE  0EE6               	movlw	-26
 30433  011A00  50E3               	movf	plusw1,w,c
 30434  011A02  2634               	addwf	(btemp+10)^0,f,c
 30435  011A04  0EE7               	movlw	-25
 30436  011A06  50E3               	movf	plusw1,w,c
 30437  011A08  2235               	addwfc	(btemp+11)^0,f,c
 30438  011A0A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 30439  011A10  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 30440  011A16  EC2A  F002         	call	_strcpy	;wreg free
 30441                           
 30442                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 30443  011A1A  D78D               	goto	l15698
 30444  011A1C                     l15714:
 30445                           
 30446                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 30447  011A1C  0EE6               	movlw	low STR_101
 30448  011A1E  6EE6               	movwf	postinc1,c
 30449  011A20  0EFF               	movlw	high STR_101
 30450  011A22  6EE6               	movwf	postinc1,c
 30451                           
 30452                           ;stkvar	_n @ sp[(-58)+32]
 30453  011A24  0E54               	movlw	low _dbuf
 30454  011A26  6E34               	movwf	(btemp+10)^0,c
 30455  011A28  0E03               	movlw	high _dbuf
 30456  011A2A  6E35               	movwf	(btemp+11)^0,c
 30457  011A2C  0EE6               	movlw	-26
 30458  011A2E  50E3               	movf	plusw1,w,c
 30459  011A30  2634               	addwf	(btemp+10)^0,f,c
 30460  011A32  0EE7               	movlw	-25
 30461  011A34  50E3               	movf	plusw1,w,c
 30462  011A36  2235               	addwfc	(btemp+11)^0,f,c
 30463  011A38  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 30464  011A3E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 30465  011A44  EC2A  F002         	call	_strcpy	;wreg free
 30466  011A48  D776               	goto	l15698
 30467  011A4A                     l15722:
 30468                           
 30469                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 30470  011A4A  0E00               	movlw	0
 30471  011A4C  6E32               	movwf	(btemp+8)^0,c
 30472  011A4E  0E00               	movlw	0
 30473  011A50  6E33               	movwf	(btemp+9)^0,c
 30474  011A52  0E80               	movlw	128
 30475  011A54  6E34               	movwf	(btemp+10)^0,c
 30476  011A56  0E3F               	movlw	63
 30477  011A58  6E35               	movwf	(btemp+11)^0,c
 30478                           
 30479                           ;stkvar	_u @ sp[(-56)+12]
 30480  011A5A  0ED4               	movlw	-44
 30481  011A5C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 30482  011A62  0ED5               	movlw	-43
 30483  011A64  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 30484  011A6A  0ED6               	movlw	-42
 30485  011A6C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30486  011A72  0ED7               	movlw	-41
 30487  011A74  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30488                           
 30489                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 30490                           ;stkvar	_e @ sp[(-56)+34]
 30491  011A7A  0EEA               	movlw	-22
 30492  011A7C  6AE3               	clrf	plusw1,c
 30493  011A7E  0EEB               	movlw	-21
 30494  011A80  6AE3               	clrf	plusw1,c
 30495                           
 30496                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 30497  011A82  0E00               	movlw	0
 30498  011A84  6EE6               	movwf	postinc1,c
 30499  011A86  0E00               	movlw	0
 30500  011A88  6EE6               	movwf	postinc1,c
 30501  011A8A  0E00               	movlw	0
 30502  011A8C  6EE6               	movwf	postinc1,c
 30503  011A8E  0E00               	movlw	0
 30504  011A90  6EE6               	movwf	postinc1,c
 30505                           
 30506                           ;stkvar	_g @ sp[(-60)+16]
 30507  011A92  0ED4               	movlw	-44
 30508  011A94  006F FF8F FFE6     	movff	plusw1,postinc1
 30509  011A9A  006F FF8F FFE6     	movff	plusw1,postinc1
 30510  011AA0  006F FF8F FFE6     	movff	plusw1,postinc1
 30511  011AA6  006F FF8F FFE6     	movff	plusw1,postinc1
 30512  011AAC  EC9C  F0FF         	call	___fleq	;wreg free
 30513  011AB0  A02A               	btfss	btemp& (0+255),0,c
 30514  011AB2  D039               	goto	l15734
 30515  011AB4  D0BC               	goto	u14890
 30516  011AB6                     l15730:
 30517                           
 30518                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 30519  011AB6  0E00               	movlw	0
 30520  011AB8  6EE6               	movwf	postinc1,c
 30521  011ABA  0E00               	movlw	0
 30522  011ABC  6EE6               	movwf	postinc1,c
 30523  011ABE  0E20               	movlw	32
 30524  011AC0  6EE6               	movwf	postinc1,c
 30525  011AC2  0E41               	movlw	65
 30526  011AC4  6EE6               	movwf	postinc1,c
 30527                           
 30528                           ;stkvar	_u @ sp[(-60)+12]
 30529  011AC6  0ED0               	movlw	-48
 30530  011AC8  006F FF8F FFE6     	movff	plusw1,postinc1
 30531  011ACE  006F FF8F FFE6     	movff	plusw1,postinc1
 30532  011AD4  006F FF8F FFE6     	movff	plusw1,postinc1
 30533  011ADA  006F FF8F FFE6     	movff	plusw1,postinc1
 30534  011AE0  EC32  F0B3         	call	___flmul	;wreg free
 30535                           
 30536                           ;stkvar	_u @ sp[(-56)+12]
 30537  011AE4  0ED4               	movlw	-44
 30538  011AE6  0060  F0AB  FFE3   	movff	btemp,plusw1
 30539  011AEC  0ED5               	movlw	-43
 30540  011AEE  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30541  011AF4  0ED6               	movlw	-42
 30542  011AF6  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 30543  011AFC  0ED7               	movlw	-41
 30544  011AFE  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 30545                           
 30546                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 30547                           ;stkvar	_e @ sp[(-56)+34]
 30548  011B04  0EEA               	movlw	-22
 30549  011B06  50E3               	movf	plusw1,w,c
 30550  011B08  0F01               	addlw	1
 30551  011B0A  6E2A               	movwf	btemp^0,c
 30552  011B0C  0EEA               	movlw	-22
 30553  011B0E  0060  F0AB  FFE3   	movff	btemp,plusw1
 30554  011B14  6A2A               	clrf	btemp^0,c
 30555  011B16  0EEB               	movlw	-21
 30556  011B18  50E3               	movf	plusw1,w,c
 30557  011B1A  202A               	addwfc	btemp^0,w,c
 30558  011B1C  6E2A               	movwf	btemp^0,c
 30559  011B1E  0EEB               	movlw	-21
 30560  011B20  0060  F0AB  FFE3   	movff	btemp,plusw1
 30561  011B26                     l15734:
 30562                           
 30563                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 30564  011B26  0E00               	movlw	0
 30565  011B28  6EE6               	movwf	postinc1,c
 30566  011B2A  0E00               	movlw	0
 30567  011B2C  6EE6               	movwf	postinc1,c
 30568  011B2E  0E20               	movlw	32
 30569  011B30  6EE6               	movwf	postinc1,c
 30570  011B32  0E41               	movlw	65
 30571  011B34  6EE6               	movwf	postinc1,c
 30572                           
 30573                           ;stkvar	_u @ sp[(-60)+12]
 30574  011B36  0ED0               	movlw	-48
 30575  011B38  006F FF8F FFE6     	movff	plusw1,postinc1
 30576  011B3E  006F FF8F FFE6     	movff	plusw1,postinc1
 30577  011B44  006F FF8F FFE6     	movff	plusw1,postinc1
 30578  011B4A  006F FF8F FFE6     	movff	plusw1,postinc1
 30579  011B50  EC32  F0B3         	call	___flmul	;wreg free
 30580  011B54  0060  F0AB  FFE6   	movff	btemp,postinc1
 30581  011B5A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 30582  011B60  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 30583  011B66  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 30584                           
 30585                           ;stkvar	_g @ sp[(-60)+16]
 30586  011B6C  0ED4               	movlw	-44
 30587  011B6E  006F FF8F FFE6     	movff	plusw1,postinc1
 30588  011B74  006F FF8F FFE6     	movff	plusw1,postinc1
 30589  011B7A  006F FF8F FFE6     	movff	plusw1,postinc1
 30590  011B80  006F FF8F FFE6     	movff	plusw1,postinc1
 30591  011B86  ECF5  F0F4         	call	___flge	;wreg free
 30592  011B8A  A02A               	btfss	btemp& (0+255),0,c
 30593  011B8C  D032               	goto	l15740
 30594  011B8E  D793               	goto	l15730
 30595  011B90                     l15736:
 30596                           
 30597                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 30598  011B90  0E00               	movlw	0
 30599  011B92  6EE6               	movwf	postinc1,c
 30600  011B94  0E00               	movlw	0
 30601  011B96  6EE6               	movwf	postinc1,c
 30602  011B98  0E20               	movlw	32
 30603  011B9A  6EE6               	movwf	postinc1,c
 30604  011B9C  0E41               	movlw	65
 30605  011B9E  6EE6               	movwf	postinc1,c
 30606                           
 30607                           ;stkvar	_u @ sp[(-60)+12]
 30608  011BA0  0ED0               	movlw	-48
 30609  011BA2  006F FF8F FFE6     	movff	plusw1,postinc1
 30610  011BA8  006F FF8F FFE6     	movff	plusw1,postinc1
 30611  011BAE  006F FF8F FFE6     	movff	plusw1,postinc1
 30612  011BB4  006F FF8F FFE6     	movff	plusw1,postinc1
 30613  011BBA  EC83  F0BE         	call	___fldiv	;wreg free
 30614                           
 30615                           ;stkvar	_u @ sp[(-56)+12]
 30616  011BBE  0ED4               	movlw	-44
 30617  011BC0  0060  F0AB  FFE3   	movff	btemp,plusw1
 30618  011BC6  0ED5               	movlw	-43
 30619  011BC8  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30620  011BCE  0ED6               	movlw	-42
 30621  011BD0  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 30622  011BD6  0ED7               	movlw	-41
 30623  011BD8  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 30624                           
 30625                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 30626                           ;stkvar	_e @ sp[(-56)+34]
 30627  011BDE  50E1               	movf	fsr1l,w,c
 30628  011BE0  0FEA               	addlw	-22
 30629  011BE2  6ED9               	movwf	fsr2l,c
 30630  011BE4  50E2               	movf	fsr1h,w,c
 30631  011BE6  6EDA               	movwf	fsr2h,c
 30632  011BE8  0EFF               	movlw	255
 30633  011BEA  22DA               	addwfc	fsr2h,f,c
 30634  011BEC  06DE               	decf	postinc2,f,c
 30635  011BEE  0E00               	movlw	0
 30636  011BF0  5ADD               	subwfb	postdec2,f,c
 30637  011BF2                     l15740:
 30638                           
 30639                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 30640                           ;stkvar	_u @ sp[(-56)+12]
 30641  011BF2  0ED4               	movlw	-44
 30642  011BF4  006F FF8F FFE6     	movff	plusw1,postinc1
 30643  011BFA  006F FF8F FFE6     	movff	plusw1,postinc1
 30644  011C00  006F FF8F FFE6     	movff	plusw1,postinc1
 30645  011C06  006F FF8F FFE6     	movff	plusw1,postinc1
 30646                           
 30647                           ;stkvar	_g @ sp[(-60)+16]
 30648  011C0C  0ED4               	movlw	-44
 30649  011C0E  006F FF8F FFE6     	movff	plusw1,postinc1
 30650  011C14  006F FF8F FFE6     	movff	plusw1,postinc1
 30651  011C1A  006F FF8F FFE6     	movff	plusw1,postinc1
 30652  011C20  006F FF8F FFE6     	movff	plusw1,postinc1
 30653  011C26  ECF5  F0F4         	call	___flge	;wreg free
 30654  011C2A  A02A               	btfss	btemp& (0+255),0,c
 30655  011C2C  D7B1               	goto	l15736
 30656  011C2E                     u14890:
 30657                           
 30658                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 30659                           ;stkvar	_c @ sp[(-56)+-7]
 30660  011C2E  0EC1               	movlw	-63
 30661  011C30  50E3               	movf	plusw1,w,c
 30662  011C32  6EE6               	movwf	postinc1,c
 30663  011C34  0E00               	movlw	0
 30664  011C36  6EE6               	movwf	postinc1,c
 30665  011C38  ECF1  F008         	call	_tolower	;wreg free
 30666                           
 30667                           ;stkvar	_mode @ sp[(-56)+54]
 30668  011C3C  0EFE               	movlw	-2
 30669  011C3E  0060  F0AB  FFE3   	movff	btemp,plusw1
 30670                           
 30671                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 30672                           ;stkvar	_mode @ sp[(-56)+54]
 30673                           ;stkvar	_nmode @ sp[(-56)+55]
 30674  011C44  0EFE               	movlw	-2
 30675  011C46  006F FF8C  F02A    	movff	plusw1,btemp
 30676  011C4C  0EFF               	movlw	-1
 30677  011C4E  0060  F0AB  FFE3   	movff	btemp,plusw1
 30678                           
 30679                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 30680                           ;stkvar	_mode @ sp[(-56)+54]
 30681  011C54  0EFE               	movlw	-2
 30682  011C56  006F FF8C  F02A    	movff	plusw1,btemp
 30683  011C5C  0E67               	movlw	103
 30684  011C5E  182A               	xorwf	btemp^0,w,c
 30685  011C60  A4D8               	btfss	status,2,c
 30686  011C62  D025               	goto	l15758
 30687                           
 30688                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 30689  011C64  504C               	movf	_prec^0,w,c
 30690  011C66  104D               	iorwf	(_prec+1)^0,w,c
 30691  011C68  A4D8               	btfss	status,2,c
 30692  011C6A  D004               	goto	l15752
 30693                           
 30694                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 30695  011C6C  0E00               	movlw	0
 30696  011C6E  6E4D               	movwf	(_prec+1)^0,c
 30697  011C70  0E01               	movlw	1
 30698  011C72  6E4C               	movwf	_prec^0,c
 30699  011C74                     l15752:
 30700                           
 30701                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 30702  011C74  BE4D               	btfsc	(_prec+1)^0,7,c
 30703  011C76  D005               	goto	u14920
 30704  011C78  504D               	movf	(_prec+1)^0,w,c
 30705  011C7A  E110               	bnz	l15756
 30706  011C7C  044C               	decf	_prec^0,w,c
 30707  011C7E  B0D8               	btfsc	status,0,c
 30708  011C80  D00D               	goto	l15756
 30709  011C82                     u14920:
 30710  011C82  0E06               	movlw	6
 30711  011C84  6E34               	movwf	(btemp+10)^0,c
 30712  011C86  0E00               	movlw	0
 30713  011C88  6E35               	movwf	(btemp+11)^0,c
 30714                           
 30715                           ;stkvar	_p @ sp[(-56)+40]
 30716  011C8A  0EF0               	movlw	-16
 30717  011C8C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30718  011C92  0EF1               	movlw	-15
 30719  011C94  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30720  011C9A  D00C               	goto	l15764
 30721  011C9C                     l15756:
 30722                           
 30723                           ;stkvar	_p @ sp[(-56)+40]
 30724  011C9C  0EF0               	movlw	-16
 30725  011C9E  0060  F133  FFE3   	movff	_prec,plusw1
 30726  011CA4  0EF1               	movlw	-15
 30727  011CA6  0060  F137  FFE3   	movff	_prec+1,plusw1
 30728  011CAC  D003               	goto	l15764
 30729  011CAE                     l15758:
 30730                           
 30731                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 30732  011CAE  AE4D               	btfss	(_prec+1)^0,7,c
 30733  011CB0  D7F5               	goto	l15756
 30734  011CB2  D7E7               	goto	u14920
 30735  011CB4                     l15764:
 30736                           
 30737                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 30738                           ;stkvar	_mode @ sp[(-56)+54]
 30739  011CB4  0EFE               	movlw	-2
 30740  011CB6  006F FF8C  F02A    	movff	plusw1,btemp
 30741  011CBC  0E67               	movlw	103
 30742  011CBE  182A               	xorwf	btemp^0,w,c
 30743  011CC0  A4D8               	btfss	status,2,c
 30744  011CC2  D02F               	goto	l15774
 30745                           
 30746                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 30747                           ;stkvar	_e @ sp[(-56)+34]
 30748  011CC4  0EEB               	movlw	-21
 30749  011CC6  AEE3               	btfss	plusw1,7,c
 30750  011CC8  D00E               	goto	u14950
 30751  011CCA  0EEA               	movlw	-22
 30752  011CCC  006F FF8C  F02A    	movff	plusw1,btemp
 30753  011CD2  0EFC               	movlw	252
 30754  011CD4  5E2A               	subwf	btemp^0,f,c
 30755  011CD6  0EEB               	movlw	-21
 30756  011CD8  006F FF8C  F02A    	movff	plusw1,btemp
 30757  011CDE  0EFF               	movlw	255
 30758  011CE0  5A2A               	subwfb	btemp^0,f,c
 30759  011CE2  A0D8               	btfss	status,0,c
 30760  011CE4  D018               	goto	l15772
 30761  011CE6                     u14950:
 30762                           
 30763                           ;stkvar	_e @ sp[(-56)+34]
 30764                           ;stkvar	_p @ sp[(-56)+40]
 30765  011CE6  0EF0               	movlw	-16
 30766  011CE8  50E3               	movf	plusw1,w,c
 30767  011CEA  0FFF               	addlw	255
 30768  011CEC  6E34               	movwf	(btemp+10)^0,c
 30769  011CEE  0EF1               	movlw	-15
 30770  011CF0  006F FF8C  F035    	movff	plusw1,btemp+11
 30771  011CF6  0EFF               	movlw	255
 30772  011CF8  2235               	addwfc	(btemp+11)^0,f,c
 30773  011CFA  0EEA               	movlw	-22
 30774  011CFC  50E3               	movf	plusw1,w,c
 30775  011CFE  5C34               	subwf	(btemp+10)^0,w,c
 30776  011D00  5035               	movf	(btemp+11)^0,w,c
 30777  011D02  0A80               	xorlw	128
 30778  011D04  6E2A               	movwf	btemp^0,c
 30779  011D06  0EEB               	movlw	-21
 30780  011D08  50E3               	movf	plusw1,w,c
 30781  011D0A  0A80               	xorlw	128
 30782  011D0C  582A               	subwfb	btemp^0,w,c
 30783  011D0E  A0D8               	btfss	status,0,c
 30784  011D10  D002               	goto	l15772
 30785                           
 30786                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 30787  011D12  0E66               	movlw	102
 30788  011D14  D001               	goto	L32
 30789  011D16                     l15772:
 30790                           
 30791                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 30792  011D16  0E65               	movlw	101
 30793  011D18                     L32:
 30794  011D18  6E35               	movwf	(btemp+11)^0,c
 30795                           
 30796                           ;stkvar	_nmode @ sp[(-56)+55]
 30797  011D1A  0EFF               	movlw	-1
 30798  011D1C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30799  011D22                     l15774:
 30800                           
 30801                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 30802                           ;stkvar	_p @ sp[(-56)+40]
 30803                           ;stkvar	_m @ sp[(-56)+48]
 30804  011D22  0EF0               	movlw	-16
 30805  011D24  006F FF8C  F02A    	movff	plusw1,btemp
 30806  011D2A  0EF8               	movlw	-8
 30807  011D2C  0060  F0AB  FFE3   	movff	btemp,plusw1
 30808  011D32  0EF1               	movlw	-15
 30809  011D34  006F FF8C  F02A    	movff	plusw1,btemp
 30810  011D3A  0EF9               	movlw	-7
 30811  011D3C  0060  F0AB  FFE3   	movff	btemp,plusw1
 30812                           
 30813                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 30814                           ;stkvar	_mode @ sp[(-56)+54]
 30815  011D42  0EFE               	movlw	-2
 30816  011D44  006F FF8C  F02A    	movff	plusw1,btemp
 30817  011D4A  0E67               	movlw	103
 30818  011D4C  182A               	xorwf	btemp^0,w,c
 30819  011D4E  A4D8               	btfss	status,2,c
 30820  011D50  D00B               	goto	u14990
 30821                           
 30822                           ;stkvar	_nmode @ sp[(-56)+55]
 30823  011D52  0EFF               	movlw	-1
 30824  011D54  006F FF8C  F02A    	movff	plusw1,btemp
 30825  011D5A  0E66               	movlw	102
 30826  011D5C  182A               	xorwf	btemp^0,w,c
 30827  011D5E  A4D8               	btfss	status,2,c
 30828  011D60  D014               	goto	l2556
 30829                           
 30830                           ;stkvar	_e @ sp[(-56)+34]
 30831  011D62  0EEB               	movlw	-21
 30832  011D64  AEE3               	btfss	plusw1,7,c
 30833  011D66  D011               	goto	l2556
 30834  011D68                     u14990:
 30835                           
 30836                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 30837                           ;stkvar	_m @ sp[(-56)+48]
 30838  011D68  0EF8               	movlw	-8
 30839  011D6A  50E3               	movf	plusw1,w,c
 30840  011D6C  0F01               	addlw	1
 30841  011D6E  6E2A               	movwf	btemp^0,c
 30842  011D70  0EF8               	movlw	-8
 30843  011D72  0060  F0AB  FFE3   	movff	btemp,plusw1
 30844  011D78  6A2A               	clrf	btemp^0,c
 30845  011D7A  0EF9               	movlw	-7
 30846  011D7C  50E3               	movf	plusw1,w,c
 30847  011D7E  202A               	addwfc	btemp^0,w,c
 30848  011D80  6E2A               	movwf	btemp^0,c
 30849  011D82  0EF9               	movlw	-7
 30850  011D84  0060  F0AB  FFE3   	movff	btemp,plusw1
 30851  011D8A                     l2556:
 30852                           
 30853                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 30854                           ;stkvar	_nmode @ sp[(-56)+55]
 30855  011D8A  0EFF               	movlw	-1
 30856  011D8C  006F FF8C  F02A    	movff	plusw1,btemp
 30857  011D92  0E66               	movlw	102
 30858  011D94  182A               	xorwf	btemp^0,w,c
 30859  011D96  A4D8               	btfss	status,2,c
 30860  011D98  D03B               	goto	l15794
 30861                           
 30862                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 30863                           ;stkvar	_e @ sp[(-56)+34]
 30864  011D9A  0EEB               	movlw	-21
 30865  011D9C  AEE3               	btfss	plusw1,7,c
 30866  011D9E  D01C               	goto	l15790
 30867                           
 30868                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 30869  011DA0  0E00               	movlw	0
 30870  011DA2  6E32               	movwf	(btemp+8)^0,c
 30871  011DA4  0E00               	movlw	0
 30872  011DA6  6E33               	movwf	(btemp+9)^0,c
 30873  011DA8  0E80               	movlw	128
 30874  011DAA  6E34               	movwf	(btemp+10)^0,c
 30875  011DAC  0E3F               	movlw	63
 30876  011DAE  6E35               	movwf	(btemp+11)^0,c
 30877                           
 30878                           ;stkvar	_u @ sp[(-56)+12]
 30879  011DB0  0ED4               	movlw	-44
 30880  011DB2  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 30881  011DB8  0ED5               	movlw	-43
 30882  011DBA  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 30883  011DC0  0ED6               	movlw	-42
 30884  011DC2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30885  011DC8  0ED7               	movlw	-41
 30886  011DCA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30887                           
 30888                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 30889                           ;stkvar	_e @ sp[(-56)+34]
 30890  011DD0  0EEA               	movlw	-22
 30891  011DD2  6AE3               	clrf	plusw1,c
 30892  011DD4  0EEB               	movlw	-21
 30893  011DD6  6AE3               	clrf	plusw1,c
 30894  011DD8                     l15790:
 30895                           
 30896                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 30897                           ;stkvar	_mode @ sp[(-56)+54]
 30898  011DD8  0EFE               	movlw	-2
 30899  011DDA  006F FF8C  F02A    	movff	plusw1,btemp
 30900  011DE0  0E67               	movlw	103
 30901  011DE2  182A               	xorwf	btemp^0,w,c
 30902  011DE4  B4D8               	btfsc	status,2,c
 30903  011DE6  D014               	goto	l15794
 30904                           
 30905                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 30906                           ;stkvar	_e @ sp[(-56)+34]
 30907                           ;stkvar	_m @ sp[(-56)+48]
 30908  011DE8  0EF8               	movlw	-8
 30909  011DEA  50E3               	movf	plusw1,w,c
 30910  011DEC  6E2A               	movwf	btemp^0,c
 30911  011DEE  0EEA               	movlw	-22
 30912  011DF0  50E3               	movf	plusw1,w,c
 30913  011DF2  262A               	addwf	btemp^0,f,c
 30914  011DF4  0EF8               	movlw	-8
 30915  011DF6  0060  F0AB  FFE3   	movff	btemp,plusw1
 30916  011DFC  0EF9               	movlw	-7
 30917  011DFE  50E3               	movf	plusw1,w,c
 30918  011E00  6E2A               	movwf	btemp^0,c
 30919  011E02  0EEB               	movlw	-21
 30920  011E04  50E3               	movf	plusw1,w,c
 30921  011E06  222A               	addwfc	btemp^0,f,c
 30922  011E08  0EF9               	movlw	-7
 30923  011E0A  0060  F0AB  FFE3   	movff	btemp,plusw1
 30924  011E10                     l15794:
 30925                           
 30926                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 30927                           ;stkvar	_i @ sp[(-56)+36]
 30928  011E10  0EEC               	movlw	-20
 30929  011E12  6AE3               	clrf	plusw1,c
 30930  011E14  0EED               	movlw	-19
 30931  011E16  6AE3               	clrf	plusw1,c
 30932                           
 30933                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 30934                           ;stkvar	_g @ sp[(-56)+16]
 30935  011E18  0ED8               	movlw	-40
 30936  011E1A  006F FF8C  F032    	movff	plusw1,btemp+8
 30937  011E20  0ED9               	movlw	-39
 30938  011E22  006F FF8C  F033    	movff	plusw1,btemp+9
 30939  011E28  0EDA               	movlw	-38
 30940  011E2A  006F FF8C  F034    	movff	plusw1,btemp+10
 30941  011E30  0EDB               	movlw	-37
 30942  011E32  006F FF8C  F035    	movff	plusw1,btemp+11
 30943                           
 30944                           ;stkvar	_h @ sp[(-56)+24]
 30945  011E38  0EE0               	movlw	-32
 30946  011E3A  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 30947  011E40  0EE1               	movlw	-31
 30948  011E42  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 30949  011E48  0EE2               	movlw	-30
 30950  011E4A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30951  011E50  0EE3               	movlw	-29
 30952  011E52  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30953                           
 30954                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 30955                           ;stkvar	_u @ sp[(-56)+12]
 30956  011E58  0ED4               	movlw	-44
 30957  011E5A  006F FF8C  F032    	movff	plusw1,btemp+8
 30958  011E60  0ED5               	movlw	-43
 30959  011E62  006F FF8C  F033    	movff	plusw1,btemp+9
 30960  011E68  0ED6               	movlw	-42
 30961  011E6A  006F FF8C  F034    	movff	plusw1,btemp+10
 30962  011E70  0ED7               	movlw	-41
 30963  011E72  006F FF8C  F035    	movff	plusw1,btemp+11
 30964                           
 30965                           ;stkvar	_ou @ sp[(-56)+28]
 30966  011E78  0EE4               	movlw	-28
 30967  011E7A  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 30968  011E80  0EE5               	movlw	-27
 30969  011E82  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 30970  011E88  0EE6               	movlw	-26
 30971  011E8A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30972  011E90  0EE7               	movlw	-25
 30973  011E92  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30974                           
 30975                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 30976  011E98  D0D6               	goto	l15810
 30977  011E9A                     l15800:
 30978                           
 30979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 30980                           ;stkvar	_u @ sp[(-56)+12]
 30981  011E9A  0ED4               	movlw	-44
 30982  011E9C  006F FF8F FFE6     	movff	plusw1,postinc1
 30983  011EA2  006F FF8F FFE6     	movff	plusw1,postinc1
 30984  011EA8  006F FF8F FFE6     	movff	plusw1,postinc1
 30985  011EAE  006F FF8F FFE6     	movff	plusw1,postinc1
 30986                           
 30987                           ;stkvar	_h @ sp[(-60)+24]
 30988  011EB4  0EDC               	movlw	-36
 30989  011EB6  006F FF8F FFE6     	movff	plusw1,postinc1
 30990  011EBC  006F FF8F FFE6     	movff	plusw1,postinc1
 30991  011EC2  006F FF8F FFE6     	movff	plusw1,postinc1
 30992  011EC8  006F FF8F FFE6     	movff	plusw1,postinc1
 30993  011ECE  EC83  F0BE         	call	___fldiv	;wreg free
 30994  011ED2  0060  F0AB  FFE6   	movff	btemp,postinc1
 30995  011ED8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 30996  011EDE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 30997  011EE4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 30998  011EEA  EC9A  F0D2         	call	_floorf	;wreg free
 30999                           
 31000                           ;stkvar	_l @ sp[(-56)+20]
 31001  011EEE  0EDC               	movlw	-36
 31002  011EF0  0060  F0AB  FFE3   	movff	btemp,plusw1
 31003  011EF6  0EDD               	movlw	-35
 31004  011EF8  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31005  011EFE  0EDE               	movlw	-34
 31006  011F00  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31007  011F06  0EDF               	movlw	-33
 31008  011F08  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31009                           
 31010                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 31011                           ;stkvar	_l @ sp[(-56)+20]
 31012  011F0E  0EDC               	movlw	-36
 31013  011F10  006F FF8F FFE6     	movff	plusw1,postinc1
 31014  011F16  006F FF8F FFE6     	movff	plusw1,postinc1
 31015  011F1C  006F FF8F FFE6     	movff	plusw1,postinc1
 31016  011F22  006F FF8F FFE6     	movff	plusw1,postinc1
 31017  011F28  EC89  F0F3         	call	___fltol	;wreg free
 31018  011F2C  0060  F0A8  F034   	movff	btemp,btemp+10
 31019  011F32  0060  F0AC  F035   	movff	btemp+1,btemp+11
 31020                           
 31021                           ;stkvar	_d @ sp[(-56)+44]
 31022  011F38  0EF4               	movlw	-12
 31023  011F3A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31024  011F40  0EF5               	movlw	-11
 31025  011F42  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31026                           
 31027                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 31028                           ;stkvar	_u @ sp[(-56)+12]
 31029  011F48  0ED4               	movlw	-44
 31030  011F4A  006F FF8F FFE6     	movff	plusw1,postinc1
 31031  011F50  006F FF8F FFE6     	movff	plusw1,postinc1
 31032  011F56  006F FF8F FFE6     	movff	plusw1,postinc1
 31033  011F5C  006F FF8F FFE6     	movff	plusw1,postinc1
 31034                           
 31035                           ;stkvar	_l @ sp[(-60)+20]
 31036  011F62  0ED8               	movlw	-40
 31037  011F64  006F FF8F FFE6     	movff	plusw1,postinc1
 31038  011F6A  006F FF8F FFE6     	movff	plusw1,postinc1
 31039  011F70  006F FF8F FFE6     	movff	plusw1,postinc1
 31040  011F76  006F FF8F FFE6     	movff	plusw1,postinc1
 31041  011F7C  EC32  F0B3         	call	___flmul	;wreg free
 31042  011F80  0060  F0AB  FFE6   	movff	btemp,postinc1
 31043  011F86  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 31044  011F8C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 31045  011F92  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 31046                           
 31047                           ;stkvar	_h @ sp[(-60)+24]
 31048  011F98  0EDC               	movlw	-36
 31049  011F9A  006F FF8F FFE6     	movff	plusw1,postinc1
 31050  011FA0  006F FF8F FFE6     	movff	plusw1,postinc1
 31051  011FA6  006F FF8F FFE6     	movff	plusw1,postinc1
 31052  011FAC  006F FF8F FFE6     	movff	plusw1,postinc1
 31053  011FB2  EC2A  F00F         	call	___flsub	;wreg free
 31054                           
 31055                           ;stkvar	_h @ sp[(-56)+24]
 31056  011FB6  0EE0               	movlw	-32
 31057  011FB8  0060  F0AB  FFE3   	movff	btemp,plusw1
 31058  011FBE  0EE1               	movlw	-31
 31059  011FC0  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31060  011FC6  0EE2               	movlw	-30
 31061  011FC8  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31062  011FCE  0EE3               	movlw	-29
 31063  011FD0  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31064                           
 31065                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 31066  011FD6  0E00               	movlw	0
 31067  011FD8  6EE6               	movwf	postinc1,c
 31068  011FDA  0E00               	movlw	0
 31069  011FDC  6EE6               	movwf	postinc1,c
 31070  011FDE  0E20               	movlw	32
 31071  011FE0  6EE6               	movwf	postinc1,c
 31072  011FE2  0E41               	movlw	65
 31073  011FE4  6EE6               	movwf	postinc1,c
 31074                           
 31075                           ;stkvar	_u @ sp[(-60)+12]
 31076  011FE6  0ED0               	movlw	-48
 31077  011FE8  006F FF8F FFE6     	movff	plusw1,postinc1
 31078  011FEE  006F FF8F FFE6     	movff	plusw1,postinc1
 31079  011FF4  006F FF8F FFE6     	movff	plusw1,postinc1
 31080  011FFA  006F FF8F FFE6     	movff	plusw1,postinc1
 31081  012000  EC83  F0BE         	call	___fldiv	;wreg free
 31082                           
 31083                           ;stkvar	_u @ sp[(-56)+12]
 31084  012004  0ED4               	movlw	-44
 31085  012006  0060  F0AB  FFE3   	movff	btemp,plusw1
 31086  01200C  0ED5               	movlw	-43
 31087  01200E  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31088  012014  0ED6               	movlw	-42
 31089  012016  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31090  01201C  0ED7               	movlw	-41
 31091  01201E  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31092                           
 31093                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 31094                           ;stkvar	_i @ sp[(-56)+36]
 31095  012024  0EEC               	movlw	-20
 31096  012026  50E3               	movf	plusw1,w,c
 31097  012028  0F01               	addlw	1
 31098  01202A  6E2A               	movwf	btemp^0,c
 31099  01202C  0EEC               	movlw	-20
 31100  01202E  0060  F0AB  FFE3   	movff	btemp,plusw1
 31101  012034  6A2A               	clrf	btemp^0,c
 31102  012036  0EED               	movlw	-19
 31103  012038  50E3               	movf	plusw1,w,c
 31104  01203A  202A               	addwfc	btemp^0,w,c
 31105  01203C  6E2A               	movwf	btemp^0,c
 31106  01203E  0EED               	movlw	-19
 31107  012040  0060  F0AB  FFE3   	movff	btemp,plusw1
 31108  012046                     l15810:
 31109                           
 31110                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 31111                           ;stkvar	_m @ sp[(-56)+48]
 31112                           ;stkvar	_i @ sp[(-56)+36]
 31113  012046  50E1               	movf	fsr1l,w,c
 31114  012048  0FEC               	addlw	-20
 31115  01204A  6ED9               	movwf	fsr2l,c
 31116  01204C  50E2               	movf	fsr1h,w,c
 31117  01204E  6EDA               	movwf	fsr2h,c
 31118  012050  0EFF               	movlw	255
 31119  012052  22DA               	addwfc	fsr2h,f,c
 31120  012054  0EF8               	movlw	-8
 31121  012056  50E3               	movf	plusw1,w,c
 31122  012058  5CDE               	subwf	postinc2,w,c
 31123  01205A  50DE               	movf	postinc2,w,c
 31124  01205C  0A80               	xorlw	128
 31125  01205E  6E2A               	movwf	btemp^0,c
 31126  012060  0EF9               	movlw	-7
 31127  012062  50E3               	movf	plusw1,w,c
 31128  012064  0A80               	xorlw	128
 31129  012066  582A               	subwfb	btemp^0,w,c
 31130  012068  A0D8               	btfss	status,0,c
 31131  01206A  D717               	goto	l15800
 31132                           
 31133                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 31134  01206C  0E00               	movlw	0
 31135  01206E  6EE6               	movwf	postinc1,c
 31136  012070  0E00               	movlw	0
 31137  012072  6EE6               	movwf	postinc1,c
 31138  012074  0EA0               	movlw	160
 31139  012076  6EE6               	movwf	postinc1,c
 31140  012078  0E40               	movlw	64
 31141  01207A  6EE6               	movwf	postinc1,c
 31142                           
 31143                           ;stkvar	_u @ sp[(-60)+12]
 31144  01207C  0ED0               	movlw	-48
 31145  01207E  006F FF8F FFE6     	movff	plusw1,postinc1
 31146  012084  006F FF8F FFE6     	movff	plusw1,postinc1
 31147  01208A  006F FF8F FFE6     	movff	plusw1,postinc1
 31148  012090  006F FF8F FFE6     	movff	plusw1,postinc1
 31149  012096  EC32  F0B3         	call	___flmul	;wreg free
 31150                           
 31151                           ;stkvar	_l @ sp[(-56)+20]
 31152  01209A  0EDC               	movlw	-36
 31153  01209C  0060  F0AB  FFE3   	movff	btemp,plusw1
 31154  0120A2  0EDD               	movlw	-35
 31155  0120A4  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31156  0120AA  0EDE               	movlw	-34
 31157  0120AC  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31158  0120B2  0EDF               	movlw	-33
 31159  0120B4  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31160                           
 31161                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 31162                           ;stkvar	_l @ sp[(-56)+20]
 31163  0120BA  0EDC               	movlw	-36
 31164  0120BC  006F FF8F FFE6     	movff	plusw1,postinc1
 31165  0120C2  006F FF8F FFE6     	movff	plusw1,postinc1
 31166  0120C8  006F FF8F FFE6     	movff	plusw1,postinc1
 31167  0120CE  006F FF8F FFE6     	movff	plusw1,postinc1
 31168                           
 31169                           ;stkvar	_h @ sp[(-60)+24]
 31170  0120D4  0EDC               	movlw	-36
 31171  0120D6  006F FF8F FFE6     	movff	plusw1,postinc1
 31172  0120DC  006F FF8F FFE6     	movff	plusw1,postinc1
 31173  0120E2  006F FF8F FFE6     	movff	plusw1,postinc1
 31174  0120E8  006F FF8F FFE6     	movff	plusw1,postinc1
 31175  0120EE  ECF5  F0F4         	call	___flge	;wreg free
 31176  0120F2  A02A               	btfss	btemp& (0+255),0,c
 31177  0120F4  D021               	goto	u15060
 31178                           
 31179                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 31180                           ;stkvar	_l @ sp[(-56)+20]
 31181                           
 31182                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 31183                           
 31184                           ;stkvar	_l @ sp[(-56)+20]
 31185                           
 31186                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 31187  0120F6  0EDC               	movlw	-36
 31188  0120F8  006F FF8F FFE6     	movff	plusw1,postinc1
 31189  0120FE  006F FF8F FFE6     	movff	plusw1,postinc1
 31190  012104  006F FF8F FFE6     	movff	plusw1,postinc1
 31191  01210A  006F FF8F FFE6     	movff	plusw1,postinc1
 31192                           
 31193                           ;stkvar	_h @ sp[(-60)+24]
 31194  012110  0EDC               	movlw	-36
 31195  012112  006F FF8F FFE6     	movff	plusw1,postinc1
 31196  012118  006F FF8F FFE6     	movff	plusw1,postinc1
 31197  01211E  006F FF8F FFE6     	movff	plusw1,postinc1
 31198  012124  006F FF8F FFE6     	movff	plusw1,postinc1
 31199  01212A  EC9C  F0FF         	call	___fleq	;wreg free
 31200  01212E  A02A               	btfss	btemp& (0+255),0,c
 31201  012130  D01B               	goto	l15824
 31202                           
 31203                           ;stkvar	_d @ sp[(-56)+44]
 31204  012132  0EF4               	movlw	-12
 31205  012134  B0E3               	btfsc	plusw1,0,c
 31206  012136  D018               	goto	l15824
 31207  012138                     u15060:
 31208                           
 31209                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 31210  012138  0E00               	movlw	0
 31211  01213A  6E32               	movwf	(btemp+8)^0,c
 31212  01213C  0E00               	movlw	0
 31213  01213E  6E33               	movwf	(btemp+9)^0,c
 31214  012140  0E00               	movlw	0
 31215  012142  6E34               	movwf	(btemp+10)^0,c
 31216  012144  0E00               	movlw	0
 31217  012146  6E35               	movwf	(btemp+11)^0,c
 31218                           
 31219                           ;stkvar	_l @ sp[(-56)+20]
 31220  012148  0EDC               	movlw	-36
 31221  01214A  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 31222  012150  0EDD               	movlw	-35
 31223  012152  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 31224  012158  0EDE               	movlw	-34
 31225  01215A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31226  012160  0EDF               	movlw	-33
 31227  012162  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31228  012168                     l15824:
 31229                           
 31230                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 31231                           ;stkvar	_l @ sp[(-56)+20]
 31232  012168  0EDC               	movlw	-36
 31233  01216A  006F FF8F FFE6     	movff	plusw1,postinc1
 31234  012170  006F FF8F FFE6     	movff	plusw1,postinc1
 31235  012176  006F FF8F FFE6     	movff	plusw1,postinc1
 31236  01217C  006F FF8F FFE6     	movff	plusw1,postinc1
 31237                           
 31238                           ;stkvar	_g @ sp[(-60)+16]
 31239  012182  0ED4               	movlw	-44
 31240  012184  006F FF8F FFE6     	movff	plusw1,postinc1
 31241  01218A  006F FF8F FFE6     	movff	plusw1,postinc1
 31242  012190  006F FF8F FFE6     	movff	plusw1,postinc1
 31243  012196  006F FF8F FFE6     	movff	plusw1,postinc1
 31244  01219C  EC47  F0B7         	call	___fladd	;wreg free
 31245                           
 31246                           ;stkvar	_h @ sp[(-56)+24]
 31247  0121A0  0EE0               	movlw	-32
 31248  0121A2  0060  F0AB  FFE3   	movff	btemp,plusw1
 31249  0121A8  0EE1               	movlw	-31
 31250  0121AA  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31251  0121B0  0EE2               	movlw	-30
 31252  0121B2  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31253  0121B8  0EE3               	movlw	-29
 31254  0121BA  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31255                           
 31256                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 31257                           ;stkvar	_ou @ sp[(-56)+28]
 31258  0121C0  0EE4               	movlw	-28
 31259  0121C2  006F FF8C  F032    	movff	plusw1,btemp+8
 31260  0121C8  0EE5               	movlw	-27
 31261  0121CA  006F FF8C  F033    	movff	plusw1,btemp+9
 31262  0121D0  0EE6               	movlw	-26
 31263  0121D2  006F FF8C  F034    	movff	plusw1,btemp+10
 31264  0121D8  0EE7               	movlw	-25
 31265  0121DA  006F FF8C  F035    	movff	plusw1,btemp+11
 31266                           
 31267                           ;stkvar	_u @ sp[(-56)+12]
 31268  0121E0  0ED4               	movlw	-44
 31269  0121E2  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 31270  0121E8  0ED5               	movlw	-43
 31271  0121EA  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 31272  0121F0  0ED6               	movlw	-42
 31273  0121F2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31274  0121F8  0ED7               	movlw	-41
 31275  0121FA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31276                           
 31277                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 31278                           ;stkvar	_nmode @ sp[(-56)+55]
 31279  012200  0EFF               	movlw	-1
 31280  012202  006F FF8C  F02A    	movff	plusw1,btemp
 31281  012208  0E65               	movlw	101
 31282  01220A  182A               	xorwf	btemp^0,w,c
 31283  01220C  B4D8               	btfsc	status,2,c
 31284  01220E  D011               	goto	l15832
 31285                           
 31286                           ;stkvar	_e @ sp[(-56)+34]
 31287                           ;stkvar	_ne @ sp[(-56)+46]
 31288  012210  0EEA               	movlw	-22
 31289  012212  006F FF8C  F02A    	movff	plusw1,btemp
 31290  012218  0EF6               	movlw	-10
 31291  01221A  0060  F0AB  FFE3   	movff	btemp,plusw1
 31292  012220  0EEB               	movlw	-21
 31293  012222  006F FF8C  F02A    	movff	plusw1,btemp
 31294  012228  0EF7               	movlw	-9
 31295  01222A  0060  F0AB  FFE3   	movff	btemp,plusw1
 31296  012230  D004               	goto	l2571
 31297  012232                     l15832:
 31298                           
 31299                           ;stkvar	_ne @ sp[(-56)+46]
 31300  012232  0EF6               	movlw	-10
 31301  012234  6AE3               	clrf	plusw1,c
 31302  012236  0EF7               	movlw	-9
 31303  012238  6AE3               	clrf	plusw1,c
 31304  01223A                     l2571:
 31305                           
 31306                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 31307                           ;stkvar	_pp @ sp[(-56)+50]
 31308  01223A  0EFA               	movlw	-6
 31309  01223C  6AE3               	clrf	plusw1,c
 31310  01223E  0EFB               	movlw	-5
 31311  012240  6AE3               	clrf	plusw1,c
 31312                           
 31313                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 31314                           ;stkvar	_t @ sp[(-56)+52]
 31315  012242  0EFC               	movlw	-4
 31316  012244  6AE3               	clrf	plusw1,c
 31317  012246  0EFD               	movlw	-3
 31318  012248  6AE3               	clrf	plusw1,c
 31319                           
 31320                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 31321                           ;stkvar	_i @ sp[(-56)+36]
 31322  01224A  0EEC               	movlw	-20
 31323  01224C  6AE3               	clrf	plusw1,c
 31324  01224E  0EED               	movlw	-19
 31325  012250  6AE3               	clrf	plusw1,c
 31326                           
 31327                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 31328  012252  D1B7               	goto	l15884
 31329  012254                     l15834:
 31330                           
 31331                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 31332                           ;stkvar	_u @ sp[(-56)+12]
 31333  012254  0ED4               	movlw	-44
 31334  012256  006F FF8F FFE6     	movff	plusw1,postinc1
 31335  01225C  006F FF8F FFE6     	movff	plusw1,postinc1
 31336  012262  006F FF8F FFE6     	movff	plusw1,postinc1
 31337  012268  006F FF8F FFE6     	movff	plusw1,postinc1
 31338                           
 31339                           ;stkvar	_h @ sp[(-60)+24]
 31340  01226E  0EDC               	movlw	-36
 31341  012270  006F FF8F FFE6     	movff	plusw1,postinc1
 31342  012276  006F FF8F FFE6     	movff	plusw1,postinc1
 31343  01227C  006F FF8F FFE6     	movff	plusw1,postinc1
 31344  012282  006F FF8F FFE6     	movff	plusw1,postinc1
 31345  012288  EC83  F0BE         	call	___fldiv	;wreg free
 31346  01228C  0060  F0AB  FFE6   	movff	btemp,postinc1
 31347  012292  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 31348  012298  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 31349  01229E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 31350  0122A4  EC9A  F0D2         	call	_floorf	;wreg free
 31351                           
 31352                           ;stkvar	_l @ sp[(-56)+20]
 31353  0122A8  0EDC               	movlw	-36
 31354  0122AA  0060  F0AB  FFE3   	movff	btemp,plusw1
 31355  0122B0  0EDD               	movlw	-35
 31356  0122B2  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31357  0122B8  0EDE               	movlw	-34
 31358  0122BA  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31359  0122C0  0EDF               	movlw	-33
 31360  0122C2  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31361                           
 31362                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 31363                           ;stkvar	_l @ sp[(-56)+20]
 31364  0122C8  0EDC               	movlw	-36
 31365  0122CA  006F FF8F FFE6     	movff	plusw1,postinc1
 31366  0122D0  006F FF8F FFE6     	movff	plusw1,postinc1
 31367  0122D6  006F FF8F FFE6     	movff	plusw1,postinc1
 31368  0122DC  006F FF8F FFE6     	movff	plusw1,postinc1
 31369  0122E2  EC89  F0F3         	call	___fltol	;wreg free
 31370  0122E6  0060  F0A8  F034   	movff	btemp,btemp+10
 31371  0122EC  0060  F0AC  F035   	movff	btemp+1,btemp+11
 31372                           
 31373                           ;stkvar	_d @ sp[(-56)+44]
 31374  0122F2  0EF4               	movlw	-12
 31375  0122F4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31376  0122FA  0EF5               	movlw	-11
 31377  0122FC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31378                           
 31379                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 31380  012302  B84E               	btfsc	_flags^0,4,c
 31381  012304  D026               	goto	l15848
 31382                           
 31383                           ;stkvar	_d @ sp[(-56)+44]
 31384  012306  0EF4               	movlw	-12
 31385  012308  006F FF8C  F02A    	movff	plusw1,btemp
 31386  01230E  0EF5               	movlw	-11
 31387  012310  50E3               	movf	plusw1,w,c
 31388  012312  102A               	iorwf	btemp^0,w,c
 31389  012314  A4D8               	btfss	status,2,c
 31390  012316  D01D               	goto	l15848
 31391                           
 31392                           ;stkvar	_mode @ sp[(-56)+54]
 31393  012318  0EFE               	movlw	-2
 31394  01231A  006F FF8C  F02A    	movff	plusw1,btemp
 31395  012320  0E67               	movlw	103
 31396  012322  182A               	xorwf	btemp^0,w,c
 31397  012324  A4D8               	btfss	status,2,c
 31398  012326  D015               	goto	l15848
 31399                           
 31400                           ;stkvar	_ne @ sp[(-56)+46]
 31401  012328  0EF7               	movlw	-9
 31402  01232A  AEE3               	btfss	plusw1,7,c
 31403  01232C  D012               	goto	l15848
 31404                           
 31405                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 31406                           ;stkvar	_t @ sp[(-56)+52]
 31407  01232E  0EFC               	movlw	-4
 31408  012330  50E3               	movf	plusw1,w,c
 31409  012332  0F01               	addlw	1
 31410  012334  6E2A               	movwf	btemp^0,c
 31411  012336  0EFC               	movlw	-4
 31412  012338  0060  F0AB  FFE3   	movff	btemp,plusw1
 31413  01233E  6A2A               	clrf	btemp^0,c
 31414  012340  0EFD               	movlw	-3
 31415  012342  50E3               	movf	plusw1,w,c
 31416  012344  202A               	addwfc	btemp^0,w,c
 31417  012346  6E2A               	movwf	btemp^0,c
 31418  012348  0EFD               	movlw	-3
 31419  01234A  0060  F0AB  FFE3   	movff	btemp,plusw1
 31420                           
 31421                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 31422  012350  D0AF               	goto	l15876
 31423  012352                     l15848:
 31424                           
 31425                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 31426                           ;stkvar	_pp @ sp[(-56)+50]
 31427  012352  0EFA               	movlw	-6
 31428  012354  006F FF8C  F02A    	movff	plusw1,btemp
 31429  01235A  0EFB               	movlw	-5
 31430  01235C  50E3               	movf	plusw1,w,c
 31431  01235E  102A               	iorwf	btemp^0,w,c
 31432  012360  A4D8               	btfss	status,2,c
 31433  012362  D070               	goto	l15868
 31434                           
 31435                           ;stkvar	_ne @ sp[(-56)+46]
 31436  012364  0EF7               	movlw	-9
 31437  012366  AEE3               	btfss	plusw1,7,c
 31438  012368  D06D               	goto	l15868
 31439                           
 31440                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 31441                           ;stkvar	_n @ sp[(-56)+32]
 31442  01236A  0EE8               	movlw	-24
 31443  01236C  006F FF8C  F034    	movff	plusw1,btemp+10
 31444  012372  0EE9               	movlw	-23
 31445  012374  006F FF8C  F035    	movff	plusw1,btemp+11
 31446  01237A  0E54               	movlw	low _dbuf
 31447  01237C  2434               	addwf	(btemp+10)^0,w,c
 31448  01237E  6ED9               	movwf	fsr2l,c
 31449  012380  0E03               	movlw	high _dbuf
 31450  012382  2035               	addwfc	(btemp+11)^0,w,c
 31451  012384  6EDA               	movwf	fsr2h,c
 31452  012386  0E2E               	movlw	46
 31453  012388  6EDF               	movwf	indf2,c
 31454                           
 31455                           ;stkvar	_n @ sp[(-56)+32]
 31456  01238A  0EE8               	movlw	-24
 31457  01238C  50E3               	movf	plusw1,w,c
 31458  01238E  0F01               	addlw	1
 31459  012390  6E2A               	movwf	btemp^0,c
 31460  012392  0EE8               	movlw	-24
 31461  012394  0060  F0AB  FFE3   	movff	btemp,plusw1
 31462  01239A  6A2A               	clrf	btemp^0,c
 31463  01239C  0EE9               	movlw	-23
 31464  01239E  50E3               	movf	plusw1,w,c
 31465  0123A0  202A               	addwfc	btemp^0,w,c
 31466  0123A2  6E2A               	movwf	btemp^0,c
 31467  0123A4  0EE9               	movlw	-23
 31468  0123A6  0060  F0AB  FFE3   	movff	btemp,plusw1
 31469                           
 31470                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 31471                           ;stkvar	_w @ sp[(-56)+38]
 31472  0123AC  50E1               	movf	fsr1l,w,c
 31473  0123AE  0FEE               	addlw	-18
 31474  0123B0  6ED9               	movwf	fsr2l,c
 31475  0123B2  50E2               	movf	fsr1h,w,c
 31476  0123B4  6EDA               	movwf	fsr2h,c
 31477  0123B6  0EFF               	movlw	255
 31478  0123B8  22DA               	addwfc	fsr2h,f,c
 31479  0123BA  06DE               	decf	postinc2,f,c
 31480  0123BC  0E00               	movlw	0
 31481  0123BE  5ADD               	subwfb	postdec2,f,c
 31482                           
 31483                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 31484  0123C0  0E01               	movlw	1
 31485  0123C2  6E34               	movwf	(btemp+10)^0,c
 31486  0123C4  0E00               	movlw	0
 31487  0123C6  6E35               	movwf	(btemp+11)^0,c
 31488                           
 31489                           ;stkvar	_pp @ sp[(-56)+50]
 31490  0123C8  0EFA               	movlw	-6
 31491  0123CA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31492  0123D0  0EFB               	movlw	-5
 31493  0123D2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31494  0123D8  D035               	goto	l15868
 31495  0123DA                     l15860:
 31496                           
 31497                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 31498                           ;stkvar	_n @ sp[(-56)+32]
 31499  0123DA  0EE8               	movlw	-24
 31500  0123DC  006F FF8C  F034    	movff	plusw1,btemp+10
 31501  0123E2  0EE9               	movlw	-23
 31502  0123E4  006F FF8C  F035    	movff	plusw1,btemp+11
 31503  0123EA  0E54               	movlw	low _dbuf
 31504  0123EC  2434               	addwf	(btemp+10)^0,w,c
 31505  0123EE  6ED9               	movwf	fsr2l,c
 31506  0123F0  0E03               	movlw	high _dbuf
 31507  0123F2  2035               	addwfc	(btemp+11)^0,w,c
 31508  0123F4  6EDA               	movwf	fsr2h,c
 31509  0123F6  0E30               	movlw	48
 31510  0123F8  6EDF               	movwf	indf2,c
 31511                           
 31512                           ;stkvar	_n @ sp[(-56)+32]
 31513  0123FA  0EE8               	movlw	-24
 31514  0123FC  50E3               	movf	plusw1,w,c
 31515  0123FE  0F01               	addlw	1
 31516  012400  6E2A               	movwf	btemp^0,c
 31517  012402  0EE8               	movlw	-24
 31518  012404  0060  F0AB  FFE3   	movff	btemp,plusw1
 31519  01240A  6A2A               	clrf	btemp^0,c
 31520  01240C  0EE9               	movlw	-23
 31521  01240E  50E3               	movf	plusw1,w,c
 31522  012410  202A               	addwfc	btemp^0,w,c
 31523  012412  6E2A               	movwf	btemp^0,c
 31524  012414  0EE9               	movlw	-23
 31525  012416  0060  F0AB  FFE3   	movff	btemp,plusw1
 31526                           
 31527                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 31528                           ;stkvar	_w @ sp[(-56)+38]
 31529  01241C  50E1               	movf	fsr1l,w,c
 31530  01241E  0FEE               	addlw	-18
 31531  012420  6ED9               	movwf	fsr2l,c
 31532  012422  50E2               	movf	fsr1h,w,c
 31533  012424  6EDA               	movwf	fsr2h,c
 31534  012426  0EFF               	movlw	255
 31535  012428  22DA               	addwfc	fsr2h,f,c
 31536  01242A  06DE               	decf	postinc2,f,c
 31537  01242C  0E00               	movlw	0
 31538  01242E  5ADD               	subwfb	postdec2,f,c
 31539                           
 31540                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 31541                           ;stkvar	_t @ sp[(-56)+52]
 31542  012430  50E1               	movf	fsr1l,w,c
 31543  012432  0FFC               	addlw	-4
 31544  012434  6ED9               	movwf	fsr2l,c
 31545  012436  50E2               	movf	fsr1h,w,c
 31546  012438  6EDA               	movwf	fsr2h,c
 31547  01243A  0EFF               	movlw	255
 31548  01243C  22DA               	addwfc	fsr2h,f,c
 31549  01243E  06DE               	decf	postinc2,f,c
 31550  012440  0E00               	movlw	0
 31551  012442  5ADD               	subwfb	postdec2,f,c
 31552  012444                     l15868:
 31553                           
 31554                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 31555                           ;stkvar	_t @ sp[(-56)+52]
 31556  012444  0EFC               	movlw	-4
 31557  012446  006F FF8C  F02A    	movff	plusw1,btemp
 31558  01244C  0EFD               	movlw	-3
 31559  01244E  50E3               	movf	plusw1,w,c
 31560  012450  102A               	iorwf	btemp^0,w,c
 31561  012452  A4D8               	btfss	status,2,c
 31562  012454  D7C2               	goto	l15860
 31563                           
 31564                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 31565                           ;stkvar	_n @ sp[(-56)+32]
 31566  012456  0EE8               	movlw	-24
 31567  012458  006F FF8C  F034    	movff	plusw1,btemp+10
 31568  01245E  0EE9               	movlw	-23
 31569  012460  006F FF8C  F035    	movff	plusw1,btemp+11
 31570  012466  0E54               	movlw	low _dbuf
 31571  012468  2434               	addwf	(btemp+10)^0,w,c
 31572  01246A  6ED9               	movwf	fsr2l,c
 31573  01246C  0E03               	movlw	high _dbuf
 31574  01246E  2035               	addwfc	(btemp+11)^0,w,c
 31575  012470  6EDA               	movwf	fsr2h,c
 31576                           
 31577                           ;stkvar	_d @ sp[(-56)+44]
 31578  012472  0EF4               	movlw	-12
 31579  012474  50E3               	movf	plusw1,w,c
 31580  012476  0F30               	addlw	48
 31581  012478  6EDF               	movwf	indf2,c
 31582                           
 31583                           ;stkvar	_n @ sp[(-56)+32]
 31584  01247A  0EE8               	movlw	-24
 31585  01247C  50E3               	movf	plusw1,w,c
 31586  01247E  0F01               	addlw	1
 31587  012480  6E2A               	movwf	btemp^0,c
 31588  012482  0EE8               	movlw	-24
 31589  012484  0060  F0AB  FFE3   	movff	btemp,plusw1
 31590  01248A  6A2A               	clrf	btemp^0,c
 31591  01248C  0EE9               	movlw	-23
 31592  01248E  50E3               	movf	plusw1,w,c
 31593  012490  202A               	addwfc	btemp^0,w,c
 31594  012492  6E2A               	movwf	btemp^0,c
 31595  012494  0EE9               	movlw	-23
 31596  012496  0060  F0AB  FFE3   	movff	btemp,plusw1
 31597                           
 31598                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 31599                           ;stkvar	_w @ sp[(-56)+38]
 31600  01249C  50E1               	movf	fsr1l,w,c
 31601  01249E  0FEE               	addlw	-18
 31602  0124A0  6ED9               	movwf	fsr2l,c
 31603  0124A2  50E2               	movf	fsr1h,w,c
 31604  0124A4  6EDA               	movwf	fsr2h,c
 31605  0124A6  0EFF               	movlw	255
 31606  0124A8  22DA               	addwfc	fsr2h,f,c
 31607  0124AA  06DE               	decf	postinc2,f,c
 31608  0124AC  0E00               	movlw	0
 31609  0124AE  5ADD               	subwfb	postdec2,f,c
 31610  0124B0                     l15876:
 31611                           
 31612                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 31613                           ;stkvar	_u @ sp[(-56)+12]
 31614  0124B0  0ED4               	movlw	-44
 31615  0124B2  006F FF8F FFE6     	movff	plusw1,postinc1
 31616  0124B8  006F FF8F FFE6     	movff	plusw1,postinc1
 31617  0124BE  006F FF8F FFE6     	movff	plusw1,postinc1
 31618  0124C4  006F FF8F FFE6     	movff	plusw1,postinc1
 31619                           
 31620                           ;stkvar	_l @ sp[(-60)+20]
 31621  0124CA  0ED8               	movlw	-40
 31622  0124CC  006F FF8F FFE6     	movff	plusw1,postinc1
 31623  0124D2  006F FF8F FFE6     	movff	plusw1,postinc1
 31624  0124D8  006F FF8F FFE6     	movff	plusw1,postinc1
 31625  0124DE  006F FF8F FFE6     	movff	plusw1,postinc1
 31626  0124E4  EC32  F0B3         	call	___flmul	;wreg free
 31627  0124E8  0060  F0AB  FFE6   	movff	btemp,postinc1
 31628  0124EE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 31629  0124F4  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 31630  0124FA  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 31631                           
 31632                           ;stkvar	_h @ sp[(-60)+24]
 31633  012500  0EDC               	movlw	-36
 31634  012502  006F FF8F FFE6     	movff	plusw1,postinc1
 31635  012508  006F FF8F FFE6     	movff	plusw1,postinc1
 31636  01250E  006F FF8F FFE6     	movff	plusw1,postinc1
 31637  012514  006F FF8F FFE6     	movff	plusw1,postinc1
 31638  01251A  EC2A  F00F         	call	___flsub	;wreg free
 31639                           
 31640                           ;stkvar	_h @ sp[(-56)+24]
 31641  01251E  0EE0               	movlw	-32
 31642  012520  0060  F0AB  FFE3   	movff	btemp,plusw1
 31643  012526  0EE1               	movlw	-31
 31644  012528  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31645  01252E  0EE2               	movlw	-30
 31646  012530  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31647  012536  0EE3               	movlw	-29
 31648  012538  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31649                           
 31650                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 31651  01253E  0E00               	movlw	0
 31652  012540  6EE6               	movwf	postinc1,c
 31653  012542  0E00               	movlw	0
 31654  012544  6EE6               	movwf	postinc1,c
 31655  012546  0E20               	movlw	32
 31656  012548  6EE6               	movwf	postinc1,c
 31657  01254A  0E41               	movlw	65
 31658  01254C  6EE6               	movwf	postinc1,c
 31659                           
 31660                           ;stkvar	_u @ sp[(-60)+12]
 31661  01254E  0ED0               	movlw	-48
 31662  012550  006F FF8F FFE6     	movff	plusw1,postinc1
 31663  012556  006F FF8F FFE6     	movff	plusw1,postinc1
 31664  01255C  006F FF8F FFE6     	movff	plusw1,postinc1
 31665  012562  006F FF8F FFE6     	movff	plusw1,postinc1
 31666  012568  EC83  F0BE         	call	___fldiv	;wreg free
 31667                           
 31668                           ;stkvar	_u @ sp[(-56)+12]
 31669  01256C  0ED4               	movlw	-44
 31670  01256E  0060  F0AB  FFE3   	movff	btemp,plusw1
 31671  012574  0ED5               	movlw	-43
 31672  012576  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31673  01257C  0ED6               	movlw	-42
 31674  01257E  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31675  012584  0ED7               	movlw	-41
 31676  012586  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31677                           
 31678                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 31679                           ;stkvar	_ne @ sp[(-56)+46]
 31680  01258C  50E1               	movf	fsr1l,w,c
 31681  01258E  0FF6               	addlw	-10
 31682  012590  6ED9               	movwf	fsr2l,c
 31683  012592  50E2               	movf	fsr1h,w,c
 31684  012594  6EDA               	movwf	fsr2h,c
 31685  012596  0EFF               	movlw	255
 31686  012598  22DA               	addwfc	fsr2h,f,c
 31687  01259A  06DE               	decf	postinc2,f,c
 31688  01259C  0E00               	movlw	0
 31689  01259E  5ADD               	subwfb	postdec2,f,c
 31690                           
 31691                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 31692                           ;stkvar	_i @ sp[(-56)+36]
 31693  0125A0  0EEC               	movlw	-20
 31694  0125A2  50E3               	movf	plusw1,w,c
 31695  0125A4  0F01               	addlw	1
 31696  0125A6  6E2A               	movwf	btemp^0,c
 31697  0125A8  0EEC               	movlw	-20
 31698  0125AA  0060  F0AB  FFE3   	movff	btemp,plusw1
 31699  0125B0  6A2A               	clrf	btemp^0,c
 31700  0125B2  0EED               	movlw	-19
 31701  0125B4  50E3               	movf	plusw1,w,c
 31702  0125B6  202A               	addwfc	btemp^0,w,c
 31703  0125B8  6E2A               	movwf	btemp^0,c
 31704  0125BA  0EED               	movlw	-19
 31705  0125BC  0060  F0AB  FFE3   	movff	btemp,plusw1
 31706  0125C2                     l15884:
 31707                           
 31708                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 31709                           ;stkvar	_m @ sp[(-56)+48]
 31710                           ;stkvar	_i @ sp[(-56)+36]
 31711  0125C2  50E1               	movf	fsr1l,w,c
 31712  0125C4  0FEC               	addlw	-20
 31713  0125C6  6ED9               	movwf	fsr2l,c
 31714  0125C8  50E2               	movf	fsr1h,w,c
 31715  0125CA  6EDA               	movwf	fsr2h,c
 31716  0125CC  0EFF               	movlw	255
 31717  0125CE  22DA               	addwfc	fsr2h,f,c
 31718  0125D0  0EF8               	movlw	-8
 31719  0125D2  50E3               	movf	plusw1,w,c
 31720  0125D4  5CDE               	subwf	postinc2,w,c
 31721  0125D6  50DE               	movf	postinc2,w,c
 31722  0125D8  0A80               	xorlw	128
 31723  0125DA  6E2A               	movwf	btemp^0,c
 31724  0125DC  0EF9               	movlw	-7
 31725  0125DE  50E3               	movf	plusw1,w,c
 31726  0125E0  0A80               	xorlw	128
 31727  0125E2  582A               	subwfb	btemp^0,w,c
 31728  0125E4  B0D8               	btfsc	status,0,c
 31729  0125E6  D00E               	goto	u15160
 31730                           
 31731                           ;stkvar	_n @ sp[(-56)+32]
 31732  0125E8  0EE9               	movlw	-23
 31733  0125EA  BEE3               	btfsc	plusw1,7,c
 31734  0125EC  D633               	goto	l15834
 31735  0125EE  0EE9               	movlw	-23
 31736  0125F0  50E3               	movf	plusw1,w,c
 31737  0125F2  E108               	bnz	u15160
 31738  0125F4  0EE8               	movlw	-24
 31739  0125F6  006F FF8C  F02A    	movff	plusw1,btemp
 31740  0125FC  0E4B               	movlw	75
 31741  0125FE  5E2A               	subwf	btemp^0,f,c
 31742  012600  A0D8               	btfss	status,0,c
 31743  012602  D628               	goto	l15834
 31744  012604                     u15160:
 31745                           
 31746                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 31747                           ;stkvar	_pp @ sp[(-56)+50]
 31748  012604  0EFA               	movlw	-6
 31749  012606  006F FF8C  F02A    	movff	plusw1,btemp
 31750  01260C  0EFB               	movlw	-5
 31751  01260E  50E3               	movf	plusw1,w,c
 31752  012610  102A               	iorwf	btemp^0,w,c
 31753  012612  B4D8               	btfsc	status,2,c
 31754  012614  A84E               	btfss	_flags^0,4,c
 31755  012616  D021               	goto	l15896
 31756                           
 31757                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 31758                           ;stkvar	_n @ sp[(-56)+32]
 31759  012618  0EE8               	movlw	-24
 31760  01261A  006F FF8C  F034    	movff	plusw1,btemp+10
 31761  012620  0EE9               	movlw	-23
 31762  012622  006F FF8C  F035    	movff	plusw1,btemp+11
 31763  012628  0E54               	movlw	low _dbuf
 31764  01262A  2434               	addwf	(btemp+10)^0,w,c
 31765  01262C  6ED9               	movwf	fsr2l,c
 31766  01262E  0E03               	movlw	high _dbuf
 31767  012630  2035               	addwfc	(btemp+11)^0,w,c
 31768  012632  6EDA               	movwf	fsr2h,c
 31769  012634  0E2E               	movlw	46
 31770  012636  6EDF               	movwf	indf2,c
 31771                           
 31772                           ;stkvar	_n @ sp[(-56)+32]
 31773  012638  0EE8               	movlw	-24
 31774  01263A  50E3               	movf	plusw1,w,c
 31775  01263C  0F01               	addlw	1
 31776  01263E  6E2A               	movwf	btemp^0,c
 31777  012640  0EE8               	movlw	-24
 31778  012642  0060  F0AB  FFE3   	movff	btemp,plusw1
 31779  012648  6A2A               	clrf	btemp^0,c
 31780  01264A  0EE9               	movlw	-23
 31781  01264C  50E3               	movf	plusw1,w,c
 31782  01264E  202A               	addwfc	btemp^0,w,c
 31783  012650  6E2A               	movwf	btemp^0,c
 31784  012652  0EE9               	movlw	-23
 31785  012654  0060  F0AB  FFE3   	movff	btemp,plusw1
 31786  01265A                     l15896:
 31787                           
 31788                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 31789                           ;stkvar	_n @ sp[(-56)+32]
 31790  01265A  0EE8               	movlw	-24
 31791  01265C  006F FF8C  F034    	movff	plusw1,btemp+10
 31792  012662  0EE9               	movlw	-23
 31793  012664  006F FF8C  F035    	movff	plusw1,btemp+11
 31794  01266A  0E54               	movlw	low _dbuf
 31795  01266C  2434               	addwf	(btemp+10)^0,w,c
 31796  01266E  6ED9               	movwf	fsr2l,c
 31797  012670  0E03               	movlw	high _dbuf
 31798  012672  2035               	addwfc	(btemp+11)^0,w,c
 31799  012674  6EDA               	movwf	fsr2h,c
 31800  012676  0E00               	movlw	0
 31801  012678  6EDF               	movwf	indf2,c
 31802                           
 31803                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 31804                           ;stkvar	_nmode @ sp[(-56)+55]
 31805  01267A  0EFF               	movlw	-1
 31806  01267C  006F FF8C  F02A    	movff	plusw1,btemp
 31807  012682  0E65               	movlw	101
 31808  012684  182A               	xorwf	btemp^0,w,c
 31809  012686  A4D8               	btfss	status,2,c
 31810  012688  EFA6  F08C         	goto	l15700
 31811                           
 31812                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 31813  01268C  0E4F               	movlw	79
 31814  01268E  6E34               	movwf	(btemp+10)^0,c
 31815  012690  0E00               	movlw	0
 31816  012692  6E35               	movwf	(btemp+11)^0,c
 31817                           
 31818                           ;stkvar	_i @ sp[(-56)+36]
 31819  012694  0EEC               	movlw	-20
 31820  012696  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31821  01269C  0EED               	movlw	-19
 31822  01269E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31823                           
 31824                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 31825                           ;stkvar	_i @ sp[(-56)+36]
 31826  0126A4  0EEC               	movlw	-20
 31827  0126A6  006F FF8C  F034    	movff	plusw1,btemp+10
 31828  0126AC  0EED               	movlw	-19
 31829  0126AE  006F FF8C  F035    	movff	plusw1,btemp+11
 31830  0126B4  0E54               	movlw	low _dbuf
 31831  0126B6  2434               	addwf	(btemp+10)^0,w,c
 31832  0126B8  6ED9               	movwf	fsr2l,c
 31833  0126BA  0E03               	movlw	high _dbuf
 31834  0126BC  2035               	addwfc	(btemp+11)^0,w,c
 31835  0126BE  6EDA               	movwf	fsr2h,c
 31836  0126C0  0E00               	movlw	0
 31837  0126C2  6EDF               	movwf	indf2,c
 31838                           
 31839                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 31840                           ;stkvar	_sign @ sp[(-56)+42]
 31841  0126C4  0EF2               	movlw	-14
 31842  0126C6  6AE3               	clrf	plusw1,c
 31843  0126C8  0EF3               	movlw	-13
 31844  0126CA  6AE3               	clrf	plusw1,c
 31845                           
 31846                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 31847                           ;stkvar	_e @ sp[(-56)+34]
 31848  0126CC  0EEB               	movlw	-21
 31849  0126CE  AEE3               	btfss	plusw1,7,c
 31850  0126D0  D012               	goto	l15910
 31851                           
 31852                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 31853  0126D2  0E01               	movlw	1
 31854  0126D4  6E34               	movwf	(btemp+10)^0,c
 31855  0126D6  0E00               	movlw	0
 31856  0126D8  6E35               	movwf	(btemp+11)^0,c
 31857                           
 31858                           ;stkvar	_sign @ sp[(-56)+42]
 31859  0126DA  0EF2               	movlw	-14
 31860  0126DC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31861  0126E2  0EF3               	movlw	-13
 31862  0126E4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31863                           
 31864                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 31865                           ;stkvar	_e @ sp[(-56)+34]
 31866                           ;stkvar	_e @ sp[(-56)+34]
 31867  0126EA  0EEA               	movlw	-22
 31868  0126EC  6CE3               	negf	plusw1,c
 31869  0126EE  0EEB               	movlw	-21
 31870  0126F0  1EE3               	comf	plusw1,f,c
 31871  0126F2  B0D8               	btfsc	status,0,c
 31872  0126F4  2AE3               	incf	plusw1,f,c
 31873  0126F6                     l15910:
 31874                           
 31875                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 31876  0126F6  0E02               	movlw	2
 31877  0126F8  6E34               	movwf	(btemp+10)^0,c
 31878  0126FA  0E00               	movlw	0
 31879  0126FC  6E35               	movwf	(btemp+11)^0,c
 31880                           
 31881                           ;stkvar	_p @ sp[(-56)+40]
 31882  0126FE  0EF0               	movlw	-16
 31883  012700  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31884  012706  0EF1               	movlw	-15
 31885  012708  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31886                           
 31887                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 31888  01270E  D051               	goto	l15922
 31889  012710                     l15912:
 31890                           
 31891                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 31892                           ;stkvar	_i @ sp[(-56)+36]
 31893  012710  50E1               	movf	fsr1l,w,c
 31894  012712  0FEC               	addlw	-20
 31895  012714  6ED9               	movwf	fsr2l,c
 31896  012716  50E2               	movf	fsr1h,w,c
 31897  012718  6EDA               	movwf	fsr2h,c
 31898  01271A  0EFF               	movlw	255
 31899  01271C  22DA               	addwfc	fsr2h,f,c
 31900  01271E  06DE               	decf	postinc2,f,c
 31901  012720  0E00               	movlw	0
 31902  012722  5ADD               	subwfb	postdec2,f,c
 31903                           
 31904                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 31905                           ;stkvar	_i @ sp[(-56)+36]
 31906  012724  0EEC               	movlw	-20
 31907  012726  006F FF8C  F034    	movff	plusw1,btemp+10
 31908  01272C  0EED               	movlw	-19
 31909  01272E  006F FF8C  F035    	movff	plusw1,btemp+11
 31910  012734  0E54               	movlw	low _dbuf
 31911  012736  2434               	addwf	(btemp+10)^0,w,c
 31912  012738  6ED9               	movwf	fsr2l,c
 31913  01273A  0E03               	movlw	high _dbuf
 31914  01273C  2035               	addwfc	(btemp+11)^0,w,c
 31915  01273E  6EDA               	movwf	fsr2h,c
 31916  012740  0E0A               	movlw	10
 31917  012742  6EE6               	movwf	postinc1,c
 31918  012744  0E00               	movlw	0
 31919  012746  6EE6               	movwf	postinc1,c
 31920                           
 31921                           ;stkvar	_e @ sp[(-58)+34]
 31922  012748  0EE8               	movlw	-24
 31923  01274A  006F FF8F FFE6     	movff	plusw1,postinc1
 31924  012750  006F FF8F FFE6     	movff	plusw1,postinc1
 31925  012756  EC8F  F0FC         	call	___awmod	;wreg free
 31926  01275A  502A               	movf	btemp^0,w,c
 31927  01275C  0F30               	addlw	48
 31928  01275E  6EDF               	movwf	indf2,c
 31929                           
 31930                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 31931  012760  0E0A               	movlw	10
 31932  012762  6EE6               	movwf	postinc1,c
 31933  012764  0E00               	movlw	0
 31934  012766  6EE6               	movwf	postinc1,c
 31935                           
 31936                           ;stkvar	_e @ sp[(-58)+34]
 31937  012768  0EE8               	movlw	-24
 31938  01276A  006F FF8F FFE6     	movff	plusw1,postinc1
 31939  012770  006F FF8F FFE6     	movff	plusw1,postinc1
 31940  012776  EC60  F0F8         	call	___awdiv	;wreg free
 31941                           
 31942                           ;stkvar	_e @ sp[(-56)+34]
 31943  01277A  0EEA               	movlw	-22
 31944  01277C  0060  F0AB  FFE3   	movff	btemp,plusw1
 31945  012782  0EEB               	movlw	-21
 31946  012784  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31947                           
 31948                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 31949                           ;stkvar	_p @ sp[(-56)+40]
 31950  01278A  50E1               	movf	fsr1l,w,c
 31951  01278C  0FF0               	addlw	-16
 31952  01278E  6ED9               	movwf	fsr2l,c
 31953  012790  50E2               	movf	fsr1h,w,c
 31954  012792  6EDA               	movwf	fsr2h,c
 31955  012794  0EFF               	movlw	255
 31956  012796  22DA               	addwfc	fsr2h,f,c
 31957  012798  06DE               	decf	postinc2,f,c
 31958  01279A  0E00               	movlw	0
 31959  01279C  5ADD               	subwfb	postdec2,f,c
 31960                           
 31961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 31962                           ;stkvar	_w @ sp[(-56)+38]
 31963  01279E  50E1               	movf	fsr1l,w,c
 31964  0127A0  0FEE               	addlw	-18
 31965  0127A2  6ED9               	movwf	fsr2l,c
 31966  0127A4  50E2               	movf	fsr1h,w,c
 31967  0127A6  6EDA               	movwf	fsr2h,c
 31968  0127A8  0EFF               	movlw	255
 31969  0127AA  22DA               	addwfc	fsr2h,f,c
 31970  0127AC  06DE               	decf	postinc2,f,c
 31971  0127AE  0E00               	movlw	0
 31972  0127B0  5ADD               	subwfb	postdec2,f,c
 31973  0127B2                     l15922:
 31974                           
 31975                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 31976                           ;stkvar	_e @ sp[(-56)+34]
 31977  0127B2  0EEA               	movlw	-22
 31978  0127B4  006F FF8C  F02A    	movff	plusw1,btemp
 31979  0127BA  0EEB               	movlw	-21
 31980  0127BC  50E3               	movf	plusw1,w,c
 31981  0127BE  102A               	iorwf	btemp^0,w,c
 31982  0127C0  A4D8               	btfss	status,2,c
 31983  0127C2  D7A6               	goto	l15912
 31984                           
 31985                           ;stkvar	_p @ sp[(-56)+40]
 31986  0127C4  0EF1               	movlw	-15
 31987  0127C6  BEE3               	btfsc	plusw1,7,c
 31988  0127C8  D007               	goto	u15220
 31989  0127CA  0EF1               	movlw	-15
 31990  0127CC  50E3               	movf	plusw1,w,c
 31991  0127CE  E1A0               	bnz	l15912
 31992  0127D0  0EF0               	movlw	-16
 31993  0127D2  04E3               	decf	plusw1,w,c
 31994  0127D4  B0D8               	btfsc	status,0,c
 31995  0127D6  D79C               	goto	l15912
 31996  0127D8                     u15220:
 31997                           
 31998                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 31999                           ;stkvar	_i @ sp[(-56)+36]
 32000  0127D8  50E1               	movf	fsr1l,w,c
 32001  0127DA  0FEC               	addlw	-20
 32002  0127DC  6ED9               	movwf	fsr2l,c
 32003  0127DE  50E2               	movf	fsr1h,w,c
 32004  0127E0  6EDA               	movwf	fsr2h,c
 32005  0127E2  0EFF               	movlw	255
 32006  0127E4  22DA               	addwfc	fsr2h,f,c
 32007  0127E6  06DE               	decf	postinc2,f,c
 32008  0127E8  0E00               	movlw	0
 32009  0127EA  5ADD               	subwfb	postdec2,f,c
 32010                           
 32011                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 32012                           ;stkvar	_sign @ sp[(-56)+42]
 32013  0127EC  0EF2               	movlw	-14
 32014  0127EE  006F FF8C  F02A    	movff	plusw1,btemp
 32015  0127F4  0EF3               	movlw	-13
 32016  0127F6  50E3               	movf	plusw1,w,c
 32017  0127F8  102A               	iorwf	btemp^0,w,c
 32018  0127FA  A4D8               	btfss	status,2,c
 32019  0127FC  D002               	goto	l15932
 32020  0127FE  0E2B               	movlw	43
 32021  012800  D001               	goto	L33
 32022  012802                     l15932:
 32023  012802  0E2D               	movlw	45
 32024  012804                     L33:
 32025  012804  6E34               	movwf	(btemp+10)^0,c
 32026  012806  0E00               	movlw	0
 32027  012808  6E35               	movwf	(btemp+11)^0,c
 32028                           
 32029                           ;stkvar	_efgtoa$6623 @ sp[(-56)+4]
 32030  01280A  0ECC               	movlw	-52
 32031  01280C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32032  012812  0ECD               	movlw	-51
 32033  012814  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32034                           
 32035                           ;stkvar	_efgtoa$6623 @ sp[(-56)+4]
 32036                           ;stkvar	_i @ sp[(-56)+36]
 32037  01281A  0EEC               	movlw	-20
 32038  01281C  006F FF8C  F034    	movff	plusw1,btemp+10
 32039  012822  0EED               	movlw	-19
 32040  012824  006F FF8C  F035    	movff	plusw1,btemp+11
 32041  01282A  0E54               	movlw	low _dbuf
 32042  01282C  2434               	addwf	(btemp+10)^0,w,c
 32043  01282E  6ED9               	movwf	fsr2l,c
 32044  012830  0E03               	movlw	high _dbuf
 32045  012832  2035               	addwfc	(btemp+11)^0,w,c
 32046  012834  6EDA               	movwf	fsr2h,c
 32047  012836  0ECC               	movlw	-52
 32048  012838  006F FF8F FFDF     	movff	plusw1,indf2
 32049                           
 32050                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 32051                           ;stkvar	_w @ sp[(-56)+38]
 32052  01283E  50E1               	movf	fsr1l,w,c
 32053  012840  0FEE               	addlw	-18
 32054  012842  6ED9               	movwf	fsr2l,c
 32055  012844  50E2               	movf	fsr1h,w,c
 32056  012846  6EDA               	movwf	fsr2h,c
 32057  012848  0EFF               	movlw	255
 32058  01284A  22DA               	addwfc	fsr2h,f,c
 32059  01284C  06DE               	decf	postinc2,f,c
 32060  01284E  0E00               	movlw	0
 32061  012850  5ADD               	subwfb	postdec2,f,c
 32062                           
 32063                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 32064                           ;stkvar	_i @ sp[(-56)+36]
 32065  012852  50E1               	movf	fsr1l,w,c
 32066  012854  0FEC               	addlw	-20
 32067  012856  6ED9               	movwf	fsr2l,c
 32068  012858  50E2               	movf	fsr1h,w,c
 32069  01285A  6EDA               	movwf	fsr2h,c
 32070  01285C  0EFF               	movlw	255
 32071  01285E  22DA               	addwfc	fsr2h,f,c
 32072  012860  06DE               	decf	postinc2,f,c
 32073  012862  0E00               	movlw	0
 32074  012864  5ADD               	subwfb	postdec2,f,c
 32075  012866  0EBF               	movlw	191
 32076  012868  6E34               	movwf	(btemp+10)^0,c
 32077  01286A  0EFF               	movlw	255
 32078  01286C  6E35               	movwf	(btemp+11)^0,c
 32079                           
 32080                           ;stkvar	_c @ sp[(-56)+-7]
 32081  01286E  0EC1               	movlw	-63
 32082  012870  50E3               	movf	plusw1,w,c
 32083  012872  6E32               	movwf	(btemp+8)^0,c
 32084  012874  6A33               	clrf	(btemp+9)^0,c
 32085  012876  5034               	movf	(btemp+10)^0,w,c
 32086  012878  2632               	addwf	(btemp+8)^0,f,c
 32087  01287A  5035               	movf	(btemp+11)^0,w,c
 32088  01287C  2233               	addwfc	(btemp+9)^0,f,c
 32089  01287E  5033               	movf	(btemp+9)^0,w,c
 32090  012880  E106               	bnz	u15240
 32091  012882  0E1A               	movlw	26
 32092  012884  5C32               	subwf	(btemp+8)^0,w,c
 32093  012886  B0D8               	btfsc	status,0,c
 32094  012888  D002               	goto	u15240
 32095  01288A  0E01               	movlw	1
 32096  01288C  D001               	goto	u15250
 32097  01288E                     u15240:
 32098  01288E  0E00               	movlw	0
 32099  012890                     u15250:
 32100  012890  6E34               	movwf	(btemp+10)^0,c
 32101  012892  6A35               	clrf	(btemp+11)^0,c
 32102                           
 32103                           ;stkvar	_efgtoa$6625 @ sp[(-56)+0]
 32104  012894  0EC8               	movlw	-56
 32105  012896  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32106  01289C  0EC9               	movlw	-55
 32107  01289E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32108                           
 32109                           ;stkvar	_efgtoa$6625 @ sp[(-56)+0]
 32110  0128A4  0EC8               	movlw	-56
 32111  0128A6  006F FF8C  F02A    	movff	plusw1,btemp
 32112  0128AC  0EC9               	movlw	-55
 32113  0128AE  50E3               	movf	plusw1,w,c
 32114  0128B0  102A               	iorwf	btemp^0,w,c
 32115  0128B2  A4D8               	btfss	status,2,c
 32116  0128B4  D002               	goto	l15948
 32117  0128B6  0E65               	movlw	101
 32118  0128B8  D001               	goto	L34
 32119  0128BA                     l15948:
 32120  0128BA  0E45               	movlw	69
 32121  0128BC                     L34:
 32122  0128BC  6E34               	movwf	(btemp+10)^0,c
 32123  0128BE  0E00               	movlw	0
 32124  0128C0  6E35               	movwf	(btemp+11)^0,c
 32125                           
 32126                           ;stkvar	_efgtoa$6624 @ sp[(-56)+2]
 32127  0128C2  0ECA               	movlw	-54
 32128  0128C4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32129  0128CA  0ECB               	movlw	-53
 32130  0128CC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32131                           
 32132                           ;stkvar	_efgtoa$6624 @ sp[(-56)+2]
 32133                           ;stkvar	_i @ sp[(-56)+36]
 32134  0128D2  0EEC               	movlw	-20
 32135  0128D4  006F FF8C  F034    	movff	plusw1,btemp+10
 32136  0128DA  0EED               	movlw	-19
 32137  0128DC  006F FF8C  F035    	movff	plusw1,btemp+11
 32138  0128E2  0E54               	movlw	low _dbuf
 32139  0128E4  2434               	addwf	(btemp+10)^0,w,c
 32140  0128E6  6ED9               	movwf	fsr2l,c
 32141  0128E8  0E03               	movlw	high _dbuf
 32142  0128EA  2035               	addwfc	(btemp+11)^0,w,c
 32143  0128EC  6EDA               	movwf	fsr2h,c
 32144  0128EE  0ECA               	movlw	-54
 32145  0128F0  006F FF8F FFDF     	movff	plusw1,indf2
 32146                           
 32147                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 32148                           ;stkvar	_w @ sp[(-56)+38]
 32149  0128F6  50E1               	movf	fsr1l,w,c
 32150  0128F8  0FEE               	addlw	-18
 32151  0128FA  6ED9               	movwf	fsr2l,c
 32152  0128FC  50E2               	movf	fsr1h,w,c
 32153  0128FE  6EDA               	movwf	fsr2h,c
 32154  012900  0EFF               	movlw	255
 32155  012902  22DA               	addwfc	fsr2h,f,c
 32156  012904  06DE               	decf	postinc2,f,c
 32157  012906  0E00               	movlw	0
 32158  012908  5ADD               	subwfb	postdec2,f,c
 32159                           
 32160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 32161                           ;stkvar	_i @ sp[(-56)+36]
 32162  01290A  0EEC               	movlw	-20
 32163  01290C  006F FF8C  F034    	movff	plusw1,btemp+10
 32164  012912  0EED               	movlw	-19
 32165  012914  006F FF8C  F035    	movff	plusw1,btemp+11
 32166  01291A  0E54               	movlw	low _dbuf
 32167  01291C  2434               	addwf	(btemp+10)^0,w,c
 32168  01291E  6E32               	movwf	(btemp+8)^0,c
 32169  012920  0E03               	movlw	high _dbuf
 32170  012922  2035               	addwfc	(btemp+11)^0,w,c
 32171  012924  6E33               	movwf	(btemp+9)^0,c
 32172  012926  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 32173  01292C  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 32174                           
 32175                           ;stkvar	_n @ sp[(-58)+32]
 32176  012932  0E54               	movlw	low _dbuf
 32177  012934  6E34               	movwf	(btemp+10)^0,c
 32178  012936  0E03               	movlw	high _dbuf
 32179  012938  6E35               	movwf	(btemp+11)^0,c
 32180  01293A  0EE6               	movlw	-26
 32181  01293C  50E3               	movf	plusw1,w,c
 32182  01293E  2634               	addwf	(btemp+10)^0,f,c
 32183  012940  0EE7               	movlw	-25
 32184  012942  50E3               	movf	plusw1,w,c
 32185  012944  2235               	addwfc	(btemp+11)^0,f,c
 32186  012946  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 32187  01294C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 32188  012952  EC2A  F002         	call	_strcpy	;wreg free
 32189  012956  EFA6  F08C         	goto	l15700
 32190  01295A                     l2527:
 32191                           
 32192                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 32193  01295A  0EC1               	movlw	193
 32194  01295C  26E1               	addwf	fsr1l,f,c
 32195  01295E  0EFF               	movlw	255
 32196  012960  22E2               	addwfc	fsr1h,f,c
 32197  012962  0012               	return		;funcret
 32198  012964                     __end_of_efgtoa:
 32199                           	opt callstack 0
 32200                           
 32201 ;; *************** function _tolower *****************
 32202 ;; Defined at:
 32203 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 32204 ;; Parameters:    Size  Location     Type
 32205 ;;  c               2  [STACK] int 
 32206 ;; Auto vars:     Size  Location     Type
 32207 ;;		None
 32208 ;; Return value:  Size  Location     Type
 32209 ;;                  2  [STACK] int 
 32210 ;; Registers used:
 32211 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 32212 ;; Tracked objects:
 32213 ;;		On entry : 0/0
 32214 ;;		On exit  : 0/0
 32215 ;;		Unchanged: 0/0
 32216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32221 ;;Total ram usage:        0 bytes
 32222 ;; Hardware stack levels used:    1
 32223 ;; Hardware stack levels required when called:   16
 32224 ;; This function calls:
 32225 ;;		_isupper
 32226 ;; This function is called by:
 32227 ;;		_efgtoa
 32228 ;;		_vfpfcnvrt
 32229 ;; This function uses a reentrant model
 32230 ;;
 32231                           
 32232                           	psect	text104
 32233  0011E2                     __ptext104:
 32234                           	opt callstack 0
 32235  0011E2                     _tolower:
 32236                           	opt callstack 0
 32237                           
 32238                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32239  0011E2  52E6               	movf	postinc1,f,c
 32240  0011E4  52E6               	movf	postinc1,f,c
 32241                           
 32242                           ;stkvar	_c @ sp[(-2)+-2]
 32243                           
 32244                           ;incstack = 0
 32245 ;; hardware stack exceeded
 32246  0011E6  0EFC               	movlw	-4
 32247  0011E8  50E3               	movf	plusw1,w,c
 32248  0011EA  0FBF               	addlw	191
 32249  0011EC  6E34               	movwf	(btemp+10)^0,c
 32250  0011EE  0EFD               	movlw	-3
 32251  0011F0  006F FF8C  F035    	movff	plusw1,btemp+11
 32252  0011F6  0EFF               	movlw	255
 32253  0011F8  2235               	addwfc	(btemp+11)^0,f,c
 32254  0011FA  5035               	movf	(btemp+11)^0,w,c
 32255  0011FC  E106               	bnz	u7860
 32256  0011FE  0E1A               	movlw	26
 32257  001200  5C34               	subwf	(btemp+10)^0,w,c
 32258  001202  B0D8               	btfsc	status,0,c
 32259  001204  D002               	goto	u7860
 32260  001206  0E01               	movlw	1
 32261  001208  D001               	goto	u7870
 32262  00120A                     u7860:
 32263  00120A  0E00               	movlw	0
 32264  00120C                     u7870:
 32265  00120C  6E34               	movwf	(btemp+10)^0,c
 32266  00120E  6A35               	clrf	(btemp+11)^0,c
 32267                           
 32268                           ;stkvar	_tolower$7579 @ sp[(-2)+0]
 32269  001210  0EFE               	movlw	-2
 32270  001212  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32271  001218  0EFF               	movlw	-1
 32272  00121A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32273                           
 32274                           ;stkvar	_tolower$7579 @ sp[(-2)+0]
 32275  001220  0EFE               	movlw	-2
 32276  001222  006F FF8C  F02A    	movff	plusw1,btemp
 32277  001228  0EFF               	movlw	-1
 32278  00122A  50E3               	movf	plusw1,w,c
 32279  00122C  102A               	iorwf	btemp^0,w,c
 32280  00122E  B4D8               	btfsc	status,2,c
 32281  001230  D00D               	goto	l10150
 32282                           
 32283                           ;stkvar	_c @ sp[(-2)+-2]
 32284  001232  0EFC               	movlw	-4
 32285  001234  006F FF8C  F02A    	movff	plusw1,btemp
 32286  00123A  0EFD               	movlw	-3
 32287  00123C  006F FF8C  F02B    	movff	plusw1,btemp+1
 32288  001242  0E20               	movlw	32
 32289  001244  122A               	iorwf	btemp^0,f,c
 32290  001246  0E00               	movlw	0
 32291  001248  122B               	iorwf	(btemp+1)^0,f,c
 32292  00124A  D008               	goto	l3829
 32293  00124C                     l10150:
 32294                           
 32295                           ;stkvar	_c @ sp[(-2)+-2]
 32296  00124C  0EFC               	movlw	-4
 32297  00124E  006F FF8C  F02A    	movff	plusw1,btemp
 32298  001254  0EFD               	movlw	-3
 32299  001256  006F FF8C  F02B    	movff	plusw1,btemp+1
 32300  00125C                     l3829:
 32301                           
 32302                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 32303  00125C  52E5               	movf	postdec1,f,c
 32304  00125E  52E5               	movf	postdec1,f,c
 32305  001260  52E5               	movf	postdec1,f,c
 32306  001262  52E5               	movf	postdec1,f,c
 32307  001264  0012               	return		;funcret
 32308  001266                     __end_of_tolower:
 32309                           	opt callstack 0
 32310                           
 32311 ;; *************** function _isupper *****************
 32312 ;; Defined at:
 32313 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 32314 ;; Parameters:    Size  Location     Type
 32315 ;;  c               2  [STACK] int 
 32316 ;; Auto vars:     Size  Location     Type
 32317 ;;		None
 32318 ;; Return value:  Size  Location     Type
 32319 ;;                  2  [STACK] int 
 32320 ;; Registers used:
 32321 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 32322 ;; Tracked objects:
 32323 ;;		On entry : 0/0
 32324 ;;		On exit  : 0/0
 32325 ;;		Unchanged: 0/0
 32326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32331 ;;Total ram usage:        0 bytes
 32332 ;; Hardware stack levels used:    1
 32333 ;; Hardware stack levels required when called:   15
 32334 ;; This function calls:
 32335 ;;		Nothing
 32336 ;; This function is called by:
 32337 ;;		_efgtoa
 32338 ;;		_xtoa
 32339 ;;		_vfpfcnvrt
 32340 ;;		_tolower
 32341 ;; This function uses a reentrant model
 32342 ;;
 32343                           
 32344                           	psect	text105
 32345  002352                     __ptext105:
 32346                           	opt callstack 0
 32347  002352                     _isupper:
 32348                           	opt callstack 0
 32349                           
 32350                           ;stkvar	_c @ sp[(0)+-2]
 32351                           
 32352                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32353                           ;incstack = 0
 32354 ;; hardware stack exceeded
 32355  002352  0EFE               	movlw	-2
 32356  002354  50E3               	movf	plusw1,w,c
 32357  002356  0FBF               	addlw	191
 32358  002358  6E34               	movwf	(btemp+10)^0,c
 32359  00235A  0EFF               	movlw	-1
 32360  00235C  006F FF8C  F035    	movff	plusw1,btemp+11
 32361  002362  0EFF               	movlw	255
 32362  002364  2235               	addwfc	(btemp+11)^0,f,c
 32363  002366  5035               	movf	(btemp+11)^0,w,c
 32364  002368  E106               	bnz	u7200
 32365  00236A  0E1A               	movlw	26
 32366  00236C  5C34               	subwf	(btemp+10)^0,w,c
 32367  00236E  B0D8               	btfsc	status,0,c
 32368  002370  D002               	goto	u7200
 32369  002372  0E01               	movlw	1
 32370  002374  D001               	goto	u7210
 32371  002376                     u7200:
 32372  002376  0E00               	movlw	0
 32373  002378                     u7210:
 32374  002378  6E2A               	movwf	btemp^0,c
 32375  00237A  6A2B               	clrf	(btemp+1)^0,c
 32376                           
 32377                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 32378  00237C  52E5               	movf	postdec1,f,c
 32379  00237E  52E5               	movf	postdec1,f,c
 32380  002380  0012               	return		;funcret
 32381  002382                     __end_of_isupper:
 32382                           	opt callstack 0
 32383                           
 32384 ;; *************** function _strcpy *****************
 32385 ;; Defined at:
 32386 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 32387 ;; Parameters:    Size  Location     Type
 32388 ;;  dest            2  [STACK] PTR unsigned char 
 32389 ;;		 -> dbuf(80), 
 32390 ;;  src             2  [STACK] PTR const unsigned char 
 32391 ;;		 -> STR_101(4), STR_100(4), STR_97(4), STR_96(4), 
 32392 ;;		 -> dbuf(80), 
 32393 ;; Auto vars:     Size  Location     Type
 32394 ;;  d               2  [STACK] PTR unsigned char 
 32395 ;;		 -> dbuf(80), 
 32396 ;;  s               2  [STACK] PTR const unsigned char 
 32397 ;;		 -> STR_101(4), STR_100(4), STR_97(4), STR_96(4), 
 32398 ;;		 -> dbuf(80), 
 32399 ;; Return value:  Size  Location     Type
 32400 ;;                  2  [STACK] PTR unsigned char 
 32401 ;; Registers used:
 32402 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 32403 ;; Tracked objects:
 32404 ;;		On entry : 0/0
 32405 ;;		On exit  : 0/0
 32406 ;;		Unchanged: 0/0
 32407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32412 ;;Total ram usage:        0 bytes
 32413 ;; Hardware stack levels used:    1
 32414 ;; Hardware stack levels required when called:   15
 32415 ;; This function calls:
 32416 ;;		Nothing
 32417 ;; This function is called by:
 32418 ;;		_efgtoa
 32419 ;; This function uses a reentrant model
 32420 ;;
 32421                           
 32422                           	psect	text106
 32423  000454                     __ptext106:
 32424                           	opt callstack 0
 32425  000454                     _strcpy:
 32426                           	opt callstack 0
 32427                           
 32428                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32429  000454  52E6               	movf	postinc1,f,c
 32430  000456  52E6               	movf	postinc1,f,c
 32431  000458  52E6               	movf	postinc1,f,c
 32432  00045A  52E6               	movf	postinc1,f,c
 32433                           
 32434                           ;stkvar	_src @ sp[(-4)+-4]
 32435                           
 32436                           ;incstack = 0
 32437 ;; hardware stack exceeded
 32438  00045C  0EF8               	movlw	-8
 32439  00045E  006F FF8C  F034    	movff	plusw1,btemp+10
 32440  000464  0EF9               	movlw	-7
 32441  000466  006F FF8C  F035    	movff	plusw1,btemp+11
 32442                           
 32443                           ;stkvar	_s @ sp[(-4)+2]
 32444  00046C  0EFF               	movlw	-1
 32445  00046E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32446  000474  0EFE               	movlw	-2
 32447  000476  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32448                           
 32449                           ;stkvar	_dest @ sp[(-4)+-2]
 32450  00047C  0EFA               	movlw	-6
 32451  00047E  006F FF8C  F034    	movff	plusw1,btemp+10
 32452  000484  0EFB               	movlw	-5
 32453  000486  006F FF8C  F035    	movff	plusw1,btemp+11
 32454                           
 32455                           ;stkvar	_d @ sp[(-4)+0]
 32456  00048C  0EFD               	movlw	-3
 32457  00048E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32458  000494  0EFC               	movlw	-4
 32459  000496  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32460  00049C                     l15484:
 32461                           
 32462                           ;stkvar	_s @ sp[(-4)+2]
 32463  00049C  50E1               	movf	fsr1l,w,c
 32464  00049E  0FFE               	addlw	-2
 32465  0004A0  6ED9               	movwf	fsr2l,c
 32466  0004A2  50E2               	movf	fsr1h,w,c
 32467  0004A4  6EDA               	movwf	fsr2h,c
 32468  0004A6  0EFF               	movlw	255
 32469  0004A8  22DA               	addwfc	fsr2h,f,c
 32470  0004AA  006F FF7C  F034    	movff	indf2,btemp+10
 32471  0004B0  0E01               	movlw	1
 32472  0004B2  26DE               	addwf	postinc2,f,c
 32473  0004B4  006F FF7C  F035    	movff	indf2,btemp+11
 32474  0004BA  0E00               	movlw	0
 32475  0004BC  22DD               	addwfc	postdec2,f,c
 32476  0004BE  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 32477  0004C4  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 32478  0004CA  0E00               	movlw	low (__mediumconst shr (0+16))
 32479  0004CC  6EF8               	movwf	tblptru,c
 32480                           
 32481                           ;stkvar	_d @ sp[(-4)+0]
 32482  0004CE  50E1               	movf	fsr1l,w,c
 32483  0004D0  0FFC               	addlw	-4
 32484  0004D2  6ED9               	movwf	fsr2l,c
 32485  0004D4  50E2               	movf	fsr1h,w,c
 32486  0004D6  6EDA               	movwf	fsr2h,c
 32487  0004D8  0EFF               	movlw	255
 32488  0004DA  22DA               	addwfc	fsr2h,f,c
 32489  0004DC  006F FF7C  F034    	movff	indf2,btemp+10
 32490  0004E2  0E01               	movlw	1
 32491  0004E4  26DE               	addwf	postinc2,f,c
 32492  0004E6  006F FF7C  F035    	movff	indf2,btemp+11
 32493  0004EC  0E00               	movlw	0
 32494  0004EE  22DD               	addwfc	postdec2,f,c
 32495  0004F0  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 32496  0004F6  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 32497  0004FC  0E1F               	movlw	(high __ramtop+-1)
 32498  0004FE  64F7               	cpfsgt	tblptrh,c
 32499  000500  D003               	bra	u14407
 32500  000502  0008               	tblrd		*
 32501  000504  50F5               	movf	tablat,w,c
 32502  000506  D007               	bra	u14400
 32503  000508                     u14407:
 32504  000508  006F FFDB FFE9     	movff	tblptrl,fsr0l
 32505  00050E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 32506  000514  50EF               	movf	indf0,w,c
 32507  000516                     u14400:
 32508  000516  6EDF               	movwf	indf2,c
 32509  000518  50DF               	movf	indf2,w,c
 32510  00051A  A4D8               	btfss	status,2,c
 32511  00051C  D7BF               	goto	l15484
 32512                           
 32513                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 32514  00051E  0EF8               	movlw	248
 32515  000520  26E1               	addwf	fsr1l,f,c
 32516  000522  0EFF               	movlw	255
 32517  000524  22E2               	addwfc	fsr1h,f,c
 32518  000526  0012               	return		;funcret
 32519  000528                     __end_of_strcpy:
 32520                           	opt callstack 0
 32521                           
 32522 ;; *************** function _floorf *****************
 32523 ;; Defined at:
 32524 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 32525 ;; Parameters:    Size  Location     Type
 32526 ;;  x               4  [STACK] float 
 32527 ;; Auto vars:     Size  Location     Type
 32528 ;;  u               4  [STACK] struct .
 32529 ;;  m               4  [STACK] unsigned long 
 32530 ;;  e               2  [STACK] int 
 32531 ;; Return value:  Size  Location     Type
 32532 ;;                  4  [STACK] float 
 32533 ;; Registers used:
 32534 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 32535 ;; Tracked objects:
 32536 ;;		On entry : 0/0
 32537 ;;		On exit  : 0/0
 32538 ;;		Unchanged: 0/0
 32539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32544 ;;Total ram usage:        0 bytes
 32545 ;; Hardware stack levels used:    1
 32546 ;; Hardware stack levels required when called:   15
 32547 ;; This function calls:
 32548 ;;		Nothing
 32549 ;; This function is called by:
 32550 ;;		_efgtoa
 32551 ;; This function uses a reentrant model
 32552 ;;
 32553                           
 32554                           	psect	text107
 32555  01A534                     __ptext107:
 32556                           	opt callstack 0
 32557  01A534                     _floorf:
 32558                           	opt callstack 0
 32559                           
 32560                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 32561  01A534  0E0A               	movlw	10
 32562  01A536  26E1               	addwf	fsr1l,f,c
 32563  01A538  0E00               	movlw	0
 32564  01A53A  22E2               	addwfc	fsr1h,f,c
 32565                           
 32566                           ;incstack = 0
 32567 ;; hardware stack exceeded
 32568  01A53C  0060  F1D0  F032   	movff	floorf@F524,btemp+8
 32569  01A542  0060  F1D4  F033   	movff	floorf@F524+1,btemp+9
 32570  01A548  0060  F1D8  F034   	movff	floorf@F524+2,btemp+10
 32571  01A54E  0060  F1DC  F035   	movff	floorf@F524+3,btemp+11
 32572                           
 32573                           ;stkvar	_u @ sp[(-10)+0]
 32574  01A554  0EF6               	movlw	-10
 32575  01A556  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32576  01A55C  0EF7               	movlw	-9
 32577  01A55E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 32578  01A564  0EF8               	movlw	-8
 32579  01A566  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32580  01A56C  0EF9               	movlw	-7
 32581  01A56E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32582                           
 32583                           ;stkvar	_x @ sp[(-10)+-4]
 32584  01A574  0EF2               	movlw	-14
 32585  01A576  006F FF8C  F032    	movff	plusw1,btemp+8
 32586  01A57C  0EF3               	movlw	-13
 32587  01A57E  006F FF8C  F033    	movff	plusw1,btemp+9
 32588  01A584  0EF4               	movlw	-12
 32589  01A586  006F FF8C  F034    	movff	plusw1,btemp+10
 32590  01A58C  0EF5               	movlw	-11
 32591  01A58E  006F FF8C  F035    	movff	plusw1,btemp+11
 32592                           
 32593                           ;stkvar	_u @ sp[(-10)+0]
 32594  01A594  0EF6               	movlw	-10
 32595  01A596  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32596  01A59C  0EF7               	movlw	-9
 32597  01A59E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 32598  01A5A4  0EF8               	movlw	-8
 32599  01A5A6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32600  01A5AC  0EF9               	movlw	-7
 32601  01A5AE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32602  01A5B4  0E81               	movlw	129
 32603  01A5B6  6E34               	movwf	(btemp+10)^0,c
 32604  01A5B8  0EFF               	movlw	255
 32605  01A5BA  6E35               	movwf	(btemp+11)^0,c
 32606                           
 32607                           ;stkvar	_u @ sp[(-10)+0]
 32608  01A5BC  0EF6               	movlw	-10
 32609  01A5BE  006F FF8C  F02E    	movff	plusw1,btemp+4
 32610  01A5C4  0EF7               	movlw	-9
 32611  01A5C6  006F FF8C  F02F    	movff	plusw1,btemp+5
 32612  01A5CC  0EF8               	movlw	-8
 32613  01A5CE  006F FF8C  F030    	movff	plusw1,btemp+6
 32614  01A5D4  0EF9               	movlw	-7
 32615  01A5D6  006F FF8C  F031    	movff	plusw1,btemp+7
 32616  01A5DC  0E18               	movlw	24
 32617  01A5DE  D005               	goto	u7890
 32618  01A5E0                     u7895:
 32619  01A5E0  90D8               	bcf	status,0,c
 32620  01A5E2  3231               	rrcf	(btemp+7)^0,f,c
 32621  01A5E4  3230               	rrcf	(btemp+6)^0,f,c
 32622  01A5E6  322F               	rrcf	(btemp+5)^0,f,c
 32623  01A5E8  322E               	rrcf	(btemp+4)^0,f,c
 32624  01A5EA                     u7890:
 32625  01A5EA  2EE8               	decfsz	wreg,f,c
 32626  01A5EC  D7F9               	goto	u7895
 32627  01A5EE  0060  F0B8  F032   	movff	btemp+4,btemp+8
 32628  01A5F4  0060  F0BC  F033   	movff	btemp+5,btemp+9
 32629  01A5FA  0EFF               	movlw	255
 32630  01A5FC  1632               	andwf	(btemp+8)^0,f,c
 32631  01A5FE  0E00               	movlw	0
 32632  01A600  1633               	andwf	(btemp+9)^0,f,c
 32633  01A602  5034               	movf	(btemp+10)^0,w,c
 32634  01A604  2632               	addwf	(btemp+8)^0,f,c
 32635  01A606  5035               	movf	(btemp+11)^0,w,c
 32636  01A608  2233               	addwfc	(btemp+9)^0,f,c
 32637                           
 32638                           ;stkvar	_e @ sp[(-10)+8]
 32639  01A60A  0EFE               	movlw	-2
 32640  01A60C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32641  01A612  0EFF               	movlw	-1
 32642  01A614  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 32643                           
 32644                           ;stkvar	_e @ sp[(-10)+8]
 32645  01A61A  0EFF               	movlw	-1
 32646  01A61C  BEE3               	btfsc	plusw1,7,c
 32647  01A61E  D019               	goto	l10164
 32648  01A620  0EFF               	movlw	-1
 32649  01A622  50E3               	movf	plusw1,w,c
 32650  01A624  E108               	bnz	u7900
 32651  01A626  0EFE               	movlw	-2
 32652  01A628  006F FF8C  F02A    	movff	plusw1,btemp
 32653  01A62E  0E17               	movlw	23
 32654  01A630  5E2A               	subwf	btemp^0,f,c
 32655  01A632  A0D8               	btfss	status,0,c
 32656  01A634  D00E               	goto	l10164
 32657  01A636                     u7900:
 32658                           
 32659                           ;stkvar	_x @ sp[(-10)+-4]
 32660  01A636  0EF2               	movlw	-14
 32661  01A638  006F FF8C  F02A    	movff	plusw1,btemp
 32662  01A63E  0EF3               	movlw	-13
 32663  01A640  006F FF8C  F02B    	movff	plusw1,btemp+1
 32664  01A646  0EF4               	movlw	-12
 32665  01A648  006F FF8C  F02C    	movff	plusw1,btemp+2
 32666  01A64E  0EF5               	movlw	-11
 32667  01A650  D11F               	goto	L35
 32668  01A652                     l10164:
 32669                           
 32670                           ;stkvar	_e @ sp[(-10)+8]
 32671  01A652  0EFF               	movlw	-1
 32672  01A654  BEE3               	btfsc	plusw1,7,c
 32673  01A656  D0B4               	goto	l10180
 32674                           
 32675                           ;stkvar	_e @ sp[(-10)+8]
 32676  01A658  0EFE               	movlw	-2
 32677  01A65A  006F FF8C  F035    	movff	plusw1,btemp+11
 32678  01A660  0EFF               	movlw	255
 32679  01A662  6E2E               	movwf	(btemp+4)^0,c
 32680  01A664  0EFF               	movlw	255
 32681  01A666  6E2F               	movwf	(btemp+5)^0,c
 32682  01A668  0E7F               	movlw	127
 32683  01A66A  6E30               	movwf	(btemp+6)^0,c
 32684  01A66C  0E00               	movlw	0
 32685  01A66E  6E31               	movwf	(btemp+7)^0,c
 32686  01A670                     u7925:
 32687  01A670  6635               	tstfsz	(btemp+11)^0,c
 32688  01A672  D001               	goto	u7926
 32689  01A674  D007               	goto	u7927
 32690  01A676                     u7926:
 32691  01A676  3431               	rlcf	(btemp+7)^0,w,c
 32692  01A678  3231               	rrcf	(btemp+7)^0,f,c
 32693  01A67A  3230               	rrcf	(btemp+6)^0,f,c
 32694  01A67C  322F               	rrcf	(btemp+5)^0,f,c
 32695  01A67E  322E               	rrcf	(btemp+4)^0,f,c
 32696  01A680  2E35               	decfsz	(btemp+11)^0,f,c
 32697  01A682  D7F6               	goto	u7925
 32698  01A684                     u7927:
 32699                           
 32700                           ;stkvar	_m @ sp[(-10)+4]
 32701  01A684  0EFA               	movlw	-6
 32702  01A686  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 32703  01A68C  0EFB               	movlw	-5
 32704  01A68E  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 32705  01A694  0EFC               	movlw	-4
 32706  01A696  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 32707  01A69C  0EFD               	movlw	-3
 32708  01A69E  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 32709                           
 32710                           ;stkvar	_m @ sp[(-10)+4]
 32711                           ;stkvar	_u @ sp[(-10)+0]
 32712  01A6A4  0EF6               	movlw	-10
 32713  01A6A6  006F FF8C  F032    	movff	plusw1,btemp+8
 32714  01A6AC  0EF7               	movlw	-9
 32715  01A6AE  006F FF8C  F033    	movff	plusw1,btemp+9
 32716  01A6B4  0EF8               	movlw	-8
 32717  01A6B6  006F FF8C  F034    	movff	plusw1,btemp+10
 32718  01A6BC  0EF9               	movlw	-7
 32719  01A6BE  006F FF8C  F035    	movff	plusw1,btemp+11
 32720  01A6C4  0EFA               	movlw	-6
 32721  01A6C6  50E3               	movf	plusw1,w,c
 32722  01A6C8  1632               	andwf	(btemp+8)^0,f,c
 32723  01A6CA  0EFB               	movlw	-5
 32724  01A6CC  50E3               	movf	plusw1,w,c
 32725  01A6CE  1633               	andwf	(btemp+9)^0,f,c
 32726  01A6D0  0EFC               	movlw	-4
 32727  01A6D2  50E3               	movf	plusw1,w,c
 32728  01A6D4  1634               	andwf	(btemp+10)^0,f,c
 32729  01A6D6  0EFD               	movlw	-3
 32730  01A6D8  50E3               	movf	plusw1,w,c
 32731  01A6DA  1635               	andwf	(btemp+11)^0,f,c
 32732  01A6DC  5032               	movf	(btemp+8)^0,w,c
 32733  01A6DE  1033               	iorwf	(btemp+9)^0,w,c
 32734  01A6E0  1034               	iorwf	(btemp+10)^0,w,c
 32735  01A6E2  1035               	iorwf	(btemp+11)^0,w,c
 32736  01A6E4  B4D8               	btfsc	status,2,c
 32737  01A6E6  D7A7               	goto	u7900
 32738                           
 32739                           ;stkvar	_u @ sp[(-10)+0]
 32740  01A6E8  0EF6               	movlw	-10
 32741  01A6EA  006F FF8C  F032    	movff	plusw1,btemp+8
 32742  01A6F0  0EF7               	movlw	-9
 32743  01A6F2  006F FF8C  F033    	movff	plusw1,btemp+9
 32744  01A6F8  0EF8               	movlw	-8
 32745  01A6FA  006F FF8C  F034    	movff	plusw1,btemp+10
 32746  01A700  0EF9               	movlw	-7
 32747  01A702  006F FF8C  F035    	movff	plusw1,btemp+11
 32748  01A708  0E20               	movlw	32
 32749  01A70A  D005               	goto	u7940
 32750  01A70C                     u7945:
 32751  01A70C  90D8               	bcf	status,0,c
 32752  01A70E  3235               	rrcf	(btemp+11)^0,f,c
 32753  01A710  3234               	rrcf	(btemp+10)^0,f,c
 32754  01A712  3233               	rrcf	(btemp+9)^0,f,c
 32755  01A714  3232               	rrcf	(btemp+8)^0,f,c
 32756  01A716                     u7940:
 32757  01A716  2EE8               	decfsz	wreg,f,c
 32758  01A718  D7F9               	goto	u7945
 32759  01A71A  5032               	movf	(btemp+8)^0,w,c
 32760  01A71C  B4D8               	btfsc	status,2,c
 32761  01A71E  D028               	goto	l10178
 32762                           
 32763                           ;stkvar	_m @ sp[(-10)+4]
 32764                           ;stkvar	_u @ sp[(-10)+0]
 32765  01A720  0EF6               	movlw	-10
 32766  01A722  50E3               	movf	plusw1,w,c
 32767  01A724  6E2A               	movwf	btemp^0,c
 32768  01A726  0EFA               	movlw	-6
 32769  01A728  50E3               	movf	plusw1,w,c
 32770  01A72A  262A               	addwf	btemp^0,f,c
 32771  01A72C  0EF6               	movlw	-10
 32772  01A72E  0060  F0AB  FFE3   	movff	btemp,plusw1
 32773  01A734  0EF7               	movlw	-9
 32774  01A736  50E3               	movf	plusw1,w,c
 32775  01A738  6E2A               	movwf	btemp^0,c
 32776  01A73A  0EFB               	movlw	-5
 32777  01A73C  50E3               	movf	plusw1,w,c
 32778  01A73E  222A               	addwfc	btemp^0,f,c
 32779  01A740  0EF7               	movlw	-9
 32780  01A742  0060  F0AB  FFE3   	movff	btemp,plusw1
 32781  01A748  0EF8               	movlw	-8
 32782  01A74A  50E3               	movf	plusw1,w,c
 32783  01A74C  6E2A               	movwf	btemp^0,c
 32784  01A74E  0EFC               	movlw	-4
 32785  01A750  50E3               	movf	plusw1,w,c
 32786  01A752  222A               	addwfc	btemp^0,f,c
 32787  01A754  0EF8               	movlw	-8
 32788  01A756  0060  F0AB  FFE3   	movff	btemp,plusw1
 32789  01A75C  0EF9               	movlw	-7
 32790  01A75E  50E3               	movf	plusw1,w,c
 32791  01A760  6E2A               	movwf	btemp^0,c
 32792  01A762  0EFD               	movlw	-3
 32793  01A764  50E3               	movf	plusw1,w,c
 32794  01A766  222A               	addwfc	btemp^0,f,c
 32795  01A768  0EF9               	movlw	-7
 32796  01A76A  0060  F0AB  FFE3   	movff	btemp,plusw1
 32797  01A770                     l10178:
 32798                           
 32799                           ;stkvar	_m @ sp[(-10)+4]
 32800  01A770  0EFA               	movlw	-6
 32801  01A772  006F FF8C  F032    	movff	plusw1,btemp+8
 32802  01A778  0EFB               	movlw	-5
 32803  01A77A  006F FF8C  F033    	movff	plusw1,btemp+9
 32804  01A780  0EFC               	movlw	-4
 32805  01A782  006F FF8C  F034    	movff	plusw1,btemp+10
 32806  01A788  0EFD               	movlw	-3
 32807  01A78A  006F FF8C  F035    	movff	plusw1,btemp+11
 32808  01A790  1C32               	comf	(btemp+8)^0,w,c
 32809  01A792  6E2E               	movwf	(btemp+4)^0,c
 32810  01A794  1C33               	comf	(btemp+9)^0,w,c
 32811  01A796  6E2F               	movwf	(btemp+5)^0,c
 32812  01A798  1C34               	comf	(btemp+10)^0,w,c
 32813  01A79A  6E30               	movwf	(btemp+6)^0,c
 32814  01A79C  1C35               	comf	(btemp+11)^0,w,c
 32815  01A79E  6E31               	movwf	(btemp+7)^0,c
 32816                           
 32817                           ;stkvar	_u @ sp[(-10)+0]
 32818  01A7A0  50E1               	movf	fsr1l,w,c
 32819  01A7A2  0FF6               	addlw	-10
 32820  01A7A4  6ED9               	movwf	fsr2l,c
 32821  01A7A6  50E2               	movf	fsr1h,w,c
 32822  01A7A8  6EDA               	movwf	fsr2h,c
 32823  01A7AA  0EFF               	movlw	255
 32824  01A7AC  22DA               	addwfc	fsr2h,f,c
 32825  01A7AE  502E               	movf	(btemp+4)^0,w,c
 32826  01A7B0  16DE               	andwf	postinc2,f,c
 32827  01A7B2  502F               	movf	(btemp+5)^0,w,c
 32828  01A7B4  16DE               	andwf	postinc2,f,c
 32829  01A7B6  5030               	movf	(btemp+6)^0,w,c
 32830  01A7B8  16DE               	andwf	postinc2,f,c
 32831  01A7BA  5031               	movf	(btemp+7)^0,w,c
 32832  01A7BC  16DE               	andwf	postinc2,f,c
 32833  01A7BE  D05B               	goto	l10188
 32834  01A7C0                     l10180:
 32835                           
 32836                           ;stkvar	_u @ sp[(-10)+0]
 32837  01A7C0  0EF6               	movlw	-10
 32838  01A7C2  006F FF8C  F032    	movff	plusw1,btemp+8
 32839  01A7C8  0EF7               	movlw	-9
 32840  01A7CA  006F FF8C  F033    	movff	plusw1,btemp+9
 32841  01A7D0  0EF8               	movlw	-8
 32842  01A7D2  006F FF8C  F034    	movff	plusw1,btemp+10
 32843  01A7D8  0EF9               	movlw	-7
 32844  01A7DA  006F FF8C  F035    	movff	plusw1,btemp+11
 32845  01A7E0  0E20               	movlw	32
 32846  01A7E2  D005               	goto	u7960
 32847  01A7E4                     u7965:
 32848  01A7E4  90D8               	bcf	status,0,c
 32849  01A7E6  3235               	rrcf	(btemp+11)^0,f,c
 32850  01A7E8  3234               	rrcf	(btemp+10)^0,f,c
 32851  01A7EA  3233               	rrcf	(btemp+9)^0,f,c
 32852  01A7EC  3232               	rrcf	(btemp+8)^0,f,c
 32853  01A7EE                     u7960:
 32854  01A7EE  2EE8               	decfsz	wreg,f,c
 32855  01A7F0  D7F9               	goto	u7965
 32856  01A7F2  6632               	tstfsz	(btemp+8)^0,c
 32857  01A7F4  D009               	goto	l10184
 32858                           
 32859                           ;stkvar	_u @ sp[(-10)+0]
 32860  01A7F6  0EF6               	movlw	-10
 32861  01A7F8  6AE3               	clrf	plusw1,c
 32862  01A7FA  0EF7               	movlw	-9
 32863  01A7FC  6AE3               	clrf	plusw1,c
 32864  01A7FE  0EF8               	movlw	-8
 32865  01A800  6AE3               	clrf	plusw1,c
 32866  01A802  0EF9               	movlw	-7
 32867  01A804  6AE3               	clrf	plusw1,c
 32868  01A806  D037               	goto	l10188
 32869  01A808                     l10184:
 32870                           
 32871                           ;stkvar	_u @ sp[(-10)+0]
 32872  01A808  0EF6               	movlw	-10
 32873  01A80A  006F FF8C  F032    	movff	plusw1,btemp+8
 32874  01A810  0EF7               	movlw	-9
 32875  01A812  006F FF8C  F033    	movff	plusw1,btemp+9
 32876  01A818  0EF8               	movlw	-8
 32877  01A81A  006F FF8C  F034    	movff	plusw1,btemp+10
 32878  01A820  0EF9               	movlw	-7
 32879  01A822  006F FF8C  F035    	movff	plusw1,btemp+11
 32880  01A828  90D8               	bcf	status,0,c
 32881  01A82A  3432               	rlcf	(btemp+8)^0,w,c
 32882  01A82C  6E2E               	movwf	(btemp+4)^0,c
 32883  01A82E  3433               	rlcf	(btemp+9)^0,w,c
 32884  01A830  6E2F               	movwf	(btemp+5)^0,c
 32885  01A832  3434               	rlcf	(btemp+10)^0,w,c
 32886  01A834  6E30               	movwf	(btemp+6)^0,c
 32887  01A836  3435               	rlcf	(btemp+11)^0,w,c
 32888  01A838  6E31               	movwf	(btemp+7)^0,c
 32889  01A83A  502E               	movf	(btemp+4)^0,w,c
 32890  01A83C  102F               	iorwf	(btemp+5)^0,w,c
 32891  01A83E  1030               	iorwf	(btemp+6)^0,w,c
 32892  01A840  1031               	iorwf	(btemp+7)^0,w,c
 32893  01A842  B4D8               	btfsc	status,2,c
 32894  01A844  D018               	goto	l10188
 32895  01A846  0E00               	movlw	0
 32896  01A848  6E32               	movwf	(btemp+8)^0,c
 32897  01A84A  0E00               	movlw	0
 32898  01A84C  6E33               	movwf	(btemp+9)^0,c
 32899  01A84E  0E80               	movlw	128
 32900  01A850  6E34               	movwf	(btemp+10)^0,c
 32901  01A852  0EBF               	movlw	191
 32902  01A854  6E35               	movwf	(btemp+11)^0,c
 32903                           
 32904                           ;stkvar	_u @ sp[(-10)+0]
 32905  01A856  0EF6               	movlw	-10
 32906  01A858  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32907  01A85E  0EF7               	movlw	-9
 32908  01A860  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 32909  01A866  0EF8               	movlw	-8
 32910  01A868  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32911  01A86E  0EF9               	movlw	-7
 32912  01A870  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32913  01A876                     l10188:
 32914                           
 32915                           ;stkvar	_u @ sp[(-10)+0]
 32916  01A876  0EF6               	movlw	-10
 32917  01A878  006F FF8C  F02A    	movff	plusw1,btemp
 32918  01A87E  0EF7               	movlw	-9
 32919  01A880  006F FF8C  F02B    	movff	plusw1,btemp+1
 32920  01A886  0EF8               	movlw	-8
 32921  01A888  006F FF8C  F02C    	movff	plusw1,btemp+2
 32922  01A88E  0EF9               	movlw	-7
 32923  01A890                     L35:
 32924  01A890  006F FF8C  F02D    	movff	plusw1,btemp+3
 32925                           
 32926                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 32927  01A896  0EF2               	movlw	242
 32928  01A898  26E1               	addwf	fsr1l,f,c
 32929  01A89A  0EFF               	movlw	255
 32930  01A89C  22E2               	addwfc	fsr1h,f,c
 32931  01A89E  0012               	return		;funcret
 32932  01A8A0                     __end_of_floorf:
 32933                           	opt callstack 0
 32934                           
 32935 ;; *************** function ___fpclassifyf *****************
 32936 ;; Defined at:
 32937 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 32938 ;; Parameters:    Size  Location     Type
 32939 ;;  x               4  [STACK] float 
 32940 ;; Auto vars:     Size  Location     Type
 32941 ;;  u               4  [STACK] struct .
 32942 ;;  e               2  [STACK] int 
 32943 ;; Return value:  Size  Location     Type
 32944 ;;                  2  [STACK] int 
 32945 ;; Registers used:
 32946 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 32947 ;; Tracked objects:
 32948 ;;		On entry : 0/0
 32949 ;;		On exit  : 0/0
 32950 ;;		Unchanged: 0/0
 32951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32956 ;;Total ram usage:        0 bytes
 32957 ;; Hardware stack levels used:    1
 32958 ;; Hardware stack levels required when called:   15
 32959 ;; This function calls:
 32960 ;;		Nothing
 32961 ;; This function is called by:
 32962 ;;		_efgtoa
 32963 ;; This function uses a reentrant model
 32964 ;;
 32965                           
 32966                           	psect	text108
 32967  01DDE2                     __ptext108:
 32968                           	opt callstack 0
 32969  01DDE2                     ___fpclassifyf:
 32970                           	opt callstack 0
 32971                           
 32972                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32973  01DDE2  0E06               	movlw	6
 32974  01DDE4  26E1               	addwf	fsr1l,f,c
 32975  01DDE6  0E00               	movlw	0
 32976  01DDE8  22E2               	addwfc	fsr1h,f,c
 32977                           
 32978                           ;incstack = 0
 32979 ;; hardware stack exceeded
 32980  01DDEA  0060  F1F0  F032   	movff	___fpclassifyf@F463,btemp+8
 32981  01DDF0  0060  F1F4  F033   	movff	___fpclassifyf@F463+1,btemp+9
 32982  01DDF6  0060  F1F8  F034   	movff	___fpclassifyf@F463+2,btemp+10
 32983  01DDFC  0060  F1FC  F035   	movff	___fpclassifyf@F463+3,btemp+11
 32984                           
 32985                           ;stkvar	_u @ sp[(-6)+0]
 32986  01DE02  0EFA               	movlw	-6
 32987  01DE04  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32988  01DE0A  0EFB               	movlw	-5
 32989  01DE0C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 32990  01DE12  0EFC               	movlw	-4
 32991  01DE14  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32992  01DE1A  0EFD               	movlw	-3
 32993  01DE1C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32994                           
 32995                           ;stkvar	_x @ sp[(-6)+-4]
 32996  01DE22  0EF6               	movlw	-10
 32997  01DE24  006F FF8C  F032    	movff	plusw1,btemp+8
 32998  01DE2A  0EF7               	movlw	-9
 32999  01DE2C  006F FF8C  F033    	movff	plusw1,btemp+9
 33000  01DE32  0EF8               	movlw	-8
 33001  01DE34  006F FF8C  F034    	movff	plusw1,btemp+10
 33002  01DE3A  0EF9               	movlw	-7
 33003  01DE3C  006F FF8C  F035    	movff	plusw1,btemp+11
 33004                           
 33005                           ;stkvar	_u @ sp[(-6)+0]
 33006  01DE42  0EFA               	movlw	-6
 33007  01DE44  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33008  01DE4A  0EFB               	movlw	-5
 33009  01DE4C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 33010  01DE52  0EFC               	movlw	-4
 33011  01DE54  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33012  01DE5A  0EFD               	movlw	-3
 33013  01DE5C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33014                           
 33015                           ;stkvar	_u @ sp[(-6)+0]
 33016  01DE62  0EFA               	movlw	-6
 33017  01DE64  006F FF8C  F032    	movff	plusw1,btemp+8
 33018  01DE6A  0EFB               	movlw	-5
 33019  01DE6C  006F FF8C  F033    	movff	plusw1,btemp+9
 33020  01DE72  0EFC               	movlw	-4
 33021  01DE74  006F FF8C  F034    	movff	plusw1,btemp+10
 33022  01DE7A  0EFD               	movlw	-3
 33023  01DE7C  006F FF8C  F035    	movff	plusw1,btemp+11
 33024  01DE82  0E18               	movlw	24
 33025  01DE84  D005               	goto	u7770
 33026  01DE86                     u7775:
 33027  01DE86  90D8               	bcf	status,0,c
 33028  01DE88  3235               	rrcf	(btemp+11)^0,f,c
 33029  01DE8A  3234               	rrcf	(btemp+10)^0,f,c
 33030  01DE8C  3233               	rrcf	(btemp+9)^0,f,c
 33031  01DE8E  3232               	rrcf	(btemp+8)^0,f,c
 33032  01DE90                     u7770:
 33033  01DE90  2EE8               	decfsz	wreg,f,c
 33034  01DE92  D7F9               	goto	u7775
 33035  01DE94  0060  F0C8  F030   	movff	btemp+8,btemp+6
 33036  01DE9A  0060  F0CC  F031   	movff	btemp+9,btemp+7
 33037  01DEA0  0EFF               	movlw	255
 33038  01DEA2  1630               	andwf	(btemp+6)^0,f,c
 33039  01DEA4  0E00               	movlw	0
 33040  01DEA6  1631               	andwf	(btemp+7)^0,f,c
 33041                           
 33042                           ;stkvar	_e @ sp[(-6)+4]
 33043  01DEA8  0EFE               	movlw	-2
 33044  01DEAA  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 33045  01DEB0  0EFF               	movlw	-1
 33046  01DEB2  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 33047                           
 33048                           ;stkvar	_e @ sp[(-6)+4]
 33049  01DEB8  0EFE               	movlw	-2
 33050  01DEBA  006F FF8C  F02A    	movff	plusw1,btemp
 33051  01DEC0  0EFF               	movlw	-1
 33052  01DEC2  50E3               	movf	plusw1,w,c
 33053  01DEC4  102A               	iorwf	btemp^0,w,c
 33054  01DEC6  A4D8               	btfss	status,2,c
 33055  01DEC8  D023               	goto	l10126
 33056                           
 33057                           ;stkvar	_u @ sp[(-6)+0]
 33058  01DECA  0EFA               	movlw	-6
 33059  01DECC  006F FF8C  F032    	movff	plusw1,btemp+8
 33060  01DED2  0EFB               	movlw	-5
 33061  01DED4  006F FF8C  F033    	movff	plusw1,btemp+9
 33062  01DEDA  0EFC               	movlw	-4
 33063  01DEDC  006F FF8C  F034    	movff	plusw1,btemp+10
 33064  01DEE2  0EFD               	movlw	-3
 33065  01DEE4  006F FF8C  F035    	movff	plusw1,btemp+11
 33066  01DEEA  90D8               	bcf	status,0,c
 33067  01DEEC  3432               	rlcf	(btemp+8)^0,w,c
 33068  01DEEE  6E2E               	movwf	(btemp+4)^0,c
 33069  01DEF0  3433               	rlcf	(btemp+9)^0,w,c
 33070  01DEF2  6E2F               	movwf	(btemp+5)^0,c
 33071  01DEF4  3434               	rlcf	(btemp+10)^0,w,c
 33072  01DEF6  6E30               	movwf	(btemp+6)^0,c
 33073  01DEF8  3435               	rlcf	(btemp+11)^0,w,c
 33074  01DEFA  6E31               	movwf	(btemp+7)^0,c
 33075  01DEFC  502E               	movf	(btemp+4)^0,w,c
 33076  01DEFE  102F               	iorwf	(btemp+5)^0,w,c
 33077  01DF00  1030               	iorwf	(btemp+6)^0,w,c
 33078  01DF02  1031               	iorwf	(btemp+7)^0,w,c
 33079  01DF04  A4D8               	btfss	status,2,c
 33080  01DF06  D002               	goto	l10122
 33081  01DF08  0E02               	movlw	2
 33082  01DF0A  D02E               	goto	L36
 33083  01DF0C                     l10122:
 33084  01DF0C  0E03               	movlw	3
 33085  01DF0E  D02C               	goto	L36
 33086  01DF10                     l10126:
 33087                           
 33088                           ;stkvar	_e @ sp[(-6)+4]
 33089  01DF10  0EFE               	movlw	-2
 33090  01DF12  28E3               	incf	plusw1,w,c
 33091  01DF14  E128               	bnz	l10132
 33092  01DF16  0EFF               	movlw	-1
 33093  01DF18  50E3               	movf	plusw1,w,c
 33094  01DF1A  A4D8               	btfss	status,2,c
 33095  01DF1C  D024               	goto	l10132
 33096                           
 33097                           ;stkvar	_u @ sp[(-6)+0]
 33098  01DF1E  0EFA               	movlw	-6
 33099  01DF20  006F FF8C  F032    	movff	plusw1,btemp+8
 33100  01DF26  0EFB               	movlw	-5
 33101  01DF28  006F FF8C  F033    	movff	plusw1,btemp+9
 33102  01DF2E  0EFC               	movlw	-4
 33103  01DF30  006F FF8C  F034    	movff	plusw1,btemp+10
 33104  01DF36  0EFD               	movlw	-3
 33105  01DF38  006F FF8C  F035    	movff	plusw1,btemp+11
 33106  01DF3E  0E09               	movlw	9
 33107  01DF40                     u7815:
 33108  01DF40  90D8               	bcf	status,0,c
 33109  01DF42  3632               	rlcf	(btemp+8)^0,f,c
 33110  01DF44  3633               	rlcf	(btemp+9)^0,f,c
 33111  01DF46  3634               	rlcf	(btemp+10)^0,f,c
 33112  01DF48  3635               	rlcf	(btemp+11)^0,f,c
 33113  01DF4A  2EE8               	decfsz	wreg,f,c
 33114  01DF4C  D7F9               	goto	u7815
 33115  01DF4E  5032               	movf	(btemp+8)^0,w,c
 33116  01DF50  1033               	iorwf	(btemp+9)^0,w,c
 33117  01DF52  1034               	iorwf	(btemp+10)^0,w,c
 33118  01DF54  1035               	iorwf	(btemp+11)^0,w,c
 33119  01DF56  A4D8               	btfss	status,2,c
 33120  01DF58  D002               	goto	u7820
 33121  01DF5A  0E01               	movlw	1
 33122  01DF5C  D001               	goto	u7830
 33123  01DF5E                     u7820:
 33124  01DF5E  0E00               	movlw	0
 33125  01DF60                     u7830:
 33126  01DF60  6E2A               	movwf	btemp^0,c
 33127  01DF62  6A2B               	clrf	(btemp+1)^0,c
 33128  01DF64  D004               	goto	l3409
 33129  01DF66                     l10132:
 33130  01DF66  0E04               	movlw	4
 33131  01DF68                     L36:
 33132  01DF68  6E2A               	movwf	btemp^0,c
 33133  01DF6A  0E00               	movlw	0
 33134  01DF6C  6E2B               	movwf	(btemp+1)^0,c
 33135  01DF6E                     l3409:
 33136                           
 33137                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 33138  01DF6E  0EF6               	movlw	246
 33139  01DF70  26E1               	addwf	fsr1l,f,c
 33140  01DF72  0EFF               	movlw	255
 33141  01DF74  22E2               	addwfc	fsr1h,f,c
 33142  01DF76  0012               	return		;funcret
 33143  01DF78                     __end_of___fpclassifyf:
 33144                           	opt callstack 0
 33145                           
 33146 ;; *************** function ___fltol *****************
 33147 ;; Defined at:
 33148 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 33149 ;; Parameters:    Size  Location     Type
 33150 ;;  f1              4  [STACK] int 
 33151 ;; Auto vars:     Size  Location     Type
 33152 ;;  exp1            1  [STACK] unsigned char 
 33153 ;;  sign1           1  [STACK] unsigned char 
 33154 ;; Return value:  Size  Location     Type
 33155 ;;                  4  [STACK] long 
 33156 ;; Registers used:
 33157 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 33158 ;; Tracked objects:
 33159 ;;		On entry : 0/0
 33160 ;;		On exit  : 0/0
 33161 ;;		Unchanged: 0/0
 33162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33167 ;;Total ram usage:        0 bytes
 33168 ;; Hardware stack levels used:    1
 33169 ;; Hardware stack levels required when called:   15
 33170 ;; This function calls:
 33171 ;;		Nothing
 33172 ;; This function is called by:
 33173 ;;		_main
 33174 ;;		_convert_dac_raw
 33175 ;;		_load_hist_data
 33176 ;;		_calc_bsoc
 33177 ;;		_init_bsoc
 33178 ;;		_efgtoa
 33179 ;; This function uses a reentrant model
 33180 ;;
 33181                           
 33182                           	psect	text109
 33183  01E712                     __ptext109:
 33184                           	opt callstack 0
 33185  01E712                     ___fltol:
 33186                           	opt callstack 0
 33187                           
 33188                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33189  01E712  52E6               	movf	postinc1,f,c
 33190  01E714  52E6               	movf	postinc1,f,c
 33191                           
 33192                           ;stkvar	_f1 @ sp[(-2)+-4]
 33193                           
 33194                           ;incstack = 0
 33195 ;; hardware stack exceeded
 33196  01E716  0EFA               	movlw	-6
 33197  01E718  006F FF8C  F032    	movff	plusw1,btemp+8
 33198  01E71E  0EFB               	movlw	-5
 33199  01E720  006F FF8C  F033    	movff	plusw1,btemp+9
 33200  01E726  0EFC               	movlw	-4
 33201  01E728  006F FF8C  F034    	movff	plusw1,btemp+10
 33202  01E72E  0EFD               	movlw	-3
 33203  01E730  006F FF8C  F035    	movff	plusw1,btemp+11
 33204  01E736  0E18               	movlw	24
 33205  01E738  D005               	goto	u9040
 33206  01E73A                     u9045:
 33207  01E73A  90D8               	bcf	status,0,c
 33208  01E73C  3235               	rrcf	(btemp+11)^0,f,c
 33209  01E73E  3234               	rrcf	(btemp+10)^0,f,c
 33210  01E740  3233               	rrcf	(btemp+9)^0,f,c
 33211  01E742  3232               	rrcf	(btemp+8)^0,f,c
 33212  01E744                     u9040:
 33213  01E744  2EE8               	decfsz	wreg,f,c
 33214  01E746  D7F9               	goto	u9045
 33215                           
 33216                           ;stkvar	_exp1 @ sp[(-2)+0]
 33217  01E748  0EFE               	movlw	-2
 33218  01E74A  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33219  01E750  0EFE               	movlw	-2
 33220  01E752  50E3               	movf	plusw1,w,c
 33221  01E754  A4D8               	btfss	status,2,c
 33222  01E756  D006               	goto	l10778
 33223  01E758                     u9050:
 33224  01E758  0E00               	movlw	0
 33225  01E75A  6E2A               	movwf	btemp^0,c
 33226  01E75C  6A2B               	clrf	(btemp+1)^0,c
 33227  01E75E  6A2C               	clrf	(btemp+2)^0,c
 33228  01E760  6A2D               	clrf	(btemp+3)^0,c
 33229  01E762  D08B               	goto	l3025
 33230  01E764                     l10778:
 33231                           
 33232                           ;stkvar	_f1 @ sp[(-2)+-4]
 33233  01E764  0EFA               	movlw	-6
 33234  01E766  006F FF8C  F032    	movff	plusw1,btemp+8
 33235  01E76C  0EFB               	movlw	-5
 33236  01E76E  006F FF8C  F033    	movff	plusw1,btemp+9
 33237  01E774  0EFC               	movlw	-4
 33238  01E776  006F FF8C  F034    	movff	plusw1,btemp+10
 33239  01E77C  0EFD               	movlw	-3
 33240  01E77E  006F FF8C  F035    	movff	plusw1,btemp+11
 33241  01E784  0E20               	movlw	32
 33242  01E786  D005               	goto	u9060
 33243  01E788                     u9065:
 33244  01E788  90D8               	bcf	status,0,c
 33245  01E78A  3235               	rrcf	(btemp+11)^0,f,c
 33246  01E78C  3234               	rrcf	(btemp+10)^0,f,c
 33247  01E78E  3233               	rrcf	(btemp+9)^0,f,c
 33248  01E790  3232               	rrcf	(btemp+8)^0,f,c
 33249  01E792                     u9060:
 33250  01E792  2EE8               	decfsz	wreg,f,c
 33251  01E794  D7F9               	goto	u9065
 33252                           
 33253                           ;stkvar	_sign1 @ sp[(-2)+1]
 33254  01E796  0EFF               	movlw	-1
 33255  01E798  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33256                           
 33257                           ;stkvar	_f1 @ sp[(-2)+-4]
 33258  01E79E  0EFC               	movlw	-4
 33259  01E7A0  8EE3               	bsf	plusw1,7,c
 33260                           
 33261                           ;stkvar	_f1 @ sp[(-2)+-4]
 33262  01E7A2  50E1               	movf	fsr1l,w,c
 33263  01E7A4  0FFA               	addlw	-6
 33264  01E7A6  6ED9               	movwf	fsr2l,c
 33265  01E7A8  50E2               	movf	fsr1h,w,c
 33266  01E7AA  6EDA               	movwf	fsr2h,c
 33267  01E7AC  0EFF               	movlw	255
 33268  01E7AE  22DA               	addwfc	fsr2h,f,c
 33269  01E7B0  0EFF               	movlw	255
 33270  01E7B2  16DE               	andwf	postinc2,f,c
 33271  01E7B4  0EFF               	movlw	255
 33272  01E7B6  16DE               	andwf	postinc2,f,c
 33273  01E7B8  0EFF               	movlw	255
 33274  01E7BA  16DE               	andwf	postinc2,f,c
 33275  01E7BC  0E00               	movlw	0
 33276  01E7BE  16DE               	andwf	postinc2,f,c
 33277                           
 33278                           ;stkvar	_exp1 @ sp[(-2)+0]
 33279  01E7C0  0EFE               	movlw	-2
 33280  01E7C2  006F FF8C  F02A    	movff	plusw1,btemp
 33281  01E7C8  0E96               	movlw	150
 33282  01E7CA  5E2A               	subwf	btemp^0,f,c
 33283  01E7CC  0EFE               	movlw	-2
 33284  01E7CE  0060  F0AB  FFE3   	movff	btemp,plusw1
 33285                           
 33286                           ;stkvar	_exp1 @ sp[(-2)+0]
 33287  01E7D4  0EFE               	movlw	-2
 33288  01E7D6  AEE3               	btfss	plusw1,7,c
 33289  01E7D8  D014               	goto	l10796
 33290                           
 33291                           ;stkvar	_exp1 @ sp[(-2)+0]
 33292  01E7DA  0EFE               	movlw	-2
 33293  01E7DC  50E3               	movf	plusw1,w,c
 33294  01E7DE  0A80               	xorlw	128
 33295  01E7E0  0F97               	addlw	151
 33296  01E7E2  A0D8               	btfss	status,0,c
 33297  01E7E4  D7B9               	goto	u9050
 33298  01E7E6                     l10794:
 33299                           
 33300                           ;stkvar	_f1 @ sp[(-2)+-4]
 33301  01E7E6  90D8               	bcf	status,0,c
 33302  01E7E8  0EFD               	movlw	-3
 33303  01E7EA  32E3               	rrcf	plusw1,f,c
 33304  01E7EC  0EFC               	movlw	-4
 33305  01E7EE  32E3               	rrcf	plusw1,f,c
 33306  01E7F0  0EFB               	movlw	-5
 33307  01E7F2  32E3               	rrcf	plusw1,f,c
 33308  01E7F4  0EFA               	movlw	-6
 33309  01E7F6  32E3               	rrcf	plusw1,f,c
 33310                           
 33311                           ;stkvar	_exp1 @ sp[(-2)+0]
 33312  01E7F8  0EFE               	movlw	-2
 33313  01E7FA  2AE3               	incf	plusw1,f,c
 33314  01E7FC  B4D8               	btfsc	status,2,c
 33315  01E7FE  D018               	goto	u9110
 33316  01E800  D7F2               	goto	l10794
 33317  01E802                     l10796:
 33318                           
 33319                           ;stkvar	_exp1 @ sp[(-2)+0]
 33320  01E802  0EFE               	movlw	-2
 33321  01E804  006F FF8C  F02A    	movff	plusw1,btemp
 33322  01E80A  0E1F               	movlw	31
 33323  01E80C  642A               	cpfsgt	btemp^0,c
 33324  01E80E  D00C               	goto	l10804
 33325  01E810  D7A3               	goto	u9050
 33326  01E812                     l10802:
 33327                           
 33328                           ;stkvar	_f1 @ sp[(-2)+-4]
 33329  01E812  90D8               	bcf	status,0,c
 33330  01E814  0EFA               	movlw	-6
 33331  01E816  36E3               	rlcf	plusw1,f,c
 33332  01E818  0EFB               	movlw	-5
 33333  01E81A  36E3               	rlcf	plusw1,f,c
 33334  01E81C  0EFC               	movlw	-4
 33335  01E81E  36E3               	rlcf	plusw1,f,c
 33336  01E820  0EFD               	movlw	-3
 33337  01E822  36E3               	rlcf	plusw1,f,c
 33338                           
 33339                           ;stkvar	_exp1 @ sp[(-2)+0]
 33340  01E824  0EFE               	movlw	-2
 33341  01E826  06E3               	decf	plusw1,f,c
 33342  01E828                     l10804:
 33343                           
 33344                           ;stkvar	_exp1 @ sp[(-2)+0]
 33345  01E828  0EFE               	movlw	-2
 33346  01E82A  50E3               	movf	plusw1,w,c
 33347  01E82C  A4D8               	btfss	status,2,c
 33348  01E82E  D7F1               	goto	l10802
 33349  01E830                     u9110:
 33350                           
 33351                           ;stkvar	_sign1 @ sp[(-2)+1]
 33352  01E830  0EFF               	movlw	-1
 33353  01E832  50E3               	movf	plusw1,w,c
 33354  01E834  B4D8               	btfsc	status,2,c
 33355  01E836  D011               	goto	u9130
 33356                           
 33357                           ;stkvar	_f1 @ sp[(-2)+-4]
 33358                           ;stkvar	_f1 @ sp[(-2)+-4]
 33359  01E838  0EFA               	movlw	-6
 33360  01E83A  6CE3               	negf	plusw1,c
 33361  01E83C  0EFB               	movlw	-5
 33362  01E83E  1EE3               	comf	plusw1,f,c
 33363  01E840  0EFC               	movlw	-4
 33364  01E842  1EE3               	comf	plusw1,f,c
 33365  01E844  0EFD               	movlw	-3
 33366  01E846  1EE3               	comf	plusw1,f,c
 33367  01E848  E308               	bnc	u9130
 33368  01E84A  0EFB               	movlw	-5
 33369  01E84C  2AE3               	incf	plusw1,f,c
 33370  01E84E  E305               	bnc	u9130
 33371  01E850  0EFC               	movlw	-4
 33372  01E852  2AE3               	incf	plusw1,f,c
 33373  01E854  E302               	bnc	u9130
 33374  01E856  0EFD               	movlw	-3
 33375  01E858  2AE3               	incf	plusw1,f,c
 33376  01E85A                     u9130:
 33377                           
 33378                           ;stkvar	_f1 @ sp[(-2)+-4]
 33379  01E85A  0EFA               	movlw	-6
 33380  01E85C  006F FF8C  F02A    	movff	plusw1,btemp
 33381  01E862  0EFB               	movlw	-5
 33382  01E864  006F FF8C  F02B    	movff	plusw1,btemp+1
 33383  01E86A  0EFC               	movlw	-4
 33384  01E86C  006F FF8C  F02C    	movff	plusw1,btemp+2
 33385  01E872  0EFD               	movlw	-3
 33386  01E874  006F FF8C  F02D    	movff	plusw1,btemp+3
 33387  01E87A                     l3025:
 33388                           
 33389                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 33390  01E87A  0EFA               	movlw	250
 33391  01E87C  26E1               	addwf	fsr1l,f,c
 33392  01E87E  0EFF               	movlw	255
 33393  01E880  22E2               	addwfc	fsr1h,f,c
 33394  01E882  0012               	return		;funcret
 33395  01E884                     __end_of___fltol:
 33396                           	opt callstack 0
 33397                           
 33398 ;; *************** function ___flneg *****************
 33399 ;; Defined at:
 33400 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 33401 ;; Parameters:    Size  Location     Type
 33402 ;;  f1              4  [STACK] long 
 33403 ;; Auto vars:     Size  Location     Type
 33404 ;;		None
 33405 ;; Return value:  Size  Location     Type
 33406 ;;                  4  [STACK] long 
 33407 ;; Registers used:
 33408 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 33409 ;; Tracked objects:
 33410 ;;		On entry : 0/0
 33411 ;;		On exit  : 0/0
 33412 ;;		Unchanged: 0/0
 33413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33418 ;;Total ram usage:        0 bytes
 33419 ;; Hardware stack levels used:    1
 33420 ;; Hardware stack levels required when called:   15
 33421 ;; This function calls:
 33422 ;;		Nothing
 33423 ;; This function is called by:
 33424 ;;		_calc_bsoc
 33425 ;;		_efgtoa
 33426 ;; This function uses a reentrant model
 33427 ;;
 33428                           
 33429                           	psect	text110
 33430  001CA8                     __ptext110:
 33431                           	opt callstack 0
 33432  001CA8                     ___flneg:
 33433                           	opt callstack 0
 33434                           
 33435                           ;stkvar	_f1 @ sp[(0)+-4]
 33436                           
 33437                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33438                           ;incstack = 0
 33439 ;; hardware stack exceeded
 33440  001CA8  0EFC               	movlw	-4
 33441  001CAA  50E3               	movf	plusw1,w,c
 33442  001CAC  E10A               	bnz	u9030
 33443  001CAE  0EFD               	movlw	-3
 33444  001CB0  50E3               	movf	plusw1,w,c
 33445  001CB2  E107               	bnz	u9030
 33446  001CB4  0EFE               	movlw	-2
 33447  001CB6  50E3               	movf	plusw1,w,c
 33448  001CB8  E104               	bnz	u9030
 33449  001CBA  0EFF               	movlw	-1
 33450  001CBC  50E3               	movf	plusw1,w,c
 33451  001CBE  B4D8               	btfsc	status,2,c
 33452  001CC0  D002               	goto	l10768
 33453  001CC2                     u9030:
 33454                           
 33455                           ;stkvar	_f1 @ sp[(0)+-4]
 33456  001CC2  0EFF               	movlw	-1
 33457  001CC4  7EE3               	btg	plusw1,7,c
 33458  001CC6                     l10768:
 33459                           
 33460                           ;stkvar	_f1 @ sp[(0)+-4]
 33461  001CC6  0EFC               	movlw	-4
 33462  001CC8  006F FF8C  F02A    	movff	plusw1,btemp
 33463  001CCE  0EFD               	movlw	-3
 33464  001CD0  006F FF8C  F02B    	movff	plusw1,btemp+1
 33465  001CD6  0EFE               	movlw	-2
 33466  001CD8  006F FF8C  F02C    	movff	plusw1,btemp+2
 33467  001CDE  0EFF               	movlw	-1
 33468  001CE0  006F FF8C  F02D    	movff	plusw1,btemp+3
 33469                           
 33470                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 33471  001CE6  52E5               	movf	postdec1,f,c
 33472  001CE8  52E5               	movf	postdec1,f,c
 33473  001CEA  52E5               	movf	postdec1,f,c
 33474  001CEC  52E5               	movf	postdec1,f,c
 33475  001CEE  0012               	return		;funcret
 33476  001CF0                     __end_of___flneg:
 33477                           	opt callstack 0
 33478                           
 33479 ;; *************** function ___fleq *****************
 33480 ;; Defined at:
 33481 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 33482 ;; Parameters:    Size  Location     Type
 33483 ;;  ff1             4  [STACK] long 
 33484 ;;  ff2             4  [STACK] long 
 33485 ;; Auto vars:     Size  Location     Type
 33486 ;;		None
 33487 ;; Return value:  Size  Location     Type
 33488 ;;		None               void
 33489 ;; Registers used:
 33490 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 33491 ;; Tracked objects:
 33492 ;;		On entry : 0/0
 33493 ;;		On exit  : 0/0
 33494 ;;		Unchanged: 0/0
 33495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33500 ;;Total ram usage:        0 bytes
 33501 ;; Hardware stack levels used:    1
 33502 ;; Hardware stack levels required when called:   15
 33503 ;; This function calls:
 33504 ;;		Nothing
 33505 ;; This function is called by:
 33506 ;;		_efgtoa
 33507 ;; This function uses a reentrant model
 33508 ;;
 33509                           
 33510                           	psect	text111
 33511  01FF38                     __ptext111:
 33512                           	opt callstack 0
 33513  01FF38                     ___fleq:
 33514                           	opt callstack 0
 33515                           
 33516                           ;stkvar	_ff1 @ sp[(0)+-4]
 33517                           
 33518                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33519                           ;incstack = 0
 33520 ;; hardware stack exceeded
 33521  01FF38  50E1               	movf	fsr1l,w,c
 33522  01FF3A  0FFC               	addlw	-4
 33523  01FF3C  6ED9               	movwf	fsr2l,c
 33524  01FF3E  50E2               	movf	fsr1h,w,c
 33525  01FF40  6EDA               	movwf	fsr2h,c
 33526  01FF42  0EFF               	movlw	255
 33527  01FF44  22DA               	addwfc	fsr2h,f,c
 33528  01FF46  0E00               	movlw	0
 33529  01FF48  14DE               	andwf	postinc2,w,c
 33530  01FF4A  6E32               	movwf	(btemp+8)^0,c
 33531  01FF4C  0E00               	movlw	0
 33532  01FF4E  14DE               	andwf	postinc2,w,c
 33533  01FF50  6E33               	movwf	(btemp+9)^0,c
 33534  01FF52  0E80               	movlw	128
 33535  01FF54  14DE               	andwf	postinc2,w,c
 33536  01FF56  6E34               	movwf	(btemp+10)^0,c
 33537  01FF58  0E7F               	movlw	127
 33538  01FF5A  14DE               	andwf	postinc2,w,c
 33539  01FF5C  6E35               	movwf	(btemp+11)^0,c
 33540  01FF5E  5032               	movf	(btemp+8)^0,w,c
 33541  01FF60  1033               	iorwf	(btemp+9)^0,w,c
 33542  01FF62  1034               	iorwf	(btemp+10)^0,w,c
 33543  01FF64  1035               	iorwf	(btemp+11)^0,w,c
 33544  01FF66  A4D8               	btfss	status,2,c
 33545  01FF68  D008               	goto	l10726
 33546                           
 33547                           ;stkvar	_ff1 @ sp[(0)+-4]
 33548  01FF6A  0EFC               	movlw	-4
 33549  01FF6C  6AE3               	clrf	plusw1,c
 33550  01FF6E  0EFD               	movlw	-3
 33551  01FF70  6AE3               	clrf	plusw1,c
 33552  01FF72  0EFE               	movlw	-2
 33553  01FF74  6AE3               	clrf	plusw1,c
 33554  01FF76  0EFF               	movlw	-1
 33555  01FF78  6AE3               	clrf	plusw1,c
 33556  01FF7A                     l10726:
 33557                           
 33558                           ;stkvar	_ff2 @ sp[(0)+-8]
 33559  01FF7A  50E1               	movf	fsr1l,w,c
 33560  01FF7C  0FF8               	addlw	-8
 33561  01FF7E  6ED9               	movwf	fsr2l,c
 33562  01FF80  50E2               	movf	fsr1h,w,c
 33563  01FF82  6EDA               	movwf	fsr2h,c
 33564  01FF84  0EFF               	movlw	255
 33565  01FF86  22DA               	addwfc	fsr2h,f,c
 33566  01FF88  0E00               	movlw	0
 33567  01FF8A  14DE               	andwf	postinc2,w,c
 33568  01FF8C  6E32               	movwf	(btemp+8)^0,c
 33569  01FF8E  0E00               	movlw	0
 33570  01FF90  14DE               	andwf	postinc2,w,c
 33571  01FF92  6E33               	movwf	(btemp+9)^0,c
 33572  01FF94  0E80               	movlw	128
 33573  01FF96  14DE               	andwf	postinc2,w,c
 33574  01FF98  6E34               	movwf	(btemp+10)^0,c
 33575  01FF9A  0E7F               	movlw	127
 33576  01FF9C  14DE               	andwf	postinc2,w,c
 33577  01FF9E  6E35               	movwf	(btemp+11)^0,c
 33578  01FFA0  5032               	movf	(btemp+8)^0,w,c
 33579  01FFA2  1033               	iorwf	(btemp+9)^0,w,c
 33580  01FFA4  1034               	iorwf	(btemp+10)^0,w,c
 33581  01FFA6  1035               	iorwf	(btemp+11)^0,w,c
 33582  01FFA8  A4D8               	btfss	status,2,c
 33583  01FFAA  D008               	goto	l10730
 33584                           
 33585                           ;stkvar	_ff2 @ sp[(0)+-8]
 33586  01FFAC  0EF8               	movlw	-8
 33587  01FFAE  6AE3               	clrf	plusw1,c
 33588  01FFB0  0EF9               	movlw	-7
 33589  01FFB2  6AE3               	clrf	plusw1,c
 33590  01FFB4  0EFA               	movlw	-6
 33591  01FFB6  6AE3               	clrf	plusw1,c
 33592  01FFB8  0EFB               	movlw	-5
 33593  01FFBA  6AE3               	clrf	plusw1,c
 33594  01FFBC                     l10730:
 33595                           
 33596                           ;stkvar	_ff2 @ sp[(0)+-8]
 33597                           ;stkvar	_ff1 @ sp[(0)+-4]
 33598  01FFBC  50E1               	movf	fsr1l,w,c
 33599  01FFBE  0FFC               	addlw	-4
 33600  01FFC0  6ED9               	movwf	fsr2l,c
 33601  01FFC2  50E2               	movf	fsr1h,w,c
 33602  01FFC4  6EDA               	movwf	fsr2h,c
 33603  01FFC6  0EFF               	movlw	255
 33604  01FFC8  22DA               	addwfc	fsr2h,f,c
 33605  01FFCA  0EF8               	movlw	-8
 33606  01FFCC  50E3               	movf	plusw1,w,c
 33607  01FFCE  18DE               	xorwf	postinc2,w,c
 33608  01FFD0  E10D               	bnz	u8970
 33609  01FFD2  0EF9               	movlw	-7
 33610  01FFD4  50E3               	movf	plusw1,w,c
 33611  01FFD6  18DE               	xorwf	postinc2,w,c
 33612  01FFD8  E109               	bnz	u8970
 33613  01FFDA  0EFA               	movlw	-6
 33614  01FFDC  50E3               	movf	plusw1,w,c
 33615  01FFDE  18DE               	xorwf	postinc2,w,c
 33616  01FFE0  E105               	bnz	u8970
 33617  01FFE2  0EFB               	movlw	-5
 33618  01FFE4  50E3               	movf	plusw1,w,c
 33619  01FFE6  18DE               	xorwf	postinc2,w,c
 33620  01FFE8  B4D8               	btfsc	status,2,c
 33621  01FFEA  D002               	goto	l10734
 33622  01FFEC                     u8970:
 33623  01FFEC  902A               	bcf	btemp& (0+255),0,c
 33624  01FFEE  D001               	goto	l2987
 33625  01FFF0                     l10734:
 33626  01FFF0  802A               	bsf	btemp& (0+255),0,c
 33627  01FFF2                     l2987:
 33628                           
 33629                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 33630  01FFF2  0EF8               	movlw	248
 33631  01FFF4  26E1               	addwf	fsr1l,f,c
 33632  01FFF6  0EFF               	movlw	255
 33633  01FFF8  22E2               	addwfc	fsr1h,f,c
 33634  01FFFA  0012               	return		;funcret
 33635  01FFFC                     __end_of___fleq:
 33636                           	opt callstack 0
 33637                           
 33638 ;; *************** function ___awmod *****************
 33639 ;; Defined at:
 33640 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 33641 ;; Parameters:    Size  Location     Type
 33642 ;;  dividend        2  [STACK] int 
 33643 ;;  divisor         2  [STACK] int 
 33644 ;; Auto vars:     Size  Location     Type
 33645 ;;  sign            1  [STACK] unsigned char 
 33646 ;;  counter         1  [STACK] unsigned char 
 33647 ;; Return value:  Size  Location     Type
 33648 ;;                  2  [STACK] int 
 33649 ;; Registers used:
 33650 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 33651 ;; Tracked objects:
 33652 ;;		On entry : 0/3
 33653 ;;		On exit  : 0/0
 33654 ;;		Unchanged: 0/0
 33655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33660 ;;Total ram usage:        0 bytes
 33661 ;; Hardware stack levels used:    1
 33662 ;; Hardware stack levels required when called:   15
 33663 ;; This function calls:
 33664 ;;		Nothing
 33665 ;; This function is called by:
 33666 ;;		_efgtoa
 33667 ;;		_asctime
 33668 ;; This function uses a reentrant model
 33669 ;;
 33670                           
 33671                           	psect	text112
 33672  01F91E                     __ptext112:
 33673                           	opt callstack 0
 33674  01F91E                     ___awmod:
 33675                           	opt callstack 0
 33676                           
 33677                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33678  01F91E  52E6               	movf	postinc1,f,c
 33679  01F920  52E6               	movf	postinc1,f,c
 33680                           
 33681                           ;stkvar	_sign @ sp[(-2)+0]
 33682                           
 33683                           ;incstack = 0
 33684 ;; hardware stack exceeded
 33685  01F922  0EFE               	movlw	-2
 33686  01F924  6AE3               	clrf	plusw1,c
 33687                           
 33688                           ;stkvar	_dividend @ sp[(-2)+-2]
 33689  01F926  0EFD               	movlw	-3
 33690  01F928  AEE3               	btfss	plusw1,7,c
 33691  01F92A  D009               	goto	l15540
 33692                           
 33693                           ;stkvar	_dividend @ sp[(-2)+-2]
 33694                           ;stkvar	_dividend @ sp[(-2)+-2]
 33695  01F92C  0EFC               	movlw	-4
 33696  01F92E  6CE3               	negf	plusw1,c
 33697  01F930  0EFD               	movlw	-3
 33698  01F932  1EE3               	comf	plusw1,f,c
 33699  01F934  B0D8               	btfsc	status,0,c
 33700  01F936  2AE3               	incf	plusw1,f,c
 33701                           
 33702                           ;stkvar	_sign @ sp[(-2)+0]
 33703  01F938  0EFE               	movlw	-2
 33704  01F93A  6AE3               	clrf	plusw1,c
 33705  01F93C  2AE3               	incf	plusw1,f,c
 33706  01F93E                     l15540:
 33707                           
 33708                           ;stkvar	_divisor @ sp[(-2)+-4]
 33709  01F93E  0EFB               	movlw	-5
 33710  01F940  AEE3               	btfss	plusw1,7,c
 33711  01F942  D006               	goto	l15544
 33712                           
 33713                           ;stkvar	_divisor @ sp[(-2)+-4]
 33714                           ;stkvar	_divisor @ sp[(-2)+-4]
 33715  01F944  0EFA               	movlw	-6
 33716  01F946  6CE3               	negf	plusw1,c
 33717  01F948  0EFB               	movlw	-5
 33718  01F94A  1EE3               	comf	plusw1,f,c
 33719  01F94C  B0D8               	btfsc	status,0,c
 33720  01F94E  2AE3               	incf	plusw1,f,c
 33721  01F950                     l15544:
 33722                           
 33723                           ;stkvar	_divisor @ sp[(-2)+-4]
 33724  01F950  0EFA               	movlw	-6
 33725  01F952  006F FF8C  F02A    	movff	plusw1,btemp
 33726  01F958  0EFB               	movlw	-5
 33727  01F95A  50E3               	movf	plusw1,w,c
 33728  01F95C  102A               	iorwf	btemp^0,w,c
 33729  01F95E  B4D8               	btfsc	status,2,c
 33730  01F960  D053               	goto	u14540
 33731                           
 33732                           ;stkvar	_counter @ sp[(-2)+1]
 33733  01F962  0EFF               	movlw	-1
 33734  01F964  6AE3               	clrf	plusw1,c
 33735  01F966  D012               	goto	L37
 33736  01F968                     l15548:
 33737                           
 33738                           ;stkvar	_divisor @ sp[(-2)+-4]
 33739  01F968  0EFA               	movlw	-6
 33740  01F96A  50E3               	movf	plusw1,w,c
 33741  01F96C  90D8               	bcf	status,0,c
 33742  01F96E  34E8               	rlcf	wreg,w,c
 33743  01F970  6E2A               	movwf	btemp^0,c
 33744  01F972  0EFA               	movlw	-6
 33745  01F974  0060  F0AB  FFE3   	movff	btemp,plusw1
 33746  01F97A  0EFB               	movlw	-5
 33747  01F97C  50E3               	movf	plusw1,w,c
 33748  01F97E  34E8               	rlcf	wreg,w,c
 33749  01F980  6E2A               	movwf	btemp^0,c
 33750  01F982  0EFB               	movlw	-5
 33751  01F984  0060  F0AB  FFE3   	movff	btemp,plusw1
 33752                           
 33753                           ;stkvar	_counter @ sp[(-2)+1]
 33754  01F98A  0EFF               	movlw	-1
 33755  01F98C                     L37:
 33756  01F98C  2AE3               	incf	plusw1,f,c
 33757                           
 33758                           ;stkvar	_divisor @ sp[(-2)+-4]
 33759  01F98E  0EFB               	movlw	-5
 33760  01F990  AEE3               	btfss	plusw1,7,c
 33761  01F992  D7EA               	goto	l15548
 33762  01F994                     u14520:
 33763                           
 33764                           ;stkvar	_divisor @ sp[(-2)+-4]
 33765  01F994  0EFA               	movlw	-6
 33766  01F996  006F FF8C  F034    	movff	plusw1,btemp+10
 33767  01F99C  0EFB               	movlw	-5
 33768  01F99E  006F FF8C  F035    	movff	plusw1,btemp+11
 33769                           
 33770                           ;stkvar	_dividend @ sp[(-2)+-2]
 33771  01F9A4  0EFC               	movlw	-4
 33772  01F9A6  006F FF8C  F032    	movff	plusw1,btemp+8
 33773  01F9AC  0EFD               	movlw	-3
 33774  01F9AE  006F FF8C  F033    	movff	plusw1,btemp+9
 33775  01F9B4  5034               	movf	(btemp+10)^0,w,c
 33776  01F9B6  5C32               	subwf	(btemp+8)^0,w,c
 33777  01F9B8  5035               	movf	(btemp+11)^0,w,c
 33778  01F9BA  5833               	subwfb	(btemp+9)^0,w,c
 33779  01F9BC  A0D8               	btfss	status,0,c
 33780  01F9BE  D014               	goto	l15558
 33781                           
 33782                           ;stkvar	_divisor @ sp[(-2)+-4]
 33783                           ;stkvar	_dividend @ sp[(-2)+-2]
 33784  01F9C0  0EFC               	movlw	-4
 33785  01F9C2  50E3               	movf	plusw1,w,c
 33786  01F9C4  6E2A               	movwf	btemp^0,c
 33787  01F9C6  0EFA               	movlw	-6
 33788  01F9C8  50E3               	movf	plusw1,w,c
 33789  01F9CA  5E2A               	subwf	btemp^0,f,c
 33790  01F9CC  0EFC               	movlw	-4
 33791  01F9CE  0060  F0AB  FFE3   	movff	btemp,plusw1
 33792  01F9D4  0EFD               	movlw	-3
 33793  01F9D6  50E3               	movf	plusw1,w,c
 33794  01F9D8  6E2A               	movwf	btemp^0,c
 33795  01F9DA  0EFB               	movlw	-5
 33796  01F9DC  50E3               	movf	plusw1,w,c
 33797  01F9DE  5A2A               	subwfb	btemp^0,f,c
 33798  01F9E0  0EFD               	movlw	-3
 33799  01F9E2  0060  F0AB  FFE3   	movff	btemp,plusw1
 33800  01F9E8                     l15558:
 33801                           
 33802                           ;stkvar	_divisor @ sp[(-2)+-4]
 33803  01F9E8  90D8               	bcf	status,0,c
 33804  01F9EA  0EFB               	movlw	-5
 33805  01F9EC  32E3               	rrcf	plusw1,f,c
 33806  01F9EE  0EFA               	movlw	-6
 33807  01F9F0  32E3               	rrcf	plusw1,f,c
 33808                           
 33809                           ;stkvar	_counter @ sp[(-2)+1]
 33810  01F9F2  0EFF               	movlw	-1
 33811  01F9F4  50E3               	movf	plusw1,w,c
 33812  01F9F6  6E2A               	movwf	btemp^0,c
 33813  01F9F8  0E01               	movlw	1
 33814  01F9FA  5E2A               	subwf	btemp^0,f,c
 33815  01F9FC  0EFF               	movlw	-1
 33816  01F9FE  0060  F0AB  FFE3   	movff	btemp,plusw1
 33817  01FA04  A4D8               	btfss	status,2,c
 33818  01FA06  D7C6               	goto	u14520
 33819  01FA08                     u14540:
 33820                           
 33821                           ;stkvar	_sign @ sp[(-2)+0]
 33822  01FA08  0EFE               	movlw	-2
 33823  01FA0A  50E3               	movf	plusw1,w,c
 33824  01FA0C  B4D8               	btfsc	status,2,c
 33825  01FA0E  D006               	goto	l15566
 33826                           
 33827                           ;stkvar	_dividend @ sp[(-2)+-2]
 33828                           ;stkvar	_dividend @ sp[(-2)+-2]
 33829  01FA10  0EFC               	movlw	-4
 33830  01FA12  6CE3               	negf	plusw1,c
 33831  01FA14  0EFD               	movlw	-3
 33832  01FA16  1EE3               	comf	plusw1,f,c
 33833  01FA18  B0D8               	btfsc	status,0,c
 33834  01FA1A  2AE3               	incf	plusw1,f,c
 33835  01FA1C                     l15566:
 33836                           
 33837                           ;stkvar	_dividend @ sp[(-2)+-2]
 33838  01FA1C  0EFC               	movlw	-4
 33839  01FA1E  006F FF8C  F02A    	movff	plusw1,btemp
 33840  01FA24  0EFD               	movlw	-3
 33841  01FA26  006F FF8C  F02B    	movff	plusw1,btemp+1
 33842                           
 33843                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 33844  01FA2C  0EFA               	movlw	250
 33845  01FA2E  26E1               	addwf	fsr1l,f,c
 33846  01FA30  0EFF               	movlw	255
 33847  01FA32  22E2               	addwfc	fsr1h,f,c
 33848  01FA34  0012               	return		;funcret
 33849  01FA36                     __end_of___awmod:
 33850                           	opt callstack 0
 33851                           
 33852 ;; *************** function ___awdiv *****************
 33853 ;; Defined at:
 33854 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 33855 ;; Parameters:    Size  Location     Type
 33856 ;;  dividend        2  [STACK] int 
 33857 ;;  divisor         2  [STACK] int 
 33858 ;; Auto vars:     Size  Location     Type
 33859 ;;  quotient        2  [STACK] int 
 33860 ;;  sign            1  [STACK] unsigned char 
 33861 ;;  counter         1  [STACK] unsigned char 
 33862 ;; Return value:  Size  Location     Type
 33863 ;;                  2  [STACK] int 
 33864 ;; Registers used:
 33865 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 33866 ;; Tracked objects:
 33867 ;;		On entry : 0/3
 33868 ;;		On exit  : 0/0
 33869 ;;		Unchanged: 0/0
 33870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33875 ;;Total ram usage:        0 bytes
 33876 ;; Hardware stack levels used:    1
 33877 ;; Hardware stack levels required when called:   15
 33878 ;; This function calls:
 33879 ;;		Nothing
 33880 ;; This function is called by:
 33881 ;;		_efgtoa
 33882 ;;		_put2d
 33883 ;;		_asctime
 33884 ;;		_scan_trans
 33885 ;; This function uses a reentrant model
 33886 ;;
 33887                           
 33888                           	psect	text113
 33889  01F0C0                     __ptext113:
 33890                           	opt callstack 0
 33891  01F0C0                     ___awdiv:
 33892                           	opt callstack 0
 33893                           
 33894                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33895  01F0C0  52E6               	movf	postinc1,f,c
 33896  01F0C2  52E6               	movf	postinc1,f,c
 33897  01F0C4  52E6               	movf	postinc1,f,c
 33898  01F0C6  52E6               	movf	postinc1,f,c
 33899                           
 33900                           ;stkvar	_sign @ sp[(-4)+2]
 33901                           
 33902                           ;incstack = 0
 33903 ;; hardware stack exceeded
 33904  01F0C8  0EFE               	movlw	-2
 33905  01F0CA  6AE3               	clrf	plusw1,c
 33906                           
 33907                           ;stkvar	_divisor @ sp[(-4)+-4]
 33908  01F0CC  0EF9               	movlw	-7
 33909  01F0CE  AEE3               	btfss	plusw1,7,c
 33910  01F0D0  D009               	goto	l15494
 33911                           
 33912                           ;stkvar	_divisor @ sp[(-4)+-4]
 33913                           ;stkvar	_divisor @ sp[(-4)+-4]
 33914  01F0D2  0EF8               	movlw	-8
 33915  01F0D4  6CE3               	negf	plusw1,c
 33916  01F0D6  0EF9               	movlw	-7
 33917  01F0D8  1EE3               	comf	plusw1,f,c
 33918  01F0DA  B0D8               	btfsc	status,0,c
 33919  01F0DC  2AE3               	incf	plusw1,f,c
 33920                           
 33921                           ;stkvar	_sign @ sp[(-4)+2]
 33922  01F0DE  0EFE               	movlw	-2
 33923  01F0E0  6AE3               	clrf	plusw1,c
 33924  01F0E2  2AE3               	incf	plusw1,f,c
 33925  01F0E4                     l15494:
 33926                           
 33927                           ;stkvar	_dividend @ sp[(-4)+-2]
 33928  01F0E4  0EFB               	movlw	-5
 33929  01F0E6  AEE3               	btfss	plusw1,7,c
 33930  01F0E8  D008               	goto	l15500
 33931                           
 33932                           ;stkvar	_dividend @ sp[(-4)+-2]
 33933                           ;stkvar	_dividend @ sp[(-4)+-2]
 33934  01F0EA  0EFA               	movlw	-6
 33935  01F0EC  6CE3               	negf	plusw1,c
 33936  01F0EE  0EFB               	movlw	-5
 33937  01F0F0  1EE3               	comf	plusw1,f,c
 33938  01F0F2  B0D8               	btfsc	status,0,c
 33939  01F0F4  2AE3               	incf	plusw1,f,c
 33940                           
 33941                           ;stkvar	_sign @ sp[(-4)+2]
 33942  01F0F6  0EFE               	movlw	-2
 33943  01F0F8  70E3               	btg	plusw1,0,c
 33944  01F0FA                     l15500:
 33945                           
 33946                           ;stkvar	_quotient @ sp[(-4)+0]
 33947  01F0FA  0EFC               	movlw	-4
 33948  01F0FC  6AE3               	clrf	plusw1,c
 33949  01F0FE  0EFD               	movlw	-3
 33950  01F100  6AE3               	clrf	plusw1,c
 33951                           
 33952                           ;stkvar	_divisor @ sp[(-4)+-4]
 33953  01F102  0EF8               	movlw	-8
 33954  01F104  006F FF8C  F02A    	movff	plusw1,btemp
 33955  01F10A  0EF9               	movlw	-7
 33956  01F10C  50E3               	movf	plusw1,w,c
 33957  01F10E  102A               	iorwf	btemp^0,w,c
 33958  01F110  B4D8               	btfsc	status,2,c
 33959  01F112  D066               	goto	u14470
 33960                           
 33961                           ;stkvar	_counter @ sp[(-4)+3]
 33962  01F114  0EFF               	movlw	-1
 33963  01F116  6AE3               	clrf	plusw1,c
 33964  01F118  D012               	goto	L38
 33965  01F11A                     l15506:
 33966                           
 33967                           ;stkvar	_divisor @ sp[(-4)+-4]
 33968  01F11A  0EF8               	movlw	-8
 33969  01F11C  50E3               	movf	plusw1,w,c
 33970  01F11E  90D8               	bcf	status,0,c
 33971  01F120  34E8               	rlcf	wreg,w,c
 33972  01F122  6E2A               	movwf	btemp^0,c
 33973  01F124  0EF8               	movlw	-8
 33974  01F126  0060  F0AB  FFE3   	movff	btemp,plusw1
 33975  01F12C  0EF9               	movlw	-7
 33976  01F12E  50E3               	movf	plusw1,w,c
 33977  01F130  34E8               	rlcf	wreg,w,c
 33978  01F132  6E2A               	movwf	btemp^0,c
 33979  01F134  0EF9               	movlw	-7
 33980  01F136  0060  F0AB  FFE3   	movff	btemp,plusw1
 33981                           
 33982                           ;stkvar	_counter @ sp[(-4)+3]
 33983  01F13C  0EFF               	movlw	-1
 33984  01F13E                     L38:
 33985  01F13E  2AE3               	incf	plusw1,f,c
 33986                           
 33987                           ;stkvar	_divisor @ sp[(-4)+-4]
 33988  01F140  0EF9               	movlw	-7
 33989  01F142  AEE3               	btfss	plusw1,7,c
 33990  01F144  D7EA               	goto	l15506
 33991  01F146                     u14450:
 33992                           
 33993                           ;stkvar	_quotient @ sp[(-4)+0]
 33994  01F146  0EFC               	movlw	-4
 33995  01F148  50E3               	movf	plusw1,w,c
 33996  01F14A  90D8               	bcf	status,0,c
 33997  01F14C  34E8               	rlcf	wreg,w,c
 33998  01F14E  6E2A               	movwf	btemp^0,c
 33999  01F150  0EFC               	movlw	-4
 34000  01F152  0060  F0AB  FFE3   	movff	btemp,plusw1
 34001  01F158  0EFD               	movlw	-3
 34002  01F15A  50E3               	movf	plusw1,w,c
 34003  01F15C  34E8               	rlcf	wreg,w,c
 34004  01F15E  6E2A               	movwf	btemp^0,c
 34005  01F160  0EFD               	movlw	-3
 34006  01F162  0060  F0AB  FFE3   	movff	btemp,plusw1
 34007                           
 34008                           ;stkvar	_divisor @ sp[(-4)+-4]
 34009  01F168  0EF8               	movlw	-8
 34010  01F16A  006F FF8C  F034    	movff	plusw1,btemp+10
 34011  01F170  0EF9               	movlw	-7
 34012  01F172  006F FF8C  F035    	movff	plusw1,btemp+11
 34013                           
 34014                           ;stkvar	_dividend @ sp[(-4)+-2]
 34015  01F178  0EFA               	movlw	-6
 34016  01F17A  006F FF8C  F032    	movff	plusw1,btemp+8
 34017  01F180  0EFB               	movlw	-5
 34018  01F182  006F FF8C  F033    	movff	plusw1,btemp+9
 34019  01F188  5034               	movf	(btemp+10)^0,w,c
 34020  01F18A  5C32               	subwf	(btemp+8)^0,w,c
 34021  01F18C  5035               	movf	(btemp+11)^0,w,c
 34022  01F18E  5833               	subwfb	(btemp+9)^0,w,c
 34023  01F190  A0D8               	btfss	status,0,c
 34024  01F192  D016               	goto	l15520
 34025                           
 34026                           ;stkvar	_divisor @ sp[(-4)+-4]
 34027                           ;stkvar	_dividend @ sp[(-4)+-2]
 34028  01F194  0EFA               	movlw	-6
 34029  01F196  50E3               	movf	plusw1,w,c
 34030  01F198  6E2A               	movwf	btemp^0,c
 34031  01F19A  0EF8               	movlw	-8
 34032  01F19C  50E3               	movf	plusw1,w,c
 34033  01F19E  5E2A               	subwf	btemp^0,f,c
 34034  01F1A0  0EFA               	movlw	-6
 34035  01F1A2  0060  F0AB  FFE3   	movff	btemp,plusw1
 34036  01F1A8  0EFB               	movlw	-5
 34037  01F1AA  50E3               	movf	plusw1,w,c
 34038  01F1AC  6E2A               	movwf	btemp^0,c
 34039  01F1AE  0EF9               	movlw	-7
 34040  01F1B0  50E3               	movf	plusw1,w,c
 34041  01F1B2  5A2A               	subwfb	btemp^0,f,c
 34042  01F1B4  0EFB               	movlw	-5
 34043  01F1B6  0060  F0AB  FFE3   	movff	btemp,plusw1
 34044                           
 34045                           ;stkvar	_quotient @ sp[(-4)+0]
 34046  01F1BC  0EFC               	movlw	-4
 34047  01F1BE  80E3               	bsf	plusw1,0,c
 34048  01F1C0                     l15520:
 34049                           
 34050                           ;stkvar	_divisor @ sp[(-4)+-4]
 34051  01F1C0  90D8               	bcf	status,0,c
 34052  01F1C2  0EF9               	movlw	-7
 34053  01F1C4  32E3               	rrcf	plusw1,f,c
 34054  01F1C6  0EF8               	movlw	-8
 34055  01F1C8  32E3               	rrcf	plusw1,f,c
 34056                           
 34057                           ;stkvar	_counter @ sp[(-4)+3]
 34058  01F1CA  0EFF               	movlw	-1
 34059  01F1CC  50E3               	movf	plusw1,w,c
 34060  01F1CE  6E2A               	movwf	btemp^0,c
 34061  01F1D0  0E01               	movlw	1
 34062  01F1D2  5E2A               	subwf	btemp^0,f,c
 34063  01F1D4  0EFF               	movlw	-1
 34064  01F1D6  0060  F0AB  FFE3   	movff	btemp,plusw1
 34065  01F1DC  A4D8               	btfss	status,2,c
 34066  01F1DE  D7B3               	goto	u14450
 34067  01F1E0                     u14470:
 34068                           
 34069                           ;stkvar	_sign @ sp[(-4)+2]
 34070  01F1E0  0EFE               	movlw	-2
 34071  01F1E2  50E3               	movf	plusw1,w,c
 34072  01F1E4  B4D8               	btfsc	status,2,c
 34073  01F1E6  D006               	goto	l15528
 34074                           
 34075                           ;stkvar	_quotient @ sp[(-4)+0]
 34076                           ;stkvar	_quotient @ sp[(-4)+0]
 34077  01F1E8  0EFC               	movlw	-4
 34078  01F1EA  6CE3               	negf	plusw1,c
 34079  01F1EC  0EFD               	movlw	-3
 34080  01F1EE  1EE3               	comf	plusw1,f,c
 34081  01F1F0  B0D8               	btfsc	status,0,c
 34082  01F1F2  2AE3               	incf	plusw1,f,c
 34083  01F1F4                     l15528:
 34084                           
 34085                           ;stkvar	_quotient @ sp[(-4)+0]
 34086  01F1F4  0EFC               	movlw	-4
 34087  01F1F6  006F FF8C  F02A    	movff	plusw1,btemp
 34088  01F1FC  0EFD               	movlw	-3
 34089  01F1FE  006F FF8C  F02B    	movff	plusw1,btemp+1
 34090                           
 34091                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 34092  01F204  0EF8               	movlw	248
 34093  01F206  26E1               	addwf	fsr1l,f,c
 34094  01F208  0EFF               	movlw	255
 34095  01F20A  22E2               	addwfc	fsr1h,f,c
 34096  01F20C  0012               	return		;funcret
 34097  01F20E                     __end_of___awdiv:
 34098                           	opt callstack 0
 34099                           
 34100 ;; *************** function _dtoa *****************
 34101 ;; Defined at:
 34102 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 34103 ;; Parameters:    Size  Location     Type
 34104 ;;  fp              2  [STACK] PTR struct _IO_FILE
 34105 ;;		 -> f(6), NULL(0), 
 34106 ;;  d               8  [STACK] long long 
 34107 ;; Auto vars:     Size  Location     Type
 34108 ;;  n               8  [STACK] long long 
 34109 ;;  i               2  [STACK] int 
 34110 ;;  s               2  [STACK] int 
 34111 ;;  w               2  [STACK] int 
 34112 ;;  p               2  [STACK] int 
 34113 ;; Return value:  Size  Location     Type
 34114 ;;                  2  [STACK] int 
 34115 ;; Registers used:
 34116 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 34117 ;; Tracked objects:
 34118 ;;		On entry : 0/0
 34119 ;;		On exit  : 0/0
 34120 ;;		Unchanged: 0/0
 34121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34126 ;;Total ram usage:        0 bytes
 34127 ;; Hardware stack levels used:    1
 34128 ;; Hardware stack levels required when called:   20
 34129 ;; This function calls:
 34130 ;;		___aodiv
 34131 ;;		___aomod
 34132 ;;		_abs
 34133 ;;		_pad
 34134 ;; This function is called by:
 34135 ;;		_vfpfcnvrt
 34136 ;; This function uses a reentrant model
 34137 ;;
 34138                           
 34139                           	psect	text114
 34140  018C52                     __ptext114:
 34141                           	opt callstack 0
 34142  018C52                     _dtoa:
 34143                           	opt callstack 0
 34144                           
 34145                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 34146  018C52  0E12               	movlw	18
 34147  018C54  26E1               	addwf	fsr1l,f,c
 34148  018C56  0E00               	movlw	0
 34149  018C58  22E2               	addwfc	fsr1h,f,c
 34150                           
 34151                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 34152                           ;stkvar	_d @ sp[(-18)+-10]
 34153                           
 34154                           ;incstack = 0
 34155 ;; hardware stack exceeded
 34156  018C5A  0EE4               	movlw	228
 34157  018C5C  24E1               	addwf	fsr1l,w,c
 34158  018C5E  6ED9               	movwf	fsr2l,c
 34159  018C60  0EFF               	movlw	255
 34160  018C62  20E2               	addwfc	fsr1h,w,c
 34161  018C64  6EDA               	movwf	fsr2h,c
 34162                           
 34163                           ;stkvar	_n @ sp[(-18)+2]
 34164  018C66  0E08               	movlw	8
 34165  018C68  6E2A               	movwf	btemp^0,c
 34166  018C6A  0EF0               	movlw	-16
 34167  018C6C                     us1458999:
 34168  018C6C  006F FF7B FFE3     	movff	postinc2,plusw1
 34169  018C72  28E8               	incf	wreg,w,c
 34170  018C74  2E2A               	decfsz	btemp^0,f,c
 34171  018C76  D7FA               	bra	us1458999
 34172                           
 34173                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 34174                           ;stkvar	_n @ sp[(-18)+2]
 34175  018C78  0EF7               	movlw	-9
 34176  018C7A  AEE3               	btfss	plusw1,7,c
 34177  018C7C  D002               	goto	u14590
 34178  018C7E  0E01               	movlw	1
 34179  018C80  D001               	goto	u14600
 34180  018C82                     u14590:
 34181  018C82  0E00               	movlw	0
 34182  018C84                     u14600:
 34183  018C84  6E34               	movwf	(btemp+10)^0,c
 34184  018C86  6A35               	clrf	(btemp+11)^0,c
 34185                           
 34186                           ;stkvar	_s @ sp[(-18)+12]
 34187  018C88  0EFA               	movlw	-6
 34188  018C8A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 34189  018C90  0EFB               	movlw	-5
 34190  018C92  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 34191                           
 34192                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 34193                           ;stkvar	_s @ sp[(-18)+12]
 34194  018C98  0EFA               	movlw	-6
 34195  018C9A  006F FF8C  F02A    	movff	plusw1,btemp
 34196  018CA0  0EFB               	movlw	-5
 34197  018CA2  50E3               	movf	plusw1,w,c
 34198  018CA4  102A               	iorwf	btemp^0,w,c
 34199  018CA6  B4D8               	btfsc	status,2,c
 34200  018CA8  D025               	goto	u14620
 34201                           
 34202                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 34203                           ;stkvar	_n @ sp[(-18)+2]
 34204                           ;stkvar	_n @ sp[(-18)+2]
 34205  018CAA  0EF0               	movlw	-16
 34206  018CAC  6CE3               	negf	plusw1,c
 34207  018CAE  0EF1               	movlw	-15
 34208  018CB0  1EE3               	comf	plusw1,f,c
 34209  018CB2  0EF2               	movlw	-14
 34210  018CB4  1EE3               	comf	plusw1,f,c
 34211  018CB6  0EF3               	movlw	-13
 34212  018CB8  1EE3               	comf	plusw1,f,c
 34213  018CBA  0EF4               	movlw	-12
 34214  018CBC  1EE3               	comf	plusw1,f,c
 34215  018CBE  0EF5               	movlw	-11
 34216  018CC0  1EE3               	comf	plusw1,f,c
 34217  018CC2  0EF6               	movlw	-10
 34218  018CC4  1EE3               	comf	plusw1,f,c
 34219  018CC6  0EF7               	movlw	-9
 34220  018CC8  1EE3               	comf	plusw1,f,c
 34221  018CCA  E314               	bnc	u14620
 34222  018CCC  0EF1               	movlw	-15
 34223  018CCE  2AE3               	incf	plusw1,f,c
 34224  018CD0  E311               	bnc	u14620
 34225  018CD2  0EF2               	movlw	-14
 34226  018CD4  2AE3               	incf	plusw1,f,c
 34227  018CD6  E30E               	bnc	u14620
 34228  018CD8  0EF3               	movlw	-13
 34229  018CDA  2AE3               	incf	plusw1,f,c
 34230  018CDC  E30B               	bnc	u14620
 34231  018CDE  0EF4               	movlw	-12
 34232  018CE0  2AE3               	incf	plusw1,f,c
 34233  018CE2  E308               	bnc	u14620
 34234  018CE4  0EF5               	movlw	-11
 34235  018CE6  2AE3               	incf	plusw1,f,c
 34236  018CE8  E305               	bnc	u14620
 34237  018CEA  0EF6               	movlw	-10
 34238  018CEC  2AE3               	incf	plusw1,f,c
 34239  018CEE  E302               	bnc	u14620
 34240  018CF0  0EF7               	movlw	-9
 34241  018CF2  2AE3               	incf	plusw1,f,c
 34242  018CF4                     u14620:
 34243                           
 34244                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 34245  018CF4  AE4D               	btfss	(_prec+1)^0,7,c
 34246                           
 34247                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 34248  018CF6  924E               	bcf	_flags^0,1,c
 34249                           
 34250                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 34251  018CF8  BE4D               	btfsc	(_prec+1)^0,7,c
 34252  018CFA  D005               	goto	u14640
 34253  018CFC  504D               	movf	(_prec+1)^0,w,c
 34254  018CFE  E110               	bnz	l15606
 34255  018D00  044C               	decf	_prec^0,w,c
 34256  018D02  B0D8               	btfsc	status,0,c
 34257  018D04  D00D               	goto	l15606
 34258  018D06                     u14640:
 34259  018D06  0E01               	movlw	1
 34260  018D08  6E34               	movwf	(btemp+10)^0,c
 34261  018D0A  0E00               	movlw	0
 34262  018D0C  6E35               	movwf	(btemp+11)^0,c
 34263                           
 34264                           ;stkvar	_p @ sp[(-18)+16]
 34265  018D0E  0EFE               	movlw	-2
 34266  018D10  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 34267  018D16  0EFF               	movlw	-1
 34268  018D18  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 34269  018D1E  D008               	goto	l2491
 34270  018D20                     l15606:
 34271                           
 34272                           ;stkvar	_p @ sp[(-18)+16]
 34273  018D20  0EFE               	movlw	-2
 34274  018D22  0060  F133  FFE3   	movff	_prec,plusw1
 34275  018D28  0EFF               	movlw	-1
 34276  018D2A  0060  F137  FFE3   	movff	_prec+1,plusw1
 34277  018D30                     l2491:
 34278                           
 34279                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 34280                           ;stkvar	_w @ sp[(-18)+14]
 34281  018D30  0EFC               	movlw	-4
 34282  018D32  0060  F12B  FFE3   	movff	_width,plusw1
 34283  018D38  0EFD               	movlw	-3
 34284  018D3A  0060  F12F  FFE3   	movff	_width+1,plusw1
 34285                           
 34286                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 34287                           ;stkvar	_s @ sp[(-18)+12]
 34288  018D40  0EFA               	movlw	-6
 34289  018D42  006F FF8C  F02A    	movff	plusw1,btemp
 34290  018D48  0EFB               	movlw	-5
 34291  018D4A  50E3               	movf	plusw1,w,c
 34292  018D4C  102A               	iorwf	btemp^0,w,c
 34293  018D4E  A4D8               	btfss	status,2,c
 34294  018D50  D002               	goto	u14660
 34295  018D52  A44E               	btfss	_flags^0,2,c
 34296  018D54  D00A               	goto	l15614
 34297  018D56                     u14660:
 34298                           
 34299                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 34300                           ;stkvar	_w @ sp[(-18)+14]
 34301  018D56  50E1               	movf	fsr1l,w,c
 34302  018D58  0FFC               	addlw	-4
 34303  018D5A  6ED9               	movwf	fsr2l,c
 34304  018D5C  50E2               	movf	fsr1h,w,c
 34305  018D5E  6EDA               	movwf	fsr2h,c
 34306  018D60  0EFF               	movlw	255
 34307  018D62  22DA               	addwfc	fsr2h,f,c
 34308  018D64  06DE               	decf	postinc2,f,c
 34309  018D66  0E00               	movlw	0
 34310  018D68  5ADD               	subwfb	postdec2,f,c
 34311  018D6A                     l15614:
 34312                           
 34313                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 34314  018D6A  0E4F               	movlw	79
 34315  018D6C  6E34               	movwf	(btemp+10)^0,c
 34316  018D6E  0E00               	movlw	0
 34317  018D70  6E35               	movwf	(btemp+11)^0,c
 34318                           
 34319                           ;stkvar	_i @ sp[(-18)+10]
 34320  018D72  0EF8               	movlw	-8
 34321  018D74  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 34322  018D7A  0EF9               	movlw	-7
 34323  018D7C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 34324                           
 34325                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 34326  018D82  0103               	movlb	3	; () banked
 34327  018D84  6BA3               	clrf	(_dbuf+79)& (0+255),b
 34328                           
 34329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 34330  018D86  D109               	goto	l15628
 34331  018D88                     l15618:
 34332                           
 34333                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 34334                           ;stkvar	_i @ sp[(-18)+10]
 34335  018D88  50E1               	movf	fsr1l,w,c
 34336  018D8A  0FF8               	addlw	-8
 34337  018D8C  6ED9               	movwf	fsr2l,c
 34338  018D8E  50E2               	movf	fsr1h,w,c
 34339  018D90  6EDA               	movwf	fsr2h,c
 34340  018D92  0EFF               	movlw	255
 34341  018D94  22DA               	addwfc	fsr2h,f,c
 34342  018D96  06DE               	decf	postinc2,f,c
 34343  018D98  0E00               	movlw	0
 34344  018D9A  5ADD               	subwfb	postdec2,f,c
 34345                           
 34346                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 34347  018D9C  0E0A               	movlw	10
 34348  018D9E  6EE6               	movwf	postinc1,c
 34349  018DA0  0E00               	movlw	0
 34350  018DA2  6EE6               	movwf	postinc1,c
 34351  018DA4  0E00               	movlw	0
 34352  018DA6  6EE6               	movwf	postinc1,c
 34353  018DA8  0E00               	movlw	0
 34354  018DAA  6EE6               	movwf	postinc1,c
 34355  018DAC  0E00               	movlw	0
 34356  018DAE  6EE6               	movwf	postinc1,c
 34357  018DB0  0E00               	movlw	0
 34358  018DB2  6EE6               	movwf	postinc1,c
 34359  018DB4  0E00               	movlw	0
 34360  018DB6  6EE6               	movwf	postinc1,c
 34361  018DB8  0E00               	movlw	0
 34362  018DBA  6EE6               	movwf	postinc1,c
 34363                           
 34364                           ;stkvar	_n @ sp[(-26)+2]
 34365  018DBC  50E1               	movf	fsr1l,w,c
 34366  018DBE  0FE8               	addlw	-24
 34367  018DC0  6ED9               	movwf	fsr2l,c
 34368  018DC2  50E2               	movf	fsr1h,w,c
 34369  018DC4  6EDA               	movwf	fsr2h,c
 34370  018DC6  0EFF               	movlw	255
 34371  018DC8  22DA               	addwfc	fsr2h,f,c
 34372  018DCA  006F FF7B FFE6     	movff	postinc2,postinc1
 34373  018DD0  006F FF7B FFE6     	movff	postinc2,postinc1
 34374  018DD6  006F FF7B FFE6     	movff	postinc2,postinc1
 34375  018DDC  006F FF7B FFE6     	movff	postinc2,postinc1
 34376  018DE2  006F FF7B FFE6     	movff	postinc2,postinc1
 34377  018DE8  006F FF7B FFE6     	movff	postinc2,postinc1
 34378  018DEE  006F FF7B FFE6     	movff	postinc2,postinc1
 34379  018DF4  006F FF7B FFE6     	movff	postinc2,postinc1
 34380  018DFA  ECFB  F0E5         	call	___aomod	;wreg free
 34381  018DFE  52E5               	movf	postdec1,f,c
 34382  018E00  006F FF9C  F041    	movff	indf1,btemp+23
 34383  018E06  52E5               	movf	postdec1,f,c
 34384  018E08  006F FF9C  F040    	movff	indf1,btemp+22
 34385  018E0E  52E5               	movf	postdec1,f,c
 34386  018E10  006F FF9C  F03F    	movff	indf1,btemp+21
 34387  018E16  52E5               	movf	postdec1,f,c
 34388  018E18  006F FF9C  F03E    	movff	indf1,btemp+20
 34389  018E1E  52E5               	movf	postdec1,f,c
 34390  018E20  006F FF9C  F03D    	movff	indf1,btemp+19
 34391  018E26  52E5               	movf	postdec1,f,c
 34392  018E28  006F FF9C  F03C    	movff	indf1,btemp+18
 34393  018E2E  52E5               	movf	postdec1,f,c
 34394  018E30  006F FF9C  F03B    	movff	indf1,btemp+17
 34395  018E36  52E5               	movf	postdec1,f,c
 34396  018E38  006F FF9C  F03A    	movff	indf1,btemp+16
 34397  018E3E  0EF8               	movlw	248
 34398  018E40  26E1               	addwf	fsr1l,f,c
 34399  018E42  0EFF               	movlw	255
 34400  018E44  22E2               	addwfc	fsr1h,f,c
 34401  018E46  0060  F0E8  F034   	movff	btemp+16,btemp+10
 34402  018E4C  0060  F0EC  F035   	movff	btemp+17,btemp+11
 34403  018E52  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 34404  018E58  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 34405  018E5E  EC07  F00F         	call	_abs	;wreg free
 34406  018E62  0E30               	movlw	48
 34407  018E64  262A               	addwf	btemp^0,f,c
 34408                           
 34409                           ;stkvar	_i @ sp[(-18)+10]
 34410  018E66  0EF8               	movlw	-8
 34411  018E68  006F FF8C  F034    	movff	plusw1,btemp+10
 34412  018E6E  0EF9               	movlw	-7
 34413  018E70  006F FF8C  F035    	movff	plusw1,btemp+11
 34414  018E76  0E54               	movlw	low _dbuf
 34415  018E78  2434               	addwf	(btemp+10)^0,w,c
 34416  018E7A  6ED9               	movwf	fsr2l,c
 34417  018E7C  0E03               	movlw	high _dbuf
 34418  018E7E  2035               	addwfc	(btemp+11)^0,w,c
 34419  018E80  6EDA               	movwf	fsr2h,c
 34420  018E82  0060  F0AB  FFDF   	movff	btemp,indf2
 34421                           
 34422                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 34423                           ;stkvar	_p @ sp[(-18)+16]
 34424  018E88  50E1               	movf	fsr1l,w,c
 34425  018E8A  0FFE               	addlw	-2
 34426  018E8C  6ED9               	movwf	fsr2l,c
 34427  018E8E  50E2               	movf	fsr1h,w,c
 34428  018E90  6EDA               	movwf	fsr2h,c
 34429  018E92  0EFF               	movlw	255
 34430  018E94  22DA               	addwfc	fsr2h,f,c
 34431  018E96  06DE               	decf	postinc2,f,c
 34432  018E98  0E00               	movlw	0
 34433  018E9A  5ADD               	subwfb	postdec2,f,c
 34434                           
 34435                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 34436                           ;stkvar	_w @ sp[(-18)+14]
 34437  018E9C  50E1               	movf	fsr1l,w,c
 34438  018E9E  0FFC               	addlw	-4
 34439  018EA0  6ED9               	movwf	fsr2l,c
 34440  018EA2  50E2               	movf	fsr1h,w,c
 34441  018EA4  6EDA               	movwf	fsr2h,c
 34442  018EA6  0EFF               	movlw	255
 34443  018EA8  22DA               	addwfc	fsr2h,f,c
 34444  018EAA  06DE               	decf	postinc2,f,c
 34445  018EAC  0E00               	movlw	0
 34446  018EAE  5ADD               	subwfb	postdec2,f,c
 34447                           
 34448                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 34449  018EB0  0E0A               	movlw	10
 34450  018EB2  6EE6               	movwf	postinc1,c
 34451  018EB4  0E00               	movlw	0
 34452  018EB6  6EE6               	movwf	postinc1,c
 34453  018EB8  0E00               	movlw	0
 34454  018EBA  6EE6               	movwf	postinc1,c
 34455  018EBC  0E00               	movlw	0
 34456  018EBE  6EE6               	movwf	postinc1,c
 34457  018EC0  0E00               	movlw	0
 34458  018EC2  6EE6               	movwf	postinc1,c
 34459  018EC4  0E00               	movlw	0
 34460  018EC6  6EE6               	movwf	postinc1,c
 34461  018EC8  0E00               	movlw	0
 34462  018ECA  6EE6               	movwf	postinc1,c
 34463  018ECC  0E00               	movlw	0
 34464  018ECE  6EE6               	movwf	postinc1,c
 34465                           
 34466                           ;stkvar	_n @ sp[(-26)+2]
 34467  018ED0  50E1               	movf	fsr1l,w,c
 34468  018ED2  0FE8               	addlw	-24
 34469  018ED4  6ED9               	movwf	fsr2l,c
 34470  018ED6  50E2               	movf	fsr1h,w,c
 34471  018ED8  6EDA               	movwf	fsr2h,c
 34472  018EDA  0EFF               	movlw	255
 34473  018EDC  22DA               	addwfc	fsr2h,f,c
 34474  018EDE  006F FF7B FFE6     	movff	postinc2,postinc1
 34475  018EE4  006F FF7B FFE6     	movff	postinc2,postinc1
 34476  018EEA  006F FF7B FFE6     	movff	postinc2,postinc1
 34477  018EF0  006F FF7B FFE6     	movff	postinc2,postinc1
 34478  018EF6  006F FF7B FFE6     	movff	postinc2,postinc1
 34479  018EFC  006F FF7B FFE6     	movff	postinc2,postinc1
 34480  018F02  006F FF7B FFE6     	movff	postinc2,postinc1
 34481  018F08  006F FF7B FFE6     	movff	postinc2,postinc1
 34482  018F0E  EC3C  F0E1         	call	___aodiv	;wreg free
 34483  018F12  52E5               	movf	postdec1,f,c
 34484  018F14  006F FF9C  F041    	movff	indf1,btemp+23
 34485  018F1A  52E5               	movf	postdec1,f,c
 34486  018F1C  006F FF9C  F040    	movff	indf1,btemp+22
 34487  018F22  52E5               	movf	postdec1,f,c
 34488  018F24  006F FF9C  F03F    	movff	indf1,btemp+21
 34489  018F2A  52E5               	movf	postdec1,f,c
 34490  018F2C  006F FF9C  F03E    	movff	indf1,btemp+20
 34491  018F32  52E5               	movf	postdec1,f,c
 34492  018F34  006F FF9C  F03D    	movff	indf1,btemp+19
 34493  018F3A  52E5               	movf	postdec1,f,c
 34494  018F3C  006F FF9C  F03C    	movff	indf1,btemp+18
 34495  018F42  52E5               	movf	postdec1,f,c
 34496  018F44  006F FF9C  F03B    	movff	indf1,btemp+17
 34497  018F4A  52E5               	movf	postdec1,f,c
 34498  018F4C  006F FF9C  F03A    	movff	indf1,btemp+16
 34499  018F52  0EF8               	movlw	248
 34500  018F54  26E1               	addwf	fsr1l,f,c
 34501  018F56  0EFF               	movlw	255
 34502  018F58  22E2               	addwfc	fsr1h,f,c
 34503                           
 34504                           ;stkvar	_n @ sp[(-18)+2]
 34505  018F5A  0EF0               	movlw	-16
 34506  018F5C  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 34507  018F62  0EF1               	movlw	-15
 34508  018F64  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 34509  018F6A  0EF2               	movlw	-14
 34510  018F6C  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 34511  018F72  0EF3               	movlw	-13
 34512  018F74  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 34513  018F7A  0EF4               	movlw	-12
 34514  018F7C  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 34515  018F82  0EF5               	movlw	-11
 34516  018F84  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 34517  018F8A  0EF6               	movlw	-10
 34518  018F8C  0060  F103  FFE3   	movff	btemp+22,plusw1
 34519  018F92  0EF7               	movlw	-9
 34520  018F94  0060  F107  FFE3   	movff	btemp+23,plusw1
 34521  018F9A                     l15628:
 34522                           
 34523                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 34524                           ;stkvar	_i @ sp[(-18)+10]
 34525  018F9A  0EF9               	movlw	-7
 34526  018F9C  BEE3               	btfsc	plusw1,7,c
 34527  018F9E  D036               	goto	u14710
 34528  018FA0  0EF9               	movlw	-7
 34529  018FA2  50E3               	movf	plusw1,w,c
 34530  018FA4  E104               	bnz	u14670
 34531  018FA6  0EF8               	movlw	-8
 34532  018FA8  04E3               	decf	plusw1,w,c
 34533  018FAA  A0D8               	btfss	status,0,c
 34534  018FAC  D02F               	goto	u14710
 34535  018FAE                     u14670:
 34536                           
 34537                           ;stkvar	_n @ sp[(-18)+2]
 34538  018FAE  0EF0               	movlw	-16
 34539  018FB0  50E3               	movf	plusw1,w,c
 34540  018FB2  E115               	bnz	u14681
 34541  018FB4  0EF1               	movlw	-15
 34542  018FB6  50E3               	movf	plusw1,w,c
 34543  018FB8  E112               	bnz	u14681
 34544  018FBA  0EF2               	movlw	-14
 34545  018FBC  50E3               	movf	plusw1,w,c
 34546  018FBE  E10F               	bnz	u14681
 34547  018FC0  0EF3               	movlw	-13
 34548  018FC2  50E3               	movf	plusw1,w,c
 34549  018FC4  E10C               	bnz	u14681
 34550  018FC6  0EF4               	movlw	-12
 34551  018FC8  50E3               	movf	plusw1,w,c
 34552  018FCA  E109               	bnz	u14681
 34553  018FCC  0EF5               	movlw	-11
 34554  018FCE  50E3               	movf	plusw1,w,c
 34555  018FD0  E106               	bnz	u14681
 34556  018FD2  0EF6               	movlw	-10
 34557  018FD4  50E3               	movf	plusw1,w,c
 34558  018FD6  E103               	bnz	u14681
 34559  018FD8  0EF7               	movlw	-9
 34560  018FDA  50E3               	movf	plusw1,w,c
 34561  018FDC  A4D8               	btfss	status,2,c
 34562  018FDE                     u14681:
 34563  018FDE  D6D4               	goto	l15618
 34564                           
 34565                           ;stkvar	_p @ sp[(-18)+16]
 34566  018FE0  0EFF               	movlw	-1
 34567  018FE2  BEE3               	btfsc	plusw1,7,c
 34568  018FE4  D007               	goto	u14690
 34569  018FE6  0EFF               	movlw	-1
 34570  018FE8  50E3               	movf	plusw1,w,c
 34571  018FEA  E103               	bnz	u14691
 34572  018FEC  0EFE               	movlw	-2
 34573  018FEE  04E3               	decf	plusw1,w,c
 34574  018FF0  B0D8               	btfsc	status,0,c
 34575  018FF2                     u14691:
 34576  018FF2  D6CA               	goto	l15618
 34577  018FF4                     u14690:
 34578                           
 34579                           ;stkvar	_w @ sp[(-18)+14]
 34580  018FF4  0EFD               	movlw	-3
 34581  018FF6  BEE3               	btfsc	plusw1,7,c
 34582  018FF8  D009               	goto	u14710
 34583  018FFA  0EFD               	movlw	-3
 34584  018FFC  50E3               	movf	plusw1,w,c
 34585  018FFE  E104               	bnz	u14700
 34586  019000  0EFC               	movlw	-4
 34587  019002  04E3               	decf	plusw1,w,c
 34588  019004  A0D8               	btfss	status,0,c
 34589  019006  D002               	goto	u14710
 34590  019008                     u14700:
 34591  019008  B24E               	btfsc	_flags^0,1,c
 34592  01900A  D6BE               	goto	l15618
 34593  01900C                     u14710:
 34594                           
 34595                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 34596                           ;stkvar	_s @ sp[(-18)+12]
 34597  01900C  0EFA               	movlw	-6
 34598  01900E  006F FF8C  F02A    	movff	plusw1,btemp
 34599  019014  0EFB               	movlw	-5
 34600  019016  50E3               	movf	plusw1,w,c
 34601  019018  102A               	iorwf	btemp^0,w,c
 34602  01901A  A4D8               	btfss	status,2,c
 34603  01901C  D002               	goto	u14730
 34604  01901E  A44E               	btfss	_flags^0,2,c
 34605  019020  D033               	goto	l15652
 34606  019022                     u14730:
 34607                           
 34608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 34609                           ;stkvar	_i @ sp[(-18)+10]
 34610  019022  50E1               	movf	fsr1l,w,c
 34611  019024  0FF8               	addlw	-8
 34612  019026  6ED9               	movwf	fsr2l,c
 34613  019028  50E2               	movf	fsr1h,w,c
 34614  01902A  6EDA               	movwf	fsr2h,c
 34615  01902C  0EFF               	movlw	255
 34616  01902E  22DA               	addwfc	fsr2h,f,c
 34617  019030  06DE               	decf	postinc2,f,c
 34618  019032  0E00               	movlw	0
 34619  019034  5ADD               	subwfb	postdec2,f,c
 34620                           
 34621                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 34622                           ;stkvar	_s @ sp[(-18)+12]
 34623  019036  0EFA               	movlw	-6
 34624  019038  006F FF8C  F02A    	movff	plusw1,btemp
 34625  01903E  0EFB               	movlw	-5
 34626  019040  50E3               	movf	plusw1,w,c
 34627  019042  102A               	iorwf	btemp^0,w,c
 34628  019044  A4D8               	btfss	status,2,c
 34629  019046  D002               	goto	l15648
 34630  019048  0E2B               	movlw	43
 34631  01904A  D001               	goto	L39
 34632  01904C                     l15648:
 34633  01904C  0E2D               	movlw	45
 34634  01904E                     L39:
 34635  01904E  6E34               	movwf	(btemp+10)^0,c
 34636  019050  0E00               	movlw	0
 34637  019052  6E35               	movwf	(btemp+11)^0,c
 34638                           
 34639                           ;stkvar	_dtoa$6591 @ sp[(-18)+0]
 34640  019054  0EEE               	movlw	-18
 34641  019056  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 34642  01905C  0EEF               	movlw	-17
 34643  01905E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 34644                           
 34645                           ;stkvar	_dtoa$6591 @ sp[(-18)+0]
 34646                           ;stkvar	_i @ sp[(-18)+10]
 34647  019064  0EF8               	movlw	-8
 34648  019066  006F FF8C  F034    	movff	plusw1,btemp+10
 34649  01906C  0EF9               	movlw	-7
 34650  01906E  006F FF8C  F035    	movff	plusw1,btemp+11
 34651  019074  0E54               	movlw	low _dbuf
 34652  019076  2434               	addwf	(btemp+10)^0,w,c
 34653  019078  6ED9               	movwf	fsr2l,c
 34654  01907A  0E03               	movlw	high _dbuf
 34655  01907C  2035               	addwfc	(btemp+11)^0,w,c
 34656  01907E  6EDA               	movwf	fsr2h,c
 34657  019080  0EEE               	movlw	-18
 34658  019082  006F FF8F FFDF     	movff	plusw1,indf2
 34659  019088                     l15652:
 34660                           
 34661                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 34662                           ;stkvar	_w @ sp[(-18)+14]
 34663  019088  0EFC               	movlw	-4
 34664  01908A  006F FF8F FFE6     	movff	plusw1,postinc1
 34665  019090  006F FF8F FFE6     	movff	plusw1,postinc1
 34666                           
 34667                           ;stkvar	_i @ sp[(-20)+10]
 34668  019096  0E54               	movlw	low _dbuf
 34669  019098  6E34               	movwf	(btemp+10)^0,c
 34670  01909A  0E03               	movlw	high _dbuf
 34671  01909C  6E35               	movwf	(btemp+11)^0,c
 34672  01909E  0EF6               	movlw	-10
 34673  0190A0  50E3               	movf	plusw1,w,c
 34674  0190A2  2634               	addwf	(btemp+10)^0,f,c
 34675  0190A4  0EF7               	movlw	-9
 34676  0190A6  50E3               	movf	plusw1,w,c
 34677  0190A8  2235               	addwfc	(btemp+11)^0,f,c
 34678  0190AA  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 34679  0190B0  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 34680                           
 34681                           ;stkvar	_fp @ sp[(-22)+-2]
 34682  0190B6  0EE8               	movlw	-24
 34683  0190B8  006F FF8F FFE6     	movff	plusw1,postinc1
 34684  0190BE  006F FF8F FFE6     	movff	plusw1,postinc1
 34685  0190C4  EC1B  F0FD         	call	_pad	;wreg free
 34686                           
 34687                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 34688  0190C8  0EE4               	movlw	228
 34689  0190CA  26E1               	addwf	fsr1l,f,c
 34690  0190CC  0EFF               	movlw	255
 34691  0190CE  22E2               	addwfc	fsr1h,f,c
 34692  0190D0  0012               	return		;funcret
 34693  0190D2                     __end_of_dtoa:
 34694                           	opt callstack 0
 34695                           
 34696 ;; *************** function _abs *****************
 34697 ;; Defined at:
 34698 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 34699 ;; Parameters:    Size  Location     Type
 34700 ;;  a               2  [STACK] int 
 34701 ;; Auto vars:     Size  Location     Type
 34702 ;;		None
 34703 ;; Return value:  Size  Location     Type
 34704 ;;                  2  [STACK] int 
 34705 ;; Registers used:
 34706 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 34707 ;; Tracked objects:
 34708 ;;		On entry : 0/3
 34709 ;;		On exit  : 0/0
 34710 ;;		Unchanged: 0/0
 34711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34716 ;;Total ram usage:        0 bytes
 34717 ;; Hardware stack levels used:    1
 34718 ;; Hardware stack levels required when called:   15
 34719 ;; This function calls:
 34720 ;;		Nothing
 34721 ;; This function is called by:
 34722 ;;		_dtoa
 34723 ;; This function uses a reentrant model
 34724 ;;
 34725                           
 34726                           	psect	text115
 34727  001E0E                     __ptext115:
 34728                           	opt callstack 0
 34729  001E0E                     _abs:
 34730                           	opt callstack 0
 34731                           
 34732                           ;stkvar	_a @ sp[(0)+-2]
 34733                           
 34734                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34735                           ;incstack = 0
 34736 ;; hardware stack exceeded
 34737  001E0E  0EFF               	movlw	-1
 34738  001E10  BEE3               	btfsc	plusw1,7,c
 34739  001E12  D007               	goto	u7760
 34740  001E14  0EFF               	movlw	-1
 34741  001E16  50E3               	movf	plusw1,w,c
 34742  001E18  E112               	bnz	l10108
 34743  001E1A  0EFE               	movlw	-2
 34744  001E1C  04E3               	decf	plusw1,w,c
 34745  001E1E  B0D8               	btfsc	status,0,c
 34746  001E20  D00E               	goto	l10108
 34747  001E22                     u7760:
 34748                           
 34749                           ;stkvar	_a @ sp[(0)+-2]
 34750  001E22  0EFE               	movlw	-2
 34751  001E24  006F FF8C  F02A    	movff	plusw1,btemp
 34752  001E2A  1E2A               	comf	btemp^0,f,c
 34753  001E2C  0EFF               	movlw	-1
 34754  001E2E  006F FF8C  F02B    	movff	plusw1,btemp+1
 34755  001E34  1E2B               	comf	(btemp+1)^0,f,c
 34756  001E36  2A2A               	incf	btemp^0,f,c
 34757  001E38  B4D8               	btfsc	status,2,c
 34758  001E3A  2A2B               	incf	(btemp+1)^0,f,c
 34759  001E3C  D008               	goto	l3417
 34760  001E3E                     l10108:
 34761                           
 34762                           ;stkvar	_a @ sp[(0)+-2]
 34763  001E3E  0EFE               	movlw	-2
 34764  001E40  006F FF8C  F02A    	movff	plusw1,btemp
 34765  001E46  0EFF               	movlw	-1
 34766  001E48  006F FF8C  F02B    	movff	plusw1,btemp+1
 34767  001E4E                     l3417:
 34768                           
 34769                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 34770  001E4E  52E5               	movf	postdec1,f,c
 34771  001E50  52E5               	movf	postdec1,f,c
 34772  001E52  0012               	return		;funcret
 34773  001E54                     __end_of_abs:
 34774                           	opt callstack 0
 34775                           
 34776 ;; *************** function ___aomod *****************
 34777 ;; Defined at:
 34778 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 34779 ;; Parameters:    Size  Location     Type
 34780 ;;  dividend        8  [STACK] long long 
 34781 ;;  divisor         8  [STACK] long long 
 34782 ;; Auto vars:     Size  Location     Type
 34783 ;;  sign            1  [STACK] unsigned char 
 34784 ;;  counter         1  [STACK] unsigned char 
 34785 ;; Return value:  Size  Location     Type
 34786 ;;                  8  [STACK] long long 
 34787 ;; Registers used:
 34788 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 34789 ;; Tracked objects:
 34790 ;;		On entry : 0/0
 34791 ;;		On exit  : 0/0
 34792 ;;		Unchanged: 0/0
 34793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34798 ;;Total ram usage:        0 bytes
 34799 ;; Hardware stack levels used:    1
 34800 ;; Hardware stack levels required when called:   15
 34801 ;; This function calls:
 34802 ;;		Nothing
 34803 ;; This function is called by:
 34804 ;;		_dtoa
 34805 ;;		___secs_to_tm
 34806 ;;		_rule_to_secs
 34807 ;;		___year_to_secs
 34808 ;; This function uses a reentrant model
 34809 ;;
 34810                           
 34811                           	psect	text116
 34812  01CBF6                     __ptext116:
 34813                           	opt callstack 0
 34814  01CBF6                     ___aomod:
 34815                           	opt callstack 0
 34816                           
 34817                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 34818  01CBF6  52E6               	movf	postinc1,f,c
 34819  01CBF8  52E6               	movf	postinc1,f,c
 34820                           
 34821                           ;stkvar	_sign @ sp[(-2)+0]
 34822                           
 34823                           ;incstack = 0
 34824 ;; hardware stack exceeded
 34825  01CBFA  0EFE               	movlw	-2
 34826  01CBFC  6AE3               	clrf	plusw1,c
 34827                           
 34828                           ;stkvar	_dividend @ sp[(-2)+-8]
 34829  01CBFE  0EFD               	movlw	-3
 34830  01CC00  AEE3               	btfss	plusw1,7,c
 34831  01CC02  D028               	goto	l10292
 34832                           
 34833                           ;stkvar	_dividend @ sp[(-2)+-8]
 34834                           ;stkvar	_dividend @ sp[(-2)+-8]
 34835  01CC04  0EF6               	movlw	-10
 34836  01CC06  6CE3               	negf	plusw1,c
 34837  01CC08  0EF7               	movlw	-9
 34838  01CC0A  1EE3               	comf	plusw1,f,c
 34839  01CC0C  0EF8               	movlw	-8
 34840  01CC0E  1EE3               	comf	plusw1,f,c
 34841  01CC10  0EF9               	movlw	-7
 34842  01CC12  1EE3               	comf	plusw1,f,c
 34843  01CC14  0EFA               	movlw	-6
 34844  01CC16  1EE3               	comf	plusw1,f,c
 34845  01CC18  0EFB               	movlw	-5
 34846  01CC1A  1EE3               	comf	plusw1,f,c
 34847  01CC1C  0EFC               	movlw	-4
 34848  01CC1E  1EE3               	comf	plusw1,f,c
 34849  01CC20  0EFD               	movlw	-3
 34850  01CC22  1EE3               	comf	plusw1,f,c
 34851  01CC24  E314               	bnc	u8250
 34852  01CC26  0EF7               	movlw	-9
 34853  01CC28  2AE3               	incf	plusw1,f,c
 34854  01CC2A  E311               	bnc	u8250
 34855  01CC2C  0EF8               	movlw	-8
 34856  01CC2E  2AE3               	incf	plusw1,f,c
 34857  01CC30  E30E               	bnc	u8250
 34858  01CC32  0EF9               	movlw	-7
 34859  01CC34  2AE3               	incf	plusw1,f,c
 34860  01CC36  E30B               	bnc	u8250
 34861  01CC38  0EFA               	movlw	-6
 34862  01CC3A  2AE3               	incf	plusw1,f,c
 34863  01CC3C  E308               	bnc	u8250
 34864  01CC3E  0EFB               	movlw	-5
 34865  01CC40  2AE3               	incf	plusw1,f,c
 34866  01CC42  E305               	bnc	u8250
 34867  01CC44  0EFC               	movlw	-4
 34868  01CC46  2AE3               	incf	plusw1,f,c
 34869  01CC48  E302               	bnc	u8250
 34870  01CC4A  0EFD               	movlw	-3
 34871  01CC4C  2AE3               	incf	plusw1,f,c
 34872  01CC4E                     u8250:
 34873                           
 34874                           ;stkvar	_sign @ sp[(-2)+0]
 34875  01CC4E  0EFE               	movlw	-2
 34876  01CC50  6AE3               	clrf	plusw1,c
 34877  01CC52  2AE3               	incf	plusw1,f,c
 34878  01CC54                     l10292:
 34879                           
 34880                           ;stkvar	_divisor @ sp[(-2)+-16]
 34881  01CC54  0EF5               	movlw	-11
 34882  01CC56  AEE3               	btfss	plusw1,7,c
 34883  01CC58  D025               	goto	u8270
 34884                           
 34885                           ;stkvar	_divisor @ sp[(-2)+-16]
 34886                           ;stkvar	_divisor @ sp[(-2)+-16]
 34887  01CC5A  0EEE               	movlw	-18
 34888  01CC5C  6CE3               	negf	plusw1,c
 34889  01CC5E  0EEF               	movlw	-17
 34890  01CC60  1EE3               	comf	plusw1,f,c
 34891  01CC62  0EF0               	movlw	-16
 34892  01CC64  1EE3               	comf	plusw1,f,c
 34893  01CC66  0EF1               	movlw	-15
 34894  01CC68  1EE3               	comf	plusw1,f,c
 34895  01CC6A  0EF2               	movlw	-14
 34896  01CC6C  1EE3               	comf	plusw1,f,c
 34897  01CC6E  0EF3               	movlw	-13
 34898  01CC70  1EE3               	comf	plusw1,f,c
 34899  01CC72  0EF4               	movlw	-12
 34900  01CC74  1EE3               	comf	plusw1,f,c
 34901  01CC76  0EF5               	movlw	-11
 34902  01CC78  1EE3               	comf	plusw1,f,c
 34903  01CC7A  E314               	bnc	u8270
 34904  01CC7C  0EEF               	movlw	-17
 34905  01CC7E  2AE3               	incf	plusw1,f,c
 34906  01CC80  E311               	bnc	u8270
 34907  01CC82  0EF0               	movlw	-16
 34908  01CC84  2AE3               	incf	plusw1,f,c
 34909  01CC86  E30E               	bnc	u8270
 34910  01CC88  0EF1               	movlw	-15
 34911  01CC8A  2AE3               	incf	plusw1,f,c
 34912  01CC8C  E30B               	bnc	u8270
 34913  01CC8E  0EF2               	movlw	-14
 34914  01CC90  2AE3               	incf	plusw1,f,c
 34915  01CC92  E308               	bnc	u8270
 34916  01CC94  0EF3               	movlw	-13
 34917  01CC96  2AE3               	incf	plusw1,f,c
 34918  01CC98  E305               	bnc	u8270
 34919  01CC9A  0EF4               	movlw	-12
 34920  01CC9C  2AE3               	incf	plusw1,f,c
 34921  01CC9E  E302               	bnc	u8270
 34922  01CCA0  0EF5               	movlw	-11
 34923  01CCA2  2AE3               	incf	plusw1,f,c
 34924  01CCA4                     u8270:
 34925                           
 34926                           ;stkvar	_divisor @ sp[(-2)+-16]
 34927  01CCA4  0EEE               	movlw	-18
 34928  01CCA6  50E3               	movf	plusw1,w,c
 34929  01CCA8  E116               	bnz	u8280
 34930  01CCAA  0EEF               	movlw	-17
 34931  01CCAC  50E3               	movf	plusw1,w,c
 34932  01CCAE  E113               	bnz	u8280
 34933  01CCB0  0EF0               	movlw	-16
 34934  01CCB2  50E3               	movf	plusw1,w,c
 34935  01CCB4  E110               	bnz	u8280
 34936  01CCB6  0EF1               	movlw	-15
 34937  01CCB8  50E3               	movf	plusw1,w,c
 34938  01CCBA  E10D               	bnz	u8280
 34939  01CCBC  0EF2               	movlw	-14
 34940  01CCBE  50E3               	movf	plusw1,w,c
 34941  01CCC0  E10A               	bnz	u8280
 34942  01CCC2  0EF3               	movlw	-13
 34943  01CCC4  50E3               	movf	plusw1,w,c
 34944  01CCC6  E107               	bnz	u8280
 34945  01CCC8  0EF4               	movlw	-12
 34946  01CCCA  50E3               	movf	plusw1,w,c
 34947  01CCCC  E104               	bnz	u8280
 34948  01CCCE  0EF5               	movlw	-11
 34949  01CCD0  50E3               	movf	plusw1,w,c
 34950  01CCD2  B4D8               	btfsc	status,2,c
 34951  01CCD4  D075               	goto	u8310
 34952  01CCD6                     u8280:
 34953                           
 34954                           ;stkvar	_counter @ sp[(-2)+1]
 34955  01CCD6  0EFF               	movlw	-1
 34956  01CCD8  6AE3               	clrf	plusw1,c
 34957  01CCDA  D012               	goto	L40
 34958  01CCDC                     l10300:
 34959                           
 34960                           ;stkvar	_divisor @ sp[(-2)+-16]
 34961  01CCDC  90D8               	bcf	status,0,c
 34962  01CCDE  0EEE               	movlw	-18
 34963  01CCE0  36E3               	rlcf	plusw1,f,c
 34964  01CCE2  0EEF               	movlw	-17
 34965  01CCE4  36E3               	rlcf	plusw1,f,c
 34966  01CCE6  0EF0               	movlw	-16
 34967  01CCE8  36E3               	rlcf	plusw1,f,c
 34968  01CCEA  0EF1               	movlw	-15
 34969  01CCEC  36E3               	rlcf	plusw1,f,c
 34970  01CCEE  0EF2               	movlw	-14
 34971  01CCF0  36E3               	rlcf	plusw1,f,c
 34972  01CCF2  0EF3               	movlw	-13
 34973  01CCF4  36E3               	rlcf	plusw1,f,c
 34974  01CCF6  0EF4               	movlw	-12
 34975  01CCF8  36E3               	rlcf	plusw1,f,c
 34976  01CCFA  0EF5               	movlw	-11
 34977  01CCFC  36E3               	rlcf	plusw1,f,c
 34978                           
 34979                           ;stkvar	_counter @ sp[(-2)+1]
 34980  01CCFE  0EFF               	movlw	-1
 34981  01CD00                     L40:
 34982  01CD00  2AE3               	incf	plusw1,f,c
 34983                           
 34984                           ;stkvar	_divisor @ sp[(-2)+-16]
 34985  01CD02  0EF5               	movlw	-11
 34986  01CD04  AEE3               	btfss	plusw1,7,c
 34987  01CD06  D7EA               	goto	l10300
 34988  01CD08                     u8290:
 34989                           
 34990                           ;stkvar	_divisor @ sp[(-2)+-16]
 34991                           ;stkvar	_dividend @ sp[(-2)+-8]
 34992  01CD08  50E1               	movf	fsr1l,w,c
 34993  01CD0A  0FF6               	addlw	-10
 34994  01CD0C  6ED9               	movwf	fsr2l,c
 34995  01CD0E  50E2               	movf	fsr1h,w,c
 34996  01CD10  6EDA               	movwf	fsr2h,c
 34997  01CD12  0EFF               	movlw	255
 34998  01CD14  22DA               	addwfc	fsr2h,f,c
 34999  01CD16  0EEE               	movlw	-18
 35000  01CD18  50E3               	movf	plusw1,w,c
 35001  01CD1A  5CDE               	subwf	postinc2,w,c
 35002  01CD1C  0EEF               	movlw	-17
 35003  01CD1E  50E3               	movf	plusw1,w,c
 35004  01CD20  58DE               	subwfb	postinc2,w,c
 35005  01CD22  0EF0               	movlw	-16
 35006  01CD24  50E3               	movf	plusw1,w,c
 35007  01CD26  58DE               	subwfb	postinc2,w,c
 35008  01CD28  0EF1               	movlw	-15
 35009  01CD2A  50E3               	movf	plusw1,w,c
 35010  01CD2C  58DE               	subwfb	postinc2,w,c
 35011  01CD2E  0EF2               	movlw	-14
 35012  01CD30  50E3               	movf	plusw1,w,c
 35013  01CD32  58DE               	subwfb	postinc2,w,c
 35014  01CD34  0EF3               	movlw	-13
 35015  01CD36  50E3               	movf	plusw1,w,c
 35016  01CD38  58DE               	subwfb	postinc2,w,c
 35017  01CD3A  0EF4               	movlw	-12
 35018  01CD3C  50E3               	movf	plusw1,w,c
 35019  01CD3E  58DE               	subwfb	postinc2,w,c
 35020  01CD40  0EF5               	movlw	-11
 35021  01CD42  50E3               	movf	plusw1,w,c
 35022  01CD44  58DE               	subwfb	postinc2,w,c
 35023  01CD46  A0D8               	btfss	status,0,c
 35024  01CD48  D01F               	goto	l10308
 35025                           
 35026                           ;stkvar	_divisor @ sp[(-2)+-16]
 35027                           ;stkvar	_dividend @ sp[(-2)+-8]
 35028  01CD4A  50E1               	movf	fsr1l,w,c
 35029  01CD4C  0FF6               	addlw	-10
 35030  01CD4E  6ED9               	movwf	fsr2l,c
 35031  01CD50  50E2               	movf	fsr1h,w,c
 35032  01CD52  6EDA               	movwf	fsr2h,c
 35033  01CD54  0EFF               	movlw	255
 35034  01CD56  22DA               	addwfc	fsr2h,f,c
 35035  01CD58  0EEE               	movlw	-18
 35036  01CD5A  50E3               	movf	plusw1,w,c
 35037  01CD5C  5EDE               	subwf	postinc2,f,c
 35038  01CD5E  0EEF               	movlw	-17
 35039  01CD60  50E3               	movf	plusw1,w,c
 35040  01CD62  5ADE               	subwfb	postinc2,f,c
 35041  01CD64  0EF0               	movlw	-16
 35042  01CD66  50E3               	movf	plusw1,w,c
 35043  01CD68  5ADE               	subwfb	postinc2,f,c
 35044  01CD6A  0EF1               	movlw	-15
 35045  01CD6C  50E3               	movf	plusw1,w,c
 35046  01CD6E  5ADE               	subwfb	postinc2,f,c
 35047  01CD70  0EF2               	movlw	-14
 35048  01CD72  50E3               	movf	plusw1,w,c
 35049  01CD74  5ADE               	subwfb	postinc2,f,c
 35050  01CD76  0EF3               	movlw	-13
 35051  01CD78  50E3               	movf	plusw1,w,c
 35052  01CD7A  5ADE               	subwfb	postinc2,f,c
 35053  01CD7C  0EF4               	movlw	-12
 35054  01CD7E  50E3               	movf	plusw1,w,c
 35055  01CD80  5ADE               	subwfb	postinc2,f,c
 35056  01CD82  0EF5               	movlw	-11
 35057  01CD84  50E3               	movf	plusw1,w,c
 35058  01CD86  5ADE               	subwfb	postinc2,f,c
 35059  01CD88                     l10308:
 35060                           
 35061                           ;stkvar	_divisor @ sp[(-2)+-16]
 35062  01CD88  90D8               	bcf	status,0,c
 35063  01CD8A  0EF5               	movlw	-11
 35064  01CD8C  32E3               	rrcf	plusw1,f,c
 35065  01CD8E  0EF4               	movlw	-12
 35066  01CD90  32E3               	rrcf	plusw1,f,c
 35067  01CD92  0EF3               	movlw	-13
 35068  01CD94  32E3               	rrcf	plusw1,f,c
 35069  01CD96  0EF2               	movlw	-14
 35070  01CD98  32E3               	rrcf	plusw1,f,c
 35071  01CD9A  0EF1               	movlw	-15
 35072  01CD9C  32E3               	rrcf	plusw1,f,c
 35073  01CD9E  0EF0               	movlw	-16
 35074  01CDA0  32E3               	rrcf	plusw1,f,c
 35075  01CDA2  0EEF               	movlw	-17
 35076  01CDA4  32E3               	rrcf	plusw1,f,c
 35077  01CDA6  0EEE               	movlw	-18
 35078  01CDA8  32E3               	rrcf	plusw1,f,c
 35079                           
 35080                           ;stkvar	_counter @ sp[(-2)+1]
 35081  01CDAA  0EFF               	movlw	-1
 35082  01CDAC  50E3               	movf	plusw1,w,c
 35083  01CDAE  6E2A               	movwf	btemp^0,c
 35084  01CDB0  0E01               	movlw	1
 35085  01CDB2  5E2A               	subwf	btemp^0,f,c
 35086  01CDB4  0EFF               	movlw	-1
 35087  01CDB6  0060  F0AB  FFE3   	movff	btemp,plusw1
 35088  01CDBC  A4D8               	btfss	status,2,c
 35089  01CDBE  D7A4               	goto	u8290
 35090  01CDC0                     u8310:
 35091                           
 35092                           ;stkvar	_sign @ sp[(-2)+0]
 35093  01CDC0  0EFE               	movlw	-2
 35094  01CDC2  50E3               	movf	plusw1,w,c
 35095  01CDC4  B4D8               	btfsc	status,2,c
 35096  01CDC6  D025               	goto	u8330
 35097                           
 35098                           ;stkvar	_dividend @ sp[(-2)+-8]
 35099                           ;stkvar	_dividend @ sp[(-2)+-8]
 35100  01CDC8  0EF6               	movlw	-10
 35101  01CDCA  6CE3               	negf	plusw1,c
 35102  01CDCC  0EF7               	movlw	-9
 35103  01CDCE  1EE3               	comf	plusw1,f,c
 35104  01CDD0  0EF8               	movlw	-8
 35105  01CDD2  1EE3               	comf	plusw1,f,c
 35106  01CDD4  0EF9               	movlw	-7
 35107  01CDD6  1EE3               	comf	plusw1,f,c
 35108  01CDD8  0EFA               	movlw	-6
 35109  01CDDA  1EE3               	comf	plusw1,f,c
 35110  01CDDC  0EFB               	movlw	-5
 35111  01CDDE  1EE3               	comf	plusw1,f,c
 35112  01CDE0  0EFC               	movlw	-4
 35113  01CDE2  1EE3               	comf	plusw1,f,c
 35114  01CDE4  0EFD               	movlw	-3
 35115  01CDE6  1EE3               	comf	plusw1,f,c
 35116  01CDE8  E314               	bnc	u8330
 35117  01CDEA  0EF7               	movlw	-9
 35118  01CDEC  2AE3               	incf	plusw1,f,c
 35119  01CDEE  E311               	bnc	u8330
 35120  01CDF0  0EF8               	movlw	-8
 35121  01CDF2  2AE3               	incf	plusw1,f,c
 35122  01CDF4  E30E               	bnc	u8330
 35123  01CDF6  0EF9               	movlw	-7
 35124  01CDF8  2AE3               	incf	plusw1,f,c
 35125  01CDFA  E30B               	bnc	u8330
 35126  01CDFC  0EFA               	movlw	-6
 35127  01CDFE  2AE3               	incf	plusw1,f,c
 35128  01CE00  E308               	bnc	u8330
 35129  01CE02  0EFB               	movlw	-5
 35130  01CE04  2AE3               	incf	plusw1,f,c
 35131  01CE06  E305               	bnc	u8330
 35132  01CE08  0EFC               	movlw	-4
 35133  01CE0A  2AE3               	incf	plusw1,f,c
 35134  01CE0C  E302               	bnc	u8330
 35135  01CE0E  0EFD               	movlw	-3
 35136  01CE10  2AE3               	incf	plusw1,f,c
 35137  01CE12                     u8330:
 35138                           
 35139                           ;stkvar	_dividend @ sp[(-2)+-8]
 35140  01CE12  0EF6               	movlw	246
 35141  01CE14  24E1               	addwf	fsr1l,w,c
 35142  01CE16  6ED9               	movwf	fsr2l,c
 35143  01CE18  0EFF               	movlw	255
 35144  01CE1A  20E2               	addwfc	fsr1h,w,c
 35145  01CE1C  6EDA               	movwf	fsr2h,c
 35146                           
 35147                           ;stkvar	?___aomod @ sp[(-2)+-8]
 35148  01CE1E  0E08               	movlw	8
 35149  01CE20  6E2A               	movwf	btemp^0,c
 35150  01CE22  0EF6               	movlw	-10
 35151  01CE24                     us834999:
 35152  01CE24  006F FF7B FFE3     	movff	postinc2,plusw1
 35153  01CE2A  28E8               	incf	wreg,w,c
 35154  01CE2C  2E2A               	decfsz	btemp^0,f,c
 35155  01CE2E  D7FA               	bra	us834999
 35156                           
 35157                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 35158  01CE30  52E5               	movf	postdec1,f,c
 35159  01CE32  52E5               	movf	postdec1,f,c
 35160  01CE34  0012               	return		;funcret
 35161  01CE36                     __end_of___aomod:
 35162                           	opt callstack 0
 35163                           
 35164 ;; *************** function ___aodiv *****************
 35165 ;; Defined at:
 35166 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 35167 ;; Parameters:    Size  Location     Type
 35168 ;;  dividend        8  [STACK] long long 
 35169 ;;  divisor         8  [STACK] long long 
 35170 ;; Auto vars:     Size  Location     Type
 35171 ;;  quotient        8  [STACK] long long 
 35172 ;;  sign            1  [STACK] unsigned char 
 35173 ;;  counter         1  [STACK] unsigned char 
 35174 ;; Return value:  Size  Location     Type
 35175 ;;                  8  [STACK] long long 
 35176 ;; Registers used:
 35177 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 35178 ;; Tracked objects:
 35179 ;;		On entry : 0/0
 35180 ;;		On exit  : 0/0
 35181 ;;		Unchanged: 0/0
 35182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35187 ;;Total ram usage:        0 bytes
 35188 ;; Hardware stack levels used:    1
 35189 ;; Hardware stack levels required when called:   15
 35190 ;; This function calls:
 35191 ;;		Nothing
 35192 ;; This function is called by:
 35193 ;;		_dtoa
 35194 ;;		___secs_to_tm
 35195 ;;		___secs_to_zone
 35196 ;;		___year_to_secs
 35197 ;; This function uses a reentrant model
 35198 ;;
 35199                           
 35200                           	psect	text117
 35201  01C278                     __ptext117:
 35202                           	opt callstack 0
 35203  01C278                     ___aodiv:
 35204                           	opt callstack 0
 35205                           
 35206                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 35207  01C278  0E0A               	movlw	10
 35208  01C27A  26E1               	addwf	fsr1l,f,c
 35209  01C27C  0E00               	movlw	0
 35210  01C27E  22E2               	addwfc	fsr1h,f,c
 35211                           
 35212                           ;stkvar	_sign @ sp[(-10)+8]
 35213                           
 35214                           ;incstack = 0
 35215 ;; hardware stack exceeded
 35216  01C280  0EFE               	movlw	-2
 35217  01C282  6AE3               	clrf	plusw1,c
 35218                           
 35219                           ;stkvar	_divisor @ sp[(-10)+-16]
 35220  01C284  0EED               	movlw	-19
 35221  01C286  AEE3               	btfss	plusw1,7,c
 35222  01C288  D028               	goto	l10248
 35223                           
 35224                           ;stkvar	_divisor @ sp[(-10)+-16]
 35225                           ;stkvar	_divisor @ sp[(-10)+-16]
 35226  01C28A  0EE6               	movlw	-26
 35227  01C28C  6CE3               	negf	plusw1,c
 35228  01C28E  0EE7               	movlw	-25
 35229  01C290  1EE3               	comf	plusw1,f,c
 35230  01C292  0EE8               	movlw	-24
 35231  01C294  1EE3               	comf	plusw1,f,c
 35232  01C296  0EE9               	movlw	-23
 35233  01C298  1EE3               	comf	plusw1,f,c
 35234  01C29A  0EEA               	movlw	-22
 35235  01C29C  1EE3               	comf	plusw1,f,c
 35236  01C29E  0EEB               	movlw	-21
 35237  01C2A0  1EE3               	comf	plusw1,f,c
 35238  01C2A2  0EEC               	movlw	-20
 35239  01C2A4  1EE3               	comf	plusw1,f,c
 35240  01C2A6  0EED               	movlw	-19
 35241  01C2A8  1EE3               	comf	plusw1,f,c
 35242  01C2AA  E314               	bnc	u8130
 35243  01C2AC  0EE7               	movlw	-25
 35244  01C2AE  2AE3               	incf	plusw1,f,c
 35245  01C2B0  E311               	bnc	u8130
 35246  01C2B2  0EE8               	movlw	-24
 35247  01C2B4  2AE3               	incf	plusw1,f,c
 35248  01C2B6  E30E               	bnc	u8130
 35249  01C2B8  0EE9               	movlw	-23
 35250  01C2BA  2AE3               	incf	plusw1,f,c
 35251  01C2BC  E30B               	bnc	u8130
 35252  01C2BE  0EEA               	movlw	-22
 35253  01C2C0  2AE3               	incf	plusw1,f,c
 35254  01C2C2  E308               	bnc	u8130
 35255  01C2C4  0EEB               	movlw	-21
 35256  01C2C6  2AE3               	incf	plusw1,f,c
 35257  01C2C8  E305               	bnc	u8130
 35258  01C2CA  0EEC               	movlw	-20
 35259  01C2CC  2AE3               	incf	plusw1,f,c
 35260  01C2CE  E302               	bnc	u8130
 35261  01C2D0  0EED               	movlw	-19
 35262  01C2D2  2AE3               	incf	plusw1,f,c
 35263  01C2D4                     u8130:
 35264                           
 35265                           ;stkvar	_sign @ sp[(-10)+8]
 35266  01C2D4  0EFE               	movlw	-2
 35267  01C2D6  6AE3               	clrf	plusw1,c
 35268  01C2D8  2AE3               	incf	plusw1,f,c
 35269  01C2DA                     l10248:
 35270                           
 35271                           ;stkvar	_dividend @ sp[(-10)+-8]
 35272  01C2DA  0EF5               	movlw	-11
 35273  01C2DC  AEE3               	btfss	plusw1,7,c
 35274  01C2DE  D027               	goto	l10254
 35275                           
 35276                           ;stkvar	_dividend @ sp[(-10)+-8]
 35277                           ;stkvar	_dividend @ sp[(-10)+-8]
 35278  01C2E0  0EEE               	movlw	-18
 35279  01C2E2  6CE3               	negf	plusw1,c
 35280  01C2E4  0EEF               	movlw	-17
 35281  01C2E6  1EE3               	comf	plusw1,f,c
 35282  01C2E8  0EF0               	movlw	-16
 35283  01C2EA  1EE3               	comf	plusw1,f,c
 35284  01C2EC  0EF1               	movlw	-15
 35285  01C2EE  1EE3               	comf	plusw1,f,c
 35286  01C2F0  0EF2               	movlw	-14
 35287  01C2F2  1EE3               	comf	plusw1,f,c
 35288  01C2F4  0EF3               	movlw	-13
 35289  01C2F6  1EE3               	comf	plusw1,f,c
 35290  01C2F8  0EF4               	movlw	-12
 35291  01C2FA  1EE3               	comf	plusw1,f,c
 35292  01C2FC  0EF5               	movlw	-11
 35293  01C2FE  1EE3               	comf	plusw1,f,c
 35294  01C300  E314               	bnc	u8150
 35295  01C302  0EEF               	movlw	-17
 35296  01C304  2AE3               	incf	plusw1,f,c
 35297  01C306  E311               	bnc	u8150
 35298  01C308  0EF0               	movlw	-16
 35299  01C30A  2AE3               	incf	plusw1,f,c
 35300  01C30C  E30E               	bnc	u8150
 35301  01C30E  0EF1               	movlw	-15
 35302  01C310  2AE3               	incf	plusw1,f,c
 35303  01C312  E30B               	bnc	u8150
 35304  01C314  0EF2               	movlw	-14
 35305  01C316  2AE3               	incf	plusw1,f,c
 35306  01C318  E308               	bnc	u8150
 35307  01C31A  0EF3               	movlw	-13
 35308  01C31C  2AE3               	incf	plusw1,f,c
 35309  01C31E  E305               	bnc	u8150
 35310  01C320  0EF4               	movlw	-12
 35311  01C322  2AE3               	incf	plusw1,f,c
 35312  01C324  E302               	bnc	u8150
 35313  01C326  0EF5               	movlw	-11
 35314  01C328  2AE3               	incf	plusw1,f,c
 35315  01C32A                     u8150:
 35316                           
 35317                           ;stkvar	_sign @ sp[(-10)+8]
 35318  01C32A  0EFE               	movlw	-2
 35319  01C32C  70E3               	btg	plusw1,0,c
 35320  01C32E                     l10254:
 35321                           
 35322                           ;stkvar	_quotient @ sp[(-10)+0]
 35323  01C32E  0E07               	movlw	7
 35324  01C330  6E2A               	movwf	btemp^0,c
 35325  01C332  0EF6               	movlw	-10
 35326  01C334                     u8161:
 35327  01C334  6AE3               	clrf	plusw1,c
 35328  01C336  2AE8               	incf	wreg,f,c
 35329  01C338  062A               	decf	btemp^0,f,c
 35330  01C33A  E2FC               	bc	u8161
 35331                           
 35332                           ;stkvar	_divisor @ sp[(-10)+-16]
 35333  01C33C  0EE6               	movlw	-26
 35334  01C33E  50E3               	movf	plusw1,w,c
 35335  01C340  E116               	bnz	u8170
 35336  01C342  0EE7               	movlw	-25
 35337  01C344  50E3               	movf	plusw1,w,c
 35338  01C346  E113               	bnz	u8170
 35339  01C348  0EE8               	movlw	-24
 35340  01C34A  50E3               	movf	plusw1,w,c
 35341  01C34C  E110               	bnz	u8170
 35342  01C34E  0EE9               	movlw	-23
 35343  01C350  50E3               	movf	plusw1,w,c
 35344  01C352  E10D               	bnz	u8170
 35345  01C354  0EEA               	movlw	-22
 35346  01C356  50E3               	movf	plusw1,w,c
 35347  01C358  E10A               	bnz	u8170
 35348  01C35A  0EEB               	movlw	-21
 35349  01C35C  50E3               	movf	plusw1,w,c
 35350  01C35E  E107               	bnz	u8170
 35351  01C360  0EEC               	movlw	-20
 35352  01C362  50E3               	movf	plusw1,w,c
 35353  01C364  E104               	bnz	u8170
 35354  01C366  0EED               	movlw	-19
 35355  01C368  50E3               	movf	plusw1,w,c
 35356  01C36A  B4D8               	btfsc	status,2,c
 35357  01C36C  D088               	goto	u8200
 35358  01C36E                     u8170:
 35359                           
 35360                           ;stkvar	_counter @ sp[(-10)+9]
 35361  01C36E  0EFF               	movlw	-1
 35362  01C370  6AE3               	clrf	plusw1,c
 35363  01C372  D012               	goto	L41
 35364  01C374                     l10260:
 35365                           
 35366                           ;stkvar	_divisor @ sp[(-10)+-16]
 35367  01C374  90D8               	bcf	status,0,c
 35368  01C376  0EE6               	movlw	-26
 35369  01C378  36E3               	rlcf	plusw1,f,c
 35370  01C37A  0EE7               	movlw	-25
 35371  01C37C  36E3               	rlcf	plusw1,f,c
 35372  01C37E  0EE8               	movlw	-24
 35373  01C380  36E3               	rlcf	plusw1,f,c
 35374  01C382  0EE9               	movlw	-23
 35375  01C384  36E3               	rlcf	plusw1,f,c
 35376  01C386  0EEA               	movlw	-22
 35377  01C388  36E3               	rlcf	plusw1,f,c
 35378  01C38A  0EEB               	movlw	-21
 35379  01C38C  36E3               	rlcf	plusw1,f,c
 35380  01C38E  0EEC               	movlw	-20
 35381  01C390  36E3               	rlcf	plusw1,f,c
 35382  01C392  0EED               	movlw	-19
 35383  01C394  36E3               	rlcf	plusw1,f,c
 35384                           
 35385                           ;stkvar	_counter @ sp[(-10)+9]
 35386  01C396  0EFF               	movlw	-1
 35387  01C398                     L41:
 35388  01C398  2AE3               	incf	plusw1,f,c
 35389                           
 35390                           ;stkvar	_divisor @ sp[(-10)+-16]
 35391  01C39A  0EED               	movlw	-19
 35392  01C39C  AEE3               	btfss	plusw1,7,c
 35393  01C39E  D7EA               	goto	l10260
 35394  01C3A0                     u8180:
 35395                           
 35396                           ;stkvar	_quotient @ sp[(-10)+0]
 35397  01C3A0  90D8               	bcf	status,0,c
 35398  01C3A2  0EF6               	movlw	-10
 35399  01C3A4  36E3               	rlcf	plusw1,f,c
 35400  01C3A6  0EF7               	movlw	-9
 35401  01C3A8  36E3               	rlcf	plusw1,f,c
 35402  01C3AA  0EF8               	movlw	-8
 35403  01C3AC  36E3               	rlcf	plusw1,f,c
 35404  01C3AE  0EF9               	movlw	-7
 35405  01C3B0  36E3               	rlcf	plusw1,f,c
 35406  01C3B2  0EFA               	movlw	-6
 35407  01C3B4  36E3               	rlcf	plusw1,f,c
 35408  01C3B6  0EFB               	movlw	-5
 35409  01C3B8  36E3               	rlcf	plusw1,f,c
 35410  01C3BA  0EFC               	movlw	-4
 35411  01C3BC  36E3               	rlcf	plusw1,f,c
 35412  01C3BE  0EFD               	movlw	-3
 35413  01C3C0  36E3               	rlcf	plusw1,f,c
 35414                           
 35415                           ;stkvar	_divisor @ sp[(-10)+-16]
 35416                           ;stkvar	_dividend @ sp[(-10)+-8]
 35417  01C3C2  50E1               	movf	fsr1l,w,c
 35418  01C3C4  0FEE               	addlw	-18
 35419  01C3C6  6ED9               	movwf	fsr2l,c
 35420  01C3C8  50E2               	movf	fsr1h,w,c
 35421  01C3CA  6EDA               	movwf	fsr2h,c
 35422  01C3CC  0EFF               	movlw	255
 35423  01C3CE  22DA               	addwfc	fsr2h,f,c
 35424  01C3D0  0EE6               	movlw	-26
 35425  01C3D2  50E3               	movf	plusw1,w,c
 35426  01C3D4  5CDE               	subwf	postinc2,w,c
 35427  01C3D6  0EE7               	movlw	-25
 35428  01C3D8  50E3               	movf	plusw1,w,c
 35429  01C3DA  58DE               	subwfb	postinc2,w,c
 35430  01C3DC  0EE8               	movlw	-24
 35431  01C3DE  50E3               	movf	plusw1,w,c
 35432  01C3E0  58DE               	subwfb	postinc2,w,c
 35433  01C3E2  0EE9               	movlw	-23
 35434  01C3E4  50E3               	movf	plusw1,w,c
 35435  01C3E6  58DE               	subwfb	postinc2,w,c
 35436  01C3E8  0EEA               	movlw	-22
 35437  01C3EA  50E3               	movf	plusw1,w,c
 35438  01C3EC  58DE               	subwfb	postinc2,w,c
 35439  01C3EE  0EEB               	movlw	-21
 35440  01C3F0  50E3               	movf	plusw1,w,c
 35441  01C3F2  58DE               	subwfb	postinc2,w,c
 35442  01C3F4  0EEC               	movlw	-20
 35443  01C3F6  50E3               	movf	plusw1,w,c
 35444  01C3F8  58DE               	subwfb	postinc2,w,c
 35445  01C3FA  0EED               	movlw	-19
 35446  01C3FC  50E3               	movf	plusw1,w,c
 35447  01C3FE  58DE               	subwfb	postinc2,w,c
 35448  01C400  A0D8               	btfss	status,0,c
 35449  01C402  D021               	goto	l10272
 35450                           
 35451                           ;stkvar	_divisor @ sp[(-10)+-16]
 35452                           ;stkvar	_dividend @ sp[(-10)+-8]
 35453  01C404  50E1               	movf	fsr1l,w,c
 35454  01C406  0FEE               	addlw	-18
 35455  01C408  6ED9               	movwf	fsr2l,c
 35456  01C40A  50E2               	movf	fsr1h,w,c
 35457  01C40C  6EDA               	movwf	fsr2h,c
 35458  01C40E  0EFF               	movlw	255
 35459  01C410  22DA               	addwfc	fsr2h,f,c
 35460  01C412  0EE6               	movlw	-26
 35461  01C414  50E3               	movf	plusw1,w,c
 35462  01C416  5EDE               	subwf	postinc2,f,c
 35463  01C418  0EE7               	movlw	-25
 35464  01C41A  50E3               	movf	plusw1,w,c
 35465  01C41C  5ADE               	subwfb	postinc2,f,c
 35466  01C41E  0EE8               	movlw	-24
 35467  01C420  50E3               	movf	plusw1,w,c
 35468  01C422  5ADE               	subwfb	postinc2,f,c
 35469  01C424  0EE9               	movlw	-23
 35470  01C426  50E3               	movf	plusw1,w,c
 35471  01C428  5ADE               	subwfb	postinc2,f,c
 35472  01C42A  0EEA               	movlw	-22
 35473  01C42C  50E3               	movf	plusw1,w,c
 35474  01C42E  5ADE               	subwfb	postinc2,f,c
 35475  01C430  0EEB               	movlw	-21
 35476  01C432  50E3               	movf	plusw1,w,c
 35477  01C434  5ADE               	subwfb	postinc2,f,c
 35478  01C436  0EEC               	movlw	-20
 35479  01C438  50E3               	movf	plusw1,w,c
 35480  01C43A  5ADE               	subwfb	postinc2,f,c
 35481  01C43C  0EED               	movlw	-19
 35482  01C43E  50E3               	movf	plusw1,w,c
 35483  01C440  5ADE               	subwfb	postinc2,f,c
 35484                           
 35485                           ;stkvar	_quotient @ sp[(-10)+0]
 35486  01C442  0EF6               	movlw	-10
 35487  01C444  80E3               	bsf	plusw1,0,c
 35488  01C446                     l10272:
 35489                           
 35490                           ;stkvar	_divisor @ sp[(-10)+-16]
 35491  01C446  90D8               	bcf	status,0,c
 35492  01C448  0EED               	movlw	-19
 35493  01C44A  32E3               	rrcf	plusw1,f,c
 35494  01C44C  0EEC               	movlw	-20
 35495  01C44E  32E3               	rrcf	plusw1,f,c
 35496  01C450  0EEB               	movlw	-21
 35497  01C452  32E3               	rrcf	plusw1,f,c
 35498  01C454  0EEA               	movlw	-22
 35499  01C456  32E3               	rrcf	plusw1,f,c
 35500  01C458  0EE9               	movlw	-23
 35501  01C45A  32E3               	rrcf	plusw1,f,c
 35502  01C45C  0EE8               	movlw	-24
 35503  01C45E  32E3               	rrcf	plusw1,f,c
 35504  01C460  0EE7               	movlw	-25
 35505  01C462  32E3               	rrcf	plusw1,f,c
 35506  01C464  0EE6               	movlw	-26
 35507  01C466  32E3               	rrcf	plusw1,f,c
 35508                           
 35509                           ;stkvar	_counter @ sp[(-10)+9]
 35510  01C468  0EFF               	movlw	-1
 35511  01C46A  50E3               	movf	plusw1,w,c
 35512  01C46C  6E2A               	movwf	btemp^0,c
 35513  01C46E  0E01               	movlw	1
 35514  01C470  5E2A               	subwf	btemp^0,f,c
 35515  01C472  0EFF               	movlw	-1
 35516  01C474  0060  F0AB  FFE3   	movff	btemp,plusw1
 35517  01C47A  A4D8               	btfss	status,2,c
 35518  01C47C  D791               	goto	u8180
 35519  01C47E                     u8200:
 35520                           
 35521                           ;stkvar	_sign @ sp[(-10)+8]
 35522  01C47E  0EFE               	movlw	-2
 35523  01C480  50E3               	movf	plusw1,w,c
 35524  01C482  B4D8               	btfsc	status,2,c
 35525  01C484  D025               	goto	u8220
 35526                           
 35527                           ;stkvar	_quotient @ sp[(-10)+0]
 35528                           ;stkvar	_quotient @ sp[(-10)+0]
 35529  01C486  0EF6               	movlw	-10
 35530  01C488  6CE3               	negf	plusw1,c
 35531  01C48A  0EF7               	movlw	-9
 35532  01C48C  1EE3               	comf	plusw1,f,c
 35533  01C48E  0EF8               	movlw	-8
 35534  01C490  1EE3               	comf	plusw1,f,c
 35535  01C492  0EF9               	movlw	-7
 35536  01C494  1EE3               	comf	plusw1,f,c
 35537  01C496  0EFA               	movlw	-6
 35538  01C498  1EE3               	comf	plusw1,f,c
 35539  01C49A  0EFB               	movlw	-5
 35540  01C49C  1EE3               	comf	plusw1,f,c
 35541  01C49E  0EFC               	movlw	-4
 35542  01C4A0  1EE3               	comf	plusw1,f,c
 35543  01C4A2  0EFD               	movlw	-3
 35544  01C4A4  1EE3               	comf	plusw1,f,c
 35545  01C4A6  E314               	bnc	u8220
 35546  01C4A8  0EF7               	movlw	-9
 35547  01C4AA  2AE3               	incf	plusw1,f,c
 35548  01C4AC  E311               	bnc	u8220
 35549  01C4AE  0EF8               	movlw	-8
 35550  01C4B0  2AE3               	incf	plusw1,f,c
 35551  01C4B2  E30E               	bnc	u8220
 35552  01C4B4  0EF9               	movlw	-7
 35553  01C4B6  2AE3               	incf	plusw1,f,c
 35554  01C4B8  E30B               	bnc	u8220
 35555  01C4BA  0EFA               	movlw	-6
 35556  01C4BC  2AE3               	incf	plusw1,f,c
 35557  01C4BE  E308               	bnc	u8220
 35558  01C4C0  0EFB               	movlw	-5
 35559  01C4C2  2AE3               	incf	plusw1,f,c
 35560  01C4C4  E305               	bnc	u8220
 35561  01C4C6  0EFC               	movlw	-4
 35562  01C4C8  2AE3               	incf	plusw1,f,c
 35563  01C4CA  E302               	bnc	u8220
 35564  01C4CC  0EFD               	movlw	-3
 35565  01C4CE  2AE3               	incf	plusw1,f,c
 35566  01C4D0                     u8220:
 35567                           
 35568                           ;stkvar	_quotient @ sp[(-10)+0]
 35569  01C4D0  0EF6               	movlw	246
 35570  01C4D2  24E1               	addwf	fsr1l,w,c
 35571  01C4D4  6ED9               	movwf	fsr2l,c
 35572  01C4D6  0EFF               	movlw	255
 35573  01C4D8  20E2               	addwfc	fsr1h,w,c
 35574  01C4DA  6EDA               	movwf	fsr2h,c
 35575                           
 35576                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 35577  01C4DC  0E08               	movlw	8
 35578  01C4DE  6E2A               	movwf	btemp^0,c
 35579  01C4E0  0EEE               	movlw	-18
 35580  01C4E2                     us823999:
 35581  01C4E2  006F FF7B FFE3     	movff	postinc2,plusw1
 35582  01C4E8  28E8               	incf	wreg,w,c
 35583  01C4EA  2E2A               	decfsz	btemp^0,f,c
 35584  01C4EC  D7FA               	bra	us823999
 35585                           
 35586                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 35587  01C4EE  0EF6               	movlw	246
 35588  01C4F0  26E1               	addwf	fsr1l,f,c
 35589  01C4F2  0EFF               	movlw	255
 35590  01C4F4  22E2               	addwfc	fsr1h,f,c
 35591  01C4F6  0012               	return		;funcret
 35592  01C4F8                     __end_of___aodiv:
 35593                           	opt callstack 0
 35594                           
 35595 ;; *************** function _ctoa *****************
 35596 ;; Defined at:
 35597 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 35598 ;; Parameters:    Size  Location     Type
 35599 ;;  fp              2  [STACK] PTR struct _IO_FILE
 35600 ;;		 -> f(6), NULL(0), 
 35601 ;;  c               1  [STACK] unsigned char 
 35602 ;; Auto vars:     Size  Location     Type
 35603 ;;  w               2  [STACK] int 
 35604 ;;  l               2    0        int 
 35605 ;; Return value:  Size  Location     Type
 35606 ;;                  2  [STACK] int 
 35607 ;; Registers used:
 35608 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 35609 ;; Tracked objects:
 35610 ;;		On entry : 0/0
 35611 ;;		On exit  : 0/0
 35612 ;;		Unchanged: 0/0
 35613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35618 ;;Total ram usage:        0 bytes
 35619 ;; Hardware stack levels used:    1
 35620 ;; Hardware stack levels required when called:   20
 35621 ;; This function calls:
 35622 ;;		_pad
 35623 ;; This function is called by:
 35624 ;;		_vfpfcnvrt
 35625 ;; This function uses a reentrant model
 35626 ;;
 35627                           
 35628                           	psect	text118
 35629  0010D6                     __ptext118:
 35630                           	opt callstack 0
 35631  0010D6                     _ctoa:
 35632                           	opt callstack 0
 35633                           
 35634                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35635  0010D6  52E6               	movf	postinc1,f,c
 35636  0010D8  52E6               	movf	postinc1,f,c
 35637                           
 35638                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 35639                           
 35640                           ;incstack = 0
 35641 ;; hardware stack exceeded
 35642  0010DA  504A               	movf	_width^0,w,c
 35643  0010DC  104B               	iorwf	(_width+1)^0,w,c
 35644  0010DE  A4D8               	btfss	status,2,c
 35645  0010E0  D009               	goto	l15580
 35646                           
 35647                           ;stkvar	_w @ sp[(-2)+0]
 35648  0010E2  0EFE               	movlw	-2
 35649  0010E4  0060  F12B  FFE3   	movff	_width,plusw1
 35650  0010EA  0EFF               	movlw	-1
 35651  0010EC  0060  F12F  FFE3   	movff	_width+1,plusw1
 35652  0010F2  D016               	goto	l15582
 35653  0010F4                     l15580:
 35654  0010F4  0EFF               	movlw	255
 35655  0010F6  6E34               	movwf	(btemp+10)^0,c
 35656  0010F8  0EFF               	movlw	255
 35657  0010FA  6E35               	movwf	(btemp+11)^0,c
 35658  0010FC  0060  F128  F032   	movff	_width,btemp+8
 35659  001102  0060  F12C  F033   	movff	_width+1,btemp+9
 35660  001108  5034               	movf	(btemp+10)^0,w,c
 35661  00110A  2632               	addwf	(btemp+8)^0,f,c
 35662  00110C  5035               	movf	(btemp+11)^0,w,c
 35663  00110E  2233               	addwfc	(btemp+9)^0,f,c
 35664                           
 35665                           ;stkvar	_w @ sp[(-2)+0]
 35666  001110  0EFE               	movlw	-2
 35667  001112  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 35668  001118  0EFF               	movlw	-1
 35669  00111A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 35670  001120                     l15582:
 35671                           
 35672                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 35673                           ;stkvar	_c @ sp[(-2)+-3]
 35674  001120  0EFB               	movlw	-5
 35675  001122  006F FF8C  F354    	movff	plusw1,_dbuf
 35676                           
 35677                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 35678  001128  0103               	movlb	3	; () banked
 35679  00112A  6B55               	clrf	(_dbuf+1)& (0+255),b
 35680                           
 35681                           ; BSR set to: 3
 35682                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 35683                           ;stkvar	_w @ sp[(-2)+0]
 35684  00112C  0EFE               	movlw	-2
 35685  00112E  006F FF8F FFE6     	movff	plusw1,postinc1
 35686  001134  006F FF8F FFE6     	movff	plusw1,postinc1
 35687  00113A  0E54               	movlw	low _dbuf
 35688  00113C  6EE6               	movwf	postinc1,c
 35689  00113E  0E03               	movlw	high _dbuf
 35690  001140  6EE6               	movwf	postinc1,c
 35691                           
 35692                           ;stkvar	_fp @ sp[(-6)+-2]
 35693  001142  0EF8               	movlw	-8
 35694  001144  006F FF8F FFE6     	movff	plusw1,postinc1
 35695  00114A  006F FF8F FFE6     	movff	plusw1,postinc1
 35696  001150  EC1B  F0FD         	call	_pad	;wreg free
 35697                           
 35698                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 35699  001154  0EFB               	movlw	251
 35700  001156  26E1               	addwf	fsr1l,f,c
 35701  001158  0EFF               	movlw	255
 35702  00115A  22E2               	addwfc	fsr1h,f,c
 35703  00115C  0012               	return		;funcret
 35704  00115E                     __end_of_ctoa:
 35705                           	opt callstack 0
 35706                           
 35707 ;; *************** function _pad *****************
 35708 ;; Defined at:
 35709 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 35710 ;; Parameters:    Size  Location     Type
 35711 ;;  fp              2  [STACK] PTR struct _IO_FILE
 35712 ;;		 -> f(6), NULL(0), 
 35713 ;;  buf             2  [STACK] PTR unsigned char 
 35714 ;;		 -> dbuf(80), 
 35715 ;;  p               2  [STACK] int 
 35716 ;; Auto vars:     Size  Location     Type
 35717 ;;  w               2  [STACK] int 
 35718 ;;  i               2  [STACK] int 
 35719 ;; Return value:  Size  Location     Type
 35720 ;;                  2  [STACK] int 
 35721 ;; Registers used:
 35722 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 35723 ;; Tracked objects:
 35724 ;;		On entry : 0/3
 35725 ;;		On exit  : 0/0
 35726 ;;		Unchanged: 0/0
 35727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35732 ;;Total ram usage:        0 bytes
 35733 ;; Hardware stack levels used:    1
 35734 ;; Hardware stack levels required when called:   19
 35735 ;; This function calls:
 35736 ;;		_fputc
 35737 ;;		_fputs
 35738 ;;		_strlen
 35739 ;; This function is called by:
 35740 ;;		_ctoa
 35741 ;;		_dtoa
 35742 ;;		_efgtoa
 35743 ;;		_utoa
 35744 ;;		_xtoa
 35745 ;; This function uses a reentrant model
 35746 ;;
 35747                           
 35748                           	psect	text119
 35749  01FA36                     __ptext119:
 35750                           	opt callstack 0
 35751  01FA36                     _pad:
 35752                           	opt callstack 0
 35753                           
 35754                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35755  01FA36  52E6               	movf	postinc1,f,c
 35756  01FA38  52E6               	movf	postinc1,f,c
 35757  01FA3A  52E6               	movf	postinc1,f,c
 35758  01FA3C  52E6               	movf	postinc1,f,c
 35759                           
 35760                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 35761                           
 35762                           ;incstack = 0
 35763 ;; hardware stack exceeded
 35764  01FA3E  A04E               	btfss	_flags^0,0,c
 35765  01FA40  D010               	goto	l15464
 35766                           
 35767                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 35768                           ;stkvar	_fp @ sp[(-4)+-2]
 35769  01FA42  0EFA               	movlw	-6
 35770  01FA44  006F FF8F FFE6     	movff	plusw1,postinc1
 35771  01FA4A  006F FF8F FFE6     	movff	plusw1,postinc1
 35772                           
 35773                           ;stkvar	_buf @ sp[(-6)+-4]
 35774  01FA50  0EF6               	movlw	-10
 35775  01FA52  006F FF8F FFE6     	movff	plusw1,postinc1
 35776  01FA58  006F FF8F FFE6     	movff	plusw1,postinc1
 35777  01FA5E  ECB2  F006         	call	_fputs	;wreg free
 35778  01FA62                     l15464:
 35779                           
 35780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 35781                           ;stkvar	_p @ sp[(-4)+-6]
 35782  01FA62  0EF7               	movlw	-9
 35783  01FA64  BEE3               	btfsc	plusw1,7,c
 35784  01FA66  D011               	goto	l15468
 35785                           
 35786                           ;stkvar	_p @ sp[(-4)+-6]
 35787                           ;stkvar	_w @ sp[(-4)+0]
 35788  01FA68  0EF6               	movlw	-10
 35789  01FA6A  006F FF8C  F02A    	movff	plusw1,btemp
 35790  01FA70  0EFC               	movlw	-4
 35791  01FA72  0060  F0AB  FFE3   	movff	btemp,plusw1
 35792  01FA78  0EF7               	movlw	-9
 35793  01FA7A  006F FF8C  F02A    	movff	plusw1,btemp
 35794  01FA80  0EFD               	movlw	-3
 35795  01FA82  0060  F0AB  FFE3   	movff	btemp,plusw1
 35796  01FA88  D004               	goto	l2471
 35797  01FA8A                     l15468:
 35798                           
 35799                           ;stkvar	_w @ sp[(-4)+0]
 35800  01FA8A  0EFC               	movlw	-4
 35801  01FA8C  6AE3               	clrf	plusw1,c
 35802  01FA8E  0EFD               	movlw	-3
 35803  01FA90  6AE3               	clrf	plusw1,c
 35804  01FA92                     l2471:
 35805                           
 35806                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 35807                           ;stkvar	_i @ sp[(-4)+2]
 35808  01FA92  0EFE               	movlw	-2
 35809  01FA94  6AE3               	clrf	plusw1,c
 35810  01FA96  0EFF               	movlw	-1
 35811  01FA98  6AE3               	clrf	plusw1,c
 35812                           
 35813                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 35814  01FA9A  D01E               	goto	l15474
 35815  01FA9C                     l15470:
 35816                           
 35817                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 35818                           ;stkvar	_fp @ sp[(-4)+-2]
 35819  01FA9C  0EFA               	movlw	-6
 35820  01FA9E  006F FF8F FFE6     	movff	plusw1,postinc1
 35821  01FAA4  006F FF8F FFE6     	movff	plusw1,postinc1
 35822  01FAAA  0E20               	movlw	32
 35823  01FAAC  6EE6               	movwf	postinc1,c
 35824  01FAAE  0E00               	movlw	0
 35825  01FAB0  6EE6               	movwf	postinc1,c
 35826  01FAB2  ECE4  F0FA         	call	_fputc	;wreg free
 35827                           
 35828                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 35829                           ;stkvar	_i @ sp[(-4)+2]
 35830  01FAB6  0EFE               	movlw	-2
 35831  01FAB8  50E3               	movf	plusw1,w,c
 35832  01FABA  0F01               	addlw	1
 35833  01FABC  6E2A               	movwf	btemp^0,c
 35834  01FABE  0EFE               	movlw	-2
 35835  01FAC0  0060  F0AB  FFE3   	movff	btemp,plusw1
 35836  01FAC6  6A2A               	clrf	btemp^0,c
 35837  01FAC8  0EFF               	movlw	-1
 35838  01FACA  50E3               	movf	plusw1,w,c
 35839  01FACC  202A               	addwfc	btemp^0,w,c
 35840  01FACE  6E2A               	movwf	btemp^0,c
 35841  01FAD0  0EFF               	movlw	-1
 35842  01FAD2  0060  F0AB  FFE3   	movff	btemp,plusw1
 35843  01FAD8                     l15474:
 35844                           
 35845                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 35846                           ;stkvar	_w @ sp[(-4)+0]
 35847                           ;stkvar	_i @ sp[(-4)+2]
 35848  01FAD8  50E1               	movf	fsr1l,w,c
 35849  01FADA  0FFE               	addlw	-2
 35850  01FADC  6ED9               	movwf	fsr2l,c
 35851  01FADE  50E2               	movf	fsr1h,w,c
 35852  01FAE0  6EDA               	movwf	fsr2h,c
 35853  01FAE2  0EFF               	movlw	255
 35854  01FAE4  22DA               	addwfc	fsr2h,f,c
 35855  01FAE6  0EFC               	movlw	-4
 35856  01FAE8  50E3               	movf	plusw1,w,c
 35857  01FAEA  5CDE               	subwf	postinc2,w,c
 35858  01FAEC  50DE               	movf	postinc2,w,c
 35859  01FAEE  0A80               	xorlw	128
 35860  01FAF0  6E2A               	movwf	btemp^0,c
 35861  01FAF2  0EFD               	movlw	-3
 35862  01FAF4  50E3               	movf	plusw1,w,c
 35863  01FAF6  0A80               	xorlw	128
 35864  01FAF8  582A               	subwfb	btemp^0,w,c
 35865  01FAFA  A0D8               	btfss	status,0,c
 35866  01FAFC  D7CF               	goto	l15470
 35867                           
 35868                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 35869  01FAFE  B04E               	btfsc	_flags^0,0,c
 35870  01FB00  D010               	goto	l15478
 35871                           
 35872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 35873                           ;stkvar	_fp @ sp[(-4)+-2]
 35874  01FB02  0EFA               	movlw	-6
 35875  01FB04  006F FF8F FFE6     	movff	plusw1,postinc1
 35876  01FB0A  006F FF8F FFE6     	movff	plusw1,postinc1
 35877                           
 35878                           ;stkvar	_buf @ sp[(-6)+-4]
 35879  01FB10  0EF6               	movlw	-10
 35880  01FB12  006F FF8F FFE6     	movff	plusw1,postinc1
 35881  01FB18  006F FF8F FFE6     	movff	plusw1,postinc1
 35882  01FB1E  ECB2  F006         	call	_fputs	;wreg free
 35883  01FB22                     l15478:
 35884                           
 35885                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 35886                           ;stkvar	_w @ sp[(-4)+0]
 35887                           ;stkvar	_buf @ sp[(-4)+-4]
 35888  01FB22  0EF8               	movlw	-8
 35889  01FB24  006F FF8F FFE6     	movff	plusw1,postinc1
 35890  01FB2A  006F FF8F FFE6     	movff	plusw1,postinc1
 35891  01FB30  EC14  F006         	call	_strlen	;wreg free
 35892  01FB34  0EFC               	movlw	-4
 35893  01FB36  50E3               	movf	plusw1,w,c
 35894  01FB38  262A               	addwf	btemp^0,f,c
 35895  01FB3A  0EFD               	movlw	-3
 35896  01FB3C  50E3               	movf	plusw1,w,c
 35897  01FB3E  222B               	addwfc	(btemp+1)^0,f,c
 35898                           
 35899                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 35900  01FB40  0EF6               	movlw	246
 35901  01FB42  26E1               	addwf	fsr1l,f,c
 35902  01FB44  0EFF               	movlw	255
 35903  01FB46  22E2               	addwfc	fsr1h,f,c
 35904  01FB48  0012               	return		;funcret
 35905  01FB4A                     __end_of_pad:
 35906                           	opt callstack 0
 35907                           
 35908 ;; *************** function _strlen *****************
 35909 ;; Defined at:
 35910 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 35911 ;; Parameters:    Size  Location     Type
 35912 ;;  s               2  [STACK] PTR const unsigned char 
 35913 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), nuls(7), 
 35914 ;;		 -> dbuf(80), spin(120), STR_76(9), STR_75(12), 
 35915 ;;		 -> D.lcd(640), D(642), T(176), port_data(512), 
 35916 ;;		 -> STR_3(5), V(181), 
 35917 ;; Auto vars:     Size  Location     Type
 35918 ;;  a               2  [STACK] PTR const unsigned char 
 35919 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), nuls(7), 
 35920 ;;		 -> dbuf(80), spin(120), STR_76(9), STR_75(12), 
 35921 ;;		 -> D.lcd(640), D(642), T(176), port_data(512), 
 35922 ;;		 -> STR_3(5), V(181), 
 35923 ;; Return value:  Size  Location     Type
 35924 ;;                  2  [STACK] unsigned int 
 35925 ;; Registers used:
 35926 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 35927 ;; Tracked objects:
 35928 ;;		On entry : 0/0
 35929 ;;		On exit  : 0/0
 35930 ;;		Unchanged: 0/0
 35931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35936 ;;Total ram usage:        0 bytes
 35937 ;; Hardware stack levels used:    1
 35938 ;; Hardware stack levels required when called:   15
 35939 ;; This function calls:
 35940 ;;		Nothing
 35941 ;; This function is called by:
 35942 ;;		_eaDogM_WriteString
 35943 ;;		_spinners
 35944 ;;		_calc_bsoc
 35945 ;;		_pad
 35946 ;;		_stoa
 35947 ;; This function uses a reentrant model
 35948 ;;
 35949                           
 35950                           	psect	text120
 35951  000C28                     __ptext120:
 35952                           	opt callstack 0
 35953  000C28                     _strlen:
 35954                           	opt callstack 0
 35955                           
 35956                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35957  000C28  52E6               	movf	postinc1,f,c
 35958  000C2A  52E6               	movf	postinc1,f,c
 35959                           
 35960                           ;stkvar	_s @ sp[(-2)+-2]
 35961                           
 35962                           ;incstack = 0
 35963 ;; hardware stack exceeded
 35964  000C2C  0EFC               	movlw	-4
 35965  000C2E  006F FF8C  F034    	movff	plusw1,btemp+10
 35966  000C34  0EFD               	movlw	-3
 35967  000C36  006F FF8C  F035    	movff	plusw1,btemp+11
 35968                           
 35969                           ;stkvar	_a @ sp[(-2)+0]
 35970  000C3C  0EFF               	movlw	-1
 35971  000C3E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 35972  000C44  0EFE               	movlw	-2
 35973  000C46  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 35974  000C4C  D011               	goto	l15404
 35975  000C4E                     l15402:
 35976                           
 35977                           ;stkvar	_s @ sp[(-2)+-2]
 35978  000C4E  0EFC               	movlw	-4
 35979  000C50  50E3               	movf	plusw1,w,c
 35980  000C52  0F01               	addlw	1
 35981  000C54  6E2A               	movwf	btemp^0,c
 35982  000C56  0EFC               	movlw	-4
 35983  000C58  0060  F0AB  FFE3   	movff	btemp,plusw1
 35984  000C5E  6A2A               	clrf	btemp^0,c
 35985  000C60  0EFD               	movlw	-3
 35986  000C62  50E3               	movf	plusw1,w,c
 35987  000C64  202A               	addwfc	btemp^0,w,c
 35988  000C66  6E2A               	movwf	btemp^0,c
 35989  000C68  0EFD               	movlw	-3
 35990  000C6A  0060  F0AB  FFE3   	movff	btemp,plusw1
 35991  000C70                     l15404:
 35992                           
 35993                           ;stkvar	_s @ sp[(-2)+-2]
 35994  000C70  0EFC               	movlw	-4
 35995  000C72  006F FF8F FFF6     	movff	plusw1,tblptrl
 35996  000C78  0EFD               	movlw	-3
 35997  000C7A  006F FF8F FFF7     	movff	plusw1,tblptrh
 35998  000C80  0E00               	movlw	low (__mediumconst shr (0+16))
 35999  000C82  6EF8               	movwf	tblptru,c
 36000  000C84  0E1F               	movlw	(high __ramtop+-1)
 36001  000C86  64F7               	cpfsgt	tblptrh,c
 36002  000C88  D003               	bra	u14287
 36003  000C8A  0008               	tblrd		*
 36004  000C8C  50F5               	movf	tablat,w,c
 36005  000C8E  D007               	bra	u14280
 36006  000C90                     u14287:
 36007  000C90  006F FFDB FFE9     	movff	tblptrl,fsr0l
 36008  000C96  006F FFDF FFEA     	movff	tblptrh,fsr0h
 36009  000C9C  50EF               	movf	indf0,w,c
 36010  000C9E                     u14280:
 36011  000C9E  0900               	iorlw	0
 36012  000CA0  A4D8               	btfss	status,2,c
 36013  000CA2  D7D5               	goto	l15402
 36014                           
 36015                           ;stkvar	_a @ sp[(-2)+0]
 36016                           ;stkvar	_s @ sp[(-2)+-2]
 36017  000CA4  0EFC               	movlw	-4
 36018  000CA6  006F FF8C  F02A    	movff	plusw1,btemp
 36019  000CAC  0EFD               	movlw	-3
 36020  000CAE  006F FF8C  F02B    	movff	plusw1,btemp+1
 36021  000CB4  0EFE               	movlw	-2
 36022  000CB6  50E3               	movf	plusw1,w,c
 36023  000CB8  5E2A               	subwf	btemp^0,f,c
 36024  000CBA  0EFF               	movlw	-1
 36025  000CBC  50E3               	movf	plusw1,w,c
 36026  000CBE  5A2B               	subwfb	(btemp+1)^0,f,c
 36027                           
 36028                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 36029  000CC0  52E5               	movf	postdec1,f,c
 36030  000CC2  52E5               	movf	postdec1,f,c
 36031  000CC4  52E5               	movf	postdec1,f,c
 36032  000CC6  52E5               	movf	postdec1,f,c
 36033  000CC8  0012               	return		;funcret
 36034  000CCA                     __end_of_strlen:
 36035                           	opt callstack 0
 36036                           
 36037 ;; *************** function _fputs *****************
 36038 ;; Defined at:
 36039 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 36040 ;; Parameters:    Size  Location     Type
 36041 ;;  s               2  [STACK] PTR const unsigned char 
 36042 ;;		 -> dbuf(80), 
 36043 ;;  fp              2  [STACK] PTR struct _IO_FILE
 36044 ;;		 -> f(6), NULL(0), 
 36045 ;; Auto vars:     Size  Location     Type
 36046 ;;  i               2  [STACK] int 
 36047 ;;  c               1  [STACK] unsigned char 
 36048 ;; Return value:  Size  Location     Type
 36049 ;;                  2  [STACK] int 
 36050 ;; Registers used:
 36051 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 36052 ;; Tracked objects:
 36053 ;;		On entry : 0/3
 36054 ;;		On exit  : 0/0
 36055 ;;		Unchanged: 0/0
 36056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36061 ;;Total ram usage:        0 bytes
 36062 ;; Hardware stack levels used:    1
 36063 ;; Hardware stack levels required when called:   18
 36064 ;; This function calls:
 36065 ;;		_fputc
 36066 ;; This function is called by:
 36067 ;;		_pad
 36068 ;; This function uses a reentrant model
 36069 ;;
 36070                           
 36071                           	psect	text121
 36072  000D64                     __ptext121:
 36073                           	opt callstack 0
 36074  000D64                     _fputs:
 36075                           	opt callstack 0
 36076                           
 36077                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36078  000D64  52E6               	movf	postinc1,f,c
 36079  000D66  52E6               	movf	postinc1,f,c
 36080  000D68  52E6               	movf	postinc1,f,c
 36081                           
 36082                           ;stkvar	_i @ sp[(-3)+0]
 36083                           
 36084                           ;incstack = 0
 36085 ;; hardware stack exceeded
 36086  000D6A  0EFD               	movlw	-3
 36087  000D6C  6AE3               	clrf	plusw1,c
 36088  000D6E  0EFE               	movlw	-2
 36089  000D70  6AE3               	clrf	plusw1,c
 36090  000D72  D01F               	goto	l15416
 36091  000D74                     l15412:
 36092                           
 36093                           ;stkvar	_fp @ sp[(-3)+-4]
 36094  000D74  0EF9               	movlw	-7
 36095  000D76  006F FF8F FFE6     	movff	plusw1,postinc1
 36096  000D7C  006F FF8F FFE6     	movff	plusw1,postinc1
 36097                           
 36098                           ;stkvar	_c @ sp[(-5)+2]
 36099  000D82  0EFD               	movlw	-3
 36100  000D84  50E3               	movf	plusw1,w,c
 36101  000D86  6EE6               	movwf	postinc1,c
 36102  000D88  0E00               	movlw	0
 36103  000D8A  6EE6               	movwf	postinc1,c
 36104  000D8C  ECE4  F0FA         	call	_fputc	;wreg free
 36105                           
 36106                           ;stkvar	_i @ sp[(-3)+0]
 36107  000D90  0EFD               	movlw	-3
 36108  000D92  50E3               	movf	plusw1,w,c
 36109  000D94  0F01               	addlw	1
 36110  000D96  6E2A               	movwf	btemp^0,c
 36111  000D98  0EFD               	movlw	-3
 36112  000D9A  0060  F0AB  FFE3   	movff	btemp,plusw1
 36113  000DA0  6A2A               	clrf	btemp^0,c
 36114  000DA2  0EFE               	movlw	-2
 36115  000DA4  50E3               	movf	plusw1,w,c
 36116  000DA6  202A               	addwfc	btemp^0,w,c
 36117  000DA8  6E2A               	movwf	btemp^0,c
 36118  000DAA  0EFE               	movlw	-2
 36119  000DAC  0060  F0AB  FFE3   	movff	btemp,plusw1
 36120  000DB2                     l15416:
 36121                           
 36122                           ;stkvar	_i @ sp[(-3)+0]
 36123  000DB2  0EFD               	movlw	-3
 36124  000DB4  006F FF8C  F034    	movff	plusw1,btemp+10
 36125  000DBA  0EFE               	movlw	-2
 36126  000DBC  006F FF8C  F035    	movff	plusw1,btemp+11
 36127                           
 36128                           ;stkvar	_s @ sp[(-3)+-2]
 36129  000DC2  0EFB               	movlw	-5
 36130  000DC4  006F FF8C  F032    	movff	plusw1,btemp+8
 36131  000DCA  0EFC               	movlw	-4
 36132  000DCC  006F FF8C  F033    	movff	plusw1,btemp+9
 36133  000DD2  5034               	movf	(btemp+10)^0,w,c
 36134  000DD4  2432               	addwf	(btemp+8)^0,w,c
 36135  000DD6  6ED9               	movwf	fsr2l,c
 36136  000DD8  5035               	movf	(btemp+11)^0,w,c
 36137  000DDA  2033               	addwfc	(btemp+9)^0,w,c
 36138  000DDC  6EDA               	movwf	fsr2h,c
 36139  000DDE  50DF               	movf	indf2,w,c
 36140  000DE0  6E35               	movwf	(btemp+11)^0,c
 36141                           
 36142                           ;stkvar	_c @ sp[(-3)+2]
 36143  000DE2  0EFF               	movlw	-1
 36144  000DE4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 36145  000DEA  0EFF               	movlw	-1
 36146  000DEC  50E3               	movf	plusw1,w,c
 36147  000DEE  A4D8               	btfss	status,2,c
 36148  000DF0  D7C1               	goto	l15412
 36149                           
 36150                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 36151  000DF2  0EF9               	movlw	249
 36152  000DF4  26E1               	addwf	fsr1l,f,c
 36153  000DF6  0EFF               	movlw	255
 36154  000DF8  22E2               	addwfc	fsr1h,f,c
 36155  000DFA  0012               	return		;funcret
 36156  000DFC                     __end_of_fputs:
 36157                           	opt callstack 0
 36158                           
 36159 ;; *************** function _fputc *****************
 36160 ;; Defined at:
 36161 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 36162 ;; Parameters:    Size  Location     Type
 36163 ;;  c               2  [STACK] int 
 36164 ;;  fp              2  [STACK] PTR struct _IO_FILE
 36165 ;;		 -> f(6), NULL(0), 
 36166 ;; Auto vars:     Size  Location     Type
 36167 ;;		None
 36168 ;; Return value:  Size  Location     Type
 36169 ;;                  2  [STACK] int 
 36170 ;; Registers used:
 36171 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 36172 ;; Tracked objects:
 36173 ;;		On entry : 0/0
 36174 ;;		On exit  : 0/0
 36175 ;;		Unchanged: 0/0
 36176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36181 ;;Total ram usage:        0 bytes
 36182 ;; Hardware stack levels used:    1
 36183 ;; Hardware stack levels required when called:   17
 36184 ;; This function calls:
 36185 ;;		_putch
 36186 ;; This function is called by:
 36187 ;;		_pad
 36188 ;;		_stoa
 36189 ;;		_vfpfcnvrt
 36190 ;;		_fputs
 36191 ;; This function uses a reentrant model
 36192 ;;
 36193                           
 36194                           	psect	text122
 36195  01F5C8                     __ptext122:
 36196                           	opt callstack 0
 36197  01F5C8                     _fputc:
 36198                           	opt callstack 0
 36199                           
 36200                           ;stkvar	_fp @ sp[(0)+-4]
 36201                           
 36202                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36203                           ;incstack = 0
 36204 ;; hardware stack exceeded
 36205  01F5C8  0EFC               	movlw	-4
 36206  01F5CA  006F FF8C  F02A    	movff	plusw1,btemp
 36207  01F5D0  0EFD               	movlw	-3
 36208  01F5D2  50E3               	movf	plusw1,w,c
 36209  01F5D4  102A               	iorwf	btemp^0,w,c
 36210  01F5D6  B4D8               	btfsc	status,2,c
 36211  01F5D8  D009               	goto	u14250
 36212                           
 36213                           ;stkvar	_fp @ sp[(0)+-4]
 36214  01F5DA  0EFC               	movlw	-4
 36215  01F5DC  006F FF8C  F02A    	movff	plusw1,btemp
 36216  01F5E2  0EFD               	movlw	-3
 36217  01F5E4  50E3               	movf	plusw1,w,c
 36218  01F5E6  102A               	iorwf	btemp^0,w,c
 36219  01F5E8  A4D8               	btfss	status,2,c
 36220  01F5EA  D006               	goto	l15390
 36221  01F5EC                     u14250:
 36222                           
 36223                           ;stkvar	_c @ sp[(0)+-2]
 36224  01F5EC  0EFE               	movlw	-2
 36225  01F5EE  50E3               	movf	plusw1,w,c
 36226  01F5F0  6EE6               	movwf	postinc1,c
 36227  01F5F2  EC6F  F014         	call	_putch	;wreg free
 36228  01F5F6  D075               	goto	l3547
 36229  01F5F8                     l15390:
 36230                           
 36231                           ;stkvar	_fp @ sp[(0)+-4]
 36232  01F5F8  0EFC               	movlw	-4
 36233  01F5FA  006F FF8C  F034    	movff	plusw1,btemp+10
 36234  01F600  0EFD               	movlw	-3
 36235  01F602  006F FF8C  F035    	movff	plusw1,btemp+11
 36236  01F608  0E04               	movlw	4
 36237  01F60A  2434               	addwf	(btemp+10)^0,w,c
 36238  01F60C  6ED9               	movwf	fsr2l,c
 36239  01F60E  0E00               	movlw	0
 36240  01F610  2035               	addwfc	(btemp+11)^0,w,c
 36241  01F612  6EDA               	movwf	fsr2h,c
 36242  01F614  50DE               	movf	postinc2,w,c
 36243  01F616  10DE               	iorwf	postinc2,w,c
 36244  01F618  B4D8               	btfsc	status,2,c
 36245  01F61A  D026               	goto	u14270
 36246                           
 36247                           ;stkvar	_fp @ sp[(0)+-4]
 36248  01F61C  0EFC               	movlw	-4
 36249  01F61E  006F FF8C  F034    	movff	plusw1,btemp+10
 36250  01F624  0EFD               	movlw	-3
 36251  01F626  006F FF8C  F035    	movff	plusw1,btemp+11
 36252  01F62C  0E04               	movlw	4
 36253  01F62E  2434               	addwf	(btemp+10)^0,w,c
 36254  01F630  6ED9               	movwf	fsr2l,c
 36255  01F632  0E00               	movlw	0
 36256  01F634  2035               	addwfc	(btemp+11)^0,w,c
 36257  01F636  6EDA               	movwf	fsr2h,c
 36258                           
 36259                           ;stkvar	_fp @ sp[(0)+-4]
 36260  01F638  0EFC               	movlw	-4
 36261  01F63A  006F FF8C  F034    	movff	plusw1,btemp+10
 36262  01F640  0EFD               	movlw	-3
 36263  01F642  006F FF8C  F035    	movff	plusw1,btemp+11
 36264  01F648  0E02               	movlw	2
 36265  01F64A  2434               	addwf	(btemp+10)^0,w,c
 36266  01F64C  6EE9               	movwf	fsr0l,c
 36267  01F64E  0E00               	movlw	0
 36268  01F650  2035               	addwfc	(btemp+11)^0,w,c
 36269  01F652  6EEA               	movwf	fsr0h,c
 36270  01F654  50DE               	movf	postinc2,w,c
 36271  01F656  5CEE               	subwf	postinc0,w,c
 36272  01F658  50EE               	movf	postinc0,w,c
 36273  01F65A  0A80               	xorlw	128
 36274  01F65C  6E2A               	movwf	btemp^0,c
 36275  01F65E  50DE               	movf	postinc2,w,c
 36276  01F660  0A80               	xorlw	128
 36277  01F662  582A               	subwfb	btemp^0,w,c
 36278  01F664  B0D8               	btfsc	status,0,c
 36279  01F666  D03D               	goto	l3547
 36280  01F668                     u14270:
 36281                           
 36282                           ;stkvar	_c @ sp[(0)+-2]
 36283                           ;stkvar	_fp @ sp[(0)+-4]
 36284  01F668  0EFC               	movlw	-4
 36285  01F66A  006F FF8C  F034    	movff	plusw1,btemp+10
 36286  01F670  0EFD               	movlw	-3
 36287  01F672  006F FF8C  F035    	movff	plusw1,btemp+11
 36288  01F678  0E02               	movlw	2
 36289  01F67A  2434               	addwf	(btemp+10)^0,w,c
 36290  01F67C  6ED9               	movwf	fsr2l,c
 36291  01F67E  0E00               	movlw	0
 36292  01F680  2035               	addwfc	(btemp+11)^0,w,c
 36293  01F682  6EDA               	movwf	fsr2h,c
 36294  01F684  006F FF78  F034    	movff	postinc2,btemp+10
 36295  01F68A  006F FF74  F035    	movff	postdec2,btemp+11
 36296                           
 36297                           ;stkvar	_fp @ sp[(0)+-4]
 36298  01F690  0EFC               	movlw	-4
 36299  01F692  006F FF8F FFD9     	movff	plusw1,fsr2l
 36300  01F698  0EFD               	movlw	-3
 36301  01F69A  006F FF8F FFDA     	movff	plusw1,fsr2h
 36302  01F6A0  006F FF78  F032    	movff	postinc2,btemp+8
 36303  01F6A6  006F FF74  F033    	movff	postdec2,btemp+9
 36304  01F6AC  5034               	movf	(btemp+10)^0,w,c
 36305  01F6AE  2432               	addwf	(btemp+8)^0,w,c
 36306  01F6B0  6ED9               	movwf	fsr2l,c
 36307  01F6B2  5035               	movf	(btemp+11)^0,w,c
 36308  01F6B4  2033               	addwfc	(btemp+9)^0,w,c
 36309  01F6B6  6EDA               	movwf	fsr2h,c
 36310  01F6B8  0EFE               	movlw	-2
 36311  01F6BA  006F FF8F FFDF     	movff	plusw1,indf2
 36312                           
 36313                           ;stkvar	_fp @ sp[(0)+-4]
 36314  01F6C0  0EFC               	movlw	-4
 36315  01F6C2  006F FF8C  F034    	movff	plusw1,btemp+10
 36316  01F6C8  0EFD               	movlw	-3
 36317  01F6CA  006F FF8C  F035    	movff	plusw1,btemp+11
 36318  01F6D0  0E02               	movlw	2
 36319  01F6D2  2434               	addwf	(btemp+10)^0,w,c
 36320  01F6D4  6ED9               	movwf	fsr2l,c
 36321  01F6D6  0E00               	movlw	0
 36322  01F6D8  2035               	addwfc	(btemp+11)^0,w,c
 36323  01F6DA  6EDA               	movwf	fsr2h,c
 36324  01F6DC  2ADE               	incf	postinc2,f,c
 36325  01F6DE  0E00               	movlw	0
 36326  01F6E0  22DD               	addwfc	postdec2,f,c
 36327  01F6E2                     l3547:
 36328                           
 36329                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 36330  01F6E2  52E5               	movf	postdec1,f,c
 36331  01F6E4  52E5               	movf	postdec1,f,c
 36332  01F6E6  52E5               	movf	postdec1,f,c
 36333  01F6E8  52E5               	movf	postdec1,f,c
 36334  01F6EA  0012               	return		;funcret
 36335  01F6EC                     __end_of_fputc:
 36336                           	opt callstack 0
 36337                           
 36338 ;; *************** function _putch *****************
 36339 ;; Defined at:
 36340 ;;		line 420 in file "eadog.c"
 36341 ;; Parameters:    Size  Location     Type
 36342 ;;  c               1  [STACK] unsigned char 
 36343 ;; Auto vars:     Size  Location     Type
 36344 ;;		None
 36345 ;; Return value:  Size  Location     Type
 36346 ;;                  1  [STACK] void 
 36347 ;; Registers used:
 36348 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 36349 ;; Tracked objects:
 36350 ;;		On entry : 0/0
 36351 ;;		On exit  : 0/0
 36352 ;;		Unchanged: 0/0
 36353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36358 ;;Total ram usage:        0 bytes
 36359 ;; Hardware stack levels used:    1
 36360 ;; Hardware stack levels required when called:   16
 36361 ;; This function calls:
 36362 ;;		_ringBufS_put_dma
 36363 ;; This function is called by:
 36364 ;;		_fputc
 36365 ;; This function uses a reentrant model
 36366 ;;
 36367                           
 36368                           	psect	text123
 36369  0028DE                     __ptext123:
 36370                           	opt callstack 0
 36371  0028DE                     _putch:
 36372                           	opt callstack 0
 36373                           
 36374                           ;eadog.c: 420: void putch(char c);eadog.c: 421: {;eadog.c: 422:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 36375                           ;stkvar	_c @ sp[(0)+-1]
 36376                           
 36377                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36378                           ;incstack = 0
 36379 ;; hardware stack exceeded
 36380  0028DE  0EFF               	movlw	-1
 36381  0028E0  50E3               	movf	plusw1,w,c
 36382  0028E2  6EE6               	movwf	postinc1,c
 36383  0028E4  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 36384  0028EA  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 36385  0028F0  EC1A  F005         	call	_ringBufS_put_dma	;wreg free
 36386                           
 36387                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 36388  0028F4  52E5               	movf	postdec1,f,c
 36389  0028F6  0012               	return		;funcret
 36390  0028F8                     __end_of_putch:
 36391                           	opt callstack 0
 36392                           
 36393 ;; *************** function _ringBufS_put_dma *****************
 36394 ;; Defined at:
 36395 ;;		line 67 in file "ringbufs.c"
 36396 ;; Parameters:    Size  Location     Type
 36397 ;;  _this           2  [STACK] PTR struct ringBufS_t
 36398 ;;		 -> ring_buf1(67), 
 36399 ;;  c               1  [STACK] const unsigned char 
 36400 ;; Auto vars:     Size  Location     Type
 36401 ;;		None
 36402 ;; Return value:  Size  Location     Type
 36403 ;;                  1  [STACK] void 
 36404 ;; Registers used:
 36405 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 36406 ;; Tracked objects:
 36407 ;;		On entry : 0/3B
 36408 ;;		On exit  : 0/0
 36409 ;;		Unchanged: 0/0
 36410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36415 ;;Total ram usage:        0 bytes
 36416 ;; Hardware stack levels used:    1
 36417 ;; Hardware stack levels required when called:   15
 36418 ;; This function calls:
 36419 ;;		Nothing
 36420 ;; This function is called by:
 36421 ;;		_send_lcd_data_dma
 36422 ;;		_putch
 36423 ;; This function uses a reentrant model
 36424 ;;
 36425                           
 36426                           	psect	text124
 36427  000A34                     __ptext124:
 36428                           	opt callstack 0
 36429  000A34                     _ringBufS_put_dma:
 36430                           	opt callstack 0
 36431                           
 36432                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 36433                           ;stkvar	__this @ sp[(0)+-2]
 36434                           
 36435                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36436                           ;incstack = 0
 36437 ;; hardware stack exceeded
 36438  000A34  0EFE               	movlw	-2
 36439  000A36  006F FF8C  F034    	movff	plusw1,btemp+10
 36440  000A3C  0EFF               	movlw	-1
 36441  000A3E  006F FF8C  F035    	movff	plusw1,btemp+11
 36442  000A44  0E42               	movlw	66
 36443  000A46  2434               	addwf	(btemp+10)^0,w,c
 36444  000A48  6ED9               	movwf	fsr2l,c
 36445  000A4A  0E00               	movlw	0
 36446  000A4C  2035               	addwfc	(btemp+11)^0,w,c
 36447  000A4E  6EDA               	movwf	fsr2h,c
 36448  000A50  0E40               	movlw	64
 36449  000A52  60DF               	cpfslt	indf2,c
 36450  000A54  D040               	goto	l1746
 36451                           
 36452                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 36453                           ;stkvar	_c @ sp[(0)+-3]
 36454                           ;stkvar	__this @ sp[(0)+-2]
 36455  000A56  0EFE               	movlw	-2
 36456  000A58  006F FF8C  F034    	movff	plusw1,btemp+10
 36457  000A5E  0EFF               	movlw	-1
 36458  000A60  006F FF8C  F035    	movff	plusw1,btemp+11
 36459  000A66  0E40               	movlw	64
 36460  000A68  2434               	addwf	(btemp+10)^0,w,c
 36461  000A6A  6ED9               	movwf	fsr2l,c
 36462  000A6C  0E00               	movlw	0
 36463  000A6E  2035               	addwfc	(btemp+11)^0,w,c
 36464  000A70  6EDA               	movwf	fsr2h,c
 36465  000A72  50DF               	movf	indf2,w,c
 36466  000A74  6E35               	movwf	(btemp+11)^0,c
 36467                           
 36468                           ;stkvar	__this @ sp[(0)+-2]
 36469  000A76  0EFE               	movlw	-2
 36470  000A78  006F FF8C  F032    	movff	plusw1,btemp+8
 36471  000A7E  0EFF               	movlw	-1
 36472  000A80  006F FF8C  F033    	movff	plusw1,btemp+9
 36473  000A86  5035               	movf	(btemp+11)^0,w,c
 36474  000A88  2432               	addwf	(btemp+8)^0,w,c
 36475  000A8A  6ED9               	movwf	fsr2l,c
 36476  000A8C  0E00               	movlw	0
 36477  000A8E  2033               	addwfc	(btemp+9)^0,w,c
 36478  000A90  6EDA               	movwf	fsr2h,c
 36479  000A92  0EFD               	movlw	-3
 36480  000A94  006F FF8F FFDF     	movff	plusw1,indf2
 36481                           
 36482                           ;ringbufs.c: 71:   ++_this->head;
 36483                           ;stkvar	__this @ sp[(0)+-2]
 36484  000A9A  0EFE               	movlw	-2
 36485  000A9C  006F FF8C  F034    	movff	plusw1,btemp+10
 36486  000AA2  0EFF               	movlw	-1
 36487  000AA4  006F FF8C  F035    	movff	plusw1,btemp+11
 36488  000AAA  0E40               	movlw	64
 36489  000AAC  2434               	addwf	(btemp+10)^0,w,c
 36490  000AAE  6ED9               	movwf	fsr2l,c
 36491  000AB0  0E00               	movlw	0
 36492  000AB2  2035               	addwfc	(btemp+11)^0,w,c
 36493  000AB4  6EDA               	movwf	fsr2h,c
 36494  000AB6  2ADF               	incf	indf2,f,c
 36495                           
 36496                           ;ringbufs.c: 72:   ++_this->count;
 36497                           ;stkvar	__this @ sp[(0)+-2]
 36498  000AB8  0EFE               	movlw	-2
 36499  000ABA  006F FF8C  F034    	movff	plusw1,btemp+10
 36500  000AC0  0EFF               	movlw	-1
 36501  000AC2  006F FF8C  F035    	movff	plusw1,btemp+11
 36502  000AC8  0E42               	movlw	66
 36503  000ACA  2434               	addwf	(btemp+10)^0,w,c
 36504  000ACC  6ED9               	movwf	fsr2l,c
 36505  000ACE  0E00               	movlw	0
 36506  000AD0  2035               	addwfc	(btemp+11)^0,w,c
 36507  000AD2  6EDA               	movwf	fsr2h,c
 36508  000AD4  2ADF               	incf	indf2,f,c
 36509  000AD6                     l1746:
 36510                           
 36511                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 36512  000AD6  52E5               	movf	postdec1,f,c
 36513  000AD8  52E5               	movf	postdec1,f,c
 36514  000ADA  52E5               	movf	postdec1,f,c
 36515  000ADC  0012               	return		;funcret
 36516  000ADE                     __end_of_ringBufS_put_dma:
 36517                           	opt callstack 0
 36518                           
 36519 ;; *************** function _atoi *****************
 36520 ;; Defined at:
 36521 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 36522 ;; Parameters:    Size  Location     Type
 36523 ;;  s               2  [STACK] PTR const unsigned char 
 36524 ;;		 -> STR_95(127), STR_93(3), STR_92(3), STR_91(21), 
 36525 ;;		 -> STR_90(21), STR_89(21), STR_88(21), STR_87(21), 
 36526 ;;		 -> STR_86(21), STR_85(26), STR_84(15), STR_83(15), 
 36527 ;;		 -> STR_82(15), STR_81(15), STR_80(10), STR_79(10), 
 36528 ;;		 -> STR_78(19), STR_77(19), STR_74(3), STR_73(14), 
 36529 ;;		 -> STR_72(28), STR_71(28), STR_70(28), STR_69(22), 
 36530 ;;		 -> STR_68(22), STR_67(22), STR_66(22), STR_65(22), 
 36531 ;;		 -> STR_64(22), STR_63(22), STR_62(22), STR_61(22), 
 36532 ;;		 -> STR_60(21), STR_59(22), STR_58(22), STR_57(22), 
 36533 ;;		 -> STR_56(22), STR_55(22), STR_54(22), STR_53(24), 
 36534 ;;		 -> STR_52(24), STR_51(24), STR_50(30), STR_49(24), 
 36535 ;;		 -> STR_48(24), STR_47(23), STR_46(23), STR_45(23), 
 36536 ;;		 -> STR_44(23), STR_43(23), STR_42(23), STR_41(23), 
 36537 ;;		 -> STR_40(23), STR_39(23), STR_38(23), STR_37(23), 
 36538 ;;		 -> STR_36(23), STR_35(18), STR_34(17), STR_33(17), 
 36539 ;;		 -> STR_32(22), STR_31(22), STR_30(22), STR_29(14), 
 36540 ;;		 -> STR_28(14), STR_27(27), STR_26(27), STR_25(23), 
 36541 ;;		 -> STR_24(22), STR_23(22), STR_22(22), STR_21(22), 
 36542 ;;		 -> STR_20(23), STR_19(23), STR_18(23), STR_17(26), 
 36543 ;;		 -> STR_16(22), STR_15(21), STR_14(21), STR_13(21), 
 36544 ;;		 -> STR_12(21), STR_11(21), STR_10(21), STR_9(21), 
 36545 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 36546 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 36547 ;; Auto vars:     Size  Location     Type
 36548 ;;  n               2  [STACK] int 
 36549 ;;  neg             2  [STACK] int 
 36550 ;; Return value:  Size  Location     Type
 36551 ;;                  2  [STACK] int 
 36552 ;; Registers used:
 36553 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 36554 ;; Tracked objects:
 36555 ;;		On entry : 0/0
 36556 ;;		On exit  : 0/0
 36557 ;;		Unchanged: 0/0
 36558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36563 ;;Total ram usage:        0 bytes
 36564 ;; Hardware stack levels used:    1
 36565 ;; Hardware stack levels required when called:   16
 36566 ;; This function calls:
 36567 ;;		_isdigit
 36568 ;;		_isspace
 36569 ;; This function is called by:
 36570 ;;		_vfpfcnvrt
 36571 ;; This function uses a reentrant model
 36572 ;;
 36573                           
 36574                           	psect	text125
 36575  01C4F8                     __ptext125:
 36576                           	opt callstack 0
 36577  01C4F8                     _atoi:
 36578                           	opt callstack 0
 36579                           
 36580                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36581  01C4F8  0E09               	movlw	9
 36582  01C4FA  26E1               	addwf	fsr1l,f,c
 36583  01C4FC  0E00               	movlw	0
 36584  01C4FE  22E2               	addwfc	fsr1h,f,c
 36585                           
 36586                           ;stkvar	_n @ sp[(-9)+5]
 36587                           
 36588                           ;incstack = 0
 36589 ;; hardware stack exceeded
 36590  01C500  0EFC               	movlw	-4
 36591  01C502  6AE3               	clrf	plusw1,c
 36592  01C504  0EFD               	movlw	-3
 36593  01C506  6AE3               	clrf	plusw1,c
 36594                           
 36595                           ;stkvar	_neg @ sp[(-9)+7]
 36596  01C508  0EFE               	movlw	-2
 36597  01C50A  6AE3               	clrf	plusw1,c
 36598  01C50C  0EFF               	movlw	-1
 36599  01C50E  6AE3               	clrf	plusw1,c
 36600  01C510  D011               	goto	l11466
 36601  01C512                     l11464:
 36602                           
 36603                           ;stkvar	_s @ sp[(-9)+-2]
 36604  01C512  0EF5               	movlw	-11
 36605  01C514  50E3               	movf	plusw1,w,c
 36606  01C516  0F01               	addlw	1
 36607  01C518  6E2A               	movwf	btemp^0,c
 36608  01C51A  0EF5               	movlw	-11
 36609  01C51C  0060  F0AB  FFE3   	movff	btemp,plusw1
 36610  01C522  6A2A               	clrf	btemp^0,c
 36611  01C524  0EF6               	movlw	-10
 36612  01C526  50E3               	movf	plusw1,w,c
 36613  01C528  202A               	addwfc	btemp^0,w,c
 36614  01C52A  6E2A               	movwf	btemp^0,c
 36615  01C52C  0EF6               	movlw	-10
 36616  01C52E  0060  F0AB  FFE3   	movff	btemp,plusw1
 36617  01C534                     l11466:
 36618                           
 36619                           ;stkvar	_atoi$7210 @ sp[(-9)+4]
 36620  01C534  0EFB               	movlw	-5
 36621  01C536  6AE3               	clrf	plusw1,c
 36622  01C538  2AE3               	incf	plusw1,f,c
 36623                           
 36624                           ;stkvar	_s @ sp[(-9)+-2]
 36625  01C53A  50E1               	movf	fsr1l,w,c
 36626  01C53C  0FF5               	addlw	-11
 36627  01C53E  6ED9               	movwf	fsr2l,c
 36628  01C540  50E2               	movf	fsr1h,w,c
 36629  01C542  6EDA               	movwf	fsr2h,c
 36630  01C544  0EFF               	movlw	255
 36631  01C546  22DA               	addwfc	fsr2h,f,c
 36632  01C548  006F FF7B FFF6     	movff	postinc2,tblptrl
 36633  01C54E  006F FF77 FFF7     	movff	postdec2,tblptrh
 36634  01C554                     	if	0	;tblptru may be non-zero
 36635  01C554                     	endif
 36636  01C554                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36637  01C554  0E00               	movlw	low (__mediumconst shr (0+16))
 36638  01C556  6EF8               	movwf	tblptru,c
 36639  01C558                     	endif
 36640  01C558  0008               	tblrd		*
 36641  01C55A  50F5               	movf	tablat,w,c
 36642  01C55C  0A20               	xorlw	32
 36643  01C55E  B4D8               	btfsc	status,2,c
 36644  01C560  D023               	goto	l11474
 36645  01C562  0EF7               	movlw	247
 36646  01C564  6E34               	movwf	(btemp+10)^0,c
 36647  01C566  0EFF               	movlw	255
 36648  01C568  6E35               	movwf	(btemp+11)^0,c
 36649                           
 36650                           ;stkvar	_s @ sp[(-9)+-2]
 36651  01C56A  50E1               	movf	fsr1l,w,c
 36652  01C56C  0FF5               	addlw	-11
 36653  01C56E  6ED9               	movwf	fsr2l,c
 36654  01C570  50E2               	movf	fsr1h,w,c
 36655  01C572  6EDA               	movwf	fsr2h,c
 36656  01C574  0EFF               	movlw	255
 36657  01C576  22DA               	addwfc	fsr2h,f,c
 36658  01C578  006F FF7B FFF6     	movff	postinc2,tblptrl
 36659  01C57E  006F FF77 FFF7     	movff	postdec2,tblptrh
 36660  01C584                     	if	0	;tblptru may be non-zero
 36661  01C584                     	endif
 36662  01C584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36663  01C584  0E00               	movlw	low (__mediumconst shr (0+16))
 36664  01C586  6EF8               	movwf	tblptru,c
 36665  01C588                     	endif
 36666  01C588  0008               	tblrd		*
 36667  01C58A  50F5               	movf	tablat,w,c
 36668  01C58C  6E32               	movwf	(btemp+8)^0,c
 36669  01C58E  6A33               	clrf	(btemp+9)^0,c
 36670  01C590  5034               	movf	(btemp+10)^0,w,c
 36671  01C592  2632               	addwf	(btemp+8)^0,f,c
 36672  01C594  5035               	movf	(btemp+11)^0,w,c
 36673  01C596  2233               	addwfc	(btemp+9)^0,f,c
 36674  01C598  5033               	movf	(btemp+9)^0,w,c
 36675  01C59A  E104               	bnz	u10400
 36676  01C59C  0E05               	movlw	5
 36677  01C59E  5C32               	subwf	(btemp+8)^0,w,c
 36678  01C5A0  A0D8               	btfss	status,0,c
 36679  01C5A2  D002               	goto	l11474
 36680  01C5A4                     u10400:
 36681                           
 36682                           ;stkvar	_atoi$7210 @ sp[(-9)+4]
 36683  01C5A4  0EFB               	movlw	-5
 36684  01C5A6  6AE3               	clrf	plusw1,c
 36685  01C5A8                     l11474:
 36686                           
 36687                           ;stkvar	_atoi$7210 @ sp[(-9)+4]
 36688  01C5A8  0EFB               	movlw	-5
 36689  01C5AA  50E3               	movf	plusw1,w,c
 36690  01C5AC  6E34               	movwf	(btemp+10)^0,c
 36691  01C5AE  6A35               	clrf	(btemp+11)^0,c
 36692                           
 36693                           ;stkvar	_atoi$7209 @ sp[(-9)+2]
 36694  01C5B0  0EF9               	movlw	-7
 36695  01C5B2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 36696  01C5B8  0EFA               	movlw	-6
 36697  01C5BA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 36698                           
 36699                           ;stkvar	_atoi$7209 @ sp[(-9)+2]
 36700  01C5C0  0EF9               	movlw	-7
 36701  01C5C2  006F FF8C  F02A    	movff	plusw1,btemp
 36702  01C5C8  0EFA               	movlw	-6
 36703  01C5CA  50E3               	movf	plusw1,w,c
 36704  01C5CC  102A               	iorwf	btemp^0,w,c
 36705  01C5CE  B4D8               	btfsc	status,2,c
 36706  01C5D0  D01F               	goto	l11484
 36707  01C5D2  D79F               	goto	l11464
 36708  01C5D4                     l11480:
 36709  01C5D4  0E01               	movlw	1
 36710  01C5D6  6E34               	movwf	(btemp+10)^0,c
 36711  01C5D8  0E00               	movlw	0
 36712  01C5DA  6E35               	movwf	(btemp+11)^0,c
 36713                           
 36714                           ;stkvar	_neg @ sp[(-9)+7]
 36715  01C5DC  0EFE               	movlw	-2
 36716  01C5DE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 36717  01C5E4  0EFF               	movlw	-1
 36718  01C5E6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 36719  01C5EC                     l11482:
 36720                           
 36721                           ;stkvar	_s @ sp[(-9)+-2]
 36722  01C5EC  0EF5               	movlw	-11
 36723  01C5EE  50E3               	movf	plusw1,w,c
 36724  01C5F0  0F01               	addlw	1
 36725  01C5F2  6E2A               	movwf	btemp^0,c
 36726  01C5F4  0EF5               	movlw	-11
 36727  01C5F6  0060  F0AB  FFE3   	movff	btemp,plusw1
 36728  01C5FC  6A2A               	clrf	btemp^0,c
 36729  01C5FE  0EF6               	movlw	-10
 36730  01C600  50E3               	movf	plusw1,w,c
 36731  01C602  202A               	addwfc	btemp^0,w,c
 36732  01C604  6E2A               	movwf	btemp^0,c
 36733  01C606  0EF6               	movlw	-10
 36734  01C608  0060  F0AB  FFE3   	movff	btemp,plusw1
 36735  01C60E  D053               	goto	l11490
 36736  01C610                     l11484:
 36737                           
 36738                           ;stkvar	_s @ sp[(-9)+-2]
 36739  01C610  50E1               	movf	fsr1l,w,c
 36740  01C612  0FF5               	addlw	-11
 36741  01C614  6ED9               	movwf	fsr2l,c
 36742  01C616  50E2               	movf	fsr1h,w,c
 36743  01C618  6EDA               	movwf	fsr2h,c
 36744  01C61A  0EFF               	movlw	255
 36745  01C61C  22DA               	addwfc	fsr2h,f,c
 36746  01C61E  006F FF7B FFF6     	movff	postinc2,tblptrl
 36747  01C624  006F FF77 FFF7     	movff	postdec2,tblptrh
 36748  01C62A                     	if	0	;tblptru may be non-zero
 36749  01C62A                     	endif
 36750  01C62A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36751  01C62A  0E00               	movlw	low (__mediumconst shr (0+16))
 36752  01C62C  6EF8               	movwf	tblptru,c
 36753  01C62E                     	endif
 36754  01C62E  0008               	tblrd		*
 36755  01C630  50F5               	movf	tablat,w,c
 36756  01C632  6E34               	movwf	(btemp+10)^0,c
 36757  01C634  6A35               	clrf	(btemp+11)^0,c
 36758                           
 36759                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 36760                           ; Switch size 1, requested type "simple"
 36761                           ; Number of cases is 1, Range of values is 0 to 0
 36762                           ; switch strategies available:
 36763                           ; Name         Instructions Cycles
 36764                           ; simple_byte            4     3 (average)
 36765                           ;	Chosen strategy is simple_byte
 36766  01C636  5035               	movf	(btemp+11)^0,w,c
 36767  01C638  0A00               	xorlw	0	; case 0
 36768  01C63A  A4D8               	btfss	status,2,c
 36769  01C63C  D03C               	goto	l11490
 36770                           
 36771                           ; Switch size 1, requested type "simple"
 36772                           ; Number of cases is 2, Range of values is 43 to 45
 36773                           ; switch strategies available:
 36774                           ; Name         Instructions Cycles
 36775                           ; simple_byte            7     4 (average)
 36776                           ;	Chosen strategy is simple_byte
 36777  01C63E  5034               	movf	(btemp+10)^0,w,c
 36778  01C640  0A2B               	xorlw	43	; case 43
 36779  01C642  B4D8               	btfsc	status,2,c
 36780  01C644  D7D3               	goto	l11482
 36781  01C646  0A06               	xorlw	6	; case 45
 36782  01C648  B4D8               	btfsc	status,2,c
 36783  01C64A  D7C4               	goto	l11480
 36784  01C64C  D034               	goto	l11490
 36785  01C64E                     l11486:
 36786                           
 36787                           ;stkvar	_n @ sp[(-9)+5]
 36788  01C64E  0EFC               	movlw	-4
 36789  01C650  006F FF8C  F034    	movff	plusw1,btemp+10
 36790  01C656  0EFD               	movlw	-3
 36791  01C658  006F FF8C  F035    	movff	plusw1,btemp+11
 36792  01C65E  0E0A               	movlw	10
 36793  01C660  0234               	mulwf	(btemp+10)^0,c
 36794  01C662  006F FFCC  F032    	movff	prodl,btemp+8
 36795  01C668  006F FFD0  F033    	movff	prodh,btemp+9
 36796  01C66E  0235               	mulwf	(btemp+11)^0,c
 36797  01C670  50F3               	movf	prodl,w,c
 36798  01C672  2633               	addwf	(btemp+9)^0,f,c
 36799                           
 36800                           ;stkvar	_s @ sp[(-9)+-2]
 36801  01C674  50E1               	movf	fsr1l,w,c
 36802  01C676  0FF5               	addlw	-11
 36803  01C678  6ED9               	movwf	fsr2l,c
 36804  01C67A  50E2               	movf	fsr1h,w,c
 36805  01C67C  6EDA               	movwf	fsr2h,c
 36806  01C67E  0EFF               	movlw	255
 36807  01C680  22DA               	addwfc	fsr2h,f,c
 36808  01C682  006F FF7B FFF6     	movff	postinc2,tblptrl
 36809  01C688  006F FF77 FFF7     	movff	postdec2,tblptrh
 36810  01C68E                     	if	0	;tblptru may be non-zero
 36811  01C68E                     	endif
 36812  01C68E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36813  01C68E  0E00               	movlw	low (__mediumconst shr (0+16))
 36814  01C690  6EF8               	movwf	tblptru,c
 36815  01C692                     	endif
 36816  01C692  0008               	tblrd		*
 36817  01C694  50F5               	movf	tablat,w,c
 36818  01C696  5E32               	subwf	(btemp+8)^0,f,c
 36819  01C698  0E00               	movlw	0
 36820  01C69A  5A33               	subwfb	(btemp+9)^0,f,c
 36821  01C69C  0E30               	movlw	48
 36822  01C69E  2632               	addwf	(btemp+8)^0,f,c
 36823  01C6A0  0E00               	movlw	0
 36824  01C6A2  2233               	addwfc	(btemp+9)^0,f,c
 36825                           
 36826                           ;stkvar	_n @ sp[(-9)+5]
 36827  01C6A4  0EFC               	movlw	-4
 36828  01C6A6  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 36829  01C6AC  0EFD               	movlw	-3
 36830  01C6AE  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 36831  01C6B4  D79B               	goto	l11482
 36832  01C6B6                     l11490:
 36833  01C6B6  0ED0               	movlw	208
 36834  01C6B8  6E34               	movwf	(btemp+10)^0,c
 36835  01C6BA  0EFF               	movlw	255
 36836  01C6BC  6E35               	movwf	(btemp+11)^0,c
 36837                           
 36838                           ;stkvar	_s @ sp[(-9)+-2]
 36839  01C6BE  50E1               	movf	fsr1l,w,c
 36840  01C6C0  0FF5               	addlw	-11
 36841  01C6C2  6ED9               	movwf	fsr2l,c
 36842  01C6C4  50E2               	movf	fsr1h,w,c
 36843  01C6C6  6EDA               	movwf	fsr2h,c
 36844  01C6C8  0EFF               	movlw	255
 36845  01C6CA  22DA               	addwfc	fsr2h,f,c
 36846  01C6CC  006F FF7B FFF6     	movff	postinc2,tblptrl
 36847  01C6D2  006F FF77 FFF7     	movff	postdec2,tblptrh
 36848  01C6D8                     	if	0	;tblptru may be non-zero
 36849  01C6D8                     	endif
 36850  01C6D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36851  01C6D8  0E00               	movlw	low (__mediumconst shr (0+16))
 36852  01C6DA  6EF8               	movwf	tblptru,c
 36853  01C6DC                     	endif
 36854  01C6DC  0008               	tblrd		*
 36855  01C6DE  50F5               	movf	tablat,w,c
 36856  01C6E0  6E32               	movwf	(btemp+8)^0,c
 36857  01C6E2  6A33               	clrf	(btemp+9)^0,c
 36858  01C6E4  5034               	movf	(btemp+10)^0,w,c
 36859  01C6E6  2632               	addwf	(btemp+8)^0,f,c
 36860  01C6E8  5035               	movf	(btemp+11)^0,w,c
 36861  01C6EA  2233               	addwfc	(btemp+9)^0,f,c
 36862  01C6EC  5033               	movf	(btemp+9)^0,w,c
 36863  01C6EE  E106               	bnz	u10420
 36864  01C6F0  0E0A               	movlw	10
 36865  01C6F2  5C32               	subwf	(btemp+8)^0,w,c
 36866  01C6F4  B0D8               	btfsc	status,0,c
 36867  01C6F6  D002               	goto	u10420
 36868  01C6F8  0E01               	movlw	1
 36869  01C6FA  D001               	goto	u10430
 36870  01C6FC                     u10420:
 36871  01C6FC  0E00               	movlw	0
 36872  01C6FE                     u10430:
 36873  01C6FE  6E34               	movwf	(btemp+10)^0,c
 36874  01C700  6A35               	clrf	(btemp+11)^0,c
 36875                           
 36876                           ;stkvar	_atoi$7211 @ sp[(-9)+0]
 36877  01C702  0EF7               	movlw	-9
 36878  01C704  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 36879  01C70A  0EF8               	movlw	-8
 36880  01C70C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 36881                           
 36882                           ;stkvar	_atoi$7211 @ sp[(-9)+0]
 36883  01C712  0EF7               	movlw	-9
 36884  01C714  006F FF8C  F02A    	movff	plusw1,btemp
 36885  01C71A  0EF8               	movlw	-8
 36886  01C71C  50E3               	movf	plusw1,w,c
 36887  01C71E  102A               	iorwf	btemp^0,w,c
 36888  01C720  A4D8               	btfss	status,2,c
 36889  01C722  D795               	goto	l11486
 36890                           
 36891                           ;stkvar	_neg @ sp[(-9)+7]
 36892  01C724  0EFE               	movlw	-2
 36893  01C726  006F FF8C  F02A    	movff	plusw1,btemp
 36894  01C72C  0EFF               	movlw	-1
 36895  01C72E  50E3               	movf	plusw1,w,c
 36896  01C730  102A               	iorwf	btemp^0,w,c
 36897  01C732  A4D8               	btfss	status,2,c
 36898  01C734  D00E               	goto	l11500
 36899                           
 36900                           ;stkvar	_n @ sp[(-9)+5]
 36901  01C736  0EFC               	movlw	-4
 36902  01C738  006F FF8C  F02A    	movff	plusw1,btemp
 36903  01C73E  1E2A               	comf	btemp^0,f,c
 36904  01C740  0EFD               	movlw	-3
 36905  01C742  006F FF8C  F02B    	movff	plusw1,btemp+1
 36906  01C748  1E2B               	comf	(btemp+1)^0,f,c
 36907  01C74A  2A2A               	incf	btemp^0,f,c
 36908  01C74C  B4D8               	btfsc	status,2,c
 36909  01C74E  2A2B               	incf	(btemp+1)^0,f,c
 36910  01C750  D008               	goto	l3458
 36911  01C752                     l11500:
 36912                           
 36913                           ;stkvar	_n @ sp[(-9)+5]
 36914  01C752  0EFC               	movlw	-4
 36915  01C754  006F FF8C  F02A    	movff	plusw1,btemp
 36916  01C75A  0EFD               	movlw	-3
 36917  01C75C  006F FF8C  F02B    	movff	plusw1,btemp+1
 36918  01C762                     l3458:
 36919                           
 36920                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 36921  01C762  0EF5               	movlw	245
 36922  01C764  26E1               	addwf	fsr1l,f,c
 36923  01C766  0EFF               	movlw	255
 36924  01C768  22E2               	addwfc	fsr1h,f,c
 36925  01C76A  0012               	return		;funcret
 36926  01C76C                     __end_of_atoi:
 36927                           	opt callstack 0
 36928                           
 36929 ;; *************** function _isspace *****************
 36930 ;; Defined at:
 36931 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 36932 ;; Parameters:    Size  Location     Type
 36933 ;;  c               2  [STACK] int 
 36934 ;; Auto vars:     Size  Location     Type
 36935 ;;		None
 36936 ;; Return value:  Size  Location     Type
 36937 ;;                  2  [STACK] int 
 36938 ;; Registers used:
 36939 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 36940 ;; Tracked objects:
 36941 ;;		On entry : 0/0
 36942 ;;		On exit  : 0/0
 36943 ;;		Unchanged: 0/0
 36944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36949 ;;Total ram usage:        0 bytes
 36950 ;; Hardware stack levels used:    1
 36951 ;; Hardware stack levels required when called:   15
 36952 ;; This function calls:
 36953 ;;		Nothing
 36954 ;; This function is called by:
 36955 ;;		_atoi
 36956 ;; This function uses a reentrant model
 36957 ;;
 36958                           
 36959                           	psect	text126
 36960  001B68                     __ptext126:
 36961                           	opt callstack 0
 36962  001B68                     _isspace:
 36963                           	opt callstack 0
 36964                           
 36965                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36966  001B68  52E6               	movf	postinc1,f,c
 36967                           
 36968                           ;stkvar	_isspace$7260 @ sp[(-1)+0]
 36969                           
 36970                           ;incstack = 0
 36971 ;; hardware stack exceeded
 36972  001B6A  0EFF               	movlw	-1
 36973  001B6C  6AE3               	clrf	plusw1,c
 36974  001B6E  2AE3               	incf	plusw1,f,c
 36975                           
 36976                           ;stkvar	_c @ sp[(-1)+-2]
 36977  001B70  0EFD               	movlw	-3
 36978  001B72  006F FF8C  F02A    	movff	plusw1,btemp
 36979  001B78  0E20               	movlw	32
 36980  001B7A  182A               	xorwf	btemp^0,w,c
 36981  001B7C  E104               	bnz	u9250
 36982  001B7E  0EFE               	movlw	-2
 36983  001B80  50E3               	movf	plusw1,w,c
 36984  001B82  B4D8               	btfsc	status,2,c
 36985  001B84  D012               	goto	l10866
 36986  001B86                     u9250:
 36987                           
 36988                           ;stkvar	_c @ sp[(-1)+-2]
 36989  001B86  0EFD               	movlw	-3
 36990  001B88  50E3               	movf	plusw1,w,c
 36991  001B8A  0FF7               	addlw	247
 36992  001B8C  6E34               	movwf	(btemp+10)^0,c
 36993  001B8E  0EFE               	movlw	-2
 36994  001B90  006F FF8C  F035    	movff	plusw1,btemp+11
 36995  001B96  0EFF               	movlw	255
 36996  001B98  2235               	addwfc	(btemp+11)^0,f,c
 36997  001B9A  5035               	movf	(btemp+11)^0,w,c
 36998  001B9C  E104               	bnz	u9260
 36999  001B9E  0E05               	movlw	5
 37000  001BA0  5C34               	subwf	(btemp+10)^0,w,c
 37001  001BA2  A0D8               	btfss	status,0,c
 37002  001BA4  D002               	goto	l10866
 37003  001BA6                     u9260:
 37004                           
 37005                           ;stkvar	_isspace$7260 @ sp[(-1)+0]
 37006  001BA6  0EFF               	movlw	-1
 37007  001BA8  6AE3               	clrf	plusw1,c
 37008  001BAA                     l10866:
 37009                           
 37010                           ;stkvar	_isspace$7260 @ sp[(-1)+0]
 37011  001BAA  0EFF               	movlw	-1
 37012  001BAC  50E3               	movf	plusw1,w,c
 37013  001BAE  6E2A               	movwf	btemp^0,c
 37014  001BB0  6A2B               	clrf	(btemp+1)^0,c
 37015                           
 37016                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 37017  001BB2  52E5               	movf	postdec1,f,c
 37018  001BB4  52E5               	movf	postdec1,f,c
 37019  001BB6  52E5               	movf	postdec1,f,c
 37020  001BB8  0012               	return		;funcret
 37021  001BBA                     __end_of_isspace:
 37022                           	opt callstack 0
 37023                           
 37024 ;; *************** function _isdigit *****************
 37025 ;; Defined at:
 37026 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 37027 ;; Parameters:    Size  Location     Type
 37028 ;;  c               2  [STACK] int 
 37029 ;; Auto vars:     Size  Location     Type
 37030 ;;		None
 37031 ;; Return value:  Size  Location     Type
 37032 ;;                  2  [STACK] int 
 37033 ;; Registers used:
 37034 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 37035 ;; Tracked objects:
 37036 ;;		On entry : 0/0
 37037 ;;		On exit  : 0/0
 37038 ;;		Unchanged: 0/0
 37039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37044 ;;Total ram usage:        0 bytes
 37045 ;; Hardware stack levels used:    1
 37046 ;; Hardware stack levels required when called:   15
 37047 ;; This function calls:
 37048 ;;		Nothing
 37049 ;; This function is called by:
 37050 ;;		_vfpfcnvrt
 37051 ;;		_atoi
 37052 ;; This function uses a reentrant model
 37053 ;;
 37054                           
 37055                           	psect	text127
 37056  002382                     __ptext127:
 37057                           	opt callstack 0
 37058  002382                     _isdigit:
 37059                           	opt callstack 0
 37060                           
 37061                           ;stkvar	_c @ sp[(0)+-2]
 37062                           
 37063                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37064                           ;incstack = 0
 37065 ;; hardware stack exceeded
 37066  002382  0EFE               	movlw	-2
 37067  002384  50E3               	movf	plusw1,w,c
 37068  002386  0FD0               	addlw	208
 37069  002388  6E34               	movwf	(btemp+10)^0,c
 37070  00238A  0EFF               	movlw	-1
 37071  00238C  006F FF8C  F035    	movff	plusw1,btemp+11
 37072  002392  0EFF               	movlw	255
 37073  002394  2235               	addwfc	(btemp+11)^0,f,c
 37074  002396  5035               	movf	(btemp+11)^0,w,c
 37075  002398  E106               	bnz	u8040
 37076  00239A  0E0A               	movlw	10
 37077  00239C  5C34               	subwf	(btemp+10)^0,w,c
 37078  00239E  B0D8               	btfsc	status,0,c
 37079  0023A0  D002               	goto	u8040
 37080  0023A2  0E01               	movlw	1
 37081  0023A4  D001               	goto	u8050
 37082  0023A6                     u8040:
 37083  0023A6  0E00               	movlw	0
 37084  0023A8                     u8050:
 37085  0023A8  6E2A               	movwf	btemp^0,c
 37086  0023AA  6A2B               	clrf	(btemp+1)^0,c
 37087                           
 37088                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 37089  0023AC  52E5               	movf	postdec1,f,c
 37090  0023AE  52E5               	movf	postdec1,f,c
 37091  0023B0  0012               	return		;funcret
 37092  0023B2                     __end_of_isdigit:
 37093                           	opt callstack 0
 37094                           
 37095 ;; *************** function _set_vterm *****************
 37096 ;; Defined at:
 37097 ;;		line 110 in file "mconfig.c"
 37098 ;; Parameters:    Size  Location     Type
 37099 ;;  vterm           1  [STACK] const unsigned char 
 37100 ;; Auto vars:     Size  Location     Type
 37101 ;;		None
 37102 ;; Return value:  Size  Location     Type
 37103 ;;                  1  [STACK] unsigned char 
 37104 ;; Registers used:
 37105 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 37106 ;; Tracked objects:
 37107 ;;		On entry : 0/2
 37108 ;;		On exit  : 0/0
 37109 ;;		Unchanged: 0/0
 37110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37115 ;;Total ram usage:        0 bytes
 37116 ;; Hardware stack levels used:    1
 37117 ;; Hardware stack levels required when called:   15
 37118 ;; This function calls:
 37119 ;;		Nothing
 37120 ;; This function is called by:
 37121 ;;		_main
 37122 ;;		_check_help
 37123 ;; This function uses a reentrant model
 37124 ;;
 37125                           
 37126                           	psect	text128
 37127  0028A2                     __ptext128:
 37128                           	opt callstack 0
 37129  0028A2                     _set_vterm:
 37130                           	opt callstack 15
 37131                           
 37132                           ;mconfig.c: 110: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 111: {;mconfig.c: 112
      +                          :  D.vterm = vterm & 0x03;
 37133                           ;stkvar	_vterm @ sp[(0)+-1]
 37134                           
 37135                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37136                           ;incstack = 0
 37137  0028A2  0EFF               	movlw	-1
 37138  0028A4  006F FF8C  F035    	movff	plusw1,btemp+11
 37139  0028AA  0E03               	movlw	3
 37140  0028AC  1635               	andwf	(btemp+11)^0,f,c
 37141  0028AE  EE23  F0BF         	lfsr	2,_D+640
 37142  0028B2  50DF               	movf	223,w,c
 37143  0028B4  1835               	xorwf	(btemp+11)^0,w,c
 37144  0028B6  0BFE               	andlw	-2
 37145  0028B8  1835               	xorwf	(btemp+11)^0,w,c
 37146  0028BA  6EDF               	movwf	223,c
 37147                           
 37148                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 37149  0028BC  52E5               	movf	postdec1,f,c
 37150  0028BE  0012               	return		;funcret
 37151  0028C0                     __end_of_set_vterm:
 37152                           	opt callstack 0
 37153                           
 37154 ;; *************** function _set_temp_display_help *****************
 37155 ;; Defined at:
 37156 ;;		line 217 in file "mconfig.c"
 37157 ;; Parameters:    Size  Location     Type
 37158 ;;  new_response    1  [STACK] const enum E16677
 37159 ;; Auto vars:     Size  Location     Type
 37160 ;;		None
 37161 ;; Return value:  Size  Location     Type
 37162 ;;                  1  [STACK] enum E16677
 37163 ;; Registers used:
 37164 ;;		wreg, fsr1l, fsr1h
 37165 ;; Tracked objects:
 37166 ;;		On entry : 0/2
 37167 ;;		On exit  : 3F/2
 37168 ;;		Unchanged: 0/0
 37169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37174 ;;Total ram usage:        0 bytes
 37175 ;; Hardware stack levels used:    1
 37176 ;; Hardware stack levels required when called:   15
 37177 ;; This function calls:
 37178 ;;		Nothing
 37179 ;; This function is called by:
 37180 ;;		_check_help
 37181 ;; This function uses a reentrant model
 37182 ;;
 37183                           
 37184                           	psect	text129
 37185  002A02                     __ptext129:
 37186                           	opt callstack 0
 37187  002A02                     _set_temp_display_help:
 37188                           	opt callstack 14
 37189                           
 37190                           ;mconfig.c: 217: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 218: {;mconfig.c: 219:  static D_CODES old_info;;mconfig.c: 221:  old_info = V.respon
      +                          se.help_temp;
 37191                           
 37192                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37193                           ;incstack = 0
 37194  002A02  0102               	movlb	2	; () banked
 37195  002A04  51A9               	movf	(_V+162)& (0+255),w,b	;volatile
 37196                           
 37197                           ; BSR set to: 2
 37198                           ;mconfig.c: 222:  V.response.help_temp = new_response_info;
 37199                           ;stkvar	_new_response_info @ sp[(0)+-1]
 37200  002A06  0EFF               	movlw	-1
 37201  002A08  006F FF8C  F2A9    	movff	plusw1,_V+162	;volatile
 37202                           
 37203                           ; BSR set to: 2
 37204                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 37205  002A0E  52E5               	movf	postdec1,f,c
 37206  002A10  0012               	return		;funcret
 37207  002A12                     __end_of_set_temp_display_help:
 37208                           	opt callstack 0
 37209                           
 37210 ;; *************** function _set_display_info *****************
 37211 ;; Defined at:
 37212 ;;		line 206 in file "mconfig.c"
 37213 ;; Parameters:    Size  Location     Type
 37214 ;;  new_response    1  [STACK] const enum E16677
 37215 ;; Auto vars:     Size  Location     Type
 37216 ;;		None
 37217 ;; Return value:  Size  Location     Type
 37218 ;;                  1  [STACK] enum E17160
 37219 ;; Registers used:
 37220 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 37221 ;; Tracked objects:
 37222 ;;		On entry : 0/2
 37223 ;;		On exit  : 0/0
 37224 ;;		Unchanged: 0/0
 37225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37230 ;;Total ram usage:        0 bytes
 37231 ;; Hardware stack levels used:    1
 37232 ;; Hardware stack levels required when called:   16
 37233 ;; This function calls:
 37234 ;;		_TimerDone
 37235 ;; This function is called by:
 37236 ;;		_main
 37237 ;;		_check_help
 37238 ;; This function uses a reentrant model
 37239 ;;
 37240                           
 37241                           	psect	text130
 37242  0028C0                     __ptext130:
 37243                           	opt callstack 0
 37244  0028C0                     _set_display_info:
 37245                           	opt callstack 14
 37246                           
 37247                           ;mconfig.c: 206: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          7: {;mconfig.c: 208:  static D_CODES old_info = DIS_STR;;mconfig.c: 210:  if (TimerDone(
      +                          TMR_INFO)) {
 37248                           
 37249                           ; BSR set to: 2
 37250                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37251                           ;incstack = 0
 37252  0028C0  0E07               	movlw	7
 37253  0028C2  6EE6               	movwf	postinc1,c
 37254  0028C4  EC5B  F012         	call	_TimerDone	;wreg free
 37255  0028C8  502A               	movf	btemp^0,w,c
 37256  0028CA  B4D8               	btfsc	status,2,c
 37257  0028CC  D006               	goto	l1881
 37258                           
 37259                           ;mconfig.c: 211:   old_info = V.response.info;
 37260  0028CE  0102               	movlb	2	; () banked
 37261  0028D0  51A8               	movf	(_V+161)& (0+255),w,b	;volatile
 37262                           
 37263                           ; BSR set to: 2
 37264                           ;mconfig.c: 212:   V.response.info = new_response_info;
 37265                           ;stkvar	_new_response_info @ sp[(0)+-1]
 37266  0028D2  0EFF               	movlw	-1
 37267  0028D4  006F FF8C  F2A8    	movff	plusw1,_V+161	;volatile
 37268  0028DA                     l1881:
 37269                           
 37270                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 37271  0028DA  52E5               	movf	postdec1,f,c
 37272  0028DC  0012               	return		;funcret
 37273  0028DE                     __end_of_set_display_info:
 37274                           	opt callstack 0
 37275                           
 37276 ;; *************** function _mode_lamp_dim *****************
 37277 ;; Defined at:
 37278 ;;		line 13 in file "mconfig.c"
 37279 ;; Parameters:    Size  Location     Type
 37280 ;;  level           2  [STACK] const unsigned short 
 37281 ;; Auto vars:     Size  Location     Type
 37282 ;;		None
 37283 ;; Return value:  Size  Location     Type
 37284 ;;                  1  [STACK] void 
 37285 ;; Registers used:
 37286 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 37287 ;; Tracked objects:
 37288 ;;		On entry : 0/2
 37289 ;;		On exit  : 0/0
 37290 ;;		Unchanged: 0/0
 37291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37296 ;;Total ram usage:        0 bytes
 37297 ;; Hardware stack levels used:    1
 37298 ;; Hardware stack levels required when called:   16
 37299 ;; This function calls:
 37300 ;;		_PWM8_LoadDutyValue
 37301 ;; This function is called by:
 37302 ;;		_main
 37303 ;;		_check_help
 37304 ;; This function uses a reentrant model
 37305 ;;
 37306                           
 37307                           	psect	text131
 37308  002912                     __ptext131:
 37309                           	opt callstack 0
 37310  002912                     _mode_lamp_dim:
 37311                           	opt callstack 14
 37312                           
 37313                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 37314                           ;stkvar	_level @ sp[(0)+-2]
 37315                           
 37316                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37317                           ;incstack = 0
 37318  002912  0EFE               	movlw	-2
 37319  002914  006F FF8F FFE6     	movff	plusw1,postinc1
 37320  00291A  006F FF8F FFE6     	movff	plusw1,postinc1
 37321  002920  EC6F  F00F         	call	_PWM8_LoadDutyValue	;wreg free
 37322                           
 37323                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 37324  002924  52E5               	movf	postdec1,f,c
 37325  002926  52E5               	movf	postdec1,f,c
 37326  002928  0012               	return		;funcret
 37327  00292A                     __end_of_mode_lamp_dim:
 37328                           	opt callstack 0
 37329                           
 37330 ;; *************** function _mode_lamp_bright *****************
 37331 ;; Defined at:
 37332 ;;		line 18 in file "mconfig.c"
 37333 ;; Parameters:    Size  Location     Type
 37334 ;;		None
 37335 ;; Auto vars:     Size  Location     Type
 37336 ;;		None
 37337 ;; Return value:  Size  Location     Type
 37338 ;;                  1  [STACK] void 
 37339 ;; Registers used:
 37340 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 37341 ;; Tracked objects:
 37342 ;;		On entry : 0/0
 37343 ;;		On exit  : 0/0
 37344 ;;		Unchanged: 0/0
 37345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37350 ;;Total ram usage:        0 bytes
 37351 ;; Hardware stack levels used:    1
 37352 ;; Hardware stack levels required when called:   16
 37353 ;; This function calls:
 37354 ;;		_PWM8_LoadDutyValue
 37355 ;; This function is called by:
 37356 ;;		_check_help
 37357 ;; This function uses a reentrant model
 37358 ;;
 37359                           
 37360                           	psect	text132
 37361  002A3E                     __ptext132:
 37362                           	opt callstack 0
 37363  002A3E                     _mode_lamp_bright:
 37364                           	opt callstack 13
 37365                           
 37366                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 37367                           
 37368                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37369                           ;incstack = 0
 37370  002A3E  0E2C               	movlw	44
 37371  002A40  6EE6               	movwf	postinc1,c
 37372  002A42  0E01               	movlw	1
 37373  002A44  6EE6               	movwf	postinc1,c
 37374  002A46  EC6F  F00F         	call	_PWM8_LoadDutyValue	;wreg free
 37375                           
 37376                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 37377  002A4A  0012               	return		;funcret
 37378  002A4C                     __end_of_mode_lamp_bright:
 37379                           	opt callstack 0
 37380                           
 37381 ;; *************** function _PWM8_LoadDutyValue *****************
 37382 ;; Defined at:
 37383 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 37384 ;; Parameters:    Size  Location     Type
 37385 ;;  dutyValue       2  [STACK] unsigned short 
 37386 ;; Auto vars:     Size  Location     Type
 37387 ;;		None
 37388 ;; Return value:  Size  Location     Type
 37389 ;;                  1  [STACK] void 
 37390 ;; Registers used:
 37391 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 37392 ;; Tracked objects:
 37393 ;;		On entry : 0/2
 37394 ;;		On exit  : 0/0
 37395 ;;		Unchanged: 0/0
 37396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37401 ;;Total ram usage:        0 bytes
 37402 ;; Hardware stack levels used:    1
 37403 ;; Hardware stack levels required when called:   15
 37404 ;; This function calls:
 37405 ;;		Nothing
 37406 ;; This function is called by:
 37407 ;;		_mode_lamp_dim
 37408 ;;		_mode_lamp_bright
 37409 ;; This function uses a reentrant model
 37410 ;;
 37411                           
 37412                           	psect	text133
 37413  001EDE                     __ptext133:
 37414                           	opt callstack 0
 37415  001EDE                     _PWM8_LoadDutyValue:
 37416                           	opt callstack 14
 37417                           
 37418                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 37419                           ;stkvar	_dutyValue @ sp[(0)+-2]
 37420                           
 37421                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37422                           ;incstack = 0
 37423  001EDE  0EFE               	movlw	-2
 37424  001EE0  006F FF8C  F034    	movff	plusw1,btemp+10
 37425  001EE6  0EFF               	movlw	-1
 37426  001EE8  006F FF8C  F035    	movff	plusw1,btemp+11
 37427  001EEE  90D8               	bcf	status,0,c
 37428  001EF0  3235               	rrcf	(btemp+11)^0,f,c
 37429  001EF2  3234               	rrcf	(btemp+10)^0,f,c
 37430  001EF4  90D8               	bcf	status,0,c
 37431  001EF6  3235               	rrcf	(btemp+11)^0,f,c
 37432  001EF8  3234               	rrcf	(btemp+10)^0,f,c
 37433  001EFA  5034               	movf	(btemp+10)^0,w,c
 37434  001EFC  6E61               	movwf	97,c	;volatile
 37435                           
 37436                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 37437                           ;stkvar	_dutyValue @ sp[(0)+-2]
 37438  001EFE  0EFE               	movlw	-2
 37439  001F00  006F FF8C  F035    	movff	plusw1,btemp+11
 37440  001F06  0E03               	movlw	3
 37441  001F08  1635               	andwf	(btemp+11)^0,f,c
 37442  001F0A  0E06               	movlw	6
 37443  001F0C  6E2A               	movwf	btemp^0,c
 37444  001F0E                     u12245:
 37445  001F0E  90D8               	bcf	status,0,c
 37446  001F10  3635               	rlcf	(btemp+11)^0,f,c
 37447  001F12  2E2A               	decfsz	btemp^0,f,c
 37448  001F14  D7FC               	goto	u12245
 37449  001F16  5035               	movf	(btemp+11)^0,w,c
 37450  001F18  6E60               	movwf	96,c	;volatile
 37451                           
 37452                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 37453  001F1A  52E5               	movf	postdec1,f,c
 37454  001F1C  52E5               	movf	postdec1,f,c
 37455  001F1E  0012               	return		;funcret
 37456  001F20                     __end_of_PWM8_LoadDutyValue:
 37457                           	opt callstack 0
 37458                           
 37459 ;; *************** function _help_button *****************
 37460 ;; Defined at:
 37461 ;;		line 26 in file "mconfig.c"
 37462 ;; Parameters:    Size  Location     Type
 37463 ;;		None
 37464 ;; Auto vars:     Size  Location     Type
 37465 ;;		None
 37466 ;; Return value:  Size  Location     Type
 37467 ;;                  1  [STACK] _Bool 
 37468 ;; Registers used:
 37469 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 37470 ;; Tracked objects:
 37471 ;;		On entry : 0/2
 37472 ;;		On exit  : 0/0
 37473 ;;		Unchanged: 0/0
 37474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37479 ;;Total ram usage:        0 bytes
 37480 ;; Hardware stack levels used:    1
 37481 ;; Hardware stack levels required when called:   16
 37482 ;; This function calls:
 37483 ;;		_StartTimer
 37484 ;;		_TimerDone
 37485 ;; This function is called by:
 37486 ;;		_check_help
 37487 ;; This function uses a reentrant model
 37488 ;;
 37489                           
 37490                           	psect	text134
 37491  002114                     __ptext134:
 37492                           	opt callstack 0
 37493  002114                     _help_button:
 37494                           	opt callstack 13
 37495                           
 37496                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 37497                           
 37498                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37499                           ;incstack = 0
 37500  002114  B0CB               	btfsc	203,0,c	;volatile
 37501  002116  D00C               	goto	l1824
 37502                           
 37503                           ;mconfig.c: 29:   V.help = 1;
 37504  002118  0102               	movlb	2	; () banked
 37505  00211A  859F               	bsf	(_V+152)& (0+255),2,b	;volatile
 37506                           
 37507                           ; BSR set to: 2
 37508                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 37509  00211C  0E08               	movlw	8
 37510  00211E  6EE6               	movwf	postinc1,c
 37511  002120  EC5B  F012         	call	_TimerDone	;wreg free
 37512  002124  502A               	movf	btemp^0,w,c
 37513  002126  B4D8               	btfsc	status,2,c
 37514  002128  D003               	goto	l1824
 37515                           
 37516                           ;mconfig.c: 31:    return 1;
 37517  00212A  0E01               	movlw	1
 37518  00212C  6E2A               	movwf	btemp^0,c
 37519  00212E  0012               	return	
 37520  002130                     l1824:
 37521                           
 37522                           ;mconfig.c: 34:  if (!V.help)
 37523  002130  0102               	movlb	2	; () banked
 37524  002132  B59F               	btfsc	(_V+152)& (0+255),2,b	;volatile
 37525  002134  D008               	goto	l13624
 37526                           
 37527                           ; BSR set to: 2
 37528                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 37529  002136  0E2C               	movlw	44
 37530  002138  6EE6               	movwf	postinc1,c
 37531  00213A  0E01               	movlw	1
 37532  00213C  6EE6               	movwf	postinc1,c
 37533  00213E  0E08               	movlw	8
 37534  002140  6EE6               	movwf	postinc1,c
 37535  002142  ECD0  F00F         	call	_StartTimer	;wreg free
 37536  002146                     l13624:
 37537                           
 37538                           ;mconfig.c: 37:  return 0;
 37539  002146  0E00               	movlw	0
 37540  002148  6E2A               	movwf	btemp^0,c
 37541                           
 37542                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 37543  00214A  0012               	return		;funcret
 37544  00214C                     __end_of_help_button:
 37545                           	opt callstack 0
 37546                           
 37547 ;; *************** function _TimerDone *****************
 37548 ;; Defined at:
 37549 ;;		line 20 in file "timers.c"
 37550 ;; Parameters:    Size  Location     Type
 37551 ;;  timer           1  [STACK] const unsigned char 
 37552 ;; Auto vars:     Size  Location     Type
 37553 ;;		None
 37554 ;; Return value:  Size  Location     Type
 37555 ;;                  1  [STACK] _Bool 
 37556 ;; Registers used:
 37557 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 37558 ;; Tracked objects:
 37559 ;;		On entry : 0/2
 37560 ;;		On exit  : 0/0
 37561 ;;		Unchanged: 0/0
 37562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37567 ;;Total ram usage:        0 bytes
 37568 ;; Hardware stack levels used:    1
 37569 ;; Hardware stack levels required when called:   15
 37570 ;; This function calls:
 37571 ;;		Nothing
 37572 ;; This function is called by:
 37573 ;;		_main
 37574 ;;		_WaitMs
 37575 ;;		_help_button
 37576 ;;		_check_help
 37577 ;;		_set_display_info
 37578 ;;		_update_adc_result
 37579 ;;		_esr_check
 37580 ;; This function uses a reentrant model
 37581 ;;
 37582                           
 37583                           	psect	text135
 37584  0024B6                     __ptext135:
 37585                           	opt callstack 0
 37586  0024B6                     _TimerDone:
 37587                           	opt callstack 14
 37588                           
 37589                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37590                           ;incstack = 0
 37591  0024B6  0004               	clrwdt		;# 
 37592                           
 37593                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 37594                           ;stkvar	_timer @ sp[(0)+-1]
 37595  0024B8  0EFF               	movlw	-1
 37596  0024BA  50E3               	movf	plusw1,w,c
 37597  0024BC  0D02               	mullw	2
 37598  0024BE  0EBC               	movlw	low _tickCount
 37599  0024C0  24F3               	addwf	243,w,c
 37600  0024C2  6ED9               	movwf	fsr2l,c
 37601  0024C4  0E02               	movlw	high _tickCount
 37602  0024C6  20F4               	addwfc	prodh,w,c
 37603  0024C8  6EDA               	movwf	fsr2h,c
 37604  0024CA  50DE               	movf	postinc2,w,c
 37605  0024CC  10DE               	iorwf	postinc2,w,c
 37606  0024CE  A4D8               	btfss	status,2,c
 37607  0024D0  D002               	goto	l12380
 37608                           
 37609                           ;timers.c: 24:   return 1;
 37610  0024D2  0E01               	movlw	1
 37611  0024D4  D001               	goto	L42
 37612  0024D6                     l12380:
 37613                           
 37614                           ;timers.c: 26:  return 0;
 37615  0024D6  0E00               	movlw	0
 37616  0024D8                     L42:
 37617  0024D8  6E2A               	movwf	btemp^0,c
 37618                           
 37619                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 37620  0024DA  52E5               	movf	postdec1,f,c
 37621  0024DC  0012               	return		;funcret
 37622  0024DE                     __end_of_TimerDone:
 37623                           	opt callstack 0
 37624                           
 37625 ;; *************** function _StartTimer *****************
 37626 ;; Defined at:
 37627 ;;		line 12 in file "timers.c"
 37628 ;; Parameters:    Size  Location     Type
 37629 ;;  timer           1  [STACK] const unsigned char 
 37630 ;;  count           2  [STACK] const unsigned short 
 37631 ;; Auto vars:     Size  Location     Type
 37632 ;;		None
 37633 ;; Return value:  Size  Location     Type
 37634 ;;                  1  [STACK] void 
 37635 ;; Registers used:
 37636 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 37637 ;; Tracked objects:
 37638 ;;		On entry : 0/0
 37639 ;;		On exit  : 0/0
 37640 ;;		Unchanged: 0/0
 37641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37646 ;;Total ram usage:        0 bytes
 37647 ;; Hardware stack levels used:    1
 37648 ;; Hardware stack levels required when called:   15
 37649 ;; This function calls:
 37650 ;;		Nothing
 37651 ;; This function is called by:
 37652 ;;		_main
 37653 ;;		_WaitMs
 37654 ;;		_help_button
 37655 ;;		_check_help
 37656 ;;		_update_adc_result
 37657 ;;		_calc_bsoc
 37658 ;;		_esr_check
 37659 ;; This function uses a reentrant model
 37660 ;;
 37661                           
 37662                           	psect	text136
 37663  001FA0                     __ptext136:
 37664                           	opt callstack 0
 37665  001FA0                     _StartTimer:
 37666                           	opt callstack 0
 37667                           
 37668                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 37669                           ;stkvar	_count @ sp[(0)+-3]
 37670                           
 37671                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37672                           ;incstack = 0
 37673 ;; hardware stack exceeded
 37674  001FA0  0EFD               	movlw	-3
 37675  001FA2  006F FF8C  F034    	movff	plusw1,btemp+10
 37676  001FA8  0EFE               	movlw	-2
 37677  001FAA  006F FF8C  F035    	movff	plusw1,btemp+11
 37678  001FB0  90D8               	bcf	status,0,c
 37679  001FB2  3434               	rlcf	(btemp+10)^0,w,c
 37680  001FB4  6E32               	movwf	(btemp+8)^0,c
 37681  001FB6  3435               	rlcf	(btemp+11)^0,w,c
 37682  001FB8  6E33               	movwf	(btemp+9)^0,c
 37683                           
 37684                           ;stkvar	_timer @ sp[(0)+-1]
 37685  001FBA  0EFF               	movlw	-1
 37686  001FBC  50E3               	movf	plusw1,w,c
 37687  001FBE  0D02               	mullw	2
 37688  001FC0  0EBC               	movlw	low _tickCount
 37689  001FC2  24F3               	addwf	243,w,c
 37690  001FC4  6ED9               	movwf	fsr2l,c
 37691  001FC6  0E02               	movlw	high _tickCount
 37692  001FC8  20F4               	addwfc	prodh,w,c
 37693  001FCA  6EDA               	movwf	fsr2h,c
 37694  001FCC  0060  F0CB  FFDE   	movff	btemp+8,postinc2
 37695  001FD2  0060  F0CF  FFDD   	movff	btemp+9,postdec2
 37696                           
 37697                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 37698  001FD8  52E5               	movf	postdec1,f,c
 37699  001FDA  52E5               	movf	postdec1,f,c
 37700  001FDC  52E5               	movf	postdec1,f,c
 37701  001FDE  0012               	return		;funcret
 37702  001FE0                     __end_of_StartTimer:
 37703                           	opt callstack 0
 37704                           
 37705 ;; *************** function _display_info *****************
 37706 ;; Defined at:
 37707 ;;		line 196 in file "mconfig.c"
 37708 ;; Parameters:    Size  Location     Type
 37709 ;;		None
 37710 ;; Auto vars:     Size  Location     Type
 37711 ;;		None
 37712 ;; Return value:  Size  Location     Type
 37713 ;;                  1  [STACK] enum E16677
 37714 ;; Registers used:
 37715 ;;		btemp
 37716 ;; Tracked objects:
 37717 ;;		On entry : 0/2
 37718 ;;		On exit  : 0/0
 37719 ;;		Unchanged: 0/0
 37720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37725 ;;Total ram usage:        0 bytes
 37726 ;; Hardware stack levels used:    1
 37727 ;; Hardware stack levels required when called:   15
 37728 ;; This function calls:
 37729 ;;		Nothing
 37730 ;; This function is called by:
 37731 ;;		_check_help
 37732 ;; This function uses a reentrant model
 37733 ;;
 37734                           
 37735                           	psect	text137
 37736  002AC2                     __ptext137:
 37737                           	opt callstack 0
 37738  002AC2                     _display_info:
 37739                           	opt callstack 14
 37740                           
 37741                           ;mconfig.c: 198:  return V.response.info;
 37742                           
 37743                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37744                           ;incstack = 0
 37745  002AC2  0060  FAA0  F02A   	movff	_V+161,btemp	;volatile
 37746                           
 37747                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 37748  002AC8  0012               	return		;funcret
 37749  002ACA                     __end_of_display_info:
 37750                           	opt callstack 0
 37751                           
 37752 ;; *************** function _display_help *****************
 37753 ;; Defined at:
 37754 ;;		line 201 in file "mconfig.c"
 37755 ;; Parameters:    Size  Location     Type
 37756 ;;		None
 37757 ;; Auto vars:     Size  Location     Type
 37758 ;;		None
 37759 ;; Return value:  Size  Location     Type
 37760 ;;                  1  [STACK] enum E16677
 37761 ;; Registers used:
 37762 ;;		btemp
 37763 ;; Tracked objects:
 37764 ;;		On entry : 3F/2
 37765 ;;		On exit  : 0/0
 37766 ;;		Unchanged: 0/0
 37767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37772 ;;Total ram usage:        0 bytes
 37773 ;; Hardware stack levels used:    1
 37774 ;; Hardware stack levels required when called:   15
 37775 ;; This function calls:
 37776 ;;		Nothing
 37777 ;; This function is called by:
 37778 ;;		_check_help
 37779 ;; This function uses a reentrant model
 37780 ;;
 37781                           
 37782                           	psect	text138
 37783  002ACA                     __ptext138:
 37784                           	opt callstack 0
 37785  002ACA                     _display_help:
 37786                           	opt callstack 14
 37787                           
 37788                           ;mconfig.c: 203:  return V.response.help_temp;
 37789                           
 37790                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37791                           ;incstack = 0
 37792  002ACA  0060  FAA4  F02A   	movff	_V+162,btemp	;volatile
 37793                           
 37794                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 37795  002AD0  0012               	return		;funcret
 37796  002AD2                     __end_of_display_help:
 37797                           	opt callstack 0
 37798                           
 37799 ;; *************** function _check_enter_button *****************
 37800 ;; Defined at:
 37801 ;;		line 49 in file "hid.c"
 37802 ;; Parameters:    Size  Location     Type
 37803 ;;  h               2  [STACK] PTR struct H_data
 37804 ;;		 -> H(9), 
 37805 ;; Auto vars:     Size  Location     Type
 37806 ;;		None
 37807 ;; Return value:  Size  Location     Type
 37808 ;;                  1  [STACK] _Bool 
 37809 ;; Registers used:
 37810 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 37811 ;; Tracked objects:
 37812 ;;		On entry : 0/0
 37813 ;;		On exit  : 0/0
 37814 ;;		Unchanged: 0/0
 37815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37820 ;;Total ram usage:        0 bytes
 37821 ;; Hardware stack levels used:    1
 37822 ;; Hardware stack levels required when called:   15
 37823 ;; This function calls:
 37824 ;;		Nothing
 37825 ;; This function is called by:
 37826 ;;		_main
 37827 ;; This function uses a reentrant model
 37828 ;;
 37829                           
 37830                           	psect	text139
 37831  0014D6                     __ptext139:
 37832                           	opt callstack 0
 37833  0014D6                     _check_enter_button:
 37834                           	opt callstack 15
 37835                           
 37836                           ;hid.c: 49: _Bool check_enter_button(H_data* h);hid.c: 50: {;hid.c: 51:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 37837                           ;stkvar	_h @ sp[(0)+-2]
 37838                           
 37839                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37840                           ;incstack = 0
 37841  0014D6  0EFE               	movlw	-2
 37842  0014D8  006F FF8C  F034    	movff	plusw1,btemp+10
 37843  0014DE  0EFF               	movlw	-1
 37844  0014E0  006F FF8C  F035    	movff	plusw1,btemp+11
 37845  0014E6  0E04               	movlw	4
 37846  0014E8  2434               	addwf	(btemp+10)^0,w,c
 37847  0014EA  6ED9               	movwf	fsr2l,c
 37848  0014EC  0E00               	movlw	0
 37849  0014EE  2035               	addwfc	(btemp+11)^0,w,c
 37850  0014F0  6EDA               	movwf	fsr2h,c
 37851  0014F2  50DF               	movf	indf2,w,c
 37852  0014F4  A4D8               	btfss	status,2,c
 37853  0014F6  D023               	goto	l17338
 37854                           
 37855                           ;stkvar	_h @ sp[(0)+-2]
 37856  0014F8  0EFE               	movlw	-2
 37857  0014FA  006F FF8C  F034    	movff	plusw1,btemp+10
 37858  001500  0EFF               	movlw	-1
 37859  001502  006F FF8C  F035    	movff	plusw1,btemp+11
 37860  001508  0E05               	movlw	5
 37861  00150A  2434               	addwf	(btemp+10)^0,w,c
 37862  00150C  6ED9               	movwf	fsr2l,c
 37863  00150E  0E00               	movlw	0
 37864  001510  2035               	addwfc	(btemp+11)^0,w,c
 37865  001512  6EDA               	movwf	fsr2h,c
 37866  001514  50DF               	movf	indf2,w,c
 37867  001516  A4D8               	btfss	status,2,c
 37868  001518  D012               	goto	l17338
 37869                           
 37870                           ;hid.c: 52:   h->wait_enter = 1;
 37871                           ;stkvar	_h @ sp[(0)+-2]
 37872  00151A  0EFE               	movlw	-2
 37873  00151C  006F FF8C  F034    	movff	plusw1,btemp+10
 37874  001522  0EFF               	movlw	-1
 37875  001524  006F FF8C  F035    	movff	plusw1,btemp+11
 37876  00152A  0E04               	movlw	4
 37877  00152C  2434               	addwf	(btemp+10)^0,w,c
 37878  00152E  6ED9               	movwf	fsr2l,c
 37879  001530  0E00               	movlw	0
 37880  001532  2035               	addwfc	(btemp+11)^0,w,c
 37881  001534  6EDA               	movwf	fsr2h,c
 37882  001536  0E01               	movlw	1
 37883  001538  6EDF               	movwf	indf2,c
 37884                           
 37885                           ;hid.c: 53:   return 1;
 37886  00153A  0E01               	movlw	1
 37887  00153C  D001               	goto	L43
 37888  00153E                     l17338:
 37889                           
 37890                           ;hid.c: 55:  return 0;
 37891  00153E  0E00               	movlw	0
 37892  001540                     L43:
 37893  001540  6E2A               	movwf	btemp^0,c
 37894                           
 37895                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 37896  001542  52E5               	movf	postdec1,f,c
 37897  001544  52E5               	movf	postdec1,f,c
 37898  001546  0012               	return		;funcret
 37899  001548                     __end_of_check_enter_button:
 37900                           	opt callstack 0
 37901                           
 37902 ;; *************** function _calc_ror_data *****************
 37903 ;; Defined at:
 37904 ;;		line 103 in file "mbmc.c"
 37905 ;; Parameters:    Size  Location     Type
 37906 ;;		None
 37907 ;; Auto vars:     Size  Location     Type
 37908 ;;		None
 37909 ;; Return value:  Size  Location     Type
 37910 ;;                  1  [STACK] void 
 37911 ;; Registers used:
 37912 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 37913 ;; Tracked objects:
 37914 ;;		On entry : 0/0
 37915 ;;		On exit  : 0/0
 37916 ;;		Unchanged: 0/0
 37917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37922 ;;Total ram usage:        0 bytes
 37923 ;; Hardware stack levels used:    1
 37924 ;; Hardware stack levels required when called:   18
 37925 ;; This function calls:
 37926 ;;		___flge
 37927 ;;		___flsub
 37928 ;;		_conv_raw_result
 37929 ;;		_fabsf
 37930 ;; This function is called by:
 37931 ;;		_main
 37932 ;; This function uses a reentrant model
 37933 ;;
 37934                           
 37935                           	psect	text140
 37936  01E29A                     __ptext140:
 37937                           	opt callstack 0
 37938  01E29A                     _calc_ror_data:
 37939                           	opt callstack 12
 37940                           
 37941                           ;mbmc.c: 105:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 107:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 37942                           
 37943                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37944                           ;incstack = 0
 37945  01E29A  0060  F203  FFE6   	movff	calc_ror_data@bcror,postinc1
 37946  01E2A0  0060  F207  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 37947  01E2A6  0060  F20B  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 37948  01E2AC  0060  F20F  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 37949  01E2B2  0E00               	movlw	0
 37950  01E2B4  6EE6               	movwf	postinc1,c
 37951  01E2B6  0E00               	movlw	0
 37952  01E2B8  6EE6               	movwf	postinc1,c
 37953  01E2BA  ECCB  F0C3         	call	_conv_raw_result	;wreg free
 37954  01E2BE  0060  F0AB  FFE6   	movff	btemp,postinc1
 37955  01E2C4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 37956  01E2CA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 37957  01E2D0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 37958  01E2D6  EC2A  F00F         	call	___flsub	;wreg free
 37959  01E2DA  0060  F0AB  FFE6   	movff	btemp,postinc1
 37960  01E2E0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 37961  01E2E6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 37962  01E2EC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 37963  01E2F2  EC6D  F004         	call	_fabsf	;wreg free
 37964  01E2F6  0060  F0A8  F96F   	movff	btemp,_C+112	;volatile
 37965  01E2FC  0060  F0AC  F970   	movff	btemp+1,_C+113	;volatile
 37966  01E302  0060  F0B0  F971   	movff	btemp+2,_C+114	;volatile
 37967  01E308  0060  F0B4  F972   	movff	btemp+3,_C+115	;volatile
 37968                           
 37969                           ;mbmc.c: 108:  bcror = conv_raw_result(C_BATT, CONV);
 37970  01E30E  0E00               	movlw	0
 37971  01E310  6EE6               	movwf	postinc1,c
 37972  01E312  0E00               	movlw	0
 37973  01E314  6EE6               	movwf	postinc1,c
 37974  01E316  ECCB  F0C3         	call	_conv_raw_result	;wreg free
 37975  01E31A  0060  F0A8  F080   	movff	btemp,calc_ror_data@bcror
 37976  01E320  0060  F0AC  F081   	movff	btemp+1,calc_ror_data@bcror+1
 37977  01E326  0060  F0B0  F082   	movff	btemp+2,calc_ror_data@bcror+2
 37978  01E32C  0060  F0B4  F083   	movff	btemp+3,calc_ror_data@bcror+3
 37979                           
 37980                           ;mbmc.c: 109:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 37981  01E332  0060  F213  FFE6   	movff	calc_ror_data@bvror,postinc1
 37982  01E338  0060  F217  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 37983  01E33E  0060  F21B  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 37984  01E344  0060  F21F  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 37985  01E34A  0E00               	movlw	0
 37986  01E34C  6EE6               	movwf	postinc1,c
 37987  01E34E  0E04               	movlw	4
 37988  01E350  6EE6               	movwf	postinc1,c
 37989  01E352  ECCB  F0C3         	call	_conv_raw_result	;wreg free
 37990  01E356  0060  F0AB  FFE6   	movff	btemp,postinc1
 37991  01E35C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 37992  01E362  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 37993  01E368  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 37994  01E36E  EC2A  F00F         	call	___flsub	;wreg free
 37995  01E372  0060  F0AB  FFE6   	movff	btemp,postinc1
 37996  01E378  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 37997  01E37E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 37998  01E384  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 37999  01E38A  EC6D  F004         	call	_fabsf	;wreg free
 38000  01E38E  0060  F0A8  F96B   	movff	btemp,_C+108	;volatile
 38001  01E394  0060  F0AC  F96C   	movff	btemp+1,_C+109	;volatile
 38002  01E39A  0060  F0B0  F96D   	movff	btemp+2,_C+110	;volatile
 38003  01E3A0  0060  F0B4  F96E   	movff	btemp+3,_C+111	;volatile
 38004                           
 38005                           ;mbmc.c: 110:  if (C.bv_ror < 0.0051)
 38006  01E3A6  0EE7               	movlw	231
 38007  01E3A8  6EE6               	movwf	postinc1,c
 38008  01E3AA  0E1D               	movlw	29
 38009  01E3AC  6EE6               	movwf	postinc1,c
 38010  01E3AE  0EA7               	movlw	167
 38011  01E3B0  6EE6               	movwf	postinc1,c
 38012  01E3B2  0E3B               	movlw	59
 38013  01E3B4  6EE6               	movwf	postinc1,c
 38014  01E3B6  EE22  F16B         	lfsr	2,_C+108	;volatile
 38015  01E3BA  006F FF7B FFE6     	movff	postinc2,postinc1
 38016  01E3C0  006F FF7B FFE6     	movff	postinc2,postinc1
 38017  01E3C6  006F FF7B FFE6     	movff	postinc2,postinc1
 38018  01E3CC  006F FF7B FFE6     	movff	postinc2,postinc1
 38019  01E3D2  ECF5  F0F4         	call	___flge	;wreg free
 38020  01E3D6  B02A               	btfsc	btemp& (0+255),0,c
 38021  01E3D8  D010               	goto	l14214
 38022                           
 38023                           ;mbmc.c: 111:   C.bv_ror = 0.0140 + 0.0001;
 38024  01E3DA  0EB0               	movlw	176
 38025  01E3DC  006F FFA0  F96B    	movff	wreg,_C+108	;volatile
 38026  01E3E2  0E03               	movlw	3
 38027  01E3E4  006F FFA0  F96C    	movff	wreg,_C+109	;volatile
 38028  01E3EA  0E67               	movlw	103
 38029  01E3EC  006F FFA0  F96D    	movff	wreg,_C+110	;volatile
 38030  01E3F2  0E3C               	movlw	60
 38031  01E3F4  006F FFA0  F96E    	movff	wreg,_C+111	;volatile
 38032  01E3FA                     l14214:
 38033                           
 38034                           ;mbmc.c: 112:  bvror = conv_raw_result(V_BAT, CONV);
 38035  01E3FA  0E00               	movlw	0
 38036  01E3FC  6EE6               	movwf	postinc1,c
 38037  01E3FE  0E04               	movlw	4
 38038  01E400  6EE6               	movwf	postinc1,c
 38039  01E402  ECCB  F0C3         	call	_conv_raw_result	;wreg free
 38040  01E406  0060  F0A8  F084   	movff	btemp,calc_ror_data@bvror
 38041  01E40C  0060  F0AC  F085   	movff	btemp+1,calc_ror_data@bvror+1
 38042  01E412  0060  F0B0  F086   	movff	btemp+2,calc_ror_data@bvror+2
 38043  01E418  0060  F0B4  F087   	movff	btemp+3,calc_ror_data@bvror+3
 38044                           
 38045                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 38046  01E41E  0012               	return		;funcret
 38047  01E420                     __end_of_calc_ror_data:
 38048                           	opt callstack 0
 38049                           
 38050 ;; *************** function _fabsf *****************
 38051 ;; Defined at:
 38052 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 38053 ;; Parameters:    Size  Location     Type
 38054 ;;  x               4  [STACK] float 
 38055 ;; Auto vars:     Size  Location     Type
 38056 ;;  u               4  [STACK] struct .
 38057 ;; Return value:  Size  Location     Type
 38058 ;;                  4  [STACK] float 
 38059 ;; Registers used:
 38060 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 38061 ;; Tracked objects:
 38062 ;;		On entry : 0/0
 38063 ;;		On exit  : 0/0
 38064 ;;		Unchanged: 0/0
 38065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38070 ;;Total ram usage:        0 bytes
 38071 ;; Hardware stack levels used:    1
 38072 ;; Hardware stack levels required when called:   15
 38073 ;; This function calls:
 38074 ;;		Nothing
 38075 ;; This function is called by:
 38076 ;;		_main
 38077 ;;		_calc_ror_data
 38078 ;;		_calc_bsoc
 38079 ;;		_esr_check
 38080 ;; This function uses a reentrant model
 38081 ;;
 38082                           
 38083                           	psect	text141
 38084  0008DA                     __ptext141:
 38085                           	opt callstack 0
 38086  0008DA                     _fabsf:
 38087                           	opt callstack 0
 38088                           
 38089                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38090  0008DA  52E6               	movf	postinc1,f,c
 38091  0008DC  52E6               	movf	postinc1,f,c
 38092  0008DE  52E6               	movf	postinc1,f,c
 38093  0008E0  52E6               	movf	postinc1,f,c
 38094                           
 38095                           ;incstack = 0
 38096 ;; hardware stack exceeded
 38097  0008E2  0060  F1E0  F032   	movff	fabsf@F463,btemp+8
 38098  0008E8  0060  F1E4  F033   	movff	fabsf@F463+1,btemp+9
 38099  0008EE  0060  F1E8  F034   	movff	fabsf@F463+2,btemp+10
 38100  0008F4  0060  F1EC  F035   	movff	fabsf@F463+3,btemp+11
 38101                           
 38102                           ;stkvar	_u @ sp[(-4)+0]
 38103  0008FA  0EFC               	movlw	-4
 38104  0008FC  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 38105  000902  0EFD               	movlw	-3
 38106  000904  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 38107  00090A  0EFE               	movlw	-2
 38108  00090C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 38109  000912  0EFF               	movlw	-1
 38110  000914  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 38111                           
 38112                           ;stkvar	_x @ sp[(-4)+-4]
 38113  00091A  0EF8               	movlw	-8
 38114  00091C  006F FF8C  F032    	movff	plusw1,btemp+8
 38115  000922  0EF9               	movlw	-7
 38116  000924  006F FF8C  F033    	movff	plusw1,btemp+9
 38117  00092A  0EFA               	movlw	-6
 38118  00092C  006F FF8C  F034    	movff	plusw1,btemp+10
 38119  000932  0EFB               	movlw	-5
 38120  000934  006F FF8C  F035    	movff	plusw1,btemp+11
 38121                           
 38122                           ;stkvar	_u @ sp[(-4)+0]
 38123  00093A  0EFC               	movlw	-4
 38124  00093C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 38125  000942  0EFD               	movlw	-3
 38126  000944  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 38127  00094A  0EFE               	movlw	-2
 38128  00094C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 38129  000952  0EFF               	movlw	-1
 38130  000954  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 38131                           
 38132                           ;stkvar	_u @ sp[(-4)+0]
 38133  00095A  0EFF               	movlw	-1
 38134  00095C  9EE3               	bcf	plusw1,7,c
 38135                           
 38136                           ;stkvar	_u @ sp[(-4)+0]
 38137  00095E  0EFC               	movlw	-4
 38138  000960  006F FF8C  F02A    	movff	plusw1,btemp
 38139  000966  0EFD               	movlw	-3
 38140  000968  006F FF8C  F02B    	movff	plusw1,btemp+1
 38141  00096E  0EFE               	movlw	-2
 38142  000970  006F FF8C  F02C    	movff	plusw1,btemp+2
 38143  000976  0EFF               	movlw	-1
 38144  000978  006F FF8C  F02D    	movff	plusw1,btemp+3
 38145                           
 38146                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 38147  00097E  0EF8               	movlw	248
 38148  000980  26E1               	addwf	fsr1l,f,c
 38149  000982  0EFF               	movlw	255
 38150  000984  22E2               	addwfc	fsr1h,f,c
 38151  000986  0012               	return		;funcret
 38152  000988                     __end_of_fabsf:
 38153                           	opt callstack 0
 38154                           
 38155 ;; *************** function _conv_raw_result *****************
 38156 ;; Defined at:
 38157 ;;		line 135 in file "daq.c"
 38158 ;; Parameters:    Size  Location     Type
 38159 ;;  chan            1  [STACK] const enum E16605
 38160 ;;  to_what         1  [STACK] const enum E16996
 38161 ;; Auto vars:     Size  Location     Type
 38162 ;;		None
 38163 ;; Return value:  Size  Location     Type
 38164 ;;                  4  [STACK] float 
 38165 ;; Registers used:
 38166 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 38167 ;; Tracked objects:
 38168 ;;		On entry : 0/0
 38169 ;;		On exit  : 0/0
 38170 ;;		Unchanged: 0/0
 38171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38176 ;;Total ram usage:        0 bytes
 38177 ;; Hardware stack levels used:    1
 38178 ;; Hardware stack levels required when called:   17
 38179 ;; This function calls:
 38180 ;;		___fldiv
 38181 ;;		___flmul
 38182 ;;		___flsub
 38183 ;;		___xxtofl
 38184 ;;		_get_raw_result
 38185 ;;		_nanf
 38186 ;; This function is called by:
 38187 ;;		_main
 38188 ;;		_convert_adc_data
 38189 ;;		_calc_ror_data
 38190 ;;		_check_day_time
 38191 ;;		_init_bsoc
 38192 ;;		_esr_check
 38193 ;; This function uses a reentrant model
 38194 ;;
 38195                           
 38196                           	psect	text142
 38197  018796                     __ptext142:
 38198                           	opt callstack 0
 38199  018796                     _conv_raw_result:
 38200                           	opt callstack 0
 38201                           
 38202                           ;daq.c: 135: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);
      +                          daq.c: 136: {;daq.c: 138:  switch (to_what) {
 38203                           
 38204                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38205                           ;incstack = 0
 38206 ;; hardware stack exceeded
 38207  018796  D24A               	goto	l12362
 38208  018798                     l12308:
 38209                           
 38210                           ;daq.c: 140:   if (!(0b0011110001110111 >> chan & 0x1))
 38211                           ;stkvar	_chan @ sp[(0)+-1]
 38212  018798  0EFF               	movlw	-1
 38213  01879A  006F FF8C  F035    	movff	plusw1,btemp+11
 38214  0187A0  0E77               	movlw	119
 38215  0187A2  6E32               	movwf	(btemp+8)^0,c
 38216  0187A4  0E3C               	movlw	60
 38217  0187A6  6E33               	movwf	(btemp+9)^0,c
 38218  0187A8  2A35               	incf	(btemp+11)^0,f,c
 38219  0187AA  D003               	goto	u11614
 38220  0187AC                     u11615:
 38221  0187AC  3433               	rlcf	(btemp+9)^0,w,c
 38222  0187AE  3233               	rrcf	(btemp+9)^0,f,c
 38223  0187B0  3232               	rrcf	(btemp+8)^0,f,c
 38224  0187B2                     u11614:
 38225  0187B2  2E35               	decfsz	(btemp+11)^0,f,c
 38226  0187B4  D7FB               	goto	u11615
 38227  0187B6  B032               	btfsc	(btemp+8)^0,0,c
 38228  0187B8  D007               	goto	l12314
 38229                           
 38230                           ;daq.c: 141:    return nanf("");
 38231  0187BA  0E75               	movlw	low (STR_95+126)
 38232  0187BC  6EE6               	movwf	postinc1,c
 38233  0187BE  0EFA               	movlw	high (STR_95+126)
 38234  0187C0  6EE6               	movwf	postinc1,c
 38235  0187C2  EC72  F00C         	call	_nanf	;wreg free
 38236  0187C6  D242               	goto	l1981
 38237  0187C8                     l12314:
 38238                           
 38239                           ;daq.c: 143:   if (0b0000000000000011 >> chan & 0x1) {
 38240                           ;stkvar	_chan @ sp[(0)+-1]
 38241  0187C8  0EFF               	movlw	-1
 38242  0187CA  006F FF8C  F035    	movff	plusw1,btemp+11
 38243  0187D0  0E03               	movlw	3
 38244  0187D2  6E32               	movwf	(btemp+8)^0,c
 38245  0187D4  0E00               	movlw	0
 38246  0187D6  6E33               	movwf	(btemp+9)^0,c
 38247  0187D8  2A35               	incf	(btemp+11)^0,f,c
 38248  0187DA  D003               	goto	u11634
 38249  0187DC                     u11635:
 38250  0187DC  3433               	rlcf	(btemp+9)^0,w,c
 38251  0187DE  3233               	rrcf	(btemp+9)^0,f,c
 38252  0187E0  3232               	rrcf	(btemp+8)^0,f,c
 38253  0187E2                     u11634:
 38254  0187E2  2E35               	decfsz	(btemp+11)^0,f,c
 38255  0187E4  D7FB               	goto	u11635
 38256  0187E6  A032               	btfss	(btemp+8)^0,0,c
 38257  0187E8  D0F3               	goto	l12328
 38258                           
 38259                           ;daq.c: 144:    if (0b0000000000000001 >> chan & 0x1) {
 38260                           ;stkvar	_chan @ sp[(0)+-1]
 38261  0187EA  0EFF               	movlw	-1
 38262  0187EC  006F FF8C  F035    	movff	plusw1,btemp+11
 38263  0187F2  0E01               	movlw	1
 38264  0187F4  6E32               	movwf	(btemp+8)^0,c
 38265  0187F6  0E00               	movlw	0
 38266  0187F8  6E33               	movwf	(btemp+9)^0,c
 38267  0187FA  2A35               	incf	(btemp+11)^0,f,c
 38268  0187FC  D003               	goto	u11654
 38269  0187FE                     u11655:
 38270  0187FE  3433               	rlcf	(btemp+9)^0,w,c
 38271  018800  3233               	rrcf	(btemp+9)^0,f,c
 38272  018802  3232               	rrcf	(btemp+8)^0,f,c
 38273  018804                     u11654:
 38274  018804  2E35               	decfsz	(btemp+11)^0,f,c
 38275  018806  D7FB               	goto	u11655
 38276  018808  A032               	btfss	(btemp+8)^0,0,c
 38277  01880A  D071               	goto	l12324
 38278                           
 38279                           ;daq.c: 145:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[0]) * R.n_
      +                          scalar[0];
 38280  01880C  0060  F4AB  FFE6   	movff	_R+42,postinc1
 38281  018812  0060  F4AF  FFE6   	movff	_R+43,postinc1
 38282  018818  0060  F4B3  FFE6   	movff	_R+44,postinc1
 38283  01881E  0060  F4B7  FFE6   	movff	_R+45,postinc1
 38284  018824  0060  F498  F032   	movff	_R+38,btemp+8	;volatile
 38285  01882A  0060  F49C  F033   	movff	_R+39,btemp+9	;volatile
 38286  018830  0E00               	movlw	0
 38287  018832  BE33               	btfsc	(btemp+9)^0,7,c
 38288  018834  0EFF               	movlw	255
 38289  018836  6E34               	movwf	(btemp+10)^0,c
 38290  018838  6E35               	movwf	(btemp+11)^0,c
 38291  01883A  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 38292  018840  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 38293  018846  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 38294  01884C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 38295  018852  0E01               	movlw	1
 38296  018854  6EE6               	movwf	postinc1,c
 38297  018856  EC5A  F0EB         	call	___xxtofl	;wreg free
 38298  01885A  0060  F0AB  FFE6   	movff	btemp,postinc1
 38299  018860  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38300  018866  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38301  01886C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38302                           
 38303                           ;stkvar	_chan @ sp[(-8)+-1]
 38304  018872  0EF7               	movlw	-9
 38305  018874  50E3               	movf	plusw1,w,c
 38306  018876  6EE6               	movwf	postinc1,c
 38307  018878  ECE0  F013         	call	_get_raw_result	;wreg free
 38308  01887C  0060  F0A8  F034   	movff	btemp,btemp+10
 38309  018882  0060  F0AC  F035   	movff	btemp+1,btemp+11
 38310  018888  5034               	movf	(btemp+10)^0,w,c
 38311  01888A  6E2E               	movwf	(btemp+4)^0,c
 38312  01888C  5035               	movf	(btemp+11)^0,w,c
 38313  01888E  6E2F               	movwf	(btemp+5)^0,c
 38314  018890  6A30               	clrf	(btemp+6)^0,c
 38315  018892  6A31               	clrf	(btemp+7)^0,c
 38316  018894  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 38317  01889A  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 38318  0188A0  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 38319  0188A6  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 38320  0188AC  0E00               	movlw	0
 38321  0188AE  6EE6               	movwf	postinc1,c
 38322  0188B0  EC5A  F0EB         	call	___xxtofl	;wreg free
 38323  0188B4  0060  F0AB  FFE6   	movff	btemp,postinc1
 38324  0188BA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38325  0188C0  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38326  0188C6  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38327  0188CC  EC2A  F00F         	call	___flsub	;wreg free
 38328  0188D0  0060  F0AB  FFE6   	movff	btemp,postinc1
 38329  0188D6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38330  0188DC  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38331  0188E2  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38332  0188E8  EC32  F0B3         	call	___flmul	;wreg free
 38333  0188EC  D1AF               	goto	l1981
 38334  0188EE                     l12324:
 38335                           
 38336                           ;daq.c: 147:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[1]) * R.n_
      +                          scalar[1];
 38337  0188EE  0060  F4BB  FFE6   	movff	_R+46,postinc1
 38338  0188F4  0060  F4BF  FFE6   	movff	_R+47,postinc1
 38339  0188FA  0060  F4C3  FFE6   	movff	_R+48,postinc1
 38340  018900  0060  F4C7  FFE6   	movff	_R+49,postinc1
 38341  018906  0060  F4A0  F032   	movff	_R+40,btemp+8	;volatile
 38342  01890C  0060  F4A4  F033   	movff	_R+41,btemp+9	;volatile
 38343  018912  0E00               	movlw	0
 38344  018914  BE33               	btfsc	(btemp+9)^0,7,c
 38345  018916  0EFF               	movlw	255
 38346  018918  6E34               	movwf	(btemp+10)^0,c
 38347  01891A  6E35               	movwf	(btemp+11)^0,c
 38348  01891C  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 38349  018922  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 38350  018928  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 38351  01892E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 38352  018934  0E01               	movlw	1
 38353  018936  6EE6               	movwf	postinc1,c
 38354  018938  EC5A  F0EB         	call	___xxtofl	;wreg free
 38355  01893C  0060  F0AB  FFE6   	movff	btemp,postinc1
 38356  018942  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38357  018948  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38358  01894E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38359                           
 38360                           ;stkvar	_chan @ sp[(-8)+-1]
 38361  018954  0EF7               	movlw	-9
 38362  018956  50E3               	movf	plusw1,w,c
 38363  018958  6EE6               	movwf	postinc1,c
 38364  01895A  ECE0  F013         	call	_get_raw_result	;wreg free
 38365  01895E  0060  F0A8  F034   	movff	btemp,btemp+10
 38366  018964  0060  F0AC  F035   	movff	btemp+1,btemp+11
 38367  01896A  5034               	movf	(btemp+10)^0,w,c
 38368  01896C  6E2E               	movwf	(btemp+4)^0,c
 38369  01896E  5035               	movf	(btemp+11)^0,w,c
 38370  018970  6E2F               	movwf	(btemp+5)^0,c
 38371  018972  6A30               	clrf	(btemp+6)^0,c
 38372  018974  6A31               	clrf	(btemp+7)^0,c
 38373  018976  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 38374  01897C  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 38375  018982  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 38376  018988  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 38377  01898E  0E00               	movlw	0
 38378  018990  6EE6               	movwf	postinc1,c
 38379  018992  EC5A  F0EB         	call	___xxtofl	;wreg free
 38380  018996  0060  F0AB  FFE6   	movff	btemp,postinc1
 38381  01899C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38382  0189A2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38383  0189A8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38384  0189AE  EC2A  F00F         	call	___flsub	;wreg free
 38385  0189B2  0060  F0AB  FFE6   	movff	btemp,postinc1
 38386  0189B8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38387  0189BE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38388  0189C4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38389  0189CA  EC32  F0B3         	call	___flmul	;wreg free
 38390  0189CE  D13E               	goto	l1981
 38391  0189D0                     l12328:
 38392                           
 38393                           ;daq.c: 150:    if (0b0000100000000000 >> chan & 0x1) {
 38394                           ;stkvar	_chan @ sp[(0)+-1]
 38395  0189D0  0EFF               	movlw	-1
 38396  0189D2  006F FF8C  F035    	movff	plusw1,btemp+11
 38397  0189D8  0E00               	movlw	0
 38398  0189DA  6E32               	movwf	(btemp+8)^0,c
 38399  0189DC  0E08               	movlw	8
 38400  0189DE  6E33               	movwf	(btemp+9)^0,c
 38401  0189E0  2A35               	incf	(btemp+11)^0,f,c
 38402  0189E2  D003               	goto	u11674
 38403  0189E4                     u11675:
 38404  0189E4  3433               	rlcf	(btemp+9)^0,w,c
 38405  0189E6  3233               	rrcf	(btemp+9)^0,f,c
 38406  0189E8  3232               	rrcf	(btemp+8)^0,f,c
 38407  0189EA                     u11674:
 38408  0189EA  2E35               	decfsz	(btemp+11)^0,f,c
 38409  0189EC  D7FB               	goto	u11675
 38410  0189EE  A032               	btfss	(btemp+8)^0,0,c
 38411  0189F0  D008               	goto	l12336
 38412                           
 38413                           ;daq.c: 151:     return 25.0;
 38414  0189F2  0E00               	movlw	0
 38415  0189F4  6E2A               	movwf	btemp^0,c
 38416  0189F6  0E00               	movlw	0
 38417  0189F8  6E2B               	movwf	(btemp+1)^0,c
 38418  0189FA  0EC8               	movlw	200
 38419  0189FC  6E2C               	movwf	(btemp+2)^0,c
 38420  0189FE  0E41               	movlw	65
 38421  018A00  D113               	goto	L44
 38422  018A02                     l12336:
 38423                           
 38424                           ;daq.c: 153:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 38425  018A02  0E00               	movlw	0
 38426  018A04  6EE6               	movwf	postinc1,c
 38427  018A06  0E00               	movlw	0
 38428  018A08  6EE6               	movwf	postinc1,c
 38429  018A0A  0E7A               	movlw	122
 38430  018A0C  6EE6               	movwf	postinc1,c
 38431  018A0E  0E44               	movlw	68
 38432  018A10  6EE6               	movwf	postinc1,c
 38433  018A12  0E61               	movlw	97
 38434  018A14  6EE6               	movwf	postinc1,c
 38435  018A16  0E03               	movlw	3
 38436  018A18  6EE6               	movwf	postinc1,c
 38437  018A1A  0E84               	movlw	132
 38438  018A1C  6EE6               	movwf	postinc1,c
 38439  018A1E  0E40               	movlw	64
 38440  018A20  6EE6               	movwf	postinc1,c
 38441                           
 38442                           ;stkvar	_chan @ sp[(-8)+-1]
 38443  018A22  0EF7               	movlw	-9
 38444  018A24  50E3               	movf	plusw1,w,c
 38445  018A26  6EE6               	movwf	postinc1,c
 38446  018A28  ECE0  F013         	call	_get_raw_result	;wreg free
 38447  018A2C  0060  F0A8  F034   	movff	btemp,btemp+10
 38448  018A32  0060  F0AC  F035   	movff	btemp+1,btemp+11
 38449  018A38  5034               	movf	(btemp+10)^0,w,c
 38450  018A3A  6E2E               	movwf	(btemp+4)^0,c
 38451  018A3C  5035               	movf	(btemp+11)^0,w,c
 38452  018A3E  6E2F               	movwf	(btemp+5)^0,c
 38453  018A40  6A30               	clrf	(btemp+6)^0,c
 38454  018A42  6A31               	clrf	(btemp+7)^0,c
 38455  018A44  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 38456  018A4A  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 38457  018A50  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 38458  018A56  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 38459  018A5C  0E00               	movlw	0
 38460  018A5E  6EE6               	movwf	postinc1,c
 38461  018A60  EC5A  F0EB         	call	___xxtofl	;wreg free
 38462  018A64  0060  F0AB  FFE6   	movff	btemp,postinc1
 38463  018A6A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38464  018A70  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38465  018A76  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38466  018A7C  EC32  F0B3         	call	___flmul	;wreg free
 38467  018A80  0060  F0AB  FFE6   	movff	btemp,postinc1
 38468  018A86  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38469  018A8C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38470  018A92  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38471  018A98  EC83  F0BE         	call	___fldiv	;wreg free
 38472  018A9C  D0D7               	goto	l1981
 38473  018A9E                     l12340:
 38474                           
 38475                           ;daq.c: 158:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 38476                           ;stkvar	_chan @ sp[(0)+-1]
 38477  018A9E  0EFF               	movlw	-1
 38478  018AA0  006F FF8C  F035    	movff	plusw1,btemp+11
 38479  018AA6  0E03               	movlw	3
 38480  018AA8  6E32               	movwf	(btemp+8)^0,c
 38481  018AAA  0E00               	movlw	0
 38482  018AAC  6E33               	movwf	(btemp+9)^0,c
 38483  018AAE  2A35               	incf	(btemp+11)^0,f,c
 38484  018AB0  D003               	goto	u11694
 38485  018AB2                     u11695:
 38486  018AB2  3433               	rlcf	(btemp+9)^0,w,c
 38487  018AB4  3233               	rrcf	(btemp+9)^0,f,c
 38488  018AB6  3232               	rrcf	(btemp+8)^0,f,c
 38489  018AB8                     u11694:
 38490  018AB8  2E35               	decfsz	(btemp+11)^0,f,c
 38491  018ABA  D7FB               	goto	u11695
 38492  018ABC  B032               	btfsc	(btemp+8)^0,0,c
 38493  018ABE  D011               	goto	u11720
 38494                           
 38495                           ;stkvar	_chan @ sp[(0)+-1]
 38496  018AC0  0EFF               	movlw	-1
 38497  018AC2  006F FF8C  F035    	movff	plusw1,btemp+11
 38498  018AC8  0E00               	movlw	0
 38499  018ACA  6E32               	movwf	(btemp+8)^0,c
 38500  018ACC  0E08               	movlw	8
 38501  018ACE  6E33               	movwf	(btemp+9)^0,c
 38502  018AD0  2A35               	incf	(btemp+11)^0,f,c
 38503  018AD2  D003               	goto	u11714
 38504  018AD4                     u11715:
 38505  018AD4  3433               	rlcf	(btemp+9)^0,w,c
 38506  018AD6  3233               	rrcf	(btemp+9)^0,f,c
 38507  018AD8  3232               	rrcf	(btemp+8)^0,f,c
 38508  018ADA                     u11714:
 38509  018ADA  2E35               	decfsz	(btemp+11)^0,f,c
 38510  018ADC  D7FB               	goto	u11715
 38511  018ADE  A032               	btfss	(btemp+8)^0,0,c
 38512  018AE0  D04E               	goto	l12348
 38513  018AE2                     u11720:
 38514                           
 38515                           ;daq.c: 159:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 38516  018AE2  0E00               	movlw	0
 38517  018AE4  6EE6               	movwf	postinc1,c
 38518  018AE6  0E00               	movlw	0
 38519  018AE8  6EE6               	movwf	postinc1,c
 38520  018AEA  0E7A               	movlw	122
 38521  018AEC  6EE6               	movwf	postinc1,c
 38522  018AEE  0E44               	movlw	68
 38523  018AF0  6EE6               	movwf	postinc1,c
 38524  018AF2  0E00               	movlw	0
 38525  018AF4  6EE6               	movwf	postinc1,c
 38526  018AF6  0E00               	movlw	0
 38527  018AF8  6EE6               	movwf	postinc1,c
 38528  018AFA  0E20               	movlw	32
 38529  018AFC  6EE6               	movwf	postinc1,c
 38530  018AFE  0E3F               	movlw	63
 38531  018B00  6EE6               	movwf	postinc1,c
 38532                           
 38533                           ;stkvar	_chan @ sp[(-8)+-1]
 38534  018B02  0EF7               	movlw	-9
 38535  018B04  50E3               	movf	plusw1,w,c
 38536  018B06  6EE6               	movwf	postinc1,c
 38537  018B08  ECE0  F013         	call	_get_raw_result	;wreg free
 38538  018B0C  0060  F0A8  F034   	movff	btemp,btemp+10
 38539  018B12  0060  F0AC  F035   	movff	btemp+1,btemp+11
 38540  018B18  5034               	movf	(btemp+10)^0,w,c
 38541  018B1A  6E2E               	movwf	(btemp+4)^0,c
 38542  018B1C  5035               	movf	(btemp+11)^0,w,c
 38543  018B1E  6E2F               	movwf	(btemp+5)^0,c
 38544  018B20  6A30               	clrf	(btemp+6)^0,c
 38545  018B22  6A31               	clrf	(btemp+7)^0,c
 38546  018B24  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 38547  018B2A  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 38548  018B30  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 38549  018B36  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 38550  018B3C  0E00               	movlw	0
 38551  018B3E  6EE6               	movwf	postinc1,c
 38552  018B40  EC5A  F0EB         	call	___xxtofl	;wreg free
 38553  018B44  0060  F0AB  FFE6   	movff	btemp,postinc1
 38554  018B4A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38555  018B50  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38556  018B56  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38557  018B5C  EC32  F0B3         	call	___flmul	;wreg free
 38558  018B60  0060  F0AB  FFE6   	movff	btemp,postinc1
 38559  018B66  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38560  018B6C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38561  018B72  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38562  018B78  EC83  F0BE         	call	___fldiv	;wreg free
 38563  018B7C  D067               	goto	l1981
 38564  018B7E                     l12348:
 38565                           
 38566                           ;daq.c: 161:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 38567  018B7E  0E00               	movlw	0
 38568  018B80  6EE6               	movwf	postinc1,c
 38569  018B82  0E00               	movlw	0
 38570  018B84  6EE6               	movwf	postinc1,c
 38571  018B86  0E7A               	movlw	122
 38572  018B88  6EE6               	movwf	postinc1,c
 38573  018B8A  0E44               	movlw	68
 38574  018B8C  6EE6               	movwf	postinc1,c
 38575  018B8E  0E61               	movlw	97
 38576  018B90  6EE6               	movwf	postinc1,c
 38577  018B92  0E03               	movlw	3
 38578  018B94  6EE6               	movwf	postinc1,c
 38579  018B96  0E84               	movlw	132
 38580  018B98  6EE6               	movwf	postinc1,c
 38581  018B9A  0E40               	movlw	64
 38582  018B9C  6EE6               	movwf	postinc1,c
 38583                           
 38584                           ;stkvar	_chan @ sp[(-8)+-1]
 38585  018B9E  0EF7               	movlw	-9
 38586  018BA0  50E3               	movf	plusw1,w,c
 38587  018BA2  6EE6               	movwf	postinc1,c
 38588  018BA4  ECE0  F013         	call	_get_raw_result	;wreg free
 38589  018BA8  0060  F0A8  F034   	movff	btemp,btemp+10
 38590  018BAE  0060  F0AC  F035   	movff	btemp+1,btemp+11
 38591  018BB4  5034               	movf	(btemp+10)^0,w,c
 38592  018BB6  6E2E               	movwf	(btemp+4)^0,c
 38593  018BB8  5035               	movf	(btemp+11)^0,w,c
 38594  018BBA  6E2F               	movwf	(btemp+5)^0,c
 38595  018BBC  6A30               	clrf	(btemp+6)^0,c
 38596  018BBE  6A31               	clrf	(btemp+7)^0,c
 38597  018BC0  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 38598  018BC6  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 38599  018BCC  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 38600  018BD2  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 38601  018BD8  0E00               	movlw	0
 38602  018BDA  6EE6               	movwf	postinc1,c
 38603  018BDC  EC5A  F0EB         	call	___xxtofl	;wreg free
 38604  018BE0  0060  F0AB  FFE6   	movff	btemp,postinc1
 38605  018BE6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38606  018BEC  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38607  018BF2  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38608  018BF8  EC32  F0B3         	call	___flmul	;wreg free
 38609  018BFC  0060  F0AB  FFE6   	movff	btemp,postinc1
 38610  018C02  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38611  018C08  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38612  018C0E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38613  018C14  EC83  F0BE         	call	___fldiv	;wreg free
 38614  018C18  D019               	goto	l1981
 38615  018C1A                     l12354:
 38616                           
 38617                           ;daq.c: 164:   return 0.0;
 38618  018C1A  0E00               	movlw	0
 38619  018C1C  6E2A               	movwf	btemp^0,c
 38620  018C1E  0E00               	movlw	0
 38621  018C20  6E2B               	movwf	(btemp+1)^0,c
 38622  018C22  0E00               	movlw	0
 38623  018C24  6E2C               	movwf	(btemp+2)^0,c
 38624  018C26  0E00               	movlw	0
 38625  018C28                     L44:
 38626  018C28  6E2D               	movwf	(btemp+3)^0,c
 38627  018C2A  D010               	goto	l1981
 38628  018C2C                     l12362:
 38629                           
 38630                           ;stkvar	_to_what @ sp[(0)+-2]
 38631  018C2C  0EFE               	movlw	-2
 38632  018C2E  50E3               	movf	plusw1,w,c
 38633  018C30  6E34               	movwf	(btemp+10)^0,c
 38634  018C32  6A35               	clrf	(btemp+11)^0,c
 38635                           
 38636                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 38637                           ; Switch size 1, requested type "simple"
 38638                           ; Number of cases is 1, Range of values is 0 to 0
 38639                           ; switch strategies available:
 38640                           ; Name         Instructions Cycles
 38641                           ; simple_byte            4     3 (average)
 38642                           ;	Chosen strategy is simple_byte
 38643  018C34  5035               	movf	(btemp+11)^0,w,c
 38644  018C36  0A00               	xorlw	0	; case 0
 38645  018C38  A4D8               	btfss	status,2,c
 38646  018C3A  D7EF               	goto	l12354
 38647                           
 38648                           ; Switch size 1, requested type "simple"
 38649                           ; Number of cases is 2, Range of values is 0 to 1
 38650                           ; switch strategies available:
 38651                           ; Name         Instructions Cycles
 38652                           ; simple_byte            7     4 (average)
 38653                           ;	Chosen strategy is simple_byte
 38654  018C3C  5034               	movf	(btemp+10)^0,w,c
 38655  018C3E  0A00               	xorlw	0	; case 0
 38656  018C40  B4D8               	btfsc	status,2,c
 38657  018C42  D5AA               	goto	l12308
 38658  018C44  0A01               	xorlw	1	; case 1
 38659  018C46  B4D8               	btfsc	status,2,c
 38660  018C48  D72A               	goto	l12340
 38661  018C4A  D7E7               	goto	l12354
 38662  018C4C                     l1981:
 38663                           
 38664                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 38665  018C4C  52E5               	movf	postdec1,f,c
 38666  018C4E  52E5               	movf	postdec1,f,c
 38667  018C50  0012               	return		;funcret
 38668  018C52                     __end_of_conv_raw_result:
 38669                           	opt callstack 0
 38670                           
 38671 ;; *************** function _nanf *****************
 38672 ;; Defined at:
 38673 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 38674 ;; Parameters:    Size  Location     Type
 38675 ;;  s               2  [STACK] PTR const unsigned char 
 38676 ;;		 -> STR_134(1), STR_94(1), 
 38677 ;; Auto vars:     Size  Location     Type
 38678 ;;  u               4  [STACK] struct .
 38679 ;; Return value:  Size  Location     Type
 38680 ;;                  4  [STACK] float 
 38681 ;; Registers used:
 38682 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 38683 ;; Tracked objects:
 38684 ;;		On entry : 0/0
 38685 ;;		On exit  : 0/0
 38686 ;;		Unchanged: 0/0
 38687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38692 ;;Total ram usage:        0 bytes
 38693 ;; Hardware stack levels used:    1
 38694 ;; Hardware stack levels required when called:   15
 38695 ;; This function calls:
 38696 ;;		Nothing
 38697 ;; This function is called by:
 38698 ;;		_conv_raw_result
 38699 ;; This function uses a reentrant model
 38700 ;;
 38701                           
 38702                           	psect	text143
 38703  0018E4                     __ptext143:
 38704                           	opt callstack 0
 38705  0018E4                     _nanf:
 38706                           	opt callstack 0
 38707                           
 38708                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38709  0018E4  52E6               	movf	postinc1,f,c
 38710  0018E6  52E6               	movf	postinc1,f,c
 38711  0018E8  52E6               	movf	postinc1,f,c
 38712  0018EA  52E6               	movf	postinc1,f,c
 38713                           
 38714                           ;incstack = 0
 38715 ;; hardware stack exceeded
 38716  0018EC  0EFF               	movlw	255
 38717  0018EE  6E32               	movwf	(btemp+8)^0,c
 38718  0018F0  0EFF               	movlw	255
 38719  0018F2  6E33               	movwf	(btemp+9)^0,c
 38720  0018F4  0EFF               	movlw	255
 38721  0018F6  6E34               	movwf	(btemp+10)^0,c
 38722  0018F8  0E7F               	movlw	127
 38723  0018FA  6E35               	movwf	(btemp+11)^0,c
 38724                           
 38725                           ;stkvar	_u @ sp[(-4)+0]
 38726  0018FC  0EFC               	movlw	-4
 38727  0018FE  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 38728  001904  0EFD               	movlw	-3
 38729  001906  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 38730  00190C  0EFE               	movlw	-2
 38731  00190E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 38732  001914  0EFF               	movlw	-1
 38733  001916  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 38734                           
 38735                           ;stkvar	_u @ sp[(-4)+0]
 38736  00191C  0EFC               	movlw	-4
 38737  00191E  006F FF8C  F02A    	movff	plusw1,btemp
 38738  001924  0EFD               	movlw	-3
 38739  001926  006F FF8C  F02B    	movff	plusw1,btemp+1
 38740  00192C  0EFE               	movlw	-2
 38741  00192E  006F FF8C  F02C    	movff	plusw1,btemp+2
 38742  001934  0EFF               	movlw	-1
 38743  001936  006F FF8C  F02D    	movff	plusw1,btemp+3
 38744                           
 38745                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 38746  00193C  0EFA               	movlw	250
 38747  00193E  26E1               	addwf	fsr1l,f,c
 38748  001940  0EFF               	movlw	255
 38749  001942  22E2               	addwfc	fsr1h,f,c
 38750  001944  0012               	return		;funcret
 38751  001946                     __end_of_nanf:
 38752                           	opt callstack 0
 38753                           
 38754 ;; *************** function _get_raw_result *****************
 38755 ;; Defined at:
 38756 ;;		line 127 in file "daq.c"
 38757 ;; Parameters:    Size  Location     Type
 38758 ;;  index           1  [STACK] const enum E16605
 38759 ;; Auto vars:     Size  Location     Type
 38760 ;;		None
 38761 ;; Return value:  Size  Location     Type
 38762 ;;                  2  [STACK] unsigned short 
 38763 ;; Registers used:
 38764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 38765 ;; Tracked objects:
 38766 ;;		On entry : 0/2
 38767 ;;		On exit  : 0/0
 38768 ;;		Unchanged: 0/0
 38769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38774 ;;Total ram usage:        0 bytes
 38775 ;; Hardware stack levels used:    1
 38776 ;; Hardware stack levels required when called:   15
 38777 ;; This function calls:
 38778 ;;		Nothing
 38779 ;; This function is called by:
 38780 ;;		_main
 38781 ;;		_current_sensor_cal
 38782 ;;		_conv_raw_result
 38783 ;; This function uses a reentrant model
 38784 ;;
 38785                           
 38786                           	psect	text144
 38787  0027C0                     __ptext144:
 38788                           	opt callstack 0
 38789  0027C0                     _get_raw_result:
 38790                           	opt callstack 0
 38791                           
 38792                           ;daq.c: 127: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 128: {;daq.c
      +                          : 129:  return R.raw_adc[index];
 38793                           ;stkvar	_index @ sp[(0)+-1]
 38794                           
 38795                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38796                           ;incstack = 0
 38797 ;; hardware stack exceeded
 38798  0027C0  0EFF               	movlw	-1
 38799  0027C2  50E3               	movf	plusw1,w,c
 38800  0027C4  0D02               	mullw	2
 38801  0027C6  0E00               	movlw	low _R
 38802  0027C8  24F3               	addwf	243,w,c
 38803  0027CA  6ED9               	movwf	fsr2l,c
 38804  0027CC  0E01               	movlw	high _R
 38805  0027CE  20F4               	addwfc	prodh,w,c
 38806  0027D0  6EDA               	movwf	fsr2h,c
 38807  0027D2  006F FF78  F02A    	movff	postinc2,btemp
 38808  0027D8  006F FF74  F02B    	movff	postdec2,btemp+1
 38809                           
 38810                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 38811  0027DE  52E5               	movf	postdec1,f,c
 38812  0027E0  0012               	return		;funcret
 38813  0027E2                     __end_of_get_raw_result:
 38814                           	opt callstack 0
 38815                           
 38816 ;; *************** function ___xxtofl *****************
 38817 ;; Defined at:
 38818 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 38819 ;; Parameters:    Size  Location     Type
 38820 ;;  sign            1  [STACK] unsigned char 
 38821 ;;  val             4  [STACK] long 
 38822 ;; Auto vars:     Size  Location     Type
 38823 ;;  arg             4  [STACK] unsigned long 
 38824 ;;  exp             1  [STACK] unsigned char 
 38825 ;; Return value:  Size  Location     Type
 38826 ;;                  4  [STACK] unsigned char 
 38827 ;; Registers used:
 38828 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 38829 ;; Tracked objects:
 38830 ;;		On entry : 0/39
 38831 ;;		On exit  : 0/0
 38832 ;;		Unchanged: 0/0
 38833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38838 ;;Total ram usage:        0 bytes
 38839 ;; Hardware stack levels used:    1
 38840 ;; Hardware stack levels required when called:   15
 38841 ;; This function calls:
 38842 ;;		Nothing
 38843 ;; This function is called by:
 38844 ;;		_conv_raw_result
 38845 ;;		_load_hist_data
 38846 ;;		_init_bsoc
 38847 ;; This function uses a reentrant model
 38848 ;;
 38849                           
 38850                           	psect	text145
 38851  01D6B4                     __ptext145:
 38852                           	opt callstack 0
 38853  01D6B4                     ___xxtofl:
 38854                           	opt callstack 0
 38855                           
 38856                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38857  01D6B4  0E05               	movlw	5
 38858  01D6B6  26E1               	addwf	fsr1l,f,c
 38859  01D6B8  0E00               	movlw	0
 38860  01D6BA  22E2               	addwfc	fsr1h,f,c
 38861                           
 38862                           ;stkvar	_sign @ sp[(-5)+-1]
 38863                           
 38864                           ;incstack = 0
 38865 ;; hardware stack exceeded
 38866  01D6BC  0EFA               	movlw	-6
 38867  01D6BE  50E3               	movf	plusw1,w,c
 38868  01D6C0  B4D8               	btfsc	status,2,c
 38869  01D6C2  D01D               	goto	l12030
 38870                           
 38871                           ;stkvar	_val @ sp[(-5)+-5]
 38872  01D6C4  0EF9               	movlw	-7
 38873  01D6C6  AEE3               	btfss	plusw1,7,c
 38874  01D6C8  D01A               	goto	l12030
 38875                           
 38876                           ;stkvar	_val @ sp[(-5)+-5]
 38877  01D6CA  0EF6               	movlw	-10
 38878  01D6CC  006F FF8C  F032    	movff	plusw1,btemp+8
 38879  01D6D2  0EF7               	movlw	-9
 38880  01D6D4  006F FF8C  F033    	movff	plusw1,btemp+9
 38881  01D6DA  0EF8               	movlw	-8
 38882  01D6DC  006F FF8C  F034    	movff	plusw1,btemp+10
 38883  01D6E2  0EF9               	movlw	-7
 38884  01D6E4  006F FF8C  F035    	movff	plusw1,btemp+11
 38885  01D6EA  1E32               	comf	(btemp+8)^0,f,c
 38886  01D6EC  1E33               	comf	(btemp+9)^0,f,c
 38887  01D6EE  1E34               	comf	(btemp+10)^0,f,c
 38888  01D6F0  1E35               	comf	(btemp+11)^0,f,c
 38889  01D6F2  2A32               	incf	(btemp+8)^0,f,c
 38890  01D6F4  0E00               	movlw	0
 38891  01D6F6  2233               	addwfc	(btemp+9)^0,f,c
 38892  01D6F8  2234               	addwfc	(btemp+10)^0,f,c
 38893  01D6FA  2235               	addwfc	(btemp+11)^0,f,c
 38894  01D6FC  D010               	goto	L45
 38895  01D6FE                     l12030:
 38896                           
 38897                           ;stkvar	_val @ sp[(-5)+-5]
 38898  01D6FE  0EF6               	movlw	-10
 38899  01D700  006F FF8C  F032    	movff	plusw1,btemp+8
 38900  01D706  0EF7               	movlw	-9
 38901  01D708  006F FF8C  F033    	movff	plusw1,btemp+9
 38902  01D70E  0EF8               	movlw	-8
 38903  01D710  006F FF8C  F034    	movff	plusw1,btemp+10
 38904  01D716  0EF9               	movlw	-7
 38905  01D718  006F FF8C  F035    	movff	plusw1,btemp+11
 38906  01D71E                     L45:
 38907                           
 38908                           ;stkvar	_arg @ sp[(-5)+0]
 38909  01D71E  0EFB               	movlw	-5
 38910  01D720  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 38911  01D726  0EFC               	movlw	-4
 38912  01D728  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 38913  01D72E  0EFD               	movlw	-3
 38914  01D730  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 38915  01D736  0EFE               	movlw	-2
 38916  01D738  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 38917                           
 38918                           ;stkvar	_val @ sp[(-5)+-5]
 38919  01D73E  0EF6               	movlw	-10
 38920  01D740  50E3               	movf	plusw1,w,c
 38921  01D742  E113               	bnz	l12038
 38922  01D744  0EF7               	movlw	-9
 38923  01D746  50E3               	movf	plusw1,w,c
 38924  01D748  E110               	bnz	l12038
 38925  01D74A  0EF8               	movlw	-8
 38926  01D74C  50E3               	movf	plusw1,w,c
 38927  01D74E  E10D               	bnz	l12038
 38928  01D750  0EF9               	movlw	-7
 38929  01D752  50E3               	movf	plusw1,w,c
 38930  01D754  A4D8               	btfss	status,2,c
 38931  01D756  D009               	goto	l12038
 38932  01D758  0E00               	movlw	0
 38933  01D75A  6E2A               	movwf	btemp^0,c
 38934  01D75C  0E00               	movlw	0
 38935  01D75E  6E2B               	movwf	(btemp+1)^0,c
 38936  01D760  0E00               	movlw	0
 38937  01D762  6E2C               	movwf	(btemp+2)^0,c
 38938  01D764  0E00               	movlw	0
 38939  01D766  6E2D               	movwf	(btemp+3)^0,c
 38940  01D768  D0A2               	goto	l3386
 38941  01D76A                     l12038:
 38942  01D76A  0E96               	movlw	150
 38943  01D76C  6E35               	movwf	(btemp+11)^0,c
 38944                           
 38945                           ;stkvar	_exp @ sp[(-5)+4]
 38946  01D76E  0EFF               	movlw	-1
 38947  01D770  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 38948  01D776  D00B               	goto	l12042
 38949  01D778                     l12040:
 38950                           
 38951                           ;stkvar	_exp @ sp[(-5)+4]
 38952  01D778  0EFF               	movlw	-1
 38953  01D77A  2AE3               	incf	plusw1,f,c
 38954                           
 38955                           ;stkvar	_arg @ sp[(-5)+0]
 38956  01D77C  90D8               	bcf	status,0,c
 38957  01D77E  0EFE               	movlw	-2
 38958  01D780  32E3               	rrcf	plusw1,f,c
 38959  01D782  0EFD               	movlw	-3
 38960  01D784  32E3               	rrcf	plusw1,f,c
 38961  01D786  0EFC               	movlw	-4
 38962  01D788  32E3               	rrcf	plusw1,f,c
 38963  01D78A  0EFB               	movlw	-5
 38964  01D78C  32E3               	rrcf	plusw1,f,c
 38965  01D78E                     l12042:
 38966                           
 38967                           ;stkvar	_arg @ sp[(-5)+0]
 38968  01D78E  50E1               	movf	fsr1l,w,c
 38969  01D790  0FFB               	addlw	-5
 38970  01D792  6ED9               	movwf	fsr2l,c
 38971  01D794  50E2               	movf	fsr1h,w,c
 38972  01D796  6EDA               	movwf	fsr2h,c
 38973  01D798  0EFF               	movlw	255
 38974  01D79A  22DA               	addwfc	fsr2h,f,c
 38975  01D79C  52DE               	movf	postinc2,f,c
 38976  01D79E  52DE               	movf	postinc2,f,c
 38977  01D7A0  52DE               	movf	postinc2,f,c
 38978  01D7A2  0EFE               	movlw	254
 38979  01D7A4  14DD               	andwf	postdec2,w,c
 38980  01D7A6  B4D8               	btfsc	status,2,c
 38981  01D7A8  D018               	goto	l12050
 38982  01D7AA  D7E6               	goto	l12040
 38983  01D7AC                     l12044:
 38984                           
 38985                           ;stkvar	_exp @ sp[(-5)+4]
 38986  01D7AC  0EFF               	movlw	-1
 38987  01D7AE  2AE3               	incf	plusw1,f,c
 38988                           
 38989                           ;stkvar	_arg @ sp[(-5)+0]
 38990  01D7B0  50E1               	movf	fsr1l,w,c
 38991  01D7B2  0FFB               	addlw	-5
 38992  01D7B4  6ED9               	movwf	fsr2l,c
 38993  01D7B6  50E2               	movf	fsr1h,w,c
 38994  01D7B8  6EDA               	movwf	fsr2h,c
 38995  01D7BA  0EFF               	movlw	255
 38996  01D7BC  22DA               	addwfc	fsr2h,f,c
 38997  01D7BE  2ADE               	incf	postinc2,f,c
 38998  01D7C0  0E00               	movlw	0
 38999  01D7C2  22DE               	addwfc	postinc2,f,c
 39000  01D7C4  22DE               	addwfc	postinc2,f,c
 39001  01D7C6  22DE               	addwfc	postinc2,f,c
 39002                           
 39003                           ;stkvar	_arg @ sp[(-5)+0]
 39004  01D7C8  90D8               	bcf	status,0,c
 39005  01D7CA  0EFE               	movlw	-2
 39006  01D7CC  32E3               	rrcf	plusw1,f,c
 39007  01D7CE  0EFD               	movlw	-3
 39008  01D7D0  32E3               	rrcf	plusw1,f,c
 39009  01D7D2  0EFC               	movlw	-4
 39010  01D7D4  32E3               	rrcf	plusw1,f,c
 39011  01D7D6  0EFB               	movlw	-5
 39012  01D7D8  32E3               	rrcf	plusw1,f,c
 39013  01D7DA                     l12050:
 39014                           
 39015                           ;stkvar	_arg @ sp[(-5)+0]
 39016  01D7DA  50E1               	movf	fsr1l,w,c
 39017  01D7DC  0FFB               	addlw	-5
 39018  01D7DE  6ED9               	movwf	fsr2l,c
 39019  01D7E0  50E2               	movf	fsr1h,w,c
 39020  01D7E2  6EDA               	movwf	fsr2h,c
 39021  01D7E4  0EFF               	movlw	255
 39022  01D7E6  22DA               	addwfc	fsr2h,f,c
 39023  01D7E8  52DE               	movf	postinc2,f,c
 39024  01D7EA  52DE               	movf	postinc2,f,c
 39025  01D7EC  52DE               	movf	postinc2,f,c
 39026  01D7EE  0EFF               	movlw	255
 39027  01D7F0  14DD               	andwf	postdec2,w,c
 39028  01D7F2  B4D8               	btfsc	status,2,c
 39029  01D7F4  D00C               	goto	l12054
 39030  01D7F6  D7DA               	goto	l12044
 39031  01D7F8                     l12052:
 39032                           
 39033                           ;stkvar	_exp @ sp[(-5)+4]
 39034  01D7F8  0EFF               	movlw	-1
 39035  01D7FA  06E3               	decf	plusw1,f,c
 39036                           
 39037                           ;stkvar	_arg @ sp[(-5)+0]
 39038  01D7FC  90D8               	bcf	status,0,c
 39039  01D7FE  0EFB               	movlw	-5
 39040  01D800  36E3               	rlcf	plusw1,f,c
 39041  01D802  0EFC               	movlw	-4
 39042  01D804  36E3               	rlcf	plusw1,f,c
 39043  01D806  0EFD               	movlw	-3
 39044  01D808  36E3               	rlcf	plusw1,f,c
 39045  01D80A  0EFE               	movlw	-2
 39046  01D80C  36E3               	rlcf	plusw1,f,c
 39047  01D80E                     l12054:
 39048                           
 39049                           ;stkvar	_arg @ sp[(-5)+0]
 39050  01D80E  0EFD               	movlw	-3
 39051  01D810  BEE3               	btfsc	plusw1,7,c
 39052  01D812  D007               	goto	u11370
 39053                           
 39054                           ;stkvar	_exp @ sp[(-5)+4]
 39055  01D814  0EFF               	movlw	-1
 39056  01D816  006F FF8C  F02A    	movff	plusw1,btemp
 39057  01D81C  0E02               	movlw	2
 39058  01D81E  602A               	cpfslt	btemp^0,c
 39059  01D820  D7EB               	goto	l12052
 39060  01D822                     u11370:
 39061                           
 39062                           ;stkvar	_exp @ sp[(-5)+4]
 39063  01D822  0EFF               	movlw	-1
 39064  01D824  B0E3               	btfsc	plusw1,0,c
 39065  01D826  D002               	goto	l12062
 39066                           
 39067                           ;stkvar	_arg @ sp[(-5)+0]
 39068  01D828  0EFD               	movlw	-3
 39069  01D82A  9EE3               	bcf	plusw1,7,c
 39070  01D82C                     l12062:
 39071                           
 39072                           ;stkvar	_exp @ sp[(-5)+4]
 39073  01D82C  50E1               	movf	fsr1l,w,c
 39074  01D82E  0FFF               	addlw	-1
 39075  01D830  6ED9               	movwf	fsr2l,c
 39076  01D832  50E2               	movf	fsr1h,w,c
 39077  01D834  6EDA               	movwf	fsr2h,c
 39078  01D836  0EFF               	movlw	255
 39079  01D838  22DA               	addwfc	fsr2h,f,c
 39080  01D83A  90D8               	bcf	status,0,c
 39081  01D83C  32DF               	rrcf	indf2,f,c
 39082                           
 39083                           ;stkvar	_exp @ sp[(-5)+4]
 39084  01D83E  0EFF               	movlw	-1
 39085  01D840  006F FF8C  F035    	movff	plusw1,btemp+11
 39086  01D846  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 39087  01D84C  6A2F               	clrf	(btemp+5)^0,c
 39088  01D84E  6A30               	clrf	(btemp+6)^0,c
 39089  01D850  6A31               	clrf	(btemp+7)^0,c
 39090  01D852  0060  F0B8  F031   	movff	btemp+4,btemp+7
 39091  01D858  6A30               	clrf	(btemp+6)^0,c
 39092  01D85A  6A2F               	clrf	(btemp+5)^0,c
 39093  01D85C  6A2E               	clrf	(btemp+4)^0,c
 39094                           
 39095                           ;stkvar	_arg @ sp[(-5)+0]
 39096  01D85E  50E1               	movf	fsr1l,w,c
 39097  01D860  0FFB               	addlw	-5
 39098  01D862  6ED9               	movwf	fsr2l,c
 39099  01D864  50E2               	movf	fsr1h,w,c
 39100  01D866  6EDA               	movwf	fsr2h,c
 39101  01D868  0EFF               	movlw	255
 39102  01D86A  22DA               	addwfc	fsr2h,f,c
 39103  01D86C  502E               	movf	(btemp+4)^0,w,c
 39104  01D86E  12DE               	iorwf	postinc2,f,c
 39105  01D870  502F               	movf	(btemp+5)^0,w,c
 39106  01D872  12DE               	iorwf	postinc2,f,c
 39107  01D874  5030               	movf	(btemp+6)^0,w,c
 39108  01D876  12DE               	iorwf	postinc2,f,c
 39109  01D878  5031               	movf	(btemp+7)^0,w,c
 39110  01D87A  12DE               	iorwf	postinc2,f,c
 39111                           
 39112                           ;stkvar	_sign @ sp[(-5)+-1]
 39113  01D87C  0EFA               	movlw	-6
 39114  01D87E  50E3               	movf	plusw1,w,c
 39115  01D880  B4D8               	btfsc	status,2,c
 39116  01D882  D005               	goto	l12072
 39117                           
 39118                           ;stkvar	_val @ sp[(-5)+-5]
 39119  01D884  0EF9               	movlw	-7
 39120  01D886  AEE3               	btfss	plusw1,7,c
 39121  01D888  D002               	goto	l12072
 39122                           
 39123                           ;stkvar	_arg @ sp[(-5)+0]
 39124  01D88A  0EFE               	movlw	-2
 39125  01D88C  8EE3               	bsf	plusw1,7,c
 39126  01D88E                     l12072:
 39127                           
 39128                           ;stkvar	_arg @ sp[(-5)+0]
 39129  01D88E  0EFB               	movlw	-5
 39130  01D890  006F FF8C  F02A    	movff	plusw1,btemp
 39131  01D896  0EFC               	movlw	-4
 39132  01D898  006F FF8C  F02B    	movff	plusw1,btemp+1
 39133  01D89E  0EFD               	movlw	-3
 39134  01D8A0  006F FF8C  F02C    	movff	plusw1,btemp+2
 39135  01D8A6  0EFE               	movlw	-2
 39136  01D8A8  006F FF8C  F02D    	movff	plusw1,btemp+3
 39137  01D8AE                     l3386:
 39138                           
 39139                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 39140  01D8AE  0EF6               	movlw	246
 39141  01D8B0  26E1               	addwf	fsr1l,f,c
 39142  01D8B2  0EFF               	movlw	255
 39143  01D8B4  22E2               	addwfc	fsr1h,f,c
 39144  01D8B6  0012               	return		;funcret
 39145  01D8B8                     __end_of___xxtofl:
 39146                           	opt callstack 0
 39147                           
 39148 ;; *************** function ___fldiv *****************
 39149 ;; Defined at:
 39150 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 39151 ;; Parameters:    Size  Location     Type
 39152 ;;  b               4  [STACK] unsigned char 
 39153 ;;  a               4  [STACK] unsigned char 
 39154 ;; Auto vars:     Size  Location     Type
 39155 ;;  grs             4  [STACK] unsigned long 
 39156 ;;  rem             4  [STACK] unsigned long 
 39157 ;;  new_exp         2  [STACK] short 
 39158 ;;  aexp            1  [STACK] unsigned char 
 39159 ;;  bexp            1  [STACK] unsigned char 
 39160 ;;  sign            1  [STACK] unsigned char 
 39161 ;; Return value:  Size  Location     Type
 39162 ;;                  4  [STACK] unsigned char 
 39163 ;; Registers used:
 39164 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 39165 ;; Tracked objects:
 39166 ;;		On entry : 0/3D
 39167 ;;		On exit  : 0/0
 39168 ;;		Unchanged: 0/0
 39169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39174 ;;Total ram usage:        0 bytes
 39175 ;; Hardware stack levels used:    1
 39176 ;; Hardware stack levels required when called:   15
 39177 ;; This function calls:
 39178 ;;		Nothing
 39179 ;; This function is called by:
 39180 ;;		_conv_raw_result
 39181 ;;		_convert_dac_raw
 39182 ;;		_calc_bsoc
 39183 ;;		_init_bsoc
 39184 ;;		_esr_check
 39185 ;;		_efgtoa
 39186 ;; This function uses a reentrant model
 39187 ;;
 39188                           
 39189                           	psect	text146
 39190  017D06                     __ptext146:
 39191                           	opt callstack 0
 39192  017D06                     ___fldiv:
 39193                           	opt callstack 0
 39194                           
 39195                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 39196  017D06  0E0D               	movlw	13
 39197  017D08  26E1               	addwf	fsr1l,f,c
 39198  017D0A  0E00               	movlw	0
 39199  017D0C  22E2               	addwfc	fsr1h,f,c
 39200                           
 39201                           ;stkvar	_b @ sp[(-13)+-4]
 39202                           
 39203                           ;incstack = 0
 39204 ;; hardware stack exceeded
 39205  017D0E  0EF2               	movlw	242
 39206  017D10  24E1               	addwf	fsr1l,w,c
 39207  017D12  6ED9               	movwf	fsr2l,c
 39208  017D14  0EFF               	movlw	255
 39209  017D16  20E2               	addwfc	fsr1h,w,c
 39210  017D18  6EDA               	movwf	fsr2h,c
 39211  017D1A  50DF               	movf	indf2,w,c
 39212  017D1C  6E35               	movwf	(btemp+11)^0,c
 39213  017D1E  0E80               	movlw	128
 39214  017D20  1635               	andwf	(btemp+11)^0,f,c
 39215                           
 39216                           ;stkvar	_sign @ sp[(-13)+12]
 39217  017D22  0EFF               	movlw	-1
 39218  017D24  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39219                           
 39220                           ;stkvar	_b @ sp[(-13)+-4]
 39221  017D2A  0EF2               	movlw	242
 39222  017D2C  24E1               	addwf	fsr1l,w,c
 39223  017D2E  6ED9               	movwf	fsr2l,c
 39224  017D30  0EFF               	movlw	255
 39225  017D32  20E2               	addwfc	fsr1h,w,c
 39226  017D34  6EDA               	movwf	fsr2h,c
 39227  017D36  50DF               	movf	indf2,w,c
 39228  017D38  6E35               	movwf	(btemp+11)^0,c
 39229  017D3A  90D8               	bcf	status,0,c
 39230  017D3C  3435               	rlcf	(btemp+11)^0,w,c
 39231  017D3E  6E34               	movwf	(btemp+10)^0,c
 39232                           
 39233                           ;stkvar	_bexp @ sp[(-13)+11]
 39234  017D40  0EFE               	movlw	-2
 39235  017D42  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39236                           
 39237                           ;stkvar	_b @ sp[(-13)+-4]
 39238  017D48  0EF1               	movlw	241
 39239  017D4A  24E1               	addwf	fsr1l,w,c
 39240  017D4C  6ED9               	movwf	fsr2l,c
 39241  017D4E  0EFF               	movlw	255
 39242  017D50  20E2               	addwfc	fsr1h,w,c
 39243  017D52  6EDA               	movwf	fsr2h,c
 39244  017D54  AEDF               	btfss	indf2,7,c
 39245  017D56  D002               	goto	l10328
 39246                           
 39247                           ;stkvar	_bexp @ sp[(-13)+11]
 39248  017D58  0EFE               	movlw	-2
 39249  017D5A  80E3               	bsf	plusw1,0,c
 39250  017D5C                     l10328:
 39251                           
 39252                           ;stkvar	_bexp @ sp[(-13)+11]
 39253  017D5C  0EFE               	movlw	-2
 39254  017D5E  50E3               	movf	plusw1,w,c
 39255  017D60  B4D8               	btfsc	status,2,c
 39256  017D62  D027               	goto	l10338
 39257                           
 39258                           ;stkvar	_bexp @ sp[(-13)+11]
 39259  017D64  0EFE               	movlw	-2
 39260  017D66  28E3               	incf	plusw1,w,c
 39261  017D68  A4D8               	btfss	status,2,c
 39262  017D6A  D018               	goto	l10334
 39263  017D6C  0E00               	movlw	0
 39264  017D6E  6E32               	movwf	(btemp+8)^0,c
 39265  017D70  0E00               	movlw	0
 39266  017D72  6E33               	movwf	(btemp+9)^0,c
 39267  017D74  0E00               	movlw	0
 39268  017D76  6E34               	movwf	(btemp+10)^0,c
 39269  017D78  0E00               	movlw	0
 39270  017D7A  6E35               	movwf	(btemp+11)^0,c
 39271                           
 39272                           ;stkvar	_b @ sp[(-13)+-4]
 39273  017D7C  0EEF               	movlw	-17
 39274  017D7E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39275  017D84  0EF0               	movlw	-16
 39276  017D86  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39277  017D8C  0EF1               	movlw	-15
 39278  017D8E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39279  017D94  0EF2               	movlw	-14
 39280  017D96  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39281  017D9C                     l10334:
 39282                           
 39283                           ;stkvar	_b @ sp[(-13)+-4]
 39284  017D9C  0EF1               	movlw	-15
 39285  017D9E  8EE3               	bsf	plusw1,7,c
 39286                           
 39287                           ;stkvar	_b @ sp[(-13)+-4]
 39288  017DA0  0EF2               	movlw	242
 39289  017DA2  24E1               	addwf	fsr1l,w,c
 39290  017DA4  6ED9               	movwf	fsr2l,c
 39291  017DA6  0EFF               	movlw	255
 39292  017DA8  20E2               	addwfc	fsr1h,w,c
 39293  017DAA  6EDA               	movwf	fsr2h,c
 39294  017DAC  0E00               	movlw	0
 39295  017DAE  6EDF               	movwf	indf2,c
 39296  017DB0  D018               	goto	l10340
 39297  017DB2                     l10338:
 39298  017DB2  0E00               	movlw	0
 39299  017DB4  6E32               	movwf	(btemp+8)^0,c
 39300  017DB6  0E00               	movlw	0
 39301  017DB8  6E33               	movwf	(btemp+9)^0,c
 39302  017DBA  0E00               	movlw	0
 39303  017DBC  6E34               	movwf	(btemp+10)^0,c
 39304  017DBE  0E00               	movlw	0
 39305  017DC0  6E35               	movwf	(btemp+11)^0,c
 39306                           
 39307                           ;stkvar	_b @ sp[(-13)+-4]
 39308  017DC2  0EEF               	movlw	-17
 39309  017DC4  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39310  017DCA  0EF0               	movlw	-16
 39311  017DCC  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39312  017DD2  0EF1               	movlw	-15
 39313  017DD4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39314  017DDA  0EF2               	movlw	-14
 39315  017DDC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39316  017DE2                     l10340:
 39317                           
 39318                           ;stkvar	_a @ sp[(-13)+-8]
 39319  017DE2  0EEE               	movlw	238
 39320  017DE4  24E1               	addwf	fsr1l,w,c
 39321  017DE6  6ED9               	movwf	fsr2l,c
 39322  017DE8  0EFF               	movlw	255
 39323  017DEA  20E2               	addwfc	fsr1h,w,c
 39324  017DEC  6EDA               	movwf	fsr2h,c
 39325  017DEE  50DF               	movf	indf2,w,c
 39326  017DF0  6E35               	movwf	(btemp+11)^0,c
 39327  017DF2  0E80               	movlw	128
 39328  017DF4  1635               	andwf	(btemp+11)^0,f,c
 39329                           
 39330                           ;stkvar	_sign @ sp[(-13)+12]
 39331  017DF6  50E1               	movf	fsr1l,w,c
 39332  017DF8  0FFF               	addlw	-1
 39333  017DFA  6ED9               	movwf	fsr2l,c
 39334  017DFC  50E2               	movf	fsr1h,w,c
 39335  017DFE  6EDA               	movwf	fsr2h,c
 39336  017E00  0EFF               	movlw	255
 39337  017E02  22DA               	addwfc	fsr2h,f,c
 39338  017E04  5035               	movf	(btemp+11)^0,w,c
 39339  017E06  1ADF               	xorwf	indf2,f,c
 39340                           
 39341                           ;stkvar	_a @ sp[(-13)+-8]
 39342  017E08  0EEE               	movlw	238
 39343  017E0A  24E1               	addwf	fsr1l,w,c
 39344  017E0C  6ED9               	movwf	fsr2l,c
 39345  017E0E  0EFF               	movlw	255
 39346  017E10  20E2               	addwfc	fsr1h,w,c
 39347  017E12  6EDA               	movwf	fsr2h,c
 39348  017E14  50DF               	movf	indf2,w,c
 39349  017E16  6E35               	movwf	(btemp+11)^0,c
 39350  017E18  90D8               	bcf	status,0,c
 39351  017E1A  3435               	rlcf	(btemp+11)^0,w,c
 39352  017E1C  6E34               	movwf	(btemp+10)^0,c
 39353                           
 39354                           ;stkvar	_aexp @ sp[(-13)+10]
 39355  017E1E  0EFD               	movlw	-3
 39356  017E20  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39357                           
 39358                           ;stkvar	_a @ sp[(-13)+-8]
 39359  017E26  0EED               	movlw	237
 39360  017E28  24E1               	addwf	fsr1l,w,c
 39361  017E2A  6ED9               	movwf	fsr2l,c
 39362  017E2C  0EFF               	movlw	255
 39363  017E2E  20E2               	addwfc	fsr1h,w,c
 39364  017E30  6EDA               	movwf	fsr2h,c
 39365  017E32  AEDF               	btfss	indf2,7,c
 39366  017E34  D002               	goto	l10348
 39367                           
 39368                           ;stkvar	_aexp @ sp[(-13)+10]
 39369  017E36  0EFD               	movlw	-3
 39370  017E38  80E3               	bsf	plusw1,0,c
 39371  017E3A                     l10348:
 39372                           
 39373                           ;stkvar	_aexp @ sp[(-13)+10]
 39374  017E3A  0EFD               	movlw	-3
 39375  017E3C  50E3               	movf	plusw1,w,c
 39376  017E3E  B4D8               	btfsc	status,2,c
 39377  017E40  D027               	goto	l10358
 39378                           
 39379                           ;stkvar	_aexp @ sp[(-13)+10]
 39380  017E42  0EFD               	movlw	-3
 39381  017E44  28E3               	incf	plusw1,w,c
 39382  017E46  A4D8               	btfss	status,2,c
 39383  017E48  D018               	goto	l10354
 39384  017E4A  0E00               	movlw	0
 39385  017E4C  6E32               	movwf	(btemp+8)^0,c
 39386  017E4E  0E00               	movlw	0
 39387  017E50  6E33               	movwf	(btemp+9)^0,c
 39388  017E52  0E00               	movlw	0
 39389  017E54  6E34               	movwf	(btemp+10)^0,c
 39390  017E56  0E00               	movlw	0
 39391  017E58  6E35               	movwf	(btemp+11)^0,c
 39392                           
 39393                           ;stkvar	_a @ sp[(-13)+-8]
 39394  017E5A  0EEB               	movlw	-21
 39395  017E5C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39396  017E62  0EEC               	movlw	-20
 39397  017E64  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39398  017E6A  0EED               	movlw	-19
 39399  017E6C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39400  017E72  0EEE               	movlw	-18
 39401  017E74  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39402  017E7A                     l10354:
 39403                           
 39404                           ;stkvar	_a @ sp[(-13)+-8]
 39405  017E7A  0EED               	movlw	-19
 39406  017E7C  8EE3               	bsf	plusw1,7,c
 39407                           
 39408                           ;stkvar	_a @ sp[(-13)+-8]
 39409  017E7E  0EEE               	movlw	238
 39410  017E80  24E1               	addwf	fsr1l,w,c
 39411  017E82  6ED9               	movwf	fsr2l,c
 39412  017E84  0EFF               	movlw	255
 39413  017E86  20E2               	addwfc	fsr1h,w,c
 39414  017E88  6EDA               	movwf	fsr2h,c
 39415  017E8A  0E00               	movlw	0
 39416  017E8C  6EDF               	movwf	indf2,c
 39417  017E8E  D018               	goto	l10360
 39418  017E90                     l10358:
 39419  017E90  0E00               	movlw	0
 39420  017E92  6E32               	movwf	(btemp+8)^0,c
 39421  017E94  0E00               	movlw	0
 39422  017E96  6E33               	movwf	(btemp+9)^0,c
 39423  017E98  0E00               	movlw	0
 39424  017E9A  6E34               	movwf	(btemp+10)^0,c
 39425  017E9C  0E00               	movlw	0
 39426  017E9E  6E35               	movwf	(btemp+11)^0,c
 39427                           
 39428                           ;stkvar	_a @ sp[(-13)+-8]
 39429  017EA0  0EEB               	movlw	-21
 39430  017EA2  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39431  017EA8  0EEC               	movlw	-20
 39432  017EAA  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39433  017EB0  0EED               	movlw	-19
 39434  017EB2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39435  017EB8  0EEE               	movlw	-18
 39436  017EBA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39437  017EC0                     l10360:
 39438                           
 39439                           ;stkvar	_a @ sp[(-13)+-8]
 39440  017EC0  0EEB               	movlw	-21
 39441  017EC2  50E3               	movf	plusw1,w,c
 39442  017EC4  E139               	bnz	l10372
 39443  017EC6  0EEC               	movlw	-20
 39444  017EC8  50E3               	movf	plusw1,w,c
 39445  017ECA  E136               	bnz	l10372
 39446  017ECC  0EED               	movlw	-19
 39447  017ECE  50E3               	movf	plusw1,w,c
 39448  017ED0  E133               	bnz	l10372
 39449  017ED2  0EEE               	movlw	-18
 39450  017ED4  50E3               	movf	plusw1,w,c
 39451  017ED6  A4D8               	btfss	status,2,c
 39452  017ED8  D02F               	goto	l10372
 39453                           
 39454                           ;stkvar	_b @ sp[(-13)+-4]
 39455  017EDA  0EEF               	movlw	-17
 39456  017EDC  6AE3               	clrf	plusw1,c
 39457  017EDE  0EF0               	movlw	-16
 39458  017EE0  6AE3               	clrf	plusw1,c
 39459  017EE2  0EF1               	movlw	-15
 39460  017EE4  6AE3               	clrf	plusw1,c
 39461  017EE6  0EF2               	movlw	-14
 39462  017EE8  6AE3               	clrf	plusw1,c
 39463                           
 39464                           ;stkvar	_b @ sp[(-13)+-4]
 39465  017EEA  0EF1               	movlw	241
 39466  017EEC  24E1               	addwf	fsr1l,w,c
 39467  017EEE  6ED9               	movwf	fsr2l,c
 39468  017EF0  0EFF               	movlw	255
 39469  017EF2  20E2               	addwfc	fsr1h,w,c
 39470  017EF4  6EDA               	movwf	fsr2h,c
 39471  017EF6  0E80               	movlw	128
 39472  017EF8  12DE               	iorwf	postinc2,f,c
 39473  017EFA  0E7F               	movlw	127
 39474  017EFC  12DD               	iorwf	postdec2,f,c
 39475  017EFE                     l10366:
 39476                           
 39477                           ;stkvar	_sign @ sp[(-13)+12]
 39478  017EFE  0EFF               	movlw	-1
 39479  017F00  006F FF8C  F035    	movff	plusw1,btemp+11
 39480                           
 39481                           ;stkvar	_b @ sp[(-13)+-4]
 39482  017F06  0EF2               	movlw	242
 39483  017F08  24E1               	addwf	fsr1l,w,c
 39484  017F0A  6ED9               	movwf	fsr2l,c
 39485  017F0C  0EFF               	movlw	255
 39486  017F0E  20E2               	addwfc	fsr1h,w,c
 39487  017F10  6EDA               	movwf	fsr2h,c
 39488  017F12  5035               	movf	(btemp+11)^0,w,c
 39489  017F14  12DF               	iorwf	indf2,f,c
 39490                           
 39491                           ;stkvar	_b @ sp[(-13)+-4]
 39492  017F16  0EEF               	movlw	-17
 39493  017F18  006F FF8C  F02A    	movff	plusw1,btemp
 39494  017F1E  0EF0               	movlw	-16
 39495  017F20  006F FF8C  F02B    	movff	plusw1,btemp+1
 39496  017F26  0EF1               	movlw	-15
 39497  017F28  006F FF8C  F02C    	movff	plusw1,btemp+2
 39498  017F2E  0EF2               	movlw	-14
 39499  017F30  006F FF8C  F02D    	movff	plusw1,btemp+3
 39500  017F36  D19F               	goto	l3310
 39501  017F38                     l10372:
 39502                           
 39503                           ;stkvar	_bexp @ sp[(-13)+11]
 39504  017F38  0EFE               	movlw	-2
 39505  017F3A  50E3               	movf	plusw1,w,c
 39506  017F3C  A4D8               	btfss	status,2,c
 39507  017F3E  D009               	goto	l10380
 39508  017F40  0E00               	movlw	0
 39509  017F42  6E2A               	movwf	btemp^0,c
 39510  017F44  0E00               	movlw	0
 39511  017F46  6E2B               	movwf	(btemp+1)^0,c
 39512  017F48  0E00               	movlw	0
 39513  017F4A  6E2C               	movwf	(btemp+2)^0,c
 39514  017F4C  0E00               	movlw	0
 39515  017F4E  6E2D               	movwf	(btemp+3)^0,c
 39516  017F50  D192               	goto	l3310
 39517  017F52                     l10380:
 39518                           
 39519                           ;stkvar	_bexp @ sp[(-13)+11]
 39520  017F52  0EFE               	movlw	-2
 39521  017F54  50E3               	movf	plusw1,w,c
 39522  017F56  6E34               	movwf	(btemp+10)^0,c
 39523  017F58  6A35               	clrf	(btemp+11)^0,c
 39524                           
 39525                           ;stkvar	_aexp @ sp[(-13)+10]
 39526  017F5A  0EFD               	movlw	-3
 39527  017F5C  50E3               	movf	plusw1,w,c
 39528  017F5E  5E34               	subwf	(btemp+10)^0,f,c
 39529  017F60  0E00               	movlw	0
 39530  017F62  5A35               	subwfb	(btemp+11)^0,f,c
 39531  017F64  0E7F               	movlw	127
 39532  017F66  2634               	addwf	(btemp+10)^0,f,c
 39533  017F68  0E00               	movlw	0
 39534  017F6A  2235               	addwfc	(btemp+11)^0,f,c
 39535                           
 39536                           ;stkvar	_new_exp @ sp[(-13)+8]
 39537  017F6C  0EFB               	movlw	-5
 39538  017F6E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39539  017F74  0EFC               	movlw	-4
 39540  017F76  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39541                           
 39542                           ;stkvar	_b @ sp[(-13)+-4]
 39543  017F7C  0EEF               	movlw	-17
 39544  017F7E  006F FF8C  F032    	movff	plusw1,btemp+8
 39545  017F84  0EF0               	movlw	-16
 39546  017F86  006F FF8C  F033    	movff	plusw1,btemp+9
 39547  017F8C  0EF1               	movlw	-15
 39548  017F8E  006F FF8C  F034    	movff	plusw1,btemp+10
 39549  017F94  0EF2               	movlw	-14
 39550  017F96  006F FF8C  F035    	movff	plusw1,btemp+11
 39551                           
 39552                           ;stkvar	_rem @ sp[(-13)+4]
 39553  017F9C  0EF7               	movlw	-9
 39554  017F9E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39555  017FA4  0EF8               	movlw	-8
 39556  017FA6  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39557  017FAC  0EF9               	movlw	-7
 39558  017FAE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39559  017FB4  0EFA               	movlw	-6
 39560  017FB6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39561                           
 39562                           ;stkvar	_b @ sp[(-13)+-4]
 39563  017FBC  0EEF               	movlw	-17
 39564  017FBE  6AE3               	clrf	plusw1,c
 39565  017FC0  0EF0               	movlw	-16
 39566  017FC2  6AE3               	clrf	plusw1,c
 39567  017FC4  0EF1               	movlw	-15
 39568  017FC6  6AE3               	clrf	plusw1,c
 39569  017FC8  0EF2               	movlw	-14
 39570  017FCA  6AE3               	clrf	plusw1,c
 39571                           
 39572                           ;stkvar	_grs @ sp[(-13)+0]
 39573  017FCC  0EF3               	movlw	-13
 39574  017FCE  6AE3               	clrf	plusw1,c
 39575  017FD0  0EF4               	movlw	-12
 39576  017FD2  6AE3               	clrf	plusw1,c
 39577  017FD4  0EF5               	movlw	-11
 39578  017FD6  6AE3               	clrf	plusw1,c
 39579  017FD8  0EF6               	movlw	-10
 39580  017FDA  6AE3               	clrf	plusw1,c
 39581                           
 39582                           ;stkvar	_aexp @ sp[(-13)+10]
 39583  017FDC  0EFD               	movlw	-3
 39584  017FDE  6AE3               	clrf	plusw1,c
 39585  017FE0  D050               	goto	l10408
 39586  017FE2                     l10390:
 39587                           
 39588                           ;stkvar	_aexp @ sp[(-13)+10]
 39589  017FE2  0EFD               	movlw	-3
 39590  017FE4  50E3               	movf	plusw1,w,c
 39591  017FE6  B4D8               	btfsc	status,2,c
 39592  017FE8  D020               	goto	l10400
 39593                           
 39594                           ;stkvar	_rem @ sp[(-13)+4]
 39595  017FEA  90D8               	bcf	status,0,c
 39596  017FEC  0EF7               	movlw	-9
 39597  017FEE  36E3               	rlcf	plusw1,f,c
 39598  017FF0  0EF8               	movlw	-8
 39599  017FF2  36E3               	rlcf	plusw1,f,c
 39600  017FF4  0EF9               	movlw	-7
 39601  017FF6  36E3               	rlcf	plusw1,f,c
 39602  017FF8  0EFA               	movlw	-6
 39603  017FFA  36E3               	rlcf	plusw1,f,c
 39604                           
 39605                           ;stkvar	_b @ sp[(-13)+-4]
 39606  017FFC  90D8               	bcf	status,0,c
 39607  017FFE  0EEF               	movlw	-17
 39608  018000  36E3               	rlcf	plusw1,f,c
 39609  018002  0EF0               	movlw	-16
 39610  018004  36E3               	rlcf	plusw1,f,c
 39611  018006  0EF1               	movlw	-15
 39612  018008  36E3               	rlcf	plusw1,f,c
 39613  01800A  0EF2               	movlw	-14
 39614  01800C  36E3               	rlcf	plusw1,f,c
 39615                           
 39616                           ;stkvar	_grs @ sp[(-13)+0]
 39617  01800E  0EF6               	movlw	-10
 39618  018010  AEE3               	btfss	plusw1,7,c
 39619  018012  D002               	goto	l10398
 39620                           
 39621                           ;stkvar	_b @ sp[(-13)+-4]
 39622  018014  0EEF               	movlw	-17
 39623  018016  80E3               	bsf	plusw1,0,c
 39624  018018                     l10398:
 39625                           
 39626                           ;stkvar	_grs @ sp[(-13)+0]
 39627  018018  90D8               	bcf	status,0,c
 39628  01801A  0EF3               	movlw	-13
 39629  01801C  36E3               	rlcf	plusw1,f,c
 39630  01801E  0EF4               	movlw	-12
 39631  018020  36E3               	rlcf	plusw1,f,c
 39632  018022  0EF5               	movlw	-11
 39633  018024  36E3               	rlcf	plusw1,f,c
 39634  018026  0EF6               	movlw	-10
 39635  018028  36E3               	rlcf	plusw1,f,c
 39636  01802A                     l10400:
 39637                           
 39638                           ;stkvar	_a @ sp[(-13)+-8]
 39639                           ;stkvar	_rem @ sp[(-13)+4]
 39640  01802A  50E1               	movf	fsr1l,w,c
 39641  01802C  0FF7               	addlw	-9
 39642  01802E  6ED9               	movwf	fsr2l,c
 39643  018030  50E2               	movf	fsr1h,w,c
 39644  018032  6EDA               	movwf	fsr2h,c
 39645  018034  0EFF               	movlw	255
 39646  018036  22DA               	addwfc	fsr2h,f,c
 39647  018038  0EEB               	movlw	-21
 39648  01803A  50E3               	movf	plusw1,w,c
 39649  01803C  5CDE               	subwf	postinc2,w,c
 39650  01803E  0EEC               	movlw	-20
 39651  018040  50E3               	movf	plusw1,w,c
 39652  018042  58DE               	subwfb	postinc2,w,c
 39653  018044  0EED               	movlw	-19
 39654  018046  50E3               	movf	plusw1,w,c
 39655  018048  58DE               	subwfb	postinc2,w,c
 39656  01804A  0EEE               	movlw	-18
 39657  01804C  50E3               	movf	plusw1,w,c
 39658  01804E  58DE               	subwfb	postinc2,w,c
 39659  018050  A0D8               	btfss	status,0,c
 39660  018052  D015               	goto	l10406
 39661                           
 39662                           ;stkvar	_grs @ sp[(-13)+0]
 39663  018054  0EF6               	movlw	-10
 39664  018056  8CE3               	bsf	plusw1,6,c
 39665                           
 39666                           ;stkvar	_a @ sp[(-13)+-8]
 39667                           ;stkvar	_rem @ sp[(-13)+4]
 39668  018058  50E1               	movf	fsr1l,w,c
 39669  01805A  0FF7               	addlw	-9
 39670  01805C  6ED9               	movwf	fsr2l,c
 39671  01805E  50E2               	movf	fsr1h,w,c
 39672  018060  6EDA               	movwf	fsr2h,c
 39673  018062  0EFF               	movlw	255
 39674  018064  22DA               	addwfc	fsr2h,f,c
 39675  018066  0EEB               	movlw	-21
 39676  018068  50E3               	movf	plusw1,w,c
 39677  01806A  5EDE               	subwf	postinc2,f,c
 39678  01806C  0EEC               	movlw	-20
 39679  01806E  50E3               	movf	plusw1,w,c
 39680  018070  5ADE               	subwfb	postinc2,f,c
 39681  018072  0EED               	movlw	-19
 39682  018074  50E3               	movf	plusw1,w,c
 39683  018076  5ADE               	subwfb	postinc2,f,c
 39684  018078  0EEE               	movlw	-18
 39685  01807A  50E3               	movf	plusw1,w,c
 39686  01807C  5ADE               	subwfb	postinc2,f,c
 39687  01807E                     l10406:
 39688                           
 39689                           ;stkvar	_aexp @ sp[(-13)+10]
 39690  01807E  0EFD               	movlw	-3
 39691  018080  2AE3               	incf	plusw1,f,c
 39692  018082                     l10408:
 39693                           
 39694                           ;stkvar	_aexp @ sp[(-13)+10]
 39695  018082  0EFD               	movlw	-3
 39696  018084  006F FF8C  F02A    	movff	plusw1,btemp
 39697  01808A  0E19               	movlw	25
 39698  01808C  642A               	cpfsgt	btemp^0,c
 39699  01808E  D7A9               	goto	l10390
 39700                           
 39701                           ;stkvar	_rem @ sp[(-13)+4]
 39702  018090  0EF7               	movlw	-9
 39703  018092  50E3               	movf	plusw1,w,c
 39704  018094  E10A               	bnz	u8470
 39705  018096  0EF8               	movlw	-8
 39706  018098  50E3               	movf	plusw1,w,c
 39707  01809A  E107               	bnz	u8470
 39708  01809C  0EF9               	movlw	-7
 39709  01809E  50E3               	movf	plusw1,w,c
 39710  0180A0  E104               	bnz	u8470
 39711  0180A2  0EFA               	movlw	-6
 39712  0180A4  50E3               	movf	plusw1,w,c
 39713  0180A6  B4D8               	btfsc	status,2,c
 39714  0180A8  D024               	goto	l10424
 39715  0180AA                     u8470:
 39716                           
 39717                           ;stkvar	_grs @ sp[(-13)+0]
 39718  0180AA  0EF3               	movlw	-13
 39719  0180AC  80E3               	bsf	plusw1,0,c
 39720  0180AE  D021               	goto	l10424
 39721  0180B0                     l10414:
 39722                           
 39723                           ;stkvar	_b @ sp[(-13)+-4]
 39724  0180B0  90D8               	bcf	status,0,c
 39725  0180B2  0EEF               	movlw	-17
 39726  0180B4  36E3               	rlcf	plusw1,f,c
 39727  0180B6  0EF0               	movlw	-16
 39728  0180B8  36E3               	rlcf	plusw1,f,c
 39729  0180BA  0EF1               	movlw	-15
 39730  0180BC  36E3               	rlcf	plusw1,f,c
 39731  0180BE  0EF2               	movlw	-14
 39732  0180C0  36E3               	rlcf	plusw1,f,c
 39733                           
 39734                           ;stkvar	_grs @ sp[(-13)+0]
 39735  0180C2  0EF6               	movlw	-10
 39736  0180C4  AEE3               	btfss	plusw1,7,c
 39737  0180C6  D002               	goto	l10420
 39738                           
 39739                           ;stkvar	_b @ sp[(-13)+-4]
 39740  0180C8  0EEF               	movlw	-17
 39741  0180CA  80E3               	bsf	plusw1,0,c
 39742  0180CC                     l10420:
 39743                           
 39744                           ;stkvar	_grs @ sp[(-13)+0]
 39745  0180CC  90D8               	bcf	status,0,c
 39746  0180CE  0EF3               	movlw	-13
 39747  0180D0  36E3               	rlcf	plusw1,f,c
 39748  0180D2  0EF4               	movlw	-12
 39749  0180D4  36E3               	rlcf	plusw1,f,c
 39750  0180D6  0EF5               	movlw	-11
 39751  0180D8  36E3               	rlcf	plusw1,f,c
 39752  0180DA  0EF6               	movlw	-10
 39753  0180DC  36E3               	rlcf	plusw1,f,c
 39754                           
 39755                           ;stkvar	_new_exp @ sp[(-13)+8]
 39756  0180DE  50E1               	movf	fsr1l,w,c
 39757  0180E0  0FFB               	addlw	-5
 39758  0180E2  6ED9               	movwf	fsr2l,c
 39759  0180E4  50E2               	movf	fsr1h,w,c
 39760  0180E6  6EDA               	movwf	fsr2h,c
 39761  0180E8  0EFF               	movlw	255
 39762  0180EA  22DA               	addwfc	fsr2h,f,c
 39763  0180EC  06DE               	decf	postinc2,f,c
 39764  0180EE  0E00               	movlw	0
 39765  0180F0  5ADD               	subwfb	postdec2,f,c
 39766  0180F2                     l10424:
 39767                           
 39768                           ;stkvar	_b @ sp[(-13)+-4]
 39769  0180F2  0EF1               	movlw	-15
 39770  0180F4  AEE3               	btfss	plusw1,7,c
 39771  0180F6  D7DC               	goto	l10414
 39772                           
 39773                           ;stkvar	_aexp @ sp[(-13)+10]
 39774  0180F8  0EFD               	movlw	-3
 39775  0180FA  6AE3               	clrf	plusw1,c
 39776                           
 39777                           ;stkvar	_grs @ sp[(-13)+0]
 39778  0180FC  0EF6               	movlw	-10
 39779  0180FE  AEE3               	btfss	plusw1,7,c
 39780  018100  D020               	goto	l10438
 39781                           
 39782                           ;stkvar	_grs @ sp[(-13)+0]
 39783  018102  50E1               	movf	fsr1l,w,c
 39784  018104  0FF3               	addlw	-13
 39785  018106  6ED9               	movwf	fsr2l,c
 39786  018108  50E2               	movf	fsr1h,w,c
 39787  01810A  6EDA               	movwf	fsr2h,c
 39788  01810C  0EFF               	movlw	255
 39789  01810E  22DA               	addwfc	fsr2h,f,c
 39790  018110  0EFF               	movlw	255
 39791  018112  14DE               	andwf	postinc2,w,c
 39792  018114  6E32               	movwf	(btemp+8)^0,c
 39793  018116  0EFF               	movlw	255
 39794  018118  14DE               	andwf	postinc2,w,c
 39795  01811A  6E33               	movwf	(btemp+9)^0,c
 39796  01811C  0EFF               	movlw	255
 39797  01811E  14DE               	andwf	postinc2,w,c
 39798  018120  6E34               	movwf	(btemp+10)^0,c
 39799  018122  0E7F               	movlw	127
 39800  018124  14DE               	andwf	postinc2,w,c
 39801  018126  6E35               	movwf	(btemp+11)^0,c
 39802  018128  5032               	movf	(btemp+8)^0,w,c
 39803  01812A  1033               	iorwf	(btemp+9)^0,w,c
 39804  01812C  1034               	iorwf	(btemp+10)^0,w,c
 39805  01812E  1035               	iorwf	(btemp+11)^0,w,c
 39806  018130  B4D8               	btfsc	status,2,c
 39807  018132  D004               	goto	l10434
 39808  018134                     u8510:
 39809                           
 39810                           ;stkvar	_aexp @ sp[(-13)+10]
 39811  018134  0EFD               	movlw	-3
 39812  018136  6AE3               	clrf	plusw1,c
 39813  018138  2AE3               	incf	plusw1,f,c
 39814  01813A  D003               	goto	l10438
 39815  01813C                     l10434:
 39816                           
 39817                           ;stkvar	_b @ sp[(-13)+-4]
 39818  01813C  0EEF               	movlw	-17
 39819  01813E  B0E3               	btfsc	plusw1,0,c
 39820  018140  D7F9               	goto	u8510
 39821  018142                     l10438:
 39822                           
 39823                           ;stkvar	_aexp @ sp[(-13)+10]
 39824  018142  0EFD               	movlw	-3
 39825  018144  50E3               	movf	plusw1,w,c
 39826  018146  B4D8               	btfsc	status,2,c
 39827  018148  D036               	goto	l10448
 39828                           
 39829                           ;stkvar	_b @ sp[(-13)+-4]
 39830  01814A  50E1               	movf	fsr1l,w,c
 39831  01814C  0FEF               	addlw	-17
 39832  01814E  6ED9               	movwf	fsr2l,c
 39833  018150  50E2               	movf	fsr1h,w,c
 39834  018152  6EDA               	movwf	fsr2h,c
 39835  018154  0EFF               	movlw	255
 39836  018156  22DA               	addwfc	fsr2h,f,c
 39837  018158  2ADE               	incf	postinc2,f,c
 39838  01815A  0E00               	movlw	0
 39839  01815C  22DE               	addwfc	postinc2,f,c
 39840  01815E  22DE               	addwfc	postinc2,f,c
 39841  018160  22DE               	addwfc	postinc2,f,c
 39842                           
 39843                           ;stkvar	_b @ sp[(-13)+-4]
 39844  018162  0EF2               	movlw	-14
 39845  018164  A0E3               	btfss	plusw1,0,c
 39846  018166  D027               	goto	l10448
 39847  018168  0E01               	movlw	1
 39848  01816A  6E35               	movwf	(btemp+11)^0,c
 39849                           
 39850                           ;stkvar	_b @ sp[(-13)+-4]
 39851  01816C  50E1               	movf	fsr1l,w,c
 39852  01816E  0FEF               	addlw	-17
 39853  018170  6ED9               	movwf	fsr2l,c
 39854  018172  50E2               	movf	fsr1h,w,c
 39855  018174  6EDA               	movwf	fsr2h,c
 39856  018176  0EFF               	movlw	255
 39857  018178  22DA               	addwfc	fsr2h,f,c
 39858  01817A  2835               	incf	(btemp+11)^0,w,c
 39859  01817C  52DE               	movf	postinc2,f,c
 39860  01817E  D008               	goto	u8550
 39861  018180                     u8555:
 39862  018180  52DE               	movf	postinc2,f,c
 39863  018182  90D8               	bcf	status,0,c
 39864  018184  BEDC               	btfsc	preinc2,7,c
 39865  018186  80D8               	bsf	status,0,c
 39866  018188  32DD               	rrcf	postdec2,f,c
 39867  01818A  32DD               	rrcf	postdec2,f,c
 39868  01818C  32DD               	rrcf	postdec2,f,c
 39869  01818E  32DE               	rrcf	postinc2,f,c
 39870  018190                     u8550:
 39871  018190  2EE8               	decfsz	wreg,f,c
 39872  018192  D7F6               	goto	u8555
 39873                           
 39874                           ;stkvar	_new_exp @ sp[(-13)+8]
 39875  018194  0EFB               	movlw	-5
 39876  018196  50E3               	movf	plusw1,w,c
 39877  018198  0F01               	addlw	1
 39878  01819A  6E2A               	movwf	btemp^0,c
 39879  01819C  0EFB               	movlw	-5
 39880  01819E  0060  F0AB  FFE3   	movff	btemp,plusw1
 39881  0181A4  6A2A               	clrf	btemp^0,c
 39882  0181A6  0EFC               	movlw	-4
 39883  0181A8  50E3               	movf	plusw1,w,c
 39884  0181AA  202A               	addwfc	btemp^0,w,c
 39885  0181AC  6E2A               	movwf	btemp^0,c
 39886  0181AE  0EFC               	movlw	-4
 39887  0181B0  0060  F0AB  FFE3   	movff	btemp,plusw1
 39888  0181B6                     l10448:
 39889                           
 39890                           ;stkvar	_new_exp @ sp[(-13)+8]
 39891  0181B6  0EFC               	movlw	-4
 39892  0181B8  BEE3               	btfsc	plusw1,7,c
 39893  0181BA  D01B               	goto	l10454
 39894  0181BC  0EFC               	movlw	-4
 39895  0181BE  50E3               	movf	plusw1,w,c
 39896  0181C0  E104               	bnz	u8560
 39897  0181C2  0EFB               	movlw	-5
 39898  0181C4  28E3               	incf	plusw1,w,c
 39899  0181C6  A0D8               	btfss	status,0,c
 39900  0181C8  D014               	goto	l10454
 39901  0181CA                     u8560:
 39902  0181CA  0EFF               	movlw	255
 39903  0181CC  6E34               	movwf	(btemp+10)^0,c
 39904  0181CE  0E00               	movlw	0
 39905  0181D0  6E35               	movwf	(btemp+11)^0,c
 39906                           
 39907                           ;stkvar	_new_exp @ sp[(-13)+8]
 39908  0181D2  0EFB               	movlw	-5
 39909  0181D4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39910  0181DA  0EFC               	movlw	-4
 39911  0181DC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39912                           
 39913                           ;stkvar	_b @ sp[(-13)+-4]
 39914  0181E2  0EEF               	movlw	-17
 39915  0181E4  6AE3               	clrf	plusw1,c
 39916  0181E6  0EF0               	movlw	-16
 39917  0181E8  6AE3               	clrf	plusw1,c
 39918  0181EA  0EF1               	movlw	-15
 39919  0181EC  6AE3               	clrf	plusw1,c
 39920  0181EE  0EF2               	movlw	-14
 39921  0181F0  6AE3               	clrf	plusw1,c
 39922  0181F2                     l10454:
 39923                           
 39924                           ;stkvar	_new_exp @ sp[(-13)+8]
 39925  0181F2  0EFC               	movlw	-4
 39926  0181F4  BEE3               	btfsc	plusw1,7,c
 39927  0181F6  D007               	goto	u8570
 39928  0181F8  0EFC               	movlw	-4
 39929  0181FA  50E3               	movf	plusw1,w,c
 39930  0181FC  E112               	bnz	l10460
 39931  0181FE  0EFB               	movlw	-5
 39932  018200  04E3               	decf	plusw1,w,c
 39933  018202  B0D8               	btfsc	status,0,c
 39934  018204  D00E               	goto	l10460
 39935  018206                     u8570:
 39936                           
 39937                           ;stkvar	_new_exp @ sp[(-13)+8]
 39938  018206  0EFB               	movlw	-5
 39939  018208  6AE3               	clrf	plusw1,c
 39940  01820A  0EFC               	movlw	-4
 39941  01820C  6AE3               	clrf	plusw1,c
 39942                           
 39943                           ;stkvar	_b @ sp[(-13)+-4]
 39944  01820E  0EEF               	movlw	-17
 39945  018210  6AE3               	clrf	plusw1,c
 39946  018212  0EF0               	movlw	-16
 39947  018214  6AE3               	clrf	plusw1,c
 39948  018216  0EF1               	movlw	-15
 39949  018218  6AE3               	clrf	plusw1,c
 39950  01821A  0EF2               	movlw	-14
 39951  01821C  6AE3               	clrf	plusw1,c
 39952                           
 39953                           ;stkvar	_sign @ sp[(-13)+12]
 39954  01821E  0EFF               	movlw	-1
 39955  018220  6AE3               	clrf	plusw1,c
 39956  018222                     l10460:
 39957                           
 39958                           ;stkvar	_new_exp @ sp[(-13)+8]
 39959                           ;stkvar	_bexp @ sp[(-13)+11]
 39960  018222  0EFB               	movlw	-5
 39961  018224  006F FF8C  F02A    	movff	plusw1,btemp
 39962  01822A  0EFE               	movlw	-2
 39963  01822C  0060  F0AB  FFE3   	movff	btemp,plusw1
 39964                           
 39965                           ;stkvar	_bexp @ sp[(-13)+11]
 39966  018232  0EFE               	movlw	-2
 39967  018234  A0E3               	btfss	plusw1,0,c
 39968  018236  D009               	goto	l10466
 39969                           
 39970                           ;stkvar	_b @ sp[(-13)+-4]
 39971  018238  0EF1               	movlw	241
 39972  01823A  24E1               	addwf	fsr1l,w,c
 39973  01823C  6ED9               	movwf	fsr2l,c
 39974  01823E  0EFF               	movlw	255
 39975  018240  20E2               	addwfc	fsr1h,w,c
 39976  018242  6EDA               	movwf	fsr2h,c
 39977  018244  0E00               	movlw	0
 39978  018246  8EDB               	bsf	plusw2,7,c
 39979  018248  D008               	goto	l10468
 39980  01824A                     l10466:
 39981                           
 39982                           ;stkvar	_b @ sp[(-13)+-4]
 39983  01824A  0EF1               	movlw	241
 39984  01824C  24E1               	addwf	fsr1l,w,c
 39985  01824E  6ED9               	movwf	fsr2l,c
 39986  018250  0EFF               	movlw	255
 39987  018252  20E2               	addwfc	fsr1h,w,c
 39988  018254  6EDA               	movwf	fsr2h,c
 39989  018256  0E7F               	movlw	127
 39990  018258  16DF               	andwf	indf2,f,c
 39991  01825A                     l10468:
 39992                           
 39993                           ;stkvar	_b @ sp[(-13)+-4]
 39994  01825A  0EF2               	movlw	242
 39995  01825C  24E1               	addwf	fsr1l,w,c
 39996  01825E  6ED9               	movwf	fsr2l,c
 39997  018260  0EFF               	movlw	255
 39998  018262  20E2               	addwfc	fsr1h,w,c
 39999  018264  6EDA               	movwf	fsr2h,c
 40000                           
 40001                           ;stkvar	_bexp @ sp[(-13)+11]
 40002  018266  0EFE               	movlw	-2
 40003  018268  006F FF8C  F035    	movff	plusw1,btemp+11
 40004  01826E  90D8               	bcf	status,0,c
 40005  018270  3035               	rrcf	(btemp+11)^0,w,c
 40006  018272  6EDF               	movwf	indf2,c
 40007  018274  D644               	goto	l10366
 40008  018276                     l3310:
 40009                           
 40010                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 40011  018276  0EEB               	movlw	235
 40012  018278  26E1               	addwf	fsr1l,f,c
 40013  01827A  0EFF               	movlw	255
 40014  01827C  22E2               	addwfc	fsr1h,f,c
 40015  01827E  0012               	return		;funcret
 40016  018280                     __end_of___fldiv:
 40017                           	opt callstack 0
 40018                           
 40019 ;; *************** function ___flge *****************
 40020 ;; Defined at:
 40021 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 40022 ;; Parameters:    Size  Location     Type
 40023 ;;  ff1             4  [STACK] unsigned char 
 40024 ;;  ff2             4  [STACK] unsigned char 
 40025 ;; Auto vars:     Size  Location     Type
 40026 ;;		None
 40027 ;; Return value:  Size  Location     Type
 40028 ;;		None               void
 40029 ;; Registers used:
 40030 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 40031 ;; Tracked objects:
 40032 ;;		On entry : 0/1
 40033 ;;		On exit  : 0/0
 40034 ;;		Unchanged: 0/0
 40035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40040 ;;Total ram usage:        0 bytes
 40041 ;; Hardware stack levels used:    1
 40042 ;; Hardware stack levels required when called:   15
 40043 ;; This function calls:
 40044 ;;		Nothing
 40045 ;; This function is called by:
 40046 ;;		_main
 40047 ;;		_convert_dac_raw
 40048 ;;		_calc_ror_data
 40049 ;;		_check_day_time
 40050 ;;		_calc_bsoc
 40051 ;;		_efgtoa
 40052 ;; This function uses a reentrant model
 40053 ;;
 40054                           
 40055                           	psect	text147
 40056  01E9EA                     __ptext147:
 40057                           	opt callstack 0
 40058  01E9EA                     ___flge:
 40059                           	opt callstack 0
 40060                           
 40061                           ;stkvar	_ff1 @ sp[(0)+-4]
 40062                           
 40063                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40064                           ;incstack = 0
 40065 ;; hardware stack exceeded
 40066  01E9EA  50E1               	movf	fsr1l,w,c
 40067  01E9EC  0FFC               	addlw	-4
 40068  01E9EE  6ED9               	movwf	fsr2l,c
 40069  01E9F0  50E2               	movf	fsr1h,w,c
 40070  01E9F2  6EDA               	movwf	fsr2h,c
 40071  01E9F4  0EFF               	movlw	255
 40072  01E9F6  22DA               	addwfc	fsr2h,f,c
 40073  01E9F8  0E00               	movlw	0
 40074  01E9FA  14DE               	andwf	postinc2,w,c
 40075  01E9FC  6E32               	movwf	(btemp+8)^0,c
 40076  01E9FE  0E00               	movlw	0
 40077  01EA00  14DE               	andwf	postinc2,w,c
 40078  01EA02  6E33               	movwf	(btemp+9)^0,c
 40079  01EA04  0E80               	movlw	128
 40080  01EA06  14DE               	andwf	postinc2,w,c
 40081  01EA08  6E34               	movwf	(btemp+10)^0,c
 40082  01EA0A  0E7F               	movlw	127
 40083  01EA0C  14DE               	andwf	postinc2,w,c
 40084  01EA0E  6E35               	movwf	(btemp+11)^0,c
 40085  01EA10  5032               	movf	(btemp+8)^0,w,c
 40086  01EA12  1033               	iorwf	(btemp+9)^0,w,c
 40087  01EA14  1034               	iorwf	(btemp+10)^0,w,c
 40088  01EA16  1035               	iorwf	(btemp+11)^0,w,c
 40089  01EA18  A4D8               	btfss	status,2,c
 40090  01EA1A  D008               	goto	l10742
 40091                           
 40092                           ;stkvar	_ff1 @ sp[(0)+-4]
 40093  01EA1C  0EFC               	movlw	-4
 40094  01EA1E  6AE3               	clrf	plusw1,c
 40095  01EA20  0EFD               	movlw	-3
 40096  01EA22  6AE3               	clrf	plusw1,c
 40097  01EA24  0EFE               	movlw	-2
 40098  01EA26  6AE3               	clrf	plusw1,c
 40099  01EA28  0EFF               	movlw	-1
 40100  01EA2A  6AE3               	clrf	plusw1,c
 40101  01EA2C                     l10742:
 40102                           
 40103                           ;stkvar	_ff2 @ sp[(0)+-8]
 40104  01EA2C  50E1               	movf	fsr1l,w,c
 40105  01EA2E  0FF8               	addlw	-8
 40106  01EA30  6ED9               	movwf	fsr2l,c
 40107  01EA32  50E2               	movf	fsr1h,w,c
 40108  01EA34  6EDA               	movwf	fsr2h,c
 40109  01EA36  0EFF               	movlw	255
 40110  01EA38  22DA               	addwfc	fsr2h,f,c
 40111  01EA3A  0E00               	movlw	0
 40112  01EA3C  14DE               	andwf	postinc2,w,c
 40113  01EA3E  6E32               	movwf	(btemp+8)^0,c
 40114  01EA40  0E00               	movlw	0
 40115  01EA42  14DE               	andwf	postinc2,w,c
 40116  01EA44  6E33               	movwf	(btemp+9)^0,c
 40117  01EA46  0E80               	movlw	128
 40118  01EA48  14DE               	andwf	postinc2,w,c
 40119  01EA4A  6E34               	movwf	(btemp+10)^0,c
 40120  01EA4C  0E7F               	movlw	127
 40121  01EA4E  14DE               	andwf	postinc2,w,c
 40122  01EA50  6E35               	movwf	(btemp+11)^0,c
 40123  01EA52  5032               	movf	(btemp+8)^0,w,c
 40124  01EA54  1033               	iorwf	(btemp+9)^0,w,c
 40125  01EA56  1034               	iorwf	(btemp+10)^0,w,c
 40126  01EA58  1035               	iorwf	(btemp+11)^0,w,c
 40127  01EA5A  A4D8               	btfss	status,2,c
 40128  01EA5C  D008               	goto	l2991
 40129                           
 40130                           ;stkvar	_ff2 @ sp[(0)+-8]
 40131  01EA5E  0EF8               	movlw	-8
 40132  01EA60  6AE3               	clrf	plusw1,c
 40133  01EA62  0EF9               	movlw	-7
 40134  01EA64  6AE3               	clrf	plusw1,c
 40135  01EA66  0EFA               	movlw	-6
 40136  01EA68  6AE3               	clrf	plusw1,c
 40137  01EA6A  0EFB               	movlw	-5
 40138  01EA6C  6AE3               	clrf	plusw1,c
 40139  01EA6E                     l2991:
 40140                           
 40141                           ;stkvar	_ff1 @ sp[(0)+-4]
 40142  01EA6E  0EFF               	movlw	-1
 40143  01EA70  AEE3               	btfss	plusw1,7,c
 40144  01EA72  D024               	goto	l10748
 40145                           
 40146                           ;stkvar	_ff1 @ sp[(0)+-4]
 40147  01EA74  0E00               	movlw	0
 40148  01EA76  6E32               	movwf	(btemp+8)^0,c
 40149  01EA78  0E00               	movlw	0
 40150  01EA7A  6E33               	movwf	(btemp+9)^0,c
 40151  01EA7C  0E00               	movlw	0
 40152  01EA7E  6E34               	movwf	(btemp+10)^0,c
 40153  01EA80  0E80               	movlw	128
 40154  01EA82  6E35               	movwf	(btemp+11)^0,c
 40155  01EA84  0EFC               	movlw	-4
 40156  01EA86  50E3               	movf	plusw1,w,c
 40157  01EA88  5E32               	subwf	(btemp+8)^0,f,c
 40158  01EA8A  0EFD               	movlw	-3
 40159  01EA8C  50E3               	movf	plusw1,w,c
 40160  01EA8E  5A33               	subwfb	(btemp+9)^0,f,c
 40161  01EA90  0EFE               	movlw	-2
 40162  01EA92  50E3               	movf	plusw1,w,c
 40163  01EA94  5A34               	subwfb	(btemp+10)^0,f,c
 40164  01EA96  0EFF               	movlw	-1
 40165  01EA98  50E3               	movf	plusw1,w,c
 40166  01EA9A  5A35               	subwfb	(btemp+11)^0,f,c
 40167                           
 40168                           ;stkvar	_ff1 @ sp[(0)+-4]
 40169  01EA9C  0EFC               	movlw	-4
 40170  01EA9E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40171  01EAA4  0EFD               	movlw	-3
 40172  01EAA6  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40173  01EAAC  0EFE               	movlw	-2
 40174  01EAAE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40175  01EAB4  0EFF               	movlw	-1
 40176  01EAB6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40177  01EABC                     l10748:
 40178                           
 40179                           ;stkvar	_ff2 @ sp[(0)+-8]
 40180  01EABC  0EFB               	movlw	-5
 40181  01EABE  AEE3               	btfss	plusw1,7,c
 40182  01EAC0  D024               	goto	l10752
 40183                           
 40184                           ;stkvar	_ff2 @ sp[(0)+-8]
 40185  01EAC2  0E00               	movlw	0
 40186  01EAC4  6E32               	movwf	(btemp+8)^0,c
 40187  01EAC6  0E00               	movlw	0
 40188  01EAC8  6E33               	movwf	(btemp+9)^0,c
 40189  01EACA  0E00               	movlw	0
 40190  01EACC  6E34               	movwf	(btemp+10)^0,c
 40191  01EACE  0E80               	movlw	128
 40192  01EAD0  6E35               	movwf	(btemp+11)^0,c
 40193  01EAD2  0EF8               	movlw	-8
 40194  01EAD4  50E3               	movf	plusw1,w,c
 40195  01EAD6  5E32               	subwf	(btemp+8)^0,f,c
 40196  01EAD8  0EF9               	movlw	-7
 40197  01EADA  50E3               	movf	plusw1,w,c
 40198  01EADC  5A33               	subwfb	(btemp+9)^0,f,c
 40199  01EADE  0EFA               	movlw	-6
 40200  01EAE0  50E3               	movf	plusw1,w,c
 40201  01EAE2  5A34               	subwfb	(btemp+10)^0,f,c
 40202  01EAE4  0EFB               	movlw	-5
 40203  01EAE6  50E3               	movf	plusw1,w,c
 40204  01EAE8  5A35               	subwfb	(btemp+11)^0,f,c
 40205                           
 40206                           ;stkvar	_ff2 @ sp[(0)+-8]
 40207  01EAEA  0EF8               	movlw	-8
 40208  01EAEC  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40209  01EAF2  0EF9               	movlw	-7
 40210  01EAF4  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40211  01EAFA  0EFA               	movlw	-6
 40212  01EAFC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40213  01EB02  0EFB               	movlw	-5
 40214  01EB04  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40215  01EB0A                     l10752:
 40216                           
 40217                           ;stkvar	_ff1 @ sp[(0)+-4]
 40218  01EB0A  0EFF               	movlw	-1
 40219  01EB0C  7EE3               	btg	plusw1,7,c
 40220                           
 40221                           ;stkvar	_ff2 @ sp[(0)+-8]
 40222  01EB0E  0EFB               	movlw	-5
 40223  01EB10  7EE3               	btg	plusw1,7,c
 40224                           
 40225                           ;stkvar	_ff2 @ sp[(0)+-8]
 40226                           ;stkvar	_ff1 @ sp[(0)+-4]
 40227  01EB12  50E1               	movf	fsr1l,w,c
 40228  01EB14  0FFC               	addlw	-4
 40229  01EB16  6ED9               	movwf	fsr2l,c
 40230  01EB18  50E2               	movf	fsr1h,w,c
 40231  01EB1A  6EDA               	movwf	fsr2h,c
 40232  01EB1C  0EFF               	movlw	255
 40233  01EB1E  22DA               	addwfc	fsr2h,f,c
 40234  01EB20  0EF8               	movlw	-8
 40235  01EB22  50E3               	movf	plusw1,w,c
 40236  01EB24  5CDE               	subwf	postinc2,w,c
 40237  01EB26  0EF9               	movlw	-7
 40238  01EB28  50E3               	movf	plusw1,w,c
 40239  01EB2A  58DE               	subwfb	postinc2,w,c
 40240  01EB2C  0EFA               	movlw	-6
 40241  01EB2E  50E3               	movf	plusw1,w,c
 40242  01EB30  58DE               	subwfb	postinc2,w,c
 40243  01EB32  0EFB               	movlw	-5
 40244  01EB34  50E3               	movf	plusw1,w,c
 40245  01EB36  58DE               	subwfb	postinc2,w,c
 40246  01EB38  B0D8               	btfsc	status,0,c
 40247  01EB3A  D002               	goto	l10760
 40248  01EB3C  902A               	bcf	btemp& (0+255),0,c
 40249  01EB3E  D001               	goto	l2998
 40250  01EB40                     l10760:
 40251  01EB40  802A               	bsf	btemp& (0+255),0,c
 40252  01EB42                     l2998:
 40253                           
 40254                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 40255  01EB42  0EF8               	movlw	248
 40256  01EB44  26E1               	addwf	fsr1l,f,c
 40257  01EB46  0EFF               	movlw	255
 40258  01EB48  22E2               	addwfc	fsr1h,f,c
 40259  01EB4A  0012               	return		;funcret
 40260  01EB4C                     __end_of___flge:
 40261                           	opt callstack 0
 40262                           
 40263 ;; *************** function _calc_model_data *****************
 40264 ;; Defined at:
 40265 ;;		line 67 in file "mbmc.c"
 40266 ;; Parameters:    Size  Location     Type
 40267 ;;		None
 40268 ;; Auto vars:     Size  Location     Type
 40269 ;;		None
 40270 ;; Return value:  Size  Location     Type
 40271 ;;                  1  [STACK] void 
 40272 ;; Registers used:
 40273 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 40274 ;; Tracked objects:
 40275 ;;		On entry : 3F/0
 40276 ;;		On exit  : 3F/39
 40277 ;;		Unchanged: 0/0
 40278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40283 ;;Total ram usage:        0 bytes
 40284 ;; Hardware stack levels used:    1
 40285 ;; Hardware stack levels required when called:   18
 40286 ;; This function calls:
 40287 ;;		___fladd
 40288 ;;		___flmul
 40289 ;;		___flsub
 40290 ;;		_lp_filter
 40291 ;;		_start_bsoc
 40292 ;;		_stop_bsoc
 40293 ;; This function is called by:
 40294 ;;		_main
 40295 ;; This function uses a reentrant model
 40296 ;;
 40297                           
 40298                           	psect	text148
 40299  0199AC                     __ptext148:
 40300                           	opt callstack 0
 40301  0199AC                     _calc_model_data:
 40302                           	opt callstack 12
 40303                           
 40304                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 40305                           
 40306                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40307                           ;incstack = 0
 40308  0199AC  EC7C  F015         	call	_stop_bsoc	;wreg free
 40309                           
 40310                           ; BSR set to: 57
 40311                           ;mbmc.c: 72:  if (!V.calib) {
 40312  0199B0  0102               	movlb	2	; () banked
 40313  0199B2  51B0               	movf	(_V+169)& (0+255),w,b	;volatile
 40314  0199B4  A4D8               	btfss	status,2,c
 40315  0199B6  D220               	goto	l14436
 40316                           
 40317                           ; BSR set to: 2
 40318                           ;mbmc.c: 73:   C.updates++;
 40319  0199B8  EE22  F23B         	lfsr	2,_C+316	;volatile
 40320  0199BC  2ADE               	incf	postinc2,f,c
 40321  0199BE  0E00               	movlw	0
 40322  0199C0  22DE               	addwfc	postinc2,f,c
 40323  0199C2  22DE               	addwfc	postinc2,f,c
 40324  0199C4  22DE               	addwfc	postinc2,f,c
 40325                           
 40326                           ; BSR set to: 2
 40327                           ;mbmc.c: 74:   C.c_bat = C.calc[C_BATT];
 40328  0199C6  EE22  F0FF         	lfsr	2,_C
 40329  0199CA  006F FF78  F943    	movff	postinc2,_C+68	;volatile
 40330  0199D0  006F FF78  F944    	movff	postinc2,_C+69	;volatile
 40331  0199D6  006F FF78  F945    	movff	postinc2,_C+70	;volatile
 40332  0199DC  006F FF74  F946    	movff	postdec2,_C+71	;volatile
 40333                           
 40334                           ; BSR set to: 2
 40335                           ;mbmc.c: 75:   C.bc_ror = C.c_bat - bcror;
 40336  0199E2  0060  F223  FFE6   	movff	calc_model_data@bcror,postinc1
 40337  0199E8  0060  F227  FFE6   	movff	calc_model_data@bcror+1,postinc1
 40338  0199EE  0060  F22B  FFE6   	movff	calc_model_data@bcror+2,postinc1
 40339  0199F4  0060  F22F  FFE6   	movff	calc_model_data@bcror+3,postinc1
 40340  0199FA  EE22  F143         	lfsr	2,_C+68	;volatile
 40341  0199FE  006F FF7B FFE6     	movff	postinc2,postinc1
 40342  019A04  006F FF7B FFE6     	movff	postinc2,postinc1
 40343  019A0A  006F FF7B FFE6     	movff	postinc2,postinc1
 40344  019A10  006F FF7B FFE6     	movff	postinc2,postinc1
 40345  019A16  EC2A  F00F         	call	___flsub	;wreg free
 40346  019A1A  0060  F0A8  F96F   	movff	btemp,_C+112	;volatile
 40347  019A20  0060  F0AC  F970   	movff	btemp+1,_C+113	;volatile
 40348  019A26  0060  F0B0  F971   	movff	btemp+2,_C+114	;volatile
 40349  019A2C  0060  F0B4  F972   	movff	btemp+3,_C+115	;volatile
 40350                           
 40351                           ;mbmc.c: 76:   bcror = C.c_bat;
 40352  019A32  C943  F088         	movff	_C+68,calc_model_data@bcror	;volatile
 40353  019A36  C944  F089         	movff	_C+69,calc_model_data@bcror+1	;volatile
 40354  019A3A  C945  F08A         	movff	_C+70,calc_model_data@bcror+2	;volatile
 40355  019A3E  C946  F08B         	movff	_C+71,calc_model_data@bcror+3	;volatile
 40356                           
 40357                           ;mbmc.c: 77:   C.c_pv = C.calc[C_PV];
 40358  019A42  EE22  F103         	lfsr	2,_C+4	;volatile
 40359  019A46  006F FF78  F947    	movff	postinc2,_C+72	;volatile
 40360  019A4C  006F FF78  F948    	movff	postinc2,_C+73	;volatile
 40361  019A52  006F FF78  F949    	movff	postinc2,_C+74	;volatile
 40362  019A58  006F FF74  F94A    	movff	postdec2,_C+75	;volatile
 40363                           
 40364                           ;mbmc.c: 78:   C.v_bat = C.calc[V_BAT];
 40365  019A5E  EE22  F10F         	lfsr	2,_C+16	;volatile
 40366  019A62  006F FF78  F953    	movff	postinc2,_C+84	;volatile
 40367  019A68  006F FF78  F954    	movff	postinc2,_C+85	;volatile
 40368  019A6E  006F FF78  F955    	movff	postinc2,_C+86	;volatile
 40369  019A74  006F FF74  F956    	movff	postdec2,_C+87	;volatile
 40370                           
 40371                           ;mbmc.c: 79:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 40372  019A7A  EE22  F133         	lfsr	2,_C+52	;volatile
 40373  019A7E  006F FF78  F967    	movff	postinc2,_C+104	;volatile
 40374  019A84  006F FF78  F968    	movff	postinc2,_C+105	;volatile
 40375  019A8A  006F FF78  F969    	movff	postinc2,_C+106	;volatile
 40376  019A90  006F FF74  F96A    	movff	postdec2,_C+107	;volatile
 40377                           
 40378                           ;mbmc.c: 80:   C.bv_ror = C.v_bat - bvror;
 40379  019A96  0060  F233  FFE6   	movff	calc_model_data@bvror,postinc1
 40380  019A9C  0060  F237  FFE6   	movff	calc_model_data@bvror+1,postinc1
 40381  019AA2  0060  F23B  FFE6   	movff	calc_model_data@bvror+2,postinc1
 40382  019AA8  0060  F23F  FFE6   	movff	calc_model_data@bvror+3,postinc1
 40383  019AAE  EE22  F153         	lfsr	2,_C+84	;volatile
 40384  019AB2  006F FF7B FFE6     	movff	postinc2,postinc1
 40385  019AB8  006F FF7B FFE6     	movff	postinc2,postinc1
 40386  019ABE  006F FF7B FFE6     	movff	postinc2,postinc1
 40387  019AC4  006F FF7B FFE6     	movff	postinc2,postinc1
 40388  019ACA  EC2A  F00F         	call	___flsub	;wreg free
 40389  019ACE  0060  F0A8  F96B   	movff	btemp,_C+108	;volatile
 40390  019AD4  0060  F0AC  F96C   	movff	btemp+1,_C+109	;volatile
 40391  019ADA  0060  F0B0  F96D   	movff	btemp+2,_C+110	;volatile
 40392  019AE0  0060  F0B4  F96E   	movff	btemp+3,_C+111	;volatile
 40393                           
 40394                           ;mbmc.c: 81:   bvror = C.v_bat;
 40395  019AE6  C953  F08C         	movff	_C+84,calc_model_data@bvror	;volatile
 40396  019AEA  C954  F08D         	movff	_C+85,calc_model_data@bvror+1	;volatile
 40397  019AEE  C955  F08E         	movff	_C+86,calc_model_data@bvror+2	;volatile
 40398  019AF2  C956  F08F         	movff	_C+87,calc_model_data@bvror+3	;volatile
 40399                           
 40400                           ;mbmc.c: 82:   C.v_pv = C.calc[V_PV];
 40401  019AF6  EE22  F113         	lfsr	2,_C+20	;volatile
 40402  019AFA  006F FF78  F94F    	movff	postinc2,_C+80	;volatile
 40403  019B00  006F FF78  F950    	movff	postinc2,_C+81	;volatile
 40404  019B06  006F FF78  F951    	movff	postinc2,_C+82	;volatile
 40405  019B0C  006F FF74  F952    	movff	postdec2,_C+83	;volatile
 40406                           
 40407                           ;mbmc.c: 83:   C.v_cc = C.calc[V_CC];
 40408  019B12  EE22  F107         	lfsr	2,_C+8	;volatile
 40409  019B16  006F FF78  F94B    	movff	postinc2,_C+76	;volatile
 40410  019B1C  006F FF78  F94C    	movff	postinc2,_C+77	;volatile
 40411  019B22  006F FF78  F94D    	movff	postinc2,_C+78	;volatile
 40412  019B28  006F FF74  F94E    	movff	postdec2,_C+79	;volatile
 40413                           
 40414                           ;mbmc.c: 84:   C.v_inverter = C.calc[V_INVERTER];
 40415  019B2E  EE22  F12F         	lfsr	2,_C+48	;volatile
 40416  019B32  006F FF78  F963    	movff	postinc2,_C+100	;volatile
 40417  019B38  006F FF78  F964    	movff	postinc2,_C+101	;volatile
 40418  019B3E  006F FF78  F965    	movff	postinc2,_C+102	;volatile
 40419  019B44  006F FF74  F966    	movff	postdec2,_C+103	;volatile
 40420                           
 40421                           ;mbmc.c: 85:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 40422  019B4A  0E01               	movlw	1
 40423  019B4C  6EE6               	movwf	postinc1,c
 40424  019B4E  0E10               	movlw	16
 40425  019B50  6EE6               	movwf	postinc1,c
 40426  019B52  EE22  F0FF         	lfsr	2,_C
 40427  019B56  006F FF7B FFE6     	movff	postinc2,postinc1
 40428  019B5C  006F FF7B FFE6     	movff	postinc2,postinc1
 40429  019B62  006F FF7B FFE6     	movff	postinc2,postinc1
 40430  019B68  006F FF7B FFE6     	movff	postinc2,postinc1
 40431  019B6E  EE22  F103         	lfsr	2,_C+4	;volatile
 40432  019B72  006F FF7B FFE6     	movff	postinc2,postinc1
 40433  019B78  006F FF7B FFE6     	movff	postinc2,postinc1
 40434  019B7E  006F FF7B FFE6     	movff	postinc2,postinc1
 40435  019B84  006F FF7B FFE6     	movff	postinc2,postinc1
 40436  019B8A  EC2A  F00F         	call	___flsub	;wreg free
 40437  019B8E  0060  F0AB  FFE6   	movff	btemp,postinc1
 40438  019B94  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40439  019B9A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40440  019BA0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40441  019BA6  EC41  F0ED         	call	_lp_filter	;wreg free
 40442  019BAA  0060  F0A8  F93F   	movff	btemp,_C+64	;volatile
 40443  019BB0  0060  F0AC  F940   	movff	btemp+1,_C+65	;volatile
 40444  019BB6  0060  F0B0  F941   	movff	btemp+2,_C+66	;volatile
 40445  019BBC  0060  F0B4  F942   	movff	btemp+3,_C+67	;volatile
 40446                           
 40447                           ;mbmc.c: 86:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 40448  019BC2  0E01               	movlw	1
 40449  019BC4  6EE6               	movwf	postinc1,c
 40450  019BC6  0E11               	movlw	17
 40451  019BC8  6EE6               	movwf	postinc1,c
 40452  019BCA  EE22  F153         	lfsr	2,_C+84	;volatile
 40453  019BCE  006F FF7B FFE6     	movff	postinc2,postinc1
 40454  019BD4  006F FF7B FFE6     	movff	postinc2,postinc1
 40455  019BDA  006F FF7B FFE6     	movff	postinc2,postinc1
 40456  019BE0  006F FF7B FFE6     	movff	postinc2,postinc1
 40457  019BE6  EE22  F13F         	lfsr	2,_C+64	;volatile
 40458  019BEA  006F FF7B FFE6     	movff	postinc2,postinc1
 40459  019BF0  006F FF7B FFE6     	movff	postinc2,postinc1
 40460  019BF6  006F FF7B FFE6     	movff	postinc2,postinc1
 40461  019BFC  006F FF7B FFE6     	movff	postinc2,postinc1
 40462  019C02  EC32  F0B3         	call	___flmul	;wreg free
 40463  019C06  0060  F0AB  FFE6   	movff	btemp,postinc1
 40464  019C0C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40465  019C12  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40466  019C18  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40467  019C1E  EC41  F0ED         	call	_lp_filter	;wreg free
 40468  019C22  0060  F0A8  F973   	movff	btemp,_C+116	;volatile
 40469  019C28  0060  F0AC  F974   	movff	btemp+1,_C+117	;volatile
 40470  019C2E  0060  F0B0  F975   	movff	btemp+2,_C+118	;volatile
 40471  019C34  0060  F0B4  F976   	movff	btemp+3,_C+119	;volatile
 40472                           
 40473                           ;mbmc.c: 87:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 40474  019C3A  0E01               	movlw	1
 40475  019C3C  6EE6               	movwf	postinc1,c
 40476  019C3E  0E12               	movlw	18
 40477  019C40  6EE6               	movwf	postinc1,c
 40478  019C42  EE22  F14F         	lfsr	2,_C+80	;volatile
 40479  019C46  006F FF7B FFE6     	movff	postinc2,postinc1
 40480  019C4C  006F FF7B FFE6     	movff	postinc2,postinc1
 40481  019C52  006F FF7B FFE6     	movff	postinc2,postinc1
 40482  019C58  006F FF7B FFE6     	movff	postinc2,postinc1
 40483  019C5E  EE22  F147         	lfsr	2,_C+72	;volatile
 40484  019C62  006F FF7B FFE6     	movff	postinc2,postinc1
 40485  019C68  006F FF7B FFE6     	movff	postinc2,postinc1
 40486  019C6E  006F FF7B FFE6     	movff	postinc2,postinc1
 40487  019C74  006F FF7B FFE6     	movff	postinc2,postinc1
 40488  019C7A  EC32  F0B3         	call	___flmul	;wreg free
 40489  019C7E  0060  F0AB  FFE6   	movff	btemp,postinc1
 40490  019C84  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40491  019C8A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40492  019C90  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40493  019C96  EC41  F0ED         	call	_lp_filter	;wreg free
 40494  019C9A  0060  F0A8  F97B   	movff	btemp,_C+124	;volatile
 40495  019CA0  0060  F0AC  F97C   	movff	btemp+1,_C+125	;volatile
 40496  019CA6  0060  F0B0  F97D   	movff	btemp+2,_C+126	;volatile
 40497  019CAC  0060  F0B4  F97E   	movff	btemp+3,_C+127	;volatile
 40498                           
 40499                           ;mbmc.c: 88:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 40500  019CB2  0E01               	movlw	1
 40501  019CB4  6EE6               	movwf	postinc1,c
 40502  019CB6  0E13               	movlw	19
 40503  019CB8  6EE6               	movwf	postinc1,c
 40504  019CBA  0E00               	movlw	0
 40505  019CBC  6EE6               	movwf	postinc1,c
 40506  019CBE  0E00               	movlw	0
 40507  019CC0  6EE6               	movwf	postinc1,c
 40508  019CC2  0E60               	movlw	96
 40509  019CC4  6EE6               	movwf	postinc1,c
 40510  019CC6  0EC1               	movlw	193
 40511  019CC8  6EE6               	movwf	postinc1,c
 40512  019CCA  EE22  F163         	lfsr	2,_C+100	;volatile
 40513  019CCE  006F FF7B FFE6     	movff	postinc2,postinc1
 40514  019CD4  006F FF7B FFE6     	movff	postinc2,postinc1
 40515  019CDA  006F FF7B FFE6     	movff	postinc2,postinc1
 40516  019CE0  006F FF7B FFE6     	movff	postinc2,postinc1
 40517  019CE6  EE22  F13F         	lfsr	2,_C+64	;volatile
 40518  019CEA  006F FF7B FFE6     	movff	postinc2,postinc1
 40519  019CF0  006F FF7B FFE6     	movff	postinc2,postinc1
 40520  019CF6  006F FF7B FFE6     	movff	postinc2,postinc1
 40521  019CFC  006F FF7B FFE6     	movff	postinc2,postinc1
 40522  019D02  EC32  F0B3         	call	___flmul	;wreg free
 40523  019D06  0060  F0AB  FFE6   	movff	btemp,postinc1
 40524  019D0C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40525  019D12  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40526  019D18  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40527  019D1E  EC47  F0B7         	call	___fladd	;wreg free
 40528  019D22  0060  F0AB  FFE6   	movff	btemp,postinc1
 40529  019D28  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40530  019D2E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40531  019D34  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40532  019D3A  EC41  F0ED         	call	_lp_filter	;wreg free
 40533  019D3E  0060  F0A8  F977   	movff	btemp,_C+120	;volatile
 40534  019D44  0060  F0AC  F978   	movff	btemp+1,_C+121	;volatile
 40535  019D4A  0060  F0B0  F979   	movff	btemp+2,_C+122	;volatile
 40536  019D50  0060  F0B4  F97A   	movff	btemp+3,_C+123	;volatile
 40537                           
 40538                           ;mbmc.c: 89:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 40539  019D56  0E01               	movlw	1
 40540  019D58  6EE6               	movwf	postinc1,c
 40541  019D5A  0E14               	movlw	20
 40542  019D5C  6EE6               	movwf	postinc1,c
 40543  019D5E  EE22  F153         	lfsr	2,_C+84	;volatile
 40544  019D62  006F FF7B FFE6     	movff	postinc2,postinc1
 40545  019D68  006F FF7B FFE6     	movff	postinc2,postinc1
 40546  019D6E  006F FF7B FFE6     	movff	postinc2,postinc1
 40547  019D74  006F FF7B FFE6     	movff	postinc2,postinc1
 40548  019D7A  EE22  F143         	lfsr	2,_C+68	;volatile
 40549  019D7E  006F FF7B FFE6     	movff	postinc2,postinc1
 40550  019D84  006F FF7B FFE6     	movff	postinc2,postinc1
 40551  019D8A  006F FF7B FFE6     	movff	postinc2,postinc1
 40552  019D90  006F FF7B FFE6     	movff	postinc2,postinc1
 40553  019D96  EC32  F0B3         	call	___flmul	;wreg free
 40554  019D9A  0060  F0AB  FFE6   	movff	btemp,postinc1
 40555  019DA0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40556  019DA6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40557  019DAC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40558  019DB2  EC41  F0ED         	call	_lp_filter	;wreg free
 40559  019DB6  0060  F0A8  F97F   	movff	btemp,_C+128	;volatile
 40560  019DBC  0060  F0AC  F980   	movff	btemp+1,_C+129	;volatile
 40561  019DC2  0060  F0B0  F981   	movff	btemp+2,_C+130	;volatile
 40562  019DC8  0060  F0B4  F982   	movff	btemp+3,_C+131	;volatile
 40563                           
 40564                           ;mbmc.c: 93:   if (C.p_inverter < 0.0)
 40565  019DCE  EE22  F177         	lfsr	2,_C+120	;volatile
 40566  019DD2  0E03               	movlw	3
 40567  019DD4  AEDB               	btfss	plusw2,7,c
 40568  019DD6  D010               	goto	l14436
 40569                           
 40570                           ;mbmc.c: 94:    C.p_inverter = 0.0001;
 40571  019DD8  0E17               	movlw	23
 40572  019DDA  006F FFA0  F977    	movff	wreg,_C+120	;volatile
 40573  019DE0  0EB7               	movlw	183
 40574  019DE2  006F FFA0  F978    	movff	wreg,_C+121	;volatile
 40575  019DE8  0ED1               	movlw	209
 40576  019DEA  006F FFA0  F979    	movff	wreg,_C+122	;volatile
 40577  019DF0  0E38               	movlw	56
 40578  019DF2  006F FFA0  F97A    	movff	wreg,_C+123	;volatile
 40579  019DF8                     l14436:
 40580                           
 40581                           ;mbmc.c: 96:  start_bsoc();
 40582  019DF8  ECF1  F013         	call	_start_bsoc	;wreg free
 40583                           
 40584                           ; BSR set to: 57
 40585                           ;mbmc.c: 97:  C.update = 1;
 40586  019DFC  0E01               	movlw	1
 40587  019DFE  006F FFA0  F9B7    	movff	wreg,_C+184	;volatile
 40588                           
 40589                           ; BSR set to: 57
 40590                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 40591  019E04  0012               	return		;funcret
 40592  019E06                     __end_of_calc_model_data:
 40593                           	opt callstack 0
 40594                           
 40595 ;; *************** function _stop_bsoc *****************
 40596 ;; Defined at:
 40597 ;;		line 130 in file "bsoc.c"
 40598 ;; Parameters:    Size  Location     Type
 40599 ;;		None
 40600 ;; Auto vars:     Size  Location     Type
 40601 ;;		None
 40602 ;; Return value:  Size  Location     Type
 40603 ;;                  1  [STACK] void 
 40604 ;; Registers used:
 40605 ;;		None
 40606 ;; Tracked objects:
 40607 ;;		On entry : 0/1
 40608 ;;		On exit  : 3F/39
 40609 ;;		Unchanged: 0/0
 40610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40615 ;;Total ram usage:        0 bytes
 40616 ;; Hardware stack levels used:    1
 40617 ;; Hardware stack levels required when called:   15
 40618 ;; This function calls:
 40619 ;;		Nothing
 40620 ;; This function is called by:
 40621 ;;		_calc_model_data
 40622 ;;		_load_hist_data
 40623 ;; This function uses a reentrant model
 40624 ;;
 40625                           
 40626                           	psect	text149
 40627  002AF8                     __ptext149:
 40628                           	opt callstack 0
 40629  002AF8                     _stop_bsoc:
 40630                           	opt callstack 14
 40631                           
 40632                           ;bsoc.c: 133:  PIE6bits.TMR3IE = 0;
 40633                           
 40634                           ; BSR set to: 57
 40635                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40636                           ;incstack = 0
 40637  002AF8  0139               	movlb	57	; () banked
 40638  002AFA  9D96               	bcf	150,6,b	;volatile
 40639                           
 40640                           ; BSR set to: 57
 40641                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 40642  002AFC  0012               	return		;funcret
 40643  002AFE                     __end_of_stop_bsoc:
 40644                           	opt callstack 0
 40645                           
 40646 ;; *************** function _start_bsoc *****************
 40647 ;; Defined at:
 40648 ;;		line 121 in file "bsoc.c"
 40649 ;; Parameters:    Size  Location     Type
 40650 ;;		None
 40651 ;; Auto vars:     Size  Location     Type
 40652 ;;		None
 40653 ;; Return value:  Size  Location     Type
 40654 ;;                  1  [STACK] void 
 40655 ;; Registers used:
 40656 ;;		wreg, status,2, status,0, btemp+11
 40657 ;; Tracked objects:
 40658 ;;		On entry : 0/39
 40659 ;;		On exit  : 3F/39
 40660 ;;		Unchanged: 0/0
 40661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40666 ;;Total ram usage:        0 bytes
 40667 ;; Hardware stack levels used:    1
 40668 ;; Hardware stack levels required when called:   15
 40669 ;; This function calls:
 40670 ;;		Nothing
 40671 ;; This function is called by:
 40672 ;;		_calc_model_data
 40673 ;;		_load_hist_data
 40674 ;; This function uses a reentrant model
 40675 ;;
 40676                           
 40677                           	psect	text150
 40678  0027E2                     __ptext150:
 40679                           	opt callstack 0
 40680  0027E2                     _start_bsoc:
 40681                           	opt callstack 14
 40682                           
 40683                           ;bsoc.c: 124:  PIE6bits.TMR3IE = 1;
 40684                           
 40685                           ; BSR set to: 57
 40686                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40687                           ;incstack = 0
 40688  0027E2  0139               	movlb	57	; () banked
 40689  0027E4  8D96               	bsf	150,6,b	;volatile
 40690                           
 40691                           ; BSR set to: 57
 40692  0027E6  A4BE               	btfss	190,2,c	;volatile
 40693  0027E8  D002               	goto	u12780
 40694  0027EA  0E01               	movlw	1
 40695  0027EC  D001               	goto	u12786
 40696  0027EE                     u12780:
 40697  0027EE  0E00               	movlw	0
 40698  0027F0                     u12786:
 40699  0027F0  0AFF               	xorlw	255
 40700  0027F2  6E35               	movwf	(btemp+11)^0,c
 40701  0027F4  4635               	rlncf	(btemp+11)^0,f,c
 40702  0027F6  4635               	rlncf	(btemp+11)^0,f,c
 40703  0027F8  50BE               	movf	190,w,c	;volatile
 40704  0027FA  1835               	xorwf	(btemp+11)^0,w,c
 40705  0027FC  0BFB               	andlw	-5
 40706  0027FE  1835               	xorwf	(btemp+11)^0,w,c
 40707  002800  6EBE               	movwf	190,c	;volatile
 40708                           
 40709                           ; BSR set to: 57
 40710                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 40711  002802  0012               	return		;funcret
 40712  002804                     __end_of_start_bsoc:
 40713                           	opt callstack 0
 40714                           
 40715 ;; *************** function _lp_filter *****************
 40716 ;; Defined at:
 40717 ;;		line 29 in file "mbmc.c"
 40718 ;; Parameters:    Size  Location     Type
 40719 ;;  new             4  [STACK] const float 
 40720 ;;  bn              1  [STACK] const unsigned char 
 40721 ;;  slow            1  [STACK] const char 
 40722 ;; Auto vars:     Size  Location     Type
 40723 ;;  lp_speed        4  [STACK] float 
 40724 ;; Return value:  Size  Location     Type
 40725 ;;                  4  [STACK] float 
 40726 ;; Registers used:
 40727 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 40728 ;; Tracked objects:
 40729 ;;		On entry : 0/2
 40730 ;;		On exit  : 0/0
 40731 ;;		Unchanged: 0/0
 40732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40737 ;;Total ram usage:        0 bytes
 40738 ;; Hardware stack levels used:    1
 40739 ;; Hardware stack levels required when called:   17
 40740 ;; This function calls:
 40741 ;;		___fladd
 40742 ;;		___flmul
 40743 ;;		___flsub
 40744 ;; This function is called by:
 40745 ;;		_main
 40746 ;;		_convert_adc_data
 40747 ;;		_calc_model_data
 40748 ;; This function uses a reentrant model
 40749 ;;
 40750                           
 40751                           	psect	text151
 40752  01DA82                     __ptext151:
 40753                           	opt callstack 0
 40754  01DA82                     _lp_filter:
 40755                           	opt callstack 0
 40756                           
 40757                           ; BSR set to: 57
 40758                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40759  01DA82  52E6               	movf	postinc1,f,c
 40760  01DA84  52E6               	movf	postinc1,f,c
 40761  01DA86  52E6               	movf	postinc1,f,c
 40762  01DA88  52E6               	movf	postinc1,f,c
 40763                           
 40764                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 40765                           ;stkvar	_bn @ sp[(-4)+-5]
 40766                           
 40767                           ;incstack = 0
 40768  01DA8A  0EF7               	movlw	-9
 40769  01DA8C  006F FF8C  F02A    	movff	plusw1,btemp
 40770  01DA92  0E14               	movlw	20
 40771  01DA94  642A               	cpfsgt	btemp^0,c
 40772  01DA96  D011               	goto	l13548
 40773  01DA98                     u12610:
 40774                           
 40775                           ;mbmc.c: 35:   return new;
 40776                           ;stkvar	_new @ sp[(-4)+-4]
 40777  01DA98  0EF8               	movlw	-8
 40778  01DA9A  006F FF8C  F02A    	movff	plusw1,btemp
 40779  01DAA0  0EF9               	movlw	-7
 40780  01DAA2  006F FF8C  F02B    	movff	plusw1,btemp+1
 40781  01DAA8  0EFA               	movlw	-6
 40782  01DAAA  006F FF8C  F02C    	movff	plusw1,btemp+2
 40783  01DAB0  0EFB               	movlw	-5
 40784  01DAB2  006F FF8C  F02D    	movff	plusw1,btemp+3
 40785  01DAB8  D0BD               	goto	l2141
 40786  01DABA                     l13548:
 40787                           
 40788                           ;mbmc.c: 37:  if (slow == (-1)) {
 40789                           ;stkvar	_slow @ sp[(-4)+-6]
 40790  01DABA  0EF6               	movlw	-10
 40791  01DABC  28E3               	incf	plusw1,w,c
 40792  01DABE  A4D8               	btfss	status,2,c
 40793  01DAC0  D012               	goto	l13556
 40794                           
 40795                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 40796                           ;stkvar	_bn @ sp[(-4)+-5]
 40797  01DAC2  0EF7               	movlw	-9
 40798  01DAC4  50E3               	movf	plusw1,w,c
 40799  01DAC6  0D04               	mullw	4
 40800  01DAC8  0E00               	movlw	low lp_filter@smooth
 40801  01DACA  24F3               	addwf	243,w,c
 40802  01DACC  6ED9               	movwf	fsr2l,c
 40803  01DACE  0E03               	movlw	high lp_filter@smooth
 40804  01DAD0  20F4               	addwfc	prodh,w,c
 40805  01DAD2  6EDA               	movwf	fsr2h,c
 40806  01DAD4  0E00               	movlw	0
 40807  01DAD6  6EDE               	movwf	postinc2,c
 40808  01DAD8  0E00               	movlw	0
 40809  01DADA  6EDE               	movwf	postinc2,c
 40810  01DADC  0E00               	movlw	0
 40811  01DADE  6EDE               	movwf	postinc2,c
 40812  01DAE0  0E00               	movlw	0
 40813  01DAE2  6EDD               	movwf	postdec2,c
 40814  01DAE4  D7D9               	goto	u12610
 40815  01DAE6                     l13556:
 40816                           
 40817                           ;mbmc.c: 42:  if (slow) {
 40818                           ;stkvar	_slow @ sp[(-4)+-6]
 40819  01DAE6  0EF6               	movlw	-10
 40820  01DAE8  50E3               	movf	plusw1,w,c
 40821  01DAEA  B4D8               	btfsc	status,2,c
 40822  01DAEC  D006               	goto	l13560
 40823                           
 40824                           ;mbmc.c: 43:   lp_speed = 0.033;
 40825  01DAEE  0E02               	movlw	2
 40826  01DAF0  6E32               	movwf	(btemp+8)^0,c
 40827  01DAF2  0E2B               	movlw	43
 40828  01DAF4  6E33               	movwf	(btemp+9)^0,c
 40829  01DAF6  0E07               	movlw	7
 40830  01DAF8  D005               	goto	L46
 40831  01DAFA                     l13560:
 40832                           
 40833                           ;mbmc.c: 45:   lp_speed = 0.066;
 40834  01DAFA  0E02               	movlw	2
 40835  01DAFC  6E32               	movwf	(btemp+8)^0,c
 40836  01DAFE  0E2B               	movlw	43
 40837  01DB00  6E33               	movwf	(btemp+9)^0,c
 40838  01DB02  0E87               	movlw	135
 40839  01DB04                     L46:
 40840  01DB04  6E34               	movwf	(btemp+10)^0,c
 40841  01DB06  0E3D               	movlw	61
 40842  01DB08  6E35               	movwf	(btemp+11)^0,c
 40843                           
 40844                           ;stkvar	_lp_speed @ sp[(-4)+0]
 40845  01DB0A  0EFC               	movlw	-4
 40846  01DB0C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40847  01DB12  0EFD               	movlw	-3
 40848  01DB14  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40849  01DB1A  0EFE               	movlw	-2
 40850  01DB1C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40851  01DB22  0EFF               	movlw	-1
 40852  01DB24  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40853                           
 40854                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 40855                           ;stkvar	_bn @ sp[(-4)+-5]
 40856  01DB2A  0EF7               	movlw	-9
 40857  01DB2C  50E3               	movf	plusw1,w,c
 40858  01DB2E  0D04               	mullw	4
 40859  01DB30  0E00               	movlw	low lp_filter@smooth
 40860  01DB32  24F3               	addwf	243,w,c
 40861  01DB34  6ED9               	movwf	fsr2l,c
 40862  01DB36  0E03               	movlw	high lp_filter@smooth
 40863  01DB38  20F4               	addwfc	prodh,w,c
 40864  01DB3A  6EDA               	movwf	fsr2h,c
 40865  01DB3C  006F FF7B FFE6     	movff	postinc2,postinc1
 40866  01DB42  006F FF7B FFE6     	movff	postinc2,postinc1
 40867  01DB48  006F FF7B FFE6     	movff	postinc2,postinc1
 40868  01DB4E  006F FF7B FFE6     	movff	postinc2,postinc1
 40869                           
 40870                           ;stkvar	_lp_speed @ sp[(-8)+0]
 40871  01DB54  0EF8               	movlw	-8
 40872  01DB56  006F FF8F FFE6     	movff	plusw1,postinc1
 40873  01DB5C  006F FF8F FFE6     	movff	plusw1,postinc1
 40874  01DB62  006F FF8F FFE6     	movff	plusw1,postinc1
 40875  01DB68  006F FF8F FFE6     	movff	plusw1,postinc1
 40876                           
 40877                           ;stkvar	_bn @ sp[(-12)+-5]
 40878  01DB6E  0EEF               	movlw	-17
 40879  01DB70  50E3               	movf	plusw1,w,c
 40880  01DB72  0D04               	mullw	4
 40881  01DB74  0E00               	movlw	low lp_filter@smooth
 40882  01DB76  24F3               	addwf	243,w,c
 40883  01DB78  6ED9               	movwf	fsr2l,c
 40884  01DB7A  0E03               	movlw	high lp_filter@smooth
 40885  01DB7C  20F4               	addwfc	prodh,w,c
 40886  01DB7E  6EDA               	movwf	fsr2h,c
 40887  01DB80  006F FF7B FFE6     	movff	postinc2,postinc1
 40888  01DB86  006F FF7B FFE6     	movff	postinc2,postinc1
 40889  01DB8C  006F FF7B FFE6     	movff	postinc2,postinc1
 40890  01DB92  006F FF7B FFE6     	movff	postinc2,postinc1
 40891                           
 40892                           ;stkvar	_new @ sp[(-16)+-4]
 40893  01DB98  0EEC               	movlw	-20
 40894  01DB9A  006F FF8F FFE6     	movff	plusw1,postinc1
 40895  01DBA0  006F FF8F FFE6     	movff	plusw1,postinc1
 40896  01DBA6  006F FF8F FFE6     	movff	plusw1,postinc1
 40897  01DBAC  006F FF8F FFE6     	movff	plusw1,postinc1
 40898  01DBB2  EC2A  F00F         	call	___flsub	;wreg free
 40899  01DBB6  0060  F0AB  FFE6   	movff	btemp,postinc1
 40900  01DBBC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40901  01DBC2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40902  01DBC8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40903  01DBCE  EC32  F0B3         	call	___flmul	;wreg free
 40904  01DBD2  0060  F0AB  FFE6   	movff	btemp,postinc1
 40905  01DBD8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40906  01DBDE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40907  01DBE4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40908  01DBEA  EC47  F0B7         	call	___fladd	;wreg free
 40909                           
 40910                           ;stkvar	_bn @ sp[(-4)+-5]
 40911  01DBEE  0EF7               	movlw	-9
 40912  01DBF0  50E3               	movf	plusw1,w,c
 40913  01DBF2  0D04               	mullw	4
 40914  01DBF4  0E00               	movlw	low lp_filter@smooth
 40915  01DBF6  24F3               	addwf	243,w,c
 40916  01DBF8  6ED9               	movwf	fsr2l,c
 40917  01DBFA  0E03               	movlw	high lp_filter@smooth
 40918  01DBFC  20F4               	addwfc	prodh,w,c
 40919  01DBFE  6EDA               	movwf	fsr2h,c
 40920  01DC00  0060  F0AB  FFDE   	movff	btemp,postinc2
 40921  01DC06  0060  F0AF  FFDE   	movff	btemp+1,postinc2
 40922  01DC0C  0060  F0B3  FFDE   	movff	btemp+2,postinc2
 40923  01DC12  0060  F0B7  FFDD   	movff	btemp+3,postdec2
 40924  01DC18  52DD               	movf	postdec2,f,c
 40925  01DC1A  52DD               	movf	postdec2,f,c
 40926  01DC1C  006F FF78  F02A    	movff	postinc2,btemp
 40927  01DC22  006F FF78  F02B    	movff	postinc2,btemp+1
 40928  01DC28  006F FF78  F02C    	movff	postinc2,btemp+2
 40929  01DC2E  006F FF78  F02D    	movff	postinc2,btemp+3
 40930  01DC34                     l2141:
 40931                           
 40932                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 40933  01DC34  0EF6               	movlw	246
 40934  01DC36  26E1               	addwf	fsr1l,f,c
 40935  01DC38  0EFF               	movlw	255
 40936  01DC3A  22E2               	addwfc	fsr1h,f,c
 40937  01DC3C  0012               	return		;funcret
 40938  01DC3E                     __end_of_lp_filter:
 40939                           	opt callstack 0
 40940                           
 40941 ;; *************** function ___flsub *****************
 40942 ;; Defined at:
 40943 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 40944 ;; Parameters:    Size  Location     Type
 40945 ;;  b               4  [STACK] float 
 40946 ;;  a               4  [STACK] float 
 40947 ;; Auto vars:     Size  Location     Type
 40948 ;;		None
 40949 ;; Return value:  Size  Location     Type
 40950 ;;                  4  [STACK] float 
 40951 ;; Registers used:
 40952 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 40953 ;; Tracked objects:
 40954 ;;		On entry : 0/0
 40955 ;;		On exit  : 0/0
 40956 ;;		Unchanged: 0/0
 40957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40962 ;;Total ram usage:        0 bytes
 40963 ;; Hardware stack levels used:    1
 40964 ;; Hardware stack levels required when called:   16
 40965 ;; This function calls:
 40966 ;;		___fladd
 40967 ;; This function is called by:
 40968 ;;		_conv_raw_result
 40969 ;;		_lp_filter
 40970 ;;		_calc_model_data
 40971 ;;		_calc_ror_data
 40972 ;;		_esr_check
 40973 ;;		_efgtoa
 40974 ;; This function uses a reentrant model
 40975 ;;
 40976                           
 40977                           	psect	text152
 40978  001E54                     __ptext152:
 40979                           	opt callstack 0
 40980  001E54                     ___flsub:
 40981                           	opt callstack 0
 40982                           
 40983                           ;stkvar	_a @ sp[(0)+-8]
 40984                           
 40985                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40986                           ;incstack = 0
 40987 ;; hardware stack exceeded
 40988  001E54  0EFB               	movlw	-5
 40989  001E56  7EE3               	btg	plusw1,7,c
 40990                           
 40991                           ;stkvar	_a @ sp[(0)+-8]
 40992  001E58  0EF8               	movlw	-8
 40993  001E5A  006F FF8F FFE6     	movff	plusw1,postinc1
 40994  001E60  006F FF8F FFE6     	movff	plusw1,postinc1
 40995  001E66  006F FF8F FFE6     	movff	plusw1,postinc1
 40996  001E6C  006F FF8F FFE6     	movff	plusw1,postinc1
 40997                           
 40998                           ;stkvar	_b @ sp[(-4)+-4]
 40999  001E72  0EF8               	movlw	-8
 41000  001E74  006F FF8F FFE6     	movff	plusw1,postinc1
 41001  001E7A  006F FF8F FFE6     	movff	plusw1,postinc1
 41002  001E80  006F FF8F FFE6     	movff	plusw1,postinc1
 41003  001E86  006F FF8F FFE6     	movff	plusw1,postinc1
 41004  001E8C  EC47  F0B7         	call	___fladd	;wreg free
 41005                           
 41006                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 41007  001E90  0EF8               	movlw	248
 41008  001E92  26E1               	addwf	fsr1l,f,c
 41009  001E94  0EFF               	movlw	255
 41010  001E96  22E2               	addwfc	fsr1h,f,c
 41011  001E98  0012               	return		;funcret
 41012  001E9A                     __end_of___flsub:
 41013                           	opt callstack 0
 41014                           
 41015 ;; *************** function ___fladd *****************
 41016 ;; Defined at:
 41017 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 41018 ;; Parameters:    Size  Location     Type
 41019 ;;  b               4  [STACK] float 
 41020 ;;  a               4  [STACK] float 
 41021 ;; Auto vars:     Size  Location     Type
 41022 ;;  grs             1  [STACK] unsigned char 
 41023 ;;  bexp            1  [STACK] unsigned char 
 41024 ;;  aexp            1  [STACK] unsigned char 
 41025 ;;  signs           1  [STACK] unsigned char 
 41026 ;; Return value:  Size  Location     Type
 41027 ;;                  4  [STACK] unsigned char 
 41028 ;; Registers used:
 41029 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 41030 ;; Tracked objects:
 41031 ;;		On entry : 0/0
 41032 ;;		On exit  : 0/0
 41033 ;;		Unchanged: 0/0
 41034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 41035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41039 ;;Total ram usage:        0 bytes
 41040 ;; Hardware stack levels used:    1
 41041 ;; Hardware stack levels required when called:   15
 41042 ;; This function calls:
 41043 ;;		Nothing
 41044 ;; This function is called by:
 41045 ;;		_main
 41046 ;;		_lp_filter
 41047 ;;		_calc_model_data
 41048 ;;		_load_hist_data
 41049 ;;		_efgtoa
 41050 ;;		___asfladd
 41051 ;;		___flsub
 41052 ;; This function uses a reentrant model
 41053 ;;
 41054                           
 41055                           	psect	text153
 41056  016E8E                     __ptext153:
 41057                           	opt callstack 0
 41058  016E8E                     ___fladd:
 41059                           	opt callstack 0
 41060                           
 41061                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 41062  016E8E  52E6               	movf	postinc1,f,c
 41063  016E90  52E6               	movf	postinc1,f,c
 41064  016E92  52E6               	movf	postinc1,f,c
 41065  016E94  52E6               	movf	postinc1,f,c
 41066                           
 41067                           ;stkvar	_b @ sp[(-4)+-4]
 41068                           
 41069                           ;incstack = 0
 41070 ;; hardware stack exceeded
 41071  016E96  0EFB               	movlw	251
 41072  016E98  24E1               	addwf	fsr1l,w,c
 41073  016E9A  6ED9               	movwf	fsr2l,c
 41074  016E9C  0EFF               	movlw	255
 41075  016E9E  20E2               	addwfc	fsr1h,w,c
 41076  016EA0  6EDA               	movwf	fsr2h,c
 41077  016EA2  50DF               	movf	indf2,w,c
 41078  016EA4  6E35               	movwf	(btemp+11)^0,c
 41079  016EA6  0E80               	movlw	128
 41080  016EA8  1635               	andwf	(btemp+11)^0,f,c
 41081                           
 41082                           ;stkvar	_signs @ sp[(-4)+3]
 41083  016EAA  0EFF               	movlw	-1
 41084  016EAC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41085                           
 41086                           ;stkvar	_b @ sp[(-4)+-4]
 41087  016EB2  0EFB               	movlw	251
 41088  016EB4  24E1               	addwf	fsr1l,w,c
 41089  016EB6  6ED9               	movwf	fsr2l,c
 41090  016EB8  0EFF               	movlw	255
 41091  016EBA  20E2               	addwfc	fsr1h,w,c
 41092  016EBC  6EDA               	movwf	fsr2h,c
 41093  016EBE  50DF               	movf	indf2,w,c
 41094  016EC0  6E35               	movwf	(btemp+11)^0,c
 41095  016EC2  90D8               	bcf	status,0,c
 41096  016EC4  3435               	rlcf	(btemp+11)^0,w,c
 41097  016EC6  6E34               	movwf	(btemp+10)^0,c
 41098                           
 41099                           ;stkvar	_bexp @ sp[(-4)+1]
 41100  016EC8  0EFD               	movlw	-3
 41101  016ECA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41102                           
 41103                           ;stkvar	_b @ sp[(-4)+-4]
 41104  016ED0  0EFA               	movlw	250
 41105  016ED2  24E1               	addwf	fsr1l,w,c
 41106  016ED4  6ED9               	movwf	fsr2l,c
 41107  016ED6  0EFF               	movlw	255
 41108  016ED8  20E2               	addwfc	fsr1h,w,c
 41109  016EDA  6EDA               	movwf	fsr2h,c
 41110  016EDC  AEDF               	btfss	indf2,7,c
 41111  016EDE  D002               	goto	l9812
 41112                           
 41113                           ;stkvar	_bexp @ sp[(-4)+1]
 41114  016EE0  0EFD               	movlw	-3
 41115  016EE2  80E3               	bsf	plusw1,0,c
 41116  016EE4                     l9812:
 41117                           
 41118                           ;stkvar	_bexp @ sp[(-4)+1]
 41119  016EE4  0EFD               	movlw	-3
 41120  016EE6  50E3               	movf	plusw1,w,c
 41121  016EE8  B4D8               	btfsc	status,2,c
 41122  016EEA  D027               	goto	l9822
 41123                           
 41124                           ;stkvar	_bexp @ sp[(-4)+1]
 41125  016EEC  0EFD               	movlw	-3
 41126  016EEE  28E3               	incf	plusw1,w,c
 41127  016EF0  A4D8               	btfss	status,2,c
 41128  016EF2  D018               	goto	l9818
 41129  016EF4  0E00               	movlw	0
 41130  016EF6  6E32               	movwf	(btemp+8)^0,c
 41131  016EF8  0E00               	movlw	0
 41132  016EFA  6E33               	movwf	(btemp+9)^0,c
 41133  016EFC  0E00               	movlw	0
 41134  016EFE  6E34               	movwf	(btemp+10)^0,c
 41135  016F00  0E00               	movlw	0
 41136  016F02  6E35               	movwf	(btemp+11)^0,c
 41137                           
 41138                           ;stkvar	_b @ sp[(-4)+-4]
 41139  016F04  0EF8               	movlw	-8
 41140  016F06  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 41141  016F0C  0EF9               	movlw	-7
 41142  016F0E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 41143  016F14  0EFA               	movlw	-6
 41144  016F16  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41145  016F1C  0EFB               	movlw	-5
 41146  016F1E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41147  016F24                     l9818:
 41148                           
 41149                           ;stkvar	_b @ sp[(-4)+-4]
 41150  016F24  0EFA               	movlw	-6
 41151  016F26  8EE3               	bsf	plusw1,7,c
 41152                           
 41153                           ;stkvar	_b @ sp[(-4)+-4]
 41154  016F28  0EFB               	movlw	251
 41155  016F2A  24E1               	addwf	fsr1l,w,c
 41156  016F2C  6ED9               	movwf	fsr2l,c
 41157  016F2E  0EFF               	movlw	255
 41158  016F30  20E2               	addwfc	fsr1h,w,c
 41159  016F32  6EDA               	movwf	fsr2h,c
 41160  016F34  0E00               	movlw	0
 41161  016F36  6EDF               	movwf	indf2,c
 41162  016F38  D018               	goto	l9824
 41163  016F3A                     l9822:
 41164  016F3A  0E00               	movlw	0
 41165  016F3C  6E32               	movwf	(btemp+8)^0,c
 41166  016F3E  0E00               	movlw	0
 41167  016F40  6E33               	movwf	(btemp+9)^0,c
 41168  016F42  0E00               	movlw	0
 41169  016F44  6E34               	movwf	(btemp+10)^0,c
 41170  016F46  0E00               	movlw	0
 41171  016F48  6E35               	movwf	(btemp+11)^0,c
 41172                           
 41173                           ;stkvar	_b @ sp[(-4)+-4]
 41174  016F4A  0EF8               	movlw	-8
 41175  016F4C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 41176  016F52  0EF9               	movlw	-7
 41177  016F54  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 41178  016F5A  0EFA               	movlw	-6
 41179  016F5C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41180  016F62  0EFB               	movlw	-5
 41181  016F64  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41182  016F6A                     l9824:
 41183                           
 41184                           ;stkvar	_a @ sp[(-4)+-8]
 41185  016F6A  0EF7               	movlw	247
 41186  016F6C  24E1               	addwf	fsr1l,w,c
 41187  016F6E  6ED9               	movwf	fsr2l,c
 41188  016F70  0EFF               	movlw	255
 41189  016F72  20E2               	addwfc	fsr1h,w,c
 41190  016F74  6EDA               	movwf	fsr2h,c
 41191  016F76  50DF               	movf	indf2,w,c
 41192  016F78  6E35               	movwf	(btemp+11)^0,c
 41193  016F7A  0E80               	movlw	128
 41194  016F7C  1635               	andwf	(btemp+11)^0,f,c
 41195                           
 41196                           ;stkvar	_aexp @ sp[(-4)+2]
 41197  016F7E  0EFE               	movlw	-2
 41198  016F80  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41199                           
 41200                           ;stkvar	_signs @ sp[(-4)+3]
 41201                           ;stkvar	_aexp @ sp[(-4)+2]
 41202  016F86  50E1               	movf	fsr1l,w,c
 41203  016F88  0FFE               	addlw	-2
 41204  016F8A  6ED9               	movwf	fsr2l,c
 41205  016F8C  50E2               	movf	fsr1h,w,c
 41206  016F8E  6EDA               	movwf	fsr2h,c
 41207  016F90  0EFF               	movlw	255
 41208  016F92  22DA               	addwfc	fsr2h,f,c
 41209  016F94  0EFF               	movlw	-1
 41210  016F96  50E3               	movf	plusw1,w,c
 41211  016F98  18DE               	xorwf	postinc2,w,c
 41212  016F9A  B4D8               	btfsc	status,2,c
 41213  016F9C  D002               	goto	l9830
 41214                           
 41215                           ;stkvar	_signs @ sp[(-4)+3]
 41216  016F9E  0EFF               	movlw	-1
 41217  016FA0  8CE3               	bsf	plusw1,6,c
 41218  016FA2                     l9830:
 41219                           
 41220                           ;stkvar	_a @ sp[(-4)+-8]
 41221  016FA2  0EF7               	movlw	247
 41222  016FA4  24E1               	addwf	fsr1l,w,c
 41223  016FA6  6ED9               	movwf	fsr2l,c
 41224  016FA8  0EFF               	movlw	255
 41225  016FAA  20E2               	addwfc	fsr1h,w,c
 41226  016FAC  6EDA               	movwf	fsr2h,c
 41227  016FAE  50DF               	movf	indf2,w,c
 41228  016FB0  6E35               	movwf	(btemp+11)^0,c
 41229  016FB2  90D8               	bcf	status,0,c
 41230  016FB4  3435               	rlcf	(btemp+11)^0,w,c
 41231  016FB6  6E34               	movwf	(btemp+10)^0,c
 41232                           
 41233                           ;stkvar	_aexp @ sp[(-4)+2]
 41234  016FB8  0EFE               	movlw	-2
 41235  016FBA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41236                           
 41237                           ;stkvar	_a @ sp[(-4)+-8]
 41238  016FC0  0EF6               	movlw	246
 41239  016FC2  24E1               	addwf	fsr1l,w,c
 41240  016FC4  6ED9               	movwf	fsr2l,c
 41241  016FC6  0EFF               	movlw	255
 41242  016FC8  20E2               	addwfc	fsr1h,w,c
 41243  016FCA  6EDA               	movwf	fsr2h,c
 41244  016FCC  AEDF               	btfss	indf2,7,c
 41245  016FCE  D002               	goto	l9836
 41246                           
 41247                           ;stkvar	_aexp @ sp[(-4)+2]
 41248  016FD0  0EFE               	movlw	-2
 41249  016FD2  80E3               	bsf	plusw1,0,c
 41250  016FD4                     l9836:
 41251                           
 41252                           ;stkvar	_aexp @ sp[(-4)+2]
 41253  016FD4  0EFE               	movlw	-2
 41254  016FD6  50E3               	movf	plusw1,w,c
 41255  016FD8  B4D8               	btfsc	status,2,c
 41256  016FDA  D027               	goto	l9846
 41257                           
 41258                           ;stkvar	_aexp @ sp[(-4)+2]
 41259  016FDC  0EFE               	movlw	-2
 41260  016FDE  28E3               	incf	plusw1,w,c
 41261  016FE0  A4D8               	btfss	status,2,c
 41262  016FE2  D018               	goto	l9842
 41263  016FE4  0E00               	movlw	0
 41264  016FE6  6E32               	movwf	(btemp+8)^0,c
 41265  016FE8  0E00               	movlw	0
 41266  016FEA  6E33               	movwf	(btemp+9)^0,c
 41267  016FEC  0E00               	movlw	0
 41268  016FEE  6E34               	movwf	(btemp+10)^0,c
 41269  016FF0  0E00               	movlw	0
 41270  016FF2  6E35               	movwf	(btemp+11)^0,c
 41271                           
 41272                           ;stkvar	_a @ sp[(-4)+-8]
 41273  016FF4  0EF4               	movlw	-12
 41274  016FF6  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 41275  016FFC  0EF5               	movlw	-11
 41276  016FFE  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 41277  017004  0EF6               	movlw	-10
 41278  017006  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41279  01700C  0EF7               	movlw	-9
 41280  01700E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41281  017014                     l9842:
 41282                           
 41283                           ;stkvar	_a @ sp[(-4)+-8]
 41284  017014  0EF6               	movlw	-10
 41285  017016  8EE3               	bsf	plusw1,7,c
 41286                           
 41287                           ;stkvar	_a @ sp[(-4)+-8]
 41288  017018  0EF7               	movlw	247
 41289  01701A  24E1               	addwf	fsr1l,w,c
 41290  01701C  6ED9               	movwf	fsr2l,c
 41291  01701E  0EFF               	movlw	255
 41292  017020  20E2               	addwfc	fsr1h,w,c
 41293  017022  6EDA               	movwf	fsr2h,c
 41294  017024  0E00               	movlw	0
 41295  017026  6EDF               	movwf	indf2,c
 41296  017028  D018               	goto	l9848
 41297  01702A                     l9846:
 41298  01702A  0E00               	movlw	0
 41299  01702C  6E32               	movwf	(btemp+8)^0,c
 41300  01702E  0E00               	movlw	0
 41301  017030  6E33               	movwf	(btemp+9)^0,c
 41302  017032  0E00               	movlw	0
 41303  017034  6E34               	movwf	(btemp+10)^0,c
 41304  017036  0E00               	movlw	0
 41305  017038  6E35               	movwf	(btemp+11)^0,c
 41306                           
 41307                           ;stkvar	_a @ sp[(-4)+-8]
 41308  01703A  0EF4               	movlw	-12
 41309  01703C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 41310  017042  0EF5               	movlw	-11
 41311  017044  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 41312  01704A  0EF6               	movlw	-10
 41313  01704C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41314  017052  0EF7               	movlw	-9
 41315  017054  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41316  01705A                     l9848:
 41317                           
 41318                           ;stkvar	_bexp @ sp[(-4)+1]
 41319                           ;stkvar	_aexp @ sp[(-4)+2]
 41320  01705A  50E1               	movf	fsr1l,w,c
 41321  01705C  0FFE               	addlw	-2
 41322  01705E  6ED9               	movwf	fsr2l,c
 41323  017060  50E2               	movf	fsr1h,w,c
 41324  017062  6EDA               	movwf	fsr2h,c
 41325  017064  0EFF               	movlw	255
 41326  017066  22DA               	addwfc	fsr2h,f,c
 41327  017068  0EFD               	movlw	-3
 41328  01706A  50E3               	movf	plusw1,w,c
 41329  01706C  5CDE               	subwf	postinc2,w,c
 41330  01706E  B0D8               	btfsc	status,0,c
 41331  017070  D0A4               	goto	l9884
 41332                           
 41333                           ;stkvar	_signs @ sp[(-4)+3]
 41334  017072  0EFF               	movlw	-1
 41335  017074  ACE3               	btfss	plusw1,6,c
 41336  017076  D002               	goto	l9854
 41337                           
 41338                           ;stkvar	_signs @ sp[(-4)+3]
 41339  017078  0EFF               	movlw	-1
 41340  01707A  7EE3               	btg	plusw1,7,c
 41341  01707C                     l9854:
 41342                           
 41343                           ;stkvar	_bexp @ sp[(-4)+1]
 41344                           ;stkvar	_grs @ sp[(-4)+0]
 41345  01707C  0EFD               	movlw	-3
 41346  01707E  006F FF8C  F02A    	movff	plusw1,btemp
 41347  017084  0EFC               	movlw	-4
 41348  017086  0060  F0AB  FFE3   	movff	btemp,plusw1
 41349                           
 41350                           ;stkvar	_aexp @ sp[(-4)+2]
 41351                           ;stkvar	_bexp @ sp[(-4)+1]
 41352  01708C  0EFE               	movlw	-2
 41353  01708E  006F FF8C  F02A    	movff	plusw1,btemp
 41354  017094  0EFD               	movlw	-3
 41355  017096  0060  F0AB  FFE3   	movff	btemp,plusw1
 41356                           
 41357                           ;stkvar	_grs @ sp[(-4)+0]
 41358                           ;stkvar	_aexp @ sp[(-4)+2]
 41359  01709C  0EFC               	movlw	-4
 41360  01709E  006F FF8C  F02A    	movff	plusw1,btemp
 41361  0170A4  0EFE               	movlw	-2
 41362  0170A6  0060  F0AB  FFE3   	movff	btemp,plusw1
 41363                           
 41364                           ;stkvar	_b @ sp[(-4)+-4]
 41365                           ;stkvar	_grs @ sp[(-4)+0]
 41366  0170AC  0EF8               	movlw	-8
 41367  0170AE  006F FF8C  F02A    	movff	plusw1,btemp
 41368  0170B4  0EFC               	movlw	-4
 41369  0170B6  0060  F0AB  FFE3   	movff	btemp,plusw1
 41370                           
 41371                           ;stkvar	_a @ sp[(-4)+-8]
 41372                           ;stkvar	_b @ sp[(-4)+-4]
 41373  0170BC  0EF4               	movlw	-12
 41374  0170BE  006F FF8C  F02A    	movff	plusw1,btemp
 41375  0170C4  0EF8               	movlw	-8
 41376  0170C6  0060  F0AB  FFE3   	movff	btemp,plusw1
 41377                           
 41378                           ;stkvar	_grs @ sp[(-4)+0]
 41379                           ;stkvar	_a @ sp[(-4)+-8]
 41380  0170CC  0EFC               	movlw	-4
 41381  0170CE  006F FF8C  F02A    	movff	plusw1,btemp
 41382  0170D4  0EF4               	movlw	-12
 41383  0170D6  0060  F0AB  FFE3   	movff	btemp,plusw1
 41384                           
 41385                           ;stkvar	_b @ sp[(-4)+-4]
 41386  0170DC  0EF9               	movlw	249
 41387  0170DE  24E1               	addwf	fsr1l,w,c
 41388  0170E0  6ED9               	movwf	fsr2l,c
 41389  0170E2  0EFF               	movlw	255
 41390  0170E4  20E2               	addwfc	fsr1h,w,c
 41391  0170E6  6EDA               	movwf	fsr2h,c
 41392  0170E8  50DF               	movf	indf2,w,c
 41393  0170EA  6E35               	movwf	(btemp+11)^0,c
 41394                           
 41395                           ;stkvar	_grs @ sp[(-4)+0]
 41396  0170EC  0EFC               	movlw	-4
 41397  0170EE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41398                           
 41399                           ;stkvar	_a @ sp[(-4)+-8]
 41400  0170F4  0EF5               	movlw	245
 41401  0170F6  24E1               	addwf	fsr1l,w,c
 41402  0170F8  6ED9               	movwf	fsr2l,c
 41403  0170FA  0EFF               	movlw	255
 41404  0170FC  20E2               	addwfc	fsr1h,w,c
 41405  0170FE  6EDA               	movwf	fsr2h,c
 41406                           
 41407                           ;stkvar	_b @ sp[(-4)+-4]
 41408  017100  0EF9               	movlw	249
 41409  017102  24E1               	addwf	fsr1l,w,c
 41410  017104  6EE9               	movwf	fsr0l,c
 41411  017106  0EFF               	movlw	255
 41412  017108  20E2               	addwfc	fsr1h,w,c
 41413  01710A  6EEA               	movwf	fsr0h,c
 41414  01710C  006F FF7F FFEF     	movff	indf2,indf0
 41415                           
 41416                           ;stkvar	_grs @ sp[(-4)+0]
 41417                           ;stkvar	_a @ sp[(-4)+-8]
 41418  017112  0EF5               	movlw	245
 41419  017114  24E1               	addwf	fsr1l,w,c
 41420  017116  6ED9               	movwf	fsr2l,c
 41421  017118  0EFF               	movlw	255
 41422  01711A  20E2               	addwfc	fsr1h,w,c
 41423  01711C  6EDA               	movwf	fsr2h,c
 41424  01711E  0EFC               	movlw	-4
 41425  017120  006F FF8F FFDF     	movff	plusw1,indf2
 41426                           
 41427                           ;stkvar	_b @ sp[(-4)+-4]
 41428  017126  0EFA               	movlw	250
 41429  017128  24E1               	addwf	fsr1l,w,c
 41430  01712A  6ED9               	movwf	fsr2l,c
 41431  01712C  0EFF               	movlw	255
 41432  01712E  20E2               	addwfc	fsr1h,w,c
 41433  017130  6EDA               	movwf	fsr2h,c
 41434  017132  50DF               	movf	indf2,w,c
 41435  017134  6E35               	movwf	(btemp+11)^0,c
 41436                           
 41437                           ;stkvar	_grs @ sp[(-4)+0]
 41438  017136  0EFC               	movlw	-4
 41439  017138  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41440                           
 41441                           ;stkvar	_a @ sp[(-4)+-8]
 41442  01713E  0EF6               	movlw	246
 41443  017140  24E1               	addwf	fsr1l,w,c
 41444  017142  6ED9               	movwf	fsr2l,c
 41445  017144  0EFF               	movlw	255
 41446  017146  20E2               	addwfc	fsr1h,w,c
 41447  017148  6EDA               	movwf	fsr2h,c
 41448                           
 41449                           ;stkvar	_b @ sp[(-4)+-4]
 41450  01714A  0EFA               	movlw	250
 41451  01714C  24E1               	addwf	fsr1l,w,c
 41452  01714E  6EE9               	movwf	fsr0l,c
 41453  017150  0EFF               	movlw	255
 41454  017152  20E2               	addwfc	fsr1h,w,c
 41455  017154  6EEA               	movwf	fsr0h,c
 41456  017156  006F FF7F FFEF     	movff	indf2,indf0
 41457                           
 41458                           ;stkvar	_grs @ sp[(-4)+0]
 41459                           ;stkvar	_a @ sp[(-4)+-8]
 41460  01715C  0EF6               	movlw	246
 41461  01715E  24E1               	addwf	fsr1l,w,c
 41462  017160  6ED9               	movwf	fsr2l,c
 41463  017162  0EFF               	movlw	255
 41464  017164  20E2               	addwfc	fsr1h,w,c
 41465  017166  6EDA               	movwf	fsr2h,c
 41466  017168  0EFC               	movlw	-4
 41467  01716A  006F FF8F FFDF     	movff	plusw1,indf2
 41468                           
 41469                           ;stkvar	_b @ sp[(-4)+-4]
 41470  017170  0EFB               	movlw	251
 41471  017172  24E1               	addwf	fsr1l,w,c
 41472  017174  6ED9               	movwf	fsr2l,c
 41473  017176  0EFF               	movlw	255
 41474  017178  20E2               	addwfc	fsr1h,w,c
 41475  01717A  6EDA               	movwf	fsr2h,c
 41476  01717C  50DF               	movf	indf2,w,c
 41477  01717E  6E35               	movwf	(btemp+11)^0,c
 41478                           
 41479                           ;stkvar	_grs @ sp[(-4)+0]
 41480  017180  0EFC               	movlw	-4
 41481  017182  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41482                           
 41483                           ;stkvar	_a @ sp[(-4)+-8]
 41484  017188  0EF7               	movlw	247
 41485  01718A  24E1               	addwf	fsr1l,w,c
 41486  01718C  6ED9               	movwf	fsr2l,c
 41487  01718E  0EFF               	movlw	255
 41488  017190  20E2               	addwfc	fsr1h,w,c
 41489  017192  6EDA               	movwf	fsr2h,c
 41490                           
 41491                           ;stkvar	_b @ sp[(-4)+-4]
 41492  017194  0EFB               	movlw	251
 41493  017196  24E1               	addwf	fsr1l,w,c
 41494  017198  6EE9               	movwf	fsr0l,c
 41495  01719A  0EFF               	movlw	255
 41496  01719C  20E2               	addwfc	fsr1h,w,c
 41497  01719E  6EEA               	movwf	fsr0h,c
 41498  0171A0  006F FF7F FFEF     	movff	indf2,indf0
 41499                           
 41500                           ;stkvar	_grs @ sp[(-4)+0]
 41501                           ;stkvar	_a @ sp[(-4)+-8]
 41502  0171A6  0EF7               	movlw	247
 41503  0171A8  24E1               	addwf	fsr1l,w,c
 41504  0171AA  6ED9               	movwf	fsr2l,c
 41505  0171AC  0EFF               	movlw	255
 41506  0171AE  20E2               	addwfc	fsr1h,w,c
 41507  0171B0  6EDA               	movwf	fsr2h,c
 41508  0171B2  0EFC               	movlw	-4
 41509  0171B4  006F FF8F FFDF     	movff	plusw1,indf2
 41510  0171BA                     l9884:
 41511                           
 41512                           ;stkvar	_grs @ sp[(-4)+0]
 41513  0171BA  0EFC               	movlw	-4
 41514  0171BC  6AE3               	clrf	plusw1,c
 41515                           
 41516                           ;stkvar	_aexp @ sp[(-4)+2]
 41517  0171BE  0EFE               	movlw	-2
 41518  0171C0  50E3               	movf	plusw1,w,c
 41519  0171C2  6E34               	movwf	(btemp+10)^0,c
 41520  0171C4  6A35               	clrf	(btemp+11)^0,c
 41521                           
 41522                           ;stkvar	_bexp @ sp[(-4)+1]
 41523  0171C6  0EFD               	movlw	-3
 41524  0171C8  50E3               	movf	plusw1,w,c
 41525  0171CA  5E34               	subwf	(btemp+10)^0,f,c
 41526  0171CC  0E00               	movlw	0
 41527  0171CE  5A35               	subwfb	(btemp+11)^0,f,c
 41528  0171D0  BE35               	btfsc	(btemp+11)^0,7,c
 41529  0171D2  D062               	goto	l9908
 41530  0171D4  5035               	movf	(btemp+11)^0,w,c
 41531  0171D6  E104               	bnz	u7310
 41532  0171D8  0E1A               	movlw	26
 41533  0171DA  5C34               	subwf	(btemp+10)^0,w,c
 41534  0171DC  A0D8               	btfss	status,0,c
 41535  0171DE  D05C               	goto	l9908
 41536  0171E0                     u7310:
 41537                           
 41538                           ;stkvar	_b @ sp[(-4)+-4]
 41539  0171E0  0EF8               	movlw	-8
 41540  0171E2  50E3               	movf	plusw1,w,c
 41541  0171E4  E10A               	bnz	u7321
 41542  0171E6  0EF9               	movlw	-7
 41543  0171E8  50E3               	movf	plusw1,w,c
 41544  0171EA  E107               	bnz	u7321
 41545  0171EC  0EFA               	movlw	-6
 41546  0171EE  50E3               	movf	plusw1,w,c
 41547  0171F0  E104               	bnz	u7321
 41548  0171F2  0EFB               	movlw	-5
 41549  0171F4  50E3               	movf	plusw1,w,c
 41550  0171F6  B4D8               	btfsc	status,2,c
 41551  0171F8  D003               	goto	u7320
 41552  0171FA                     u7321:
 41553  0171FA  6A35               	clrf	(btemp+11)^0,c
 41554  0171FC  2A35               	incf	(btemp+11)^0,f,c
 41555  0171FE  D001               	goto	u7338
 41556  017200                     u7320:
 41557  017200  6A35               	clrf	(btemp+11)^0,c
 41558  017202                     u7338:
 41559                           
 41560                           ;stkvar	_grs @ sp[(-4)+0]
 41561  017202  0EFC               	movlw	-4
 41562  017204  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41563                           
 41564                           ;stkvar	_b @ sp[(-4)+-4]
 41565  01720A  0EF8               	movlw	-8
 41566  01720C  6AE3               	clrf	plusw1,c
 41567  01720E  0EF9               	movlw	-7
 41568  017210  6AE3               	clrf	plusw1,c
 41569  017212  0EFA               	movlw	-6
 41570  017214  6AE3               	clrf	plusw1,c
 41571  017216  0EFB               	movlw	-5
 41572  017218  6AE3               	clrf	plusw1,c
 41573                           
 41574                           ;stkvar	_aexp @ sp[(-4)+2]
 41575                           ;stkvar	_bexp @ sp[(-4)+1]
 41576  01721A  0EFE               	movlw	-2
 41577  01721C  006F FF8C  F02A    	movff	plusw1,btemp
 41578  017222  0EFD               	movlw	-3
 41579  017224  0060  F0AB  FFE3   	movff	btemp,plusw1
 41580  01722A  D042               	goto	u7370
 41581  01722C                     l9894:
 41582                           
 41583                           ;stkvar	_grs @ sp[(-4)+0]
 41584  01722C  0EFC               	movlw	-4
 41585  01722E  A0E3               	btfss	plusw1,0,c
 41586  017230  D00D               	goto	l9898
 41587                           
 41588                           ;stkvar	_grs @ sp[(-4)+0]
 41589  017232  0EFC               	movlw	-4
 41590  017234  006F FF8C  F035    	movff	plusw1,btemp+11
 41591  01723A  90D8               	bcf	status,0,c
 41592  01723C  3235               	rrcf	(btemp+11)^0,f,c
 41593  01723E  0E01               	movlw	1
 41594  017240  1235               	iorwf	(btemp+11)^0,f,c
 41595                           
 41596                           ;stkvar	_grs @ sp[(-4)+0]
 41597  017242  0EFC               	movlw	-4
 41598  017244  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41599  01724A  D009               	goto	l9900
 41600  01724C                     l9898:
 41601                           
 41602                           ;stkvar	_grs @ sp[(-4)+0]
 41603  01724C  50E1               	movf	fsr1l,w,c
 41604  01724E  0FFC               	addlw	-4
 41605  017250  6ED9               	movwf	fsr2l,c
 41606  017252  50E2               	movf	fsr1h,w,c
 41607  017254  6EDA               	movwf	fsr2h,c
 41608  017256  0EFF               	movlw	255
 41609  017258  22DA               	addwfc	fsr2h,f,c
 41610  01725A  90D8               	bcf	status,0,c
 41611  01725C  32DF               	rrcf	indf2,f,c
 41612  01725E                     l9900:
 41613                           
 41614                           ;stkvar	_b @ sp[(-4)+-4]
 41615  01725E  0EF8               	movlw	-8
 41616  017260  A0E3               	btfss	plusw1,0,c
 41617  017262  D002               	goto	l9904
 41618                           
 41619                           ;stkvar	_grs @ sp[(-4)+0]
 41620  017264  0EFC               	movlw	-4
 41621  017266  8EE3               	bsf	plusw1,7,c
 41622  017268                     l9904:
 41623  017268  0E01               	movlw	1
 41624  01726A  6E35               	movwf	(btemp+11)^0,c
 41625                           
 41626                           ;stkvar	_b @ sp[(-4)+-4]
 41627  01726C  50E1               	movf	fsr1l,w,c
 41628  01726E  0FF8               	addlw	-8
 41629  017270  6ED9               	movwf	fsr2l,c
 41630  017272  50E2               	movf	fsr1h,w,c
 41631  017274  6EDA               	movwf	fsr2h,c
 41632  017276  0EFF               	movlw	255
 41633  017278  22DA               	addwfc	fsr2h,f,c
 41634  01727A  2835               	incf	(btemp+11)^0,w,c
 41635  01727C  52DE               	movf	postinc2,f,c
 41636  01727E  D008               	goto	u7360
 41637  017280                     u7365:
 41638  017280  52DE               	movf	postinc2,f,c
 41639  017282  90D8               	bcf	status,0,c
 41640  017284  BEDC               	btfsc	preinc2,7,c
 41641  017286  80D8               	bsf	status,0,c
 41642  017288  32DD               	rrcf	postdec2,f,c
 41643  01728A  32DD               	rrcf	postdec2,f,c
 41644  01728C  32DD               	rrcf	postdec2,f,c
 41645  01728E  32DE               	rrcf	postinc2,f,c
 41646  017290                     u7360:
 41647  017290  2EE8               	decfsz	wreg,f,c
 41648  017292  D7F6               	goto	u7365
 41649                           
 41650                           ;stkvar	_bexp @ sp[(-4)+1]
 41651  017294  0EFD               	movlw	-3
 41652  017296  2AE3               	incf	plusw1,f,c
 41653  017298                     l9908:
 41654                           
 41655                           ;stkvar	_aexp @ sp[(-4)+2]
 41656                           ;stkvar	_bexp @ sp[(-4)+1]
 41657  017298  50E1               	movf	fsr1l,w,c
 41658  01729A  0FFD               	addlw	-3
 41659  01729C  6ED9               	movwf	fsr2l,c
 41660  01729E  50E2               	movf	fsr1h,w,c
 41661  0172A0  6EDA               	movwf	fsr2h,c
 41662  0172A2  0EFF               	movlw	255
 41663  0172A4  22DA               	addwfc	fsr2h,f,c
 41664  0172A6  0EFE               	movlw	-2
 41665  0172A8  50E3               	movf	plusw1,w,c
 41666  0172AA  5CDE               	subwf	postinc2,w,c
 41667  0172AC  A0D8               	btfss	status,0,c
 41668  0172AE  D7BE               	goto	l9894
 41669  0172B0                     u7370:
 41670                           
 41671                           ;stkvar	_signs @ sp[(-4)+3]
 41672  0172B0  0EFF               	movlw	-1
 41673  0172B2  BCE3               	btfsc	plusw1,6,c
 41674  0172B4  D066               	goto	l9936
 41675                           
 41676                           ;stkvar	_bexp @ sp[(-4)+1]
 41677  0172B6  0EFD               	movlw	-3
 41678  0172B8  50E3               	movf	plusw1,w,c
 41679  0172BA  B4D8               	btfsc	status,2,c
 41680  0172BC  D0F2               	goto	u7470
 41681                           
 41682                           ;stkvar	_a @ sp[(-4)+-8]
 41683                           ;stkvar	_b @ sp[(-4)+-4]
 41684  0172BE  0EF8               	movlw	-8
 41685  0172C0  50E3               	movf	plusw1,w,c
 41686  0172C2  6E2A               	movwf	btemp^0,c
 41687  0172C4  0EF4               	movlw	-12
 41688  0172C6  50E3               	movf	plusw1,w,c
 41689  0172C8  262A               	addwf	btemp^0,f,c
 41690  0172CA  0EF8               	movlw	-8
 41691  0172CC  0060  F0AB  FFE3   	movff	btemp,plusw1
 41692  0172D2  0EF9               	movlw	-7
 41693  0172D4  50E3               	movf	plusw1,w,c
 41694  0172D6  6E2A               	movwf	btemp^0,c
 41695  0172D8  0EF5               	movlw	-11
 41696  0172DA  50E3               	movf	plusw1,w,c
 41697  0172DC  222A               	addwfc	btemp^0,f,c
 41698  0172DE  0EF9               	movlw	-7
 41699  0172E0  0060  F0AB  FFE3   	movff	btemp,plusw1
 41700  0172E6  0EFA               	movlw	-6
 41701  0172E8  50E3               	movf	plusw1,w,c
 41702  0172EA  6E2A               	movwf	btemp^0,c
 41703  0172EC  0EF6               	movlw	-10
 41704  0172EE  50E3               	movf	plusw1,w,c
 41705  0172F0  222A               	addwfc	btemp^0,f,c
 41706  0172F2  0EFA               	movlw	-6
 41707  0172F4  0060  F0AB  FFE3   	movff	btemp,plusw1
 41708  0172FA  0EFB               	movlw	-5
 41709  0172FC  50E3               	movf	plusw1,w,c
 41710  0172FE  6E2A               	movwf	btemp^0,c
 41711  017300  0EF7               	movlw	-9
 41712  017302  50E3               	movf	plusw1,w,c
 41713  017304  222A               	addwfc	btemp^0,f,c
 41714  017306  0EFB               	movlw	-5
 41715  017308  0060  F0AB  FFE3   	movff	btemp,plusw1
 41716                           
 41717                           ;stkvar	_b @ sp[(-4)+-4]
 41718  01730E  0EFB               	movlw	-5
 41719  017310  A0E3               	btfss	plusw1,0,c
 41720  017312  D101               	goto	u7510
 41721                           
 41722                           ;stkvar	_grs @ sp[(-4)+0]
 41723  017314  0EFC               	movlw	-4
 41724  017316  A0E3               	btfss	plusw1,0,c
 41725  017318  D00D               	goto	l9926
 41726                           
 41727                           ;stkvar	_grs @ sp[(-4)+0]
 41728  01731A  0EFC               	movlw	-4
 41729  01731C  006F FF8C  F035    	movff	plusw1,btemp+11
 41730  017322  90D8               	bcf	status,0,c
 41731  017324  3235               	rrcf	(btemp+11)^0,f,c
 41732  017326  0E01               	movlw	1
 41733  017328  1235               	iorwf	(btemp+11)^0,f,c
 41734                           
 41735                           ;stkvar	_grs @ sp[(-4)+0]
 41736  01732A  0EFC               	movlw	-4
 41737  01732C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41738  017332  D009               	goto	l9928
 41739  017334                     l9926:
 41740                           
 41741                           ;stkvar	_grs @ sp[(-4)+0]
 41742  017334  50E1               	movf	fsr1l,w,c
 41743  017336  0FFC               	addlw	-4
 41744  017338  6ED9               	movwf	fsr2l,c
 41745  01733A  50E2               	movf	fsr1h,w,c
 41746  01733C  6EDA               	movwf	fsr2h,c
 41747  01733E  0EFF               	movlw	255
 41748  017340  22DA               	addwfc	fsr2h,f,c
 41749  017342  90D8               	bcf	status,0,c
 41750  017344  32DF               	rrcf	indf2,f,c
 41751  017346                     l9928:
 41752                           
 41753                           ;stkvar	_b @ sp[(-4)+-4]
 41754  017346  0EF8               	movlw	-8
 41755  017348  A0E3               	btfss	plusw1,0,c
 41756  01734A  D002               	goto	l9932
 41757                           
 41758                           ;stkvar	_grs @ sp[(-4)+0]
 41759  01734C  0EFC               	movlw	-4
 41760  01734E  8EE3               	bsf	plusw1,7,c
 41761  017350                     l9932:
 41762  017350  0E01               	movlw	1
 41763  017352  6E35               	movwf	(btemp+11)^0,c
 41764                           
 41765                           ;stkvar	_b @ sp[(-4)+-4]
 41766  017354  50E1               	movf	fsr1l,w,c
 41767  017356  0FF8               	addlw	-8
 41768  017358  6ED9               	movwf	fsr2l,c
 41769  01735A  50E2               	movf	fsr1h,w,c
 41770  01735C  6EDA               	movwf	fsr2h,c
 41771  01735E  0EFF               	movlw	255
 41772  017360  22DA               	addwfc	fsr2h,f,c
 41773  017362  2835               	incf	(btemp+11)^0,w,c
 41774  017364  52DE               	movf	postinc2,f,c
 41775  017366  D008               	goto	u7430
 41776  017368                     u7435:
 41777  017368  52DE               	movf	postinc2,f,c
 41778  01736A  90D8               	bcf	status,0,c
 41779  01736C  BEDC               	btfsc	preinc2,7,c
 41780  01736E  80D8               	bsf	status,0,c
 41781  017370  32DD               	rrcf	postdec2,f,c
 41782  017372  32DD               	rrcf	postdec2,f,c
 41783  017374  32DD               	rrcf	postdec2,f,c
 41784  017376  32DE               	rrcf	postinc2,f,c
 41785  017378                     u7430:
 41786  017378  2EE8               	decfsz	wreg,f,c
 41787  01737A  D7F6               	goto	u7435
 41788                           
 41789                           ;stkvar	_bexp @ sp[(-4)+1]
 41790  01737C  0EFD               	movlw	-3
 41791  01737E  2AE3               	incf	plusw1,f,c
 41792  017380  D0CA               	goto	u7510
 41793  017382                     l9936:
 41794                           
 41795                           ;stkvar	_a @ sp[(-4)+-8]
 41796                           ;stkvar	_b @ sp[(-4)+-4]
 41797  017382  50E1               	movf	fsr1l,w,c
 41798  017384  0FF8               	addlw	-8
 41799  017386  6ED9               	movwf	fsr2l,c
 41800  017388  50E2               	movf	fsr1h,w,c
 41801  01738A  6EDA               	movwf	fsr2h,c
 41802  01738C  0EFF               	movlw	255
 41803  01738E  22DA               	addwfc	fsr2h,f,c
 41804  017390  0EF4               	movlw	-12
 41805  017392  50E3               	movf	plusw1,w,c
 41806  017394  5CDE               	subwf	postinc2,w,c
 41807  017396  0EF5               	movlw	-11
 41808  017398  50E3               	movf	plusw1,w,c
 41809  01739A  58DE               	subwfb	postinc2,w,c
 41810  01739C  0EF6               	movlw	-10
 41811  01739E  50E3               	movf	plusw1,w,c
 41812  0173A0  58DE               	subwfb	postinc2,w,c
 41813  0173A2  50DE               	movf	postinc2,w,c
 41814  0173A4  0A80               	xorlw	128
 41815  0173A6  6E2A               	movwf	btemp^0,c
 41816  0173A8  0EF7               	movlw	-9
 41817  0173AA  50E3               	movf	plusw1,w,c
 41818  0173AC  0A80               	xorlw	128
 41819  0173AE  582A               	subwfb	btemp^0,w,c
 41820  0173B0  B0D8               	btfsc	status,0,c
 41821  0173B2  D053               	goto	l9948
 41822                           
 41823                           ;stkvar	_b @ sp[(-4)+-4]
 41824                           ;stkvar	_a @ sp[(-4)+-8]
 41825  0173B4  0EF4               	movlw	-12
 41826  0173B6  006F FF8C  F032    	movff	plusw1,btemp+8
 41827  0173BC  0EF5               	movlw	-11
 41828  0173BE  006F FF8C  F033    	movff	plusw1,btemp+9
 41829  0173C4  0EF6               	movlw	-10
 41830  0173C6  006F FF8C  F034    	movff	plusw1,btemp+10
 41831  0173CC  0EF7               	movlw	-9
 41832  0173CE  006F FF8C  F035    	movff	plusw1,btemp+11
 41833  0173D4  0EF8               	movlw	-8
 41834  0173D6  50E3               	movf	plusw1,w,c
 41835  0173D8  5E32               	subwf	(btemp+8)^0,f,c
 41836  0173DA  0EF9               	movlw	-7
 41837  0173DC  50E3               	movf	plusw1,w,c
 41838  0173DE  5A33               	subwfb	(btemp+9)^0,f,c
 41839  0173E0  0EFA               	movlw	-6
 41840  0173E2  50E3               	movf	plusw1,w,c
 41841  0173E4  5A34               	subwfb	(btemp+10)^0,f,c
 41842  0173E6  0EFB               	movlw	-5
 41843  0173E8  50E3               	movf	plusw1,w,c
 41844  0173EA  5A35               	subwfb	(btemp+11)^0,f,c
 41845  0173EC  0EFF               	movlw	255
 41846  0173EE  2432               	addwf	(btemp+8)^0,w,c
 41847  0173F0  6E2E               	movwf	(btemp+4)^0,c
 41848  0173F2  0EFF               	movlw	255
 41849  0173F4  2033               	addwfc	(btemp+9)^0,w,c
 41850  0173F6  6E2F               	movwf	(btemp+5)^0,c
 41851  0173F8  0EFF               	movlw	255
 41852  0173FA  2034               	addwfc	(btemp+10)^0,w,c
 41853  0173FC  6E30               	movwf	(btemp+6)^0,c
 41854  0173FE  0EFF               	movlw	255
 41855  017400  2035               	addwfc	(btemp+11)^0,w,c
 41856  017402  6E31               	movwf	(btemp+7)^0,c
 41857                           
 41858                           ;stkvar	_b @ sp[(-4)+-4]
 41859  017404  0EF8               	movlw	-8
 41860  017406  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 41861  01740C  0EF9               	movlw	-7
 41862  01740E  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 41863  017414  0EFA               	movlw	-6
 41864  017416  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 41865  01741C  0EFB               	movlw	-5
 41866  01741E  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 41867                           
 41868                           ;stkvar	_signs @ sp[(-4)+3]
 41869  017424  0EFF               	movlw	-1
 41870  017426  7EE3               	btg	plusw1,7,c
 41871                           
 41872                           ;stkvar	_grs @ sp[(-4)+0]
 41873  017428  0EFC               	movlw	-4
 41874  01742A  50E3               	movf	plusw1,w,c
 41875  01742C  0800               	sublw	0
 41876  01742E  6E35               	movwf	(btemp+11)^0,c
 41877                           
 41878                           ;stkvar	_grs @ sp[(-4)+0]
 41879  017430  0EFC               	movlw	-4
 41880  017432  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41881                           
 41882                           ;stkvar	_grs @ sp[(-4)+0]
 41883  017438  0EFC               	movlw	-4
 41884  01743A  50E3               	movf	plusw1,w,c
 41885  01743C  A4D8               	btfss	status,2,c
 41886  01743E  D020               	goto	l9950
 41887                           
 41888                           ;stkvar	_b @ sp[(-4)+-4]
 41889  017440  50E1               	movf	fsr1l,w,c
 41890  017442  0FF8               	addlw	-8
 41891  017444  6ED9               	movwf	fsr2l,c
 41892  017446  50E2               	movf	fsr1h,w,c
 41893  017448  6EDA               	movwf	fsr2h,c
 41894  01744A  0EFF               	movlw	255
 41895  01744C  22DA               	addwfc	fsr2h,f,c
 41896  01744E  2ADE               	incf	postinc2,f,c
 41897  017450  0E00               	movlw	0
 41898  017452  22DE               	addwfc	postinc2,f,c
 41899  017454  22DE               	addwfc	postinc2,f,c
 41900  017456  22DE               	addwfc	postinc2,f,c
 41901  017458  D013               	goto	l9950
 41902  01745A                     l9948:
 41903                           
 41904                           ;stkvar	_a @ sp[(-4)+-8]
 41905                           ;stkvar	_b @ sp[(-4)+-4]
 41906  01745A  50E1               	movf	fsr1l,w,c
 41907  01745C  0FF8               	addlw	-8
 41908  01745E  6ED9               	movwf	fsr2l,c
 41909  017460  50E2               	movf	fsr1h,w,c
 41910  017462  6EDA               	movwf	fsr2h,c
 41911  017464  0EFF               	movlw	255
 41912  017466  22DA               	addwfc	fsr2h,f,c
 41913  017468  0EF4               	movlw	-12
 41914  01746A  50E3               	movf	plusw1,w,c
 41915  01746C  5EDE               	subwf	postinc2,f,c
 41916  01746E  0EF5               	movlw	-11
 41917  017470  50E3               	movf	plusw1,w,c
 41918  017472  5ADE               	subwfb	postinc2,f,c
 41919  017474  0EF6               	movlw	-10
 41920  017476  50E3               	movf	plusw1,w,c
 41921  017478  5ADE               	subwfb	postinc2,f,c
 41922  01747A  0EF7               	movlw	-9
 41923  01747C  50E3               	movf	plusw1,w,c
 41924  01747E  5ADE               	subwfb	postinc2,f,c
 41925  017480                     l9950:
 41926                           
 41927                           ;stkvar	_b @ sp[(-4)+-4]
 41928  017480  0EF8               	movlw	-8
 41929  017482  50E3               	movf	plusw1,w,c
 41930  017484  E145               	bnz	l9972
 41931  017486  0EF9               	movlw	-7
 41932  017488  50E3               	movf	plusw1,w,c
 41933  01748A  E142               	bnz	l9972
 41934  01748C  0EFA               	movlw	-6
 41935  01748E  50E3               	movf	plusw1,w,c
 41936  017490  E13F               	bnz	l9972
 41937  017492  0EFB               	movlw	-5
 41938  017494  50E3               	movf	plusw1,w,c
 41939  017496  A4D8               	btfss	status,2,c
 41940  017498  D03B               	goto	l9972
 41941                           
 41942                           ;stkvar	_grs @ sp[(-4)+0]
 41943  01749A  0EFC               	movlw	-4
 41944  01749C  50E3               	movf	plusw1,w,c
 41945  01749E  A4D8               	btfss	status,2,c
 41946  0174A0  D037               	goto	l9972
 41947  0174A2                     u7470:
 41948  0174A2  0E00               	movlw	0
 41949  0174A4  6E2A               	movwf	btemp^0,c
 41950  0174A6  0E00               	movlw	0
 41951  0174A8  6E2B               	movwf	(btemp+1)^0,c
 41952  0174AA  0E00               	movlw	0
 41953  0174AC  6E2C               	movwf	(btemp+2)^0,c
 41954  0174AE  0E00               	movlw	0
 41955  0174B0  6E2D               	movwf	(btemp+3)^0,c
 41956  0174B2  D0C6               	goto	l3265
 41957  0174B4                     l9958:
 41958                           
 41959                           ;stkvar	_b @ sp[(-4)+-4]
 41960  0174B4  90D8               	bcf	status,0,c
 41961  0174B6  0EF8               	movlw	-8
 41962  0174B8  36E3               	rlcf	plusw1,f,c
 41963  0174BA  0EF9               	movlw	-7
 41964  0174BC  36E3               	rlcf	plusw1,f,c
 41965  0174BE  0EFA               	movlw	-6
 41966  0174C0  36E3               	rlcf	plusw1,f,c
 41967  0174C2  0EFB               	movlw	-5
 41968  0174C4  36E3               	rlcf	plusw1,f,c
 41969                           
 41970                           ;stkvar	_grs @ sp[(-4)+0]
 41971  0174C6  0EFC               	movlw	-4
 41972  0174C8  AEE3               	btfss	plusw1,7,c
 41973  0174CA  D002               	goto	l3277
 41974                           
 41975                           ;stkvar	_b @ sp[(-4)+-4]
 41976  0174CC  0EF8               	movlw	-8
 41977  0174CE  80E3               	bsf	plusw1,0,c
 41978  0174D0                     l3277:
 41979                           
 41980                           ;stkvar	_grs @ sp[(-4)+0]
 41981  0174D0  0EFC               	movlw	-4
 41982  0174D2  A0E3               	btfss	plusw1,0,c
 41983  0174D4  D00E               	goto	l9966
 41984                           
 41985                           ;stkvar	_grs @ sp[(-4)+0]
 41986  0174D6  0EFC               	movlw	-4
 41987  0174D8  006F FF8C  F035    	movff	plusw1,btemp+11
 41988  0174DE  90D8               	bcf	status,0,c
 41989  0174E0  3435               	rlcf	(btemp+11)^0,w,c
 41990  0174E2  6E34               	movwf	(btemp+10)^0,c
 41991  0174E4  0E01               	movlw	1
 41992  0174E6  1234               	iorwf	(btemp+10)^0,f,c
 41993                           
 41994                           ;stkvar	_grs @ sp[(-4)+0]
 41995  0174E8  0EFC               	movlw	-4
 41996  0174EA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41997  0174F0  D009               	goto	l9968
 41998  0174F2                     l9966:
 41999                           
 42000                           ;stkvar	_grs @ sp[(-4)+0]
 42001  0174F2  50E1               	movf	fsr1l,w,c
 42002  0174F4  0FFC               	addlw	-4
 42003  0174F6  6ED9               	movwf	fsr2l,c
 42004  0174F8  50E2               	movf	fsr1h,w,c
 42005  0174FA  6EDA               	movwf	fsr2h,c
 42006  0174FC  0EFF               	movlw	255
 42007  0174FE  22DA               	addwfc	fsr2h,f,c
 42008  017500  90D8               	bcf	status,0,c
 42009  017502  36DF               	rlcf	indf2,f,c
 42010  017504                     l9968:
 42011                           
 42012                           ;stkvar	_bexp @ sp[(-4)+1]
 42013  017504  0EFD               	movlw	-3
 42014  017506  50E3               	movf	plusw1,w,c
 42015  017508  B4D8               	btfsc	status,2,c
 42016  01750A  D002               	goto	l9972
 42017                           
 42018                           ;stkvar	_bexp @ sp[(-4)+1]
 42019  01750C  0EFD               	movlw	-3
 42020  01750E  06E3               	decf	plusw1,f,c
 42021  017510                     l9972:
 42022                           
 42023                           ;stkvar	_b @ sp[(-4)+-4]
 42024  017510  0EFA               	movlw	-6
 42025  017512  AEE3               	btfss	plusw1,7,c
 42026  017514  D7CF               	goto	l9958
 42027  017516                     u7510:
 42028                           
 42029                           ;stkvar	_aexp @ sp[(-4)+2]
 42030  017516  0EFE               	movlw	-2
 42031  017518  6AE3               	clrf	plusw1,c
 42032                           
 42033                           ;stkvar	_grs @ sp[(-4)+0]
 42034  01751A  0EFC               	movlw	-4
 42035  01751C  AEE3               	btfss	plusw1,7,c
 42036  01751E  D00F               	goto	l9986
 42037                           
 42038                           ;stkvar	_grs @ sp[(-4)+0]
 42039  017520  0EFC               	movlw	-4
 42040  017522  006F FF8C  F035    	movff	plusw1,btemp+11
 42041  017528  0E7F               	movlw	127
 42042  01752A  1635               	andwf	(btemp+11)^0,f,c
 42043  01752C  B4D8               	btfsc	status,2,c
 42044  01752E  D004               	goto	l9982
 42045  017530                     u7530:
 42046                           
 42047                           ;stkvar	_aexp @ sp[(-4)+2]
 42048  017530  0EFE               	movlw	-2
 42049  017532  6AE3               	clrf	plusw1,c
 42050  017534  2AE3               	incf	plusw1,f,c
 42051  017536  D003               	goto	l9986
 42052  017538                     l9982:
 42053                           
 42054                           ;stkvar	_b @ sp[(-4)+-4]
 42055  017538  0EF8               	movlw	-8
 42056  01753A  B0E3               	btfsc	plusw1,0,c
 42057  01753C  D7F9               	goto	u7530
 42058  01753E                     l9986:
 42059                           
 42060                           ;stkvar	_aexp @ sp[(-4)+2]
 42061  01753E  0EFE               	movlw	-2
 42062  017540  50E3               	movf	plusw1,w,c
 42063  017542  B4D8               	btfsc	status,2,c
 42064  017544  D02B               	goto	l9998
 42065                           
 42066                           ;stkvar	_b @ sp[(-4)+-4]
 42067  017546  50E1               	movf	fsr1l,w,c
 42068  017548  0FF8               	addlw	-8
 42069  01754A  6ED9               	movwf	fsr2l,c
 42070  01754C  50E2               	movf	fsr1h,w,c
 42071  01754E  6EDA               	movwf	fsr2h,c
 42072  017550  0EFF               	movlw	255
 42073  017552  22DA               	addwfc	fsr2h,f,c
 42074  017554  2ADE               	incf	postinc2,f,c
 42075  017556  0E00               	movlw	0
 42076  017558  22DE               	addwfc	postinc2,f,c
 42077  01755A  22DE               	addwfc	postinc2,f,c
 42078  01755C  22DE               	addwfc	postinc2,f,c
 42079                           
 42080                           ;stkvar	_b @ sp[(-4)+-4]
 42081  01755E  0EFB               	movlw	-5
 42082  017560  A0E3               	btfss	plusw1,0,c
 42083  017562  D01C               	goto	l9998
 42084  017564  0E01               	movlw	1
 42085  017566  6E35               	movwf	(btemp+11)^0,c
 42086                           
 42087                           ;stkvar	_b @ sp[(-4)+-4]
 42088  017568  50E1               	movf	fsr1l,w,c
 42089  01756A  0FF8               	addlw	-8
 42090  01756C  6ED9               	movwf	fsr2l,c
 42091  01756E  50E2               	movf	fsr1h,w,c
 42092  017570  6EDA               	movwf	fsr2h,c
 42093  017572  0EFF               	movlw	255
 42094  017574  22DA               	addwfc	fsr2h,f,c
 42095  017576  2835               	incf	(btemp+11)^0,w,c
 42096  017578  52DE               	movf	postinc2,f,c
 42097  01757A  D008               	goto	u7570
 42098  01757C                     u7575:
 42099  01757C  52DE               	movf	postinc2,f,c
 42100  01757E  90D8               	bcf	status,0,c
 42101  017580  BEDC               	btfsc	preinc2,7,c
 42102  017582  80D8               	bsf	status,0,c
 42103  017584  32DD               	rrcf	postdec2,f,c
 42104  017586  32DD               	rrcf	postdec2,f,c
 42105  017588  32DD               	rrcf	postdec2,f,c
 42106  01758A  32DE               	rrcf	postinc2,f,c
 42107  01758C                     u7570:
 42108  01758C  2EE8               	decfsz	wreg,f,c
 42109  01758E  D7F6               	goto	u7575
 42110                           
 42111                           ;stkvar	_bexp @ sp[(-4)+1]
 42112  017590  0EFD               	movlw	-3
 42113  017592  28E3               	incf	plusw1,w,c
 42114  017594  B4D8               	btfsc	status,2,c
 42115  017596  D002               	goto	l9998
 42116                           
 42117                           ;stkvar	_bexp @ sp[(-4)+1]
 42118  017598  0EFD               	movlw	-3
 42119  01759A  2AE3               	incf	plusw1,f,c
 42120  01759C                     l9998:
 42121                           
 42122                           ;stkvar	_bexp @ sp[(-4)+1]
 42123  01759C  0EFD               	movlw	-3
 42124  01759E  28E3               	incf	plusw1,w,c
 42125  0175A0  B4D8               	btfsc	status,2,c
 42126  0175A2  D004               	goto	u7600
 42127                           
 42128                           ;stkvar	_bexp @ sp[(-4)+1]
 42129  0175A4  0EFD               	movlw	-3
 42130  0175A6  50E3               	movf	plusw1,w,c
 42131  0175A8  A4D8               	btfss	status,2,c
 42132  0175AA  D00E               	goto	l10008
 42133  0175AC                     u7600:
 42134                           
 42135                           ;stkvar	_b @ sp[(-4)+-4]
 42136  0175AC  0EF8               	movlw	-8
 42137  0175AE  6AE3               	clrf	plusw1,c
 42138  0175B0  0EF9               	movlw	-7
 42139  0175B2  6AE3               	clrf	plusw1,c
 42140  0175B4  0EFA               	movlw	-6
 42141  0175B6  6AE3               	clrf	plusw1,c
 42142  0175B8  0EFB               	movlw	-5
 42143  0175BA  6AE3               	clrf	plusw1,c
 42144                           
 42145                           ;stkvar	_bexp @ sp[(-4)+1]
 42146  0175BC  0EFD               	movlw	-3
 42147  0175BE  50E3               	movf	plusw1,w,c
 42148  0175C0  A4D8               	btfss	status,2,c
 42149  0175C2  D002               	goto	l10008
 42150                           
 42151                           ;stkvar	_signs @ sp[(-4)+3]
 42152  0175C4  0EFF               	movlw	-1
 42153  0175C6  6AE3               	clrf	plusw1,c
 42154  0175C8                     l10008:
 42155                           
 42156                           ;stkvar	_bexp @ sp[(-4)+1]
 42157  0175C8  0EFD               	movlw	-3
 42158  0175CA  A0E3               	btfss	plusw1,0,c
 42159  0175CC  D009               	goto	l10012
 42160                           
 42161                           ;stkvar	_b @ sp[(-4)+-4]
 42162  0175CE  0EFA               	movlw	250
 42163  0175D0  24E1               	addwf	fsr1l,w,c
 42164  0175D2  6ED9               	movwf	fsr2l,c
 42165  0175D4  0EFF               	movlw	255
 42166  0175D6  20E2               	addwfc	fsr1h,w,c
 42167  0175D8  6EDA               	movwf	fsr2h,c
 42168  0175DA  0E00               	movlw	0
 42169  0175DC  8EDB               	bsf	plusw2,7,c
 42170  0175DE  D008               	goto	l10014
 42171  0175E0                     l10012:
 42172                           
 42173                           ;stkvar	_b @ sp[(-4)+-4]
 42174  0175E0  0EFA               	movlw	250
 42175  0175E2  24E1               	addwf	fsr1l,w,c
 42176  0175E4  6ED9               	movwf	fsr2l,c
 42177  0175E6  0EFF               	movlw	255
 42178  0175E8  20E2               	addwfc	fsr1h,w,c
 42179  0175EA  6EDA               	movwf	fsr2h,c
 42180  0175EC  0E7F               	movlw	127
 42181  0175EE  16DF               	andwf	indf2,f,c
 42182  0175F0                     l10014:
 42183                           
 42184                           ;stkvar	_b @ sp[(-4)+-4]
 42185  0175F0  0EFB               	movlw	251
 42186  0175F2  24E1               	addwf	fsr1l,w,c
 42187  0175F4  6ED9               	movwf	fsr2l,c
 42188  0175F6  0EFF               	movlw	255
 42189  0175F8  20E2               	addwfc	fsr1h,w,c
 42190  0175FA  6EDA               	movwf	fsr2h,c
 42191                           
 42192                           ;stkvar	_bexp @ sp[(-4)+1]
 42193  0175FC  0EFD               	movlw	-3
 42194  0175FE  006F FF8C  F035    	movff	plusw1,btemp+11
 42195  017604  90D8               	bcf	status,0,c
 42196  017606  3035               	rrcf	(btemp+11)^0,w,c
 42197  017608  6EDF               	movwf	indf2,c
 42198                           
 42199                           ;stkvar	_signs @ sp[(-4)+3]
 42200  01760A  0EFF               	movlw	-1
 42201  01760C  AEE3               	btfss	plusw1,7,c
 42202  01760E  D008               	goto	l10020
 42203                           
 42204                           ;stkvar	_b @ sp[(-4)+-4]
 42205  017610  0EFB               	movlw	251
 42206  017612  24E1               	addwf	fsr1l,w,c
 42207  017614  6ED9               	movwf	fsr2l,c
 42208  017616  0EFF               	movlw	255
 42209  017618  20E2               	addwfc	fsr1h,w,c
 42210  01761A  6EDA               	movwf	fsr2h,c
 42211  01761C  0E00               	movlw	0
 42212  01761E  8EDB               	bsf	plusw2,7,c
 42213  017620                     l10020:
 42214                           
 42215                           ;stkvar	_b @ sp[(-4)+-4]
 42216  017620  0EF8               	movlw	-8
 42217  017622  006F FF8C  F02A    	movff	plusw1,btemp
 42218  017628  0EF9               	movlw	-7
 42219  01762A  006F FF8C  F02B    	movff	plusw1,btemp+1
 42220  017630  0EFA               	movlw	-6
 42221  017632  006F FF8C  F02C    	movff	plusw1,btemp+2
 42222  017638  0EFB               	movlw	-5
 42223  01763A  006F FF8C  F02D    	movff	plusw1,btemp+3
 42224  017640                     l3265:
 42225                           
 42226                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 42227  017640  0EF4               	movlw	244
 42228  017642  26E1               	addwf	fsr1l,f,c
 42229  017644  0EFF               	movlw	255
 42230  017646  22E2               	addwfc	fsr1h,f,c
 42231  017648  0012               	return		;funcret
 42232  01764A                     __end_of___fladd:
 42233                           	opt callstack 0
 42234                           
 42235 ;; *************** function ___flmul *****************
 42236 ;; Defined at:
 42237 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 42238 ;; Parameters:    Size  Location     Type
 42239 ;;  b               4  [STACK] unsigned char 
 42240 ;;  a               4  [STACK] unsigned char 
 42241 ;; Auto vars:     Size  Location     Type
 42242 ;;  prod            4  [STACK] struct .
 42243 ;;  grs             4  [STACK] unsigned long 
 42244 ;;  temp            2  [STACK] struct .
 42245 ;;  bexp            1  [STACK] unsigned char 
 42246 ;;  aexp            1  [STACK] unsigned char 
 42247 ;;  sign            1  [STACK] unsigned char 
 42248 ;; Return value:  Size  Location     Type
 42249 ;;                  4  [STACK] unsigned char 
 42250 ;; Registers used:
 42251 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 42252 ;; Tracked objects:
 42253 ;;		On entry : 0/39
 42254 ;;		On exit  : 0/0
 42255 ;;		Unchanged: 0/0
 42256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 42257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42261 ;;Total ram usage:        0 bytes
 42262 ;; Hardware stack levels used:    1
 42263 ;; Hardware stack levels required when called:   15
 42264 ;; This function calls:
 42265 ;;		Nothing
 42266 ;; This function is called by:
 42267 ;;		_conv_raw_result
 42268 ;;		_lp_filter
 42269 ;;		_calc_model_data
 42270 ;;		_load_hist_data
 42271 ;;		_calc_bsoc
 42272 ;;		_init_bsoc
 42273 ;;		_efgtoa
 42274 ;; This function uses a reentrant model
 42275 ;;
 42276                           
 42277                           	psect	text154
 42278  016664                     __ptext154:
 42279                           	opt callstack 0
 42280  016664                     ___flmul:
 42281                           	opt callstack 0
 42282                           
 42283                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 42284  016664  0E0D               	movlw	13
 42285  016666  26E1               	addwf	fsr1l,f,c
 42286  016668  0E00               	movlw	0
 42287  01666A  22E2               	addwfc	fsr1h,f,c
 42288                           
 42289                           ;stkvar	_b @ sp[(-13)+-4]
 42290                           
 42291                           ;incstack = 0
 42292 ;; hardware stack exceeded
 42293  01666C  0EF2               	movlw	242
 42294  01666E  24E1               	addwf	fsr1l,w,c
 42295  016670  6ED9               	movwf	fsr2l,c
 42296  016672  0EFF               	movlw	255
 42297  016674  20E2               	addwfc	fsr1h,w,c
 42298  016676  6EDA               	movwf	fsr2h,c
 42299  016678  50DF               	movf	indf2,w,c
 42300  01667A  6E35               	movwf	(btemp+11)^0,c
 42301  01667C  0E80               	movlw	128
 42302  01667E  1635               	andwf	(btemp+11)^0,f,c
 42303                           
 42304                           ;stkvar	_sign @ sp[(-13)+12]
 42305  016680  0EFF               	movlw	-1
 42306  016682  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42307                           
 42308                           ;stkvar	_b @ sp[(-13)+-4]
 42309  016688  0EF2               	movlw	242
 42310  01668A  24E1               	addwf	fsr1l,w,c
 42311  01668C  6ED9               	movwf	fsr2l,c
 42312  01668E  0EFF               	movlw	255
 42313  016690  20E2               	addwfc	fsr1h,w,c
 42314  016692  6EDA               	movwf	fsr2h,c
 42315  016694  50DF               	movf	indf2,w,c
 42316  016696  6E35               	movwf	(btemp+11)^0,c
 42317  016698  90D8               	bcf	status,0,c
 42318  01669A  3435               	rlcf	(btemp+11)^0,w,c
 42319  01669C  6E34               	movwf	(btemp+10)^0,c
 42320                           
 42321                           ;stkvar	_bexp @ sp[(-13)+10]
 42322  01669E  0EFD               	movlw	-3
 42323  0166A0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42324                           
 42325                           ;stkvar	_b @ sp[(-13)+-4]
 42326  0166A6  0EF1               	movlw	241
 42327  0166A8  24E1               	addwf	fsr1l,w,c
 42328  0166AA  6ED9               	movwf	fsr2l,c
 42329  0166AC  0EFF               	movlw	255
 42330  0166AE  20E2               	addwfc	fsr1h,w,c
 42331  0166B0  6EDA               	movwf	fsr2h,c
 42332  0166B2  AEDF               	btfss	indf2,7,c
 42333  0166B4  D002               	goto	l10484
 42334                           
 42335                           ;stkvar	_bexp @ sp[(-13)+10]
 42336  0166B6  0EFD               	movlw	-3
 42337  0166B8  80E3               	bsf	plusw1,0,c
 42338  0166BA                     l10484:
 42339                           
 42340                           ;stkvar	_bexp @ sp[(-13)+10]
 42341  0166BA  0EFD               	movlw	-3
 42342  0166BC  50E3               	movf	plusw1,w,c
 42343  0166BE  B4D8               	btfsc	status,2,c
 42344  0166C0  D01F               	goto	l10492
 42345                           
 42346                           ;stkvar	_bexp @ sp[(-13)+10]
 42347  0166C2  0EFD               	movlw	-3
 42348  0166C4  28E3               	incf	plusw1,w,c
 42349  0166C6  A4D8               	btfss	status,2,c
 42350  0166C8  D018               	goto	l10490
 42351  0166CA  0E00               	movlw	0
 42352  0166CC  6E32               	movwf	(btemp+8)^0,c
 42353  0166CE  0E00               	movlw	0
 42354  0166D0  6E33               	movwf	(btemp+9)^0,c
 42355  0166D2  0E00               	movlw	0
 42356  0166D4  6E34               	movwf	(btemp+10)^0,c
 42357  0166D6  0E00               	movlw	0
 42358  0166D8  6E35               	movwf	(btemp+11)^0,c
 42359                           
 42360                           ;stkvar	_b @ sp[(-13)+-4]
 42361  0166DA  0EEF               	movlw	-17
 42362  0166DC  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 42363  0166E2  0EF0               	movlw	-16
 42364  0166E4  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 42365  0166EA  0EF1               	movlw	-15
 42366  0166EC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42367  0166F2  0EF2               	movlw	-14
 42368  0166F4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42369  0166FA                     l10490:
 42370                           
 42371                           ;stkvar	_b @ sp[(-13)+-4]
 42372  0166FA  0EF1               	movlw	-15
 42373  0166FC  8EE3               	bsf	plusw1,7,c
 42374  0166FE  D018               	goto	l10494
 42375  016700                     l10492:
 42376  016700  0E00               	movlw	0
 42377  016702  6E32               	movwf	(btemp+8)^0,c
 42378  016704  0E00               	movlw	0
 42379  016706  6E33               	movwf	(btemp+9)^0,c
 42380  016708  0E00               	movlw	0
 42381  01670A  6E34               	movwf	(btemp+10)^0,c
 42382  01670C  0E00               	movlw	0
 42383  01670E  6E35               	movwf	(btemp+11)^0,c
 42384                           
 42385                           ;stkvar	_b @ sp[(-13)+-4]
 42386  016710  0EEF               	movlw	-17
 42387  016712  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 42388  016718  0EF0               	movlw	-16
 42389  01671A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 42390  016720  0EF1               	movlw	-15
 42391  016722  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42392  016728  0EF2               	movlw	-14
 42393  01672A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42394  016730                     l10494:
 42395                           
 42396                           ;stkvar	_a @ sp[(-13)+-8]
 42397  016730  0EEE               	movlw	238
 42398  016732  24E1               	addwf	fsr1l,w,c
 42399  016734  6ED9               	movwf	fsr2l,c
 42400  016736  0EFF               	movlw	255
 42401  016738  20E2               	addwfc	fsr1h,w,c
 42402  01673A  6EDA               	movwf	fsr2h,c
 42403  01673C  50DF               	movf	indf2,w,c
 42404  01673E  6E35               	movwf	(btemp+11)^0,c
 42405  016740  0E80               	movlw	128
 42406  016742  1635               	andwf	(btemp+11)^0,f,c
 42407                           
 42408                           ;stkvar	_sign @ sp[(-13)+12]
 42409  016744  50E1               	movf	fsr1l,w,c
 42410  016746  0FFF               	addlw	-1
 42411  016748  6ED9               	movwf	fsr2l,c
 42412  01674A  50E2               	movf	fsr1h,w,c
 42413  01674C  6EDA               	movwf	fsr2h,c
 42414  01674E  0EFF               	movlw	255
 42415  016750  22DA               	addwfc	fsr2h,f,c
 42416  016752  5035               	movf	(btemp+11)^0,w,c
 42417  016754  1ADF               	xorwf	indf2,f,c
 42418                           
 42419                           ;stkvar	_a @ sp[(-13)+-8]
 42420  016756  0EEE               	movlw	238
 42421  016758  24E1               	addwf	fsr1l,w,c
 42422  01675A  6ED9               	movwf	fsr2l,c
 42423  01675C  0EFF               	movlw	255
 42424  01675E  20E2               	addwfc	fsr1h,w,c
 42425  016760  6EDA               	movwf	fsr2h,c
 42426  016762  50DF               	movf	indf2,w,c
 42427  016764  6E35               	movwf	(btemp+11)^0,c
 42428  016766  90D8               	bcf	status,0,c
 42429  016768  3435               	rlcf	(btemp+11)^0,w,c
 42430  01676A  6E34               	movwf	(btemp+10)^0,c
 42431                           
 42432                           ;stkvar	_aexp @ sp[(-13)+11]
 42433  01676C  0EFE               	movlw	-2
 42434  01676E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42435                           
 42436                           ;stkvar	_a @ sp[(-13)+-8]
 42437  016774  0EED               	movlw	237
 42438  016776  24E1               	addwf	fsr1l,w,c
 42439  016778  6ED9               	movwf	fsr2l,c
 42440  01677A  0EFF               	movlw	255
 42441  01677C  20E2               	addwfc	fsr1h,w,c
 42442  01677E  6EDA               	movwf	fsr2h,c
 42443  016780  AEDF               	btfss	indf2,7,c
 42444  016782  D002               	goto	l10502
 42445                           
 42446                           ;stkvar	_aexp @ sp[(-13)+11]
 42447  016784  0EFE               	movlw	-2
 42448  016786  80E3               	bsf	plusw1,0,c
 42449  016788                     l10502:
 42450                           
 42451                           ;stkvar	_aexp @ sp[(-13)+11]
 42452  016788  0EFE               	movlw	-2
 42453  01678A  50E3               	movf	plusw1,w,c
 42454  01678C  B4D8               	btfsc	status,2,c
 42455  01678E  D01F               	goto	l10510
 42456                           
 42457                           ;stkvar	_aexp @ sp[(-13)+11]
 42458  016790  0EFE               	movlw	-2
 42459  016792  28E3               	incf	plusw1,w,c
 42460  016794  A4D8               	btfss	status,2,c
 42461  016796  D018               	goto	l10508
 42462  016798  0E00               	movlw	0
 42463  01679A  6E32               	movwf	(btemp+8)^0,c
 42464  01679C  0E00               	movlw	0
 42465  01679E  6E33               	movwf	(btemp+9)^0,c
 42466  0167A0  0E00               	movlw	0
 42467  0167A2  6E34               	movwf	(btemp+10)^0,c
 42468  0167A4  0E00               	movlw	0
 42469  0167A6  6E35               	movwf	(btemp+11)^0,c
 42470                           
 42471                           ;stkvar	_a @ sp[(-13)+-8]
 42472  0167A8  0EEB               	movlw	-21
 42473  0167AA  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 42474  0167B0  0EEC               	movlw	-20
 42475  0167B2  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 42476  0167B8  0EED               	movlw	-19
 42477  0167BA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42478  0167C0  0EEE               	movlw	-18
 42479  0167C2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42480  0167C8                     l10508:
 42481                           
 42482                           ;stkvar	_a @ sp[(-13)+-8]
 42483  0167C8  0EED               	movlw	-19
 42484  0167CA  8EE3               	bsf	plusw1,7,c
 42485  0167CC  D018               	goto	l10512
 42486  0167CE                     l10510:
 42487  0167CE  0E00               	movlw	0
 42488  0167D0  6E32               	movwf	(btemp+8)^0,c
 42489  0167D2  0E00               	movlw	0
 42490  0167D4  6E33               	movwf	(btemp+9)^0,c
 42491  0167D6  0E00               	movlw	0
 42492  0167D8  6E34               	movwf	(btemp+10)^0,c
 42493  0167DA  0E00               	movlw	0
 42494  0167DC  6E35               	movwf	(btemp+11)^0,c
 42495                           
 42496                           ;stkvar	_a @ sp[(-13)+-8]
 42497  0167DE  0EEB               	movlw	-21
 42498  0167E0  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 42499  0167E6  0EEC               	movlw	-20
 42500  0167E8  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 42501  0167EE  0EED               	movlw	-19
 42502  0167F0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42503  0167F6  0EEE               	movlw	-18
 42504  0167F8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42505  0167FE                     l10512:
 42506                           
 42507                           ;stkvar	_aexp @ sp[(-13)+11]
 42508  0167FE  0EFE               	movlw	-2
 42509  016800  50E3               	movf	plusw1,w,c
 42510  016802  B4D8               	btfsc	status,2,c
 42511  016804  D004               	goto	u8660
 42512                           
 42513                           ;stkvar	_bexp @ sp[(-13)+10]
 42514  016806  0EFD               	movlw	-3
 42515  016808  50E3               	movf	plusw1,w,c
 42516  01680A  A4D8               	btfss	status,2,c
 42517  01680C  D009               	goto	l10520
 42518  01680E                     u8660:
 42519  01680E  0E00               	movlw	0
 42520  016810  6E2A               	movwf	btemp^0,c
 42521  016812  0E00               	movlw	0
 42522  016814  6E2B               	movwf	(btemp+1)^0,c
 42523  016816  0E00               	movlw	0
 42524  016818  6E2C               	movwf	(btemp+2)^0,c
 42525  01681A  0E00               	movlw	0
 42526  01681C  6E2D               	movwf	(btemp+3)^0,c
 42527  01681E  D332               	goto	l3346
 42528  016820                     l10520:
 42529                           
 42530                           ;stkvar	_b @ sp[(-13)+-4]
 42531  016820  0EEF               	movlw	-17
 42532  016822  006F FF8C  F035    	movff	plusw1,btemp+11
 42533                           
 42534                           ;stkvar	_a @ sp[(-13)+-8]
 42535  016828  0EED               	movlw	237
 42536  01682A  24E1               	addwf	fsr1l,w,c
 42537  01682C  6ED9               	movwf	fsr2l,c
 42538  01682E  0EFF               	movlw	255
 42539  016830  20E2               	addwfc	fsr1h,w,c
 42540  016832  6EDA               	movwf	fsr2h,c
 42541  016834  50DF               	movf	indf2,w,c
 42542  016836  0235               	mulwf	(btemp+11)^0,c
 42543                           
 42544                           ;stkvar	_temp @ sp[(-13)+8]
 42545  016838  0EFB               	movlw	-5
 42546  01683A  006F FFCF FFE3     	movff	prodl,plusw1
 42547  016840  0EFC               	movlw	-4
 42548  016842  006F FFD3 FFE3     	movff	prodh,plusw1
 42549                           
 42550                           ;stkvar	_temp @ sp[(-13)+8]
 42551  016848  0EFB               	movlw	-5
 42552  01684A  006F FF8C  F035    	movff	plusw1,btemp+11
 42553  016850  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 42554  016856  6A2F               	clrf	(btemp+5)^0,c
 42555  016858  6A30               	clrf	(btemp+6)^0,c
 42556  01685A  6A31               	clrf	(btemp+7)^0,c
 42557                           
 42558                           ;stkvar	_grs @ sp[(-13)+4]
 42559  01685C  0EF7               	movlw	-9
 42560  01685E  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 42561  016864  0EF8               	movlw	-8
 42562  016866  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 42563  01686C  0EF9               	movlw	-7
 42564  01686E  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 42565  016874  0EFA               	movlw	-6
 42566  016876  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 42567                           
 42568                           ;stkvar	_temp @ sp[(-13)+8]
 42569  01687C  0EFC               	movlw	252
 42570  01687E  24E1               	addwf	fsr1l,w,c
 42571  016880  6ED9               	movwf	fsr2l,c
 42572  016882  0EFF               	movlw	255
 42573  016884  20E2               	addwfc	fsr1h,w,c
 42574  016886  6EDA               	movwf	fsr2h,c
 42575  016888  50DF               	movf	indf2,w,c
 42576  01688A  6E35               	movwf	(btemp+11)^0,c
 42577  01688C  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 42578  016892  6A2F               	clrf	(btemp+5)^0,c
 42579  016894  6A30               	clrf	(btemp+6)^0,c
 42580  016896  6A31               	clrf	(btemp+7)^0,c
 42581                           
 42582                           ;stkvar	_prod @ sp[(-13)+0]
 42583  016898  0EF3               	movlw	-13
 42584  01689A  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 42585  0168A0  0EF4               	movlw	-12
 42586  0168A2  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 42587  0168A8  0EF5               	movlw	-11
 42588  0168AA  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 42589  0168B0  0EF6               	movlw	-10
 42590  0168B2  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 42591                           
 42592                           ;stkvar	_b @ sp[(-13)+-4]
 42593  0168B8  0EF0               	movlw	240
 42594  0168BA  24E1               	addwf	fsr1l,w,c
 42595  0168BC  6ED9               	movwf	fsr2l,c
 42596  0168BE  0EFF               	movlw	255
 42597  0168C0  20E2               	addwfc	fsr1h,w,c
 42598  0168C2  6EDA               	movwf	fsr2h,c
 42599  0168C4  50DF               	movf	indf2,w,c
 42600  0168C6  6E35               	movwf	(btemp+11)^0,c
 42601                           
 42602                           ;stkvar	_a @ sp[(-13)+-8]
 42603  0168C8  0EEC               	movlw	236
 42604  0168CA  24E1               	addwf	fsr1l,w,c
 42605  0168CC  6ED9               	movwf	fsr2l,c
 42606  0168CE  0EFF               	movlw	255
 42607  0168D0  20E2               	addwfc	fsr1h,w,c
 42608  0168D2  6EDA               	movwf	fsr2h,c
 42609  0168D4  50DF               	movf	indf2,w,c
 42610  0168D6  0235               	mulwf	(btemp+11)^0,c
 42611                           
 42612                           ;stkvar	_temp @ sp[(-13)+8]
 42613  0168D8  0EFB               	movlw	-5
 42614  0168DA  006F FFCF FFE3     	movff	prodl,plusw1
 42615  0168E0  0EFC               	movlw	-4
 42616  0168E2  006F FFD3 FFE3     	movff	prodh,plusw1
 42617                           
 42618                           ;stkvar	_grs @ sp[(-13)+4]
 42619  0168E8  50E1               	movf	fsr1l,w,c
 42620  0168EA  0FF7               	addlw	-9
 42621  0168EC  6ED9               	movwf	fsr2l,c
 42622  0168EE  50E2               	movf	fsr1h,w,c
 42623  0168F0  6EDA               	movwf	fsr2h,c
 42624  0168F2  0EFF               	movlw	255
 42625  0168F4  22DA               	addwfc	fsr2h,f,c
 42626                           
 42627                           ;stkvar	_temp @ sp[(-13)+8]
 42628  0168F6  0EFB               	movlw	-5
 42629  0168F8  50E3               	movf	plusw1,w,c
 42630  0168FA  26DE               	addwf	postinc2,f,c
 42631  0168FC  0E00               	movlw	0
 42632  0168FE  22DE               	addwfc	postinc2,f,c
 42633  016900  22DE               	addwfc	postinc2,f,c
 42634  016902  22DE               	addwfc	postinc2,f,c
 42635                           
 42636                           ;stkvar	_prod @ sp[(-13)+0]
 42637  016904  50E1               	movf	fsr1l,w,c
 42638  016906  0FF3               	addlw	-13
 42639  016908  6ED9               	movwf	fsr2l,c
 42640  01690A  50E2               	movf	fsr1h,w,c
 42641  01690C  6EDA               	movwf	fsr2h,c
 42642  01690E  0EFF               	movlw	255
 42643  016910  22DA               	addwfc	fsr2h,f,c
 42644                           
 42645                           ;stkvar	_temp @ sp[(-13)+8]
 42646  016912  0EFC               	movlw	252
 42647  016914  24E1               	addwf	fsr1l,w,c
 42648  016916  6EE9               	movwf	fsr0l,c
 42649  016918  0EFF               	movlw	255
 42650  01691A  20E2               	addwfc	fsr1h,w,c
 42651  01691C  6EEA               	movwf	fsr0h,c
 42652  01691E  50EF               	movf	indf0,w,c
 42653  016920  26DE               	addwf	postinc2,f,c
 42654  016922  0E00               	movlw	0
 42655  016924  22DE               	addwfc	postinc2,f,c
 42656  016926  22DE               	addwfc	postinc2,f,c
 42657  016928  22DE               	addwfc	postinc2,f,c
 42658                           
 42659                           ;stkvar	_b @ sp[(-13)+-4]
 42660  01692A  0EF1               	movlw	241
 42661  01692C  24E1               	addwf	fsr1l,w,c
 42662  01692E  6ED9               	movwf	fsr2l,c
 42663  016930  0EFF               	movlw	255
 42664  016932  20E2               	addwfc	fsr1h,w,c
 42665  016934  6EDA               	movwf	fsr2h,c
 42666  016936  50DF               	movf	indf2,w,c
 42667  016938  6E35               	movwf	(btemp+11)^0,c
 42668                           
 42669                           ;stkvar	_a @ sp[(-13)+-8]
 42670  01693A  0EEB               	movlw	-21
 42671  01693C  50E3               	movf	plusw1,w,c
 42672  01693E  0235               	mulwf	(btemp+11)^0,c
 42673                           
 42674                           ;stkvar	_temp @ sp[(-13)+8]
 42675  016940  0EFB               	movlw	-5
 42676  016942  006F FFCF FFE3     	movff	prodl,plusw1
 42677  016948  0EFC               	movlw	-4
 42678  01694A  006F FFD3 FFE3     	movff	prodh,plusw1
 42679                           
 42680                           ;stkvar	_grs @ sp[(-13)+4]
 42681  016950  50E1               	movf	fsr1l,w,c
 42682  016952  0FF7               	addlw	-9
 42683  016954  6ED9               	movwf	fsr2l,c
 42684  016956  50E2               	movf	fsr1h,w,c
 42685  016958  6EDA               	movwf	fsr2h,c
 42686  01695A  0EFF               	movlw	255
 42687  01695C  22DA               	addwfc	fsr2h,f,c
 42688                           
 42689                           ;stkvar	_temp @ sp[(-13)+8]
 42690  01695E  0EFB               	movlw	-5
 42691  016960  50E3               	movf	plusw1,w,c
 42692  016962  26DE               	addwf	postinc2,f,c
 42693  016964  0E00               	movlw	0
 42694  016966  22DE               	addwfc	postinc2,f,c
 42695  016968  22DE               	addwfc	postinc2,f,c
 42696  01696A  22DE               	addwfc	postinc2,f,c
 42697                           
 42698                           ;stkvar	_prod @ sp[(-13)+0]
 42699  01696C  50E1               	movf	fsr1l,w,c
 42700  01696E  0FF3               	addlw	-13
 42701  016970  6ED9               	movwf	fsr2l,c
 42702  016972  50E2               	movf	fsr1h,w,c
 42703  016974  6EDA               	movwf	fsr2h,c
 42704  016976  0EFF               	movlw	255
 42705  016978  22DA               	addwfc	fsr2h,f,c
 42706                           
 42707                           ;stkvar	_temp @ sp[(-13)+8]
 42708  01697A  0EFC               	movlw	252
 42709  01697C  24E1               	addwf	fsr1l,w,c
 42710  01697E  6EE9               	movwf	fsr0l,c
 42711  016980  0EFF               	movlw	255
 42712  016982  20E2               	addwfc	fsr1h,w,c
 42713  016984  6EEA               	movwf	fsr0h,c
 42714  016986  50EF               	movf	indf0,w,c
 42715  016988  26DE               	addwf	postinc2,f,c
 42716  01698A  0E00               	movlw	0
 42717  01698C  22DE               	addwfc	postinc2,f,c
 42718  01698E  22DE               	addwfc	postinc2,f,c
 42719  016990  22DE               	addwfc	postinc2,f,c
 42720                           
 42721                           ;stkvar	_grs @ sp[(-13)+4]
 42722  016992  50E1               	movf	fsr1l,w,c
 42723  016994  0FF7               	addlw	-9
 42724  016996  6ED9               	movwf	fsr2l,c
 42725  016998  50E2               	movf	fsr1h,w,c
 42726  01699A  6EDA               	movwf	fsr2h,c
 42727  01699C  0EFF               	movlw	255
 42728  01699E  22DA               	addwfc	fsr2h,f,c
 42729  0169A0  0E08               	movlw	8
 42730  0169A2                     u8675:
 42731  0169A2  90D8               	bcf	status,0,c
 42732  0169A4  36DE               	rlcf	postinc2,f,c
 42733  0169A6  36DE               	rlcf	postinc2,f,c
 42734  0169A8  36DE               	rlcf	postinc2,f,c
 42735  0169AA  36DD               	rlcf	postdec2,f,c
 42736  0169AC  52DD               	movf	postdec2,f,c
 42737  0169AE  52DD               	movf	postdec2,f,c
 42738  0169B0  2EE8               	decfsz	wreg,f,c
 42739  0169B2  D7F7               	goto	u8675
 42740                           
 42741                           ;stkvar	_b @ sp[(-13)+-4]
 42742  0169B4  0EF0               	movlw	240
 42743  0169B6  24E1               	addwf	fsr1l,w,c
 42744  0169B8  6ED9               	movwf	fsr2l,c
 42745  0169BA  0EFF               	movlw	255
 42746  0169BC  20E2               	addwfc	fsr1h,w,c
 42747  0169BE  6EDA               	movwf	fsr2h,c
 42748  0169C0  50DF               	movf	indf2,w,c
 42749  0169C2  6E35               	movwf	(btemp+11)^0,c
 42750                           
 42751                           ;stkvar	_a @ sp[(-13)+-8]
 42752  0169C4  0EEB               	movlw	-21
 42753  0169C6  50E3               	movf	plusw1,w,c
 42754  0169C8  0235               	mulwf	(btemp+11)^0,c
 42755                           
 42756                           ;stkvar	_temp @ sp[(-13)+8]
 42757  0169CA  0EFB               	movlw	-5
 42758  0169CC  006F FFCF FFE3     	movff	prodl,plusw1
 42759  0169D2  0EFC               	movlw	-4
 42760  0169D4  006F FFD3 FFE3     	movff	prodh,plusw1
 42761                           
 42762                           ;stkvar	_temp @ sp[(-13)+8]
 42763  0169DA  0EFB               	movlw	-5
 42764  0169DC  006F FF8C  F034    	movff	plusw1,btemp+10
 42765  0169E2  0EFC               	movlw	-4
 42766  0169E4  006F FF8C  F035    	movff	plusw1,btemp+11
 42767                           
 42768                           ;stkvar	_grs @ sp[(-13)+4]
 42769  0169EA  50E1               	movf	fsr1l,w,c
 42770  0169EC  0FF7               	addlw	-9
 42771  0169EE  6ED9               	movwf	fsr2l,c
 42772  0169F0  50E2               	movf	fsr1h,w,c
 42773  0169F2  6EDA               	movwf	fsr2h,c
 42774  0169F4  0EFF               	movlw	255
 42775  0169F6  22DA               	addwfc	fsr2h,f,c
 42776  0169F8  5034               	movf	(btemp+10)^0,w,c
 42777  0169FA  26DE               	addwf	postinc2,f,c
 42778  0169FC  5035               	movf	(btemp+11)^0,w,c
 42779  0169FE  22DE               	addwfc	postinc2,f,c
 42780  016A00  0E00               	movlw	0
 42781  016A02  22DE               	addwfc	postinc2,f,c
 42782  016A04  22DE               	addwfc	postinc2,f,c
 42783                           
 42784                           ;stkvar	_b @ sp[(-13)+-4]
 42785  016A06  0EEF               	movlw	-17
 42786  016A08  006F FF8C  F035    	movff	plusw1,btemp+11
 42787                           
 42788                           ;stkvar	_a @ sp[(-13)+-8]
 42789  016A0E  0EEC               	movlw	236
 42790  016A10  24E1               	addwf	fsr1l,w,c
 42791  016A12  6ED9               	movwf	fsr2l,c
 42792  016A14  0EFF               	movlw	255
 42793  016A16  20E2               	addwfc	fsr1h,w,c
 42794  016A18  6EDA               	movwf	fsr2h,c
 42795  016A1A  50DF               	movf	indf2,w,c
 42796  016A1C  0235               	mulwf	(btemp+11)^0,c
 42797                           
 42798                           ;stkvar	_temp @ sp[(-13)+8]
 42799  016A1E  0EFB               	movlw	-5
 42800  016A20  006F FFCF FFE3     	movff	prodl,plusw1
 42801  016A26  0EFC               	movlw	-4
 42802  016A28  006F FFD3 FFE3     	movff	prodh,plusw1
 42803                           
 42804                           ;stkvar	_temp @ sp[(-13)+8]
 42805  016A2E  0EFB               	movlw	-5
 42806  016A30  006F FF8C  F034    	movff	plusw1,btemp+10
 42807  016A36  0EFC               	movlw	-4
 42808  016A38  006F FF8C  F035    	movff	plusw1,btemp+11
 42809                           
 42810                           ;stkvar	_grs @ sp[(-13)+4]
 42811  016A3E  50E1               	movf	fsr1l,w,c
 42812  016A40  0FF7               	addlw	-9
 42813  016A42  6ED9               	movwf	fsr2l,c
 42814  016A44  50E2               	movf	fsr1h,w,c
 42815  016A46  6EDA               	movwf	fsr2h,c
 42816  016A48  0EFF               	movlw	255
 42817  016A4A  22DA               	addwfc	fsr2h,f,c
 42818  016A4C  5034               	movf	(btemp+10)^0,w,c
 42819  016A4E  26DE               	addwf	postinc2,f,c
 42820  016A50  5035               	movf	(btemp+11)^0,w,c
 42821  016A52  22DE               	addwfc	postinc2,f,c
 42822  016A54  0E00               	movlw	0
 42823  016A56  22DE               	addwfc	postinc2,f,c
 42824  016A58  22DE               	addwfc	postinc2,f,c
 42825                           
 42826                           ;stkvar	_grs @ sp[(-13)+4]
 42827  016A5A  50E1               	movf	fsr1l,w,c
 42828  016A5C  0FF7               	addlw	-9
 42829  016A5E  6ED9               	movwf	fsr2l,c
 42830  016A60  50E2               	movf	fsr1h,w,c
 42831  016A62  6EDA               	movwf	fsr2h,c
 42832  016A64  0EFF               	movlw	255
 42833  016A66  22DA               	addwfc	fsr2h,f,c
 42834  016A68  0E08               	movlw	8
 42835  016A6A                     u8685:
 42836  016A6A  90D8               	bcf	status,0,c
 42837  016A6C  36DE               	rlcf	postinc2,f,c
 42838  016A6E  36DE               	rlcf	postinc2,f,c
 42839  016A70  36DE               	rlcf	postinc2,f,c
 42840  016A72  36DD               	rlcf	postdec2,f,c
 42841  016A74  52DD               	movf	postdec2,f,c
 42842  016A76  52DD               	movf	postdec2,f,c
 42843  016A78  2EE8               	decfsz	wreg,f,c
 42844  016A7A  D7F7               	goto	u8685
 42845                           
 42846                           ;stkvar	_b @ sp[(-13)+-4]
 42847  016A7C  0EEF               	movlw	-17
 42848  016A7E  006F FF8C  F035    	movff	plusw1,btemp+11
 42849                           
 42850                           ;stkvar	_a @ sp[(-13)+-8]
 42851  016A84  0EEB               	movlw	-21
 42852  016A86  50E3               	movf	plusw1,w,c
 42853  016A88  0235               	mulwf	(btemp+11)^0,c
 42854                           
 42855                           ;stkvar	_temp @ sp[(-13)+8]
 42856  016A8A  0EFB               	movlw	-5
 42857  016A8C  006F FFCF FFE3     	movff	prodl,plusw1
 42858  016A92  0EFC               	movlw	-4
 42859  016A94  006F FFD3 FFE3     	movff	prodh,plusw1
 42860                           
 42861                           ;stkvar	_temp @ sp[(-13)+8]
 42862  016A9A  0EFB               	movlw	-5
 42863  016A9C  006F FF8C  F034    	movff	plusw1,btemp+10
 42864  016AA2  0EFC               	movlw	-4
 42865  016AA4  006F FF8C  F035    	movff	plusw1,btemp+11
 42866                           
 42867                           ;stkvar	_grs @ sp[(-13)+4]
 42868  016AAA  50E1               	movf	fsr1l,w,c
 42869  016AAC  0FF7               	addlw	-9
 42870  016AAE  6ED9               	movwf	fsr2l,c
 42871  016AB0  50E2               	movf	fsr1h,w,c
 42872  016AB2  6EDA               	movwf	fsr2h,c
 42873  016AB4  0EFF               	movlw	255
 42874  016AB6  22DA               	addwfc	fsr2h,f,c
 42875  016AB8  5034               	movf	(btemp+10)^0,w,c
 42876  016ABA  26DE               	addwf	postinc2,f,c
 42877  016ABC  5035               	movf	(btemp+11)^0,w,c
 42878  016ABE  22DE               	addwfc	postinc2,f,c
 42879  016AC0  0E00               	movlw	0
 42880  016AC2  22DE               	addwfc	postinc2,f,c
 42881  016AC4  22DE               	addwfc	postinc2,f,c
 42882                           
 42883                           ;stkvar	_b @ sp[(-13)+-4]
 42884  016AC6  0EF0               	movlw	240
 42885  016AC8  24E1               	addwf	fsr1l,w,c
 42886  016ACA  6ED9               	movwf	fsr2l,c
 42887  016ACC  0EFF               	movlw	255
 42888  016ACE  20E2               	addwfc	fsr1h,w,c
 42889  016AD0  6EDA               	movwf	fsr2h,c
 42890  016AD2  50DF               	movf	indf2,w,c
 42891  016AD4  6E35               	movwf	(btemp+11)^0,c
 42892                           
 42893                           ;stkvar	_a @ sp[(-13)+-8]
 42894  016AD6  0EED               	movlw	237
 42895  016AD8  24E1               	addwf	fsr1l,w,c
 42896  016ADA  6ED9               	movwf	fsr2l,c
 42897  016ADC  0EFF               	movlw	255
 42898  016ADE  20E2               	addwfc	fsr1h,w,c
 42899  016AE0  6EDA               	movwf	fsr2h,c
 42900  016AE2  50DF               	movf	indf2,w,c
 42901  016AE4  0235               	mulwf	(btemp+11)^0,c
 42902                           
 42903                           ;stkvar	_temp @ sp[(-13)+8]
 42904  016AE6  0EFB               	movlw	-5
 42905  016AE8  006F FFCF FFE3     	movff	prodl,plusw1
 42906  016AEE  0EFC               	movlw	-4
 42907  016AF0  006F FFD3 FFE3     	movff	prodh,plusw1
 42908                           
 42909                           ;stkvar	_temp @ sp[(-13)+8]
 42910  016AF6  0EFB               	movlw	-5
 42911  016AF8  006F FF8C  F034    	movff	plusw1,btemp+10
 42912  016AFE  0EFC               	movlw	-4
 42913  016B00  006F FF8C  F035    	movff	plusw1,btemp+11
 42914                           
 42915                           ;stkvar	_prod @ sp[(-13)+0]
 42916  016B06  50E1               	movf	fsr1l,w,c
 42917  016B08  0FF3               	addlw	-13
 42918  016B0A  6ED9               	movwf	fsr2l,c
 42919  016B0C  50E2               	movf	fsr1h,w,c
 42920  016B0E  6EDA               	movwf	fsr2h,c
 42921  016B10  0EFF               	movlw	255
 42922  016B12  22DA               	addwfc	fsr2h,f,c
 42923  016B14  5034               	movf	(btemp+10)^0,w,c
 42924  016B16  26DE               	addwf	postinc2,f,c
 42925  016B18  5035               	movf	(btemp+11)^0,w,c
 42926  016B1A  22DE               	addwfc	postinc2,f,c
 42927  016B1C  0E00               	movlw	0
 42928  016B1E  22DE               	addwfc	postinc2,f,c
 42929  016B20  22DE               	addwfc	postinc2,f,c
 42930                           
 42931                           ;stkvar	_b @ sp[(-13)+-4]
 42932  016B22  0EF1               	movlw	241
 42933  016B24  24E1               	addwf	fsr1l,w,c
 42934  016B26  6ED9               	movwf	fsr2l,c
 42935  016B28  0EFF               	movlw	255
 42936  016B2A  20E2               	addwfc	fsr1h,w,c
 42937  016B2C  6EDA               	movwf	fsr2h,c
 42938  016B2E  50DF               	movf	indf2,w,c
 42939  016B30  6E35               	movwf	(btemp+11)^0,c
 42940                           
 42941                           ;stkvar	_a @ sp[(-13)+-8]
 42942  016B32  0EEC               	movlw	236
 42943  016B34  24E1               	addwf	fsr1l,w,c
 42944  016B36  6ED9               	movwf	fsr2l,c
 42945  016B38  0EFF               	movlw	255
 42946  016B3A  20E2               	addwfc	fsr1h,w,c
 42947  016B3C  6EDA               	movwf	fsr2h,c
 42948  016B3E  50DF               	movf	indf2,w,c
 42949  016B40  0235               	mulwf	(btemp+11)^0,c
 42950                           
 42951                           ;stkvar	_temp @ sp[(-13)+8]
 42952  016B42  0EFB               	movlw	-5
 42953  016B44  006F FFCF FFE3     	movff	prodl,plusw1
 42954  016B4A  0EFC               	movlw	-4
 42955  016B4C  006F FFD3 FFE3     	movff	prodh,plusw1
 42956                           
 42957                           ;stkvar	_temp @ sp[(-13)+8]
 42958  016B52  0EFB               	movlw	-5
 42959  016B54  006F FF8C  F034    	movff	plusw1,btemp+10
 42960  016B5A  0EFC               	movlw	-4
 42961  016B5C  006F FF8C  F035    	movff	plusw1,btemp+11
 42962                           
 42963                           ;stkvar	_prod @ sp[(-13)+0]
 42964  016B62  50E1               	movf	fsr1l,w,c
 42965  016B64  0FF3               	addlw	-13
 42966  016B66  6ED9               	movwf	fsr2l,c
 42967  016B68  50E2               	movf	fsr1h,w,c
 42968  016B6A  6EDA               	movwf	fsr2h,c
 42969  016B6C  0EFF               	movlw	255
 42970  016B6E  22DA               	addwfc	fsr2h,f,c
 42971  016B70  5034               	movf	(btemp+10)^0,w,c
 42972  016B72  26DE               	addwf	postinc2,f,c
 42973  016B74  5035               	movf	(btemp+11)^0,w,c
 42974  016B76  22DE               	addwfc	postinc2,f,c
 42975  016B78  0E00               	movlw	0
 42976  016B7A  22DE               	addwfc	postinc2,f,c
 42977  016B7C  22DE               	addwfc	postinc2,f,c
 42978                           
 42979                           ;stkvar	_b @ sp[(-13)+-4]
 42980  016B7E  0EF1               	movlw	241
 42981  016B80  24E1               	addwf	fsr1l,w,c
 42982  016B82  6ED9               	movwf	fsr2l,c
 42983  016B84  0EFF               	movlw	255
 42984  016B86  20E2               	addwfc	fsr1h,w,c
 42985  016B88  6EDA               	movwf	fsr2h,c
 42986  016B8A  50DF               	movf	indf2,w,c
 42987  016B8C  6E35               	movwf	(btemp+11)^0,c
 42988                           
 42989                           ;stkvar	_a @ sp[(-13)+-8]
 42990  016B8E  0EED               	movlw	237
 42991  016B90  24E1               	addwf	fsr1l,w,c
 42992  016B92  6ED9               	movwf	fsr2l,c
 42993  016B94  0EFF               	movlw	255
 42994  016B96  20E2               	addwfc	fsr1h,w,c
 42995  016B98  6EDA               	movwf	fsr2h,c
 42996  016B9A  50DF               	movf	indf2,w,c
 42997  016B9C  0235               	mulwf	(btemp+11)^0,c
 42998                           
 42999                           ;stkvar	_temp @ sp[(-13)+8]
 43000  016B9E  0EFB               	movlw	-5
 43001  016BA0  006F FFCF FFE3     	movff	prodl,plusw1
 43002  016BA6  0EFC               	movlw	-4
 43003  016BA8  006F FFD3 FFE3     	movff	prodh,plusw1
 43004                           
 43005                           ;stkvar	_temp @ sp[(-13)+8]
 43006  016BAE  0EFB               	movlw	-5
 43007  016BB0  006F FF8C  F034    	movff	plusw1,btemp+10
 43008  016BB6  0EFC               	movlw	-4
 43009  016BB8  006F FF8C  F035    	movff	plusw1,btemp+11
 43010  016BBE  5034               	movf	(btemp+10)^0,w,c
 43011  016BC0  6E2E               	movwf	(btemp+4)^0,c
 43012  016BC2  5035               	movf	(btemp+11)^0,w,c
 43013  016BC4  6E2F               	movwf	(btemp+5)^0,c
 43014  016BC6  6A30               	clrf	(btemp+6)^0,c
 43015  016BC8  6A31               	clrf	(btemp+7)^0,c
 43016  016BCA  0060  F0C0  F031   	movff	btemp+6,btemp+7
 43017  016BD0  0060  F0BC  F030   	movff	btemp+5,btemp+6
 43018  016BD6  0060  F0B8  F02F   	movff	btemp+4,btemp+5
 43019  016BDC  6A2E               	clrf	(btemp+4)^0,c
 43020                           
 43021                           ;stkvar	_prod @ sp[(-13)+0]
 43022  016BDE  50E1               	movf	fsr1l,w,c
 43023  016BE0  0FF3               	addlw	-13
 43024  016BE2  6ED9               	movwf	fsr2l,c
 43025  016BE4  50E2               	movf	fsr1h,w,c
 43026  016BE6  6EDA               	movwf	fsr2h,c
 43027  016BE8  0EFF               	movlw	255
 43028  016BEA  22DA               	addwfc	fsr2h,f,c
 43029  016BEC  502E               	movf	(btemp+4)^0,w,c
 43030  016BEE  26DE               	addwf	postinc2,f,c
 43031  016BF0  502F               	movf	(btemp+5)^0,w,c
 43032  016BF2  22DE               	addwfc	postinc2,f,c
 43033  016BF4  5030               	movf	(btemp+6)^0,w,c
 43034  016BF6  22DE               	addwfc	postinc2,f,c
 43035  016BF8  5031               	movf	(btemp+7)^0,w,c
 43036  016BFA  22DE               	addwfc	postinc2,f,c
 43037                           
 43038                           ;stkvar	_prod @ sp[(-13)+0]
 43039  016BFC  50E1               	movf	fsr1l,w,c
 43040  016BFE  0FF3               	addlw	-13
 43041  016C00  6ED9               	movwf	fsr2l,c
 43042  016C02  50E2               	movf	fsr1h,w,c
 43043  016C04  6EDA               	movwf	fsr2h,c
 43044  016C06  0EFF               	movlw	255
 43045  016C08  22DA               	addwfc	fsr2h,f,c
 43046                           
 43047                           ;stkvar	_grs @ sp[(-13)+4]
 43048  016C0A  0EFA               	movlw	250
 43049  016C0C  24E1               	addwf	fsr1l,w,c
 43050  016C0E  6EE9               	movwf	fsr0l,c
 43051  016C10  0EFF               	movlw	255
 43052  016C12  20E2               	addwfc	fsr1h,w,c
 43053  016C14  6EEA               	movwf	fsr0h,c
 43054  016C16  50EF               	movf	indf0,w,c
 43055  016C18  26DE               	addwf	postinc2,f,c
 43056  016C1A  0E00               	movlw	0
 43057  016C1C  22DE               	addwfc	postinc2,f,c
 43058  016C1E  22DE               	addwfc	postinc2,f,c
 43059  016C20  22DE               	addwfc	postinc2,f,c
 43060                           
 43061                           ;stkvar	_grs @ sp[(-13)+4]
 43062  016C22  50E1               	movf	fsr1l,w,c
 43063  016C24  0FF7               	addlw	-9
 43064  016C26  6ED9               	movwf	fsr2l,c
 43065  016C28  50E2               	movf	fsr1h,w,c
 43066  016C2A  6EDA               	movwf	fsr2h,c
 43067  016C2C  0EFF               	movlw	255
 43068  016C2E  22DA               	addwfc	fsr2h,f,c
 43069  016C30  0E08               	movlw	8
 43070  016C32                     u8695:
 43071  016C32  90D8               	bcf	status,0,c
 43072  016C34  36DE               	rlcf	postinc2,f,c
 43073  016C36  36DE               	rlcf	postinc2,f,c
 43074  016C38  36DE               	rlcf	postinc2,f,c
 43075  016C3A  36DD               	rlcf	postdec2,f,c
 43076  016C3C  52DD               	movf	postdec2,f,c
 43077  016C3E  52DD               	movf	postdec2,f,c
 43078  016C40  2EE8               	decfsz	wreg,f,c
 43079  016C42  D7F7               	goto	u8695
 43080  016C44  0E82               	movlw	130
 43081  016C46  6E34               	movwf	(btemp+10)^0,c
 43082  016C48  0EFF               	movlw	255
 43083  016C4A  6E35               	movwf	(btemp+11)^0,c
 43084                           
 43085                           ;stkvar	_bexp @ sp[(-13)+10]
 43086  016C4C  0EFD               	movlw	-3
 43087  016C4E  50E3               	movf	plusw1,w,c
 43088  016C50  6E32               	movwf	(btemp+8)^0,c
 43089  016C52  6A33               	clrf	(btemp+9)^0,c
 43090                           
 43091                           ;stkvar	_aexp @ sp[(-13)+11]
 43092  016C54  0EFE               	movlw	-2
 43093  016C56  50E3               	movf	plusw1,w,c
 43094  016C58  2632               	addwf	(btemp+8)^0,f,c
 43095  016C5A  0E00               	movlw	0
 43096  016C5C  2233               	addwfc	(btemp+9)^0,f,c
 43097  016C5E  5034               	movf	(btemp+10)^0,w,c
 43098  016C60  2632               	addwf	(btemp+8)^0,f,c
 43099  016C62  5035               	movf	(btemp+11)^0,w,c
 43100  016C64  2233               	addwfc	(btemp+9)^0,f,c
 43101                           
 43102                           ;stkvar	_temp @ sp[(-13)+8]
 43103  016C66  0EFB               	movlw	-5
 43104  016C68  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 43105  016C6E  0EFC               	movlw	-4
 43106  016C70  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 43107  016C76  D021               	goto	l10582
 43108  016C78                     l10572:
 43109                           
 43110                           ;stkvar	_prod @ sp[(-13)+0]
 43111  016C78  90D8               	bcf	status,0,c
 43112  016C7A  0EF3               	movlw	-13
 43113  016C7C  36E3               	rlcf	plusw1,f,c
 43114  016C7E  0EF4               	movlw	-12
 43115  016C80  36E3               	rlcf	plusw1,f,c
 43116  016C82  0EF5               	movlw	-11
 43117  016C84  36E3               	rlcf	plusw1,f,c
 43118  016C86  0EF6               	movlw	-10
 43119  016C88  36E3               	rlcf	plusw1,f,c
 43120                           
 43121                           ;stkvar	_grs @ sp[(-13)+4]
 43122  016C8A  0EFA               	movlw	-6
 43123  016C8C  AEE3               	btfss	plusw1,7,c
 43124  016C8E  D002               	goto	l10578
 43125                           
 43126                           ;stkvar	_prod @ sp[(-13)+0]
 43127  016C90  0EF3               	movlw	-13
 43128  016C92  80E3               	bsf	plusw1,0,c
 43129  016C94                     l10578:
 43130                           
 43131                           ;stkvar	_grs @ sp[(-13)+4]
 43132  016C94  90D8               	bcf	status,0,c
 43133  016C96  0EF7               	movlw	-9
 43134  016C98  36E3               	rlcf	plusw1,f,c
 43135  016C9A  0EF8               	movlw	-8
 43136  016C9C  36E3               	rlcf	plusw1,f,c
 43137  016C9E  0EF9               	movlw	-7
 43138  016CA0  36E3               	rlcf	plusw1,f,c
 43139  016CA2  0EFA               	movlw	-6
 43140  016CA4  36E3               	rlcf	plusw1,f,c
 43141                           
 43142                           ;stkvar	_temp @ sp[(-13)+8]
 43143  016CA6  50E1               	movf	fsr1l,w,c
 43144  016CA8  0FFB               	addlw	-5
 43145  016CAA  6ED9               	movwf	fsr2l,c
 43146  016CAC  50E2               	movf	fsr1h,w,c
 43147  016CAE  6EDA               	movwf	fsr2h,c
 43148  016CB0  0EFF               	movlw	255
 43149  016CB2  22DA               	addwfc	fsr2h,f,c
 43150  016CB4  06DE               	decf	postinc2,f,c
 43151  016CB6  0E00               	movlw	0
 43152  016CB8  5ADD               	subwfb	postdec2,f,c
 43153  016CBA                     l10582:
 43154                           
 43155                           ;stkvar	_prod @ sp[(-13)+0]
 43156  016CBA  0EF5               	movlw	-11
 43157  016CBC  AEE3               	btfss	plusw1,7,c
 43158  016CBE  D7DC               	goto	l10572
 43159                           
 43160                           ;stkvar	_aexp @ sp[(-13)+11]
 43161  016CC0  0EFE               	movlw	-2
 43162  016CC2  6AE3               	clrf	plusw1,c
 43163                           
 43164                           ;stkvar	_grs @ sp[(-13)+4]
 43165  016CC4  0EFA               	movlw	-6
 43166  016CC6  AEE3               	btfss	plusw1,7,c
 43167  016CC8  D020               	goto	l10596
 43168                           
 43169                           ;stkvar	_grs @ sp[(-13)+4]
 43170  016CCA  50E1               	movf	fsr1l,w,c
 43171  016CCC  0FF7               	addlw	-9
 43172  016CCE  6ED9               	movwf	fsr2l,c
 43173  016CD0  50E2               	movf	fsr1h,w,c
 43174  016CD2  6EDA               	movwf	fsr2h,c
 43175  016CD4  0EFF               	movlw	255
 43176  016CD6  22DA               	addwfc	fsr2h,f,c
 43177  016CD8  0EFF               	movlw	255
 43178  016CDA  14DE               	andwf	postinc2,w,c
 43179  016CDC  6E32               	movwf	(btemp+8)^0,c
 43180  016CDE  0EFF               	movlw	255
 43181  016CE0  14DE               	andwf	postinc2,w,c
 43182  016CE2  6E33               	movwf	(btemp+9)^0,c
 43183  016CE4  0EFF               	movlw	255
 43184  016CE6  14DE               	andwf	postinc2,w,c
 43185  016CE8  6E34               	movwf	(btemp+10)^0,c
 43186  016CEA  0E7F               	movlw	127
 43187  016CEC  14DE               	andwf	postinc2,w,c
 43188  016CEE  6E35               	movwf	(btemp+11)^0,c
 43189  016CF0  5032               	movf	(btemp+8)^0,w,c
 43190  016CF2  1033               	iorwf	(btemp+9)^0,w,c
 43191  016CF4  1034               	iorwf	(btemp+10)^0,w,c
 43192  016CF6  1035               	iorwf	(btemp+11)^0,w,c
 43193  016CF8  B4D8               	btfsc	status,2,c
 43194  016CFA  D004               	goto	l10592
 43195  016CFC                     u8730:
 43196                           
 43197                           ;stkvar	_aexp @ sp[(-13)+11]
 43198  016CFC  0EFE               	movlw	-2
 43199  016CFE  6AE3               	clrf	plusw1,c
 43200  016D00  2AE3               	incf	plusw1,f,c
 43201  016D02  D003               	goto	l10596
 43202  016D04                     l10592:
 43203                           
 43204                           ;stkvar	_prod @ sp[(-13)+0]
 43205  016D04  0EF3               	movlw	-13
 43206  016D06  B0E3               	btfsc	plusw1,0,c
 43207  016D08  D7F9               	goto	u8730
 43208  016D0A                     l10596:
 43209                           
 43210                           ;stkvar	_aexp @ sp[(-13)+11]
 43211  016D0A  0EFE               	movlw	-2
 43212  016D0C  50E3               	movf	plusw1,w,c
 43213  016D0E  B4D8               	btfsc	status,2,c
 43214  016D10  D036               	goto	l10606
 43215                           
 43216                           ;stkvar	_prod @ sp[(-13)+0]
 43217  016D12  50E1               	movf	fsr1l,w,c
 43218  016D14  0FF3               	addlw	-13
 43219  016D16  6ED9               	movwf	fsr2l,c
 43220  016D18  50E2               	movf	fsr1h,w,c
 43221  016D1A  6EDA               	movwf	fsr2h,c
 43222  016D1C  0EFF               	movlw	255
 43223  016D1E  22DA               	addwfc	fsr2h,f,c
 43224  016D20  2ADE               	incf	postinc2,f,c
 43225  016D22  0E00               	movlw	0
 43226  016D24  22DE               	addwfc	postinc2,f,c
 43227  016D26  22DE               	addwfc	postinc2,f,c
 43228  016D28  22DE               	addwfc	postinc2,f,c
 43229                           
 43230                           ;stkvar	_prod @ sp[(-13)+0]
 43231  016D2A  0EF6               	movlw	-10
 43232  016D2C  A0E3               	btfss	plusw1,0,c
 43233  016D2E  D027               	goto	l10606
 43234  016D30  0E01               	movlw	1
 43235  016D32  6E35               	movwf	(btemp+11)^0,c
 43236                           
 43237                           ;stkvar	_prod @ sp[(-13)+0]
 43238  016D34  50E1               	movf	fsr1l,w,c
 43239  016D36  0FF3               	addlw	-13
 43240  016D38  6ED9               	movwf	fsr2l,c
 43241  016D3A  50E2               	movf	fsr1h,w,c
 43242  016D3C  6EDA               	movwf	fsr2h,c
 43243  016D3E  0EFF               	movlw	255
 43244  016D40  22DA               	addwfc	fsr2h,f,c
 43245  016D42  2835               	incf	(btemp+11)^0,w,c
 43246  016D44  52DE               	movf	postinc2,f,c
 43247  016D46  D008               	goto	u8770
 43248  016D48                     u8775:
 43249  016D48  52DE               	movf	postinc2,f,c
 43250  016D4A  90D8               	bcf	status,0,c
 43251  016D4C  BEDC               	btfsc	preinc2,7,c
 43252  016D4E  80D8               	bsf	status,0,c
 43253  016D50  32DD               	rrcf	postdec2,f,c
 43254  016D52  32DD               	rrcf	postdec2,f,c
 43255  016D54  32DD               	rrcf	postdec2,f,c
 43256  016D56  32DE               	rrcf	postinc2,f,c
 43257  016D58                     u8770:
 43258  016D58  2EE8               	decfsz	wreg,f,c
 43259  016D5A  D7F6               	goto	u8775
 43260                           
 43261                           ;stkvar	_temp @ sp[(-13)+8]
 43262  016D5C  0EFB               	movlw	-5
 43263  016D5E  50E3               	movf	plusw1,w,c
 43264  016D60  0F01               	addlw	1
 43265  016D62  6E2A               	movwf	btemp^0,c
 43266  016D64  0EFB               	movlw	-5
 43267  016D66  0060  F0AB  FFE3   	movff	btemp,plusw1
 43268  016D6C  6A2A               	clrf	btemp^0,c
 43269  016D6E  0EFC               	movlw	-4
 43270  016D70  50E3               	movf	plusw1,w,c
 43271  016D72  202A               	addwfc	btemp^0,w,c
 43272  016D74  6E2A               	movwf	btemp^0,c
 43273  016D76  0EFC               	movlw	-4
 43274  016D78  0060  F0AB  FFE3   	movff	btemp,plusw1
 43275  016D7E                     l10606:
 43276                           
 43277                           ;stkvar	_temp @ sp[(-13)+8]
 43278  016D7E  0EFC               	movlw	-4
 43279  016D80  BEE3               	btfsc	plusw1,7,c
 43280  016D82  D020               	goto	l10610
 43281  016D84  0EFC               	movlw	-4
 43282  016D86  50E3               	movf	plusw1,w,c
 43283  016D88  E104               	bnz	u8780
 43284  016D8A  0EFB               	movlw	-5
 43285  016D8C  28E3               	incf	plusw1,w,c
 43286  016D8E  A0D8               	btfss	status,0,c
 43287  016D90  D019               	goto	l10610
 43288  016D92                     u8780:
 43289  016D92  0E00               	movlw	0
 43290  016D94  6E32               	movwf	(btemp+8)^0,c
 43291  016D96  0E00               	movlw	0
 43292  016D98  6E33               	movwf	(btemp+9)^0,c
 43293  016D9A  0E80               	movlw	128
 43294  016D9C  6E34               	movwf	(btemp+10)^0,c
 43295  016D9E  0E7F               	movlw	127
 43296  016DA0  6E35               	movwf	(btemp+11)^0,c
 43297                           
 43298                           ;stkvar	_prod @ sp[(-13)+0]
 43299  016DA2  0EF3               	movlw	-13
 43300  016DA4  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 43301  016DAA  0EF4               	movlw	-12
 43302  016DAC  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 43303  016DB2  0EF5               	movlw	-11
 43304  016DB4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 43305  016DBA  0EF6               	movlw	-10
 43306  016DBC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 43307  016DC2  D044               	goto	l10626
 43308  016DC4                     l10610:
 43309                           
 43310                           ;stkvar	_temp @ sp[(-13)+8]
 43311  016DC4  0EFC               	movlw	-4
 43312  016DC6  BEE3               	btfsc	plusw1,7,c
 43313  016DC8  D007               	goto	u8790
 43314  016DCA  0EFC               	movlw	-4
 43315  016DCC  50E3               	movf	plusw1,w,c
 43316  016DCE  E10F               	bnz	l10616
 43317  016DD0  0EFB               	movlw	-5
 43318  016DD2  04E3               	decf	plusw1,w,c
 43319  016DD4  B0D8               	btfsc	status,0,c
 43320  016DD6  D00B               	goto	l10616
 43321  016DD8                     u8790:
 43322                           
 43323                           ;stkvar	_prod @ sp[(-13)+0]
 43324  016DD8  0EF3               	movlw	-13
 43325  016DDA  6AE3               	clrf	plusw1,c
 43326  016DDC  0EF4               	movlw	-12
 43327  016DDE  6AE3               	clrf	plusw1,c
 43328  016DE0  0EF5               	movlw	-11
 43329  016DE2  6AE3               	clrf	plusw1,c
 43330  016DE4  0EF6               	movlw	-10
 43331  016DE6  6AE3               	clrf	plusw1,c
 43332                           
 43333                           ;stkvar	_sign @ sp[(-13)+12]
 43334  016DE8  0EFF               	movlw	-1
 43335  016DEA  6AE3               	clrf	plusw1,c
 43336  016DEC  D02F               	goto	l10626
 43337  016DEE                     l10616:
 43338                           
 43339                           ;stkvar	_temp @ sp[(-13)+8]
 43340                           ;stkvar	_bexp @ sp[(-13)+10]
 43341  016DEE  0EFB               	movlw	-5
 43342  016DF0  006F FF8C  F02A    	movff	plusw1,btemp
 43343  016DF6  0EFD               	movlw	-3
 43344  016DF8  0060  F0AB  FFE3   	movff	btemp,plusw1
 43345                           
 43346                           ;stkvar	_prod @ sp[(-13)+0]
 43347  016DFE  50E1               	movf	fsr1l,w,c
 43348  016E00  0FF3               	addlw	-13
 43349  016E02  6ED9               	movwf	fsr2l,c
 43350  016E04  50E2               	movf	fsr1h,w,c
 43351  016E06  6EDA               	movwf	fsr2h,c
 43352  016E08  0EFF               	movlw	255
 43353  016E0A  22DA               	addwfc	fsr2h,f,c
 43354  016E0C  0EFF               	movlw	255
 43355  016E0E  16DE               	andwf	postinc2,f,c
 43356  016E10  0EFF               	movlw	255
 43357  016E12  16DE               	andwf	postinc2,f,c
 43358  016E14  0E7F               	movlw	127
 43359  016E16  16DE               	andwf	postinc2,f,c
 43360  016E18  0E00               	movlw	0
 43361  016E1A  16DE               	andwf	postinc2,f,c
 43362                           
 43363                           ;stkvar	_bexp @ sp[(-13)+10]
 43364  016E1C  0EFD               	movlw	-3
 43365  016E1E  A0E3               	btfss	plusw1,0,c
 43366  016E20  D008               	goto	l10624
 43367                           
 43368                           ;stkvar	_prod @ sp[(-13)+0]
 43369  016E22  0EF5               	movlw	245
 43370  016E24  24E1               	addwf	fsr1l,w,c
 43371  016E26  6ED9               	movwf	fsr2l,c
 43372  016E28  0EFF               	movlw	255
 43373  016E2A  20E2               	addwfc	fsr1h,w,c
 43374  016E2C  6EDA               	movwf	fsr2h,c
 43375  016E2E  0E00               	movlw	0
 43376  016E30  8EDB               	bsf	plusw2,7,c
 43377  016E32                     l10624:
 43378                           
 43379                           ;stkvar	_prod @ sp[(-13)+0]
 43380  016E32  0EF6               	movlw	246
 43381  016E34  24E1               	addwf	fsr1l,w,c
 43382  016E36  6ED9               	movwf	fsr2l,c
 43383  016E38  0EFF               	movlw	255
 43384  016E3A  20E2               	addwfc	fsr1h,w,c
 43385  016E3C  6EDA               	movwf	fsr2h,c
 43386                           
 43387                           ;stkvar	_bexp @ sp[(-13)+10]
 43388  016E3E  0EFD               	movlw	-3
 43389  016E40  006F FF8C  F035    	movff	plusw1,btemp+11
 43390  016E46  90D8               	bcf	status,0,c
 43391  016E48  3035               	rrcf	(btemp+11)^0,w,c
 43392  016E4A  6EDF               	movwf	indf2,c
 43393  016E4C                     l10626:
 43394                           
 43395                           ;stkvar	_sign @ sp[(-13)+12]
 43396  016E4C  0EFF               	movlw	-1
 43397  016E4E  006F FF8C  F035    	movff	plusw1,btemp+11
 43398                           
 43399                           ;stkvar	_prod @ sp[(-13)+0]
 43400  016E54  0EF6               	movlw	246
 43401  016E56  24E1               	addwf	fsr1l,w,c
 43402  016E58  6ED9               	movwf	fsr2l,c
 43403  016E5A  0EFF               	movlw	255
 43404  016E5C  20E2               	addwfc	fsr1h,w,c
 43405  016E5E  6EDA               	movwf	fsr2h,c
 43406  016E60  5035               	movf	(btemp+11)^0,w,c
 43407  016E62  12DF               	iorwf	indf2,f,c
 43408                           
 43409                           ;stkvar	_prod @ sp[(-13)+0]
 43410  016E64  0EF3               	movlw	-13
 43411  016E66  006F FF8C  F02A    	movff	plusw1,btemp
 43412  016E6C  0EF4               	movlw	-12
 43413  016E6E  006F FF8C  F02B    	movff	plusw1,btemp+1
 43414  016E74  0EF5               	movlw	-11
 43415  016E76  006F FF8C  F02C    	movff	plusw1,btemp+2
 43416  016E7C  0EF6               	movlw	-10
 43417  016E7E  006F FF8C  F02D    	movff	plusw1,btemp+3
 43418  016E84                     l3346:
 43419                           
 43420                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 43421  016E84  0EEB               	movlw	235
 43422  016E86  26E1               	addwf	fsr1l,f,c
 43423  016E88  0EFF               	movlw	255
 43424  016E8A  22E2               	addwfc	fsr1h,f,c
 43425  016E8C  0012               	return		;funcret
 43426  016E8E                     __end_of___flmul:
 43427                           	opt callstack 0
 43428                           
 43429 ;; *************** function _SYSTEM_Initialize *****************
 43430 ;; Defined at:
 43431 ;;		line 50 in file "mcc_generated_files/mcc.c"
 43432 ;; Parameters:    Size  Location     Type
 43433 ;;		None
 43434 ;; Auto vars:     Size  Location     Type
 43435 ;;		None
 43436 ;; Return value:  Size  Location     Type
 43437 ;;                  1  [STACK] void 
 43438 ;; Registers used:
 43439 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 43440 ;; Tracked objects:
 43441 ;;		On entry : 0/0
 43442 ;;		On exit  : 3F/3C
 43443 ;;		Unchanged: 0/0
 43444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43449 ;;Total ram usage:        0 bytes
 43450 ;; Hardware stack levels used:    1
 43451 ;; Hardware stack levels required when called:   17
 43452 ;; This function calls:
 43453 ;;		_ADCC_Initialize
 43454 ;;		_CLKREF_Initialize
 43455 ;;		_CRC_Initialize
 43456 ;;		_DMA1_Initialize
 43457 ;;		_DMA2_Initialize
 43458 ;;		_EXT_INT_Initialize
 43459 ;;		_FVR_Initialize
 43460 ;;		_INTERRUPT_Initialize
 43461 ;;		_OSCILLATOR_Initialize
 43462 ;;		_PIN_MANAGER_Initialize
 43463 ;;		_PMD_Initialize
 43464 ;;		_PWM8_Initialize
 43465 ;;		_SPI1_Initialize
 43466 ;;		_TMR2_Initialize
 43467 ;;		_TMR3_Initialize
 43468 ;;		_TMR5_Initialize
 43469 ;;		_TMR6_Initialize
 43470 ;;		_UART1_Initialize
 43471 ;;		_UART2_Initialize
 43472 ;; This function is called by:
 43473 ;;		_main
 43474 ;; This function uses a reentrant model
 43475 ;;
 43476                           
 43477                           	psect	text155
 43478  001C0C                     __ptext155:
 43479                           	opt callstack 0
 43480  001C0C                     _SYSTEM_Initialize:
 43481                           	opt callstack 13
 43482                           
 43483                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 43484                           
 43485                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43486                           ;incstack = 0
 43487  001C0C  ECAA  F00B         	call	_INTERRUPT_Initialize	;wreg free
 43488                           
 43489                           ; BSR set to: 57
 43490                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 43491  001C10  ECCD  F014         	call	_PMD_Initialize	;wreg free
 43492                           
 43493                           ; BSR set to: 57
 43494                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 43495  001C14  ECD9  F007         	call	_PIN_MANAGER_Initialize	;wreg free
 43496                           
 43497                           ; BSR set to: 58
 43498                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 43499  001C18  ECC2  F014         	call	_OSCILLATOR_Initialize	;wreg free
 43500                           
 43501                           ; BSR set to: 57
 43502                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 43503  001C1C  EC69  F015         	call	_FVR_Initialize	;wreg free
 43504                           
 43505                           ; BSR set to: 62
 43506                           ;mcc_generated_files/mcc.c: 57:     CRC_Initialize();
 43507  001C20  EC22  F008         	call	_CRC_Initialize	;wreg free
 43508                           
 43509                           ; BSR set to: 0
 43510                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 43511  001C24  ECD9  F00A         	call	_ADCC_Initialize	;wreg free
 43512                           
 43513                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 43514  001C28  EC95  F014         	call	_TMR2_Initialize	;wreg free
 43515                           
 43516                           ; BSR set to: 57
 43517                           ;mcc_generated_files/mcc.c: 60:     PWM8_Initialize();
 43518  001C2C  ECB7  F014         	call	_PWM8_Initialize	;wreg free
 43519                           
 43520                           ; BSR set to: 63
 43521                           ;mcc_generated_files/mcc.c: 61:     EXT_INT_Initialize();
 43522  001C30  EC46  F011         	call	_EXT_INT_Initialize	;wreg free
 43523                           
 43524                           ; BSR set to: 57
 43525                           ;mcc_generated_files/mcc.c: 62:     TMR6_Initialize();
 43526  001C34  EC32  F012         	call	_TMR6_Initialize	;wreg free
 43527                           
 43528                           ;mcc_generated_files/mcc.c: 63:     TMR3_Initialize();
 43529  001C38  ECC0  F00E         	call	_TMR3_Initialize	;wreg free
 43530                           
 43531                           ;mcc_generated_files/mcc.c: 64:     TMR5_Initialize();
 43532  001C3C  EC9C  F00E         	call	_TMR5_Initialize	;wreg free
 43533                           
 43534                           ;mcc_generated_files/mcc.c: 65:     UART1_Initialize();
 43535  001C40  EC78  F00E         	call	_UART1_Initialize	;wreg free
 43536                           
 43537                           ; BSR set to: 57
 43538                           ;mcc_generated_files/mcc.c: 66:     UART2_Initialize();
 43539  001C44  ECA3  F00C         	call	_UART2_Initialize	;wreg free
 43540                           
 43541                           ; BSR set to: 57
 43542                           ;mcc_generated_files/mcc.c: 67:     SPI1_Initialize();
 43543  001C48  ECAC  F014         	call	_SPI1_Initialize	;wreg free
 43544                           
 43545                           ; BSR set to: 61
 43546                           ;mcc_generated_files/mcc.c: 68:     DMA2_Initialize();
 43547  001C4C  EC5C  F00D         	call	_DMA2_Initialize	;wreg free
 43548                           
 43549                           ; BSR set to: 59
 43550                           ;mcc_generated_files/mcc.c: 69:     DMA1_Initialize();
 43551  001C50  ECA4  F00A         	call	_DMA1_Initialize	;wreg free
 43552                           
 43553                           ; BSR set to: 59
 43554                           ;mcc_generated_files/mcc.c: 70:     CLKREF_Initialize();
 43555  001C54  EC3D  F015         	call	_CLKREF_Initialize	;wreg free
 43556                           
 43557                           ; BSR set to: 60
 43558                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 43559  001C58  0012               	return		;funcret
 43560  001C5A                     __end_of_SYSTEM_Initialize:
 43561                           	opt callstack 0
 43562                           
 43563 ;; *************** function _UART2_Initialize *****************
 43564 ;; Defined at:
 43565 ;;		line 78 in file "mcc_generated_files/uart2.c"
 43566 ;; Parameters:    Size  Location     Type
 43567 ;;		None
 43568 ;; Auto vars:     Size  Location     Type
 43569 ;;		None
 43570 ;; Return value:  Size  Location     Type
 43571 ;;                  1  [STACK] void 
 43572 ;; Registers used:
 43573 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 43574 ;; Tracked objects:
 43575 ;;		On entry : 3F/39
 43576 ;;		On exit  : 3F/39
 43577 ;;		Unchanged: 0/0
 43578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43583 ;;Total ram usage:        0 bytes
 43584 ;; Hardware stack levels used:    1
 43585 ;; Hardware stack levels required when called:   16
 43586 ;; This function calls:
 43587 ;;		_UART2_SetRxInterruptHandler
 43588 ;;		_UART2_SetTxInterruptHandler
 43589 ;; This function is called by:
 43590 ;;		_SYSTEM_Initialize
 43591 ;; This function uses a reentrant model
 43592 ;;
 43593                           
 43594                           	psect	text156
 43595  001946                     __ptext156:
 43596                           	opt callstack 0
 43597  001946                     _UART2_Initialize:
 43598                           	opt callstack 13
 43599                           
 43600                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 43601                           
 43602                           ; BSR set to: 60
 43603                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43604                           ;incstack = 0
 43605  001946  0139               	movlb	57	; () banked
 43606  001948  9596               	bcf	150,2,b	;volatile
 43607                           
 43608                           ; BSR set to: 57
 43609                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 43610  00194A  0E46               	movlw	low _UART2_Receive_ISR
 43611  00194C  6EE6               	movwf	postinc1,c
 43612  00194E  0E28               	movlw	high _UART2_Receive_ISR
 43613  001950  6EE6               	movwf	postinc1,c
 43614  001952  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
 43615  001954  6EE6               	movwf	postinc1,c
 43616  001956  EC83  F012         	call	_UART2_SetRxInterruptHandler	;wreg free
 43617                           
 43618                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 43619  00195A  0139               	movlb	57	; () banked
 43620  00195C  9796               	bcf	150,3,b	;volatile
 43621                           
 43622                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 43623  00195E  0E38               	movlw	low _UART2_Transmit_ISR
 43624  001960  6EE6               	movwf	postinc1,c
 43625  001962  0E24               	movlw	high _UART2_Transmit_ISR
 43626  001964  6EE6               	movwf	postinc1,c
 43627  001966  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 43628  001968  6EE6               	movwf	postinc1,c
 43629  00196A  EC6F  F012         	call	_UART2_SetTxInterruptHandler	;wreg free
 43630                           
 43631                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 43632  00196E  013D               	movlb	61	; () banked
 43633  001970  6BD4               	clrf	212,b	;volatile
 43634                           
 43635                           ; BSR set to: 61
 43636                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 43637  001972  6BD6               	clrf	214,b	;volatile
 43638                           
 43639                           ; BSR set to: 61
 43640                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 43641  001974  6BD8               	clrf	216,b	;volatile
 43642                           
 43643                           ; BSR set to: 61
 43644                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 43645  001976  0EB0               	movlw	176
 43646  001978  6FDA               	movwf	218,b	;volatile
 43647                           
 43648                           ; BSR set to: 61
 43649                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 43650  00197A  0E80               	movlw	128
 43651  00197C  6FDB               	movwf	219,b	;volatile
 43652                           
 43653                           ; BSR set to: 61
 43654                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 43655  00197E  6BDC               	clrf	220,b	;volatile
 43656                           
 43657                           ; BSR set to: 61
 43658                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 43659  001980  0E82               	movlw	130
 43660  001982  6FDD               	movwf	221,b	;volatile
 43661                           
 43662                           ; BSR set to: 61
 43663                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 43664  001984  0E06               	movlw	6
 43665  001986  6FDE               	movwf	222,b	;volatile
 43666                           
 43667                           ; BSR set to: 61
 43668                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 43669  001988  6BDF               	clrf	223,b	;volatile
 43670                           
 43671                           ; BSR set to: 61
 43672                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 43673  00198A  6BE0               	clrf	224,b	;volatile
 43674                           
 43675                           ; BSR set to: 61
 43676                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 43677  00198C  6BE1               	clrf	225,b	;volatile
 43678                           
 43679                           ; BSR set to: 61
 43680                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 43681  00198E  6BE2               	clrf	226,b	;volatile
 43682                           
 43683                           ; BSR set to: 61
 43684                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 43685  001990  0100               	movlb	0	; () banked
 43686  001992  6BCF               	clrf	_uart2TxHead& (0+255),b	;volatile
 43687                           
 43688                           ; BSR set to: 0
 43689                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 43690  001994  6A56               	clrf	_uart2TxTail^0,c	;volatile
 43691                           
 43692                           ; BSR set to: 0
 43693                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 43694  001996  0E40               	movlw	64
 43695  001998  6E55               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 43696                           
 43697                           ; BSR set to: 0
 43698                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 43699  00199A  6A54               	clrf	_uart2RxHead^0,c	;volatile
 43700                           
 43701                           ; BSR set to: 0
 43702                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 43703  00199C  6BCE               	clrf	_uart2RxTail& (0+255),b	;volatile
 43704                           
 43705                           ; BSR set to: 0
 43706                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 43707  00199E  6BCD               	clrf	_uart2RxCount& (0+255),b	;volatile
 43708                           
 43709                           ; BSR set to: 0
 43710                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 43711  0019A0  0139               	movlb	57	; () banked
 43712  0019A2  8596               	bsf	150,2,b	;volatile
 43713                           
 43714                           ; BSR set to: 57
 43715                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 43716  0019A4  0012               	return		;funcret
 43717  0019A6                     __end_of_UART2_Initialize:
 43718                           	opt callstack 0
 43719                           
 43720 ;; *************** function _UART2_SetTxInterruptHandler *****************
 43721 ;; Defined at:
 43722 ;;		line 252 in file "mcc_generated_files/uart2.c"
 43723 ;; Parameters:    Size  Location     Type
 43724 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 43725 ;;		 -> UART2_Transmit_ISR(1), 
 43726 ;; Auto vars:     Size  Location     Type
 43727 ;;		None
 43728 ;; Return value:  Size  Location     Type
 43729 ;;                  1  [STACK] void 
 43730 ;; Registers used:
 43731 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 43732 ;; Tracked objects:
 43733 ;;		On entry : 3F/39
 43734 ;;		On exit  : 0/0
 43735 ;;		Unchanged: 0/0
 43736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43741 ;;Total ram usage:        0 bytes
 43742 ;; Hardware stack levels used:    1
 43743 ;; Hardware stack levels required when called:   15
 43744 ;; This function calls:
 43745 ;;		Nothing
 43746 ;; This function is called by:
 43747 ;;		_UART2_Initialize
 43748 ;; This function uses a reentrant model
 43749 ;;
 43750                           
 43751                           	psect	text157
 43752  0024DE                     __ptext157:
 43753                           	opt callstack 0
 43754  0024DE                     _UART2_SetTxInterruptHandler:
 43755                           	opt callstack 13
 43756                           
 43757                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 43758                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 43759                           
 43760                           ; BSR set to: 57
 43761                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43762                           ;incstack = 0
 43763  0024DE  50E1               	movf	fsr1l,w,c
 43764  0024E0  0FFD               	addlw	-3
 43765  0024E2  6ED9               	movwf	fsr2l,c
 43766  0024E4  50E2               	movf	fsr1h,w,c
 43767  0024E6  6EDA               	movwf	fsr2h,c
 43768  0024E8  0EFF               	movlw	255
 43769  0024EA  22DA               	addwfc	fsr2h,f,c
 43770  0024EC  006F FF78  F0AA    	movff	postinc2,_UART2_TxInterruptHandler
 43771  0024F2  006F FF78  F0AB    	movff	postinc2,_UART2_TxInterruptHandler+1
 43772  0024F8  006F FF74  F0AC    	movff	postdec2,_UART2_TxInterruptHandler+2
 43773                           
 43774                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 43775  0024FE  52E5               	movf	postdec1,f,c
 43776  002500  52E5               	movf	postdec1,f,c
 43777  002502  52E5               	movf	postdec1,f,c
 43778  002504  0012               	return		;funcret
 43779  002506                     __end_of_UART2_SetTxInterruptHandler:
 43780                           	opt callstack 0
 43781                           
 43782 ;; *************** function _UART2_SetRxInterruptHandler *****************
 43783 ;; Defined at:
 43784 ;;		line 248 in file "mcc_generated_files/uart2.c"
 43785 ;; Parameters:    Size  Location     Type
 43786 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 43787 ;;		 -> UART2_Receive_ISR(1), 
 43788 ;; Auto vars:     Size  Location     Type
 43789 ;;		None
 43790 ;; Return value:  Size  Location     Type
 43791 ;;                  1  [STACK] void 
 43792 ;; Registers used:
 43793 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 43794 ;; Tracked objects:
 43795 ;;		On entry : 3F/39
 43796 ;;		On exit  : 0/0
 43797 ;;		Unchanged: 0/0
 43798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43803 ;;Total ram usage:        0 bytes
 43804 ;; Hardware stack levels used:    1
 43805 ;; Hardware stack levels required when called:   15
 43806 ;; This function calls:
 43807 ;;		Nothing
 43808 ;; This function is called by:
 43809 ;;		_UART2_Initialize
 43810 ;; This function uses a reentrant model
 43811 ;;
 43812                           
 43813                           	psect	text158
 43814  002506                     __ptext158:
 43815                           	opt callstack 0
 43816  002506                     _UART2_SetRxInterruptHandler:
 43817                           	opt callstack 13
 43818                           
 43819                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 43820                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 43821                           
 43822                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43823                           ;incstack = 0
 43824  002506  50E1               	movf	fsr1l,w,c
 43825  002508  0FFD               	addlw	-3
 43826  00250A  6ED9               	movwf	fsr2l,c
 43827  00250C  50E2               	movf	fsr1h,w,c
 43828  00250E  6EDA               	movwf	fsr2h,c
 43829  002510  0EFF               	movlw	255
 43830  002512  22DA               	addwfc	fsr2h,f,c
 43831  002514  006F FF78  F0AD    	movff	postinc2,_UART2_RxInterruptHandler
 43832  00251A  006F FF78  F0AE    	movff	postinc2,_UART2_RxInterruptHandler+1
 43833  002520  006F FF74  F0AF    	movff	postdec2,_UART2_RxInterruptHandler+2
 43834                           
 43835                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 43836  002526  52E5               	movf	postdec1,f,c
 43837  002528  52E5               	movf	postdec1,f,c
 43838  00252A  52E5               	movf	postdec1,f,c
 43839  00252C  0012               	return		;funcret
 43840  00252E                     __end_of_UART2_SetRxInterruptHandler:
 43841                           	opt callstack 0
 43842                           
 43843 ;; *************** function _UART1_Initialize *****************
 43844 ;; Defined at:
 43845 ;;		line 75 in file "mcc_generated_files/uart1.c"
 43846 ;; Parameters:    Size  Location     Type
 43847 ;;		None
 43848 ;; Auto vars:     Size  Location     Type
 43849 ;;		None
 43850 ;; Return value:  Size  Location     Type
 43851 ;;                  1  [STACK] void 
 43852 ;; Registers used:
 43853 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 43854 ;; Tracked objects:
 43855 ;;		On entry : 0/39
 43856 ;;		On exit  : 3F/39
 43857 ;;		Unchanged: 0/0
 43858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43863 ;;Total ram usage:        0 bytes
 43864 ;; Hardware stack levels used:    1
 43865 ;; Hardware stack levels required when called:   16
 43866 ;; This function calls:
 43867 ;;		_UART1_SetRxInterruptHandler
 43868 ;; This function is called by:
 43869 ;;		_SYSTEM_Initialize
 43870 ;; This function uses a reentrant model
 43871 ;;
 43872                           
 43873                           	psect	text159
 43874  001CF0                     __ptext159:
 43875                           	opt callstack 0
 43876  001CF0                     _UART1_Initialize:
 43877                           	opt callstack 13
 43878                           
 43879                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 43880                           
 43881                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43882                           ;incstack = 0
 43883  001CF0  0139               	movlb	57	; () banked
 43884  001CF2  9793               	bcf	147,3,b	;volatile
 43885                           
 43886                           ; BSR set to: 57
 43887                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 43888  001CF4  0E04               	movlw	low _UART1_Receive_ISR
 43889  001CF6  6EE6               	movwf	postinc1,c
 43890  001CF8  0E28               	movlw	high _UART1_Receive_ISR
 43891  001CFA  6EE6               	movwf	postinc1,c
 43892  001CFC  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 43893  001CFE  6EE6               	movwf	postinc1,c
 43894  001D00  EC97  F012         	call	_UART1_SetRxInterruptHandler	;wreg free
 43895                           
 43896                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 43897  001D04  013D               	movlb	61	; () banked
 43898  001D06  6BEC               	clrf	236,b	;volatile
 43899                           
 43900                           ; BSR set to: 61
 43901                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 43902  001D08  6BED               	clrf	237,b	;volatile
 43903                           
 43904                           ; BSR set to: 61
 43905                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 43906  001D0A  6BEE               	clrf	238,b	;volatile
 43907                           
 43908                           ; BSR set to: 61
 43909                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 43910  001D0C  6BEF               	clrf	239,b	;volatile
 43911                           
 43912                           ; BSR set to: 61
 43913                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 43914  001D0E  6BF0               	clrf	240,b	;volatile
 43915                           
 43916                           ; BSR set to: 61
 43917                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 43918  001D10  6BF1               	clrf	241,b	;volatile
 43919                           
 43920                           ; BSR set to: 61
 43921                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 43922  001D12  0EB0               	movlw	176
 43923  001D14  6FF2               	movwf	242,b	;volatile
 43924                           
 43925                           ; BSR set to: 61
 43926                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 43927  001D16  0E80               	movlw	128
 43928  001D18  6FF3               	movwf	243,b	;volatile
 43929                           
 43930                           ; BSR set to: 61
 43931                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 43932  001D1A  6BF4               	clrf	244,b	;volatile
 43933                           
 43934                           ; BSR set to: 61
 43935                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 43936  001D1C  0E8A               	movlw	138
 43937  001D1E  6FF5               	movwf	245,b	;volatile
 43938                           
 43939                           ; BSR set to: 61
 43940                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 43941  001D20  6BF6               	clrf	246,b	;volatile
 43942                           
 43943                           ; BSR set to: 61
 43944                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 43945  001D22  6BF7               	clrf	247,b	;volatile
 43946                           
 43947                           ; BSR set to: 61
 43948                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 43949  001D24  6BF8               	clrf	248,b	;volatile
 43950                           
 43951                           ; BSR set to: 61
 43952                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 43953  001D26  6BF9               	clrf	249,b	;volatile
 43954                           
 43955                           ; BSR set to: 61
 43956                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 43957  001D28  6BFA               	clrf	250,b	;volatile
 43958                           
 43959                           ; BSR set to: 61
 43960                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 43961  001D2A  6A57               	clrf	_uart1RxHead^0,c	;volatile
 43962                           
 43963                           ; BSR set to: 61
 43964                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 43965  001D2C  0100               	movlb	0	; () banked
 43966  001D2E  6BD1               	clrf	_uart1RxTail& (0+255),b	;volatile
 43967                           
 43968                           ; BSR set to: 0
 43969                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 43970  001D30  6BD0               	clrf	_uart1RxCount& (0+255),b	;volatile
 43971                           
 43972                           ; BSR set to: 0
 43973                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 43974  001D32  0139               	movlb	57	; () banked
 43975  001D34  8793               	bsf	147,3,b	;volatile
 43976                           
 43977                           ; BSR set to: 57
 43978                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 43979  001D36  0012               	return		;funcret
 43980  001D38                     __end_of_UART1_Initialize:
 43981                           	opt callstack 0
 43982                           
 43983 ;; *************** function _UART1_SetRxInterruptHandler *****************
 43984 ;; Defined at:
 43985 ;;		line 207 in file "mcc_generated_files/uart1.c"
 43986 ;; Parameters:    Size  Location     Type
 43987 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 43988 ;;		 -> UART1_Receive_ISR(1), 
 43989 ;; Auto vars:     Size  Location     Type
 43990 ;;		None
 43991 ;; Return value:  Size  Location     Type
 43992 ;;                  1  [STACK] void 
 43993 ;; Registers used:
 43994 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 43995 ;; Tracked objects:
 43996 ;;		On entry : 3F/39
 43997 ;;		On exit  : 0/0
 43998 ;;		Unchanged: 0/0
 43999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44004 ;;Total ram usage:        0 bytes
 44005 ;; Hardware stack levels used:    1
 44006 ;; Hardware stack levels required when called:   15
 44007 ;; This function calls:
 44008 ;;		Nothing
 44009 ;; This function is called by:
 44010 ;;		_UART1_Initialize
 44011 ;; This function uses a reentrant model
 44012 ;;
 44013                           
 44014                           	psect	text160
 44015  00252E                     __ptext160:
 44016                           	opt callstack 0
 44017  00252E                     _UART1_SetRxInterruptHandler:
 44018                           	opt callstack 13
 44019                           
 44020                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 44021                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 44022                           
 44023                           ; BSR set to: 57
 44024                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44025                           ;incstack = 0
 44026  00252E  50E1               	movf	fsr1l,w,c
 44027  002530  0FFD               	addlw	-3
 44028  002532  6ED9               	movwf	fsr2l,c
 44029  002534  50E2               	movf	fsr1h,w,c
 44030  002536  6EDA               	movwf	fsr2h,c
 44031  002538  0EFF               	movlw	255
 44032  00253A  22DA               	addwfc	fsr2h,f,c
 44033  00253C  006F FF78  F0A7    	movff	postinc2,_UART1_RxInterruptHandler
 44034  002542  006F FF78  F0A8    	movff	postinc2,_UART1_RxInterruptHandler+1
 44035  002548  006F FF74  F0A9    	movff	postdec2,_UART1_RxInterruptHandler+2
 44036                           
 44037                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 44038  00254E  52E5               	movf	postdec1,f,c
 44039  002550  52E5               	movf	postdec1,f,c
 44040  002552  52E5               	movf	postdec1,f,c
 44041  002554  0012               	return		;funcret
 44042  002556                     __end_of_UART1_SetRxInterruptHandler:
 44043                           	opt callstack 0
 44044                           
 44045 ;; *************** function _TMR6_Initialize *****************
 44046 ;; Defined at:
 44047 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 44048 ;; Parameters:    Size  Location     Type
 44049 ;;		None
 44050 ;; Auto vars:     Size  Location     Type
 44051 ;;		None
 44052 ;; Return value:  Size  Location     Type
 44053 ;;                  1  [STACK] void 
 44054 ;; Registers used:
 44055 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 44056 ;; Tracked objects:
 44057 ;;		On entry : 3F/39
 44058 ;;		On exit  : 0/0
 44059 ;;		Unchanged: 0/0
 44060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44065 ;;Total ram usage:        0 bytes
 44066 ;; Hardware stack levels used:    1
 44067 ;; Hardware stack levels required when called:   16
 44068 ;; This function calls:
 44069 ;;		_TMR6_SetInterruptHandler
 44070 ;; This function is called by:
 44071 ;;		_SYSTEM_Initialize
 44072 ;; This function uses a reentrant model
 44073 ;;
 44074                           
 44075                           	psect	text161
 44076  002464                     __ptext161:
 44077                           	opt callstack 0
 44078  002464                     _TMR6_Initialize:
 44079                           	opt callstack 13
 44080                           
 44081                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 44082                           
 44083                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44084                           ;incstack = 0
 44085  002464  0E01               	movlw	1
 44086  002466  6E96               	movwf	150,c	;volatile
 44087                           
 44088                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 44089  002468  6A95               	clrf	149,c	;volatile
 44090                           
 44091                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 44092  00246A  6A97               	clrf	151,c	;volatile
 44093                           
 44094                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 44095  00246C  0E7C               	movlw	124
 44096  00246E  6E93               	movwf	147,c	;volatile
 44097                           
 44098                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 44099  002470  6A92               	clrf	146,c	;volatile
 44100                           
 44101                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 44102  002472  0139               	movlb	57	; () banked
 44103  002474  91A9               	bcf	169,0,b	;volatile
 44104                           
 44105                           ; BSR set to: 57
 44106                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 44107  002476  8199               	bsf	153,0,b	;volatile
 44108                           
 44109                           ; BSR set to: 57
 44110                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 44111  002478  0E5A               	movlw	low _TMR6_DefaultInterruptHandler
 44112  00247A  6EE6               	movwf	postinc1,c
 44113  00247C  0E1C               	movlw	high _TMR6_DefaultInterruptHandler
 44114  00247E  6EE6               	movwf	postinc1,c
 44115  002480  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 44116  002482  6EE6               	movwf	postinc1,c
 44117  002484  ECAB  F012         	call	_TMR6_SetInterruptHandler	;wreg free
 44118                           
 44119                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 44120  002488  0EE0               	movlw	224
 44121  00248A  6E94               	movwf	148,c	;volatile
 44122                           
 44123                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 44124  00248C  0012               	return		;funcret
 44125  00248E                     __end_of_TMR6_Initialize:
 44126                           	opt callstack 0
 44127                           
 44128 ;; *************** function _TMR6_SetInterruptHandler *****************
 44129 ;; Defined at:
 44130 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 44131 ;; Parameters:    Size  Location     Type
 44132 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 44133 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 44134 ;; Auto vars:     Size  Location     Type
 44135 ;;		None
 44136 ;; Return value:  Size  Location     Type
 44137 ;;                  1  [STACK] void 
 44138 ;; Registers used:
 44139 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44140 ;; Tracked objects:
 44141 ;;		On entry : 3F/39
 44142 ;;		On exit  : 0/0
 44143 ;;		Unchanged: 0/0
 44144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44149 ;;Total ram usage:        0 bytes
 44150 ;; Hardware stack levels used:    1
 44151 ;; Hardware stack levels required when called:   15
 44152 ;; This function calls:
 44153 ;;		Nothing
 44154 ;; This function is called by:
 44155 ;;		_TMR6_Initialize
 44156 ;; This function uses a reentrant model
 44157 ;;
 44158                           
 44159                           	psect	text162
 44160  002556                     __ptext162:
 44161                           	opt callstack 0
 44162  002556                     _TMR6_SetInterruptHandler:
 44163                           	opt callstack 13
 44164                           
 44165                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 44166                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 44167                           
 44168                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44169                           ;incstack = 0
 44170  002556  50E1               	movf	fsr1l,w,c
 44171  002558  0FFD               	addlw	-3
 44172  00255A  6ED9               	movwf	fsr2l,c
 44173  00255C  50E2               	movf	fsr1h,w,c
 44174  00255E  6EDA               	movwf	fsr2h,c
 44175  002560  0EFF               	movlw	255
 44176  002562  22DA               	addwfc	fsr2h,f,c
 44177  002564  006F FF78  F09E    	movff	postinc2,_TMR6_InterruptHandler
 44178  00256A  006F FF78  F09F    	movff	postinc2,_TMR6_InterruptHandler+1
 44179  002570  006F FF74  F0A0    	movff	postdec2,_TMR6_InterruptHandler+2
 44180                           
 44181                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 44182  002576  52E5               	movf	postdec1,f,c
 44183  002578  52E5               	movf	postdec1,f,c
 44184  00257A  52E5               	movf	postdec1,f,c
 44185  00257C  0012               	return		;funcret
 44186  00257E                     __end_of_TMR6_SetInterruptHandler:
 44187                           	opt callstack 0
 44188                           
 44189 ;; *************** function _TMR5_Initialize *****************
 44190 ;; Defined at:
 44191 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 44192 ;; Parameters:    Size  Location     Type
 44193 ;;		None
 44194 ;; Auto vars:     Size  Location     Type
 44195 ;;		None
 44196 ;; Return value:  Size  Location     Type
 44197 ;;                  1  [STACK] void 
 44198 ;; Registers used:
 44199 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 44200 ;; Tracked objects:
 44201 ;;		On entry : 0/39
 44202 ;;		On exit  : 0/0
 44203 ;;		Unchanged: 0/0
 44204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44209 ;;Total ram usage:        0 bytes
 44210 ;; Hardware stack levels used:    1
 44211 ;; Hardware stack levels required when called:   16
 44212 ;; This function calls:
 44213 ;;		_TMR5_SetInterruptHandler
 44214 ;; This function is called by:
 44215 ;;		_SYSTEM_Initialize
 44216 ;; This function uses a reentrant model
 44217 ;;
 44218                           
 44219                           	psect	text163
 44220  001D38                     __ptext163:
 44221                           	opt callstack 0
 44222  001D38                     _TMR5_Initialize:
 44223                           	opt callstack 13
 44224                           
 44225                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 44226                           
 44227                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44228                           ;incstack = 0
 44229  001D38  6A9B               	clrf	155,c	;volatile
 44230                           
 44231                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 44232  001D3A  6A9C               	clrf	156,c	;volatile
 44233                           
 44234                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 44235  001D3C  0E01               	movlw	1
 44236  001D3E  6E9D               	movwf	157,c	;volatile
 44237                           
 44238                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 44239  001D40  0E63               	movlw	99
 44240  001D42  6E99               	movwf	153,c	;volatile
 44241                           
 44242                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 44243  001D44  0EC0               	movlw	192
 44244  001D46  6E98               	movwf	152,c	;volatile
 44245                           
 44246                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 44247  001D48  5098               	movf	152,w,c	;volatile
 44248  001D4A  006F FE64  F02A    	movff	16281,btemp	;volatile
 44249  001D50  6A2B               	clrf	(btemp+1)^0,c
 44250  001D52  0060  F0A8  F02B   	movff	btemp,btemp+1
 44251  001D58  6A2A               	clrf	btemp^0,c
 44252  001D5A  102A               	iorwf	btemp^0,w,c
 44253  001D5C  0100               	movlb	0	; () banked
 44254  001D5E  6FC4               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 44255  001D60  502B               	movf	(btemp+1)^0,w,c
 44256  001D62  6FC5               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 44257                           
 44258                           ; BSR set to: 0
 44259                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 44260  001D64  0139               	movlb	57	; () banked
 44261  001D66  9DA8               	bcf	168,6,b	;volatile
 44262                           
 44263                           ; BSR set to: 57
 44264                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 44265  001D68  8D98               	bsf	152,6,b	;volatile
 44266                           
 44267                           ; BSR set to: 57
 44268                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 44269  001D6A  0E4C               	movlw	low _TMR5_DefaultInterruptHandler
 44270  001D6C  6EE6               	movwf	postinc1,c
 44271  001D6E  0E21               	movlw	high _TMR5_DefaultInterruptHandler
 44272  001D70  6EE6               	movwf	postinc1,c
 44273  001D72  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 44274  001D74  6EE6               	movwf	postinc1,c
 44275  001D76  ECBF  F012         	call	_TMR5_SetInterruptHandler	;wreg free
 44276                           
 44277                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 44278  001D7A  0E31               	movlw	49
 44279  001D7C  6E9A               	movwf	154,c	;volatile
 44280                           
 44281                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 44282  001D7E  0012               	return		;funcret
 44283  001D80                     __end_of_TMR5_Initialize:
 44284                           	opt callstack 0
 44285                           
 44286 ;; *************** function _TMR5_SetInterruptHandler *****************
 44287 ;; Defined at:
 44288 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 44289 ;; Parameters:    Size  Location     Type
 44290 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 44291 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 44292 ;; Auto vars:     Size  Location     Type
 44293 ;;		None
 44294 ;; Return value:  Size  Location     Type
 44295 ;;                  1  [STACK] void 
 44296 ;; Registers used:
 44297 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44298 ;; Tracked objects:
 44299 ;;		On entry : 3F/39
 44300 ;;		On exit  : 0/0
 44301 ;;		Unchanged: 0/0
 44302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44307 ;;Total ram usage:        0 bytes
 44308 ;; Hardware stack levels used:    1
 44309 ;; Hardware stack levels required when called:   15
 44310 ;; This function calls:
 44311 ;;		Nothing
 44312 ;; This function is called by:
 44313 ;;		_TMR5_Initialize
 44314 ;; This function uses a reentrant model
 44315 ;;
 44316                           
 44317                           	psect	text164
 44318  00257E                     __ptext164:
 44319                           	opt callstack 0
 44320  00257E                     _TMR5_SetInterruptHandler:
 44321                           	opt callstack 13
 44322                           
 44323                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 44324                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 44325                           
 44326                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44327                           ;incstack = 0
 44328  00257E  50E1               	movf	fsr1l,w,c
 44329  002580  0FFD               	addlw	-3
 44330  002582  6ED9               	movwf	fsr2l,c
 44331  002584  50E2               	movf	fsr1h,w,c
 44332  002586  6EDA               	movwf	fsr2h,c
 44333  002588  0EFF               	movlw	255
 44334  00258A  22DA               	addwfc	fsr2h,f,c
 44335  00258C  006F FF78  F09B    	movff	postinc2,_TMR5_InterruptHandler
 44336  002592  006F FF78  F09C    	movff	postinc2,_TMR5_InterruptHandler+1
 44337  002598  006F FF74  F09D    	movff	postdec2,_TMR5_InterruptHandler+2
 44338                           
 44339                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 44340  00259E  52E5               	movf	postdec1,f,c
 44341  0025A0  52E5               	movf	postdec1,f,c
 44342  0025A2  52E5               	movf	postdec1,f,c
 44343  0025A4  0012               	return		;funcret
 44344  0025A6                     __end_of_TMR5_SetInterruptHandler:
 44345                           	opt callstack 0
 44346                           
 44347 ;; *************** function _TMR3_Initialize *****************
 44348 ;; Defined at:
 44349 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 44350 ;; Parameters:    Size  Location     Type
 44351 ;;		None
 44352 ;; Auto vars:     Size  Location     Type
 44353 ;;		None
 44354 ;; Return value:  Size  Location     Type
 44355 ;;                  1  [STACK] void 
 44356 ;; Registers used:
 44357 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 44358 ;; Tracked objects:
 44359 ;;		On entry : 0/39
 44360 ;;		On exit  : 0/0
 44361 ;;		Unchanged: 0/0
 44362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44367 ;;Total ram usage:        0 bytes
 44368 ;; Hardware stack levels used:    1
 44369 ;; Hardware stack levels required when called:   16
 44370 ;; This function calls:
 44371 ;;		_TMR3_SetInterruptHandler
 44372 ;; This function is called by:
 44373 ;;		_SYSTEM_Initialize
 44374 ;; This function uses a reentrant model
 44375 ;;
 44376                           
 44377                           	psect	text165
 44378  001D80                     __ptext165:
 44379                           	opt callstack 0
 44380  001D80                     _TMR3_Initialize:
 44381                           	opt callstack 13
 44382                           
 44383                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 44384                           
 44385                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44386                           ;incstack = 0
 44387  001D80  6AA7               	clrf	167,c	;volatile
 44388                           
 44389                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 44390  001D82  6AA8               	clrf	168,c	;volatile
 44391                           
 44392                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 44393  001D84  0E01               	movlw	1
 44394  001D86  6EA9               	movwf	169,c	;volatile
 44395                           
 44396                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 44397  001D88  0E3C               	movlw	60
 44398  001D8A  6EA5               	movwf	165,c	;volatile
 44399                           
 44400                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 44401  001D8C  0EB0               	movlw	176
 44402  001D8E  6EA4               	movwf	164,c	;volatile
 44403                           
 44404                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 44405  001D90  50A4               	movf	164,w,c	;volatile
 44406  001D92  006F FE94  F02A    	movff	16293,btemp	;volatile
 44407  001D98  6A2B               	clrf	(btemp+1)^0,c
 44408  001D9A  0060  F0A8  F02B   	movff	btemp,btemp+1
 44409  001DA0  6A2A               	clrf	btemp^0,c
 44410  001DA2  102A               	iorwf	btemp^0,w,c
 44411  001DA4  0100               	movlb	0	; () banked
 44412  001DA6  6FC0               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 44413  001DA8  502B               	movf	(btemp+1)^0,w,c
 44414  001DAA  6FC1               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 44415                           
 44416                           ; BSR set to: 0
 44417                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 44418  001DAC  0139               	movlb	57	; () banked
 44419  001DAE  9DA6               	bcf	166,6,b	;volatile
 44420                           
 44421                           ; BSR set to: 57
 44422                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 44423  001DB0  8D96               	bsf	150,6,b	;volatile
 44424                           
 44425                           ; BSR set to: 57
 44426                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 44427  001DB2  0EFE               	movlw	low _TMR3_DefaultInterruptHandler
 44428  001DB4  6EE6               	movwf	postinc1,c
 44429  001DB6  0EFF               	movlw	high _TMR3_DefaultInterruptHandler
 44430  001DB8  6EE6               	movwf	postinc1,c
 44431  001DBA  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 44432  001DBC  6EE6               	movwf	postinc1,c
 44433  001DBE  ECD3  F012         	call	_TMR3_SetInterruptHandler	;wreg free
 44434                           
 44435                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 44436  001DC2  0E31               	movlw	49
 44437  001DC4  6EA6               	movwf	166,c	;volatile
 44438                           
 44439                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 44440  001DC6  0012               	return		;funcret
 44441  001DC8                     __end_of_TMR3_Initialize:
 44442                           	opt callstack 0
 44443                           
 44444 ;; *************** function _TMR3_SetInterruptHandler *****************
 44445 ;; Defined at:
 44446 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 44447 ;; Parameters:    Size  Location     Type
 44448 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 44449 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 44450 ;; Auto vars:     Size  Location     Type
 44451 ;;		None
 44452 ;; Return value:  Size  Location     Type
 44453 ;;                  1  [STACK] void 
 44454 ;; Registers used:
 44455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44456 ;; Tracked objects:
 44457 ;;		On entry : 0/1
 44458 ;;		On exit  : 0/0
 44459 ;;		Unchanged: 0/0
 44460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44465 ;;Total ram usage:        0 bytes
 44466 ;; Hardware stack levels used:    1
 44467 ;; Hardware stack levels required when called:   15
 44468 ;; This function calls:
 44469 ;;		Nothing
 44470 ;; This function is called by:
 44471 ;;		_TMR3_Initialize
 44472 ;;		_init_bsoc
 44473 ;; This function uses a reentrant model
 44474 ;;
 44475                           
 44476                           	psect	text166
 44477  0025A6                     __ptext166:
 44478                           	opt callstack 0
 44479  0025A6                     _TMR3_SetInterruptHandler:
 44480                           	opt callstack 14
 44481                           
 44482                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 44483                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 44484                           
 44485                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44486                           ;incstack = 0
 44487  0025A6  50E1               	movf	fsr1l,w,c
 44488  0025A8  0FFD               	addlw	-3
 44489  0025AA  6ED9               	movwf	fsr2l,c
 44490  0025AC  50E2               	movf	fsr1h,w,c
 44491  0025AE  6EDA               	movwf	fsr2h,c
 44492  0025B0  0EFF               	movlw	255
 44493  0025B2  22DA               	addwfc	fsr2h,f,c
 44494  0025B4  006F FF78  F098    	movff	postinc2,_TMR3_InterruptHandler
 44495  0025BA  006F FF78  F099    	movff	postinc2,_TMR3_InterruptHandler+1
 44496  0025C0  006F FF74  F09A    	movff	postdec2,_TMR3_InterruptHandler+2
 44497                           
 44498                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 44499  0025C6  52E5               	movf	postdec1,f,c
 44500  0025C8  52E5               	movf	postdec1,f,c
 44501  0025CA  52E5               	movf	postdec1,f,c
 44502  0025CC  0012               	return		;funcret
 44503  0025CE                     __end_of_TMR3_SetInterruptHandler:
 44504                           	opt callstack 0
 44505                           
 44506 ;; *************** function _TMR2_Initialize *****************
 44507 ;; Defined at:
 44508 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 44509 ;; Parameters:    Size  Location     Type
 44510 ;;		None
 44511 ;; Auto vars:     Size  Location     Type
 44512 ;;		None
 44513 ;; Return value:  Size  Location     Type
 44514 ;;                  1  [STACK] void 
 44515 ;; Registers used:
 44516 ;;		wreg, status,2
 44517 ;; Tracked objects:
 44518 ;;		On entry : 0/0
 44519 ;;		On exit  : 3F/39
 44520 ;;		Unchanged: 0/0
 44521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44526 ;;Total ram usage:        0 bytes
 44527 ;; Hardware stack levels used:    1
 44528 ;; Hardware stack levels required when called:   15
 44529 ;; This function calls:
 44530 ;;		Nothing
 44531 ;; This function is called by:
 44532 ;;		_SYSTEM_Initialize
 44533 ;; This function uses a reentrant model
 44534 ;;
 44535                           
 44536                           	psect	text167
 44537  00292A                     __ptext167:
 44538                           	opt callstack 0
 44539  00292A                     _TMR2_Initialize:
 44540                           	opt callstack 14
 44541                           
 44542                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 44543                           
 44544                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44545                           ;incstack = 0
 44546  00292A  0E01               	movlw	1
 44547  00292C  6EAE               	movwf	174,c	;volatile
 44548                           
 44549                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 44550  00292E  6AAD               	clrf	173,c	;volatile
 44551                           
 44552                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 44553  002930  6AAF               	clrf	175,c	;volatile
 44554                           
 44555                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 44556  002932  0E63               	movlw	99
 44557  002934  6EAB               	movwf	171,c	;volatile
 44558                           
 44559                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 44560  002936  6AAA               	clrf	170,c	;volatile
 44561                           
 44562                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 44563  002938  0139               	movlb	57	; () banked
 44564  00293A  95A4               	bcf	164,2,b	;volatile
 44565                           
 44566                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 44567  00293C  0EC0               	movlw	192
 44568  00293E  6EAC               	movwf	172,c	;volatile
 44569                           
 44570                           ; BSR set to: 57
 44571                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 44572  002940  0012               	return		;funcret
 44573  002942                     __end_of_TMR2_Initialize:
 44574                           	opt callstack 0
 44575                           
 44576 ;; *************** function _SPI1_Initialize *****************
 44577 ;; Defined at:
 44578 ;;		line 64 in file "mcc_generated_files/spi1.c"
 44579 ;; Parameters:    Size  Location     Type
 44580 ;;		None
 44581 ;; Auto vars:     Size  Location     Type
 44582 ;;		None
 44583 ;; Return value:  Size  Location     Type
 44584 ;;                  1  [STACK] void 
 44585 ;; Registers used:
 44586 ;;		wreg, status,2
 44587 ;; Tracked objects:
 44588 ;;		On entry : 3F/39
 44589 ;;		On exit  : 3F/3D
 44590 ;;		Unchanged: 0/0
 44591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44596 ;;Total ram usage:        0 bytes
 44597 ;; Hardware stack levels used:    1
 44598 ;; Hardware stack levels required when called:   15
 44599 ;; This function calls:
 44600 ;;		Nothing
 44601 ;; This function is called by:
 44602 ;;		_SYSTEM_Initialize
 44603 ;; This function uses a reentrant model
 44604 ;;
 44605                           
 44606                           	psect	text168
 44607  002958                     __ptext168:
 44608                           	opt callstack 0
 44609  002958                     _SPI1_Initialize:
 44610                           	opt callstack 14
 44611                           
 44612                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 44613                           
 44614                           ; BSR set to: 57
 44615                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44616                           ;incstack = 0
 44617  002958  0E40               	movlw	64
 44618  00295A  013D               	movlb	61	; () banked
 44619  00295C  6F15               	movwf	21,b	;volatile
 44620                           
 44621                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 44622  00295E  0E03               	movlw	3
 44623  002960  6F16               	movwf	22,b	;volatile
 44624                           
 44625                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 44626  002962  0E4F               	movlw	79
 44627  002964  6F19               	movwf	25,b	;volatile
 44628                           
 44629                           ; BSR set to: 61
 44630                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 44631  002966  6B1C               	clrf	28,b	;volatile
 44632                           
 44633                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 44634  002968  0E83               	movlw	131
 44635  00296A  6F14               	movwf	20,b	;volatile
 44636                           
 44637                           ; BSR set to: 61
 44638                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 44639  00296C  0012               	return		;funcret
 44640  00296E                     __end_of_SPI1_Initialize:
 44641                           	opt callstack 0
 44642                           
 44643 ;; *************** function _PWM8_Initialize *****************
 44644 ;; Defined at:
 44645 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 44646 ;; Parameters:    Size  Location     Type
 44647 ;;		None
 44648 ;; Auto vars:     Size  Location     Type
 44649 ;;		None
 44650 ;; Return value:  Size  Location     Type
 44651 ;;                  1  [STACK] void 
 44652 ;; Registers used:
 44653 ;;		wreg, status,2
 44654 ;; Tracked objects:
 44655 ;;		On entry : 3F/39
 44656 ;;		On exit  : 3F/3F
 44657 ;;		Unchanged: 0/0
 44658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44663 ;;Total ram usage:        0 bytes
 44664 ;; Hardware stack levels used:    1
 44665 ;; Hardware stack levels required when called:   15
 44666 ;; This function calls:
 44667 ;;		Nothing
 44668 ;; This function is called by:
 44669 ;;		_SYSTEM_Initialize
 44670 ;; This function uses a reentrant model
 44671 ;;
 44672                           
 44673                           	psect	text169
 44674  00296E                     __ptext169:
 44675                           	opt callstack 0
 44676  00296E                     _PWM8_Initialize:
 44677                           	opt callstack 14
 44678                           
 44679                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 44680                           
 44681                           ; BSR set to: 61
 44682                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44683                           ;incstack = 0
 44684  00296E  0E80               	movlw	128
 44685  002970  6E62               	movwf	98,c	;volatile
 44686                           
 44687                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 44688  002972  6A61               	clrf	97,c	;volatile
 44689                           
 44690                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 44691  002974  0E40               	movlw	64
 44692  002976  6E60               	movwf	96,c	;volatile
 44693                           
 44694                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 44695  002978  013F               	movlb	63	; () banked
 44696  00297A  515F               	movf	95,w,b	;volatile
 44697  00297C  0B3F               	andlw	-193
 44698  00297E  0940               	iorlw	64
 44699  002980  6F5F               	movwf	95,b	;volatile
 44700                           
 44701                           ; BSR set to: 63
 44702                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 44703  002982  0012               	return		;funcret
 44704  002984                     __end_of_PWM8_Initialize:
 44705                           	opt callstack 0
 44706                           
 44707 ;; *************** function _PMD_Initialize *****************
 44708 ;; Defined at:
 44709 ;;		line 91 in file "mcc_generated_files/mcc.c"
 44710 ;; Parameters:    Size  Location     Type
 44711 ;;		None
 44712 ;; Auto vars:     Size  Location     Type
 44713 ;;		None
 44714 ;; Return value:  Size  Location     Type
 44715 ;;                  1  [STACK] void 
 44716 ;; Registers used:
 44717 ;;		None
 44718 ;; Tracked objects:
 44719 ;;		On entry : 3F/39
 44720 ;;		On exit  : 3F/39
 44721 ;;		Unchanged: 0/0
 44722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44727 ;;Total ram usage:        0 bytes
 44728 ;; Hardware stack levels used:    1
 44729 ;; Hardware stack levels required when called:   15
 44730 ;; This function calls:
 44731 ;;		Nothing
 44732 ;; This function is called by:
 44733 ;;		_SYSTEM_Initialize
 44734 ;; This function uses a reentrant model
 44735 ;;
 44736                           
 44737                           	psect	text170
 44738  00299A                     __ptext170:
 44739                           	opt callstack 0
 44740  00299A                     _PMD_Initialize:
 44741                           	opt callstack 14
 44742                           
 44743                           ;mcc_generated_files/mcc.c: 94:     PMD0 = 0x00;
 44744                           
 44745                           ; BSR set to: 63
 44746                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44747                           ;incstack = 0
 44748  00299A  0139               	movlb	57	; () banked
 44749  00299C  6BC0               	clrf	192,b	;volatile
 44750                           
 44751                           ;mcc_generated_files/mcc.c: 96:     PMD1 = 0x00;
 44752  00299E  6BC1               	clrf	193,b	;volatile
 44753                           
 44754                           ;mcc_generated_files/mcc.c: 98:     PMD2 = 0x00;
 44755  0029A0  6BC2               	clrf	194,b	;volatile
 44756                           
 44757                           ;mcc_generated_files/mcc.c: 100:     PMD3 = 0x00;
 44758  0029A2  6BC3               	clrf	195,b	;volatile
 44759                           
 44760                           ;mcc_generated_files/mcc.c: 102:     PMD4 = 0x00;
 44761  0029A4  6BC4               	clrf	196,b	;volatile
 44762                           
 44763                           ;mcc_generated_files/mcc.c: 104:     PMD5 = 0x00;
 44764  0029A6  6BC5               	clrf	197,b	;volatile
 44765                           
 44766                           ;mcc_generated_files/mcc.c: 106:     PMD6 = 0x00;
 44767  0029A8  6BC6               	clrf	198,b	;volatile
 44768                           
 44769                           ;mcc_generated_files/mcc.c: 108:     PMD7 = 0x00;
 44770  0029AA  6BC7               	clrf	199,b	;volatile
 44771                           
 44772                           ; BSR set to: 57
 44773                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 44774  0029AC  0012               	return		;funcret
 44775  0029AE                     __end_of_PMD_Initialize:
 44776                           	opt callstack 0
 44777                           
 44778 ;; *************** function _PIN_MANAGER_Initialize *****************
 44779 ;; Defined at:
 44780 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 44781 ;; Parameters:    Size  Location     Type
 44782 ;;		None
 44783 ;; Auto vars:     Size  Location     Type
 44784 ;;		None
 44785 ;; Return value:  Size  Location     Type
 44786 ;;                  1  [STACK] void 
 44787 ;; Registers used:
 44788 ;;		wreg, status,2
 44789 ;; Tracked objects:
 44790 ;;		On entry : 3F/39
 44791 ;;		On exit  : 3F/3A
 44792 ;;		Unchanged: 0/0
 44793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44798 ;;Total ram usage:        0 bytes
 44799 ;; Hardware stack levels used:    1
 44800 ;; Hardware stack levels required when called:   15
 44801 ;; This function calls:
 44802 ;;		Nothing
 44803 ;; This function is called by:
 44804 ;;		_SYSTEM_Initialize
 44805 ;; This function uses a reentrant model
 44806 ;;
 44807                           
 44808                           	psect	text171
 44809  000FB2                     __ptext171:
 44810                           	opt callstack 0
 44811  000FB2                     _PIN_MANAGER_Initialize:
 44812                           	opt callstack 14
 44813                           
 44814                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 44815                           
 44816                           ; BSR set to: 57
 44817                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44818                           ;incstack = 0
 44819  000FB2  0E07               	movlw	7
 44820  000FB4  6EBE               	movwf	190,c	;volatile
 44821                           
 44822                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 44823  000FB6  6ABD               	clrf	189,c	;volatile
 44824                           
 44825                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 44826  000FB8  6ABA               	clrf	186,c	;volatile
 44827                           
 44828                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x23;
 44829  000FBA  0E23               	movlw	35
 44830  000FBC  6EBF               	movwf	191,c	;volatile
 44831                           
 44832                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 44833  000FBE  6ABB               	clrf	187,c	;volatile
 44834                           
 44835                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 44836  000FC0  0E07               	movlw	7
 44837  000FC2  6EBC               	movwf	188,c	;volatile
 44838                           
 44839                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 44840  000FC4  6AC6               	clrf	198,c	;volatile
 44841                           
 44842                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0C;
 44843  000FC6  0E0C               	movlw	12
 44844  000FC8  6EC7               	movwf	199,c	;volatile
 44845                           
 44846                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 44847  000FCA  68C2               	setf	194,c	;volatile
 44848                           
 44849                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 44850  000FCC  0EBF               	movlw	191
 44851  000FCE  6EC3               	movwf	195,c	;volatile
 44852                           
 44853                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 44854  000FD0  0E90               	movlw	144
 44855  000FD2  6EC4               	movwf	196,c	;volatile
 44856                           
 44857                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 44858  000FD4  0E0C               	movlw	12
 44859  000FD6  6EC5               	movwf	197,c	;volatile
 44860                           
 44861                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 44862  000FD8  013A               	movlb	58	; () banked
 44863  000FDA  6B70               	clrf	112,b	;volatile
 44864                           
 44865                           ; BSR set to: 58
 44866                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 44867  000FDC  6B60               	clrf	96,b	;volatile
 44868                           
 44869                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 44870  000FDE  0E3C               	movlw	60
 44871  000FE0  6F50               	movwf	80,b	;volatile
 44872                           
 44873                           ; BSR set to: 58
 44874                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 44875  000FE2  6B80               	clrf	128,b	;volatile
 44876                           
 44877                           ; BSR set to: 58
 44878                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 44879  000FE4  6B90               	clrf	144,b	;volatile
 44880                           
 44881                           ; BSR set to: 58
 44882                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 44883  000FE6  6940               	setf	64,b	;volatile
 44884                           
 44885                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 44886  000FE8  0E0C               	movlw	12
 44887  000FEA  6F71               	movwf	113,b	;volatile
 44888                           
 44889                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0C;
 44890  000FEC  0E0C               	movlw	12
 44891  000FEE  6F91               	movwf	145,b	;volatile
 44892                           
 44893                           ; BSR set to: 58
 44894                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 44895  000FF0  6B81               	clrf	129,b	;volatile
 44896                           
 44897                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 44898  000FF2  0E83               	movlw	131
 44899  000FF4  6F51               	movwf	81,b	;volatile
 44900                           
 44901                           ; BSR set to: 58
 44902                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 44903  000FF6  6B41               	clrf	65,b	;volatile
 44904                           
 44905                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 44906  000FF8  0E97               	movlw	151
 44907  000FFA  6F61               	movwf	97,b	;volatile
 44908                           
 44909                           ; BSR set to: 58
 44910                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 44911  000FFC  6B82               	clrf	130,b	;volatile
 44912                           
 44913                           ; BSR set to: 58
 44914                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 44915  000FFE  6B92               	clrf	146,b	;volatile
 44916                           
 44917                           ; BSR set to: 58
 44918                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 44919  001000  6B42               	clrf	66,b	;volatile
 44920                           
 44921                           ; BSR set to: 58
 44922                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 44923  001002  6B52               	clrf	82,b	;volatile
 44924                           
 44925                           ; BSR set to: 58
 44926                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 44927  001004  6B62               	clrf	98,b	;volatile
 44928                           
 44929                           ; BSR set to: 58
 44930                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 44931  001006  6B72               	clrf	114,b	;volatile
 44932                           
 44933                           ; BSR set to: 58
 44934                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 44935  001008  6943               	setf	67,b	;volatile
 44936                           
 44937                           ; BSR set to: 58
 44938                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 44939  00100A  6953               	setf	83,b	;volatile
 44940                           
 44941                           ; BSR set to: 58
 44942                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 44943  00100C  6963               	setf	99,b	;volatile
 44944                           
 44945                           ; BSR set to: 58
 44946                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 44947  00100E  6973               	setf	115,b	;volatile
 44948                           
 44949                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 44950  001010  0E07               	movlw	7
 44951  001012  6F83               	movwf	131,b	;volatile
 44952                           
 44953                           ; BSR set to: 58
 44954                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 44955  001014  6993               	setf	147,b	;volatile
 44956                           
 44957                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 44958  001016  0E0F               	movlw	15
 44959  001018  6FE8               	movwf	232,b	;volatile
 44960                           
 44961                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 44962  00101A  0E13               	movlw	19
 44963  00101C  6FDE               	movwf	222,b	;volatile
 44964                           
 44965                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 44966  00101E  0E16               	movlw	22
 44967  001020  6F0E               	movwf	14,b	;volatile
 44968                           
 44969                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 44970  001022  0E1E               	movlw	30
 44971  001024  6F13               	movwf	19,b	;volatile
 44972                           
 44973                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 44974  001026  0E08               	movlw	8
 44975  001028  6FC0               	movwf	192,b	;volatile
 44976                           
 44977                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 44978  00102A  0E10               	movlw	16
 44979  00102C  6F19               	movwf	25,b	;volatile
 44980                           
 44981                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 44982  00102E  0E09               	movlw	9
 44983  001030  6FC1               	movwf	193,b	;volatile
 44984                           
 44985                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 44986  001032  0E1F               	movlw	31
 44987  001034  6F15               	movwf	21,b	;volatile
 44988                           
 44989                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 44990  001036  0E13               	movlw	19
 44991  001038  6F16               	movwf	22,b	;volatile
 44992                           
 44993                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 44994  00103A  0E17               	movlw	23
 44995  00103C  6FE5               	movwf	229,b	;volatile
 44996                           
 44997                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 44998  00103E  0E14               	movlw	20
 44999  001040  6FDF               	movwf	223,b	;volatile
 45000                           
 45001                           ; BSR set to: 58
 45002                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 45003  001042  0012               	return		;funcret
 45004  001044                     __end_of_PIN_MANAGER_Initialize:
 45005                           	opt callstack 0
 45006                           
 45007 ;; *************** function _OSCILLATOR_Initialize *****************
 45008 ;; Defined at:
 45009 ;;		line 73 in file "mcc_generated_files/mcc.c"
 45010 ;; Parameters:    Size  Location     Type
 45011 ;;		None
 45012 ;; Auto vars:     Size  Location     Type
 45013 ;;		None
 45014 ;; Return value:  Size  Location     Type
 45015 ;;                  1  [STACK] void 
 45016 ;; Registers used:
 45017 ;;		wreg, status,2
 45018 ;; Tracked objects:
 45019 ;;		On entry : 3F/3A
 45020 ;;		On exit  : 3F/39
 45021 ;;		Unchanged: 0/0
 45022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45027 ;;Total ram usage:        0 bytes
 45028 ;; Hardware stack levels used:    1
 45029 ;; Hardware stack levels required when called:   15
 45030 ;; This function calls:
 45031 ;;		Nothing
 45032 ;; This function is called by:
 45033 ;;		_SYSTEM_Initialize
 45034 ;; This function uses a reentrant model
 45035 ;;
 45036                           
 45037                           	psect	text172
 45038  002984                     __ptext172:
 45039                           	opt callstack 0
 45040  002984                     _OSCILLATOR_Initialize:
 45041                           	opt callstack 14
 45042                           
 45043                           ;mcc_generated_files/mcc.c: 76:     OSCCON1 = 0x20;
 45044                           
 45045                           ; BSR set to: 58
 45046                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45047                           ;incstack = 0
 45048  002984  0E20               	movlw	32
 45049  002986  0139               	movlb	57	; () banked
 45050  002988  6FD9               	movwf	217,b	;volatile
 45051                           
 45052                           ; BSR set to: 57
 45053                           ;mcc_generated_files/mcc.c: 78:     OSCCON3 = 0x00;
 45054  00298A  6BDB               	clrf	219,b	;volatile
 45055                           
 45056                           ; BSR set to: 57
 45057                           ;mcc_generated_files/mcc.c: 80:     OSCEN = 0x00;
 45058  00298C  6BDD               	clrf	221,b	;volatile
 45059                           
 45060                           ;mcc_generated_files/mcc.c: 82:     OSCFRQ = 0x02;
 45061  00298E  0E02               	movlw	2
 45062  002990  6FDF               	movwf	223,b	;volatile
 45063                           
 45064                           ; BSR set to: 57
 45065                           ;mcc_generated_files/mcc.c: 84:     OSCTUNE = 0x00;
 45066  002992  6BDE               	clrf	222,b	;volatile
 45067  002994                     l171:
 45068                           
 45069                           ; BSR set to: 57
 45070                           ;mcc_generated_files/mcc.c: 86:     while(PLLR == 0)
 45071  002994  B1DC               	btfsc	220,0,b	;volatile
 45072  002996  0012               	return	
 45073  002998  D7FD               	goto	l171
 45074  00299A                     __end_of_OSCILLATOR_Initialize:
 45075                           	opt callstack 0
 45076                           
 45077 ;; *************** function _INTERRUPT_Initialize *****************
 45078 ;; Defined at:
 45079 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 45080 ;; Parameters:    Size  Location     Type
 45081 ;;		None
 45082 ;; Auto vars:     Size  Location     Type
 45083 ;;  state           1  [STACK] _Bool 
 45084 ;; Return value:  Size  Location     Type
 45085 ;;                  1  [STACK] void 
 45086 ;; Registers used:
 45087 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 45088 ;; Tracked objects:
 45089 ;;		On entry : 0/0
 45090 ;;		On exit  : 3F/39
 45091 ;;		Unchanged: 0/0
 45092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45097 ;;Total ram usage:        0 bytes
 45098 ;; Hardware stack levels used:    1
 45099 ;; Hardware stack levels required when called:   15
 45100 ;; This function calls:
 45101 ;;		Nothing
 45102 ;; This function is called by:
 45103 ;;		_SYSTEM_Initialize
 45104 ;; This function uses a reentrant model
 45105 ;;
 45106                           
 45107                           	psect	text173
 45108  001754                     __ptext173:
 45109                           	opt callstack 0
 45110  001754                     _INTERRUPT_Initialize:
 45111                           	opt callstack 0
 45112                           
 45113                           ; BSR set to: 57
 45114                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45115  001754  52E6               	movf	postinc1,f,c
 45116                           
 45117                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 45118                           
 45119                           ;incstack = 0
 45120  001756  8AD2               	bsf	210,5,c	;volatile
 45121                           
 45122                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 45123  001758  AED2               	btfss	16338,7,c	;volatile
 45124  00175A  D003               	goto	u12440
 45125  00175C  6A35               	clrf	(btemp+11)^0,c
 45126  00175E  2A35               	incf	(btemp+11)^0,f,c
 45127  001760  D001               	goto	u12458
 45128  001762                     u12440:
 45129  001762  6A35               	clrf	(btemp+11)^0,c
 45130  001764                     u12458:
 45131                           
 45132                           ;stkvar	_state @ sp[(-1)+0]
 45133  001764  0EFF               	movlw	-1
 45134  001766  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 45135                           
 45136                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 45137  00176C  9ED2               	bcf	16338,7,c	;volatile
 45138                           
 45139                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 45140  00176E  0E55               	movlw	85
 45141  001770  6ED4               	movwf	212,c	;volatile
 45142                           
 45143                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 45144  001772  0EAA               	movlw	170
 45145  001774  6ED4               	movwf	212,c	;volatile
 45146                           
 45147                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 45148  001776  90D4               	bcf	212,0,c	;volatile
 45149                           
 45150                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 45151  001778  0138               	movlb	56	; () banked
 45152  00177A  6B9F               	clrf	159,b	;volatile
 45153                           
 45154                           ; BSR set to: 56
 45155                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 45156  00177C  6B9E               	clrf	158,b	;volatile
 45157                           
 45158                           ; BSR set to: 56
 45159                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 45160  00177E  0E08               	movlw	8
 45161  001780  6F9D               	movwf	157,b	;volatile
 45162                           
 45163                           ; BSR set to: 56
 45164                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 45165  001782  0E55               	movlw	85
 45166  001784  6ED4               	movwf	212,c	;volatile
 45167                           
 45168                           ; BSR set to: 56
 45169                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 45170  001786  0EAA               	movlw	170
 45171  001788  6ED4               	movwf	212,c	;volatile
 45172                           
 45173                           ; BSR set to: 56
 45174                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 45175  00178A  80D4               	bsf	212,0,c	;volatile
 45176                           
 45177                           ; BSR set to: 56
 45178                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 45179                           ;stkvar	_state @ sp[(-1)+0]
 45180  00178C  0EFF               	movlw	-1
 45181  00178E  B0E3               	btfsc	plusw1,0,c
 45182  001790  D002               	bra	u12465
 45183  001792  9ED2               	bcf	16338,7,c	;volatile
 45184  001794  D001               	bra	u12466
 45185  001796                     u12465:
 45186  001796  8ED2               	bsf	16338,7,c	;volatile
 45187  001798                     u12466:
 45188                           
 45189                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 45190  001798  0139               	movlb	57	; () banked
 45191  00179A  8782               	bsf	130,3,b	;volatile
 45192                           
 45193                           ; BSR set to: 57
 45194                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 45195  00179C  8382               	bsf	130,1,b	;volatile
 45196                           
 45197                           ; BSR set to: 57
 45198                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 45199  00179E  8182               	bsf	130,0,b	;volatile
 45200                           
 45201                           ; BSR set to: 57
 45202                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 45203  0017A0  8582               	bsf	130,2,b	;volatile
 45204                           
 45205                           ; BSR set to: 57
 45206                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 45207  0017A2  8786               	bsf	134,3,b	;volatile
 45208                           
 45209                           ; BSR set to: 57
 45210                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 45211  0017A4  8586               	bsf	134,2,b	;volatile
 45212                           
 45213                           ; BSR set to: 57
 45214                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 45215  0017A6  8783               	bsf	131,3,b	;volatile
 45216                           
 45217                           ; BSR set to: 57
 45218                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 45219  0017A8  8181               	bsf	129,0,b	;volatile
 45220                           
 45221                           ; BSR set to: 57
 45222                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 45223  0017AA  9185               	bcf	133,0,b	;volatile
 45224                           
 45225                           ; BSR set to: 57
 45226                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 45227  0017AC  8189               	bsf	137,0,b	;volatile
 45228                           
 45229                           ; BSR set to: 57
 45230                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 45231  0017AE  9D88               	bcf	136,6,b	;volatile
 45232                           
 45233                           ; BSR set to: 57
 45234                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR1bits.ADIP = 1;
 45235  0017B0  8581               	bsf	129,2,b	;volatile
 45236                           
 45237                           ; BSR set to: 57
 45238                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADTIP = 1;
 45239  0017B2  8781               	bsf	129,3,b	;volatile
 45240                           
 45241                           ; BSR set to: 57
 45242                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR6bits.TMR3IP = 0;
 45243  0017B4  9D86               	bcf	134,6,b	;volatile
 45244                           
 45245                           ; BSR set to: 57
 45246                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 45247  0017B6  52E5               	movf	postdec1,f,c
 45248  0017B8  0012               	return		;funcret
 45249  0017BA                     __end_of_INTERRUPT_Initialize:
 45250                           	opt callstack 0
 45251                           
 45252 ;; *************** function _FVR_Initialize *****************
 45253 ;; Defined at:
 45254 ;;		line 58 in file "mcc_generated_files/fvr.c"
 45255 ;; Parameters:    Size  Location     Type
 45256 ;;		None
 45257 ;; Auto vars:     Size  Location     Type
 45258 ;;		None
 45259 ;; Return value:  Size  Location     Type
 45260 ;;                  1  [STACK] void 
 45261 ;; Registers used:
 45262 ;;		wreg, status,2
 45263 ;; Tracked objects:
 45264 ;;		On entry : 3F/39
 45265 ;;		On exit  : 3F/3E
 45266 ;;		Unchanged: 0/0
 45267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45272 ;;Total ram usage:        0 bytes
 45273 ;; Hardware stack levels used:    1
 45274 ;; Hardware stack levels required when called:   15
 45275 ;; This function calls:
 45276 ;;		Nothing
 45277 ;; This function is called by:
 45278 ;;		_SYSTEM_Initialize
 45279 ;; This function uses a reentrant model
 45280 ;;
 45281                           
 45282                           	psect	text174
 45283  002AD2                     __ptext174:
 45284                           	opt callstack 0
 45285  002AD2                     _FVR_Initialize:
 45286                           	opt callstack 14
 45287                           
 45288                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 45289                           
 45290                           ; BSR set to: 57
 45291                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45292                           ;incstack = 0
 45293  002AD2  0EAF               	movlw	175
 45294  002AD4  013E               	movlb	62	; () banked
 45295  002AD6  6FC1               	movwf	193,b	;volatile
 45296                           
 45297                           ; BSR set to: 62
 45298                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 45299  002AD8  0012               	return		;funcret
 45300  002ADA                     __end_of_FVR_Initialize:
 45301                           	opt callstack 0
 45302                           
 45303 ;; *************** function _EXT_INT_Initialize *****************
 45304 ;; Defined at:
 45305 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 45306 ;; Parameters:    Size  Location     Type
 45307 ;;		None
 45308 ;; Auto vars:     Size  Location     Type
 45309 ;;		None
 45310 ;; Return value:  Size  Location     Type
 45311 ;;                  1  [STACK] void 
 45312 ;; Registers used:
 45313 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 45314 ;; Tracked objects:
 45315 ;;		On entry : 3F/3F
 45316 ;;		On exit  : 3F/39
 45317 ;;		Unchanged: 0/0
 45318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45323 ;;Total ram usage:        0 bytes
 45324 ;; Hardware stack levels used:    1
 45325 ;; Hardware stack levels required when called:   16
 45326 ;; This function calls:
 45327 ;;		_INT0_SetInterruptHandler
 45328 ;;		_INT1_SetInterruptHandler
 45329 ;; This function is called by:
 45330 ;;		_SYSTEM_Initialize
 45331 ;; This function uses a reentrant model
 45332 ;;
 45333                           
 45334                           	psect	text175
 45335  00228C                     __ptext175:
 45336                           	opt callstack 0
 45337  00228C                     _EXT_INT_Initialize:
 45338                           	opt callstack 13
 45339                           
 45340                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 45341                           
 45342                           ; BSR set to: 62
 45343                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45344                           ;incstack = 0
 45345  00228C  0139               	movlb	57	; () banked
 45346  00228E  91A1               	bcf	161,0,b	;volatile
 45347                           
 45348                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 45349  002290  90D2               	bcf	210,0,c	;volatile
 45350                           
 45351                           ; BSR set to: 57
 45352                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 45353  002292  0E3E               	movlw	low _INT0_DefaultInterruptHandler
 45354  002294  6EE6               	movwf	postinc1,c
 45355  002296  0EDC               	movlw	high _INT0_DefaultInterruptHandler
 45356  002298  6EE6               	movwf	postinc1,c
 45357  00229A  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 45358  00229C  6EE6               	movwf	postinc1,c
 45359  00229E  ECFB  F012         	call	_INT0_SetInterruptHandler	;wreg free
 45360                           
 45361                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 45362  0022A2  0139               	movlb	57	; () banked
 45363  0022A4  8191               	bsf	145,0,b	;volatile
 45364                           
 45365                           ; BSR set to: 57
 45366                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 45367  0022A6  91A5               	bcf	165,0,b	;volatile
 45368                           
 45369                           ; BSR set to: 57
 45370                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 45371  0022A8  92D2               	bcf	210,1,c	;volatile
 45372                           
 45373                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 45374  0022AA  0EFC               	movlw	low _INT1_DefaultInterruptHandler
 45375  0022AC  6EE6               	movwf	postinc1,c
 45376  0022AE  0EFF               	movlw	high _INT1_DefaultInterruptHandler
 45377  0022B0  6EE6               	movwf	postinc1,c
 45378  0022B2  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 45379  0022B4  6EE6               	movwf	postinc1,c
 45380  0022B6  ECE7  F012         	call	_INT1_SetInterruptHandler	;wreg free
 45381                           
 45382                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 45383  0022BA  0139               	movlb	57	; () banked
 45384  0022BC  8195               	bsf	149,0,b	;volatile
 45385                           
 45386                           ; BSR set to: 57
 45387                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 45388  0022BE  0012               	return		;funcret
 45389  0022C0                     __end_of_EXT_INT_Initialize:
 45390                           	opt callstack 0
 45391                           
 45392 ;; *************** function _INT1_SetInterruptHandler *****************
 45393 ;; Defined at:
 45394 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 45395 ;; Parameters:    Size  Location     Type
 45396 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 45397 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 45398 ;; Auto vars:     Size  Location     Type
 45399 ;;		None
 45400 ;; Return value:  Size  Location     Type
 45401 ;;                  1  [STACK] void 
 45402 ;; Registers used:
 45403 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 45404 ;; Tracked objects:
 45405 ;;		On entry : 3F/39
 45406 ;;		On exit  : 0/0
 45407 ;;		Unchanged: 0/0
 45408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45413 ;;Total ram usage:        0 bytes
 45414 ;; Hardware stack levels used:    1
 45415 ;; Hardware stack levels required when called:   15
 45416 ;; This function calls:
 45417 ;;		Nothing
 45418 ;; This function is called by:
 45419 ;;		_EXT_INT_Initialize
 45420 ;;		_start_switch_handler
 45421 ;; This function uses a reentrant model
 45422 ;;
 45423                           
 45424                           	psect	text176
 45425  0025CE                     __ptext176:
 45426                           	opt callstack 0
 45427  0025CE                     _INT1_SetInterruptHandler:
 45428                           	opt callstack 14
 45429                           
 45430                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 45431                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 45432                           
 45433                           ; BSR set to: 57
 45434                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45435                           ;incstack = 0
 45436  0025CE  50E1               	movf	fsr1l,w,c
 45437  0025D0  0FFD               	addlw	-3
 45438  0025D2  6ED9               	movwf	fsr2l,c
 45439  0025D4  50E2               	movf	fsr1h,w,c
 45440  0025D6  6EDA               	movwf	fsr2h,c
 45441  0025D8  0EFF               	movlw	255
 45442  0025DA  22DA               	addwfc	fsr2h,f,c
 45443  0025DC  006F FF78  F0B0    	movff	postinc2,_INT1_InterruptHandler
 45444  0025E2  006F FF78  F0B1    	movff	postinc2,_INT1_InterruptHandler+1
 45445  0025E8  006F FF74  F0B2    	movff	postdec2,_INT1_InterruptHandler+2
 45446                           
 45447                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 45448  0025EE  52E5               	movf	postdec1,f,c
 45449  0025F0  52E5               	movf	postdec1,f,c
 45450  0025F2  52E5               	movf	postdec1,f,c
 45451  0025F4  0012               	return		;funcret
 45452  0025F6                     __end_of_INT1_SetInterruptHandler:
 45453                           	opt callstack 0
 45454                           
 45455 ;; *************** function _INT0_SetInterruptHandler *****************
 45456 ;; Defined at:
 45457 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 45458 ;; Parameters:    Size  Location     Type
 45459 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 45460 ;;		 -> INT0_DefaultInterruptHandler(1), 
 45461 ;; Auto vars:     Size  Location     Type
 45462 ;;		None
 45463 ;; Return value:  Size  Location     Type
 45464 ;;                  1  [STACK] void 
 45465 ;; Registers used:
 45466 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 45467 ;; Tracked objects:
 45468 ;;		On entry : 3F/39
 45469 ;;		On exit  : 0/0
 45470 ;;		Unchanged: 0/0
 45471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45476 ;;Total ram usage:        0 bytes
 45477 ;; Hardware stack levels used:    1
 45478 ;; Hardware stack levels required when called:   15
 45479 ;; This function calls:
 45480 ;;		Nothing
 45481 ;; This function is called by:
 45482 ;;		_EXT_INT_Initialize
 45483 ;; This function uses a reentrant model
 45484 ;;
 45485                           
 45486                           	psect	text177
 45487  0025F6                     __ptext177:
 45488                           	opt callstack 0
 45489  0025F6                     _INT0_SetInterruptHandler:
 45490                           	opt callstack 13
 45491                           
 45492                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 45493                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 45494                           
 45495                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45496                           ;incstack = 0
 45497  0025F6  50E1               	movf	fsr1l,w,c
 45498  0025F8  0FFD               	addlw	-3
 45499  0025FA  6ED9               	movwf	fsr2l,c
 45500  0025FC  50E2               	movf	fsr1h,w,c
 45501  0025FE  6EDA               	movwf	fsr2h,c
 45502  002600  0EFF               	movlw	255
 45503  002602  22DA               	addwfc	fsr2h,f,c
 45504  002604  006F FF78  F0B3    	movff	postinc2,_INT0_InterruptHandler
 45505  00260A  006F FF78  F0B4    	movff	postinc2,_INT0_InterruptHandler+1
 45506  002610  006F FF74  F0B5    	movff	postdec2,_INT0_InterruptHandler+2
 45507                           
 45508                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 45509  002616  52E5               	movf	postdec1,f,c
 45510  002618  52E5               	movf	postdec1,f,c
 45511  00261A  52E5               	movf	postdec1,f,c
 45512  00261C  0012               	return		;funcret
 45513  00261E                     __end_of_INT0_SetInterruptHandler:
 45514                           	opt callstack 0
 45515                           
 45516 ;; *************** function _DMA2_Initialize *****************
 45517 ;; Defined at:
 45518 ;;		line 61 in file "mcc_generated_files/dma2.c"
 45519 ;; Parameters:    Size  Location     Type
 45520 ;;		None
 45521 ;; Auto vars:     Size  Location     Type
 45522 ;;		None
 45523 ;; Return value:  Size  Location     Type
 45524 ;;                  1  [STACK] void 
 45525 ;; Registers used:
 45526 ;;		wreg, status,2
 45527 ;; Tracked objects:
 45528 ;;		On entry : 3F/3D
 45529 ;;		On exit  : 3F/3B
 45530 ;;		Unchanged: 0/0
 45531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45536 ;;Total ram usage:        0 bytes
 45537 ;; Hardware stack levels used:    1
 45538 ;; Hardware stack levels required when called:   15
 45539 ;; This function calls:
 45540 ;;		Nothing
 45541 ;; This function is called by:
 45542 ;;		_SYSTEM_Initialize
 45543 ;; This function uses a reentrant model
 45544 ;;
 45545                           
 45546                           	psect	text178
 45547  001AB8                     __ptext178:
 45548                           	opt callstack 0
 45549  001AB8                     _DMA2_Initialize:
 45550                           	opt callstack 14
 45551                           
 45552                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 45553                           
 45554                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45555                           ;incstack = 0
 45556  001AB8  0E00               	movlw	0
 45557  001ABA  013B               	movlb	59	; () banked
 45558  001ABC  6FD9               	movwf	217,b	;volatile
 45559  001ABE  0E10               	movlw	16
 45560  001AC0  6FDA               	movwf	218,b	;volatile
 45561  001AC2  0E00               	movlw	0
 45562  001AC4  6FDB               	movwf	219,b	;volatile
 45563                           
 45564                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 45565  001AC6  0E3F               	movlw	63
 45566  001AC8  6FD1               	movwf	209,b	;volatile
 45567  001ACA  0EBB               	movlw	187
 45568  001ACC  6FD0               	movwf	208,b	;volatile
 45569                           
 45570                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 45571  001ACE  0E03               	movlw	3
 45572  001AD0  6FDD               	movwf	221,b	;volatile
 45573                           
 45574                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 45575  001AD2  0E00               	movlw	0
 45576  001AD4  6FD8               	movwf	216,b	;volatile
 45577  001AD6  0E01               	movlw	1
 45578  001AD8  6FD7               	movwf	215,b	;volatile
 45579                           
 45580                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 45581  001ADA  0E00               	movlw	0
 45582  001ADC  6FCF               	movwf	207,b	;volatile
 45583  001ADE  0E01               	movlw	1
 45584  001AE0  6FCE               	movwf	206,b	;volatile
 45585                           
 45586                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 45587  001AE2  0E1C               	movlw	28
 45588  001AE4  6FDF               	movwf	223,b	;volatile
 45589                           
 45590                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 45591  001AE6  0E3D               	movlw	61
 45592  001AE8  6FDE               	movwf	222,b	;volatile
 45593                           
 45594                           ; BSR set to: 59
 45595                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 45596  001AEA  0139               	movlb	57	; () banked
 45597  001AEC  97A5               	bcf	165,3,b	;volatile
 45598                           
 45599                           ; BSR set to: 57
 45600                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 45601  001AEE  95A5               	bcf	165,2,b	;volatile
 45602                           
 45603                           ; BSR set to: 57
 45604                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 45605  001AF0  9BA5               	bcf	165,5,b	;volatile
 45606                           
 45607                           ; BSR set to: 57
 45608                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 45609  001AF2  99A5               	bcf	165,4,b	;volatile
 45610                           
 45611                           ; BSR set to: 57
 45612                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 45613  001AF4  9795               	bcf	149,3,b	;volatile
 45614                           
 45615                           ; BSR set to: 57
 45616                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 45617  001AF6  9595               	bcf	149,2,b	;volatile
 45618                           
 45619                           ; BSR set to: 57
 45620                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 45621  001AF8  9B95               	bcf	149,5,b	;volatile
 45622                           
 45623                           ; BSR set to: 57
 45624                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 45625  001AFA  9995               	bcf	149,4,b	;volatile
 45626  001AFC  9ED2               	bcf	16338,7,c	;# 
 45627  001AFE  0139               	banksel	14831	;# 
 45628  001B00  0E55               	movlw	85	;# 
 45629  001B02  6FEF               	movwf	14831,b	;# 
 45630  001B04  0EAA               	movlw	170	;# 
 45631  001B06  6FEF               	movwf	14831,b	;# 
 45632  001B08  81EF               	bsf	14831,0,b	;# 
 45633  001B0A  8ED2               	bsf	16338,7,c	;# 
 45634                           
 45635                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 45636  001B0C  013B               	movlb	59	; () banked
 45637  001B0E  6BDC               	clrf	220,b	;volatile
 45638                           
 45639                           ; BSR set to: 59
 45640                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45641  001B10  0012               	return		;funcret
 45642  001B12                     __end_of_DMA2_Initialize:
 45643                           	opt callstack 0
 45644                           
 45645 ;; *************** function _DMA1_Initialize *****************
 45646 ;; Defined at:
 45647 ;;		line 86 in file "mcc_generated_files/dma1.c"
 45648 ;; Parameters:    Size  Location     Type
 45649 ;;		None
 45650 ;; Auto vars:     Size  Location     Type
 45651 ;;		None
 45652 ;; Return value:  Size  Location     Type
 45653 ;;                  1  [STACK] void 
 45654 ;; Registers used:
 45655 ;;		wreg, status,2
 45656 ;; Tracked objects:
 45657 ;;		On entry : 3F/3B
 45658 ;;		On exit  : 3F/3B
 45659 ;;		Unchanged: 0/0
 45660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45665 ;;Total ram usage:        0 bytes
 45666 ;; Hardware stack levels used:    1
 45667 ;; Hardware stack levels required when called:   15
 45668 ;; This function calls:
 45669 ;;		Nothing
 45670 ;; This function is called by:
 45671 ;;		_SYSTEM_Initialize
 45672 ;; This function uses a reentrant model
 45673 ;;
 45674                           
 45675                           	psect	text179
 45676  001548                     __ptext179:
 45677                           	opt callstack 0
 45678  001548                     _DMA1_Initialize:
 45679                           	opt callstack 14
 45680                           
 45681                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 45682                           
 45683                           ; BSR set to: 59
 45684                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45685                           ;incstack = 0
 45686  001548  0E00               	movlw	0
 45687  00154A  013B               	movlb	59	; () banked
 45688  00154C  6FF9               	movwf	249,b	;volatile
 45689  00154E  0E10               	movlw	16
 45690  001550  6FFA               	movwf	250,b	;volatile
 45691  001552  0E00               	movlw	0
 45692  001554  6FFB               	movwf	251,b	;volatile
 45693                           
 45694                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 45695  001556  0E3D               	movlw	61
 45696  001558  6FF1               	movwf	241,b	;volatile
 45697  00155A  0E11               	movlw	17
 45698  00155C  6FF0               	movwf	240,b	;volatile
 45699                           
 45700                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 45701  00155E  0E03               	movlw	3
 45702  001560  6FFD               	movwf	253,b	;volatile
 45703                           
 45704                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 45705  001562  0E00               	movlw	0
 45706  001564  6FF8               	movwf	248,b	;volatile
 45707  001566  0E01               	movlw	1
 45708  001568  6FF7               	movwf	247,b	;volatile
 45709                           
 45710                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 45711  00156A  0E00               	movlw	0
 45712  00156C  6FEF               	movwf	239,b	;volatile
 45713  00156E  0E01               	movlw	1
 45714  001570  6FEE               	movwf	238,b	;volatile
 45715                           
 45716                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 45717  001572  0E15               	movlw	21
 45718  001574  6FFF               	movwf	255,b	;volatile
 45719                           
 45720                           ; BSR set to: 59
 45721                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 45722  001576  6BFE               	clrf	254,b	;volatile
 45723                           
 45724                           ; BSR set to: 59
 45725                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 45726  001578  0139               	movlb	57	; () banked
 45727  00157A  93A2               	bcf	162,1,b	;volatile
 45728                           
 45729                           ; BSR set to: 57
 45730                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 45731  00157C  91A2               	bcf	162,0,b	;volatile
 45732                           
 45733                           ; BSR set to: 57
 45734                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 45735  00157E  97A2               	bcf	162,3,b	;volatile
 45736                           
 45737                           ; BSR set to: 57
 45738                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 45739  001580  95A2               	bcf	162,2,b	;volatile
 45740                           
 45741                           ; BSR set to: 57
 45742                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 45743  001582  8392               	bsf	146,1,b	;volatile
 45744                           
 45745                           ; BSR set to: 57
 45746                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 45747  001584  8192               	bsf	146,0,b	;volatile
 45748                           
 45749                           ; BSR set to: 57
 45750                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 45751  001586  8792               	bsf	146,3,b	;volatile
 45752                           
 45753                           ; BSR set to: 57
 45754                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 45755  001588  8592               	bsf	146,2,b	;volatile
 45756                           
 45757                           ; BSR set to: 57
 45758                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 45759  00158A  6BF1               	clrf	241,b	;volatile
 45760                           
 45761                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 45762  00158C  0E01               	movlw	1
 45763  00158E  6FF2               	movwf	242,b	;volatile
 45764                           
 45765                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 45766  001590  0E04               	movlw	4
 45767  001592  6FF3               	movwf	243,b	;volatile
 45768                           
 45769                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 45770  001594  0E02               	movlw	2
 45771  001596  6FF4               	movwf	244,b	;volatile
 45772                           
 45773                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 45774  001598  0E03               	movlw	3
 45775  00159A  6FF7               	movwf	247,b	;volatile
 45776  00159C  9ED2               	bcf	16338,7,c	;# 
 45777  00159E  0139               	banksel	14831	;# 
 45778  0015A0  0E55               	movlw	85	;# 
 45779  0015A2  6FEF               	movwf	14831,b	;# 
 45780  0015A4  0EAA               	movlw	170	;# 
 45781  0015A6  6FEF               	movwf	14831,b	;# 
 45782  0015A8  81EF               	bsf	14831,0,b	;# 
 45783  0015AA  8ED2               	bsf	16338,7,c	;# 
 45784                           
 45785                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 45786  0015AC  013B               	movlb	59	; () banked
 45787  0015AE  6BFC               	clrf	252,b	;volatile
 45788                           
 45789                           ; BSR set to: 59
 45790                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45791  0015B0  0012               	return		;funcret
 45792  0015B2                     __end_of_DMA1_Initialize:
 45793                           	opt callstack 0
 45794                           
 45795 ;; *************** function _CRC_Initialize *****************
 45796 ;; Defined at:
 45797 ;;		line 76 in file "mcc_generated_files/crc.c"
 45798 ;; Parameters:    Size  Location     Type
 45799 ;;		None
 45800 ;; Auto vars:     Size  Location     Type
 45801 ;;  seed            2  [STACK] unsigned short 
 45802 ;;  poly            2  [STACK] unsigned short 
 45803 ;; Return value:  Size  Location     Type
 45804 ;;                  1  [STACK] void 
 45805 ;; Registers used:
 45806 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 45807 ;; Tracked objects:
 45808 ;;		On entry : 0/39
 45809 ;;		On exit  : 3F/0
 45810 ;;		Unchanged: 0/0
 45811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45816 ;;Total ram usage:        0 bytes
 45817 ;; Hardware stack levels used:    1
 45818 ;; Hardware stack levels required when called:   15
 45819 ;; This function calls:
 45820 ;;		Nothing
 45821 ;; This function is called by:
 45822 ;;		_SYSTEM_Initialize
 45823 ;;		_read_cal_data
 45824 ;;		_write_cal_data
 45825 ;; This function uses a reentrant model
 45826 ;;
 45827                           
 45828                           	psect	text180
 45829  001044                     __ptext180:
 45830                           	opt callstack 0
 45831  001044                     _CRC_Initialize:
 45832                           	opt callstack 0
 45833                           
 45834                           ; BSR set to: 59
 45835                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45836  001044  52E6               	movf	postinc1,f,c
 45837  001046  52E6               	movf	postinc1,f,c
 45838  001048  52E6               	movf	postinc1,f,c
 45839  00104A  52E6               	movf	postinc1,f,c
 45840                           
 45841                           ;mcc_generated_files/crc.c: 78:     uint16_t poly;;mcc_generated_files/crc.c: 79:     ui
      +                          nt16_t seed;;mcc_generated_files/crc.c: 82:     CRCCON0 = 0x80;
 45842                           
 45843                           ;incstack = 0
 45844  00104C  0E80               	movlw	128
 45845  00104E  0139               	movlb	57	; () banked
 45846  001050  6F68               	movwf	104,b	;volatile
 45847                           
 45848                           ;mcc_generated_files/crc.c: 84:     CRCCON1 = (0 << 4) | (7);
 45849  001052  0E07               	movlw	7
 45850  001054  6F69               	movwf	105,b	;volatile
 45851                           
 45852                           ; BSR set to: 57
 45853                           ;mcc_generated_files/crc.c: 86:     CRCACCL = 0x00;
 45854  001056  6B62               	clrf	98,b	;volatile
 45855                           
 45856                           ; BSR set to: 57
 45857                           ;mcc_generated_files/crc.c: 88:     CRCACCH = 0x00;
 45858  001058  6B63               	clrf	99,b	;volatile
 45859                           
 45860                           ; BSR set to: 57
 45861                           ;mcc_generated_files/crc.c: 90:     SCANCON0 = 0x00;
 45862  00105A  6B7C               	clrf	124,b	;volatile
 45863                           
 45864                           ; BSR set to: 57
 45865                           ;mcc_generated_files/crc.c: 92:     SCANLADRU = 0x00;
 45866  00105C  6B78               	clrf	120,b	;volatile
 45867                           
 45868                           ; BSR set to: 57
 45869                           ;mcc_generated_files/crc.c: 94:     SCANLADRH = 0x00;
 45870  00105E  6B77               	clrf	119,b	;volatile
 45871                           
 45872                           ; BSR set to: 57
 45873                           ;mcc_generated_files/crc.c: 96:     SCANLADRL = 0x00;
 45874  001060  6B76               	clrf	118,b	;volatile
 45875                           
 45876                           ;mcc_generated_files/crc.c: 98:     SCANHADRU = 0x3F;
 45877  001062  0E3F               	movlw	63
 45878  001064  6F7B               	movwf	123,b	;volatile
 45879                           
 45880                           ; BSR set to: 57
 45881                           ;mcc_generated_files/crc.c: 100:     SCANHADRH = 0xFF;
 45882  001066  697A               	setf	122,b	;volatile
 45883                           
 45884                           ; BSR set to: 57
 45885                           ;mcc_generated_files/crc.c: 102:     SCANHADRL = 0xFF;
 45886  001068  6979               	setf	121,b	;volatile
 45887                           
 45888                           ; BSR set to: 57
 45889                           ;mcc_generated_files/crc.c: 104:     SCANTRIG = 0x00;
 45890  00106A  6B7D               	clrf	125,b	;volatile
 45891                           
 45892                           ; BSR set to: 57
 45893                           ;mcc_generated_files/crc.c: 106:     poly = 213;
 45894  00106C  0ED5               	movlw	213
 45895  00106E  6E34               	movwf	(btemp+10)^0,c
 45896  001070  0E00               	movlw	0
 45897  001072  6E35               	movwf	(btemp+11)^0,c
 45898                           
 45899                           ;stkvar	_poly @ sp[(-4)+2]
 45900  001074  0EFE               	movlw	-2
 45901  001076  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 45902  00107C  0EFF               	movlw	-1
 45903  00107E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 45904                           
 45905                           ; BSR set to: 57
 45906                           ;mcc_generated_files/crc.c: 107:     CRCXORH = poly >> 8;
 45907                           ;stkvar	_poly @ sp[(-4)+2]
 45908  001084  0EFF               	movlw	255
 45909  001086  24E1               	addwf	fsr1l,w,c
 45910  001088  6ED9               	movwf	fsr2l,c
 45911  00108A  0EFF               	movlw	255
 45912  00108C  20E2               	addwfc	fsr1h,w,c
 45913  00108E  6EDA               	movwf	fsr2h,c
 45914  001090  50DF               	movf	indf2,w,c
 45915  001092  6F67               	movwf	103,b	;volatile
 45916                           
 45917                           ; BSR set to: 57
 45918                           ;mcc_generated_files/crc.c: 108:     CRCXORL = poly;
 45919  001094  0ED5               	movlw	213
 45920  001096  6F66               	movwf	102,b	;volatile
 45921                           
 45922                           ; BSR set to: 57
 45923                           ;mcc_generated_files/crc.c: 110:     seed = 0;
 45924                           ;stkvar	_seed @ sp[(-4)+0]
 45925  001098  0EFC               	movlw	-4
 45926  00109A  6AE3               	clrf	plusw1,c
 45927  00109C  0EFD               	movlw	-3
 45928  00109E  6AE3               	clrf	plusw1,c
 45929                           
 45930                           ; BSR set to: 57
 45931                           ;mcc_generated_files/crc.c: 112:     CRCACCH = seed >> 8;
 45932                           ;stkvar	_seed @ sp[(-4)+0]
 45933  0010A0  0EFD               	movlw	253
 45934  0010A2  24E1               	addwf	fsr1l,w,c
 45935  0010A4  6ED9               	movwf	fsr2l,c
 45936  0010A6  0EFF               	movlw	255
 45937  0010A8  20E2               	addwfc	fsr1h,w,c
 45938  0010AA  6EDA               	movwf	fsr2h,c
 45939  0010AC  50DF               	movf	indf2,w,c
 45940  0010AE  6F63               	movwf	99,b	;volatile
 45941                           
 45942                           ; BSR set to: 57
 45943                           ;mcc_generated_files/crc.c: 113:     CRCACCL = seed;
 45944  0010B0  6B62               	clrf	98,b	;volatile
 45945                           
 45946                           ; BSR set to: 57
 45947                           ;mcc_generated_files/crc.c: 115:     crcObj.dataWidth = (uint8_t)(CRCCON1bits.DLEN + 1);
 45948  0010B2  3969               	swapf	105,w,b	;volatile
 45949  0010B4  0B0F               	andlw	15
 45950  0010B6  6E35               	movwf	(btemp+11)^0,c
 45951  0010B8  2835               	incf	(btemp+11)^0,w,c
 45952  0010BA  0100               	movlb	0	; () banked
 45953  0010BC  6FE2               	movwf	_crcObj& (0+255),b
 45954                           
 45955                           ; BSR set to: 0
 45956                           ;mcc_generated_files/crc.c: 116:     crcObj.polyWidth = (uint8_t)(CRCCON1bits.PLEN + 1);
 45957  0010BE  0139               	movlb	57	; () banked
 45958  0010C0  5169               	movf	105,w,b	;volatile
 45959  0010C2  0B0F               	andlw	15
 45960  0010C4  6E35               	movwf	(btemp+11)^0,c
 45961  0010C6  2835               	incf	(btemp+11)^0,w,c
 45962  0010C8  0100               	movlb	0	; () banked
 45963  0010CA  6FE3               	movwf	(_crcObj+1)& (0+255),b
 45964                           
 45965                           ; BSR set to: 0
 45966                           ; _CRC_Initialize: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 45967  0010CC  52E5               	movf	postdec1,f,c
 45968  0010CE  52E5               	movf	postdec1,f,c
 45969  0010D0  52E5               	movf	postdec1,f,c
 45970  0010D2  52E5               	movf	postdec1,f,c
 45971  0010D4  0012               	return		;funcret
 45972  0010D6                     __end_of_CRC_Initialize:
 45973                           	opt callstack 0
 45974                           
 45975 ;; *************** function _CLKREF_Initialize *****************
 45976 ;; Defined at:
 45977 ;;		line 58 in file "mcc_generated_files/clkref.c"
 45978 ;; Parameters:    Size  Location     Type
 45979 ;;		None
 45980 ;; Auto vars:     Size  Location     Type
 45981 ;;		None
 45982 ;; Return value:  Size  Location     Type
 45983 ;;                  1  [STACK] void 
 45984 ;; Registers used:
 45985 ;;		wreg, status,2
 45986 ;; Tracked objects:
 45987 ;;		On entry : 3F/3B
 45988 ;;		On exit  : 3F/3C
 45989 ;;		Unchanged: 0/0
 45990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45995 ;;Total ram usage:        0 bytes
 45996 ;; Hardware stack levels used:    1
 45997 ;; Hardware stack levels required when called:   15
 45998 ;; This function calls:
 45999 ;;		Nothing
 46000 ;; This function is called by:
 46001 ;;		_SYSTEM_Initialize
 46002 ;; This function uses a reentrant model
 46003 ;;
 46004                           
 46005                           	psect	text181
 46006  002A7A                     __ptext181:
 46007                           	opt callstack 0
 46008  002A7A                     _CLKREF_Initialize:
 46009                           	opt callstack 14
 46010                           
 46011                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 46012                           
 46013                           ; BSR set to: 0
 46014                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46015                           ;incstack = 0
 46016  002A7A  013C               	movlb	60	; () banked
 46017  002A7C  6BE6               	clrf	230,b	;volatile
 46018                           
 46019                           ; BSR set to: 60
 46020                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 46021  002A7E  0E94               	movlw	148
 46022  002A80  6FE5               	movwf	229,b	;volatile
 46023                           
 46024                           ; BSR set to: 60
 46025                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 46026  002A82  0012               	return		;funcret
 46027  002A84                     __end_of_CLKREF_Initialize:
 46028                           	opt callstack 0
 46029                           
 46030 ;; *************** function _ADCC_Initialize *****************
 46031 ;; Defined at:
 46032 ;;		line 65 in file "mcc_generated_files/adcc.c"
 46033 ;; Parameters:    Size  Location     Type
 46034 ;;		None
 46035 ;; Auto vars:     Size  Location     Type
 46036 ;;		None
 46037 ;; Return value:  Size  Location     Type
 46038 ;;                  1  [STACK] void 
 46039 ;; Registers used:
 46040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 46041 ;; Tracked objects:
 46042 ;;		On entry : 3F/0
 46043 ;;		On exit  : 0/0
 46044 ;;		Unchanged: 0/0
 46045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46050 ;;Total ram usage:        0 bytes
 46051 ;; Hardware stack levels used:    1
 46052 ;; Hardware stack levels required when called:   16
 46053 ;; This function calls:
 46054 ;;		_ADCC_SetADIInterruptHandler
 46055 ;;		_ADCC_SetADTIInterruptHandler
 46056 ;; This function is called by:
 46057 ;;		_SYSTEM_Initialize
 46058 ;; This function uses a reentrant model
 46059 ;;
 46060                           
 46061                           	psect	text182
 46062  0015B2                     __ptext182:
 46063                           	opt callstack 0
 46064  0015B2                     _ADCC_Initialize:
 46065                           	opt callstack 13
 46066                           
 46067                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 46068                           
 46069                           ; BSR set to: 60
 46070                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46071                           ;incstack = 0
 46072  0015B2  013E               	movlb	62	; () banked
 46073  0015B4  6BDE               	clrf	222,b	;volatile
 46074                           
 46075                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 46076  0015B6  6BDF               	clrf	223,b	;volatile
 46077                           
 46078                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 46079  0015B8  6BE0               	clrf	224,b	;volatile
 46080                           
 46081                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 46082  0015BA  6BE1               	clrf	225,b	;volatile
 46083                           
 46084                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 46085  0015BC  6BE4               	clrf	228,b	;volatile
 46086                           
 46087                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 46088  0015BE  6BE5               	clrf	229,b	;volatile
 46089                           
 46090                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 46091  0015C0  6BEA               	clrf	234,b	;volatile
 46092                           
 46093                           ; BSR set to: 62
 46094                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 46095  0015C2  0E40               	movlw	64
 46096  0015C4  6FEC               	movwf	236,b	;volatile
 46097                           
 46098                           ; BSR set to: 62
 46099                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 46100  0015C6  6BF1               	clrf	241,b	;volatile
 46101                           
 46102                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 46103  0015C8  0E20               	movlw	32
 46104  0015CA  6FF3               	movwf	243,b	;volatile
 46105                           
 46106                           ; BSR set to: 62
 46107                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 46108  0015CC  6BF4               	clrf	244,b	;volatile
 46109                           
 46110                           ; BSR set to: 62
 46111                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 46112  0015CE  6BF5               	clrf	245,b	;volatile
 46113                           
 46114                           ; BSR set to: 62
 46115                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 46116  0015D0  6BF6               	clrf	246,b	;volatile
 46117                           
 46118                           ; BSR set to: 62
 46119                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 46120  0015D2  6BF7               	clrf	247,b	;volatile
 46121                           
 46122                           ; BSR set to: 62
 46123                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 46124  0015D4  6BF9               	clrf	249,b	;volatile
 46125                           
 46126                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 46127  0015D6  0E5B               	movlw	91
 46128  0015D8  6FFA               	movwf	250,b	;volatile
 46129                           
 46130                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 46131  0015DA  0E27               	movlw	39
 46132  0015DC  6FFB               	movwf	251,b	;volatile
 46133                           
 46134                           ; BSR set to: 62
 46135                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 46136  0015DE  6BFC               	clrf	252,b	;volatile
 46137                           
 46138                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 46139  0015E0  0E02               	movlw	2
 46140  0015E2  6FFD               	movwf	253,b	;volatile
 46141                           
 46142                           ; BSR set to: 62
 46143                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 46144  0015E4  6BFE               	clrf	254,b	;volatile
 46145                           
 46146                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 46147  0015E6  0E07               	movlw	7
 46148  0015E8  6FFF               	movwf	255,b	;volatile
 46149                           
 46150                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 46151  0015EA  0E84               	movlw	132
 46152  0015EC  6FF8               	movwf	248,b	;volatile
 46153                           
 46154                           ; BSR set to: 62
 46155                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 46156  0015EE  0139               	movlb	57	; () banked
 46157  0015F0  95A1               	bcf	161,2,b	;volatile
 46158                           
 46159                           ; BSR set to: 57
 46160                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 46161  0015F2  8591               	bsf	145,2,b	;volatile
 46162                           
 46163                           ; BSR set to: 57
 46164                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 46165  0015F4  0E06               	movlw	low _ADCC_DefaultInterruptHandler
 46166  0015F6  6EE6               	movwf	postinc1,c
 46167  0015F8  0E2B               	movlw	high _ADCC_DefaultInterruptHandler
 46168  0015FA  6EE6               	movwf	postinc1,c
 46169  0015FC  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 46170  0015FE  6EE6               	movwf	postinc1,c
 46171  001600  EC23  F013         	call	_ADCC_SetADIInterruptHandler	;wreg free
 46172                           
 46173                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 46174  001604  0139               	movlb	57	; () banked
 46175  001606  97A1               	bcf	161,3,b	;volatile
 46176                           
 46177                           ; BSR set to: 57
 46178                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 46179  001608  8791               	bsf	145,3,b	;volatile
 46180                           
 46181                           ; BSR set to: 57
 46182                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 46183  00160A  0E06               	movlw	low _ADCC_DefaultInterruptHandler
 46184  00160C  6EE6               	movwf	postinc1,c
 46185  00160E  0E2B               	movlw	high _ADCC_DefaultInterruptHandler
 46186  001610  6EE6               	movwf	postinc1,c
 46187  001612  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 46188  001614  6EE6               	movwf	postinc1,c
 46189  001616  EC0F  F013         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 46190                           
 46191                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 46192  00161A  0012               	return		;funcret
 46193  00161C                     __end_of_ADCC_Initialize:
 46194                           	opt callstack 0
 46195                           
 46196 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 46197 ;; Defined at:
 46198 ;;		line 336 in file "mcc_generated_files/adcc.c"
 46199 ;; Parameters:    Size  Location     Type
 46200 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 46201 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 46202 ;; Auto vars:     Size  Location     Type
 46203 ;;		None
 46204 ;; Return value:  Size  Location     Type
 46205 ;;                  1  [STACK] void 
 46206 ;; Registers used:
 46207 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 46208 ;; Tracked objects:
 46209 ;;		On entry : 0/1
 46210 ;;		On exit  : 0/0
 46211 ;;		Unchanged: 0/0
 46212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46217 ;;Total ram usage:        0 bytes
 46218 ;; Hardware stack levels used:    1
 46219 ;; Hardware stack levels required when called:   15
 46220 ;; This function calls:
 46221 ;;		Nothing
 46222 ;; This function is called by:
 46223 ;;		_ADCC_Initialize
 46224 ;;		_start_adc_scan
 46225 ;; This function uses a reentrant model
 46226 ;;
 46227                           
 46228                           	psect	text183
 46229  00261E                     __ptext183:
 46230                           	opt callstack 0
 46231  00261E                     _ADCC_SetADTIInterruptHandler:
 46232                           	opt callstack 14
 46233                           
 46234                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 46235                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 46236                           
 46237                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46238                           ;incstack = 0
 46239  00261E  50E1               	movf	fsr1l,w,c
 46240  002620  0FFD               	addlw	-3
 46241  002622  6ED9               	movwf	fsr2l,c
 46242  002624  50E2               	movf	fsr1h,w,c
 46243  002626  6EDA               	movwf	fsr2h,c
 46244  002628  0EFF               	movlw	255
 46245  00262A  22DA               	addwfc	fsr2h,f,c
 46246  00262C  006F FF78  F0A1    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 46247  002632  006F FF78  F0A2    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 46248  002638  006F FF74  F0A3    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 46249                           
 46250                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 46251  00263E  52E5               	movf	postdec1,f,c
 46252  002640  52E5               	movf	postdec1,f,c
 46253  002642  52E5               	movf	postdec1,f,c
 46254  002644  0012               	return		;funcret
 46255  002646                     __end_of_ADCC_SetADTIInterruptHandler:
 46256                           	opt callstack 0
 46257                           
 46258 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 46259 ;; Defined at:
 46260 ;;		line 323 in file "mcc_generated_files/adcc.c"
 46261 ;; Parameters:    Size  Location     Type
 46262 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 46263 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 46264 ;; Auto vars:     Size  Location     Type
 46265 ;;		None
 46266 ;; Return value:  Size  Location     Type
 46267 ;;                  1  [STACK] void 
 46268 ;; Registers used:
 46269 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 46270 ;; Tracked objects:
 46271 ;;		On entry : 7/1
 46272 ;;		On exit  : 0/0
 46273 ;;		Unchanged: 0/0
 46274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46279 ;;Total ram usage:        0 bytes
 46280 ;; Hardware stack levels used:    1
 46281 ;; Hardware stack levels required when called:   15
 46282 ;; This function calls:
 46283 ;;		Nothing
 46284 ;; This function is called by:
 46285 ;;		_ADCC_Initialize
 46286 ;;		_start_adc_scan
 46287 ;; This function uses a reentrant model
 46288 ;;
 46289                           
 46290                           	psect	text184
 46291  002646                     __ptext184:
 46292                           	opt callstack 0
 46293  002646                     _ADCC_SetADIInterruptHandler:
 46294                           	opt callstack 14
 46295                           
 46296                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 46297                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 46298                           
 46299                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46300                           ;incstack = 0
 46301  002646  50E1               	movf	fsr1l,w,c
 46302  002648  0FFD               	addlw	-3
 46303  00264A  6ED9               	movwf	fsr2l,c
 46304  00264C  50E2               	movf	fsr1h,w,c
 46305  00264E  6EDA               	movwf	fsr2h,c
 46306  002650  0EFF               	movlw	255
 46307  002652  22DA               	addwfc	fsr2h,f,c
 46308  002654  006F FF78  F0A4    	movff	postinc2,_ADCC_ADI_InterruptHandler
 46309  00265A  006F FF78  F0A5    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 46310  002660  006F FF74  F0A6    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 46311                           
 46312                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 46313  002666  52E5               	movf	postdec1,f,c
 46314  002668  52E5               	movf	postdec1,f,c
 46315  00266A  52E5               	movf	postdec1,f,c
 46316  00266C  0012               	return		;funcret
 46317  00266E                     __end_of_ADCC_SetADIInterruptHandler:
 46318                           	opt callstack 0
 46319                           
 46320 ;; *************** function _INT1_ISR *****************
 46321 ;; Defined at:
 46322 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 46323 ;; Parameters:    Size  Location     Type
 46324 ;;		None
 46325 ;; Auto vars:     Size  Location     Type
 46326 ;;		None
 46327 ;; Return value:  Size  Location     Type
 46328 ;;                  1    wreg      void 
 46329 ;; Registers used:
 46330 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 46331 ;; Tracked objects:
 46332 ;;		On entry : 0/0
 46333 ;;		On exit  : 0/0
 46334 ;;		Unchanged: 0/0
 46335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46338 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46339 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46340 ;;Total ram usage:        4 bytes
 46341 ;; Hardware stack levels used:    1
 46342 ;; Hardware stack levels required when called:    5
 46343 ;; This function calls:
 46344 ;;		_INT1_CallBack
 46345 ;; This function is called by:
 46346 ;;		Interrupt level 1
 46347 ;; This function uses a non-reentrant model
 46348 ;;
 46349                           
 46350                           	psect	text185
 46351  002060                     __ptext185:
 46352                           	opt callstack 0
 46353  002060                     _INT1_ISR:
 46354                           	opt callstack 12
 46355                           
 46356                           ;incstack = 0
 46357  002060  006F FF60  F007    	movff	status,??_INT1_ISR
 46358  002066  0060  F0A8  F008   	movff	btemp,??_INT1_ISR+1
 46359  00206C  0060  F0D0  F009   	movff	btemp+10,??_INT1_ISR+2
 46360  002072  0060  F0D4  F00A   	movff	btemp+11,??_INT1_ISR+3
 46361  002078  EE16  F196         	lfsr	1,___intlo_sp
 46362                           
 46363                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 46364  00207C  0139               	movlb	57	; () banked
 46365  00207E  91A5               	bcf	165,0,b	;volatile
 46366                           
 46367                           ; BSR set to: 57
 46368                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 46369  002080  EC86  F013         	call	_INT1_CallBack	;wreg free
 46370  002084  0060  F028  F035   	movff	??_INT1_ISR+3,btemp+11
 46371  00208A  0060  F024  F034   	movff	??_INT1_ISR+2,btemp+10
 46372  002090  0060  F020  F02A   	movff	??_INT1_ISR+1,btemp
 46373  002096  0060  F01F  FFD8   	movff	??_INT1_ISR,status
 46374  00209C  0011               	retfie		f
 46375  00209E                     __end_of_INT1_ISR:
 46376                           	opt callstack 0
 46377                           
 46378 ;; *************** function _INT1_CallBack *****************
 46379 ;; Defined at:
 46380 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 46381 ;; Parameters:    Size  Location     Type
 46382 ;;		None
 46383 ;; Auto vars:     Size  Location     Type
 46384 ;;		None
 46385 ;; Return value:  Size  Location     Type
 46386 ;;                  1  [STACK] void 
 46387 ;; Registers used:
 46388 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 46389 ;; Tracked objects:
 46390 ;;		On entry : 3F/39
 46391 ;;		On exit  : 0/0
 46392 ;;		Unchanged: 0/0
 46393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46398 ;;Total ram usage:        0 bytes
 46399 ;; Hardware stack levels used:    1
 46400 ;; Hardware stack levels required when called:    4
 46401 ;; This function calls:
 46402 ;;		Absolute function
 46403 ;;		_INT1_DefaultInterruptHandler
 46404 ;;		_switch_handler
 46405 ;; This function is called by:
 46406 ;;		_INT1_ISR
 46407 ;; This function uses a reentrant model
 46408 ;;
 46409                           
 46410                           	psect	text186
 46411  00270C                     __ptext186:
 46412                           	opt callstack 0
 46413  00270C                     _INT1_CallBack:
 46414                           	opt callstack 12
 46415                           
 46416                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 46417                           
 46418                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46419                           ;incstack = 0
 46420  00270C  0100               	movlb	0	; () banked
 46421  00270E  51B0               	movf	_INT1_InterruptHandler& (0+255),w,b
 46422  002710  11B1               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 46423  002712  11B2               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 46424  002714  B4D8               	btfsc	status,2,c
 46425  002716  0012               	return	
 46426                           
 46427                           ; BSR set to: 0
 46428                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 46429  002718  D801               	call	u1315_28
 46430  00271A  0012               	return	
 46431  00271C                     u1315_28:
 46432  00271C  0005               	push	
 46433  00271E  6EFA               	movwf	pclath,c
 46434  002720  51B0               	movf	_INT1_InterruptHandler& (0+255),w,b
 46435  002722  6EFD               	movwf	tosl,c
 46436  002724  51B1               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 46437  002726  6EFE               	movwf	tosh,c
 46438  002728  51B2               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 46439  00272A  6EFF               	movwf	tosu,c
 46440  00272C  50FA               	movf	pclath,w,c
 46441  00272E  0012               	return		;indir
 46442  002730                     __end_of_INT1_CallBack:
 46443                           	opt callstack 0
 46444                           
 46445 ;; *************** function _INT1_DefaultInterruptHandler *****************
 46446 ;; Defined at:
 46447 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 46448 ;; Parameters:    Size  Location     Type
 46449 ;;		None
 46450 ;; Auto vars:     Size  Location     Type
 46451 ;;		None
 46452 ;; Return value:  Size  Location     Type
 46453 ;;                  1  [STACK] void 
 46454 ;; Registers used:
 46455 ;;		None
 46456 ;; Tracked objects:
 46457 ;;		On entry : 3F/0
 46458 ;;		On exit  : 0/0
 46459 ;;		Unchanged: 0/0
 46460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46465 ;;Total ram usage:        0 bytes
 46466 ;; Hardware stack levels used:    1
 46467 ;; Hardware stack levels required when called:    3
 46468 ;; This function calls:
 46469 ;;		Nothing
 46470 ;; This function is called by:
 46471 ;;		_EXT_INT_Initialize
 46472 ;;		_INT1_CallBack
 46473 ;; This function uses a reentrant model
 46474 ;;
 46475                           
 46476                           	psect	text187
 46477  01FFFC                     __ptext187:
 46478                           	opt callstack 0
 46479  01FFFC                     _INT1_DefaultInterruptHandler:
 46480                           	opt callstack 12
 46481                           
 46482                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 46483                           
 46484                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46485                           ;incstack = 0
 46486  01FFFC  0012               	return		;funcret
 46487  01FFFE                     __end_of_INT1_DefaultInterruptHandler:
 46488                           	opt callstack 0
 46489                           
 46490 ;; *************** function _switch_handler *****************
 46491 ;; Defined at:
 46492 ;;		line 58 in file "dio.c"
 46493 ;; Parameters:    Size  Location     Type
 46494 ;;		None
 46495 ;; Auto vars:     Size  Location     Type
 46496 ;;  i               1  [STACK] unsigned char 
 46497 ;;  sw_value        1  [STACK] unsigned char 
 46498 ;; Return value:  Size  Location     Type
 46499 ;;                  1  [STACK] void 
 46500 ;; Registers used:
 46501 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 46502 ;; Tracked objects:
 46503 ;;		On entry : 3F/0
 46504 ;;		On exit  : 0/0
 46505 ;;		Unchanged: 0/0
 46506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46511 ;;Total ram usage:        0 bytes
 46512 ;; Hardware stack levels used:    1
 46513 ;; Hardware stack levels required when called:    3
 46514 ;; This function calls:
 46515 ;;		Nothing
 46516 ;; This function is called by:
 46517 ;;		_start_switch_handler
 46518 ;;		_INT1_CallBack
 46519 ;; This function uses a reentrant model
 46520 ;;
 46521                           
 46522                           	psect	text188
 46523  01F20E                     __ptext188:
 46524                           	opt callstack 0
 46525  01F20E                     _switch_handler:
 46526                           	opt callstack 0
 46527                           
 46528                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46529  01F20E  52E6               	movf	postinc1,f,c
 46530  01F210  52E6               	movf	postinc1,f,c
 46531                           
 46532                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 46533                           ;stkvar	_i @ sp[(-2)+0]
 46534                           
 46535                           ;incstack = 0
 46536  01F212  0EFE               	movlw	-2
 46537  01F214  6AE3               	clrf	plusw1,c
 46538  01F216  9ABF               	bcf	191,5,c	;volatile
 46539                           
 46540                           ;dio.c: 72:  __nop();
 46541  01F218  F000               	nop	
 46542                           
 46543                           ;dio.c: 73:  __nop();
 46544  01F21A  F000               	nop	
 46545                           
 46546                           ;dio.c: 74:  __nop();
 46547  01F21C  F000               	nop	
 46548                           
 46549                           ;dio.c: 75:  __nop();
 46550  01F21E  F000               	nop	
 46551                           
 46552                           ;dio.c: 76:  __nop();
 46553  01F220  F000               	nop	
 46554                           
 46555                           ;dio.c: 77:  __nop();
 46556  01F222  F000               	nop	
 46557  01F224  D016               	goto	l13750
 46558  01F226                     l13736:
 46559                           
 46560                           ;dio.c: 82:    sw_value = PORTFbits.RF3;
 46561  01F226  A6CF               	btfss	207,3,c	;volatile
 46562  01F228  D00E               	goto	u1281_20
 46563  01F22A  D00A               	goto	u1281_21
 46564  01F22C                     u1279_28:
 46565                           
 46566                           ;stkvar	_sw_value @ sp[(-2)+1]
 46567  01F22C  0EFF               	movlw	-1
 46568  01F22E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 46569                           
 46570                           ;dio.c: 83:    break;
 46571  01F234  D027               	goto	l13752
 46572  01F236                     l13738:
 46573                           
 46574                           ;dio.c: 85:    sw_value = PORTFbits.RF2;
 46575  01F236  A4CF               	btfss	207,2,c	;volatile
 46576  01F238  D006               	goto	u1281_20
 46577  01F23A  D002               	goto	u1281_21
 46578  01F23C                     l13740:
 46579                           
 46580                           ;dio.c: 88:    sw_value = PORTDbits.RD3;
 46581  01F23C  A6CD               	btfss	205,3,c	;volatile
 46582  01F23E  D003               	goto	u1281_20
 46583  01F240                     u1281_21:
 46584  01F240  6A35               	clrf	(btemp+11)^0,c
 46585  01F242  2A35               	incf	(btemp+11)^0,f,c
 46586  01F244  D7F3               	goto	u1279_28
 46587  01F246                     u1281_20:
 46588  01F246  6A35               	clrf	(btemp+11)^0,c
 46589  01F248  D7F1               	goto	u1279_28
 46590  01F24A                     l13742:
 46591                           
 46592                           ;dio.c: 91:    sw_value = 1;
 46593                           ;stkvar	_sw_value @ sp[(-2)+1]
 46594  01F24A  0EFF               	movlw	-1
 46595  01F24C  6AE3               	clrf	plusw1,c
 46596  01F24E  2AE3               	incf	plusw1,f,c
 46597                           
 46598                           ;dio.c: 92:    break;
 46599  01F250  D019               	goto	l13752
 46600  01F252                     l13750:
 46601                           
 46602                           ;stkvar	_i @ sp[(-2)+0]
 46603  01F252  0EFE               	movlw	-2
 46604  01F254  50E3               	movf	plusw1,w,c
 46605  01F256  6E34               	movwf	(btemp+10)^0,c
 46606  01F258  6A35               	clrf	(btemp+11)^0,c
 46607                           
 46608                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 46609                           ; Switch size 1, requested type "simple"
 46610                           ; Number of cases is 1, Range of values is 0 to 0
 46611                           ; switch strategies available:
 46612                           ; Name         Instructions Cycles
 46613                           ; simple_byte            4     3 (average)
 46614                           ;	Chosen strategy is simple_byte
 46615  01F25A  5035               	movf	(btemp+11)^0,w,c
 46616  01F25C  0A00               	xorlw	0	; case 0
 46617  01F25E  A4D8               	btfss	status,2,c
 46618  01F260  D7F4               	goto	l13742
 46619                           
 46620                           ; Switch size 1, requested type "simple"
 46621                           ; Number of cases is 5, Range of values is 0 to 4
 46622                           ; switch strategies available:
 46623                           ; Name         Instructions Cycles
 46624                           ; simple_byte           16     9 (average)
 46625                           ;	Chosen strategy is simple_byte
 46626  01F262  5034               	movf	(btemp+10)^0,w,c
 46627  01F264  0A00               	xorlw	0	; case 0
 46628  01F266  B4D8               	btfsc	status,2,c
 46629  01F268  D7F0               	goto	l13742
 46630  01F26A  0A01               	xorlw	1	; case 1
 46631  01F26C  B4D8               	btfsc	status,2,c
 46632  01F26E  D7ED               	goto	l13742
 46633  01F270  0A03               	xorlw	3	; case 2
 46634  01F272  B4D8               	btfsc	status,2,c
 46635  01F274  D7E0               	goto	l13738
 46636  01F276  0A01               	xorlw	1	; case 3
 46637  01F278  B4D8               	btfsc	status,2,c
 46638  01F27A  D7D5               	goto	l13736
 46639  01F27C  0A07               	xorlw	7	; case 4
 46640  01F27E  B4D8               	btfsc	status,2,c
 46641  01F280  D7DD               	goto	l13740
 46642  01F282  D7E3               	goto	l13742
 46643  01F284                     l13752:
 46644                           
 46645                           ;dio.c: 102:   if (sw_value) {
 46646                           ;stkvar	_sw_value @ sp[(-2)+1]
 46647  01F284  0EFF               	movlw	-1
 46648  01F286  50E3               	movf	plusw1,w,c
 46649  01F288  B4D8               	btfsc	status,2,c
 46650  01F28A  D018               	goto	l13758
 46651                           
 46652                           ;dio.c: 103:    if (S.button[i].sw == SW_ON) {
 46653                           ;stkvar	_i @ sp[(-2)+0]
 46654  01F28C  0EFE               	movlw	-2
 46655  01F28E  50E3               	movf	plusw1,w,c
 46656  01F290  0D05               	mullw	5
 46657  01F292  0EA4               	movlw	low _S
 46658  01F294  24F3               	addwf	243,w,c
 46659  01F296  6ED9               	movwf	fsr2l,c
 46660  01F298  0E01               	movlw	high _S
 46661  01F29A  20F4               	addwfc	prodh,w,c
 46662  01F29C  6EDA               	movwf	fsr2h,c
 46663  01F29E  04DE               	decf	postinc2,w,c
 46664  01F2A0  A4D8               	btfss	status,2,c
 46665  01F2A2  D049               	goto	l13766
 46666                           
 46667                           ;dio.c: 104:     S.button[i].sw = SW_OFF;
 46668                           ;stkvar	_i @ sp[(-2)+0]
 46669  01F2A4  0EFE               	movlw	-2
 46670  01F2A6  50E3               	movf	plusw1,w,c
 46671  01F2A8  0D05               	mullw	5
 46672  01F2AA  0EA4               	movlw	low _S
 46673  01F2AC  24F3               	addwf	243,w,c
 46674  01F2AE  6ED9               	movwf	fsr2l,c
 46675  01F2B0  0E01               	movlw	high _S
 46676  01F2B2  20F4               	addwfc	prodh,w,c
 46677  01F2B4  6EDA               	movwf	fsr2h,c
 46678  01F2B6  0E00               	movlw	0
 46679  01F2B8  6EDF               	movwf	indf2,c
 46680  01F2BA  D03D               	goto	l13766
 46681  01F2BC                     l13758:
 46682                           
 46683                           ;dio.c: 107:    if (S.button[i].sw == SW_OFF) {
 46684                           ;stkvar	_i @ sp[(-2)+0]
 46685  01F2BC  0EFE               	movlw	-2
 46686  01F2BE  50E3               	movf	plusw1,w,c
 46687  01F2C0  0D05               	mullw	5
 46688  01F2C2  0EA4               	movlw	low _S
 46689  01F2C4  24F3               	addwf	243,w,c
 46690  01F2C6  6ED9               	movwf	fsr2l,c
 46691  01F2C8  0E01               	movlw	high _S
 46692  01F2CA  20F4               	addwfc	prodh,w,c
 46693  01F2CC  6EDA               	movwf	fsr2h,c
 46694  01F2CE  50DF               	movf	indf2,w,c
 46695  01F2D0  A4D8               	btfss	status,2,c
 46696  01F2D2  D031               	goto	l13766
 46697                           
 46698                           ;dio.c: 108:     S.button[i].sw = SW_ON;
 46699                           ;stkvar	_i @ sp[(-2)+0]
 46700  01F2D4  0EFE               	movlw	-2
 46701  01F2D6  50E3               	movf	plusw1,w,c
 46702  01F2D8  0D05               	mullw	5
 46703  01F2DA  0EA4               	movlw	low _S
 46704  01F2DC  24F3               	addwf	243,w,c
 46705  01F2DE  6ED9               	movwf	fsr2l,c
 46706  01F2E0  0E01               	movlw	high _S
 46707  01F2E2  20F4               	addwfc	prodh,w,c
 46708  01F2E4  6EDA               	movwf	fsr2h,c
 46709  01F2E6  0E01               	movlw	1
 46710  01F2E8  6EDF               	movwf	indf2,c
 46711                           
 46712                           ;dio.c: 109:     S.button[i].count = V.timerint_count;
 46713  01F2EA  EE20  F2B8         	lfsr	2,_V+177	;volatile
 46714                           
 46715                           ;stkvar	_i @ sp[(-2)+0]
 46716  01F2EE  0EFE               	movlw	-2
 46717  01F2F0  50E3               	movf	plusw1,w,c
 46718  01F2F2  0D05               	mullw	5
 46719  01F2F4  0EA5               	movlw	low (_S+1)
 46720  01F2F6  24F3               	addwf	243,w,c
 46721  01F2F8  6EE9               	movwf	fsr0l,c
 46722  01F2FA  0E01               	movlw	high (_S+1)
 46723  01F2FC  20F4               	addwfc	prodh,w,c
 46724  01F2FE  6EEA               	movwf	fsr0h,c
 46725  01F300  006F FF7B FFEE     	movff	postinc2,postinc0
 46726  01F306  006F FF7B FFEE     	movff	postinc2,postinc0
 46727  01F30C  006F FF7B FFEE     	movff	postinc2,postinc0
 46728  01F312  006F FF7B FFEE     	movff	postinc2,postinc0
 46729                           
 46730                           ;dio.c: 110:     S.sw_bitmap |= 1 << i;
 46731                           ;stkvar	_i @ sp[(-2)+0]
 46732  01F318  0EFE               	movlw	-2
 46733  01F31A  006F FF8C  F035    	movff	plusw1,btemp+11
 46734  01F320  0E01               	movlw	1
 46735  01F322  6E34               	movwf	(btemp+10)^0,c
 46736  01F324  2A35               	incf	(btemp+11)^0,f,c
 46737  01F326  D002               	goto	u1285_24
 46738  01F328                     u1285_25:
 46739  01F328  90D8               	bcf	status,0,c
 46740  01F32A  3634               	rlcf	(btemp+10)^0,f,c
 46741  01F32C                     u1285_24:
 46742  01F32C  2E35               	decfsz	(btemp+11)^0,f,c
 46743  01F32E  D7FC               	goto	u1285_25
 46744  01F330  5034               	movf	(btemp+10)^0,w,c
 46745  01F332  0101               	movlb	1	; () banked
 46746  01F334  13CC               	iorwf	(_S+40)& (0+255),f,b	;volatile
 46747  01F336                     l13766:
 46748                           
 46749                           ;dio.c: 113:  } while (++i < 6);
 46750                           ;stkvar	_i @ sp[(-2)+0]
 46751  01F336  0EFE               	movlw	-2
 46752  01F338  2AE3               	incf	plusw1,f,c
 46753  01F33A  0EFE               	movlw	-2
 46754  01F33C  006F FF8C  F02A    	movff	plusw1,btemp
 46755  01F342  0E05               	movlw	5
 46756  01F344  642A               	cpfsgt	btemp^0,c
 46757  01F346  D785               	goto	l13750
 46758                           
 46759                           ;dio.c: 122:  do { LATFbits.LATF5 = 1; } while(0);
 46760  01F348  8ABF               	bsf	191,5,c	;volatile
 46761                           
 46762                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 46763  01F34A  52E5               	movf	postdec1,f,c
 46764  01F34C  52E5               	movf	postdec1,f,c
 46765  01F34E  0012               	return		;funcret
 46766  01F350                     __end_of_switch_handler:
 46767                           	opt callstack 0
 46768                           
 46769 ;; *************** function _TMR5_ISR *****************
 46770 ;; Defined at:
 46771 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 46772 ;; Parameters:    Size  Location     Type
 46773 ;;		None
 46774 ;; Auto vars:     Size  Location     Type
 46775 ;;		None
 46776 ;; Return value:  Size  Location     Type
 46777 ;;                  1    wreg      void 
 46778 ;; Registers used:
 46779 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, tosl, prodl,
      + prodh
 46780 ;; Tracked objects:
 46781 ;;		On entry : 0/0
 46782 ;;		On exit  : 3F/0
 46783 ;;		Unchanged: 0/0
 46784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46787 ;;      Temps:         31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46788 ;;      Totals:        31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46789 ;;Total ram usage:       31 bytes
 46790 ;; Hardware stack levels used:    1
 46791 ;; Hardware stack levels required when called:    9
 46792 ;; This function calls:
 46793 ;;		_TMR5_CallBack
 46794 ;;		_TMR5_WriteTimer
 46795 ;; This function is called by:
 46796 ;;		Interrupt level 1
 46797 ;; This function uses a non-reentrant model
 46798 ;;
 46799                           
 46800                           	psect	text189
 46801  01DC40                     __ptext189:
 46802                           	opt callstack 0
 46803  01DC40                     _TMR5_ISR:
 46804                           	opt callstack 8
 46805                           
 46806                           ;incstack = 0
 46807  01DC40  006F FF60  F00D    	movff	status,??_TMR5_ISR+2
 46808  01DC46  0060  F0A8  F00E   	movff	btemp,??_TMR5_ISR+3
 46809  01DC4C  0060  F0AC  F00F   	movff	btemp+1,??_TMR5_ISR+4
 46810  01DC52  0060  F0B0  F010   	movff	btemp+2,??_TMR5_ISR+5
 46811  01DC58  0060  F0B4  F011   	movff	btemp+3,??_TMR5_ISR+6
 46812  01DC5E  0060  F0B8  F012   	movff	btemp+4,??_TMR5_ISR+7
 46813  01DC64  0060  F0BC  F013   	movff	btemp+5,??_TMR5_ISR+8
 46814  01DC6A  0060  F0C0  F014   	movff	btemp+6,??_TMR5_ISR+9
 46815  01DC70  0060  F0C4  F015   	movff	btemp+7,??_TMR5_ISR+10
 46816  01DC76  0060  F0C8  F016   	movff	btemp+8,??_TMR5_ISR+11
 46817  01DC7C  0060  F0CC  F017   	movff	btemp+9,??_TMR5_ISR+12
 46818  01DC82  0060  F0D0  F018   	movff	btemp+10,??_TMR5_ISR+13
 46819  01DC88  0060  F0D4  F019   	movff	btemp+11,??_TMR5_ISR+14
 46820  01DC8E  0060  F0E8  F01A   	movff	btemp+16,??_TMR5_ISR+15
 46821  01DC94  0060  F0EC  F01B   	movff	btemp+17,??_TMR5_ISR+16
 46822  01DC9A  0060  F0F0  F01C   	movff	btemp+18,??_TMR5_ISR+17
 46823  01DCA0  0060  F0F4  F01D   	movff	btemp+19,??_TMR5_ISR+18
 46824  01DCA6  0060  F0F8  F01E   	movff	btemp+20,??_TMR5_ISR+19
 46825  01DCAC  0060  F0FC  F01F   	movff	btemp+21,??_TMR5_ISR+20
 46826  01DCB2  0060  F100  F020   	movff	btemp+22,??_TMR5_ISR+21
 46827  01DCB8  0060  F104  F021   	movff	btemp+23,??_TMR5_ISR+22
 46828  01DCBE  0060  F108  F022   	movff	btemp+24,??_TMR5_ISR+23
 46829  01DCC4  0060  F10C  F023   	movff	btemp+25,??_TMR5_ISR+24
 46830  01DCCA  0060  F110  F024   	movff	btemp+26,??_TMR5_ISR+25
 46831  01DCD0  0060  F114  F025   	movff	btemp+27,??_TMR5_ISR+26
 46832  01DCD6  0060  F118  F026   	movff	btemp+28,??_TMR5_ISR+27
 46833  01DCDC  0060  F11C  F027   	movff	btemp+29,??_TMR5_ISR+28
 46834  01DCE2  0060  F120  F028   	movff	btemp+30,??_TMR5_ISR+29
 46835  01DCE8  0060  F124  F029   	movff	btemp+31,??_TMR5_ISR+30
 46836  01DCEE  EE16  F196         	lfsr	1,___intlo_sp
 46837                           
 46838                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 46839  01DCF2  0139               	movlb	57	; () banked
 46840  01DCF4  9DA8               	bcf	168,6,b	;volatile
 46841                           
 46842                           ; BSR set to: 57
 46843                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 46844  01DCF6  0060  F313  FFE6   	movff	_timer5ReloadVal,postinc1
 46845  01DCFC  0060  F317  FFE6   	movff	_timer5ReloadVal+1,postinc1
 46846  01DD02  ECF0  F00F         	call	_TMR5_WriteTimer	;wreg free
 46847                           
 46848                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 46849  01DD06  0102               	movlb	2	; () banked
 46850  01DD08  51AE               	movf	(_V+167)& (0+255),w,b	;volatile
 46851  01DD0A  6E0B               	movwf	??_TMR5_ISR^0,c
 46852  01DD0C  6A0C               	clrf	(??_TMR5_ISR+1)^0,c
 46853  01DD0E  0E05               	movlw	5
 46854  01DD10  260B               	addwf	??_TMR5_ISR^0,f,c
 46855  01DD12  0E00               	movlw	0
 46856  01DD14  220C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 46857  01DD16  0100               	movlb	0	; () banked
 46858  01DD18  4BC2               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 46859  01DD1A  2BC3               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 46860  01DD1C  500B               	movf	??_TMR5_ISR^0,w,c
 46861  01DD1E  5DC2               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 46862  01DD20  500C               	movf	(??_TMR5_ISR+1)^0,w,c
 46863  01DD22  59C3               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 46864  01DD24  A0D8               	btfss	status,0,c
 46865  01DD26  D005               	goto	i1l1021
 46866                           
 46867                           ; BSR set to: 0
 46868                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 46869  01DD28  EC98  F013         	call	_TMR5_CallBack	;wreg free
 46870                           
 46871                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 46872  01DD2C  0100               	movlb	0	; () banked
 46873  01DD2E  6BC2               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 46874  01DD30  6BC3               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 46875  01DD32                     i1l1021:
 46876                           
 46877                           ; BSR set to: 0
 46878  01DD32  0060  F0A4  F049   	movff	??_TMR5_ISR+30,btemp+31
 46879  01DD38  0060  F0A0  F048   	movff	??_TMR5_ISR+29,btemp+30
 46880  01DD3E  0060  F09C  F047   	movff	??_TMR5_ISR+28,btemp+29
 46881  01DD44  0060  F098  F046   	movff	??_TMR5_ISR+27,btemp+28
 46882  01DD4A  0060  F094  F045   	movff	??_TMR5_ISR+26,btemp+27
 46883  01DD50  0060  F090  F044   	movff	??_TMR5_ISR+25,btemp+26
 46884  01DD56  0060  F08C  F043   	movff	??_TMR5_ISR+24,btemp+25
 46885  01DD5C  0060  F088  F042   	movff	??_TMR5_ISR+23,btemp+24
 46886  01DD62  0060  F084  F041   	movff	??_TMR5_ISR+22,btemp+23
 46887  01DD68  0060  F080  F040   	movff	??_TMR5_ISR+21,btemp+22
 46888  01DD6E  0060  F07C  F03F   	movff	??_TMR5_ISR+20,btemp+21
 46889  01DD74  0060  F078  F03E   	movff	??_TMR5_ISR+19,btemp+20
 46890  01DD7A  0060  F074  F03D   	movff	??_TMR5_ISR+18,btemp+19
 46891  01DD80  0060  F070  F03C   	movff	??_TMR5_ISR+17,btemp+18
 46892  01DD86  0060  F06C  F03B   	movff	??_TMR5_ISR+16,btemp+17
 46893  01DD8C  0060  F068  F03A   	movff	??_TMR5_ISR+15,btemp+16
 46894  01DD92  0060  F064  F035   	movff	??_TMR5_ISR+14,btemp+11
 46895  01DD98  0060  F060  F034   	movff	??_TMR5_ISR+13,btemp+10
 46896  01DD9E  0060  F05C  F033   	movff	??_TMR5_ISR+12,btemp+9
 46897  01DDA4  0060  F058  F032   	movff	??_TMR5_ISR+11,btemp+8
 46898  01DDAA  0060  F054  F031   	movff	??_TMR5_ISR+10,btemp+7
 46899  01DDB0  0060  F050  F030   	movff	??_TMR5_ISR+9,btemp+6
 46900  01DDB6  0060  F04C  F02F   	movff	??_TMR5_ISR+8,btemp+5
 46901  01DDBC  0060  F048  F02E   	movff	??_TMR5_ISR+7,btemp+4
 46902  01DDC2  0060  F044  F02D   	movff	??_TMR5_ISR+6,btemp+3
 46903  01DDC8  0060  F040  F02C   	movff	??_TMR5_ISR+5,btemp+2
 46904  01DDCE  0060  F03C  F02B   	movff	??_TMR5_ISR+4,btemp+1
 46905  01DDD4  0060  F038  F02A   	movff	??_TMR5_ISR+3,btemp
 46906  01DDDA  0060  F037  FFD8   	movff	??_TMR5_ISR+2,status
 46907  01DDE0  0011               	retfie		f
 46908  01DDE2                     __end_of_TMR5_ISR:
 46909                           	opt callstack 0
 46910                           
 46911 ;; *************** function _TMR5_WriteTimer *****************
 46912 ;; Defined at:
 46913 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 46914 ;; Parameters:    Size  Location     Type
 46915 ;;  timerVal        2  [STACK] unsigned short 
 46916 ;; Auto vars:     Size  Location     Type
 46917 ;;		None
 46918 ;; Return value:  Size  Location     Type
 46919 ;;                  1  [STACK] void 
 46920 ;; Registers used:
 46921 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 46922 ;; Tracked objects:
 46923 ;;		On entry : 3F/39
 46924 ;;		On exit  : 0/0
 46925 ;;		Unchanged: 0/0
 46926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46931 ;;Total ram usage:        0 bytes
 46932 ;; Hardware stack levels used:    1
 46933 ;; Hardware stack levels required when called:    3
 46934 ;; This function calls:
 46935 ;;		Nothing
 46936 ;; This function is called by:
 46937 ;;		_TMR5_ISR
 46938 ;; This function uses a reentrant model
 46939 ;;
 46940                           
 46941                           	psect	text190
 46942  001FE0                     __ptext190:
 46943                           	opt callstack 0
 46944  001FE0                     _TMR5_WriteTimer:
 46945                           	opt callstack 13
 46946                           
 46947                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 46948                           
 46949                           ; BSR set to: 0
 46950                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46951                           ;incstack = 0
 46952  001FE0  A49A               	btfss	154,2,c	;volatile
 46953  001FE2  D00F               	goto	l13978
 46954                           
 46955                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 46956  001FE4  909A               	bcf	154,0,c	;volatile
 46957                           
 46958                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 46959                           ;stkvar	_timerVal @ sp[(0)+-2]
 46960  001FE6  0EFF               	movlw	255
 46961  001FE8  24E1               	addwf	fsr1l,w,c
 46962  001FEA  6ED9               	movwf	fsr2l,c
 46963  001FEC  0EFF               	movlw	255
 46964  001FEE  20E2               	addwfc	fsr1h,w,c
 46965  001FF0  6EDA               	movwf	fsr2h,c
 46966  001FF2  50DF               	movf	indf2,w,c
 46967  001FF4  6E99               	movwf	153,c	;volatile
 46968                           
 46969                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 46970                           ;stkvar	_timerVal @ sp[(0)+-2]
 46971  001FF6  0EFE               	movlw	-2
 46972  001FF8  006F FF8F FF98     	movff	plusw1,16280	;volatile
 46973                           
 46974                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 46975  001FFE  809A               	bsf	154,0,c	;volatile
 46976                           
 46977                           ;mcc_generated_files/tmr5.c: 144:  } else {
 46978  002000  D00C               	goto	l1004
 46979  002002                     l13978:
 46980                           
 46981                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 46982                           ;stkvar	_timerVal @ sp[(0)+-2]
 46983  002002  0EFF               	movlw	255
 46984  002004  24E1               	addwf	fsr1l,w,c
 46985  002006  6ED9               	movwf	fsr2l,c
 46986  002008  0EFF               	movlw	255
 46987  00200A  20E2               	addwfc	fsr1h,w,c
 46988  00200C  6EDA               	movwf	fsr2h,c
 46989  00200E  50DF               	movf	indf2,w,c
 46990  002010  6E99               	movwf	153,c	;volatile
 46991                           
 46992                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 46993                           ;stkvar	_timerVal @ sp[(0)+-2]
 46994  002012  0EFE               	movlw	-2
 46995  002014  006F FF8F FF98     	movff	plusw1,16280	;volatile
 46996  00201A                     l1004:
 46997                           
 46998                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 46999  00201A  52E5               	movf	postdec1,f,c
 47000  00201C  52E5               	movf	postdec1,f,c
 47001  00201E  0012               	return		;funcret
 47002  002020                     __end_of_TMR5_WriteTimer:
 47003                           	opt callstack 0
 47004                           
 47005 ;; *************** function _TMR5_CallBack *****************
 47006 ;; Defined at:
 47007 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 47008 ;; Parameters:    Size  Location     Type
 47009 ;;		None
 47010 ;; Auto vars:     Size  Location     Type
 47011 ;;		None
 47012 ;; Return value:  Size  Location     Type
 47013 ;;                  1  [STACK] void 
 47014 ;; Registers used:
 47015 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, tosl, prodl,
      + prodh
 47016 ;; Tracked objects:
 47017 ;;		On entry : 3F/0
 47018 ;;		On exit  : 0/0
 47019 ;;		Unchanged: 0/0
 47020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47025 ;;Total ram usage:        0 bytes
 47026 ;; Hardware stack levels used:    1
 47027 ;; Hardware stack levels required when called:    8
 47028 ;; This function calls:
 47029 ;;		Absolute function
 47030 ;;		_TMR5_DefaultInterruptHandler
 47031 ;; This function is called by:
 47032 ;;		_TMR5_ISR
 47033 ;; This function uses a reentrant model
 47034 ;;
 47035                           
 47036                           	psect	text191
 47037  002730                     __ptext191:
 47038                           	opt callstack 0
 47039  002730                     _TMR5_CallBack:
 47040                           	opt callstack 8
 47041                           
 47042                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 47043                           
 47044                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47045                           ;incstack = 0
 47046  002730  0100               	movlb	0	; () banked
 47047  002732  519B               	movf	_TMR5_InterruptHandler& (0+255),w,b
 47048  002734  119C               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 47049  002736  119D               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 47050  002738  B4D8               	btfsc	status,2,c
 47051  00273A  0012               	return	
 47052                           
 47053                           ; BSR set to: 0
 47054                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 47055  00273C  D801               	call	u1324_28
 47056  00273E  0012               	return	
 47057  002740                     u1324_28:
 47058  002740  0005               	push	
 47059  002742  6EFA               	movwf	pclath,c
 47060  002744  519B               	movf	_TMR5_InterruptHandler& (0+255),w,b
 47061  002746  6EFD               	movwf	tosl,c
 47062  002748  519C               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 47063  00274A  6EFE               	movwf	tosh,c
 47064  00274C  519D               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 47065  00274E  6EFF               	movwf	tosu,c
 47066  002750  50FA               	movf	pclath,w,c
 47067  002752  0012               	return		;indir
 47068  002754                     __end_of_TMR5_CallBack:
 47069                           	opt callstack 0
 47070                           
 47071 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 47072 ;; Defined at:
 47073 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 47074 ;; Parameters:    Size  Location     Type
 47075 ;;		None
 47076 ;; Auto vars:     Size  Location     Type
 47077 ;;		None
 47078 ;; Return value:  Size  Location     Type
 47079 ;;                  1  [STACK] void 
 47080 ;; Registers used:
 47081 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, prodl, prodh
 47082 ;; Tracked objects:
 47083 ;;		On entry : 3F/0
 47084 ;;		On exit  : 0/0
 47085 ;;		Unchanged: 0/0
 47086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47091 ;;Total ram usage:        0 bytes
 47092 ;; Hardware stack levels used:    1
 47093 ;; Hardware stack levels required when called:    7
 47094 ;; This function calls:
 47095 ;;		_check_day_time
 47096 ;; This function is called by:
 47097 ;;		_TMR5_Initialize
 47098 ;;		_TMR5_CallBack
 47099 ;; This function uses a reentrant model
 47100 ;;
 47101                           
 47102                           	psect	text192
 47103  00214C                     __ptext192:
 47104                           	opt callstack 0
 47105  00214C                     _TMR5_DefaultInterruptHandler:
 47106                           	opt callstack 8
 47107                           
 47108                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 47109                           
 47110                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47111                           ;incstack = 0
 47112  00214C  A0BE               	btfss	190,0,c	;volatile
 47113  00214E  D002               	goto	u1250_20
 47114  002150  0E01               	movlw	1
 47115  002152  D001               	goto	u1250_26
 47116  002154                     u1250_20:
 47117  002154  0E00               	movlw	0
 47118  002156                     u1250_26:
 47119  002156  0AFF               	xorlw	255
 47120  002158  6E35               	movwf	(btemp+11)^0,c
 47121  00215A  50BE               	movf	190,w,c	;volatile
 47122  00215C  1835               	xorwf	(btemp+11)^0,w,c
 47123  00215E  0BFE               	andlw	-2
 47124  002160  1835               	xorwf	(btemp+11)^0,w,c
 47125  002162  6EBE               	movwf	190,c	;volatile
 47126                           
 47127                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 47128  002164  0E01               	movlw	1
 47129  002166  0102               	movlb	2	; () banked
 47130  002168  27B8               	addwf	(_V+177)& (0+255),f,b	;volatile
 47131  00216A  0E00               	movlw	0
 47132  00216C  23B9               	addwfc	(_V+178)& (0+255),f,b	;volatile
 47133  00216E  23BA               	addwfc	(_V+179)& (0+255),f,b	;volatile
 47134  002170  23BB               	addwfc	(_V+180)& (0+255),f,b	;volatile
 47135                           
 47136                           ; BSR set to: 2
 47137                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 47138  002172  0E01               	movlw	1
 47139  002174  2788               	addwf	(_V+129)& (0+255),f,b	;volatile
 47140  002176  0E00               	movlw	0
 47141  002178  2389               	addwfc	(_V+130)& (0+255),f,b	;volatile
 47142  00217A  238A               	addwfc	(_V+131)& (0+255),f,b	;volatile
 47143  00217C  238B               	addwfc	(_V+132)& (0+255),f,b	;volatile
 47144                           
 47145                           ; BSR set to: 2
 47146                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 47147  00217E  ECE0  F0D0         	call	_check_day_time	;wreg free
 47148                           
 47149                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 47150  002182  0012               	return		;funcret
 47151  002184                     __end_of_TMR5_DefaultInterruptHandler:
 47152                           	opt callstack 0
 47153                           
 47154 ;; *************** function _check_day_time *****************
 47155 ;; Defined at:
 47156 ;;		line 167 in file "mbmc.c"
 47157 ;; Parameters:    Size  Location     Type
 47158 ;;		None
 47159 ;; Auto vars:     Size  Location     Type
 47160 ;;  light           4  [STACK] float 
 47161 ;; Return value:  Size  Location     Type
 47162 ;;                  1  [STACK] _Bool 
 47163 ;; Registers used:
 47164 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, prodl, prodh
 47165 ;; Tracked objects:
 47166 ;;		On entry : 3F/2
 47167 ;;		On exit  : 0/0
 47168 ;;		Unchanged: 0/0
 47169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47174 ;;Total ram usage:        0 bytes
 47175 ;; Hardware stack levels used:    1
 47176 ;; Hardware stack levels required when called:    6
 47177 ;; This function calls:
 47178 ;;		___flge
 47179 ;;		_conv_raw_result
 47180 ;;		_get_ac_charger_relay
 47181 ;;		_set_ac_charger_relay
 47182 ;;		_time
 47183 ;; This function is called by:
 47184 ;;		_TMR5_DefaultInterruptHandler
 47185 ;; This function uses a reentrant model
 47186 ;;
 47187                           
 47188                           	psect	text193
 47189  01A1C0                     __ptext193:
 47190                           	opt callstack 0
 47191  01A1C0                     _check_day_time:
 47192                           	opt callstack 0
 47193                           
 47194                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47195  01A1C0  52E6               	movf	postinc1,f,c
 47196  01A1C2  52E6               	movf	postinc1,f,c
 47197  01A1C4  52E6               	movf	postinc1,f,c
 47198  01A1C6  52E6               	movf	postinc1,f,c
 47199                           
 47200                           ;mbmc.c: 169:  static uint8_t day_delay = 0;;mbmc.c: 170:  float light;;mbmc.c: 172:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 47201                           
 47202                           ;incstack = 0
 47203  01A1C8  0E00               	movlw	0
 47204  01A1CA  6EE6               	movwf	postinc1,c
 47205  01A1CC  0E0D               	movlw	13
 47206  01A1CE  6EE6               	movwf	postinc1,c
 47207  01A1D0  ECCB  F0C3         	call	_conv_raw_result	;wreg free
 47208                           
 47209                           ;stkvar	_light @ sp[(-4)+0]
 47210  01A1D4  0EFC               	movlw	-4
 47211  01A1D6  0060  F0AB  FFE3   	movff	btemp,plusw1
 47212  01A1DC  0EFD               	movlw	-3
 47213  01A1DE  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 47214  01A1E4  0EFE               	movlw	-2
 47215  01A1E6  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 47216  01A1EC  0EFF               	movlw	-1
 47217  01A1EE  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 47218                           
 47219                           ;mbmc.c: 176:  if (C.day_update) {
 47220  01A1F4  EE22  F237         	lfsr	2,_C+312	;volatile
 47221  01A1F8  50DE               	movf	postinc2,w,c
 47222  01A1FA  10DE               	iorwf	postinc2,w,c
 47223  01A1FC  10DE               	iorwf	postinc2,w,c
 47224  01A1FE  10DE               	iorwf	postinc2,w,c
 47225  01A200  B4D8               	btfsc	status,2,c
 47226  01A202  D068               	goto	l12724
 47227                           
 47228                           ;mbmc.c: 177:   if (time(((void*)0)) >= C.day_update) {
 47229  01A204  0062  F8DC  F032   	movff	_C+312,btemp+8	;volatile
 47230  01A20A  0062  F8E0  F033   	movff	_C+313,btemp+9	;volatile
 47231  01A210  0062  F8E4  F034   	movff	_C+314,btemp+10	;volatile
 47232  01A216  0062  F8E8  F035   	movff	_C+315,btemp+11	;volatile
 47233  01A21C  5032               	movf	(btemp+8)^0,w,c
 47234  01A21E  6E3A               	movwf	(btemp+16)^0,c
 47235  01A220  5033               	movf	(btemp+9)^0,w,c
 47236  01A222  6E3B               	movwf	(btemp+17)^0,c
 47237  01A224  5034               	movf	(btemp+10)^0,w,c
 47238  01A226  6E3C               	movwf	(btemp+18)^0,c
 47239  01A228  5035               	movf	(btemp+11)^0,w,c
 47240  01A22A  6E3D               	movwf	(btemp+19)^0,c
 47241  01A22C  6A3E               	clrf	(btemp+20)^0,c
 47242  01A22E  6A3F               	clrf	(btemp+21)^0,c
 47243  01A230  6A40               	clrf	(btemp+22)^0,c
 47244  01A232  6A41               	clrf	(btemp+23)^0,c
 47245  01A234  0E00               	movlw	0
 47246  01A236  6EE6               	movwf	postinc1,c
 47247  01A238  0E00               	movlw	0
 47248  01A23A  6EE6               	movwf	postinc1,c
 47249  01A23C  ECD3  F00C         	call	_time	;wreg free
 47250  01A240  52E5               	movf	postdec1,f,c
 47251  01A242  006F FF9C  F049    	movff	indf1,btemp+31
 47252  01A248  52E5               	movf	postdec1,f,c
 47253  01A24A  006F FF9C  F048    	movff	indf1,btemp+30
 47254  01A250  52E5               	movf	postdec1,f,c
 47255  01A252  006F FF9C  F047    	movff	indf1,btemp+29
 47256  01A258  52E5               	movf	postdec1,f,c
 47257  01A25A  006F FF9C  F046    	movff	indf1,btemp+28
 47258  01A260  52E5               	movf	postdec1,f,c
 47259  01A262  006F FF9C  F045    	movff	indf1,btemp+27
 47260  01A268  52E5               	movf	postdec1,f,c
 47261  01A26A  006F FF9C  F044    	movff	indf1,btemp+26
 47262  01A270  52E5               	movf	postdec1,f,c
 47263  01A272  006F FF9C  F043    	movff	indf1,btemp+25
 47264  01A278  52E5               	movf	postdec1,f,c
 47265  01A27A  006F FF9C  F042    	movff	indf1,btemp+24
 47266  01A280  503A               	movf	(btemp+16)^0,w,c
 47267  01A282  5C42               	subwf	(btemp+24)^0,w,c
 47268  01A284  503B               	movf	(btemp+17)^0,w,c
 47269  01A286  5843               	subwfb	(btemp+25)^0,w,c
 47270  01A288  503C               	movf	(btemp+18)^0,w,c
 47271  01A28A  5844               	subwfb	(btemp+26)^0,w,c
 47272  01A28C  503D               	movf	(btemp+19)^0,w,c
 47273  01A28E  5845               	subwfb	(btemp+27)^0,w,c
 47274  01A290  503E               	movf	(btemp+20)^0,w,c
 47275  01A292  5846               	subwfb	(btemp+28)^0,w,c
 47276  01A294  503F               	movf	(btemp+21)^0,w,c
 47277  01A296  5847               	subwfb	(btemp+29)^0,w,c
 47278  01A298  5040               	movf	(btemp+22)^0,w,c
 47279  01A29A  5848               	subwfb	(btemp+30)^0,w,c
 47280  01A29C  5049               	movf	(btemp+31)^0,w,c
 47281  01A29E  0A80               	xorlw	128
 47282  01A2A0  6E2A               	movwf	btemp^0,c
 47283  01A2A2  5041               	movf	(btemp+23)^0,w,c
 47284  01A2A4  0A80               	xorlw	128
 47285  01A2A6  582A               	subwfb	btemp^0,w,c
 47286  01A2A8  A0D8               	btfss	status,0,c
 47287  01A2AA  D014               	goto	l12724
 47288                           
 47289                           ; BSR set to: 57
 47290                           ;mbmc.c: 178:    C.day_update = 0;
 47291  01A2AC  0E00               	movlw	0
 47292  01A2AE  006F FFA0  FA37    	movff	wreg,_C+312	;volatile
 47293  01A2B4  0E00               	movlw	0
 47294  01A2B6  006F FFA0  FA38    	movff	wreg,_C+313	;volatile
 47295  01A2BC  0E00               	movlw	0
 47296  01A2BE  006F FFA0  FA39    	movff	wreg,_C+314	;volatile
 47297  01A2C4  0E00               	movlw	0
 47298  01A2C6  006F FFA0  FA3A    	movff	wreg,_C+315	;volatile
 47299                           
 47300                           ;mbmc.c: 179:    C.dupdate = 1;
 47301  01A2CC  0E01               	movlw	1
 47302  01A2CE  006F FFA0  FA2E    	movff	wreg,_C+303	;volatile
 47303  01A2D4                     l12724:
 47304                           
 47305                           ;mbmc.c: 183:  if (!day_delay++ && V.system_stable) {
 47306  01A2D4  2A51               	incf	check_day_time@day_delay^0,f,c
 47307  01A2D6  0451               	decf	check_day_time@day_delay^0,w,c
 47308  01A2D8  A4D8               	btfss	status,2,c
 47309  01A2DA  D123               	goto	l2207
 47310  01A2DC  0102               	movlb	2	; () banked
 47311  01A2DE  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 47312  01A2E0  B4D8               	btfsc	status,2,c
 47313  01A2E2  D11F               	goto	l2207
 47314                           
 47315                           ; BSR set to: 2
 47316                           ;mbmc.c: 184:   if (C.soc > 3) {
 47317  01A2E4  EE22  F1B5         	lfsr	2,_C+182	;volatile
 47318  01A2E8  0E01               	movlw	1
 47319  01A2EA  50DB               	movf	plusw2,w,c
 47320  01A2EC  E104               	bnz	u1215_20
 47321  01A2EE  0E04               	movlw	4
 47322  01A2F0  5CDE               	subwf	postinc2,w,c
 47323  01A2F2  A0D8               	btfss	status,0,c
 47324  01A2F4  D0ED               	goto	l12758
 47325  01A2F6                     u1215_20:
 47326                           
 47327                           ; BSR set to: 2
 47328                           ;mbmc.c: 185:    if (!C.day) {
 47329  01A2F6  EE22  F22D         	lfsr	2,_C+302	;volatile
 47330  01A2FA  50DF               	movf	indf2,w,c
 47331  01A2FC  A4D8               	btfss	status,2,c
 47332  01A2FE  D065               	goto	l12744
 47333                           
 47334                           ; BSR set to: 2
 47335                           ;mbmc.c: 186:     if (light > 22.0) {
 47336                           ;stkvar	_light @ sp[(-4)+0]
 47337  01A300  0EFC               	movlw	-4
 47338  01A302  006F FF8F FFE6     	movff	plusw1,postinc1
 47339  01A308  006F FF8F FFE6     	movff	plusw1,postinc1
 47340  01A30E  006F FF8F FFE6     	movff	plusw1,postinc1
 47341  01A314  006F FF8F FFE6     	movff	plusw1,postinc1
 47342  01A31A  0E00               	movlw	0
 47343  01A31C  6EE6               	movwf	postinc1,c
 47344  01A31E  0E00               	movlw	0
 47345  01A320  6EE6               	movwf	postinc1,c
 47346  01A322  0EB0               	movlw	176
 47347  01A324  6EE6               	movwf	postinc1,c
 47348  01A326  0E41               	movlw	65
 47349  01A328  6EE6               	movwf	postinc1,c
 47350  01A32A  ECF5  F0F4         	call	___flge	;wreg free
 47351  01A32E  B02A               	btfsc	btemp& (0+255),0,c
 47352  01A330  D0F8               	goto	l2207
 47353                           
 47354                           ;mbmc.c: 187:      C.day = 1;
 47355  01A332  0E01               	movlw	1
 47356  01A334  006F FFA0  FA2D    	movff	wreg,_C+302	;volatile
 47357                           
 47358                           ;mbmc.c: 188:      C.day_start = time(((void*)0));
 47359  01A33A  0E00               	movlw	0
 47360  01A33C  6EE6               	movwf	postinc1,c
 47361  01A33E  0E00               	movlw	0
 47362  01A340  6EE6               	movwf	postinc1,c
 47363  01A342  ECD3  F00C         	call	_time	;wreg free
 47364  01A346  52E5               	movf	postdec1,f,c
 47365  01A348  006F FF9C  F041    	movff	indf1,btemp+23
 47366  01A34E  52E5               	movf	postdec1,f,c
 47367  01A350  006F FF9C  F040    	movff	indf1,btemp+22
 47368  01A356  52E5               	movf	postdec1,f,c
 47369  01A358  006F FF9C  F03F    	movff	indf1,btemp+21
 47370  01A35E  52E5               	movf	postdec1,f,c
 47371  01A360  006F FF9C  F03E    	movff	indf1,btemp+20
 47372  01A366  52E5               	movf	postdec1,f,c
 47373  01A368  006F FF9C  F03D    	movff	indf1,btemp+19
 47374  01A36E  52E5               	movf	postdec1,f,c
 47375  01A370  006F FF9C  F03C    	movff	indf1,btemp+18
 47376  01A376  52E5               	movf	postdec1,f,c
 47377  01A378  006F FF9C  F03B    	movff	indf1,btemp+17
 47378  01A37E  52E5               	movf	postdec1,f,c
 47379  01A380  006F FF9C  F03A    	movff	indf1,btemp+16
 47380  01A386  0060  F0E8  F032   	movff	btemp+16,btemp+8
 47381  01A38C  0060  F0EC  F033   	movff	btemp+17,btemp+9
 47382  01A392  0060  F0F0  F034   	movff	btemp+18,btemp+10
 47383  01A398  0060  F0F4  F035   	movff	btemp+19,btemp+11
 47384  01A39E  0060  F0C8  FA2F   	movff	btemp+8,_C+304	;volatile
 47385  01A3A4  0060  F0CC  FA30   	movff	btemp+9,_C+305	;volatile
 47386  01A3AA  0060  F0D0  FA31   	movff	btemp+10,_C+306	;volatile
 47387  01A3B0  0060  F0D4  FA32   	movff	btemp+11,_C+307	;volatile
 47388                           
 47389                           ; BSR set to: 57
 47390                           ;mbmc.c: 189:      if (get_ac_charger_relay()) {
 47391  01A3B6  EC26  F015         	call	_get_ac_charger_relay	;wreg free
 47392  01A3BA  502A               	movf	btemp^0,w,c
 47393  01A3BC  B4D8               	btfsc	status,2,c
 47394  01A3BE  D0B5               	goto	l2203
 47395                           
 47396                           ;mbmc.c: 190:       set_ac_charger_relay(0);
 47397  01A3C0  0E00               	movlw	0
 47398  01A3C2  6EE6               	movwf	postinc1,c
 47399  01A3C4  EC09  F015         	call	_set_ac_charger_relay	;wreg free
 47400  01A3C8  D0B0               	goto	l2203
 47401  01A3CA                     l12744:
 47402                           
 47403                           ; BSR set to: 2
 47404                           ;mbmc.c: 195:     if (light < 12.0) {
 47405  01A3CA  0E00               	movlw	0
 47406  01A3CC  6EE6               	movwf	postinc1,c
 47407  01A3CE  0E00               	movlw	0
 47408  01A3D0  6EE6               	movwf	postinc1,c
 47409  01A3D2  0E40               	movlw	64
 47410  01A3D4  6EE6               	movwf	postinc1,c
 47411  01A3D6  0E41               	movlw	65
 47412  01A3D8  6EE6               	movwf	postinc1,c
 47413                           
 47414                           ;stkvar	_light @ sp[(-8)+0]
 47415  01A3DA  0EF8               	movlw	-8
 47416  01A3DC  006F FF8F FFE6     	movff	plusw1,postinc1
 47417  01A3E2  006F FF8F FFE6     	movff	plusw1,postinc1
 47418  01A3E8  006F FF8F FFE6     	movff	plusw1,postinc1
 47419  01A3EE  006F FF8F FFE6     	movff	plusw1,postinc1
 47420  01A3F4  ECF5  F0F4         	call	___flge	;wreg free
 47421  01A3F8  B02A               	btfsc	btemp& (0+255),0,c
 47422  01A3FA  D093               	goto	l2207
 47423                           
 47424                           ;mbmc.c: 196:      C.day = 0;
 47425  01A3FC  0E00               	movlw	0
 47426  01A3FE  006F FFA0  FA2D    	movff	wreg,_C+302	;volatile
 47427                           
 47428                           ;mbmc.c: 197:      C.day_end = time(((void*)0));
 47429  01A404  0E00               	movlw	0
 47430  01A406  6EE6               	movwf	postinc1,c
 47431  01A408  0E00               	movlw	0
 47432  01A40A  6EE6               	movwf	postinc1,c
 47433  01A40C  ECD3  F00C         	call	_time	;wreg free
 47434  01A410  52E5               	movf	postdec1,f,c
 47435  01A412  006F FF9C  F041    	movff	indf1,btemp+23
 47436  01A418  52E5               	movf	postdec1,f,c
 47437  01A41A  006F FF9C  F040    	movff	indf1,btemp+22
 47438  01A420  52E5               	movf	postdec1,f,c
 47439  01A422  006F FF9C  F03F    	movff	indf1,btemp+21
 47440  01A428  52E5               	movf	postdec1,f,c
 47441  01A42A  006F FF9C  F03E    	movff	indf1,btemp+20
 47442  01A430  52E5               	movf	postdec1,f,c
 47443  01A432  006F FF9C  F03D    	movff	indf1,btemp+19
 47444  01A438  52E5               	movf	postdec1,f,c
 47445  01A43A  006F FF9C  F03C    	movff	indf1,btemp+18
 47446  01A440  52E5               	movf	postdec1,f,c
 47447  01A442  006F FF9C  F03B    	movff	indf1,btemp+17
 47448  01A448  52E5               	movf	postdec1,f,c
 47449  01A44A  006F FF9C  F03A    	movff	indf1,btemp+16
 47450  01A450  0060  F0E8  F032   	movff	btemp+16,btemp+8
 47451  01A456  0060  F0EC  F033   	movff	btemp+17,btemp+9
 47452  01A45C  0060  F0F0  F034   	movff	btemp+18,btemp+10
 47453  01A462  0060  F0F4  F035   	movff	btemp+19,btemp+11
 47454  01A468  0060  F0C8  FA33   	movff	btemp+8,_C+308	;volatile
 47455  01A46E  0060  F0CC  FA34   	movff	btemp+9,_C+309	;volatile
 47456  01A474  0060  F0D0  FA35   	movff	btemp+10,_C+310	;volatile
 47457  01A47A  0060  F0D4  FA36   	movff	btemp+11,_C+311	;volatile
 47458                           
 47459                           ; BSR set to: 57
 47460                           ;mbmc.c: 198:      C.day_update = C.day_end + 600;
 47461  01A480  EE22  F233         	lfsr	2,_C+308	;volatile
 47462  01A484  0E58               	movlw	88
 47463  01A486  24DE               	addwf	postinc2,w,c
 47464  01A488  6E32               	movwf	(btemp+8)^0,c
 47465  01A48A  0E02               	movlw	2
 47466  01A48C  20DE               	addwfc	postinc2,w,c
 47467  01A48E  6E33               	movwf	(btemp+9)^0,c
 47468  01A490  0E00               	movlw	0
 47469  01A492  20DE               	addwfc	postinc2,w,c
 47470  01A494  6E34               	movwf	(btemp+10)^0,c
 47471  01A496  0E00               	movlw	0
 47472  01A498  20DE               	addwfc	postinc2,w,c
 47473  01A49A  6E35               	movwf	(btemp+11)^0,c
 47474  01A49C  0060  F0C8  FA37   	movff	btemp+8,_C+312	;volatile
 47475  01A4A2  0060  F0CC  FA38   	movff	btemp+9,_C+313	;volatile
 47476  01A4A8  0060  F0D0  FA39   	movff	btemp+10,_C+314	;volatile
 47477  01A4AE  0060  F0D4  FA3A   	movff	btemp+11,_C+315	;volatile
 47478                           
 47479                           ; BSR set to: 57
 47480                           ;mbmc.c: 202:      if ((C.soc < 20)) {
 47481  01A4B4  EE22  F1B5         	lfsr	2,_C+182	;volatile
 47482  01A4B8  0E01               	movlw	1
 47483  01A4BA  50DB               	movf	plusw2,w,c
 47484  01A4BC  E136               	bnz	l2203
 47485  01A4BE  0E14               	movlw	20
 47486  01A4C0  5CDE               	subwf	postinc2,w,c
 47487  01A4C2  B0D8               	btfsc	status,0,c
 47488  01A4C4  D032               	goto	l2203
 47489                           
 47490                           ; BSR set to: 57
 47491                           ;mbmc.c: 203:       set_ac_charger_relay(1);
 47492  01A4C6  0E01               	movlw	1
 47493  01A4C8  6EE6               	movwf	postinc1,c
 47494  01A4CA  EC09  F015         	call	_set_ac_charger_relay	;wreg free
 47495  01A4CE  D02D               	goto	l2203
 47496  01A4D0                     l12758:
 47497                           
 47498                           ; BSR set to: 2
 47499                           ;mbmc.c: 209:    if (C.p_pv < C.p_inverter) {
 47500  01A4D0  EE22  F177         	lfsr	2,_C+120	;volatile
 47501  01A4D4  006F FF7B FFE6     	movff	postinc2,postinc1
 47502  01A4DA  006F FF7B FFE6     	movff	postinc2,postinc1
 47503  01A4E0  006F FF7B FFE6     	movff	postinc2,postinc1
 47504  01A4E6  006F FF7B FFE6     	movff	postinc2,postinc1
 47505  01A4EC  EE22  F17B         	lfsr	2,_C+124	;volatile
 47506  01A4F0  006F FF7B FFE6     	movff	postinc2,postinc1
 47507  01A4F6  006F FF7B FFE6     	movff	postinc2,postinc1
 47508  01A4FC  006F FF7B FFE6     	movff	postinc2,postinc1
 47509  01A502  006F FF7B FFE6     	movff	postinc2,postinc1
 47510  01A508  ECF5  F0F4         	call	___flge	;wreg free
 47511  01A50C  B02A               	btfsc	btemp& (0+255),0,c
 47512  01A50E  D009               	goto	l2207
 47513                           
 47514                           ;mbmc.c: 210:     if (!get_ac_charger_relay()) {
 47515  01A510  EC26  F015         	call	_get_ac_charger_relay	;wreg free
 47516  01A514  502A               	movf	btemp^0,w,c
 47517  01A516  A4D8               	btfss	status,2,c
 47518  01A518  D004               	goto	l2207
 47519                           
 47520                           ;mbmc.c: 211:      set_ac_charger_relay(1);
 47521  01A51A  0E01               	movlw	1
 47522  01A51C  6EE6               	movwf	postinc1,c
 47523  01A51E  EC09  F015         	call	_set_ac_charger_relay	;wreg free
 47524  01A522                     l2207:
 47525                           
 47526                           ;mbmc.c: 216:  if (day_delay >= 240)
 47527  01A522  0EEF               	movlw	239
 47528  01A524  6451               	cpfsgt	check_day_time@day_delay^0,c
 47529  01A526  D001               	goto	l2203
 47530                           
 47531                           ;mbmc.c: 217:   day_delay = 0;
 47532  01A528  6A51               	clrf	check_day_time@day_delay^0,c
 47533  01A52A                     l2203:
 47534                           
 47535                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 47536  01A52A  52E5               	movf	postdec1,f,c
 47537  01A52C  52E5               	movf	postdec1,f,c
 47538  01A52E  52E5               	movf	postdec1,f,c
 47539  01A530  52E5               	movf	postdec1,f,c
 47540  01A532  0012               	return		;funcret
 47541  01A534                     __end_of_check_day_time:
 47542                           	opt callstack 0
 47543                           
 47544 ;; *************** function _set_ac_charger_relay *****************
 47545 ;; Defined at:
 47546 ;;		line 136 in file "mbmc.c"
 47547 ;; Parameters:    Size  Location     Type
 47548 ;;  mode            1  [STACK] const _Bool 
 47549 ;; Auto vars:     Size  Location     Type
 47550 ;;		None
 47551 ;; Return value:  Size  Location     Type
 47552 ;;                  1  [STACK] void 
 47553 ;; Registers used:
 47554 ;;		wreg, fsr1l, fsr1h
 47555 ;; Tracked objects:
 47556 ;;		On entry : 0/39
 47557 ;;		On exit  : 0/0
 47558 ;;		Unchanged: 0/0
 47559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47564 ;;Total ram usage:        0 bytes
 47565 ;; Hardware stack levels used:    1
 47566 ;; Hardware stack levels required when called:    3
 47567 ;; This function calls:
 47568 ;;		Nothing
 47569 ;; This function is called by:
 47570 ;;		_check_day_time
 47571 ;; This function uses a reentrant model
 47572 ;;
 47573                           
 47574                           	psect	text194
 47575  002A12                     __ptext194:
 47576                           	opt callstack 0
 47577  002A12                     _set_ac_charger_relay:
 47578                           	opt callstack 10
 47579                           
 47580                           ;mbmc.c: 136: void set_ac_charger_relay(const _Bool mode);mbmc.c: 137: {;mbmc.c: 138:  L
      +                          ATDbits.LATD6 = mode;
 47581                           ;stkvar	_mode @ sp[(0)+-1]
 47582                           
 47583                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47584                           ;incstack = 0
 47585  002A12  0EFF               	movlw	-1
 47586  002A14  B0E3               	btfsc	plusw1,0,c
 47587  002A16  D002               	bra	u1175_25
 47588  002A18  9CBD               	bcf	189,6,c	;volatile
 47589  002A1A  D001               	bra	u1175_26
 47590  002A1C                     u1175_25:
 47591  002A1C  8CBD               	bsf	189,6,c	;volatile
 47592  002A1E                     u1175_26:
 47593                           
 47594                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 47595  002A1E  52E5               	movf	postdec1,f,c
 47596  002A20  0012               	return		;funcret
 47597  002A22                     __end_of_set_ac_charger_relay:
 47598                           	opt callstack 0
 47599                           
 47600 ;; *************** function _get_ac_charger_relay *****************
 47601 ;; Defined at:
 47602 ;;		line 141 in file "mbmc.c"
 47603 ;; Parameters:    Size  Location     Type
 47604 ;;		None
 47605 ;; Auto vars:     Size  Location     Type
 47606 ;;		None
 47607 ;; Return value:  Size  Location     Type
 47608 ;;                  1  [STACK] _Bool 
 47609 ;; Registers used:
 47610 ;;		btemp
 47611 ;; Tracked objects:
 47612 ;;		On entry : 0/39
 47613 ;;		On exit  : 0/0
 47614 ;;		Unchanged: 0/0
 47615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47620 ;;Total ram usage:        0 bytes
 47621 ;; Hardware stack levels used:    1
 47622 ;; Hardware stack levels required when called:    3
 47623 ;; This function calls:
 47624 ;;		Nothing
 47625 ;; This function is called by:
 47626 ;;		_check_day_time
 47627 ;;		_calc_bsoc
 47628 ;; This function uses a reentrant model
 47629 ;;
 47630                           
 47631                           	psect	text195
 47632  002A4C                     __ptext195:
 47633                           	opt callstack 0
 47634  002A4C                     _get_ac_charger_relay:
 47635                           	opt callstack 11
 47636                           
 47637                           ;mbmc.c: 143:  return LATDbits.LATD6;
 47638                           
 47639                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47640                           ;incstack = 0
 47641  002A4C  ACBD               	btfss	189,6,c	;volatile
 47642  002A4E  D003               	goto	u1239_20
 47643  002A50  6A2A               	clrf	btemp^0,c
 47644  002A52  2A2A               	incf	btemp^0,f,c
 47645  002A54  0012               	return	
 47646  002A56                     u1239_20:
 47647  002A56  6A2A               	clrf	btemp^0,c
 47648                           
 47649                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 47650  002A58  0012               	return		;funcret
 47651  002A5A                     __end_of_get_ac_charger_relay:
 47652                           	opt callstack 0
 47653                           
 47654 ;; *************** function _TMR3_ISR *****************
 47655 ;; Defined at:
 47656 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 47657 ;; Parameters:    Size  Location     Type
 47658 ;;		None
 47659 ;; Auto vars:     Size  Location     Type
 47660 ;;		None
 47661 ;; Return value:  Size  Location     Type
 47662 ;;                  1    wreg      void 
 47663 ;; Registers used:
 47664 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 47665 ;; Tracked objects:
 47666 ;;		On entry : 0/0
 47667 ;;		On exit  : 3F/0
 47668 ;;		Unchanged: 0/0
 47669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47672 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47673 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47674 ;;Total ram usage:       25 bytes
 47675 ;; Hardware stack levels used:    1
 47676 ;; Hardware stack levels required when called:   14
 47677 ;; This function calls:
 47678 ;;		_TMR3_CallBack
 47679 ;;		_TMR3_WriteTimer
 47680 ;; This function is called by:
 47681 ;;		Interrupt level 1
 47682 ;; This function uses a non-reentrant model
 47683 ;;
 47684                           
 47685                           	psect	text196
 47686  01EB4C                     __ptext196:
 47687                           	opt callstack 0
 47688  01EB4C                     _TMR3_ISR:
 47689                           	opt callstack 3
 47690                           
 47691                           ;incstack = 0
 47692  01EB4C  006F FF60  F0E5    	movff	status,??_TMR3_ISR
 47693  01EB52  006F FFD8  F0E6    	movff	tblptrl,??_TMR3_ISR+1
 47694  01EB58  006F FFDC  F0E7    	movff	tblptrh,??_TMR3_ISR+2
 47695  01EB5E  006F FFE0  F0E8    	movff	tblptru,??_TMR3_ISR+3
 47696  01EB64  006F FFD4  F0E9    	movff	tablat,??_TMR3_ISR+4
 47697  01EB6A  0060  F0A8  F0EA   	movff	btemp,??_TMR3_ISR+5
 47698  01EB70  0060  F0AC  F0EB   	movff	btemp+1,??_TMR3_ISR+6
 47699  01EB76  0060  F0B0  F0EC   	movff	btemp+2,??_TMR3_ISR+7
 47700  01EB7C  0060  F0B4  F0ED   	movff	btemp+3,??_TMR3_ISR+8
 47701  01EB82  0060  F0B8  F0EE   	movff	btemp+4,??_TMR3_ISR+9
 47702  01EB88  0060  F0BC  F0EF   	movff	btemp+5,??_TMR3_ISR+10
 47703  01EB8E  0060  F0C0  F0F0   	movff	btemp+6,??_TMR3_ISR+11
 47704  01EB94  0060  F0C4  F0F1   	movff	btemp+7,??_TMR3_ISR+12
 47705  01EB9A  0060  F0C8  F0F2   	movff	btemp+8,??_TMR3_ISR+13
 47706  01EBA0  0060  F0CC  F0F3   	movff	btemp+9,??_TMR3_ISR+14
 47707  01EBA6  0060  F0D0  F0F4   	movff	btemp+10,??_TMR3_ISR+15
 47708  01EBAC  0060  F0D4  F0F5   	movff	btemp+11,??_TMR3_ISR+16
 47709  01EBB2  0060  F0E8  F0F6   	movff	btemp+16,??_TMR3_ISR+17
 47710  01EBB8  0060  F0EC  F0F7   	movff	btemp+17,??_TMR3_ISR+18
 47711  01EBBE  0060  F0F0  F0F8   	movff	btemp+18,??_TMR3_ISR+19
 47712  01EBC4  0060  F0F4  F0F9   	movff	btemp+19,??_TMR3_ISR+20
 47713  01EBCA  0060  F0F8  F0FA   	movff	btemp+20,??_TMR3_ISR+21
 47714  01EBD0  0060  F0FC  F0FB   	movff	btemp+21,??_TMR3_ISR+22
 47715  01EBD6  0060  F100  F0FC   	movff	btemp+22,??_TMR3_ISR+23
 47716  01EBDC  0060  F104  F0FD   	movff	btemp+23,??_TMR3_ISR+24
 47717  01EBE2  EE16  F196         	lfsr	1,___intlo_sp
 47718                           
 47719                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 47720  01EBE6  0139               	movlb	57	; () banked
 47721  01EBE8  9DA6               	bcf	166,6,b	;volatile
 47722                           
 47723                           ; BSR set to: 57
 47724                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 47725  01EBEA  0060  F303  FFE6   	movff	_timer3ReloadVal,postinc1
 47726  01EBF0  0060  F307  FFE6   	movff	_timer3ReloadVal+1,postinc1
 47727  01EBF6  EC10  F010         	call	_TMR3_WriteTimer	;wreg free
 47728                           
 47729                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 47730  01EBFA  0100               	movlb	0	; () banked
 47731  01EBFC  4BBE               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 47732  01EBFE  2BBF               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 47733  01EC00  51BF               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 47734  01EC02  E104               	bnz	i1u1704_20
 47735  01EC04  0E28               	movlw	40
 47736  01EC06  5DBE               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 47737  01EC08  A0D8               	btfss	status,0,c
 47738  01EC0A  D005               	goto	i1l1209
 47739  01EC0C                     i1u1704_20:
 47740                           
 47741                           ; BSR set to: 0
 47742                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 47743  01EC0C  ECAA  F013         	call	_TMR3_CallBack	;wreg free
 47744                           
 47745                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 47746  01EC10  0100               	movlb	0	; () banked
 47747  01EC12  6BBE               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 47748  01EC14  6BBF               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 47749  01EC16                     i1l1209:
 47750                           
 47751                           ; BSR set to: 0
 47752  01EC16  0060  F3F4  F041   	movff	??_TMR3_ISR+24,btemp+23
 47753  01EC1C  0060  F3F0  F040   	movff	??_TMR3_ISR+23,btemp+22
 47754  01EC22  0060  F3EC  F03F   	movff	??_TMR3_ISR+22,btemp+21
 47755  01EC28  0060  F3E8  F03E   	movff	??_TMR3_ISR+21,btemp+20
 47756  01EC2E  0060  F3E4  F03D   	movff	??_TMR3_ISR+20,btemp+19
 47757  01EC34  0060  F3E0  F03C   	movff	??_TMR3_ISR+19,btemp+18
 47758  01EC3A  0060  F3DC  F03B   	movff	??_TMR3_ISR+18,btemp+17
 47759  01EC40  0060  F3D8  F03A   	movff	??_TMR3_ISR+17,btemp+16
 47760  01EC46  0060  F3D4  F035   	movff	??_TMR3_ISR+16,btemp+11
 47761  01EC4C  0060  F3D0  F034   	movff	??_TMR3_ISR+15,btemp+10
 47762  01EC52  0060  F3CC  F033   	movff	??_TMR3_ISR+14,btemp+9
 47763  01EC58  0060  F3C8  F032   	movff	??_TMR3_ISR+13,btemp+8
 47764  01EC5E  0060  F3C4  F031   	movff	??_TMR3_ISR+12,btemp+7
 47765  01EC64  0060  F3C0  F030   	movff	??_TMR3_ISR+11,btemp+6
 47766  01EC6A  0060  F3BC  F02F   	movff	??_TMR3_ISR+10,btemp+5
 47767  01EC70  0060  F3B8  F02E   	movff	??_TMR3_ISR+9,btemp+4
 47768  01EC76  0060  F3B4  F02D   	movff	??_TMR3_ISR+8,btemp+3
 47769  01EC7C  0060  F3B0  F02C   	movff	??_TMR3_ISR+7,btemp+2
 47770  01EC82  0060  F3AC  F02B   	movff	??_TMR3_ISR+6,btemp+1
 47771  01EC88  0060  F3A8  F02A   	movff	??_TMR3_ISR+5,btemp
 47772  01EC8E  0060  F3A7  FFF5   	movff	??_TMR3_ISR+4,tablat
 47773  01EC94  0060  F3A3  FFF8   	movff	??_TMR3_ISR+3,tblptru
 47774  01EC9A  0060  F39F  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 47775  01ECA0  0060  F39B  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 47776  01ECA6  0060  F397  FFD8   	movff	??_TMR3_ISR,status
 47777  01ECAC  0011               	retfie		f
 47778  01ECAE                     __end_of_TMR3_ISR:
 47779                           	opt callstack 0
 47780                           
 47781 ;; *************** function _TMR3_WriteTimer *****************
 47782 ;; Defined at:
 47783 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 47784 ;; Parameters:    Size  Location     Type
 47785 ;;  timerVal        2  [STACK] unsigned short 
 47786 ;; Auto vars:     Size  Location     Type
 47787 ;;		None
 47788 ;; Return value:  Size  Location     Type
 47789 ;;                  1  [STACK] void 
 47790 ;; Registers used:
 47791 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 47792 ;; Tracked objects:
 47793 ;;		On entry : 3F/39
 47794 ;;		On exit  : 0/0
 47795 ;;		Unchanged: 0/0
 47796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47801 ;;Total ram usage:        0 bytes
 47802 ;; Hardware stack levels used:    1
 47803 ;; Hardware stack levels required when called:    3
 47804 ;; This function calls:
 47805 ;;		Nothing
 47806 ;; This function is called by:
 47807 ;;		_TMR3_ISR
 47808 ;; This function uses a reentrant model
 47809 ;;
 47810                           
 47811                           	psect	text197
 47812  002020                     __ptext197:
 47813                           	opt callstack 0
 47814  002020                     _TMR3_WriteTimer:
 47815                           	opt callstack 13
 47816                           
 47817                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 47818                           
 47819                           ; BSR set to: 0
 47820                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47821                           ;incstack = 0
 47822  002020  A4A6               	btfss	166,2,c	;volatile
 47823  002022  D00F               	goto	l13996
 47824                           
 47825                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 47826  002024  90A6               	bcf	166,0,c	;volatile
 47827                           
 47828                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 47829                           ;stkvar	_timerVal @ sp[(0)+-2]
 47830  002026  0EFF               	movlw	255
 47831  002028  24E1               	addwf	fsr1l,w,c
 47832  00202A  6ED9               	movwf	fsr2l,c
 47833  00202C  0EFF               	movlw	255
 47834  00202E  20E2               	addwfc	fsr1h,w,c
 47835  002030  6EDA               	movwf	fsr2h,c
 47836  002032  50DF               	movf	indf2,w,c
 47837  002034  6EA5               	movwf	165,c	;volatile
 47838                           
 47839                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 47840                           ;stkvar	_timerVal @ sp[(0)+-2]
 47841  002036  0EFE               	movlw	-2
 47842  002038  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 47843                           
 47844                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 47845  00203E  80A6               	bsf	166,0,c	;volatile
 47846                           
 47847                           ;mcc_generated_files/tmr3.c: 141:     }
 47848  002040  D00C               	goto	l1192
 47849  002042                     l13996:
 47850                           
 47851                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 47852                           ;stkvar	_timerVal @ sp[(0)+-2]
 47853  002042  0EFF               	movlw	255
 47854  002044  24E1               	addwf	fsr1l,w,c
 47855  002046  6ED9               	movwf	fsr2l,c
 47856  002048  0EFF               	movlw	255
 47857  00204A  20E2               	addwfc	fsr1h,w,c
 47858  00204C  6EDA               	movwf	fsr2h,c
 47859  00204E  50DF               	movf	indf2,w,c
 47860  002050  6EA5               	movwf	165,c	;volatile
 47861                           
 47862                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 47863                           ;stkvar	_timerVal @ sp[(0)+-2]
 47864  002052  0EFE               	movlw	-2
 47865  002054  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 47866  00205A                     l1192:
 47867                           
 47868                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 47869  00205A  52E5               	movf	postdec1,f,c
 47870  00205C  52E5               	movf	postdec1,f,c
 47871  00205E  0012               	return		;funcret
 47872  002060                     __end_of_TMR3_WriteTimer:
 47873                           	opt callstack 0
 47874                           
 47875 ;; *************** function _TMR3_CallBack *****************
 47876 ;; Defined at:
 47877 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 47878 ;; Parameters:    Size  Location     Type
 47879 ;;		None
 47880 ;; Auto vars:     Size  Location     Type
 47881 ;;		None
 47882 ;; Return value:  Size  Location     Type
 47883 ;;                  1  [STACK] void 
 47884 ;; Registers used:
 47885 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 47886 ;; Tracked objects:
 47887 ;;		On entry : 3F/0
 47888 ;;		On exit  : 0/0
 47889 ;;		Unchanged: 0/0
 47890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47895 ;;Total ram usage:        0 bytes
 47896 ;; Hardware stack levels used:    1
 47897 ;; Hardware stack levels required when called:   13
 47898 ;; This function calls:
 47899 ;;		Absolute function
 47900 ;;		_TMR3_DefaultInterruptHandler
 47901 ;;		_calc_bsoc
 47902 ;; This function is called by:
 47903 ;;		_TMR3_ISR
 47904 ;; This function uses a reentrant model
 47905 ;;
 47906                           
 47907                           	psect	text198
 47908  002754                     __ptext198:
 47909                           	opt callstack 0
 47910  002754                     _TMR3_CallBack:
 47911                           	opt callstack 3
 47912                           
 47913                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 47914                           
 47915                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47916                           ;incstack = 0
 47917  002754  0100               	movlb	0	; () banked
 47918  002756  5198               	movf	_TMR3_InterruptHandler& (0+255),w,b
 47919  002758  1199               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 47920  00275A  119A               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 47921  00275C  B4D8               	btfsc	status,2,c
 47922  00275E  0012               	return	
 47923                           
 47924                           ; BSR set to: 0
 47925                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 47926  002760  D801               	call	u1682_28
 47927  002762  0012               	return	
 47928  002764                     u1682_28:
 47929  002764  0005               	push	
 47930  002766  6EFA               	movwf	pclath,c
 47931  002768  5198               	movf	_TMR3_InterruptHandler& (0+255),w,b
 47932  00276A  6EFD               	movwf	tosl,c
 47933  00276C  5199               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 47934  00276E  6EFE               	movwf	tosh,c
 47935  002770  519A               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 47936  002772  6EFF               	movwf	tosu,c
 47937  002774  50FA               	movf	pclath,w,c
 47938  002776  0012               	return		;indir
 47939  002778                     __end_of_TMR3_CallBack:
 47940                           	opt callstack 0
 47941                           
 47942 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 47943 ;; Defined at:
 47944 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 47945 ;; Parameters:    Size  Location     Type
 47946 ;;		None
 47947 ;; Auto vars:     Size  Location     Type
 47948 ;;		None
 47949 ;; Return value:  Size  Location     Type
 47950 ;;                  1  [STACK] void 
 47951 ;; Registers used:
 47952 ;;		None
 47953 ;; Tracked objects:
 47954 ;;		On entry : 3F/0
 47955 ;;		On exit  : 0/0
 47956 ;;		Unchanged: 0/0
 47957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47962 ;;Total ram usage:        0 bytes
 47963 ;; Hardware stack levels used:    1
 47964 ;; Hardware stack levels required when called:    3
 47965 ;; This function calls:
 47966 ;;		Nothing
 47967 ;; This function is called by:
 47968 ;;		_TMR3_Initialize
 47969 ;;		_TMR3_CallBack
 47970 ;; This function uses a reentrant model
 47971 ;;
 47972                           
 47973                           	psect	text199
 47974  01FFFE                     __ptext199:
 47975                           	opt callstack 0
 47976  01FFFE                     _TMR3_DefaultInterruptHandler:
 47977                           	opt callstack 12
 47978                           
 47979                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 47980                           
 47981                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47982                           ;incstack = 0
 47983  01FFFE  0012               	return		;funcret
 47984  020000                     __end_of_TMR3_DefaultInterruptHandler:
 47985                           	opt callstack 0
 47986                           
 47987 ;; *************** function _calc_bsoc *****************
 47988 ;; Defined at:
 47989 ;;		line 39 in file "bsoc.c"
 47990 ;; Parameters:    Size  Location     Type
 47991 ;;		None
 47992 ;; Auto vars:     Size  Location     Type
 47993 ;;  adj             4  [STACK] float 
 47994 ;;  log_ptr         2  [STACK] PTR unsigned char 
 47995 ;;		 -> port_data(512), 
 47996 ;; Return value:  Size  Location     Type
 47997 ;;                  1  [STACK] void 
 47998 ;; Registers used:
 47999 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 48000 ;; Tracked objects:
 48001 ;;		On entry : 3F/0
 48002 ;;		On exit  : 6/2
 48003 ;;		Unchanged: 0/0
 48004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48009 ;;Total ram usage:        0 bytes
 48010 ;; Hardware stack levels used:    1
 48011 ;; Hardware stack levels required when called:   12
 48012 ;; This function calls:
 48013 ;;		_StartTimer
 48014 ;;		___asfladd
 48015 ;;		___fldiv
 48016 ;;		___flge
 48017 ;;		___flmul
 48018 ;;		___flneg
 48019 ;;		___fltol
 48020 ;;		_fabsf
 48021 ;;		_get_ac_charger_relay
 48022 ;;		_port_data_dma_ptr
 48023 ;;		_send_port_data_dma
 48024 ;;		_sprintf
 48025 ;;		_strlen
 48026 ;; This function is called by:
 48027 ;;		_init_bsoc
 48028 ;;		_TMR3_CallBack
 48029 ;; This function uses a reentrant model
 48030 ;;
 48031                           
 48032                           	psect	text200
 48033  0149E2                     __ptext200:
 48034                           	opt callstack 0
 48035  0149E2                     _calc_bsoc:
 48036                           	opt callstack 0
 48037                           
 48038                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48039  0149E2  0E06               	movlw	6
 48040  0149E4  26E1               	addwf	fsr1l,f,c
 48041  0149E6  0E00               	movlw	0
 48042  0149E8  22E2               	addwfc	fsr1h,f,c
 48043                           
 48044                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 43:  float adj = 1.0;
 48045                           
 48046                           ;incstack = 0
 48047  0149EA  0E00               	movlw	0
 48048  0149EC  6E32               	movwf	(btemp+8)^0,c
 48049  0149EE  0E00               	movlw	0
 48050  0149F0  6E33               	movwf	(btemp+9)^0,c
 48051  0149F2  0E80               	movlw	128
 48052  0149F4  6E34               	movwf	(btemp+10)^0,c
 48053  0149F6  0E3F               	movlw	63
 48054  0149F8  6E35               	movwf	(btemp+11)^0,c
 48055                           
 48056                           ;stkvar	_adj @ sp[(-6)+0]
 48057  0149FA  0EFA               	movlw	-6
 48058  0149FC  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 48059  014A02  0EFB               	movlw	-5
 48060  014A04  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 48061  014A0A  0EFC               	movlw	-4
 48062  014A0C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 48063  014A12  0EFD               	movlw	-3
 48064  014A14  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 48065  014A1A  82BE               	bsf	190,1,c	;volatile
 48066                           
 48067                           ;bsoc.c: 47:  C.dynamic_ah += (C.c_bat / 3600.0);
 48068  014A1C  0E00               	movlw	0
 48069  014A1E  6EE6               	movwf	postinc1,c
 48070  014A20  0E00               	movlw	0
 48071  014A22  6EE6               	movwf	postinc1,c
 48072  014A24  0E61               	movlw	97
 48073  014A26  6EE6               	movwf	postinc1,c
 48074  014A28  0E45               	movlw	69
 48075  014A2A  6EE6               	movwf	postinc1,c
 48076  014A2C  EE22  F143         	lfsr	2,_C+68	;volatile
 48077  014A30  006F FF7B FFE6     	movff	postinc2,postinc1
 48078  014A36  006F FF7B FFE6     	movff	postinc2,postinc1
 48079  014A3C  006F FF7B FFE6     	movff	postinc2,postinc1
 48080  014A42  006F FF7B FFE6     	movff	postinc2,postinc1
 48081  014A48  EC83  F0BE         	call	___fldiv	;wreg free
 48082  014A4C  0060  F0AB  FFE6   	movff	btemp,postinc1
 48083  014A52  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48084  014A58  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48085  014A5E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48086  014A64  0E8F               	movlw	low (_C+144)
 48087  014A66  6EE6               	movwf	postinc1,c
 48088  014A68  0E09               	movlw	high (_C+144)
 48089  014A6A  6EE6               	movwf	postinc1,c
 48090  014A6C  EC2F  F00A         	call	___asfladd	;wreg free
 48091                           
 48092                           ;bsoc.c: 48:  if (C.dynamic_ah > (C.bank_ah))
 48093  014A70  EE22  F18F         	lfsr	2,_C+144	;volatile
 48094  014A74  006F FF7B FFE6     	movff	postinc2,postinc1
 48095  014A7A  006F FF7B FFE6     	movff	postinc2,postinc1
 48096  014A80  006F FF7B FFE6     	movff	postinc2,postinc1
 48097  014A86  006F FF7B FFE6     	movff	postinc2,postinc1
 48098  014A8C  EE22  F18B         	lfsr	2,_C+140	;volatile
 48099  014A90  006F FF7B FFE6     	movff	postinc2,postinc1
 48100  014A96  006F FF7B FFE6     	movff	postinc2,postinc1
 48101  014A9C  006F FF7B FFE6     	movff	postinc2,postinc1
 48102  014AA2  006F FF7B FFE6     	movff	postinc2,postinc1
 48103  014AA8  ECF5  F0F4         	call	___flge	;wreg free
 48104  014AAC  B02A               	btfsc	btemp& (0+255),0,c
 48105  014AAE  D00E               	goto	l17080
 48106                           
 48107                           ;bsoc.c: 49:   C.dynamic_ah = C.bank_ah;
 48108  014AB0  EE22  F18B         	lfsr	2,_C+140	;volatile
 48109  014AB4  006F FF78  F98F    	movff	postinc2,_C+144	;volatile
 48110  014ABA  006F FF78  F990    	movff	postinc2,_C+145	;volatile
 48111  014AC0  006F FF78  F991    	movff	postinc2,_C+146	;volatile
 48112  014AC6  006F FF74  F992    	movff	postdec2,_C+147	;volatile
 48113  014ACC                     l17080:
 48114                           
 48115                           ;bsoc.c: 50:  if (C.dynamic_ah < 0.1)
 48116  014ACC  0ECD               	movlw	205
 48117  014ACE  6EE6               	movwf	postinc1,c
 48118  014AD0  0ECC               	movlw	204
 48119  014AD2  6EE6               	movwf	postinc1,c
 48120  014AD4  0ECC               	movlw	204
 48121  014AD6  6EE6               	movwf	postinc1,c
 48122  014AD8  0E3D               	movlw	61
 48123  014ADA  6EE6               	movwf	postinc1,c
 48124  014ADC  EE22  F18F         	lfsr	2,_C+144	;volatile
 48125  014AE0  006F FF7B FFE6     	movff	postinc2,postinc1
 48126  014AE6  006F FF7B FFE6     	movff	postinc2,postinc1
 48127  014AEC  006F FF7B FFE6     	movff	postinc2,postinc1
 48128  014AF2  006F FF7B FFE6     	movff	postinc2,postinc1
 48129  014AF8  ECF5  F0F4         	call	___flge	;wreg free
 48130  014AFC  B02A               	btfsc	btemp& (0+255),0,c
 48131  014AFE  D010               	goto	l17084
 48132                           
 48133                           ;bsoc.c: 51:   C.dynamic_ah = 0.1;
 48134  014B00  0ECD               	movlw	205
 48135  014B02  006F FFA0  F98F    	movff	wreg,_C+144	;volatile
 48136  014B08  0ECC               	movlw	204
 48137  014B0A  006F FFA0  F990    	movff	wreg,_C+145	;volatile
 48138  014B10  0ECC               	movlw	204
 48139  014B12  006F FFA0  F991    	movff	wreg,_C+146	;volatile
 48140  014B18  0E3D               	movlw	61
 48141  014B1A  006F FFA0  F992    	movff	wreg,_C+147	;volatile
 48142  014B20                     l17084:
 48143                           
 48144                           ;bsoc.c: 53:  if (C.c_bat > 0.01)
 48145  014B20  EE22  F143         	lfsr	2,_C+68	;volatile
 48146  014B24  006F FF7B FFE6     	movff	postinc2,postinc1
 48147  014B2A  006F FF7B FFE6     	movff	postinc2,postinc1
 48148  014B30  006F FF7B FFE6     	movff	postinc2,postinc1
 48149  014B36  006F FF7B FFE6     	movff	postinc2,postinc1
 48150  014B3C  0E0A               	movlw	10
 48151  014B3E  6EE6               	movwf	postinc1,c
 48152  014B40  0ED7               	movlw	215
 48153  014B42  6EE6               	movwf	postinc1,c
 48154  014B44  0E23               	movlw	35
 48155  014B46  6EE6               	movwf	postinc1,c
 48156  014B48  0E3C               	movlw	60
 48157  014B4A  6EE6               	movwf	postinc1,c
 48158  014B4C  ECF5  F0F4         	call	___flge	;wreg free
 48159  014B50  B02A               	btfsc	btemp& (0+255),0,c
 48160  014B52  D01C               	goto	l17088
 48161                           
 48162                           ;bsoc.c: 54:   adj = C.hist[0].cef;
 48163  014B54  0062  F750  F032   	movff	_C+213,btemp+8	;volatile
 48164  014B5A  0062  F754  F033   	movff	_C+214,btemp+9	;volatile
 48165  014B60  0062  F758  F034   	movff	_C+215,btemp+10	;volatile
 48166  014B66  0062  F75C  F035   	movff	_C+216,btemp+11	;volatile
 48167                           
 48168                           ;stkvar	_adj @ sp[(-6)+0]
 48169  014B6C  0EFA               	movlw	-6
 48170  014B6E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 48171  014B74  0EFB               	movlw	-5
 48172  014B76  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 48173  014B7C  0EFC               	movlw	-4
 48174  014B7E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 48175  014B84  0EFD               	movlw	-3
 48176  014B86  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 48177  014B8C                     l17088:
 48178                           
 48179                           ;bsoc.c: 55:  if (C.c_bat < 0.01)
 48180  014B8C  0E0A               	movlw	10
 48181  014B8E  6EE6               	movwf	postinc1,c
 48182  014B90  0ED7               	movlw	215
 48183  014B92  6EE6               	movwf	postinc1,c
 48184  014B94  0E23               	movlw	35
 48185  014B96  6EE6               	movwf	postinc1,c
 48186  014B98  0E3C               	movlw	60
 48187  014B9A  6EE6               	movwf	postinc1,c
 48188  014B9C  EE22  F143         	lfsr	2,_C+68	;volatile
 48189  014BA0  006F FF7B FFE6     	movff	postinc2,postinc1
 48190  014BA6  006F FF7B FFE6     	movff	postinc2,postinc1
 48191  014BAC  006F FF7B FFE6     	movff	postinc2,postinc1
 48192  014BB2  006F FF7B FFE6     	movff	postinc2,postinc1
 48193  014BB8  ECF5  F0F4         	call	___flge	;wreg free
 48194  014BBC  B02A               	btfsc	btemp& (0+255),0,c
 48195  014BBE  D01C               	goto	l17092
 48196                           
 48197                           ;bsoc.c: 56:   adj = C.hist[0].peukert;
 48198  014BC0  0062  F740  F032   	movff	_C+209,btemp+8	;volatile
 48199  014BC6  0062  F744  F033   	movff	_C+210,btemp+9	;volatile
 48200  014BCC  0062  F748  F034   	movff	_C+211,btemp+10	;volatile
 48201  014BD2  0062  F74C  F035   	movff	_C+212,btemp+11	;volatile
 48202                           
 48203                           ;stkvar	_adj @ sp[(-6)+0]
 48204  014BD8  0EFA               	movlw	-6
 48205  014BDA  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 48206  014BE0  0EFB               	movlw	-5
 48207  014BE2  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 48208  014BE8  0EFC               	movlw	-4
 48209  014BEA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 48210  014BF0  0EFD               	movlw	-3
 48211  014BF2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 48212  014BF8                     l17092:
 48213                           
 48214                           ;bsoc.c: 57:  C.dynamic_ah += ((C.c_bat * adj) / 3600.0);
 48215  014BF8  0E00               	movlw	0
 48216  014BFA  6EE6               	movwf	postinc1,c
 48217  014BFC  0E00               	movlw	0
 48218  014BFE  6EE6               	movwf	postinc1,c
 48219  014C00  0E61               	movlw	97
 48220  014C02  6EE6               	movwf	postinc1,c
 48221  014C04  0E45               	movlw	69
 48222  014C06  6EE6               	movwf	postinc1,c
 48223                           
 48224                           ;stkvar	_adj @ sp[(-10)+0]
 48225  014C08  0EF6               	movlw	-10
 48226  014C0A  006F FF8F FFE6     	movff	plusw1,postinc1
 48227  014C10  006F FF8F FFE6     	movff	plusw1,postinc1
 48228  014C16  006F FF8F FFE6     	movff	plusw1,postinc1
 48229  014C1C  006F FF8F FFE6     	movff	plusw1,postinc1
 48230  014C22  EE22  F143         	lfsr	2,_C+68	;volatile
 48231  014C26  006F FF7B FFE6     	movff	postinc2,postinc1
 48232  014C2C  006F FF7B FFE6     	movff	postinc2,postinc1
 48233  014C32  006F FF7B FFE6     	movff	postinc2,postinc1
 48234  014C38  006F FF7B FFE6     	movff	postinc2,postinc1
 48235  014C3E  EC32  F0B3         	call	___flmul	;wreg free
 48236  014C42  0060  F0AB  FFE6   	movff	btemp,postinc1
 48237  014C48  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48238  014C4E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48239  014C54  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48240  014C5A  EC83  F0BE         	call	___fldiv	;wreg free
 48241  014C5E  0060  F0AB  FFE6   	movff	btemp,postinc1
 48242  014C64  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48243  014C6A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48244  014C70  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48245  014C76  0E8F               	movlw	low (_C+144)
 48246  014C78  6EE6               	movwf	postinc1,c
 48247  014C7A  0E09               	movlw	high (_C+144)
 48248  014C7C  6EE6               	movwf	postinc1,c
 48249  014C7E  EC2F  F00A         	call	___asfladd	;wreg free
 48250                           
 48251                           ;bsoc.c: 59:  C.dynamic_ah_adj = C.dynamic_ah;
 48252  014C82  EE22  F18F         	lfsr	2,_C+144	;volatile
 48253  014C86  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
 48254  014C8C  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
 48255  014C92  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
 48256  014C98  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
 48257                           
 48258                           ;bsoc.c: 60:  if (C.dynamic_ah_adj > (C.bank_ah))
 48259  014C9E  EE22  F19B         	lfsr	2,_C+156	;volatile
 48260  014CA2  006F FF7B FFE6     	movff	postinc2,postinc1
 48261  014CA8  006F FF7B FFE6     	movff	postinc2,postinc1
 48262  014CAE  006F FF7B FFE6     	movff	postinc2,postinc1
 48263  014CB4  006F FF7B FFE6     	movff	postinc2,postinc1
 48264  014CBA  EE22  F18B         	lfsr	2,_C+140	;volatile
 48265  014CBE  006F FF7B FFE6     	movff	postinc2,postinc1
 48266  014CC4  006F FF7B FFE6     	movff	postinc2,postinc1
 48267  014CCA  006F FF7B FFE6     	movff	postinc2,postinc1
 48268  014CD0  006F FF7B FFE6     	movff	postinc2,postinc1
 48269  014CD6  ECF5  F0F4         	call	___flge	;wreg free
 48270  014CDA  B02A               	btfsc	btemp& (0+255),0,c
 48271  014CDC  D00E               	goto	l17100
 48272                           
 48273                           ;bsoc.c: 61:   C.dynamic_ah_adj = C.bank_ah;
 48274  014CDE  EE22  F18B         	lfsr	2,_C+140	;volatile
 48275  014CE2  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
 48276  014CE8  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
 48277  014CEE  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
 48278  014CF4  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
 48279  014CFA                     l17100:
 48280                           
 48281                           ;bsoc.c: 62:  if (C.dynamic_ah_adj < 0.1)
 48282  014CFA  0ECD               	movlw	205
 48283  014CFC  6EE6               	movwf	postinc1,c
 48284  014CFE  0ECC               	movlw	204
 48285  014D00  6EE6               	movwf	postinc1,c
 48286  014D02  0ECC               	movlw	204
 48287  014D04  6EE6               	movwf	postinc1,c
 48288  014D06  0E3D               	movlw	61
 48289  014D08  6EE6               	movwf	postinc1,c
 48290  014D0A  EE22  F19B         	lfsr	2,_C+156	;volatile
 48291  014D0E  006F FF7B FFE6     	movff	postinc2,postinc1
 48292  014D14  006F FF7B FFE6     	movff	postinc2,postinc1
 48293  014D1A  006F FF7B FFE6     	movff	postinc2,postinc1
 48294  014D20  006F FF7B FFE6     	movff	postinc2,postinc1
 48295  014D26  ECF5  F0F4         	call	___flge	;wreg free
 48296  014D2A  B02A               	btfsc	btemp& (0+255),0,c
 48297  014D2C  D010               	goto	l17104
 48298                           
 48299                           ;bsoc.c: 63:   C.dynamic_ah_adj = 0.1;
 48300  014D2E  0ECD               	movlw	205
 48301  014D30  006F FFA0  F99B    	movff	wreg,_C+156	;volatile
 48302  014D36  0ECC               	movlw	204
 48303  014D38  006F FFA0  F99C    	movff	wreg,_C+157	;volatile
 48304  014D3E  0ECC               	movlw	204
 48305  014D40  006F FFA0  F99D    	movff	wreg,_C+158	;volatile
 48306  014D46  0E3D               	movlw	61
 48307  014D48  006F FFA0  F99E    	movff	wreg,_C+159	;volatile
 48308  014D4E                     l17104:
 48309                           
 48310                           ;bsoc.c: 66:  C.pv_ah += (C.c_pv / 3600.0);
 48311  014D4E  0E00               	movlw	0
 48312  014D50  6EE6               	movwf	postinc1,c
 48313  014D52  0E00               	movlw	0
 48314  014D54  6EE6               	movwf	postinc1,c
 48315  014D56  0E61               	movlw	97
 48316  014D58  6EE6               	movwf	postinc1,c
 48317  014D5A  0E45               	movlw	69
 48318  014D5C  6EE6               	movwf	postinc1,c
 48319  014D5E  EE22  F147         	lfsr	2,_C+72	;volatile
 48320  014D62  006F FF7B FFE6     	movff	postinc2,postinc1
 48321  014D68  006F FF7B FFE6     	movff	postinc2,postinc1
 48322  014D6E  006F FF7B FFE6     	movff	postinc2,postinc1
 48323  014D74  006F FF7B FFE6     	movff	postinc2,postinc1
 48324  014D7A  EC83  F0BE         	call	___fldiv	;wreg free
 48325  014D7E  0060  F0AB  FFE6   	movff	btemp,postinc1
 48326  014D84  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48327  014D8A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48328  014D90  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48329  014D96  0E93               	movlw	low (_C+148)
 48330  014D98  6EE6               	movwf	postinc1,c
 48331  014D9A  0E09               	movlw	high (_C+148)
 48332  014D9C  6EE6               	movwf	postinc1,c
 48333  014D9E  EC2F  F00A         	call	___asfladd	;wreg free
 48334                           
 48335                           ;bsoc.c: 67:  C.pvkw += (C.p_pv / 3600.0);
 48336  014DA2  0E00               	movlw	0
 48337  014DA4  6EE6               	movwf	postinc1,c
 48338  014DA6  0E00               	movlw	0
 48339  014DA8  6EE6               	movwf	postinc1,c
 48340  014DAA  0E61               	movlw	97
 48341  014DAC  6EE6               	movwf	postinc1,c
 48342  014DAE  0E45               	movlw	69
 48343  014DB0  6EE6               	movwf	postinc1,c
 48344  014DB2  EE22  F17B         	lfsr	2,_C+124	;volatile
 48345  014DB6  006F FF7B FFE6     	movff	postinc2,postinc1
 48346  014DBC  006F FF7B FFE6     	movff	postinc2,postinc1
 48347  014DC2  006F FF7B FFE6     	movff	postinc2,postinc1
 48348  014DC8  006F FF7B FFE6     	movff	postinc2,postinc1
 48349  014DCE  EC83  F0BE         	call	___fldiv	;wreg free
 48350  014DD2  0060  F0AB  FFE6   	movff	btemp,postinc1
 48351  014DD8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48352  014DDE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48353  014DE4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48354  014DEA  0EA7               	movlw	low (_C+168)
 48355  014DEC  6EE6               	movwf	postinc1,c
 48356  014DEE  0E09               	movlw	high (_C+168)
 48357  014DF0  6EE6               	movwf	postinc1,c
 48358  014DF2  EC2F  F00A         	call	___asfladd	;wreg free
 48359                           
 48360                           ;bsoc.c: 68:  C.invkw += (C.p_inverter / 3600.0);
 48361  014DF6  0E00               	movlw	0
 48362  014DF8  6EE6               	movwf	postinc1,c
 48363  014DFA  0E00               	movlw	0
 48364  014DFC  6EE6               	movwf	postinc1,c
 48365  014DFE  0E61               	movlw	97
 48366  014E00  6EE6               	movwf	postinc1,c
 48367  014E02  0E45               	movlw	69
 48368  014E04  6EE6               	movwf	postinc1,c
 48369  014E06  EE22  F177         	lfsr	2,_C+120	;volatile
 48370  014E0A  006F FF7B FFE6     	movff	postinc2,postinc1
 48371  014E10  006F FF7B FFE6     	movff	postinc2,postinc1
 48372  014E16  006F FF7B FFE6     	movff	postinc2,postinc1
 48373  014E1C  006F FF7B FFE6     	movff	postinc2,postinc1
 48374  014E22  EC83  F0BE         	call	___fldiv	;wreg free
 48375  014E26  0060  F0AB  FFE6   	movff	btemp,postinc1
 48376  014E2C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48377  014E32  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48378  014E38  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48379  014E3E  0EAB               	movlw	low (_C+172)
 48380  014E40  6EE6               	movwf	postinc1,c
 48381  014E42  0E09               	movlw	high (_C+172)
 48382  014E44  6EE6               	movwf	postinc1,c
 48383  014E46  EC2F  F00A         	call	___asfladd	;wreg free
 48384                           
 48385                           ;bsoc.c: 69:  C.loadkw += (C.p_load / 3600.0);
 48386  014E4A  0E00               	movlw	0
 48387  014E4C  6EE6               	movwf	postinc1,c
 48388  014E4E  0E00               	movlw	0
 48389  014E50  6EE6               	movwf	postinc1,c
 48390  014E52  0E61               	movlw	97
 48391  014E54  6EE6               	movwf	postinc1,c
 48392  014E56  0E45               	movlw	69
 48393  014E58  6EE6               	movwf	postinc1,c
 48394  014E5A  EE22  F173         	lfsr	2,_C+116	;volatile
 48395  014E5E  006F FF7B FFE6     	movff	postinc2,postinc1
 48396  014E64  006F FF7B FFE6     	movff	postinc2,postinc1
 48397  014E6A  006F FF7B FFE6     	movff	postinc2,postinc1
 48398  014E70  006F FF7B FFE6     	movff	postinc2,postinc1
 48399  014E76  EC83  F0BE         	call	___fldiv	;wreg free
 48400  014E7A  0060  F0AB  FFE6   	movff	btemp,postinc1
 48401  014E80  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48402  014E86  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48403  014E8C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48404  014E92  0EAF               	movlw	low (_C+176)
 48405  014E94  6EE6               	movwf	postinc1,c
 48406  014E96  0E09               	movlw	high (_C+176)
 48407  014E98  6EE6               	movwf	postinc1,c
 48408  014E9A  EC2F  F00A         	call	___asfladd	;wreg free
 48409                           
 48410                           ;bsoc.c: 70:  if (C.p_bat > 0.0)
 48411  014E9E  EE22  F17F         	lfsr	2,_C+128	;volatile
 48412  014EA2  006F FF7B FFE6     	movff	postinc2,postinc1
 48413  014EA8  006F FF7B FFE6     	movff	postinc2,postinc1
 48414  014EAE  006F FF7B FFE6     	movff	postinc2,postinc1
 48415  014EB4  006F FF7B FFE6     	movff	postinc2,postinc1
 48416  014EBA  0E00               	movlw	0
 48417  014EBC  6EE6               	movwf	postinc1,c
 48418  014EBE  0E00               	movlw	0
 48419  014EC0  6EE6               	movwf	postinc1,c
 48420  014EC2  0E00               	movlw	0
 48421  014EC4  6EE6               	movwf	postinc1,c
 48422  014EC6  0E00               	movlw	0
 48423  014EC8  6EE6               	movwf	postinc1,c
 48424  014ECA  ECF5  F0F4         	call	___flge	;wreg free
 48425  014ECE  B02A               	btfsc	btemp& (0+255),0,c
 48426  014ED0  D02A               	goto	l17110
 48427                           
 48428                           ;bsoc.c: 71:   C.bkwi += (C.p_bat / 3600.0);
 48429  014ED2  0E00               	movlw	0
 48430  014ED4  6EE6               	movwf	postinc1,c
 48431  014ED6  0E00               	movlw	0
 48432  014ED8  6EE6               	movwf	postinc1,c
 48433  014EDA  0E61               	movlw	97
 48434  014EDC  6EE6               	movwf	postinc1,c
 48435  014EDE  0E45               	movlw	69
 48436  014EE0  6EE6               	movwf	postinc1,c
 48437  014EE2  EE22  F17F         	lfsr	2,_C+128	;volatile
 48438  014EE6  006F FF7B FFE6     	movff	postinc2,postinc1
 48439  014EEC  006F FF7B FFE6     	movff	postinc2,postinc1
 48440  014EF2  006F FF7B FFE6     	movff	postinc2,postinc1
 48441  014EF8  006F FF7B FFE6     	movff	postinc2,postinc1
 48442  014EFE  EC83  F0BE         	call	___fldiv	;wreg free
 48443  014F02  0060  F0AB  FFE6   	movff	btemp,postinc1
 48444  014F08  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48445  014F0E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48446  014F14  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48447  014F1A  0E9F               	movlw	low (_C+160)
 48448  014F1C  6EE6               	movwf	postinc1,c
 48449  014F1E  0E09               	movlw	high (_C+160)
 48450  014F20  6EE6               	movwf	postinc1,c
 48451  014F22  EC2F  F00A         	call	___asfladd	;wreg free
 48452  014F26                     l17110:
 48453                           
 48454                           ;bsoc.c: 72:  if (C.p_bat < 0.0)
 48455  014F26  EE22  F17F         	lfsr	2,_C+128	;volatile
 48456  014F2A  0E03               	movlw	3
 48457  014F2C  AEDB               	btfss	plusw2,7,c
 48458  014F2E  D038               	goto	l17114
 48459                           
 48460                           ;bsoc.c: 73:   C.bkwo += fabsf(C.p_bat / 3600.0);
 48461  014F30  0E00               	movlw	0
 48462  014F32  6EE6               	movwf	postinc1,c
 48463  014F34  0E00               	movlw	0
 48464  014F36  6EE6               	movwf	postinc1,c
 48465  014F38  0E61               	movlw	97
 48466  014F3A  6EE6               	movwf	postinc1,c
 48467  014F3C  0E45               	movlw	69
 48468  014F3E  6EE6               	movwf	postinc1,c
 48469  014F40  EE22  F17F         	lfsr	2,_C+128	;volatile
 48470  014F44  006F FF7B FFE6     	movff	postinc2,postinc1
 48471  014F4A  006F FF7B FFE6     	movff	postinc2,postinc1
 48472  014F50  006F FF7B FFE6     	movff	postinc2,postinc1
 48473  014F56  006F FF7B FFE6     	movff	postinc2,postinc1
 48474  014F5C  EC83  F0BE         	call	___fldiv	;wreg free
 48475  014F60  0060  F0AB  FFE6   	movff	btemp,postinc1
 48476  014F66  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48477  014F6C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48478  014F72  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48479  014F78  EC6D  F004         	call	_fabsf	;wreg free
 48480  014F7C  0060  F0AB  FFE6   	movff	btemp,postinc1
 48481  014F82  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48482  014F88  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48483  014F8E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48484  014F94  0EA3               	movlw	low (_C+164)
 48485  014F96  6EE6               	movwf	postinc1,c
 48486  014F98  0E09               	movlw	high (_C+164)
 48487  014F9A  6EE6               	movwf	postinc1,c
 48488  014F9C  EC2F  F00A         	call	___asfladd	;wreg free
 48489  014FA0                     l17114:
 48490                           
 48491                           ;bsoc.c: 75:  C.soc = ((uint16_t) ((C.dynamic_ah_adj / C.bank_ah)*100.0) + 1);
 48492  014FA0  0E00               	movlw	0
 48493  014FA2  6EE6               	movwf	postinc1,c
 48494  014FA4  0E00               	movlw	0
 48495  014FA6  6EE6               	movwf	postinc1,c
 48496  014FA8  0EC8               	movlw	200
 48497  014FAA  6EE6               	movwf	postinc1,c
 48498  014FAC  0E42               	movlw	66
 48499  014FAE  6EE6               	movwf	postinc1,c
 48500  014FB0  EE22  F18B         	lfsr	2,_C+140	;volatile
 48501  014FB4  006F FF7B FFE6     	movff	postinc2,postinc1
 48502  014FBA  006F FF7B FFE6     	movff	postinc2,postinc1
 48503  014FC0  006F FF7B FFE6     	movff	postinc2,postinc1
 48504  014FC6  006F FF7B FFE6     	movff	postinc2,postinc1
 48505  014FCC  EE22  F19B         	lfsr	2,_C+156	;volatile
 48506  014FD0  006F FF7B FFE6     	movff	postinc2,postinc1
 48507  014FD6  006F FF7B FFE6     	movff	postinc2,postinc1
 48508  014FDC  006F FF7B FFE6     	movff	postinc2,postinc1
 48509  014FE2  006F FF7B FFE6     	movff	postinc2,postinc1
 48510  014FE8  EC83  F0BE         	call	___fldiv	;wreg free
 48511  014FEC  0060  F0AB  FFE6   	movff	btemp,postinc1
 48512  014FF2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48513  014FF8  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48514  014FFE  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48515  015004  EC32  F0B3         	call	___flmul	;wreg free
 48516  015008  0060  F0AB  FFE6   	movff	btemp,postinc1
 48517  01500E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48518  015014  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48519  01501A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48520  015020  EC89  F0F3         	call	___fltol	;wreg free
 48521  015024  0060  F0A8  F034   	movff	btemp,btemp+10
 48522  01502A  0060  F0AC  F035   	movff	btemp+1,btemp+11
 48523  015030  0E01               	movlw	1
 48524  015032  2634               	addwf	(btemp+10)^0,f,c
 48525  015034  0E00               	movlw	0
 48526  015036  2235               	addwfc	(btemp+11)^0,f,c
 48527  015038  0060  F0D0  F9B5   	movff	btemp+10,_C+182	;volatile
 48528  01503E  0060  F0D4  F9B6   	movff	btemp+11,_C+183	;volatile
 48529                           
 48530                           ;bsoc.c: 76:  if (C.soc > 100)
 48531  015044  EE22  F1B5         	lfsr	2,_C+182	;volatile
 48532  015048  0E01               	movlw	1
 48533  01504A  50DB               	movf	plusw2,w,c
 48534  01504C  E104               	bnz	u1675_20
 48535  01504E  0E65               	movlw	101
 48536  015050  5CDE               	subwf	postinc2,w,c
 48537  015052  A0D8               	btfss	status,0,c
 48538  015054  D008               	goto	l17120
 48539  015056                     u1675_20:
 48540                           
 48541                           ;bsoc.c: 77:   C.soc = 100;
 48542  015056  0E64               	movlw	100
 48543  015058  006F FFA0  F9B5    	movff	wreg,_C+182	;volatile
 48544  01505E  0E00               	movlw	0
 48545  015060  006F FFA0  F9B6    	movff	wreg,_C+183	;volatile
 48546  015066                     l17120:
 48547                           
 48548                           ;bsoc.c: 79:  if (C.c_bat < 0.0) {
 48549  015066  EE22  F143         	lfsr	2,_C+68	;volatile
 48550  01506A  0E03               	movlw	3
 48551  01506C  AEDB               	btfss	plusw2,7,c
 48552  01506E  D047               	goto	l2366
 48553                           
 48554                           ;bsoc.c: 80:   C.runtime = (uint16_t) (-(C.dynamic_ah_adj / C.c_bat));
 48555  015070  EE22  F143         	lfsr	2,_C+68	;volatile
 48556  015074  006F FF7B FFE6     	movff	postinc2,postinc1
 48557  01507A  006F FF7B FFE6     	movff	postinc2,postinc1
 48558  015080  006F FF7B FFE6     	movff	postinc2,postinc1
 48559  015086  006F FF7B FFE6     	movff	postinc2,postinc1
 48560  01508C  EE22  F19B         	lfsr	2,_C+156	;volatile
 48561  015090  006F FF7B FFE6     	movff	postinc2,postinc1
 48562  015096  006F FF7B FFE6     	movff	postinc2,postinc1
 48563  01509C  006F FF7B FFE6     	movff	postinc2,postinc1
 48564  0150A2  006F FF7B FFE6     	movff	postinc2,postinc1
 48565  0150A8  EC83  F0BE         	call	___fldiv	;wreg free
 48566  0150AC  0060  F0AB  FFE6   	movff	btemp,postinc1
 48567  0150B2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48568  0150B8  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48569  0150BE  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48570  0150C4  EC54  F00E         	call	___flneg	;wreg free
 48571  0150C8  0060  F0AB  FFE6   	movff	btemp,postinc1
 48572  0150CE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48573  0150D4  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48574  0150DA  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48575  0150E0  EC89  F0F3         	call	___fltol	;wreg free
 48576  0150E4  0060  F0A8  F034   	movff	btemp,btemp+10
 48577  0150EA  0060  F0AC  F035   	movff	btemp+1,btemp+11
 48578  0150F0  0060  F0D0  F9B3   	movff	btemp+10,_C+180	;volatile
 48579  0150F6  0060  F0D4  F9B4   	movff	btemp+11,_C+181	;volatile
 48580                           
 48581                           ;bsoc.c: 81:  } else {
 48582  0150FC  D008               	goto	l17124
 48583  0150FE                     l2366:
 48584                           
 48585                           ;bsoc.c: 82:   C.runtime = 99;
 48586  0150FE  0E63               	movlw	99
 48587  015100  006F FFA0  F9B3    	movff	wreg,_C+180	;volatile
 48588  015106  0E00               	movlw	0
 48589  015108  006F FFA0  F9B4    	movff	wreg,_C+181	;volatile
 48590  01510E                     l17124:
 48591                           
 48592                           ;bsoc.c: 84:  if (C.runtime > 99)
 48593  01510E  EE22  F1B3         	lfsr	2,_C+180	;volatile
 48594  015112  0E01               	movlw	1
 48595  015114  50DB               	movf	plusw2,w,c
 48596  015116  E104               	bnz	u1677_20
 48597  015118  0E64               	movlw	100
 48598  01511A  5CDE               	subwf	postinc2,w,c
 48599  01511C  A0D8               	btfss	status,0,c
 48600  01511E  D008               	goto	l17128
 48601  015120                     u1677_20:
 48602                           
 48603                           ;bsoc.c: 85:   C.runtime = 99;
 48604  015120  0E63               	movlw	99
 48605  015122  006F FFA0  F9B3    	movff	wreg,_C+180	;volatile
 48606  015128  0E00               	movlw	0
 48607  01512A  006F FFA0  F9B4    	movff	wreg,_C+181	;volatile
 48608  015130                     l17128:
 48609                           
 48610                           ;bsoc.c: 87:  V.lowint_count++;
 48611  015130  0E01               	movlw	1
 48612  015132  0102               	movlb	2	; () banked
 48613  015134  27B4               	addwf	(_V+173)& (0+255),f,b	;volatile
 48614  015136  0E00               	movlw	0
 48615  015138  23B5               	addwfc	(_V+174)& (0+255),f,b	;volatile
 48616  01513A  23B6               	addwfc	(_V+175)& (0+255),f,b	;volatile
 48617  01513C  23B7               	addwfc	(_V+176)& (0+255),f,b	;volatile
 48618                           
 48619                           ;bsoc.c: 89:  if (!log_update_wait++ && V.system_stable) {
 48620  01513E  2A50               	incf	calc_bsoc@log_update_wait^0,f,c
 48621  015140  0450               	decf	calc_bsoc@log_update_wait^0,w,c
 48622  015142  A4D8               	btfss	status,2,c
 48623  015144  D177               	goto	l17140
 48624                           
 48625                           ; BSR set to: 2
 48626  015146  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 48627  015148  B4D8               	btfsc	status,2,c
 48628  01514A  D174               	goto	l17140
 48629                           
 48630                           ; BSR set to: 2
 48631                           ;bsoc.c: 90:   log_ptr = port_data_dma_ptr();
 48632  01514C  EC42  F015         	call	_port_data_dma_ptr	;wreg free
 48633                           
 48634                           ;stkvar	_log_ptr @ sp[(-6)+4]
 48635  015150  0EFF               	movlw	-1
 48636  015152  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 48637  015158  0EFE               	movlw	-2
 48638  01515A  0060  F0AB  FFE3   	movff	btemp,plusw1
 48639                           
 48640                           ;bsoc.c: 91:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu,%4.3f,%4.3f,%4.3f\r\n",
 48641  015160  EE22  F1D0         	lfsr	2,_C+209	;volatile
 48642  015164  006F FF7B FFE6     	movff	postinc2,postinc1
 48643  01516A  006F FF7B FFE6     	movff	postinc2,postinc1
 48644  015170  006F FF7B FFE6     	movff	postinc2,postinc1
 48645  015176  006F FF7B FFE6     	movff	postinc2,postinc1
 48646  01517C  EE22  F1D4         	lfsr	2,_C+213	;volatile
 48647  015180  006F FF7B FFE6     	movff	postinc2,postinc1
 48648  015186  006F FF7B FFE6     	movff	postinc2,postinc1
 48649  01518C  006F FF7B FFE6     	movff	postinc2,postinc1
 48650  015192  006F FF7B FFE6     	movff	postinc2,postinc1
 48651  015198  EE22  F19B         	lfsr	2,_C+156	;volatile
 48652  01519C  006F FF7B FFE6     	movff	postinc2,postinc1
 48653  0151A2  006F FF7B FFE6     	movff	postinc2,postinc1
 48654  0151A8  006F FF7B FFE6     	movff	postinc2,postinc1
 48655  0151AE  006F FF7B FFE6     	movff	postinc2,postinc1
 48656  0151B4  EE22  F233         	lfsr	2,_C+308	;volatile
 48657  0151B8  006F FF7B FFE6     	movff	postinc2,postinc1
 48658  0151BE  006F FF7B FFE6     	movff	postinc2,postinc1
 48659  0151C4  006F FF7B FFE6     	movff	postinc2,postinc1
 48660  0151CA  006F FF7B FFE6     	movff	postinc2,postinc1
 48661  0151D0  EE22  F22F         	lfsr	2,_C+304	;volatile
 48662  0151D4  006F FF7B FFE6     	movff	postinc2,postinc1
 48663  0151DA  006F FF7B FFE6     	movff	postinc2,postinc1
 48664  0151E0  006F FF7B FFE6     	movff	postinc2,postinc1
 48665  0151E6  006F FF7B FFE6     	movff	postinc2,postinc1
 48666  0151EC  EE22  F22D         	lfsr	2,_C+302	;volatile
 48667  0151F0  50DF               	movf	indf2,w,c
 48668  0151F2  6EE6               	movwf	postinc1,c
 48669  0151F4  0E00               	movlw	0
 48670  0151F6  6EE6               	movwf	postinc1,c
 48671  0151F8  EC26  F015         	call	_get_ac_charger_relay	;wreg free
 48672  0151FC  502A               	movf	btemp^0,w,c
 48673  0151FE  6EE6               	movwf	postinc1,c
 48674  015200  0E00               	movlw	0
 48675  015202  6EE6               	movwf	postinc1,c
 48676  015204  EE22  F167         	lfsr	2,_C+104	;volatile
 48677  015208  006F FF7B FFE6     	movff	postinc2,postinc1
 48678  01520E  006F FF7B FFE6     	movff	postinc2,postinc1
 48679  015214  006F FF7B FFE6     	movff	postinc2,postinc1
 48680  01521A  006F FF7B FFE6     	movff	postinc2,postinc1
 48681  015220  EE22  F187         	lfsr	2,_C+136	;volatile
 48682  015224  006F FF7B FFE6     	movff	postinc2,postinc1
 48683  01522A  006F FF7B FFE6     	movff	postinc2,postinc1
 48684  015230  006F FF7B FFE6     	movff	postinc2,postinc1
 48685  015236  006F FF7B FFE6     	movff	postinc2,postinc1
 48686  01523C  EE22  F1B3         	lfsr	2,_C+180	;volatile
 48687  015240  006F FF78  F034    	movff	postinc2,btemp+10
 48688  015246  006F FF74  F035    	movff	postdec2,btemp+11
 48689  01524C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 48690  015252  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 48691  015258  EE22  F1B5         	lfsr	2,_C+182	;volatile
 48692  01525C  006F FF78  F034    	movff	postinc2,btemp+10
 48693  015262  006F FF74  F035    	movff	postdec2,btemp+11
 48694  015268  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 48695  01526E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 48696  015274  EE22  F193         	lfsr	2,_C+148	;volatile
 48697  015278  006F FF7B FFE6     	movff	postinc2,postinc1
 48698  01527E  006F FF7B FFE6     	movff	postinc2,postinc1
 48699  015284  006F FF7B FFE6     	movff	postinc2,postinc1
 48700  01528A  006F FF7B FFE6     	movff	postinc2,postinc1
 48701  015290  EE22  F18F         	lfsr	2,_C+144	;volatile
 48702  015294  006F FF7B FFE6     	movff	postinc2,postinc1
 48703  01529A  006F FF7B FFE6     	movff	postinc2,postinc1
 48704  0152A0  006F FF7B FFE6     	movff	postinc2,postinc1
 48705  0152A6  006F FF7B FFE6     	movff	postinc2,postinc1
 48706  0152AC  EE22  F177         	lfsr	2,_C+120	;volatile
 48707  0152B0  006F FF7B FFE6     	movff	postinc2,postinc1
 48708  0152B6  006F FF7B FFE6     	movff	postinc2,postinc1
 48709  0152BC  006F FF7B FFE6     	movff	postinc2,postinc1
 48710  0152C2  006F FF7B FFE6     	movff	postinc2,postinc1
 48711  0152C8  EE22  F173         	lfsr	2,_C+116	;volatile
 48712  0152CC  006F FF7B FFE6     	movff	postinc2,postinc1
 48713  0152D2  006F FF7B FFE6     	movff	postinc2,postinc1
 48714  0152D8  006F FF7B FFE6     	movff	postinc2,postinc1
 48715  0152DE  006F FF7B FFE6     	movff	postinc2,postinc1
 48716  0152E4  EE22  F17B         	lfsr	2,_C+124	;volatile
 48717  0152E8  006F FF7B FFE6     	movff	postinc2,postinc1
 48718  0152EE  006F FF7B FFE6     	movff	postinc2,postinc1
 48719  0152F4  006F FF7B FFE6     	movff	postinc2,postinc1
 48720  0152FA  006F FF7B FFE6     	movff	postinc2,postinc1
 48721  015300  EE22  F17F         	lfsr	2,_C+128	;volatile
 48722  015304  006F FF7B FFE6     	movff	postinc2,postinc1
 48723  01530A  006F FF7B FFE6     	movff	postinc2,postinc1
 48724  015310  006F FF7B FFE6     	movff	postinc2,postinc1
 48725  015316  006F FF7B FFE6     	movff	postinc2,postinc1
 48726  01531C  EE22  F147         	lfsr	2,_C+72	;volatile
 48727  015320  006F FF7B FFE6     	movff	postinc2,postinc1
 48728  015326  006F FF7B FFE6     	movff	postinc2,postinc1
 48729  01532C  006F FF7B FFE6     	movff	postinc2,postinc1
 48730  015332  006F FF7B FFE6     	movff	postinc2,postinc1
 48731  015338  EE22  F143         	lfsr	2,_C+68	;volatile
 48732  01533C  006F FF7B FFE6     	movff	postinc2,postinc1
 48733  015342  006F FF7B FFE6     	movff	postinc2,postinc1
 48734  015348  006F FF7B FFE6     	movff	postinc2,postinc1
 48735  01534E  006F FF7B FFE6     	movff	postinc2,postinc1
 48736  015354  EE22  F163         	lfsr	2,_C+100	;volatile
 48737  015358  006F FF7B FFE6     	movff	postinc2,postinc1
 48738  01535E  006F FF7B FFE6     	movff	postinc2,postinc1
 48739  015364  006F FF7B FFE6     	movff	postinc2,postinc1
 48740  01536A  006F FF7B FFE6     	movff	postinc2,postinc1
 48741  015370  EE22  F14B         	lfsr	2,_C+76	;volatile
 48742  015374  006F FF7B FFE6     	movff	postinc2,postinc1
 48743  01537A  006F FF7B FFE6     	movff	postinc2,postinc1
 48744  015380  006F FF7B FFE6     	movff	postinc2,postinc1
 48745  015386  006F FF7B FFE6     	movff	postinc2,postinc1
 48746  01538C  EE22  F14F         	lfsr	2,_C+80	;volatile
 48747  015390  006F FF7B FFE6     	movff	postinc2,postinc1
 48748  015396  006F FF7B FFE6     	movff	postinc2,postinc1
 48749  01539C  006F FF7B FFE6     	movff	postinc2,postinc1
 48750  0153A2  006F FF7B FFE6     	movff	postinc2,postinc1
 48751  0153A8  EE22  F153         	lfsr	2,_C+84	;volatile
 48752  0153AC  006F FF7B FFE6     	movff	postinc2,postinc1
 48753  0153B2  006F FF7B FFE6     	movff	postinc2,postinc1
 48754  0153B8  006F FF7B FFE6     	movff	postinc2,postinc1
 48755  0153BE  006F FF7B FFE6     	movff	postinc2,postinc1
 48756  0153C4  0060  FA23  FFE6   	movff	_V+129,postinc1
 48757  0153CA  0060  FA27  FFE6   	movff	_V+130,postinc1
 48758  0153D0  0060  FA2B  FFE6   	movff	_V+131,postinc1
 48759  0153D6  0060  FA2F  FFE6   	movff	_V+132,postinc1
 48760  0153DC  0E32               	movlw	50
 48761  0153DE  6EE6               	movwf	postinc1,c
 48762  0153E0  0E00               	movlw	0
 48763  0153E2  6EE6               	movwf	postinc1,c
 48764  0153E4  0EF7               	movlw	low STR_95
 48765  0153E6  6EE6               	movwf	postinc1,c
 48766  0153E8  0EF9               	movlw	high STR_95
 48767  0153EA  6EE6               	movwf	postinc1,c
 48768                           
 48769                           ;stkvar	_log_ptr @ sp[(-98)+4]
 48770  0153EC  0EA2               	movlw	-94
 48771  0153EE  006F FF8F FFE6     	movff	plusw1,postinc1
 48772  0153F4  006F FF8F FFE6     	movff	plusw1,postinc1
 48773  0153FA  0E5E               	movlw	94
 48774  0153FC  6EE6               	movwf	postinc1,c
 48775  0153FE  ECA5  F0FD         	call	_sprintf	;wreg free
 48776                           
 48777                           ; BSR set to: 0
 48778                           ;bsoc.c: 98:   StartTimer(TMR_DISPLAY, 125);
 48779  015402  0E7D               	movlw	125
 48780  015404  6EE6               	movwf	postinc1,c
 48781  015406  0E00               	movlw	0
 48782  015408  6EE6               	movwf	postinc1,c
 48783  01540A  0E0A               	movlw	10
 48784  01540C  6EE6               	movwf	postinc1,c
 48785  01540E  ECD0  F00F         	call	_StartTimer	;wreg free
 48786                           
 48787                           ;bsoc.c: 99:   send_port_data_dma(strlen((char*) log_ptr));
 48788                           ;stkvar	_log_ptr @ sp[(-6)+4]
 48789  015412  0EFE               	movlw	-2
 48790  015414  006F FF8F FFE6     	movff	plusw1,postinc1
 48791  01541A  006F FF8F FFE6     	movff	plusw1,postinc1
 48792  015420  EC14  F006         	call	_strlen	;wreg free
 48793  015424  0060  F0AB  FFE6   	movff	btemp,postinc1
 48794  01542A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48795  015430  ECDD  F00D         	call	_send_port_data_dma	;wreg free
 48796  015434                     l17140:
 48797                           
 48798                           ;bsoc.c: 101:  if (log_update_wait >= 10)
 48799  015434  0E09               	movlw	9
 48800  015436  6450               	cpfsgt	calc_bsoc@log_update_wait^0,c
 48801  015438  D001               	goto	l2370
 48802                           
 48803                           ;bsoc.c: 102:   log_update_wait = 0;
 48804  01543A  6A50               	clrf	calc_bsoc@log_update_wait^0,c
 48805  01543C                     l2370:
 48806                           
 48807                           ;bsoc.c: 104:  C.update = 0;
 48808  01543C  0E00               	movlw	0
 48809  01543E  006F FFA0  F9B7    	movff	wreg,_C+184	;volatile
 48810                           
 48811                           ;bsoc.c: 106:  do { LATEbits.LATE1 = 0; } while(0);
 48812  015444  92BE               	bcf	190,1,c	;volatile
 48813                           
 48814                           ; _calc_bsoc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 48815  015446  0EFA               	movlw	250
 48816  015448  26E1               	addwf	fsr1l,f,c
 48817  01544A  0EFF               	movlw	255
 48818  01544C  22E2               	addwfc	fsr1h,f,c
 48819  01544E  0012               	return		;funcret
 48820  015450                     __end_of_calc_bsoc:
 48821                           	opt callstack 0
 48822                           
 48823 ;; *************** function _send_port_data_dma *****************
 48824 ;; Defined at:
 48825 ;;		line 397 in file "eadog.c"
 48826 ;; Parameters:    Size  Location     Type
 48827 ;;  dsize           2  [STACK] unsigned short 
 48828 ;; Auto vars:     Size  Location     Type
 48829 ;;		None
 48830 ;; Return value:  Size  Location     Type
 48831 ;;                  1  [STACK] void 
 48832 ;; Registers used:
 48833 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 48834 ;; Tracked objects:
 48835 ;;		On entry : 0/0
 48836 ;;		On exit  : 3F/3B
 48837 ;;		Unchanged: 0/0
 48838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48843 ;;Total ram usage:        0 bytes
 48844 ;; Hardware stack levels used:    1
 48845 ;; Hardware stack levels required when called:    3
 48846 ;; This function calls:
 48847 ;;		Nothing
 48848 ;; This function is called by:
 48849 ;;		_calc_bsoc
 48850 ;; This function uses a reentrant model
 48851 ;;
 48852                           
 48853                           	psect	text201
 48854  001BBA                     __ptext201:
 48855                           	opt callstack 0
 48856  001BBA                     _send_port_data_dma:
 48857                           	opt callstack 11
 48858                           
 48859                           ;eadog.c: 397: void send_port_data_dma(uint16_t dsize);eadog.c: 398: {;eadog.c: 399:  if
      +                           (dsize > 512)
 48860                           ;stkvar	_dsize @ sp[(0)+-2]
 48861                           
 48862                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48863                           ;incstack = 0
 48864  001BBA  0EFE               	movlw	-2
 48865  001BBC  04E3               	decf	plusw1,w,c
 48866  001BBE  0EFF               	movlw	-1
 48867  001BC0  006F FF8C  F02A    	movff	plusw1,btemp
 48868  001BC6  0E02               	movlw	2
 48869  001BC8  5A2A               	subwfb	btemp^0,f,c
 48870  001BCA  A0D8               	btfss	status,0,c
 48871  001BCC  D00C               	goto	l12924
 48872                           
 48873                           ;eadog.c: 400:   dsize = 512;
 48874  001BCE  0E00               	movlw	0
 48875  001BD0  6E34               	movwf	(btemp+10)^0,c
 48876  001BD2  0E02               	movlw	2
 48877  001BD4  6E35               	movwf	(btemp+11)^0,c
 48878                           
 48879                           ;stkvar	_dsize @ sp[(0)+-2]
 48880  001BD6  0EFE               	movlw	-2
 48881  001BD8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 48882  001BDE  0EFF               	movlw	-1
 48883  001BE0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 48884  001BE6                     l12924:
 48885                           
 48886                           ;eadog.c: 402:  DMA2CON0bits.EN = 0;
 48887  001BE6  013B               	movlb	59	; () banked
 48888  001BE8  9FDC               	bcf	220,7,b	;volatile
 48889                           
 48890                           ; BSR set to: 59
 48891                           ;eadog.c: 403:  DMA2SSZ = dsize;
 48892                           ;stkvar	_dsize @ sp[(0)+-2]
 48893  001BEA  0EFE               	movlw	-2
 48894  001BEC  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 48895  001BF2  0EFF               	movlw	-1
 48896  001BF4  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 48897                           
 48898                           ; BSR set to: 59
 48899                           ;eadog.c: 404:  DMA2DSZ = 1;
 48900  001BFA  0E00               	movlw	0
 48901  001BFC  6FCF               	movwf	207,b	;volatile
 48902  001BFE  0E01               	movlw	1
 48903  001C00  6FCE               	movwf	206,b	;volatile
 48904                           
 48905                           ; BSR set to: 59
 48906                           ;eadog.c: 405:  DMA2CON0bits.EN = 1;
 48907  001C02  8FDC               	bsf	220,7,b	;volatile
 48908                           
 48909                           ; BSR set to: 59
 48910                           ;eadog.c: 406:  DMA2CON0bits.DMA2SIRQEN = 1;
 48911  001C04  8DDC               	bsf	220,6,b	;volatile
 48912                           
 48913                           ; BSR set to: 59
 48914                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 48915  001C06  52E5               	movf	postdec1,f,c
 48916  001C08  52E5               	movf	postdec1,f,c
 48917  001C0A  0012               	return		;funcret
 48918  001C0C                     __end_of_send_port_data_dma:
 48919                           	opt callstack 0
 48920                           
 48921 ;; *************** function _port_data_dma_ptr *****************
 48922 ;; Defined at:
 48923 ;;		line 412 in file "eadog.c"
 48924 ;; Parameters:    Size  Location     Type
 48925 ;;		None
 48926 ;; Auto vars:     Size  Location     Type
 48927 ;;		None
 48928 ;; Return value:  Size  Location     Type
 48929 ;;                  2  [STACK] PTR unsigned char 
 48930 ;; Registers used:
 48931 ;;		wreg, status,2, status,0, btemp, btemp+1
 48932 ;; Tracked objects:
 48933 ;;		On entry : 3F/2
 48934 ;;		On exit  : 0/0
 48935 ;;		Unchanged: 0/0
 48936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48941 ;;Total ram usage:        0 bytes
 48942 ;; Hardware stack levels used:    1
 48943 ;; Hardware stack levels required when called:    3
 48944 ;; This function calls:
 48945 ;;		Nothing
 48946 ;; This function is called by:
 48947 ;;		_calc_bsoc
 48948 ;; This function uses a reentrant model
 48949 ;;
 48950                           
 48951                           	psect	text202
 48952  002A84                     __ptext202:
 48953                           	opt callstack 0
 48954  002A84                     _port_data_dma_ptr:
 48955                           	opt callstack 11
 48956                           
 48957                           ;eadog.c: 414:  return port_data;
 48958                           
 48959                           ; BSR set to: 59
 48960                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48961                           ;incstack = 0
 48962  002A84  0EFF               	movlw	low _port_data
 48963  002A86  6E2A               	movwf	btemp^0,c
 48964  002A88  0E06               	movlw	high _port_data
 48965  002A8A  6E2B               	movwf	(btemp+1)^0,c
 48966                           
 48967                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 48968  002A8C  0012               	return		;funcret
 48969  002A8E                     __end_of_port_data_dma_ptr:
 48970                           	opt callstack 0
 48971                           
 48972 ;; *************** function ___asfladd *****************
 48973 ;; Defined at:
 48974 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 48975 ;; Parameters:    Size  Location     Type
 48976 ;;  f1p             2  [STACK] PTR 
 48977 ;;		 -> C(320), 
 48978 ;;  f2              4  [STACK] PTR 
 48979 ;; Auto vars:     Size  Location     Type
 48980 ;;		None
 48981 ;; Return value:  Size  Location     Type
 48982 ;;                  4  [STACK] PTR 
 48983 ;; Registers used:
 48984 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 48985 ;; Tracked objects:
 48986 ;;		On entry : 0/0
 48987 ;;		On exit  : 0/0
 48988 ;;		Unchanged: 0/0
 48989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48994 ;;Total ram usage:        0 bytes
 48995 ;; Hardware stack levels used:    1
 48996 ;; Hardware stack levels required when called:    4
 48997 ;; This function calls:
 48998 ;;		___fladd
 48999 ;; This function is called by:
 49000 ;;		_calc_bsoc
 49001 ;; This function uses a reentrant model
 49002 ;;
 49003                           
 49004                           	psect	text203
 49005  00145E                     __ptext203:
 49006                           	opt callstack 0
 49007  00145E                     ___asfladd:
 49008                           	opt callstack 10
 49009                           
 49010                           ;	Return value of ___asfladd is never used
 49011                           ;stkvar	_f2 @ sp[(0)+-6]
 49012                           
 49013                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49014                           ;incstack = 0
 49015  00145E  0EFA               	movlw	-6
 49016  001460  006F FF8F FFE6     	movff	plusw1,postinc1
 49017  001466  006F FF8F FFE6     	movff	plusw1,postinc1
 49018  00146C  006F FF8F FFE6     	movff	plusw1,postinc1
 49019  001472  006F FF8F FFE6     	movff	plusw1,postinc1
 49020                           
 49021                           ;stkvar	_f1p @ sp[(-4)+-2]
 49022  001478  0EFA               	movlw	-6
 49023  00147A  006F FF8F FFD9     	movff	plusw1,fsr2l
 49024  001480  0EFB               	movlw	-5
 49025  001482  006F FF8F FFDA     	movff	plusw1,fsr2h
 49026  001488  006F FF7B FFE6     	movff	postinc2,postinc1
 49027  00148E  006F FF7B FFE6     	movff	postinc2,postinc1
 49028  001494  006F FF7B FFE6     	movff	postinc2,postinc1
 49029  00149A  006F FF7B FFE6     	movff	postinc2,postinc1
 49030  0014A0  EC47  F0B7         	call	___fladd	;wreg free
 49031                           
 49032                           ;stkvar	_f1p @ sp[(0)+-2]
 49033  0014A4  0EFE               	movlw	-2
 49034  0014A6  006F FF8F FFD9     	movff	plusw1,fsr2l
 49035  0014AC  0EFF               	movlw	-1
 49036  0014AE  006F FF8F FFDA     	movff	plusw1,fsr2h
 49037  0014B4  0060  F0AB  FFDE   	movff	btemp,postinc2
 49038  0014BA  0060  F0AF  FFDE   	movff	btemp+1,postinc2
 49039  0014C0  0060  F0B3  FFDE   	movff	btemp+2,postinc2
 49040  0014C6  0060  F0B7  FFDE   	movff	btemp+3,postinc2
 49041                           
 49042                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 49043  0014CC  0EFA               	movlw	250
 49044  0014CE  26E1               	addwf	fsr1l,f,c
 49045  0014D0  0EFF               	movlw	255
 49046  0014D2  22E2               	addwfc	fsr1h,f,c
 49047  0014D4  0012               	return		;funcret
 49048  0014D6                     __end_of___asfladd:
 49049                           	opt callstack 0
 49050                           
 49051 ;; *************** function _INT0_ISR *****************
 49052 ;; Defined at:
 49053 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 49054 ;; Parameters:    Size  Location     Type
 49055 ;;		None
 49056 ;; Auto vars:     Size  Location     Type
 49057 ;;		None
 49058 ;; Return value:  Size  Location     Type
 49059 ;;                  1    wreg      void 
 49060 ;; Registers used:
 49061 ;;		wreg, status,2, status,0, pclath, tosl
 49062 ;; Tracked objects:
 49063 ;;		On entry : 0/0
 49064 ;;		On exit  : 0/0
 49065 ;;		Unchanged: 0/0
 49066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49071 ;;Total ram usage:        0 bytes
 49072 ;; Hardware stack levels used:    1
 49073 ;; Hardware stack levels required when called:    2
 49074 ;; This function calls:
 49075 ;;		_INT0_CallBack
 49076 ;; This function is called by:
 49077 ;;		Interrupt level 2
 49078 ;; This function uses a non-reentrant model
 49079 ;;
 49080                           
 49081                           	psect	text204
 49082  002A5C                     __ptext204:
 49083                           	opt callstack 0
 49084  002A5C                     _INT0_ISR:
 49085                           	opt callstack 3
 49086                           
 49087                           ;incstack = 0
 49088  002A5C  EE14  F32C         	lfsr	1,___inthi_sp
 49089                           
 49090                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 49091  002A60  0139               	movlb	57	; () banked
 49092  002A62  91A1               	bcf	161,0,b	;volatile
 49093                           
 49094                           ; BSR set to: 57
 49095                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 49096  002A64  ECBC  F013         	call	_INT0_CallBack	;wreg free
 49097  002A68  0011               	retfie		f
 49098  002A6A                     __end_of_INT0_ISR:
 49099                           	opt callstack 0
 49100                           
 49101 ;; *************** function _INT0_CallBack *****************
 49102 ;; Defined at:
 49103 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 49104 ;; Parameters:    Size  Location     Type
 49105 ;;		None
 49106 ;; Auto vars:     Size  Location     Type
 49107 ;;		None
 49108 ;; Return value:  Size  Location     Type
 49109 ;;                  1  [STACK] void 
 49110 ;; Registers used:
 49111 ;;		wreg, status,2, status,0, pclath, tosl
 49112 ;; Tracked objects:
 49113 ;;		On entry : 3F/39
 49114 ;;		On exit  : 0/0
 49115 ;;		Unchanged: 0/0
 49116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49121 ;;Total ram usage:        0 bytes
 49122 ;; Hardware stack levels used:    1
 49123 ;; Hardware stack levels required when called:    1
 49124 ;; This function calls:
 49125 ;;		Absolute function
 49126 ;;		_INT0_DefaultInterruptHandler
 49127 ;; This function is called by:
 49128 ;;		_INT0_ISR
 49129 ;; This function uses a reentrant model
 49130 ;;
 49131                           
 49132                           	psect	text205
 49133  002778                     __ptext205:
 49134                           	opt callstack 0
 49135  002778                     _INT0_CallBack:
 49136                           	opt callstack 3
 49137                           
 49138                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 49139                           
 49140                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49141                           ;incstack = 0
 49142  002778  0100               	movlb	0	; () banked
 49143  00277A  51B3               	movf	_INT0_InterruptHandler& (0+255),w,b
 49144  00277C  11B4               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 49145  00277E  11B5               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 49146  002780  B4D8               	btfsc	status,2,c
 49147  002782  0012               	return	
 49148                           
 49149                           ; BSR set to: 0
 49150                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 49151  002784  D801               	call	u1313_48
 49152  002786  0012               	return	
 49153  002788                     u1313_48:
 49154  002788  0005               	push	
 49155  00278A  6EFA               	movwf	pclath,c
 49156  00278C  51B3               	movf	_INT0_InterruptHandler& (0+255),w,b
 49157  00278E  6EFD               	movwf	tosl,c
 49158  002790  51B4               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 49159  002792  6EFE               	movwf	tosh,c
 49160  002794  51B5               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 49161  002796  6EFF               	movwf	tosu,c
 49162  002798  50FA               	movf	pclath,w,c
 49163  00279A  0012               	return		;indir
 49164  00279C                     __end_of_INT0_CallBack:
 49165                           	opt callstack 0
 49166                           
 49167 ;; *************** function _INT0_DefaultInterruptHandler *****************
 49168 ;; Defined at:
 49169 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 49170 ;; Parameters:    Size  Location     Type
 49171 ;;		None
 49172 ;; Auto vars:     Size  Location     Type
 49173 ;;		None
 49174 ;; Return value:  Size  Location     Type
 49175 ;;                  1  [STACK] void 
 49176 ;; Registers used:
 49177 ;;		None
 49178 ;; Tracked objects:
 49179 ;;		On entry : 3F/0
 49180 ;;		On exit  : 0/0
 49181 ;;		Unchanged: 0/0
 49182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49187 ;;Total ram usage:        0 bytes
 49188 ;; Hardware stack levels used:    1
 49189 ;; This function calls:
 49190 ;;		Nothing
 49191 ;; This function is called by:
 49192 ;;		_EXT_INT_Initialize
 49193 ;;		_INT0_CallBack
 49194 ;; This function uses a reentrant model
 49195 ;;
 49196                           
 49197                           	psect	text206
 49198  01DC3E                     __ptext206:
 49199                           	opt callstack 0
 49200  01DC3E                     _INT0_DefaultInterruptHandler:
 49201                           	opt callstack 3
 49202                           
 49203                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 49204                           
 49205                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49206                           ;incstack = 0
 49207  01DC3E  0012               	return		;funcret
 49208  01DC40                     __end_of_INT0_DefaultInterruptHandler:
 49209                           	opt callstack 0
 49210                           
 49211 ;; *************** function _Default_ISR *****************
 49212 ;; Defined at:
 49213 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 49214 ;; Parameters:    Size  Location     Type
 49215 ;;		None
 49216 ;; Auto vars:     Size  Location     Type
 49217 ;;		None
 49218 ;; Return value:  Size  Location     Type
 49219 ;;                  1    wreg      void 
 49220 ;; Registers used:
 49221 ;;		None
 49222 ;; Tracked objects:
 49223 ;;		On entry : 0/0
 49224 ;;		On exit  : 0/0
 49225 ;;		Unchanged: 0/0
 49226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49231 ;;Total ram usage:        0 bytes
 49232 ;; Hardware stack levels used:    1
 49233 ;; This function calls:
 49234 ;;		Nothing
 49235 ;; This function is called by:
 49236 ;;		Interrupt level 2
 49237 ;; This function uses a non-reentrant model
 49238 ;;
 49239                           
 49240                           	psect	text207
 49241  002B00                     __ptext207:
 49242                           	opt callstack 0
 49243  002B00                     _Default_ISR:
 49244                           	opt callstack 5
 49245                           
 49246                           ;incstack = 0
 49247  002B00  EE14  F32C         	lfsr	1,___inthi_sp
 49248  002B04  0011               	retfie		f
 49249  002B06                     __end_of_Default_ISR:
 49250                           	opt callstack 0
 49251                           
 49252 ;; *************** function _ADCC_ISR *****************
 49253 ;; Defined at:
 49254 ;;		line 314 in file "mcc_generated_files/adcc.c"
 49255 ;; Parameters:    Size  Location     Type
 49256 ;;		None
 49257 ;; Auto vars:     Size  Location     Type
 49258 ;;		None
 49259 ;; Return value:  Size  Location     Type
 49260 ;;                  1    wreg      void 
 49261 ;; Registers used:
 49262 ;;		wreg, status,2, status,0, pclath, tosl
 49263 ;; Tracked objects:
 49264 ;;		On entry : 0/0
 49265 ;;		On exit  : 0/0
 49266 ;;		Unchanged: 0/0
 49267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49272 ;;Total ram usage:        0 bytes
 49273 ;; Hardware stack levels used:    1
 49274 ;; Hardware stack levels required when called:    1
 49275 ;; This function calls:
 49276 ;;		Absolute function
 49277 ;;		_ADCC_DefaultInterruptHandler
 49278 ;;		_adc_int_handler
 49279 ;; This function is called by:
 49280 ;;		Interrupt level 2
 49281 ;; This function uses a non-reentrant model
 49282 ;;
 49283                           
 49284                           	psect	text208
 49285  00240C                     __ptext208:
 49286                           	opt callstack 0
 49287  00240C                     _ADCC_ISR:
 49288                           	opt callstack 4
 49289                           
 49290                           ;incstack = 0
 49291  00240C  EE14  F32C         	lfsr	1,___inthi_sp
 49292                           
 49293                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 49294  002410  0139               	movlb	57	; () banked
 49295  002412  95A1               	bcf	161,2,b	;volatile
 49296                           
 49297                           ; BSR set to: 57
 49298                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 49299  002414  0100               	movlb	0	; () banked
 49300  002416  51A4               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 49301  002418  11A5               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 49302  00241A  11A6               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 49303  00241C  B4D8               	btfsc	status,2,c
 49304  00241E  0011               	retfie		f
 49305                           
 49306                           ; BSR set to: 0
 49307                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 49308  002420  D801               	call	i2u1380_48
 49309  002422  0011               	retfie		f
 49310  002424                     i2u1380_48:
 49311  002424  0005               	push	
 49312  002426  6EFA               	movwf	pclath,c
 49313  002428  51A4               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 49314  00242A  6EFD               	movwf	tosl,c
 49315  00242C  51A5               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 49316  00242E  6EFE               	movwf	tosh,c
 49317  002430  51A6               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 49318  002432  6EFF               	movwf	tosu,c
 49319  002434  50FA               	movf	pclath,w,c
 49320  002436  0012               	return		;indir
 49321  002438                     __end_of_ADCC_ISR:
 49322                           	opt callstack 0
 49323                           
 49324 ;; *************** function _adc_int_t_handler *****************
 49325 ;; Defined at:
 49326 ;;		line 183 in file "daq.c"
 49327 ;; Parameters:    Size  Location     Type
 49328 ;;		None
 49329 ;; Auto vars:     Size  Location     Type
 49330 ;;		None
 49331 ;; Return value:  Size  Location     Type
 49332 ;;                  1  [STACK] void 
 49333 ;; Registers used:
 49334 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 49335 ;; Tracked objects:
 49336 ;;		On entry : 3F/0
 49337 ;;		On exit  : 0/0
 49338 ;;		Unchanged: 0/0
 49339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49344 ;;Total ram usage:        0 bytes
 49345 ;; Hardware stack levels used:    1
 49346 ;; Hardware stack levels required when called:    1
 49347 ;; This function calls:
 49348 ;;		_ADCC_DischargeSampleCapacitor
 49349 ;;		_ADCC_StartConversion
 49350 ;; This function is called by:
 49351 ;;		_start_adc_scan
 49352 ;;		_ADCC_ThresholdISR
 49353 ;; This function uses a reentrant model
 49354 ;;
 49355                           
 49356                           	psect	text209
 49357  001266                     __ptext209:
 49358                           	opt callstack 0
 49359  001266                     _adc_int_t_handler:
 49360                           	opt callstack 3
 49361                           
 49362                           ;daq.c: 188:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 49363                           
 49364                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49365                           ;incstack = 0
 49366  001266  013E               	movlb	62	; () banked
 49367  001268  51E6               	movf	230,w,b	;volatile
 49368  00126A  006F FB9C  F02A    	movff	16103,btemp	;volatile
 49369  001270  6A2B               	clrf	(btemp+1)^0,c
 49370  001272  0060  F0A8  F02B   	movff	btemp,btemp+1
 49371  001278  6A2A               	clrf	btemp^0,c
 49372  00127A  262A               	addwf	btemp^0,f,c
 49373  00127C  0E00               	movlw	0
 49374  00127E  222B               	addwfc	(btemp+1)^0,f,c
 49375  001280  0101               	movlb	1	; () banked
 49376  001282  5132               	movf	(_R+50)& (0+255),w,b	;volatile
 49377  001284  0D02               	mullw	2
 49378  001286  0E00               	movlw	low _R
 49379  001288  24F3               	addwf	243,w,c
 49380  00128A  6ED9               	movwf	fsr2l,c
 49381  00128C  0E01               	movlw	high _R
 49382  00128E  20F4               	addwfc	prodh,w,c
 49383  001290  6EDA               	movwf	fsr2h,c
 49384  001292  0060  F0AB  FFDE   	movff	btemp,postinc2
 49385  001298  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 49386  00129E                     l14632:
 49387                           
 49388                           ;daq.c: 190:   if (++R.scan_index > 0XD) {
 49389  00129E  0101               	movlb	1	; () banked
 49390  0012A0  2B32               	incf	(_R+50)& (0+255),f,b	;volatile
 49391  0012A2  0E0D               	movlw	13
 49392  0012A4  6532               	cpfsgt	(_R+50)& (0+255),b	;volatile
 49393  0012A6  D003               	goto	l14638
 49394                           
 49395                           ; BSR set to: 1
 49396                           ;daq.c: 191:    R.done = 1;
 49397  0012A8  0E01               	movlw	1
 49398  0012AA  6F35               	movwf	(_R+53)& (0+255),b	;volatile
 49399  0012AC  0012               	return	
 49400  0012AE                     l14638:
 49401                           
 49402                           ; BSR set to: 1
 49403                           ;daq.c: 197:  } while (!((R.scan_select >> R.scan_index) &0x1));
 49404  0012AE  0060  F4C8  F035   	movff	_R+50,btemp+11	;volatile
 49405  0012B4  EE20  F133         	lfsr	2,_R+51	;volatile
 49406  0012B8  006F FF78  F032    	movff	postinc2,btemp+8
 49407  0012BE  006F FF74  F033    	movff	postdec2,btemp+9
 49408  0012C4  2A35               	incf	(btemp+11)^0,f,c
 49409  0012C6  D003               	goto	u1377_44
 49410  0012C8                     u1377_45:
 49411  0012C8  90D8               	bcf	status,0,c
 49412  0012CA  3233               	rrcf	(btemp+9)^0,f,c
 49413  0012CC  3232               	rrcf	(btemp+8)^0,f,c
 49414  0012CE                     u1377_44:
 49415  0012CE  2E35               	decfsz	(btemp+11)^0,f,c
 49416  0012D0  D7FB               	goto	u1377_45
 49417  0012D2  A032               	btfss	(btemp+8)^0,0,c
 49418  0012D4  D7E4               	goto	l14632
 49419                           
 49420                           ;daq.c: 198:  ADCC_DischargeSampleCapacitor();
 49421  0012D6  EC5D  F015         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 49422                           
 49423                           ; BSR set to: 62
 49424                           ;daq.c: 199:  ADCC_StartConversion(R.scan_index & 0xf);
 49425  0012DA  0101               	movlb	1	; () banked
 49426  0012DC  5132               	movf	(_R+50)& (0+255),w,b	;volatile
 49427  0012DE  0B0F               	andlw	15
 49428  0012E0  6EE6               	movwf	postinc1,c
 49429  0012E2  ECE0  F014         	call	_ADCC_StartConversion	;wreg free
 49430                           
 49431                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 49432  0012E6  0012               	return		;funcret
 49433  0012E8                     __end_of_adc_int_t_handler:
 49434                           	opt callstack 0
 49435                           
 49436 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 49437 ;; Defined at:
 49438 ;;		line 339 in file "mcc_generated_files/adcc.c"
 49439 ;; Parameters:    Size  Location     Type
 49440 ;;		None
 49441 ;; Auto vars:     Size  Location     Type
 49442 ;;		None
 49443 ;; Return value:  Size  Location     Type
 49444 ;;                  1  [STACK] void 
 49445 ;; Registers used:
 49446 ;;		None
 49447 ;; Tracked objects:
 49448 ;;		On entry : 3F/0
 49449 ;;		On exit  : 0/0
 49450 ;;		Unchanged: 0/0
 49451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49456 ;;Total ram usage:        0 bytes
 49457 ;; Hardware stack levels used:    1
 49458 ;; This function calls:
 49459 ;;		Nothing
 49460 ;; This function is called by:
 49461 ;;		_ADCC_Initialize
 49462 ;;		_ADCC_ISR
 49463 ;;		_ADCC_ThresholdISR
 49464 ;; This function uses a reentrant model
 49465 ;;
 49466                           
 49467                           	psect	text210
 49468  002B06                     __ptext210:
 49469                           	opt callstack 0
 49470  002B06                     _ADCC_DefaultInterruptHandler:
 49471                           	opt callstack 4
 49472                           
 49473                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 49474                           
 49475                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49476                           ;incstack = 0
 49477  002B06  0012               	return		;funcret
 49478  002B08                     __end_of_ADCC_DefaultInterruptHandler:
 49479                           	opt callstack 0
 49480                           
 49481 ;; *************** function _adc_int_handler *****************
 49482 ;; Defined at:
 49483 ;;		line 173 in file "daq.c"
 49484 ;; Parameters:    Size  Location     Type
 49485 ;;		None
 49486 ;; Auto vars:     Size  Location     Type
 49487 ;;		None
 49488 ;; Return value:  Size  Location     Type
 49489 ;;                  1  [STACK] void 
 49490 ;; Registers used:
 49491 ;;		None
 49492 ;; Tracked objects:
 49493 ;;		On entry : 3F/0
 49494 ;;		On exit  : 0/0
 49495 ;;		Unchanged: 0/0
 49496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49501 ;;Total ram usage:        0 bytes
 49502 ;; Hardware stack levels used:    1
 49503 ;; This function calls:
 49504 ;;		Nothing
 49505 ;; This function is called by:
 49506 ;;		_start_adc_scan
 49507 ;;		_ADCC_ISR
 49508 ;; This function uses a reentrant model
 49509 ;;
 49510                           
 49511                           	psect	text211
 49512  002B08                     __ptext211:
 49513                           	opt callstack 0
 49514  002B08                     _adc_int_handler:
 49515                           	opt callstack 4
 49516                           
 49517                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 49518                           
 49519                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49520                           ;incstack = 0
 49521  002B08  0012               	return		;funcret
 49522  002B0A                     __end_of_adc_int_handler:
 49523                           	opt callstack 0
 49524                           
 49525 ;; *************** function _ADCC_ThresholdISR *****************
 49526 ;; Defined at:
 49527 ;;		line 327 in file "mcc_generated_files/adcc.c"
 49528 ;; Parameters:    Size  Location     Type
 49529 ;;		None
 49530 ;; Auto vars:     Size  Location     Type
 49531 ;;		None
 49532 ;; Return value:  Size  Location     Type
 49533 ;;                  1    wreg      void 
 49534 ;; Registers used:
 49535 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 49536 ;; Tracked objects:
 49537 ;;		On entry : 0/0
 49538 ;;		On exit  : 0/0
 49539 ;;		Unchanged: 0/0
 49540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49543 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49544 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49545 ;;Total ram usage:        5 bytes
 49546 ;; Hardware stack levels used:    1
 49547 ;; Hardware stack levels required when called:    2
 49548 ;; This function calls:
 49549 ;;		Absolute function
 49550 ;;		_ADCC_DefaultInterruptHandler
 49551 ;;		_adc_int_t_handler
 49552 ;; This function is called by:
 49553 ;;		Interrupt level 2
 49554 ;; This function uses a non-reentrant model
 49555 ;;
 49556                           
 49557                           	psect	text212
 49558  00161C                     __ptext212:
 49559                           	opt callstack 0
 49560  00161C                     _ADCC_ThresholdISR:
 49561                           	opt callstack 3
 49562                           
 49563                           ;incstack = 0
 49564  00161C  0060  F0A8  F001   	movff	btemp,??_ADCC_ThresholdISR
 49565  001622  0060  F0AC  F002   	movff	btemp+1,??_ADCC_ThresholdISR+1
 49566  001628  0060  F0C8  F003   	movff	btemp+8,??_ADCC_ThresholdISR+2
 49567  00162E  0060  F0CC  F004   	movff	btemp+9,??_ADCC_ThresholdISR+3
 49568  001634  0060  F0D4  F005   	movff	btemp+11,??_ADCC_ThresholdISR+4
 49569  00163A  EE14  F32C         	lfsr	1,___inthi_sp
 49570                           
 49571                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 49572  00163E  0139               	movlb	57	; () banked
 49573  001640  97A1               	bcf	161,3,b	;volatile
 49574                           
 49575                           ; BSR set to: 57
 49576                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 49577  001642  0100               	movlb	0	; () banked
 49578  001644  51A1               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 49579  001646  11A2               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 49580  001648  11A3               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 49581  00164A  B4D8               	btfsc	status,2,c
 49582  00164C  D00C               	goto	i2u1382_49
 49583                           
 49584                           ; BSR set to: 0
 49585                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 49586  00164E  D801               	call	i2u1382_48
 49587  001650  D00A               	goto	i2u1382_49
 49588  001652                     i2u1382_48:
 49589  001652  0005               	push	
 49590  001654  6EFA               	movwf	pclath,c
 49591  001656  51A1               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 49592  001658  6EFD               	movwf	tosl,c
 49593  00165A  51A2               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 49594  00165C  6EFE               	movwf	tosh,c
 49595  00165E  51A3               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 49596  001660  6EFF               	movwf	tosu,c
 49597  001662  50FA               	movf	pclath,w,c
 49598  001664  0012               	return		;indir
 49599  001666                     i2u1382_49:
 49600  001666  0060  F014  F035   	movff	??_ADCC_ThresholdISR+4,btemp+11
 49601  00166C  0060  F010  F033   	movff	??_ADCC_ThresholdISR+3,btemp+9
 49602  001672  0060  F00C  F032   	movff	??_ADCC_ThresholdISR+2,btemp+8
 49603  001678  0060  F008  F02B   	movff	??_ADCC_ThresholdISR+1,btemp+1
 49604  00167E  0060  F004  F02A   	movff	??_ADCC_ThresholdISR,btemp
 49605  001684  0011               	retfie		f
 49606  001686                     __end_of_ADCC_ThresholdISR:
 49607                           	opt callstack 0
 49608                           
 49609 ;; *************** function _UART1_rx_vect_isr *****************
 49610 ;; Defined at:
 49611 ;;		line 181 in file "mcc_generated_files/uart1.c"
 49612 ;; Parameters:    Size  Location     Type
 49613 ;;		None
 49614 ;; Auto vars:     Size  Location     Type
 49615 ;;		None
 49616 ;; Return value:  Size  Location     Type
 49617 ;;                  1    wreg      void 
 49618 ;; Registers used:
 49619 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 49620 ;; Tracked objects:
 49621 ;;		On entry : 0/0
 49622 ;;		On exit  : 0/0
 49623 ;;		Unchanged: 0/0
 49624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49629 ;;Total ram usage:        0 bytes
 49630 ;; Hardware stack levels used:    1
 49631 ;; Hardware stack levels required when called:    1
 49632 ;; This function calls:
 49633 ;;		Absolute function
 49634 ;;		_UART1_Receive_ISR
 49635 ;; This function is called by:
 49636 ;;		Interrupt level 2
 49637 ;; This function uses a non-reentrant model
 49638 ;;
 49639                           
 49640                           	psect	text213
 49641  002670                     __ptext213:
 49642                           	opt callstack 0
 49643  002670                     _UART1_rx_vect_isr:
 49644                           	opt callstack 4
 49645                           
 49646                           ;incstack = 0
 49647  002670  EE14  F32C         	lfsr	1,___inthi_sp
 49648                           
 49649                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 49650  002674  0100               	movlb	0	; () banked
 49651  002676  51A7               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 49652  002678  11A8               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 49653  00267A  11A9               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 49654  00267C  B4D8               	btfsc	status,2,c
 49655  00267E  0011               	retfie		f
 49656                           
 49657                           ; BSR set to: 0
 49658                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 49659  002680  D801               	call	i2u1384_48
 49660  002682  0011               	retfie		f
 49661  002684                     i2u1384_48:
 49662  002684  0005               	push	
 49663  002686  6EFA               	movwf	pclath,c
 49664  002688  51A7               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 49665  00268A  6EFD               	movwf	tosl,c
 49666  00268C  51A8               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 49667  00268E  6EFE               	movwf	tosh,c
 49668  002690  51A9               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 49669  002692  6EFF               	movwf	tosu,c
 49670  002694  50FA               	movf	pclath,w,c
 49671  002696  0012               	return		;indir
 49672  002698                     __end_of_UART1_rx_vect_isr:
 49673                           	opt callstack 0
 49674                           
 49675 ;; *************** function _UART1_Receive_ISR *****************
 49676 ;; Defined at:
 49677 ;;		line 192 in file "mcc_generated_files/uart1.c"
 49678 ;; Parameters:    Size  Location     Type
 49679 ;;		None
 49680 ;; Auto vars:     Size  Location     Type
 49681 ;;		None
 49682 ;; Return value:  Size  Location     Type
 49683 ;;                  1  [STACK] void 
 49684 ;; Registers used:
 49685 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 49686 ;; Tracked objects:
 49687 ;;		On entry : 3F/0
 49688 ;;		On exit  : 3F/0
 49689 ;;		Unchanged: 0/0
 49690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49695 ;;Total ram usage:        0 bytes
 49696 ;; Hardware stack levels used:    1
 49697 ;; This function calls:
 49698 ;;		Nothing
 49699 ;; This function is called by:
 49700 ;;		_UART1_Initialize
 49701 ;;		_UART1_rx_vect_isr
 49702 ;; This function uses a reentrant model
 49703 ;;
 49704                           
 49705                           	psect	text214
 49706  002804                     __ptext214:
 49707                           	opt callstack 0
 49708  002804                     _UART1_Receive_ISR:
 49709                           	opt callstack 4
 49710                           
 49711                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 49712                           
 49713                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49714                           ;incstack = 0
 49715  002804  0ED6               	movlw	low _uart1RxBuffer
 49716  002806  2457               	addwf	_uart1RxHead^0,w,c	;volatile
 49717  002808  6ED9               	movwf	fsr2l,c
 49718  00280A  6ADA               	clrf	fsr2h,c
 49719  00280C  0E02               	movlw	high _uart1RxBuffer
 49720  00280E  22DA               	addwfc	fsr2h,f,c
 49721  002810  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 49722  002816  2A57               	incf	_uart1RxHead^0,f,c	;volatile
 49723                           
 49724                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 49725  002818  0E07               	movlw	7
 49726  00281A  6457               	cpfsgt	_uart1RxHead^0,c
 49727  00281C  D001               	goto	l13940
 49728                           
 49729                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 49730  00281E  6A57               	clrf	_uart1RxHead^0,c	;volatile
 49731  002820                     l13940:
 49732                           
 49733                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 49734  002820  0100               	movlb	0	; () banked
 49735  002822  2BD0               	incf	_uart1RxCount& (0+255),f,b	;volatile
 49736                           
 49737                           ; BSR set to: 0
 49738                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 49739  002824  0012               	return		;funcret
 49740  002826                     __end_of_UART1_Receive_ISR:
 49741                           	opt callstack 0
 49742                           
 49743 ;; *************** function _UART2_tx_vect_isr *****************
 49744 ;; Defined at:
 49745 ;;		line 195 in file "mcc_generated_files/uart2.c"
 49746 ;; Parameters:    Size  Location     Type
 49747 ;;		None
 49748 ;; Auto vars:     Size  Location     Type
 49749 ;;		None
 49750 ;; Return value:  Size  Location     Type
 49751 ;;                  1    wreg      void 
 49752 ;; Registers used:
 49753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 49754 ;; Tracked objects:
 49755 ;;		On entry : 0/0
 49756 ;;		On exit  : 0/0
 49757 ;;		Unchanged: 0/0
 49758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49763 ;;Total ram usage:        0 bytes
 49764 ;; Hardware stack levels used:    1
 49765 ;; Hardware stack levels required when called:    1
 49766 ;; This function calls:
 49767 ;;		Absolute function
 49768 ;;		_UART2_Transmit_ISR
 49769 ;; This function is called by:
 49770 ;;		Interrupt level 2
 49771 ;; This function uses a non-reentrant model
 49772 ;;
 49773                           
 49774                           	psect	text215
 49775  002698                     __ptext215:
 49776                           	opt callstack 0
 49777  002698                     _UART2_tx_vect_isr:
 49778                           	opt callstack 4
 49779                           
 49780                           ; BSR set to: 0
 49781                           ;incstack = 0
 49782  002698  EE14  F32C         	lfsr	1,___inthi_sp
 49783                           
 49784                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 49785  00269C  0100               	movlb	0	; () banked
 49786  00269E  51AA               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 49787  0026A0  11AB               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 49788  0026A2  11AC               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 49789  0026A4  B4D8               	btfsc	status,2,c
 49790  0026A6  0011               	retfie		f
 49791                           
 49792                           ; BSR set to: 0
 49793                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 49794  0026A8  D801               	call	i2u1386_48
 49795  0026AA  0011               	retfie		f
 49796  0026AC                     i2u1386_48:
 49797  0026AC  0005               	push	
 49798  0026AE  6EFA               	movwf	pclath,c
 49799  0026B0  51AA               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 49800  0026B2  6EFD               	movwf	tosl,c
 49801  0026B4  51AB               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 49802  0026B6  6EFE               	movwf	tosh,c
 49803  0026B8  51AC               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 49804  0026BA  6EFF               	movwf	tosu,c
 49805  0026BC  50FA               	movf	pclath,w,c
 49806  0026BE  0012               	return		;indir
 49807  0026C0                     __end_of_UART2_tx_vect_isr:
 49808                           	opt callstack 0
 49809                           
 49810 ;; *************** function _UART2_Transmit_ISR *****************
 49811 ;; Defined at:
 49812 ;;		line 213 in file "mcc_generated_files/uart2.c"
 49813 ;; Parameters:    Size  Location     Type
 49814 ;;		None
 49815 ;; Auto vars:     Size  Location     Type
 49816 ;;		None
 49817 ;; Return value:  Size  Location     Type
 49818 ;;                  1  [STACK] void 
 49819 ;; Registers used:
 49820 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 49821 ;; Tracked objects:
 49822 ;;		On entry : 3F/0
 49823 ;;		On exit  : 3B/39
 49824 ;;		Unchanged: 0/0
 49825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49830 ;;Total ram usage:        0 bytes
 49831 ;; Hardware stack levels used:    1
 49832 ;; This function calls:
 49833 ;;		Nothing
 49834 ;; This function is called by:
 49835 ;;		_UART2_Initialize
 49836 ;;		_UART2_tx_vect_isr
 49837 ;; This function uses a reentrant model
 49838 ;;
 49839                           
 49840                           	psect	text216
 49841  002438                     __ptext216:
 49842                           	opt callstack 0
 49843  002438                     _UART2_Transmit_ISR:
 49844                           	opt callstack 4
 49845                           
 49846                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 49847                           
 49848                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49849                           ;incstack = 0
 49850  002438  0E40               	movlw	64
 49851  00243A  6055               	cpfslt	_uart2TxBufferRemaining^0,c
 49852  00243C  D010               	goto	l675
 49853                           
 49854                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 49855  00243E  0E00               	movlw	low _uart2TxBuffer
 49856  002440  2456               	addwf	_uart2TxTail^0,w,c	;volatile
 49857  002442  6ED9               	movwf	fsr2l,c
 49858  002444  6ADA               	clrf	fsr2h,c
 49859  002446  0E04               	movlw	high _uart2TxBuffer
 49860  002448  22DA               	addwfc	fsr2h,f,c
 49861  00244A  50DF               	movf	indf2,w,c
 49862  00244C  013D               	movlb	61	; () banked
 49863  00244E  6FD2               	movwf	210,b	;volatile
 49864                           
 49865                           ; BSR set to: 61
 49866  002450  2A56               	incf	_uart2TxTail^0,f,c	;volatile
 49867                           
 49868                           ; BSR set to: 61
 49869                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 49870  002452  0E3F               	movlw	63
 49871  002454  6456               	cpfsgt	_uart2TxTail^0,c
 49872  002456  D001               	goto	l13952
 49873                           
 49874                           ; BSR set to: 61
 49875                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 49876  002458  6A56               	clrf	_uart2TxTail^0,c	;volatile
 49877  00245A                     l13952:
 49878                           
 49879                           ; BSR set to: 61
 49880                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 49881  00245A  2A55               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 49882                           
 49883                           ;mcc_generated_files/uart2.c: 224:     }
 49884  00245C  0012               	return	
 49885  00245E                     l675:
 49886                           
 49887                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 49888  00245E  0139               	movlb	57	; () banked
 49889  002460  9796               	bcf	150,3,b	;volatile
 49890                           
 49891                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 49892  002462  0012               	return		;funcret
 49893  002464                     __end_of_UART2_Transmit_ISR:
 49894                           	opt callstack 0
 49895                           
 49896 ;; *************** function _UART2_rx_vect_isr *****************
 49897 ;; Defined at:
 49898 ;;		line 203 in file "mcc_generated_files/uart2.c"
 49899 ;; Parameters:    Size  Location     Type
 49900 ;;		None
 49901 ;; Auto vars:     Size  Location     Type
 49902 ;;		None
 49903 ;; Return value:  Size  Location     Type
 49904 ;;                  1    wreg      void 
 49905 ;; Registers used:
 49906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 49907 ;; Tracked objects:
 49908 ;;		On entry : 0/0
 49909 ;;		On exit  : 0/0
 49910 ;;		Unchanged: 0/0
 49911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49916 ;;Total ram usage:        0 bytes
 49917 ;; Hardware stack levels used:    1
 49918 ;; Hardware stack levels required when called:    1
 49919 ;; This function calls:
 49920 ;;		Absolute function
 49921 ;;		_UART2_Receive_ISR
 49922 ;; This function is called by:
 49923 ;;		Interrupt level 2
 49924 ;; This function uses a non-reentrant model
 49925 ;;
 49926                           
 49927                           	psect	text217
 49928  0026C0                     __ptext217:
 49929                           	opt callstack 0
 49930  0026C0                     _UART2_rx_vect_isr:
 49931                           	opt callstack 4
 49932                           
 49933                           ;incstack = 0
 49934  0026C0  EE14  F32C         	lfsr	1,___inthi_sp
 49935                           
 49936                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 49937  0026C4  0100               	movlb	0	; () banked
 49938  0026C6  51AD               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 49939  0026C8  11AE               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 49940  0026CA  11AF               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 49941  0026CC  B4D8               	btfsc	status,2,c
 49942  0026CE  0011               	retfie		f
 49943                           
 49944                           ; BSR set to: 0
 49945                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 49946  0026D0  D801               	call	i2u1388_48
 49947  0026D2  0011               	retfie		f
 49948  0026D4                     i2u1388_48:
 49949  0026D4  0005               	push	
 49950  0026D6  6EFA               	movwf	pclath,c
 49951  0026D8  51AD               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 49952  0026DA  6EFD               	movwf	tosl,c
 49953  0026DC  51AE               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 49954  0026DE  6EFE               	movwf	tosh,c
 49955  0026E0  51AF               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 49956  0026E2  6EFF               	movwf	tosu,c
 49957  0026E4  50FA               	movf	pclath,w,c
 49958  0026E6  0012               	return		;indir
 49959  0026E8                     __end_of_UART2_rx_vect_isr:
 49960                           	opt callstack 0
 49961                           
 49962 ;; *************** function _UART2_Receive_ISR *****************
 49963 ;; Defined at:
 49964 ;;		line 233 in file "mcc_generated_files/uart2.c"
 49965 ;; Parameters:    Size  Location     Type
 49966 ;;		None
 49967 ;; Auto vars:     Size  Location     Type
 49968 ;;		None
 49969 ;; Return value:  Size  Location     Type
 49970 ;;                  1  [STACK] void 
 49971 ;; Registers used:
 49972 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 49973 ;; Tracked objects:
 49974 ;;		On entry : 3F/0
 49975 ;;		On exit  : 3F/0
 49976 ;;		Unchanged: 0/0
 49977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49982 ;;Total ram usage:        0 bytes
 49983 ;; Hardware stack levels used:    1
 49984 ;; This function calls:
 49985 ;;		Nothing
 49986 ;; This function is called by:
 49987 ;;		_UART2_Initialize
 49988 ;;		_UART2_rx_vect_isr
 49989 ;; This function uses a reentrant model
 49990 ;;
 49991                           
 49992                           	psect	text218
 49993  002846                     __ptext218:
 49994                           	opt callstack 0
 49995  002846                     _UART2_Receive_ISR:
 49996                           	opt callstack 4
 49997                           
 49998                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 49999                           
 50000                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50001                           ;incstack = 0
 50002  002846  0E00               	movlw	low _uart2RxBuffer
 50003  002848  2454               	addwf	_uart2RxHead^0,w,c	;volatile
 50004  00284A  6ED9               	movwf	fsr2l,c
 50005  00284C  6ADA               	clrf	fsr2h,c
 50006  00284E  0E06               	movlw	high _uart2RxBuffer
 50007  002850  22DA               	addwfc	fsr2h,f,c
 50008  002852  006F F743 FFDF     	movff	15824,indf2	;volatile
 50009  002858  2A54               	incf	_uart2RxHead^0,f,c	;volatile
 50010                           
 50011                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 50012  00285A  2854               	incf	_uart2RxHead^0,w,c
 50013  00285C  B4D8               	btfsc	status,2,c
 50014                           
 50015                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 50016  00285E  6A54               	clrf	_uart2RxHead^0,c	;volatile
 50017                           
 50018                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 50019  002860  0100               	movlb	0	; () banked
 50020  002862  2BCD               	incf	_uart2RxCount& (0+255),f,b	;volatile
 50021                           
 50022                           ; BSR set to: 0
 50023                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 50024  002864  0012               	return		;funcret
 50025  002866                     __end_of_UART2_Receive_ISR:
 50026                           	opt callstack 0
 50027                           
 50028 ;; *************** function _TMR6_ISR *****************
 50029 ;; Defined at:
 50030 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 50031 ;; Parameters:    Size  Location     Type
 50032 ;;		None
 50033 ;; Auto vars:     Size  Location     Type
 50034 ;;		None
 50035 ;; Return value:  Size  Location     Type
 50036 ;;                  1    wreg      void 
 50037 ;; Registers used:
 50038 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 50039 ;; Tracked objects:
 50040 ;;		On entry : 0/0
 50041 ;;		On exit  : 0/0
 50042 ;;		Unchanged: 0/0
 50043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50046 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50047 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50048 ;;Total ram usage:        1 bytes
 50049 ;; Hardware stack levels used:    1
 50050 ;; Hardware stack levels required when called:    2
 50051 ;; This function calls:
 50052 ;;		_TMR6_CallBack
 50053 ;; This function is called by:
 50054 ;;		Interrupt level 2
 50055 ;; This function uses a non-reentrant model
 50056 ;;
 50057                           
 50058                           	psect	text219
 50059  0028F8                     __ptext219:
 50060                           	opt callstack 0
 50061  0028F8                     _TMR6_ISR:
 50062                           	opt callstack 3
 50063                           
 50064                           ; BSR set to: 0
 50065                           ;incstack = 0
 50066  0028F8  0060  F0A8  F006   	movff	btemp,??_TMR6_ISR
 50067  0028FE  EE14  F32C         	lfsr	1,___inthi_sp
 50068                           
 50069                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 50070  002902  0139               	movlb	57	; () banked
 50071  002904  91A9               	bcf	169,0,b	;volatile
 50072                           
 50073                           ; BSR set to: 57
 50074                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 50075  002906  ECCE  F013         	call	_TMR6_CallBack	;wreg free
 50076  00290A  0060  F018  F02A   	movff	??_TMR6_ISR,btemp
 50077  002910  0011               	retfie		f
 50078  002912                     __end_of_TMR6_ISR:
 50079                           	opt callstack 0
 50080                           
 50081 ;; *************** function _TMR6_CallBack *****************
 50082 ;; Defined at:
 50083 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 50084 ;; Parameters:    Size  Location     Type
 50085 ;;		None
 50086 ;; Auto vars:     Size  Location     Type
 50087 ;;		None
 50088 ;; Return value:  Size  Location     Type
 50089 ;;                  1  [STACK] void 
 50090 ;; Registers used:
 50091 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 50092 ;; Tracked objects:
 50093 ;;		On entry : 3F/39
 50094 ;;		On exit  : 0/0
 50095 ;;		Unchanged: 0/0
 50096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50101 ;;Total ram usage:        0 bytes
 50102 ;; Hardware stack levels used:    1
 50103 ;; Hardware stack levels required when called:    1
 50104 ;; This function calls:
 50105 ;;		Absolute function
 50106 ;;		_TMR6_DefaultInterruptHandler
 50107 ;; This function is called by:
 50108 ;;		_TMR6_ISR
 50109 ;; This function uses a reentrant model
 50110 ;;
 50111                           
 50112                           	psect	text220
 50113  00279C                     __ptext220:
 50114                           	opt callstack 0
 50115  00279C                     _TMR6_CallBack:
 50116                           	opt callstack 3
 50117                           
 50118                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 50119                           
 50120                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50121                           ;incstack = 0
 50122  00279C  0100               	movlb	0	; () banked
 50123  00279E  519E               	movf	_TMR6_InterruptHandler& (0+255),w,b
 50124  0027A0  119F               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 50125  0027A2  11A0               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 50126  0027A4  B4D8               	btfsc	status,2,c
 50127  0027A6  0012               	return	
 50128                           
 50129                           ; BSR set to: 0
 50130                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 50131  0027A8  D801               	call	u1321_48
 50132  0027AA  0012               	return	
 50133  0027AC                     u1321_48:
 50134  0027AC  0005               	push	
 50135  0027AE  6EFA               	movwf	pclath,c
 50136  0027B0  519E               	movf	_TMR6_InterruptHandler& (0+255),w,b
 50137  0027B2  6EFD               	movwf	tosl,c
 50138  0027B4  519F               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 50139  0027B6  6EFE               	movwf	tosh,c
 50140  0027B8  51A0               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 50141  0027BA  6EFF               	movwf	tosu,c
 50142  0027BC  50FA               	movf	pclath,w,c
 50143  0027BE  0012               	return		;indir
 50144  0027C0                     __end_of_TMR6_CallBack:
 50145                           	opt callstack 0
 50146                           
 50147 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 50148 ;; Defined at:
 50149 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 50150 ;; Parameters:    Size  Location     Type
 50151 ;;		None
 50152 ;; Auto vars:     Size  Location     Type
 50153 ;;  i               1  [STACK] unsigned char 
 50154 ;; Return value:  Size  Location     Type
 50155 ;;                  1  [STACK] void 
 50156 ;; Registers used:
 50157 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 50158 ;; Tracked objects:
 50159 ;;		On entry : 3F/0
 50160 ;;		On exit  : 0/0
 50161 ;;		Unchanged: 0/0
 50162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50167 ;;Total ram usage:        0 bytes
 50168 ;; Hardware stack levels used:    1
 50169 ;; This function calls:
 50170 ;;		Nothing
 50171 ;; This function is called by:
 50172 ;;		_TMR6_Initialize
 50173 ;;		_TMR6_CallBack
 50174 ;; This function uses a reentrant model
 50175 ;;
 50176                           
 50177                           	psect	text221
 50178  001C5A                     __ptext221:
 50179                           	opt callstack 0
 50180  001C5A                     _TMR6_DefaultInterruptHandler:
 50181                           	opt callstack 0
 50182                           
 50183                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50184  001C5A  52E6               	movf	postinc1,f,c
 50185                           
 50186                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 50187                           ;stkvar	_i @ sp[(-1)+0]
 50188                           
 50189                           ;incstack = 0
 50190  001C5C  0EFF               	movlw	-1
 50191  001C5E  6AE3               	clrf	plusw1,c
 50192  001C60                     l13360:
 50193                           
 50194                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 50195                           ;stkvar	_i @ sp[(-1)+0]
 50196  001C60  0EFF               	movlw	-1
 50197  001C62  50E3               	movf	plusw1,w,c
 50198  001C64  0D02               	mullw	2
 50199  001C66  0EBC               	movlw	low _tickCount
 50200  001C68  24F3               	addwf	243,w,c
 50201  001C6A  6ED9               	movwf	fsr2l,c
 50202  001C6C  0E02               	movlw	high _tickCount
 50203  001C6E  20F4               	addwfc	prodh,w,c
 50204  001C70  6EDA               	movwf	fsr2h,c
 50205  001C72  50DE               	movf	postinc2,w,c
 50206  001C74  10DE               	iorwf	postinc2,w,c
 50207  001C76  B4D8               	btfsc	status,2,c
 50208  001C78  D00C               	goto	l13364
 50209                           
 50210                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 50211                           ;stkvar	_i @ sp[(-1)+0]
 50212  001C7A  0EFF               	movlw	-1
 50213  001C7C  50E3               	movf	plusw1,w,c
 50214  001C7E  0D02               	mullw	2
 50215  001C80  0EBC               	movlw	low _tickCount
 50216  001C82  24F3               	addwf	243,w,c
 50217  001C84  6ED9               	movwf	fsr2l,c
 50218  001C86  0E02               	movlw	high _tickCount
 50219  001C88  20F4               	addwfc	prodh,w,c
 50220  001C8A  6EDA               	movwf	fsr2h,c
 50221  001C8C  06DE               	decf	postinc2,f,c
 50222  001C8E  0E00               	movlw	0
 50223  001C90  5ADD               	subwfb	postdec2,f,c
 50224  001C92                     l13364:
 50225                           
 50226                           ;mcc_generated_files/tmr6.c: 207:  }
 50227                           ;stkvar	_i @ sp[(-1)+0]
 50228  001C92  0EFF               	movlw	-1
 50229  001C94  2AE3               	incf	plusw1,f,c
 50230                           
 50231                           ;stkvar	_i @ sp[(-1)+0]
 50232  001C96  0EFF               	movlw	-1
 50233  001C98  006F FF8C  F02A    	movff	plusw1,btemp
 50234  001C9E  0E0C               	movlw	12
 50235  001CA0  642A               	cpfsgt	btemp^0,c
 50236  001CA2  D7DE               	goto	l13360
 50237                           
 50238                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 50239  001CA4  52E5               	movf	postdec1,f,c
 50240  001CA6  0012               	return		;funcret
 50241  001CA8                     __end_of_TMR6_DefaultInterruptHandler:
 50242                           	opt callstack 0
 50243                           
 50244 ;; *************** function _DMA1_DMASCNT_ISR *****************
 50245 ;; Defined at:
 50246 ;;		line 126 in file "mcc_generated_files/dma1.c"
 50247 ;; Parameters:    Size  Location     Type
 50248 ;;		None
 50249 ;; Auto vars:     Size  Location     Type
 50250 ;;		None
 50251 ;; Return value:  Size  Location     Type
 50252 ;;                  1    wreg      void 
 50253 ;; Registers used:
 50254 ;;		None
 50255 ;; Tracked objects:
 50256 ;;		On entry : 0/0
 50257 ;;		On exit  : 3F/0
 50258 ;;		Unchanged: 0/0
 50259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50264 ;;Total ram usage:        0 bytes
 50265 ;; Hardware stack levels used:    1
 50266 ;; This function calls:
 50267 ;;		Nothing
 50268 ;; This function is called by:
 50269 ;;		Interrupt level 2
 50270 ;; This function uses a non-reentrant model
 50271 ;;
 50272                           
 50273                           	psect	text222
 50274  002A6C                     __ptext222:
 50275                           	opt callstack 0
 50276  002A6C                     _DMA1_DMASCNT_ISR:
 50277                           	opt callstack 5
 50278                           
 50279                           ;incstack = 0
 50280  002A6C  EE14  F32C         	lfsr	1,___inthi_sp
 50281                           
 50282                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 50283  002A70  0139               	movlb	57	; () banked
 50284  002A72  91A2               	bcf	162,0,b	;volatile
 50285                           
 50286                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 50287  002A74  0100               	movlb	0	; () banked
 50288  002A76  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 50289                           
 50290                           ; BSR set to: 0
 50291  002A78  0011               	retfie		f
 50292  002A7A                     __end_of_DMA1_DMASCNT_ISR:
 50293                           	opt callstack 0
 50294                           
 50295 ;; *************** function _DMA1_DMADCNT_ISR *****************
 50296 ;; Defined at:
 50297 ;;		line 133 in file "mcc_generated_files/dma1.c"
 50298 ;; Parameters:    Size  Location     Type
 50299 ;;		None
 50300 ;; Auto vars:     Size  Location     Type
 50301 ;;		None
 50302 ;; Return value:  Size  Location     Type
 50303 ;;                  1    wreg      void 
 50304 ;; Registers used:
 50305 ;;		None
 50306 ;; Tracked objects:
 50307 ;;		On entry : 0/0
 50308 ;;		On exit  : 3F/39
 50309 ;;		Unchanged: 0/0
 50310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50315 ;;Total ram usage:        0 bytes
 50316 ;; Hardware stack levels used:    1
 50317 ;; This function calls:
 50318 ;;		Nothing
 50319 ;; This function is called by:
 50320 ;;		Interrupt level 2
 50321 ;; This function uses a non-reentrant model
 50322 ;;
 50323                           
 50324                           	psect	text223
 50325  002A90                     __ptext223:
 50326                           	opt callstack 0
 50327  002A90                     _DMA1_DMADCNT_ISR:
 50328                           	opt callstack 5
 50329                           
 50330                           ; BSR set to: 0
 50331                           ;incstack = 0
 50332  002A90  EE14  F32C         	lfsr	1,___inthi_sp
 50333                           
 50334                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 50335  002A94  0139               	movlb	57	; () banked
 50336  002A96  93A2               	bcf	162,1,b	;volatile
 50337                           
 50338                           ; BSR set to: 57
 50339  002A98  0011               	retfie		f
 50340  002A9A                     __end_of_DMA1_DMADCNT_ISR:
 50341                           	opt callstack 0
 50342                           
 50343 ;; *************** function _DMA1_DMAA_ISR *****************
 50344 ;; Defined at:
 50345 ;;		line 143 in file "mcc_generated_files/dma1.c"
 50346 ;; Parameters:    Size  Location     Type
 50347 ;;		None
 50348 ;; Auto vars:     Size  Location     Type
 50349 ;;		None
 50350 ;; Return value:  Size  Location     Type
 50351 ;;                  1    wreg      void 
 50352 ;; Registers used:
 50353 ;;		None
 50354 ;; Tracked objects:
 50355 ;;		On entry : 0/0
 50356 ;;		On exit  : 3F/39
 50357 ;;		Unchanged: 0/0
 50358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50363 ;;Total ram usage:        0 bytes
 50364 ;; Hardware stack levels used:    1
 50365 ;; This function calls:
 50366 ;;		Nothing
 50367 ;; This function is called by:
 50368 ;;		Interrupt level 2
 50369 ;; This function uses a non-reentrant model
 50370 ;;
 50371                           
 50372                           	psect	text224
 50373  002A9C                     __ptext224:
 50374                           	opt callstack 0
 50375  002A9C                     _DMA1_DMAA_ISR:
 50376                           	opt callstack 5
 50377                           
 50378                           ; BSR set to: 57
 50379                           ;incstack = 0
 50380  002A9C  EE14  F32C         	lfsr	1,___inthi_sp
 50381                           
 50382                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 50383  002AA0  0139               	movlb	57	; () banked
 50384  002AA2  97A2               	bcf	162,3,b	;volatile
 50385                           
 50386                           ; BSR set to: 57
 50387  002AA4  0011               	retfie		f
 50388  002AA6                     __end_of_DMA1_DMAA_ISR:
 50389                           	opt callstack 0
 50390                           
 50391 ;; *************** function _DMA1_DMAOR_ISR *****************
 50392 ;; Defined at:
 50393 ;;		line 154 in file "mcc_generated_files/dma1.c"
 50394 ;; Parameters:    Size  Location     Type
 50395 ;;		None
 50396 ;; Auto vars:     Size  Location     Type
 50397 ;;		None
 50398 ;; Return value:  Size  Location     Type
 50399 ;;                  1    wreg      void 
 50400 ;; Registers used:
 50401 ;;		None
 50402 ;; Tracked objects:
 50403 ;;		On entry : 0/0
 50404 ;;		On exit  : 3F/39
 50405 ;;		Unchanged: 0/0
 50406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50411 ;;Total ram usage:        0 bytes
 50412 ;; Hardware stack levels used:    1
 50413 ;; This function calls:
 50414 ;;		Nothing
 50415 ;; This function is called by:
 50416 ;;		Interrupt level 2
 50417 ;; This function uses a non-reentrant model
 50418 ;;
 50419                           
 50420                           	psect	text225
 50421  002AA8                     __ptext225:
 50422                           	opt callstack 0
 50423  002AA8                     _DMA1_DMAOR_ISR:
 50424                           	opt callstack 5
 50425                           
 50426                           ; BSR set to: 57
 50427                           ;incstack = 0
 50428  002AA8  EE14  F32C         	lfsr	1,___inthi_sp
 50429                           
 50430                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 50431  002AAC  0139               	movlb	57	; () banked
 50432  002AAE  95A2               	bcf	162,2,b	;volatile
 50433                           
 50434                           ; BSR set to: 57
 50435  002AB0  0011               	retfie		f
 50436  002AB2                     __end_of_DMA1_DMAOR_ISR:
 50437                           	opt callstack 0
 50438                           
 50439                           ;
 50440                           ; Interrupt Vector Table @ 0x8
 50441                           ;
 50442                           
 50443                           	psect	ivt0x8
 50444  000008                     __pivt0x8:
 50445                           	opt callstack 0
 50446  000008                     ivt0x8_base:
 50447                           	opt callstack 0
 50448                           
 50449                           ; Vector 0 : SWINT
 50450  000008  0AC0               	dw	_Default_ISR shr (0+2)
 50451                           
 50452                           ; Vector 1 : HLVD
 50453  00000A  0AC0               	dw	_Default_ISR shr (0+2)
 50454                           
 50455                           ; Vector 2 : OSF
 50456  00000C  0AC0               	dw	_Default_ISR shr (0+2)
 50457                           
 50458                           ; Vector 3 : CSW
 50459  00000E  0AC0               	dw	_Default_ISR shr (0+2)
 50460                           
 50461                           ; Vector 4 : NVM
 50462  000010  0AC0               	dw	_Default_ISR shr (0+2)
 50463                           
 50464                           ; Vector 5 : SCAN
 50465  000012  0AC0               	dw	_Default_ISR shr (0+2)
 50466                           
 50467                           ; Vector 6 : CRC
 50468  000014  0AC0               	dw	_Default_ISR shr (0+2)
 50469                           
 50470                           ; Vector 7 : IOC
 50471  000016  0AC0               	dw	_Default_ISR shr (0+2)
 50472                           
 50473                           ; Vector 8 : INT0
 50474  000018  0A97               	dw	_INT0_ISR shr (0+2)
 50475                           
 50476                           ; Vector 9 : ZCD
 50477  00001A  0AC0               	dw	_Default_ISR shr (0+2)
 50478                           
 50479                           ; Vector 10 : AD
 50480  00001C  0903               	dw	_ADCC_ISR shr (0+2)
 50481                           
 50482                           ; Vector 11 : ADT
 50483  00001E  0587               	dw	_ADCC_ThresholdISR shr (0+2)
 50484                           
 50485                           ; Vector 12 : CMP1
 50486  000020  0AC0               	dw	_Default_ISR shr (0+2)
 50487                           
 50488                           ; Vector 13 : SMT1
 50489  000022  0AC0               	dw	_Default_ISR shr (0+2)
 50490                           
 50491                           ; Vector 14 : SMT1PRA
 50492  000024  0AC0               	dw	_Default_ISR shr (0+2)
 50493                           
 50494                           ; Vector 15 : SMT1PRW
 50495  000026  0AC0               	dw	_Default_ISR shr (0+2)
 50496                           
 50497                           ; Vector 16 : DMA1SCNT
 50498  000028  0A9B               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 50499                           
 50500                           ; Vector 17 : DMA1DCNT
 50501  00002A  0AA4               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 50502                           
 50503                           ; Vector 18 : DMA1OR
 50504  00002C  0AAA               	dw	_DMA1_DMAOR_ISR shr (0+2)
 50505                           
 50506                           ; Vector 19 : DMA1A
 50507  00002E  0AA7               	dw	_DMA1_DMAA_ISR shr (0+2)
 50508                           
 50509                           ; Vector 20 : SPI1RX
 50510  000030  0AC0               	dw	_Default_ISR shr (0+2)
 50511                           
 50512                           ; Vector 21 : SPI1TX
 50513  000032  0AC0               	dw	_Default_ISR shr (0+2)
 50514                           
 50515                           ; Vector 22 : SPI1
 50516  000034  0AC0               	dw	_Default_ISR shr (0+2)
 50517                           
 50518                           ; Vector 23 : I2C1RX
 50519  000036  0AC0               	dw	_Default_ISR shr (0+2)
 50520                           
 50521                           ; Vector 24 : I2C1TX
 50522  000038  0AC0               	dw	_Default_ISR shr (0+2)
 50523                           
 50524                           ; Vector 25 : I2C1
 50525  00003A  0AC0               	dw	_Default_ISR shr (0+2)
 50526                           
 50527                           ; Vector 26 : I2C1E
 50528  00003C  0AC0               	dw	_Default_ISR shr (0+2)
 50529                           
 50530                           ; Vector 27 : U1RX
 50531  00003E  099C               	dw	_UART1_rx_vect_isr shr (0+2)
 50532                           
 50533                           ; Vector 28 : U1TX
 50534  000040  0AC0               	dw	_Default_ISR shr (0+2)
 50535                           
 50536                           ; Vector 29 : U1E
 50537  000042  0AC0               	dw	_Default_ISR shr (0+2)
 50538                           
 50539                           ; Vector 30 : U1
 50540  000044  0AC0               	dw	_Default_ISR shr (0+2)
 50541                           
 50542                           ; Vector 31 : TMR0
 50543  000046  0AC0               	dw	_Default_ISR shr (0+2)
 50544                           
 50545                           ; Vector 32 : TMR1
 50546  000048  0AC0               	dw	_Default_ISR shr (0+2)
 50547                           
 50548                           ; Vector 33 : TMR1G
 50549  00004A  0AC0               	dw	_Default_ISR shr (0+2)
 50550                           
 50551                           ; Vector 34 : TMR2
 50552  00004C  0AC0               	dw	_Default_ISR shr (0+2)
 50553                           
 50554                           ; Vector 35 : CCP1
 50555  00004E  0AC0               	dw	_Default_ISR shr (0+2)
 50556                           
 50557                           ; Vector 36 : Undefined
 50558  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 50559                           
 50560                           ; Vector 37 : NCO1
 50561  000052  0AC0               	dw	_Default_ISR shr (0+2)
 50562                           
 50563                           ; Vector 38 : CWG1
 50564  000054  0AC0               	dw	_Default_ISR shr (0+2)
 50565                           
 50566                           ; Vector 39 : CLC1
 50567  000056  0AC0               	dw	_Default_ISR shr (0+2)
 50568                           
 50569                           ; Vector 40 : INT1
 50570  000058  0818               	dw	_INT1_ISR shr (0+2)
 50571                           
 50572                           ; Vector 41 : CMP2
 50573  00005A  0AC0               	dw	_Default_ISR shr (0+2)
 50574                           
 50575                           ; Vector 42 : DMA2SCNT
 50576  00005C  0AC0               	dw	_Default_ISR shr (0+2)
 50577                           
 50578                           ; Vector 43 : DMA2DCNT
 50579  00005E  0AC0               	dw	_Default_ISR shr (0+2)
 50580                           
 50581                           ; Vector 44 : DMA2OR
 50582  000060  0AC0               	dw	_Default_ISR shr (0+2)
 50583                           
 50584                           ; Vector 45 : DMA2A
 50585  000062  0AC0               	dw	_Default_ISR shr (0+2)
 50586                           
 50587                           ; Vector 46 : I2C2RX
 50588  000064  0AC0               	dw	_Default_ISR shr (0+2)
 50589                           
 50590                           ; Vector 47 : I2C2TX
 50591  000066  0AC0               	dw	_Default_ISR shr (0+2)
 50592                           
 50593                           ; Vector 48 : I2C2
 50594  000068  0AC0               	dw	_Default_ISR shr (0+2)
 50595                           
 50596                           ; Vector 49 : I2C2E
 50597  00006A  0AC0               	dw	_Default_ISR shr (0+2)
 50598                           
 50599                           ; Vector 50 : U2RX
 50600  00006C  09B0               	dw	_UART2_rx_vect_isr shr (0+2)
 50601                           
 50602                           ; Vector 51 : U2TX
 50603  00006E  09A6               	dw	_UART2_tx_vect_isr shr (0+2)
 50604                           
 50605                           ; Vector 52 : U2E
 50606  000070  0AC0               	dw	_Default_ISR shr (0+2)
 50607                           
 50608                           ; Vector 53 : U2
 50609  000072  0AC0               	dw	_Default_ISR shr (0+2)
 50610                           
 50611                           ; Vector 54 : TMR3
 50612  000074  7AD3               	dw	_TMR3_ISR shr (0+2)
 50613                           
 50614                           ; Vector 55 : TMR3G
 50615  000076  0AC0               	dw	_Default_ISR shr (0+2)
 50616                           
 50617                           ; Vector 56 : TMR4
 50618  000078  0AC0               	dw	_Default_ISR shr (0+2)
 50619                           
 50620                           ; Vector 57 : CCP2
 50621  00007A  0AC0               	dw	_Default_ISR shr (0+2)
 50622                           
 50623                           ; Vector 58 : Undefined
 50624  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 50625                           
 50626                           ; Vector 59 : CWG2
 50627  00007E  0AC0               	dw	_Default_ISR shr (0+2)
 50628                           
 50629                           ; Vector 60 : CLC2
 50630  000080  0AC0               	dw	_Default_ISR shr (0+2)
 50631                           
 50632                           ; Vector 61 : INT2
 50633  000082  0AC0               	dw	_Default_ISR shr (0+2)
 50634                           
 50635                           ; Vector 62 : Undefined
 50636  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 50637                           
 50638                           ; Vector 63 : Undefined
 50639  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 50640                           
 50641                           ; Vector 64 : Undefined
 50642  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 50643                           
 50644                           ; Vector 65 : Undefined
 50645  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 50646                           
 50647                           ; Vector 66 : Undefined
 50648  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 50649                           
 50650                           ; Vector 67 : Undefined
 50651  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 50652                           
 50653                           ; Vector 68 : Undefined
 50654  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 50655                           
 50656                           ; Vector 69 : Undefined
 50657  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 50658                           
 50659                           ; Vector 70 : TMR5
 50660  000094  7710               	dw	_TMR5_ISR shr (0+2)
 50661                           
 50662                           ; Vector 71 : TMR5G
 50663  000096  0AC0               	dw	_Default_ISR shr (0+2)
 50664                           
 50665                           ; Vector 72 : TMR6
 50666  000098  0A3E               	dw	_TMR6_ISR shr (0+2)
 50667                           
 50668                           ; Vector 73 : CCP3
 50669  00009A  0AC0               	dw	_Default_ISR shr (0+2)
 50670                           
 50671                           ; Vector 74 : CWG3
 50672  00009C  0AC0               	dw	_Default_ISR shr (0+2)
 50673                           
 50674                           ; Vector 75 : CLC3
 50675  00009E  0AC0               	dw	_Default_ISR shr (0+2)
 50676                           
 50677                           ; Vector 76 : Undefined
 50678  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 50679                           
 50680                           ; Vector 77 : Undefined
 50681  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 50682                           
 50683                           ; Vector 78 : Undefined
 50684  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 50685                           
 50686                           ; Vector 79 : Undefined
 50687  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 50688                           
 50689                           ; Vector 80 : CCP4
 50690  0000A8  0AC0               	dw	_Default_ISR shr (0+2)
 50691                           
 50692                           ; Vector 81 : CLC4
 50693  0000AA  0AC0               	dw	_Default_ISR shr (0+2)
 50694  0000AC                     ivt0x8_undefint:
 50695                           	opt callstack 0
 50696  0000AC  00FF               	reset	
 50697                           
 50698                           	psect	text226
 50699  000000                     __ptext226:
 50700                           	opt callstack 0
 50701                           
 50702                           	psect	rparam
 50703  0000                     
 50704                           	psect	temp
 50705  00002A                     btemp:
 50706                           	opt callstack 0
 50707  00002A                     	ds	32
 50708  0000                     wtemp0	set	btemp
 50709  0000                     wtemp1	set	btemp+2
 50710  0000                     wtemp2	set	btemp+4
 50711  0000                     wtemp3	set	btemp+6
 50712  0000                     wtemp4	set	btemp+8
 50713  0000                     wtemp5	set	btemp+10
 50714  0000                     wtemp8	set	btemp+1
 50715  0000                     ttemp0	set	btemp
 50716  0000                     ttemp1	set	btemp+3
 50717  0000                     ttemp2	set	btemp+6
 50718  0000                     ttemp3	set	btemp+9
 50719  0000                     ttemp5	set	btemp+1
 50720  0000                     ttemp6	set	btemp+4
 50721  0000                     ttemp7	set	btemp+8
 50722  0000                     ltemp0	set	btemp
 50723  0000                     ltemp1	set	btemp+4
 50724  0000                     ltemp2	set	btemp+8
 50725  0000                     lltemp0	set	btemp
 50726  0000                     lltemp1	set	btemp+8
 50727  0000                     lltemp2	set	btemp+16
 50728  0000                     lltemp3	set	btemp+24
 50729                           tosu	equ	0x3FFF
 50730                           tosh	equ	0x3FFE
 50731                           tosl	equ	0x3FFD
 50732                           stkptr	equ	0x3FFC
 50733                           pclatu	equ	0x3FFB
 50734                           pclath	equ	0x3FFA
 50735                           pcl	equ	0x3FF9
 50736                           tblptru	equ	0x3FF8
 50737                           tblptrh	equ	0x3FF7
 50738                           tblptrl	equ	0x3FF6
 50739                           tablat	equ	0x3FF5
 50740                           prodh	equ	0x3FF4
 50741                           prodl	equ	0x3FF3
 50742                           indf0	equ	0x3FEF
 50743                           postinc0	equ	0x3FEE
 50744                           postdec0	equ	0x3FED
 50745                           preinc0	equ	0x3FEC
 50746                           plusw0	equ	0x3FEB
 50747                           fsr0h	equ	0x3FEA
 50748                           fsr0l	equ	0x3FE9
 50749                           wreg	equ	0x3FE8
 50750                           indf1	equ	0x3FE7
 50751                           postinc1	equ	0x3FE6
 50752                           postdec1	equ	0x3FE5
 50753                           preinc1	equ	0x3FE4
 50754                           plusw1	equ	0x3FE3
 50755                           fsr1h	equ	0x3FE2
 50756                           fsr1l	equ	0x3FE1
 50757                           bsr	equ	0x3FE0
 50758                           indf2	equ	0x3FDF
 50759                           postinc2	equ	0x3FDE
 50760                           postdec2	equ	0x3FDD
 50761                           preinc2	equ	0x3FDC
 50762                           plusw2	equ	0x3FDB
 50763                           fsr2h	equ	0x3FDA
 50764                           fsr2l	equ	0x3FD9
 50765                           status	equ	0x3FD8


Data Sizes:
    Strings     1544
    Constant    588
    Data        1184
    BSS         1775
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     41      55
    BANK0           160     25     158
    BANK1           256      0     253
    BANK2           256      0     230
    BANK3           256      0     247
    BANK4           256      0     219
    BANK5           256      0     134
    BANK6           256      0     255
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_134(CODE[1]), STR_94(CODE[1]), 

    is_leap	PTR int  size(2) Largest target is 2
		 -> F5(STACK[2]), is_leap(STACK[2]), NULL(NULL[0]), 

    sp____tm_to_tzname	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_135(CODE[1]), 

    abbrevs_end	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    oppoff	PTR long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    zonename	PTR PTR const unsigned char  size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    offset	PTR long  size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    isdst	PTR int  size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    rule	PTR const int  size(2) Largest target is 10
		 -> r1(BANK1[10]), r0(BANK1[10]), 

    abbrevs	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    types	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    alt	PTR unsigned int  size(2) Largest target is 2
		 -> alt(STACK[2]), 

    index	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    zi	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    trans	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    s	PTR const unsigned char  size(2) Largest target is 4
		 -> __gmt(CODE[4]), 

    z	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    d	PTR unsigned char  size(2) Largest target is 7
		 -> dst_name(BANK1[7]), std_name(BANK1[7]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    rule	PTR int  size(2) Largest target is 10
		 -> r1(BANK1[10]), r0(BANK1[10]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    old_tz	PTR unsigned char  size(2) Largest target is 32
		 -> old_tz_buf(BANK3[32]), 

    __tzname	PTR unsigned char [2] size(2) Largest target is 7
		 -> dst_name(BANK1[7]), std_name(BANK1[7]), NULL(NULL[0]), 

    tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tm	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_129(CODE[3]), STR_125(CODE[3]), STR_120(CODE[3]), STR_115(CODE[3]), 
		 -> STR_110(CODE[3]), STR_106(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_129(CODE[3]), STR_125(CODE[3]), STR_120(CODE[3]), STR_115(CODE[3]), 
		 -> STR_110(CODE[3]), STR_106(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_95(CODE[127]), STR_93(CODE[3]), STR_92(CODE[3]), 
		 -> STR_91(CODE[21]), STR_90(CODE[21]), STR_89(CODE[21]), STR_88(CODE[21]), 
		 -> STR_87(CODE[21]), STR_86(CODE[21]), STR_85(CODE[26]), STR_84(CODE[15]), 
		 -> STR_83(CODE[15]), STR_82(CODE[15]), STR_81(CODE[15]), STR_80(CODE[10]), 
		 -> STR_79(CODE[10]), STR_78(CODE[19]), STR_77(CODE[19]), STR_74(CODE[3]), 
		 -> STR_73(CODE[14]), STR_72(CODE[28]), STR_71(CODE[28]), STR_70(CODE[28]), 
		 -> STR_69(CODE[22]), STR_68(CODE[22]), STR_67(CODE[22]), STR_66(CODE[22]), 
		 -> STR_65(CODE[22]), STR_64(CODE[22]), STR_63(CODE[22]), STR_62(CODE[22]), 
		 -> STR_61(CODE[22]), STR_60(CODE[21]), STR_59(CODE[22]), STR_58(CODE[22]), 
		 -> STR_57(CODE[22]), STR_56(CODE[22]), STR_55(CODE[22]), STR_54(CODE[22]), 
		 -> STR_53(CODE[24]), STR_52(CODE[24]), STR_51(CODE[24]), STR_50(CODE[30]), 
		 -> STR_49(CODE[24]), STR_48(CODE[24]), STR_47(CODE[23]), STR_46(CODE[23]), 
		 -> STR_45(CODE[23]), STR_44(CODE[23]), STR_43(CODE[23]), STR_42(CODE[23]), 
		 -> STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[18]), STR_34(CODE[17]), 
		 -> STR_33(CODE[17]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[14]), STR_28(CODE[14]), STR_27(CODE[27]), STR_26(CODE[27]), 
		 -> STR_25(CODE[23]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[22]), STR_20(CODE[23]), STR_19(CODE[23]), STR_18(CODE[23]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_95(CODE[127]), STR_93(CODE[3]), STR_92(CODE[3]), 
		 -> STR_91(CODE[21]), STR_90(CODE[21]), STR_89(CODE[21]), STR_88(CODE[21]), 
		 -> STR_87(CODE[21]), STR_86(CODE[21]), STR_85(CODE[26]), STR_84(CODE[15]), 
		 -> STR_83(CODE[15]), STR_82(CODE[15]), STR_81(CODE[15]), STR_80(CODE[10]), 
		 -> STR_79(CODE[10]), STR_78(CODE[19]), STR_77(CODE[19]), STR_74(CODE[3]), 
		 -> STR_73(CODE[14]), STR_72(CODE[28]), STR_71(CODE[28]), STR_70(CODE[28]), 
		 -> STR_69(CODE[22]), STR_68(CODE[22]), STR_67(CODE[22]), STR_66(CODE[22]), 
		 -> STR_65(CODE[22]), STR_64(CODE[22]), STR_63(CODE[22]), STR_62(CODE[22]), 
		 -> STR_61(CODE[22]), STR_60(CODE[21]), STR_59(CODE[22]), STR_58(CODE[22]), 
		 -> STR_57(CODE[22]), STR_56(CODE[22]), STR_55(CODE[22]), STR_54(CODE[22]), 
		 -> STR_53(CODE[24]), STR_52(CODE[24]), STR_51(CODE[24]), STR_50(CODE[30]), 
		 -> STR_49(CODE[24]), STR_48(CODE[24]), STR_47(CODE[23]), STR_46(CODE[23]), 
		 -> STR_45(CODE[23]), STR_44(CODE[23]), STR_43(CODE[23]), STR_42(CODE[23]), 
		 -> STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[18]), STR_34(CODE[17]), 
		 -> STR_33(CODE[17]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[14]), STR_28(CODE[14]), STR_27(CODE[27]), STR_26(CODE[27]), 
		 -> STR_25(CODE[23]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[22]), STR_20(CODE[23]), STR_19(CODE[23]), STR_18(CODE[23]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR const unsigned char  size(2) Largest target is 642
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), nuls(STACK[7]), 
		 -> dbuf(BANK3[80]), spin(CODE[120]), STR_76(CODE[9]), STR_75(CODE[12]), 
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), port_data(BIGRAM[512]), 
		 -> STR_3(CODE[5]), V(BANK2[181]), 

    a	PTR const unsigned char  size(2) Largest target is 642
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), nuls(STACK[7]), 
		 -> dbuf(BANK3[80]), spin(CODE[120]), STR_76(CODE[9]), STR_75(CODE[12]), 
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), port_data(BIGRAM[512]), 
		 -> STR_3(CODE[5]), V(BANK2[181]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_101(CODE[4]), STR_100(CODE[4]), STR_97(CODE[4]), STR_96(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_101(CODE[4]), STR_100(CODE[4]), STR_97(CODE[4]), STR_96(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_74(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_95(CODE[127]), STR_93(CODE[3]), STR_92(CODE[3]), STR_91(CODE[21]), 
		 -> STR_90(CODE[21]), STR_89(CODE[21]), STR_88(CODE[21]), STR_87(CODE[21]), 
		 -> STR_86(CODE[21]), STR_85(CODE[26]), STR_84(CODE[15]), STR_83(CODE[15]), 
		 -> STR_82(CODE[15]), STR_81(CODE[15]), STR_80(CODE[10]), STR_79(CODE[10]), 
		 -> STR_78(CODE[19]), STR_77(CODE[19]), STR_73(CODE[14]), STR_72(CODE[28]), 
		 -> STR_71(CODE[28]), STR_70(CODE[28]), STR_69(CODE[22]), STR_68(CODE[22]), 
		 -> STR_67(CODE[22]), STR_66(CODE[22]), STR_65(CODE[22]), STR_64(CODE[22]), 
		 -> STR_63(CODE[22]), STR_62(CODE[22]), STR_61(CODE[22]), STR_60(CODE[21]), 
		 -> STR_59(CODE[22]), STR_58(CODE[22]), STR_57(CODE[22]), STR_56(CODE[22]), 
		 -> STR_55(CODE[22]), STR_54(CODE[22]), STR_53(CODE[24]), STR_52(CODE[24]), 
		 -> STR_51(CODE[24]), STR_50(CODE[30]), STR_49(CODE[24]), STR_48(CODE[24]), 
		 -> STR_47(CODE[23]), STR_46(CODE[23]), STR_45(CODE[23]), STR_44(CODE[23]), 
		 -> STR_43(CODE[23]), STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), 
		 -> STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[23]), 
		 -> STR_35(CODE[18]), STR_34(CODE[17]), STR_33(CODE[17]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[14]), STR_28(CODE[14]), 
		 -> STR_27(CODE[27]), STR_26(CODE[27]), STR_25(CODE[23]), STR_24(CODE[22]), 
		 -> STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[22]), STR_20(CODE[23]), 
		 -> STR_19(CODE[23]), STR_18(CODE[23]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), 
		 -> STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S7387_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 642
		 -> D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 642
		 -> D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK5[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK5[67]), 

    sp____localtime_r.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tm	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    t	PTR const long long  size(1) Largest target is 8
		 -> pclock(BANK0[8]), 

    sp__localtime.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    sp____localtime_r	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    t	PTR const long long  size(1) Largest target is 8
		 -> pclock(BANK0[8]), 

    F191.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    s	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_95(CODE[127]), STR_93(CODE[3]), STR_92(CODE[3]), STR_91(CODE[21]), 
		 -> STR_90(CODE[21]), STR_89(CODE[21]), STR_88(CODE[21]), STR_87(CODE[21]), 
		 -> STR_86(CODE[21]), STR_85(CODE[26]), STR_84(CODE[15]), STR_83(CODE[15]), 
		 -> STR_82(CODE[15]), STR_81(CODE[15]), STR_80(CODE[10]), STR_79(CODE[10]), 
		 -> STR_78(CODE[19]), STR_77(CODE[19]), STR_74(CODE[3]), STR_73(CODE[14]), 
		 -> STR_72(CODE[28]), STR_71(CODE[28]), STR_70(CODE[28]), STR_69(CODE[22]), 
		 -> STR_68(CODE[22]), STR_67(CODE[22]), STR_66(CODE[22]), STR_65(CODE[22]), 
		 -> STR_64(CODE[22]), STR_63(CODE[22]), STR_62(CODE[22]), STR_61(CODE[22]), 
		 -> STR_60(CODE[21]), STR_59(CODE[22]), STR_58(CODE[22]), STR_57(CODE[22]), 
		 -> STR_56(CODE[22]), STR_55(CODE[22]), STR_54(CODE[22]), STR_53(CODE[24]), 
		 -> STR_52(CODE[24]), STR_51(CODE[24]), STR_50(CODE[30]), STR_49(CODE[24]), 
		 -> STR_48(CODE[24]), STR_47(CODE[23]), STR_46(CODE[23]), STR_45(CODE[23]), 
		 -> STR_44(CODE[23]), STR_43(CODE[23]), STR_42(CODE[23]), STR_41(CODE[23]), 
		 -> STR_40(CODE[23]), STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[23]), STR_35(CODE[18]), STR_34(CODE[17]), STR_33(CODE[17]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[14]), 
		 -> STR_28(CODE[14]), STR_27(CODE[27]), STR_26(CODE[27]), STR_25(CODE[23]), 
		 -> STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[22]), 
		 -> STR_20(CODE[23]), STR_19(CODE[23]), STR_18(CODE[23]), STR_17(CODE[26]), 
		 -> STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK3[27]), 

    tim.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tim	PTR const struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    s	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_133(CODE[37]), STR_132(CODE[22]), 

    cp	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK3[27]), 

    f1p	PTR  size(2) Largest target is 320
		 -> C(BIGRAM[320]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_95(CODE[127]), STR_93(CODE[3]), STR_92(CODE[3]), STR_91(CODE[21]), 
		 -> STR_90(CODE[21]), STR_89(CODE[21]), STR_88(CODE[21]), STR_87(CODE[21]), 
		 -> STR_86(CODE[21]), STR_85(CODE[26]), STR_84(CODE[15]), STR_83(CODE[15]), 
		 -> STR_82(CODE[15]), STR_81(CODE[15]), STR_80(CODE[10]), STR_79(CODE[10]), 
		 -> STR_78(CODE[19]), STR_77(CODE[19]), STR_74(CODE[3]), STR_73(CODE[14]), 
		 -> STR_72(CODE[28]), STR_71(CODE[28]), STR_70(CODE[28]), STR_69(CODE[22]), 
		 -> STR_68(CODE[22]), STR_67(CODE[22]), STR_66(CODE[22]), STR_65(CODE[22]), 
		 -> STR_64(CODE[22]), STR_63(CODE[22]), STR_62(CODE[22]), STR_61(CODE[22]), 
		 -> STR_60(CODE[21]), STR_59(CODE[22]), STR_58(CODE[22]), STR_57(CODE[22]), 
		 -> STR_56(CODE[22]), STR_55(CODE[22]), STR_54(CODE[22]), STR_53(CODE[24]), 
		 -> STR_52(CODE[24]), STR_51(CODE[24]), STR_50(CODE[30]), STR_49(CODE[24]), 
		 -> STR_48(CODE[24]), STR_47(CODE[23]), STR_46(CODE[23]), STR_45(CODE[23]), 
		 -> STR_44(CODE[23]), STR_43(CODE[23]), STR_42(CODE[23]), STR_41(CODE[23]), 
		 -> STR_40(CODE[23]), STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[23]), STR_35(CODE[18]), STR_34(CODE[17]), STR_33(CODE[17]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[14]), 
		 -> STR_28(CODE[14]), STR_27(CODE[27]), STR_26(CODE[27]), STR_25(CODE[23]), 
		 -> STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[22]), 
		 -> STR_20(CODE[23]), STR_19(CODE[23]), STR_18(CODE[23]), STR_17(CODE[26]), 
		 -> STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cfmt	PTR unsigned char  size(2) Largest target is 127
		 -> STR_95(CODE[127]), STR_93(CODE[3]), STR_92(CODE[3]), STR_91(CODE[21]), 
		 -> STR_90(CODE[21]), STR_89(CODE[21]), STR_88(CODE[21]), STR_87(CODE[21]), 
		 -> STR_86(CODE[21]), STR_85(CODE[26]), STR_84(CODE[15]), STR_83(CODE[15]), 
		 -> STR_82(CODE[15]), STR_81(CODE[15]), STR_80(CODE[10]), STR_79(CODE[10]), 
		 -> STR_78(CODE[19]), STR_77(CODE[19]), STR_74(CODE[3]), STR_73(CODE[14]), 
		 -> STR_72(CODE[28]), STR_71(CODE[28]), STR_70(CODE[28]), STR_69(CODE[22]), 
		 -> STR_68(CODE[22]), STR_67(CODE[22]), STR_66(CODE[22]), STR_65(CODE[22]), 
		 -> STR_64(CODE[22]), STR_63(CODE[22]), STR_62(CODE[22]), STR_61(CODE[22]), 
		 -> STR_60(CODE[21]), STR_59(CODE[22]), STR_58(CODE[22]), STR_57(CODE[22]), 
		 -> STR_56(CODE[22]), STR_55(CODE[22]), STR_54(CODE[22]), STR_53(CODE[24]), 
		 -> STR_52(CODE[24]), STR_51(CODE[24]), STR_50(CODE[30]), STR_49(CODE[24]), 
		 -> STR_48(CODE[24]), STR_47(CODE[23]), STR_46(CODE[23]), STR_45(CODE[23]), 
		 -> STR_44(CODE[23]), STR_43(CODE[23]), STR_42(CODE[23]), STR_41(CODE[23]), 
		 -> STR_40(CODE[23]), STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[23]), STR_35(CODE[18]), STR_34(CODE[17]), STR_33(CODE[17]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[14]), 
		 -> STR_28(CODE[14]), STR_27(CODE[27]), STR_26(CODE[27]), STR_25(CODE[23]), 
		 -> STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[22]), 
		 -> STR_20(CODE[23]), STR_19(CODE[23]), STR_18(CODE[23]), STR_17(CODE[26]), 
		 -> STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), STR_76(CODE[9]), 
		 -> STR_75(CODE[12]), D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), 
		 -> STR_3(CODE[5]), V(BANK2[181]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), STR_76(CODE[9]), 
		 -> STR_75(CODE[12]), D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), 
		 -> STR_3(CODE[5]), V(BANK2[181]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), nuls(STACK[7]), 
		 -> STR_76(CODE[9]), STR_75(CODE[12]), D.lcd(BIGRAM[640]), D(BIGRAM[642]), 
		 -> T(CODE[176]), STR_3(CODE[5]), V(BANK2[181]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__hid_input	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    t	PTR long long  size(2) Largest target is 8
		 -> time@current_time(BANK0[8]), NULL(NULL[0]), 

    hist	PTR volatile struct hist_type size(2) Largest target is 320
		 -> C.hist(BIGRAM[97]), C(BIGRAM[320]), 

    r_cal_ptr	PTR unsigned char  size(2) Largest target is 155
		 -> R(BANK1[155]), 

    r_cal_ptr	PTR unsigned char  size(2) Largest target is 155
		 -> r_cal(BANK4[155]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_76(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_75(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK5[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK5[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK5[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK5[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), V(BANK2[181]), 

    strPtr	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), V(BANK2[181]), 

    sp__hid_display	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__asctime	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK3[27]), 

    S3418tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    sp__localtime	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    t_mbmc	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1999spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK5[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK5[67]), 

    S1999spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0  439914
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                            _asctime
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                 _current_sensor_cal
                    _display_history
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                     _load_hist_data
                          _localtime
                          _lp_filter
                      _mode_lamp_dim
                      _read_cal_data
                            _set_dac
                          _set_dac_a
                          _set_dac_b
                   _set_display_info
                      _set_hist_flag
                 _set_load_relay_one
                 _set_load_relay_two
                           _set_time
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                               _time
                    _update_cal_data
                   _update_hist_data
                         _update_lcd
                      _wait_lcd_done
                     _write_cal_data
 ---------------------------------------------------------------------------------
 (1) _update_hist_data                                     3     0      3      88
 ---------------------------------------------------------------------------------
 (1) _update_cal_data                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_time                                             8     0      8      22
 ---------------------------------------------------------------------------------
 (1) _set_hist_flag                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_dac_b                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (1) _set_dac_a                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (2) _convert_dac_raw                                      4     0      4    1578
                            ___fldiv
                             ___flge
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _set_dac                                              0     0      0      44
                  _SPI1_Exchange8bit
                    _dac_spi_control
 ---------------------------------------------------------------------------------
 (2) _dac_spi_control                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _read_cal_data                                        7     7      0     615
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                         _CRC_IsBusy
                          _CRC_Start
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2      45
 ---------------------------------------------------------------------------------
 (1) _load_hist_data                                       2     2      0    4070
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
                         _start_bsoc
                          _stop_bsoc
                               _time
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1356
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (2) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8435
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         7     3      4     136
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          2     0      2     771
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            2     0      2     237
                         _get_switch
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1    8599
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1    1451
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _display_history                                      0     0      0   83116
                             _WaitMs
                            _asctime
                         _get_switch
                      _get_vterm_ptr
                          _localtime
                            _sprintf
                               _time
                         _update_lcd
 ---------------------------------------------------------------------------------
 (18) _time                                                8     0      8      23
 ---------------------------------------------------------------------------------
 (1) _localtime                                            1     0      1   14641
                      ___localtime_r
 ---------------------------------------------------------------------------------
 (2) ___localtime_r                                        3     0      3   14610
                       ___secs_to_tm
                     ___secs_to_zone
 ---------------------------------------------------------------------------------
 (3) ___secs_to_zone                                      46    28     18   11126
                            ___aodiv
                     ___year_to_secs
                           _do_tzset
                       _rule_to_secs
                         _scan_trans
                          _zi_read32
 ---------------------------------------------------------------------------------
 (4) _scan_trans                                          30    18     12    1990
                          _zi_read32
 ---------------------------------------------------------------------------------
 (4) _zi_read32                                            2     0      2      88
 ---------------------------------------------------------------------------------
 (4) _rule_to_secs                                        30    22      8    3167
                            ___aldiv
                            ___aomod
                             ___lmul
                    ___month_to_secs
                     ___year_to_secs
                      _days_in_month
 ---------------------------------------------------------------------------------
 (5) _days_in_month                                        4     0      4      66
 ---------------------------------------------------------------------------------
 (5) ___year_to_secs                                      24    14     10    1473
                            ___aodiv
                            ___aomod
                             ___lmul
                             ___omul
 ---------------------------------------------------------------------------------
 (5) ___month_to_secs                                      8     4      4      90
 ---------------------------------------------------------------------------------
 (4) _do_tzset                                             2     2      0    2777
                            _getname
                             _getoff
                            _getrule
 ---------------------------------------------------------------------------------
 (5) _getrule                                              6     2      4    1222
                             _getint
                             _getoff
 ---------------------------------------------------------------------------------
 (6) _getoff                                               6     4      2     425
                             _getint
 ---------------------------------------------------------------------------------
 (7) _getint                                               4     2      2     112
 ---------------------------------------------------------------------------------
 (5) _getname                                              6     2      4     663
 ---------------------------------------------------------------------------------
 (3) ___secs_to_tm                                        67    57     10    3174
                            ___aldiv
                            ___almod
                            ___aodiv
                            ___aomod
                             ___lmul
                             ___omul
 ---------------------------------------------------------------------------------
 (6) ___omul                                              24     8     16      92
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8      92
 ---------------------------------------------------------------------------------
 (4) ___almod                                             10     2      8     296
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             14     6      8     300
 ---------------------------------------------------------------------------------
 (2) _asctime                                              6     4      2    2527
                            ___awdiv
                            ___awmod
                              _put2d
 ---------------------------------------------------------------------------------
 (3) _put2d                                                5     0      5     959
                            ___awdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     2      2     232
 ---------------------------------------------------------------------------------
 (1) _current_sensor_cal                                   9     9      0   67566
                             _WaitMs
                   _cal_current_zero
                     _clear_adc_scan
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                           _spinners
                            _sprintf
                     _start_adc_scan
                         _update_lcd
                     _write_cal_data
 ---------------------------------------------------------------------------------
 (1) _write_cal_data                                       7     7      0     593
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                         _CRC_IsBusy
                          _CRC_Start
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     4     1      3      90
 ---------------------------------------------------------------------------------
 (2) _CRC_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_IsBusy                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_CalculatedResultGet                              7     4      3     209
                   _CRC_ReverseValue
 ---------------------------------------------------------------------------------
 (3) _CRC_ReverseValue                                     6     4      2      94
 ---------------------------------------------------------------------------------
 (2) _CRC_8BitDataWrite                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     415
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _cal_current_zero                                     5     0      5     242
                        _check_range
 ---------------------------------------------------------------------------------
 (3) _check_range                                          6     0      6     132
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  131766
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   65599
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (17) _sprintf                                           104    10     94   30659
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   35090
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              5     1      4   34808
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1    1420
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data_dma                                    1     0      1    1389
                     _ringBufS_flush
                   _ringBufS_put_dma
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31860
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   30434
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   30281
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29889
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2704
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2411
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   14099
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     433
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     445
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    3018
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2     130
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (19) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (19) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (19) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     335
                    _ADCC_Initialize
                  _CLKREF_Initialize
                     _CRC_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_Initialize                                       4     4      0      92
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     205
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     205
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     205
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                           31    31      0    5544
                                             10 COMRAM    31    31      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0    5454
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0    5454
                     _check_day_time
 ---------------------------------------------------------------------------------
 (17) _check_day_time                                      4     4      0    5454
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
                               _time
 ---------------------------------------------------------------------------------
 (18) _time                                                8     0      8      23
 ---------------------------------------------------------------------------------
 (18) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (19) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (19) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (19) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           25    25      0   36148
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0   36058
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           6     6      0   36058
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _sprintf                                           104    10     94   30659
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   30281
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29889
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2704
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2411
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   14099
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     433
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     445
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    3018
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2     130
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (17) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (17) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (17) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (27) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (27) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _CRC_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _asctime
     ___awdiv
     ___awmod
     _put2d
       ___awdiv
       ___lbmod
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
       _wait_lcd_done
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _current_sensor_cal
     _WaitMs
       _StartTimer
       _TimerDone
     _cal_current_zero
       _check_range
     _clear_adc_scan
     _get_raw_result
     _get_switch
     _get_vterm_ptr
     _spinners
       _strlen
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _start_adc_scan
       _ADCC_DischargeSampleCapacitor
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
       _ADCC_StartConversion
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
       _wait_lcd_done
     _write_cal_data
       _CRC_8BitDataWrite
       _CRC_CalculatedResultGet
         _CRC_ReverseValue
       _CRC_Initialize
       _CRC_IsBusy
       _CRC_Start
       _DATAEE_WriteByte
   _display_history
     _WaitMs
       _StartTimer
       _TimerDone
     _asctime
       ___awdiv
       ___awmod
       _put2d
         ___awdiv
         ___lbmod
     _get_switch
     _get_vterm_ptr
     _localtime
       ___localtime_r
         ___secs_to_tm
           ___aldiv
           ___almod
           ___aodiv
           ___aomod
           ___lmul
           ___omul
         ___secs_to_zone
           ___aodiv
           ___year_to_secs
             ___aodiv
             ___aomod
             ___lmul
             ___omul
           _do_tzset
             _getname
             _getoff
               _getint
             _getrule
               _getint
               _getoff
                 _getint
           _rule_to_secs
             ___aldiv
             ___aomod
             ___lmul
             ___month_to_secs
             ___year_to_secs
               ___aodiv
               ___aomod
               ___lmul
               ___omul
             _days_in_month
           _scan_trans
             _zi_read32
           _zi_read32
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _time
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
       _wait_lcd_done
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _ringBufS_flush
           _memset
         _ringBufS_put_dma
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_data
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _load_hist_data
     ___fladd
     ___flmul
     ___fltol
     ___xxtofl
     _start_bsoc
     _stop_bsoc
     _time
   _localtime
     ___localtime_r
       ___secs_to_tm
         ___aldiv
         ___almod
         ___aodiv
         ___aomod
         ___lmul
         ___omul
       ___secs_to_zone
         ___aodiv
         ___year_to_secs
           ___aodiv
           ___aomod
           ___lmul
           ___omul
         _do_tzset
           _getname
           _getoff
             _getint
           _getrule
             _getint
             _getoff
               _getint
         _rule_to_secs
           ___aldiv
           ___aomod
           ___lmul
           ___month_to_secs
           ___year_to_secs
             ___aodiv
             ___aomod
             ___lmul
             ___omul
           _days_in_month
         _scan_trans
           _zi_read32
         _zi_read32
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _read_cal_data
     _CRC_8BitDataWrite
     _CRC_CalculatedResultGet
       _CRC_ReverseValue
     _CRC_Initialize
     _CRC_IsBusy
     _CRC_Start
     _DATAEE_ReadByte
   _set_dac
     _SPI1_Exchange8bit
     _dac_spi_control
   _set_dac_a
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_dac_b
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_display_info
     _TimerDone
   _set_hist_flag
   _set_load_relay_one
   _set_load_relay_two
   _set_time
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _time
   _update_cal_data
   _update_hist_data
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
       _send_lcd_data_dma
         _ringBufS_flush
           _memset
         _ringBufS_put_dma
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
     _wait_lcd_done
   _wait_lcd_done
   _write_cal_data
     _CRC_8BitDataWrite
     _CRC_CalculatedResultGet
       _CRC_ReverseValue
     _CRC_Initialize
     _CRC_IsBusy
     _CRC_Start
     _DATAEE_WriteByte

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
         _time
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     5C2      69       18.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      86      15       52.3%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      DB      13       85.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F7      11       96.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E6       9       89.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FD       7       98.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      9E       5       98.8%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     29      37       1       87.3%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     60F      58        0.0%
DATA                 0      0     BD1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Feb 20 04:02:19 2020

                         _SPI1_Exchange8bit 2866                    __end_of_set_display_info 28DE  
                                         _C 08FF                                           _D 0A3F  
                                         _H 019B                                           _P 0094  
                                         _R 0100                                           _S 01A4  
                                         _T F8B7                                           _V 0207  
          __end_of_TMR5_SetInterruptHandler 25A6                __end_of_start_switch_handler 2846  
                               __CFG_CP$OFF 000000                     __size_of_ringBufS_flush 0092  
                           _update_cal_data 1B12                                          _r0 01E5  
                                        _r1 01DB                                          _bp F9DF  
                    __end_of_FVR_Initialize 2ADA                              _check_day_time A1C0  
                               __CFG_LVP$ON 000000                                         l171 2994  
                                       l809 2874                                         l675 245E  
                                       l942 16D2                                         _GIE 01FE97  
                                       _abs 1E0E                                         _pad FA36  
                                       fsr0 003FE9                                         fsr2 003FD9  
                   __size_of_PMD_Initialize 0014                             _TMR2_Initialize 292A  
                                       prod 003FF3                                         tosl 003FFD  
                                       wreg 003FE8                     __end_of___month_to_secs 0294  
                             _INT0_CallBack 2778                           _update_adc_result 20DA  
                             __CFG_BBEN$OFF 000000                       __size_of_Volts_to_SOC 00BA  
                    __size_of___localtime_r 0244                               _INT1_CallBack 270C  
                              __CFG_ZCD$OFF 000000                                        l1004 201A  
                                      l2100 13DC                                        l2021 145A  
                                      l2203 A52A                                        l1500 110A  
                                      l2141 DC34                                        l2037 08C8  
                                      l2062 0E84                                        l2207 A522  
                                      l1271 29BC                                        l1192 205A  
                                      l3025 E87A                                        l1505 16E0  
                                      l1282 E5CE                             _timer3ReloadVal 00C0  
                                      l1284 E5D4                                        l1524 953C  
                                      l2412 BAB6                                        l3310 8276  
                                      l1462 0444                                        l1455 005E  
                                      l4025 7B46                                        l4033 665A  
                                      l2370 543C                                        l1618 1A68  
                                      l1475 0962                                        l2188 FE56  
                                      l1477 0968                                        l2366 50FE  
                                      l2630 AC24                                        l1750 0FAA  
                                      l3422 F7FC                                        l2471 FA92  
                                      l2527 295A                                        l2287 F5C2  
                                      l1824 2130                                        l2296 D49C  
                                      l3265 7640                                        l3417 1E4E  
                                      l3409 DF6E                                        l2609 BBA4  
                                      l1841 EE0A                                        l1833 D554  
                                      l3521 CBEE                                        l1489 0CDA  
                                      l3346 6E84                                        l1746 0AD6  
                                      l1834 D6B0                                        l2491 8D30  
                                      l2571 223A                                        l1499 0EE0  
                                      l2556 1D8A                                        l3277 74D0  
                                      l2645 9E4A                                        l1765 21D2  
                      _ADCC_StartConversion 29C0                                        l1881 28DA  
                                      l2737 0396                                        l3386 D8AE  
                                      l3458 C762                                        l3547 F6E2  
                                      l1981 8C4C                                        l3814 D27C  
                                      l2695 49D8                                        l3842 11D8  
                                      l3829 125C                                        l3853 3A2C  
                                      l2991 EA6E                                        l3937 D05C  
                                      l3946 C26E                                        l2987 FFF2  
                                      l3981 BFF2                                        l3973 BF0C  
                                      l2998 EB42                                        l9900 725E  
                                      l9812 6EE4                                        l9830 6FA2  
                                      l9822 6F3A                                        l9904 7268  
                                      l9824 6F6A                                        l9842 7014  
                                      l9818 6F24                                        l9932 7350  
                                      l9908 7298                                        l9836 6FD4  
                                      l9950 7480                                        l9926 7334  
                                      l9854 707C                                        l9846 702A  
                                      STR_1 FF1D                                        l9928 7346  
                                      l9936 7382                                        l9848 705A  
                                      STR_2 FF08                                        STR_3 FFD5  
                                      STR_4 FEF3                                        STR_5 FBB9  
                                      l9972 7510                                        l9948 745A  
                                      l9884 71BA                                        STR_6 FBB9  
                                      STR_7 FBB9                                        l9982 7538  
                                      l9966 74F2                                        l9958 74B4  
                                      l9894 722C                                        STR_8 FBB9  
                                      STR_9 FBB9                                        l9968 7504  
                                      l9986 753E                                        l9898 724C  
                                      l9998 759C                                        _LATA 003FBA  
                                      _LATB 003FBB                                        _LATC 003FBC  
                                      _LATD 003FBD                                        _LATE 003FBE  
                                      _LATF 003FBF                                        _T2PR 003FAB  
                                      _T6PR 003F93                                        _PMD0 0039C0  
                                      _PMD1 0039C1                                        _PMD2 0039C2  
                                      _PMD3 0039C3                                        u7200 2376  
                                      u8000 1ED4                                        _PMD4 0039C4  
                                      _PMD5 0039C5                                        u7210 2378  
                                      u8010 1186                                        _PMD6 0039C6  
                                      _PMD7 0039C7                                        u8020 1188  
                                      u8101 EF3E                                        u7310 71E0  
                                      u7320 7200                                        u8040 23A6  
                                      u8200 C47E                                        u7321 71FA  
                                      u8050 23A8                                        u8130 C2D4  
                                      u8220 C4D0                                        u7510 7516  
                                      u7430 7378                                        u8150 C32A  
                                      u8310 CDC0                                        u9030 1CC2  
                                      u9110 E830                                        u7600 75AC  
                                      u7360 7290                                        u9040 E744  
                                      u9200 F384                                        u8161 C334  
                                      u8081 EE1C                                        u7530 7530  
                                      u7370 72B0                                        u7338 7202  
                                      u8170 C36E                                        u8330 CE12  
                                      u8250 CC4E                                        u9130 E85A  
                                      u9050 E758                                        u9210 F3B6  
                                      u7435 7368                                        u8180 C3A0  
                                      u9060 E792                                        u7365 7280  
                                      u9045 E73A                                        u9141 E42E  
                                      u7470 74A2                                        u8510 8134  
                                      u8270 CCA4                                        u9150 E468  
                                      u9230 F46E                                        u8280 CCD6  
                                      u9160 E49A                                        u7640 2346  
                                      u9065 E788                                        u7570 758C  
                                      u9250 1B86                                        u8290 CD08  
                                      u7650 2348                                        u9260 1BA6  
                                      u7820 DF5E                                        u7900 A636  
                                      u9180 E578                                        u7660 018E  
                                      u8550 8190                                        u8470 80AA  
                                      u7830 DF60                                        u7575 757C  
                                      u7815 DF40                                        u8560 81CA  
                                      u7760 1E22                                        u8730 6CFC  
                                      u8570 8206                                        u7770 DE90  
                                      u8555 8180                                        u8660 680E  
                                      u7940 A716                                        u7860 120A  
                                      u7925 A670                                        u7926 A676  
                                      u7870 120C                                        u7775 DE86  
                                      u7927 A684                                        u7960 A7EE  
                                      u7945 A70C                                        u8770 6D58  
                                      u7890 A5EA                                        _PLLR 01CEE0  
                                      u8675 69A2                                        u8780 6D92  
                                      u8685 6A6A                                        u7965 A7E4  
                                      u8790 6DD8                                        u7990 1ED2  
                                      u8775 6D48                                        u8695 6C32  
                                      u7895 A5E0                                        u8970 FFEC  
                   __end_of_display_history B7E2                                        _WPUA 003A41  
                                      _WPUB 003A51                                        _WPUC 003A61  
                                      _WPUD 003A71                                        _WPUE 003A81  
                                      _WPUF 003A91                            __end_of_ADCC_ISR 2438  
                     __size_of___secs_to_tm 10D2                               __CFG_FCMEN$ON 000000  
                              _rule_to_secs 764A                                        _dbuf 0354  
                        __size_of_CRC_Start 0006                                        _cp_h F9F3  
                                      _cp_l F9EF                                        _atoi C4F8  
                                      _ctoa 10D6                                        _main 0000  
                                      _dtoa 8C52                                        _nanf 18E4  
                                      _lock 01D3                                        _seed 02DE  
                                      _prec 004C                                        _time 19A6  
                                      _nout 00BA                                        _spin F967  
                                      fsr0h 003FEA                                        fsr1h 003FE2  
                                      indf0 003FEF                                        fsr2h 003FDA  
                                      fsr0l 003FE9                                        indf1 003FE7  
                                      indf2 003FDF                                        fsr1l 003FE1  
                                      fsr2l 003FD9                                        _stoa BABA  
                                      btemp 002A                                        _utoa ABE0  
                                      _xtoa 9E06                      __end_of_check_adc_scan 2ABA  
                             ___fpclassifyf DDE2                                        prodh 003FF4  
                                      prodl 003FF3                                        start 00AE  
                           _timer5ReloadVal 00C4                   __end_of_SPI1_Exchange8bit 2884  
                 __size_of_clear_hid_pflags 0066                             _TMR3_Initialize 1D80  
               __size_of_set_load_relay_one 0010                 __size_of_set_load_relay_two 0010  
                             __CFG_CSWEN$ON 000000                              _SPI1STATUSbits 003D17  
                         _UART1_rx_vect_isr 2670                                ___param_bank 000000  
                      display_history@bwait 0053                      __end_of_check_day_time A534  
                        ?_UART1_rx_vect_isr 0001                   __size_of_DATAEE_WriteByte 0068  
                          _update_hist_data 1368                            __end_of_INT0_ISR 2A6A  
                          __end_of_INT1_ISR 209E              __size_of_OSCILLATOR_Initialize 0016  
                  __end_of_ringBufS_put_dma 0ADE               __end_of_OSCILLATOR_Initialize 299A  
                                     l10020 7620                                       l10012 75E0  
                                     l10014 75F0                                       l10030 00C4  
                                     l10008 75C8                                       l10122 DF0C  
                                     l10034 014A                                       l10300 CCDC  
                                     l10108 1E3E                                       l10132 DF66  
                                     l10126 DF10                                       l10150 124C  
                                     l10206 11C8                                       l10400 802A  
                                     l10232 EECA                                       l10218 03EC  
                                     l10420 80CC                                       l10340 7DE2  
                                     l10260 C374                                       l10308 CD88  
                                     l10180 A7C0                                       l10164 A652  
                                     l12012 E96E                                       l12004 E902  
                                     l10228 EE24                                       l10510 67CE  
                                     l10502 6788                                       l10414 80B0  
                                     l10406 807E                                       l10334 7D9C  
                                     l12030 D6FE                                       l10254 C32E  
                                     l10520 6820                                       l10512 67FE  
                                     l10424 80F2                                       l10408 8082  
                                     l10360 7EC0                                       l10328 7D5C  
                                     l12040 D778                                       l10272 C446  
                                     l10248 C2DA                                       l10184 A808  
                                     l10610 6DC4                                       l10434 813C  
                                     l10354 7E7A                                       l10338 7DB2  
                                     l12050 D7DA                                       l12042 D78E  
                                     l10178 A770                                       l10508 67C8  
                                     l10460 8222                                       l10380 7F52  
                                     l10372 7F38                                       l10348 7E3A  
                                     l12052 D7F8                                       l12044 D7AC  
                                     l11500 C752                                       l10292 CC54  
                                     l10188 A876                                       l10606 6D7E  
                                     l10454 81F2                                       l10438 8142  
                                     l10390 7FE2                                       l10366 7EFE  
                                     l10358 7E90                                       l12062 D82C  
                                     l12054 D80E                                       l12038 D76A  
                                     l10624 6E32                                       l10616 6DEE  
                                     l10448 81B6                                       l12072 D88E  
                                     l10626 6E4C                                       l10490 66FA  
                                     l10466 824A                                       l12314 87C8  
                                     l10730 FFBC                                       l10802 E812  
                                     l10572 6C78                                       l10492 6700  
                                     l10484 66BA                                       l10468 825A  
                                     l12340 8A9E                                       l12324 88EE  
                                     l12308 8798                                       l10804 E828  
                                     l11516 D0EE                                       l10900 D042  
                                     l10582 6CBA                                       l10494 6730  
                                     l10742 EA2C                                       l10398 8018  
                                     l10734 FFF0                                       l10726 FF7A  
                                     l11518 D15A                                       l10830 E540  
                                     l11550 E00E                                       l10592 6D04  
                                     l10760 EB40                                       l10752 EB0A  
                                     l12336 8A02                                       l12328 89D0  
                                     l11480 C5D4                                       l11464 C512  
                                     l11544 DFDE                                       l11704 59D0  
                                     l10578 6C94                                       l12354 8C1A  
                                     l12362 8C2C                                       l11490 C6B6  
                                     l11482 C5EC                                       l11474 C5A8  
                                     l11466 C534                                       l10818 E46E  
                                     l10850 F436                                       l10842 F38A  
                                     l12282 05B6                                       l11562 E090  
                                     l11538 DFB2                                       l11722 5A7C  
                                     l11714 5A48                                       l10596 6D0A  
                                     l10748 EABC                                       l12348 8B7E  
                                     l12380 24D6                                       l11484 C610  
                                     l11716 5A50                                       l11708 59FE  
                                     l14132 D900                                       PRLOCK 0039EF  
                                     l14214 E3FA                                       l11486 C64E  
                                     l12278 0578                                       l12286 05CA  
                                     l11742 026A                                       l11646 17E2  
                                     l14302 BA7C                                       l13360 1C60  
                                     l10768 1CC6                                       l11728 5B10  
                                     l11664 556A                                       l11672 569A  
                                     l14304 BAA6                                       l14160 DA6C  
                                     l14144 D9B6                                       l14152 DA68  
                                     l10866 1BAA                                       l10794 E7E6  
                                     l10778 E764                                       l16002 BCFC  
                                     l12802 E696                                       l13530 EFBE  
                                     l10882 CEE0                                       l14234 B7FE  
                                     l14146 D9EA                                       l13364 1C92  
                                     l12724 A2D4                                       l10796 E802  
                                     l16020 AC14                                       l11668 5594  
                                     l14260 B8A2                                       l14244 B844  
                                     l14236 B80E                                       l14172 1B42  
                                     l16006 BD38                                       l12806 E6C0  
                                     l13534 F034                                       l10878 CEA0  
                                     l11694 595A                                       l11678 56D0  
                                     l14254 B87A                                       l14238 B814  
                                     l13710 F8CA                                       l14182 137E  
                                     l12744 A3CA                                       l13560 DAFA  
                                     l13624 2146                                       l16120 A176  
                                     l16104 A08C                                       l10896 D01E  
                                     l11696 5964                                       l11688 5928  
                                     l14280 B922                                       l14272 B8FC  
                                     l14264 B8AE                                       l14248 B850  
                                     l15402 0C4E                                       l12818 21DC  
                                     l13706 F868                                       l14194 13B6  
                                     l12924 1BE6                                       l17100 4CFA  
                                     l13740 F23C                                       l13556 DAE6  
                                     l13548 DABA                                       l14436 9DF8  
                                     l15412 0D74                                       l15404 0C70  
                                     l15500 F0FA                                       l16028 AC70  
                                     l16060 9E3A                                       l16300 4180  
                                     l13572 0E28                                       l16132 C0A0  
                                     l14460 96E2                                       l17110 4F26  
                                     l12758 A4D0                                       l13742 F24A  
                                     l13750 F252                                       l16038 AE66  
                                     l14390 07B0                                       l16134 C0B8  
                                     l13662 20FA                                       l14632 129E  
                                     l17120 5066                                       l17104 4D4E  
                                     l13752 F284                                       l13736 F226  
                                     l15416 0DB2                                       l15520 F1C0  
                                     l16080 9F10                                       l16072 9EB0  
                                     l16400 4964                                       l16312 426C  
                                     l16224 3B18                                       l15432 B2B4  
                                     l12944 1320                                       l13584 0E5E  
                                     l12872 23F2                                       l16160 AF6E  
                                     l16152 C24A                                       l16136 C0DE  
                                     l14456 96A6                                       l17114 4FA0  
                                     l13738 F236                                       l15506 F11A  
                                     l16066 9E74                                       l16250 3CEA  
                                     l16226 3B52                                       l14386 0772  
                                     l16170 B08A                                       l13940 2820  
                                     l17140 5434                                       l17124 510E  
                                     l15540 F93E                                       l15700 194C  
                                     l16332 43CC                                       l16308 4238  
                                     l16228 3B68                                       l15452 B48A  
                                     l15444 B3DC                                       l11996 E8BA  
                                     l16172 B094                                       l16180 B1BA  
                                     l16164 B008                                       l14638 12AE  
                                     l13766 F336                                       l13758 F2BC  
                                     l15390 F5F8                                       l15470 FA9C  
                                     l15614 8D6A                                       l15606 8D20  
                                     l16342 447A                                       l16246 3C9A  
                                     l16406 4984                                       l15438 B372  
                                     l17062 F55C                                       l17310 D38E  
                                     l13686 1418                                       l13952 245A  
                                     l17128 5130                                       l17080 4ACC  
                                     l15464 FA62                                       l15528 F1F4  
                                     l15544 F950                                       l15800 1E9A  
                                     l15704 1978                                       l16096 A006  
                                     l16352 459C                                       l16248 3CD4  
                                     l17240 919E                                       l16176 B12E  
                                     l16440 BF16                                       l17056 F4F6  
                                     l17320 D466                                       l15474 FAD8  
                                     l15618 8D88                                       l15810 2046  
                                     l15730 1AB6                                       l15714 1A1C  
                                     l15722 1A4A                                       l16362 4652  
                                     l16266 3E4E                                       l13874 06C4  
                                     l13698 1430                                       l17092 4BF8  
                                     l17084 4B20                                       l15468 FA8A  
                                     l15580 10F4                                       l15652 9088  
                                     l15628 8F9A                                       l15548 F968  
                                     l15484 049C                                       l15740 1BF2  
                                     l16284 3FD2                                       l16276 3EE6  
                                     l17236 918A                                       l15478 FB22  
                                     l15582 1120                                       l15494 F0E4  
                                     l15566 FA1C                                       l15558 F9E8  
                                     l15910 26F6                                       l15734 1B26  
                                     l16390 4906                                       l16446 BF84  
                                     l16438 BEF2                                       l16702 6310  
                                     l13878 0740                                       l17088 4B8C  
                                     l15648 904C                                       l15912 2710  
                                     l15832 2232                                       l15824 2168  
                                     l15752 1C74                                       l15736 1B90  
                                     l16376 47CE                                       l16288 4026  
                                     l16616 0B36                                       l17408 D64C  
                                     l17248 9200                                       l16712 63F0  
                                     l13978 2002                                       l17338 153E  
                                     l15922 27B2                                       l15834 2254  
                                     l15666 17CC                                       l16466 20C8  
                                     l16730 6570                                       l17362 B7CE  
                                     l13996 2042                                       l15932 2802  
                                     l15860 23DA                                       l15772 1D16  
                                     l15764 1CB4                                       l15756 1C9C  
                                     l16396 4960                                       l16636 09B4  
                                     l16820 35A4                                       l16580 7804  
                                     l17604 07C8                                       l15790 1DD8  
                                     l15774 1D22                                       l15758 1CAE  
                                     l15678 1810                                       l15686 1866  
                                     l16638 09F6                                       l17286 9488  
                                     l16806 32D8                                       l16582 7858  
                                     l16726 6552                                       l17294 D29A  
                                     l17710 0DEC                                       l17630 099C  
                                     l17622 0958                                       l17462 0066  
                                     l15848 2352                                       l15696 190A  
                                     l16656 0D3C                                       l16648 0CD8  
                                     l16840 37BC                                       l16832 36C2  
                                     l16824 3604                                       l16816 3398  
                                     l16808 32DE                                       l16760 2CCE  
                                     l17368 B7D2                                       l17544 045E  
                                     l17536 03F2                                       l17464 007A  
                                     l17456 0040                                       l15794 1E10  
                                     l15698 1936                                       l17394 D524  
                                     l16738 663E                                       l16690 600A  
                                     l17722 1348                                       l17642 09D0  
                                     l17538 041C                                       l17458 0048  
                                     l15948 28BA                                       l15868 2444  
                                     l15876 24B0                                       l15884 25C2  
                                     l16908 F7BC                                       l16780 3092  
                                     l16748 2A22                                       l16692 602A  
                                     l17804 170C                                       l17628 096C  
                                     l16774 300A                                       l16766 2E0A  
                                     l16598 7BBC                                       l16686 5EF4  
                                     l16918 CA20                                       l17726 13AA  
                                     l15896 265A                                       l15992 BC46  
                                     l15984 BBDA                                       l15968 BB26  
                                     l16872 0E92                                       l16688 5F14  
                                     l17752 15B2                                       l17736 152C  
                                     l17672 0B82                                       l17648 09F6  
                                     l17592 06EE                                       l16874 0E9A  
                                     l16938 ECD2                                       l16970 FF28  
                                     l17738 1558                                       l17666 0B4A  
                                     l15988 BC16                                       l16876 0EA4  
                                     l16884 0EB8                                       l16964 FE76  
                                     l16796 323A                                       l16788 3166  
                                     l17692 0CCA                                       l15998 BCD0  
                                     l16878 0EB2                                       l16886 0EE4  
                                     l17790 1690                                       l17782 165A  
                                     l17766 160A                                       l17784 1672  
                                     l17776 1648                                       l17794 16B6  
                                     l17698 0CEC                             __end_of___aldiv E10C  
                           __end_of___aodiv C4F8                                _Volts_to_SOC 06B2  
                                     _ADCAP 003EF5                                       _ADACT 003EFE  
                           __end_of___almod E9EA                             __end_of___fladd 764A  
                                     _ADCLK 003EFF                             __end_of___aomod CE36  
                                     _ADPCH 003EF1                             __end_of___fldiv 8280  
                                     _ADREF 003EFD                             __end_of___awdiv F20E  
                           __end_of___flneg 1CF0                                       STR_10 FBB9  
                                     STR_11 FBB9                                       STR_12 FBB9  
                                     STR_20 FBB7                                       STR_13 FBB9  
                                     STR_21 FD95                                       STR_14 FF32  
                                     STR_30 FEB3                                       STR_22 FDAB  
                                     STR_15 FF5C                                       STR_23 FE5B  
                                     STR_31 FD7F                                       STR_32 FE2F  
                                     STR_24 FE19                                       STR_16 FD69  
                                     STR_40 FC58                                       STR_33 FF96  
                                     STR_41 FC41                                       STR_25 FBCE  
                                     STR_17 FB25                               __CFG_WDTE$OFF 000000  
                                     STR_42 FD10                                       STR_18 FBE5  
                                     STR_26 FAD5                                       STR_50 FA9B  
                                     STR_35 FF84                                       STR_43 FCE2  
                                     STR_19 FCCB                                       STR_51 FB3F  
                                     STR_27 FAF0                                       STR_28 FF76  
                                     STR_60 FF47                                       STR_44 FCF9  
                                     STR_36 FCB4                                       STR_52 FB6F  
                           __end_of___awmod FA36                                       STR_29 FF76  
                                     STR_61 FE45                                       STR_37 FC9D  
                                     STR_45 FBFC                                       STR_53 FB87  
                                     STR_54 FE87                                       STR_62 FD3D  
                                     STR_38 FC86                                       STR_46 FC13  
                                     STR_70 FAB9                                       STR_71 FAB9  
                                     STR_55 FE87                                       STR_63 FE9D  
                                     STR_39 FC6F                                       STR_47 FC2A  
                                     STR_72 FAB9                                       STR_64 FE03  
                                     STR_80 FFC2                                       STR_56 FE87  
                                     STR_48 FB57                                       _ADRPT 003EEC  
                                     STR_73 FF76                                       STR_81 FFA7  
                                     STR_57 FE03                                       STR_65 FD53  
                                     STR_49 FB9F                                       STR_82 FFA7  
                                     STR_74 FFFC                                       STR_66 FDED  
                                     STR_58 FDD7                                       STR_67 FE03  
                                     STR_83 FFA7                                       STR_75 FFB6  
                                     STR_59 FDC1                                       STR_68 FD53  
                                     STR_84 FFA7                                       STR_76 FFCC  
                           __end_of___lbmod 0D64                                       STR_77 FF71  
                                     STR_69 FE71                                       STR_85 FB0B  
                                     STR_94 FA75                                       STR_78 FF71  
                                     STR_86 FEC9                                       STR_79 FFC2  
                                     STR_87 FEDE                                       STR_95 F9F7  
                                     STR_96 FFDA                             __end_of___flmul 6E8E  
                                     STR_97 FFE2                             __end_of___flsub 1E9A  
                           __end_of___fltol E884                                       u10400 C5A4  
                                     u10420 C6FC                                       u11300 E9C0  
                                     u11220 E8B4                                       u10430 C6FE  
                                     u10510 D222                                       u10520 D250  
                                     u10600 E0B8                                       u11240 E8E2  
                                     u12105 16E2                                       u12106 16E4  
                                     u11250 E8FC                                       u10515 D21C  
                           __end_of___lodiv E5A0                                       u10620 E0E2  
                                     u10540 DFAC                                       u11260 E91E  
                                     u10517 D20E                                       u10470 D188  
                                     u12310 29FE                                       u10527 D242  
                                     u12080 1692                                       u10560 DFDA  
                                     u11280 E996                                       u10800 5980  
                                     u11370 D822                                       u10570 E008  
                                     _U1P1H 003DED                                       u10731 54CA  
                                     u10580 E02A                                       u10820 5A1A  
                                     u10724 1800                                       _U1P2H 003DEF  
                                     u12245 1F0E                                       u10477 D17A  
                                     u10725 17FA                                       u11614 87B2  
                                     _U1P1L 003DEC                                       _U1P3H 003DF1  
                                     u11615 87AC                                       _T3CLK 003FA9  
                                     u12440 1762                                       u11720 8AE2  
                                     u11560 056A                                       u12088 1694  
                                     u10840 5AEE                                       _T2CON 003FAC  
                                     _U1P2L 003DEE                                       u12610 DA98  
                                     u11714 8ADA                                       u11634 87E2  
                                     u12370 131C                                       u10850 5AF0  
                                     _U1P3L 003DF0                                       u11715 8AD4  
                                     u11635 87DC                                       u12515 29EC  
                                     u13411 13A2                                       u12516 29EE  
                                     u13340 DA68                                       u11565 0564  
                                     u12525 29DC                                       u11654 8804  
                                     u12294 E642                                       u10870 024C  
                                     u12526 29DE                                       _U2P1L 003DD4  
                                     u11655 87FE                                       u12295 E63C  
                                     u13351 1B1C                                       u13431 13CC  
                                     u14400 0516                                       u16000 4856  
                                     u10880 2A36                                       u12640 0E24  
                                     _T3CON 003FA6                                       _U2P2L 003DD6  
                                     u12465 1796                                       u12466 1798  
                                     u12458 1764                                       u11674 89EA  
                                     u14250 F5EC                                       _U2P3L 003DD8  
                                     u11675 89E4                                       u15220 27D8  
                                     u15060 2138                                       u12660 0E58  
                                     u13380 137A                                       u11694 8AB8  
                                     u14270 F668                                       u14350 B4FE  
                                     u16110 77DE                                       u11695 8AB2  
                                     u14407 0508                                       _T5CLK 003F9D  
                                     u14280 0C9E                                       u14600 8C84  
                                     u14520 F994                                       u15240 288E  
                                     u15160 2604                                       u15320 BC3C  
                                     u16120 77F0                             __end_of___lomod F490  
                                     u14450 F146                                       u15250 2890  
                                     u15330 BC82                                       u16050 BEC8  
                                     u15411 AEA8                                       u12780 27EE  
                                     u14700 9008                                       u14620 8CF4  
                                     u14540 FA08                                       u15420 AEBE  
                                     u15500 9F5C                                       u17020 D69C  
                                     _T2HLT 003FAD                                       u15421 AEBC  
                                     u14710 900C                                       u14470 F1E0  
                                     u15430 AED2                                       u15510 9F5E  
                                     u17030 D69E                                       u17110 0578  
                                     u14287 0C90                                       u14640 8D06  
                                     u14800 18B4                                       u15360 BD5E  
                                     u15440 AED6                                       u15600 A102  
                                     u16320 29BE                                       _T5CON 003F9A  
                                     u15337 BC74                                       u12786 27F0  
                                     u14730 9022                                       u14810 18B6  
                                     u15610 A106                                       u15530 9FBC  
                                     u16170 0B16                                       u16330 2A0E  
                                     u17130 07F6                                       u14660 8D56  
                                     u15380 ABFA                                       u15540 9FBE  
                                     u15460 9E20                                       u16420 32D8  
                                     u15700 B1BA                                       u16500 C9E0  
                                     u17300 15A2                                       u17140 0920  
                                     u14670 8FAE                                       u14590 8C82  
                                     u15630 C072                                       u16510 CA16  
                                     u17310 15BC                                       u17150 0922  
                                     u14920 1C82                                       u14840 19C6  
                                     u15560 A088                                       u15800 3D34  
                                     u17320 15CE                                       u17240 0B8E  
                                     _T6CON 003F94                                       u14681 8FDE  
                                     u14690 8FF4                                       u14850 19C8  
                                     u14770 17FA                                       u15570 A0A8  
                                     u15490 9F08                                       u15810 3D5A  
                                     u16290 6484                                       u17306 15A4  
                                     u14691 8FF2                                       u15740 3BB0  
                                     u16460 368C                                       u16620 F538  
                                     u17316 15BE                                       u15581 A0D8  
                                     u15565 A06A                                       u16445 33BA  
                                     u14950 1CE6                                       u15590 A0EE  
                                     u15910 4326                                       u15750 3BB2  
                                     u16470 373A                                       u17326 15D0  
                            __CFG_DEBUG$OFF 000000                                       u15591 A0EC  
                                     u16471 3736                                       u15920 4328  
                                     u15760 3BD8                                       u15680 B072  
                                     u16608 F4D4                                       u14890 1C2E  
                                     u16650 F59E                                       u15860 3F3A  
                                     u14990 1D68                                       u15790 3D32  
                                     u16638 F53A                                       u16590 F4D2  
                                     u15880 40AE                                       u15980 46A6  
                                     u16860 9346                                       u16668 F5A0  
                                     _T6HLT 003F95                                       u16870 9370  
                                     u16865 9338                  _ADCC_ADTI_InterruptHandler 00A1  
                                     u16875 9362                                       _T2TMR 003FAA  
                                     _U1UIR 003DF8                                       _T2RST 003FAF  
                                     _U1RXB 003DE8                                       _U2UIR 003DE0  
                                     _U2RXB 003DD0                                       _U2TXB 003DD2  
                                     _T6TMR 003F92                                       _T6RST 003F97  
                       ??_UART1_rx_vect_isr 0006                                       _ISRPR 0039F1  
                                     _OSCEN 0039DD                                       _TMR3H 003FA5  
                                     _TMR5H 003F99                                       _TMR3L 003FA4  
                                     _TMR5L 003F98                   __end_of_update_adc_result 2114  
                                     _TRISA 003FC2                                       _TRISB 003FC3  
                                     _TRISC 003FC4                                       _TRISD 003FC5  
                                     _TRISE 003FC6                                       _TRISF 003FC7  
                               _Default_ISR 2B00                         __size_of_CRC_IsBusy 0010  
                   __size_of_clear_adc_scan 0006                          _current_sensor_cal 90D2  
         __size_of_TMR3_SetInterruptHandler 0028                                ___secs_to_tm 2964  
         __size_of_TMR6_SetInterruptHandler 0028                             __end_of_asctime 8796  
                             __CFG_WRTB$OFF 000000                            __end_of_TMR3_ISR ECAE  
                             __CFG_WRTC$OFF 000000                            _cal_current_zero 0DFC  
                                     ___gmt F9E7                               __CFG_WRTD$OFF 000000  
                          __end_of_TMR5_ISR DDE2                             __end_of_getname B21C  
                              _DMA1CON0bits 003BFC                            __end_of_TMR6_ISR 2912  
                              _DMA1CON1bits 003BFD                  __size_of_send_lcd_data_dma 0046  
                           _DATAEE_ReadByte 22C0                                       _fabsf 08DA  
                           __end_of_getrule C278                                       _flags 004E  
                      __size_of_check_range 0080                   __size_of_CRC_ReverseValue 00CE  
                                     _r_cal 0440                    __size_of_calc_model_data 045A  
                              _DMA2CON0bits 003BDC                                _DMA2CON1bits 003BDD  
              __end_of_get_ac_charger_relay 2A5A                                       _fputc F5C8  
                __size_of_send_lcd_cmd_long 0040                             __end_of_isalpha 1EDE  
                                     _fputs 0D64                             __end_of_isdigit 23B2  
                           __end_of_ivln2_h F9EF                                       _put2d F6EC  
                        __CFG_MCLRE$EXTMCLR 000000                                       _srand 21F0  
                                     _width 004A                                       _putch 28DE  
              __end_of_set_ac_charger_relay 2A22                             __end_of_islower 2352  
                           __end_of_isspace 1BBA                    _INT1_SetInterruptHandler 25CE  
                           __end_of_set_dac 08DA                             __end_of_isupper 2382  
                                     pclath 003FFA                                       tablat 003FF5  
                                     ltemp0 002A                                       ltemp1 002E  
                                     ltemp2 0032                    __size_of_DMA1_Initialize 006A  
                                     plusw0 003FEB                                       plusw1 003FE3  
                                     plusw2 003FDB                                       ttemp0 002A  
                                     ttemp1 002D                                       ttemp2 0030  
                                     ttemp3 0033                                       ttemp5 002B  
                                     ttemp6 002E                                       ttemp7 0032  
                                     status 003FD8         __end_of_UART1_SetRxInterruptHandler 2556  
               _UART1_SetRxInterruptHandler 252E                                       wtemp0 002A  
                                     wtemp1 002C                                       wtemp2 002E  
                                     wtemp3 0030                                       wtemp4 0032  
                                     wtemp5 0034                                       wtemp8 002B  
                           __end_of_sprintf FC54                             __end_of_tolower 1266  
                           __end_of_strncmp D286                             __end_of_toupper 11E2  
                 __size_of_DMA1_DMADCNT_ISR 000A                   __end_of_UART1_rx_vect_isr 2698  
                  __size_of_SPI1_Initialize 0016                     __end_of_update_cal_data 1B68  
                           _TMR5_Initialize 1D38                       __end_of_ringBufS_init 24B6  
                           __initialization FC54                           _UART2_rx_vect_isr 26C0  
                             ___localtime_r C9B2                                __end_of_cp_h F9F7  
                              __end_of_cp_l F9F3                                __end_of_atoi C76C  
                              __end_of_ctoa 115E                                __end_of_main 1720  
                              __end_of_dtoa 90D2                                __end_of_nanf 1946  
                              __end_of_time 1A04                                __end_of_spin F9DF  
                              __end_of_stoa BD78                                __end_of_utoa AF20  
                              __end_of_xtoa A1C0                              __CFG_SAFEN$OFF 000000  
                        ?_UART2_rx_vect_isr 0001                     __end_of_TMR2_Initialize 2942  
                     __end_of_send_lcd_data 270C                    __size_of_DMA2_Initialize 005A  
                __end_of_check_enter_button 1548                           __end_of_CRC_Start 2AE6  
                  _TMR5_SetInterruptHandler 257E                               __activetblptr 000003  
                 __size_of_DMA1_DMASCNT_ISR 000E                       _TMR3_InterruptHandler 0098  
                         _port_data_dma_ptr 2A84                          esr_check@esr_state 00C6  
                       ??_UART2_rx_vect_isr 0006                                      INTCON0 003FD2  
      __size_of_UART2_SetRxInterruptHandler 0028                              __CFG_MVECEN$ON 000000  
                           _TMR6_Initialize 2464                             _PWM8_Initialize 296E  
                          _UART1_Initialize 1CF0                           _UART2_tx_vect_isr 2698  
                        _UART2_Transmit_ISR 2438                                      _ADACCU 003EEA  
                                    _ADACQH 003EF4                                      _ADACQL 003EF3  
                                    _ADCON0 003EF8                                      _ADCON1 003EF9  
                                    _ADCON2 003EFA                                      _ADCON3 003EFB  
                            _start_adc_scan 181E                                      _ADLTHH 003EDF  
                                    STR_100 FFDE                                      _ADLTHL 003EDE  
                                    STR_101 FFE6                                      STR_110 FFF3  
                                    STR_120 FFF6                                      STR_104 FFED  
                                    STR_113 FFF0                                      STR_106 FFED  
                                    STR_115 FFF0                                      STR_123 FFF9  
                                    STR_108 FFF3                                      STR_132 FD27  
                                    STR_125 FFF9                                      STR_133 FA76  
                                    STR_118 FFF6                                      STR_127 FFEA  
                                    STR_129 FFEA                                      _ADPREH 003EF7  
                                    _ADPREL 003EF6                                      _DMA1PR 0039F3  
                                    _DMA2PR 0039F4                                      _ADSTAT 003EFC  
                                    _ADUTHH 003EE1                                      _ADUTHL 003EE0  
                        _PWM8_LoadDutyValue 1EDE                                      _ANSELA 003A40  
                                    _ANSELB 003A50                                      _ANSELC 003A60  
                                    _ANSELD 003A70                                      _ANSELE 003A80  
                                    _ANSELF 003A90                          ?_UART2_tx_vect_isr 0001  
                                    _U1CON0 003DF2                                      _U1CON1 003DF3  
                                    _U1CON2 003DF4                                      _T3GATE 003FA8  
                                    _U1BRGH 003DF6                                      _U1FIFO 003DF7  
                                    _T3GCON 003FA7                                      _U2CON0 003DDA  
                                    _U2CON1 003DDB                                      _U1BRGL 003DF5  
                                    _U2CON2 003DDC                                      _U2BRGH 003DDE  
                                    _U2FIFO 003DDF                                      _U2BRGL 003DDD  
                                    _T5GATE 003F9C                                      _T5GCON 003F9B  
                                    _MAINPR 0039F2                                      _RC3PPS 003A13  
                                    _RD1PPS 003A19                                      i1l1021 DD32  
                                    _RB6PPS 003A0E                                      i1l1209 EC16  
                      _start_switch_handler 2826                                      _RC5PPS 003A15  
                                    _ODCONA 003A42                                      _ODCONB 003A52  
                                    _ODCONC 003A62                                      _RC6PPS 003A16  
                                    _ODCOND 003A72                                      _ODCONE 003A82  
                                    _ODCONF 003A92                     __end_of_TMR3_Initialize 1DC8  
                            __CFG_WDTCCS$SC 000000                                      _FVRCON 003EC1  
                          _mode_lamp_bright 2A3E                                      _SCANPR 0039F7  
                                    _IVTADH 00389E                                      _IVTADL 00389D  
                                    _IVTADU 00389F                __size_of_eaDogM_WriteCommand 000E  
                                    _OSCFRQ 0039DF                                      _NVMDAT 0039E3  
                      __size_of_hid_display 021C                            __end_of___xxtofl D8B8  
     __end_of_ADCC_DischargeSampleCapacitor 2AC2      __size_of_ADCC_DischargeSampleCapacitor 0008  
             _ADCC_DischargeSampleCapacitor 2ABA                    __end_of_send_lcd_cmd_dma 28A2  
                           _TMR3_WriteTimer 2020                         ??_UART2_tx_vect_isr 0006  
                 __end_of_UART2_rx_vect_isr 26E8                  __size_of_SPI1_Exchange8bit 001E  
                    __size_of_DMA1_DMAA_ISR 000A                     __size_of___secs_to_zone 08A2  
                            __CFG_XINST$OFF 000000                           _CLKREF_Initialize 2A7A  
                          _UART2_Initialize 1946                                      _WaitMs 21BA  
                           _conv_raw_result 8796                                _CCPTMRS1bits 003F5F  
      __size_of_ADCC_SetADIInterruptHandler 0028                            __end_of_do_tzset BFF8  
                                    ___flge E9EA                                      ___fleq FF38  
                                    ___lmul 037E                                      ___omul EE0E  
                         _ADCC_ThresholdISR 161C                              __CFG_STVREN$ON 000000  
                                    _crcObj 00E2                              _ringBufS_flush 0F20  
                                    _efgtoa 1720                                      _getoff CE36  
                                    _getint 00B6                                      _floorf A534  
                         dac_spi_control@S0 00CB                           dac_spi_control@S1 00CA  
                         dac_spi_control@S2 00C9                           dac_spi_control@SB 00C7  
                         dac_spi_control@SC 00C8                          ?_ADCC_ThresholdISR 0001  
                                    _memset B21C                                      _pclock 00DA  
                      __size_of_help_button 0038                                      clear_0 FCC6  
                                    clear_1 FCDA                                      clear_2 FCEC  
                                    clear_3 FCF8                                      clear_4 FD04  
                                    clear_5 FD10                                      clear_6 FD1C  
                                    clear_7 FD28                                      clear_8 FD34  
                                    _t_mbmc 00BC                   __end_of_port_data_dma_ptr 2A8E  
                    __size_of_read_cal_data 01CA                                      _printf 1882  
                        _eaDogM_WriteString 0ADE                     __end_of_DATAEE_ReadByte 22F2  
                                    _strcpy 0454                                   ?_ADCC_ISR 0001  
                                    _strlen 0C28                          __size_of_TimerDone 0028  
                              __pdataBIGRAM 06FF                             _ADCC_Initialize 15B2  
                            _PMD_Initialize 299A                  __size_of_update_adc_result 003A  
                 __end_of_UART2_tx_vect_isr 26C0                            __end_of_set_time 21BA  
                                    lltemp0 002A                                      lltemp1 0032  
                                    lltemp2 003A                                      lltemp3 0042  
                       ??_ADCC_ThresholdISR 0001                      __end_of_start_adc_scan 1882  
                              __mediumconst F7AA                                      preinc2 003FDC  
                    __size_of_init_port_dma 0030                                      tblptrh 003FF7  
                                    tblptrl 003FF6                                      tblptru 003FF8  
                          __end_of_wdtdelay 1AB8                            __end_of_spinners FF38  
                          __end_of_vfprintf 0A34                                  _StartTimer 1FA0  
                        __size_of___asfladd 0078                                 localtime@tm 03DF  
             __size_of_INTERRUPT_Initialize 0066                     __end_of_TMR5_Initialize 1D80  
                         _SYSTEM_Initialize 1C0C                                  ___daylight 00B8  
                                __accesstop 0060                     __end_of__initialization FD46  
                                 ?_INT0_ISR 0001                                   ?_INT1_ISR 0001  
                      __end_of_display_help 2AD2                        __end_of_display_info 2ACA  
                 __end_of_CLKREF_Initialize 2A84                               ___rparam_used 000001  
                __size_of_UART1_rx_vect_isr 0028                             _TMR5_WriteTimer 1FE0  
                     _set_temp_display_help 2A02                            _clear_hid_pflags 16EE  
                     __end_of_TMR3_CallBack 2778                   __end_of_ADCC_ThresholdISR 1686  
                     __end_of_set_hist_flag 2AE0                          __size_of_calc_bsoc 0A6E  
                    __end_of_ringBufS_flush 0FB2                              __pcstackCOMRAM 0001  
                                ___inthi_sp 132C                                  ___intlo_sp 1996  
                              __pidataBANK1 0B84                                __pidataBANK2 05F6  
                             __end_of___gmt F9EB                 __size_of_send_port_data_dma 0052  
                             __end_of_fabsf 0988                                   ?_TMR3_ISR 0001  
                                 ?_TMR5_ISR 0001                                   ?_TMR6_ISR 0001  
                          _DATAEE_WriteByte 1686                              ivt0x8_undefint 00AC  
                             __end_of_fputc F6EC                               __end_of_fputs 0DFC  
                      _get_ac_charger_relay 2A4C                               __end_of_put2d F806  
                             __end_of_srand 2224                       __end_of_TMR5_CallBack 2754  
                             __end_of_putch 28F8                        _set_ac_charger_relay 2A12  
                   __end_of_PWM8_Initialize 2984                     __end_of_TMR6_Initialize 248E  
                         _adc_int_t_handler 1266                      __end_of_PMD_Initialize 29AE  
                                __end_of_bp F9E7                                  ___timezone 0070  
                                ??_ADCC_ISR 0001                       __end_of_TMR6_CallBack 27C0  
               __size_of_EXT_INT_Initialize 0034                    calc_bsoc@log_update_wait 0050  
                    __size_of_calc_ror_data 0186                               _DMA1_DMAA_ISR 2A9C  
                     TMR3_ISR@CountCallBack 00BE                              _clear_adc_scan 2AE6  
                        __size_of_hid_input 0138                          __end_of_CRC_IsBusy 2A02  
                    __size_of_mode_lamp_dim 0018                            time@current_time 00D2  
                          _CRC_ReverseValue 0528                    _UART2_RxInterruptHandler 00AD  
                 __end_of_SYSTEM_Initialize 1C5A                             __CFG_PR1WAY$OFF 000000  
                           __CFG_IVT1WAY$ON 000000                     __end_of_TMR3_WriteTimer 2060  
                                __pbssBANK0 0060                                  __pbssBANK1 01A4  
                                __pbssBANK2 02BC                                  __pbssBANK3 0300  
                                __pbssBANK4 0400                                  __pbssBANK5 0500  
                                __pbssBANK6 0600                    __end_of_update_hist_data 13E4  
                                _check_help D4A2                               _read_cal_data D8B8  
                   __end_of_conv_raw_result 8C52                          __size_of_esr_check 02D8  
                     _INT0_InterruptHandler 00B3                                  ??_INT0_ISR 0001  
                                ??_INT1_ISR 0007                       __end_of_days_in_month 181E  
                         __end_of_TimerDone 24DE                            _DMA1_DMADCNT_ISR 2A90  
                           _convert_dac_raw F806                          __size_of_init_bsoc 0246  
                __size_of_UART2_rx_vect_isr 0028                                     IVTBASEH 003FD6  
                                   IVTBASEL 003FD5                                     IVTBASEU 003FD7  
                        __size_of_lp_filter 01BC                          __size_of_localtime 0016  
                             _init_port_dma 22F2                       __end_of_wait_lcd_done 2A3E  
                  __end_of_cal_current_zero 0E8E            __end_of_TMR3_SetInterruptHandler 25CE  
                           __CFG_PPS1WAY$ON 000000            __end_of_TMR6_SetInterruptHandler 257E  
                                ??_TMR3_ISR 00E5                     __end_of_ADCC_Initialize 161C  
                                ??_TMR5_ISR 000B                   __end_of_adc_int_t_handler 12E8  
                                ??_TMR6_ISR 0006                           __end_of___asfladd 14D6  
                                   _ADFLTRH 003EE7                                     _ADFLTRL 003EE6  
                                   _DMA1DSA 003BF0                                     _DMA2DSA 003BD0  
                                   _DMA1DSZ 003BEE                                     _DMA2DSZ 003BCE  
                                   _DMA1SSA 003BF9                                     _DMA2SSA 003BD9  
                        __size_of_set_dac_a 0034                          __size_of_set_dac_b 0034  
      __end_of_ADCC_SetADTIInterruptHandler 2646       __size_of_ADCC_SetADTIInterruptHandler 0028  
              _ADCC_SetADTIInterruptHandler 261E                                     _DMA1SSZ 003BF7  
                                   _DMA2SSZ 003BD7                  __size_of_port_data_dma_ptr 000A  
                                   _ADSTPTH 003EE5                                     _ADSTPTL 003EE4  
                                   _CRCACCH 003963                                     _CRCACCL 003962  
                   __size_of_load_hist_data 0466                                     _CRCDATH 003961  
                                   _CRCDATL 003960                           _UART1_Receive_ISR 2804  
                                   _CRCCON0 003968                                     _CRCCON1 003969  
                                   _CLKRCLK 003CE6                                     _CLKRCON 003CE5  
                    __end_of_clear_adc_scan 2AEC                                     _CRCXORH 003967  
                                   _CRCXORL 003966                                     u1215_20 A2F6  
                            ?_DMA1_DMAA_ISR 0001                            _DMA1_DMASCNT_ISR 2A6C  
                                   _U1ERRIE 003DFA                                     u1250_20 2154  
                                   u1321_48 27AC                                     u1313_48 2788  
                                   u1250_26 2156                          __size_of_set_vterm 001E  
                                   _U1ERRIR 003DF9                                     u1315_28 271C  
                                   u1324_28 2740                                     _U2ERRIE 003DE2  
                                   u1239_20 2A56                                     _U2ERRIR 003DE1  
                                   u1175_25 2A1C                                     u1175_26 2A1E  
                                   u1281_20 F246                                     u1281_21 F240  
                                   u1285_24 F32C                                     u1285_25 F328  
                                   u1279_28 F22C                                     u1377_44 12CE  
                                   u1377_45 12C8                           _CRC_8BitDataWrite 29AE  
                                   _INT0PPS 003AC0                         __CFG_PWRTS$PWRT_OFF 000000  
                                   _INT1PPS 003AC1                                ?_Default_ISR 0001  
                                   u1675_20 5056                                     u1682_28 2764  
                __size_of_UART2_tx_vect_isr 0028                                     u1677_20 5120  
                                   _U1RXPPS 003AE5                                     _U2RXPPS 003AE8  
                           _dac_spi_control 13E4                                     _OSCCON1 0039D9  
                                   _OSCCON3 0039DB                                     _IVTLOCK 003FD4  
                        __size_of_vfpfcnvrt 0FAC                                     _SPI1CLK 003D1C  
                                   _SPI1RXB 003D10                                     _NVMADRH 0039E1  
                                   _NVMADRL 0039E0                           __end_of_calc_bsoc 5450  
                                   _SPI1TXB 003D11                                     _OSCTUNE 0039DE  
                                   _NVMCON2 0039E6                                     _PWM8DCH 003F61  
                                   _PWM8DCL 003F60                                     _PWM8CON 003F62  
                                   _SLRCONA 003A43                                     _SLRCONB 003A53  
                                   _SLRCONC 003A63                                     _SLRCOND 003A73  
                                   _SLRCONE 003A83                                     _SLRCONF 003A93  
                        __size_of_zi_read32 00F6                                  _get_switch 23E0  
                        __size_of_start_lcd 0006                     __size_of___year_to_secs 0972  
                   __end_of_TMR5_WriteTimer 2020                     __size_of_switch_handler 0142  
                        __size_of_stop_bsoc 0006                  __end_of_set_load_relay_one 29F2  
                __end_of_set_load_relay_two 29E2           __size_of_INT0_SetInterruptHandler 0028  
                __size_of_CLKREF_Initialize 000A                               _calc_ror_data E29A  
                            ___secs_to_zone 5DC2                     __size_of_DMA1_DMAOR_ISR 000A  
                                   __Hparam 0000                  __size_of_ADCC_ThresholdISR 006A  
                             _mode_lamp_dim 2912                                     __Lparam 0000  
                  __end_of_UART1_Initialize 1D38                           __end_of_hid_input F5C8  
                           __size_of_WaitMs 0036                                     ___aldiv DF78  
                           __size_of___flge 0162                             __size_of___fleq 00C4  
                                   ___aodiv C278                                     ___almod E884  
                                   ___fladd 6E8E                                     ___aomod CBF6  
                                   ___fldiv 7D06                                     ___awdiv F0C0  
                                   ___flneg 1CA8                             __size_of___lmul 00D6  
                                   ___awmod F91E                             __size_of___omul 015A  
                                   ___lbmod 0CCA                                     ___flmul 6664  
                                   ___flsub 1E54                                     ___fltol E712  
                                   ___lodiv E420                                     ___lomod F350  
                 __end_of_UART1_Receive_ISR 2826                             __size_of_efgtoa 1244  
                           __size_of_getoff 0230                             __size_of_getint 00F2  
                           __size_of_floorf 036C                        __end_of_init_display 037E  
                                   __pcinit FC54                    __end_of_mode_lamp_bright 2A4C  
                           __size_of_memset 02EC                    __size_of_adc_int_handler 0002  
                       _eaDogM_WriteCommand 2A22                                     __ramtop 2000  
                 __end_of_CRC_8BitDataWrite 29C0                                     __ptext0 0000  
                                   __ptext1 1368                                     __ptext2 1B12  
                                   __ptext3 1A04                                     __ptext4 2826  
                                   __ptext5 21F0                                     __ptext6 2184  
                                   __ptext7 2ADA                                     __ptext8 2224  
                                   __ptext9 2258                           __end_of_esr_check BABA  
                         _UART2_Receive_ISR 2846                                     _asctime 8280  
                           __size_of_printf 0062                                     _getname AF20  
                           __CFG_WRTAPP$OFF 000000                             __size_of_strcpy 00D4  
                           __size_of_strlen 00A2                                     _getrule BFF8  
                                   _dst_off 00B6                       _OSCILLATOR_Initialize 2984  
                              __size_of_abs 0046                                     us811999 EF52  
                              __size_of_pad 0114                           __end_of_init_bsoc C9B2  
                                   _isalpha 1E9A                                     us823999 C4E2  
                                   _isdigit 2382                                     _ivln2_h F9EB  
                                   us834999 CE24                                     us924999 F480  
                                 _T3CONbits 003FA6                                     us919999 E58A  
                                   _mode_sw 00CC                           __end_of_lp_filter DC3E  
                         __end_of_localtime 2958                                     _islower 2322  
                                   _isspace 1B68                             __CFG_WRTSAF$OFF 000000  
                                _scan_trans 209E                                   _T5CONbits 003F9A  
                                   _set_dac 0824                    __end_of_UART2_Initialize 19A6  
                                   _isupper 2352                                   _CRC_Start 2AE0  
                                _old_tz_buf 03A4                  __size_of_SYSTEM_Initialize 004E  
                                   _sprintf FB4A                                     _tolower 11E2  
                     __size_of_display_help 0008                                     _utctime 01D7  
                   __end_of_convert_dac_raw F91E                       __size_of_display_info 0008  
                                   _strncmp D066                                     _toupper 115E  
                      end_of_initialization FD46                   __size_of_convert_adc_data 00B8  
                                 _SCANHADRH 00397A                                   _SCANHADRL 003979  
                                 _SCANHADRU 00397B                                   _SCANLADRH 003977  
                                 _SCANLADRL 003976                          _check_enter_button 14D6  
                                 _SCANLADRU 003978                           __end_of_set_dac_a 228C  
                         __end_of_set_dac_b 2258                      __end_of___secs_to_zone 6664  
                                 i1u1704_20 EC0C         __end_of_UART2_SetRxInterruptHandler 252E  
               _UART2_SetRxInterruptHandler 2506                     check_day_time@day_delay 0051  
                                 i2u1380_48 2424                           __end_of_set_vterm 28C0  
                                 i2u1382_48 1652                                   i2u1382_49 1666  
                                 i2u1384_48 2684                                   i2u1386_48 26AC  
                                 i2u1388_48 26D4                           __end_of_vfpfcnvrt 49E2  
                                 _SPI1TCNTL 003D12                                     postdec0 003FED  
                                   postdec1 003FE5                                     postdec2 003FDD  
                                   postinc0 003FEE                                     postinc1 003FE6  
                                   postinc2 003FDE                           __end_of_zi_read32 FE42  
                __size_of_adc_int_t_handler 0082                         __size_of_StartTimer 0040  
                         __end_of_start_lcd 2AF8                   __end_of_UART2_Receive_ISR 2866  
                            wdtdelay@dcount 0090                     __end_of_dac_spi_control 145E  
               __size_of_current_sensor_cal 0474                       __CFG_WDTCPS$WDTCPS_31 000000  
                           ??_DMA1_DMAA_ISR 0007                       _INT1_InterruptHandler 00B0  
                                 _PORTBbits 003FCB                           __end_of_stop_bsoc 2AFE  
                                 _PORTDbits 003FCD                    _TMR3_SetInterruptHandler 25A6  
                                 _PORTFbits 003FCF                    _TMR6_SetInterruptHandler 2556  
                              _display_help 2ACA                       _TMR5_InterruptHandler 009B  
                              _display_info 2AC2        __size_of_UART2_SetTxInterruptHandler 0028  
                  __end_of_clear_hid_pflags 1754                           __size_of_ADCC_ISR 002C  
       __end_of_ADCC_SetADIInterruptHandler 266E                 _ADCC_SetADIInterruptHandler 2646  
                                asctime@buf 03C4                                  _update_lcd ECAE  
                           _calc_model_data 99AC                      __size_of_ringBufS_init 0028  
                          __CFG_FEXTOSC$ECH 000000                                  _static_soc 1A04  
                  __end_of_DATAEE_WriteByte 16EE                             _DMA1_Initialize 1548  
                       __end_of_check_range 1368                                  _start_bsoc 27E2  
                  __size_of___month_to_secs 00EC                      __size_of_send_lcd_data 0024  
                           _SPI1_Initialize 2958                       __end_of_get_vterm_ptr 23E0  
                         __size_of_INT0_ISR 000E                           __size_of_INT1_ISR 003E  
                  __size_of_display_history 02DA                    __end_of_CRC_ReverseValue 05F6  
                            __end_of_WaitMs 21F0                __end_of_INTERRUPT_Initialize 17BA  
                                _vterm_dump E10C                              __end_of___flge EB4C  
                            __end_of___fleq FFFC        __end_of_INT0_DefaultInterruptHandler DC40  
     __size_of_INT0_DefaultInterruptHandler 0002                _INT0_DefaultInterruptHandler DC3E  
                __size_of_UART1_Receive_ISR 0022                             _DMA2_Initialize 1AB8  
                            __end_of___lmul 0454                              __end_of___omul EF68  
                             __pidataBIGRAM A8A0                              _load_hist_data 9546  
                            __end_of_efgtoa 2964                  __size_of_CRC_8BitDataWrite 0012  
                         __size_of_TMR3_ISR 0162                              __end_of_getoff D066  
                         __size_of_TMR5_ISR 01A2                              __end_of_getint 01A8  
                         __size_of_TMR6_ISR 001A                         __size_of_check_help 0212  
                            __end_of_floorf A8A0                 __size_of_UART2_Transmit_ISR 002C  
                                floorf@F524 0074                              __end_of_memset B508  
__end_of___month_to_secs@secs_through_month F8AB          ___month_to_secs@secs_through_month F87B  
                            __end_of_printf 18E4                    __end_of_DMA1_DMADCNT_ISR 2A9A  
               __size_of_PWM8_LoadDutyValue 0042                       __end_of_INT0_CallBack 279C  
                            __end_of_strcpy 0528                              __end_of_strlen 0CCA  
                       start_initialization FC54                     __size_of_write_cal_data 0158  
      __end_of_TMR5_DefaultInterruptHandler 2184       __size_of_TMR5_DefaultInterruptHandler 0038  
              _TMR5_DefaultInterruptHandler 214C             __size_of_PIN_MANAGER_Initialize 0092  
                               __end_of_abs 1E54                       __end_of_INT1_CallBack 2730  
                 __size_of_set_display_info 001E                                 __end_of_pad FB4A  
                      __size_of_Default_ISR 0006                     __size_of_CRC_Initialize 0092  
                            ___year_to_secs 5450                        __end_of_send_lcd_cmd 1FA0  
                            _switch_handler F20E               __size_of_ADCC_StartConversion 0012  
                                ivt0x8_base 0008                               _uart1RxBuffer 02D6  
                     __end_of___fpclassifyf DF78                               _uart2RxBuffer 0600  
                  __end_of_DMA1_DMASCNT_ISR 2A7A                               _uart2TxBuffer 0400  
                            _DMA1_DMAOR_ISR 2AA8                         __end_of_hid_display D4A2  
                __end_of_send_port_data_dma 1C0C                            __CFG_LPBOREN$OFF 000000  
                     __size_of_init_display 00EA                 __size_of_eaDogM_WriteString 00A6  
           __end_of_CRC_CalculatedResultGet E712                                   _TimerDone 24B6  
                             _ringBufS_init 248E                      __end_of_load_hist_data 99AC  
                               __pdataBANK1 0100                                 __pdataBANK2 0200  
                __size_of_UART2_Receive_ISR 0020                         __size_of_get_switch 002C  
                __end_of_EXT_INT_Initialize 22C0                    __size_of_update_cal_data 0056  
                   __end_of_calc_model_data 9E06                               _send_lcd_data 26E8  
                       __end_of_help_button 214C             __end_of_eaDogM_WriteStringAtPos 0F20  
                       __end_of_BVSOC_TABLE F87B                                   ___asfladd 145E  
                      calc_model_data@bcror 0088                                 __pbssBIGRAM 0A3F  
                   __end_of_DMA1_Initialize 15B2                        calc_model_data@bvror 008C  
                               __pbssCOMRAM 004A                                 _check_range 12E8  
          __end_of_INT0_SetInterruptHandler 261E                      __end_of___year_to_secs 5DC2  
                             __pcstackBANK0 00E5                    __size_of_TMR2_Initialize 0018  
                    __size_of_TMR3_CallBack 0024                      __end_of_switch_handler F350  
                               _CRCCON0bits 003968                                 _CRCCON1bits 003969  
                    __size_of_set_hist_flag 0006                           __size_of___xxtofl 0204  
                   __end_of_SPI1_Initialize 296E                    _UART1_RxInterruptHandler 00A7  
                  _UART2_TxInterruptHandler 00AA                                   __end_of_T F967  
                          _convert_adc_data 076C                                   _calc_bsoc 49E2  
                 __size_of_ringBufS_put_dma 00AA                                _init_display 0294  
                    __end_of_DMA1_DMAOR_ISR 2AB2                      __size_of_TMR5_CallBack 0024  
                         __size_of_do_tzset 0280                       _TMR6_InterruptHandler 009E  
                        calc_ror_data@bcror 0080                      __size_of_TMR6_CallBack 0024  
                   __end_of_DMA2_Initialize 1B12                          calc_ror_data@bvror 0084  
                    _PIN_MANAGER_Initialize 0FB2                       __end_of___localtime_r CBF6  
                  __size_of_TMR3_Initialize 0048                        __end_of_wait_lcd_set 2AF2  
                       __size_of_scan_trans 003C                               __pmediumconst F7AA  
                                 __ptext100 E420                                   __ptext101 D066  
                                 __ptext110 1CA8                                   __ptext102 BABA  
                                 __ptext111 FF38                                   __ptext103 1720  
                                 __ptext200 49E2                                   __ptext120 0C28  
                                 __ptext112 F91E                                   __ptext104 11E2  
                                 __ptext201 1BBA                                   __ptext121 0D64  
                                 __ptext113 F0C0                                   __ptext105 2352  
                                 __ptext210 2B06                                   __ptext202 2A84  
                                 __ptext130 28C0                                   __ptext122 F5C8  
                                 __ptext114 8C52                                   __ptext106 0454  
                                 __ptext211 2B08                                   __ptext203 145E  
                                 __ptext131 2912                                   __ptext123 28DE  
                                 __ptext115 1E0E                                   __ptext107 A534  
                                 __ptext220 279C                                   __ptext212 161C  
                                 __ptext204 2A5C                                   __ptext140 E29A  
                                 __ptext132 2A3E                                   __ptext124 0A34  
                                 __ptext116 CBF6                                   __ptext108 DDE2  
                                 __ptext221 1C5A                                   __ptext213 2670  
                                 __ptext205 2778                                   __ptext141 08DA  
                                 __ptext133 1EDE                                   __ptext125 C4F8  
                                 __ptext117 C278                                   __ptext109 E712  
                                 __ptext222 2A6C                                   __ptext214 2804  
                                 __ptext206 DC3E                                   __ptext150 27E2  
                                 __ptext142 8796                                   __ptext134 2114  
                                 __ptext126 1B68                                   __ptext118 10D6  
                                 __ptext223 2A90                                   __ptext215 2698  
                                 __ptext207 2B00                                   __ptext151 DA82  
                                 __ptext143 18E4                                   __ptext135 24B6  
                                 __ptext127 2382                                   __ptext119 FA36  
                                 __ptext224 2A9C                                   __ptext216 2438  
                                 __ptext208 240C                                   __ptext160 252E  
                                 __ptext152 1E54                                   __ptext144 27C0  
                                 __ptext136 1FA0                                   __ptext128 28A2  
                                 __ptext225 2AA8                                   __ptext217 26C0  
                                 __ptext209 1266                                   __ptext161 2464  
                                 __ptext153 6E8E                                   __ptext145 D6B4  
                                 __ptext137 2AC2                                   __ptext129 2A02  
                                 __ptext226 0000                                   __ptext218 2846  
                                 __ptext170 299A                                   __ptext162 2556  
                                 __ptext154 6664                                   __ptext146 7D06  
                                 __ptext138 2ACA                                   __ptext219 28F8  
                                 __ptext171 0FB2                                   __ptext163 1D38  
                                 __ptext155 1C0C                                   __ptext147 E9EA  
                                 __ptext139 14D6                                   __ptext180 1044  
                                 __ptext172 2984                                   __ptext164 257E  
                                 __ptext156 1946                                   __ptext148 99AC  
                                 __ptext181 2A7A                                   __ptext173 1754  
                                 __ptext165 1D80                                   __ptext157 24DE  
                                 __ptext149 2AF8                                   __ptext190 1FE0  
                                 __ptext182 15B2                                   __ptext174 2AD2  
                                 __ptext166 25A6                                   __ptext158 2506  
                                 __ptext191 2730                                   __ptext183 261E  
                                 __ptext175 228C                                   __ptext167 292A  
                                 __ptext159 1CF0                                   __ptext192 214C  
                                 __ptext184 2646                                   __ptext176 25CE  
                                 __ptext168 2958                                   __ptext193 A1C0  
                                 __ptext185 2060                                   __ptext177 25F6  
                                 __ptext169 296E                                   __ptext194 2A12  
                                 __ptext186 270C                                   __ptext178 1AB8  
                                 __ptext195 2A4C                                   __ptext187 FFFC  
                                 __ptext179 1548                                   __ptext196 EB4C  
                                 __ptext188 F20E                                   __ptext197 2020  
                                 __ptext189 DC40                                   __ptext198 2754  
                                 __ptext199 FFFE                           __size_of_set_time 0036  
                                 _hid_input F490                          __end_of_StartTimer 1FE0  
                        _set_load_relay_one 29E2                          _set_load_relay_two 29D2  
                         __size_of_wdtdelay 005A                           __size_of_spinners 00F6  
                         __size_of_vfprintf 00AC                                    _ADCC_ISR 240C  
                    __CFG_BBSIZE$BBSIZE_512 000000                                   fabsf@F463 0078  
                    __size_of_days_in_month 0064                                    _DMA1CON0 003BFC  
                                  _DMA1CON1 003BFD                                    _DMA1AIRQ 003BFE  
                                  _DMA2CON0 003BDC                                    _DMA2CON1 003BDD  
                                  _DMA2AIRQ 003BDE                                    _DMA1SIRQ 003BFF  
                                  _DMA2SIRQ 003BDF                                   _esr_check B7E2  
                   __size_of_get_raw_result 0022                              __size_of_fabsf 00AE  
                                 _init_bsoc C76C                      __size_of_wait_lcd_done 000E  
                            __size_of_fputc 0124                                    _T2CLKCON 003FAE  
                            __size_of_fputs 0098                    __size_of_DATAEE_ReadByte 0032  
                            __size_of_put2d 011A                                   _lp_filter DA82  
                                 _localtime 2942                                 _hid_display D286  
                            __size_of_srand 0034                              __size_of_putch 001A  
                      _INTERRUPT_Initialize 1754                                    _T6CLKCON 003F96  
             __size_of_start_switch_handler 0020                             ?_DMA1_DMAOR_ISR 0001  
                                  _INT0_ISR 2A5C                                    _INT1_ISR 2060  
                                  _LATCbits 003FBC                                    _LATDbits 003FBD  
                                  _LATEbits 003FBE                                    _LATFbits 003FBF  
         __size_of_INT1_SetInterruptHandler 0028                                    _SCANCON0 00397C  
                                  _IPR1bits 003981                                    _IPR2bits 003982  
                                  _PIE1bits 003991                                    _IPR3bits 003983  
                                  _SCANTRIG 00397D                                    _PIE2bits 003992  
                                  _IPR5bits 003985                                    _PIE3bits 003993  
                                 _tickCount 02BC                                    _IPR6bits 003986  
                                  _PIE5bits 003995                                    _IPR8bits 003988  
                                  _PIE6bits 003996                                    _IPR9bits 003989  
                                  _PIE8bits 003998                         __CFG_BORV$VBOR_2P45 000000  
                                  _PIE9bits 003999                                _SPI1CON0bits 003D14  
                              _SPI1CON1bits 003D15                                   _set_dac_a 2258  
                                 _set_dac_b 2224                                   _ring_buf1 0543  
                                 _ring_buf2 0500                                    _PIR0bits 0039A0  
                                  _PIR1bits 0039A1                                    _PIR2bits 0039A2  
                                  _SPI1BAUD 003D19                                    _PIR4bits 0039A4  
                                  _SPI1CON0 003D14                                    _SPI1CON1 003D15  
                                  _SPI1CON2 003D16                               _TMR3_CallBack 2754  
                                  _PIR5bits 0039A5                                    _PIR6bits 0039A6  
                                  _PIR8bits 0039A8                                    _PIR9bits 0039A9  
                  __size_of_TMR5_Initialize 0048                               _set_hist_flag 2ADA  
                                 _set_vterm 28A2                         __size_of_update_lcd 0160  
                               _help_button 2114                                    _TMR3_ISR EB4C  
                               _BVSOC_TABLE F7AB                                    _TMR5_ISR DC40  
                                  _TMR6_ISR 28F8          __end_of___secs_to_tm@days_in_month F8B7  
                ___secs_to_tm@days_in_month F8AB                                   _port_data 06FF  
                       __size_of_static_soc 005A                                   _vfpfcnvrt 3A36  
                              _SPI1INTFbits 003D1A                         __size_of_start_bsoc 0022  
                             _TMR5_CallBack 2730                                  _ADCON0bits 003EF8  
                                 _zi_read32 FD4C                          __end_of_check_help D6B4  
                                 _start_lcd 2AF2                     __size_of_FVR_Initialize 0008  
                 __size_of_send_lcd_cmd_dma 001E                               _TMR6_CallBack 279C  
                            _write_cal_data EF68                       __size_of_send_lcd_cmd 0040  
         __size_of_TMR5_SetInterruptHandler 0028                                   _stop_bsoc 2AF8  
                          _set_display_info 28C0                    __size_of_PWM8_Initialize 0016  
                  __size_of_TMR6_Initialize 002A                              _CRC_Initialize 1044  
                               _INTCON0bits 003FD2                                   copy_data0 FC68  
                                 copy_data1 FC8E                                   copy_data2 FCB0  
          __size_of_CRC_CalculatedResultGet 0172                    _INT0_SetInterruptHandler 25F6  
                       __size_of_vterm_dump 018E         __end_of_UART2_SetTxInterruptHandler 2506  
               _UART2_SetTxInterruptHandler 24DE                               _days_in_month 17BA  
                              _uart1RxCount 00D0                                _uart2RxCount 00CD  
                                  __Hrparam 0000            __size_of_eaDogM_WriteStringAtPos 0092  
                   __CFG_RSTOSC$EXTOSC_4PLL 000000                    __size_of_TMR3_WriteTimer 0040  
                                  __Lrparam 0000                     __size_of_check_adc_scan 0008  
                        __CFG_BOREN$SBORDIS 000000                  __end_of_current_sensor_cal 9546  
                  __size_of_conv_raw_result 04BC                               _wait_lcd_done 2A30  
                              _send_lcd_cmd 1F60                            __size_of___aldiv 0194  
                          __size_of___aodiv 0280                            __size_of___almod 0166  
                          __size_of___fladd 07BC               __size_of_get_ac_charger_relay 000E  
                          __size_of___aomod 0240                             _adc_int_handler 2B08  
                          __size_of___fldiv 057A                            __size_of___awdiv 014E  
                          __size_of___flneg 0048                            __size_of___awmod 0118  
                          __size_of___lbmod 009A                            __size_of___flmul 082A  
                          __size_of___flsub 0046                            __size_of___fltol 0172  
                          __size_of___lodiv 0180                            __size_of___lomod 0140  
             __size_of_set_ac_charger_relay 0010                          __end_of_get_switch 240C  
                      __end_of_rule_to_secs 7D06                     __size_of_check_day_time 0374  
                    __end_of_write_cal_data F0C0                       __end_of_DMA1_DMAA_ISR 2AA6  
                        ___fpclassifyf@F463 007C        __size_of_UART1_SetRxInterruptHandler 0028  
                          __size_of_asctime 0516                                    ___tzname 006C  
                          __size_of_getname 02FC                             lp_filter@smooth 0300  
                                  ___xxtofl D6B4                      __end_of_CRC_Initialize 10D6  
                         ?_DMA1_DMADCNT_ISR 0001                            __size_of_getrule 0280  
               __size_of_check_enter_button 0072                    __size_of_ADCC_Initialize 006A  
               __end_of_eaDogM_WriteCommand 2A30                            __size_of_isalpha 0044  
                          __size_of_isdigit 0030                                    __pivt0x8 0008  
                          __size_of_islower 0030                            __size_of_isspace 0052  
                        ??_DMA1_DMADCNT_ISR 0007                            __size_of_set_dac 00B6  
                                  __ptext10 F806                                    __ptext11 0824  
                                  __ptext20 1F60                                    __ptext12 13E4  
                                  __ptext21 1A5E                                    __ptext13 D8B8  
                                  __ptext30 2AB2                                    __ptext22 2866  
                                  __ptext14 22C0                                    __ptext31 29D2  
                                  __ptext23 248E                                    __ptext15 9546  
                                  __ptext40 FD4C                                    __ptext32 29E2  
                                  __ptext24 C76C                                    __ptext16 22F2  
                                  __ptext41 764A                                    __ptext33 2A22  
                                  __ptext25 06B2                                    __ptext17 0294  
                                  __ptext50 2964                                    __ptext42 17BA  
                                  __ptext34 B508                                    __ptext26 D286  
                                  __ptext18 26E8                                    __ptext51 EE0E  
                                  __ptext43 5450                                    __ptext35 19A6  
                                  __ptext27 F490                                    __ptext19 1F20  
                                  __ptext60 1686                                    __ptext52 037E  
                                  __ptext44 01A8                                    __ptext36 2942  
                                  __ptext28 B7E2                                    __ptext61 2AE0  
                                  __ptext53 E884                                    __ptext45 BD78  
                                  __ptext37 C9B2                                    __ptext29 20DA  
                                  __ptext70 23E0                                    __ptext62 29F2  
                                  __ptext54 DF78                                    __ptext46 BFF8  
                                  __ptext38 5DC2                                    __ptext71 2AE6  
                                  __ptext63 E5A0                                    __ptext55 8280  
                                  __ptext47 CE36                                    __ptext39 209E  
                                  __ptext80 21BA                                    __ptext72 0DFC  
                                  __ptext64 0528                                    __ptext56 F6EC  
                                  __ptext48 00B6                                    __ptext81 ECAE  
                                  __ptext73 12E8                                    __ptext65 29AE  
                                  __ptext57 0CCA                                    __ptext49 AF20  
                                  __ptext90 B21C                                    __ptext82 0E8E  
                                  __ptext74 076C                                    __ptext66 181E  
                                  __ptext58 90D2                                    __ptext91 1882  
                                  __ptext83 2884                                    __ptext75 16EE  
                                  __ptext67 29C0                                    __ptext59 EF68  
                                  __ptext92 0988                                    __ptext84 2A30  
                                  __ptext76 D4A2                                    __ptext68 2ABA  
                                  __ptext93 3A36                                    __ptext85 1DC8  
                                  __ptext77 E10C                                    __ptext69 FE42  
                                  __ptext94 9E06                                    __ptext86 0ADE  
                                  __ptext78 FB4A                                    __ptext95 115E  
                                  __ptext87 2AEC                                    __ptext79 23B2  
                                  __ptext96 2322                                    __ptext88 2AF2  
                                  __ptext97 1E9A                                    __ptext89 0F20  
                                  __ptext98 ABE0                                    __ptext99 F350  
                          __size_of_isupper 0030                                    _do_tzset BD78  
                     __end_of_read_cal_data DA82                                    us1160999 19F6  
                          __size_of_sprintf 010A                            __size_of_tolower 0084  
                                  us1527999 BACC                            __size_of_strncmp 0220  
                          __size_of_toupper 0084                                    us1616999 7CF0  
                                  us1458999 8C6C                                    us1539999 AC46  
                                  us1548999 9E86                            _ringBufS_put_dma 0A34  
                                  _dst_name 01EF                        __end_of_Volts_to_SOC 076C  
                             __size_of_atoi 0274                               __size_of_ctoa 0088  
                             __size_of_main 1720                               __size_of_dtoa 0480  
                             __size_of_nanf 0062                       __size_of_wait_lcd_set 0006  
                             __size_of_time 005E                               __size_of_stoa 02BE  
                             __size_of_utoa 0340                               __size_of_xtoa 03BA  
                       dac_spi_control@init 0052                                  _CRC_IsBusy 29F2  
                      __CFG_WDTCWS$WDTCWS_7 000000                           ?_DMA1_DMASCNT_ISR 0001  
                     __end_of_init_port_dma 2322                                 _IVTLOCKbits 003FD4  
                      __end_of___secs_to_tm 3A36                    __size_of_TMR5_WriteTimer 0040  
                                  _set_time 2184                   _ADCC_ADI_InterruptHandler 00A4  
                                 stoa@F1166 0200                          ??_DMA1_DMASCNT_ISR 0007  
              __end_of_ADCC_StartConversion 29D2                          __end_of_scan_trans 20DA  
                                  _spi_link 0060                                    _std_name 01F6  
                                  _wdtdelay 1A5E                  __end_of_UART2_Transmit_ISR 2464  
                                  _spinners FE42                                    _vfprintf 0988  
                  __end_of_convert_adc_data 0824                   __size_of_update_hist_data 007C  
                __end_of_PWM8_LoadDutyValue 1F20        __end_of_TMR3_DefaultInterruptHandler 0000  
     __size_of_TMR3_DefaultInterruptHandler 0002                _TMR3_DefaultInterruptHandler FFFE  
      __end_of_INT1_DefaultInterruptHandler FFFE       __size_of_INT1_DefaultInterruptHandler 0002  
              _INT1_DefaultInterruptHandler FFFC                          _send_port_data_dma 1BBA  
                             ??_Default_ISR 0001                                 _uart1RxHead 0057  
                    __size_of_get_vterm_ptr 002E                                 _uart2RxHead 0054  
                               _uart1RxTail 00D1                              _get_raw_result 27C0  
                               _NVMCON1bits 0039E5                                 _uart2TxHead 00CF  
                               _uart2RxTail 00CE                                   spinners@s 01CD  
                               _uart2TxTail 0056                   __size_of_cal_current_zero 0092  
                              _wait_lcd_set 2AEC                          _EXT_INT_Initialize 228C  
      __end_of_TMR6_DefaultInterruptHandler 1CA8       __size_of_TMR6_DefaultInterruptHandler 004E  
              _TMR6_DefaultInterruptHandler 1C5A                           _send_lcd_data_dma 1DC8  
      __end_of_ADCC_DefaultInterruptHandler 2B08       __size_of_ADCC_DefaultInterruptHandler 0002  
              _ADCC_DefaultInterruptHandler 2B06                                    intlevel1 0000  
                                  intlevel2 0000                             ___month_to_secs 01A8  
                         _send_lcd_cmd_long 1F20              __size_of_set_temp_display_help 0010  
             __end_of_set_temp_display_help 2A12                       __end_of_calc_ror_data E420  
                         __CFG_CLKOUTEN$OFF 000000                  __end_of_eaDogM_WriteString 0B84  
                     __end_of_mode_lamp_dim 292A                     __end_of_adc_int_handler 2B0A  
                  __size_of_convert_dac_raw 0118                             _display_history B508  
                    __size_of_INT0_CallBack 0024                                  _SPI1SCKPPS 003ADE  
                                _SPI1SDIPPS 003ADF                      __size_of_INT1_CallBack 0024  
                        __end_of_update_lcd EE0E                      _uart2TxBufferRemaining 0055  
                        __end_of_static_soc 1A5E                          __end_of_start_bsoc 2804  
                            _FVR_Initialize 2AD2                      __end_of_get_raw_result 27E2  
                          _send_lcd_cmd_dma 2884                      __size_of___fpclassifyf 0196  
                     TMR5_ISR@CountCallBack 00C2            __end_of_INT1_SetInterruptHandler 25F6  
                 __size_of_UART1_Initialize 0048                    __size_of_dac_spi_control 007A  
                 __end_of_send_lcd_data_dma 1E0E                            ??_DMA1_DMAOR_ISR 0007  
                   _CRC_CalculatedResultGet E5A0                   __end_of_send_lcd_cmd_long 1F60  
                   __size_of_start_adc_scan 0064                         __end_of_Default_ISR 2B06  
            __end_of_PIN_MANAGER_Initialize 1044                   __size_of_mode_lamp_bright 000E  
                        __end_of_vterm_dump E29A                     _eaDogM_WriteStringAtPos 0E8E  
                             _get_vterm_ptr 23B2                              _check_adc_scan 2AB2  
                 __size_of_UART2_Initialize 0060                       __size_of_rule_to_secs 06BC  
