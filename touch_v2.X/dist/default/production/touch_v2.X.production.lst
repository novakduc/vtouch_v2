

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Dec 13 16:31:35 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1,inline
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1,inline
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=2
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=2,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1
   155                           	psect	text130,global,reloc=2,class=CODE,delta=1
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1
   159                           	psect	text134,global,reloc=2,class=CODE,delta=1
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1
   161                           	psect	text136,global,reloc=4,class=CODE,delta=1
   162                           	psect	text137,global,reloc=2,class=CODE,delta=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1
   164                           	psect	text139,global,reloc=2,class=CODE,delta=1
   165                           	psect	text140,global,reloc=4,class=CODE,delta=1
   166                           	psect	text141,global,reloc=2,class=CODE,delta=1
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1
   168                           	psect	text143,global,reloc=2,class=CODE,delta=1
   169                           	psect	text144,global,reloc=4,class=CODE,delta=1
   170                           	psect	text145,global,reloc=2,class=CODE,delta=1
   171                           	psect	text146,global,reloc=2,class=CODE,delta=1
   172                           	psect	text147,global,reloc=2,class=CODE,delta=1
   173                           	psect	text148,global,reloc=2,class=CODE,delta=1
   174                           	psect	text149,global,reloc=2,class=CODE,delta=1
   175                           	psect	text150,global,reloc=2,class=CODE,delta=1
   176                           	psect	text151,global,reloc=4,class=CODE,delta=1
   177                           	psect	text152,global,reloc=2,class=CODE,delta=1
   178                           	psect	text153,global,reloc=2,class=CODE,delta=1
   179                           	psect	text154,global,reloc=4,class=CODE,delta=1
   180                           	psect	text155,global,reloc=4,class=CODE,delta=1
   181                           	psect	text156,global,reloc=2,class=CODE,delta=1
   182                           	psect	text157,global,reloc=2,class=CODE,delta=1
   183                           	psect	text158,global,reloc=2,class=CODE,delta=1
   184                           	psect	text159,global,reloc=4,class=CODE,delta=1
   185                           	psect	text160,global,reloc=4,class=CODE,delta=1
   186                           	psect	text161,global,reloc=2,class=CODE,delta=1
   187                           	psect	text162,global,reloc=4,class=CODE,delta=1
   188                           	psect	text163,global,reloc=2,class=CODE,delta=1
   189                           	psect	text164,global,reloc=4,class=CODE,delta=1
   190                           	psect	text165,global,reloc=2,class=CODE,delta=1
   191                           	psect	text166,global,reloc=4,class=CODE,delta=1
   192                           	psect	text167,global,reloc=2,class=CODE,delta=1
   193                           	psect	text168,global,reloc=2,class=CODE,delta=1
   194                           	psect	text169,global,reloc=4,class=CODE,delta=1
   195                           	psect	text170,global,reloc=4,class=CODE,delta=1
   196                           	psect	text171,global,reloc=4,class=CODE,delta=1
   197                           	psect	text172,global,reloc=4,class=CODE,delta=1
   198                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   199                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   200                           	psect	text173,global,reloc=4,class=CODE,delta=1
   201                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   202                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   203  0000                     
   204                           ; Version 2.10
   205                           ; Generated 31/07/2019 GMT
   206                           ; 
   207                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   208                           ; All rights reserved.
   209                           ; 
   210                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   211                           ; 
   212                           ; Redistribution and use in source and binary forms, with or without modification, are
   213                           ; permitted provided that the following conditions are met:
   214                           ; 
   215                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   216                           ;        conditions and the following disclaimer.
   217                           ; 
   218                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   219                           ;        of conditions and the following disclaimer in the documentation and/or other
   220                           ;        materials provided with the distribution.
   221                           ; 
   222                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   223                           ;        software without specific prior written permission.
   224                           ; 
   225                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   226                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   227                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   228                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   229                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   230                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   231                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   232                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   233                           ; 
   234                           ; 
   235                           ; Code-generator required, PIC18F57K42 Definitions
   236                           ; 
   237                           ; SFR Addresses
   238  0000                     
   239 ;;_i	offset	0
   240 ;;_k	offset	1
   241 ;;_j	offset	2
   242 ;;_inp_index	offset	3
   243 ;;_mode	offset	4
   244 ;;_i_ror	offset	5
   245 ;;_s	offset=-2 (param)
   246 ;;_c	offset	0
   247 ;;_shape	offset=-1 (param)
   248 ;;_reset	offset=-2 (param)
   249 ;;_cmd	offset=-1 (param)
   250 ;;_cmd	offset=-1 (param)
   251 ;;_data	offset=-1 (param)
   252 ;;__this	offset=-2 (param)
   253 ;;_cvoltage	offset=-4 (param)
   254 ;;_h	offset=-1 (param)
   255 ;;_h	offset=-1 (param)
   256 ;;_i	offset=-1 (param)
   257 ;;_fsm	offset=-1 (param)
   258 ;;_channel	offset=-1 (param)
   259 ;;_mode	offset=-1 (param)
   260 ;;_mode	offset=-1 (param)
   261 ;;_cmd	offset=-1 (param)
   262 ;;_i	offset	0
   263 ;;_h	offset=-1 (param)
   264 ;;_flipper	offset=-1 (param)
   265 ;;_f	offset	0
   266 ;;_ap	offset	6
   267 ;;_s	offset=-3 (param)
   268 ;;_fmt	offset=-5 (param)
   269 ;;_line	offset=-1 (param)
   270 ;;_vterm	offset=-2 (param)
   271 ;;_numMilliseconds	offset=-2 (param)
   272 ;;_vterm	offset=-1 (param)
   273 ;;_r	offset=-1 (param)
   274 ;;_c	offset=-2 (param)
   275 ;;_strPtr	offset=-4 (param)
   276 ;;_strPtr	offset=-1 (param)
   277 ;;_delay	offset=-4 (param)
   278 ;;_strPtr	offset=-2 (param)
   279 ;;__this	offset=-2 (param)
   280 ;;_clearBuffer	offset=-3 (param)
   281 ;;_s	offset	0
   282 ;;_k	offset	2
   283 ;;_dest	offset=-2 (param)
   284 ;;_c	offset=-4 (param)
   285 ;;_n	offset=-6 (param)
   286 ;;_ap	offset	0
   287 ;;_fmt	offset=-3 (param)
   288 ;;_cfmt	offset	0
   289 ;;_fp	offset=-2 (param)
   290 ;;_fmt	offset=-4 (param)
   291 ;;_ap	offset=-6 (param)
   292 ;;_vfpfcnvrt$5364	offset	0
   293 ;;_vfpfcnvrt$5375	offset	2
   294 ;;_vfpfcnvrt$5363	offset	4
   295 ;;_llu	offset	6
   296 ;;_ll	offset	14
   297 ;;_f	offset	22
   298 ;;_ct	offset	26
   299 ;;_cp	offset	29
   300 ;;_c	offset	31
   301 ;;_fp	offset=-2 (param)
   302 ;;_fmt	offset=-4 (param)
   303 ;;_ap	offset=-6 (param)
   304 ;;_xtoa$5349	offset	0
   305 ;;_xtoa$5348	offset	2
   306 ;;_n	offset	4
   307 ;;_c	offset	12
   308 ;;_i	offset	14
   309 ;;_w	offset	16
   310 ;;_p	offset	18
   311 ;;_fp	offset=-2 (param)
   312 ;;_d	offset=-10 (param)
   313 ;;_x	offset=-11 (param)
   314 ;;_toupper$6155	offset	0
   315 ;;_c	offset=-2 (param)
   316 ;;_c	offset=-2 (param)
   317 ;;_c	offset=-2 (param)
   318 ;;_n	offset	0
   319 ;;_i	offset	8
   320 ;;_w	offset	10
   321 ;;_p	offset	12
   322 ;;_fp	offset=-2 (param)
   323 ;;_d	offset=-10 (param)
   324 ;;_counter	offset	0
   325 ;;_dividend	offset=-8 (param)
   326 ;;_divisor	offset=-16 (param)
   327 ;;_quotient	offset	0
   328 ;;_counter	offset	8
   329 ;;_dividend	offset=-8 (param)
   330 ;;_divisor	offset=-16 (param)
   331 ;;_r	offset	0
   332 ;;_l	offset	2
   333 ;;__l	offset=-2 (param)
   334 ;;__r	offset=-4 (param)
   335 ;;_n	offset=-6 (param)
   336 ;;_nuls	offset	0
   337 ;;_l	offset	7
   338 ;;_p	offset	9
   339 ;;_cp	offset	11
   340 ;;_w	offset	13
   341 ;;_i	offset	15
   342 ;;_fp	offset=-2 (param)
   343 ;;_s	offset=-4 (param)
   344 ;;_efgtoa$5321	offset	0
   345 ;;_efgtoa$5320	offset	2
   346 ;;_efgtoa$5319	offset	4
   347 ;;_efgtoa$5315	offset	6
   348 ;;_efgtoa$5311	offset	8
   349 ;;_efgtoa$5310	offset	10
   350 ;;_u	offset	12
   351 ;;_g	offset	16
   352 ;;_l	offset	20
   353 ;;_h	offset	24
   354 ;;_ou	offset	28
   355 ;;_n	offset	32
   356 ;;_e	offset	34
   357 ;;_i	offset	36
   358 ;;_w	offset	38
   359 ;;_p	offset	40
   360 ;;_sign	offset	42
   361 ;;_d	offset	44
   362 ;;_ne	offset	46
   363 ;;_m	offset	48
   364 ;;_pp	offset	50
   365 ;;_t	offset	52
   366 ;;_mode	offset	54
   367 ;;_nmode	offset	55
   368 ;;_fp	offset=-2 (param)
   369 ;;_f	offset=-6 (param)
   370 ;;_c	offset=-7 (param)
   371 ;;_tolower$6140	offset	0
   372 ;;_c	offset=-2 (param)
   373 ;;_c	offset=-2 (param)
   374 ;;_d	offset	0
   375 ;;_s	offset	2
   376 ;;_dest	offset=-2 (param)
   377 ;;_src	offset=-4 (param)
   378 ;;_u	offset	0
   379 ;;_m	offset	4
   380 ;;_e	offset	8
   381 ;;_x	offset=-4 (param)
   382 ;;_u	offset	0
   383 ;;_e	offset	4
   384 ;;_x	offset=-4 (param)
   385 ;;_exp1	offset	0
   386 ;;_sign1	offset	1
   387 ;;_f1	offset=-4 (param)
   388 ;;_f1	offset=-4 (param)
   389 ;;_ff1	offset=-4 (param)
   390 ;;_ff2	offset=-8 (param)
   391 ;;_sign	offset	0
   392 ;;_counter	offset	1
   393 ;;_dividend	offset=-2 (param)
   394 ;;_divisor	offset=-4 (param)
   395 ;;_quotient	offset	0
   396 ;;_sign	offset	2
   397 ;;_counter	offset	3
   398 ;;_dividend	offset=-2 (param)
   399 ;;_divisor	offset=-4 (param)
   400 ;;_dtoa$5287	offset	0
   401 ;;_n	offset	2
   402 ;;_i	offset	10
   403 ;;_s	offset	12
   404 ;;_w	offset	14
   405 ;;_p	offset	16
   406 ;;_fp	offset=-2 (param)
   407 ;;_d	offset=-10 (param)
   408 ;;_a	offset=-2 (param)
   409 ;;_sign	offset	0
   410 ;;_counter	offset	1
   411 ;;_dividend	offset=-8 (param)
   412 ;;_divisor	offset=-16 (param)
   413 ;;_quotient	offset	0
   414 ;;_sign	offset	8
   415 ;;_counter	offset	9
   416 ;;_dividend	offset=-8 (param)
   417 ;;_divisor	offset=-16 (param)
   418 ;;_w	offset	0
   419 ;;_fp	offset=-2 (param)
   420 ;;_c	offset=-3 (param)
   421 ;;_w	offset	0
   422 ;;_i	offset	2
   423 ;;_fp	offset=-2 (param)
   424 ;;_buf	offset=-4 (param)
   425 ;;_p	offset=-6 (param)
   426 ;;_a	offset	0
   427 ;;_s	offset=-2 (param)
   428 ;;_i	offset	0
   429 ;;_c	offset	2
   430 ;;_s	offset=-2 (param)
   431 ;;_fp	offset=-4 (param)
   432 ;;_c	offset=-2 (param)
   433 ;;_fp	offset=-4 (param)
   434 ;;_c	offset=-1 (param)
   435 ;;__this	offset=-2 (param)
   436 ;;_c	offset=-3 (param)
   437 ;;_atoi$5871	offset	0
   438 ;;_atoi$5869	offset	2
   439 ;;_atoi$5870	offset	4
   440 ;;_n	offset	5
   441 ;;_neg	offset	7
   442 ;;_s	offset=-2 (param)
   443 ;;_isspace$5920	offset	0
   444 ;;_c	offset=-2 (param)
   445 ;;_c	offset=-2 (param)
   446 ;;_vterm	offset=-1 (param)
   447 ;;_new_response_info	offset=-1 (param)
   448 ;;_new_response_info	offset=-1 (param)
   449 ;;_level	offset=-2 (param)
   450 ;;_dutyValue	offset=-2 (param)
   451 ;;_timer	offset=-1 (param)
   452 ;;_timer	offset=-1 (param)
   453 ;;_count	offset=-3 (param)
   454 ;;_h	offset=-1 (param)
   455 ;;_u	offset	0
   456 ;;_x	offset=-4 (param)
   457 ;;_chan	offset=-1 (param)
   458 ;;_to_what	offset=-2 (param)
   459 ;;_u	offset	0
   460 ;;_s	offset=-2 (param)
   461 ;;_index	offset=-1 (param)
   462 ;;_arg	offset	0
   463 ;;_exp	offset	4
   464 ;;_sign	offset=-1 (param)
   465 ;;_val	offset=-5 (param)
   466 ;;_grs	offset	0
   467 ;;_rem	offset	4
   468 ;;_new_exp	offset	8
   469 ;;_aexp	offset	10
   470 ;;_bexp	offset	11
   471 ;;_sign	offset	12
   472 ;;_b	offset=-4 (param)
   473 ;;_a	offset=-8 (param)
   474 ;;_ff1	offset=-4 (param)
   475 ;;_ff2	offset=-8 (param)
   476 ;;_lp_speed	offset	0
   477 ;;_new	offset=-4 (param)
   478 ;;_bn	offset=-5 (param)
   479 ;;_slow	offset=-6 (param)
   480 ;;_b	offset=-4 (param)
   481 ;;_a	offset=-8 (param)
   482 ;;_grs	offset	0
   483 ;;_bexp	offset	1
   484 ;;_aexp	offset	2
   485 ;;_signs	offset	3
   486 ;;_b	offset=-4 (param)
   487 ;;_a	offset=-8 (param)
   488 ;;_prod	offset	0
   489 ;;_grs	offset	4
   490 ;;_temp	offset	8
   491 ;;_bexp	offset	10
   492 ;;_aexp	offset	11
   493 ;;_sign	offset	12
   494 ;;_b	offset=-4 (param)
   495 ;;_a	offset=-8 (param)
   496 ;;_InterruptHandler	offset=-3 (param)
   497 ;;_InterruptHandler	offset=-3 (param)
   498 ;;_InterruptHandler	offset=-3 (param)
   499 ;;_InterruptHandler	offset=-3 (param)
   500 ;;_InterruptHandler	offset=-3 (param)
   501 ;;_InterruptHandler	offset=-3 (param)
   502 ;;_state	offset	0
   503 ;;_InterruptHandler	offset=-3 (param)
   504 ;;_InterruptHandler	offset=-3 (param)
   505 ;;_InterruptHandler	offset=-3 (param)
   506 ;;_InterruptHandler	offset=-3 (param)
   507 ;;_i	offset	0
   508 ;;_sw_value	offset	1
   509 ;;_timerVal	offset=-2 (param)
   510 ;;_timerVal	offset=-2 (param)
   511 ;;_log_ptr	offset	0
   512 ;;_f	offset	0
   513 ;;_ap	offset	6
   514 ;;_s	offset=-3 (param)
   515 ;;_fmt	offset=-5 (param)
   516 ;;_cfmt	offset	0
   517 ;;_fp	offset=-2 (param)
   518 ;;_fmt	offset=-4 (param)
   519 ;;_ap	offset=-6 (param)
   520 ;;_vfpfcnvrt$5364	offset	0
   521 ;;_vfpfcnvrt$5375	offset	2
   522 ;;_vfpfcnvrt$5363	offset	4
   523 ;;_llu	offset	6
   524 ;;_ll	offset	14
   525 ;;_f	offset	22
   526 ;;_ct	offset	26
   527 ;;_cp	offset	29
   528 ;;_c	offset	31
   529 ;;_fp	offset=-2 (param)
   530 ;;_fmt	offset=-4 (param)
   531 ;;_ap	offset=-6 (param)
   532 ;;_xtoa$5349	offset	0
   533 ;;_xtoa$5348	offset	2
   534 ;;_n	offset	4
   535 ;;_c	offset	12
   536 ;;_i	offset	14
   537 ;;_w	offset	16
   538 ;;_p	offset	18
   539 ;;_fp	offset=-2 (param)
   540 ;;_d	offset=-10 (param)
   541 ;;_x	offset=-11 (param)
   542 ;;_toupper$6155	offset	0
   543 ;;_c	offset=-2 (param)
   544 ;;_c	offset=-2 (param)
   545 ;;_c	offset=-2 (param)
   546 ;;_n	offset	0
   547 ;;_i	offset	8
   548 ;;_w	offset	10
   549 ;;_p	offset	12
   550 ;;_fp	offset=-2 (param)
   551 ;;_d	offset=-10 (param)
   552 ;;_counter	offset	0
   553 ;;_dividend	offset=-8 (param)
   554 ;;_divisor	offset=-16 (param)
   555 ;;_quotient	offset	0
   556 ;;_counter	offset	8
   557 ;;_dividend	offset=-8 (param)
   558 ;;_divisor	offset=-16 (param)
   559 ;;_r	offset	0
   560 ;;_l	offset	2
   561 ;;__l	offset=-2 (param)
   562 ;;__r	offset=-4 (param)
   563 ;;_n	offset=-6 (param)
   564 ;;_nuls	offset	0
   565 ;;_l	offset	7
   566 ;;_p	offset	9
   567 ;;_cp	offset	11
   568 ;;_w	offset	13
   569 ;;_i	offset	15
   570 ;;_fp	offset=-2 (param)
   571 ;;_s	offset=-4 (param)
   572 ;;_efgtoa$5321	offset	0
   573 ;;_efgtoa$5320	offset	2
   574 ;;_efgtoa$5319	offset	4
   575 ;;_efgtoa$5315	offset	6
   576 ;;_efgtoa$5311	offset	8
   577 ;;_efgtoa$5310	offset	10
   578 ;;_u	offset	12
   579 ;;_g	offset	16
   580 ;;_l	offset	20
   581 ;;_h	offset	24
   582 ;;_ou	offset	28
   583 ;;_n	offset	32
   584 ;;_e	offset	34
   585 ;;_i	offset	36
   586 ;;_w	offset	38
   587 ;;_p	offset	40
   588 ;;_sign	offset	42
   589 ;;_d	offset	44
   590 ;;_ne	offset	46
   591 ;;_m	offset	48
   592 ;;_pp	offset	50
   593 ;;_t	offset	52
   594 ;;_mode	offset	54
   595 ;;_nmode	offset	55
   596 ;;_fp	offset=-2 (param)
   597 ;;_f	offset=-6 (param)
   598 ;;_c	offset=-7 (param)
   599 ;;_tolower$6140	offset	0
   600 ;;_c	offset=-2 (param)
   601 ;;_c	offset=-2 (param)
   602 ;;_d	offset	0
   603 ;;_s	offset	2
   604 ;;_dest	offset=-2 (param)
   605 ;;_src	offset=-4 (param)
   606 ;;_u	offset	0
   607 ;;_m	offset	4
   608 ;;_e	offset	8
   609 ;;_x	offset=-4 (param)
   610 ;;_u	offset	0
   611 ;;_e	offset	4
   612 ;;_x	offset=-4 (param)
   613 ;;_exp1	offset	0
   614 ;;_sign1	offset	1
   615 ;;_f1	offset=-4 (param)
   616 ;;_b	offset=-4 (param)
   617 ;;_a	offset=-8 (param)
   618 ;;_grs	offset	0
   619 ;;_bexp	offset	1
   620 ;;_aexp	offset	2
   621 ;;_signs	offset	3
   622 ;;_b	offset=-4 (param)
   623 ;;_a	offset=-8 (param)
   624 ;;_f1	offset=-4 (param)
   625 ;;_prod	offset	0
   626 ;;_grs	offset	4
   627 ;;_temp	offset	8
   628 ;;_bexp	offset	10
   629 ;;_aexp	offset	11
   630 ;;_sign	offset	12
   631 ;;_b	offset=-4 (param)
   632 ;;_a	offset=-8 (param)
   633 ;;_ff1	offset=-4 (param)
   634 ;;_ff2	offset=-8 (param)
   635 ;;_ff1	offset=-4 (param)
   636 ;;_ff2	offset=-8 (param)
   637 ;;_grs	offset	0
   638 ;;_rem	offset	4
   639 ;;_new_exp	offset	8
   640 ;;_aexp	offset	10
   641 ;;_bexp	offset	11
   642 ;;_sign	offset	12
   643 ;;_b	offset=-4 (param)
   644 ;;_a	offset=-8 (param)
   645 ;;_sign	offset	0
   646 ;;_counter	offset	1
   647 ;;_dividend	offset=-2 (param)
   648 ;;_divisor	offset=-4 (param)
   649 ;;_quotient	offset	0
   650 ;;_sign	offset	2
   651 ;;_counter	offset	3
   652 ;;_dividend	offset=-2 (param)
   653 ;;_divisor	offset=-4 (param)
   654 ;;_dtoa$5287	offset	0
   655 ;;_n	offset	2
   656 ;;_i	offset	10
   657 ;;_s	offset	12
   658 ;;_w	offset	14
   659 ;;_p	offset	16
   660 ;;_fp	offset=-2 (param)
   661 ;;_d	offset=-10 (param)
   662 ;;_a	offset=-2 (param)
   663 ;;_sign	offset	0
   664 ;;_counter	offset	1
   665 ;;_dividend	offset=-8 (param)
   666 ;;_divisor	offset=-16 (param)
   667 ;;_quotient	offset	0
   668 ;;_sign	offset	8
   669 ;;_counter	offset	9
   670 ;;_dividend	offset=-8 (param)
   671 ;;_divisor	offset=-16 (param)
   672 ;;_w	offset	0
   673 ;;_fp	offset=-2 (param)
   674 ;;_c	offset=-3 (param)
   675 ;;_w	offset	0
   676 ;;_i	offset	2
   677 ;;_fp	offset=-2 (param)
   678 ;;_buf	offset=-4 (param)
   679 ;;_p	offset=-6 (param)
   680 ;;_a	offset	0
   681 ;;_s	offset=-2 (param)
   682 ;;_i	offset	0
   683 ;;_c	offset	2
   684 ;;_s	offset=-2 (param)
   685 ;;_fp	offset=-4 (param)
   686 ;;_c	offset=-2 (param)
   687 ;;_fp	offset=-4 (param)
   688 ;;_c	offset=-1 (param)
   689 ;;__this	offset=-2 (param)
   690 ;;_c	offset=-3 (param)
   691 ;;_atoi$5871	offset	0
   692 ;;_atoi$5869	offset	2
   693 ;;_atoi$5870	offset	4
   694 ;;_n	offset	5
   695 ;;_neg	offset	7
   696 ;;_s	offset=-2 (param)
   697 ;;_isspace$5920	offset	0
   698 ;;_c	offset=-2 (param)
   699 ;;_c	offset=-2 (param)
   700 ;;_dsize	offset=-2 (param)
   701 ;;_timer	offset=-1 (param)
   702 ;;_count	offset=-3 (param)
   703 ;;_channel	offset=-1 (param)
   704 ;;_i	offset	0
   705                           
   706                           	psect	idataBIGRAM
   707  01775C                     __pidataBIGRAM:
   708                           	opt callstack 0
   709                           
   710                           ;initializer for _port_data
   711  01775C  FF                 	db	255
   712  01775D  00                 	db	0
   713  01775E  FF                 	db	255
   714  01775F  00                 	db	0
   715  017760  FF                 	db	255
   716  017761  00                 	db	0
   717  017762  FF                 	db	255
   718  017763  00                 	db	0
   719  017764  FF                 	db	255
   720  017765  00                 	db	0
   721  017766  FF                 	db	255
   722  017767  00                 	db	0
   723  017768  FF                 	db	255
   724  017769  00                 	db	0
   725  01776A  FF                 	db	255
   726  01776B  00                 	db	0
   727  01776C  00                 	db	0
   728  01776D  00                 	db	0
   729  01776E  00                 	db	0
   730  01776F  00                 	db	0
   731  017770  00                 	db	0
   732  017771  00                 	db	0
   733  017772  00                 	db	0
   734  017773  00                 	db	0
   735  017774  00                 	db	0
   736  017775  00                 	db	0
   737  017776  00                 	db	0
   738  017777  00                 	db	0
   739  017778  00                 	db	0
   740  017779  00                 	db	0
   741  01777A  00                 	db	0
   742  01777B  00                 	db	0
   743  01777C  00                 	db	0
   744  01777D  00                 	db	0
   745  01777E  00                 	db	0
   746  01777F  00                 	db	0
   747  017780  00                 	db	0
   748  017781  00                 	db	0
   749  017782  00                 	db	0
   750  017783  00                 	db	0
   751  017784  00                 	db	0
   752  017785  00                 	db	0
   753  017786  00                 	db	0
   754  017787  00                 	db	0
   755  017788  00                 	db	0
   756  017789  00                 	db	0
   757  01778A  00                 	db	0
   758  01778B  00                 	db	0
   759  01778C  00                 	db	0
   760  01778D  00                 	db	0
   761  01778E  00                 	db	0
   762  01778F  00                 	db	0
   763  017790  00                 	db	0
   764  017791  00                 	db	0
   765  017792  00                 	db	0
   766  017793  00                 	db	0
   767  017794  00                 	db	0
   768  017795  00                 	db	0
   769  017796  00                 	db	0
   770  017797  00                 	db	0
   771  017798  00                 	db	0
   772  017799  00                 	db	0
   773  01779A  00                 	db	0
   774  01779B  00                 	db	0
   775  01779C  00                 	db	0
   776  01779D  00                 	db	0
   777  01779E  00                 	db	0
   778  01779F  00                 	db	0
   779  0177A0  00                 	db	0
   780  0177A1  00                 	db	0
   781  0177A2  00                 	db	0
   782  0177A3  00                 	db	0
   783  0177A4  00                 	db	0
   784  0177A5  00                 	db	0
   785  0177A6  00                 	db	0
   786  0177A7  00                 	db	0
   787  0177A8  00                 	db	0
   788  0177A9  00                 	db	0
   789  0177AA  00                 	db	0
   790  0177AB  00                 	db	0
   791  0177AC  00                 	db	0
   792  0177AD  00                 	db	0
   793  0177AE  00                 	db	0
   794  0177AF  00                 	db	0
   795  0177B0  00                 	db	0
   796  0177B1  00                 	db	0
   797  0177B2  00                 	db	0
   798  0177B3  00                 	db	0
   799  0177B4  00                 	db	0
   800  0177B5  00                 	db	0
   801  0177B6  00                 	db	0
   802  0177B7  00                 	db	0
   803  0177B8  00                 	db	0
   804  0177B9  00                 	db	0
   805  0177BA  00                 	db	0
   806  0177BB  00                 	db	0
   807  0177BC  00                 	db	0
   808  0177BD  00                 	db	0
   809  0177BE  00                 	db	0
   810  0177BF  00                 	db	0
   811  0177C0  00                 	db	0
   812  0177C1  00                 	db	0
   813  0177C2  00                 	db	0
   814  0177C3  00                 	db	0
   815  0177C4  00                 	db	0
   816  0177C5  00                 	db	0
   817  0177C6  00                 	db	0
   818  0177C7  00                 	db	0
   819  0177C8  00                 	db	0
   820  0177C9  00                 	db	0
   821  0177CA  00                 	db	0
   822  0177CB  00                 	db	0
   823  0177CC  00                 	db	0
   824  0177CD  00                 	db	0
   825  0177CE  00                 	db	0
   826  0177CF  00                 	db	0
   827  0177D0  00                 	db	0
   828  0177D1  00                 	db	0
   829  0177D2  00                 	db	0
   830  0177D3  00                 	db	0
   831  0177D4  00                 	db	0
   832  0177D5  00                 	db	0
   833  0177D6  00                 	db	0
   834  0177D7  00                 	db	0
   835  0177D8  00                 	db	0
   836  0177D9  00                 	db	0
   837  0177DA  00                 	db	0
   838  0177DB  00                 	db	0
   839  0177DC  00                 	db	0
   840  0177DD  00                 	db	0
   841  0177DE  00                 	db	0
   842  0177DF  00                 	db	0
   843  0177E0  00                 	db	0
   844  0177E1  00                 	db	0
   845  0177E2  00                 	db	0
   846  0177E3  00                 	db	0
   847  0177E4  00                 	db	0
   848  0177E5  00                 	db	0
   849  0177E6  00                 	db	0
   850  0177E7  00                 	db	0
   851  0177E8  00                 	db	0
   852  0177E9  00                 	db	0
   853  0177EA  00                 	db	0
   854  0177EB  00                 	db	0
   855  0177EC  00                 	db	0
   856  0177ED  00                 	db	0
   857  0177EE  00                 	db	0
   858  0177EF  00                 	db	0
   859  0177F0  00                 	db	0
   860  0177F1  00                 	db	0
   861  0177F2  00                 	db	0
   862  0177F3  00                 	db	0
   863  0177F4  00                 	db	0
   864  0177F5  00                 	db	0
   865  0177F6  00                 	db	0
   866  0177F7  00                 	db	0
   867  0177F8  00                 	db	0
   868  0177F9  00                 	db	0
   869  0177FA  00                 	db	0
   870  0177FB  00                 	db	0
   871  0177FC  00                 	db	0
   872  0177FD  00                 	db	0
   873  0177FE  00                 	db	0
   874  0177FF  00                 	db	0
   875  017800  00                 	db	0
   876  017801  00                 	db	0
   877  017802  00                 	db	0
   878  017803  00                 	db	0
   879  017804  00                 	db	0
   880  017805  00                 	db	0
   881  017806  00                 	db	0
   882  017807  00                 	db	0
   883  017808  00                 	db	0
   884  017809  00                 	db	0
   885  01780A  00                 	db	0
   886  01780B  00                 	db	0
   887  01780C  00                 	db	0
   888  01780D  00                 	db	0
   889  01780E  00                 	db	0
   890  01780F  00                 	db	0
   891  017810  00                 	db	0
   892  017811  00                 	db	0
   893  017812  00                 	db	0
   894  017813  00                 	db	0
   895  017814  00                 	db	0
   896  017815  00                 	db	0
   897  017816  00                 	db	0
   898  017817  00                 	db	0
   899  017818  00                 	db	0
   900  017819  00                 	db	0
   901  01781A  00                 	db	0
   902  01781B  00                 	db	0
   903  01781C  00                 	db	0
   904  01781D  00                 	db	0
   905  01781E  00                 	db	0
   906  01781F  00                 	db	0
   907  017820  00                 	db	0
   908  017821  00                 	db	0
   909  017822  00                 	db	0
   910  017823  00                 	db	0
   911  017824  00                 	db	0
   912  017825  00                 	db	0
   913  017826  00                 	db	0
   914  017827  00                 	db	0
   915  017828  00                 	db	0
   916  017829  00                 	db	0
   917  01782A  00                 	db	0
   918  01782B  00                 	db	0
   919  01782C  00                 	db	0
   920  01782D  00                 	db	0
   921  01782E  00                 	db	0
   922  01782F  00                 	db	0
   923  017830  00                 	db	0
   924  017831  00                 	db	0
   925  017832  00                 	db	0
   926  017833  00                 	db	0
   927  017834  00                 	db	0
   928  017835  00                 	db	0
   929  017836  00                 	db	0
   930  017837  00                 	db	0
   931  017838  00                 	db	0
   932  017839  00                 	db	0
   933  01783A  00                 	db	0
   934  01783B  00                 	db	0
   935  01783C  00                 	db	0
   936  01783D  00                 	db	0
   937  01783E  00                 	db	0
   938  01783F  00                 	db	0
   939  017840  00                 	db	0
   940  017841  00                 	db	0
   941  017842  00                 	db	0
   942  017843  00                 	db	0
   943  017844  00                 	db	0
   944  017845  00                 	db	0
   945  017846  00                 	db	0
   946  017847  00                 	db	0
   947  017848  00                 	db	0
   948  017849  00                 	db	0
   949  01784A  00                 	db	0
   950  01784B  00                 	db	0
   951  01784C  00                 	db	0
   952  01784D  00                 	db	0
   953  01784E  00                 	db	0
   954  01784F  00                 	db	0
   955  017850  00                 	db	0
   956  017851  00                 	db	0
   957  017852  00                 	db	0
   958  017853  00                 	db	0
   959  017854  00                 	db	0
   960  017855  00                 	db	0
   961  017856  00                 	db	0
   962  017857  00                 	db	0
   963  017858  00                 	db	0
   964  017859  00                 	db	0
   965  01785A  00                 	db	0
   966  01785B  00                 	db	0
   967  01785C  00                 	db	0
   968  01785D  00                 	db	0
   969  01785E  00                 	db	0
   970  01785F  00                 	db	0
   971  017860  00                 	db	0
   972  017861  00                 	db	0
   973  017862  00                 	db	0
   974  017863  00                 	db	0
   975  017864  00                 	db	0
   976  017865  00                 	db	0
   977  017866  00                 	db	0
   978  017867  00                 	db	0
   979  017868  00                 	db	0
   980  017869  00                 	db	0
   981  01786A  00                 	db	0
   982  01786B  00                 	db	0
   983  01786C  00                 	db	0
   984  01786D  00                 	db	0
   985  01786E  00                 	db	0
   986  01786F  00                 	db	0
   987  017870  00                 	db	0
   988  017871  00                 	db	0
   989  017872  00                 	db	0
   990  017873  00                 	db	0
   991  017874  00                 	db	0
   992  017875  00                 	db	0
   993  017876  00                 	db	0
   994  017877  00                 	db	0
   995  017878  00                 	db	0
   996  017879  00                 	db	0
   997  01787A  00                 	db	0
   998  01787B  00                 	db	0
   999  01787C  00                 	db	0
  1000  01787D  00                 	db	0
  1001  01787E  00                 	db	0
  1002  01787F  00                 	db	0
  1003  017880  00                 	db	0
  1004  017881  00                 	db	0
  1005  017882  00                 	db	0
  1006  017883  00                 	db	0
  1007  017884  00                 	db	0
  1008  017885  00                 	db	0
  1009  017886  00                 	db	0
  1010  017887  00                 	db	0
  1011  017888  00                 	db	0
  1012  017889  00                 	db	0
  1013  01788A  00                 	db	0
  1014  01788B  00                 	db	0
  1015  01788C  00                 	db	0
  1016  01788D  00                 	db	0
  1017  01788E  00                 	db	0
  1018  01788F  00                 	db	0
  1019  017890  00                 	db	0
  1020  017891  00                 	db	0
  1021  017892  00                 	db	0
  1022  017893  00                 	db	0
  1023  017894  00                 	db	0
  1024  017895  00                 	db	0
  1025  017896  00                 	db	0
  1026  017897  00                 	db	0
  1027  017898  00                 	db	0
  1028  017899  00                 	db	0
  1029  01789A  00                 	db	0
  1030  01789B  00                 	db	0
  1031  01789C  00                 	db	0
  1032  01789D  00                 	db	0
  1033  01789E  00                 	db	0
  1034  01789F  00                 	db	0
  1035  0178A0  00                 	db	0
  1036  0178A1  00                 	db	0
  1037  0178A2  00                 	db	0
  1038  0178A3  00                 	db	0
  1039  0178A4  00                 	db	0
  1040  0178A5  00                 	db	0
  1041  0178A6  00                 	db	0
  1042  0178A7  00                 	db	0
  1043  0178A8  00                 	db	0
  1044  0178A9  00                 	db	0
  1045  0178AA  00                 	db	0
  1046  0178AB  00                 	db	0
  1047  0178AC  00                 	db	0
  1048  0178AD  00                 	db	0
  1049  0178AE  00                 	db	0
  1050  0178AF  00                 	db	0
  1051  0178B0  00                 	db	0
  1052  0178B1  00                 	db	0
  1053  0178B2  00                 	db	0
  1054  0178B3  00                 	db	0
  1055  0178B4  00                 	db	0
  1056  0178B5  00                 	db	0
  1057  0178B6  00                 	db	0
  1058  0178B7  00                 	db	0
  1059  0178B8  00                 	db	0
  1060  0178B9  00                 	db	0
  1061  0178BA  00                 	db	0
  1062  0178BB  00                 	db	0
  1063  0178BC  00                 	db	0
  1064  0178BD  00                 	db	0
  1065  0178BE  00                 	db	0
  1066  0178BF  00                 	db	0
  1067  0178C0  00                 	db	0
  1068  0178C1  00                 	db	0
  1069  0178C2  00                 	db	0
  1070  0178C3  00                 	db	0
  1071  0178C4  00                 	db	0
  1072  0178C5  00                 	db	0
  1073  0178C6  00                 	db	0
  1074  0178C7  00                 	db	0
  1075  0178C8  00                 	db	0
  1076  0178C9  00                 	db	0
  1077  0178CA  00                 	db	0
  1078  0178CB  00                 	db	0
  1079  0178CC  00                 	db	0
  1080  0178CD  00                 	db	0
  1081  0178CE  00                 	db	0
  1082  0178CF  00                 	db	0
  1083  0178D0  00                 	db	0
  1084  0178D1  00                 	db	0
  1085  0178D2  00                 	db	0
  1086  0178D3  00                 	db	0
  1087  0178D4  00                 	db	0
  1088  0178D5  00                 	db	0
  1089  0178D6  00                 	db	0
  1090  0178D7  00                 	db	0
  1091  0178D8  00                 	db	0
  1092  0178D9  00                 	db	0
  1093  0178DA  00                 	db	0
  1094  0178DB  00                 	db	0
  1095  0178DC  00                 	db	0
  1096  0178DD  00                 	db	0
  1097  0178DE  00                 	db	0
  1098  0178DF  00                 	db	0
  1099  0178E0  00                 	db	0
  1100  0178E1  00                 	db	0
  1101  0178E2  00                 	db	0
  1102  0178E3  00                 	db	0
  1103  0178E4  00                 	db	0
  1104  0178E5  00                 	db	0
  1105  0178E6  00                 	db	0
  1106  0178E7  00                 	db	0
  1107  0178E8  00                 	db	0
  1108  0178E9  00                 	db	0
  1109  0178EA  00                 	db	0
  1110  0178EB  00                 	db	0
  1111  0178EC  00                 	db	0
  1112  0178ED  00                 	db	0
  1113  0178EE  00                 	db	0
  1114  0178EF  00                 	db	0
  1115  0178F0  00                 	db	0
  1116  0178F1  00                 	db	0
  1117  0178F2  00                 	db	0
  1118  0178F3  00                 	db	0
  1119  0178F4  00                 	db	0
  1120  0178F5  00                 	db	0
  1121  0178F6  00                 	db	0
  1122  0178F7  00                 	db	0
  1123  0178F8  00                 	db	0
  1124  0178F9  00                 	db	0
  1125  0178FA  00                 	db	0
  1126  0178FB  00                 	db	0
  1127  0178FC  00                 	db	0
  1128  0178FD  00                 	db	0
  1129  0178FE  00                 	db	0
  1130  0178FF  00                 	db	0
  1131  017900  00                 	db	0
  1132  017901  00                 	db	0
  1133  017902  00                 	db	0
  1134  017903  00                 	db	0
  1135  017904  00                 	db	0
  1136  017905  00                 	db	0
  1137  017906  00                 	db	0
  1138  017907  00                 	db	0
  1139  017908  00                 	db	0
  1140  017909  00                 	db	0
  1141  01790A  00                 	db	0
  1142  01790B  00                 	db	0
  1143  01790C  00                 	db	0
  1144  01790D  00                 	db	0
  1145  01790E  00                 	db	0
  1146  01790F  00                 	db	0
  1147  017910  00                 	db	0
  1148  017911  00                 	db	0
  1149  017912  00                 	db	0
  1150  017913  00                 	db	0
  1151  017914  00                 	db	0
  1152  017915  00                 	db	0
  1153  017916  00                 	db	0
  1154  017917  00                 	db	0
  1155  017918  00                 	db	0
  1156  017919  00                 	db	0
  1157  01791A  00                 	db	0
  1158  01791B  00                 	db	0
  1159  01791C  00                 	db	0
  1160  01791D  00                 	db	0
  1161  01791E  00                 	db	0
  1162  01791F  00                 	db	0
  1163  017920  00                 	db	0
  1164  017921  00                 	db	0
  1165  017922  00                 	db	0
  1166  017923  00                 	db	0
  1167  017924  00                 	db	0
  1168  017925  00                 	db	0
  1169  017926  00                 	db	0
  1170  017927  00                 	db	0
  1171  017928  00                 	db	0
  1172  017929  00                 	db	0
  1173  01792A  00                 	db	0
  1174  01792B  00                 	db	0
  1175  01792C  00                 	db	0
  1176  01792D  00                 	db	0
  1177  01792E  00                 	db	0
  1178  01792F  00                 	db	0
  1179  017930  00                 	db	0
  1180  017931  00                 	db	0
  1181  017932  00                 	db	0
  1182  017933  00                 	db	0
  1183  017934  00                 	db	0
  1184  017935  00                 	db	0
  1185  017936  00                 	db	0
  1186  017937  00                 	db	0
  1187  017938  00                 	db	0
  1188  017939  00                 	db	0
  1189  01793A  00                 	db	0
  1190  01793B  00                 	db	0
  1191  01793C  00                 	db	0
  1192  01793D  00                 	db	0
  1193  01793E  00                 	db	0
  1194  01793F  00                 	db	0
  1195  017940  00                 	db	0
  1196  017941  00                 	db	0
  1197  017942  00                 	db	0
  1198  017943  00                 	db	0
  1199  017944  00                 	db	0
  1200  017945  00                 	db	0
  1201  017946  00                 	db	0
  1202  017947  00                 	db	0
  1203  017948  00                 	db	0
  1204  017949  00                 	db	0
  1205  01794A  00                 	db	0
  1206  01794B  00                 	db	0
  1207  01794C  00                 	db	0
  1208  01794D  00                 	db	0
  1209  01794E  00                 	db	0
  1210  01794F  00                 	db	0
  1211  017950  00                 	db	0
  1212  017951  00                 	db	0
  1213  017952  00                 	db	0
  1214  017953  00                 	db	0
  1215  017954  00                 	db	0
  1216  017955  00                 	db	0
  1217  017956  00                 	db	0
  1218  017957  00                 	db	0
  1219  017958  00                 	db	0
  1220  017959  00                 	db	0
  1221  01795A  00                 	db	0
  1222  01795B  00                 	db	0
  1223                           
  1224                           	psect	idataBANK0
  1225  01A968                     __pidataBANK0:
  1226                           	opt callstack 0
  1227                           
  1228                           ;initializer for _R
  1229  01A968  0000               	dw	0
  1230  01A96A  0000               	dw	0
  1231  01A96C  0000               	dw	0
  1232  01A96E  0000               	dw	0
  1233  01A970  0000               	dw	0
  1234  01A972  0000               	dw	0
  1235  01A974  0000               	dw	0
  1236  01A976  0000               	dw	0
  1237  01A978  0000               	dw	0
  1238  01A97A  0000               	dw	0
  1239  01A97C  0000               	dw	0
  1240  01A97E  0000               	dw	0
  1241  01A980  0000               	dw	0
  1242  01A982  0000               	dw	0
  1243  01A984  0000               	dw	0
  1244  01A986  0000               	dw	0
  1245  01A988  0F67               	dw	3943
  1246  01A98A  0F8F               	dw	3983
  1247  01A98C  00                 	db	0
  1248  01A98D  0000               	dw	0
  1249  01A98F  00                 	db	0
  1250                           
  1251                           ;initializer for stoa@F1166
  1252  01A990  28                 	db	40
  1253  01A991  6E                 	db	110
  1254  01A992  75                 	db	117
  1255  01A993  6C                 	db	108
  1256  01A994  6C                 	db	108
  1257  01A995  29                 	db	41
  1258  01A996  00                 	db	0
  1259                           
  1260                           ;initializer for _H
  1261  01A997  00                 	db	0
  1262  01A998  00                 	db	0
  1263  01A999  01                 	db	1
  1264  01A99A  00                 	db	0
  1265  01A99B  01                 	db	1
  1266  01A99C  00                 	db	0
  1267  01A99D  00                 	db	0
  1268                           
  1269                           	psect	idataBANK1
  1270  0191BC                     __pidataBANK1:
  1271                           	opt callstack 0
  1272                           
  1273                           ;initializer for _C
  1274  0191BC  0000               	dw	0
  1275  0191BE  0000               	dw	0
  1276  0191C0  0000               	dw	0
  1277  0191C2  0000               	dw	0
  1278  0191C4  0000               	dw	0
  1279  0191C6  0000               	dw	0
  1280  0191C8  0000               	dw	0
  1281  0191CA  0000               	dw	0
  1282  0191CC  0000               	dw	0
  1283  0191CE  0000               	dw	0
  1284  0191D0  0000               	dw	0
  1285  0191D2  0000               	dw	0
  1286  0191D4  0000               	dw	0
  1287  0191D6  0000               	dw	0
  1288  0191D8  0000               	dw	0
  1289  0191DA  0000               	dw	0
  1290  0191DC  0000               	dw	0
  1291  0191DE  0000               	dw	0
  1292  0191E0  0000               	dw	0
  1293  0191E2  0000               	dw	0
  1294  0191E4  0000               	dw	0
  1295  0191E6  0000               	dw	0
  1296  0191E8  0000               	dw	0
  1297  0191EA  0000               	dw	0
  1298  0191EC  0000               	dw	0
  1299  0191EE  0000               	dw	0
  1300  0191F0  0000               	dw	0
  1301  0191F2  0000               	dw	0
  1302  0191F4  0000               	dw	0
  1303  0191F6  0000               	dw	0
  1304  0191F8  0000               	dw	0
  1305  0191FA  0000               	dw	0
  1306  0191FC  0000               	dw	0
  1307  0191FE  0000               	dw	0
  1308  019200  0000               	dw	0
  1309  019202  0000               	dw	0
  1310  019204  0000               	dw	0
  1311  019206  0000               	dw	0
  1312  019208  0000               	dw	0
  1313  01920A  0000               	dw	0
  1314  01920C  0000               	dw	0
  1315  01920E  0000               	dw	0
  1316  019210  0000               	dw	0
  1317  019212  0000               	dw	0
  1318  019214  0000               	dw	0
  1319  019216  0000               	dw	0
  1320  019218  0000               	dw	0
  1321  01921A  0000               	dw	0
  1322  01921C  0000               	dw	0
  1323  01921E  0000               	dw	0
  1324  019220  0000               	dw	0
  1325  019222  0000               	dw	0
  1326  019224  0000               	dw	0
  1327  019226  0000               	dw	0
  1328  019228  0000               	dw	0
  1329  01922A  0000               	dw	0
  1330  01922C  0000               	dw	0
  1331  01922E  0000               	dw	0
  1332  019230  0000               	dw	0
  1333  019232  0000               	dw	0
  1334  019234  0000               	dw	0
  1335  019236  0000               	dw	0
  1336  019238  0000               	dw	0
  1337  01923A  0000               	dw	0
  1338  01923C  0000               	dw	0
  1339  01923E  0000               	dw	0
  1340  019240  0000               	dw	0
  1341  019242  0000               	dw	0
  1342  019244  0000               	dw	0
  1343  019246  42FA               	dw	17146
  1344  019248  00                 	db	0
  1345  019249  00                 	db	0
  1346  01924A  00                 	db	0
  1347  01924B  00                 	db	0
  1348  01924C  00                 	db	0
  1349  01924D  00                 	db	0
  1350  01924E  00                 	db	0
  1351  01924F  00                 	db	0
  1352  019250  00                 	db	0
  1353  019251  00                 	db	0
  1354  019252  00                 	db	0
  1355  019253  00                 	db	0
  1356  019254  00                 	db	0
  1357  019255  00                 	db	0
  1358  019256  00                 	db	0
  1359  019257  00                 	db	0
  1360  019258  00                 	db	0
  1361  019259  00                 	db	0
  1362  01925A  00                 	db	0
  1363  01925B  00                 	db	0
  1364  01925C  00                 	db	0
  1365  01925D  00                 	db	0
  1366  01925E  00                 	db	0
  1367  01925F  00                 	db	0
  1368  019260  00                 	db	0
  1369  019261  00                 	db	0
  1370  019262  00                 	db	0
  1371  019263  00                 	db	0
  1372  019264  00                 	db	0
  1373  019265  00                 	db	0
  1374  019266  00                 	db	0
  1375  019267  00                 	db	0
  1376  019268  00                 	db	0
  1377  019269  00                 	db	0
  1378  01926A  00                 	db	0
  1379  01926B  00                 	db	0
  1380  01926C  00                 	db	0
  1381  01926D  00                 	db	0
  1382  01926E  00                 	db	0
  1383  01926F  00                 	db	0
  1384  019270  00                 	db	0
  1385  019271  00                 	db	0
  1386  019272  00                 	db	0
  1387  019273  00                 	db	0
  1388  019274  00                 	db	0
  1389  019275  00                 	db	0
  1390  019276  00                 	db	0
  1391  019277  00                 	db	0
  1392  019278  00                 	db	0
  1393  019279  00                 	db	0
  1394  01927A  00                 	db	0
  1395  01927B  00                 	db	0
  1396  01927C  00                 	db	0
  1397  01927D  00                 	db	0
  1398  01927E  00                 	db	0
  1399  01927F  00                 	db	0
  1400  019280  00                 	db	0
  1401  019281  00                 	db	0
  1402  019282  00                 	db	0
  1403  019283  00                 	db	0
  1404  019284  00                 	db	0
  1405  019285  00                 	db	0
  1406  019286  00                 	db	0
  1407  019287  00                 	db	0
  1408  019288  00                 	db	0
  1409  019289  00                 	db	0
  1410  01928A  00                 	db	0
  1411  01928B  00                 	db	0
  1412  01928C  00                 	db	0
  1413  01928D  00                 	db	0
  1414  01928E  00                 	db	0
  1415  01928F  00                 	db	0
  1416  019290  00                 	db	0
  1417  019291  00                 	db	0
  1418  019292  00                 	db	0
  1419  019293  00                 	db	0
  1420  019294  00                 	db	0
  1421  019295  00                 	db	0
  1422  019296  00                 	db	0
  1423  019297  00                 	db	0
  1424  019298  00                 	db	0
  1425  019299  00                 	db	0
  1426  01929A  00                 	db	0
  1427  01929B  00                 	db	0
  1428  01929C  00                 	db	0
  1429  01929D  00                 	db	0
  1430  01929E  00                 	db	0
  1431  01929F  00                 	db	0
  1432  0192A0  00                 	db	0
  1433  0192A1  00                 	db	0
  1434  0192A2  00                 	db	0
  1435  0192A3  00                 	db	0
  1436  0192A4  00                 	db	0
  1437  0192A5  00                 	db	0
  1438  0192A6  00                 	db	0
  1439  0192A7  00                 	db	0
  1440  0192A8  00                 	db	0
  1441  0192A9  00                 	db	0
  1442  0192AA  00                 	db	0
  1443  0192AB  00                 	db	0
  1444  0192AC  00                 	db	0
  1445  0192AD  00                 	db	0
  1446  0192AE  00                 	db	0
  1447                           
  1448                           	psect	idataBANK2
  1449  019618                     __pidataBANK2:
  1450                           	opt callstack 0
  1451                           
  1452                           ;initializer for _V
  1453  019618  00                 	db	0
  1454  019619  00                 	db	0
  1455  01961A  00                 	db	0
  1456  01961B  00                 	db	0
  1457  01961C  00                 	db	0
  1458  01961D  00                 	db	0
  1459  01961E  00                 	db	0
  1460  01961F  00                 	db	0
  1461  019620  00                 	db	0
  1462  019621  00                 	db	0
  1463  019622  00                 	db	0
  1464  019623  00                 	db	0
  1465  019624  00                 	db	0
  1466  019625  00                 	db	0
  1467  019626  00                 	db	0
  1468  019627  00                 	db	0
  1469  019628  00                 	db	0
  1470  019629  00                 	db	0
  1471  01962A  00                 	db	0
  1472  01962B  00                 	db	0
  1473  01962C  00                 	db	0
  1474  01962D  00                 	db	0
  1475  01962E  00                 	db	0
  1476  01962F  00                 	db	0
  1477  019630  00                 	db	0
  1478  019631  00                 	db	0
  1479  019632  00                 	db	0
  1480  019633  00                 	db	0
  1481  019634  00                 	db	0
  1482  019635  00                 	db	0
  1483  019636  00                 	db	0
  1484  019637  00                 	db	0
  1485  019638  00                 	db	0
  1486  019639  00                 	db	0
  1487  01963A  00                 	db	0
  1488  01963B  00                 	db	0
  1489  01963C  00                 	db	0
  1490  01963D  00                 	db	0
  1491  01963E  00                 	db	0
  1492  01963F  00                 	db	0
  1493  019640  00                 	db	0
  1494  019641  00                 	db	0
  1495  019642  00                 	db	0
  1496  019643  00                 	db	0
  1497  019644  00                 	db	0
  1498  019645  00                 	db	0
  1499  019646  00                 	db	0
  1500  019647  00                 	db	0
  1501  019648  00                 	db	0
  1502  019649  00                 	db	0
  1503  01964A  00                 	db	0
  1504  01964B  00                 	db	0
  1505  01964C  00                 	db	0
  1506  01964D  00                 	db	0
  1507  01964E  00                 	db	0
  1508  01964F  00                 	db	0
  1509  019650  00                 	db	0
  1510  019651  00                 	db	0
  1511  019652  00                 	db	0
  1512  019653  00                 	db	0
  1513  019654  00                 	db	0
  1514  019655  00                 	db	0
  1515  019656  00                 	db	0
  1516  019657  00                 	db	0
  1517  019658  00                 	db	0
  1518  019659  00                 	db	0
  1519  01965A  00                 	db	0
  1520  01965B  00                 	db	0
  1521  01965C  00                 	db	0
  1522  01965D  00                 	db	0
  1523  01965E  00                 	db	0
  1524  01965F  00                 	db	0
  1525  019660  00                 	db	0
  1526  019661  00                 	db	0
  1527  019662  00                 	db	0
  1528  019663  00                 	db	0
  1529  019664  00                 	db	0
  1530  019665  00                 	db	0
  1531  019666  00                 	db	0
  1532  019667  00                 	db	0
  1533  019668  00                 	db	0
  1534  019669  00                 	db	0
  1535  01966A  00                 	db	0
  1536  01966B  00                 	db	0
  1537  01966C  00                 	db	0
  1538  01966D  00                 	db	0
  1539  01966E  00                 	db	0
  1540  01966F  00                 	db	0
  1541  019670  00                 	db	0
  1542  019671  00                 	db	0
  1543  019672  00                 	db	0
  1544  019673  00                 	db	0
  1545  019674  00                 	db	0
  1546  019675  00                 	db	0
  1547  019676  00                 	db	0
  1548  019677  00                 	db	0
  1549  019678  00                 	db	0
  1550  019679  00                 	db	0
  1551  01967A  00                 	db	0
  1552  01967B  00                 	db	0
  1553  01967C  00                 	db	0
  1554  01967D  00                 	db	0
  1555  01967E  00                 	db	0
  1556  01967F  00                 	db	0
  1557  019680  00                 	db	0
  1558  019681  00                 	db	0
  1559  019682  00                 	db	0
  1560  019683  00                 	db	0
  1561  019684  00                 	db	0
  1562  019685  00                 	db	0
  1563  019686  00                 	db	0
  1564  019687  00                 	db	0
  1565  019688  00                 	db	0
  1566  019689  00                 	db	0
  1567  01968A  00                 	db	0
  1568  01968B  00                 	db	0
  1569  01968C  00                 	db	0
  1570  01968D  00                 	db	0
  1571  01968E  00                 	db	0
  1572  01968F  00                 	db	0
  1573  019690  00                 	db	0
  1574  019691  00                 	db	0
  1575  019692  00                 	db	0
  1576  019693  00                 	db	0
  1577  019694  00                 	db	0
  1578  019695  00                 	db	0
  1579  019696  00                 	db	0
  1580  019697  00                 	db	0
  1581  019698  00                 	db	0
  1582  019699  0000               	dw	0
  1583  01969B  0000               	dw	0
  1584  01969D  0000               	dw	0
  1585  01969F  0000               	dw	0
  1586  0196A1  00                 	db	0
  1587  0196A2  00                 	db	0
  1588  0196A3  00                 	db	0
  1589  0196A4  00                 	db	0
  1590  0196A5  00                 	db	0
  1591  0196A6  00                 	db	0
  1592  0196A7  0000               	dw	0
  1593  0196A9  0000               	dw	0
  1594  0196AB  0000               	dw	0
  1595  0196AD  0000               	dw	0
  1596  0196AF  0000               	dw	0
  1597  0196B1  0000               	dw	0
  1598  0196B3  00                 	db	0
  1599  0196B4  00                 	db	0
  1600  0196B5  00                 	db	0
  1601  0196B6  00                 	db	0
  1602  0196B7  00                 	db	0
  1603  0196B8  00                 	db	0
  1604  0196B9  00                 	db	0
  1605  0196BA  00                 	db	0
  1606  0196BB  00                 	db	0
  1607  0196BC  00                 	db	0
  1608  0196BD  0000               	dw	0
  1609  0196BF  0000               	dw	0
  1610  0196C1  2D                 	db	45
  1611  0196C2  00                 	db	0
  1612  0196C3  00                 	db	0
  1613  0196C4  0000               	dw	0
  1614  0196C6  0000               	dw	0
  1615  0196C8  0000               	dw	0
  1616  0196CA  0000               	dw	0
  1617  0196CC  0000               	dw	0
  1618  0196CE  0000               	dw	0
  1619  0196D0  0000               	dw	0
  1620  0196D2  0000               	dw	0
  1621                           
  1622                           	psect	mediumconst
  1623  00FB2E                     __pmediumconst:
  1624                           	opt callstack 0
  1625  00FB2E  00                 	db	0
  1626  00FB2F                     _BVSOC_TABLE:
  1627                           	opt callstack 0
  1628  00FB2F  59D8               	dw	23000
  1629  00FB31  0000               	dw	0
  1630  00FB33  0005               	dw	5
  1631  00FB35  0000               	dw	0
  1632  00FB37  5B68               	dw	23400
  1633  00FB39  0000               	dw	0
  1634  00FB3B  000A               	dw	10
  1635  00FB3D  0000               	dw	0
  1636  00FB3F  5C30               	dw	23600
  1637  00FB41  0000               	dw	0
  1638  00FB43  0014               	dw	20
  1639  00FB45  0000               	dw	0
  1640  00FB47  5E38               	dw	24120
  1641  00FB49  0000               	dw	0
  1642  00FB4B  0019               	dw	25
  1643  00FB4D  0000               	dw	0
  1644  00FB4F  5E88               	dw	24200
  1645  00FB51  0000               	dw	0
  1646  00FB53  001E               	dw	30
  1647  00FB55  0000               	dw	0
  1648  00FB57  5F78               	dw	24440
  1649  00FB59  0000               	dw	0
  1650  00FB5B  0028               	dw	40
  1651  00FB5D  0000               	dw	0
  1652  00FB5F  5FDC               	dw	24540
  1653  00FB61  0000               	dw	0
  1654  00FB63  002D               	dw	45
  1655  00FB65  0000               	dw	0
  1656  00FB67  6018               	dw	24600
  1657  00FB69  0000               	dw	0
  1658  00FB6B  0032               	dw	50
  1659  00FB6D  0000               	dw	0
  1660  00FB6F  6046               	dw	24646
  1661  00FB71  0000               	dw	0
  1662  00FB73  0035               	dw	53
  1663  00FB75  0000               	dw	0
  1664  00FB77  607C               	dw	24700
  1665  00FB79  0000               	dw	0
  1666  00FB7B  0037               	dw	55
  1667  00FB7D  0000               	dw	0
  1668  00FB7F  60AE               	dw	24750
  1669  00FB81  0000               	dw	0
  1670  00FB83  0039               	dw	57
  1671  00FB85  0000               	dw	0
  1672  00FB87  60E0               	dw	24800
  1673  00FB89  0000               	dw	0
  1674  00FB8B  003C               	dw	60
  1675  00FB8D  0000               	dw	0
  1676  00FB8F  6112               	dw	24850
  1677  00FB91  0000               	dw	0
  1678  00FB93  003F               	dw	63
  1679  00FB95  0000               	dw	0
  1680  00FB97  615D               	dw	24925
  1681  00FB99  0000               	dw	0
  1682  00FB9B  0043               	dw	67
  1683  00FB9D  0000               	dw	0
  1684  00FB9F  61A8               	dw	25000
  1685  00FBA1  0000               	dw	0
  1686  00FBA3  0046               	dw	70
  1687  00FBA5  0000               	dw	0
  1688  00FBA7  61BC               	dw	25020
  1689  00FBA9  0000               	dw	0
  1690  00FBAB  0048               	dw	72
  1691  00FBAD  0000               	dw	0
  1692  00FBAF  61D0               	dw	25040
  1693  00FBB1  0000               	dw	0
  1694  00FBB3  004B               	dw	75
  1695  00FBB5  0000               	dw	0
  1696  00FBB7  61DA               	dw	25050
  1697  00FBB9  0000               	dw	0
  1698  00FBBB  0050               	dw	80
  1699  00FBBD  0000               	dw	0
  1700  00FBBF  61E4               	dw	25060
  1701  00FBC1  0000               	dw	0
  1702  00FBC3  0055               	dw	85
  1703  00FBC5  0000               	dw	0
  1704  00FBC7  61F8               	dw	25080
  1705  00FBC9  0000               	dw	0
  1706  00FBCB  005A               	dw	90
  1707  00FBCD  0000               	dw	0
  1708  00FBCF  6208               	dw	25096
  1709  00FBD1  0000               	dw	0
  1710  00FBD3  005C               	dw	92
  1711  00FBD5  0000               	dw	0
  1712  00FBD7  6222               	dw	25122
  1713  00FBD9  0000               	dw	0
  1714  00FBDB  005D               	dw	93
  1715  00FBDD  0000               	dw	0
  1716  00FBDF  6234               	dw	25140
  1717  00FBE1  0000               	dw	0
  1718  00FBE3  005F               	dw	95
  1719  00FBE5  0000               	dw	0
  1720  00FBE7  6248               	dw	25160
  1721  00FBE9  0000               	dw	0
  1722  00FBEB  0061               	dw	97
  1723  00FBED  0000               	dw	0
  1724  00FBEF  625C               	dw	25180
  1725  00FBF1  0000               	dw	0
  1726  00FBF3  0064               	dw	100
  1727  00FBF5  0000               	dw	0
  1728  00FBF7  6784               	dw	26500
  1729  00FBF9  0000               	dw	0
  1730  00FBFB  0062               	dw	98
  1731  00FBFD  0000               	dw	0
  1732  00FBFF                     __end_of_BVSOC_TABLE:
  1733                           	opt callstack 0
  1734  00FBFF                     _T:
  1735                           	opt callstack 0
  1736  00FBFF  63                 	db	99
  1737  00FC00  6F                 	db	111
  1738  00FC01  6D                 	db	109
  1739  00FC02  6D                 	db	109
  1740  00FC03  61                 	db	97
  1741  00FC04  6E                 	db	110
  1742  00FC05  64                 	db	100
  1743  00FC06  73                 	db	115
  1744  00FC07  20                 	db	32
  1745  00FC08  31                 	db	49
  1746  00FC09  00                 	db	0
  1747  00FC0A  00                 	db	0
  1748  00FC0B  00                 	db	0
  1749  00FC0C  00                 	db	0
  1750  00FC0D  00                 	db	0
  1751  00FC0E  00                 	db	0
  1752  00FC0F  00                 	db	0
  1753  00FC10  00                 	db	0
  1754  00FC11  64                 	db	100
  1755  00FC12  69                 	db	105
  1756  00FC13  73                 	db	115
  1757  00FC14  70                 	db	112
  1758  00FC15  6C                 	db	108
  1759  00FC16  61                 	db	97
  1760  00FC17  79                 	db	121
  1761  00FC18  73                 	db	115
  1762  00FC19  20                 	db	32
  1763  00FC1A  31                 	db	49
  1764  00FC1B  00                 	db	0
  1765  00FC1C  00                 	db	0
  1766  00FC1D  00                 	db	0
  1767  00FC1E  00                 	db	0
  1768  00FC1F  00                 	db	0
  1769  00FC20  00                 	db	0
  1770  00FC21  00                 	db	0
  1771  00FC22  00                 	db	0
  1772  00FC23  63                 	db	99
  1773  00FC24  6F                 	db	111
  1774  00FC25  6D                 	db	109
  1775  00FC26  6D                 	db	109
  1776  00FC27  61                 	db	97
  1777  00FC28  6E                 	db	110
  1778  00FC29  64                 	db	100
  1779  00FC2A  73                 	db	115
  1780  00FC2B  20                 	db	32
  1781  00FC2C  32                 	db	50
  1782  00FC2D  00                 	db	0
  1783  00FC2E  00                 	db	0
  1784  00FC2F  00                 	db	0
  1785  00FC30  00                 	db	0
  1786  00FC31  00                 	db	0
  1787  00FC32  00                 	db	0
  1788  00FC33  00                 	db	0
  1789  00FC34  00                 	db	0
  1790  00FC35  64                 	db	100
  1791  00FC36  69                 	db	105
  1792  00FC37  73                 	db	115
  1793  00FC38  70                 	db	112
  1794  00FC39  6C                 	db	108
  1795  00FC3A  61                 	db	97
  1796  00FC3B  79                 	db	121
  1797  00FC3C  73                 	db	115
  1798  00FC3D  20                 	db	32
  1799  00FC3E  32                 	db	50
  1800  00FC3F  00                 	db	0
  1801  00FC40  00                 	db	0
  1802  00FC41  00                 	db	0
  1803  00FC42  00                 	db	0
  1804  00FC43  00                 	db	0
  1805  00FC44  00                 	db	0
  1806  00FC45  00                 	db	0
  1807  00FC46  00                 	db	0
  1808  00FC47  63                 	db	99
  1809  00FC48  6F                 	db	111
  1810  00FC49  6D                 	db	109
  1811  00FC4A  6D                 	db	109
  1812  00FC4B  61                 	db	97
  1813  00FC4C  6E                 	db	110
  1814  00FC4D  64                 	db	100
  1815  00FC4E  73                 	db	115
  1816  00FC4F  20                 	db	32
  1817  00FC50  33                 	db	51
  1818  00FC51  00                 	db	0
  1819  00FC52  00                 	db	0
  1820  00FC53  00                 	db	0
  1821  00FC54  00                 	db	0
  1822  00FC55  00                 	db	0
  1823  00FC56  00                 	db	0
  1824  00FC57  00                 	db	0
  1825  00FC58  00                 	db	0
  1826  00FC59  64                 	db	100
  1827  00FC5A  69                 	db	105
  1828  00FC5B  73                 	db	115
  1829  00FC5C  70                 	db	112
  1830  00FC5D  6C                 	db	108
  1831  00FC5E  61                 	db	97
  1832  00FC5F  79                 	db	121
  1833  00FC60  73                 	db	115
  1834  00FC61  20                 	db	32
  1835  00FC62  33                 	db	51
  1836  00FC63  00                 	db	0
  1837  00FC64  00                 	db	0
  1838  00FC65  00                 	db	0
  1839  00FC66  00                 	db	0
  1840  00FC67  00                 	db	0
  1841  00FC68  00                 	db	0
  1842  00FC69  00                 	db	0
  1843  00FC6A  00                 	db	0
  1844  00FC6B  63                 	db	99
  1845  00FC6C  6F                 	db	111
  1846  00FC6D  6D                 	db	109
  1847  00FC6E  6D                 	db	109
  1848  00FC6F  61                 	db	97
  1849  00FC70  6E                 	db	110
  1850  00FC71  64                 	db	100
  1851  00FC72  73                 	db	115
  1852  00FC73  20                 	db	32
  1853  00FC74  34                 	db	52
  1854  00FC75  00                 	db	0
  1855  00FC76  00                 	db	0
  1856  00FC77  00                 	db	0
  1857  00FC78  00                 	db	0
  1858  00FC79  00                 	db	0
  1859  00FC7A  00                 	db	0
  1860  00FC7B  00                 	db	0
  1861  00FC7C  00                 	db	0
  1862  00FC7D  64                 	db	100
  1863  00FC7E  69                 	db	105
  1864  00FC7F  73                 	db	115
  1865  00FC80  70                 	db	112
  1866  00FC81  6C                 	db	108
  1867  00FC82  61                 	db	97
  1868  00FC83  79                 	db	121
  1869  00FC84  73                 	db	115
  1870  00FC85  20                 	db	32
  1871  00FC86  34                 	db	52
  1872  00FC87  00                 	db	0
  1873  00FC88  00                 	db	0
  1874  00FC89  00                 	db	0
  1875  00FC8A  00                 	db	0
  1876  00FC8B  00                 	db	0
  1877  00FC8C  00                 	db	0
  1878  00FC8D  00                 	db	0
  1879  00FC8E  00                 	db	0
  1880  00FC8F                     __end_of_T:
  1881                           	opt callstack 0
  1882  00FC8F                     _spin:
  1883                           	opt callstack 0
  1884  00FC8F  7C                 	db	124
  1885  00FC90  7C                 	db	124
  1886  00FC91  2F                 	db	47
  1887  00FC92  2F                 	db	47
  1888  00FC93  2D                 	db	45
  1889  00FC94  2D                 	db	45
  1890  00FC95  00                 	db	0
  1891  00FC96  00                 	db	0
  1892  00FC97  00                 	db	0
  1893  00FC98  00                 	db	0
  1894  00FC99  00                 	db	0
  1895  00FC9A  00                 	db	0
  1896  00FC9B  00                 	db	0
  1897  00FC9C  00                 	db	0
  1898  00FC9D  00                 	db	0
  1899  00FC9E  00                 	db	0
  1900  00FC9F  00                 	db	0
  1901  00FCA0  00                 	db	0
  1902  00FCA1  00                 	db	0
  1903  00FCA2  00                 	db	0
  1904  00FCA3  7C                 	db	124
  1905  00FCA4  7C                 	db	124
  1906  00FCA5  2F                 	db	47
  1907  00FCA6  2F                 	db	47
  1908  00FCA7  2D                 	db	45
  1909  00FCA8  2D                 	db	45
  1910  00FCA9  5C                 	db	92
  1911  00FCAA  5C                 	db	92
  1912  00FCAB  00                 	db	0
  1913  00FCAC  00                 	db	0
  1914  00FCAD  00                 	db	0
  1915  00FCAE  00                 	db	0
  1916  00FCAF  00                 	db	0
  1917  00FCB0  00                 	db	0
  1918  00FCB1  00                 	db	0
  1919  00FCB2  00                 	db	0
  1920  00FCB3  00                 	db	0
  1921  00FCB4  00                 	db	0
  1922  00FCB5  00                 	db	0
  1923  00FCB6  00                 	db	0
  1924  00FCB7  4F                 	db	79
  1925  00FCB8  4F                 	db	79
  1926  00FCB9  4F                 	db	79
  1927  00FCBA  4F                 	db	79
  1928  00FCBB  4F                 	db	79
  1929  00FCBC  4F                 	db	79
  1930  00FCBD  2D                 	db	45
  1931  00FCBE  2D                 	db	45
  1932  00FCBF  5F                 	db	95
  1933  00FCC0  5F                 	db	95
  1934  00FCC1  2D                 	db	45
  1935  00FCC2  00                 	db	0
  1936  00FCC3  00                 	db	0
  1937  00FCC4  00                 	db	0
  1938  00FCC5  00                 	db	0
  1939  00FCC6  00                 	db	0
  1940  00FCC7  00                 	db	0
  1941  00FCC8  00                 	db	0
  1942  00FCC9  00                 	db	0
  1943  00FCCA  00                 	db	0
  1944  00FCCB  76                 	db	118
  1945  00FCCC  76                 	db	118
  1946  00FCCD  3C                 	db	60
  1947  00FCCE  3C                 	db	60
  1948  00FCCF  5E                 	db	94
  1949  00FCD0  5E                 	db	94
  1950  00FCD1  3E                 	db	62
  1951  00FCD2  3E                 	db	62
  1952  00FCD3  00                 	db	0
  1953  00FCD4  00                 	db	0
  1954  00FCD5  00                 	db	0
  1955  00FCD6  00                 	db	0
  1956  00FCD7  00                 	db	0
  1957  00FCD8  00                 	db	0
  1958  00FCD9  00                 	db	0
  1959  00FCDA  00                 	db	0
  1960  00FCDB  00                 	db	0
  1961  00FCDC  00                 	db	0
  1962  00FCDD  00                 	db	0
  1963  00FCDE  00                 	db	0
  1964  00FCDF  2E                 	db	46
  1965  00FCE0  2E                 	db	46
  1966  00FCE1  2A                 	db	42
  1967  00FCE2  2A                 	db	42
  1968  00FCE3  78                 	db	120
  1969  00FCE4  23                 	db	35
  1970  00FCE5  78                 	db	120
  1971  00FCE6  23                 	db	35
  1972  00FCE7  58                 	db	88
  1973  00FCE8  58                 	db	88
  1974  00FCE9  7C                 	db	124
  1975  00FCEA  7C                 	db	124
  1976  00FCEB  2D                 	db	45
  1977  00FCEC  2D                 	db	45
  1978  00FCED  00                 	db	0
  1979  00FCEE  00                 	db	0
  1980  00FCEF  00                 	db	0
  1981  00FCF0  00                 	db	0
  1982  00FCF1  00                 	db	0
  1983  00FCF2  00                 	db	0
  1984  00FCF3  2E                 	db	46
  1985  00FCF4  2E                 	db	46
  1986  00FCF5  6F                 	db	111
  1987  00FCF6  6F                 	db	111
  1988  00FCF7  4F                 	db	79
  1989  00FCF8  4F                 	db	79
  1990  00FCF9  6F                 	db	111
  1991  00FCFA  6F                 	db	111
  1992  00FCFB  00                 	db	0
  1993  00FCFC  00                 	db	0
  1994  00FCFD  00                 	db	0
  1995  00FCFE  00                 	db	0
  1996  00FCFF  00                 	db	0
  1997  00FD00  00                 	db	0
  1998  00FD01  00                 	db	0
  1999  00FD02  00                 	db	0
  2000  00FD03  00                 	db	0
  2001  00FD04  00                 	db	0
  2002  00FD05  00                 	db	0
  2003  00FD06  00                 	db	0
  2004  00FD07                     __end_of_spin:
  2005                           	opt callstack 0
  2006  00FD07  0000               	dw	0
  2007  00FD09  3F80               	dw	16256
  2008  00FD0B  0000               	dw	0
  2009  00FD0D  3FC0               	dw	16320
  2010  00FD0F                     __end_of_bp:
  2011                           	opt callstack 0
  2012  00FD0F  AA00               	dw	43520
  2013  00FD11  3FB8               	dw	16312
  2014  00FD13                     __end_of_ivln2_h:
  2015                           	opt callstack 0
  2016  00FD13  23C6               	dw	9158
  2017  00FD15  B8F6               	dw	47350
  2018  00FD17                     __end_of_cp_l:
  2019                           	opt callstack 0
  2020  00FD17  4000               	dw	16384
  2021  00FD19  3F76               	dw	16246
  2022  00FD1B                     __end_of_cp_h:
  2023                           	opt callstack 0
  2024  0000                     _IVTADL	set	14493
  2025  0000                     _IVTADH	set	14494
  2026  0000                     _IVTADU	set	14495
  2027  0000                     _PIR6bits	set	14758
  2028  0000                     _PIR4bits	set	14756
  2029  0000                     _PIE8bits	set	14744
  2030  0000                     _PIR8bits	set	14760
  2031  0000                     _SCANPR	set	14839
  2032  0000                     _DMA2PR	set	14836
  2033  0000                     _DMA1PR	set	14835
  2034  0000                     _MAINPR	set	14834
  2035  0000                     _ISRPR	set	14833
  2036  0000                     _PIE2bits	set	14738
  2037  0000                     _PIR2bits	set	14754
  2038  0000                     _PIE9bits	set	14745
  2039  0000                     _PIR9bits	set	14761
  2040  0000                     _PIE6bits	set	14742
  2041  0000                     _PIE3bits	set	14739
  2042  0000                     _PMD7	set	14791
  2043  0000                     _PMD6	set	14790
  2044  0000                     _PMD5	set	14789
  2045  0000                     _PMD4	set	14788
  2046  0000                     _PMD3	set	14787
  2047  0000                     _PMD2	set	14786
  2048  0000                     _PMD1	set	14785
  2049  0000                     _PMD0	set	14784
  2050  0000                     _OSCTUNE	set	14814
  2051  0000                     _OSCFRQ	set	14815
  2052  0000                     _OSCEN	set	14813
  2053  0000                     _OSCCON3	set	14811
  2054  0000                     _OSCCON1	set	14809
  2055  0000                     _IPR8bits	set	14728
  2056  0000                     _IPR9bits	set	14729
  2057  0000                     _IPR5bits	set	14725
  2058  0000                     _IPR1bits	set	14721
  2059  0000                     _IPR3bits	set	14723
  2060  0000                     _IPR6bits	set	14726
  2061  0000                     _IPR2bits	set	14722
  2062  0000                     _PIE5bits	set	14741
  2063  0000                     _PIE1bits	set	14737
  2064  0000                     _PIR5bits	set	14757
  2065  0000                     _PIR1bits	set	14753
  2066  0000                     _PLLR	set	118496
  2067  0000                     _SPI1SDIPPS	set	15071
  2068  0000                     _U1RXPPS	set	15077
  2069  0000                     _RC6PPS	set	14870
  2070  0000                     _RC5PPS	set	14869
  2071  0000                     _INT1PPS	set	15041
  2072  0000                     _RD1PPS	set	14873
  2073  0000                     _INT0PPS	set	15040
  2074  0000                     _RC3PPS	set	14867
  2075  0000                     _RB6PPS	set	14862
  2076  0000                     _SPI1SCKPPS	set	15070
  2077  0000                     _U2RXPPS	set	15080
  2078  0000                     _SLRCONF	set	14995
  2079  0000                     _SLRCONE	set	14979
  2080  0000                     _SLRCOND	set	14963
  2081  0000                     _SLRCONC	set	14947
  2082  0000                     _SLRCONB	set	14931
  2083  0000                     _SLRCONA	set	14915
  2084  0000                     _ODCOND	set	14962
  2085  0000                     _ODCONC	set	14946
  2086  0000                     _ODCONB	set	14930
  2087  0000                     _ODCONA	set	14914
  2088  0000                     _ODCONF	set	14994
  2089  0000                     _ODCONE	set	14978
  2090  0000                     _WPUC	set	14945
  2091  0000                     _WPUA	set	14913
  2092  0000                     _WPUB	set	14929
  2093  0000                     _WPUE	set	14977
  2094  0000                     _WPUF	set	14993
  2095  0000                     _WPUD	set	14961
  2096  0000                     _ANSELA	set	14912
  2097  0000                     _ANSELF	set	14992
  2098  0000                     _ANSELE	set	14976
  2099  0000                     _ANSELB	set	14928
  2100  0000                     _ANSELC	set	14944
  2101  0000                     _ANSELD	set	14960
  2102  0000                     _DMA2SSA	set	15321
  2103  0000                     _DMA1SSA	set	15353
  2104  0000                     _DMA2DSZ	set	15310
  2105  0000                     _DMA2SSZ	set	15319
  2106  0000                     _DMA2DSA	set	15312
  2107  0000                     _DMA1DSZ	set	15342
  2108  0000                     _DMA1SSZ	set	15351
  2109  0000                     _DMA1DSA	set	15344
  2110  0000                     _DMA2CON0bits	set	15324
  2111  0000                     _DMA2CON1bits	set	15325
  2112  0000                     _DMA1CON0bits	set	15356
  2113  0000                     _DMA1CON1bits	set	15357
  2114  0000                     _DMA2CON0	set	15324
  2115  0000                     _DMA2AIRQ	set	15326
  2116  0000                     _DMA2SIRQ	set	15327
  2117  0000                     _DMA2CON1	set	15325
  2118  0000                     _DMA1CON0	set	15356
  2119  0000                     _DMA1AIRQ	set	15358
  2120  0000                     _DMA1SIRQ	set	15359
  2121  0000                     _DMA1CON1	set	15357
  2122  0000                     _CLKRCON	set	15589
  2123  0000                     _CLKRCLK	set	15590
  2124  0000                     _SPI1INTFbits	set	15642
  2125  0000                     _SPI1RXB	set	15632
  2126  0000                     _SPI1TXB	set	15633
  2127  0000                     _SPI1TCNTL	set	15634
  2128  0000                     _SPI1CON0	set	15636
  2129  0000                     _SPI1CLK	set	15644
  2130  0000                     _SPI1BAUD	set	15641
  2131  0000                     _SPI1CON2	set	15638
  2132  0000                     _SPI1CON1	set	15637
  2133  0000                     _U2RXB	set	15824
  2134  0000                     _U2TXB	set	15826
  2135  0000                     _U2ERRIE	set	15842
  2136  0000                     _U2ERRIR	set	15841
  2137  0000                     _U2UIR	set	15840
  2138  0000                     _U2FIFO	set	15839
  2139  0000                     _U2BRGH	set	15838
  2140  0000                     _U2BRGL	set	15837
  2141  0000                     _U2CON2	set	15836
  2142  0000                     _U2CON1	set	15835
  2143  0000                     _U2CON0	set	15834
  2144  0000                     _U2P3L	set	15832
  2145  0000                     _U2P2L	set	15830
  2146  0000                     _U2P1L	set	15828
  2147  0000                     _U1RXB	set	15848
  2148  0000                     _U1ERRIE	set	15866
  2149  0000                     _U1ERRIR	set	15865
  2150  0000                     _U1UIR	set	15864
  2151  0000                     _U1FIFO	set	15863
  2152  0000                     _U1BRGH	set	15862
  2153  0000                     _U1BRGL	set	15861
  2154  0000                     _U1CON2	set	15860
  2155  0000                     _U1CON1	set	15859
  2156  0000                     _U1CON0	set	15858
  2157  0000                     _U1P3H	set	15857
  2158  0000                     _U1P3L	set	15856
  2159  0000                     _U1P2H	set	15855
  2160  0000                     _U1P2L	set	15854
  2161  0000                     _U1P1H	set	15853
  2162  0000                     _U1P1L	set	15852
  2163  0000                     _FVRCON	set	16065
  2164  0000                     _ADFLTRL	set	16102
  2165  0000                     _ADFLTRH	set	16103
  2166  0000                     _ADCON0bits	set	16120
  2167  0000                     _ADCON0	set	16120
  2168  0000                     _ADCLK	set	16127
  2169  0000                     _ADACT	set	16126
  2170  0000                     _ADREF	set	16125
  2171  0000                     _ADSTAT	set	16124
  2172  0000                     _ADCON3	set	16123
  2173  0000                     _ADCON2	set	16122
  2174  0000                     _ADCON1	set	16121
  2175  0000                     _ADPREH	set	16119
  2176  0000                     _ADPREL	set	16118
  2177  0000                     _ADCAP	set	16117
  2178  0000                     _ADACQH	set	16116
  2179  0000                     _ADACQL	set	16115
  2180  0000                     _ADPCH	set	16113
  2181  0000                     _ADRPT	set	16108
  2182  0000                     _ADACCU	set	16106
  2183  0000                     _ADSTPTH	set	16101
  2184  0000                     _ADSTPTL	set	16100
  2185  0000                     _ADUTHH	set	16097
  2186  0000                     _ADUTHL	set	16096
  2187  0000                     _ADLTHH	set	16095
  2188  0000                     _ADLTHL	set	16094
  2189  0000                     _CCPTMRS1bits	set	16223
  2190  0000                     _PORTFbits	set	16335
  2191  0000                     _LATCbits	set	16316
  2192  0000                     _LATDbits	set	16317
  2193  0000                     _PORTBbits	set	16331
  2194  0000                     _T3CONbits	set	16294
  2195  0000                     _T3CON	set	16294
  2196  0000                     _TMR3L	set	16292
  2197  0000                     _TMR3H	set	16293
  2198  0000                     _T3CLK	set	16297
  2199  0000                     _T3GATE	set	16296
  2200  0000                     _T3GCON	set	16295
  2201  0000                     _T2CON	set	16300
  2202  0000                     _T2TMR	set	16298
  2203  0000                     _T2PR	set	16299
  2204  0000                     _T2RST	set	16303
  2205  0000                     _T2HLT	set	16301
  2206  0000                     _T2CLKCON	set	16302
  2207  0000                     _PWM8DCL	set	16224
  2208  0000                     _PWM8DCH	set	16225
  2209  0000                     _PWM8CON	set	16226
  2210  0000                     _LATEbits	set	16318
  2211  0000                     _T5CONbits	set	16282
  2212  0000                     _T5CON	set	16282
  2213  0000                     _TMR5L	set	16280
  2214  0000                     _TMR5H	set	16281
  2215  0000                     _T5CLK	set	16285
  2216  0000                     _T5GATE	set	16284
  2217  0000                     _T5GCON	set	16283
  2218  0000                     _T6CON	set	16276
  2219  0000                     _T6TMR	set	16274
  2220  0000                     _T6PR	set	16275
  2221  0000                     _T6RST	set	16279
  2222  0000                     _T6HLT	set	16277
  2223  0000                     _T6CLKCON	set	16278
  2224  0000                     _TRISD	set	16325
  2225  0000                     _TRISC	set	16324
  2226  0000                     _TRISB	set	16323
  2227  0000                     _TRISA	set	16322
  2228  0000                     _TRISF	set	16327
  2229  0000                     _TRISE	set	16326
  2230  0000                     _LATC	set	16316
  2231  0000                     _LATB	set	16315
  2232  0000                     _LATF	set	16319
  2233  0000                     _LATA	set	16314
  2234  0000                     _LATD	set	16317
  2235  0000                     _LATE	set	16318
  2236  0000                     _IVTLOCKbits	set	16340
  2237  0000                     _IVTLOCK	set	16340
  2238  0000                     _INTCON0bits	set	16338
  2239  0000                     _GIE	set	130711
  2240  00FD1B                     STR_56:
  2241                           
  2242                           ; BSR set to: 57
  2243  00FD1B  20                 	db	32
  2244  00FD1C  25                 	db	37
  2245  00FD1D  6C                 	db	108	;'l'
  2246  00FD1E  75                 	db	117	;'u'
  2247  00FD1F  2C                 	db	44
  2248  00FD20  25                 	db	37
  2249  00FD21  34                 	db	52	;'4'
  2250  00FD22  2E                 	db	46
  2251  00FD23  34                 	db	52	;'4'
  2252  00FD24  66                 	db	102	;'f'
  2253  00FD25  2C                 	db	44
  2254  00FD26  25                 	db	37
  2255  00FD27  34                 	db	52	;'4'
  2256  00FD28  2E                 	db	46
  2257  00FD29  34                 	db	52	;'4'
  2258  00FD2A  66                 	db	102	;'f'
  2259  00FD2B  2C                 	db	44
  2260  00FD2C  25                 	db	37
  2261  00FD2D  34                 	db	52	;'4'
  2262  00FD2E  2E                 	db	46
  2263  00FD2F  34                 	db	52	;'4'
  2264  00FD30  66                 	db	102	;'f'
  2265  00FD31  2C                 	db	44
  2266  00FD32  25                 	db	37
  2267  00FD33  34                 	db	52	;'4'
  2268  00FD34  2E                 	db	46
  2269  00FD35  34                 	db	52	;'4'
  2270  00FD36  66                 	db	102	;'f'
  2271  00FD37  2C                 	db	44
  2272  00FD38  25                 	db	37
  2273  00FD39  34                 	db	52	;'4'
  2274  00FD3A  2E                 	db	46
  2275  00FD3B  33                 	db	51	;'3'
  2276  00FD3C  66                 	db	102	;'f'
  2277  00FD3D  2C                 	db	44
  2278  00FD3E  25                 	db	37
  2279  00FD3F  34                 	db	52	;'4'
  2280  00FD40  2E                 	db	46
  2281  00FD41  33                 	db	51	;'3'
  2282  00FD42  66                 	db	102	;'f'
  2283  00FD43  2C                 	db	44
  2284  00FD44  25                 	db	37
  2285  00FD45  34                 	db	52	;'4'
  2286  00FD46  2E                 	db	46
  2287  00FD47  33                 	db	51	;'3'
  2288  00FD48  66                 	db	102	;'f'
  2289  00FD49  2C                 	db	44
  2290  00FD4A  25                 	db	37
  2291  00FD4B  34                 	db	52	;'4'
  2292  00FD4C  2E                 	db	46
  2293  00FD4D  33                 	db	51	;'3'
  2294  00FD4E  66                 	db	102	;'f'
  2295  00FD4F  2C                 	db	44
  2296  00FD50  25                 	db	37
  2297  00FD51  34                 	db	52	;'4'
  2298  00FD52  2E                 	db	46
  2299  00FD53  33                 	db	51	;'3'
  2300  00FD54  66                 	db	102	;'f'
  2301  00FD55  2C                 	db	44
  2302  00FD56  25                 	db	37
  2303  00FD57  34                 	db	52	;'4'
  2304  00FD58  2E                 	db	46
  2305  00FD59  33                 	db	51	;'3'
  2306  00FD5A  66                 	db	102	;'f'
  2307  00FD5B  2C                 	db	44
  2308  00FD5C  25                 	db	37
  2309  00FD5D  34                 	db	52	;'4'
  2310  00FD5E  2E                 	db	46
  2311  00FD5F  33                 	db	51	;'3'
  2312  00FD60  64                 	db	100	;'d'
  2313  00FD61  2C                 	db	44
  2314  00FD62  25                 	db	37
  2315  00FD63  34                 	db	52	;'4'
  2316  00FD64  2E                 	db	46
  2317  00FD65  33                 	db	51	;'3'
  2318  00FD66  64                 	db	100	;'d'
  2319  00FD67  2C                 	db	44
  2320  00FD68  25                 	db	37
  2321  00FD69  32                 	db	50	;'2'
  2322  00FD6A  2E                 	db	46
  2323  00FD6B  36                 	db	54	;'6'
  2324  00FD6C  66                 	db	102	;'f'
  2325  00FD6D  0D                 	db	13
  2326  00FD6E  0A                 	db	10
  2327  00FD6F  00                 	db	0
  2328  00FD70                     STR_17:
  2329                           
  2330                           ; BSR set to: 57
  2331  00FD70  52                 	db	82	;'R'
  2332  00FD71  31                 	db	49	;'1'
  2333  00FD72  20                 	db	32
  2334  00FD73  25                 	db	37
  2335  00FD74  32                 	db	50	;'2'
  2336  00FD75  2E                 	db	46
  2337  00FD76  33                 	db	51	;'3'
  2338  00FD77  66                 	db	102	;'f'
  2339  00FD78  20                 	db	32
  2340  00FD79  25                 	db	37
  2341  00FD7A  33                 	db	51	;'3'
  2342  00FD7B  2E                 	db	46
  2343  00FD7C  34                 	db	52	;'4'
  2344  00FD7D  66                 	db	102	;'f'
  2345  00FD7E  20                 	db	32
  2346  00FD7F  20                 	db	32
  2347  00FD80  20                 	db	32
  2348  00FD81  20                 	db	32
  2349  00FD82  20                 	db	32
  2350  00FD83  20                 	db	32
  2351  00FD84  20                 	db	32
  2352  00FD85  20                 	db	32
  2353  00FD86  20                 	db	32
  2354  00FD87  20                 	db	32
  2355  00FD88  20                 	db	32
  2356  00FD89  00                 	db	0
  2357  00FD8A                     STR_18:
  2358                           
  2359                           ; BSR set to: 57
  2360  00FD8A  52                 	db	82	;'R'
  2361  00FD8B  32                 	db	50	;'2'
  2362  00FD8C  20                 	db	32
  2363  00FD8D  25                 	db	37
  2364  00FD8E  32                 	db	50	;'2'
  2365  00FD8F  2E                 	db	46
  2366  00FD90  33                 	db	51	;'3'
  2367  00FD91  66                 	db	102	;'f'
  2368  00FD92  20                 	db	32
  2369  00FD93  25                 	db	37
  2370  00FD94  33                 	db	51	;'3'
  2371  00FD95  2E                 	db	46
  2372  00FD96  34                 	db	52	;'4'
  2373  00FD97  66                 	db	102	;'f'
  2374  00FD98  20                 	db	32
  2375  00FD99  20                 	db	32
  2376  00FD9A  20                 	db	32
  2377  00FD9B  20                 	db	32
  2378  00FD9C  20                 	db	32
  2379  00FD9D  20                 	db	32
  2380  00FD9E  20                 	db	32
  2381  00FD9F  20                 	db	32
  2382  00FDA0  20                 	db	32
  2383  00FDA1  20                 	db	32
  2384  00FDA2  20                 	db	32
  2385  00FDA3  00                 	db	0
  2386  00FDA4                     
  2387                           ; BSR set to: 57
  2388  00FDA4  20                 	db	32
  2389  00FDA5  4D                 	db	77	;'M'
  2390  00FDA6  65                 	db	101	;'e'
  2391  00FDA7  73                 	db	115	;'s'
  2392  00FDA8  67                 	db	103	;'g'
  2393  00FDA9  20                 	db	32
  2394  00FDAA  25                 	db	37
  2395  00FDAB  64                 	db	100	;'d'
  2396  00FDAC  20                 	db	32
  2397  00FDAD  53                 	db	83	;'S'
  2398  00FDAE  74                 	db	116	;'t'
  2399  00FDAF  61                 	db	97	;'a'
  2400  00FDB0  63                 	db	99	;'c'
  2401  00FDB1  6B                 	db	107	;'k'
  2402  00FDB2  20                 	db	32
  2403  00FDB3  25                 	db	37
  2404  00FDB4  64                 	db	100	;'d'
  2405  00FDB5  20                 	db	32
  2406  00FDB6  20                 	db	32
  2407  00FDB7  20                 	db	32
  2408  00FDB8  20                 	db	32
  2409  00FDB9  20                 	db	32
  2410  00FDBA  20                 	db	32
  2411  00FDBB  00                 	db	0
  2412  00FDBC                     STR_9:
  2413                           
  2414                           ; BSR set to: 57
  2415  00FDBC  53                 	db	83	;'S'
  2416  00FDBD  20                 	db	32
  2417  00FDBE  53                 	db	83	;'S'
  2418  00FDBF  25                 	db	37
  2419  00FDC0  63                 	db	99	;'c'
  2420  00FDC1  43                 	db	67	;'C'
  2421  00FDC2  20                 	db	32
  2422  00FDC3  25                 	db	37
  2423  00FDC4  64                 	db	100	;'d'
  2424  00FDC5  20                 	db	32
  2425  00FDC6  25                 	db	37
  2426  00FDC7  32                 	db	50	;'2'
  2427  00FDC8  2E                 	db	46
  2428  00FDC9  34                 	db	52	;'4'
  2429  00FDCA  66                 	db	102	;'f'
  2430  00FDCB  20                 	db	32
  2431  00FDCC  20                 	db	32
  2432  00FDCD  20                 	db	32
  2433  00FDCE  20                 	db	32
  2434  00FDCF  20                 	db	32
  2435  00FDD0  20                 	db	32
  2436  00FDD1  20                 	db	32
  2437  00FDD2  00                 	db	0
  2438  00FDD3                     STR_16:
  2439                           
  2440                           ; BSR set to: 57
  2441  00FDD3  45                 	db	69	;'E'
  2442  00FDD4  53                 	db	83	;'S'
  2443  00FDD5  52                 	db	82	;'R'
  2444  00FDD6  20                 	db	32
  2445  00FDD7  20                 	db	32
  2446  00FDD8  25                 	db	37
  2447  00FDD9  32                 	db	50	;'2'
  2448  00FDDA  2E                 	db	46
  2449  00FDDB  36                 	db	54	;'6'
  2450  00FDDC  66                 	db	102	;'f'
  2451  00FDDD  20                 	db	32
  2452  00FDDE  20                 	db	32
  2453  00FDDF  20                 	db	32
  2454  00FDE0  20                 	db	32
  2455  00FDE1  20                 	db	32
  2456  00FDE2  20                 	db	32
  2457  00FDE3  20                 	db	32
  2458  00FDE4  20                 	db	32
  2459  00FDE5  20                 	db	32
  2460  00FDE6  20                 	db	32
  2461  00FDE7  20                 	db	32
  2462  00FDE8  00                 	db	0
  2463  00FDE9                     STR_10:
  2464                           
  2465                           ; BSR set to: 57
  2466  00FDE9  53                 	db	83	;'S'
  2467  00FDEA  74                 	db	116	;'t'
  2468  00FDEB  61                 	db	97	;'a'
  2469  00FDEC  74                 	db	116	;'t'
  2470  00FDED  69                 	db	105	;'i'
  2471  00FDEE  63                 	db	99	;'c'
  2472  00FDEF  20                 	db	32
  2473  00FDF0  53                 	db	83	;'S'
  2474  00FDF1  4F                 	db	79	;'O'
  2475  00FDF2  43                 	db	67	;'C'
  2476  00FDF3  20                 	db	32
  2477  00FDF4  25                 	db	37
  2478  00FDF5  64                 	db	100	;'d'
  2479  00FDF6  20                 	db	32
  2480  00FDF7  20                 	db	32
  2481  00FDF8  20                 	db	32
  2482  00FDF9  20                 	db	32
  2483  00FDFA  20                 	db	32
  2484  00FDFB  20                 	db	32
  2485  00FDFC  20                 	db	32
  2486  00FDFD  20                 	db	32
  2487  00FDFE  00                 	db	0
  2488  00FDFF                     STR_11:
  2489                           
  2490                           ; BSR set to: 57
  2491  00FDFF  42                 	db	66	;'B'
  2492  00FE00  61                 	db	97	;'a'
  2493  00FE01  74                 	db	116	;'t'
  2494  00FE02  74                 	db	116	;'t'
  2495  00FE03  65                 	db	101	;'e'
  2496  00FE04  72                 	db	114	;'r'
  2497  00FE05  79                 	db	121	;'y'
  2498  00FE06  20                 	db	32
  2499  00FE07  41                 	db	65	;'A'
  2500  00FE08  68                 	db	104	;'h'
  2501  00FE09  20                 	db	32
  2502  00FE0A  25                 	db	37
  2503  00FE0B  33                 	db	51	;'3'
  2504  00FE0C  2E                 	db	46
  2505  00FE0D  32                 	db	50	;'2'
  2506  00FE0E  66                 	db	102	;'f'
  2507  00FE0F  20                 	db	32
  2508  00FE10  20                 	db	32
  2509  00FE11  20                 	db	32
  2510  00FE12  20                 	db	32
  2511  00FE13  20                 	db	32
  2512  00FE14  00                 	db	0
  2513  00FE15                     STR_30:
  2514                           
  2515                           ; BSR set to: 57
  2516  00FE15  53                 	db	83	;'S'
  2517  00FE16  25                 	db	37
  2518  00FE17  63                 	db	99	;'c'
  2519  00FE18  43                 	db	67	;'C'
  2520  00FE19  20                 	db	32
  2521  00FE1A  25                 	db	37
  2522  00FE1B  64                 	db	100	;'d'
  2523  00FE1C  20                 	db	32
  2524  00FE1D  52                 	db	82	;'R'
  2525  00FE1E  55                 	db	85	;'U'
  2526  00FE1F  4E                 	db	78	;'N'
  2527  00FE20  20                 	db	32
  2528  00FE21  25                 	db	37
  2529  00FE22  64                 	db	100	;'d'
  2530  00FE23  20                 	db	32
  2531  00FE24  20                 	db	32
  2532  00FE25  20                 	db	32
  2533  00FE26  20                 	db	32
  2534  00FE27  20                 	db	32
  2535  00FE28  00                 	db	0
  2536  00FE29                     STR_29:
  2537                           
  2538                           ; BSR set to: 57
  2539  00FE29  42                 	db	66	;'B'
  2540  00FE2A  41                 	db	65	;'A'
  2541  00FE2B  48                 	db	72	;'H'
  2542  00FE2C  20                 	db	32
  2543  00FE2D  25                 	db	37
  2544  00FE2E  33                 	db	51	;'3'
  2545  00FE2F  2E                 	db	46
  2546  00FE30  32                 	db	50	;'2'
  2547  00FE31  66                 	db	102	;'f'
  2548  00FE32  20                 	db	32
  2549  00FE33  50                 	db	80	;'P'
  2550  00FE34  25                 	db	37
  2551  00FE35  33                 	db	51	;'3'
  2552  00FE36  2E                 	db	46
  2553  00FE37  32                 	db	50	;'2'
  2554  00FE38  66                 	db	102	;'f'
  2555  00FE39  20                 	db	32
  2556  00FE3A  20                 	db	32
  2557  00FE3B  20                 	db	32
  2558  00FE3C  00                 	db	0
  2559  00FE3D                     STR_49:
  2560                           
  2561                           ; BSR set to: 57
  2562  00FE3D  20                 	db	32
  2563  00FE3E  20                 	db	32
  2564  00FE3F  20                 	db	32
  2565  00FE40  20                 	db	32
  2566  00FE41  20                 	db	32
  2567  00FE42  20                 	db	32
  2568  00FE43  20                 	db	32
  2569  00FE44  20                 	db	32
  2570  00FE45  20                 	db	32
  2571  00FE46  20                 	db	32
  2572  00FE47  20                 	db	32
  2573  00FE48  20                 	db	32
  2574  00FE49  20                 	db	32
  2575  00FE4A  20                 	db	32
  2576  00FE4B  20                 	db	32
  2577  00FE4C  20                 	db	32
  2578  00FE4D  20                 	db	32
  2579  00FE4E  20                 	db	32
  2580  00FE4F  00                 	db	0
  2581  00FE50                     STR_39:
  2582                           
  2583                           ; BSR set to: 57
  2584  00FE50  48                 	db	72	;'H'
  2585  00FE51  45                 	db	69	;'E'
  2586  00FE52  4C                 	db	76	;'L'
  2587  00FE53  50                 	db	80	;'P'
  2588  00FE54  20                 	db	32
  2589  00FE55  25                 	db	37
  2590  00FE56  73                 	db	115	;'s'
  2591  00FE57  20                 	db	32
  2592  00FE58  20                 	db	32
  2593  00FE59  20                 	db	32
  2594  00FE5A  20                 	db	32
  2595  00FE5B  20                 	db	32
  2596  00FE5C  20                 	db	32
  2597  00FE5D  20                 	db	32
  2598  00FE5E  20                 	db	32
  2599  00FE5F  20                 	db	32
  2600  00FE60  20                 	db	32
  2601  00FE61  20                 	db	32
  2602  00FE62  00                 	db	0
  2603  00FE63                     
  2604                           ; BSR set to: 57
  2605  00FE63  44                 	db	68	;'D'
  2606  00FE64  49                 	db	73	;'I'
  2607  00FE65  53                 	db	83	;'S'
  2608  00FE66  50                 	db	80	;'P'
  2609  00FE67  4C                 	db	76	;'L'
  2610  00FE68  41                 	db	65	;'A'
  2611  00FE69  59                 	db	89	;'Y'
  2612  00FE6A  20                 	db	32
  2613  00FE6B  25                 	db	37
  2614  00FE6C  73                 	db	115	;'s'
  2615  00FE6D  20                 	db	32
  2616  00FE6E  20                 	db	32
  2617  00FE6F  20                 	db	32
  2618  00FE70  20                 	db	32
  2619  00FE71  20                 	db	32
  2620  00FE72  20                 	db	32
  2621  00FE73  20                 	db	32
  2622  00FE74  20                 	db	32
  2623  00FE75  00                 	db	0
  2624  00FE76                     STR_22:
  2625                           
  2626                           ; BSR set to: 57
  2627  00FE76  50                 	db	80	;'P'
  2628  00FE77  56                 	db	86	;'V'
  2629  00FE78  20                 	db	32
  2630  00FE79  20                 	db	32
  2631  00FE7A  20                 	db	32
  2632  00FE7B  50                 	db	80	;'P'
  2633  00FE7C  57                 	db	87	;'W'
  2634  00FE7D  52                 	db	82	;'R'
  2635  00FE7E  20                 	db	32
  2636  00FE7F  25                 	db	37
  2637  00FE80  33                 	db	51	;'3'
  2638  00FE81  2E                 	db	46
  2639  00FE82  32                 	db	50	;'2'
  2640  00FE83  66                 	db	102	;'f'
  2641  00FE84  20                 	db	32
  2642  00FE85  20                 	db	32
  2643  00FE86  20                 	db	32
  2644  00FE87  20                 	db	32
  2645  00FE88  00                 	db	0
  2646  00FE89                     STR_24:
  2647                           
  2648                           ; BSR set to: 57
  2649  00FE89  49                 	db	73	;'I'
  2650  00FE8A  4E                 	db	78	;'N'
  2651  00FE8B  56                 	db	86	;'V'
  2652  00FE8C  20                 	db	32
  2653  00FE8D  20                 	db	32
  2654  00FE8E  50                 	db	80	;'P'
  2655  00FE8F  57                 	db	87	;'W'
  2656  00FE90  52                 	db	82	;'R'
  2657  00FE91  20                 	db	32
  2658  00FE92  25                 	db	37
  2659  00FE93  33                 	db	51	;'3'
  2660  00FE94  2E                 	db	46
  2661  00FE95  32                 	db	50	;'2'
  2662  00FE96  66                 	db	102	;'f'
  2663  00FE97  20                 	db	32
  2664  00FE98  20                 	db	32
  2665  00FE99  20                 	db	32
  2666  00FE9A  20                 	db	32
  2667  00FE9B  00                 	db	0
  2668  00FE9C                     STR_23:
  2669                           
  2670                           ; BSR set to: 57
  2671  00FE9C  4C                 	db	76	;'L'
  2672  00FE9D  4F                 	db	79	;'O'
  2673  00FE9E  41                 	db	65	;'A'
  2674  00FE9F  44                 	db	68	;'D'
  2675  00FEA0  20                 	db	32
  2676  00FEA1  50                 	db	80	;'P'
  2677  00FEA2  57                 	db	87	;'W'
  2678  00FEA3  52                 	db	82	;'R'
  2679  00FEA4  20                 	db	32
  2680  00FEA5  25                 	db	37
  2681  00FEA6  33                 	db	51	;'3'
  2682  00FEA7  2E                 	db	46
  2683  00FEA8  32                 	db	50	;'2'
  2684  00FEA9  66                 	db	102	;'f'
  2685  00FEAA  20                 	db	32
  2686  00FEAB  20                 	db	32
  2687  00FEAC  20                 	db	32
  2688  00FEAD  20                 	db	32
  2689  00FEAE  00                 	db	0
  2690  00FEAF                     STR_28:
  2691                           
  2692                           ; BSR set to: 57
  2693  00FEAF  42                 	db	66	;'B'
  2694  00FEB0  41                 	db	65	;'A'
  2695  00FEB1  54                 	db	84	;'T'
  2696  00FEB2  54                 	db	84	;'T'
  2697  00FEB3  20                 	db	32
  2698  00FEB4  50                 	db	80	;'P'
  2699  00FEB5  57                 	db	87	;'W'
  2700  00FEB6  52                 	db	82	;'R'
  2701  00FEB7  20                 	db	32
  2702  00FEB8  25                 	db	37
  2703  00FEB9  33                 	db	51	;'3'
  2704  00FEBA  2E                 	db	46
  2705  00FEBB  32                 	db	50	;'2'
  2706  00FEBC  66                 	db	102	;'f'
  2707  00FEBD  20                 	db	32
  2708  00FEBE  20                 	db	32
  2709  00FEBF  20                 	db	32
  2710  00FEC0  20                 	db	32
  2711  00FEC1  00                 	db	0
  2712  00FEC2                     STR_26:
  2713                           
  2714                           ; BSR set to: 57
  2715  00FEC2  42                 	db	66	;'B'
  2716  00FEC3  56                 	db	86	;'V'
  2717  00FEC4  20                 	db	32
  2718  00FEC5  25                 	db	37
  2719  00FEC6  32                 	db	50	;'2'
  2720  00FEC7  2E                 	db	46
  2721  00FEC8  32                 	db	50	;'2'
  2722  00FEC9  66                 	db	102	;'f'
  2723  00FECA  20                 	db	32
  2724  00FECB  42                 	db	66	;'B'
  2725  00FECC  41                 	db	65	;'A'
  2726  00FECD  20                 	db	32
  2727  00FECE  25                 	db	37
  2728  00FECF  32                 	db	50	;'2'
  2729  00FED0  2E                 	db	46
  2730  00FED1  32                 	db	50	;'2'
  2731  00FED2  66                 	db	102	;'f'
  2732  00FED3  20                 	db	32
  2733  00FED4  00                 	db	0
  2734  00FED5                     STR_27:
  2735                           
  2736                           ; BSR set to: 57
  2737  00FED5  43                 	db	67	;'C'
  2738  00FED6  56                 	db	86	;'V'
  2739  00FED7  20                 	db	32
  2740  00FED8  25                 	db	37
  2741  00FED9  32                 	db	50	;'2'
  2742  00FEDA  2E                 	db	46
  2743  00FEDB  32                 	db	50	;'2'
  2744  00FEDC  66                 	db	102	;'f'
  2745  00FEDD  20                 	db	32
  2746  00FEDE  4C                 	db	76	;'L'
  2747  00FEDF  41                 	db	65	;'A'
  2748  00FEE0  20                 	db	32
  2749  00FEE1  25                 	db	37
  2750  00FEE2  32                 	db	50	;'2'
  2751  00FEE3  2E                 	db	46
  2752  00FEE4  32                 	db	50	;'2'
  2753  00FEE5  66                 	db	102	;'f'
  2754  00FEE6  20                 	db	32
  2755  00FEE7  00                 	db	0
  2756  00FEE8                     STR_25:
  2757                           
  2758                           ; BSR set to: 57
  2759  00FEE8  50                 	db	80	;'P'
  2760  00FEE9  56                 	db	86	;'V'
  2761  00FEEA  20                 	db	32
  2762  00FEEB  25                 	db	37
  2763  00FEEC  32                 	db	50	;'2'
  2764  00FEED  2E                 	db	46
  2765  00FEEE  32                 	db	50	;'2'
  2766  00FEEF  66                 	db	102	;'f'
  2767  00FEF0  20                 	db	32
  2768  00FEF1  50                 	db	80	;'P'
  2769  00FEF2  41                 	db	65	;'A'
  2770  00FEF3  20                 	db	32
  2771  00FEF4  25                 	db	37
  2772  00FEF5  32                 	db	50	;'2'
  2773  00FEF6  2E                 	db	46
  2774  00FEF7  32                 	db	50	;'2'
  2775  00FEF8  66                 	db	102	;'f'
  2776  00FEF9  20                 	db	32
  2777  00FEFA  00                 	db	0
  2778  00FEFB                     STR_8:
  2779                           
  2780                           ; BSR set to: 57
  2781  00FEFB  42                 	db	66	;'B'
  2782  00FEFC  56                 	db	86	;'V'
  2783  00FEFD  20                 	db	32
  2784  00FEFE  25                 	db	37
  2785  00FEFF  32                 	db	50	;'2'
  2786  00FF00  2E                 	db	46
  2787  00FF01  34                 	db	52	;'4'
  2788  00FF02  66                 	db	102	;'f'
  2789  00FF03  20                 	db	32
  2790  00FF04  20                 	db	32
  2791  00FF05  20                 	db	32
  2792  00FF06  20                 	db	32
  2793  00FF07  20                 	db	32
  2794  00FF08  20                 	db	32
  2795  00FF09  20                 	db	32
  2796  00FF0A  20                 	db	32
  2797  00FF0B  20                 	db	32
  2798  00FF0C  00                 	db	0
  2799  00FF0D                     STR_4:
  2800                           
  2801                           ; BSR set to: 57
  2802  00FF0D  20                 	db	32
  2803  00FF0E  4E                 	db	78	;'N'
  2804  00FF0F  53                 	db	83	;'S'
  2805  00FF10  41                 	db	65	;'A'
  2806  00FF11  53                 	db	83	;'S'
  2807  00FF12  50                 	db	80	;'P'
  2808  00FF13  4F                 	db	79	;'O'
  2809  00FF14  4F                 	db	79	;'O'
  2810  00FF15  4B                 	db	75	;'K'
  2811  00FF16  20                 	db	32
  2812  00FF17  20                 	db	32
  2813  00FF18  20                 	db	32
  2814  00FF19  20                 	db	32
  2815  00FF1A  20                 	db	32
  2816  00FF1B  20                 	db	32
  2817  00FF1C  20                 	db	32
  2818  00FF1D  00                 	db	0
  2819  00FF1E                     STR_12:
  2820                           
  2821                           ; BSR set to: 57
  2822  00FF1E  42                 	db	66	;'B'
  2823  00FF1F  61                 	db	97	;'a'
  2824  00FF20  74                 	db	116	;'t'
  2825  00FF21  74                 	db	116	;'t'
  2826  00FF22  65                 	db	101	;'e'
  2827  00FF23  72                 	db	114	;'r'
  2828  00FF24  79                 	db	121	;'y'
  2829  00FF25  20                 	db	32
  2830  00FF26  45                 	db	69	;'E'
  2831  00FF27  53                 	db	83	;'S'
  2832  00FF28  52                 	db	82	;'R'
  2833  00FF29  20                 	db	32
  2834  00FF2A  20                 	db	32
  2835  00FF2B  20                 	db	32
  2836  00FF2C  20                 	db	32
  2837  00FF2D  20                 	db	32
  2838  00FF2E  00                 	db	0
  2839  00FF2F                     STR_13:
  2840                           
  2841                           ; BSR set to: 57
  2842  00FF2F  43                 	db	67	;'C'
  2843  00FF30  61                 	db	97	;'a'
  2844  00FF31  6C                 	db	108	;'l'
  2845  00FF32  63                 	db	99	;'c'
  2846  00FF33  75                 	db	117	;'u'
  2847  00FF34  6C                 	db	108	;'l'
  2848  00FF35  61                 	db	97	;'a'
  2849  00FF36  74                 	db	116	;'t'
  2850  00FF37  69                 	db	105	;'i'
  2851  00FF38  6F                 	db	111	;'o'
  2852  00FF39  6E                 	db	110	;'n'
  2853  00FF3A  20                 	db	32
  2854  00FF3B  20                 	db	32
  2855  00FF3C  20                 	db	32
  2856  00FF3D  20                 	db	32
  2857  00FF3E  20                 	db	32
  2858  00FF3F  00                 	db	0
  2859  00FF40                     STR_15:
  2860                           
  2861                           ; BSR set to: 57
  2862  00FF40  43                 	db	67	;'C'
  2863  00FF41  68                 	db	104	;'h'
  2864  00FF42  65                 	db	101	;'e'
  2865  00FF43  63                 	db	99	;'c'
  2866  00FF44  6B                 	db	107	;'k'
  2867  00FF45  69                 	db	105	;'i'
  2868  00FF46  6E                 	db	110	;'n'
  2869  00FF47  67                 	db	103	;'g'
  2870  00FF48  20                 	db	32
  2871  00FF49  20                 	db	32
  2872  00FF4A  25                 	db	37
  2873  00FF4B  64                 	db	100	;'d'
  2874  00FF4C  20                 	db	32
  2875  00FF4D  20                 	db	32
  2876  00FF4E  20                 	db	32
  2877  00FF4F  20                 	db	32
  2878  00FF50  00                 	db	0
  2879  00FF51                     STR_1:
  2880                           
  2881                           ; BSR set to: 57
  2882  00FF51  20                 	db	32
  2883  00FF52  4D                 	db	77	;'M'
  2884  00FF53  42                 	db	66	;'B'
  2885  00FF54  4D                 	db	77	;'M'
  2886  00FF55  43                 	db	67	;'C'
  2887  00FF56  20                 	db	32
  2888  00FF57  53                 	db	83	;'S'
  2889  00FF58  4F                 	db	79	;'O'
  2890  00FF59  4C                 	db	76	;'L'
  2891  00FF5A  41                 	db	65	;'A'
  2892  00FF5B  52                 	db	82	;'R'
  2893  00FF5C  4D                 	db	77	;'M'
  2894  00FF5D  4F                 	db	79	;'O'
  2895  00FF5E  4E                 	db	78	;'N'
  2896  00FF5F  20                 	db	32
  2897  00FF60  20                 	db	32
  2898  00FF61  00                 	db	0
  2899  00FF62                     STR_21:
  2900                           
  2901                           ; BSR set to: 57
  2902  00FF62  25                 	db	37
  2903  00FF63  64                 	db	100	;'d'
  2904  00FF64  20                 	db	32
  2905  00FF65  25                 	db	37
  2906  00FF66  32                 	db	50	;'2'
  2907  00FF67  2E                 	db	46
  2908  00FF68  34                 	db	52	;'4'
  2909  00FF69  66                 	db	102	;'f'
  2910  00FF6A  2C                 	db	44
  2911  00FF6B  20                 	db	32
  2912  00FF6C  25                 	db	37
  2913  00FF6D  64                 	db	100	;'d'
  2914  00FF6E  20                 	db	32
  2915  00FF6F  20                 	db	32
  2916  00FF70  20                 	db	32
  2917  00FF71  23                 	db	35
  2918  00FF72  00                 	db	0
  2919  00FF73                     STR_14:
  2920                           
  2921                           ; BSR set to: 57
  2922  00FF73  43                 	db	67	;'C'
  2923  00FF74  68                 	db	104	;'h'
  2924  00FF75  65                 	db	101	;'e'
  2925  00FF76  63                 	db	99	;'c'
  2926  00FF77  6B                 	db	107	;'k'
  2927  00FF78  20                 	db	32
  2928  00FF79  33                 	db	51	;'3'
  2929  00FF7A  30                 	db	48	;'0'
  2930  00FF7B  20                 	db	32
  2931  00FF7C  73                 	db	115	;'s'
  2932  00FF7D  65                 	db	101	;'e'
  2933  00FF7E  63                 	db	99	;'c'
  2934  00FF7F  6F                 	db	111	;'o'
  2935  00FF80  6E                 	db	110	;'n'
  2936  00FF81  64                 	db	100	;'d'
  2937  00FF82  73                 	db	115	;'s'
  2938  00FF83  00                 	db	0
  2939  00FF84                     STR_19:
  2940                           
  2941                           ; BSR set to: 57
  2942  00FF84  25                 	db	37
  2943  00FF85  64                 	db	100	;'d'
  2944  00FF86  20                 	db	32
  2945  00FF87  25                 	db	37
  2946  00FF88  32                 	db	50	;'2'
  2947  00FF89  2E                 	db	46
  2948  00FF8A  34                 	db	52	;'4'
  2949  00FF8B  66                 	db	102	;'f'
  2950  00FF8C  20                 	db	32
  2951  00FF8D  20                 	db	32
  2952  00FF8E  20                 	db	32
  2953  00FF8F  25                 	db	37
  2954  00FF90  64                 	db	100	;'d'
  2955  00FF91  20                 	db	32
  2956  00FF92  20                 	db	32
  2957  00FF93  00                 	db	0
  2958  00FF94                     STR_43:
  2959                           
  2960                           ; BSR set to: 57
  2961  00FF94  76                 	db	118	;'v'
  2962  00FF95  74                 	db	116	;'t'
  2963  00FF96  65                 	db	101	;'e'
  2964  00FF97  72                 	db	114	;'r'
  2965  00FF98  6D                 	db	109	;'m'
  2966  00FF99  20                 	db	32
  2967  00FF9A  25                 	db	37
  2968  00FF9B  78                 	db	120	;'x'
  2969  00FF9C  3A                 	db	58	;':'
  2970  00FF9D  25                 	db	37
  2971  00FF9E  78                 	db	120	;'x'
  2972  00FF9F  20                 	db	32
  2973  00FFA0  20                 	db	32
  2974  00FFA1  20                 	db	32
  2975  00FFA2  00                 	db	0
  2976  00FFA3                     STR_2:
  2977                           
  2978                           ; BSR set to: 57
  2979  00FFA3  20                 	db	32
  2980  00FFA4  56                 	db	86	;'V'
  2981  00FFA5  65                 	db	101	;'e'
  2982  00FFA6  72                 	db	114	;'r'
  2983  00FFA7  73                 	db	115	;'s'
  2984  00FFA8  69                 	db	105	;'i'
  2985  00FFA9  6F                 	db	111	;'o'
  2986  00FFAA  6E                 	db	110	;'n'
  2987  00FFAB  20                 	db	32
  2988  00FFAC  25                 	db	37
  2989  00FFAD  73                 	db	115	;'s'
  2990  00FFAE  20                 	db	32
  2991  00FFAF  20                 	db	32
  2992  00FFB0  20                 	db	32
  2993  00FFB1  00                 	db	0
  2994  00FFB2                     STR_37:
  2995                           
  2996                           ; BSR set to: 57
  2997  00FFB2  44                 	db	68	;'D'
  2998  00FFB3  65                 	db	101	;'e'
  2999  00FFB4  63                 	db	99	;'c'
  3000  00FFB5  20                 	db	32
  3001  00FFB6  31                 	db	49	;'1'
  3002  00FFB7  33                 	db	51	;'3'
  3003  00FFB8  20                 	db	32
  3004  00FFB9  32                 	db	50	;'2'
  3005  00FFBA  30                 	db	48	;'0'
  3006  00FFBB  31                 	db	49	;'1'
  3007  00FFBC  39                 	db	57	;'9'
  3008  00FFBD  00                 	db	0
  3009  00FFBE                     STR_41:
  3010                           
  3011                           ; BSR set to: 57
  3012  00FFBE  25                 	db	37
  3013  00FFBF  73                 	db	115	;'s'
  3014  00FFC0  20                 	db	32
  3015  00FFC1  20                 	db	32
  3016  00FFC2  20                 	db	32
  3017  00FFC3  20                 	db	32
  3018  00FFC4  20                 	db	32
  3019  00FFC5  20                 	db	32
  3020  00FFC6  20                 	db	32
  3021  00FFC7  00                 	db	0
  3022  00FFC8                     STR_38:
  3023                           
  3024                           ; BSR set to: 57
  3025  00FFC8  30                 	db	48	;'0'
  3026  00FFC9  38                 	db	56	;'8'
  3027  00FFCA  3A                 	db	58	;':'
  3028  00FFCB  31                 	db	49	;'1'
  3029  00FFCC  36                 	db	54	;'6'
  3030  00FFCD  3A                 	db	58	;':'
  3031  00FFCE  33                 	db	51	;'3'
  3032  00FFCF  35                 	db	53	;'5'
  3033  00FFD0  00                 	db	0
  3034  00FFD1                     STR_3:
  3035                           
  3036                           ; BSR set to: 57
  3037  00FFD1  31                 	db	49	;'1'
  3038  00FFD2  2E                 	db	46
  3039  00FFD3  30                 	db	48	;'0'
  3040  00FFD4  30                 	db	48	;'0'
  3041  00FFD5  33                 	db	51	;'3'
  3042  00FFD6  00                 	db	0
  3043  00FFD7                     STR_57:
  3044                           
  3045                           ; BSR set to: 57
  3046  00FFD7  49                 	db	73	;'I'
  3047  00FFD8  4E                 	db	78	;'N'
  3048  00FFD9  46                 	db	70	;'F'
  3049  00FFDA  00                 	db	0
  3050  00FFDB                     STR_61:
  3051                           
  3052                           ; BSR set to: 57
  3053  00FFDB  4E                 	db	78	;'N'
  3054  00FFDC  41                 	db	65	;'A'
  3055  00FFDD  4E                 	db	78	;'N'
  3056  00FFDE  00                 	db	0
  3057  00FFDF                     STR_58:
  3058                           
  3059                           ; BSR set to: 57
  3060  00FFDF  69                 	db	105	;'i'
  3061  00FFE0  6E                 	db	110	;'n'
  3062  00FFE1  66                 	db	102	;'f'
  3063  00FFE2  00                 	db	0
  3064  00FFE3                     STR_62:
  3065                           
  3066                           ; BSR set to: 57
  3067  00FFE3  6E                 	db	110	;'n'
  3068  00FFE4  61                 	db	97	;'a'
  3069  00FFE5  6E                 	db	110	;'n'
  3070  00FFE6  00                 	db	0
  3071  00FFE7                     STR_88:
  3072                           
  3073                           ; BSR set to: 57
  3074  00FFE7  6C                 	db	108	;'l'
  3075  00FFE8  58                 	db	88	;'X'
  3076  00FFE9  00                 	db	0
  3077  00FFEA                     STR_65:
  3078                           
  3079                           ; BSR set to: 57
  3080  00FFEA  6C                 	db	108	;'l'
  3081  00FFEB  64                 	db	100	;'d'
  3082  00FFEC  00                 	db	0
  3083  00FFED                     STR_74:
  3084                           
  3085                           ; BSR set to: 57
  3086  00FFED  6C                 	db	108	;'l'
  3087  00FFEE  66                 	db	102	;'f'
  3088  00FFEF  00                 	db	0
  3089  00FFF0                     STR_69:
  3090                           
  3091                           ; BSR set to: 57
  3092  00FFF0  6C                 	db	108	;'l'
  3093  00FFF1  69                 	db	105	;'i'
  3094  00FFF2  00                 	db	0
  3095  00FFF3                     STR_79:
  3096                           
  3097                           ; BSR set to: 57
  3098  00FFF3  6C                 	db	108	;'l'
  3099  00FFF4  75                 	db	117	;'u'
  3100  00FFF5  00                 	db	0
  3101  00FFF6                     STR_84:
  3102                           
  3103                           ; BSR set to: 57
  3104  00FFF6  6C                 	db	108	;'l'
  3105  00FFF7  78                 	db	120	;'x'
  3106  00FFF8  00                 	db	0
  3107  00FFF9                     STR_35:
  3108                           
  3109                           ; BSR set to: 57
  3110  00FFF9  25                 	db	37
  3111  00FFFA  63                 	db	99	;'c'
  3112  00FFFB  00                 	db	0
  3113  00FFFC                     STR_34:
  3114                           
  3115                           ; BSR set to: 57
  3116  00FFFC  25                 	db	37
  3117  00FFFD  73                 	db	115	;'s'
  3118  00FFFE  00                 	db	0
  3119  0000                     
  3120                           ; #config settings
  3121  00FFFF  00                 	db	0	; dummy byte at the end
  3122  0000                     
  3123                           	psect	cinit
  3124  018EA2                     __pcinit:
  3125                           	opt callstack 0
  3126  018EA2                     start_initialization:
  3127                           	opt callstack 0
  3128  018EA2                     __initialization:
  3129                           	opt callstack 0
  3130                           
  3131                           ; Initialize objects allocated to BIGRAM (512 bytes)
  3132                           ; load TBLPTR registers with __pidataBIGRAM
  3133  018EA2  0E5C               	movlw	low __pidataBIGRAM
  3134  018EA4  6EF6               	movwf	tblptrl,c
  3135  018EA6  0E77               	movlw	high __pidataBIGRAM
  3136  018EA8  6EF7               	movwf	tblptrh,c
  3137  018EAA  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  3138  018EAC  6EF8               	movwf	tblptru,c
  3139  018EAE  EE01  F1FF         	lfsr	0,__pdataBIGRAM
  3140  018EB2  EE20 F200          	lfsr	2,512
  3141  018EB6                     copy_data0:
  3142  018EB6  0009               	tblrd		*+
  3143  018EB8  006F FFD7 FFEE     	movff	tablat,postinc0
  3144  018EBE  50DD               	movf	postdec2,w,c
  3145  018EC0  50D9               	movf	fsr2l,w,c
  3146  018EC2  E1F9               	bnz	copy_data0
  3147  018EC4  50DA               	movf	fsr2h,w,c
  3148  018EC6  E1F7               	bnz	copy_data0
  3149                           
  3150                           ; Initialize objects allocated to BANK2 (188 bytes)
  3151                           ; load TBLPTR registers with __pidataBANK2
  3152  018EC8  0E18               	movlw	low __pidataBANK2
  3153  018ECA  6EF6               	movwf	tblptrl,c
  3154  018ECC  0E96               	movlw	high __pidataBANK2
  3155  018ECE  6EF7               	movwf	tblptrh,c
  3156  018ED0  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  3157  018ED2  6EF8               	movwf	tblptru,c
  3158  018ED4  EE00  F200         	lfsr	0,__pdataBANK2
  3159  018ED8  EE20 F0BC          	lfsr	2,188
  3160  018EDC                     copy_data1:
  3161  018EDC  0009               	tblrd		*+
  3162  018EDE  006F FFD7 FFEE     	movff	tablat,postinc0
  3163  018EE4  50DD               	movf	postdec2,w,c
  3164  018EE6  50D9               	movf	fsr2l,w,c
  3165  018EE8  E1F9               	bnz	copy_data1
  3166                           
  3167                           ; Initialize objects allocated to BANK1 (243 bytes)
  3168                           ; load TBLPTR registers with __pidataBANK1
  3169  018EEA  0EBC               	movlw	low __pidataBANK1
  3170  018EEC  6EF6               	movwf	tblptrl,c
  3171  018EEE  0E91               	movlw	high __pidataBANK1
  3172  018EF0  6EF7               	movwf	tblptrh,c
  3173  018EF2  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  3174  018EF4  6EF8               	movwf	tblptru,c
  3175  018EF6  EE00  F100         	lfsr	0,__pdataBANK1
  3176  018EFA  EE20 F0F3          	lfsr	2,243
  3177  018EFE                     copy_data2:
  3178  018EFE  0009               	tblrd		*+
  3179  018F00  006F FFD7 FFEE     	movff	tablat,postinc0
  3180  018F06  50DD               	movf	postdec2,w,c
  3181  018F08  50D9               	movf	fsr2l,w,c
  3182  018F0A  E1F9               	bnz	copy_data2
  3183                           
  3184                           ; Initialize objects allocated to BANK0 (54 bytes)
  3185                           ; load TBLPTR registers with __pidataBANK0
  3186  018F0C  0E68               	movlw	low __pidataBANK0
  3187  018F0E  6EF6               	movwf	tblptrl,c
  3188  018F10  0EA9               	movlw	high __pidataBANK0
  3189  018F12  6EF7               	movwf	tblptrh,c
  3190  018F14  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3191  018F16  6EF8               	movwf	tblptru,c
  3192  018F18  EE00  F0C4         	lfsr	0,__pdataBANK0
  3193  018F1C  EE20 F036          	lfsr	2,54
  3194  018F20                     copy_data3:
  3195  018F20  0009               	tblrd		*+
  3196  018F22  006F FFD7 FFEE     	movff	tablat,postinc0
  3197  018F28  50DD               	movf	postdec2,w,c
  3198  018F2A  50D9               	movf	fsr2l,w,c
  3199  018F2C  E1F9               	bnz	copy_data3
  3200                           
  3201                           ; Clear objects allocated to BIGRAM (290 bytes)
  3202  018F2E  EE01  F3FF         	lfsr	0,__pbssBIGRAM
  3203  018F32  EE20 F122          	lfsr	2,290
  3204  018F36                     clear_0:
  3205  018F36  6AEE               	clrf	postinc0,c
  3206  018F38  50DD               	movf	postdec2,w,c
  3207  018F3A  50D9               	movf	fsr2l,w,c
  3208  018F3C  E1FC               	bnz	clear_0
  3209  018F3E  50DA               	movf	fsr2h,w,c
  3210  018F40  E1FA               	bnz	clear_0
  3211                           
  3212                           ; Clear objects allocated to BANK5 (255 bytes)
  3213  018F42  EE01  F100         	lfsr	0,__pbssBANK5
  3214  018F46  EE20 F0FF          	lfsr	2,255
  3215  018F4A                     clear_1:
  3216  018F4A  6AEE               	clrf	postinc0,c
  3217  018F4C  50DD               	movf	postdec2,w,c
  3218  018F4E  50D9               	movf	fsr2l,w,c
  3219  018F50  E1FC               	bnz	clear_1
  3220  018F52  50DA               	movf	fsr2h,w,c
  3221  018F54  E1FA               	bnz	clear_1
  3222                           
  3223                           ; Clear objects allocated to BANK4 (134 bytes)
  3224  018F56  EE01  F000         	lfsr	0,__pbssBANK4
  3225  018F5A  0E86               	movlw	134
  3226  018F5C                     clear_2:
  3227  018F5C  6AEE               	clrf	postinc0,c
  3228  018F5E  06E8               	decf	wreg,f,c
  3229  018F60  E1FD               	bnz	clear_2
  3230                           
  3231                           ; Clear objects allocated to BANK3 (228 bytes)
  3232  018F62  EE00  F300         	lfsr	0,__pbssBANK3
  3233  018F66  0EE4               	movlw	228
  3234  018F68                     clear_3:
  3235  018F68  6AEE               	clrf	postinc0,c
  3236  018F6A  06E8               	decf	wreg,f,c
  3237  018F6C  E1FD               	bnz	clear_3
  3238                           
  3239                           ; Clear objects allocated to BANK2 (67 bytes)
  3240  018F6E  EE00  F2BC         	lfsr	0,__pbssBANK2
  3241  018F72  0E43               	movlw	67
  3242  018F74                     clear_4:
  3243  018F74  6AEE               	clrf	postinc0,c
  3244  018F76  06E8               	decf	wreg,f,c
  3245  018F78  E1FD               	bnz	clear_4
  3246                           
  3247                           ; Clear objects allocated to BANK1 (8 bytes)
  3248  018F7A  EE00  F1F3         	lfsr	0,__pbssBANK1
  3249  018F7E  0E08               	movlw	8
  3250  018F80                     clear_5:
  3251  018F80  6AEE               	clrf	postinc0,c
  3252  018F82  06E8               	decf	wreg,f,c
  3253  018F84  E1FD               	bnz	clear_5
  3254                           
  3255                           ; Clear objects allocated to BANK0 (100 bytes)
  3256  018F86  EE00  F060         	lfsr	0,__pbssBANK0
  3257  018F8A  0E64               	movlw	100
  3258  018F8C                     clear_6:
  3259  018F8C  6AEE               	clrf	postinc0,c
  3260  018F8E  06E8               	decf	wreg,f,c
  3261  018F90  E1FD               	bnz	clear_6
  3262                           
  3263                           ; Clear objects allocated to COMRAM (24 bytes)
  3264  018F92  EE00  F021         	lfsr	0,__pbssCOMRAM
  3265  018F96  0E18               	movlw	24
  3266  018F98                     clear_7:
  3267  018F98  6AEE               	clrf	postinc0,c
  3268  018F9A  06E8               	decf	wreg,f,c
  3269  018F9C  E1FD               	bnz	clear_7
  3270                           
  3271                           ;
  3272                           ; Setup IVTBASE
  3273                           ;
  3274  018F9E  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  3275  018FA0  6ED5               	movwf	213,c
  3276  018FA2  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  3277  018FA4  6ED6               	movwf	214,c
  3278  018FA6  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  3279  018FA8  6ED7               	movwf	215,c
  3280  018FAA                     end_of_initialization:
  3281                           	opt callstack 0
  3282  018FAA                     __end_of__initialization:
  3283                           	opt callstack 0
  3284  018FAA  0100               	movlb	0
  3285  018FAC  EFF8  F090         	goto	_main	;jump to C main() function
  3286                           
  3287                           	psect	bssCOMRAM
  3288  000021                     __pbssCOMRAM:
  3289                           	opt callstack 0
  3290  000021                     _width:
  3291                           	opt callstack 0
  3292  000021                     	ds	2
  3293  000023                     _prec:
  3294                           	opt callstack 0
  3295  000023                     	ds	2
  3296  000025                     _flags:
  3297                           	opt callstack 0
  3298  000025                     	ds	2
  3299  000027                     _timer3ReloadVal:
  3300                           	opt callstack 0
  3301  000027                     	ds	2
  3302  000029                     TMR5_ISR@CountCallBack:
  3303                           	opt callstack 0
  3304  000029                     	ds	2
  3305  00002B                     _timer5ReloadVal:
  3306                           	opt callstack 0
  3307  00002B                     	ds	2
  3308  00002D                     esr_check@esr_state:
  3309                           	opt callstack 0
  3310  00002D                     	ds	1
  3311  00002E                     Volts_to_SOC@slot:
  3312                           	opt callstack 0
  3313  00002E                     	ds	1
  3314  00002F                     _mode_sw:
  3315                           	opt callstack 0
  3316  00002F                     	ds	1
  3317  000030                     _uart2RxCount:
  3318                           	opt callstack 0
  3319  000030                     	ds	1
  3320  000031                     _uart2RxTail:
  3321                           	opt callstack 0
  3322  000031                     	ds	1
  3323  000032                     _uart2RxHead:
  3324                           	opt callstack 0
  3325  000032                     	ds	1
  3326  000033                     _uart2TxBufferRemaining:
  3327                           	opt callstack 0
  3328  000033                     	ds	1
  3329  000034                     _uart2TxTail:
  3330                           	opt callstack 0
  3331  000034                     	ds	1
  3332  000035                     _uart2TxHead:
  3333                           	opt callstack 0
  3334  000035                     	ds	1
  3335  000036                     _uart1RxCount:
  3336                           	opt callstack 0
  3337  000036                     	ds	1
  3338  000037                     _uart1RxTail:
  3339                           	opt callstack 0
  3340  000037                     	ds	1
  3341  000038                     _uart1RxHead:
  3342                           	opt callstack 0
  3343  000038                     	ds	1
  3344                           
  3345                           	psect	bssBANK0
  3346  000060                     __pbssBANK0:
  3347                           	opt callstack 0
  3348  000060                     _spi_link:
  3349                           	opt callstack 0
  3350  000060                     	ds	12
  3351  00006C                     _uart1RxBuffer:
  3352                           	opt callstack 0
  3353  00006C                     	ds	8
  3354  000074                     spinners@s:
  3355                           	opt callstack 0
  3356  000074                     	ds	6
  3357  00007A                     floorf@F524:
  3358                           	opt callstack 0
  3359  00007A                     	ds	4
  3360  00007E                     fabsf@F463:
  3361                           	opt callstack 0
  3362  00007E                     	ds	4
  3363  000082                     ___fpclassifyf@F463:
  3364                           	opt callstack 0
  3365  000082                     	ds	4
  3366  000086                     calc_ror_data@bcror:
  3367                           	opt callstack 0
  3368  000086                     	ds	4
  3369  00008A                     calc_ror_data@bvror:
  3370                           	opt callstack 0
  3371  00008A                     	ds	4
  3372  00008E                     calc_model_data@bcror:
  3373                           	opt callstack 0
  3374  00008E                     	ds	4
  3375  000092                     calc_model_data@bvror:
  3376                           	opt callstack 0
  3377  000092                     	ds	4
  3378  000096                     _utctime:
  3379                           	opt callstack 0
  3380  000096                     	ds	4
  3381  00009A                     wdtdelay@dcount:
  3382                           	opt callstack 0
  3383  00009A                     	ds	4
  3384  00009E                     _P:
  3385                           	opt callstack 0
  3386  00009E                     	ds	4
  3387  0000A2                     _TMR3_InterruptHandler:
  3388                           	opt callstack 0
  3389  0000A2                     	ds	3
  3390  0000A5                     _TMR5_InterruptHandler:
  3391                           	opt callstack 0
  3392  0000A5                     	ds	3
  3393  0000A8                     _TMR6_InterruptHandler:
  3394                           	opt callstack 0
  3395  0000A8                     	ds	3
  3396  0000AB                     _ADCC_ADTI_InterruptHandler:
  3397                           	opt callstack 0
  3398  0000AB                     	ds	3
  3399  0000AE                     _ADCC_ADI_InterruptHandler:
  3400                           	opt callstack 0
  3401  0000AE                     	ds	3
  3402  0000B1                     _UART1_RxInterruptHandler:
  3403                           	opt callstack 0
  3404  0000B1                     	ds	3
  3405  0000B4                     _UART2_TxInterruptHandler:
  3406                           	opt callstack 0
  3407  0000B4                     	ds	3
  3408  0000B7                     _UART2_RxInterruptHandler:
  3409                           	opt callstack 0
  3410  0000B7                     	ds	3
  3411  0000BA                     _INT1_InterruptHandler:
  3412                           	opt callstack 0
  3413  0000BA                     	ds	3
  3414  0000BD                     _INT0_InterruptHandler:
  3415                           	opt callstack 0
  3416  0000BD                     	ds	3
  3417  0000C0                     _nout:
  3418                           	opt callstack 0
  3419  0000C0                     	ds	2
  3420  0000C2                     TMR3_ISR@CountCallBack:
  3421                           	opt callstack 0
  3422  0000C2                     	ds	2
  3423                           
  3424                           	psect	dataBANK0
  3425  0000C4                     __pdataBANK0:
  3426                           	opt callstack 0
  3427  0000C4                     _R:
  3428                           	opt callstack 0
  3429  0000C4                     	ds	40
  3430  0000EC                     stoa@F1166:
  3431                           	opt callstack 0
  3432  0000EC                     	ds	7
  3433  0000F3                     _H:
  3434                           	opt callstack 0
  3435  0000F3                     	ds	7
  3436                           
  3437                           	psect	bssBANK1
  3438  0001F3                     __pbssBANK1:
  3439                           	opt callstack 0
  3440  0001F3                     _seed:
  3441                           	opt callstack 0
  3442  0001F3                     	ds	8
  3443                           
  3444                           	psect	dataBANK1
  3445  000100                     __pdataBANK1:
  3446                           	opt callstack 0
  3447  000100                     _C:
  3448                           	opt callstack 0
  3449  000100                     	ds	243
  3450                           
  3451                           	psect	bssBANK2
  3452  0002BC                     __pbssBANK2:
  3453                           	opt callstack 0
  3454  0002BC                     _S:
  3455                           	opt callstack 0
  3456  0002BC                     	ds	41
  3457  0002E5                     _tickCount:
  3458                           	opt callstack 0
  3459  0002E5                     	ds	26
  3460                           
  3461                           	psect	dataBANK2
  3462  000200                     __pdataBANK2:
  3463                           	opt callstack 0
  3464  000200                     _V:
  3465                           	opt callstack 0
  3466  000200                     	ds	188
  3467                           
  3468                           	psect	bssBANK3
  3469  000300                     __pbssBANK3:
  3470                           	opt callstack 0
  3471  000300                     lp_filter@smooth:
  3472                           	opt callstack 0
  3473  000300                     	ds	84
  3474  000354                     _uart2TxBuffer:
  3475                           	opt callstack 0
  3476  000354                     	ds	64
  3477  000394                     _dbuf:
  3478                           	opt callstack 0
  3479  000394                     	ds	80
  3480                           
  3481                           	psect	bssBANK4
  3482  000400                     __pbssBANK4:
  3483                           	opt callstack 0
  3484  000400                     _ring_buf2:
  3485                           	opt callstack 0
  3486  000400                     	ds	67
  3487  000443                     _ring_buf1:
  3488                           	opt callstack 0
  3489  000443                     	ds	67
  3490                           
  3491                           	psect	bssBANK5
  3492  000500                     __pbssBANK5:
  3493                           	opt callstack 0
  3494  000500                     _uart2RxBuffer:
  3495                           	opt callstack 0
  3496  000500                     	ds	255
  3497                           
  3498                           	psect	bssBIGRAM
  3499  0007FF                     __pbssBIGRAM:
  3500                           	opt callstack 0
  3501  0007FF                     _D:
  3502                           	opt callstack 0
  3503  0007FF                     	ds	290
  3504                           
  3505                           	psect	dataBIGRAM
  3506  0005FF                     __pdataBIGRAM:
  3507                           	opt callstack 0
  3508  0005FF                     _port_data:
  3509                           	opt callstack 0
  3510  0005FF                     	ds	512
  3511                           
  3512                           	psect	cstackBANK3
  3513  0003E4                     __pcstackBANK3:
  3514                           	opt callstack 0
  3515  0003E4                     ??_TMR3_ISR:
  3516                           
  3517                           ; 1 bytes @ 0x0
  3518  0003E4                     	ds	25
  3519                           
  3520                           	psect	cstackCOMRAM
  3521  000039                     __pcstackCOMRAM:
  3522                           	opt callstack 0
  3523  000039                     ??_ADCC_ThresholdISR:
  3524  000039                     
  3525                           ; 1 bytes @ 0x0
  3526  000039                     	ds	5
  3527  00003E                     ??_TMR6_ISR:
  3528                           
  3529                           ; 1 bytes @ 0x5
  3530  00003E                     	ds	1
  3531  00003F                     ??_INT1_ISR:
  3532  00003F                     
  3533                           ; 1 bytes @ 0x6
  3534  00003F                     	ds	4
  3535  000043                     ??_TMR5_ISR:
  3536                           
  3537                           ; 1 bytes @ 0xA
  3538  000043                     	ds	4
  3539                           
  3540 ;;
  3541 ;;Main: autosize = 6, tempsize = 0, incstack = 0, save=0
  3542 ;;
  3543 ;; *************** function _main *****************
  3544 ;; Defined at:
  3545 ;;		line 174 in file "main.c"
  3546 ;; Parameters:    Size  Location     Type
  3547 ;;		None
  3548 ;; Auto vars:     Size  Location     Type
  3549 ;;  i               1  [STACK] unsigned char 
  3550 ;;  k               1  [STACK] unsigned char 
  3551 ;;  j               1  [STACK] unsigned char 
  3552 ;;  inp_index       1  [STACK] unsigned char 
  3553 ;;  mode            1  [STACK] enum E17013
  3554 ;;  i_ror           1  [STACK] unsigned char 
  3555 ;; Return value:  Size  Location     Type
  3556 ;;                  1  [STACK] void 
  3557 ;; Registers used:
  3558 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3559 ;; Tracked objects:
  3560 ;;		On entry : 0/0
  3561 ;;		On exit  : 0/0
  3562 ;;		Unchanged: 0/0
  3563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3568 ;;Total ram usage:        0 bytes
  3569 ;; Hardware stack levels required when called:   28
  3570 ;; This function calls:
  3571 ;;		_SYSTEM_Initialize
  3572 ;;		_StartTimer
  3573 ;;		_TimerDone
  3574 ;;		_WaitMs
  3575 ;;		___flge
  3576 ;;		_calc_model_data
  3577 ;;		_calc_ror_data
  3578 ;;		_check_adc_scan
  3579 ;;		_check_enter_button
  3580 ;;		_check_help
  3581 ;;		_clear_adc_scan
  3582 ;;		_clear_hid_pflags
  3583 ;;		_conv_raw_result
  3584 ;;		_convert_adc_data
  3585 ;;		_eaDogM_WriteCommand
  3586 ;;		_esr_check
  3587 ;;		_get_raw_result
  3588 ;;		_get_switch
  3589 ;;		_get_vterm_ptr
  3590 ;;		_hid_display
  3591 ;;		_init_bsoc
  3592 ;;		_init_display
  3593 ;;		_init_port_dma
  3594 ;;		_lp_filter
  3595 ;;		_mode_lamp_dim
  3596 ;;		_set_display_info
  3597 ;;		_set_load_relay_one
  3598 ;;		_set_load_relay_two
  3599 ;;		_set_vterm
  3600 ;;		_spinners
  3601 ;;		_sprintf
  3602 ;;		_srand
  3603 ;;		_start_adc_scan
  3604 ;;		_start_switch_handler
  3605 ;;		_static_soc
  3606 ;;		_update_lcd
  3607 ;; This function is called by:
  3608 ;;		Startup code after reset
  3609 ;; This function uses a reentrant model
  3610 ;;
  3611                           
  3612                           	psect	text0
  3613  0121F0                     __ptext0:
  3614                           	opt callstack 0
  3615  0121F0                     _main:
  3616                           	opt callstack 0
  3617                           
  3618                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3619  0121F0  0E06               	movlw	6
  3620  0121F2  26E1               	addwf	fsr1l,f,c
  3621  0121F4  0E00               	movlw	0
  3622  0121F6  22E2               	addwfc	fsr1h,f,c
  3623                           
  3624                           ;main.c: 176:  UI_STATES mode;;main.c: 177:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  3625                           ;stkvar	_inp_index @ sp[(-6)+3]
  3626                           
  3627                           ;incstack = 0
  3628  0121F8  0EFD               	movlw	-3
  3629  0121FA  6AE3               	clrf	plusw1,c
  3630                           
  3631                           ;stkvar	_i @ sp[(-6)+0]
  3632  0121FC  0EFA               	movlw	-6
  3633  0121FE  6AE3               	clrf	plusw1,c
  3634                           
  3635                           ;stkvar	_j @ sp[(-6)+2]
  3636  012200  0EFC               	movlw	-4
  3637  012202  6AE3               	clrf	plusw1,c
  3638  012204  2AE3               	incf	plusw1,f,c
  3639                           
  3640                           ;stkvar	_k @ sp[(-6)+1]
  3641  012206  0EFB               	movlw	-5
  3642  012208  6AE3               	clrf	plusw1,c
  3643  01220A  82E3               	bsf	plusw1,1,c
  3644                           
  3645                           ;main.c: 180:  SYSTEM_Initialize();
  3646  01220C  ECA1  F0D2         	call	_SYSTEM_Initialize	;wreg free
  3647                           
  3648                           ; BSR set to: 60
  3649                           ;main.c: 183:  (INTCON0bits.GIEH = 1);
  3650  012210  8ED2               	bsf	210,7,c	;volatile
  3651                           
  3652                           ; BSR set to: 60
  3653                           ;main.c: 186:  (INTCON0bits.GIEL = 1);
  3654  012212  8CD2               	bsf	210,6,c	;volatile
  3655                           
  3656                           ; BSR set to: 60
  3657                           ;main.c: 188:  V.ui_state = UI_STATE_INIT;
  3658  012214  0102               	movlb	2	; () banked
  3659  012216  6B00               	clrf	_V& (0+255),b	;volatile
  3660                           
  3661                           ; BSR set to: 2
  3662                           ;main.c: 193:  WaitMs(300);
  3663  012218  0E2C               	movlw	44
  3664  01221A  6EE6               	movwf	postinc1,c
  3665  01221C  0E01               	movlw	1
  3666  01221E  6EE6               	movwf	postinc1,c
  3667  012220  ECCF  F0D4         	call	_WaitMs	;wreg free
  3668                           
  3669                           ;main.c: 194:  if (PORTBbits.RB0) {
  3670  012224  A0CB               	btfss	203,0,c	;volatile
  3671  012226  D004               	goto	l12506
  3672                           
  3673                           ;main.c: 195:   mode = UI_STATE_HOST;
  3674                           ;stkvar	_mode @ sp[(-6)+4]
  3675  012228  0EFE               	movlw	-2
  3676  01222A  6AE3               	clrf	plusw1,c
  3677  01222C  2AE3               	incf	plusw1,f,c
  3678                           
  3679                           ;main.c: 196:  } else {
  3680  01222E  D004               	goto	l12508
  3681  012230                     l12506:
  3682                           
  3683                           ;main.c: 197:   mode = UI_STATE_LOG;
  3684                           ;stkvar	_mode @ sp[(-6)+4]
  3685  012230  0EFE               	movlw	-2
  3686  012232  6AE3               	clrf	plusw1,c
  3687  012234  80E3               	bsf	plusw1,0,c
  3688  012236  82E3               	bsf	plusw1,1,c	;indir
  3689  012238                     l12508:
  3690                           
  3691                           ;main.c: 200:  if (mode == UI_STATE_HOST) {
  3692                           ;stkvar	_mode @ sp[(-6)+4]
  3693  012238  0EFE               	movlw	-2
  3694  01223A  04E3               	decf	plusw1,w,c
  3695  01223C  A4D8               	btfss	status,2,c
  3696  01223E  D007               	goto	l1320
  3697                           
  3698                           ;main.c: 201:   do { LATDbits.LATD0 = 1; } while(0);
  3699  012240  80BD               	bsf	189,0,c	;volatile
  3700                           
  3701                           ;main.c: 202:   V.mode_pwm = 70;
  3702  012242  0E00               	movlw	0
  3703  012244  0102               	movlb	2	; () banked
  3704  012246  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  3705  012248  0E46               	movlw	70
  3706  01224A  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  3707                           
  3708                           ;main.c: 203:  } else {
  3709  01224C  D004               	goto	l12512
  3710  01224E                     l1320:
  3711  01224E  90BD               	bcf	189,0,c	;volatile
  3712                           
  3713                           ;main.c: 205:   V.mode_pwm = 0;
  3714  012250  0102               	movlb	2	; () banked
  3715  012252  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  3716  012254  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  3717  012256                     l12512:
  3718                           
  3719                           ; BSR set to: 2
  3720                           ;main.c: 207:  mode_lamp_dim(V.mode_pwm);
  3721  012256  0060  FA57  FFE6   	movff	_V+149,postinc1
  3722  01225C  0060  FA5B  FFE6   	movff	_V+150,postinc1
  3723  012262  EC97  F0D8         	call	_mode_lamp_dim	;wreg free
  3724  012266  D2A5               	goto	l12622
  3725  012268                     l12514:
  3726                           
  3727                           ; BSR set to: 2
  3728                           ;main.c: 215:    init_port_dma();
  3729  012268  EC53  F0D5         	call	_init_port_dma	;wreg free
  3730                           
  3731                           ; BSR set to: 59
  3732                           ;main.c: 217:    init_display();
  3733  01226C  EC58  F0C9         	call	_init_display	;wreg free
  3734                           
  3735                           ; BSR set to: 61
  3736                           ;main.c: 218:    eaDogM_WriteCommand(0b00001100);
  3737  012270  0E0C               	movlw	12
  3738  012272  6EE6               	movwf	postinc1,c
  3739  012274  ECFB  F0D8         	call	_eaDogM_WriteCommand	;wreg free
  3740                           
  3741                           ; BSR set to: 0
  3742                           ;main.c: 222:    set_load_relay_one(1);
  3743  012278  0E01               	movlw	1
  3744  01227A  6EE6               	movwf	postinc1,c
  3745  01227C  ECEB  F0D8         	call	_set_load_relay_one	;wreg free
  3746                           
  3747                           ;main.c: 223:    set_load_relay_two(1);
  3748  012280  0E01               	movlw	1
  3749  012282  6EE6               	movwf	postinc1,c
  3750  012284  ECE3  F0D8         	call	_set_load_relay_two	;wreg free
  3751                           
  3752                           ;main.c: 225:    V.ui_state = mode;
  3753                           ;stkvar	_mode @ sp[(-6)+4]
  3754  012288  0EFE               	movlw	-2
  3755  01228A  006F FF8C  F200    	movff	plusw1,_V	;volatile
  3756                           
  3757                           ;main.c: 226:    srand(1957);
  3758  012290  0EA5               	movlw	165
  3759  012292  6EE6               	movwf	postinc1,c
  3760  012294  0E07               	movlw	7
  3761  012296  6EE6               	movwf	postinc1,c
  3762  012298  EC05  F0D5         	call	_srand	;wreg free
  3763                           
  3764                           ; BSR set to: 1
  3765                           ;main.c: 227:    set_vterm(0);
  3766  01229C  0E00               	movlw	0
  3767  01229E  6EE6               	movwf	postinc1,c
  3768  0122A0  EC24  F0D8         	call	_set_vterm	;wreg free
  3769                           
  3770                           ;main.c: 228:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  3771  0122A4  0E51               	movlw	low STR_1
  3772  0122A6  6EE6               	movwf	postinc1,c
  3773  0122A8  0EFF               	movlw	high STR_1
  3774  0122AA  6EE6               	movwf	postinc1,c
  3775  0122AC  0E00               	movlw	0
  3776  0122AE  6EE6               	movwf	postinc1,c
  3777  0122B0  0E00               	movlw	0
  3778  0122B2  6EE6               	movwf	postinc1,c
  3779  0122B4  ECB3  F0D5         	call	_get_vterm_ptr	;wreg free
  3780  0122B8  0060  F007  FFE6   	movff	btemp,postinc1
  3781  0122BE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3782  0122C4  0E04               	movlw	4
  3783  0122C6  6EE6               	movwf	postinc1,c
  3784  0122C8  ECD8  F0C7         	call	_sprintf	;wreg free
  3785                           
  3786                           ; BSR set to: 0
  3787                           ;main.c: 229:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "1.003");
  3788  0122CC  0ED1               	movlw	low STR_3
  3789  0122CE  6EE6               	movwf	postinc1,c
  3790  0122D0  0EFF               	movlw	high STR_3
  3791  0122D2  6EE6               	movwf	postinc1,c
  3792  0122D4  0EA3               	movlw	low STR_2
  3793  0122D6  6EE6               	movwf	postinc1,c
  3794  0122D8  0EFF               	movlw	high STR_2
  3795  0122DA  6EE6               	movwf	postinc1,c
  3796  0122DC  0E00               	movlw	0
  3797  0122DE  6EE6               	movwf	postinc1,c
  3798  0122E0  0E01               	movlw	1
  3799  0122E2  6EE6               	movwf	postinc1,c
  3800  0122E4  ECB3  F0D5         	call	_get_vterm_ptr	;wreg free
  3801  0122E8  0060  F007  FFE6   	movff	btemp,postinc1
  3802  0122EE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3803  0122F4  0E06               	movlw	6
  3804  0122F6  6EE6               	movwf	postinc1,c
  3805  0122F8  ECD8  F0C7         	call	_sprintf	;wreg free
  3806                           
  3807                           ; BSR set to: 0
  3808                           ;main.c: 230:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  3809  0122FC  0E0D               	movlw	low STR_4
  3810  0122FE  6EE6               	movwf	postinc1,c
  3811  012300  0EFF               	movlw	high STR_4
  3812  012302  6EE6               	movwf	postinc1,c
  3813  012304  0E00               	movlw	0
  3814  012306  6EE6               	movwf	postinc1,c
  3815  012308  0E02               	movlw	2
  3816  01230A  6EE6               	movwf	postinc1,c
  3817  01230C  ECB3  F0D5         	call	_get_vterm_ptr	;wreg free
  3818  012310  0060  F007  FFE6   	movff	btemp,postinc1
  3819  012316  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3820  01231C  0E04               	movlw	4
  3821  01231E  6EE6               	movwf	postinc1,c
  3822  012320  ECD8  F0C7         	call	_sprintf	;wreg free
  3823                           
  3824                           ; BSR set to: 0
  3825                           ;main.c: 231:    sprintf(get_vterm_ptr(0, 2), "                ");
  3826  012324  0E3F               	movlw	low (STR_49+2)
  3827  012326  6EE6               	movwf	postinc1,c
  3828  012328  0EFE               	movlw	high (STR_49+2)
  3829  01232A  6EE6               	movwf	postinc1,c
  3830  01232C  0E02               	movlw	2
  3831  01232E  6EE6               	movwf	postinc1,c
  3832  012330  0E00               	movlw	0
  3833  012332  6EE6               	movwf	postinc1,c
  3834  012334  ECB3  F0D5         	call	_get_vterm_ptr	;wreg free
  3835  012338  0060  F007  FFE6   	movff	btemp,postinc1
  3836  01233E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3837  012344  0E04               	movlw	4
  3838  012346  6EE6               	movwf	postinc1,c
  3839  012348  ECD8  F0C7         	call	_sprintf	;wreg free
  3840                           
  3841                           ; BSR set to: 0
  3842                           ;main.c: 232:    sprintf(get_vterm_ptr(1, 2), "                ");
  3843  01234C  0E3F               	movlw	low (STR_49+2)
  3844  01234E  6EE6               	movwf	postinc1,c
  3845  012350  0EFE               	movlw	high (STR_49+2)
  3846  012352  6EE6               	movwf	postinc1,c
  3847  012354  0E02               	movlw	2
  3848  012356  6EE6               	movwf	postinc1,c
  3849  012358  0E01               	movlw	1
  3850  01235A  6EE6               	movwf	postinc1,c
  3851  01235C  ECB3  F0D5         	call	_get_vterm_ptr	;wreg free
  3852  012360  0060  F007  FFE6   	movff	btemp,postinc1
  3853  012366  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3854  01236C  0E04               	movlw	4
  3855  01236E  6EE6               	movwf	postinc1,c
  3856  012370  ECD8  F0C7         	call	_sprintf	;wreg free
  3857                           
  3858                           ; BSR set to: 0
  3859                           ;main.c: 233:    sprintf(get_vterm_ptr(2, 2), "                ");
  3860  012374  0E3F               	movlw	low (STR_49+2)
  3861  012376  6EE6               	movwf	postinc1,c
  3862  012378  0EFE               	movlw	high (STR_49+2)
  3863  01237A  6EE6               	movwf	postinc1,c
  3864  01237C  0E02               	movlw	2
  3865  01237E  6EE6               	movwf	postinc1,c
  3866  012380  0E02               	movlw	2
  3867  012382  6EE6               	movwf	postinc1,c
  3868  012384  ECB3  F0D5         	call	_get_vterm_ptr	;wreg free
  3869  012388  0060  F007  FFE6   	movff	btemp,postinc1
  3870  01238E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3871  012394  0E04               	movlw	4
  3872  012396  6EE6               	movwf	postinc1,c
  3873  012398  ECD8  F0C7         	call	_sprintf	;wreg free
  3874                           
  3875                           ; BSR set to: 0
  3876                           ;main.c: 234:    update_lcd(0);
  3877  01239C  0E00               	movlw	0
  3878  01239E  6EE6               	movwf	postinc1,c
  3879  0123A0  ECC9  F0C6         	call	_update_lcd	;wreg free
  3880                           
  3881                           ;main.c: 235:    WaitMs(1000);
  3882  0123A4  0EE8               	movlw	232
  3883  0123A6  6EE6               	movwf	postinc1,c
  3884  0123A8  0E03               	movlw	3
  3885  0123AA  6EE6               	movwf	postinc1,c
  3886  0123AC  ECCF  F0D4         	call	_WaitMs	;wreg free
  3887                           
  3888                           ;main.c: 236:    StartTimer(TMR_DISPLAY, 250);
  3889  0123B0  0EFA               	movlw	250
  3890  0123B2  6EE6               	movwf	postinc1,c
  3891  0123B4  0E00               	movlw	0
  3892  0123B6  6EE6               	movwf	postinc1,c
  3893  0123B8  0E0A               	movlw	10
  3894  0123BA  6EE6               	movwf	postinc1,c
  3895  0123BC  ECDC  F0D3         	call	_StartTimer	;wreg free
  3896                           
  3897                           ;main.c: 237:    StartTimer(TMR_ADC, 200);
  3898  0123C0  0EC8               	movlw	200
  3899  0123C2  6EE6               	movwf	postinc1,c
  3900  0123C4  0E00               	movlw	0
  3901  0123C6  6EE6               	movwf	postinc1,c
  3902  0123C8  0E01               	movlw	1
  3903  0123CA  6EE6               	movwf	postinc1,c
  3904  0123CC  ECDC  F0D3         	call	_StartTimer	;wreg free
  3905                           
  3906                           ;main.c: 238:    StartTimer(TMR_INFO, 3000);
  3907  0123D0  0EB8               	movlw	184
  3908  0123D2  6EE6               	movwf	postinc1,c
  3909  0123D4  0E0B               	movlw	11
  3910  0123D6  6EE6               	movwf	postinc1,c
  3911  0123D8  0E07               	movlw	7
  3912  0123DA  6EE6               	movwf	postinc1,c
  3913  0123DC  ECDC  F0D3         	call	_StartTimer	;wreg free
  3914                           
  3915                           ;main.c: 239:    StartTimer(TMR_FLIPPER, 1500);
  3916  0123E0  0EDC               	movlw	220
  3917  0123E2  6EE6               	movwf	postinc1,c
  3918  0123E4  0E05               	movlw	5
  3919  0123E6  6EE6               	movwf	postinc1,c
  3920  0123E8  0E0B               	movlw	11
  3921  0123EA  6EE6               	movwf	postinc1,c
  3922  0123EC  ECDC  F0D3         	call	_StartTimer	;wreg free
  3923                           
  3924                           ;main.c: 240:    StartTimer(TMR_HELPDIS, 3000);
  3925  0123F0  0EB8               	movlw	184
  3926  0123F2  6EE6               	movwf	postinc1,c
  3927  0123F4  0E0B               	movlw	11
  3928  0123F6  6EE6               	movwf	postinc1,c
  3929  0123F8  0E09               	movlw	9
  3930  0123FA  6EE6               	movwf	postinc1,c
  3931  0123FC  ECDC  F0D3         	call	_StartTimer	;wreg free
  3932                           
  3933                           ;main.c: 242:    start_adc_scan();
  3934  012400  ECB4  F0D0         	call	_start_adc_scan	;wreg free
  3935                           
  3936                           ;main.c: 243:    start_switch_handler();
  3937  012404  EC05  F0D8         	call	_start_switch_handler	;wreg free
  3938                           
  3939                           ; BSR set to: 57
  3940                           ;main.c: 244:    WaitMs(1000);
  3941  012408  0EE8               	movlw	232
  3942  01240A  6EE6               	movwf	postinc1,c
  3943  01240C  0E03               	movlw	3
  3944  01240E  6EE6               	movwf	postinc1,c
  3945  012410  ECCF  F0D4         	call	_WaitMs	;wreg free
  3946                           
  3947                           ;main.c: 249:    i_ror = 1;
  3948                           ;stkvar	_i_ror @ sp[(-6)+5]
  3949  012414  0EFF               	movlw	-1
  3950  012416  6AE3               	clrf	plusw1,c
  3951  012418  2AE3               	incf	plusw1,f,c
  3952  01241A                     l12564:
  3953                           
  3954                           ;main.c: 251:     calc_ror_data();
  3955  01241A  EC17  F0BF         	call	_calc_ror_data	;wreg free
  3956                           
  3957                           ;main.c: 252:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f         ", conv_raw_result(V_BA
      +                          T, CONV));
  3958  01241E  0E00               	movlw	0
  3959  012420  6EE6               	movwf	postinc1,c
  3960  012422  0E04               	movlw	4
  3961  012424  6EE6               	movwf	postinc1,c
  3962  012426  EC25  F0A5         	call	_conv_raw_result	;wreg free
  3963  01242A  0060  F007  FFE6   	movff	btemp,postinc1
  3964  012430  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3965  012436  0060  F00F  FFE6   	movff	btemp+2,postinc1
  3966  01243C  0060  F013  FFE6   	movff	btemp+3,postinc1
  3967  012442  0EFB               	movlw	low STR_8
  3968  012444  6EE6               	movwf	postinc1,c
  3969  012446  0EFE               	movlw	high STR_8
  3970  012448  6EE6               	movwf	postinc1,c
  3971  01244A  0E00               	movlw	0
  3972  01244C  6EE6               	movwf	postinc1,c
  3973  01244E  0E01               	movlw	1
  3974  012450  6EE6               	movwf	postinc1,c
  3975  012452  ECB3  F0D5         	call	_get_vterm_ptr	;wreg free
  3976  012456  0060  F007  FFE6   	movff	btemp,postinc1
  3977  01245C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3978  012462  0E08               	movlw	8
  3979  012464  6EE6               	movwf	postinc1,c
  3980  012466  ECD8  F0C7         	call	_sprintf	;wreg free
  3981                           
  3982                           ; BSR set to: 0
  3983                           ;main.c: 253:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f       ", spinners(5, 0),
      +                           i_ror, C.bv_ror);
  3984  01246A  0060  F5A3  FFE6   	movff	_C+104,postinc1
  3985  012470  0060  F5A7  FFE6   	movff	_C+105,postinc1
  3986  012476  0060  F5AB  FFE6   	movff	_C+106,postinc1
  3987  01247C  0060  F5AF  FFE6   	movff	_C+107,postinc1
  3988                           
  3989                           ;stkvar	_i_ror @ sp[(-10)+5]
  3990  012482  0EFB               	movlw	-5
  3991  012484  50E3               	movf	plusw1,w,c
  3992  012486  6EE6               	movwf	postinc1,c
  3993  012488  0E00               	movlw	0
  3994  01248A  6EE6               	movwf	postinc1,c
  3995  01248C  0E00               	movlw	0
  3996  01248E  6EE6               	movwf	postinc1,c
  3997  012490  0E05               	movlw	5
  3998  012492  6EE6               	movwf	postinc1,c
  3999  012494  ECCD  F0C9         	call	_spinners	;wreg free
  4000  012498  5001               	movf	btemp^0,w,c
  4001  01249A  6EE6               	movwf	postinc1,c
  4002  01249C  0E00               	movlw	0
  4003  01249E  6EE6               	movwf	postinc1,c
  4004  0124A0  0EBC               	movlw	low STR_9
  4005  0124A2  6EE6               	movwf	postinc1,c
  4006  0124A4  0EFD               	movlw	high STR_9
  4007  0124A6  6EE6               	movwf	postinc1,c
  4008  0124A8  0E00               	movlw	0
  4009  0124AA  6EE6               	movwf	postinc1,c
  4010  0124AC  0E02               	movlw	2
  4011  0124AE  6EE6               	movwf	postinc1,c
  4012  0124B0  ECB3  F0D5         	call	_get_vterm_ptr	;wreg free
  4013  0124B4  0060  F007  FFE6   	movff	btemp,postinc1
  4014  0124BA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4015  0124C0  0E0C               	movlw	12
  4016  0124C2  6EE6               	movwf	postinc1,c
  4017  0124C4  ECD8  F0C7         	call	_sprintf	;wreg free
  4018                           
  4019                           ; BSR set to: 0
  4020                           ;main.c: 254:     update_lcd(0);
  4021  0124C8  0E00               	movlw	0
  4022  0124CA  6EE6               	movwf	postinc1,c
  4023  0124CC  ECC9  F0C6         	call	_update_lcd	;wreg free
  4024                           
  4025                           ;main.c: 255:     WaitMs(2000);
  4026  0124D0  0ED0               	movlw	208
  4027  0124D2  6EE6               	movwf	postinc1,c
  4028  0124D4  0E07               	movlw	7
  4029  0124D6  6EE6               	movwf	postinc1,c
  4030  0124D8  ECCF  F0D4         	call	_WaitMs	;wreg free
  4031                           
  4032                           ;main.c: 256:     clear_adc_scan();
  4033  0124DC  EC49  F0D9         	call	_clear_adc_scan	;wreg free
  4034                           
  4035                           ; BSR set to: 0
  4036                           ;main.c: 257:     start_adc_scan();
  4037  0124E0  ECB4  F0D0         	call	_start_adc_scan	;wreg free
  4038                           
  4039                           ;main.c: 258:     WaitMs(500);
  4040  0124E4  0EF4               	movlw	244
  4041  0124E6  6EE6               	movwf	postinc1,c
  4042  0124E8  0E01               	movlw	1
  4043  0124EA  6EE6               	movwf	postinc1,c
  4044  0124EC  ECCF  F0D4         	call	_WaitMs	;wreg free
  4045                           
  4046                           ;main.c: 259:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  4047                           ;stkvar	_i_ror @ sp[(-6)+5]
  4048  0124F0  0EFF               	movlw	-1
  4049  0124F2  006F FF8C  F00C    	movff	plusw1,btemp+11
  4050  0124F8  2A0C               	incf	(btemp+11)^0,f,c
  4051  0124FA  0060  F033  FFE3   	movff	btemp+11,plusw1
  4052  012500  060C               	decf	(btemp+11)^0,f,c
  4053  012502  0E1E               	movlw	30
  4054  012504  600C               	cpfslt	(btemp+11)^0,c
  4055  012506  D018               	goto	u12030
  4056  012508  0060  F5A3  FFE6   	movff	_C+104,postinc1
  4057  01250E  0060  F5A7  FFE6   	movff	_C+105,postinc1
  4058  012514  0060  F5AB  FFE6   	movff	_C+106,postinc1
  4059  01251A  0060  F5AF  FFE6   	movff	_C+107,postinc1
  4060  012520  0E42               	movlw	66
  4061  012522  6EE6               	movwf	postinc1,c
  4062  012524  0E60               	movlw	96
  4063  012526  6EE6               	movwf	postinc1,c
  4064  012528  0E65               	movlw	101
  4065  01252A  6EE6               	movwf	postinc1,c
  4066  01252C  0E3C               	movlw	60
  4067  01252E  6EE6               	movwf	postinc1,c
  4068  012530  EC42  F0C1         	call	___flge	;wreg free
  4069  012534  A001               	btfss	btemp& (0+255),0,c
  4070  012536  D771               	goto	l12564
  4071  012538                     u12030:
  4072                           
  4073                           ;main.c: 261:    static_soc();
  4074  012538  EC76  F0D7         	call	_static_soc	;wreg free
  4075                           
  4076                           ; BSR set to: 1
  4077                           ;main.c: 262:    init_bsoc();
  4078  01253C  EC8A  F0C0         	call	_init_bsoc	;wreg free
  4079                           
  4080                           ;main.c: 263:    set_load_relay_one(0);
  4081  012540  0E00               	movlw	0
  4082  012542  6EE6               	movwf	postinc1,c
  4083  012544  ECEB  F0D8         	call	_set_load_relay_one	;wreg free
  4084                           
  4085                           ;main.c: 264:    set_load_relay_two(0);
  4086  012548  0E00               	movlw	0
  4087  01254A  6EE6               	movwf	postinc1,c
  4088  01254C  ECE3  F0D8         	call	_set_load_relay_two	;wreg free
  4089                           
  4090                           ;main.c: 265:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  4091  012550  0060  F6AB  FFE6   	movff	_C+170,postinc1
  4092  012556  0060  F6AF  FFE6   	movff	_C+171,postinc1
  4093  01255C  0EE9               	movlw	low STR_10
  4094  01255E  6EE6               	movwf	postinc1,c
  4095  012560  0EFD               	movlw	high STR_10
  4096  012562  6EE6               	movwf	postinc1,c
  4097  012564  0E00               	movlw	0
  4098  012566  6EE6               	movwf	postinc1,c
  4099  012568  0E00               	movlw	0
  4100  01256A  6EE6               	movwf	postinc1,c
  4101  01256C  ECB3  F0D5         	call	_get_vterm_ptr	;wreg free
  4102  012570  0060  F007  FFE6   	movff	btemp,postinc1
  4103  012576  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4104  01257C  0E06               	movlw	6
  4105  01257E  6EE6               	movwf	postinc1,c
  4106  012580  ECD8  F0C7         	call	_sprintf	;wreg free
  4107                           
  4108                           ; BSR set to: 0
  4109                           ;main.c: 266:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  4110  012584  0060  F633  FFE6   	movff	_C+140,postinc1
  4111  01258A  0060  F637  FFE6   	movff	_C+141,postinc1
  4112  012590  0060  F63B  FFE6   	movff	_C+142,postinc1
  4113  012596  0060  F63F  FFE6   	movff	_C+143,postinc1
  4114  01259C  0EFF               	movlw	low STR_11
  4115  01259E  6EE6               	movwf	postinc1,c
  4116  0125A0  0EFD               	movlw	high STR_11
  4117  0125A2  6EE6               	movwf	postinc1,c
  4118  0125A4  0E00               	movlw	0
  4119  0125A6  6EE6               	movwf	postinc1,c
  4120  0125A8  0E01               	movlw	1
  4121  0125AA  6EE6               	movwf	postinc1,c
  4122  0125AC  ECB3  F0D5         	call	_get_vterm_ptr	;wreg free
  4123  0125B0  0060  F007  FFE6   	movff	btemp,postinc1
  4124  0125B6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4125  0125BC  0E08               	movlw	8
  4126  0125BE  6EE6               	movwf	postinc1,c
  4127  0125C0  ECD8  F0C7         	call	_sprintf	;wreg free
  4128                           
  4129                           ; BSR set to: 0
  4130                           ;main.c: 267:    update_lcd(0);
  4131  0125C4  0E00               	movlw	0
  4132  0125C6  6EE6               	movwf	postinc1,c
  4133  0125C8  ECC9  F0C6         	call	_update_lcd	;wreg free
  4134                           
  4135                           ;main.c: 268:    WaitMs(2000);
  4136  0125CC  0ED0               	movlw	208
  4137  0125CE  6EE6               	movwf	postinc1,c
  4138  0125D0  0E07               	movlw	7
  4139  0125D2  6EE6               	movwf	postinc1,c
  4140  0125D4  ECCF  F0D4         	call	_WaitMs	;wreg free
  4141                           
  4142                           ;main.c: 269:    sprintf(get_vterm_ptr(0, 0), "Battery ESR     ");
  4143  0125D8  0E1E               	movlw	low STR_12
  4144  0125DA  6EE6               	movwf	postinc1,c
  4145  0125DC  0EFF               	movlw	high STR_12
  4146  0125DE  6EE6               	movwf	postinc1,c
  4147  0125E0  0E00               	movlw	0
  4148  0125E2  6EE6               	movwf	postinc1,c
  4149  0125E4  0E00               	movlw	0
  4150  0125E6  6EE6               	movwf	postinc1,c
  4151  0125E8  ECB3  F0D5         	call	_get_vterm_ptr	;wreg free
  4152  0125EC  0060  F007  FFE6   	movff	btemp,postinc1
  4153  0125F2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4154  0125F8  0E04               	movlw	4
  4155  0125FA  6EE6               	movwf	postinc1,c
  4156  0125FC  ECD8  F0C7         	call	_sprintf	;wreg free
  4157                           
  4158                           ; BSR set to: 0
  4159                           ;main.c: 270:    sprintf(get_vterm_ptr(1, 0), "Calculation     ");
  4160  012600  0E2F               	movlw	low STR_13
  4161  012602  6EE6               	movwf	postinc1,c
  4162  012604  0EFF               	movlw	high STR_13
  4163  012606  6EE6               	movwf	postinc1,c
  4164  012608  0E00               	movlw	0
  4165  01260A  6EE6               	movwf	postinc1,c
  4166  01260C  0E01               	movlw	1
  4167  01260E  6EE6               	movwf	postinc1,c
  4168  012610  ECB3  F0D5         	call	_get_vterm_ptr	;wreg free
  4169  012614  0060  F007  FFE6   	movff	btemp,postinc1
  4170  01261A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4171  012620  0E04               	movlw	4
  4172  012622  6EE6               	movwf	postinc1,c
  4173  012624  ECD8  F0C7         	call	_sprintf	;wreg free
  4174                           
  4175                           ; BSR set to: 0
  4176                           ;main.c: 271:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds");
  4177  012628  0E73               	movlw	low STR_14
  4178  01262A  6EE6               	movwf	postinc1,c
  4179  01262C  0EFF               	movlw	high STR_14
  4180  01262E  6EE6               	movwf	postinc1,c
  4181  012630  0E00               	movlw	0
  4182  012632  6EE6               	movwf	postinc1,c
  4183  012634  0E02               	movlw	2
  4184  012636  6EE6               	movwf	postinc1,c
  4185  012638  ECB3  F0D5         	call	_get_vterm_ptr	;wreg free
  4186  01263C  0060  F007  FFE6   	movff	btemp,postinc1
  4187  012642  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4188  012648  0E04               	movlw	4
  4189  01264A  6EE6               	movwf	postinc1,c
  4190  01264C  ECD8  F0C7         	call	_sprintf	;wreg free
  4191  012650                     l12606:
  4192                           
  4193                           ; BSR set to: 0
  4194                           ;main.c: 272:    update_lcd(0);
  4195  012650  0E00               	movlw	0
  4196  012652  6EE6               	movwf	postinc1,c
  4197  012654  ECC9  F0C6         	call	_update_lcd	;wreg free
  4198                           
  4199                           ;main.c: 273:    while (esr_check(0) < 0.0) {
  4200  012658  D01E               	goto	l12614
  4201  01265A                     l12608:
  4202                           
  4203                           ;main.c: 274:     i = 1;
  4204                           ;stkvar	_i @ sp[(-6)+0]
  4205  01265A  0EFA               	movlw	-6
  4206  01265C  6AE3               	clrf	plusw1,c
  4207  01265E  2AE3               	incf	plusw1,f,c
  4208                           
  4209                           ;main.c: 275:     sprintf(get_vterm_ptr(2, 0), "Checking  %d    ", i++);
  4210                           ;stkvar	_i @ sp[(-6)+0]
  4211  012660  0EFA               	movlw	-6
  4212  012662  2AE3               	incf	plusw1,f,c
  4213  012664  04E3               	decf	plusw1,w,c
  4214  012666  6EE6               	movwf	postinc1,c
  4215  012668  0E00               	movlw	0
  4216  01266A  6EE6               	movwf	postinc1,c
  4217  01266C  0E40               	movlw	low STR_15
  4218  01266E  6EE6               	movwf	postinc1,c
  4219  012670  0EFF               	movlw	high STR_15
  4220  012672  6EE6               	movwf	postinc1,c
  4221  012674  0E00               	movlw	0
  4222  012676  6EE6               	movwf	postinc1,c
  4223  012678  0E02               	movlw	2
  4224  01267A  6EE6               	movwf	postinc1,c
  4225  01267C  ECB3  F0D5         	call	_get_vterm_ptr	;wreg free
  4226  012680  0060  F007  FFE6   	movff	btemp,postinc1
  4227  012686  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4228  01268C  0E06               	movlw	6
  4229  01268E  6EE6               	movwf	postinc1,c
  4230  012690  ECD8  F0C7         	call	_sprintf	;wreg free
  4231  012694  D7DD               	goto	l12606
  4232  012696                     l12614:
  4233                           
  4234                           ;main.c: 273:    while (esr_check(0) < 0.0) {
  4235  012696  0E00               	movlw	0
  4236  012698  6EE6               	movwf	postinc1,c
  4237  01269A  EC35  F0B2         	call	_esr_check	;wreg free
  4238  01269E  BE04               	btfsc	(btemp+3)^0,7,c
  4239  0126A0  D7DC               	goto	l12608
  4240                           
  4241                           ;main.c: 278:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  4242  0126A2  0060  F613  FFE6   	movff	_C+132,postinc1
  4243  0126A8  0060  F617  FFE6   	movff	_C+133,postinc1
  4244  0126AE  0060  F61B  FFE6   	movff	_C+134,postinc1
  4245  0126B4  0060  F61F  FFE6   	movff	_C+135,postinc1
  4246  0126BA  0ED3               	movlw	low STR_16
  4247  0126BC  6EE6               	movwf	postinc1,c
  4248  0126BE  0EFD               	movlw	high STR_16
  4249  0126C0  6EE6               	movwf	postinc1,c
  4250  0126C2  0E00               	movlw	0
  4251  0126C4  6EE6               	movwf	postinc1,c
  4252  0126C6  0E00               	movlw	0
  4253  0126C8  6EE6               	movwf	postinc1,c
  4254  0126CA  ECB3  F0D5         	call	_get_vterm_ptr	;wreg free
  4255  0126CE  0060  F007  FFE6   	movff	btemp,postinc1
  4256  0126D4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4257  0126DA  0E08               	movlw	8
  4258  0126DC  6EE6               	movwf	postinc1,c
  4259  0126DE  ECD8  F0C7         	call	_sprintf	;wreg free
  4260                           
  4261                           ;main.c: 279:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  4262  0126E2  0060  F77F  FFE6   	movff	_C+223,postinc1
  4263  0126E8  0060  F783  FFE6   	movff	_C+224,postinc1
  4264  0126EE  0060  F787  FFE6   	movff	_C+225,postinc1
  4265  0126F4  0060  F78B  FFE6   	movff	_C+226,postinc1
  4266  0126FA  0060  F7AF  FFE6   	movff	_C+235,postinc1
  4267  012700  0060  F7B3  FFE6   	movff	_C+236,postinc1
  4268  012706  0060  F7B7  FFE6   	movff	_C+237,postinc1
  4269  01270C  0060  F7BB  FFE6   	movff	_C+238,postinc1
  4270  012712  0E70               	movlw	low STR_17
  4271  012714  6EE6               	movwf	postinc1,c
  4272  012716  0EFD               	movlw	high STR_17
  4273  012718  6EE6               	movwf	postinc1,c
  4274  01271A  0E00               	movlw	0
  4275  01271C  6EE6               	movwf	postinc1,c
  4276  01271E  0E01               	movlw	1
  4277  012720  6EE6               	movwf	postinc1,c
  4278  012722  ECB3  F0D5         	call	_get_vterm_ptr	;wreg free
  4279  012726  0060  F007  FFE6   	movff	btemp,postinc1
  4280  01272C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4281  012732  0E0C               	movlw	12
  4282  012734  6EE6               	movwf	postinc1,c
  4283  012736  ECD8  F0C7         	call	_sprintf	;wreg free
  4284                           
  4285                           ;main.c: 280:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  4286  01273A  0060  F78F  FFE6   	movff	_C+227,postinc1
  4287  012740  0060  F793  FFE6   	movff	_C+228,postinc1
  4288  012746  0060  F797  FFE6   	movff	_C+229,postinc1
  4289  01274C  0060  F79B  FFE6   	movff	_C+230,postinc1
  4290  012752  0060  F7BF  FFE6   	movff	_C+239,postinc1
  4291  012758  0060  F7C3  FFE6   	movff	_C+240,postinc1
  4292  01275E  0060  F7C7  FFE6   	movff	_C+241,postinc1
  4293  012764  0060  F7CB  FFE6   	movff	_C+242,postinc1
  4294  01276A  0E8A               	movlw	low STR_18
  4295  01276C  6EE6               	movwf	postinc1,c
  4296  01276E  0EFD               	movlw	high STR_18
  4297  012770  6EE6               	movwf	postinc1,c
  4298  012772  0E00               	movlw	0
  4299  012774  6EE6               	movwf	postinc1,c
  4300  012776  0E02               	movlw	2
  4301  012778  6EE6               	movwf	postinc1,c
  4302  01277A  ECB3  F0D5         	call	_get_vterm_ptr	;wreg free
  4303  01277E  0060  F007  FFE6   	movff	btemp,postinc1
  4304  012784  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4305  01278A  0E0C               	movlw	12
  4306  01278C  6EE6               	movwf	postinc1,c
  4307  01278E  ECD8  F0C7         	call	_sprintf	;wreg free
  4308                           
  4309                           ;main.c: 281:    update_lcd(0);
  4310  012792  0E00               	movlw	0
  4311  012794  6EE6               	movwf	postinc1,c
  4312  012796  ECC9  F0C6         	call	_update_lcd	;wreg free
  4313                           
  4314                           ;main.c: 282:    WaitMs(5000);
  4315  01279A  0E88               	movlw	136
  4316  01279C  6EE6               	movwf	postinc1,c
  4317  01279E  0E13               	movlw	19
  4318  0127A0  6EE6               	movwf	postinc1,c
  4319  0127A2  ECCF  F0D4         	call	_WaitMs	;wreg free
  4320                           
  4321                           ;main.c: 283:    break;
  4322  0127A6  D01C               	goto	l12624
  4323  0127A8                     l1335:
  4324                           
  4325                           ; BSR set to: 2
  4326                           ;main.c: 289:    P.SYSTEM_STABLE = 1;
  4327  0127A8  0100               	movlb	0	; () banked
  4328  0127AA  819F               	bsf	(_P+1)& (0+255),0,b	;volatile
  4329                           
  4330                           ;main.c: 290:    break;
  4331  0127AC  D019               	goto	l12624
  4332  0127AE                     l1337:
  4333                           
  4334                           ; BSR set to: 2
  4335                           ;main.c: 293:    V.ui_state = UI_STATE_INIT;
  4336  0127AE  6B00               	clrf	_V& (0+255),b	;volatile
  4337                           
  4338                           ;main.c: 294:    break;
  4339  0127B0  D017               	goto	l12624
  4340  0127B2                     l12622:
  4341  0127B2  0102               	movlb	2	; () banked
  4342  0127B4  5100               	movf	_V& (0+255),w,b	;volatile
  4343  0127B6  6E0B               	movwf	(btemp+10)^0,c
  4344  0127B8  6A0C               	clrf	(btemp+11)^0,c
  4345                           
  4346                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4347                           ; Switch size 1, requested type "simple"
  4348                           ; Number of cases is 1, Range of values is 0 to 0
  4349                           ; switch strategies available:
  4350                           ; Name         Instructions Cycles
  4351                           ; simple_byte            4     3 (average)
  4352                           ;	Chosen strategy is simple_byte
  4353  0127BA  500C               	movf	(btemp+11)^0,w,c
  4354  0127BC  0A00               	xorlw	0	; case 0
  4355  0127BE  A4D8               	btfss	status,2,c
  4356  0127C0  D7F6               	goto	l1337
  4357                           
  4358                           ; BSR set to: 2
  4359                           ; Switch size 1, requested type "simple"
  4360                           ; Number of cases is 5, Range of values is 0 to 5
  4361                           ; switch strategies available:
  4362                           ; Name         Instructions Cycles
  4363                           ; simple_byte           16     9 (average)
  4364                           ;	Chosen strategy is simple_byte
  4365  0127C2  500B               	movf	(btemp+10)^0,w,c
  4366  0127C4  0A00               	xorlw	0	; case 0
  4367  0127C6  B4D8               	btfsc	status,2,c
  4368  0127C8  D54F               	goto	l12514
  4369  0127CA  0A01               	xorlw	1	; case 1
  4370  0127CC  B4D8               	btfsc	status,2,c
  4371  0127CE  D008               	goto	l12624
  4372  0127D0  0A02               	xorlw	2	; case 3
  4373  0127D2  B4D8               	btfsc	status,2,c
  4374  0127D4  D005               	goto	l12624
  4375  0127D6  0A07               	xorlw	7	; case 4
  4376  0127D8  B4D8               	btfsc	status,2,c
  4377  0127DA  D7E6               	goto	l1335
  4378  0127DC  0A01               	xorlw	1	; case 5
  4379  0127DE  D7E7               	goto	l1337
  4380  0127E0                     l12624:
  4381                           
  4382                           ;main.c: 297:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  4383  0127E0  0E01               	movlw	1
  4384  0127E2  6EE6               	movwf	postinc1,c
  4385  0127E4  EC5D  F0D6         	call	_TimerDone	;wreg free
  4386  0127E8  5001               	movf	btemp^0,w,c
  4387  0127EA  B4D8               	btfsc	status,2,c
  4388  0127EC  D013               	goto	l12636
  4389  0127EE  EC39  F0D9         	call	_check_adc_scan	;wreg free
  4390  0127F2  5001               	movf	btemp^0,w,c
  4391  0127F4  B4D8               	btfsc	status,2,c
  4392  0127F6  D00E               	goto	l12636
  4393                           
  4394                           ;main.c: 301:    convert_adc_data();
  4395  0127F8  EC6A  F0CB         	call	_convert_adc_data	;wreg free
  4396                           
  4397                           ;main.c: 305:    clear_adc_scan();
  4398  0127FC  EC49  F0D9         	call	_clear_adc_scan	;wreg free
  4399                           
  4400                           ; BSR set to: 0
  4401                           ;main.c: 306:    start_adc_scan();
  4402  012800  ECB4  F0D0         	call	_start_adc_scan	;wreg free
  4403                           
  4404                           ;main.c: 307:    StartTimer(TMR_ADC, 200);
  4405  012804  0EC8               	movlw	200
  4406  012806  6EE6               	movwf	postinc1,c
  4407  012808  0E00               	movlw	0
  4408  01280A  6EE6               	movwf	postinc1,c
  4409  01280C  0E01               	movlw	1
  4410  01280E  6EE6               	movwf	postinc1,c
  4411  012810  ECDC  F0D3         	call	_StartTimer	;wreg free
  4412  012814                     l12636:
  4413                           
  4414                           ;main.c: 314:   if (TimerDone(TMR_DISPLAY)) {
  4415                           
  4416                           ;main.c: 310:   if (V.ticks) {
  4417  012814  0E0A               	movlw	10
  4418  012816  6EE6               	movwf	postinc1,c
  4419  012818  EC5D  F0D6         	call	_TimerDone	;wreg free
  4420  01281C  5001               	movf	btemp^0,w,c
  4421  01281E  B4D8               	btfsc	status,2,c
  4422  012820  D289               	goto	l12678
  4423                           
  4424                           ;main.c: 315:    if (TimerDone(TMR_HELPDIS)) {
  4425  012822  0E09               	movlw	9
  4426  012824  6EE6               	movwf	postinc1,c
  4427  012826  EC5D  F0D6         	call	_TimerDone	;wreg free
  4428  01282A  5001               	movf	btemp^0,w,c
  4429  01282C  B4D8               	btfsc	status,2,c
  4430  01282E  D004               	goto	l12644
  4431                           
  4432                           ;main.c: 316:     set_display_info(DIS_STR);
  4433  012830  0E00               	movlw	0
  4434  012832  6EE6               	movwf	postinc1,c
  4435  012834  EC33  F0D8         	call	_set_display_info	;wreg free
  4436  012838                     l12644:
  4437                           
  4438                           ;main.c: 318:    calc_model_data();
  4439  012838  EC98  F0AB         	call	_calc_model_data	;wreg free
  4440                           
  4441                           ; BSR set to: 1
  4442                           ;main.c: 325:     hid_display(&H);
  4443                           
  4444                           ;main.c: 320:    if (0) {
  4445  01283C  0EF3               	movlw	_H& (0+255)
  4446  01283E  6EE6               	movwf	postinc1,c
  4447  012840  EC5D  F0C8         	call	_hid_display	;wreg free
  4448                           
  4449                           ;main.c: 326:     switch (H.hid_display) {
  4450  012844  D252               	goto	l12670
  4451  012846                     l1345:
  4452                           
  4453                           ; BSR set to: 0
  4454                           ;main.c: 328:      V.calib = 0;
  4455  012846  0102               	movlb	2	; () banked
  4456  012848  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  4457                           
  4458                           ; BSR set to: 2
  4459                           ;main.c: 329:      sprintf(get_vterm_ptr(0, 0), "PV   PWR %3.2f    ", C.p_pv);
  4460  01284A  0060  F5E3  FFE6   	movff	_C+120,postinc1
  4461  012850  0060  F5E7  FFE6   	movff	_C+121,postinc1
  4462  012856  0060  F5EB  FFE6   	movff	_C+122,postinc1
  4463  01285C  0060  F5EF  FFE6   	movff	_C+123,postinc1
  4464  012862  0E76               	movlw	low STR_22
  4465  012864  6EE6               	movwf	postinc1,c
  4466  012866  0EFE               	movlw	high STR_22
  4467  012868  6EE6               	movwf	postinc1,c
  4468  01286A  0E00               	movlw	0
  4469  01286C  6EE6               	movwf	postinc1,c
  4470  01286E  0E00               	movlw	0
  4471  012870  6EE6               	movwf	postinc1,c
  4472  012872  ECB3  F0D5         	call	_get_vterm_ptr	;wreg free
  4473  012876  0060  F007  FFE6   	movff	btemp,postinc1
  4474  01287C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4475  012882  0E08               	movlw	8
  4476  012884  6EE6               	movwf	postinc1,c
  4477  012886  ECD8  F0C7         	call	_sprintf	;wreg free
  4478                           
  4479                           ;main.c: 330:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  4480  01288A  0060  F5C3  FFE6   	movff	_C+112,postinc1
  4481  012890  0060  F5C7  FFE6   	movff	_C+113,postinc1
  4482  012896  0060  F5CB  FFE6   	movff	_C+114,postinc1
  4483  01289C  0060  F5CF  FFE6   	movff	_C+115,postinc1
  4484  0128A2  0E9C               	movlw	low STR_23
  4485  0128A4  6EE6               	movwf	postinc1,c
  4486  0128A6  0EFE               	movlw	high STR_23
  4487  0128A8  6EE6               	movwf	postinc1,c
  4488  0128AA  0E00               	movlw	0
  4489  0128AC  6EE6               	movwf	postinc1,c
  4490  0128AE  0E01               	movlw	1
  4491  0128B0  6EE6               	movwf	postinc1,c
  4492  0128B2  ECB3  F0D5         	call	_get_vterm_ptr	;wreg free
  4493  0128B6  0060  F007  FFE6   	movff	btemp,postinc1
  4494  0128BC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4495  0128C2  0E08               	movlw	8
  4496  0128C4  6EE6               	movwf	postinc1,c
  4497  0128C6  ECD8  F0C7         	call	_sprintf	;wreg free
  4498                           
  4499                           ;main.c: 331:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  4500  0128CA  0060  F5D3  FFE6   	movff	_C+116,postinc1
  4501  0128D0  0060  F5D7  FFE6   	movff	_C+117,postinc1
  4502  0128D6  0060  F5DB  FFE6   	movff	_C+118,postinc1
  4503  0128DC  0060  F5DF  FFE6   	movff	_C+119,postinc1
  4504  0128E2  0E89               	movlw	low STR_24
  4505  0128E4  6EE6               	movwf	postinc1,c
  4506  0128E6  0EFE               	movlw	high STR_24
  4507  0128E8  6EE6               	movwf	postinc1,c
  4508  0128EA  0E00               	movlw	0
  4509  0128EC  6EE6               	movwf	postinc1,c
  4510  0128EE  0E02               	movlw	2
  4511  0128F0  6EE6               	movwf	postinc1,c
  4512  0128F2  ECB3  F0D5         	call	_get_vterm_ptr	;wreg free
  4513  0128F6  0060  F007  FFE6   	movff	btemp,postinc1
  4514  0128FC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4515  012902  0E08               	movlw	8
  4516  012904  6EE6               	movwf	postinc1,c
  4517  012906  ECD8  F0C7         	call	_sprintf	;wreg free
  4518                           
  4519                           ;main.c: 332:      break;
  4520  01290A  D204               	goto	l12672
  4521  01290C                     l1347:
  4522                           
  4523                           ; BSR set to: 0
  4524                           ;main.c: 334:      V.calib = 0;
  4525  01290C  0102               	movlb	2	; () banked
  4526  01290E  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  4527                           
  4528                           ; BSR set to: 2
  4529                           ;main.c: 335:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.ca
      +                          lc[C_PV]);
  4530  012910  0060  F413  FFE6   	movff	_C+4,postinc1
  4531  012916  0060  F417  FFE6   	movff	_C+5,postinc1
  4532  01291C  0060  F41B  FFE6   	movff	_C+6,postinc1
  4533  012922  0060  F41F  FFE6   	movff	_C+7,postinc1
  4534  012928  0060  F453  FFE6   	movff	_C+20,postinc1
  4535  01292E  0060  F457  FFE6   	movff	_C+21,postinc1
  4536  012934  0060  F45B  FFE6   	movff	_C+22,postinc1
  4537  01293A  0060  F45F  FFE6   	movff	_C+23,postinc1
  4538  012940  0EE8               	movlw	low STR_25
  4539  012942  6EE6               	movwf	postinc1,c
  4540  012944  0EFE               	movlw	high STR_25
  4541  012946  6EE6               	movwf	postinc1,c
  4542  012948  0E00               	movlw	0
  4543  01294A  6EE6               	movwf	postinc1,c
  4544  01294C  0E00               	movlw	0
  4545  01294E  6EE6               	movwf	postinc1,c
  4546  012950  ECB3  F0D5         	call	_get_vterm_ptr	;wreg free
  4547  012954  0060  F007  FFE6   	movff	btemp,postinc1
  4548  01295A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4549  012960  0E0C               	movlw	12
  4550  012962  6EE6               	movwf	postinc1,c
  4551  012964  ECD8  F0C7         	call	_sprintf	;wreg free
  4552                           
  4553                           ;main.c: 336:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.c
      +                          alc[C_BATT]);
  4554  012968  0060  F403  FFE6   	movff	_C,postinc1
  4555  01296E  0060  F407  FFE6   	movff	_C+1,postinc1
  4556  012974  0060  F40B  FFE6   	movff	_C+2,postinc1
  4557  01297A  0060  F40F  FFE6   	movff	_C+3,postinc1
  4558  012980  0060  F443  FFE6   	movff	_C+16,postinc1
  4559  012986  0060  F447  FFE6   	movff	_C+17,postinc1
  4560  01298C  0060  F44B  FFE6   	movff	_C+18,postinc1
  4561  012992  0060  F44F  FFE6   	movff	_C+19,postinc1
  4562  012998  0EC2               	movlw	low STR_26
  4563  01299A  6EE6               	movwf	postinc1,c
  4564  01299C  0EFE               	movlw	high STR_26
  4565  01299E  6EE6               	movwf	postinc1,c
  4566  0129A0  0E00               	movlw	0
  4567  0129A2  6EE6               	movwf	postinc1,c
  4568  0129A4  0E01               	movlw	1
  4569  0129A6  6EE6               	movwf	postinc1,c
  4570  0129A8  ECB3  F0D5         	call	_get_vterm_ptr	;wreg free
  4571  0129AC  0060  F007  FFE6   	movff	btemp,postinc1
  4572  0129B2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4573  0129B8  0E0C               	movlw	12
  4574  0129BA  6EE6               	movwf	postinc1,c
  4575  0129BC  ECD8  F0C7         	call	_sprintf	;wreg free
  4576                           
  4577                           ;main.c: 337:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_
      +                          load);
  4578  0129C0  0060  F503  FFE6   	movff	_C+64,postinc1
  4579  0129C6  0060  F507  FFE6   	movff	_C+65,postinc1
  4580  0129CC  0060  F50B  FFE6   	movff	_C+66,postinc1
  4581  0129D2  0060  F50F  FFE6   	movff	_C+67,postinc1
  4582  0129D8  0060  F423  FFE6   	movff	_C+8,postinc1
  4583  0129DE  0060  F427  FFE6   	movff	_C+9,postinc1
  4584  0129E4  0060  F42B  FFE6   	movff	_C+10,postinc1
  4585  0129EA  0060  F42F  FFE6   	movff	_C+11,postinc1
  4586  0129F0  0ED5               	movlw	low STR_27
  4587  0129F2  6EE6               	movwf	postinc1,c
  4588  0129F4  0EFE               	movlw	high STR_27
  4589  0129F6  6EE6               	movwf	postinc1,c
  4590  0129F8  0E00               	movlw	0
  4591  0129FA  6EE6               	movwf	postinc1,c
  4592  0129FC  0E02               	movlw	2
  4593  0129FE  6EE6               	movwf	postinc1,c
  4594  012A00  ECB3  F0D5         	call	_get_vterm_ptr	;wreg free
  4595  012A04  0060  F007  FFE6   	movff	btemp,postinc1
  4596  012A0A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4597  012A10  0E0C               	movlw	12
  4598  012A12  6EE6               	movwf	postinc1,c
  4599  012A14  ECD8  F0C7         	call	_sprintf	;wreg free
  4600                           
  4601                           ;main.c: 338:      break;
  4602  012A18  D17D               	goto	l12672
  4603  012A1A                     l1348:
  4604                           
  4605                           ; BSR set to: 0
  4606                           ;main.c: 340:      V.calib = 0;
  4607  012A1A  0102               	movlb	2	; () banked
  4608  012A1C  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  4609                           
  4610                           ; BSR set to: 2
  4611                           ;main.c: 341:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f    ", C.p_bat);
  4612  012A1E  0060  F5F3  FFE6   	movff	_C+124,postinc1
  4613  012A24  0060  F5F7  FFE6   	movff	_C+125,postinc1
  4614  012A2A  0060  F5FB  FFE6   	movff	_C+126,postinc1
  4615  012A30  0060  F5FF  FFE6   	movff	_C+127,postinc1
  4616  012A36  0EAF               	movlw	low STR_28
  4617  012A38  6EE6               	movwf	postinc1,c
  4618  012A3A  0EFE               	movlw	high STR_28
  4619  012A3C  6EE6               	movwf	postinc1,c
  4620  012A3E  0E00               	movlw	0
  4621  012A40  6EE6               	movwf	postinc1,c
  4622  012A42  0E00               	movlw	0
  4623  012A44  6EE6               	movwf	postinc1,c
  4624  012A46  ECB3  F0D5         	call	_get_vterm_ptr	;wreg free
  4625  012A4A  0060  F007  FFE6   	movff	btemp,postinc1
  4626  012A50  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4627  012A56  0E08               	movlw	8
  4628  012A58  6EE6               	movwf	postinc1,c
  4629  012A5A  ECD8  F0C7         	call	_sprintf	;wreg free
  4630                           
  4631                           ;main.c: 342:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f   ", C.dynamic_ah, C.p
      +                          v_ah);
  4632  012A5E  0060  F643  FFE6   	movff	_C+144,postinc1
  4633  012A64  0060  F647  FFE6   	movff	_C+145,postinc1
  4634  012A6A  0060  F64B  FFE6   	movff	_C+146,postinc1
  4635  012A70  0060  F64F  FFE6   	movff	_C+147,postinc1
  4636  012A76  0060  F633  FFE6   	movff	_C+140,postinc1
  4637  012A7C  0060  F637  FFE6   	movff	_C+141,postinc1
  4638  012A82  0060  F63B  FFE6   	movff	_C+142,postinc1
  4639  012A88  0060  F63F  FFE6   	movff	_C+143,postinc1
  4640  012A8E  0E29               	movlw	low STR_29
  4641  012A90  6EE6               	movwf	postinc1,c
  4642  012A92  0EFE               	movlw	high STR_29
  4643  012A94  6EE6               	movwf	postinc1,c
  4644  012A96  0E00               	movlw	0
  4645  012A98  6EE6               	movwf	postinc1,c
  4646  012A9A  0E01               	movlw	1
  4647  012A9C  6EE6               	movwf	postinc1,c
  4648  012A9E  ECB3  F0D5         	call	_get_vterm_ptr	;wreg free
  4649  012AA2  0060  F007  FFE6   	movff	btemp,postinc1
  4650  012AA8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4651  012AAE  0E0C               	movlw	12
  4652  012AB0  6EE6               	movwf	postinc1,c
  4653  012AB2  ECD8  F0C7         	call	_sprintf	;wreg free
  4654                           
  4655                           ;main.c: 343:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d     ", spinners(5, 0), C
      +                          .soc, C.runtime);
  4656  012AB6  0060  F6A3  FFE6   	movff	_C+168,postinc1
  4657  012ABC  0060  F6A7  FFE6   	movff	_C+169,postinc1
  4658  012AC2  0060  F6AB  FFE6   	movff	_C+170,postinc1
  4659  012AC8  0060  F6AF  FFE6   	movff	_C+171,postinc1
  4660  012ACE  0E00               	movlw	0
  4661  012AD0  6EE6               	movwf	postinc1,c
  4662  012AD2  0E05               	movlw	5
  4663  012AD4  6EE6               	movwf	postinc1,c
  4664  012AD6  ECCD  F0C9         	call	_spinners	;wreg free
  4665  012ADA  5001               	movf	btemp^0,w,c
  4666  012ADC  6EE6               	movwf	postinc1,c
  4667  012ADE  0E00               	movlw	0
  4668  012AE0  6EE6               	movwf	postinc1,c
  4669  012AE2  0E15               	movlw	low STR_30
  4670  012AE4  6EE6               	movwf	postinc1,c
  4671  012AE6  0EFE               	movlw	high STR_30
  4672  012AE8  6EE6               	movwf	postinc1,c
  4673  012AEA  0E00               	movlw	0
  4674  012AEC  6EE6               	movwf	postinc1,c
  4675  012AEE  0E02               	movlw	2
  4676  012AF0  6EE6               	movwf	postinc1,c
  4677  012AF2  ECB3  F0D5         	call	_get_vterm_ptr	;wreg free
  4678  012AF6  0060  F007  FFE6   	movff	btemp,postinc1
  4679  012AFC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4680  012B02  0E0A               	movlw	10
  4681  012B04  6EE6               	movwf	postinc1,c
  4682  012B06  ECD8  F0C7         	call	_sprintf	;wreg free
  4683                           
  4684                           ;main.c: 344:      break;
  4685  012B0A  D104               	goto	l12672
  4686  012B0C                     l12656:
  4687                           
  4688                           ; BSR set to: 0
  4689                           ;main.c: 346:      if (!V.calib) {
  4690  012B0C  0102               	movlb	2	; () banked
  4691  012B0E  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  4692  012B10  A4D8               	btfss	status,2,c
  4693  012B12  D02D               	goto	l12660
  4694                           
  4695                           ; BSR set to: 2
  4696                           ;main.c: 347:       lp_filter(0.0, i, -1);
  4697  012B14  0EFF               	movlw	255
  4698  012B16  6EE6               	movwf	postinc1,c
  4699                           
  4700                           ;stkvar	_i @ sp[(-7)+0]
  4701  012B18  0EF9               	movlw	-7
  4702  012B1A  50E3               	movf	plusw1,w,c
  4703  012B1C  6EE6               	movwf	postinc1,c
  4704  012B1E  0E00               	movlw	0
  4705  012B20  6EE6               	movwf	postinc1,c
  4706  012B22  0E00               	movlw	0
  4707  012B24  6EE6               	movwf	postinc1,c
  4708  012B26  0E00               	movlw	0
  4709  012B28  6EE6               	movwf	postinc1,c
  4710  012B2A  0E00               	movlw	0
  4711  012B2C  6EE6               	movwf	postinc1,c
  4712  012B2E  ECAE  F0BC         	call	_lp_filter	;wreg free
  4713                           
  4714                           ;main.c: 348:       lp_filter(0.0, j, -1);
  4715  012B32  0EFF               	movlw	255
  4716  012B34  6EE6               	movwf	postinc1,c
  4717                           
  4718                           ;stkvar	_j @ sp[(-7)+2]
  4719  012B36  0EFB               	movlw	-5
  4720  012B38  50E3               	movf	plusw1,w,c
  4721  012B3A  6EE6               	movwf	postinc1,c
  4722  012B3C  0E00               	movlw	0
  4723  012B3E  6EE6               	movwf	postinc1,c
  4724  012B40  0E00               	movlw	0
  4725  012B42  6EE6               	movwf	postinc1,c
  4726  012B44  0E00               	movlw	0
  4727  012B46  6EE6               	movwf	postinc1,c
  4728  012B48  0E00               	movlw	0
  4729  012B4A  6EE6               	movwf	postinc1,c
  4730  012B4C  ECAE  F0BC         	call	_lp_filter	;wreg free
  4731                           
  4732                           ;main.c: 349:       lp_filter(0.0, k, -1);
  4733  012B50  0EFF               	movlw	255
  4734  012B52  6EE6               	movwf	postinc1,c
  4735                           
  4736                           ;stkvar	_k @ sp[(-7)+1]
  4737  012B54  0EFA               	movlw	-6
  4738  012B56  50E3               	movf	plusw1,w,c
  4739  012B58  6EE6               	movwf	postinc1,c
  4740  012B5A  0E00               	movlw	0
  4741  012B5C  6EE6               	movwf	postinc1,c
  4742  012B5E  0E00               	movlw	0
  4743  012B60  6EE6               	movwf	postinc1,c
  4744  012B62  0E00               	movlw	0
  4745  012B64  6EE6               	movwf	postinc1,c
  4746  012B66  0E00               	movlw	0
  4747  012B68  6EE6               	movwf	postinc1,c
  4748  012B6A  ECAE  F0BC         	call	_lp_filter	;wreg free
  4749  012B6E                     l12660:
  4750                           
  4751                           ;main.c: 351:      V.calib = 1;
  4752  012B6E  0E01               	movlw	1
  4753  012B70  0102               	movlb	2	; () banked
  4754  012B72  6FAB               	movwf	(_V+171)& (0+255),b	;volatile
  4755                           
  4756                           ; BSR set to: 2
  4757                           ;main.c: 352:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.
      +                          calc[i], get_switch(SSELECT));
  4758  012B74  0E02               	movlw	2
  4759  012B76  6EE6               	movwf	postinc1,c
  4760  012B78  ECCA  F0D5         	call	_get_switch	;wreg free
  4761  012B7C  5001               	movf	btemp^0,w,c
  4762  012B7E  6EE6               	movwf	postinc1,c
  4763  012B80  0E00               	movlw	0
  4764  012B82  6EE6               	movwf	postinc1,c
  4765                           
  4766                           ;stkvar	_i @ sp[(-8)+0]
  4767  012B84  0EF8               	movlw	-8
  4768  012B86  50E3               	movf	plusw1,w,c
  4769  012B88  0D04               	mullw	4
  4770  012B8A  0E00               	movlw	low _C
  4771  012B8C  24F3               	addwf	243,w,c
  4772  012B8E  6ED9               	movwf	fsr2l,c
  4773  012B90  0E01               	movlw	high _C
  4774  012B92  20F4               	addwfc	prodh,w,c
  4775  012B94  6EDA               	movwf	fsr2h,c
  4776  012B96  006F FF7B FFE6     	movff	postinc2,postinc1
  4777  012B9C  006F FF7B FFE6     	movff	postinc2,postinc1
  4778  012BA2  006F FF7B FFE6     	movff	postinc2,postinc1
  4779  012BA8  006F FF7B FFE6     	movff	postinc2,postinc1
  4780                           
  4781                           ;stkvar	_i @ sp[(-12)+0]
  4782  012BAE  0EF4               	movlw	-12
  4783  012BB0  50E3               	movf	plusw1,w,c
  4784  012BB2  6EE6               	movwf	postinc1,c
  4785  012BB4  EC42  F0D8         	call	_get_raw_result	;wreg free
  4786  012BB8  0060  F007  FFE6   	movff	btemp,postinc1
  4787  012BBE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4788  012BC4  0E84               	movlw	low STR_19
  4789  012BC6  6EE6               	movwf	postinc1,c
  4790  012BC8  0EFF               	movlw	high STR_19
  4791  012BCA  6EE6               	movwf	postinc1,c
  4792  012BCC  0E00               	movlw	0
  4793  012BCE  6EE6               	movwf	postinc1,c
  4794  012BD0  0E00               	movlw	0
  4795  012BD2  6EE6               	movwf	postinc1,c
  4796  012BD4  ECB3  F0D5         	call	_get_vterm_ptr	;wreg free
  4797  012BD8  0060  F007  FFE6   	movff	btemp,postinc1
  4798  012BDE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4799  012BE4  0E0C               	movlw	12
  4800  012BE6  6EE6               	movwf	postinc1,c
  4801  012BE8  ECD8  F0C7         	call	_sprintf	;wreg free
  4802                           
  4803                           ; BSR set to: 0
  4804                           ;main.c: 353:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.
      +                          calc[j], get_switch(SENTER));
  4805  012BEC  0E03               	movlw	3
  4806  012BEE  6EE6               	movwf	postinc1,c
  4807  012BF0  ECCA  F0D5         	call	_get_switch	;wreg free
  4808  012BF4  5001               	movf	btemp^0,w,c
  4809  012BF6  6EE6               	movwf	postinc1,c
  4810  012BF8  0E00               	movlw	0
  4811  012BFA  6EE6               	movwf	postinc1,c
  4812                           
  4813                           ;stkvar	_j @ sp[(-8)+2]
  4814  012BFC  0EFA               	movlw	-6
  4815  012BFE  50E3               	movf	plusw1,w,c
  4816  012C00  0D04               	mullw	4
  4817  012C02  0E00               	movlw	low _C
  4818  012C04  24F3               	addwf	243,w,c
  4819  012C06  6ED9               	movwf	fsr2l,c
  4820  012C08  0E01               	movlw	high _C
  4821  012C0A  20F4               	addwfc	prodh,w,c
  4822  012C0C  6EDA               	movwf	fsr2h,c
  4823  012C0E  006F FF7B FFE6     	movff	postinc2,postinc1
  4824  012C14  006F FF7B FFE6     	movff	postinc2,postinc1
  4825  012C1A  006F FF7B FFE6     	movff	postinc2,postinc1
  4826  012C20  006F FF7B FFE6     	movff	postinc2,postinc1
  4827                           
  4828                           ;stkvar	_j @ sp[(-12)+2]
  4829  012C26  0EF6               	movlw	-10
  4830  012C28  50E3               	movf	plusw1,w,c
  4831  012C2A  6EE6               	movwf	postinc1,c
  4832  012C2C  EC42  F0D8         	call	_get_raw_result	;wreg free
  4833  012C30  0060  F007  FFE6   	movff	btemp,postinc1
  4834  012C36  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4835  012C3C  0E84               	movlw	low STR_19
  4836  012C3E  6EE6               	movwf	postinc1,c
  4837  012C40  0EFF               	movlw	high STR_19
  4838  012C42  6EE6               	movwf	postinc1,c
  4839  012C44  0E00               	movlw	0
  4840  012C46  6EE6               	movwf	postinc1,c
  4841  012C48  0E01               	movlw	1
  4842  012C4A  6EE6               	movwf	postinc1,c
  4843  012C4C  ECB3  F0D5         	call	_get_vterm_ptr	;wreg free
  4844  012C50  0060  F007  FFE6   	movff	btemp,postinc1
  4845  012C56  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4846  012C5C  0E0C               	movlw	12
  4847  012C5E  6EE6               	movwf	postinc1,c
  4848  012C60  ECD8  F0C7         	call	_sprintf	;wreg free
  4849                           
  4850                           ; BSR set to: 0
  4851                           ;main.c: 354:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C
      +                          .calc[k], inp_index + 1);
  4852                           ;stkvar	_inp_index @ sp[(-6)+3]
  4853  012C64  0EFD               	movlw	-3
  4854  012C66  50E3               	movf	plusw1,w,c
  4855  012C68  6E0B               	movwf	(btemp+10)^0,c
  4856  012C6A  6A0C               	clrf	(btemp+11)^0,c
  4857  012C6C  0E01               	movlw	1
  4858  012C6E  260B               	addwf	(btemp+10)^0,f,c
  4859  012C70  0E00               	movlw	0
  4860  012C72  220C               	addwfc	(btemp+11)^0,f,c
  4861  012C74  0060  F02F  FFE6   	movff	btemp+10,postinc1
  4862  012C7A  0060  F033  FFE6   	movff	btemp+11,postinc1
  4863                           
  4864                           ;stkvar	_k @ sp[(-8)+1]
  4865  012C80  0EF9               	movlw	-7
  4866  012C82  50E3               	movf	plusw1,w,c
  4867  012C84  0D04               	mullw	4
  4868  012C86  0E00               	movlw	low _C
  4869  012C88  24F3               	addwf	243,w,c
  4870  012C8A  6ED9               	movwf	fsr2l,c
  4871  012C8C  0E01               	movlw	high _C
  4872  012C8E  20F4               	addwfc	prodh,w,c
  4873  012C90  6EDA               	movwf	fsr2h,c
  4874  012C92  006F FF7B FFE6     	movff	postinc2,postinc1
  4875  012C98  006F FF7B FFE6     	movff	postinc2,postinc1
  4876  012C9E  006F FF7B FFE6     	movff	postinc2,postinc1
  4877  012CA4  006F FF7B FFE6     	movff	postinc2,postinc1
  4878                           
  4879                           ;stkvar	_k @ sp[(-12)+1]
  4880  012CAA  0EF5               	movlw	-11
  4881  012CAC  50E3               	movf	plusw1,w,c
  4882  012CAE  6EE6               	movwf	postinc1,c
  4883  012CB0  EC42  F0D8         	call	_get_raw_result	;wreg free
  4884  012CB4  0060  F007  FFE6   	movff	btemp,postinc1
  4885  012CBA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4886  012CC0  0E62               	movlw	low STR_21
  4887  012CC2  6EE6               	movwf	postinc1,c
  4888  012CC4  0EFF               	movlw	high STR_21
  4889  012CC6  6EE6               	movwf	postinc1,c
  4890  012CC8  0E00               	movlw	0
  4891  012CCA  6EE6               	movwf	postinc1,c
  4892  012CCC  0E02               	movlw	2
  4893  012CCE  6EE6               	movwf	postinc1,c
  4894  012CD0  ECB3  F0D5         	call	_get_vterm_ptr	;wreg free
  4895  012CD4  0060  F007  FFE6   	movff	btemp,postinc1
  4896  012CDA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4897  012CE0  0E0C               	movlw	12
  4898  012CE2  6EE6               	movwf	postinc1,c
  4899  012CE4  ECD8  F0C7         	call	_sprintf	;wreg free
  4900                           
  4901                           ;main.c: 355:      break;
  4902  012CE8  D015               	goto	l12672
  4903  012CEA                     l12670:
  4904  012CEA  0100               	movlb	0	; () banked
  4905  012CEC  51F3               	movf	_H& (0+255),w,b
  4906  012CEE  6E0B               	movwf	(btemp+10)^0,c
  4907  012CF0  6A0C               	clrf	(btemp+11)^0,c
  4908                           
  4909                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4910                           ; Switch size 1, requested type "simple"
  4911                           ; Number of cases is 1, Range of values is 0 to 0
  4912                           ; switch strategies available:
  4913                           ; Name         Instructions Cycles
  4914                           ; simple_byte            4     3 (average)
  4915                           ;	Chosen strategy is simple_byte
  4916  012CF2  500C               	movf	(btemp+11)^0,w,c
  4917  012CF4  0A00               	xorlw	0	; case 0
  4918  012CF6  A4D8               	btfss	status,2,c
  4919  012CF8  D00D               	goto	l12672
  4920                           
  4921                           ; BSR set to: 0
  4922                           ; Switch size 1, requested type "simple"
  4923                           ; Number of cases is 4, Range of values is 0 to 3
  4924                           ; switch strategies available:
  4925                           ; Name         Instructions Cycles
  4926                           ; simple_byte           13     7 (average)
  4927                           ;	Chosen strategy is simple_byte
  4928  012CFA  500B               	movf	(btemp+10)^0,w,c
  4929  012CFC  0A00               	xorlw	0	; case 0
  4930  012CFE  B4D8               	btfsc	status,2,c
  4931  012D00  D605               	goto	l1347
  4932  012D02  0A01               	xorlw	1	; case 1
  4933  012D04  B4D8               	btfsc	status,2,c
  4934  012D06  D59F               	goto	l1345
  4935  012D08  0A03               	xorlw	3	; case 2
  4936  012D0A  B4D8               	btfsc	status,2,c
  4937  012D0C  D686               	goto	l1348
  4938  012D0E  0A01               	xorlw	1	; case 3
  4939  012D10  B4D8               	btfsc	status,2,c
  4940  012D12  D6FC               	goto	l12656
  4941  012D14                     l12672:
  4942                           
  4943                           ; BSR set to: 0
  4944                           ;main.c: 359:     clear_hid_pflags(&H);
  4945  012D14  0EF3               	movlw	_H& (0+255)
  4946  012D16  6EE6               	movwf	postinc1,c
  4947  012D18  EC88  F0D7         	call	_clear_hid_pflags	;wreg free
  4948                           
  4949                           ;main.c: 361:    StartTimer(TMR_DISPLAY, 250);
  4950  012D1C  0EFA               	movlw	250
  4951  012D1E  6EE6               	movwf	postinc1,c
  4952  012D20  0E00               	movlw	0
  4953  012D22  6EE6               	movwf	postinc1,c
  4954  012D24  0E0A               	movlw	10
  4955  012D26  6EE6               	movwf	postinc1,c
  4956  012D28  ECDC  F0D3         	call	_StartTimer	;wreg free
  4957                           
  4958                           ;main.c: 362:    update_lcd(0);
  4959  012D2C  0E00               	movlw	0
  4960  012D2E  6EE6               	movwf	postinc1,c
  4961  012D30  ECC9  F0C6         	call	_update_lcd	;wreg free
  4962  012D34                     l12678:
  4963                           
  4964                           ;main.c: 368:   check_help(V.flipper);
  4965  012D34  0102               	movlb	2	; () banked
  4966  012D36  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  4967  012D38  6EE6               	movwf	postinc1,c
  4968  012D3A  ECA3  F0B9         	call	_check_help	;wreg free
  4969                           
  4970                           ;main.c: 370:   if (check_enter_button(&H)) {
  4971  012D3E  0EF3               	movlw	_H& (0+255)
  4972  012D40  6EE6               	movwf	postinc1,c
  4973  012D42  ECFC  F0D3         	call	_check_enter_button	;wreg free
  4974  012D46  5001               	movf	btemp^0,w,c
  4975  012D48  B4D8               	btfsc	status,2,c
  4976  012D4A  D062               	goto	l1352
  4977                           
  4978                           ;main.c: 371:    V.calib = 0;
  4979  012D4C  0102               	movlb	2	; () banked
  4980  012D4E  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  4981                           
  4982                           ; BSR set to: 2
  4983                           ;main.c: 372:    inp_index += 3;
  4984                           ;stkvar	_inp_index @ sp[(-6)+3]
  4985  012D50  0EFD               	movlw	-3
  4986  012D52  006F FF8C  F001    	movff	plusw1,btemp
  4987  012D58  0E03               	movlw	3
  4988  012D5A  2601               	addwf	btemp^0,f,c
  4989  012D5C  0EFD               	movlw	-3
  4990  012D5E  0060  F007  FFE3   	movff	btemp,plusw1
  4991                           
  4992                           ;main.c: 373:    if (inp_index > 9)
  4993                           ;stkvar	_inp_index @ sp[(-6)+3]
  4994  012D64  0EFD               	movlw	-3
  4995  012D66  006F FF8C  F001    	movff	plusw1,btemp
  4996  012D6C  0E09               	movlw	9
  4997  012D6E  6401               	cpfsgt	btemp^0,c
  4998  012D70  D03A               	goto	l12706
  4999                           
  5000                           ; BSR set to: 2
  5001                           ;main.c: 374:     inp_index = 0;
  5002                           ;stkvar	_inp_index @ sp[(-6)+3]
  5003  012D72  0EFD               	movlw	-3
  5004  012D74  6AE3               	clrf	plusw1,c
  5005  012D76  D037               	goto	l12706
  5006  012D78                     l12688:
  5007                           
  5008                           ; BSR set to: 2
  5009                           ;main.c: 377:     i = C_BATT;
  5010                           ;stkvar	_i @ sp[(-6)+0]
  5011  012D78  0EFA               	movlw	-6
  5012  012D7A  6AE3               	clrf	plusw1,c
  5013                           
  5014                           ; BSR set to: 2
  5015                           ;main.c: 378:     j = C_PV;
  5016                           ;stkvar	_j @ sp[(-6)+2]
  5017  012D7C  0EFC               	movlw	-4
  5018  012D7E  6AE3               	clrf	plusw1,c
  5019  012D80  2AE3               	incf	plusw1,f,c
  5020                           
  5021                           ; BSR set to: 2
  5022                           ;main.c: 379:     k = V_CC;
  5023                           ;stkvar	_k @ sp[(-6)+1]
  5024  012D82  0EFB               	movlw	-5
  5025  012D84  6AE3               	clrf	plusw1,c
  5026  012D86  82E3               	bsf	plusw1,1,c
  5027                           
  5028                           ;main.c: 380:     break;
  5029  012D88  D043               	goto	l1352
  5030  012D8A                     l12694:
  5031                           
  5032                           ; BSR set to: 2
  5033                           ;main.c: 382:     i = V_BAT;
  5034                           ;stkvar	_i @ sp[(-6)+0]
  5035  012D8A  0EFA               	movlw	-6
  5036  012D8C  6AE3               	clrf	plusw1,c
  5037  012D8E  84E3               	bsf	plusw1,2,c
  5038                           
  5039                           ;main.c: 383:     j = V_PV;
  5040                           ;stkvar	_j @ sp[(-6)+2]
  5041  012D90  0EFC               	movlw	-4
  5042  012D92  6AE3               	clrf	plusw1,c
  5043  012D94  80E3               	bsf	plusw1,0,c
  5044  012D96  84E3               	bsf	plusw1,2,c	;indir
  5045                           
  5046                           ;main.c: 384:     k = V_CBUS;
  5047                           ;stkvar	_k @ sp[(-6)+1]
  5048  012D98  0EFB               	movlw	-5
  5049  012D9A  6AE3               	clrf	plusw1,c
  5050  012D9C  82E3               	bsf	plusw1,1,c
  5051  012D9E  84E3               	bsf	plusw1,2,c	;indir
  5052                           
  5053                           ;main.c: 385:     break;
  5054  012DA0  D037               	goto	l1352
  5055  012DA2                     l12696:
  5056                           
  5057                           ; BSR set to: 2
  5058                           ;main.c: 387:     i = V_BBAT;
  5059                           ;stkvar	_i @ sp[(-6)+0]
  5060  012DA2  0EFA               	movlw	-6
  5061  012DA4  6AE3               	clrf	plusw1,c
  5062  012DA6  82E3               	bsf	plusw1,1,c
  5063  012DA8  86E3               	bsf	plusw1,3,c	;indir
  5064                           
  5065                           ; BSR set to: 2
  5066                           ;main.c: 388:     j = V_TEMP;
  5067  012DAA  0E0B               	movlw	11
  5068  012DAC  6E0C               	movwf	(btemp+11)^0,c
  5069                           
  5070                           ;stkvar	_j @ sp[(-6)+2]
  5071  012DAE  0EFC               	movlw	-4
  5072  012DB0  0060  F033  FFE3   	movff	btemp+11,plusw1
  5073                           
  5074                           ; BSR set to: 2
  5075                           ;main.c: 389:     k = V_INVERTER;
  5076                           ;stkvar	_k @ sp[(-6)+1]
  5077  012DB6  0EFB               	movlw	-5
  5078  012DB8  6AE3               	clrf	plusw1,c
  5079  012DBA  84E3               	bsf	plusw1,2,c
  5080  012DBC  86E3               	bsf	plusw1,3,c	;indir
  5081                           
  5082                           ;main.c: 390:     break;
  5083  012DBE  D028               	goto	l1352
  5084  012DC0                     l12702:
  5085                           
  5086                           ; BSR set to: 2
  5087                           ;main.c: 392:     i = channel_ANB5;
  5088  012DC0  0E0D               	movlw	13
  5089  012DC2  6E0C               	movwf	(btemp+11)^0,c
  5090                           
  5091                           ;stkvar	_i @ sp[(-6)+0]
  5092  012DC4  0EFA               	movlw	-6
  5093  012DC6  0060  F033  FFE3   	movff	btemp+11,plusw1
  5094                           
  5095                           ;main.c: 393:     j = channel_ANB5;
  5096  012DCC  0E0D               	movlw	13
  5097  012DCE  6E0C               	movwf	(btemp+11)^0,c
  5098                           
  5099                           ;stkvar	_j @ sp[(-6)+2]
  5100  012DD0  0EFC               	movlw	-4
  5101  012DD2  0060  F033  FFE3   	movff	btemp+11,plusw1
  5102                           
  5103                           ;main.c: 394:     k = channel_ANB5;
  5104  012DD8  0E0D               	movlw	13
  5105  012DDA  6E0C               	movwf	(btemp+11)^0,c
  5106                           
  5107                           ;stkvar	_k @ sp[(-6)+1]
  5108  012DDC  0EFB               	movlw	-5
  5109  012DDE  0060  F033  FFE3   	movff	btemp+11,plusw1
  5110                           
  5111                           ;main.c: 395:     break;
  5112  012DE4  D015               	goto	l1352
  5113  012DE6                     l12706:
  5114                           
  5115                           ; BSR set to: 2
  5116                           ;stkvar	_inp_index @ sp[(-6)+3]
  5117  012DE6  0EFD               	movlw	-3
  5118  012DE8  50E3               	movf	plusw1,w,c
  5119  012DEA  6E0B               	movwf	(btemp+10)^0,c
  5120  012DEC  6A0C               	clrf	(btemp+11)^0,c
  5121                           
  5122                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5123                           ; Switch size 1, requested type "simple"
  5124                           ; Number of cases is 1, Range of values is 0 to 0
  5125                           ; switch strategies available:
  5126                           ; Name         Instructions Cycles
  5127                           ; simple_byte            4     3 (average)
  5128                           ;	Chosen strategy is simple_byte
  5129  012DEE  500C               	movf	(btemp+11)^0,w,c
  5130  012DF0  0A00               	xorlw	0	; case 0
  5131  012DF2  A4D8               	btfss	status,2,c
  5132  012DF4  D00D               	goto	l1352
  5133                           
  5134                           ; BSR set to: 2
  5135                           ; Switch size 1, requested type "simple"
  5136                           ; Number of cases is 4, Range of values is 0 to 9
  5137                           ; switch strategies available:
  5138                           ; Name         Instructions Cycles
  5139                           ; simple_byte           13     7 (average)
  5140                           ;	Chosen strategy is simple_byte
  5141  012DF6  500B               	movf	(btemp+10)^0,w,c
  5142  012DF8  0A00               	xorlw	0	; case 0
  5143  012DFA  B4D8               	btfsc	status,2,c
  5144  012DFC  D7BD               	goto	l12688
  5145  012DFE  0A03               	xorlw	3	; case 3
  5146  012E00  B4D8               	btfsc	status,2,c
  5147  012E02  D7C3               	goto	l12694
  5148  012E04  0A05               	xorlw	5	; case 6
  5149  012E06  B4D8               	btfsc	status,2,c
  5150  012E08  D7CC               	goto	l12696
  5151  012E0A  0A0F               	xorlw	15	; case 9
  5152  012E0C  B4D8               	btfsc	status,2,c
  5153  012E0E  D7D8               	goto	l12702
  5154  012E10                     l1352:
  5155                           
  5156                           ;main.c: 404:   if (V.set_sequ) {
  5157  012E10  0102               	movlb	2	; () banked
  5158  012E12  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  5159  012E14  D4CE               	goto	l12622
  5160                           
  5161                           ; BSR set to: 2
  5162                           ;main.c: 405:    if (TimerDone(TMR_INFO)) {
  5163  012E16  0E07               	movlw	7
  5164  012E18  6EE6               	movwf	postinc1,c
  5165  012E1A  EC5D  F0D6         	call	_TimerDone	;wreg free
  5166  012E1E  5001               	movf	btemp^0,w,c
  5167  012E20  B4D8               	btfsc	status,2,c
  5168  012E22  D00B               	goto	l12716
  5169                           
  5170                           ;main.c: 406:     V.set_sequ = 0;
  5171  012E24  0102               	movlb	2	; () banked
  5172  012E26  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  5173                           
  5174                           ; BSR set to: 2
  5175                           ;main.c: 407:     set_vterm(0);
  5176  012E28  0E00               	movlw	0
  5177  012E2A  6EE6               	movwf	postinc1,c
  5178  012E2C  EC24  F0D8         	call	_set_vterm	;wreg free
  5179                           
  5180                           ;main.c: 408:     update_lcd(0);
  5181  012E30  0E00               	movlw	0
  5182  012E32  6EE6               	movwf	postinc1,c
  5183  012E34  ECC9  F0C6         	call	_update_lcd	;wreg free
  5184                           
  5185                           ;main.c: 409:    } else {
  5186  012E38  D4BC               	goto	l12622
  5187  012E3A                     l12716:
  5188                           
  5189                           ;main.c: 410:     set_vterm(2);
  5190  012E3A  0E02               	movlw	2
  5191  012E3C  6EE6               	movwf	postinc1,c
  5192  012E3E  EC24  F0D8         	call	_set_vterm	;wreg free
  5193                           
  5194                           ;main.c: 411:     update_lcd(2);
  5195  012E42  0E02               	movlw	2
  5196  012E44  6EE6               	movwf	postinc1,c
  5197  012E46  ECC9  F0C6         	call	_update_lcd	;wreg free
  5198  012E4A  D4B3               	goto	l12622
  5199  012E4C                     __end_of_main:
  5200                           	opt callstack 0
  5201                           
  5202 ;; *************** function _static_soc *****************
  5203 ;; Defined at:
  5204 ;;		line 116 in file "mbmc.c"
  5205 ;; Parameters:    Size  Location     Type
  5206 ;;		None
  5207 ;; Auto vars:     Size  Location     Type
  5208 ;;		None
  5209 ;; Return value:  Size  Location     Type
  5210 ;;                  1  [STACK] void 
  5211 ;; Registers used:
  5212 ;;		wreg, status,2
  5213 ;; Tracked objects:
  5214 ;;		On entry : 0/0
  5215 ;;		On exit  : 3F/1
  5216 ;;		Unchanged: 0/0
  5217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5222 ;;Total ram usage:        0 bytes
  5223 ;; Hardware stack levels used:    1
  5224 ;; Hardware stack levels required when called:   15
  5225 ;; This function calls:
  5226 ;;		Nothing
  5227 ;; This function is called by:
  5228 ;;		_main
  5229 ;; This function uses a reentrant model
  5230 ;;
  5231                           
  5232                           	psect	text1
  5233  01AEEC                     __ptext1:
  5234                           	opt callstack 0
  5235  01AEEC                     _static_soc:
  5236                           	opt callstack 15
  5237                           
  5238                           ;mbmc.c: 118:  C.runtime = 120;
  5239                           
  5240                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5241                           ;incstack = 0
  5242  01AEEC  0E00               	movlw	0
  5243  01AEEE  0101               	movlb	1	; () banked
  5244  01AEF0  6FA9               	movwf	(_C+169)& (0+255),b	;volatile
  5245  01AEF2  0E78               	movlw	120
  5246  01AEF4  6FA8               	movwf	(_C+168)& (0+255),b	;volatile
  5247                           
  5248                           ;mbmc.c: 119:  C.soc = 100;
  5249  01AEF6  0E00               	movlw	0
  5250  01AEF8  6FAB               	movwf	(_C+171)& (0+255),b	;volatile
  5251  01AEFA  0E64               	movlw	100
  5252  01AEFC  6FAA               	movwf	(_C+170)& (0+255),b	;volatile
  5253                           
  5254                           ; BSR set to: 1
  5255                           ;mbmc.c: 120:  C.dynamic_ah = C.bank_ah;
  5256  01AEFE  C188  F18C         	movff	_C+136,_C+140	;volatile
  5257  01AF02  C189  F18D         	movff	_C+137,_C+141	;volatile
  5258  01AF06  C18A  F18E         	movff	_C+138,_C+142	;volatile
  5259  01AF0A  C18B  F18F         	movff	_C+139,_C+143	;volatile
  5260                           
  5261                           ; BSR set to: 1
  5262                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  5263  01AF0E  0012               	return		;funcret
  5264  01AF10                     __end_of_static_soc:
  5265                           	opt callstack 0
  5266                           
  5267 ;; *************** function _start_switch_handler *****************
  5268 ;; Defined at:
  5269 ;;		line 119 in file "dio.c"
  5270 ;; Parameters:    Size  Location     Type
  5271 ;;		None
  5272 ;; Auto vars:     Size  Location     Type
  5273 ;;		None
  5274 ;; Return value:  Size  Location     Type
  5275 ;;                  1  [STACK] void 
  5276 ;; Registers used:
  5277 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  5278 ;; Tracked objects:
  5279 ;;		On entry : 1/0
  5280 ;;		On exit  : 3F/39
  5281 ;;		Unchanged: 0/0
  5282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5287 ;;Total ram usage:        0 bytes
  5288 ;; Hardware stack levels used:    1
  5289 ;; Hardware stack levels required when called:   16
  5290 ;; This function calls:
  5291 ;;		_INT1_SetInterruptHandler
  5292 ;; This function is called by:
  5293 ;;		_main
  5294 ;; This function uses a reentrant model
  5295 ;;
  5296                           
  5297                           	psect	text2
  5298  01B00A                     __ptext2:
  5299                           	opt callstack 0
  5300  01B00A                     _start_switch_handler:
  5301                           	opt callstack 14
  5302                           
  5303                           ;dio.c: 121:  (PIE5bits.INT1IE = 0);
  5304                           
  5305                           ; BSR set to: 1
  5306                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5307                           ;incstack = 0
  5308  01B00A  0139               	movlb	57	; () banked
  5309  01B00C  9195               	bcf	149,0,b	;volatile
  5310                           
  5311                           ; BSR set to: 57
  5312                           ;dio.c: 122:  INT1_SetInterruptHandler(switch_handler);
  5313  01B00E  0ED8               	movlw	low _switch_handler
  5314  01B010  6EE6               	movwf	postinc1,c
  5315  01B012  0E87               	movlw	high _switch_handler
  5316  01B014  6EE6               	movwf	postinc1,c
  5317  01B016  0E01               	movlw	low (_switch_handler shr (0+16))
  5318  01B018  6EE6               	movwf	postinc1,c
  5319  01B01A  ECE9  F0D6         	call	_INT1_SetInterruptHandler	;wreg free
  5320                           
  5321                           ;dio.c: 123:  S.button[SNULL].sw = SW_INVALID;
  5322  01B01E  0E02               	movlw	2
  5323  01B020  0102               	movlb	2	; () banked
  5324  01B022  6FDF               	movwf	(_S+35)& (0+255),b	;volatile
  5325                           
  5326                           ; BSR set to: 2
  5327                           ;dio.c: 124:  (PIE5bits.INT1IE = 1);
  5328  01B024  0139               	movlb	57	; () banked
  5329  01B026  8195               	bsf	149,0,b	;volatile
  5330                           
  5331                           ; BSR set to: 57
  5332                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  5333  01B028  0012               	return		;funcret
  5334  01B02A                     __end_of_start_switch_handler:
  5335                           	opt callstack 0
  5336                           
  5337 ;; *************** function _srand *****************
  5338 ;; Defined at:
  5339 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  5340 ;; Parameters:    Size  Location     Type
  5341 ;;  s               2  [STACK] unsigned int 
  5342 ;; Auto vars:     Size  Location     Type
  5343 ;;		None
  5344 ;; Return value:  Size  Location     Type
  5345 ;;                  1  [STACK] void 
  5346 ;; Registers used:
  5347 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  5348 ;; Tracked objects:
  5349 ;;		On entry : 0/0
  5350 ;;		On exit  : 3F/1
  5351 ;;		Unchanged: 0/0
  5352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5357 ;;Total ram usage:        0 bytes
  5358 ;; Hardware stack levels used:    1
  5359 ;; Hardware stack levels required when called:   15
  5360 ;; This function calls:
  5361 ;;		Nothing
  5362 ;; This function is called by:
  5363 ;;		_main
  5364 ;; This function uses a reentrant model
  5365 ;;
  5366                           
  5367                           	psect	text3
  5368  01AA0A                     __ptext3:
  5369                           	opt callstack 0
  5370  01AA0A                     _srand:
  5371                           	opt callstack 15
  5372                           
  5373                           ;stkvar	_s @ sp[(0)+-2]
  5374                           
  5375                           ; BSR set to: 57
  5376                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5377                           ;incstack = 0
  5378  01AA0A  0EFE               	movlw	-2
  5379  01AA0C  50E3               	movf	plusw1,w,c
  5380  01AA0E  0FFF               	addlw	255
  5381  01AA10  6E0B               	movwf	(btemp+10)^0,c
  5382  01AA12  0EFF               	movlw	-1
  5383  01AA14  006F FF8C  F00C    	movff	plusw1,btemp+11
  5384  01AA1A  0EFF               	movlw	255
  5385  01AA1C  220C               	addwfc	(btemp+11)^0,f,c
  5386  01AA1E  0060  F02C  F1F3   	movff	btemp+10,_seed
  5387  01AA24  0060  F030  F1F4   	movff	btemp+11,_seed+1
  5388  01AA2A  0101               	movlb	1	; () banked
  5389  01AA2C  6BF5               	clrf	(_seed+2)& (0+255),b
  5390  01AA2E  6BF6               	clrf	(_seed+3)& (0+255),b
  5391  01AA30  6BF7               	clrf	(_seed+4)& (0+255),b
  5392  01AA32  6BF8               	clrf	(_seed+5)& (0+255),b
  5393  01AA34  6BF9               	clrf	(_seed+6)& (0+255),b
  5394  01AA36  6BFA               	clrf	(_seed+7)& (0+255),b
  5395                           
  5396                           ; BSR set to: 1
  5397                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  5398  01AA38  52E5               	movf	postdec1,f,c
  5399  01AA3A  52E5               	movf	postdec1,f,c
  5400  01AA3C  0012               	return		;funcret
  5401  01AA3E                     __end_of_srand:
  5402                           	opt callstack 0
  5403                           
  5404 ;; *************** function _spinners *****************
  5405 ;; Defined at:
  5406 ;;		line 134 in file "mbmc.c"
  5407 ;; Parameters:    Size  Location     Type
  5408 ;;  shape           1  [STACK] unsigned char 
  5409 ;;  reset           1  [STACK] unsigned char 
  5410 ;; Auto vars:     Size  Location     Type
  5411 ;;  c               1  [STACK] unsigned char 
  5412 ;; Return value:  Size  Location     Type
  5413 ;;                  1  [STACK] unsigned char 
  5414 ;; Registers used:
  5415 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+9, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru, prodl, prodh
  5416 ;; Tracked objects:
  5417 ;;		On entry : 3F/0
  5418 ;;		On exit  : 0/0
  5419 ;;		Unchanged: 0/0
  5420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5425 ;;Total ram usage:        0 bytes
  5426 ;; Hardware stack levels used:    1
  5427 ;; Hardware stack levels required when called:   16
  5428 ;; This function calls:
  5429 ;;		_strlen
  5430 ;; This function is called by:
  5431 ;;		_main
  5432 ;; This function uses a reentrant model
  5433 ;;
  5434                           
  5435                           	psect	text4
  5436  01939A                     __ptext4:
  5437                           	opt callstack 0
  5438  01939A                     _spinners:
  5439                           	opt callstack 0
  5440                           
  5441                           ; BSR set to: 1
  5442                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5443  01939A  52E6               	movf	postinc1,f,c
  5444                           
  5445                           ;mbmc.c: 134: char spinners(uint8_t shape, uint8_t reset);mbmc.c: 135: {;mbmc.c: 136:  s
      +                          tatic uint8_t s[6];;mbmc.c: 137:  char c;;mbmc.c: 139:  if (shape > (6 - 1)) shape = 0;
  5446                           ;stkvar	_shape @ sp[(-1)+-1]
  5447                           
  5448                           ;incstack = 0
  5449  01939C  0EFE               	movlw	-2
  5450  01939E  006F FF8C  F001    	movff	plusw1,btemp
  5451  0193A4  0E05               	movlw	5
  5452  0193A6  6401               	cpfsgt	btemp^0,c
  5453  0193A8  D002               	goto	l1862
  5454                           
  5455                           ;stkvar	_shape @ sp[(-1)+-1]
  5456  0193AA  0EFE               	movlw	-2
  5457  0193AC  6AE3               	clrf	plusw1,c
  5458  0193AE                     l1862:
  5459                           
  5460                           ;mbmc.c: 140:  if (reset) s[shape] = 0;
  5461                           ;stkvar	_reset @ sp[(-1)+-2]
  5462  0193AE  0EFD               	movlw	-3
  5463  0193B0  50E3               	movf	plusw1,w,c
  5464  0193B2  B4D8               	btfsc	status,2,c
  5465  0193B4  D00A               	goto	l10504
  5466                           
  5467                           ;stkvar	_shape @ sp[(-1)+-1]
  5468  0193B6  0EFE               	movlw	-2
  5469  0193B8  006F FF8C  F00C    	movff	plusw1,btemp+11
  5470  0193BE  500C               	movf	(btemp+11)^0,w,c
  5471  0193C0  0F74               	addlw	low spinners@s
  5472  0193C2  6ED9               	movwf	fsr2l,c
  5473  0193C4  6ADA               	clrf	fsr2h,c
  5474  0193C6  0E00               	movlw	0
  5475  0193C8  6EDF               	movwf	indf2,c
  5476  0193CA                     l10504:
  5477                           
  5478                           ;mbmc.c: 141:  c = spin[shape][s[shape]];
  5479                           ;stkvar	_shape @ sp[(-1)+-1]
  5480  0193CA  0EFE               	movlw	-2
  5481  0193CC  50E3               	movf	plusw1,w,c
  5482  0193CE  0D14               	mullw	20
  5483  0193D0  0E8F               	movlw	low _spin
  5484  0193D2  6E0B               	movwf	(btemp+10)^0,c
  5485  0193D4  0EFC               	movlw	high _spin
  5486  0193D6  6E0C               	movwf	(btemp+11)^0,c
  5487  0193D8  50F3               	movf	243,w,c
  5488  0193DA  260B               	addwf	(btemp+10)^0,f,c
  5489  0193DC  50F4               	movf	244,w,c
  5490  0193DE  220C               	addwfc	(btemp+11)^0,f,c
  5491                           
  5492                           ;stkvar	_shape @ sp[(-1)+-1]
  5493  0193E0  0EFE               	movlw	-2
  5494  0193E2  006F FF8C  F00A    	movff	plusw1,btemp+9
  5495  0193E8  500A               	movf	(btemp+9)^0,w,c
  5496  0193EA  0F74               	addlw	low spinners@s
  5497  0193EC  6ED9               	movwf	fsr2l,c
  5498  0193EE  6ADA               	clrf	fsr2h,c
  5499  0193F0  50DF               	movf	indf2,w,c
  5500  0193F2  260B               	addwf	(btemp+10)^0,f,c
  5501  0193F4  0E00               	movlw	0
  5502  0193F6  220C               	addwfc	(btemp+11)^0,f,c
  5503  0193F8  0060  F02F  FFF6   	movff	btemp+10,tblptrl
  5504  0193FE  0060  F033  FFF7   	movff	btemp+11,tblptrh
  5505  019404                     	if	0	;tblptru may be non-zero
  5506  019404                     	endif
  5507  019404                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5508  019404  0E00               	movlw	low (__mediumconst shr (0+16))
  5509  019406  6EF8               	movwf	tblptru,c
  5510  019408                     	endif
  5511                           
  5512                           ;stkvar	_c @ sp[(-1)+0]
  5513  019408  0008               	tblrd		*
  5514  01940A  0EFF               	movlw	-1
  5515  01940C  006F FFD7 FFE3     	movff	tablat,plusw1
  5516                           
  5517                           ;mbmc.c: 142:  if (++s[shape] >= strlen(spin[shape])) s[shape] = 0;
  5518                           ;stkvar	_shape @ sp[(-1)+-1]
  5519  019412  0EFE               	movlw	-2
  5520  019414  50E3               	movf	plusw1,w,c
  5521  019416  0D14               	mullw	20
  5522  019418  0E8F               	movlw	low _spin
  5523  01941A  6E0B               	movwf	(btemp+10)^0,c
  5524  01941C  0EFC               	movlw	high _spin
  5525  01941E  6E0C               	movwf	(btemp+11)^0,c
  5526  019420  50F3               	movf	243,w,c
  5527  019422  260B               	addwf	(btemp+10)^0,f,c
  5528  019424  50F4               	movf	244,w,c
  5529  019426  220C               	addwfc	(btemp+11)^0,f,c
  5530  019428  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5531  01942E  0060  F033  FFE6   	movff	btemp+11,postinc1
  5532  019434  EC1B  F0CD         	call	_strlen	;wreg free
  5533                           
  5534                           ;stkvar	_shape @ sp[(-1)+-1]
  5535  019438  0EFE               	movlw	-2
  5536  01943A  006F FF8C  F00C    	movff	plusw1,btemp+11
  5537  019440  500C               	movf	(btemp+11)^0,w,c
  5538  019442  0F74               	addlw	low spinners@s
  5539  019444  6ED9               	movwf	fsr2l,c
  5540  019446  6ADA               	clrf	fsr2h,c
  5541  019448  2ADF               	incf	indf2,f,c
  5542  01944A  50DF               	movf	indf2,w,c
  5543  01944C  6E0B               	movwf	(btemp+10)^0,c
  5544  01944E  6A0C               	clrf	(btemp+11)^0,c
  5545  019450  5001               	movf	btemp^0,w,c
  5546  019452  5C0B               	subwf	(btemp+10)^0,w,c
  5547  019454  5002               	movf	(btemp+1)^0,w,c
  5548  019456  580C               	subwfb	(btemp+11)^0,w,c
  5549  019458  A0D8               	btfss	status,0,c
  5550  01945A  D00A               	goto	l10510
  5551                           
  5552                           ;stkvar	_shape @ sp[(-1)+-1]
  5553  01945C  0EFE               	movlw	-2
  5554  01945E  006F FF8C  F00C    	movff	plusw1,btemp+11
  5555  019464  500C               	movf	(btemp+11)^0,w,c
  5556  019466  0F74               	addlw	low spinners@s
  5557  019468  6ED9               	movwf	fsr2l,c
  5558  01946A  6ADA               	clrf	fsr2h,c
  5559  01946C  0E00               	movlw	0
  5560  01946E  6EDF               	movwf	indf2,c
  5561  019470                     l10510:
  5562                           
  5563                           ;mbmc.c: 143:  return c;
  5564                           ;stkvar	_c @ sp[(-1)+0]
  5565  019470  0EFF               	movlw	-1
  5566  019472  006F FF8C  F001    	movff	plusw1,btemp
  5567                           
  5568                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  5569  019478  52E5               	movf	postdec1,f,c
  5570  01947A  52E5               	movf	postdec1,f,c
  5571  01947C  52E5               	movf	postdec1,f,c
  5572  01947E  0012               	return		;funcret
  5573  019480                     __end_of_spinners:
  5574                           	opt callstack 0
  5575                           
  5576 ;; *************** function _init_port_dma *****************
  5577 ;; Defined at:
  5578 ;;		line 90 in file "eadog.c"
  5579 ;; Parameters:    Size  Location     Type
  5580 ;;		None
  5581 ;; Auto vars:     Size  Location     Type
  5582 ;;		None
  5583 ;; Return value:  Size  Location     Type
  5584 ;;                  1  [STACK] void 
  5585 ;; Registers used:
  5586 ;;		wreg, status,2
  5587 ;; Tracked objects:
  5588 ;;		On entry : 0/2
  5589 ;;		On exit  : 3F/3B
  5590 ;;		Unchanged: 0/0
  5591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5596 ;;Total ram usage:        0 bytes
  5597 ;; Hardware stack levels used:    1
  5598 ;; Hardware stack levels required when called:   15
  5599 ;; This function calls:
  5600 ;;		Nothing
  5601 ;; This function is called by:
  5602 ;;		_main
  5603 ;; This function uses a reentrant model
  5604 ;;
  5605                           
  5606                           	psect	text5
  5607  01AAA6                     __ptext5:
  5608                           	opt callstack 0
  5609  01AAA6                     _init_port_dma:
  5610                           	opt callstack 15
  5611                           
  5612                           ;eadog.c: 92:  DMA2CON1bits.DMODE = 0;
  5613                           
  5614                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5615                           ;incstack = 0
  5616  01AAA6  0E3F               	movlw	-193
  5617  01AAA8  013B               	movlb	59	; () banked
  5618  01AAAA  17DD               	andwf	221,f,b	;volatile
  5619                           
  5620                           ; BSR set to: 59
  5621                           ;eadog.c: 93:  DMA2CON1bits.DSTP = 0;
  5622  01AAAC  9BDD               	bcf	221,5,b	;volatile
  5623                           
  5624                           ;eadog.c: 94:  DMA2CON1bits.SMODE = 1;
  5625  01AAAE  51DD               	movf	221,w,b	;volatile
  5626  01AAB0  0BF9               	andlw	-7
  5627  01AAB2  0902               	iorlw	2
  5628  01AAB4  6FDD               	movwf	221,b	;volatile
  5629                           
  5630                           ;eadog.c: 95:  DMA2CON1bits.SMR = 0;
  5631  01AAB6  0EE7               	movlw	-25
  5632  01AAB8  17DD               	andwf	221,f,b	;volatile
  5633                           
  5634                           ; BSR set to: 59
  5635                           ;eadog.c: 96:  DMA2CON1bits.SSTP = 1;
  5636  01AABA  81DD               	bsf	221,0,b	;volatile
  5637                           
  5638                           ; BSR set to: 59
  5639                           ;eadog.c: 97:  DMA2CON0bits.SIRQEN = 0;
  5640  01AABC  9DDC               	bcf	220,6,b	;volatile
  5641                           
  5642                           ;eadog.c: 98:  DMA2DSA = 0x3DEA;
  5643  01AABE  0E3D               	movlw	61
  5644  01AAC0  6FD1               	movwf	209,b	;volatile
  5645  01AAC2  0EEA               	movlw	234
  5646  01AAC4  6FD0               	movwf	208,b	;volatile
  5647                           
  5648                           ;eadog.c: 99:  DMA2SSA = (uint32_t) port_data;
  5649  01AAC6  0EFF               	movlw	low _port_data
  5650  01AAC8  6FD9               	movwf	217,b	;volatile
  5651  01AACA  0E05               	movlw	high _port_data
  5652  01AACC  6FDA               	movwf	218,b	;volatile
  5653  01AACE  0E00               	movlw	low (_port_data shr (0+16))
  5654  01AAD0  6FDB               	movwf	219,b	;volatile
  5655                           
  5656                           ; BSR set to: 59
  5657                           ;eadog.c: 100:  DMA2CON0bits.DGO = 0;
  5658  01AAD2  9BDC               	bcf	220,5,b	;volatile
  5659                           
  5660                           ; BSR set to: 59
  5661                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  5662  01AAD4  0012               	return		;funcret
  5663  01AAD6                     __end_of_init_port_dma:
  5664                           	opt callstack 0
  5665                           
  5666 ;; *************** function _init_display *****************
  5667 ;; Defined at:
  5668 ;;		line 38 in file "eadog.c"
  5669 ;; Parameters:    Size  Location     Type
  5670 ;;		None
  5671 ;; Auto vars:     Size  Location     Type
  5672 ;;		None
  5673 ;; Return value:  Size  Location     Type
  5674 ;;                  1  [STACK] void 
  5675 ;; Registers used:
  5676 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5677 ;; Tracked objects:
  5678 ;;		On entry : 3F/3B
  5679 ;;		On exit  : 3F/3D
  5680 ;;		Unchanged: 0/0
  5681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5686 ;;Total ram usage:        0 bytes
  5687 ;; Hardware stack levels used:    1
  5688 ;; Hardware stack levels required when called:   17
  5689 ;; This function calls:
  5690 ;;		_ringBufS_init
  5691 ;;		_send_lcd_cmd
  5692 ;;		_send_lcd_cmd_long
  5693 ;;		_wdtdelay
  5694 ;; This function is called by:
  5695 ;;		_main
  5696 ;; This function uses a reentrant model
  5697 ;;
  5698                           
  5699                           	psect	text6
  5700  0192B0                     __ptext6:
  5701                           	opt callstack 0
  5702  0192B0                     _init_display:
  5703                           	opt callstack 13
  5704                           
  5705                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  5706                           
  5707                           ; BSR set to: 59
  5708                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5709                           ;incstack = 0
  5710  0192B0  0E43               	movlw	low _ring_buf1
  5711  0192B2  0100               	movlb	0	; () banked
  5712  0192B4  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
  5713  0192B6  0E04               	movlw	high _ring_buf1
  5714  0192B8  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
  5715                           
  5716                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  5717  0192BA  0E00               	movlw	low _ring_buf2
  5718  0192BC  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
  5719  0192BE  0E04               	movlw	high _ring_buf2
  5720  0192C0  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
  5721                           
  5722                           ; BSR set to: 0
  5723                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  5724  0192C2  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  5725  0192C8  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  5726  0192CE  EC49  F0D6         	call	_ringBufS_init	;wreg free
  5727                           
  5728                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  5729  0192D2  0060  F193  FFE6   	movff	_spi_link+4,postinc1
  5730  0192D8  0060  F197  FFE6   	movff	_spi_link+5,postinc1
  5731  0192DE  EC49  F0D6         	call	_ringBufS_init	;wreg free
  5732                           
  5733                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  5734  0192E2  84BE               	bsf	190,2,c	;volatile
  5735  0192E4  84BC               	bsf	188,2,c	;volatile
  5736                           
  5737                           ;eadog.c: 59:  wdtdelay(350000);
  5738  0192E6  0E30               	movlw	48
  5739  0192E8  6EE6               	movwf	postinc1,c
  5740  0192EA  0E57               	movlw	87
  5741  0192EC  6EE6               	movwf	postinc1,c
  5742  0192EE  0E05               	movlw	5
  5743  0192F0  6EE6               	movwf	postinc1,c
  5744  0192F2  0E00               	movlw	0
  5745  0192F4  6EE6               	movwf	postinc1,c
  5746  0192F6  EC77  F0D1         	call	_wdtdelay	;wreg free
  5747                           
  5748                           ; BSR set to: 0
  5749                           ;eadog.c: 60:  send_lcd_cmd(0x39);
  5750  0192FA  0E39               	movlw	57
  5751  0192FC  6EE6               	movwf	postinc1,c
  5752  0192FE  EC35  F0D6         	call	_send_lcd_cmd	;wreg free
  5753                           
  5754                           ; BSR set to: 0
  5755                           ;eadog.c: 61:  send_lcd_cmd(0x1d);
  5756  019302  0E1D               	movlw	29
  5757  019304  6EE6               	movwf	postinc1,c
  5758  019306  EC35  F0D6         	call	_send_lcd_cmd	;wreg free
  5759                           
  5760                           ; BSR set to: 0
  5761                           ;eadog.c: 62:  send_lcd_cmd(0x50);
  5762  01930A  0E50               	movlw	80
  5763  01930C  6EE6               	movwf	postinc1,c
  5764  01930E  EC35  F0D6         	call	_send_lcd_cmd	;wreg free
  5765                           
  5766                           ; BSR set to: 0
  5767                           ;eadog.c: 63:  send_lcd_cmd(0x6c);
  5768  019312  0E6C               	movlw	108
  5769  019314  6EE6               	movwf	postinc1,c
  5770  019316  EC35  F0D6         	call	_send_lcd_cmd	;wreg free
  5771                           
  5772                           ; BSR set to: 0
  5773                           ;eadog.c: 64:  send_lcd_cmd(0x76);
  5774  01931A  0E76               	movlw	118
  5775  01931C  6EE6               	movwf	postinc1,c
  5776  01931E  EC35  F0D6         	call	_send_lcd_cmd	;wreg free
  5777                           
  5778                           ; BSR set to: 0
  5779                           ;eadog.c: 65:  send_lcd_cmd_long(0x38);
  5780  019322  0E38               	movlw	56
  5781  019324  6EE6               	movwf	postinc1,c
  5782  019326  EC21  F0D6         	call	_send_lcd_cmd_long	;wreg free
  5783                           
  5784                           ; BSR set to: 0
  5785                           ;eadog.c: 66:  send_lcd_cmd(0x0f);
  5786  01932A  0E0F               	movlw	15
  5787  01932C  6EE6               	movwf	postinc1,c
  5788  01932E  EC35  F0D6         	call	_send_lcd_cmd	;wreg free
  5789                           
  5790                           ; BSR set to: 0
  5791                           ;eadog.c: 67:  send_lcd_cmd_long(0x01);
  5792  019332  0E01               	movlw	1
  5793  019334  6EE6               	movwf	postinc1,c
  5794  019336  EC21  F0D6         	call	_send_lcd_cmd_long	;wreg free
  5795                           
  5796                           ; BSR set to: 0
  5797                           ;eadog.c: 68:  send_lcd_cmd(0x02);
  5798  01933A  0E02               	movlw	2
  5799  01933C  6EE6               	movwf	postinc1,c
  5800  01933E  EC35  F0D6         	call	_send_lcd_cmd	;wreg free
  5801                           
  5802                           ; BSR set to: 0
  5803                           ;eadog.c: 69:  send_lcd_cmd(0x06);
  5804  019342  0E06               	movlw	6
  5805  019344  6EE6               	movwf	postinc1,c
  5806  019346  EC35  F0D6         	call	_send_lcd_cmd	;wreg free
  5807                           
  5808                           ; BSR set to: 0
  5809                           ;eadog.c: 70:  wdtdelay(30);
  5810  01934A  0E1E               	movlw	30
  5811  01934C  6EE6               	movwf	postinc1,c
  5812  01934E  0E00               	movlw	0
  5813  019350  6EE6               	movwf	postinc1,c
  5814  019352  0E00               	movlw	0
  5815  019354  6EE6               	movwf	postinc1,c
  5816  019356  0E00               	movlw	0
  5817  019358  6EE6               	movwf	postinc1,c
  5818  01935A  EC77  F0D1         	call	_wdtdelay	;wreg free
  5819                           
  5820                           ; BSR set to: 0
  5821                           ;eadog.c: 71:  SPI1CON2 = 0x02;
  5822  01935E  0E02               	movlw	2
  5823  019360  013D               	movlb	61	; () banked
  5824  019362  6F16               	movwf	22,b	;volatile
  5825                           
  5826                           ; BSR set to: 61
  5827                           ;eadog.c: 72:  SPI1CON1 = 0x40;
  5828  019364  0E40               	movlw	64
  5829  019366  6F15               	movwf	21,b	;volatile
  5830                           
  5831                           ; BSR set to: 61
  5832                           ;eadog.c: 73:  SPI1CON0 = 0x83;
  5833  019368  0E83               	movlw	131
  5834  01936A  6F14               	movwf	20,b	;volatile
  5835                           
  5836                           ; BSR set to: 61
  5837                           ;eadog.c: 75:  SPI1INTFbits.SPI1TXUIF = 0;
  5838  01936C  931A               	bcf	26,1,b	;volatile
  5839                           
  5840                           ; BSR set to: 61
  5841                           ;eadog.c: 76:  DMA1CON1bits.DMODE = 0;
  5842  01936E  0E3F               	movlw	-193
  5843  019370  013B               	movlb	59	; () banked
  5844  019372  17FD               	andwf	253,f,b	;volatile
  5845                           
  5846                           ; BSR set to: 59
  5847                           ;eadog.c: 77:  DMA1CON1bits.DSTP = 0;
  5848  019374  9BFD               	bcf	253,5,b	;volatile
  5849                           
  5850                           ; BSR set to: 59
  5851                           ;eadog.c: 78:  DMA1CON1bits.SMODE = 1;
  5852  019376  51FD               	movf	253,w,b	;volatile
  5853  019378  0BF9               	andlw	-7
  5854  01937A  0902               	iorlw	2
  5855  01937C  6FFD               	movwf	253,b	;volatile
  5856                           
  5857                           ; BSR set to: 59
  5858                           ;eadog.c: 79:  DMA1CON1bits.SMR = 0;
  5859  01937E  0EE7               	movlw	-25
  5860  019380  17FD               	andwf	253,f,b	;volatile
  5861                           
  5862                           ; BSR set to: 59
  5863                           ;eadog.c: 80:  DMA1CON1bits.SSTP = 1;
  5864  019382  81FD               	bsf	253,0,b	;volatile
  5865                           
  5866                           ; BSR set to: 59
  5867                           ;eadog.c: 81:  DMA1SSA = (uint32_t) & ring_buf1;
  5868  019384  0E43               	movlw	low _ring_buf1
  5869  019386  6FF9               	movwf	249,b	;volatile
  5870  019388  0E04               	movlw	high _ring_buf1
  5871  01938A  6FFA               	movwf	250,b	;volatile
  5872  01938C  0E00               	movlw	low (_ring_buf1 shr (0+16))
  5873  01938E  6FFB               	movwf	251,b	;volatile
  5874                           
  5875                           ; BSR set to: 59
  5876                           ;eadog.c: 82:  DMA1CON0bits.DGO = 0;
  5877  019390  9BFC               	bcf	252,5,b	;volatile
  5878                           
  5879                           ; BSR set to: 59
  5880                           ;eadog.c: 83:  SPI1INTFbits.SPI1TXUIF = 1;
  5881  019392  013D               	movlb	61	; () banked
  5882  019394  831A               	bsf	26,1,b	;volatile
  5883                           
  5884                           ; BSR set to: 61
  5885                           ;eadog.c: 84:  LATEbits.LATE2 = 0;
  5886  019396  94BE               	bcf	190,2,c	;volatile
  5887                           
  5888                           ; BSR set to: 61
  5889                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  5890  019398  0012               	return		;funcret
  5891  01939A                     __end_of_init_display:
  5892                           	opt callstack 0
  5893                           
  5894 ;; *************** function _send_lcd_cmd_long *****************
  5895 ;; Defined at:
  5896 ;;		line 129 in file "eadog.c"
  5897 ;; Parameters:    Size  Location     Type
  5898 ;;  cmd             1  [STACK] const unsigned char 
  5899 ;; Auto vars:     Size  Location     Type
  5900 ;;		None
  5901 ;; Return value:  Size  Location     Type
  5902 ;;                  1  [STACK] void 
  5903 ;; Registers used:
  5904 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5905 ;; Tracked objects:
  5906 ;;		On entry : 3F/0
  5907 ;;		On exit  : 3F/0
  5908 ;;		Unchanged: 0/0
  5909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5914 ;;Total ram usage:        0 bytes
  5915 ;; Hardware stack levels used:    1
  5916 ;; Hardware stack levels required when called:   16
  5917 ;; This function calls:
  5918 ;;		_SPI1_Exchange8bit
  5919 ;;		_wdtdelay
  5920 ;; This function is called by:
  5921 ;;		_init_display
  5922 ;; This function uses a reentrant model
  5923 ;;
  5924                           
  5925                           	psect	text7
  5926  01AC42                     __ptext7:
  5927                           	opt callstack 0
  5928  01AC42                     _send_lcd_cmd_long:
  5929                           	opt callstack 13
  5930                           
  5931                           ; BSR set to: 61
  5932                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5933                           ;incstack = 0
  5934                           ;eadog.c: 129: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 130: {;eadog.c:
      +                           131:  do { LATCbits.LATC1 = 0; } while(0);
  5935  01AC42  92BC               	bcf	188,1,c	;volatile
  5936                           
  5937                           ;eadog.c: 132:  do { LATCbits.LATC2 = 0; } while(0);
  5938  01AC44  94BC               	bcf	188,2,c	;volatile
  5939                           
  5940                           ;eadog.c: 133:  SPI1_Exchange8bit(cmd);
  5941                           ;stkvar	_cmd @ sp[(0)+-1]
  5942  01AC46  0EFF               	movlw	-1
  5943  01AC48  50E3               	movf	plusw1,w,c
  5944  01AC4A  6EE6               	movwf	postinc1,c
  5945  01AC4C  EC15  F0D8         	call	_SPI1_Exchange8bit	;wreg free
  5946                           
  5947                           ; BSR set to: 57
  5948                           ;eadog.c: 134:  wdtdelay(800);
  5949  01AC50  0E20               	movlw	32
  5950  01AC52  6EE6               	movwf	postinc1,c
  5951  01AC54  0E03               	movlw	3
  5952  01AC56  6EE6               	movwf	postinc1,c
  5953  01AC58  0E00               	movlw	0
  5954  01AC5A  6EE6               	movwf	postinc1,c
  5955  01AC5C  0E00               	movlw	0
  5956  01AC5E  6EE6               	movwf	postinc1,c
  5957  01AC60  EC77  F0D1         	call	_wdtdelay	;wreg free
  5958                           
  5959                           ; BSR set to: 0
  5960  01AC64  82BC               	bsf	188,1,c	;volatile
  5961                           
  5962                           ; BSR set to: 0
  5963                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  5964  01AC66  52E5               	movf	postdec1,f,c
  5965  01AC68  0012               	return		;funcret
  5966  01AC6A                     __end_of_send_lcd_cmd_long:
  5967                           	opt callstack 0
  5968                           
  5969 ;; *************** function _send_lcd_cmd *****************
  5970 ;; Defined at:
  5971 ;;		line 117 in file "eadog.c"
  5972 ;; Parameters:    Size  Location     Type
  5973 ;;  cmd             1  [STACK] const unsigned char 
  5974 ;; Auto vars:     Size  Location     Type
  5975 ;;		None
  5976 ;; Return value:  Size  Location     Type
  5977 ;;                  1  [STACK] void 
  5978 ;; Registers used:
  5979 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5980 ;; Tracked objects:
  5981 ;;		On entry : 3F/0
  5982 ;;		On exit  : 3F/0
  5983 ;;		Unchanged: 0/0
  5984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5989 ;;Total ram usage:        0 bytes
  5990 ;; Hardware stack levels used:    1
  5991 ;; Hardware stack levels required when called:   16
  5992 ;; This function calls:
  5993 ;;		_SPI1_Exchange8bit
  5994 ;;		_wdtdelay
  5995 ;; This function is called by:
  5996 ;;		_init_display
  5997 ;; This function uses a reentrant model
  5998 ;;
  5999                           
  6000                           	psect	text8
  6001  01AC6A                     __ptext8:
  6002                           	opt callstack 0
  6003  01AC6A                     _send_lcd_cmd:
  6004                           	opt callstack 13
  6005                           
  6006                           ; BSR set to: 0
  6007                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6008                           ;incstack = 0
  6009                           ;eadog.c: 117: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 118: {;eadog.c: 119:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  6010  01AC6A  92BC               	bcf	188,1,c	;volatile
  6011                           
  6012                           ;eadog.c: 120:  do { LATCbits.LATC2 = 0; } while(0);
  6013  01AC6C  94BC               	bcf	188,2,c	;volatile
  6014                           
  6015                           ;eadog.c: 121:  SPI1_Exchange8bit(cmd);
  6016                           ;stkvar	_cmd @ sp[(0)+-1]
  6017  01AC6E  0EFF               	movlw	-1
  6018  01AC70  50E3               	movf	plusw1,w,c
  6019  01AC72  6EE6               	movwf	postinc1,c
  6020  01AC74  EC15  F0D8         	call	_SPI1_Exchange8bit	;wreg free
  6021                           
  6022                           ; BSR set to: 57
  6023                           ;eadog.c: 122:  wdtdelay(30);
  6024  01AC78  0E1E               	movlw	30
  6025  01AC7A  6EE6               	movwf	postinc1,c
  6026  01AC7C  0E00               	movlw	0
  6027  01AC7E  6EE6               	movwf	postinc1,c
  6028  01AC80  0E00               	movlw	0
  6029  01AC82  6EE6               	movwf	postinc1,c
  6030  01AC84  0E00               	movlw	0
  6031  01AC86  6EE6               	movwf	postinc1,c
  6032  01AC88  EC77  F0D1         	call	_wdtdelay	;wreg free
  6033                           
  6034                           ; BSR set to: 0
  6035  01AC8C  82BC               	bsf	188,1,c	;volatile
  6036                           
  6037                           ; BSR set to: 0
  6038                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  6039  01AC8E  52E5               	movf	postdec1,f,c
  6040  01AC90  0012               	return		;funcret
  6041  01AC92                     __end_of_send_lcd_cmd:
  6042                           	opt callstack 0
  6043                           
  6044 ;; *************** function _SPI1_Exchange8bit *****************
  6045 ;; Defined at:
  6046 ;;		line 79 in file "mcc_generated_files/spi1.c"
  6047 ;; Parameters:    Size  Location     Type
  6048 ;;  data            1  [STACK] unsigned char 
  6049 ;; Auto vars:     Size  Location     Type
  6050 ;;		None
  6051 ;; Return value:  Size  Location     Type
  6052 ;;                  1  [STACK] unsigned char 
  6053 ;; Registers used:
  6054 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  6055 ;; Tracked objects:
  6056 ;;		On entry : 0/0
  6057 ;;		On exit  : 3F/39
  6058 ;;		Unchanged: 0/0
  6059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6064 ;;Total ram usage:        0 bytes
  6065 ;; Hardware stack levels used:    1
  6066 ;; Hardware stack levels required when called:   15
  6067 ;; This function calls:
  6068 ;;		Nothing
  6069 ;; This function is called by:
  6070 ;;		_send_lcd_cmd
  6071 ;;		_send_lcd_cmd_long
  6072 ;; This function uses a reentrant model
  6073 ;;
  6074                           
  6075                           	psect	text9
  6076  01B02A                     __ptext9:
  6077                           	opt callstack 0
  6078  01B02A                     _SPI1_Exchange8bit:
  6079                           	opt callstack 13
  6080                           
  6081                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  6082                           
  6083                           ; BSR set to: 0
  6084                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6085                           ;incstack = 0
  6086  01B02A  0E01               	movlw	1
  6087  01B02C  013D               	movlb	61	; () banked
  6088  01B02E  6F12               	movwf	18,b	;volatile
  6089                           
  6090                           ; BSR set to: 61
  6091                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  6092                           ;stkvar	_data @ sp[(0)+-1]
  6093  01B030  0EFF               	movlw	-1
  6094  01B032  006F FF8F FD11     	movff	plusw1,15633	;volatile
  6095  01B038                     l807:
  6096                           
  6097                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  6098  01B038  0139               	movlb	57	; () banked
  6099  01B03A  A9A2               	btfss	162,4,b	;volatile
  6100  01B03C  D7FD               	goto	l807
  6101                           
  6102                           ; BSR set to: 57
  6103                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  6104  01B03E  006F F440  F001    	movff	15632,btemp	;volatile
  6105                           
  6106                           ; BSR set to: 57
  6107                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6108  01B044  52E5               	movf	postdec1,f,c
  6109  01B046  0012               	return		;funcret
  6110  01B048                     __end_of_SPI1_Exchange8bit:
  6111                           	opt callstack 0
  6112                           
  6113 ;; *************** function _ringBufS_init *****************
  6114 ;; Defined at:
  6115 ;;		line 22 in file "ringbufs.c"
  6116 ;; Parameters:    Size  Location     Type
  6117 ;;  _this           2  [STACK] PTR volatile struct ring
  6118 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6119 ;; Auto vars:     Size  Location     Type
  6120 ;;		None
  6121 ;; Return value:  Size  Location     Type
  6122 ;;                  1  [STACK] void 
  6123 ;; Registers used:
  6124 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6125 ;; Tracked objects:
  6126 ;;		On entry : 0/0
  6127 ;;		On exit  : 0/0
  6128 ;;		Unchanged: 0/0
  6129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6134 ;;Total ram usage:        0 bytes
  6135 ;; Hardware stack levels used:    1
  6136 ;; Hardware stack levels required when called:   16
  6137 ;; This function calls:
  6138 ;;		_memset
  6139 ;; This function is called by:
  6140 ;;		_init_display
  6141 ;; This function uses a reentrant model
  6142 ;;
  6143                           
  6144                           	psect	text10
  6145  01AC92                     __ptext10:
  6146                           	opt callstack 0
  6147  01AC92                     _ringBufS_init:
  6148                           	opt callstack 13
  6149                           
  6150                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  6151                           
  6152                           ; BSR set to: 57
  6153                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6154                           ;incstack = 0
  6155  01AC92  0E43               	movlw	67
  6156  01AC94  6EE6               	movwf	postinc1,c
  6157  01AC96  0E00               	movlw	0
  6158  01AC98  6EE6               	movwf	postinc1,c
  6159  01AC9A  0E00               	movlw	0
  6160  01AC9C  6EE6               	movwf	postinc1,c
  6161  01AC9E  0E00               	movlw	0
  6162  01ACA0  6EE6               	movwf	postinc1,c
  6163                           
  6164                           ;stkvar	__this @ sp[(-4)+-2]
  6165  01ACA2  0EFA               	movlw	-6
  6166  01ACA4  006F FF8F FFE6     	movff	plusw1,postinc1
  6167  01ACAA  006F FF8F FFE6     	movff	plusw1,postinc1
  6168  01ACB0  ECBF  F0B0         	call	_memset	;wreg free
  6169                           
  6170                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  6171  01ACB4  52E5               	movf	postdec1,f,c
  6172  01ACB6  52E5               	movf	postdec1,f,c
  6173  01ACB8  0012               	return		;funcret
  6174  01ACBA                     __end_of_ringBufS_init:
  6175                           	opt callstack 0
  6176                           
  6177 ;; *************** function _init_bsoc *****************
  6178 ;; Defined at:
  6179 ;;		line 88 in file "bsoc.c"
  6180 ;; Parameters:    Size  Location     Type
  6181 ;;		None
  6182 ;; Auto vars:     Size  Location     Type
  6183 ;;		None
  6184 ;; Return value:  Size  Location     Type
  6185 ;;                  1  [STACK] void 
  6186 ;; Registers used:
  6187 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  6188 ;; Tracked objects:
  6189 ;;		On entry : 3F/1
  6190 ;;		On exit  : 0/0
  6191 ;;		Unchanged: 0/0
  6192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6197 ;;Total ram usage:        0 bytes
  6198 ;; Hardware stack levels used:    1
  6199 ;; Hardware stack levels required when called:   18
  6200 ;; This function calls:
  6201 ;;		_TMR3_SetInterruptHandler
  6202 ;;		_Volts_to_SOC
  6203 ;;		___fldiv
  6204 ;;		___flmul
  6205 ;;		___fltol
  6206 ;;		___xxtofl
  6207 ;;		_conv_raw_result
  6208 ;; This function is called by:
  6209 ;;		_main
  6210 ;; This function uses a reentrant model
  6211 ;;
  6212                           
  6213                           	psect	text11
  6214  018114                     __ptext11:
  6215                           	opt callstack 0
  6216  018114                     _init_bsoc:
  6217                           	opt callstack 12
  6218                           
  6219                           ;bsoc.c: 93:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  6220                           
  6221                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6222                           ;incstack = 0
  6223  018114  0E00               	movlw	0
  6224  018116  6EE6               	movwf	postinc1,c
  6225  018118  0E00               	movlw	0
  6226  01811A  6EE6               	movwf	postinc1,c
  6227  01811C  0E7A               	movlw	122
  6228  01811E  6EE6               	movwf	postinc1,c
  6229  018120  0E44               	movlw	68
  6230  018122  6EE6               	movwf	postinc1,c
  6231  018124  0E00               	movlw	0
  6232  018126  6EE6               	movwf	postinc1,c
  6233  018128  0E04               	movlw	4
  6234  01812A  6EE6               	movwf	postinc1,c
  6235  01812C  EC25  F0A5         	call	_conv_raw_result	;wreg free
  6236  018130  0060  F007  FFE6   	movff	btemp,postinc1
  6237  018136  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6238  01813C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6239  018142  0060  F013  FFE6   	movff	btemp+3,postinc1
  6240  018148  ECD1  F0BF         	call	___fltol	;wreg free
  6241  01814C  0060  F007  FFE6   	movff	btemp,postinc1
  6242  018152  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6243  018158  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6244  01815E  0060  F013  FFE6   	movff	btemp+3,postinc1
  6245  018164  0E00               	movlw	0
  6246  018166  6EE6               	movwf	postinc1,c
  6247  018168  ECAC  F0BA         	call	___xxtofl	;wreg free
  6248  01816C  0060  F007  FFE6   	movff	btemp,postinc1
  6249  018172  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6250  018178  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6251  01817E  0060  F013  FFE6   	movff	btemp+3,postinc1
  6252  018184  EC26  F097         	call	___flmul	;wreg free
  6253  018188  0060  F007  FFE6   	movff	btemp,postinc1
  6254  01818E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6255  018194  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6256  01819A  0060  F013  FFE6   	movff	btemp+3,postinc1
  6257  0181A0  ECD1  F0BF         	call	___fltol	;wreg free
  6258  0181A4  0060  F007  FFE6   	movff	btemp,postinc1
  6259  0181AA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6260  0181B0  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6261  0181B6  0060  F013  FFE6   	movff	btemp+3,postinc1
  6262  0181BC  ECB8  F0CD         	call	_Volts_to_SOC	;wreg free
  6263  0181C0  0060  F004  F1AA   	movff	btemp,_C+170	;volatile
  6264  0181C6  0060  F008  F1AB   	movff	btemp+1,_C+171	;volatile
  6265                           
  6266                           ;bsoc.c: 94:  C.dynamic_ah = C.bank_ah * (C.soc / 100.0);
  6267  0181CC  0060  F623  FFE6   	movff	_C+136,postinc1
  6268  0181D2  0060  F627  FFE6   	movff	_C+137,postinc1
  6269  0181D8  0060  F62B  FFE6   	movff	_C+138,postinc1
  6270  0181DE  0060  F62F  FFE6   	movff	_C+139,postinc1
  6271  0181E4  0E00               	movlw	0
  6272  0181E6  6EE6               	movwf	postinc1,c
  6273  0181E8  0E00               	movlw	0
  6274  0181EA  6EE6               	movwf	postinc1,c
  6275  0181EC  0EC8               	movlw	200
  6276  0181EE  6EE6               	movwf	postinc1,c
  6277  0181F0  0E42               	movlw	66
  6278  0181F2  6EE6               	movwf	postinc1,c
  6279  0181F4  0101               	movlb	1	; () banked
  6280  0181F6  51AA               	movf	(_C+170)& (0+255),w,b	;volatile
  6281  0181F8  6E09               	movwf	(btemp+8)^0,c
  6282  0181FA  51AB               	movf	(_C+171)& (0+255),w,b	;volatile
  6283  0181FC  6E0A               	movwf	(btemp+9)^0,c
  6284  0181FE  6A0B               	clrf	(btemp+10)^0,c
  6285  018200  6A0C               	clrf	(btemp+11)^0,c
  6286  018202  0060  F027  FFE6   	movff	btemp+8,postinc1
  6287  018208  0060  F02B  FFE6   	movff	btemp+9,postinc1
  6288  01820E  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6289  018214  0060  F033  FFE6   	movff	btemp+11,postinc1
  6290  01821A  0E00               	movlw	0
  6291  01821C  6EE6               	movwf	postinc1,c
  6292  01821E  ECAC  F0BA         	call	___xxtofl	;wreg free
  6293  018222  0060  F007  FFE6   	movff	btemp,postinc1
  6294  018228  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6295  01822E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6296  018234  0060  F013  FFE6   	movff	btemp+3,postinc1
  6297  01823A  EC68  F0A2         	call	___fldiv	;wreg free
  6298  01823E  0060  F007  FFE6   	movff	btemp,postinc1
  6299  018244  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6300  01824A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6301  018250  0060  F013  FFE6   	movff	btemp+3,postinc1
  6302  018256  EC26  F097         	call	___flmul	;wreg free
  6303  01825A  0060  F004  F18C   	movff	btemp,_C+140	;volatile
  6304  018260  0060  F008  F18D   	movff	btemp+1,_C+141	;volatile
  6305  018266  0060  F00C  F18E   	movff	btemp+2,_C+142	;volatile
  6306  01826C  0060  F010  F18F   	movff	btemp+3,_C+143	;volatile
  6307                           
  6308                           ;bsoc.c: 95:  TMR3_SetInterruptHandler(calc_bsoc);
  6309  018272  0E32               	movlw	low _calc_bsoc
  6310  018274  6EE6               	movwf	postinc1,c
  6311  018276  0E3E               	movlw	high _calc_bsoc
  6312  018278  6EE6               	movwf	postinc1,c
  6313  01827A  0E01               	movlw	low (_calc_bsoc shr (0+16))
  6314  01827C  6EE6               	movwf	postinc1,c
  6315  01827E  ECD5  F0D6         	call	_TMR3_SetInterruptHandler	;wreg free
  6316                           
  6317                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  6318  018282  0012               	return		;funcret
  6319  018284                     __end_of_init_bsoc:
  6320                           	opt callstack 0
  6321                           
  6322 ;; *************** function _Volts_to_SOC *****************
  6323 ;; Defined at:
  6324 ;;		line 152 in file "bsoc.c"
  6325 ;; Parameters:    Size  Location     Type
  6326 ;;  cvoltage        4  [STACK] unsigned long 
  6327 ;; Auto vars:     Size  Location     Type
  6328 ;;		None
  6329 ;; Return value:  Size  Location     Type
  6330 ;;                  2  [STACK] unsigned short 
  6331 ;; Registers used:
  6332 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, tblptrl, tblptrh, tblptru, prodl, prodh
  6333 ;; Tracked objects:
  6334 ;;		On entry : 0/1
  6335 ;;		On exit  : 0/0
  6336 ;;		Unchanged: 0/0
  6337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6342 ;;Total ram usage:        0 bytes
  6343 ;; Hardware stack levels used:    1
  6344 ;; Hardware stack levels required when called:   15
  6345 ;; This function calls:
  6346 ;;		Nothing
  6347 ;; This function is called by:
  6348 ;;		_init_bsoc
  6349 ;; This function uses a reentrant model
  6350 ;;
  6351                           
  6352                           	psect	text12
  6353  019B70                     __ptext12:
  6354                           	opt callstack 0
  6355  019B70                     _Volts_to_SOC:
  6356                           	opt callstack 14
  6357                           
  6358                           ;bsoc.c: 152: uint16_t Volts_to_SOC(uint32_t cvoltage);bsoc.c: 153: {;bsoc.c: 154:  stat
      +                          ic uint8_t slot;;bsoc.c: 156:  C.soc = 0;
  6359                           
  6360                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6361                           ;incstack = 0
  6362  019B70  0101               	movlb	1	; () banked
  6363  019B72  6BAA               	clrf	(_C+170)& (0+255),b	;volatile
  6364  019B74  6BAB               	clrf	(_C+171)& (0+255),b	;volatile
  6365                           
  6366                           ;bsoc.c: 157:  for (slot = 0; slot < 26; slot++) {
  6367  019B76  6A2E               	clrf	Volts_to_SOC@slot^0,c
  6368  019B78                     l10280:
  6369                           
  6370                           ;bsoc.c: 158:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  6371                           ;stkvar	_cvoltage @ sp[(0)+-4]
  6372  019B78  502E               	movf	Volts_to_SOC@slot^0,w,c
  6373  019B7A  0D08               	mullw	8
  6374  019B7C  0E2F               	movlw	low _BVSOC_TABLE
  6375  019B7E  24F3               	addwf	243,w,c
  6376  019B80  6EF6               	movwf	tblptrl,c
  6377  019B82  0EFB               	movlw	high _BVSOC_TABLE
  6378  019B84  20F4               	addwfc	244,w,c
  6379  019B86  6EF7               	movwf	tblptrh,c
  6380  019B88                     	if	1	;There are 3 active tblptr bytes
  6381  019B88  6AF8               	clrf	tblptru,c
  6382  019B8A  0E00               	movlw	low (__mediumconst shr (0+16))
  6383  019B8C  22F8               	addwfc	tblptru,f,c
  6384  019B8E                     	endif
  6385  019B8E  0EFC               	movlw	-4
  6386  019B90  50E3               	movf	plusw1,w,c
  6387  019B92  0009               	tblrd		*+
  6388  019B94  5CF5               	subwf	tablat,w,c
  6389  019B96  0EFD               	movlw	-3
  6390  019B98  50E3               	movf	plusw1,w,c
  6391  019B9A  0009               	tblrd		*+
  6392  019B9C  58F5               	subwfb	tablat,w,c
  6393  019B9E  0EFE               	movlw	-2
  6394  019BA0  50E3               	movf	plusw1,w,c
  6395  019BA2  0009               	tblrd		*+
  6396  019BA4  58F5               	subwfb	tablat,w,c
  6397  019BA6  0EFF               	movlw	-1
  6398  019BA8  50E3               	movf	plusw1,w,c
  6399  019BAA  0009               	tblrd		*+
  6400  019BAC  58F5               	subwfb	tablat,w,c
  6401  019BAE  B0D8               	btfsc	status,0,c
  6402  019BB0  D017               	goto	l10284
  6403                           
  6404                           ;bsoc.c: 159:    C.soc = BVSOC_TABLE[slot][1];
  6405  019BB2  502E               	movf	Volts_to_SOC@slot^0,w,c
  6406  019BB4  0D08               	mullw	8
  6407  019BB6  0E04               	movlw	4
  6408  019BB8  26F3               	addwf	243,f,c
  6409  019BBA  0E00               	movlw	0
  6410  019BBC  22F4               	addwfc	244,f,c
  6411  019BBE  0E2F               	movlw	low _BVSOC_TABLE
  6412  019BC0  24F3               	addwf	243,w,c
  6413  019BC2  6EF6               	movwf	tblptrl,c
  6414  019BC4  0EFB               	movlw	high _BVSOC_TABLE
  6415  019BC6  20F4               	addwfc	244,w,c
  6416  019BC8  6EF7               	movwf	tblptrh,c
  6417  019BCA                     	if	1	;There are 3 active tblptr bytes
  6418  019BCA  6AF8               	clrf	tblptru,c
  6419  019BCC  0E00               	movlw	low (__mediumconst shr (0+16))
  6420  019BCE  22F8               	addwfc	tblptru,f,c
  6421  019BD0                     	endif
  6422  019BD0  0009               	tblrd		*+
  6423  019BD2  006F FFD4  F1AA    	movff	tablat,_C+170	;volatile
  6424  019BD8  000A               	tblrd		*-
  6425  019BDA  006F FFD4  F1AB    	movff	tablat,_C+171	;volatile
  6426  019BE0                     l10284:
  6427                           
  6428                           ;bsoc.c: 161:  }
  6429  019BE0  2A2E               	incf	Volts_to_SOC@slot^0,f,c
  6430  019BE2  0E19               	movlw	25
  6431  019BE4  642E               	cpfsgt	Volts_to_SOC@slot^0,c
  6432  019BE6  D7C8               	goto	l10280
  6433                           
  6434                           ;bsoc.c: 163:  return C.soc;
  6435  019BE8  EE20  F1AA         	lfsr	2,_C+170	;volatile
  6436  019BEC  006F FF78  F001    	movff	postinc2,btemp
  6437  019BF2  006F FF74  F002    	movff	postdec2,btemp+1
  6438                           
  6439                           ; _Volts_to_SOC: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  6440  019BF8  52E5               	movf	postdec1,f,c
  6441  019BFA  52E5               	movf	postdec1,f,c
  6442  019BFC  52E5               	movf	postdec1,f,c
  6443  019BFE  52E5               	movf	postdec1,f,c
  6444  019C00  0012               	return		;funcret
  6445  019C02                     __end_of_Volts_to_SOC:
  6446                           	opt callstack 0
  6447                           
  6448 ;; *************** function _hid_display *****************
  6449 ;; Defined at:
  6450 ;;		line 17 in file "hid.c"
  6451 ;; Parameters:    Size  Location     Type
  6452 ;;  h               1  [STACK] PTR struct H_data
  6453 ;;		 -> H(7), 
  6454 ;; Auto vars:     Size  Location     Type
  6455 ;;		None
  6456 ;; Return value:  Size  Location     Type
  6457 ;;                  1  [STACK] PTR struct H_data
  6458 ;; Registers used:
  6459 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  6460 ;; Tracked objects:
  6461 ;;		On entry : 3F/1
  6462 ;;		On exit  : 0/0
  6463 ;;		Unchanged: 0/0
  6464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6469 ;;Total ram usage:        0 bytes
  6470 ;; Hardware stack levels used:    1
  6471 ;; Hardware stack levels required when called:   17
  6472 ;; This function calls:
  6473 ;;		_hid_input
  6474 ;; This function is called by:
  6475 ;;		_main
  6476 ;; This function uses a reentrant model
  6477 ;;
  6478                           
  6479                           	psect	text13
  6480  0190BA                     __ptext13:
  6481                           	opt callstack 0
  6482  0190BA                     _hid_display:
  6483                           	opt callstack 13
  6484                           
  6485                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  6486                           ;stkvar	_h @ sp[(0)+-1]
  6487                           
  6488                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6489                           ;incstack = 0
  6490  0190BA  0EFF               	movlw	-1
  6491  0190BC  50E3               	movf	plusw1,w,c
  6492  0190BE  6EE6               	movwf	postinc1,c
  6493  0190C0  EC93  F0CE         	call	_hid_input	;wreg free
  6494                           
  6495                           ;hid.c: 21:  switch (h->h_state) {
  6496  0190C4  D066               	goto	l10692
  6497  0190C6                     l10670:
  6498                           
  6499                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  6500                           ;stkvar	_h @ sp[(0)+-1]
  6501  0190C6  0EFF               	movlw	-1
  6502  0190C8  50E3               	movf	plusw1,w,c
  6503  0190CA  6ED9               	movwf	fsr2l,c
  6504  0190CC  6ADA               	clrf	fsr2h,c
  6505  0190CE  0E01               	movlw	1
  6506  0190D0  26D9               	addwf	fsr2l,f,c
  6507  0190D2  0E01               	movlw	1
  6508  0190D4  6EDF               	movwf	indf2,c
  6509                           
  6510                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  6511                           ;stkvar	_h @ sp[(0)+-1]
  6512  0190D6  0EFF               	movlw	-1
  6513  0190D8  50E3               	movf	plusw1,w,c
  6514  0190DA  6ED9               	movwf	fsr2l,c
  6515  0190DC  6ADA               	clrf	fsr2h,c
  6516  0190DE  0E00               	movlw	0
  6517  0190E0  6EDF               	movwf	indf2,c
  6518                           
  6519                           ;hid.c: 25:   h->wait_enter = 1;
  6520                           ;stkvar	_h @ sp[(0)+-1]
  6521  0190E2  0EFF               	movlw	-1
  6522  0190E4  50E3               	movf	plusw1,w,c
  6523  0190E6  6ED9               	movwf	fsr2l,c
  6524  0190E8  6ADA               	clrf	fsr2h,c
  6525  0190EA  0E04               	movlw	4
  6526  0190EC  26D9               	addwf	fsr2l,f,c
  6527  0190EE  0E01               	movlw	1
  6528  0190F0  6EDF               	movwf	indf2,c
  6529                           
  6530                           ;hid.c: 26:   h->wait_select = 1;
  6531                           ;stkvar	_h @ sp[(0)+-1]
  6532  0190F2  0EFF               	movlw	-1
  6533  0190F4  50E3               	movf	plusw1,w,c
  6534  0190F6  6ED9               	movwf	fsr2l,c
  6535  0190F8  6ADA               	clrf	fsr2h,c
  6536  0190FA  0E02               	movlw	2
  6537  0190FC  26D9               	addwf	fsr2l,f,c
  6538  0190FE  0E01               	movlw	1
  6539  019100  6EDF               	movwf	indf2,c
  6540                           
  6541                           ;hid.c: 27:   h->select_p = SW_OFF;
  6542                           ;stkvar	_h @ sp[(0)+-1]
  6543  019102  0EFF               	movlw	-1
  6544  019104  50E3               	movf	plusw1,w,c
  6545  019106  6ED9               	movwf	fsr2l,c
  6546  019108  6ADA               	clrf	fsr2h,c
  6547  01910A  0E03               	movlw	3
  6548  01910C  26D9               	addwf	fsr2l,f,c
  6549  01910E  0E00               	movlw	0
  6550  019110  6EDF               	movwf	indf2,c
  6551                           
  6552                           ;hid.c: 28:   h->enter_p = SW_OFF;
  6553                           ;stkvar	_h @ sp[(0)+-1]
  6554  019112  0EFF               	movlw	-1
  6555  019114  50E3               	movf	plusw1,w,c
  6556  019116  6ED9               	movwf	fsr2l,c
  6557  019118  6ADA               	clrf	fsr2h,c
  6558  01911A  0E05               	movlw	5
  6559  01911C  26D9               	addwf	fsr2l,f,c
  6560  01911E  0E00               	movlw	0
  6561  019120  D036               	goto	L1
  6562  019122                     l10682:
  6563                           
  6564                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  6565                           ;stkvar	_h @ sp[(0)+-1]
  6566  019122  0EFF               	movlw	-1
  6567  019124  50E3               	movf	plusw1,w,c
  6568  019126  6ED9               	movwf	fsr2l,c
  6569  019128  6ADA               	clrf	fsr2h,c
  6570  01912A  0E02               	movlw	2
  6571  01912C  26D9               	addwf	fsr2l,f,c
  6572  01912E  50DF               	movf	indf2,w,c
  6573  019130  A4D8               	btfss	status,2,c
  6574  019132  D042               	goto	l1933
  6575                           
  6576                           ;stkvar	_h @ sp[(0)+-1]
  6577  019134  0EFF               	movlw	-1
  6578  019136  50E3               	movf	plusw1,w,c
  6579  019138  6ED9               	movwf	fsr2l,c
  6580  01913A  6ADA               	clrf	fsr2h,c
  6581  01913C  0E03               	movlw	3
  6582  01913E  26D9               	addwf	fsr2l,f,c
  6583  019140  50DF               	movf	indf2,w,c
  6584  019142  A4D8               	btfss	status,2,c
  6585  019144  D039               	goto	l1933
  6586                           
  6587                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  6588                           ;stkvar	_h @ sp[(0)+-1]
  6589  019146  0EFF               	movlw	-1
  6590  019148  50E3               	movf	plusw1,w,c
  6591  01914A  6ED9               	movwf	fsr2l,c
  6592  01914C  6ADA               	clrf	fsr2h,c
  6593  01914E  0E06               	movlw	6
  6594  019150  26D9               	addwf	fsr2l,f,c
  6595                           
  6596                           ;stkvar	_h @ sp[(0)+-1]
  6597  019152  0EFF               	movlw	-1
  6598  019154  50E3               	movf	plusw1,w,c
  6599  019156  6EE9               	movwf	fsr0l,c
  6600  019158  6AEA               	clrf	fsr0h,c
  6601  01915A  0E06               	movlw	6
  6602  01915C  26E9               	addwf	fsr0l,f,c
  6603  01915E  2AEF               	incf	indf0,f,c
  6604  019160  50EF               	movf	indf0,w,c
  6605  019162  0B03               	andlw	3
  6606  019164  6EDF               	movwf	indf2,c
  6607                           
  6608                           ;hid.c: 34:    h->hid_display = h->sequence;
  6609                           ;stkvar	_h @ sp[(0)+-1]
  6610  019166  0EFF               	movlw	-1
  6611  019168  50E3               	movf	plusw1,w,c
  6612  01916A  6ED9               	movwf	fsr2l,c
  6613  01916C  6ADA               	clrf	fsr2h,c
  6614  01916E  0E06               	movlw	6
  6615  019170  26D9               	addwf	fsr2l,f,c
  6616                           
  6617                           ;stkvar	_h @ sp[(0)+-1]
  6618  019172  0EFF               	movlw	-1
  6619  019174  50E3               	movf	plusw1,w,c
  6620  019176  6EE9               	movwf	fsr0l,c
  6621  019178  6AEA               	clrf	fsr0h,c
  6622  01917A  006F FF7F FFEF     	movff	indf2,indf0
  6623                           
  6624                           ;hid.c: 35:    h->wait_select = 1;
  6625                           ;stkvar	_h @ sp[(0)+-1]
  6626  019180  0EFF               	movlw	-1
  6627  019182  50E3               	movf	plusw1,w,c
  6628  019184  6ED9               	movwf	fsr2l,c
  6629  019186  6ADA               	clrf	fsr2h,c
  6630  019188  0E02               	movlw	2
  6631  01918A  26D9               	addwf	fsr2l,f,c
  6632  01918C  0E01               	movlw	1
  6633  01918E                     L1:
  6634  01918E  6EDF               	movwf	indf2,c
  6635  019190  D013               	goto	l1933
  6636  019192                     l10692:
  6637                           
  6638                           ;stkvar	_h @ sp[(0)+-1]
  6639  019192  0EFF               	movlw	-1
  6640  019194  50E3               	movf	plusw1,w,c
  6641  019196  6ED9               	movwf	fsr2l,c
  6642  019198  6ADA               	clrf	fsr2h,c
  6643  01919A  0E01               	movlw	1
  6644  01919C  26D9               	addwf	fsr2l,f,c
  6645  01919E  50DF               	movf	indf2,w,c
  6646  0191A0  6E0B               	movwf	(btemp+10)^0,c
  6647  0191A2  6A0C               	clrf	(btemp+11)^0,c
  6648                           
  6649                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6650                           ; Switch size 1, requested type "simple"
  6651                           ; Number of cases is 1, Range of values is 0 to 0
  6652                           ; switch strategies available:
  6653                           ; Name         Instructions Cycles
  6654                           ; simple_byte            4     3 (average)
  6655                           ;	Chosen strategy is simple_byte
  6656  0191A4  500C               	movf	(btemp+11)^0,w,c
  6657  0191A6  0A00               	xorlw	0	; case 0
  6658  0191A8  A4D8               	btfss	status,2,c
  6659  0191AA  D7BB               	goto	l10682
  6660                           
  6661                           ; Switch size 1, requested type "simple"
  6662                           ; Number of cases is 2, Range of values is 0 to 1
  6663                           ; switch strategies available:
  6664                           ; Name         Instructions Cycles
  6665                           ; simple_byte            7     4 (average)
  6666                           ;	Chosen strategy is simple_byte
  6667  0191AC  500B               	movf	(btemp+10)^0,w,c
  6668  0191AE  0A00               	xorlw	0	; case 0
  6669  0191B0  B4D8               	btfsc	status,2,c
  6670  0191B2  D789               	goto	l10670
  6671  0191B4  0A01               	xorlw	1	; case 1
  6672  0191B6  D7B5               	goto	l10682
  6673  0191B8                     l1933:
  6674                           
  6675                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  6676  0191B8  52E5               	movf	postdec1,f,c
  6677  0191BA  0012               	return		;funcret
  6678  0191BC                     __end_of_hid_display:
  6679                           	opt callstack 0
  6680                           
  6681 ;; *************** function _hid_input *****************
  6682 ;; Defined at:
  6683 ;;		line 3 in file "hid.c"
  6684 ;; Parameters:    Size  Location     Type
  6685 ;;  h               1  [STACK] PTR struct H_data
  6686 ;;		 -> H(7), 
  6687 ;; Auto vars:     Size  Location     Type
  6688 ;;		None
  6689 ;; Return value:  Size  Location     Type
  6690 ;;                  1  [STACK] PTR struct H_data
  6691 ;; Registers used:
  6692 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  6693 ;; Tracked objects:
  6694 ;;		On entry : 0/1
  6695 ;;		On exit  : 0/0
  6696 ;;		Unchanged: 0/0
  6697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6702 ;;Total ram usage:        0 bytes
  6703 ;; Hardware stack levels used:    1
  6704 ;; Hardware stack levels required when called:   16
  6705 ;; This function calls:
  6706 ;;		_get_switch
  6707 ;; This function is called by:
  6708 ;;		_hid_display
  6709 ;; This function uses a reentrant model
  6710 ;;
  6711                           
  6712                           	psect	text14
  6713  019D26                     __ptext14:
  6714                           	opt callstack 0
  6715  019D26                     _hid_input:
  6716                           	opt callstack 13
  6717                           
  6718                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  6719                           
  6720                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6721                           ;incstack = 0
  6722  019D26  0E02               	movlw	2
  6723  019D28  6EE6               	movwf	postinc1,c
  6724  019D2A  ECCA  F0D5         	call	_get_switch	;wreg free
  6725  019D2E  5001               	movf	btemp^0,w,c
  6726  019D30  B4D8               	btfsc	status,2,c
  6727  019D32  D01C               	goto	l10212
  6728                           
  6729                           ;hid.c: 6:   h->wait_select = 0;
  6730                           ;stkvar	_h @ sp[(0)+-1]
  6731  019D34  0EFF               	movlw	-1
  6732  019D36  50E3               	movf	plusw1,w,c
  6733  019D38  6ED9               	movwf	fsr2l,c
  6734  019D3A  6ADA               	clrf	fsr2h,c
  6735  019D3C  0E02               	movlw	2
  6736  019D3E  26D9               	addwf	fsr2l,f,c
  6737  019D40  0E00               	movlw	0
  6738  019D42  6EDF               	movwf	indf2,c
  6739                           
  6740                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  6741  019D44  0E02               	movlw	2
  6742  019D46  6EE6               	movwf	postinc1,c
  6743  019D48  ECCA  F0D5         	call	_get_switch	;wreg free
  6744  019D4C  5001               	movf	btemp^0,w,c
  6745  019D4E  B4D8               	btfsc	status,2,c
  6746  019D50  D003               	goto	u9370
  6747  019D52  6A0C               	clrf	(btemp+11)^0,c
  6748  019D54  2A0C               	incf	(btemp+11)^0,f,c
  6749  019D56  D001               	goto	u9388
  6750  019D58                     u9370:
  6751  019D58  6A0C               	clrf	(btemp+11)^0,c
  6752  019D5A                     u9388:
  6753                           
  6754                           ;stkvar	_h @ sp[(0)+-1]
  6755  019D5A  0EFF               	movlw	-1
  6756  019D5C  50E3               	movf	plusw1,w,c
  6757  019D5E  6ED9               	movwf	fsr2l,c
  6758  019D60  6ADA               	clrf	fsr2h,c
  6759  019D62  0E03               	movlw	3
  6760  019D64  26D9               	addwf	fsr2l,f,c
  6761  019D66  0060  F033  FFDF   	movff	btemp+11,indf2
  6762  019D6C                     l10212:
  6763                           
  6764                           ;hid.c: 10:  if (get_switch(SENTER)) {
  6765  019D6C  0E03               	movlw	3
  6766  019D6E  6EE6               	movwf	postinc1,c
  6767  019D70  ECCA  F0D5         	call	_get_switch	;wreg free
  6768  019D74  5001               	movf	btemp^0,w,c
  6769  019D76  B4D8               	btfsc	status,2,c
  6770  019D78  D01C               	goto	l1924
  6771                           
  6772                           ;hid.c: 11:   h->wait_enter = 0;
  6773                           ;stkvar	_h @ sp[(0)+-1]
  6774  019D7A  0EFF               	movlw	-1
  6775  019D7C  50E3               	movf	plusw1,w,c
  6776  019D7E  6ED9               	movwf	fsr2l,c
  6777  019D80  6ADA               	clrf	fsr2h,c
  6778  019D82  0E04               	movlw	4
  6779  019D84  26D9               	addwf	fsr2l,f,c
  6780  019D86  0E00               	movlw	0
  6781  019D88  6EDF               	movwf	indf2,c
  6782                           
  6783                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  6784  019D8A  0E03               	movlw	3
  6785  019D8C  6EE6               	movwf	postinc1,c
  6786  019D8E  ECCA  F0D5         	call	_get_switch	;wreg free
  6787  019D92  5001               	movf	btemp^0,w,c
  6788  019D94  B4D8               	btfsc	status,2,c
  6789  019D96  D003               	goto	u9400
  6790  019D98  6A0C               	clrf	(btemp+11)^0,c
  6791  019D9A  2A0C               	incf	(btemp+11)^0,f,c
  6792  019D9C  D001               	goto	u9418
  6793  019D9E                     u9400:
  6794  019D9E  6A0C               	clrf	(btemp+11)^0,c
  6795  019DA0                     u9418:
  6796                           
  6797                           ;stkvar	_h @ sp[(0)+-1]
  6798  019DA0  0EFF               	movlw	-1
  6799  019DA2  50E3               	movf	plusw1,w,c
  6800  019DA4  6ED9               	movwf	fsr2l,c
  6801  019DA6  6ADA               	clrf	fsr2h,c
  6802  019DA8  0E05               	movlw	5
  6803  019DAA  26D9               	addwf	fsr2l,f,c
  6804  019DAC  0060  F033  FFDF   	movff	btemp+11,indf2
  6805  019DB2                     l1924:
  6806                           
  6807                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  6808  019DB2  52E5               	movf	postdec1,f,c
  6809  019DB4  0012               	return		;funcret
  6810  019DB6                     __end_of_hid_input:
  6811                           	opt callstack 0
  6812                           
  6813 ;; *************** function _get_switch *****************
  6814 ;; Defined at:
  6815 ;;		line 18 in file "dio.c"
  6816 ;; Parameters:    Size  Location     Type
  6817 ;;  i               1  [STACK] unsigned char 
  6818 ;; Auto vars:     Size  Location     Type
  6819 ;;		None
  6820 ;; Return value:  Size  Location     Type
  6821 ;;                  1  [STACK] enum E17021
  6822 ;; Registers used:
  6823 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  6824 ;; Tracked objects:
  6825 ;;		On entry : 0/2
  6826 ;;		On exit  : 0/0
  6827 ;;		Unchanged: 0/0
  6828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6833 ;;Total ram usage:        0 bytes
  6834 ;; Hardware stack levels used:    1
  6835 ;; Hardware stack levels required when called:   15
  6836 ;; This function calls:
  6837 ;;		Nothing
  6838 ;; This function is called by:
  6839 ;;		_main
  6840 ;;		_hid_input
  6841 ;; This function uses a reentrant model
  6842 ;;
  6843                           
  6844                           	psect	text15
  6845  01AB94                     __ptext15:
  6846                           	opt callstack 0
  6847  01AB94                     _get_switch:
  6848                           	opt callstack 13
  6849                           
  6850                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  6851                           ;stkvar	_i @ sp[(0)+-1]
  6852                           
  6853                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6854                           ;incstack = 0
  6855  01AB94  0EFF               	movlw	-1
  6856  01AB96  006F FF8C  F001    	movff	plusw1,btemp
  6857  01AB9C  0E03               	movlw	3
  6858  01AB9E  6401               	cpfsgt	btemp^0,c
  6859  01ABA0  D002               	goto	l9476
  6860                           
  6861                           ;dio.c: 21:   return SW_OFF;
  6862  01ABA2  0E00               	movlw	0
  6863  01ABA4  D00A               	goto	L2
  6864  01ABA6                     l9476:
  6865                           
  6866                           ;dio.c: 23:  return S.button[i].sw;
  6867                           ;stkvar	_i @ sp[(0)+-1]
  6868  01ABA6  0EFF               	movlw	-1
  6869  01ABA8  50E3               	movf	plusw1,w,c
  6870  01ABAA  0D05               	mullw	5
  6871  01ABAC  0EBC               	movlw	low _S
  6872  01ABAE  24F3               	addwf	243,w,c
  6873  01ABB0  6ED9               	movwf	fsr2l,c
  6874  01ABB2  0E02               	movlw	high _S
  6875  01ABB4  20F4               	addwfc	prodh,w,c
  6876  01ABB6  6EDA               	movwf	fsr2h,c
  6877  01ABB8  50DF               	movf	indf2,w,c
  6878  01ABBA                     L2:
  6879  01ABBA  6E01               	movwf	btemp^0,c
  6880                           
  6881                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  6882  01ABBC  52E5               	movf	postdec1,f,c
  6883  01ABBE  0012               	return		;funcret
  6884  01ABC0                     __end_of_get_switch:
  6885                           	opt callstack 0
  6886                           
  6887 ;; *************** function _esr_check *****************
  6888 ;; Defined at:
  6889 ;;		line 169 in file "bsoc.c"
  6890 ;; Parameters:    Size  Location     Type
  6891 ;;  fsm             1  [STACK] unsigned char 
  6892 ;; Auto vars:     Size  Location     Type
  6893 ;;		None
  6894 ;; Return value:  Size  Location     Type
  6895 ;;                  4  [STACK] float 
  6896 ;; Registers used:
  6897 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6898 ;; Tracked objects:
  6899 ;;		On entry : 0/0
  6900 ;;		On exit  : 0/0
  6901 ;;		Unchanged: 0/0
  6902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6907 ;;Total ram usage:        0 bytes
  6908 ;; Hardware stack levels used:    1
  6909 ;; Hardware stack levels required when called:   18
  6910 ;; This function calls:
  6911 ;;		_StartTimer
  6912 ;;		_TimerDone
  6913 ;;		_WaitMs
  6914 ;;		___fldiv
  6915 ;;		___flsub
  6916 ;;		_conv_raw_result
  6917 ;;		_fabsf
  6918 ;;		_set_load_relay_one
  6919 ;;		_set_load_relay_two
  6920 ;;		_update_adc_result
  6921 ;; This function is called by:
  6922 ;;		_main
  6923 ;; This function uses a reentrant model
  6924 ;;
  6925                           
  6926                           	psect	text16
  6927  01646A                     __ptext16:
  6928                           	opt callstack 0
  6929  01646A                     _esr_check:
  6930                           	opt callstack 12
  6931                           
  6932                           ;bsoc.c: 169: float esr_check(uint8_t fsm);bsoc.c: 170: {;bsoc.c: 171:  static uint8_t e
      +                          sr_state = 0;;bsoc.c: 173:  if (!fsm)
  6933                           ;stkvar	_fsm @ sp[(0)+-1]
  6934                           
  6935                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6936                           ;incstack = 0
  6937  01646A  0EFF               	movlw	-1
  6938  01646C  50E3               	movf	plusw1,w,c
  6939  01646E  A4D8               	btfss	status,2,c
  6940  016470  D143               	goto	l10608
  6941                           
  6942                           ;bsoc.c: 174:   esr_state = 1;
  6943  016472  0E01               	movlw	1
  6944  016474  6E2D               	movwf	esr_check@esr_state^0,c
  6945  016476  D140               	goto	l10608
  6946  016478                     l10528:
  6947                           
  6948                           ;bsoc.c: 178:   StartTimer(TMR_ESR, 10000);
  6949  016478  0E10               	movlw	16
  6950  01647A  6EE6               	movwf	postinc1,c
  6951  01647C  0E27               	movlw	39
  6952  01647E  6EE6               	movwf	postinc1,c
  6953  016480  0E0C               	movlw	12
  6954  016482  6EE6               	movwf	postinc1,c
  6955  016484  ECDC  F0D3         	call	_StartTimer	;wreg free
  6956  016488                     l10530:
  6957                           
  6958                           ;bsoc.c: 179:   esr_state++;
  6959  016488  2A2D               	incf	esr_check@esr_state^0,f,c
  6960                           
  6961                           ;bsoc.c: 180:   break;
  6962  01648A  D14A               	goto	l10610
  6963  01648C                     l10532:
  6964                           
  6965                           ;bsoc.c: 182:   set_load_relay_one(0);
  6966  01648C  0E00               	movlw	0
  6967  01648E  6EE6               	movwf	postinc1,c
  6968  016490  ECEB  F0D8         	call	_set_load_relay_one	;wreg free
  6969                           
  6970                           ;bsoc.c: 183:   set_load_relay_two(0);
  6971  016494  0E00               	movlw	0
  6972  016496  6EE6               	movwf	postinc1,c
  6973  016498  ECE3  F0D8         	call	_set_load_relay_two	;wreg free
  6974                           
  6975                           ;bsoc.c: 184:   if (!fsm) {
  6976                           ;stkvar	_fsm @ sp[(0)+-1]
  6977  01649C  0EFF               	movlw	-1
  6978  01649E  50E3               	movf	plusw1,w,c
  6979  0164A0  A4D8               	btfss	status,2,c
  6980  0164A2  D007               	goto	l10538
  6981                           
  6982                           ;bsoc.c: 185:    WaitMs(10000);
  6983  0164A4  0E10               	movlw	16
  6984  0164A6  6EE6               	movwf	postinc1,c
  6985  0164A8  0E27               	movlw	39
  6986  0164AA  6EE6               	movwf	postinc1,c
  6987  0164AC  ECCF  F0D4         	call	_WaitMs	;wreg free
  6988                           
  6989                           ;bsoc.c: 186:   } else {
  6990  0164B0  D00F               	goto	l10546
  6991  0164B2                     l10538:
  6992                           
  6993                           ;bsoc.c: 187:    if (TimerDone(TMR_ESR)) {
  6994  0164B2  0E0C               	movlw	12
  6995  0164B4  6EE6               	movwf	postinc1,c
  6996  0164B6  EC5D  F0D6         	call	_TimerDone	;wreg free
  6997  0164BA  5001               	movf	btemp^0,w,c
  6998  0164BC  B4D8               	btfsc	status,2,c
  6999  0164BE  D130               	goto	l10610
  7000                           
  7001                           ;bsoc.c: 188:     StartTimer(TMR_ESR, 10000);
  7002  0164C0  0E10               	movlw	16
  7003  0164C2  6EE6               	movwf	postinc1,c
  7004  0164C4  0E27               	movlw	39
  7005  0164C6  6EE6               	movwf	postinc1,c
  7006  0164C8  0E0C               	movlw	12
  7007  0164CA  6EE6               	movwf	postinc1,c
  7008  0164CC  ECDC  F0D3         	call	_StartTimer	;wreg free
  7009  0164D0                     l10546:
  7010                           
  7011                           ;bsoc.c: 194:   update_adc_result();
  7012  0164D0  EC7B  F0D4         	call	_update_adc_result	;wreg free
  7013                           
  7014                           ;bsoc.c: 195:   C.bv_noload = conv_raw_result(V_BAT, CONV);
  7015  0164D4  0E00               	movlw	0
  7016  0164D6  6EE6               	movwf	postinc1,c
  7017  0164D8  0E04               	movlw	4
  7018  0164DA  6EE6               	movwf	postinc1,c
  7019  0164DC  EC25  F0A5         	call	_conv_raw_result	;wreg free
  7020  0164E0  0060  F004  F1E7   	movff	btemp,_C+231	;volatile
  7021  0164E6  0060  F008  F1E8   	movff	btemp+1,_C+232	;volatile
  7022  0164EC  0060  F00C  F1E9   	movff	btemp+2,_C+233	;volatile
  7023  0164F2  0060  F010  F1EA   	movff	btemp+3,_C+234	;volatile
  7024  0164F8  D7C7               	goto	l10530
  7025  0164FA                     l10552:
  7026                           
  7027                           ;bsoc.c: 199:   set_load_relay_one(1);
  7028  0164FA  0E01               	movlw	1
  7029  0164FC  6EE6               	movwf	postinc1,c
  7030  0164FE  ECEB  F0D8         	call	_set_load_relay_one	;wreg free
  7031                           
  7032                           ;bsoc.c: 200:   if (!fsm) {
  7033                           ;stkvar	_fsm @ sp[(0)+-1]
  7034  016502  0EFF               	movlw	-1
  7035  016504  50E3               	movf	plusw1,w,c
  7036  016506  A4D8               	btfss	status,2,c
  7037  016508  D007               	goto	l10558
  7038                           
  7039                           ;bsoc.c: 201:    WaitMs(10000);
  7040  01650A  0E10               	movlw	16
  7041  01650C  6EE6               	movwf	postinc1,c
  7042  01650E  0E27               	movlw	39
  7043  016510  6EE6               	movwf	postinc1,c
  7044  016512  ECCF  F0D4         	call	_WaitMs	;wreg free
  7045                           
  7046                           ;bsoc.c: 202:   } else {
  7047  016516  D00F               	goto	l10566
  7048  016518                     l10558:
  7049                           
  7050                           ;bsoc.c: 203:    if (TimerDone(TMR_ESR)) {
  7051  016518  0E0C               	movlw	12
  7052  01651A  6EE6               	movwf	postinc1,c
  7053  01651C  EC5D  F0D6         	call	_TimerDone	;wreg free
  7054  016520  5001               	movf	btemp^0,w,c
  7055  016522  B4D8               	btfsc	status,2,c
  7056  016524  D0FD               	goto	l10610
  7057                           
  7058                           ;bsoc.c: 204:     StartTimer(TMR_ESR, 10000);
  7059  016526  0E10               	movlw	16
  7060  016528  6EE6               	movwf	postinc1,c
  7061  01652A  0E27               	movlw	39
  7062  01652C  6EE6               	movwf	postinc1,c
  7063  01652E  0E0C               	movlw	12
  7064  016530  6EE6               	movwf	postinc1,c
  7065  016532  ECDC  F0D3         	call	_StartTimer	;wreg free
  7066  016536                     l10566:
  7067                           
  7068                           ;bsoc.c: 210:   update_adc_result();
  7069  016536  EC7B  F0D4         	call	_update_adc_result	;wreg free
  7070                           
  7071                           ;bsoc.c: 211:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
  7072  01653A  0E00               	movlw	0
  7073  01653C  6EE6               	movwf	postinc1,c
  7074  01653E  0E04               	movlw	4
  7075  016540  6EE6               	movwf	postinc1,c
  7076  016542  EC25  F0A5         	call	_conv_raw_result	;wreg free
  7077  016546  0060  F004  F1EB   	movff	btemp,_C+235	;volatile
  7078  01654C  0060  F008  F1EC   	movff	btemp+1,_C+236	;volatile
  7079  016552  0060  F00C  F1ED   	movff	btemp+2,_C+237	;volatile
  7080  016558  0060  F010  F1EE   	movff	btemp+3,_C+238	;volatile
  7081                           
  7082                           ;bsoc.c: 212:   C.load_i1 = conv_raw_result(C_BATT, CONV);
  7083  01655E  0E00               	movlw	0
  7084  016560  6EE6               	movwf	postinc1,c
  7085  016562  0E00               	movlw	0
  7086  016564  6EE6               	movwf	postinc1,c
  7087  016566  EC25  F0A5         	call	_conv_raw_result	;wreg free
  7088  01656A  0060  F004  F1DF   	movff	btemp,_C+223	;volatile
  7089  016570  0060  F008  F1E0   	movff	btemp+1,_C+224	;volatile
  7090  016576  0060  F00C  F1E1   	movff	btemp+2,_C+225	;volatile
  7091  01657C  0060  F010  F1E2   	movff	btemp+3,_C+226	;volatile
  7092  016582  D782               	goto	l10530
  7093  016584                     l10574:
  7094                           
  7095                           ;bsoc.c: 216:   set_load_relay_two(1);
  7096  016584  0E01               	movlw	1
  7097  016586  6EE6               	movwf	postinc1,c
  7098  016588  ECE3  F0D8         	call	_set_load_relay_two	;wreg free
  7099                           
  7100                           ;bsoc.c: 217:   if (!fsm) {
  7101                           ;stkvar	_fsm @ sp[(0)+-1]
  7102  01658C  0EFF               	movlw	-1
  7103  01658E  50E3               	movf	plusw1,w,c
  7104  016590  A4D8               	btfss	status,2,c
  7105  016592  D007               	goto	l10580
  7106                           
  7107                           ;bsoc.c: 218:    WaitMs(10000);
  7108  016594  0E10               	movlw	16
  7109  016596  6EE6               	movwf	postinc1,c
  7110  016598  0E27               	movlw	39
  7111  01659A  6EE6               	movwf	postinc1,c
  7112  01659C  ECCF  F0D4         	call	_WaitMs	;wreg free
  7113                           
  7114                           ;bsoc.c: 219:   } else {
  7115  0165A0  D007               	goto	l10586
  7116  0165A2                     l10580:
  7117                           
  7118                           ;bsoc.c: 220:    if (!TimerDone(TMR_ESR))
  7119  0165A2  0E0C               	movlw	12
  7120  0165A4  6EE6               	movwf	postinc1,c
  7121  0165A6  EC5D  F0D6         	call	_TimerDone	;wreg free
  7122  0165AA  5001               	movf	btemp^0,w,c
  7123  0165AC  B4D8               	btfsc	status,2,c
  7124  0165AE  D0B8               	goto	l10610
  7125  0165B0                     l10586:
  7126                           
  7127                           ;bsoc.c: 224:   update_adc_result();
  7128  0165B0  EC7B  F0D4         	call	_update_adc_result	;wreg free
  7129                           
  7130                           ;bsoc.c: 225:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
  7131  0165B4  0E00               	movlw	0
  7132  0165B6  6EE6               	movwf	postinc1,c
  7133  0165B8  0E04               	movlw	4
  7134  0165BA  6EE6               	movwf	postinc1,c
  7135  0165BC  EC25  F0A5         	call	_conv_raw_result	;wreg free
  7136  0165C0  0060  F004  F1EF   	movff	btemp,_C+239	;volatile
  7137  0165C6  0060  F008  F1F0   	movff	btemp+1,_C+240	;volatile
  7138  0165CC  0060  F00C  F1F1   	movff	btemp+2,_C+241	;volatile
  7139  0165D2  0060  F010  F1F2   	movff	btemp+3,_C+242	;volatile
  7140                           
  7141                           ;bsoc.c: 226:   C.load_i2 = conv_raw_result(C_BATT, CONV);
  7142  0165D8  0E00               	movlw	0
  7143  0165DA  6EE6               	movwf	postinc1,c
  7144  0165DC  0E00               	movlw	0
  7145  0165DE  6EE6               	movwf	postinc1,c
  7146  0165E0  EC25  F0A5         	call	_conv_raw_result	;wreg free
  7147  0165E4  0060  F004  F1E3   	movff	btemp,_C+227	;volatile
  7148  0165EA  0060  F008  F1E4   	movff	btemp+1,_C+228	;volatile
  7149  0165F0  0060  F00C  F1E5   	movff	btemp+2,_C+229	;volatile
  7150  0165F6  0060  F010  F1E6   	movff	btemp+3,_C+230	;volatile
  7151                           
  7152                           ;bsoc.c: 228:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
  7153  0165FC  0060  F78F  FFE6   	movff	_C+227,postinc1
  7154  016602  0060  F793  FFE6   	movff	_C+228,postinc1
  7155  016608  0060  F797  FFE6   	movff	_C+229,postinc1
  7156  01660E  0060  F79B  FFE6   	movff	_C+230,postinc1
  7157  016614  0060  F77F  FFE6   	movff	_C+223,postinc1
  7158  01661A  0060  F783  FFE6   	movff	_C+224,postinc1
  7159  016620  0060  F787  FFE6   	movff	_C+225,postinc1
  7160  016626  0060  F78B  FFE6   	movff	_C+226,postinc1
  7161  01662C  EC0D  F0D3         	call	___flsub	;wreg free
  7162  016630  0060  F007  FFE6   	movff	btemp,postinc1
  7163  016636  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7164  01663C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7165  016642  0060  F013  FFE6   	movff	btemp+3,postinc1
  7166  016648  0060  F7BF  FFE6   	movff	_C+239,postinc1
  7167  01664E  0060  F7C3  FFE6   	movff	_C+240,postinc1
  7168  016654  0060  F7C7  FFE6   	movff	_C+241,postinc1
  7169  01665A  0060  F7CB  FFE6   	movff	_C+242,postinc1
  7170  016660  0060  F7AF  FFE6   	movff	_C+235,postinc1
  7171  016666  0060  F7B3  FFE6   	movff	_C+236,postinc1
  7172  01666C  0060  F7B7  FFE6   	movff	_C+237,postinc1
  7173  016672  0060  F7BB  FFE6   	movff	_C+238,postinc1
  7174  016678  EC0D  F0D3         	call	___flsub	;wreg free
  7175  01667C  0060  F007  FFE6   	movff	btemp,postinc1
  7176  016682  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7177  016688  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7178  01668E  0060  F013  FFE6   	movff	btemp+3,postinc1
  7179  016694  EC68  F0A2         	call	___fldiv	;wreg free
  7180  016698  0060  F007  FFE6   	movff	btemp,postinc1
  7181  01669E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7182  0166A4  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7183  0166AA  0060  F013  FFE6   	movff	btemp+3,postinc1
  7184  0166B0  ECC6  F0CB         	call	_fabsf	;wreg free
  7185  0166B4  0060  F004  F184   	movff	btemp,_C+132	;volatile
  7186  0166BA  0060  F008  F185   	movff	btemp+1,_C+133	;volatile
  7187  0166C0  0060  F00C  F186   	movff	btemp+2,_C+134	;volatile
  7188  0166C6  0060  F010  F187   	movff	btemp+3,_C+135	;volatile
  7189                           
  7190                           ;bsoc.c: 229:   set_load_relay_one(0);
  7191  0166CC  0E00               	movlw	0
  7192  0166CE  6EE6               	movwf	postinc1,c
  7193  0166D0  ECEB  F0D8         	call	_set_load_relay_one	;wreg free
  7194                           
  7195                           ;bsoc.c: 230:   set_load_relay_two(0);
  7196  0166D4  0E00               	movlw	0
  7197  0166D6  6EE6               	movwf	postinc1,c
  7198  0166D8  ECE3  F0D8         	call	_set_load_relay_two	;wreg free
  7199                           
  7200                           ;bsoc.c: 231:   esr_state = 0;
  7201  0166DC  6A2D               	clrf	esr_check@esr_state^0,c
  7202                           
  7203                           ;bsoc.c: 232:   return C.esr;
  7204  0166DE  0060  F610  F001   	movff	_C+132,btemp	;volatile
  7205  0166E4  0060  F614  F002   	movff	_C+133,btemp+1	;volatile
  7206  0166EA  0060  F618  F003   	movff	_C+134,btemp+2	;volatile
  7207  0166F0  0060  F61C  F004   	movff	_C+135,btemp+3	;volatile
  7208  0166F6  D01C               	goto	l2047
  7209  0166F8                     l10608:
  7210  0166F8  502D               	movf	esr_check@esr_state^0,w,c
  7211  0166FA  6E0B               	movwf	(btemp+10)^0,c
  7212  0166FC  6A0C               	clrf	(btemp+11)^0,c
  7213                           
  7214                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7215                           ; Switch size 1, requested type "simple"
  7216                           ; Number of cases is 1, Range of values is 0 to 0
  7217                           ; switch strategies available:
  7218                           ; Name         Instructions Cycles
  7219                           ; simple_byte            4     3 (average)
  7220                           ;	Chosen strategy is simple_byte
  7221  0166FE  500C               	movf	(btemp+11)^0,w,c
  7222  016700  0A00               	xorlw	0	; case 0
  7223  016702  A4D8               	btfss	status,2,c
  7224  016704  D00D               	goto	l10610
  7225                           
  7226                           ; Switch size 1, requested type "simple"
  7227                           ; Number of cases is 4, Range of values is 0 to 3
  7228                           ; switch strategies available:
  7229                           ; Name         Instructions Cycles
  7230                           ; simple_byte           13     7 (average)
  7231                           ;	Chosen strategy is simple_byte
  7232  016706  500B               	movf	(btemp+10)^0,w,c
  7233  016708  0A00               	xorlw	0	; case 0
  7234  01670A  B4D8               	btfsc	status,2,c
  7235  01670C  D6B5               	goto	l10528
  7236  01670E  0A01               	xorlw	1	; case 1
  7237  016710  B4D8               	btfsc	status,2,c
  7238  016712  D6BC               	goto	l10532
  7239  016714  0A03               	xorlw	3	; case 2
  7240  016716  B4D8               	btfsc	status,2,c
  7241  016718  D6F0               	goto	l10552
  7242  01671A  0A01               	xorlw	1	; case 3
  7243  01671C  B4D8               	btfsc	status,2,c
  7244  01671E  D732               	goto	l10574
  7245  016720                     l10610:
  7246                           
  7247                           ;bsoc.c: 237:  return -1.0;
  7248  016720  0E00               	movlw	0
  7249  016722  6E01               	movwf	btemp^0,c
  7250  016724  0E00               	movlw	0
  7251  016726  6E02               	movwf	(btemp+1)^0,c
  7252  016728  0E80               	movlw	128
  7253  01672A  6E03               	movwf	(btemp+2)^0,c
  7254  01672C  0EBF               	movlw	191
  7255  01672E  6E04               	movwf	(btemp+3)^0,c
  7256  016730                     l2047:
  7257                           
  7258                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  7259  016730  52E5               	movf	postdec1,f,c
  7260  016732  0012               	return		;funcret
  7261  016734                     __end_of_esr_check:
  7262                           	opt callstack 0
  7263                           
  7264 ;; *************** function _update_adc_result *****************
  7265 ;; Defined at:
  7266 ;;		line 71 in file "daq.c"
  7267 ;; Parameters:    Size  Location     Type
  7268 ;;		None
  7269 ;; Auto vars:     Size  Location     Type
  7270 ;;		None
  7271 ;; Return value:  Size  Location     Type
  7272 ;;                  1  [STACK] _Bool 
  7273 ;; Registers used:
  7274 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  7275 ;; Tracked objects:
  7276 ;;		On entry : 0/0
  7277 ;;		On exit  : 0/0
  7278 ;;		Unchanged: 0/0
  7279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7284 ;;Total ram usage:        0 bytes
  7285 ;; Hardware stack levels used:    1
  7286 ;; Hardware stack levels required when called:   17
  7287 ;; This function calls:
  7288 ;;		_StartTimer
  7289 ;;		_TimerDone
  7290 ;;		_check_adc_scan
  7291 ;;		_clear_adc_scan
  7292 ;;		_start_adc_scan
  7293 ;; This function is called by:
  7294 ;;		_esr_check
  7295 ;; This function uses a reentrant model
  7296 ;;
  7297                           
  7298                           	psect	text17
  7299  01A8F6                     __ptext17:
  7300                           	opt callstack 0
  7301  01A8F6                     _update_adc_result:
  7302                           	opt callstack 12
  7303                           
  7304                           ;daq.c: 73:  if (R.done) {
  7305                           
  7306                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7307                           ;incstack = 0
  7308  01A8F6  0100               	movlb	0	; () banked
  7309  01A8F8  51EB               	movf	(_R+39)& (0+255),w,b	;volatile
  7310  01A8FA  B4D8               	btfsc	status,2,c
  7311  01A8FC  0012               	return	
  7312                           
  7313                           ; BSR set to: 0
  7314                           ;daq.c: 74:   clear_adc_scan();
  7315  01A8FE  EC49  F0D9         	call	_clear_adc_scan	;wreg free
  7316                           
  7317                           ; BSR set to: 0
  7318                           ;daq.c: 75:   start_adc_scan();
  7319  01A902  ECB4  F0D0         	call	_start_adc_scan	;wreg free
  7320                           
  7321                           ;daq.c: 76:   StartTimer(TMR_ADC, 200);
  7322  01A906  0EC8               	movlw	200
  7323  01A908  6EE6               	movwf	postinc1,c
  7324  01A90A  0E00               	movlw	0
  7325  01A90C  6EE6               	movwf	postinc1,c
  7326  01A90E  0E01               	movlw	1
  7327  01A910  6EE6               	movwf	postinc1,c
  7328  01A912  ECDC  F0D3         	call	_StartTimer	;wreg free
  7329  01A916                     l10142:
  7330  01A916  0E01               	movlw	1
  7331  01A918  6EE6               	movwf	postinc1,c
  7332  01A91A  EC5D  F0D6         	call	_TimerDone	;wreg free
  7333  01A91E  5001               	movf	btemp^0,w,c
  7334  01A920  A4D8               	btfss	status,2,c
  7335  01A922  0012               	return	
  7336  01A924  EC39  F0D9         	call	_check_adc_scan	;wreg free
  7337  01A928  5001               	movf	btemp^0,w,c
  7338  01A92A  A4D8               	btfss	status,2,c
  7339  01A92C  0012               	return	
  7340  01A92E  D7F3               	goto	l10142
  7341  01A930                     __end_of_update_adc_result:
  7342                           	opt callstack 0
  7343                           
  7344 ;; *************** function _start_adc_scan *****************
  7345 ;; Defined at:
  7346 ;;		line 32 in file "daq.c"
  7347 ;; Parameters:    Size  Location     Type
  7348 ;;		None
  7349 ;; Auto vars:     Size  Location     Type
  7350 ;;		None
  7351 ;; Return value:  Size  Location     Type
  7352 ;;                  1  [STACK] _Bool 
  7353 ;; Registers used:
  7354 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  7355 ;; Tracked objects:
  7356 ;;		On entry : 0/0
  7357 ;;		On exit  : 1/0
  7358 ;;		Unchanged: 0/0
  7359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7364 ;;Total ram usage:        0 bytes
  7365 ;; Hardware stack levels used:    1
  7366 ;; Hardware stack levels required when called:   16
  7367 ;; This function calls:
  7368 ;;		_ADCC_DischargeSampleCapacitor
  7369 ;;		_ADCC_SetADIInterruptHandler
  7370 ;;		_ADCC_SetADTIInterruptHandler
  7371 ;;		_ADCC_StartConversion
  7372 ;; This function is called by:
  7373 ;;		_main
  7374 ;;		_update_adc_result
  7375 ;; This function uses a reentrant model
  7376 ;;
  7377                           
  7378                           	psect	text18
  7379  01A168                     __ptext18:
  7380                           	opt callstack 0
  7381  01A168                     _start_adc_scan:
  7382                           	opt callstack 14
  7383                           
  7384                           ;daq.c: 34:  if (R.done)
  7385                           
  7386                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7387                           ;incstack = 0
  7388  01A168  0100               	movlb	0	; () banked
  7389  01A16A  51EB               	movf	(_R+39)& (0+255),w,b	;volatile
  7390  01A16C  A4D8               	btfss	status,2,c
  7391  01A16E  0012               	return	
  7392                           
  7393                           ; BSR set to: 0
  7394                           ;daq.c: 37:  R.scan_index = 0;
  7395  01A170  6BE8               	clrf	(_R+36)& (0+255),b	;volatile
  7396                           
  7397                           ; BSR set to: 0
  7398                           ;daq.c: 38:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  7399  01A172  013A               	movlb	58	; () banked
  7400  01A174  5140               	movf	64,w,b	;volatile
  7401  01A176  006E F940  F001    	movff	14928,btemp	;volatile
  7402  01A17C  6A02               	clrf	(btemp+1)^0,c
  7403  01A17E  0060  F004  F002   	movff	btemp,btemp+1
  7404  01A184  6A01               	clrf	btemp^0,c
  7405  01A186  2601               	addwf	btemp^0,f,c
  7406  01A188  0E00               	movlw	0
  7407  01A18A  2202               	addwfc	(btemp+1)^0,f,c
  7408  01A18C  0E77               	movlw	119
  7409  01A18E  1401               	andwf	btemp^0,w,c
  7410  01A190  0100               	movlb	0	; () banked
  7411  01A192  6FE9               	movwf	(_R+37)& (0+255),b	;volatile
  7412  01A194  0E3C               	movlw	60
  7413  01A196  1402               	andwf	(btemp+1)^0,w,c
  7414  01A198  6FEA               	movwf	(_R+38)& (0+255),b	;volatile
  7415                           
  7416                           ; BSR set to: 0
  7417                           ;daq.c: 39:  ADCC_SetADIInterruptHandler(adc_int_handler);
  7418  01A19A  0EBA               	movlw	low _adc_int_handler
  7419  01A19C  6EE6               	movwf	postinc1,c
  7420  01A19E  0EB2               	movlw	high _adc_int_handler
  7421  01A1A0  6EE6               	movwf	postinc1,c
  7422  01A1A2  0E01               	movlw	low (_adc_int_handler shr (0+16))
  7423  01A1A4  6EE6               	movwf	postinc1,c
  7424  01A1A6  EC25  F0D7         	call	_ADCC_SetADIInterruptHandler	;wreg free
  7425                           
  7426                           ;daq.c: 40:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  7427  01A1AA  0E46               	movlw	low _adc_int_t_handler
  7428  01A1AC  6EE6               	movwf	postinc1,c
  7429  01A1AE  0E9F               	movlw	high _adc_int_t_handler
  7430  01A1B0  6EE6               	movwf	postinc1,c
  7431  01A1B2  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  7432  01A1B4  6EE6               	movwf	postinc1,c
  7433  01A1B6  EC11  F0D7         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  7434                           
  7435                           ;daq.c: 41:  ADCC_DischargeSampleCapacitor();
  7436  01A1BA  EC35  F0D9         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  7437                           
  7438                           ; BSR set to: 62
  7439                           ;daq.c: 42:  ADCC_StartConversion(R.scan_index & 0xf);
  7440  01A1BE  0100               	movlb	0	; () banked
  7441  01A1C0  51E8               	movf	(_R+36)& (0+255),w,b	;volatile
  7442  01A1C2  0B0F               	andlw	15
  7443  01A1C4  6EE6               	movwf	postinc1,c
  7444  01A1C6  ECDA  F0D8         	call	_ADCC_StartConversion	;wreg free
  7445                           
  7446                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  7447  01A1CA  0012               	return		;funcret
  7448  01A1CC                     __end_of_start_adc_scan:
  7449                           	opt callstack 0
  7450                           
  7451 ;; *************** function _ADCC_StartConversion *****************
  7452 ;; Defined at:
  7453 ;;		line 128 in file "mcc_generated_files/adcc.c"
  7454 ;; Parameters:    Size  Location     Type
  7455 ;;  channel         1  [STACK] enum E16136
  7456 ;; Auto vars:     Size  Location     Type
  7457 ;;		None
  7458 ;; Return value:  Size  Location     Type
  7459 ;;                  1  [STACK] void 
  7460 ;; Registers used:
  7461 ;;		fsr1l, fsr1h
  7462 ;; Tracked objects:
  7463 ;;		On entry : 3F/0
  7464 ;;		On exit  : 3F/3E
  7465 ;;		Unchanged: 0/0
  7466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7471 ;;Total ram usage:        0 bytes
  7472 ;; Hardware stack levels used:    1
  7473 ;; Hardware stack levels required when called:   15
  7474 ;; This function calls:
  7475 ;;		Nothing
  7476 ;; This function is called by:
  7477 ;;		_start_adc_scan
  7478 ;;		_adc_int_t_handler
  7479 ;; This function uses a reentrant model
  7480 ;;
  7481                           
  7482                           	psect	text19
  7483  01B1B4                     __ptext19:
  7484                           	opt callstack 0
  7485  01B1B4                     _ADCC_StartConversion:
  7486                           	opt callstack 0
  7487                           
  7488                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  7489                           ;stkvar	_channel @ sp[(0)+-1]
  7490                           
  7491                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7492                           ;incstack = 0
  7493 ;; hardware stack exceeded
  7494  01B1B4  0EFF               	movlw	-1
  7495  01B1B6  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  7496                           
  7497                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  7498  01B1BC  013E               	movlb	62	; () banked
  7499  01B1BE  8FF8               	bsf	248,7,b	;volatile
  7500                           
  7501                           ; BSR set to: 62
  7502                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  7503  01B1C0  81F8               	bsf	248,0,b	;volatile
  7504                           
  7505                           ; BSR set to: 62
  7506                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  7507  01B1C2  52E5               	movf	postdec1,f,c
  7508  01B1C4  0012               	return		;funcret
  7509  01B1C6                     __end_of_ADCC_StartConversion:
  7510                           	opt callstack 0
  7511                           
  7512 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  7513 ;; Defined at:
  7514 ;;		line 189 in file "mcc_generated_files/adcc.c"
  7515 ;; Parameters:    Size  Location     Type
  7516 ;;		None
  7517 ;; Auto vars:     Size  Location     Type
  7518 ;;		None
  7519 ;; Return value:  Size  Location     Type
  7520 ;;                  1  [STACK] void 
  7521 ;; Registers used:
  7522 ;;		wreg, status,2
  7523 ;; Tracked objects:
  7524 ;;		On entry : 0/0
  7525 ;;		On exit  : 3F/3E
  7526 ;;		Unchanged: 0/0
  7527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7532 ;;Total ram usage:        0 bytes
  7533 ;; Hardware stack levels used:    1
  7534 ;; Hardware stack levels required when called:   15
  7535 ;; This function calls:
  7536 ;;		Nothing
  7537 ;; This function is called by:
  7538 ;;		_start_adc_scan
  7539 ;;		_adc_int_t_handler
  7540 ;; This function uses a reentrant model
  7541 ;;
  7542                           
  7543                           	psect	text20
  7544  01B26A                     __ptext20:
  7545                           	opt callstack 0
  7546  01B26A                     _ADCC_DischargeSampleCapacitor:
  7547                           	opt callstack 0
  7548                           
  7549                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  7550                           
  7551                           ; BSR set to: 62
  7552                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7553                           ;incstack = 0
  7554 ;; hardware stack exceeded
  7555  01B26A  0E3B               	movlw	59
  7556  01B26C  013E               	movlb	62	; () banked
  7557  01B26E  6FF1               	movwf	241,b	;volatile
  7558                           
  7559                           ; BSR set to: 62
  7560                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  7561  01B270  0012               	return		;funcret
  7562  01B272                     __end_of_ADCC_DischargeSampleCapacitor:
  7563                           	opt callstack 0
  7564                           
  7565 ;; *************** function _clear_adc_scan *****************
  7566 ;; Defined at:
  7567 ;;		line 63 in file "daq.c"
  7568 ;; Parameters:    Size  Location     Type
  7569 ;;		None
  7570 ;; Auto vars:     Size  Location     Type
  7571 ;;		None
  7572 ;; Return value:  Size  Location     Type
  7573 ;;                  1  [STACK] void 
  7574 ;; Registers used:
  7575 ;;		None
  7576 ;; Tracked objects:
  7577 ;;		On entry : 0/0
  7578 ;;		On exit  : 3F/0
  7579 ;;		Unchanged: 0/0
  7580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7585 ;;Total ram usage:        0 bytes
  7586 ;; Hardware stack levels used:    1
  7587 ;; Hardware stack levels required when called:   15
  7588 ;; This function calls:
  7589 ;;		Nothing
  7590 ;; This function is called by:
  7591 ;;		_main
  7592 ;;		_update_adc_result
  7593 ;; This function uses a reentrant model
  7594 ;;
  7595                           
  7596                           	psect	text21
  7597  01B292                     __ptext21:
  7598                           	opt callstack 0
  7599  01B292                     _clear_adc_scan:
  7600                           	opt callstack 13
  7601                           
  7602                           ;daq.c: 65:  R.done = 0;
  7603                           
  7604                           ; BSR set to: 62
  7605                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7606                           ;incstack = 0
  7607  01B292  0100               	movlb	0	; () banked
  7608  01B294  6BEB               	clrf	(_R+39)& (0+255),b	;volatile
  7609                           
  7610                           ; BSR set to: 0
  7611                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  7612  01B296  0012               	return		;funcret
  7613  01B298                     __end_of_clear_adc_scan:
  7614                           	opt callstack 0
  7615                           
  7616 ;; *************** function _check_adc_scan *****************
  7617 ;; Defined at:
  7618 ;;		line 55 in file "daq.c"
  7619 ;; Parameters:    Size  Location     Type
  7620 ;;		None
  7621 ;; Auto vars:     Size  Location     Type
  7622 ;;		None
  7623 ;; Return value:  Size  Location     Type
  7624 ;;                  1  [STACK] _Bool 
  7625 ;; Registers used:
  7626 ;;		btemp
  7627 ;; Tracked objects:
  7628 ;;		On entry : 0/0
  7629 ;;		On exit  : 0/0
  7630 ;;		Unchanged: 0/0
  7631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7636 ;;Total ram usage:        0 bytes
  7637 ;; Hardware stack levels used:    1
  7638 ;; Hardware stack levels required when called:   15
  7639 ;; This function calls:
  7640 ;;		Nothing
  7641 ;; This function is called by:
  7642 ;;		_main
  7643 ;;		_update_adc_result
  7644 ;; This function uses a reentrant model
  7645 ;;
  7646                           
  7647                           	psect	text22
  7648  01B272                     __ptext22:
  7649                           	opt callstack 0
  7650  01B272                     _check_adc_scan:
  7651                           	opt callstack 13
  7652                           
  7653                           ;daq.c: 57:  return R.done;
  7654                           
  7655                           ; BSR set to: 0
  7656                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7657                           ;incstack = 0
  7658  01B272  0060  F3AC  F001   	movff	_R+39,btemp	;volatile
  7659                           
  7660                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  7661  01B278  0012               	return		;funcret
  7662  01B27A                     __end_of_check_adc_scan:
  7663                           	opt callstack 0
  7664                           
  7665 ;; *************** function _set_load_relay_two *****************
  7666 ;; Defined at:
  7667 ;;		line 128 in file "mbmc.c"
  7668 ;; Parameters:    Size  Location     Type
  7669 ;;  mode            1  [STACK] _Bool 
  7670 ;; Auto vars:     Size  Location     Type
  7671 ;;		None
  7672 ;; Return value:  Size  Location     Type
  7673 ;;                  1  [STACK] void 
  7674 ;; Registers used:
  7675 ;;		wreg, fsr1l, fsr1h
  7676 ;; Tracked objects:
  7677 ;;		On entry : 0/0
  7678 ;;		On exit  : 0/0
  7679 ;;		Unchanged: 0/0
  7680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7685 ;;Total ram usage:        0 bytes
  7686 ;; Hardware stack levels used:    1
  7687 ;; Hardware stack levels required when called:   15
  7688 ;; This function calls:
  7689 ;;		Nothing
  7690 ;; This function is called by:
  7691 ;;		_main
  7692 ;;		_esr_check
  7693 ;; This function uses a reentrant model
  7694 ;;
  7695                           
  7696                           	psect	text23
  7697  01B1C6                     __ptext23:
  7698                           	opt callstack 0
  7699  01B1C6                     _set_load_relay_two:
  7700                           	opt callstack 15
  7701                           
  7702                           ;mbmc.c: 128: void set_load_relay_two(_Bool mode);mbmc.c: 129: {;mbmc.c: 130:  LATDbits.
      +                          LATD5 = mode;
  7703                           ;stkvar	_mode @ sp[(0)+-1]
  7704                           
  7705                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7706                           ;incstack = 0
  7707  01B1C6  0EFF               	movlw	-1
  7708  01B1C8  B0E3               	btfsc	plusw1,0,c
  7709  01B1CA  D002               	bra	u9015
  7710  01B1CC  9ABD               	bcf	189,5,c	;volatile
  7711  01B1CE  D001               	bra	u9016
  7712  01B1D0                     u9015:
  7713  01B1D0  8ABD               	bsf	189,5,c	;volatile
  7714  01B1D2                     u9016:
  7715                           
  7716                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  7717  01B1D2  52E5               	movf	postdec1,f,c
  7718  01B1D4  0012               	return		;funcret
  7719  01B1D6                     __end_of_set_load_relay_two:
  7720                           	opt callstack 0
  7721                           
  7722 ;; *************** function _set_load_relay_one *****************
  7723 ;; Defined at:
  7724 ;;		line 123 in file "mbmc.c"
  7725 ;; Parameters:    Size  Location     Type
  7726 ;;  mode            1  [STACK] _Bool 
  7727 ;; Auto vars:     Size  Location     Type
  7728 ;;		None
  7729 ;; Return value:  Size  Location     Type
  7730 ;;                  1  [STACK] void 
  7731 ;; Registers used:
  7732 ;;		wreg, fsr1l, fsr1h
  7733 ;; Tracked objects:
  7734 ;;		On entry : 0/0
  7735 ;;		On exit  : 0/0
  7736 ;;		Unchanged: 0/0
  7737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7742 ;;Total ram usage:        0 bytes
  7743 ;; Hardware stack levels used:    1
  7744 ;; Hardware stack levels required when called:   15
  7745 ;; This function calls:
  7746 ;;		Nothing
  7747 ;; This function is called by:
  7748 ;;		_main
  7749 ;;		_esr_check
  7750 ;; This function uses a reentrant model
  7751 ;;
  7752                           
  7753                           	psect	text24
  7754  01B1D6                     __ptext24:
  7755                           	opt callstack 0
  7756  01B1D6                     _set_load_relay_one:
  7757                           	opt callstack 15
  7758                           
  7759                           ;mbmc.c: 123: void set_load_relay_one(_Bool mode);mbmc.c: 124: {;mbmc.c: 125:  LATDbits.
      +                          LATD4 = mode;
  7760                           ;stkvar	_mode @ sp[(0)+-1]
  7761                           
  7762                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7763                           ;incstack = 0
  7764  01B1D6  0EFF               	movlw	-1
  7765  01B1D8  B0E3               	btfsc	plusw1,0,c
  7766  01B1DA  D002               	bra	u9005
  7767  01B1DC  98BD               	bcf	189,4,c	;volatile
  7768  01B1DE  D001               	bra	u9006
  7769  01B1E0                     u9005:
  7770  01B1E0  88BD               	bsf	189,4,c	;volatile
  7771  01B1E2                     u9006:
  7772                           
  7773                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  7774  01B1E2  52E5               	movf	postdec1,f,c
  7775  01B1E4  0012               	return		;funcret
  7776  01B1E6                     __end_of_set_load_relay_one:
  7777                           	opt callstack 0
  7778                           
  7779 ;; *************** function _eaDogM_WriteCommand *****************
  7780 ;; Defined at:
  7781 ;;		line 175 in file "eadog.c"
  7782 ;; Parameters:    Size  Location     Type
  7783 ;;  cmd             1  [STACK] const unsigned char 
  7784 ;; Auto vars:     Size  Location     Type
  7785 ;;		None
  7786 ;; Return value:  Size  Location     Type
  7787 ;;                  1  [STACK] void 
  7788 ;; Registers used:
  7789 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7790 ;; Tracked objects:
  7791 ;;		On entry : 3F/3D
  7792 ;;		On exit  : 3F/0
  7793 ;;		Unchanged: 0/0
  7794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7799 ;;Total ram usage:        0 bytes
  7800 ;; Hardware stack levels used:    1
  7801 ;; Hardware stack levels required when called:   25
  7802 ;; This function calls:
  7803 ;;		_send_lcd_cmd_dma
  7804 ;; This function is called by:
  7805 ;;		_main
  7806 ;; This function uses a reentrant model
  7807 ;;
  7808                           
  7809                           	psect	text25
  7810  01B1F6                     __ptext25:
  7811                           	opt callstack 0
  7812  01B1F6                     _eaDogM_WriteCommand:
  7813                           	opt callstack 5
  7814                           
  7815                           ;eadog.c: 175: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 176: {;eadog.c: 177:
      +                            send_lcd_cmd_dma(cmd);
  7816                           ;stkvar	_cmd @ sp[(0)+-1]
  7817                           
  7818                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7819                           ;incstack = 0
  7820  01B1F6  0EFF               	movlw	-1
  7821  01B1F8  50E3               	movf	plusw1,w,c
  7822  01B1FA  6EE6               	movwf	postinc1,c
  7823  01B1FC  ECFF  F0D1         	call	_send_lcd_cmd_dma	;wreg free
  7824                           
  7825                           ; BSR set to: 0
  7826                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  7827  01B200  52E5               	movf	postdec1,f,c
  7828  01B202  0012               	return		;funcret
  7829  01B204                     __end_of_eaDogM_WriteCommand:
  7830                           	opt callstack 0
  7831                           
  7832 ;; *************** function _convert_adc_data *****************
  7833 ;; Defined at:
  7834 ;;		line 51 in file "mbmc.c"
  7835 ;; Parameters:    Size  Location     Type
  7836 ;;		None
  7837 ;; Auto vars:     Size  Location     Type
  7838 ;;  i               1  [STACK] unsigned char 
  7839 ;; Return value:  Size  Location     Type
  7840 ;;                  1  [STACK] void 
  7841 ;; Registers used:
  7842 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7843 ;; Tracked objects:
  7844 ;;		On entry : 0/0
  7845 ;;		On exit  : 0/0
  7846 ;;		Unchanged: 0/0
  7847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7852 ;;Total ram usage:        0 bytes
  7853 ;; Hardware stack levels used:    1
  7854 ;; Hardware stack levels required when called:   18
  7855 ;; This function calls:
  7856 ;;		_conv_raw_result
  7857 ;;		_lp_filter
  7858 ;; This function is called by:
  7859 ;;		_main
  7860 ;; This function uses a reentrant model
  7861 ;;
  7862                           
  7863                           	psect	text26
  7864  0196D4                     __ptext26:
  7865                           	opt callstack 0
  7866  0196D4                     _convert_adc_data:
  7867                           	opt callstack 0
  7868                           
  7869                           ; BSR set to: 0
  7870                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7871  0196D4  52E6               	movf	postinc1,f,c
  7872                           
  7873                           ;mbmc.c: 53:  uint8_t i = 0;
  7874                           ;stkvar	_i @ sp[(-1)+0]
  7875                           
  7876                           ;incstack = 0
  7877  0196D6  0EFF               	movlw	-1
  7878  0196D8  6AE3               	clrf	plusw1,c
  7879  0196DA                     l10620:
  7880                           
  7881                           ;mbmc.c: 56:   if (V.calib) {
  7882  0196DA  0102               	movlb	2	; () banked
  7883  0196DC  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  7884  0196DE  B4D8               	btfsc	status,2,c
  7885  0196E0  D01B               	goto	l10624
  7886                           
  7887                           ; BSR set to: 2
  7888                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  7889  0196E2  0E01               	movlw	1
  7890  0196E4  6EE6               	movwf	postinc1,c
  7891                           
  7892                           ;stkvar	_i @ sp[(-2)+0]
  7893  0196E6  0EFE               	movlw	-2
  7894  0196E8  50E3               	movf	plusw1,w,c
  7895  0196EA  6EE6               	movwf	postinc1,c
  7896  0196EC  0E01               	movlw	1
  7897  0196EE  6EE6               	movwf	postinc1,c
  7898                           
  7899                           ;stkvar	_i @ sp[(-4)+0]
  7900  0196F0  0EFC               	movlw	-4
  7901  0196F2  50E3               	movf	plusw1,w,c
  7902  0196F4  6EE6               	movwf	postinc1,c
  7903  0196F6  EC25  F0A5         	call	_conv_raw_result	;wreg free
  7904  0196FA  0060  F007  FFE6   	movff	btemp,postinc1
  7905  019700  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7906  019706  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7907  01970C  0060  F013  FFE6   	movff	btemp+3,postinc1
  7908  019712  ECAE  F0BC         	call	_lp_filter	;wreg free
  7909  019716  D01A               	goto	L3
  7910  019718                     l10624:
  7911                           
  7912                           ; BSR set to: 2
  7913                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  7914  019718  0E00               	movlw	0
  7915  01971A  6EE6               	movwf	postinc1,c
  7916                           
  7917                           ;stkvar	_i @ sp[(-2)+0]
  7918  01971C  0EFE               	movlw	-2
  7919  01971E  50E3               	movf	plusw1,w,c
  7920  019720  6EE6               	movwf	postinc1,c
  7921  019722  0E00               	movlw	0
  7922  019724  6EE6               	movwf	postinc1,c
  7923                           
  7924                           ;stkvar	_i @ sp[(-4)+0]
  7925  019726  0EFC               	movlw	-4
  7926  019728  50E3               	movf	plusw1,w,c
  7927  01972A  6EE6               	movwf	postinc1,c
  7928  01972C  EC25  F0A5         	call	_conv_raw_result	;wreg free
  7929  019730  0060  F007  FFE6   	movff	btemp,postinc1
  7930  019736  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7931  01973C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7932  019742  0060  F013  FFE6   	movff	btemp+3,postinc1
  7933  019748  ECAE  F0BC         	call	_lp_filter	;wreg free
  7934  01974C                     L3:
  7935                           
  7936                           ;stkvar	_i @ sp[(-1)+0]
  7937  01974C  0EFF               	movlw	-1
  7938  01974E  50E3               	movf	plusw1,w,c
  7939  019750  0D04               	mullw	4
  7940  019752  0E00               	movlw	low _C
  7941  019754  24F3               	addwf	243,w,c
  7942  019756  6ED9               	movwf	fsr2l,c
  7943  019758  0E01               	movlw	high _C
  7944  01975A  20F4               	addwfc	prodh,w,c
  7945  01975C  6EDA               	movwf	fsr2h,c
  7946  01975E  0060  F007  FFDE   	movff	btemp,postinc2
  7947  019764  0060  F00B  FFDE   	movff	btemp+1,postinc2
  7948  01976A  0060  F00F  FFDE   	movff	btemp+2,postinc2
  7949  019770  0060  F013  FFDE   	movff	btemp+3,postinc2
  7950                           
  7951                           ;mbmc.c: 61:  } while (++i < 16);
  7952                           ;stkvar	_i @ sp[(-1)+0]
  7953  019776  0EFF               	movlw	-1
  7954  019778  2AE3               	incf	plusw1,f,c
  7955  01977A  0EFF               	movlw	-1
  7956  01977C  006F FF8C  F001    	movff	plusw1,btemp
  7957  019782  0E0F               	movlw	15
  7958  019784  6401               	cpfsgt	btemp^0,c
  7959  019786  D7A9               	goto	l10620
  7960                           
  7961                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  7962  019788  52E5               	movf	postdec1,f,c
  7963  01978A  0012               	return		;funcret
  7964  01978C                     __end_of_convert_adc_data:
  7965                           	opt callstack 0
  7966                           
  7967 ;; *************** function _clear_hid_pflags *****************
  7968 ;; Defined at:
  7969 ;;		line 51 in file "hid.c"
  7970 ;; Parameters:    Size  Location     Type
  7971 ;;  h               1  [STACK] PTR struct H_data
  7972 ;;		 -> H(7), 
  7973 ;; Auto vars:     Size  Location     Type
  7974 ;;		None
  7975 ;; Return value:  Size  Location     Type
  7976 ;;                  1  [STACK] void 
  7977 ;; Registers used:
  7978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7979 ;; Tracked objects:
  7980 ;;		On entry : 3F/0
  7981 ;;		On exit  : 0/0
  7982 ;;		Unchanged: 0/0
  7983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7988 ;;Total ram usage:        0 bytes
  7989 ;; Hardware stack levels used:    1
  7990 ;; Hardware stack levels required when called:   15
  7991 ;; This function calls:
  7992 ;;		Nothing
  7993 ;; This function is called by:
  7994 ;;		_main
  7995 ;; This function uses a reentrant model
  7996 ;;
  7997                           
  7998                           	psect	text27
  7999  01AF10                     __ptext27:
  8000                           	opt callstack 0
  8001  01AF10                     _clear_hid_pflags:
  8002                           	opt callstack 15
  8003                           
  8004                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  8005                           ;stkvar	_h @ sp[(0)+-1]
  8006                           
  8007                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8008                           ;incstack = 0
  8009  01AF10  0EFF               	movlw	-1
  8010  01AF12  50E3               	movf	plusw1,w,c
  8011  01AF14  6ED9               	movwf	fsr2l,c
  8012  01AF16  6ADA               	clrf	fsr2h,c
  8013  01AF18  0E03               	movlw	3
  8014  01AF1A  26D9               	addwf	fsr2l,f,c
  8015  01AF1C  0E00               	movlw	0
  8016  01AF1E  6EDF               	movwf	indf2,c
  8017                           
  8018                           ;hid.c: 54:  h->enter_p = SW_OFF;
  8019                           ;stkvar	_h @ sp[(0)+-1]
  8020  01AF20  0EFF               	movlw	-1
  8021  01AF22  50E3               	movf	plusw1,w,c
  8022  01AF24  6ED9               	movwf	fsr2l,c
  8023  01AF26  6ADA               	clrf	fsr2h,c
  8024  01AF28  0E05               	movlw	5
  8025  01AF2A  26D9               	addwf	fsr2l,f,c
  8026  01AF2C  0E00               	movlw	0
  8027  01AF2E  6EDF               	movwf	indf2,c
  8028                           
  8029                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  8030  01AF30  52E5               	movf	postdec1,f,c
  8031  01AF32  0012               	return		;funcret
  8032  01AF34                     __end_of_clear_hid_pflags:
  8033                           	opt callstack 0
  8034                           
  8035 ;; *************** function _check_help *****************
  8036 ;; Defined at:
  8037 ;;		line 40 in file "mconfig.c"
  8038 ;; Parameters:    Size  Location     Type
  8039 ;;  flipper         1  [STACK] const _Bool 
  8040 ;; Auto vars:     Size  Location     Type
  8041 ;;  estatus         1    0        _Bool 
  8042 ;; Return value:  Size  Location     Type
  8043 ;;                  1  [STACK] _Bool 
  8044 ;; Registers used:
  8045 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8046 ;; Tracked objects:
  8047 ;;		On entry : 3F/2
  8048 ;;		On exit  : 0/0
  8049 ;;		Unchanged: 0/0
  8050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8055 ;;Total ram usage:        0 bytes
  8056 ;; Hardware stack levels used:    1
  8057 ;; Hardware stack levels required when called:   27
  8058 ;; This function calls:
  8059 ;;		_StartTimer
  8060 ;;		_TimerDone
  8061 ;;		_display_help
  8062 ;;		_display_info
  8063 ;;		_get_vterm_ptr
  8064 ;;		_help_button
  8065 ;;		_mode_lamp_bright
  8066 ;;		_mode_lamp_dim
  8067 ;;		_set_display_info
  8068 ;;		_set_temp_display_help
  8069 ;;		_set_vterm
  8070 ;;		_sprintf
  8071 ;;		_update_lcd
  8072 ;;		_vterm_dump
  8073 ;; This function is called by:
  8074 ;;		_main
  8075 ;; This function uses a reentrant model
  8076 ;;
  8077                           
  8078                           	psect	text28
  8079  017346                     __ptext28:
  8080                           	opt callstack 0
  8081  017346                     _check_help:
  8082                           	opt callstack 3
  8083                           
  8084                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  8085                           
  8086                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8087                           ;incstack = 0
  8088  017346  EC98  F0D4         	call	_help_button	;wreg free
  8089  01734A  5001               	movf	btemp^0,w,c
  8090  01734C  B4D8               	btfsc	status,2,c
  8091  01734E  D0D0               	goto	l12458
  8092  017350  EC3D  F0D9         	call	_display_info	;wreg free
  8093  017354  0401               	decf	btemp^0,w,c
  8094  017356  B4D8               	btfsc	status,2,c
  8095  017358  D0CB               	goto	l12458
  8096                           
  8097                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  8098  01735A  0EDC               	movlw	220
  8099  01735C  6EE6               	movwf	postinc1,c
  8100  01735E  0E05               	movlw	5
  8101  017360  6EE6               	movwf	postinc1,c
  8102  017362  0E0B               	movlw	11
  8103  017364  6EE6               	movwf	postinc1,c
  8104  017366  ECDC  F0D3         	call	_StartTimer	;wreg free
  8105                           
  8106                           ;mconfig.c: 48:   if (V.debug)
  8107  01736A  0102               	movlb	2	; () banked
  8108  01736C  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  8109                           
  8110                           ; BSR set to: 2
  8111                           ;mconfig.c: 49:    vterm_dump();
  8112  01736E  EC8A  F0C4         	call	_vterm_dump	;wreg free
  8113                           
  8114                           ;mconfig.c: 51:   set_vterm(1);
  8115  017372  0E01               	movlw	1
  8116  017374  6EE6               	movwf	postinc1,c
  8117  017376  EC24  F0D8         	call	_set_vterm	;wreg free
  8118                           
  8119                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  8120  01737A  EC3D  F0D9         	call	_display_info	;wreg free
  8121  01737E  5001               	movf	btemp^0,w,c
  8122  017380  6EE6               	movwf	postinc1,c
  8123  017382  ECF3  F0D8         	call	_set_temp_display_help	;wreg free
  8124                           
  8125                           ; BSR set to: 2
  8126                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  8127  017386  0E01               	movlw	1
  8128  017388  6EE6               	movwf	postinc1,c
  8129  01738A  EC33  F0D8         	call	_set_display_info	;wreg free
  8130                           
  8131                           ;mconfig.c: 54:   if (flipper) {
  8132                           ;stkvar	_flipper @ sp[(0)+-1]
  8133  01738E  0EFF               	movlw	-1
  8134  017390  50E3               	movf	plusw1,w,c
  8135  017392  B4D8               	btfsc	status,2,c
  8136  017394  D019               	goto	l12444
  8137                           
  8138                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  8139  017396  0EB2               	movlw	low STR_37
  8140  017398  6EE6               	movwf	postinc1,c
  8141  01739A  0EFF               	movlw	high STR_37
  8142  01739C  6EE6               	movwf	postinc1,c
  8143  01739E  0E50               	movlw	low STR_39
  8144  0173A0  6EE6               	movwf	postinc1,c
  8145  0173A2  0EFE               	movlw	high STR_39
  8146  0173A4  6EE6               	movwf	postinc1,c
  8147  0173A6  0E01               	movlw	1
  8148  0173A8  6EE6               	movwf	postinc1,c
  8149  0173AA  0E00               	movlw	0
  8150  0173AC  6EE6               	movwf	postinc1,c
  8151  0173AE  ECB3  F0D5         	call	_get_vterm_ptr	;wreg free
  8152  0173B2  0060  F007  FFE6   	movff	btemp,postinc1
  8153  0173B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8154  0173BE  0E06               	movlw	6
  8155  0173C0  6EE6               	movwf	postinc1,c
  8156  0173C2  ECD8  F0C7         	call	_sprintf	;wreg free
  8157                           
  8158                           ;mconfig.c: 56:   } else {
  8159  0173C6  D018               	goto	l1660
  8160  0173C8                     l12444:
  8161                           
  8162                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  8163  0173C8  0EC8               	movlw	low STR_38
  8164  0173CA  6EE6               	movwf	postinc1,c
  8165  0173CC  0EFF               	movlw	high STR_38
  8166  0173CE  6EE6               	movwf	postinc1,c
  8167  0173D0  0E50               	movlw	low STR_39
  8168  0173D2  6EE6               	movwf	postinc1,c
  8169  0173D4  0EFE               	movlw	high STR_39
  8170  0173D6  6EE6               	movwf	postinc1,c
  8171  0173D8  0E01               	movlw	1
  8172  0173DA  6EE6               	movwf	postinc1,c
  8173  0173DC  0E00               	movlw	0
  8174  0173DE  6EE6               	movwf	postinc1,c
  8175  0173E0  ECB3  F0D5         	call	_get_vterm_ptr	;wreg free
  8176  0173E4  0060  F007  FFE6   	movff	btemp,postinc1
  8177  0173EA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8178  0173F0  0E06               	movlw	6
  8179  0173F2  6EE6               	movwf	postinc1,c
  8180  0173F4  ECD8  F0C7         	call	_sprintf	;wreg free
  8181  0173F8                     l1660:
  8182                           
  8183                           ; BSR set to: 0
  8184                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  8185  0173F8  0102               	movlb	2	; () banked
  8186  0173FA  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  8187  0173FC  32E8               	rrcf	wreg,f,c
  8188  0173FE  32E8               	rrcf	wreg,f,c
  8189  017400  0B03               	andlw	3
  8190  017402  0D24               	mullw	36
  8191  017404  0E12               	movlw	18
  8192  017406  26F3               	addwf	243,f,c
  8193  017408  0E00               	movlw	0
  8194  01740A  22F4               	addwfc	244,f,c
  8195  01740C  0EFF               	movlw	low _T
  8196  01740E  6E0B               	movwf	(btemp+10)^0,c
  8197  017410  0EFB               	movlw	high _T
  8198  017412  6E0C               	movwf	(btemp+11)^0,c
  8199  017414  50F3               	movf	243,w,c
  8200  017416  260B               	addwf	(btemp+10)^0,f,c
  8201  017418  50F4               	movf	244,w,c
  8202  01741A  220C               	addwfc	(btemp+11)^0,f,c
  8203  01741C  0060  F02F  FFE6   	movff	btemp+10,postinc1
  8204  017422  0060  F033  FFE6   	movff	btemp+11,postinc1
  8205  017428  0EBE               	movlw	low STR_41
  8206  01742A  6EE6               	movwf	postinc1,c
  8207  01742C  0EFF               	movlw	high STR_41
  8208  01742E  6EE6               	movwf	postinc1,c
  8209  017430  0E01               	movlw	1
  8210  017432  6EE6               	movwf	postinc1,c
  8211  017434  0E01               	movlw	1
  8212  017436  6EE6               	movwf	postinc1,c
  8213  017438  ECB3  F0D5         	call	_get_vterm_ptr	;wreg free
  8214  01743C  0060  F007  FFE6   	movff	btemp,postinc1
  8215  017442  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8216  017448  0E06               	movlw	6
  8217  01744A  6EE6               	movwf	postinc1,c
  8218  01744C  ECD8  F0C7         	call	_sprintf	;wreg free
  8219                           
  8220                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  8221  017450  0102               	movlb	2	; () banked
  8222  017452  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  8223  017454  32E8               	rrcf	wreg,f,c
  8224  017456  32E8               	rrcf	wreg,f,c
  8225  017458  0B03               	andlw	3
  8226  01745A  0D24               	mullw	36
  8227  01745C  0EFF               	movlw	low _T
  8228  01745E  6E0B               	movwf	(btemp+10)^0,c
  8229  017460  0EFB               	movlw	high _T
  8230  017462  6E0C               	movwf	(btemp+11)^0,c
  8231  017464  50F3               	movf	243,w,c
  8232  017466  260B               	addwf	(btemp+10)^0,f,c
  8233  017468  50F4               	movf	244,w,c
  8234  01746A  220C               	addwfc	(btemp+11)^0,f,c
  8235  01746C  0060  F02F  FFE6   	movff	btemp+10,postinc1
  8236  017472  0060  F033  FFE6   	movff	btemp+11,postinc1
  8237  017478  0EBE               	movlw	low STR_41
  8238  01747A  6EE6               	movwf	postinc1,c
  8239  01747C  0EFF               	movlw	high STR_41
  8240  01747E  6EE6               	movwf	postinc1,c
  8241  017480  0E01               	movlw	1
  8242  017482  6EE6               	movwf	postinc1,c
  8243  017484  0E02               	movlw	2
  8244  017486  6EE6               	movwf	postinc1,c
  8245  017488  ECB3  F0D5         	call	_get_vterm_ptr	;wreg free
  8246  01748C  0060  F007  FFE6   	movff	btemp,postinc1
  8247  017492  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8248  017498  0E06               	movlw	6
  8249  01749A  6EE6               	movwf	postinc1,c
  8250  01749C  ECD8  F0C7         	call	_sprintf	;wreg free
  8251                           
  8252                           ; BSR set to: 0
  8253                           ;mconfig.c: 61:   V.help_id++;
  8254  0174A0  EE20  F29B         	lfsr	2,_V+155	;volatile
  8255  0174A4  38DF               	swapf	223,w,c
  8256  0174A6  6E0C               	movwf	(btemp+11)^0,c
  8257  0174A8  320C               	rrcf	(btemp+11)^0,f,c
  8258  0174AA  300C               	rrcf	(btemp+11)^0,w,c
  8259  0174AC  0B03               	andlw	3
  8260  0174AE  6E0C               	movwf	(btemp+11)^0,c
  8261  0174B0  2A0C               	incf	(btemp+11)^0,f,c
  8262  0174B2  3A0C               	swapf	(btemp+11)^0,f,c
  8263  0174B4  360C               	rlcf	(btemp+11)^0,f,c
  8264  0174B6  360C               	rlcf	(btemp+11)^0,f,c
  8265  0174B8  50DF               	movf	223,w,c
  8266  0174BA  180C               	xorwf	(btemp+11)^0,w,c
  8267  0174BC  0B3F               	andlw	-193
  8268  0174BE  180C               	xorwf	(btemp+11)^0,w,c
  8269  0174C0  6EDF               	movwf	223,c
  8270                           
  8271                           ; BSR set to: 0
  8272                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  8273  0174C2  0EB8               	movlw	184
  8274  0174C4  6EE6               	movwf	postinc1,c
  8275  0174C6  0E0B               	movlw	11
  8276  0174C8  6EE6               	movwf	postinc1,c
  8277  0174CA  0E09               	movlw	9
  8278  0174CC  6EE6               	movwf	postinc1,c
  8279  0174CE  ECDC  F0D3         	call	_StartTimer	;wreg free
  8280                           
  8281                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  8282  0174D2  0EB8               	movlw	184
  8283  0174D4  6EE6               	movwf	postinc1,c
  8284  0174D6  0E0B               	movlw	11
  8285  0174D8  6EE6               	movwf	postinc1,c
  8286  0174DA  0E07               	movlw	7
  8287  0174DC  6EE6               	movwf	postinc1,c
  8288  0174DE  ECDC  F0D3         	call	_StartTimer	;wreg free
  8289                           
  8290                           ;mconfig.c: 64:   mode_lamp_bright();
  8291  0174E2  EC02  F0D9         	call	_mode_lamp_bright	;wreg free
  8292                           
  8293                           ;mconfig.c: 65:   update_lcd(1);
  8294  0174E6  0E01               	movlw	1
  8295  0174E8  6EE6               	movwf	postinc1,c
  8296  0174EA  ECC9  F0C6         	call	_update_lcd	;wreg free
  8297                           
  8298                           ;mconfig.c: 67:  } else {
  8299  0174EE  D032               	goto	l1661
  8300  0174F0                     l12458:
  8301                           
  8302                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  8303  0174F0  0E09               	movlw	9
  8304  0174F2  6EE6               	movwf	postinc1,c
  8305  0174F4  EC5D  F0D6         	call	_TimerDone	;wreg free
  8306  0174F8  5001               	movf	btemp^0,w,c
  8307  0174FA  B4D8               	btfsc	status,2,c
  8308  0174FC  D02B               	goto	l1661
  8309                           
  8310                           ;mconfig.c: 69:    set_vterm(0);
  8311  0174FE  0E00               	movlw	0
  8312  017500  6EE6               	movwf	postinc1,c
  8313  017502  EC24  F0D8         	call	_set_vterm	;wreg free
  8314                           
  8315                           ;mconfig.c: 70:    V.help = 0;
  8316  017506  0102               	movlb	2	; () banked
  8317  017508  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  8318                           
  8319                           ; BSR set to: 2
  8320                           ;mconfig.c: 71:    set_display_info(display_help());
  8321  01750A  EC41  F0D9         	call	_display_help	;wreg free
  8322  01750E  5001               	movf	btemp^0,w,c
  8323  017510  6EE6               	movwf	postinc1,c
  8324  017512  EC33  F0D8         	call	_set_display_info	;wreg free
  8325                           
  8326                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  8327  017516  0060  FA57  FFE6   	movff	_V+149,postinc1
  8328  01751C  0060  FA5B  FFE6   	movff	_V+150,postinc1
  8329  017522  EC97  F0D8         	call	_mode_lamp_dim	;wreg free
  8330                           
  8331                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  8332  017526  0E0B               	movlw	11
  8333  017528  6EE6               	movwf	postinc1,c
  8334  01752A  EC5D  F0D6         	call	_TimerDone	;wreg free
  8335  01752E  5001               	movf	btemp^0,w,c
  8336  017530  B4D8               	btfsc	status,2,c
  8337  017532  D010               	goto	l1661
  8338                           
  8339                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  8340  017534  0102               	movlb	2	; () banked
  8341  017536  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  8342  017538  A4D8               	btfss	status,2,c
  8343  01753A  D002               	goto	u11970
  8344  01753C  0E01               	movlw	1
  8345  01753E  D001               	goto	u11980
  8346  017540                     u11970:
  8347  017540  0E00               	movlw	0
  8348  017542                     u11980:
  8349  017542  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  8350                           
  8351                           ; BSR set to: 2
  8352                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  8353  017544  0EDC               	movlw	220
  8354  017546  6EE6               	movwf	postinc1,c
  8355  017548  0E05               	movlw	5
  8356  01754A  6EE6               	movwf	postinc1,c
  8357  01754C  0E0B               	movlw	11
  8358  01754E  6EE6               	movwf	postinc1,c
  8359  017550  ECDC  F0D3         	call	_StartTimer	;wreg free
  8360  017554                     l1661:
  8361                           
  8362                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  8363  017554  52E5               	movf	postdec1,f,c
  8364  017556  0012               	return		;funcret
  8365  017558                     __end_of_check_help:
  8366                           	opt callstack 0
  8367                           
  8368 ;; *************** function _vterm_dump *****************
  8369 ;; Defined at:
  8370 ;;		line 121 in file "mconfig.c"
  8371 ;; Parameters:    Size  Location     Type
  8372 ;;		None
  8373 ;; Auto vars:     Size  Location     Type
  8374 ;;		None
  8375 ;; Return value:  Size  Location     Type
  8376 ;;                  1  [STACK] void 
  8377 ;; Registers used:
  8378 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8379 ;; Tracked objects:
  8380 ;;		On entry : 3F/2
  8381 ;;		On exit  : 0/0
  8382 ;;		Unchanged: 0/0
  8383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8388 ;;Total ram usage:        0 bytes
  8389 ;; Hardware stack levels used:    1
  8390 ;; Hardware stack levels required when called:   26
  8391 ;; This function calls:
  8392 ;;		_WaitMs
  8393 ;;		_eaDogM_WriteStringAtPos
  8394 ;;		_get_vterm_ptr
  8395 ;;		_sprintf
  8396 ;;		_wait_lcd_done
  8397 ;; This function is called by:
  8398 ;;		_check_help
  8399 ;; This function uses a reentrant model
  8400 ;;
  8401                           
  8402                           	psect	text29
  8403  018914                     __ptext29:
  8404                           	opt callstack 0
  8405  018914                     _vterm_dump:
  8406                           	opt callstack 3
  8407                           
  8408                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  8409                           
  8410                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8411                           ;incstack = 0
  8412  018914  0E01               	movlw	1
  8413  018916  6EE6               	movwf	postinc1,c
  8414  018918  0E00               	movlw	0
  8415  01891A  6EE6               	movwf	postinc1,c
  8416  01891C  ECB3  F0D5         	call	_get_vterm_ptr	;wreg free
  8417  018920  0060  F007  FFE6   	movff	btemp,postinc1
  8418  018926  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8419  01892C  0E00               	movlw	0
  8420  01892E  6EE6               	movwf	postinc1,c
  8421  018930  0E00               	movlw	0
  8422  018932  6EE6               	movwf	postinc1,c
  8423  018934  ECB3  F0D5         	call	_get_vterm_ptr	;wreg free
  8424  018938  0060  F007  FFE6   	movff	btemp,postinc1
  8425  01893E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8426  018944  0E94               	movlw	low STR_43
  8427  018946  6EE6               	movwf	postinc1,c
  8428  018948  0EFF               	movlw	high STR_43
  8429  01894A  6EE6               	movwf	postinc1,c
  8430  01894C  0E01               	movlw	low (_V+1)
  8431  01894E  6EE6               	movwf	postinc1,c
  8432  018950  0E02               	movlw	high (_V+1)
  8433  018952  6EE6               	movwf	postinc1,c
  8434  018954  0E08               	movlw	8
  8435  018956  6EE6               	movwf	postinc1,c
  8436  018958  ECD8  F0C7         	call	_sprintf	;wreg free
  8437                           
  8438                           ; BSR set to: 0
  8439                           ;mconfig.c: 124:  wait_lcd_done();
  8440  01895C  EC60  F0D8         	call	_wait_lcd_done	;wreg free
  8441                           
  8442                           ; BSR set to: 0
  8443                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  8444  018960  0E01               	movlw	low (_V+1)
  8445  018962  6EE6               	movwf	postinc1,c
  8446  018964  0E02               	movlw	high (_V+1)
  8447  018966  6EE6               	movwf	postinc1,c
  8448  018968  0E00               	movlw	0
  8449  01896A  6EE6               	movwf	postinc1,c
  8450  01896C  0E00               	movlw	0
  8451  01896E  6EE6               	movwf	postinc1,c
  8452  018970  ECEA  F0D4         	call	_eaDogM_WriteStringAtPos	;wreg free
  8453                           
  8454                           ; BSR set to: 59
  8455                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  8456  018974  0E01               	movlw	1
  8457  018976  6EE6               	movwf	postinc1,c
  8458  018978  0E01               	movlw	1
  8459  01897A  6EE6               	movwf	postinc1,c
  8460  01897C  ECB3  F0D5         	call	_get_vterm_ptr	;wreg free
  8461  018980  0060  F007  FFE6   	movff	btemp,postinc1
  8462  018986  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8463  01898C  0E00               	movlw	0
  8464  01898E  6EE6               	movwf	postinc1,c
  8465  018990  0E01               	movlw	1
  8466  018992  6EE6               	movwf	postinc1,c
  8467  018994  ECB3  F0D5         	call	_get_vterm_ptr	;wreg free
  8468  018998  0060  F007  FFE6   	movff	btemp,postinc1
  8469  01899E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8470  0189A4  0E94               	movlw	low STR_43
  8471  0189A6  6EE6               	movwf	postinc1,c
  8472  0189A8  0EFF               	movlw	high STR_43
  8473  0189AA  6EE6               	movwf	postinc1,c
  8474  0189AC  0E01               	movlw	low (_V+1)
  8475  0189AE  6EE6               	movwf	postinc1,c
  8476  0189B0  0E02               	movlw	high (_V+1)
  8477  0189B2  6EE6               	movwf	postinc1,c
  8478  0189B4  0E08               	movlw	8
  8479  0189B6  6EE6               	movwf	postinc1,c
  8480  0189B8  ECD8  F0C7         	call	_sprintf	;wreg free
  8481                           
  8482                           ; BSR set to: 0
  8483                           ;mconfig.c: 127:  wait_lcd_done();
  8484  0189BC  EC60  F0D8         	call	_wait_lcd_done	;wreg free
  8485                           
  8486                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  8487  0189C0  0E01               	movlw	low (_V+1)
  8488  0189C2  6EE6               	movwf	postinc1,c
  8489  0189C4  0E02               	movlw	high (_V+1)
  8490  0189C6  6EE6               	movwf	postinc1,c
  8491  0189C8  0E00               	movlw	0
  8492  0189CA  6EE6               	movwf	postinc1,c
  8493  0189CC  0E01               	movlw	1
  8494  0189CE  6EE6               	movwf	postinc1,c
  8495  0189D0  ECEA  F0D4         	call	_eaDogM_WriteStringAtPos	;wreg free
  8496                           
  8497                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  8498  0189D4  0E01               	movlw	1
  8499  0189D6  6EE6               	movwf	postinc1,c
  8500  0189D8  0E02               	movlw	2
  8501  0189DA  6EE6               	movwf	postinc1,c
  8502  0189DC  ECB3  F0D5         	call	_get_vterm_ptr	;wreg free
  8503  0189E0  0060  F007  FFE6   	movff	btemp,postinc1
  8504  0189E6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8505  0189EC  0E00               	movlw	0
  8506  0189EE  6EE6               	movwf	postinc1,c
  8507  0189F0  0E02               	movlw	2
  8508  0189F2  6EE6               	movwf	postinc1,c
  8509  0189F4  ECB3  F0D5         	call	_get_vterm_ptr	;wreg free
  8510  0189F8  0060  F007  FFE6   	movff	btemp,postinc1
  8511  0189FE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8512  018A04  0E94               	movlw	low STR_43
  8513  018A06  6EE6               	movwf	postinc1,c
  8514  018A08  0EFF               	movlw	high STR_43
  8515  018A0A  6EE6               	movwf	postinc1,c
  8516  018A0C  0E01               	movlw	low (_V+1)
  8517  018A0E  6EE6               	movwf	postinc1,c
  8518  018A10  0E02               	movlw	high (_V+1)
  8519  018A12  6EE6               	movwf	postinc1,c
  8520  018A14  0E08               	movlw	8
  8521  018A16  6EE6               	movwf	postinc1,c
  8522  018A18  ECD8  F0C7         	call	_sprintf	;wreg free
  8523                           
  8524                           ; BSR set to: 0
  8525                           ;mconfig.c: 130:  wait_lcd_done();
  8526  018A1C  EC60  F0D8         	call	_wait_lcd_done	;wreg free
  8527                           
  8528                           ; BSR set to: 0
  8529                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  8530  018A20  0E01               	movlw	low (_V+1)
  8531  018A22  6EE6               	movwf	postinc1,c
  8532  018A24  0E02               	movlw	high (_V+1)
  8533  018A26  6EE6               	movwf	postinc1,c
  8534  018A28  0E00               	movlw	0
  8535  018A2A  6EE6               	movwf	postinc1,c
  8536  018A2C  0E02               	movlw	2
  8537  018A2E  6EE6               	movwf	postinc1,c
  8538  018A30  ECEA  F0D4         	call	_eaDogM_WriteStringAtPos	;wreg free
  8539                           
  8540                           ; BSR set to: 59
  8541                           ;mconfig.c: 132:  WaitMs(3000);
  8542  018A34  0EB8               	movlw	184
  8543  018A36  6EE6               	movwf	postinc1,c
  8544  018A38  0E0B               	movlw	11
  8545  018A3A  6EE6               	movwf	postinc1,c
  8546  018A3C  ECCF  F0D4         	call	_WaitMs	;wreg free
  8547                           
  8548                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  8549  018A40  0012               	return		;funcret
  8550  018A42                     __end_of_vterm_dump:
  8551                           	opt callstack 0
  8552                           
  8553 ;; *************** function _sprintf *****************
  8554 ;; Defined at:
  8555 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  8556 ;; Parameters:    Size  Location     Type
  8557 ;;  s               2  [STACK] PTR unsigned char 
  8558 ;;		 -> D.lcd(288), D(290), port_data(512), V(188), 
  8559 ;;  fmt             2  [STACK] PTR const unsigned char 
  8560 ;;		 -> STR_56(85), STR_54(3), STR_53(3), STR_52(19), 
  8561 ;;		 -> STR_51(19), STR_50(19), STR_49(19), STR_48(19), 
  8562 ;;		 -> STR_47(19), STR_46(24), STR_45(15), STR_44(15), 
  8563 ;;		 -> STR_43(15), STR_42(10), STR_41(10), STR_40(19), 
  8564 ;;		 -> STR_39(19), STR_33(17), STR_32(16), STR_31(16), 
  8565 ;;		 -> STR_30(20), STR_29(20), STR_28(19), STR_27(19), 
  8566 ;;		 -> STR_26(19), STR_25(19), STR_24(19), STR_23(19), 
  8567 ;;		 -> STR_22(19), STR_21(17), STR_20(16), STR_19(16), 
  8568 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(17), 
  8569 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
  8570 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
  8571 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
  8572 ;;		 -> STR_1(17), 
  8573 ;; Auto vars:     Size  Location     Type
  8574 ;;  f               6  [STACK] struct _IO_FILE
  8575 ;;  ap              2  [STACK] PTR void [1]
  8576 ;;		 -> ?_printf(2), ?_sprintf(2), 
  8577 ;;  ret             2    0        int 
  8578 ;; Return value:  Size  Location     Type
  8579 ;;                  2  [STACK] int 
  8580 ;; Registers used:
  8581 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8582 ;; Tracked objects:
  8583 ;;		On entry : 0/1
  8584 ;;		On exit  : 3F/0
  8585 ;;		Unchanged: 0/0
  8586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8591 ;;Total ram usage:        0 bytes
  8592 ;; Hardware stack levels used:    1
  8593 ;; Hardware stack levels required when called:   23
  8594 ;; This function calls:
  8595 ;;		_vfprintf
  8596 ;; This function is called by:
  8597 ;;		_main
  8598 ;;		_check_help
  8599 ;;		_vterm_dump
  8600 ;;		_calc_bsoc
  8601 ;; This function uses a reentrant model
  8602 ;;
  8603                           
  8604                           	psect	text30
  8605  018FB0                     __ptext30:
  8606                           	opt callstack 0
  8607  018FB0                     _sprintf:
  8608                           	opt callstack 0
  8609                           
  8610                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 56, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8611  018FB0  0E08               	movlw	8
  8612  018FB2  26E1               	addwf	fsr1l,f,c
  8613  018FB4  0E00               	movlw	0
  8614  018FB6  22E2               	addwfc	fsr1h,f,c
  8615                           
  8616                           ;incstack = 0
  8617 ;; hardware stack exceeded
  8618  018FB8  0EFE               	movlw	254
  8619  018FBA  6E0B               	movwf	(btemp+10)^0,c
  8620  018FBC  0EFF               	movlw	255
  8621  018FBE  6E0C               	movwf	(btemp+11)^0,c
  8622                           
  8623                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  8624  018FC0  0EF5               	movlw	245
  8625  018FC2  24E1               	addwf	fsr1l,w,c
  8626  018FC4  6E09               	movwf	(btemp+8)^0,c
  8627  018FC6  0EFF               	movlw	255
  8628  018FC8  20E2               	addwfc	fsr1h,w,c
  8629  018FCA  6E0A               	movwf	(btemp+9)^0,c
  8630  018FCC  500B               	movf	(btemp+10)^0,w,c
  8631  018FCE  2609               	addwf	(btemp+8)^0,f,c
  8632  018FD0  500C               	movf	(btemp+11)^0,w,c
  8633  018FD2  220A               	addwfc	(btemp+9)^0,f,c
  8634                           
  8635                           ;stkvar	_ap @ sp[(-8)+6]
  8636  018FD4  0EFF               	movlw	-1
  8637  018FD6  0060  F02B  FFE3   	movff	btemp+9,plusw1
  8638  018FDC  0EFE               	movlw	-2
  8639  018FDE  0060  F027  FFE3   	movff	btemp+8,plusw1
  8640                           
  8641                           ;stkvar	_s @ sp[(-8)+-3]
  8642  018FE4  0EF5               	movlw	-11
  8643  018FE6  006F FF8C  F00B    	movff	plusw1,btemp+10
  8644  018FEC  0EF6               	movlw	-10
  8645  018FEE  006F FF8C  F00C    	movff	plusw1,btemp+11
  8646                           
  8647                           ;stkvar	_f @ sp[(-8)+0]
  8648  018FF4  0EF9               	movlw	-7
  8649  018FF6  0060  F033  FFE3   	movff	btemp+11,plusw1
  8650  018FFC  0EF8               	movlw	-8
  8651  018FFE  0060  F02F  FFE3   	movff	btemp+10,plusw1
  8652                           
  8653                           ;stkvar	_f @ sp[(-8)+0]
  8654  019004  0EFA               	movlw	250
  8655  019006  24E1               	addwf	fsr1l,w,c
  8656  019008  6ED9               	movwf	fsr2l,c
  8657  01900A  0EFF               	movlw	255
  8658  01900C  20E2               	addwfc	fsr1h,w,c
  8659  01900E  6EDA               	movwf	fsr2h,c
  8660  019010  0E00               	movlw	0
  8661  019012  6EDE               	movwf	postinc2,c
  8662  019014  0E00               	movlw	0
  8663  019016  6EDD               	movwf	postdec2,c
  8664                           
  8665                           ;stkvar	_f @ sp[(-8)+0]
  8666  019018  0EFC               	movlw	252
  8667  01901A  24E1               	addwf	fsr1l,w,c
  8668  01901C  6ED9               	movwf	fsr2l,c
  8669  01901E  0EFF               	movlw	255
  8670  019020  20E2               	addwfc	fsr1h,w,c
  8671  019022  6EDA               	movwf	fsr2h,c
  8672  019024  0E00               	movlw	0
  8673  019026  6EDE               	movwf	postinc2,c
  8674  019028  0E00               	movlw	0
  8675  01902A  6EDD               	movwf	postdec2,c
  8676                           
  8677                           ;stkvar	_ap @ sp[(-8)+6]
  8678  01902C  0EFE               	movlw	254
  8679  01902E  24E1               	addwf	fsr1l,w,c
  8680  019030  6E01               	movwf	btemp^0,c
  8681  019032  0EFF               	movlw	255
  8682  019034  20E2               	addwfc	fsr1h,w,c
  8683  019036  6E02               	movwf	(btemp+1)^0,c
  8684  019038  0060  F007  FFE6   	movff	btemp,postinc1
  8685  01903E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8686                           
  8687                           ;stkvar	_fmt @ sp[(-10)+-5]
  8688  019044  0EF1               	movlw	-15
  8689  019046  006F FF8F FFE6     	movff	plusw1,postinc1
  8690  01904C  006F FF8F FFE6     	movff	plusw1,postinc1
  8691                           
  8692                           ;stkvar	_f @ sp[(-12)+0]
  8693  019052  0EF4               	movlw	244
  8694  019054  24E1               	addwf	fsr1l,w,c
  8695  019056  6E01               	movwf	btemp^0,c
  8696  019058  0EFF               	movlw	255
  8697  01905A  20E2               	addwfc	fsr1h,w,c
  8698  01905C  6E02               	movwf	(btemp+1)^0,c
  8699  01905E  0060  F007  FFE6   	movff	btemp,postinc1
  8700  019064  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8701  01906A  EC1D  F0CC         	call	_vfprintf	;wreg free
  8702                           
  8703                           ; BSR set to: 0
  8704                           ;stkvar	_f @ sp[(-8)+0]
  8705  01906E  0EFA               	movlw	250
  8706  019070  24E1               	addwf	fsr1l,w,c
  8707  019072  6ED9               	movwf	fsr2l,c
  8708  019074  0EFF               	movlw	255
  8709  019076  20E2               	addwfc	fsr1h,w,c
  8710  019078  6EDA               	movwf	fsr2h,c
  8711  01907A  006F FF78  F00B    	movff	postinc2,btemp+10
  8712  019080  006F FF74  F00C    	movff	postdec2,btemp+11
  8713                           
  8714                           ;stkvar	_s @ sp[(-8)+-3]
  8715  019086  0EF5               	movlw	-11
  8716  019088  006F FF8C  F009    	movff	plusw1,btemp+8
  8717  01908E  0EF6               	movlw	-10
  8718  019090  006F FF8C  F00A    	movff	plusw1,btemp+9
  8719  019096  500B               	movf	(btemp+10)^0,w,c
  8720  019098  2409               	addwf	(btemp+8)^0,w,c
  8721  01909A  6ED9               	movwf	fsr2l,c
  8722  01909C  500C               	movf	(btemp+11)^0,w,c
  8723  01909E  200A               	addwfc	(btemp+9)^0,w,c
  8724  0190A0  6EDA               	movwf	fsr2h,c
  8725  0190A2  0E00               	movlw	0
  8726  0190A4  6EDF               	movwf	indf2,c
  8727                           
  8728                           ; BSR set to: 0
  8729                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 56, args
      +                          ize = 4, vargsize = 0
  8730  0190A6  0EF8               	movlw	248
  8731  0190A8  26E1               	addwf	fsr1l,f,c
  8732  0190AA  0EFF               	movlw	255
  8733  0190AC  22E2               	addwfc	fsr1h,f,c
  8734  0190AE  52E5               	movf	postdec1,f,c
  8735  0190B0  50E7               	movf	indf1,w,c
  8736  0190B2  5EE1               	subwf	fsr1l,f,c
  8737  0190B4  0E00               	movlw	0
  8738  0190B6  5AE2               	subwfb	fsr1h,f,c
  8739  0190B8  0012               	return		;funcret
  8740  0190BA                     __end_of_sprintf:
  8741                           	opt callstack 0
  8742                           
  8743 ;; *************** function _get_vterm_ptr *****************
  8744 ;; Defined at:
  8745 ;;		line 116 in file "mconfig.c"
  8746 ;; Parameters:    Size  Location     Type
  8747 ;;  line            1  [STACK] const unsigned char 
  8748 ;;  vterm           1  [STACK] const unsigned char 
  8749 ;; Auto vars:     Size  Location     Type
  8750 ;;		None
  8751 ;; Return value:  Size  Location     Type
  8752 ;;                  2  [STACK] PTR unsigned char 
  8753 ;; Registers used:
  8754 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  8755 ;; Tracked objects:
  8756 ;;		On entry : 0/1
  8757 ;;		On exit  : 0/0
  8758 ;;		Unchanged: 0/0
  8759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8764 ;;Total ram usage:        0 bytes
  8765 ;; Hardware stack levels used:    1
  8766 ;; Hardware stack levels required when called:   15
  8767 ;; This function calls:
  8768 ;;		Nothing
  8769 ;; This function is called by:
  8770 ;;		_main
  8771 ;;		_check_help
  8772 ;;		_vterm_dump
  8773 ;; This function uses a reentrant model
  8774 ;;
  8775                           
  8776                           	psect	text31
  8777  01AB66                     __ptext31:
  8778                           	opt callstack 0
  8779  01AB66                     _get_vterm_ptr:
  8780                           	opt callstack 15
  8781                           
  8782                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  8783                           ;stkvar	_vterm @ sp[(0)+-2]
  8784                           
  8785                           ; BSR set to: 0
  8786                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8787                           ;incstack = 0
  8788  01AB66  0EFE               	movlw	-2
  8789  01AB68  50E3               	movf	plusw1,w,c
  8790  01AB6A  0B03               	andlw	3
  8791  01AB6C  0D48               	mullw	72
  8792  01AB6E  0EFF               	movlw	low _D
  8793  01AB70  6E01               	movwf	btemp^0,c
  8794  01AB72  0E07               	movlw	high _D
  8795  01AB74  6E02               	movwf	(btemp+1)^0,c
  8796  01AB76  50F3               	movf	243,w,c
  8797  01AB78  2601               	addwf	btemp^0,f,c
  8798  01AB7A  50F4               	movf	244,w,c
  8799  01AB7C  2202               	addwfc	(btemp+1)^0,f,c
  8800                           
  8801                           ;stkvar	_line @ sp[(0)+-1]
  8802  01AB7E  0EFF               	movlw	-1
  8803  01AB80  50E3               	movf	plusw1,w,c
  8804  01AB82  0B03               	andlw	3
  8805  01AB84  0D18               	mullw	24
  8806  01AB86  50F3               	movf	243,w,c
  8807  01AB88  2601               	addwf	btemp^0,f,c
  8808  01AB8A  50F4               	movf	244,w,c
  8809  01AB8C  2202               	addwfc	(btemp+1)^0,f,c
  8810                           
  8811                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  8812  01AB8E  52E5               	movf	postdec1,f,c
  8813  01AB90  52E5               	movf	postdec1,f,c
  8814  01AB92  0012               	return		;funcret
  8815  01AB94                     __end_of_get_vterm_ptr:
  8816                           	opt callstack 0
  8817                           
  8818 ;; *************** function _WaitMs *****************
  8819 ;; Defined at:
  8820 ;;		line 32 in file "timers.c"
  8821 ;; Parameters:    Size  Location     Type
  8822 ;;  numMilliseco    2  [STACK] const unsigned short 
  8823 ;; Auto vars:     Size  Location     Type
  8824 ;;		None
  8825 ;; Return value:  Size  Location     Type
  8826 ;;                  1  [STACK] void 
  8827 ;; Registers used:
  8828 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8829 ;; Tracked objects:
  8830 ;;		On entry : 0/2
  8831 ;;		On exit  : 0/0
  8832 ;;		Unchanged: 0/0
  8833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8838 ;;Total ram usage:        0 bytes
  8839 ;; Hardware stack levels used:    1
  8840 ;; Hardware stack levels required when called:   16
  8841 ;; This function calls:
  8842 ;;		_StartTimer
  8843 ;;		_TimerDone
  8844 ;; This function is called by:
  8845 ;;		_main
  8846 ;;		_vterm_dump
  8847 ;;		_esr_check
  8848 ;; This function uses a reentrant model
  8849 ;;
  8850                           
  8851                           	psect	text32
  8852  01A99E                     __ptext32:
  8853                           	opt callstack 0
  8854  01A99E                     _WaitMs:
  8855                           	opt callstack 13
  8856                           
  8857                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  8858                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  8859                           
  8860                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8861                           ;incstack = 0
  8862  01A99E  0EFE               	movlw	-2
  8863  01A9A0  006F FF8F FFE6     	movff	plusw1,postinc1
  8864  01A9A6  006F FF8F FFE6     	movff	plusw1,postinc1
  8865  01A9AC  0E00               	movlw	0
  8866  01A9AE  6EE6               	movwf	postinc1,c
  8867  01A9B0  ECDC  F0D3         	call	_StartTimer	;wreg free
  8868                           
  8869                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  8870  01A9B4  D005               	goto	l9422
  8871  01A9B6                     l1592:
  8872                           
  8873                           ;timers.c: 36:   __nop();
  8874  01A9B6  F000               	nop	
  8875                           
  8876                           ;timers.c: 37:   __nop();
  8877  01A9B8  F000               	nop	
  8878                           
  8879                           ;timers.c: 38:   __nop();
  8880  01A9BA  F000               	nop	
  8881                           
  8882                           ;timers.c: 39:   __nop();
  8883  01A9BC  F000               	nop	
  8884  01A9BE  0004               	clrwdt		;# 
  8885  01A9C0                     l9422:
  8886                           
  8887                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  8888  01A9C0  0E00               	movlw	0
  8889  01A9C2  6EE6               	movwf	postinc1,c
  8890  01A9C4  EC5D  F0D6         	call	_TimerDone	;wreg free
  8891  01A9C8  5001               	movf	btemp^0,w,c
  8892  01A9CA  B4D8               	btfsc	status,2,c
  8893  01A9CC  D7F4               	goto	l1592
  8894                           
  8895                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  8896  01A9CE  52E5               	movf	postdec1,f,c
  8897  01A9D0  52E5               	movf	postdec1,f,c
  8898  01A9D2  0012               	return		;funcret
  8899  01A9D4                     __end_of_WaitMs:
  8900                           	opt callstack 0
  8901                           
  8902 ;; *************** function _update_lcd *****************
  8903 ;; Defined at:
  8904 ;;		line 85 in file "mconfig.c"
  8905 ;; Parameters:    Size  Location     Type
  8906 ;;  vterm           1  [STACK] unsigned char 
  8907 ;; Auto vars:     Size  Location     Type
  8908 ;;		None
  8909 ;; Return value:  Size  Location     Type
  8910 ;;                  1  [STACK] unsigned char 
  8911 ;; Registers used:
  8912 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8913 ;; Tracked objects:
  8914 ;;		On entry : 0/0
  8915 ;;		On exit  : 0/0
  8916 ;;		Unchanged: 0/0
  8917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8922 ;;Total ram usage:        0 bytes
  8923 ;; Hardware stack levels used:    1
  8924 ;; Hardware stack levels required when called:   26
  8925 ;; This function calls:
  8926 ;;		_eaDogM_WriteStringAtPos
  8927 ;;		_wait_lcd_done
  8928 ;; This function is called by:
  8929 ;;		_main
  8930 ;;		_check_help
  8931 ;; This function uses a reentrant model
  8932 ;;
  8933                           
  8934                           	psect	text33
  8935  018D92                     __ptext33:
  8936                           	opt callstack 0
  8937  018D92                     _update_lcd:
  8938                           	opt callstack 4
  8939                           
  8940                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  8941                           ;stkvar	_vterm @ sp[(0)+-1]
  8942                           
  8943                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8944                           ;incstack = 0
  8945  018D92  0EFF               	movlw	-1
  8946  018D94  006F FF8C  F001    	movff	plusw1,btemp
  8947  018D9A  0E03               	movlw	3
  8948  018D9C  1601               	andwf	btemp^0,f,c
  8949  018D9E  0EFF               	movlw	-1
  8950  018DA0  0060  F007  FFE3   	movff	btemp,plusw1
  8951                           
  8952                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  8953  018DA6  EE22  F11F         	lfsr	2,_D+288
  8954  018DAA  A0DF               	btfss	indf2,0,c
  8955  018DAC  D004               	goto	l12260
  8956                           
  8957                           ;stkvar	_vterm @ sp[(0)+-1]
  8958  018DAE  0EFF               	movlw	-1
  8959  018DB0  50E3               	movf	plusw1,w,c
  8960  018DB2  B4D8               	btfsc	status,2,c
  8961  018DB4  D074               	goto	l1668
  8962  018DB6                     l12260:
  8963                           
  8964                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  8965                           ;stkvar	_vterm @ sp[(0)+-1]
  8966  018DB6  0EFF               	movlw	-1
  8967  018DB8  50E3               	movf	plusw1,w,c
  8968  018DBA  0D48               	mullw	72
  8969  018DBC  0E0F               	movlw	low (_D+16)
  8970  018DBE  24F3               	addwf	243,w,c
  8971  018DC0  6ED9               	movwf	fsr2l,c
  8972  018DC2  0E08               	movlw	high (_D+16)
  8973  018DC4  20F4               	addwfc	prodh,w,c
  8974  018DC6  6EDA               	movwf	fsr2h,c
  8975  018DC8  0E00               	movlw	0
  8976  018DCA  6EDF               	movwf	indf2,c
  8977                           
  8978                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  8979                           ;stkvar	_vterm @ sp[(0)+-1]
  8980  018DCC  0EFF               	movlw	-1
  8981  018DCE  50E3               	movf	plusw1,w,c
  8982  018DD0  0D48               	mullw	72
  8983  018DD2  0E27               	movlw	low (_D+40)
  8984  018DD4  24F3               	addwf	243,w,c
  8985  018DD6  6ED9               	movwf	fsr2l,c
  8986  018DD8  0E08               	movlw	high (_D+40)
  8987  018DDA  20F4               	addwfc	prodh,w,c
  8988  018DDC  6EDA               	movwf	fsr2h,c
  8989  018DDE  0E00               	movlw	0
  8990  018DE0  6EDF               	movwf	indf2,c
  8991                           
  8992                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  8993                           ;stkvar	_vterm @ sp[(0)+-1]
  8994  018DE2  0EFF               	movlw	-1
  8995  018DE4  50E3               	movf	plusw1,w,c
  8996  018DE6  0D48               	mullw	72
  8997  018DE8  0E3F               	movlw	low (_D+64)
  8998  018DEA  24F3               	addwf	243,w,c
  8999  018DEC  6ED9               	movwf	fsr2l,c
  9000  018DEE  0E08               	movlw	high (_D+64)
  9001  018DF0  20F4               	addwfc	prodh,w,c
  9002  018DF2  6EDA               	movwf	fsr2h,c
  9003  018DF4  0E00               	movlw	0
  9004  018DF6  6EDF               	movwf	indf2,c
  9005                           
  9006                           ;mconfig.c: 95:  wait_lcd_done();
  9007  018DF8  EC60  F0D8         	call	_wait_lcd_done	;wreg free
  9008                           
  9009                           ; BSR set to: 0
  9010                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  9011                           ;stkvar	_vterm @ sp[(0)+-1]
  9012  018DFC  0EFF               	movlw	-1
  9013  018DFE  50E3               	movf	plusw1,w,c
  9014  018E00  0D48               	mullw	72
  9015  018E02  0EFF               	movlw	low _D
  9016  018E04  6E0B               	movwf	(btemp+10)^0,c
  9017  018E06  0E07               	movlw	high _D
  9018  018E08  6E0C               	movwf	(btemp+11)^0,c
  9019  018E0A  50F3               	movf	243,w,c
  9020  018E0C  260B               	addwf	(btemp+10)^0,f,c
  9021  018E0E  50F4               	movf	244,w,c
  9022  018E10  220C               	addwfc	(btemp+11)^0,f,c
  9023  018E12  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9024  018E18  0060  F033  FFE6   	movff	btemp+11,postinc1
  9025  018E1E  0E00               	movlw	0
  9026  018E20  6EE6               	movwf	postinc1,c
  9027  018E22  0E00               	movlw	0
  9028  018E24  6EE6               	movwf	postinc1,c
  9029  018E26  ECEA  F0D4         	call	_eaDogM_WriteStringAtPos	;wreg free
  9030                           
  9031                           ; BSR set to: 59
  9032                           ;mconfig.c: 97:  wait_lcd_done();
  9033  018E2A  EC60  F0D8         	call	_wait_lcd_done	;wreg free
  9034                           
  9035                           ; BSR set to: 0
  9036                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  9037                           ;stkvar	_vterm @ sp[(0)+-1]
  9038  018E2E  0EFF               	movlw	-1
  9039  018E30  50E3               	movf	plusw1,w,c
  9040  018E32  0D48               	mullw	72
  9041  018E34  0EFF               	movlw	low _D
  9042  018E36  6E0B               	movwf	(btemp+10)^0,c
  9043  018E38  0E07               	movlw	high _D
  9044  018E3A  6E0C               	movwf	(btemp+11)^0,c
  9045  018E3C  0E18               	movlw	24
  9046  018E3E  260B               	addwf	(btemp+10)^0,f,c
  9047  018E40  0E00               	movlw	0
  9048  018E42  220C               	addwfc	(btemp+11)^0,f,c
  9049  018E44  50F3               	movf	243,w,c
  9050  018E46  260B               	addwf	(btemp+10)^0,f,c
  9051  018E48  50F4               	movf	244,w,c
  9052  018E4A  220C               	addwfc	(btemp+11)^0,f,c
  9053  018E4C  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9054  018E52  0060  F033  FFE6   	movff	btemp+11,postinc1
  9055  018E58  0E00               	movlw	0
  9056  018E5A  6EE6               	movwf	postinc1,c
  9057  018E5C  0E01               	movlw	1
  9058  018E5E  6EE6               	movwf	postinc1,c
  9059  018E60  ECEA  F0D4         	call	_eaDogM_WriteStringAtPos	;wreg free
  9060                           
  9061                           ; BSR set to: 59
  9062                           ;mconfig.c: 99:  wait_lcd_done();
  9063  018E64  EC60  F0D8         	call	_wait_lcd_done	;wreg free
  9064                           
  9065                           ; BSR set to: 0
  9066                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  9067                           ;stkvar	_vterm @ sp[(0)+-1]
  9068  018E68  0EFF               	movlw	-1
  9069  018E6A  50E3               	movf	plusw1,w,c
  9070  018E6C  0D48               	mullw	72
  9071  018E6E  0EFF               	movlw	low _D
  9072  018E70  6E0B               	movwf	(btemp+10)^0,c
  9073  018E72  0E07               	movlw	high _D
  9074  018E74  6E0C               	movwf	(btemp+11)^0,c
  9075  018E76  0E30               	movlw	48
  9076  018E78  260B               	addwf	(btemp+10)^0,f,c
  9077  018E7A  0E00               	movlw	0
  9078  018E7C  220C               	addwfc	(btemp+11)^0,f,c
  9079  018E7E  50F3               	movf	243,w,c
  9080  018E80  260B               	addwf	(btemp+10)^0,f,c
  9081  018E82  50F4               	movf	244,w,c
  9082  018E84  220C               	addwfc	(btemp+11)^0,f,c
  9083  018E86  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9084  018E8C  0060  F033  FFE6   	movff	btemp+11,postinc1
  9085  018E92  0E00               	movlw	0
  9086  018E94  6EE6               	movwf	postinc1,c
  9087  018E96  0E02               	movlw	2
  9088  018E98  6EE6               	movwf	postinc1,c
  9089  018E9A  ECEA  F0D4         	call	_eaDogM_WriteStringAtPos	;wreg free
  9090  018E9E                     l1668:
  9091                           
  9092                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  9093  018E9E  52E5               	movf	postdec1,f,c
  9094  018EA0  0012               	return		;funcret
  9095  018EA2                     __end_of_update_lcd:
  9096                           	opt callstack 0
  9097                           
  9098 ;; *************** function _eaDogM_WriteStringAtPos *****************
  9099 ;; Defined at:
  9100 ;;		line 278 in file "eadog.c"
  9101 ;; Parameters:    Size  Location     Type
  9102 ;;  r               1  [STACK] const unsigned char 
  9103 ;;  c               1  [STACK] const unsigned char 
  9104 ;;  strPtr          2  [STACK] PTR unsigned char 
  9105 ;;		 -> D.lcd(288), D(290), V(188), 
  9106 ;; Auto vars:     Size  Location     Type
  9107 ;;		None
  9108 ;; Return value:  Size  Location     Type
  9109 ;;                  1  [STACK] void 
  9110 ;; Registers used:
  9111 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9112 ;; Tracked objects:
  9113 ;;		On entry : 3F/0
  9114 ;;		On exit  : 3F/3B
  9115 ;;		Unchanged: 0/0
  9116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9121 ;;Total ram usage:        0 bytes
  9122 ;; Hardware stack levels used:    1
  9123 ;; Hardware stack levels required when called:   25
  9124 ;; This function calls:
  9125 ;;		_eaDogM_WriteString
  9126 ;;		_send_lcd_cmd_dma
  9127 ;; This function is called by:
  9128 ;;		_update_lcd
  9129 ;;		_vterm_dump
  9130 ;; This function uses a reentrant model
  9131 ;;
  9132                           
  9133                           	psect	text34
  9134  01A9D4                     __ptext34:
  9135                           	opt callstack 0
  9136  01A9D4                     _eaDogM_WriteStringAtPos:
  9137                           	opt callstack 4
  9138                           
  9139                           ;eadog.c: 278: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 279: {;eadog.c: 280:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  9140                           ;stkvar	_c @ sp[(0)+-2]
  9141                           
  9142                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9143                           ;incstack = 0
  9144  01A9D4  0EFE               	movlw	-2
  9145  01A9D6  006F FF8C  F00C    	movff	plusw1,btemp+11
  9146                           
  9147                           ;stkvar	_r @ sp[(0)+-1]
  9148  01A9DC  0EFF               	movlw	-1
  9149  01A9DE  50E3               	movf	plusw1,w,c
  9150  01A9E0  0D10               	mullw	16
  9151  01A9E2  50F3               	movf	243,w,c
  9152  01A9E4  240C               	addwf	(btemp+11)^0,w,c
  9153  01A9E6  0F80               	addlw	128
  9154  01A9E8  6EE6               	movwf	postinc1,c
  9155  01A9EA  ECFF  F0D1         	call	_send_lcd_cmd_dma	;wreg free
  9156                           
  9157                           ;eadog.c: 281:  eaDogM_WriteString(strPtr);
  9158                           ;stkvar	_strPtr @ sp[(0)+-4]
  9159  01A9EE  0EFC               	movlw	-4
  9160  01A9F0  006F FF8F FFE6     	movff	plusw1,postinc1
  9161  01A9F6  006F FF8F FFE6     	movff	plusw1,postinc1
  9162  01A9FC  ECC8  F0CC         	call	_eaDogM_WriteString	;wreg free
  9163                           
  9164                           ; BSR set to: 59
  9165                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  9166  01AA00  52E5               	movf	postdec1,f,c
  9167  01AA02  52E5               	movf	postdec1,f,c
  9168  01AA04  52E5               	movf	postdec1,f,c
  9169  01AA06  52E5               	movf	postdec1,f,c
  9170  01AA08  0012               	return		;funcret
  9171  01AA0A                     __end_of_eaDogM_WriteStringAtPos:
  9172                           	opt callstack 0
  9173                           
  9174 ;; *************** function _send_lcd_cmd_dma *****************
  9175 ;; Defined at:
  9176 ;;		line 220 in file "eadog.c"
  9177 ;; Parameters:    Size  Location     Type
  9178 ;;  strPtr          1  [STACK] unsigned char 
  9179 ;; Auto vars:     Size  Location     Type
  9180 ;;		None
  9181 ;; Return value:  Size  Location     Type
  9182 ;;                  1  [STACK] void 
  9183 ;; Registers used:
  9184 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9185 ;; Tracked objects:
  9186 ;;		On entry : 0/3D
  9187 ;;		On exit  : 3F/0
  9188 ;;		Unchanged: 0/0
  9189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9194 ;;Total ram usage:        0 bytes
  9195 ;; Hardware stack levels used:    1
  9196 ;; Hardware stack levels required when called:   24
  9197 ;; This function calls:
  9198 ;;		_printf
  9199 ;;		_ringBufS_flush
  9200 ;;		_start_lcd
  9201 ;;		_wait_lcd_done
  9202 ;;		_wait_lcd_set
  9203 ;; This function is called by:
  9204 ;;		_eaDogM_WriteCommand
  9205 ;;		_eaDogM_WriteStringAtPos
  9206 ;; This function uses a reentrant model
  9207 ;;
  9208                           
  9209                           	psect	text35
  9210  01A3FE                     __ptext35:
  9211                           	opt callstack 0
  9212  01A3FE                     _send_lcd_cmd_dma:
  9213                           	opt callstack 4
  9214                           
  9215                           ;eadog.c: 220: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 221: {;eadog.c: 223:  wait
      +                          _lcd_set();
  9216                           
  9217                           ; BSR set to: 59
  9218                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9219                           ;incstack = 0
  9220  01A3FE  EC4C  F0D9         	call	_wait_lcd_set	;wreg free
  9221                           
  9222                           ; BSR set to: 0
  9223                           ;eadog.c: 225:  ringBufS_flush(spi_link.tx1a, 0);
  9224  01A402  0E00               	movlw	0
  9225  01A404  6EE6               	movwf	postinc1,c
  9226  01A406  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  9227  01A40C  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  9228  01A412  EC01  F0CE         	call	_ringBufS_flush	;wreg free
  9229  01A416  92BC               	bcf	188,1,c	;volatile
  9230  01A418  94BC               	bcf	188,2,c	;volatile
  9231                           
  9232                           ;eadog.c: 228:  DMA1CON0bits.EN = 0;
  9233  01A41A  013B               	movlb	59	; () banked
  9234  01A41C  9FFC               	bcf	252,7,b	;volatile
  9235                           
  9236                           ; BSR set to: 59
  9237                           ;eadog.c: 229:  DMA1SSZ = 1;
  9238  01A41E  0E00               	movlw	0
  9239  01A420  6FF8               	movwf	248,b	;volatile
  9240  01A422  0E01               	movlw	1
  9241  01A424  6FF7               	movwf	247,b	;volatile
  9242                           
  9243                           ; BSR set to: 59
  9244                           ;eadog.c: 230:  DMA1CON0bits.EN = 1;
  9245  01A426  8FFC               	bsf	252,7,b	;volatile
  9246                           
  9247                           ; BSR set to: 59
  9248                           ;eadog.c: 231:  printf("%c", strPtr);
  9249                           ;stkvar	_strPtr @ sp[(0)+-1]
  9250  01A428  0EFF               	movlw	-1
  9251  01A42A  50E3               	movf	plusw1,w,c
  9252  01A42C  6EE6               	movwf	postinc1,c
  9253  01A42E  0E00               	movlw	0
  9254  01A430  6EE6               	movwf	postinc1,c
  9255  01A432  0EF9               	movlw	low STR_35
  9256  01A434  6EE6               	movwf	postinc1,c
  9257  01A436  0EFF               	movlw	high STR_35
  9258  01A438  6EE6               	movwf	postinc1,c
  9259  01A43A  0E04               	movlw	4
  9260  01A43C  6EE6               	movwf	postinc1,c
  9261  01A43E  ECE6  F0D0         	call	_printf	;wreg free
  9262                           
  9263                           ; BSR set to: 0
  9264                           ;eadog.c: 232:  start_lcd();
  9265  01A442  EC4F  F0D9         	call	_start_lcd	;wreg free
  9266                           
  9267                           ; BSR set to: 59
  9268                           ;eadog.c: 233:  wait_lcd_done();
  9269  01A446  EC60  F0D8         	call	_wait_lcd_done	;wreg free
  9270                           
  9271                           ; BSR set to: 0
  9272  01A44A  82BC               	bsf	188,1,c	;volatile
  9273                           
  9274                           ; BSR set to: 0
  9275                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  9276  01A44C  52E5               	movf	postdec1,f,c
  9277  01A44E  0012               	return		;funcret
  9278  01A450                     __end_of_send_lcd_cmd_dma:
  9279                           	opt callstack 0
  9280                           
  9281 ;; *************** function _wait_lcd_done *****************
  9282 ;; Defined at:
  9283 ;;		line 156 in file "eadog.c"
  9284 ;; Parameters:    Size  Location     Type
  9285 ;;		None
  9286 ;; Auto vars:     Size  Location     Type
  9287 ;;		None
  9288 ;; Return value:  Size  Location     Type
  9289 ;;                  1  [STACK] void 
  9290 ;; Registers used:
  9291 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9292 ;; Tracked objects:
  9293 ;;		On entry : 0/0
  9294 ;;		On exit  : 3F/0
  9295 ;;		Unchanged: 0/0
  9296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9301 ;;Total ram usage:        0 bytes
  9302 ;; Hardware stack levels used:    1
  9303 ;; Hardware stack levels required when called:   16
  9304 ;; This function calls:
  9305 ;;		_wdtdelay
  9306 ;; This function is called by:
  9307 ;;		_send_lcd_cmd_dma
  9308 ;;		_update_lcd
  9309 ;;		_vterm_dump
  9310 ;; This function uses a reentrant model
  9311 ;;
  9312                           
  9313                           	psect	text36
  9314  01B0C0                     __ptext36:
  9315                           	opt callstack 0
  9316  01B0C0                     _wait_lcd_done:
  9317                           	opt callstack 13
  9318                           
  9319                           ;eadog.c: 158:  while (spi_link.LCD_DATA);
  9320                           
  9321                           ; BSR set to: 0
  9322                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9323                           ;incstack = 0
  9324  01B0C0  0100               	movlb	0	; () banked
  9325  01B0C2  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
  9326  01B0C4  D7FD               	goto	_wait_lcd_done
  9327                           
  9328                           ; BSR set to: 0
  9329                           ;eadog.c: 159:  wdtdelay(50);
  9330  01B0C6  0E32               	movlw	50
  9331  01B0C8  6EE6               	movwf	postinc1,c
  9332  01B0CA  0E00               	movlw	0
  9333  01B0CC  6EE6               	movwf	postinc1,c
  9334  01B0CE  0E00               	movlw	0
  9335  01B0D0  6EE6               	movwf	postinc1,c
  9336  01B0D2  0E00               	movlw	0
  9337  01B0D4  6EE6               	movwf	postinc1,c
  9338  01B0D6  EC77  F0D1         	call	_wdtdelay	;wreg free
  9339                           
  9340                           ; BSR set to: 0
  9341                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  9342  01B0DA  0012               	return		;funcret
  9343  01B0DC                     __end_of_wait_lcd_done:
  9344                           	opt callstack 0
  9345                           
  9346 ;; *************** function _wdtdelay *****************
  9347 ;; Defined at:
  9348 ;;		line 23 in file "eadog.c"
  9349 ;; Parameters:    Size  Location     Type
  9350 ;;  delay           4  [STACK] const unsigned long 
  9351 ;; Auto vars:     Size  Location     Type
  9352 ;;		None
  9353 ;; Return value:  Size  Location     Type
  9354 ;;                  1  [STACK] void 
  9355 ;; Registers used:
  9356 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9357 ;; Tracked objects:
  9358 ;;		On entry : 0/0
  9359 ;;		On exit  : 3F/0
  9360 ;;		Unchanged: 0/0
  9361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9366 ;;Total ram usage:        0 bytes
  9367 ;; Hardware stack levels used:    1
  9368 ;; Hardware stack levels required when called:   15
  9369 ;; This function calls:
  9370 ;;		Nothing
  9371 ;; This function is called by:
  9372 ;;		_init_display
  9373 ;;		_send_lcd_cmd
  9374 ;;		_send_lcd_cmd_long
  9375 ;;		_wait_lcd_done
  9376 ;; This function uses a reentrant model
  9377 ;;
  9378                           
  9379                           	psect	text37
  9380  01A2EE                     __ptext37:
  9381                           	opt callstack 0
  9382  01A2EE                     _wdtdelay:
  9383                           	opt callstack 13
  9384                           
  9385                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
  9386                           
  9387                           ; BSR set to: 0
  9388                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9389                           ;incstack = 0
  9390  01A2EE  0100               	movlb	0	; () banked
  9391  01A2F0  6B9A               	clrf	wdtdelay@dcount& (0+255),b
  9392  01A2F2  6B9B               	clrf	(wdtdelay@dcount+1)& (0+255),b
  9393  01A2F4  6B9C               	clrf	(wdtdelay@dcount+2)& (0+255),b
  9394  01A2F6  6B9D               	clrf	(wdtdelay@dcount+3)& (0+255),b
  9395  01A2F8                     l1433:
  9396                           
  9397                           ; BSR set to: 0
  9398                           ;eadog.c: 28:   __nop();
  9399  01A2F8  F000               	nop	
  9400  01A2FA  0004               	clrwdt		;# 
  9401                           
  9402                           ;eadog.c: 30:  };
  9403  01A2FC  0E01               	movlw	1
  9404  01A2FE  0100               	movlb	0	; () banked
  9405  01A300  279A               	addwf	wdtdelay@dcount& (0+255),f,b
  9406  01A302  0E00               	movlw	0
  9407  01A304  239B               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  9408  01A306  239C               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  9409  01A308  239D               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  9410                           
  9411                           ; BSR set to: 0
  9412                           ;stkvar	_delay @ sp[(0)+-4]
  9413  01A30A  0EFC               	movlw	-4
  9414  01A30C  006F FF8C  F001    	movff	plusw1,btemp
  9415  01A312  519A               	movf	wdtdelay@dcount& (0+255),w,b
  9416  01A314  5C01               	subwf	btemp^0,w,c
  9417  01A316  0EFD               	movlw	-3
  9418  01A318  006F FF8C  F001    	movff	plusw1,btemp
  9419  01A31E  519B               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  9420  01A320  5801               	subwfb	btemp^0,w,c
  9421  01A322  0EFE               	movlw	-2
  9422  01A324  006F FF8C  F001    	movff	plusw1,btemp
  9423  01A32A  519C               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  9424  01A32C  5801               	subwfb	btemp^0,w,c
  9425  01A32E  0EFF               	movlw	-1
  9426  01A330  006F FF8C  F001    	movff	plusw1,btemp
  9427  01A336  519D               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  9428  01A338  5801               	subwfb	btemp^0,w,c
  9429  01A33A  B0D8               	btfsc	status,0,c
  9430  01A33C  D7DD               	goto	l1433
  9431                           
  9432                           ; BSR set to: 0
  9433                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  9434  01A33E  52E5               	movf	postdec1,f,c
  9435  01A340  52E5               	movf	postdec1,f,c
  9436  01A342  52E5               	movf	postdec1,f,c
  9437  01A344  52E5               	movf	postdec1,f,c
  9438  01A346  0012               	return		;funcret
  9439  01A348                     __end_of_wdtdelay:
  9440                           	opt callstack 0
  9441                           
  9442 ;; *************** function _eaDogM_WriteString *****************
  9443 ;; Defined at:
  9444 ;;		line 199 in file "eadog.c"
  9445 ;; Parameters:    Size  Location     Type
  9446 ;;  strPtr          2  [STACK] PTR unsigned char 
  9447 ;;		 -> D.lcd(288), D(290), V(188), 
  9448 ;; Auto vars:     Size  Location     Type
  9449 ;;		None
  9450 ;; Return value:  Size  Location     Type
  9451 ;;                  1  [STACK] void 
  9452 ;; Registers used:
  9453 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9454 ;; Tracked objects:
  9455 ;;		On entry : 3F/0
  9456 ;;		On exit  : 3F/3B
  9457 ;;		Unchanged: 0/0
  9458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9463 ;;Total ram usage:        0 bytes
  9464 ;; Hardware stack levels used:    1
  9465 ;; Hardware stack levels required when called:   24
  9466 ;; This function calls:
  9467 ;;		_printf
  9468 ;;		_ringBufS_flush
  9469 ;;		_start_lcd
  9470 ;;		_strlen
  9471 ;;		_wait_lcd_set
  9472 ;; This function is called by:
  9473 ;;		_eaDogM_WriteStringAtPos
  9474 ;; This function uses a reentrant model
  9475 ;;
  9476                           
  9477                           	psect	text38
  9478  019990                     __ptext38:
  9479                           	opt callstack 0
  9480  019990                     _eaDogM_WriteString:
  9481                           	opt callstack 4
  9482                           
  9483                           ;eadog.c: 199: void eaDogM_WriteString(char *strPtr);eadog.c: 200: {;eadog.c: 202:  wait
      +                          _lcd_set();
  9484                           
  9485                           ; BSR set to: 0
  9486                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9487                           ;incstack = 0
  9488  019990  EC4C  F0D9         	call	_wait_lcd_set	;wreg free
  9489                           
  9490                           ; BSR set to: 0
  9491                           ;eadog.c: 204:  ringBufS_flush(spi_link.tx1a, 0);
  9492  019994  0E00               	movlw	0
  9493  019996  6EE6               	movwf	postinc1,c
  9494  019998  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  9495  01999E  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  9496  0199A4  EC01  F0CE         	call	_ringBufS_flush	;wreg free
  9497  0199A8  94BC               	bcf	188,2,c	;volatile
  9498                           
  9499                           ;eadog.c: 206:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  9500                           ;stkvar	_strPtr @ sp[(0)+-2]
  9501  0199AA  0EFE               	movlw	-2
  9502  0199AC  006F FF8F FFE6     	movff	plusw1,postinc1
  9503  0199B2  006F FF8F FFE6     	movff	plusw1,postinc1
  9504  0199B8  EC1B  F0CD         	call	_strlen	;wreg free
  9505  0199BC  5002               	movf	(btemp+1)^0,w,c
  9506  0199BE  E104               	bnz	u11780
  9507  0199C0  0E41               	movlw	65
  9508  0199C2  5C01               	subwf	btemp^0,w,c
  9509  0199C4  A0D8               	btfss	status,0,c
  9510  0199C6  D010               	goto	l12214
  9511  0199C8                     u11780:
  9512                           
  9513                           ;stkvar	_strPtr @ sp[(0)+-2]
  9514  0199C8  0EFE               	movlw	-2
  9515  0199CA  006F FF8C  F00B    	movff	plusw1,btemp+10
  9516  0199D0  0EFF               	movlw	-1
  9517  0199D2  006F FF8C  F00C    	movff	plusw1,btemp+11
  9518  0199D8  0E40               	movlw	64
  9519  0199DA  240B               	addwf	(btemp+10)^0,w,c
  9520  0199DC  6ED9               	movwf	fsr2l,c
  9521  0199DE  0E00               	movlw	0
  9522  0199E0  200C               	addwfc	(btemp+11)^0,w,c
  9523  0199E2  6EDA               	movwf	fsr2h,c
  9524  0199E4  0E00               	movlw	0
  9525  0199E6  6EDF               	movwf	indf2,c
  9526  0199E8                     l12214:
  9527                           
  9528                           ;eadog.c: 207:  DMA1CON0bits.EN = 0;
  9529  0199E8  013B               	movlb	59	; () banked
  9530  0199EA  9FFC               	bcf	252,7,b	;volatile
  9531                           
  9532                           ; BSR set to: 59
  9533                           ;eadog.c: 208:  DMA1SSZ = strlen(strPtr);
  9534                           ;stkvar	_strPtr @ sp[(0)+-2]
  9535  0199EC  0EFE               	movlw	-2
  9536  0199EE  006F FF8F FFE6     	movff	plusw1,postinc1
  9537  0199F4  006F FF8F FFE6     	movff	plusw1,postinc1
  9538  0199FA  EC1B  F0CD         	call	_strlen	;wreg free
  9539  0199FE  0060  F007  FBF7   	movff	btemp,15351	;volatile
  9540  019A04  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
  9541                           
  9542                           ;eadog.c: 209:  DMA1CON0bits.EN = 1;
  9543  019A0A  013B               	movlb	59	; () banked
  9544  019A0C  8FFC               	bsf	252,7,b	;volatile
  9545                           
  9546                           ; BSR set to: 59
  9547                           ;eadog.c: 210:  printf("%s", strPtr);
  9548                           ;stkvar	_strPtr @ sp[(0)+-2]
  9549  019A0E  0EFE               	movlw	-2
  9550  019A10  006F FF8F FFE6     	movff	plusw1,postinc1
  9551  019A16  006F FF8F FFE6     	movff	plusw1,postinc1
  9552  019A1C  0EFC               	movlw	low STR_34
  9553  019A1E  6EE6               	movwf	postinc1,c
  9554  019A20  0EFF               	movlw	high STR_34
  9555  019A22  6EE6               	movwf	postinc1,c
  9556  019A24  0E04               	movlw	4
  9557  019A26  6EE6               	movwf	postinc1,c
  9558  019A28  ECE6  F0D0         	call	_printf	;wreg free
  9559                           
  9560                           ; BSR set to: 0
  9561                           ;eadog.c: 211:  start_lcd();
  9562  019A2C  EC4F  F0D9         	call	_start_lcd	;wreg free
  9563                           
  9564                           ; BSR set to: 59
  9565                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  9566  019A30  52E5               	movf	postdec1,f,c
  9567  019A32  52E5               	movf	postdec1,f,c
  9568  019A34  0012               	return		;funcret
  9569  019A36                     __end_of_eaDogM_WriteString:
  9570                           	opt callstack 0
  9571                           
  9572 ;; *************** function _wait_lcd_set *****************
  9573 ;; Defined at:
  9574 ;;		line 146 in file "eadog.c"
  9575 ;; Parameters:    Size  Location     Type
  9576 ;;		None
  9577 ;; Auto vars:     Size  Location     Type
  9578 ;;		None
  9579 ;; Return value:  Size  Location     Type
  9580 ;;                  1  [STACK] void 
  9581 ;; Registers used:
  9582 ;;		None
  9583 ;; Tracked objects:
  9584 ;;		On entry : 0/3D
  9585 ;;		On exit  : 3F/0
  9586 ;;		Unchanged: 0/0
  9587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9592 ;;Total ram usage:        0 bytes
  9593 ;; Hardware stack levels used:    1
  9594 ;; Hardware stack levels required when called:   15
  9595 ;; This function calls:
  9596 ;;		Nothing
  9597 ;; This function is called by:
  9598 ;;		_eaDogM_WriteString
  9599 ;;		_send_lcd_cmd_dma
  9600 ;; This function uses a reentrant model
  9601 ;;
  9602                           
  9603                           	psect	text39
  9604  01B298                     __ptext39:
  9605                           	opt callstack 0
  9606  01B298                     _wait_lcd_set:
  9607                           	opt callstack 12
  9608                           
  9609                           ;eadog.c: 148:  spi_link.LCD_DATA = 1;
  9610                           
  9611                           ; BSR set to: 59
  9612                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9613                           ;incstack = 0
  9614  01B298  0100               	movlb	0	; () banked
  9615  01B29A  8760               	bsf	_spi_link& (0+255),3,b	;volatile
  9616                           
  9617                           ; BSR set to: 0
  9618                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  9619  01B29C  0012               	return		;funcret
  9620  01B29E                     __end_of_wait_lcd_set:
  9621                           	opt callstack 0
  9622                           
  9623 ;; *************** function _start_lcd *****************
  9624 ;; Defined at:
  9625 ;;		line 141 in file "eadog.c"
  9626 ;; Parameters:    Size  Location     Type
  9627 ;;		None
  9628 ;; Auto vars:     Size  Location     Type
  9629 ;;		None
  9630 ;; Return value:  Size  Location     Type
  9631 ;;                  1  [STACK] void 
  9632 ;; Registers used:
  9633 ;;		None
  9634 ;; Tracked objects:
  9635 ;;		On entry : 3F/0
  9636 ;;		On exit  : 3F/3B
  9637 ;;		Unchanged: 0/0
  9638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9643 ;;Total ram usage:        0 bytes
  9644 ;; Hardware stack levels used:    1
  9645 ;; Hardware stack levels required when called:   15
  9646 ;; This function calls:
  9647 ;;		Nothing
  9648 ;; This function is called by:
  9649 ;;		_eaDogM_WriteString
  9650 ;;		_send_lcd_cmd_dma
  9651 ;; This function uses a reentrant model
  9652 ;;
  9653                           
  9654                           	psect	text40
  9655  01B29E                     __ptext40:
  9656                           	opt callstack 0
  9657  01B29E                     _start_lcd:
  9658                           	opt callstack 12
  9659                           
  9660                           ;eadog.c: 143:  DMA1CON0bits.DMA1SIRQEN = 1;
  9661                           
  9662                           ; BSR set to: 0
  9663                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9664                           ;incstack = 0
  9665  01B29E  013B               	movlb	59	; () banked
  9666  01B2A0  8DFC               	bsf	252,6,b	;volatile
  9667                           
  9668                           ; BSR set to: 59
  9669                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  9670  01B2A2  0012               	return		;funcret
  9671  01B2A4                     __end_of_start_lcd:
  9672                           	opt callstack 0
  9673                           
  9674 ;; *************** function _ringBufS_flush *****************
  9675 ;; Defined at:
  9676 ;;		line 76 in file "ringbufs.c"
  9677 ;; Parameters:    Size  Location     Type
  9678 ;;  _this           2  [STACK] PTR struct ringBufS_t
  9679 ;;		 -> ring_buf1(67), 
  9680 ;;  clearBuffer     1  [STACK] const char 
  9681 ;; Auto vars:     Size  Location     Type
  9682 ;;		None
  9683 ;; Return value:  Size  Location     Type
  9684 ;;                  1  [STACK] void 
  9685 ;; Registers used:
  9686 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9687 ;; Tracked objects:
  9688 ;;		On entry : 3F/0
  9689 ;;		On exit  : 0/0
  9690 ;;		Unchanged: 0/0
  9691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9696 ;;Total ram usage:        0 bytes
  9697 ;; Hardware stack levels used:    1
  9698 ;; Hardware stack levels required when called:   16
  9699 ;; This function calls:
  9700 ;;		_memset
  9701 ;; This function is called by:
  9702 ;;		_eaDogM_WriteString
  9703 ;;		_send_lcd_cmd_dma
  9704 ;; This function uses a reentrant model
  9705 ;;
  9706                           
  9707                           	psect	text41
  9708  019C02                     __ptext41:
  9709                           	opt callstack 0
  9710  019C02                     _ringBufS_flush:
  9711                           	opt callstack 11
  9712                           
  9713                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  9714                           ;stkvar	__this @ sp[(0)+-2]
  9715                           
  9716                           ; BSR set to: 59
  9717                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9718                           ;incstack = 0
  9719  019C02  0EFE               	movlw	-2
  9720  019C04  006F FF8C  F00B    	movff	plusw1,btemp+10
  9721  019C0A  0EFF               	movlw	-1
  9722  019C0C  006F FF8C  F00C    	movff	plusw1,btemp+11
  9723  019C12  0E42               	movlw	66
  9724  019C14  240B               	addwf	(btemp+10)^0,w,c
  9725  019C16  6ED9               	movwf	fsr2l,c
  9726  019C18  0E00               	movlw	0
  9727  019C1A  200C               	addwfc	(btemp+11)^0,w,c
  9728  019C1C  6EDA               	movwf	fsr2h,c
  9729  019C1E  0E00               	movlw	0
  9730  019C20  6EDF               	movwf	indf2,c
  9731                           
  9732                           ;ringbufs.c: 79:  _this->head = 0;
  9733                           ;stkvar	__this @ sp[(0)+-2]
  9734  019C22  0EFE               	movlw	-2
  9735  019C24  006F FF8C  F00B    	movff	plusw1,btemp+10
  9736  019C2A  0EFF               	movlw	-1
  9737  019C2C  006F FF8C  F00C    	movff	plusw1,btemp+11
  9738  019C32  0E40               	movlw	64
  9739  019C34  240B               	addwf	(btemp+10)^0,w,c
  9740  019C36  6ED9               	movwf	fsr2l,c
  9741  019C38  0E00               	movlw	0
  9742  019C3A  200C               	addwfc	(btemp+11)^0,w,c
  9743  019C3C  6EDA               	movwf	fsr2h,c
  9744  019C3E  0E00               	movlw	0
  9745  019C40  6EDF               	movwf	indf2,c
  9746                           
  9747                           ;ringbufs.c: 80:  _this->tail = 0;
  9748                           ;stkvar	__this @ sp[(0)+-2]
  9749  019C42  0EFE               	movlw	-2
  9750  019C44  006F FF8C  F00B    	movff	plusw1,btemp+10
  9751  019C4A  0EFF               	movlw	-1
  9752  019C4C  006F FF8C  F00C    	movff	plusw1,btemp+11
  9753  019C52  0E41               	movlw	65
  9754  019C54  240B               	addwf	(btemp+10)^0,w,c
  9755  019C56  6ED9               	movwf	fsr2l,c
  9756  019C58  0E00               	movlw	0
  9757  019C5A  200C               	addwfc	(btemp+11)^0,w,c
  9758  019C5C  6EDA               	movwf	fsr2h,c
  9759  019C5E  0E00               	movlw	0
  9760  019C60  6EDF               	movwf	indf2,c
  9761                           
  9762                           ;ringbufs.c: 81:  if (clearBuffer) {
  9763                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  9764  019C62  0EFD               	movlw	-3
  9765  019C64  50E3               	movf	plusw1,w,c
  9766  019C66  B4D8               	btfsc	status,2,c
  9767  019C68  D011               	goto	l1577
  9768                           
  9769                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  9770  019C6A  0E40               	movlw	64
  9771  019C6C  6EE6               	movwf	postinc1,c
  9772  019C6E  0E00               	movlw	0
  9773  019C70  6EE6               	movwf	postinc1,c
  9774  019C72  0E00               	movlw	0
  9775  019C74  6EE6               	movwf	postinc1,c
  9776  019C76  0E00               	movlw	0
  9777  019C78  6EE6               	movwf	postinc1,c
  9778                           
  9779                           ;stkvar	__this @ sp[(-4)+-2]
  9780  019C7A  0EFA               	movlw	-6
  9781  019C7C  006F FF8F FFE6     	movff	plusw1,postinc1
  9782  019C82  006F FF8F FFE6     	movff	plusw1,postinc1
  9783  019C88  ECBF  F0B0         	call	_memset	;wreg free
  9784  019C8C                     l1577:
  9785                           
  9786                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  9787  019C8C  52E5               	movf	postdec1,f,c
  9788  019C8E  52E5               	movf	postdec1,f,c
  9789  019C90  52E5               	movf	postdec1,f,c
  9790  019C92  0012               	return		;funcret
  9791  019C94                     __end_of_ringBufS_flush:
  9792                           	opt callstack 0
  9793                           
  9794 ;; *************** function _memset *****************
  9795 ;; Defined at:
  9796 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  9797 ;; Parameters:    Size  Location     Type
  9798 ;;  dest            2  [STACK] PTR void 
  9799 ;;		 -> ring_buf2(67), ring_buf1(67), 
  9800 ;;  c               2  [STACK] int 
  9801 ;;  n               2  [STACK] unsigned int 
  9802 ;; Auto vars:     Size  Location     Type
  9803 ;;  s               2  [STACK] PTR unsigned char 
  9804 ;;		 -> ring_buf2(67), ring_buf1(67), 
  9805 ;;  k               2  [STACK] unsigned int 
  9806 ;; Return value:  Size  Location     Type
  9807 ;;                  2  [STACK] PTR void 
  9808 ;; Registers used:
  9809 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9810 ;; Tracked objects:
  9811 ;;		On entry : 0/0
  9812 ;;		On exit  : 0/0
  9813 ;;		Unchanged: 0/0
  9814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9819 ;;Total ram usage:        0 bytes
  9820 ;; Hardware stack levels used:    1
  9821 ;; Hardware stack levels required when called:   15
  9822 ;; This function calls:
  9823 ;;		Nothing
  9824 ;; This function is called by:
  9825 ;;		_ringBufS_init
  9826 ;;		_ringBufS_flush
  9827 ;; This function uses a reentrant model
  9828 ;;
  9829                           
  9830                           	psect	text42
  9831  01617E                     __ptext42:
  9832                           	opt callstack 0
  9833  01617E                     _memset:
  9834                           	opt callstack 0
  9835                           
  9836                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9837  01617E  52E6               	movf	postinc1,f,c
  9838  016180  52E6               	movf	postinc1,f,c
  9839  016182  52E6               	movf	postinc1,f,c
  9840  016184  52E6               	movf	postinc1,f,c
  9841                           
  9842                           ;stkvar	_dest @ sp[(-4)+-2]
  9843                           
  9844                           ;incstack = 0
  9845  016186  0EFA               	movlw	-6
  9846  016188  006F FF8C  F00B    	movff	plusw1,btemp+10
  9847  01618E  0EFB               	movlw	-5
  9848  016190  006F FF8C  F00C    	movff	plusw1,btemp+11
  9849                           
  9850                           ;stkvar	_s @ sp[(-4)+0]
  9851  016196  0EFD               	movlw	-3
  9852  016198  0060  F033  FFE3   	movff	btemp+11,plusw1
  9853  01619E  0EFC               	movlw	-4
  9854  0161A0  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9855                           
  9856                           ;stkvar	_n @ sp[(-4)+-6]
  9857  0161A6  0EF6               	movlw	-10
  9858  0161A8  006F FF8C  F001    	movff	plusw1,btemp
  9859  0161AE  0EF7               	movlw	-9
  9860  0161B0  50E3               	movf	plusw1,w,c
  9861  0161B2  1001               	iorwf	btemp^0,w,c
  9862  0161B4  B4D8               	btfsc	status,2,c
  9863  0161B6  D154               	goto	u10390
  9864                           
  9865                           ;stkvar	_c @ sp[(-4)+-4]
  9866                           ;stkvar	_s @ sp[(-4)+0]
  9867  0161B8  0EFC               	movlw	-4
  9868  0161BA  006F FF8F FFD9     	movff	plusw1,fsr2l
  9869  0161C0  0EFD               	movlw	-3
  9870  0161C2  006F FF8F FFDA     	movff	plusw1,fsr2h
  9871  0161C8  0EF8               	movlw	-8
  9872  0161CA  006F FF8F FFDF     	movff	plusw1,indf2
  9873                           
  9874                           ;stkvar	_c @ sp[(-4)+-4]
  9875                           ;stkvar	_n @ sp[(-4)+-6]
  9876                           ;stkvar	_s @ sp[(-4)+0]
  9877  0161D0  0EFC               	movlw	-4
  9878  0161D2  006F FF8C  F00B    	movff	plusw1,btemp+10
  9879  0161D8  0EFD               	movlw	-3
  9880  0161DA  006F FF8C  F00C    	movff	plusw1,btemp+11
  9881  0161E0  0EF6               	movlw	-10
  9882  0161E2  50E3               	movf	plusw1,w,c
  9883  0161E4  260B               	addwf	(btemp+10)^0,f,c
  9884  0161E6  0EF7               	movlw	-9
  9885  0161E8  50E3               	movf	plusw1,w,c
  9886  0161EA  220C               	addwfc	(btemp+11)^0,f,c
  9887  0161EC  0EFF               	movlw	255
  9888  0161EE  240B               	addwf	(btemp+10)^0,w,c
  9889  0161F0  6ED9               	movwf	fsr2l,c
  9890  0161F2  0EFF               	movlw	255
  9891  0161F4  200C               	addwfc	(btemp+11)^0,w,c
  9892  0161F6  6EDA               	movwf	fsr2h,c
  9893  0161F8  0EF8               	movlw	-8
  9894  0161FA  006F FF8F FFDF     	movff	plusw1,indf2
  9895                           
  9896                           ;stkvar	_n @ sp[(-4)+-6]
  9897  016200  0EF7               	movlw	-9
  9898  016202  50E3               	movf	plusw1,w,c
  9899  016204  E108               	bnz	l11386
  9900  016206  0EF6               	movlw	-10
  9901  016208  006F FF8C  F001    	movff	plusw1,btemp
  9902  01620E  0E03               	movlw	3
  9903  016210  5E01               	subwf	btemp^0,f,c
  9904  016212  A0D8               	btfss	status,0,c
  9905  016214  D125               	goto	u10390
  9906  016216                     l11386:
  9907                           
  9908                           ;stkvar	_c @ sp[(-4)+-4]
  9909                           ;stkvar	_s @ sp[(-4)+0]
  9910  016216  0EFC               	movlw	-4
  9911  016218  006F FF8C  F00B    	movff	plusw1,btemp+10
  9912  01621E  0EFD               	movlw	-3
  9913  016220  006F FF8C  F00C    	movff	plusw1,btemp+11
  9914  016226  0E01               	movlw	1
  9915  016228  240B               	addwf	(btemp+10)^0,w,c
  9916  01622A  6ED9               	movwf	fsr2l,c
  9917  01622C  0E00               	movlw	0
  9918  01622E  200C               	addwfc	(btemp+11)^0,w,c
  9919  016230  6EDA               	movwf	fsr2h,c
  9920  016232  0EF8               	movlw	-8
  9921  016234  006F FF8F FFDF     	movff	plusw1,indf2
  9922                           
  9923                           ;stkvar	_c @ sp[(-4)+-4]
  9924                           ;stkvar	_s @ sp[(-4)+0]
  9925  01623A  0EFC               	movlw	-4
  9926  01623C  006F FF8C  F00B    	movff	plusw1,btemp+10
  9927  016242  0EFD               	movlw	-3
  9928  016244  006F FF8C  F00C    	movff	plusw1,btemp+11
  9929  01624A  0E02               	movlw	2
  9930  01624C  240B               	addwf	(btemp+10)^0,w,c
  9931  01624E  6ED9               	movwf	fsr2l,c
  9932  016250  0E00               	movlw	0
  9933  016252  200C               	addwfc	(btemp+11)^0,w,c
  9934  016254  6EDA               	movwf	fsr2h,c
  9935  016256  0EF8               	movlw	-8
  9936  016258  006F FF8F FFDF     	movff	plusw1,indf2
  9937                           
  9938                           ;stkvar	_c @ sp[(-4)+-4]
  9939                           ;stkvar	_n @ sp[(-4)+-6]
  9940                           ;stkvar	_s @ sp[(-4)+0]
  9941  01625E  0EFC               	movlw	-4
  9942  016260  006F FF8C  F00B    	movff	plusw1,btemp+10
  9943  016266  0EFD               	movlw	-3
  9944  016268  006F FF8C  F00C    	movff	plusw1,btemp+11
  9945  01626E  0EF6               	movlw	-10
  9946  016270  50E3               	movf	plusw1,w,c
  9947  016272  260B               	addwf	(btemp+10)^0,f,c
  9948  016274  0EF7               	movlw	-9
  9949  016276  50E3               	movf	plusw1,w,c
  9950  016278  220C               	addwfc	(btemp+11)^0,f,c
  9951  01627A  0EFE               	movlw	254
  9952  01627C  240B               	addwf	(btemp+10)^0,w,c
  9953  01627E  6ED9               	movwf	fsr2l,c
  9954  016280  0EFF               	movlw	255
  9955  016282  200C               	addwfc	(btemp+11)^0,w,c
  9956  016284  6EDA               	movwf	fsr2h,c
  9957  016286  0EF8               	movlw	-8
  9958  016288  006F FF8F FFDF     	movff	plusw1,indf2
  9959                           
  9960                           ;stkvar	_c @ sp[(-4)+-4]
  9961                           ;stkvar	_n @ sp[(-4)+-6]
  9962                           ;stkvar	_s @ sp[(-4)+0]
  9963  01628E  0EFC               	movlw	-4
  9964  016290  006F FF8C  F00B    	movff	plusw1,btemp+10
  9965  016296  0EFD               	movlw	-3
  9966  016298  006F FF8C  F00C    	movff	plusw1,btemp+11
  9967  01629E  0EF6               	movlw	-10
  9968  0162A0  50E3               	movf	plusw1,w,c
  9969  0162A2  260B               	addwf	(btemp+10)^0,f,c
  9970  0162A4  0EF7               	movlw	-9
  9971  0162A6  50E3               	movf	plusw1,w,c
  9972  0162A8  220C               	addwfc	(btemp+11)^0,f,c
  9973  0162AA  0EFD               	movlw	253
  9974  0162AC  240B               	addwf	(btemp+10)^0,w,c
  9975  0162AE  6ED9               	movwf	fsr2l,c
  9976  0162B0  0EFF               	movlw	255
  9977  0162B2  200C               	addwfc	(btemp+11)^0,w,c
  9978  0162B4  6EDA               	movwf	fsr2h,c
  9979  0162B6  0EF8               	movlw	-8
  9980  0162B8  006F FF8F FFDF     	movff	plusw1,indf2
  9981                           
  9982                           ;stkvar	_n @ sp[(-4)+-6]
  9983  0162BE  0EF7               	movlw	-9
  9984  0162C0  50E3               	movf	plusw1,w,c
  9985  0162C2  E108               	bnz	l11392
  9986  0162C4  0EF6               	movlw	-10
  9987  0162C6  006F FF8C  F001    	movff	plusw1,btemp
  9988  0162CC  0E07               	movlw	7
  9989  0162CE  5E01               	subwf	btemp^0,f,c
  9990  0162D0  A0D8               	btfss	status,0,c
  9991  0162D2  D0C6               	goto	u10390
  9992  0162D4                     l11392:
  9993                           
  9994                           ;stkvar	_c @ sp[(-4)+-4]
  9995                           ;stkvar	_s @ sp[(-4)+0]
  9996  0162D4  0EFC               	movlw	-4
  9997  0162D6  006F FF8C  F00B    	movff	plusw1,btemp+10
  9998  0162DC  0EFD               	movlw	-3
  9999  0162DE  006F FF8C  F00C    	movff	plusw1,btemp+11
 10000  0162E4  0E03               	movlw	3
 10001  0162E6  240B               	addwf	(btemp+10)^0,w,c
 10002  0162E8  6ED9               	movwf	fsr2l,c
 10003  0162EA  0E00               	movlw	0
 10004  0162EC  200C               	addwfc	(btemp+11)^0,w,c
 10005  0162EE  6EDA               	movwf	fsr2h,c
 10006  0162F0  0EF8               	movlw	-8
 10007  0162F2  006F FF8F FFDF     	movff	plusw1,indf2
 10008                           
 10009                           ;stkvar	_c @ sp[(-4)+-4]
 10010                           ;stkvar	_n @ sp[(-4)+-6]
 10011                           ;stkvar	_s @ sp[(-4)+0]
 10012  0162F8  0EFC               	movlw	-4
 10013  0162FA  006F FF8C  F00B    	movff	plusw1,btemp+10
 10014  016300  0EFD               	movlw	-3
 10015  016302  006F FF8C  F00C    	movff	plusw1,btemp+11
 10016  016308  0EF6               	movlw	-10
 10017  01630A  50E3               	movf	plusw1,w,c
 10018  01630C  260B               	addwf	(btemp+10)^0,f,c
 10019  01630E  0EF7               	movlw	-9
 10020  016310  50E3               	movf	plusw1,w,c
 10021  016312  220C               	addwfc	(btemp+11)^0,f,c
 10022  016314  0EFC               	movlw	252
 10023  016316  240B               	addwf	(btemp+10)^0,w,c
 10024  016318  6ED9               	movwf	fsr2l,c
 10025  01631A  0EFF               	movlw	255
 10026  01631C  200C               	addwfc	(btemp+11)^0,w,c
 10027  01631E  6EDA               	movwf	fsr2h,c
 10028  016320  0EF8               	movlw	-8
 10029  016322  006F FF8F FFDF     	movff	plusw1,indf2
 10030                           
 10031                           ;stkvar	_n @ sp[(-4)+-6]
 10032  016328  0EF7               	movlw	-9
 10033  01632A  50E3               	movf	plusw1,w,c
 10034  01632C  E108               	bnz	l11398
 10035  01632E  0EF6               	movlw	-10
 10036  016330  006F FF8C  F001    	movff	plusw1,btemp
 10037  016336  0E09               	movlw	9
 10038  016338  5E01               	subwf	btemp^0,f,c
 10039  01633A  A0D8               	btfss	status,0,c
 10040  01633C  D091               	goto	u10390
 10041  01633E                     l11398:
 10042                           
 10043                           ;stkvar	_s @ sp[(-4)+0]
 10044  01633E  0EFC               	movlw	-4
 10045  016340  006F FF8C  F00B    	movff	plusw1,btemp+10
 10046  016346  1E0B               	comf	(btemp+10)^0,f,c
 10047  016348  0EFD               	movlw	-3
 10048  01634A  006F FF8C  F00C    	movff	plusw1,btemp+11
 10049  016350  1E0C               	comf	(btemp+11)^0,f,c
 10050  016352  2A0B               	incf	(btemp+10)^0,f,c
 10051  016354  B4D8               	btfsc	status,2,c
 10052  016356  2A0C               	incf	(btemp+11)^0,f,c
 10053  016358  0E03               	movlw	3
 10054  01635A  160B               	andwf	(btemp+10)^0,f,c
 10055  01635C  0E00               	movlw	0
 10056  01635E  160C               	andwf	(btemp+11)^0,f,c
 10057                           
 10058                           ;stkvar	_k @ sp[(-4)+2]
 10059  016360  0EFE               	movlw	-2
 10060  016362  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10061  016368  0EFF               	movlw	-1
 10062  01636A  0060  F033  FFE3   	movff	btemp+11,plusw1
 10063                           
 10064                           ;stkvar	_k @ sp[(-4)+2]
 10065                           ;stkvar	_s @ sp[(-4)+0]
 10066  016370  0EFC               	movlw	-4
 10067  016372  50E3               	movf	plusw1,w,c
 10068  016374  6E01               	movwf	btemp^0,c
 10069  016376  0EFE               	movlw	-2
 10070  016378  50E3               	movf	plusw1,w,c
 10071  01637A  2601               	addwf	btemp^0,f,c
 10072  01637C  0EFC               	movlw	-4
 10073  01637E  0060  F007  FFE3   	movff	btemp,plusw1
 10074  016384  0EFD               	movlw	-3
 10075  016386  50E3               	movf	plusw1,w,c
 10076  016388  6E01               	movwf	btemp^0,c
 10077  01638A  0EFF               	movlw	-1
 10078  01638C  50E3               	movf	plusw1,w,c
 10079  01638E  2201               	addwfc	btemp^0,f,c
 10080  016390  0EFD               	movlw	-3
 10081  016392  0060  F007  FFE3   	movff	btemp,plusw1
 10082                           
 10083                           ;stkvar	_k @ sp[(-4)+2]
 10084                           ;stkvar	_n @ sp[(-4)+-6]
 10085  016398  0EF6               	movlw	-10
 10086  01639A  50E3               	movf	plusw1,w,c
 10087  01639C  6E01               	movwf	btemp^0,c
 10088  01639E  0EFE               	movlw	-2
 10089  0163A0  50E3               	movf	plusw1,w,c
 10090  0163A2  5E01               	subwf	btemp^0,f,c
 10091  0163A4  0EF6               	movlw	-10
 10092  0163A6  0060  F007  FFE3   	movff	btemp,plusw1
 10093  0163AC  0EF7               	movlw	-9
 10094  0163AE  50E3               	movf	plusw1,w,c
 10095  0163B0  6E01               	movwf	btemp^0,c
 10096  0163B2  0EFF               	movlw	-1
 10097  0163B4  50E3               	movf	plusw1,w,c
 10098  0163B6  5A01               	subwfb	btemp^0,f,c
 10099  0163B8  0EF7               	movlw	-9
 10100  0163BA  0060  F007  FFE3   	movff	btemp,plusw1
 10101  0163C0  0EFC               	movlw	252
 10102  0163C2  6E0B               	movwf	(btemp+10)^0,c
 10103  0163C4  0EFF               	movlw	255
 10104  0163C6  6E0C               	movwf	(btemp+11)^0,c
 10105                           
 10106                           ;stkvar	_n @ sp[(-4)+-6]
 10107  0163C8  0EF6               	movlw	-10
 10108  0163CA  006F FF8C  F001    	movff	plusw1,btemp
 10109  0163D0  500B               	movf	(btemp+10)^0,w,c
 10110  0163D2  1601               	andwf	btemp^0,f,c
 10111  0163D4  0EF6               	movlw	-10
 10112  0163D6  0060  F007  FFE3   	movff	btemp,plusw1
 10113  0163DC  0EF7               	movlw	-9
 10114  0163DE  006F FF8C  F001    	movff	plusw1,btemp
 10115  0163E4  500C               	movf	(btemp+11)^0,w,c
 10116  0163E6  1601               	andwf	btemp^0,f,c
 10117  0163E8  0EF7               	movlw	-9
 10118  0163EA  D02E               	goto	L4
 10119  0163EC                     l11406:
 10120                           
 10121                           ;stkvar	_c @ sp[(-4)+-4]
 10122                           ;stkvar	_s @ sp[(-4)+0]
 10123  0163EC  0EFC               	movlw	-4
 10124  0163EE  006F FF8F FFD9     	movff	plusw1,fsr2l
 10125  0163F4  0EFD               	movlw	-3
 10126  0163F6  006F FF8F FFDA     	movff	plusw1,fsr2h
 10127  0163FC  0EF8               	movlw	-8
 10128  0163FE  006F FF8F FFDF     	movff	plusw1,indf2
 10129                           
 10130                           ;stkvar	_n @ sp[(-4)+-6]
 10131  016404  0EF6               	movlw	-10
 10132  016406  006F FF8C  F001    	movff	plusw1,btemp
 10133  01640C  0E01               	movlw	1
 10134  01640E  5E01               	subwf	btemp^0,f,c
 10135  016410  0EF6               	movlw	-10
 10136  016412  0060  F007  FFE3   	movff	btemp,plusw1
 10137  016418  0EF7               	movlw	-9
 10138  01641A  006F FF8C  F001    	movff	plusw1,btemp
 10139  016420  0E00               	movlw	0
 10140  016422  5A01               	subwfb	btemp^0,f,c
 10141  016424  0EF7               	movlw	-9
 10142  016426  0060  F007  FFE3   	movff	btemp,plusw1
 10143                           
 10144                           ;stkvar	_s @ sp[(-4)+0]
 10145  01642C  0EFC               	movlw	-4
 10146  01642E  50E3               	movf	plusw1,w,c
 10147  016430  0F01               	addlw	1
 10148  016432  6E01               	movwf	btemp^0,c
 10149  016434  0EFC               	movlw	-4
 10150  016436  0060  F007  FFE3   	movff	btemp,plusw1
 10151  01643C  6A01               	clrf	btemp^0,c
 10152  01643E  0EFD               	movlw	-3
 10153  016440  50E3               	movf	plusw1,w,c
 10154  016442  2001               	addwfc	btemp^0,w,c
 10155  016444  6E01               	movwf	btemp^0,c
 10156  016446  0EFD               	movlw	-3
 10157  016448                     L4:
 10158  016448  0060  F007  FFE3   	movff	btemp,plusw1
 10159                           
 10160                           ;stkvar	_n @ sp[(-4)+-6]
 10161  01644E  0EF6               	movlw	-10
 10162  016450  006F FF8C  F001    	movff	plusw1,btemp
 10163  016456  0EF7               	movlw	-9
 10164  016458  50E3               	movf	plusw1,w,c
 10165  01645A  1001               	iorwf	btemp^0,w,c
 10166  01645C  A4D8               	btfss	status,2,c
 10167  01645E  D7C6               	goto	l11406
 10168  016460                     u10390:
 10169                           
 10170                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 10171  016460  0EF6               	movlw	246
 10172  016462  26E1               	addwf	fsr1l,f,c
 10173  016464  0EFF               	movlw	255
 10174  016466  22E2               	addwfc	fsr1h,f,c
 10175  016468  0012               	return		;funcret
 10176  01646A                     __end_of_memset:
 10177                           	opt callstack 0
 10178                           
 10179 ;; *************** function _printf *****************
 10180 ;; Defined at:
 10181 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 10182 ;; Parameters:    Size  Location     Type
 10183 ;;  fmt             2  [STACK] PTR const unsigned char 
 10184 ;;		 -> STR_36(3), STR_35(3), STR_34(3), 
 10185 ;; Auto vars:     Size  Location     Type
 10186 ;;  ap              2  [STACK] PTR void [1]
 10187 ;;		 -> ?_printf(2), ?_sprintf(2), 
 10188 ;;  ret             2    0        int 
 10189 ;; Return value:  Size  Location     Type
 10190 ;;                  2  [STACK] int 
 10191 ;; Registers used:
 10192 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10193 ;; Tracked objects:
 10194 ;;		On entry : 3F/3B
 10195 ;;		On exit  : 3F/0
 10196 ;;		Unchanged: 0/0
 10197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10202 ;;Total ram usage:        0 bytes
 10203 ;; Hardware stack levels used:    1
 10204 ;; Hardware stack levels required when called:   23
 10205 ;; This function calls:
 10206 ;;		_vfprintf
 10207 ;; This function is called by:
 10208 ;;		_eaDogM_WriteString
 10209 ;;		_send_lcd_cmd_dma
 10210 ;; This function uses a reentrant model
 10211 ;;
 10212                           
 10213                           	psect	text43
 10214  01A1CC                     __ptext43:
 10215                           	opt callstack 0
 10216  01A1CC                     _printf:
 10217                           	opt callstack 0
 10218                           
 10219                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10220  01A1CC  52E6               	movf	postinc1,f,c
 10221  01A1CE  52E6               	movf	postinc1,f,c
 10222                           
 10223                           ;stkvar	?_printf @ sp[(-2)+-3]
 10224                           
 10225                           ;incstack = 0
 10226  01A1D0  0EFB               	movlw	251
 10227  01A1D2  24E1               	addwf	fsr1l,w,c
 10228  01A1D4  6E0B               	movwf	(btemp+10)^0,c
 10229  01A1D6  0EFF               	movlw	255
 10230  01A1D8  20E2               	addwfc	fsr1h,w,c
 10231  01A1DA  6E0C               	movwf	(btemp+11)^0,c
 10232                           
 10233                           ;stkvar	_ap @ sp[(-2)+0]
 10234  01A1DC  0EFF               	movlw	-1
 10235  01A1DE  0060  F033  FFE3   	movff	btemp+11,plusw1
 10236  01A1E4  0EFE               	movlw	-2
 10237  01A1E6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10238                           
 10239                           ;stkvar	_ap @ sp[(-2)+0]
 10240  01A1EC  0EFE               	movlw	254
 10241  01A1EE  24E1               	addwf	fsr1l,w,c
 10242  01A1F0  6E01               	movwf	btemp^0,c
 10243  01A1F2  0EFF               	movlw	255
 10244  01A1F4  20E2               	addwfc	fsr1h,w,c
 10245  01A1F6  6E02               	movwf	(btemp+1)^0,c
 10246  01A1F8  0060  F007  FFE6   	movff	btemp,postinc1
 10247  01A1FE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10248                           
 10249                           ;stkvar	_fmt @ sp[(-4)+-3]
 10250  01A204  0EF9               	movlw	-7
 10251  01A206  006F FF8F FFE6     	movff	plusw1,postinc1
 10252  01A20C  006F FF8F FFE6     	movff	plusw1,postinc1
 10253  01A212  0E00               	movlw	0
 10254  01A214  6EE6               	movwf	postinc1,c
 10255  01A216  0E00               	movlw	0
 10256  01A218  6EE6               	movwf	postinc1,c
 10257  01A21A  EC1D  F0CC         	call	_vfprintf	;wreg free
 10258                           
 10259                           ; BSR set to: 0
 10260                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 10261  01A21E  52E5               	movf	postdec1,f,c
 10262  01A220  52E5               	movf	postdec1,f,c
 10263  01A222  52E5               	movf	postdec1,f,c
 10264  01A224  50E7               	movf	indf1,w,c
 10265  01A226  5EE1               	subwf	fsr1l,f,c
 10266  01A228  0E00               	movlw	0
 10267  01A22A  5AE2               	subwfb	fsr1h,f,c
 10268  01A22C  0012               	return		;funcret
 10269  01A22E                     __end_of_printf:
 10270                           	opt callstack 0
 10271                           
 10272 ;; *************** function _vfprintf *****************
 10273 ;; Defined at:
 10274 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10275 ;; Parameters:    Size  Location     Type
 10276 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10277 ;;		 -> f(6), NULL(0), 
 10278 ;;  fmt             2  [STACK] PTR const unsigned char 
 10279 ;;		 -> STR_56(85), STR_54(3), STR_53(3), STR_52(19), 
 10280 ;;		 -> STR_51(19), STR_50(19), STR_49(19), STR_48(19), 
 10281 ;;		 -> STR_47(19), STR_46(24), STR_45(15), STR_44(15), 
 10282 ;;		 -> STR_43(15), STR_42(10), STR_41(10), STR_40(19), 
 10283 ;;		 -> STR_39(19), STR_36(3), STR_35(3), STR_34(3), 
 10284 ;;		 -> STR_33(17), STR_32(16), STR_31(16), STR_30(20), 
 10285 ;;		 -> STR_29(20), STR_28(19), STR_27(19), STR_26(19), 
 10286 ;;		 -> STR_25(19), STR_24(19), STR_23(19), STR_22(19), 
 10287 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 10288 ;;		 -> STR_17(26), STR_16(22), STR_15(17), STR_14(17), 
 10289 ;;		 -> STR_13(17), STR_12(17), STR_11(22), STR_10(22), 
 10290 ;;		 -> STR_9(23), STR_8(18), STR_7(17), STR_6(17), 
 10291 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 10292 ;;  ap              2  [STACK] PTR PTR void 
 10293 ;;		 -> ap(2), ap(2), 
 10294 ;; Auto vars:     Size  Location     Type
 10295 ;;  cfmt            2  [STACK] PTR unsigned char 
 10296 ;;		 -> STR_56(85), STR_54(3), STR_53(3), STR_52(19), 
 10297 ;;		 -> STR_51(19), STR_50(19), STR_49(19), STR_48(19), 
 10298 ;;		 -> STR_47(19), STR_46(24), STR_45(15), STR_44(15), 
 10299 ;;		 -> STR_43(15), STR_42(10), STR_41(10), STR_40(19), 
 10300 ;;		 -> STR_39(19), STR_36(3), STR_35(3), STR_34(3), 
 10301 ;;		 -> STR_33(17), STR_32(16), STR_31(16), STR_30(20), 
 10302 ;;		 -> STR_29(20), STR_28(19), STR_27(19), STR_26(19), 
 10303 ;;		 -> STR_25(19), STR_24(19), STR_23(19), STR_22(19), 
 10304 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 10305 ;;		 -> STR_17(26), STR_16(22), STR_15(17), STR_14(17), 
 10306 ;;		 -> STR_13(17), STR_12(17), STR_11(22), STR_10(22), 
 10307 ;;		 -> STR_9(23), STR_8(18), STR_7(17), STR_6(17), 
 10308 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 10309 ;; Return value:  Size  Location     Type
 10310 ;;                  2  [STACK] int 
 10311 ;; Registers used:
 10312 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10313 ;; Tracked objects:
 10314 ;;		On entry : 0/1
 10315 ;;		On exit  : 3F/0
 10316 ;;		Unchanged: 0/0
 10317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10322 ;;Total ram usage:        0 bytes
 10323 ;; Hardware stack levels used:    1
 10324 ;; Hardware stack levels required when called:   22
 10325 ;; This function calls:
 10326 ;;		_vfpfcnvrt
 10327 ;; This function is called by:
 10328 ;;		_sprintf
 10329 ;;		_printf
 10330 ;; This function uses a reentrant model
 10331 ;;
 10332                           
 10333                           	psect	text44
 10334  01983A                     __ptext44:
 10335                           	opt callstack 0
 10336  01983A                     _vfprintf:
 10337                           	opt callstack 0
 10338                           
 10339                           ; BSR set to: 0
 10340                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10341  01983A  52E6               	movf	postinc1,f,c
 10342  01983C  52E6               	movf	postinc1,f,c
 10343                           
 10344                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 10345                           ;stkvar	_fmt @ sp[(-2)+-4]
 10346                           
 10347                           ;incstack = 0
 10348 ;; hardware stack exceeded
 10349  01983E  0EFA               	movlw	-6
 10350  019840  006F FF8C  F00B    	movff	plusw1,btemp+10
 10351  019846  0EFB               	movlw	-5
 10352  019848  006F FF8C  F00C    	movff	plusw1,btemp+11
 10353                           
 10354                           ;stkvar	_cfmt @ sp[(-2)+0]
 10355  01984E  0EFF               	movlw	-1
 10356  019850  0060  F033  FFE3   	movff	btemp+11,plusw1
 10357  019856  0EFE               	movlw	-2
 10358  019858  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10359                           
 10360                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 10361  01985E  0100               	movlb	0	; () banked
 10362  019860  6BC0               	clrf	_nout& (0+255),b
 10363  019862  6BC1               	clrf	(_nout+1)& (0+255),b
 10364                           
 10365                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 10366  019864  D021               	goto	l12230
 10367  019866                     l12228:
 10368                           
 10369                           ; BSR set to: 0
 10370                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 10371                           ;stkvar	_ap @ sp[(-2)+-6]
 10372  019866  0EF8               	movlw	-8
 10373  019868  006F FF8F FFE6     	movff	plusw1,postinc1
 10374  01986E  006F FF8F FFE6     	movff	plusw1,postinc1
 10375                           
 10376                           ;stkvar	_cfmt @ sp[(-4)+0]
 10377  019874  0EFC               	movlw	252
 10378  019876  24E1               	addwf	fsr1l,w,c
 10379  019878  6E01               	movwf	btemp^0,c
 10380  01987A  0EFF               	movlw	255
 10381  01987C  20E2               	addwfc	fsr1h,w,c
 10382  01987E  6E02               	movwf	(btemp+1)^0,c
 10383  019880  0060  F007  FFE6   	movff	btemp,postinc1
 10384  019886  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10385                           
 10386                           ;stkvar	_fp @ sp[(-6)+-2]
 10387  01988C  0EF8               	movlw	-8
 10388  01988E  006F FF8F FFE6     	movff	plusw1,postinc1
 10389  019894  006F FF8F FFE6     	movff	plusw1,postinc1
 10390  01989A  EC22  F089         	call	_vfpfcnvrt	;wreg free
 10391  01989E  5001               	movf	btemp^0,w,c
 10392  0198A0  0100               	movlb	0	; () banked
 10393  0198A2  27C0               	addwf	_nout& (0+255),f,b
 10394  0198A4  5002               	movf	(btemp+1)^0,w,c
 10395  0198A6  23C1               	addwfc	(_nout+1)& (0+255),f,b
 10396  0198A8                     l12230:
 10397                           
 10398                           ; BSR set to: 0
 10399                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 10400                           ;stkvar	_cfmt @ sp[(-2)+0]
 10401  0198A8  50E1               	movf	fsr1l,w,c
 10402  0198AA  0FFE               	addlw	-2
 10403  0198AC  6ED9               	movwf	fsr2l,c
 10404  0198AE  50E2               	movf	fsr1h,w,c
 10405  0198B0  6EDA               	movwf	fsr2h,c
 10406  0198B2  0EFF               	movlw	255
 10407  0198B4  22DA               	addwfc	fsr2h,f,c
 10408  0198B6  006F FF7B FFF6     	movff	postinc2,tblptrl
 10409  0198BC  006F FF77 FFF7     	movff	postdec2,tblptrh
 10410  0198C2                     	if	0	;tblptru may be non-zero
 10411  0198C2                     	endif
 10412  0198C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10413  0198C2  0E00               	movlw	low (__mediumconst shr (0+16))
 10414  0198C4  6EF8               	movwf	tblptru,c
 10415  0198C6                     	endif
 10416  0198C6  0008               	tblrd		*
 10417  0198C8  50F5               	movf	tablat,w,c
 10418  0198CA  0900               	iorlw	0
 10419  0198CC  A4D8               	btfss	status,2,c
 10420  0198CE  D7CB               	goto	l12228
 10421                           
 10422                           ; BSR set to: 0
 10423                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 10424  0198D0  0060  F300  F001   	movff	_nout,btemp
 10425  0198D6  0060  F304  F002   	movff	_nout+1,btemp+1
 10426                           
 10427                           ; BSR set to: 0
 10428                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 10429  0198DC  0EF8               	movlw	248
 10430  0198DE  26E1               	addwf	fsr1l,f,c
 10431  0198E0  0EFF               	movlw	255
 10432  0198E2  22E2               	addwfc	fsr1h,f,c
 10433  0198E4  0012               	return		;funcret
 10434  0198E6                     __end_of_vfprintf:
 10435                           	opt callstack 0
 10436                           
 10437 ;; *************** function _vfpfcnvrt *****************
 10438 ;; Defined at:
 10439 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10440 ;; Parameters:    Size  Location     Type
 10441 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10442 ;;		 -> f(6), NULL(0), 
 10443 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 10444 ;;		 -> cfmt(2), 
 10445 ;;  ap              2  [STACK] PTR PTR void 
 10446 ;;		 -> ap(2), ap(2), 
 10447 ;; Auto vars:     Size  Location     Type
 10448 ;;  llu             8  [STACK] unsigned long long 
 10449 ;;  ll              8  [STACK] long long 
 10450 ;;  f               4  [STACK] long long 
 10451 ;;  ct              3  [STACK] unsigned char [3]
 10452 ;;  vp              3    0        PTR void 
 10453 ;;  cp              2  [STACK] PTR unsigned char 
 10454 ;;		 -> ?_printf(2), ?_sprintf(2), STR_38(9), STR_37(12), 
 10455 ;;		 -> D.lcd(288), D(290), T(144), STR_3(6), 
 10456 ;;		 -> V(188), 
 10457 ;;  i               2    0        int 
 10458 ;;  done            2    0        int 
 10459 ;;  c               1  [STACK] unsigned char 
 10460 ;; Return value:  Size  Location     Type
 10461 ;;                  2  [STACK] int 
 10462 ;; Registers used:
 10463 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10464 ;; Tracked objects:
 10465 ;;		On entry : 0/0
 10466 ;;		On exit  : 0/0
 10467 ;;		Unchanged: 0/0
 10468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10473 ;;Total ram usage:        0 bytes
 10474 ;; Hardware stack levels used:    1
 10475 ;; Hardware stack levels required when called:   21
 10476 ;; This function calls:
 10477 ;;		_atoi
 10478 ;;		_ctoa
 10479 ;;		_dtoa
 10480 ;;		_efgtoa
 10481 ;;		_fputc
 10482 ;;		_isdigit
 10483 ;;		_isupper
 10484 ;;		_stoa
 10485 ;;		_strncmp
 10486 ;;		_tolower
 10487 ;;		_utoa
 10488 ;;		_xtoa
 10489 ;; This function is called by:
 10490 ;;		_vfprintf
 10491 ;; This function uses a reentrant model
 10492 ;;
 10493                           
 10494                           	psect	text45
 10495  011244                     __ptext45:
 10496                           	opt callstack 0
 10497  011244                     _vfpfcnvrt:
 10498                           	opt callstack 0
 10499                           
 10500                           ; BSR set to: 0
 10501                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10502  011244  0E20               	movlw	32
 10503  011246  26E1               	addwf	fsr1l,f,c
 10504  011248  0E00               	movlw	0
 10505  01124A  22E2               	addwfc	fsr1h,f,c
 10506                           
 10507                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 10508                           ;stkvar	_fmt @ sp[(-32)+-4]
 10509                           
 10510                           ;incstack = 0
 10511 ;; hardware stack exceeded
 10512  01124C  0EDC               	movlw	-36
 10513  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10514  011254  0EDD               	movlw	-35
 10515  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
 10516  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
 10517  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
 10518  011268                     	if	0	;tblptru may be non-zero
 10519  011268                     	endif
 10520  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10521  011268  0E00               	movlw	low (__mediumconst shr (0+16))
 10522  01126A  6EF8               	movwf	tblptru,c
 10523  01126C                     	endif
 10524  01126C  0008               	tblrd		*
 10525  01126E  50F5               	movf	tablat,w,c
 10526  011270  0A25               	xorlw	37
 10527  011272  A4D8               	btfss	status,2,c
 10528  011274  EFC9  F090         	goto	l12174
 10529                           
 10530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 10531                           ;stkvar	_fmt @ sp[(-32)+-4]
 10532  011278  0EDC               	movlw	-36
 10533  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10534  011280  0EDD               	movlw	-35
 10535  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
 10536  011288  2ADE               	incf	postinc2,f,c
 10537  01128A  0E00               	movlw	0
 10538  01128C  22DD               	addwfc	postdec2,f,c
 10539                           
 10540                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 10541  01128E  6A21               	clrf	_width^0,c
 10542  011290  6A22               	clrf	(_width+1)^0,c
 10543  011292  6A25               	clrf	_flags^0,c
 10544  011294  6A26               	clrf	(_flags+1)^0,c
 10545                           
 10546                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 10547  011296  6823               	setf	_prec^0,c
 10548  011298  6824               	setf	(_prec+1)^0,c
 10549                           
 10550                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 10551                           ;stkvar	_fmt @ sp[(-32)+-4]
 10552  01129A  0EDC               	movlw	-36
 10553  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10554  0112A2  0EDD               	movlw	-35
 10555  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
 10556  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
 10557  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
 10558  0112B6                     	if	0	;tblptru may be non-zero
 10559  0112B6                     	endif
 10560  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10561  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
 10562  0112B8  6EF8               	movwf	tblptru,c
 10563  0112BA                     	endif
 10564  0112BA  0008               	tblrd		*
 10565  0112BC  50F5               	movf	tablat,w,c
 10566  0112BE  0A2A               	xorlw	42
 10567  0112C0  A4D8               	btfss	status,2,c
 10568  0112C2  D031               	goto	l11992
 10569                           
 10570                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 10571                           ;stkvar	_fmt @ sp[(-32)+-4]
 10572  0112C4  0EDC               	movlw	-36
 10573  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
 10574  0112CC  0EDD               	movlw	-35
 10575  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
 10576  0112D4  2ADE               	incf	postinc2,f,c
 10577  0112D6  0E00               	movlw	0
 10578  0112D8  22DD               	addwfc	postdec2,f,c
 10579                           
 10580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 10581                           ;stkvar	_ap @ sp[(-32)+-6]
 10582  0112DA  0EDA               	movlw	-38
 10583  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
 10584  0112E2  0EDB               	movlw	-37
 10585  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
 10586  0112EA  0E02               	movlw	2
 10587  0112EC  5EDE               	subwf	postinc2,f,c
 10588  0112EE  0E00               	movlw	0
 10589  0112F0  5ADD               	subwfb	postdec2,f,c
 10590  0112F2  006F FF78  F00B    	movff	postinc2,btemp+10
 10591  0112F8  006F FF74  F00C    	movff	postdec2,btemp+11
 10592  0112FE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10593  011304  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10594  01130A  006F FF78  F021    	movff	postinc2,_width
 10595  011310  006F FF74  F022    	movff	postdec2,_width+1
 10596                           
 10597                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 10598  011316  AE22               	btfss	(_width+1)^0,7,c
 10599  011318  D066               	goto	u11520
 10600                           
 10601                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 10602  01131A  8025               	bsf	_flags^0,0,c
 10603                           
 10604                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 10605  01131C  6C21               	negf	_width^0,c
 10606  01131E  1E22               	comf	(_width+1)^0,f,c
 10607  011320  B0D8               	btfsc	status,0,c
 10608  011322  2A22               	incf	(_width+1)^0,f,c
 10609  011324  D060               	goto	u11520
 10610  011326                     l11992:
 10611                           
 10612                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 10613                           ;stkvar	_fmt @ sp[(-32)+-4]
 10614  011326  0EDC               	movlw	-36
 10615  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
 10616  01132E  0EDD               	movlw	-35
 10617  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
 10618  011336  006F FF78  F00B    	movff	postinc2,btemp+10
 10619  01133C  006F FF74  F00C    	movff	postdec2,btemp+11
 10620  011342  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10621  011348  0060  F033  FFE6   	movff	btemp+11,postinc1
 10622  01134E  EC39  F0B6         	call	_atoi	;wreg free
 10623  011352  0060  F004  F021   	movff	btemp,_width
 10624  011358  0060  F008  F022   	movff	btemp+1,_width+1
 10625                           
 10626                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 10627  01135E  D00B               	goto	l11996
 10628  011360                     l11994:
 10629                           
 10630                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 10631                           ;stkvar	_fmt @ sp[(-32)+-4]
 10632  011360  0EDC               	movlw	-36
 10633  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
 10634  011368  0EDD               	movlw	-35
 10635  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10636  011370  2ADE               	incf	postinc2,f,c
 10637  011372  0E00               	movlw	0
 10638  011374  22DD               	addwfc	postdec2,f,c
 10639  011376                     l11996:
 10640  011376  0ED0               	movlw	208
 10641  011378  6E0B               	movwf	(btemp+10)^0,c
 10642  01137A  0EFF               	movlw	255
 10643  01137C  6E0C               	movwf	(btemp+11)^0,c
 10644                           
 10645                           ;stkvar	_fmt @ sp[(-32)+-4]
 10646  01137E  0EDC               	movlw	-36
 10647  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
 10648  011386  0EDD               	movlw	-35
 10649  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
 10650  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
 10651  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
 10652  01139A                     	if	0	;tblptru may be non-zero
 10653  01139A                     	endif
 10654  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10655  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
 10656  01139C  6EF8               	movwf	tblptru,c
 10657  01139E                     	endif
 10658  01139E  0008               	tblrd		*
 10659  0113A0  50F5               	movf	tablat,w,c
 10660  0113A2  6E09               	movwf	(btemp+8)^0,c
 10661  0113A4  6A0A               	clrf	(btemp+9)^0,c
 10662  0113A6  500B               	movf	(btemp+10)^0,w,c
 10663  0113A8  2609               	addwf	(btemp+8)^0,f,c
 10664  0113AA  500C               	movf	(btemp+11)^0,w,c
 10665  0113AC  220A               	addwfc	(btemp+9)^0,f,c
 10666  0113AE  500A               	movf	(btemp+9)^0,w,c
 10667  0113B0  E106               	bnz	u11500
 10668  0113B2  0E0A               	movlw	10
 10669  0113B4  5C09               	subwf	(btemp+8)^0,w,c
 10670  0113B6  B0D8               	btfsc	status,0,c
 10671  0113B8  D002               	goto	u11500
 10672  0113BA  0E01               	movlw	1
 10673  0113BC  D001               	goto	u11510
 10674  0113BE                     u11500:
 10675  0113BE  0E00               	movlw	0
 10676  0113C0                     u11510:
 10677  0113C0  6E0B               	movwf	(btemp+10)^0,c
 10678  0113C2  6A0C               	clrf	(btemp+11)^0,c
 10679                           
 10680                           ;stkvar	_vfpfcnvrt$5363 @ sp[(-32)+4]
 10681  0113C4  0EE4               	movlw	-28
 10682  0113C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10683  0113CC  0EE5               	movlw	-27
 10684  0113CE  0060  F033  FFE3   	movff	btemp+11,plusw1
 10685                           
 10686                           ;stkvar	_vfpfcnvrt$5363 @ sp[(-32)+4]
 10687  0113D4  0EE4               	movlw	-28
 10688  0113D6  006F FF8C  F001    	movff	plusw1,btemp
 10689  0113DC  0EE5               	movlw	-27
 10690  0113DE  50E3               	movf	plusw1,w,c
 10691  0113E0  1001               	iorwf	btemp^0,w,c
 10692  0113E2  A4D8               	btfss	status,2,c
 10693  0113E4  D7BD               	goto	l11994
 10694  0113E6                     u11520:
 10695                           
 10696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 10697                           ;stkvar	_fmt @ sp[(-32)+-4]
 10698  0113E6  0EDC               	movlw	-36
 10699  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
 10700  0113EE  0EDD               	movlw	-35
 10701  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
 10702  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
 10703  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
 10704  011402                     	if	0	;tblptru may be non-zero
 10705  011402                     	endif
 10706  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10707  011402  0E00               	movlw	low (__mediumconst shr (0+16))
 10708  011404  6EF8               	movwf	tblptru,c
 10709  011406                     	endif
 10710  011406  0008               	tblrd		*
 10711  011408  50F5               	movf	tablat,w,c
 10712  01140A  0A2E               	xorlw	46
 10713  01140C  A4D8               	btfss	status,2,c
 10714  01140E  D0AC               	goto	u11570
 10715                           
 10716                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 10717  011410  6A23               	clrf	_prec^0,c
 10718  011412  6A24               	clrf	(_prec+1)^0,c
 10719                           
 10720                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 10721                           ;stkvar	_fmt @ sp[(-32)+-4]
 10722  011414  0EDC               	movlw	-36
 10723  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
 10724  01141C  0EDD               	movlw	-35
 10725  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10726  011424  2ADE               	incf	postinc2,f,c
 10727  011426  0E00               	movlw	0
 10728  011428  22DD               	addwfc	postdec2,f,c
 10729                           
 10730                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 10731                           ;stkvar	_fmt @ sp[(-32)+-4]
 10732  01142A  0EDC               	movlw	-36
 10733  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10734  011432  0EDD               	movlw	-35
 10735  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
 10736  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
 10737  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
 10738  011446                     	if	0	;tblptru may be non-zero
 10739  011446                     	endif
 10740  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10741  011446  0E00               	movlw	low (__mediumconst shr (0+16))
 10742  011448  6EF8               	movwf	tblptru,c
 10743  01144A                     	endif
 10744  01144A  0008               	tblrd		*
 10745  01144C  50F5               	movf	tablat,w,c
 10746  01144E  0A2A               	xorlw	42
 10747  011450  A4D8               	btfss	status,2,c
 10748  011452  D02A               	goto	l12014
 10749                           
 10750                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 10751                           ;stkvar	_fmt @ sp[(-32)+-4]
 10752  011454  0EDC               	movlw	-36
 10753  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
 10754  01145C  0EDD               	movlw	-35
 10755  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10756  011464  2ADE               	incf	postinc2,f,c
 10757  011466  0E00               	movlw	0
 10758  011468  22DD               	addwfc	postdec2,f,c
 10759                           
 10760                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 10761                           ;stkvar	_ap @ sp[(-32)+-6]
 10762  01146A  0EDA               	movlw	-38
 10763  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10764  011472  0EDB               	movlw	-37
 10765  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
 10766  01147A  0E02               	movlw	2
 10767  01147C  5EDE               	subwf	postinc2,f,c
 10768  01147E  0E00               	movlw	0
 10769  011480  5ADD               	subwfb	postdec2,f,c
 10770  011482  006F FF78  F00B    	movff	postinc2,btemp+10
 10771  011488  006F FF74  F00C    	movff	postdec2,btemp+11
 10772  01148E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10773  011494  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10774  01149A  006F FF78  F023    	movff	postinc2,_prec
 10775  0114A0  006F FF74  F024    	movff	postdec2,_prec+1
 10776                           
 10777                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 10778  0114A6  D060               	goto	u11570
 10779  0114A8                     l12014:
 10780                           
 10781                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 10782                           ;stkvar	_fmt @ sp[(-32)+-4]
 10783  0114A8  0EDC               	movlw	-36
 10784  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
 10785  0114B0  0EDD               	movlw	-35
 10786  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
 10787  0114B8  006F FF78  F00B    	movff	postinc2,btemp+10
 10788  0114BE  006F FF74  F00C    	movff	postdec2,btemp+11
 10789  0114C4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10790  0114CA  0060  F033  FFE6   	movff	btemp+11,postinc1
 10791  0114D0  EC39  F0B6         	call	_atoi	;wreg free
 10792  0114D4  0060  F004  F023   	movff	btemp,_prec
 10793  0114DA  0060  F008  F024   	movff	btemp+1,_prec+1
 10794                           
 10795                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 10796  0114E0  D00B               	goto	l12018
 10797  0114E2                     l12016:
 10798                           
 10799                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 10800                           ;stkvar	_fmt @ sp[(-32)+-4]
 10801  0114E2  0EDC               	movlw	-36
 10802  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
 10803  0114EA  0EDD               	movlw	-35
 10804  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
 10805  0114F2  2ADE               	incf	postinc2,f,c
 10806  0114F4  0E00               	movlw	0
 10807  0114F6  22DD               	addwfc	postdec2,f,c
 10808  0114F8                     l12018:
 10809  0114F8  0ED0               	movlw	208
 10810  0114FA  6E0B               	movwf	(btemp+10)^0,c
 10811  0114FC  0EFF               	movlw	255
 10812  0114FE  6E0C               	movwf	(btemp+11)^0,c
 10813                           
 10814                           ;stkvar	_fmt @ sp[(-32)+-4]
 10815  011500  0EDC               	movlw	-36
 10816  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
 10817  011508  0EDD               	movlw	-35
 10818  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10819  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
 10820  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
 10821  01151C                     	if	0	;tblptru may be non-zero
 10822  01151C                     	endif
 10823  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10824  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
 10825  01151E  6EF8               	movwf	tblptru,c
 10826  011520                     	endif
 10827  011520  0008               	tblrd		*
 10828  011522  50F5               	movf	tablat,w,c
 10829  011524  6E09               	movwf	(btemp+8)^0,c
 10830  011526  6A0A               	clrf	(btemp+9)^0,c
 10831  011528  500B               	movf	(btemp+10)^0,w,c
 10832  01152A  2609               	addwf	(btemp+8)^0,f,c
 10833  01152C  500C               	movf	(btemp+11)^0,w,c
 10834  01152E  220A               	addwfc	(btemp+9)^0,f,c
 10835  011530  500A               	movf	(btemp+9)^0,w,c
 10836  011532  E106               	bnz	u11550
 10837  011534  0E0A               	movlw	10
 10838  011536  5C09               	subwf	(btemp+8)^0,w,c
 10839  011538  B0D8               	btfsc	status,0,c
 10840  01153A  D002               	goto	u11550
 10841  01153C  0E01               	movlw	1
 10842  01153E  D001               	goto	u11560
 10843  011540                     u11550:
 10844  011540  0E00               	movlw	0
 10845  011542                     u11560:
 10846  011542  6E0B               	movwf	(btemp+10)^0,c
 10847  011544  6A0C               	clrf	(btemp+11)^0,c
 10848                           
 10849                           ;stkvar	_vfpfcnvrt$5364 @ sp[(-32)+0]
 10850  011546  0EE0               	movlw	-32
 10851  011548  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10852  01154E  0EE1               	movlw	-31
 10853  011550  0060  F033  FFE3   	movff	btemp+11,plusw1
 10854                           
 10855                           ;stkvar	_vfpfcnvrt$5364 @ sp[(-32)+0]
 10856  011556  0EE0               	movlw	-32
 10857  011558  006F FF8C  F001    	movff	plusw1,btemp
 10858  01155E  0EE1               	movlw	-31
 10859  011560  50E3               	movf	plusw1,w,c
 10860  011562  1001               	iorwf	btemp^0,w,c
 10861  011564  A4D8               	btfss	status,2,c
 10862  011566  D7BD               	goto	l12016
 10863  011568                     u11570:
 10864                           
 10865                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 10866                           ;stkvar	_fmt @ sp[(-32)+-4]
 10867  011568  0EDC               	movlw	-36
 10868  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10869  011570  0EDD               	movlw	-35
 10870  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
 10871  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
 10872  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
 10873  011584                     	if	0	;tblptru may be non-zero
 10874  011584                     	endif
 10875  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10876  011584  0E00               	movlw	low (__mediumconst shr (0+16))
 10877  011586  6EF8               	movwf	tblptru,c
 10878  011588                     	endif
 10879  011588  0008               	tblrd		*
 10880  01158A  50F5               	movf	tablat,w,c
 10881  01158C  6EE6               	movwf	postinc1,c
 10882  01158E  0E00               	movlw	0
 10883  011590  6EE6               	movwf	postinc1,c
 10884  011592  EC61  F0CF         	call	_tolower	;wreg free
 10885                           
 10886                           ;stkvar	_ct @ sp[(-32)+26]
 10887  011596  0EFA               	movlw	-6
 10888  011598  0060  F007  FFE3   	movff	btemp,plusw1
 10889                           
 10890                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 10891                           ;stkvar	_ct @ sp[(-32)+26]
 10892  01159E  0EFA               	movlw	-6
 10893  0115A0  50E3               	movf	plusw1,w,c
 10894  0115A2  B4D8               	btfsc	status,2,c
 10895  0115A4  D05B               	goto	l12034
 10896                           
 10897                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 10898                           ;stkvar	_ct @ sp[(-32)+26]
 10899  0115A6  0EFB               	movlw	251
 10900  0115A8  24E1               	addwf	fsr1l,w,c
 10901  0115AA  6ED9               	movwf	fsr2l,c
 10902  0115AC  0EFF               	movlw	255
 10903  0115AE  20E2               	addwfc	fsr1h,w,c
 10904  0115B0  6EDA               	movwf	fsr2h,c
 10905                           
 10906                           ;stkvar	_fmt @ sp[(-32)+-4]
 10907  0115B2  0EDC               	movlw	-36
 10908  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
 10909  0115BA  0EDD               	movlw	-35
 10910  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
 10911  0115C2  006F FFB8  F00B    	movff	postinc0,btemp+10
 10912  0115C8  006F FFB4  F00C    	movff	postdec0,btemp+11
 10913  0115CE  0E01               	movlw	1
 10914  0115D0  260B               	addwf	(btemp+10)^0,f,c
 10915  0115D2  0E00               	movlw	0
 10916  0115D4  220C               	addwfc	(btemp+11)^0,f,c
 10917  0115D6  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 10918  0115DC  0060  F033  FFF7   	movff	btemp+11,tblptrh
 10919  0115E2                     	if	0	;tblptru may be non-zero
 10920  0115E2                     	endif
 10921  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10922  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
 10923  0115E4  6EF8               	movwf	tblptru,c
 10924  0115E6                     	endif
 10925  0115E6  0008               	tblrd		*
 10926  0115E8  50F5               	movf	tablat,w,c
 10927  0115EA  6EE6               	movwf	postinc1,c
 10928  0115EC  0E00               	movlw	0
 10929  0115EE  6EE6               	movwf	postinc1,c
 10930  0115F0  EC61  F0CF         	call	_tolower	;wreg free
 10931  0115F4  5001               	movf	btemp^0,w,c
 10932  0115F6  6EDF               	movwf	indf2,c
 10933                           
 10934                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 10935                           ;stkvar	_ct @ sp[(-32)+26]
 10936  0115F8  0EFB               	movlw	251
 10937  0115FA  24E1               	addwf	fsr1l,w,c
 10938  0115FC  6ED9               	movwf	fsr2l,c
 10939  0115FE  0EFF               	movlw	255
 10940  011600  20E2               	addwfc	fsr1h,w,c
 10941  011602  6EDA               	movwf	fsr2h,c
 10942  011604  50DF               	movf	indf2,w,c
 10943  011606  B4D8               	btfsc	status,2,c
 10944  011608  D029               	goto	l12034
 10945                           
 10946                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 10947                           ;stkvar	_ct @ sp[(-32)+26]
 10948  01160A  0EFC               	movlw	252
 10949  01160C  24E1               	addwf	fsr1l,w,c
 10950  01160E  6ED9               	movwf	fsr2l,c
 10951  011610  0EFF               	movlw	255
 10952  011612  20E2               	addwfc	fsr1h,w,c
 10953  011614  6EDA               	movwf	fsr2h,c
 10954                           
 10955                           ;stkvar	_fmt @ sp[(-32)+-4]
 10956  011616  0EDC               	movlw	-36
 10957  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
 10958  01161E  0EDD               	movlw	-35
 10959  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
 10960  011626  006F FFB8  F00B    	movff	postinc0,btemp+10
 10961  01162C  006F FFB4  F00C    	movff	postdec0,btemp+11
 10962  011632  0E02               	movlw	2
 10963  011634  260B               	addwf	(btemp+10)^0,f,c
 10964  011636  0E00               	movlw	0
 10965  011638  220C               	addwfc	(btemp+11)^0,f,c
 10966  01163A  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 10967  011640  0060  F033  FFF7   	movff	btemp+11,tblptrh
 10968  011646                     	if	0	;tblptru may be non-zero
 10969  011646                     	endif
 10970  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10971  011646  0E00               	movlw	low (__mediumconst shr (0+16))
 10972  011648  6EF8               	movwf	tblptru,c
 10973  01164A                     	endif
 10974  01164A  0008               	tblrd		*
 10975  01164C  50F5               	movf	tablat,w,c
 10976  01164E  6EE6               	movwf	postinc1,c
 10977  011650  0E00               	movlw	0
 10978  011652  6EE6               	movwf	postinc1,c
 10979  011654  EC61  F0CF         	call	_tolower	;wreg free
 10980  011658  5001               	movf	btemp^0,w,c
 10981  01165A  6EDF               	movwf	indf2,c
 10982  01165C                     l12034:
 10983                           
 10984                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 10985                           ;stkvar	_fmt @ sp[(-32)+-4]
 10986  01165C  0EDC               	movlw	-36
 10987  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10988  011664  0EDD               	movlw	-35
 10989  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
 10990  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
 10991  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
 10992  011678                     	if	0	;tblptru may be non-zero
 10993  011678                     	endif
 10994  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10995  011678  0E00               	movlw	low (__mediumconst shr (0+16))
 10996  01167A  6EF8               	movwf	tblptru,c
 10997  01167C                     	endif
 10998  01167C  0008               	tblrd		*
 10999  01167E  50F5               	movf	tablat,w,c
 11000  011680  0A63               	xorlw	99
 11001  011682  A4D8               	btfss	status,2,c
 11002  011684  D037               	goto	l12044
 11003                           
 11004                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 11005                           ;stkvar	_fmt @ sp[(-32)+-4]
 11006  011686  0EDC               	movlw	-36
 11007  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
 11008  01168E  0EDD               	movlw	-35
 11009  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
 11010  011696  2ADE               	incf	postinc2,f,c
 11011  011698  0E00               	movlw	0
 11012  01169A  22DD               	addwfc	postdec2,f,c
 11013                           
 11014                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 11015                           ;stkvar	_ap @ sp[(-32)+-6]
 11016  01169C  0EDA               	movlw	-38
 11017  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
 11018  0116A4  0EDB               	movlw	-37
 11019  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11020  0116AC  0E02               	movlw	2
 11021  0116AE  5EDE               	subwf	postinc2,f,c
 11022  0116B0  0E00               	movlw	0
 11023  0116B2  5ADD               	subwfb	postdec2,f,c
 11024  0116B4  006F FF78  F00B    	movff	postinc2,btemp+10
 11025  0116BA  006F FF74  F00C    	movff	postdec2,btemp+11
 11026  0116C0  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11027  0116C6  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11028  0116CC  50DF               	movf	indf2,w,c
 11029  0116CE  6E0C               	movwf	(btemp+11)^0,c
 11030                           
 11031                           ;stkvar	_c @ sp[(-32)+31]
 11032  0116D0  0EFF               	movlw	-1
 11033  0116D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 11034                           
 11035                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 11036                           ;stkvar	_c @ sp[(-32)+31]
 11037  0116D8  0EFF               	movlw	-1
 11038  0116DA  50E3               	movf	plusw1,w,c
 11039  0116DC  6EE6               	movwf	postinc1,c
 11040                           
 11041                           ;stkvar	_fp @ sp[(-33)+-2]
 11042  0116DE  0EDD               	movlw	-35
 11043  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
 11044  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
 11045  0116EC  ECDB  F0CE         	call	_ctoa	;wreg free
 11046  0116F0  EFF3  F090         	goto	l2328
 11047  0116F4                     l12044:
 11048                           
 11049                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 11050                           ;stkvar	_fmt @ sp[(-32)+-4]
 11051  0116F4  0EDC               	movlw	-36
 11052  0116F6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11053  0116FC  0EDD               	movlw	-35
 11054  0116FE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11055  011704  006F FF7B FFF6     	movff	postinc2,tblptrl
 11056  01170A  006F FF77 FFF7     	movff	postdec2,tblptrh
 11057  011710                     	if	0	;tblptru may be non-zero
 11058  011710                     	endif
 11059  011710                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11060  011710  0E00               	movlw	low (__mediumconst shr (0+16))
 11061  011712  6EF8               	movwf	tblptru,c
 11062  011714                     	endif
 11063  011714  0008               	tblrd		*
 11064  011716  50F5               	movf	tablat,w,c
 11065  011718  0A64               	xorlw	100
 11066  01171A  B4D8               	btfsc	status,2,c
 11067  01171C  D015               	goto	u11620
 11068                           
 11069                           ;stkvar	_fmt @ sp[(-32)+-4]
 11070  01171E  0EDC               	movlw	-36
 11071  011720  006F FF8F FFD9     	movff	plusw1,fsr2l
 11072  011726  0EDD               	movlw	-35
 11073  011728  006F FF8F FFDA     	movff	plusw1,fsr2h
 11074  01172E  006F FF7B FFF6     	movff	postinc2,tblptrl
 11075  011734  006F FF77 FFF7     	movff	postdec2,tblptrh
 11076  01173A                     	if	0	;tblptru may be non-zero
 11077  01173A                     	endif
 11078  01173A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11079  01173A  0E00               	movlw	low (__mediumconst shr (0+16))
 11080  01173C  6EF8               	movwf	tblptru,c
 11081  01173E                     	endif
 11082  01173E  0008               	tblrd		*
 11083  011740  50F5               	movf	tablat,w,c
 11084  011742  0A69               	xorlw	105
 11085  011744  A4D8               	btfss	status,2,c
 11086  011746  D076               	goto	l12056
 11087  011748                     u11620:
 11088                           
 11089                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 11090                           ;stkvar	_fmt @ sp[(-32)+-4]
 11091  011748  0EDC               	movlw	-36
 11092  01174A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11093  011750  0EDD               	movlw	-35
 11094  011752  006F FF8F FFDA     	movff	plusw1,fsr2h
 11095  011758  2ADE               	incf	postinc2,f,c
 11096  01175A  0E00               	movlw	0
 11097  01175C  22DD               	addwfc	postdec2,f,c
 11098                           
 11099                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 11100                           ;stkvar	_ap @ sp[(-32)+-6]
 11101  01175E  0EDA               	movlw	-38
 11102  011760  006F FF8F FFD9     	movff	plusw1,fsr2l
 11103  011766  0EDB               	movlw	-37
 11104  011768  006F FF8F FFDA     	movff	plusw1,fsr2h
 11105  01176E  0E02               	movlw	2
 11106  011770  5EDE               	subwf	postinc2,f,c
 11107  011772  0E00               	movlw	0
 11108  011774  5ADD               	subwfb	postdec2,f,c
 11109  011776  006F FF78  F00B    	movff	postinc2,btemp+10
 11110  01177C  006F FF74  F00C    	movff	postdec2,btemp+11
 11111  011782  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11112  011788  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11113  01178E  006F FF78  F00B    	movff	postinc2,btemp+10
 11114  011794  006F FF74  F00C    	movff	postdec2,btemp+11
 11115                           
 11116                           ;stkvar	_ll @ sp[(-32)+14]
 11117  01179A  0EEE               	movlw	-18
 11118  01179C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11119  0117A2  0EEF               	movlw	-17
 11120  0117A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 11121  0117AA  6A01               	clrf	btemp^0,c
 11122  0117AC  BEE3               	btfsc	plusw1,7,c
 11123  0117AE  6801               	setf	btemp^0,c
 11124  0117B0  0EF0               	movlw	-16
 11125  0117B2  0060  F007  FFE3   	movff	btemp,plusw1
 11126  0117B8  0EF1               	movlw	-15
 11127  0117BA  0060  F007  FFE3   	movff	btemp,plusw1
 11128  0117C0  0EF2               	movlw	-14
 11129  0117C2  0060  F007  FFE3   	movff	btemp,plusw1
 11130  0117C8  0EF3               	movlw	-13
 11131  0117CA  0060  F007  FFE3   	movff	btemp,plusw1
 11132  0117D0  0EF4               	movlw	-12
 11133  0117D2  0060  F007  FFE3   	movff	btemp,plusw1
 11134  0117D8  0EF5               	movlw	-11
 11135  0117DA  0060  F007  FFE3   	movff	btemp,plusw1
 11136  0117E0                     l12052:
 11137                           
 11138                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 11139                           ;stkvar	_ll @ sp[(-32)+14]
 11140  0117E0  50E1               	movf	fsr1l,w,c
 11141  0117E2  0FEE               	addlw	-18
 11142  0117E4  6ED9               	movwf	fsr2l,c
 11143  0117E6  50E2               	movf	fsr1h,w,c
 11144  0117E8  6EDA               	movwf	fsr2h,c
 11145  0117EA  0EFF               	movlw	255
 11146  0117EC  22DA               	addwfc	fsr2h,f,c
 11147  0117EE  006F FF7B FFE6     	movff	postinc2,postinc1
 11148  0117F4  006F FF7B FFE6     	movff	postinc2,postinc1
 11149  0117FA  006F FF7B FFE6     	movff	postinc2,postinc1
 11150  011800  006F FF7B FFE6     	movff	postinc2,postinc1
 11151  011806  006F FF7B FFE6     	movff	postinc2,postinc1
 11152  01180C  006F FF7B FFE6     	movff	postinc2,postinc1
 11153  011812  006F FF7B FFE6     	movff	postinc2,postinc1
 11154  011818  006F FF7B FFE6     	movff	postinc2,postinc1
 11155                           
 11156                           ;stkvar	_fp @ sp[(-40)+-2]
 11157  01181E  0ED6               	movlw	-42
 11158  011820  006F FF8F FFE6     	movff	plusw1,postinc1
 11159  011826  006F FF8F FFE6     	movff	plusw1,postinc1
 11160  01182C  EC7B  F0A7         	call	_dtoa	;wreg free
 11161  011830  EFF3  F090         	goto	l2328
 11162  011834                     l12056:
 11163                           
 11164                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 11165  011834  0E02               	movlw	2
 11166  011836  6EE6               	movwf	postinc1,c
 11167  011838  0E00               	movlw	0
 11168  01183A  6EE6               	movwf	postinc1,c
 11169  01183C  0EEA               	movlw	low STR_65
 11170  01183E  6EE6               	movwf	postinc1,c
 11171  011840  0EFF               	movlw	high STR_65
 11172  011842  6EE6               	movwf	postinc1,c
 11173                           
 11174                           ;stkvar	_fmt @ sp[(-36)+-4]
 11175  011844  0ED8               	movlw	-40
 11176  011846  006F FF8F FFD9     	movff	plusw1,fsr2l
 11177  01184C  0ED9               	movlw	-39
 11178  01184E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11179  011854  006F FF78  F00B    	movff	postinc2,btemp+10
 11180  01185A  006F FF74  F00C    	movff	postdec2,btemp+11
 11181  011860  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11182  011866  0060  F033  FFE6   	movff	btemp+11,postinc1
 11183  01186C  EC93  F0B8         	call	_strncmp	;wreg free
 11184  011870  5001               	movf	btemp^0,w,c
 11185  011872  1002               	iorwf	(btemp+1)^0,w,c
 11186  011874  B4D8               	btfsc	status,2,c
 11187  011876  D022               	goto	u11640
 11188  011878  0E02               	movlw	2
 11189  01187A  6EE6               	movwf	postinc1,c
 11190  01187C  0E00               	movlw	0
 11191  01187E  6EE6               	movwf	postinc1,c
 11192  011880  0EF0               	movlw	low STR_69
 11193  011882  6EE6               	movwf	postinc1,c
 11194  011884  0EFF               	movlw	high STR_69
 11195  011886  6EE6               	movwf	postinc1,c
 11196                           
 11197                           ;stkvar	_fmt @ sp[(-36)+-4]
 11198  011888  0ED8               	movlw	-40
 11199  01188A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11200  011890  0ED9               	movlw	-39
 11201  011892  006F FF8F FFDA     	movff	plusw1,fsr2h
 11202  011898  006F FF78  F00B    	movff	postinc2,btemp+10
 11203  01189E  006F FF74  F00C    	movff	postdec2,btemp+11
 11204  0118A4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11205  0118AA  0060  F033  FFE6   	movff	btemp+11,postinc1
 11206  0118B0  EC93  F0B8         	call	_strncmp	;wreg free
 11207  0118B4  5001               	movf	btemp^0,w,c
 11208  0118B6  1002               	iorwf	(btemp+1)^0,w,c
 11209  0118B8  A4D8               	btfss	status,2,c
 11210  0118BA  D069               	goto	l12068
 11211  0118BC                     u11640:
 11212                           
 11213                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 11214                           ;stkvar	_fmt @ sp[(-32)+-4]
 11215  0118BC  0EDC               	movlw	-36
 11216  0118BE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11217  0118C4  0EDD               	movlw	-35
 11218  0118C6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11219  0118CC  0E02               	movlw	2
 11220  0118CE  26DE               	addwf	postinc2,f,c
 11221  0118D0  0E00               	movlw	0
 11222  0118D2  22DD               	addwfc	postdec2,f,c
 11223                           
 11224                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 11225                           ;stkvar	_ap @ sp[(-32)+-6]
 11226  0118D4  0EDA               	movlw	-38
 11227  0118D6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11228  0118DC  0EDB               	movlw	-37
 11229  0118DE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11230  0118E4  0E04               	movlw	4
 11231  0118E6  5EDE               	subwf	postinc2,f,c
 11232  0118E8  0E00               	movlw	0
 11233  0118EA  5ADD               	subwfb	postdec2,f,c
 11234  0118EC  006F FF78  F00B    	movff	postinc2,btemp+10
 11235  0118F2  006F FF74  F00C    	movff	postdec2,btemp+11
 11236  0118F8  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11237  0118FE  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11238  011904  006F FF78  F009    	movff	postinc2,btemp+8
 11239  01190A  006F FF78  F00A    	movff	postinc2,btemp+9
 11240  011910  006F FF78  F00B    	movff	postinc2,btemp+10
 11241  011916  006F FF78  F00C    	movff	postinc2,btemp+11
 11242  01191C  0060  F024  F011   	movff	btemp+8,btemp+16
 11243  011922  0060  F028  F012   	movff	btemp+9,btemp+17
 11244  011928  0060  F02C  F013   	movff	btemp+10,btemp+18
 11245  01192E  0060  F030  F014   	movff	btemp+11,btemp+19
 11246  011934  6A15               	clrf	(btemp+20)^0,c
 11247  011936  BE14               	btfsc	(btemp+19)^0,7,c
 11248  011938  6815               	setf	(btemp+20)^0,c
 11249  01193A  0060  F054  F016   	movff	btemp+20,btemp+21
 11250  011940  0060  F054  F017   	movff	btemp+20,btemp+22
 11251  011946  0060  F054  F018   	movff	btemp+20,btemp+23
 11252                           
 11253                           ;stkvar	_ll @ sp[(-32)+14]
 11254  01194C  0EEE               	movlw	-18
 11255  01194E  0060  F047  FFE3   	movff	btemp+16,plusw1
 11256  011954  0EEF               	movlw	-17
 11257  011956  0060  F04B  FFE3   	movff	btemp+17,plusw1
 11258  01195C  0EF0               	movlw	-16
 11259  01195E  0060  F04F  FFE3   	movff	btemp+18,plusw1
 11260  011964  0EF1               	movlw	-15
 11261  011966  0060  F053  FFE3   	movff	btemp+19,plusw1
 11262  01196C  0EF2               	movlw	-14
 11263  01196E  0060  F057  FFE3   	movff	btemp+20,plusw1
 11264  011974  0EF3               	movlw	-13
 11265  011976  0060  F05B  FFE3   	movff	btemp+21,plusw1
 11266  01197C  0EF4               	movlw	-12
 11267  01197E  0060  F05F  FFE3   	movff	btemp+22,plusw1
 11268  011984  0EF5               	movlw	-11
 11269  011986  0060  F063  FFE3   	movff	btemp+23,plusw1
 11270  01198C  D729               	goto	l12052
 11271  01198E                     l12068:
 11272                           
 11273                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 11274                           ;stkvar	_ct @ sp[(-32)+26]
 11275  01198E  0EFA               	movlw	-6
 11276  011990  006F FF8C  F001    	movff	plusw1,btemp
 11277  011996  0E66               	movlw	102
 11278  011998  1801               	xorwf	btemp^0,w,c
 11279  01199A  A4D8               	btfss	status,2,c
 11280  01199C  D06E               	goto	l12080
 11281                           
 11282                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 11283                           ;stkvar	_fmt @ sp[(-32)+-4]
 11284  01199E  0EDC               	movlw	-36
 11285  0119A0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11286  0119A6  0EDD               	movlw	-35
 11287  0119A8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11288  0119AE  006F FF7B FFF6     	movff	postinc2,tblptrl
 11289  0119B4  006F FF77 FFF7     	movff	postdec2,tblptrh
 11290  0119BA                     	if	0	;tblptru may be non-zero
 11291  0119BA                     	endif
 11292  0119BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11293  0119BA  0E00               	movlw	low (__mediumconst shr (0+16))
 11294  0119BC  6EF8               	movwf	tblptru,c
 11295  0119BE                     	endif
 11296                           
 11297                           ;stkvar	_c @ sp[(-32)+31]
 11298  0119BE  0008               	tblrd		*
 11299  0119C0  0EFF               	movlw	-1
 11300  0119C2  006F FFD7 FFE3     	movff	tablat,plusw1
 11301                           
 11302                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 11303                           ;stkvar	_fmt @ sp[(-32)+-4]
 11304  0119C8  0EDC               	movlw	-36
 11305  0119CA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11306  0119D0  0EDD               	movlw	-35
 11307  0119D2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11308  0119D8  2ADE               	incf	postinc2,f,c
 11309  0119DA  0E00               	movlw	0
 11310  0119DC  22DD               	addwfc	postdec2,f,c
 11311                           
 11312                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 11313                           ;stkvar	_ap @ sp[(-32)+-6]
 11314  0119DE  0EDA               	movlw	-38
 11315  0119E0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11316  0119E6  0EDB               	movlw	-37
 11317  0119E8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11318  0119EE  0E04               	movlw	4
 11319  0119F0  5EDE               	subwf	postinc2,f,c
 11320  0119F2  0E00               	movlw	0
 11321  0119F4  5ADD               	subwfb	postdec2,f,c
 11322  0119F6  006F FF78  F00B    	movff	postinc2,btemp+10
 11323  0119FC  006F FF74  F00C    	movff	postdec2,btemp+11
 11324  011A02  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11325  011A08  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11326  011A0E  006F FF78  F009    	movff	postinc2,btemp+8
 11327  011A14  006F FF78  F00A    	movff	postinc2,btemp+9
 11328  011A1A  006F FF78  F00B    	movff	postinc2,btemp+10
 11329  011A20  006F FF78  F00C    	movff	postinc2,btemp+11
 11330                           
 11331                           ;stkvar	_f @ sp[(-32)+22]
 11332  011A26  0EF6               	movlw	-10
 11333  011A28  0060  F027  FFE3   	movff	btemp+8,plusw1
 11334  011A2E  0EF7               	movlw	-9
 11335  011A30  0060  F02B  FFE3   	movff	btemp+9,plusw1
 11336  011A36  0EF8               	movlw	-8
 11337  011A38  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11338  011A3E  0EF9               	movlw	-7
 11339  011A40  0060  F033  FFE3   	movff	btemp+11,plusw1
 11340  011A46                     l12076:
 11341                           
 11342                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 11343                           ;stkvar	_c @ sp[(-32)+31]
 11344  011A46  0EFF               	movlw	-1
 11345  011A48  50E3               	movf	plusw1,w,c
 11346  011A4A  6EE6               	movwf	postinc1,c
 11347                           
 11348                           ;stkvar	_f @ sp[(-33)+22]
 11349  011A4C  0EF5               	movlw	-11
 11350  011A4E  006F FF8F FFE6     	movff	plusw1,postinc1
 11351  011A54  006F FF8F FFE6     	movff	plusw1,postinc1
 11352  011A5A  006F FF8F FFE6     	movff	plusw1,postinc1
 11353  011A60  006F FF8F FFE6     	movff	plusw1,postinc1
 11354                           
 11355                           ;stkvar	_fp @ sp[(-37)+-2]
 11356  011A66  0ED9               	movlw	-39
 11357  011A68  006F FF8F FFE6     	movff	plusw1,postinc1
 11358  011A6E  006F FF8F FFE6     	movff	plusw1,postinc1
 11359  011A74  EC00  F080         	call	_efgtoa	;wreg free
 11360  011A78  D3B6               	goto	l2328
 11361  011A7A                     l12080:
 11362                           
 11363                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 11364  011A7A  0E02               	movlw	2
 11365  011A7C  6EE6               	movwf	postinc1,c
 11366  011A7E  0E00               	movlw	0
 11367  011A80  6EE6               	movwf	postinc1,c
 11368  011A82  0EED               	movlw	low STR_74
 11369  011A84  6EE6               	movwf	postinc1,c
 11370  011A86  0EFF               	movlw	high STR_74
 11371  011A88  6EE6               	movwf	postinc1,c
 11372                           
 11373                           ;stkvar	_ct @ sp[(-36)+26]
 11374  011A8A  0EF6               	movlw	246
 11375  011A8C  24E1               	addwf	fsr1l,w,c
 11376  011A8E  6E01               	movwf	btemp^0,c
 11377  011A90  0EFF               	movlw	255
 11378  011A92  20E2               	addwfc	fsr1h,w,c
 11379  011A94  6E02               	movwf	(btemp+1)^0,c
 11380  011A96  0060  F007  FFE6   	movff	btemp,postinc1
 11381  011A9C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11382  011AA2  EC93  F0B8         	call	_strncmp	;wreg free
 11383  011AA6  5001               	movf	btemp^0,w,c
 11384  011AA8  1002               	iorwf	(btemp+1)^0,w,c
 11385  011AAA  A4D8               	btfss	status,2,c
 11386  011AAC  D096               	goto	l12100
 11387                           
 11388                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 11389                           ;stkvar	_fmt @ sp[(-32)+-4]
 11390  011AAE  0EDC               	movlw	-36
 11391  011AB0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11392  011AB6  0EDD               	movlw	-35
 11393  011AB8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11394  011ABE  006F FF78  F00B    	movff	postinc2,btemp+10
 11395  011AC4  006F FF74  F00C    	movff	postdec2,btemp+11
 11396  011ACA  0E01               	movlw	1
 11397  011ACC  260B               	addwf	(btemp+10)^0,f,c
 11398  011ACE  0E00               	movlw	0
 11399  011AD0  220C               	addwfc	(btemp+11)^0,f,c
 11400  011AD2  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 11401  011AD8  0060  F033  FFF7   	movff	btemp+11,tblptrh
 11402  011ADE                     	if	0	;tblptru may be non-zero
 11403  011ADE                     	endif
 11404  011ADE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11405  011ADE  0E00               	movlw	low (__mediumconst shr (0+16))
 11406  011AE0  6EF8               	movwf	tblptru,c
 11407  011AE2                     	endif
 11408                           
 11409                           ;stkvar	_c @ sp[(-32)+31]
 11410  011AE2  0008               	tblrd		*
 11411  011AE4  0EFF               	movlw	-1
 11412  011AE6  006F FFD7 FFE3     	movff	tablat,plusw1
 11413  011AEC  0EBF               	movlw	191
 11414  011AEE  6E0B               	movwf	(btemp+10)^0,c
 11415  011AF0  0EFF               	movlw	255
 11416  011AF2  6E0C               	movwf	(btemp+11)^0,c
 11417                           
 11418                           ;stkvar	_fmt @ sp[(-32)+-4]
 11419  011AF4  0EDC               	movlw	-36
 11420  011AF6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11421  011AFC  0EDD               	movlw	-35
 11422  011AFE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11423  011B04  006F FF7B FFF6     	movff	postinc2,tblptrl
 11424  011B0A  006F FF77 FFF7     	movff	postdec2,tblptrh
 11425  011B10                     	if	0	;tblptru may be non-zero
 11426  011B10                     	endif
 11427  011B10                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11428  011B10  0E00               	movlw	low (__mediumconst shr (0+16))
 11429  011B12  6EF8               	movwf	tblptru,c
 11430  011B14                     	endif
 11431  011B14  0008               	tblrd		*
 11432  011B16  50F5               	movf	tablat,w,c
 11433  011B18  6E09               	movwf	(btemp+8)^0,c
 11434  011B1A  6A0A               	clrf	(btemp+9)^0,c
 11435  011B1C  500B               	movf	(btemp+10)^0,w,c
 11436  011B1E  2609               	addwf	(btemp+8)^0,f,c
 11437  011B20  500C               	movf	(btemp+11)^0,w,c
 11438  011B22  220A               	addwfc	(btemp+9)^0,f,c
 11439  011B24  500A               	movf	(btemp+9)^0,w,c
 11440  011B26  E106               	bnz	u11670
 11441  011B28  0E1A               	movlw	26
 11442  011B2A  5C09               	subwf	(btemp+8)^0,w,c
 11443  011B2C  B0D8               	btfsc	status,0,c
 11444  011B2E  D002               	goto	u11670
 11445  011B30  0E01               	movlw	1
 11446  011B32  D001               	goto	u11680
 11447  011B34                     u11670:
 11448  011B34  0E00               	movlw	0
 11449  011B36                     u11680:
 11450  011B36  6E0B               	movwf	(btemp+10)^0,c
 11451  011B38  6A0C               	clrf	(btemp+11)^0,c
 11452                           
 11453                           ;stkvar	_vfpfcnvrt$5375 @ sp[(-32)+2]
 11454  011B3A  0EE2               	movlw	-30
 11455  011B3C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11456  011B42  0EE3               	movlw	-29
 11457  011B44  0060  F033  FFE3   	movff	btemp+11,plusw1
 11458                           
 11459                           ;stkvar	_vfpfcnvrt$5375 @ sp[(-32)+2]
 11460  011B4A  0EE2               	movlw	-30
 11461  011B4C  006F FF8C  F001    	movff	plusw1,btemp
 11462  011B52  0EE3               	movlw	-29
 11463  011B54  50E3               	movf	plusw1,w,c
 11464  011B56  1001               	iorwf	btemp^0,w,c
 11465                           
 11466                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 11467                           ;stkvar	_ap @ sp[(-32)+-6]
 11468                           
 11469                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 11470                           
 11471                           ;stkvar	_f @ sp[(-32)+22]
 11472                           
 11473                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 11474                           ;stkvar	_ap @ sp[(-32)+-6]
 11475  011B58  0EDA               	movlw	-38
 11476  011B5A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11477  011B60  0EDB               	movlw	-37
 11478  011B62  006F FF8F FFDA     	movff	plusw1,fsr2h
 11479  011B68  0E04               	movlw	4
 11480  011B6A  5EDE               	subwf	postinc2,f,c
 11481  011B6C  0E00               	movlw	0
 11482  011B6E  5ADD               	subwfb	postdec2,f,c
 11483  011B70  006F FF78  F00B    	movff	postinc2,btemp+10
 11484  011B76  006F FF74  F00C    	movff	postdec2,btemp+11
 11485  011B7C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11486  011B82  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11487  011B88  006F FF78  F009    	movff	postinc2,btemp+8
 11488  011B8E  006F FF78  F00A    	movff	postinc2,btemp+9
 11489  011B94  006F FF78  F00B    	movff	postinc2,btemp+10
 11490  011B9A  006F FF78  F00C    	movff	postinc2,btemp+11
 11491                           
 11492                           ;stkvar	_f @ sp[(-32)+22]
 11493  011BA0  0EF6               	movlw	-10
 11494  011BA2  0060  F027  FFE3   	movff	btemp+8,plusw1
 11495  011BA8  0EF7               	movlw	-9
 11496  011BAA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 11497  011BB0  0EF8               	movlw	-8
 11498  011BB2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11499  011BB8  0EF9               	movlw	-7
 11500  011BBA  0060  F033  FFE3   	movff	btemp+11,plusw1
 11501                           
 11502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 11503                           ;stkvar	_fmt @ sp[(-32)+-4]
 11504  011BC0  0EDC               	movlw	-36
 11505  011BC2  006F FF8F FFD9     	movff	plusw1,fsr2l
 11506  011BC8  0EDD               	movlw	-35
 11507  011BCA  006F FF8F FFDA     	movff	plusw1,fsr2h
 11508  011BD0  0E02               	movlw	2
 11509  011BD2  26DE               	addwf	postinc2,f,c
 11510  011BD4  0E00               	movlw	0
 11511  011BD6  22DD               	addwfc	postdec2,f,c
 11512  011BD8  D736               	goto	l12076
 11513  011BDA                     l12100:
 11514                           
 11515                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 11516                           ;stkvar	_fmt @ sp[(-32)+-4]
 11517  011BDA  0EDC               	movlw	-36
 11518  011BDC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11519  011BE2  0EDD               	movlw	-35
 11520  011BE4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11521  011BEA  006F FF7B FFF6     	movff	postinc2,tblptrl
 11522  011BF0  006F FF77 FFF7     	movff	postdec2,tblptrh
 11523  011BF6                     	if	0	;tblptru may be non-zero
 11524  011BF6                     	endif
 11525  011BF6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11526  011BF6  0E00               	movlw	low (__mediumconst shr (0+16))
 11527  011BF8  6EF8               	movwf	tblptru,c
 11528  011BFA                     	endif
 11529  011BFA  0008               	tblrd		*
 11530  011BFC  50F5               	movf	tablat,w,c
 11531  011BFE  0A73               	xorlw	115
 11532  011C00  A4D8               	btfss	status,2,c
 11533  011C02  D042               	goto	l12110
 11534                           
 11535                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 11536                           ;stkvar	_fmt @ sp[(-32)+-4]
 11537  011C04  0EDC               	movlw	-36
 11538  011C06  006F FF8F FFD9     	movff	plusw1,fsr2l
 11539  011C0C  0EDD               	movlw	-35
 11540  011C0E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11541  011C14  2ADE               	incf	postinc2,f,c
 11542  011C16  0E00               	movlw	0
 11543  011C18  22DD               	addwfc	postdec2,f,c
 11544                           
 11545                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 11546                           ;stkvar	_ap @ sp[(-32)+-6]
 11547  011C1A  0EDA               	movlw	-38
 11548  011C1C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11549  011C22  0EDB               	movlw	-37
 11550  011C24  006F FF8F FFDA     	movff	plusw1,fsr2h
 11551  011C2A  0E02               	movlw	2
 11552  011C2C  5EDE               	subwf	postinc2,f,c
 11553  011C2E  0E00               	movlw	0
 11554  011C30  5ADD               	subwfb	postdec2,f,c
 11555  011C32  006F FF78  F00B    	movff	postinc2,btemp+10
 11556  011C38  006F FF74  F00C    	movff	postdec2,btemp+11
 11557  011C3E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11558  011C44  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11559  011C4A  006F FF78  F00B    	movff	postinc2,btemp+10
 11560  011C50  006F FF74  F00C    	movff	postdec2,btemp+11
 11561                           
 11562                           ;stkvar	_cp @ sp[(-32)+29]
 11563  011C56  0EFE               	movlw	-2
 11564  011C58  0060  F033  FFE3   	movff	btemp+11,plusw1
 11565  011C5E  0EFD               	movlw	-3
 11566  011C60  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11567                           
 11568                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 11569                           ;stkvar	_cp @ sp[(-32)+29]
 11570  011C66  0EFD               	movlw	-3
 11571  011C68  006F FF8F FFE6     	movff	plusw1,postinc1
 11572  011C6E  006F FF8F FFE6     	movff	plusw1,postinc1
 11573                           
 11574                           ;stkvar	_fp @ sp[(-34)+-2]
 11575  011C74  0EDC               	movlw	-36
 11576  011C76  006F FF8F FFE6     	movff	plusw1,postinc1
 11577  011C7C  006F FF8F FFE6     	movff	plusw1,postinc1
 11578  011C82  EC9A  F0B3         	call	_stoa	;wreg free
 11579  011C86  D2AF               	goto	l2328
 11580  011C88                     l12110:
 11581                           
 11582                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 11583                           ;stkvar	_fmt @ sp[(-32)+-4]
 11584  011C88  0EDC               	movlw	-36
 11585  011C8A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11586  011C90  0EDD               	movlw	-35
 11587  011C92  006F FF8F FFDA     	movff	plusw1,fsr2h
 11588  011C98  006F FF7B FFF6     	movff	postinc2,tblptrl
 11589  011C9E  006F FF77 FFF7     	movff	postdec2,tblptrh
 11590  011CA4                     	if	0	;tblptru may be non-zero
 11591  011CA4                     	endif
 11592  011CA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11593  011CA4  0E00               	movlw	low (__mediumconst shr (0+16))
 11594  011CA6  6EF8               	movwf	tblptru,c
 11595  011CA8                     	endif
 11596  011CA8  0008               	tblrd		*
 11597  011CAA  50F5               	movf	tablat,w,c
 11598  011CAC  0A75               	xorlw	117
 11599  011CAE  A4D8               	btfss	status,2,c
 11600  011CB0  D07C               	goto	l12120
 11601                           
 11602                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 11603                           ;stkvar	_fmt @ sp[(-32)+-4]
 11604  011CB2  0EDC               	movlw	-36
 11605  011CB4  006F FF8F FFD9     	movff	plusw1,fsr2l
 11606  011CBA  0EDD               	movlw	-35
 11607  011CBC  006F FF8F FFDA     	movff	plusw1,fsr2h
 11608  011CC2  2ADE               	incf	postinc2,f,c
 11609  011CC4  0E00               	movlw	0
 11610  011CC6  22DD               	addwfc	postdec2,f,c
 11611                           
 11612                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 11613                           ;stkvar	_ap @ sp[(-32)+-6]
 11614  011CC8  0EDA               	movlw	-38
 11615  011CCA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11616  011CD0  0EDB               	movlw	-37
 11617  011CD2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11618  011CD8  0E02               	movlw	2
 11619  011CDA  5EDE               	subwf	postinc2,f,c
 11620  011CDC  0E00               	movlw	0
 11621  011CDE  5ADD               	subwfb	postdec2,f,c
 11622  011CE0  006F FF78  F00B    	movff	postinc2,btemp+10
 11623  011CE6  006F FF74  F00C    	movff	postdec2,btemp+11
 11624  011CEC  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11625  011CF2  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11626  011CF8  006F FF78  F00B    	movff	postinc2,btemp+10
 11627  011CFE  006F FF74  F00C    	movff	postdec2,btemp+11
 11628  011D04  500B               	movf	(btemp+10)^0,w,c
 11629  011D06  6E11               	movwf	(btemp+16)^0,c
 11630  011D08  500C               	movf	(btemp+11)^0,w,c
 11631  011D0A  6E12               	movwf	(btemp+17)^0,c
 11632  011D0C  6A13               	clrf	(btemp+18)^0,c
 11633  011D0E  6A14               	clrf	(btemp+19)^0,c
 11634  011D10  6A15               	clrf	(btemp+20)^0,c
 11635  011D12  6A16               	clrf	(btemp+21)^0,c
 11636  011D14  6A17               	clrf	(btemp+22)^0,c
 11637  011D16  6A18               	clrf	(btemp+23)^0,c
 11638                           
 11639                           ;stkvar	_llu @ sp[(-32)+6]
 11640  011D18  0EE6               	movlw	-26
 11641  011D1A  0060  F047  FFE3   	movff	btemp+16,plusw1
 11642  011D20  0EE7               	movlw	-25
 11643  011D22  0060  F04B  FFE3   	movff	btemp+17,plusw1
 11644  011D28  0EE8               	movlw	-24
 11645  011D2A  0060  F04F  FFE3   	movff	btemp+18,plusw1
 11646  011D30  0EE9               	movlw	-23
 11647  011D32  0060  F053  FFE3   	movff	btemp+19,plusw1
 11648  011D38  0EEA               	movlw	-22
 11649  011D3A  0060  F057  FFE3   	movff	btemp+20,plusw1
 11650  011D40  0EEB               	movlw	-21
 11651  011D42  0060  F05B  FFE3   	movff	btemp+21,plusw1
 11652  011D48  0EEC               	movlw	-20
 11653  011D4A  0060  F05F  FFE3   	movff	btemp+22,plusw1
 11654  011D50  0EED               	movlw	-19
 11655  011D52  0060  F063  FFE3   	movff	btemp+23,plusw1
 11656                           
 11657                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 11658                           ;stkvar	_llu @ sp[(-32)+6]
 11659  011D58  50E1               	movf	fsr1l,w,c
 11660  011D5A  0FE6               	addlw	-26
 11661  011D5C  6ED9               	movwf	fsr2l,c
 11662  011D5E  50E2               	movf	fsr1h,w,c
 11663  011D60  6EDA               	movwf	fsr2h,c
 11664  011D62  0EFF               	movlw	255
 11665  011D64  22DA               	addwfc	fsr2h,f,c
 11666  011D66  006F FF7B FFE6     	movff	postinc2,postinc1
 11667  011D6C  006F FF7B FFE6     	movff	postinc2,postinc1
 11668  011D72  006F FF7B FFE6     	movff	postinc2,postinc1
 11669  011D78  006F FF7B FFE6     	movff	postinc2,postinc1
 11670  011D7E  006F FF7B FFE6     	movff	postinc2,postinc1
 11671  011D84  006F FF7B FFE6     	movff	postinc2,postinc1
 11672  011D8A  006F FF7B FFE6     	movff	postinc2,postinc1
 11673  011D90  006F FF7B FFE6     	movff	postinc2,postinc1
 11674                           
 11675                           ;stkvar	_fp @ sp[(-40)+-2]
 11676  011D96  0ED6               	movlw	-42
 11677  011D98  006F FF8F FFE6     	movff	plusw1,postinc1
 11678  011D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 11679  011DA4  EC1F  F0AF         	call	_utoa	;wreg free
 11680  011DA8  D21E               	goto	l2328
 11681  011DAA                     l12120:
 11682                           
 11683                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 11684  011DAA  0E02               	movlw	2
 11685  011DAC  6EE6               	movwf	postinc1,c
 11686  011DAE  0E00               	movlw	0
 11687  011DB0  6EE6               	movwf	postinc1,c
 11688  011DB2  0EF3               	movlw	low STR_79
 11689  011DB4  6EE6               	movwf	postinc1,c
 11690  011DB6  0EFF               	movlw	high STR_79
 11691  011DB8  6EE6               	movwf	postinc1,c
 11692                           
 11693                           ;stkvar	_fmt @ sp[(-36)+-4]
 11694  011DBA  0ED8               	movlw	-40
 11695  011DBC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11696  011DC2  0ED9               	movlw	-39
 11697  011DC4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11698  011DCA  006F FF78  F00B    	movff	postinc2,btemp+10
 11699  011DD0  006F FF74  F00C    	movff	postdec2,btemp+11
 11700  011DD6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11701  011DDC  0060  F033  FFE6   	movff	btemp+11,postinc1
 11702  011DE2  EC93  F0B8         	call	_strncmp	;wreg free
 11703  011DE6  5001               	movf	btemp^0,w,c
 11704  011DE8  1002               	iorwf	(btemp+1)^0,w,c
 11705  011DEA  A4D8               	btfss	status,2,c
 11706  011DEC  D039               	goto	l12130
 11707                           
 11708                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 11709                           ;stkvar	_fmt @ sp[(-32)+-4]
 11710  011DEE  0EDC               	movlw	-36
 11711  011DF0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11712  011DF6  0EDD               	movlw	-35
 11713  011DF8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11714  011DFE  0E02               	movlw	2
 11715  011E00  26DE               	addwf	postinc2,f,c
 11716  011E02  0E00               	movlw	0
 11717  011E04  22DD               	addwfc	postdec2,f,c
 11718                           
 11719                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 11720                           ;stkvar	_ap @ sp[(-32)+-6]
 11721  011E06  0EDA               	movlw	-38
 11722  011E08  006F FF8F FFD9     	movff	plusw1,fsr2l
 11723  011E0E  0EDB               	movlw	-37
 11724  011E10  006F FF8F FFDA     	movff	plusw1,fsr2h
 11725  011E16  0E04               	movlw	4
 11726  011E18  5EDE               	subwf	postinc2,f,c
 11727  011E1A  0E00               	movlw	0
 11728  011E1C  5ADD               	subwfb	postdec2,f,c
 11729  011E1E  006F FF78  F00B    	movff	postinc2,btemp+10
 11730  011E24  006F FF74  F00C    	movff	postdec2,btemp+11
 11731  011E2A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11732  011E30  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11733  011E36  006F FF78  F009    	movff	postinc2,btemp+8
 11734  011E3C  006F FF78  F00A    	movff	postinc2,btemp+9
 11735  011E42  006F FF78  F00B    	movff	postinc2,btemp+10
 11736  011E48  006F FF78  F00C    	movff	postinc2,btemp+11
 11737  011E4E  5009               	movf	(btemp+8)^0,w,c
 11738  011E50  6E11               	movwf	(btemp+16)^0,c
 11739  011E52  500A               	movf	(btemp+9)^0,w,c
 11740  011E54  6E12               	movwf	(btemp+17)^0,c
 11741  011E56  500B               	movf	(btemp+10)^0,w,c
 11742  011E58  6E13               	movwf	(btemp+18)^0,c
 11743  011E5A  500C               	movf	(btemp+11)^0,w,c
 11744  011E5C  6E14               	movwf	(btemp+19)^0,c
 11745  011E5E  D758               	goto	L5
 11746  011E60                     l12130:
 11747                           
 11748                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 11749                           ;stkvar	_fmt @ sp[(-32)+-4]
 11750  011E60  0EDC               	movlw	-36
 11751  011E62  006F FF8F FFD9     	movff	plusw1,fsr2l
 11752  011E68  0EDD               	movlw	-35
 11753  011E6A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11754  011E70  006F FF7B FFF6     	movff	postinc2,tblptrl
 11755  011E76  006F FF77 FFF7     	movff	postdec2,tblptrh
 11756  011E7C                     	if	0	;tblptru may be non-zero
 11757  011E7C                     	endif
 11758  011E7C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11759  011E7C  0E00               	movlw	low (__mediumconst shr (0+16))
 11760  011E7E  6EF8               	movwf	tblptru,c
 11761  011E80                     	endif
 11762  011E80  0008               	tblrd		*
 11763  011E82  50F5               	movf	tablat,w,c
 11764  011E84  0A78               	xorlw	120
 11765  011E86  B4D8               	btfsc	status,2,c
 11766  011E88  D015               	goto	u11740
 11767                           
 11768                           ;stkvar	_fmt @ sp[(-32)+-4]
 11769  011E8A  0EDC               	movlw	-36
 11770  011E8C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11771  011E92  0EDD               	movlw	-35
 11772  011E94  006F FF8F FFDA     	movff	plusw1,fsr2h
 11773  011E9A  006F FF7B FFF6     	movff	postinc2,tblptrl
 11774  011EA0  006F FF77 FFF7     	movff	postdec2,tblptrh
 11775  011EA6                     	if	0	;tblptru may be non-zero
 11776  011EA6                     	endif
 11777  011EA6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11778  011EA6  0E00               	movlw	low (__mediumconst shr (0+16))
 11779  011EA8  6EF8               	movwf	tblptru,c
 11780  011EAA                     	endif
 11781  011EAA  0008               	tblrd		*
 11782  011EAC  50F5               	movf	tablat,w,c
 11783  011EAE  0A58               	xorlw	88
 11784  011EB0  A4D8               	btfss	status,2,c
 11785  011EB2  D094               	goto	l12144
 11786  011EB4                     u11740:
 11787                           
 11788                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 11789                           ;stkvar	_fmt @ sp[(-32)+-4]
 11790  011EB4  0EDC               	movlw	-36
 11791  011EB6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11792  011EBC  0EDD               	movlw	-35
 11793  011EBE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11794  011EC4  006F FF7B FFF6     	movff	postinc2,tblptrl
 11795  011ECA  006F FF77 FFF7     	movff	postdec2,tblptrh
 11796  011ED0                     	if	0	;tblptru may be non-zero
 11797  011ED0                     	endif
 11798  011ED0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11799  011ED0  0E00               	movlw	low (__mediumconst shr (0+16))
 11800  011ED2  6EF8               	movwf	tblptru,c
 11801  011ED4                     	endif
 11802                           
 11803                           ;stkvar	_c @ sp[(-32)+31]
 11804  011ED4  0008               	tblrd		*
 11805  011ED6  0EFF               	movlw	-1
 11806  011ED8  006F FFD7 FFE3     	movff	tablat,plusw1
 11807                           
 11808                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 11809                           ;stkvar	_fmt @ sp[(-32)+-4]
 11810  011EDE  0EDC               	movlw	-36
 11811  011EE0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11812  011EE6  0EDD               	movlw	-35
 11813  011EE8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11814  011EEE  2ADE               	incf	postinc2,f,c
 11815  011EF0  0E00               	movlw	0
 11816  011EF2  22DD               	addwfc	postdec2,f,c
 11817                           
 11818                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 11819                           ;stkvar	_ap @ sp[(-32)+-6]
 11820  011EF4  0EDA               	movlw	-38
 11821  011EF6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11822  011EFC  0EDB               	movlw	-37
 11823  011EFE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11824  011F04  0E02               	movlw	2
 11825  011F06  5EDE               	subwf	postinc2,f,c
 11826  011F08  0E00               	movlw	0
 11827  011F0A  5ADD               	subwfb	postdec2,f,c
 11828  011F0C  006F FF78  F00B    	movff	postinc2,btemp+10
 11829  011F12  006F FF74  F00C    	movff	postdec2,btemp+11
 11830  011F18  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11831  011F1E  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11832  011F24  006F FF78  F00B    	movff	postinc2,btemp+10
 11833  011F2A  006F FF74  F00C    	movff	postdec2,btemp+11
 11834  011F30  500B               	movf	(btemp+10)^0,w,c
 11835  011F32  6E11               	movwf	(btemp+16)^0,c
 11836  011F34  500C               	movf	(btemp+11)^0,w,c
 11837  011F36  6E12               	movwf	(btemp+17)^0,c
 11838  011F38  6A13               	clrf	(btemp+18)^0,c
 11839  011F3A  6A14               	clrf	(btemp+19)^0,c
 11840  011F3C  6A15               	clrf	(btemp+20)^0,c
 11841  011F3E  6A16               	clrf	(btemp+21)^0,c
 11842  011F40  6A17               	clrf	(btemp+22)^0,c
 11843  011F42  6A18               	clrf	(btemp+23)^0,c
 11844                           
 11845                           ;stkvar	_llu @ sp[(-32)+6]
 11846  011F44  0EE6               	movlw	-26
 11847  011F46  0060  F047  FFE3   	movff	btemp+16,plusw1
 11848  011F4C  0EE7               	movlw	-25
 11849  011F4E  0060  F04B  FFE3   	movff	btemp+17,plusw1
 11850  011F54  0EE8               	movlw	-24
 11851  011F56  0060  F04F  FFE3   	movff	btemp+18,plusw1
 11852  011F5C  0EE9               	movlw	-23
 11853  011F5E  0060  F053  FFE3   	movff	btemp+19,plusw1
 11854  011F64  0EEA               	movlw	-22
 11855  011F66  0060  F057  FFE3   	movff	btemp+20,plusw1
 11856  011F6C  0EEB               	movlw	-21
 11857  011F6E  0060  F05B  FFE3   	movff	btemp+21,plusw1
 11858  011F74  0EEC               	movlw	-20
 11859  011F76  0060  F05F  FFE3   	movff	btemp+22,plusw1
 11860  011F7C  0EED               	movlw	-19
 11861  011F7E  0060  F063  FFE3   	movff	btemp+23,plusw1
 11862                           
 11863                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 11864                           ;stkvar	_c @ sp[(-32)+31]
 11865  011F84  0EFF               	movlw	-1
 11866  011F86  50E3               	movf	plusw1,w,c
 11867  011F88  6EE6               	movwf	postinc1,c
 11868                           
 11869                           ;stkvar	_llu @ sp[(-33)+6]
 11870  011F8A  50E1               	movf	fsr1l,w,c
 11871  011F8C  0FE5               	addlw	-27
 11872  011F8E  6ED9               	movwf	fsr2l,c
 11873  011F90  50E2               	movf	fsr1h,w,c
 11874  011F92  6EDA               	movwf	fsr2h,c
 11875  011F94  0EFF               	movlw	255
 11876  011F96  22DA               	addwfc	fsr2h,f,c
 11877  011F98  006F FF7B FFE6     	movff	postinc2,postinc1
 11878  011F9E  006F FF7B FFE6     	movff	postinc2,postinc1
 11879  011FA4  006F FF7B FFE6     	movff	postinc2,postinc1
 11880  011FAA  006F FF7B FFE6     	movff	postinc2,postinc1
 11881  011FB0  006F FF7B FFE6     	movff	postinc2,postinc1
 11882  011FB6  006F FF7B FFE6     	movff	postinc2,postinc1
 11883  011FBC  006F FF7B FFE6     	movff	postinc2,postinc1
 11884  011FC2  006F FF7B FFE6     	movff	postinc2,postinc1
 11885                           
 11886                           ;stkvar	_fp @ sp[(-41)+-2]
 11887  011FC8  0ED5               	movlw	-43
 11888  011FCA  006F FF8F FFE6     	movff	plusw1,postinc1
 11889  011FD0  006F FF8F FFE6     	movff	plusw1,postinc1
 11890  011FD6  ECBB  F0A9         	call	_xtoa	;wreg free
 11891  011FDA  D105               	goto	l2328
 11892  011FDC                     l12144:
 11893                           
 11894                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 11895  011FDC  0E02               	movlw	2
 11896  011FDE  6EE6               	movwf	postinc1,c
 11897  011FE0  0E00               	movlw	0
 11898  011FE2  6EE6               	movwf	postinc1,c
 11899  011FE4  0EF6               	movlw	low STR_84
 11900  011FE6  6EE6               	movwf	postinc1,c
 11901  011FE8  0EFF               	movlw	high STR_84
 11902  011FEA  6EE6               	movwf	postinc1,c
 11903                           
 11904                           ;stkvar	_fmt @ sp[(-36)+-4]
 11905  011FEC  0ED8               	movlw	-40
 11906  011FEE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11907  011FF4  0ED9               	movlw	-39
 11908  011FF6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11909  011FFC  006F FF78  F00B    	movff	postinc2,btemp+10
 11910  012002  006F FF74  F00C    	movff	postdec2,btemp+11
 11911  012008  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11912  01200E  0060  F033  FFE6   	movff	btemp+11,postinc1
 11913  012014  EC93  F0B8         	call	_strncmp	;wreg free
 11914  012018  5001               	movf	btemp^0,w,c
 11915  01201A  1002               	iorwf	(btemp+1)^0,w,c
 11916  01201C  B4D8               	btfsc	status,2,c
 11917  01201E  D022               	goto	u11760
 11918  012020  0E02               	movlw	2
 11919  012022  6EE6               	movwf	postinc1,c
 11920  012024  0E00               	movlw	0
 11921  012026  6EE6               	movwf	postinc1,c
 11922  012028  0EE7               	movlw	low STR_88
 11923  01202A  6EE6               	movwf	postinc1,c
 11924  01202C  0EFF               	movlw	high STR_88
 11925  01202E  6EE6               	movwf	postinc1,c
 11926                           
 11927                           ;stkvar	_fmt @ sp[(-36)+-4]
 11928  012030  0ED8               	movlw	-40
 11929  012032  006F FF8F FFD9     	movff	plusw1,fsr2l
 11930  012038  0ED9               	movlw	-39
 11931  01203A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11932  012040  006F FF78  F00B    	movff	postinc2,btemp+10
 11933  012046  006F FF74  F00C    	movff	postdec2,btemp+11
 11934  01204C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11935  012052  0060  F033  FFE6   	movff	btemp+11,postinc1
 11936  012058  EC93  F0B8         	call	_strncmp	;wreg free
 11937  01205C  5001               	movf	btemp^0,w,c
 11938  01205E  1002               	iorwf	(btemp+1)^0,w,c
 11939  012060  A4D8               	btfss	status,2,c
 11940  012062  D058               	goto	l12158
 11941  012064                     u11760:
 11942                           
 11943                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 11944                           ;stkvar	_fmt @ sp[(-32)+-4]
 11945  012064  0EDC               	movlw	-36
 11946  012066  006F FF8F FFD9     	movff	plusw1,fsr2l
 11947  01206C  0EDD               	movlw	-35
 11948  01206E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11949  012074  006F FF78  F00B    	movff	postinc2,btemp+10
 11950  01207A  006F FF74  F00C    	movff	postdec2,btemp+11
 11951  012080  0E01               	movlw	1
 11952  012082  260B               	addwf	(btemp+10)^0,f,c
 11953  012084  0E00               	movlw	0
 11954  012086  220C               	addwfc	(btemp+11)^0,f,c
 11955  012088  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 11956  01208E  0060  F033  FFF7   	movff	btemp+11,tblptrh
 11957  012094                     	if	0	;tblptru may be non-zero
 11958  012094                     	endif
 11959  012094                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11960  012094  0E00               	movlw	low (__mediumconst shr (0+16))
 11961  012096  6EF8               	movwf	tblptru,c
 11962  012098                     	endif
 11963                           
 11964                           ;stkvar	_c @ sp[(-32)+31]
 11965  012098  0008               	tblrd		*
 11966  01209A  0EFF               	movlw	-1
 11967  01209C  006F FFD7 FFE3     	movff	tablat,plusw1
 11968                           
 11969                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 11970                           ;stkvar	_fmt @ sp[(-32)+-4]
 11971  0120A2  0EDC               	movlw	-36
 11972  0120A4  006F FF8F FFD9     	movff	plusw1,fsr2l
 11973  0120AA  0EDD               	movlw	-35
 11974  0120AC  006F FF8F FFDA     	movff	plusw1,fsr2h
 11975  0120B2  0E02               	movlw	2
 11976  0120B4  26DE               	addwf	postinc2,f,c
 11977  0120B6  0E00               	movlw	0
 11978  0120B8  22DD               	addwfc	postdec2,f,c
 11979                           
 11980                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 11981                           ;stkvar	_ap @ sp[(-32)+-6]
 11982  0120BA  0EDA               	movlw	-38
 11983  0120BC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11984  0120C2  0EDB               	movlw	-37
 11985  0120C4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11986  0120CA  0E04               	movlw	4
 11987  0120CC  5EDE               	subwf	postinc2,f,c
 11988  0120CE  0E00               	movlw	0
 11989  0120D0  5ADD               	subwfb	postdec2,f,c
 11990  0120D2  006F FF78  F00B    	movff	postinc2,btemp+10
 11991  0120D8  006F FF74  F00C    	movff	postdec2,btemp+11
 11992  0120DE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11993  0120E4  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11994  0120EA  006F FF78  F009    	movff	postinc2,btemp+8
 11995  0120F0  006F FF78  F00A    	movff	postinc2,btemp+9
 11996  0120F6  006F FF78  F00B    	movff	postinc2,btemp+10
 11997  0120FC  006F FF78  F00C    	movff	postinc2,btemp+11
 11998  012102  5009               	movf	(btemp+8)^0,w,c
 11999  012104  6E11               	movwf	(btemp+16)^0,c
 12000  012106  500A               	movf	(btemp+9)^0,w,c
 12001  012108  6E12               	movwf	(btemp+17)^0,c
 12002  01210A  500B               	movf	(btemp+10)^0,w,c
 12003  01210C  6E13               	movwf	(btemp+18)^0,c
 12004  01210E  500C               	movf	(btemp+11)^0,w,c
 12005  012110  6E14               	movwf	(btemp+19)^0,c
 12006  012112  D714               	goto	L6
 12007  012114                     l12158:
 12008                           
 12009                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 12010                           ;stkvar	_fmt @ sp[(-32)+-4]
 12011  012114  0EDC               	movlw	-36
 12012  012116  006F FF8F FFD9     	movff	plusw1,fsr2l
 12013  01211C  0EDD               	movlw	-35
 12014  01211E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12015  012124  006F FF7B FFF6     	movff	postinc2,tblptrl
 12016  01212A  006F FF77 FFF7     	movff	postdec2,tblptrh
 12017  012130                     	if	0	;tblptru may be non-zero
 12018  012130                     	endif
 12019  012130                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12020  012130  0E00               	movlw	low (__mediumconst shr (0+16))
 12021  012132  6EF8               	movwf	tblptru,c
 12022  012134                     	endif
 12023  012134  0008               	tblrd		*
 12024  012136  50F5               	movf	tablat,w,c
 12025  012138  0A25               	xorlw	37
 12026  01213A  A4D8               	btfss	status,2,c
 12027  01213C  D01A               	goto	l12168
 12028                           
 12029                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 12030                           ;stkvar	_fmt @ sp[(-32)+-4]
 12031  01213E  0EDC               	movlw	-36
 12032  012140  006F FF8F FFD9     	movff	plusw1,fsr2l
 12033  012146  0EDD               	movlw	-35
 12034  012148  006F FF8F FFDA     	movff	plusw1,fsr2h
 12035  01214E  2ADE               	incf	postinc2,f,c
 12036  012150  0E00               	movlw	0
 12037  012152  22DD               	addwfc	postdec2,f,c
 12038                           
 12039                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 12040                           ;stkvar	_fp @ sp[(-32)+-2]
 12041  012154  0EDE               	movlw	-34
 12042  012156  006F FF8F FFE6     	movff	plusw1,postinc1
 12043  01215C  006F FF8F FFE6     	movff	plusw1,postinc1
 12044  012162  0E25               	movlw	37
 12045  012164  6EE6               	movwf	postinc1,c
 12046  012166  0E00               	movlw	0
 12047  012168  6EE6               	movwf	postinc1,c
 12048  01216A  EC21  F0C5         	call	_fputc	;wreg free
 12049  01216E                     l12164:
 12050                           
 12051                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 12052  01216E  0E01               	movlw	1
 12053  012170  D00C               	goto	L7
 12054  012172                     l12168:
 12055                           
 12056                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 12057                           ;stkvar	_fmt @ sp[(-32)+-4]
 12058  012172  0EDC               	movlw	-36
 12059  012174  006F FF8F FFD9     	movff	plusw1,fsr2l
 12060  01217A  0EDD               	movlw	-35
 12061  01217C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12062  012182  2ADE               	incf	postinc2,f,c
 12063  012184  0E00               	movlw	0
 12064  012186  22DD               	addwfc	postdec2,f,c
 12065                           
 12066                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 12067  012188  0E00               	movlw	0
 12068  01218A                     L7:
 12069  01218A  6E01               	movwf	btemp^0,c
 12070  01218C  0E00               	movlw	0
 12071  01218E  6E02               	movwf	(btemp+1)^0,c
 12072  012190  D02A               	goto	l2328
 12073  012192                     l12174:
 12074                           
 12075                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 12076                           ;stkvar	_fp @ sp[(-32)+-2]
 12077  012192  0EDE               	movlw	-34
 12078  012194  006F FF8F FFE6     	movff	plusw1,postinc1
 12079  01219A  006F FF8F FFE6     	movff	plusw1,postinc1
 12080                           
 12081                           ;stkvar	_fmt @ sp[(-34)+-4]
 12082  0121A0  0EDA               	movlw	-38
 12083  0121A2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12084  0121A8  0EDB               	movlw	-37
 12085  0121AA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12086  0121B0  006F FF7B FFF6     	movff	postinc2,tblptrl
 12087  0121B6  006F FF77 FFF7     	movff	postdec2,tblptrh
 12088  0121BC                     	if	0	;tblptru may be non-zero
 12089  0121BC                     	endif
 12090  0121BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12091  0121BC  0E00               	movlw	low (__mediumconst shr (0+16))
 12092  0121BE  6EF8               	movwf	tblptru,c
 12093  0121C0                     	endif
 12094  0121C0  0008               	tblrd		*
 12095  0121C2  50F5               	movf	tablat,w,c
 12096  0121C4  6EE6               	movwf	postinc1,c
 12097  0121C6  0E00               	movlw	0
 12098  0121C8  6EE6               	movwf	postinc1,c
 12099  0121CA  EC21  F0C5         	call	_fputc	;wreg free
 12100                           
 12101                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 12102                           ;stkvar	_fmt @ sp[(-32)+-4]
 12103  0121CE  0EDC               	movlw	-36
 12104  0121D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 12105  0121D6  0EDD               	movlw	-35
 12106  0121D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 12107  0121DE  2ADE               	incf	postinc2,f,c
 12108  0121E0  0E00               	movlw	0
 12109  0121E2  22DD               	addwfc	postdec2,f,c
 12110  0121E4  D7C4               	goto	l12164
 12111  0121E6                     l2328:
 12112                           
 12113                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 12114  0121E6  0EDA               	movlw	218
 12115  0121E8  26E1               	addwf	fsr1l,f,c
 12116  0121EA  0EFF               	movlw	255
 12117  0121EC  22E2               	addwfc	fsr1h,f,c
 12118  0121EE  0012               	return		;funcret
 12119  0121F0                     __end_of_vfpfcnvrt:
 12120                           	opt callstack 0
 12121                           
 12122 ;; *************** function _xtoa *****************
 12123 ;; Defined at:
 12124 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12125 ;; Parameters:    Size  Location     Type
 12126 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12127 ;;		 -> f(6), NULL(0), 
 12128 ;;  d               8  [STACK] unsigned long long 
 12129 ;;  x               1  [STACK] unsigned char 
 12130 ;; Auto vars:     Size  Location     Type
 12131 ;;  n               8  [STACK] unsigned long long 
 12132 ;;  c               2  [STACK] int 
 12133 ;;  i               2  [STACK] int 
 12134 ;;  w               2  [STACK] int 
 12135 ;;  p               2  [STACK] int 
 12136 ;; Return value:  Size  Location     Type
 12137 ;;                  2  [STACK] int 
 12138 ;; Registers used:
 12139 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 12140 ;; Tracked objects:
 12141 ;;		On entry : 0/0
 12142 ;;		On exit  : 0/0
 12143 ;;		Unchanged: 0/0
 12144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12149 ;;Total ram usage:        0 bytes
 12150 ;; Hardware stack levels used:    1
 12151 ;; Hardware stack levels required when called:   20
 12152 ;; This function calls:
 12153 ;;		_isalpha
 12154 ;;		_isupper
 12155 ;;		_pad
 12156 ;;		_toupper
 12157 ;; This function is called by:
 12158 ;;		_vfpfcnvrt
 12159 ;; This function uses a reentrant model
 12160 ;;
 12161                           
 12162                           	psect	text46
 12163  015376                     __ptext46:
 12164                           	opt callstack 0
 12165  015376                     _xtoa:
 12166                           	opt callstack 0
 12167                           
 12168                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 12169  015376  0E14               	movlw	20
 12170  015378  26E1               	addwf	fsr1l,f,c
 12171  01537A  0E00               	movlw	0
 12172  01537C  22E2               	addwfc	fsr1h,f,c
 12173                           
 12174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 12175                           
 12176                           ;incstack = 0
 12177 ;; hardware stack exceeded
 12178  01537E  AE24               	btfss	(_prec+1)^0,7,c
 12179                           
 12180                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 12181  015380  9225               	bcf	_flags^0,1,c
 12182                           
 12183                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 12184  015382  BE24               	btfsc	(_prec+1)^0,7,c
 12185  015384  D005               	goto	u11290
 12186  015386  5024               	movf	(_prec+1)^0,w,c
 12187  015388  E110               	bnz	l11898
 12188  01538A  0423               	decf	_prec^0,w,c
 12189  01538C  B0D8               	btfsc	status,0,c
 12190  01538E  D00D               	goto	l11898
 12191  015390                     u11290:
 12192  015390  0E01               	movlw	1
 12193  015392  6E0B               	movwf	(btemp+10)^0,c
 12194  015394  0E00               	movlw	0
 12195  015396  6E0C               	movwf	(btemp+11)^0,c
 12196                           
 12197                           ;stkvar	_p @ sp[(-20)+18]
 12198  015398  0EFE               	movlw	-2
 12199  01539A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12200  0153A0  0EFF               	movlw	-1
 12201  0153A2  0060  F033  FFE3   	movff	btemp+11,plusw1
 12202  0153A8  D008               	goto	l2278
 12203  0153AA                     l11898:
 12204                           
 12205                           ;stkvar	_p @ sp[(-20)+18]
 12206  0153AA  0EFE               	movlw	-2
 12207  0153AC  0060  F08F  FFE3   	movff	_prec,plusw1
 12208  0153B2  0EFF               	movlw	-1
 12209  0153B4  0060  F093  FFE3   	movff	_prec+1,plusw1
 12210  0153BA                     l2278:
 12211                           
 12212                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 12213                           ;stkvar	_w @ sp[(-20)+16]
 12214  0153BA  0EFC               	movlw	-4
 12215  0153BC  0060  F087  FFE3   	movff	_width,plusw1
 12216  0153C2  0EFD               	movlw	-3
 12217  0153C4  0060  F08B  FFE3   	movff	_width+1,plusw1
 12218                           
 12219                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 12220  0153CA  A825               	btfss	_flags^0,4,c
 12221  0153CC  D00B               	goto	l11904
 12222                           
 12223                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 12224                           ;stkvar	_w @ sp[(-20)+16]
 12225  0153CE  50E1               	movf	fsr1l,w,c
 12226  0153D0  0FFC               	addlw	-4
 12227  0153D2  6ED9               	movwf	fsr2l,c
 12228  0153D4  50E2               	movf	fsr1h,w,c
 12229  0153D6  6EDA               	movwf	fsr2h,c
 12230  0153D8  0EFF               	movlw	255
 12231  0153DA  22DA               	addwfc	fsr2h,f,c
 12232  0153DC  0EFE               	movlw	254
 12233  0153DE  26DE               	addwf	postinc2,f,c
 12234  0153E0  0EFF               	movlw	255
 12235  0153E2  22DD               	addwfc	postdec2,f,c
 12236  0153E4                     l11904:
 12237                           
 12238                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 12239                           ;stkvar	_d @ sp[(-20)+-10]
 12240  0153E4  0EE2               	movlw	226
 12241  0153E6  24E1               	addwf	fsr1l,w,c
 12242  0153E8  6ED9               	movwf	fsr2l,c
 12243  0153EA  0EFF               	movlw	255
 12244  0153EC  20E2               	addwfc	fsr1h,w,c
 12245  0153EE  6EDA               	movwf	fsr2h,c
 12246                           
 12247                           ;stkvar	_n @ sp[(-20)+4]
 12248  0153F0  0E08               	movlw	8
 12249  0153F2  6E01               	movwf	btemp^0,c
 12250  0153F4  0EF0               	movlw	-16
 12251  0153F6                     us1131999:
 12252  0153F6  006F FF7B FFE3     	movff	postinc2,plusw1
 12253  0153FC  28E8               	incf	wreg,w,c
 12254  0153FE  2E01               	decfsz	btemp^0,f,c
 12255  015400  D7FA               	bra	us1131999
 12256                           
 12257                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 12258  015402  0E4F               	movlw	79
 12259  015404  6E0B               	movwf	(btemp+10)^0,c
 12260  015406  0E00               	movlw	0
 12261  015408  6E0C               	movwf	(btemp+11)^0,c
 12262                           
 12263                           ;stkvar	_i @ sp[(-20)+14]
 12264  01540A  0EFA               	movlw	-6
 12265  01540C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12266  015412  0EFB               	movlw	-5
 12267  015414  0060  F033  FFE3   	movff	btemp+11,plusw1
 12268                           
 12269                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 12270  01541A  0103               	movlb	3	; () banked
 12271  01541C  6BE3               	clrf	(_dbuf+79)& (0+255),b
 12272                           
 12273                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12274  01541E  D0EE               	goto	l11942
 12275  015420                     l11910:
 12276                           
 12277                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 12278                           ;stkvar	_i @ sp[(-20)+14]
 12279  015420  50E1               	movf	fsr1l,w,c
 12280  015422  0FFA               	addlw	-6
 12281  015424  6ED9               	movwf	fsr2l,c
 12282  015426  50E2               	movf	fsr1h,w,c
 12283  015428  6EDA               	movwf	fsr2h,c
 12284  01542A  0EFF               	movlw	255
 12285  01542C  22DA               	addwfc	fsr2h,f,c
 12286  01542E  06DE               	decf	postinc2,f,c
 12287  015430  0E00               	movlw	0
 12288  015432  5ADD               	subwfb	postdec2,f,c
 12289                           
 12290                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 12291                           ;stkvar	_n @ sp[(-20)+4]
 12292  015434  0EF0               	movlw	-16
 12293  015436  006F FF8C  F00B    	movff	plusw1,btemp+10
 12294  01543C  0EF1               	movlw	-15
 12295  01543E  006F FF8C  F00C    	movff	plusw1,btemp+11
 12296  015444  0E0F               	movlw	15
 12297  015446  160B               	andwf	(btemp+10)^0,f,c
 12298  015448  0E00               	movlw	0
 12299  01544A  160C               	andwf	(btemp+11)^0,f,c
 12300                           
 12301                           ;stkvar	_c @ sp[(-20)+12]
 12302  01544C  0EF8               	movlw	-8
 12303  01544E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12304  015454  0EF9               	movlw	-7
 12305  015456  0060  F033  FFE3   	movff	btemp+11,plusw1
 12306                           
 12307                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 12308                           ;stkvar	_c @ sp[(-20)+12]
 12309  01545C  0EF9               	movlw	-7
 12310  01545E  BEE3               	btfsc	plusw1,7,c
 12311  015460  D00F               	goto	l11918
 12312  015462  0EF9               	movlw	-7
 12313  015464  50E3               	movf	plusw1,w,c
 12314  015466  E108               	bnz	u11320
 12315  015468  0EF8               	movlw	-8
 12316  01546A  006F FF8C  F001    	movff	plusw1,btemp
 12317  015470  0E0A               	movlw	10
 12318  015472  5E01               	subwf	btemp^0,f,c
 12319  015474  A0D8               	btfss	status,0,c
 12320  015476  D004               	goto	l11918
 12321  015478                     u11320:
 12322                           
 12323                           ;stkvar	_c @ sp[(-20)+12]
 12324  015478  0EF8               	movlw	-8
 12325  01547A  50E3               	movf	plusw1,w,c
 12326  01547C  0F57               	addlw	87
 12327  01547E  D003               	goto	L8
 12328  015480                     l11918:
 12329                           
 12330                           ;stkvar	_c @ sp[(-20)+12]
 12331  015480  0EF8               	movlw	-8
 12332  015482  50E3               	movf	plusw1,w,c
 12333  015484  0F30               	addlw	48
 12334  015486                     L8:
 12335  015486  6E0B               	movwf	(btemp+10)^0,c
 12336  015488  0EF9               	movlw	-7
 12337  01548A  006F FF8C  F00C    	movff	plusw1,btemp+11
 12338  015490  0E00               	movlw	0
 12339  015492  220C               	addwfc	(btemp+11)^0,f,c
 12340                           
 12341                           ;stkvar	_c @ sp[(-20)+12]
 12342  015494  0EF8               	movlw	-8
 12343  015496  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12344  01549C  0EF9               	movlw	-7
 12345  01549E  0060  F033  FFE3   	movff	btemp+11,plusw1
 12346  0154A4  0EBF               	movlw	191
 12347  0154A6  6E0B               	movwf	(btemp+10)^0,c
 12348  0154A8  0EFF               	movlw	255
 12349  0154AA  6E0C               	movwf	(btemp+11)^0,c
 12350                           
 12351                           ;stkvar	_x @ sp[(-20)+-11]
 12352  0154AC  0EE1               	movlw	-31
 12353  0154AE  50E3               	movf	plusw1,w,c
 12354  0154B0  6E09               	movwf	(btemp+8)^0,c
 12355  0154B2  6A0A               	clrf	(btemp+9)^0,c
 12356  0154B4  500B               	movf	(btemp+10)^0,w,c
 12357  0154B6  2609               	addwf	(btemp+8)^0,f,c
 12358  0154B8  500C               	movf	(btemp+11)^0,w,c
 12359  0154BA  220A               	addwfc	(btemp+9)^0,f,c
 12360  0154BC  500A               	movf	(btemp+9)^0,w,c
 12361  0154BE  E106               	bnz	u11330
 12362  0154C0  0E1A               	movlw	26
 12363  0154C2  5C09               	subwf	(btemp+8)^0,w,c
 12364  0154C4  B0D8               	btfsc	status,0,c
 12365  0154C6  D002               	goto	u11330
 12366  0154C8  0E01               	movlw	1
 12367  0154CA  D001               	goto	u11340
 12368  0154CC                     u11330:
 12369  0154CC  0E00               	movlw	0
 12370  0154CE                     u11340:
 12371  0154CE  6E0B               	movwf	(btemp+10)^0,c
 12372  0154D0  6A0C               	clrf	(btemp+11)^0,c
 12373                           
 12374                           ;stkvar	_xtoa$5348 @ sp[(-20)+2]
 12375  0154D2  0EEE               	movlw	-18
 12376  0154D4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12377  0154DA  0EEF               	movlw	-17
 12378  0154DC  0060  F033  FFE3   	movff	btemp+11,plusw1
 12379                           
 12380                           ;stkvar	_xtoa$5348 @ sp[(-20)+2]
 12381  0154E2  0EEE               	movlw	-18
 12382  0154E4  006F FF8C  F001    	movff	plusw1,btemp
 12383  0154EA  0EEF               	movlw	-17
 12384  0154EC  50E3               	movf	plusw1,w,c
 12385  0154EE  1001               	iorwf	btemp^0,w,c
 12386  0154F0  B4D8               	btfsc	status,2,c
 12387  0154F2  D041               	goto	l11934
 12388  0154F4  0E9F               	movlw	159
 12389  0154F6  6E0B               	movwf	(btemp+10)^0,c
 12390  0154F8  0EFF               	movlw	255
 12391  0154FA  6E0C               	movwf	(btemp+11)^0,c
 12392                           
 12393                           ;stkvar	_c @ sp[(-20)+12]
 12394  0154FC  0EF8               	movlw	-8
 12395  0154FE  006F FF8C  F009    	movff	plusw1,btemp+8
 12396  015504  0EF9               	movlw	-7
 12397  015506  006F FF8C  F00A    	movff	plusw1,btemp+9
 12398  01550C  0E20               	movlw	32
 12399  01550E  1209               	iorwf	(btemp+8)^0,f,c
 12400  015510  0E00               	movlw	0
 12401  015512  120A               	iorwf	(btemp+9)^0,f,c
 12402  015514  500B               	movf	(btemp+10)^0,w,c
 12403  015516  2609               	addwf	(btemp+8)^0,f,c
 12404  015518  500C               	movf	(btemp+11)^0,w,c
 12405  01551A  220A               	addwfc	(btemp+9)^0,f,c
 12406  01551C  500A               	movf	(btemp+9)^0,w,c
 12407  01551E  E106               	bnz	u11360
 12408  015520  0E1A               	movlw	26
 12409  015522  5C09               	subwf	(btemp+8)^0,w,c
 12410  015524  B0D8               	btfsc	status,0,c
 12411  015526  D002               	goto	u11360
 12412  015528  0E01               	movlw	1
 12413  01552A  D001               	goto	u11370
 12414  01552C                     u11360:
 12415  01552C  0E00               	movlw	0
 12416  01552E                     u11370:
 12417  01552E  6E0B               	movwf	(btemp+10)^0,c
 12418  015530  6A0C               	clrf	(btemp+11)^0,c
 12419                           
 12420                           ;stkvar	_xtoa$5349 @ sp[(-20)+0]
 12421  015532  0EEC               	movlw	-20
 12422  015534  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12423  01553A  0EED               	movlw	-19
 12424  01553C  0060  F033  FFE3   	movff	btemp+11,plusw1
 12425                           
 12426                           ;stkvar	_xtoa$5349 @ sp[(-20)+0]
 12427  015542  0EEC               	movlw	-20
 12428  015544  006F FF8C  F001    	movff	plusw1,btemp
 12429  01554A  0EED               	movlw	-19
 12430  01554C  50E3               	movf	plusw1,w,c
 12431  01554E  1001               	iorwf	btemp^0,w,c
 12432  015550  B4D8               	btfsc	status,2,c
 12433  015552  D011               	goto	l11934
 12434                           
 12435                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 12436                           ;stkvar	_c @ sp[(-20)+12]
 12437  015554  0EF8               	movlw	-8
 12438  015556  006F FF8F FFE6     	movff	plusw1,postinc1
 12439  01555C  006F FF8F FFE6     	movff	plusw1,postinc1
 12440  015562  EC1F  F0CF         	call	_toupper	;wreg free
 12441                           
 12442                           ;stkvar	_c @ sp[(-20)+12]
 12443  015566  0EF8               	movlw	-8
 12444  015568  0060  F007  FFE3   	movff	btemp,plusw1
 12445  01556E  0EF9               	movlw	-7
 12446  015570  0060  F00B  FFE3   	movff	btemp+1,plusw1
 12447  015576                     l11934:
 12448                           
 12449                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 12450                           ;stkvar	_c @ sp[(-20)+12]
 12451                           ;stkvar	_i @ sp[(-20)+14]
 12452  015576  0EFA               	movlw	-6
 12453  015578  006F FF8C  F00B    	movff	plusw1,btemp+10
 12454  01557E  0EFB               	movlw	-5
 12455  015580  006F FF8C  F00C    	movff	plusw1,btemp+11
 12456  015586  0E94               	movlw	low _dbuf
 12457  015588  240B               	addwf	(btemp+10)^0,w,c
 12458  01558A  6ED9               	movwf	fsr2l,c
 12459  01558C  0E03               	movlw	high _dbuf
 12460  01558E  200C               	addwfc	(btemp+11)^0,w,c
 12461  015590  6EDA               	movwf	fsr2h,c
 12462  015592  0EF8               	movlw	-8
 12463  015594  006F FF8F FFDF     	movff	plusw1,indf2
 12464                           
 12465                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 12466                           ;stkvar	_p @ sp[(-20)+18]
 12467  01559A  50E1               	movf	fsr1l,w,c
 12468  01559C  0FFE               	addlw	-2
 12469  01559E  6ED9               	movwf	fsr2l,c
 12470  0155A0  50E2               	movf	fsr1h,w,c
 12471  0155A2  6EDA               	movwf	fsr2h,c
 12472  0155A4  0EFF               	movlw	255
 12473  0155A6  22DA               	addwfc	fsr2h,f,c
 12474  0155A8  06DE               	decf	postinc2,f,c
 12475  0155AA  0E00               	movlw	0
 12476  0155AC  5ADD               	subwfb	postdec2,f,c
 12477                           
 12478                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 12479                           ;stkvar	_w @ sp[(-20)+16]
 12480  0155AE  50E1               	movf	fsr1l,w,c
 12481  0155B0  0FFC               	addlw	-4
 12482  0155B2  6ED9               	movwf	fsr2l,c
 12483  0155B4  50E2               	movf	fsr1h,w,c
 12484  0155B6  6EDA               	movwf	fsr2h,c
 12485  0155B8  0EFF               	movlw	255
 12486  0155BA  22DA               	addwfc	fsr2h,f,c
 12487  0155BC  06DE               	decf	postinc2,f,c
 12488  0155BE  0E00               	movlw	0
 12489  0155C0  5ADD               	subwfb	postdec2,f,c
 12490                           
 12491                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 12492  0155C2  0E04               	movlw	4
 12493  0155C4  6E0C               	movwf	(btemp+11)^0,c
 12494                           
 12495                           ;stkvar	_n @ sp[(-20)+4]
 12496  0155C6  50E1               	movf	fsr1l,w,c
 12497  0155C8  0FF0               	addlw	-16
 12498  0155CA  6ED9               	movwf	fsr2l,c
 12499  0155CC  50E2               	movf	fsr1h,w,c
 12500  0155CE  6EDA               	movwf	fsr2h,c
 12501  0155D0  0EFF               	movlw	255
 12502  0155D2  22DA               	addwfc	fsr2h,f,c
 12503  0155D4  280C               	incf	(btemp+11)^0,w,c
 12504  0155D6  52DE               	movf	postinc2,f,c
 12505  0155D8  D00F               	goto	u11390
 12506  0155DA                     u11395:
 12507  0155DA  52DE               	movf	postinc2,f,c
 12508  0155DC  52DE               	movf	postinc2,f,c
 12509  0155DE  52DE               	movf	postinc2,f,c
 12510  0155E0  52DE               	movf	postinc2,f,c
 12511  0155E2  52DE               	movf	postinc2,f,c
 12512  0155E4  52DE               	movf	postinc2,f,c
 12513  0155E6  90D8               	bcf	status,0,c
 12514  0155E8  32DD               	rrcf	postdec2,f,c
 12515  0155EA  32DD               	rrcf	postdec2,f,c
 12516  0155EC  32DD               	rrcf	postdec2,f,c
 12517  0155EE  32DD               	rrcf	postdec2,f,c
 12518  0155F0  32DD               	rrcf	postdec2,f,c
 12519  0155F2  32DD               	rrcf	postdec2,f,c
 12520  0155F4  32DD               	rrcf	postdec2,f,c
 12521  0155F6  32DE               	rrcf	postinc2,f,c
 12522  0155F8                     u11390:
 12523  0155F8  2EE8               	decfsz	wreg,f,c
 12524  0155FA  D7EF               	goto	u11395
 12525  0155FC                     l11942:
 12526                           
 12527                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12528                           ;stkvar	_i @ sp[(-20)+14]
 12529  0155FC  0EFB               	movlw	-5
 12530  0155FE  BEE3               	btfsc	plusw1,7,c
 12531  015600  D03A               	goto	u11440
 12532  015602  0EFB               	movlw	-5
 12533  015604  50E3               	movf	plusw1,w,c
 12534  015606  E108               	bnz	u11400
 12535  015608  0EFA               	movlw	-6
 12536  01560A  006F FF8C  F001    	movff	plusw1,btemp
 12537  015610  0E02               	movlw	2
 12538  015612  5E01               	subwf	btemp^0,f,c
 12539  015614  A0D8               	btfss	status,0,c
 12540  015616  D02F               	goto	u11440
 12541  015618                     u11400:
 12542                           
 12543                           ;stkvar	_n @ sp[(-20)+4]
 12544  015618  0EF0               	movlw	-16
 12545  01561A  50E3               	movf	plusw1,w,c
 12546  01561C  E115               	bnz	u11411
 12547  01561E  0EF1               	movlw	-15
 12548  015620  50E3               	movf	plusw1,w,c
 12549  015622  E112               	bnz	u11411
 12550  015624  0EF2               	movlw	-14
 12551  015626  50E3               	movf	plusw1,w,c
 12552  015628  E10F               	bnz	u11411
 12553  01562A  0EF3               	movlw	-13
 12554  01562C  50E3               	movf	plusw1,w,c
 12555  01562E  E10C               	bnz	u11411
 12556  015630  0EF4               	movlw	-12
 12557  015632  50E3               	movf	plusw1,w,c
 12558  015634  E109               	bnz	u11411
 12559  015636  0EF5               	movlw	-11
 12560  015638  50E3               	movf	plusw1,w,c
 12561  01563A  E106               	bnz	u11411
 12562  01563C  0EF6               	movlw	-10
 12563  01563E  50E3               	movf	plusw1,w,c
 12564  015640  E103               	bnz	u11411
 12565  015642  0EF7               	movlw	-9
 12566  015644  50E3               	movf	plusw1,w,c
 12567  015646  A4D8               	btfss	status,2,c
 12568  015648                     u11411:
 12569  015648  D6EB               	goto	l11910
 12570                           
 12571                           ;stkvar	_p @ sp[(-20)+18]
 12572  01564A  0EFF               	movlw	-1
 12573  01564C  BEE3               	btfsc	plusw1,7,c
 12574  01564E  D007               	goto	u11420
 12575  015650  0EFF               	movlw	-1
 12576  015652  50E3               	movf	plusw1,w,c
 12577  015654  E103               	bnz	u11421
 12578  015656  0EFE               	movlw	-2
 12579  015658  04E3               	decf	plusw1,w,c
 12580  01565A  B0D8               	btfsc	status,0,c
 12581  01565C                     u11421:
 12582  01565C  D6E1               	goto	l11910
 12583  01565E                     u11420:
 12584                           
 12585                           ;stkvar	_w @ sp[(-20)+16]
 12586  01565E  0EFD               	movlw	-3
 12587  015660  BEE3               	btfsc	plusw1,7,c
 12588  015662  D009               	goto	u11440
 12589  015664  0EFD               	movlw	-3
 12590  015666  50E3               	movf	plusw1,w,c
 12591  015668  E104               	bnz	u11430
 12592  01566A  0EFC               	movlw	-4
 12593  01566C  04E3               	decf	plusw1,w,c
 12594  01566E  A0D8               	btfss	status,0,c
 12595  015670  D002               	goto	u11440
 12596  015672                     u11430:
 12597  015672  B225               	btfsc	_flags^0,1,c
 12598  015674  D6D5               	goto	l11910
 12599  015676                     u11440:
 12600                           
 12601                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 12602  015676  A825               	btfss	_flags^0,4,c
 12603  015678  D036               	goto	l11958
 12604                           
 12605                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 12606                           ;stkvar	_i @ sp[(-20)+14]
 12607  01567A  50E1               	movf	fsr1l,w,c
 12608  01567C  0FFA               	addlw	-6
 12609  01567E  6ED9               	movwf	fsr2l,c
 12610  015680  50E2               	movf	fsr1h,w,c
 12611  015682  6EDA               	movwf	fsr2h,c
 12612  015684  0EFF               	movlw	255
 12613  015686  22DA               	addwfc	fsr2h,f,c
 12614  015688  06DE               	decf	postinc2,f,c
 12615  01568A  0E00               	movlw	0
 12616  01568C  5ADD               	subwfb	postdec2,f,c
 12617                           
 12618                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 12619                           ;stkvar	_x @ sp[(-20)+-11]
 12620                           ;stkvar	_i @ sp[(-20)+14]
 12621  01568E  0EFA               	movlw	-6
 12622  015690  006F FF8C  F00B    	movff	plusw1,btemp+10
 12623  015696  0EFB               	movlw	-5
 12624  015698  006F FF8C  F00C    	movff	plusw1,btemp+11
 12625  01569E  0E94               	movlw	low _dbuf
 12626  0156A0  240B               	addwf	(btemp+10)^0,w,c
 12627  0156A2  6ED9               	movwf	fsr2l,c
 12628  0156A4  0E03               	movlw	high _dbuf
 12629  0156A6  200C               	addwfc	(btemp+11)^0,w,c
 12630  0156A8  6EDA               	movwf	fsr2h,c
 12631  0156AA  0EE1               	movlw	-31
 12632  0156AC  006F FF8F FFDF     	movff	plusw1,indf2
 12633                           
 12634                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 12635                           ;stkvar	_i @ sp[(-20)+14]
 12636  0156B2  50E1               	movf	fsr1l,w,c
 12637  0156B4  0FFA               	addlw	-6
 12638  0156B6  6ED9               	movwf	fsr2l,c
 12639  0156B8  50E2               	movf	fsr1h,w,c
 12640  0156BA  6EDA               	movwf	fsr2h,c
 12641  0156BC  0EFF               	movlw	255
 12642  0156BE  22DA               	addwfc	fsr2h,f,c
 12643  0156C0  06DE               	decf	postinc2,f,c
 12644  0156C2  0E00               	movlw	0
 12645  0156C4  5ADD               	subwfb	postdec2,f,c
 12646                           
 12647                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 12648                           ;stkvar	_i @ sp[(-20)+14]
 12649  0156C6  0EFA               	movlw	-6
 12650  0156C8  006F FF8C  F00B    	movff	plusw1,btemp+10
 12651  0156CE  0EFB               	movlw	-5
 12652  0156D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 12653  0156D6  0E94               	movlw	low _dbuf
 12654  0156D8  240B               	addwf	(btemp+10)^0,w,c
 12655  0156DA  6ED9               	movwf	fsr2l,c
 12656  0156DC  0E03               	movlw	high _dbuf
 12657  0156DE  200C               	addwfc	(btemp+11)^0,w,c
 12658  0156E0  6EDA               	movwf	fsr2h,c
 12659  0156E2  0E30               	movlw	48
 12660  0156E4  6EDF               	movwf	indf2,c
 12661  0156E6                     l11958:
 12662                           
 12663                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 12664                           ;stkvar	_w @ sp[(-20)+16]
 12665  0156E6  0EFC               	movlw	-4
 12666  0156E8  006F FF8F FFE6     	movff	plusw1,postinc1
 12667  0156EE  006F FF8F FFE6     	movff	plusw1,postinc1
 12668                           
 12669                           ;stkvar	_i @ sp[(-22)+14]
 12670  0156F4  0E94               	movlw	low _dbuf
 12671  0156F6  6E0B               	movwf	(btemp+10)^0,c
 12672  0156F8  0E03               	movlw	high _dbuf
 12673  0156FA  6E0C               	movwf	(btemp+11)^0,c
 12674  0156FC  0EF8               	movlw	-8
 12675  0156FE  50E3               	movf	plusw1,w,c
 12676  015700  260B               	addwf	(btemp+10)^0,f,c
 12677  015702  0EF9               	movlw	-7
 12678  015704  50E3               	movf	plusw1,w,c
 12679  015706  220C               	addwfc	(btemp+11)^0,f,c
 12680  015708  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12681  01570E  0060  F033  FFE6   	movff	btemp+11,postinc1
 12682                           
 12683                           ;stkvar	_fp @ sp[(-24)+-2]
 12684  015714  0EE6               	movlw	-26
 12685  015716  006F FF8F FFE6     	movff	plusw1,postinc1
 12686  01571C  006F FF8F FFE6     	movff	plusw1,postinc1
 12687  015722  EC3F  F0C6         	call	_pad	;wreg free
 12688                           
 12689                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 12690  015726  0EE1               	movlw	225
 12691  015728  26E1               	addwf	fsr1l,f,c
 12692  01572A  0EFF               	movlw	255
 12693  01572C  22E2               	addwfc	fsr1h,f,c
 12694  01572E  0012               	return		;funcret
 12695  015730                     __end_of_xtoa:
 12696                           	opt callstack 0
 12697                           
 12698 ;; *************** function _toupper *****************
 12699 ;; Defined at:
 12700 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 12701 ;; Parameters:    Size  Location     Type
 12702 ;;  c               2  [STACK] int 
 12703 ;; Auto vars:     Size  Location     Type
 12704 ;;		None
 12705 ;; Return value:  Size  Location     Type
 12706 ;;                  2  [STACK] int 
 12707 ;; Registers used:
 12708 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 12709 ;; Tracked objects:
 12710 ;;		On entry : 0/3
 12711 ;;		On exit  : 0/0
 12712 ;;		Unchanged: 0/0
 12713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12718 ;;Total ram usage:        0 bytes
 12719 ;; Hardware stack levels used:    1
 12720 ;; Hardware stack levels required when called:   16
 12721 ;; This function calls:
 12722 ;;		_islower
 12723 ;; This function is called by:
 12724 ;;		_xtoa
 12725 ;; This function uses a reentrant model
 12726 ;;
 12727                           
 12728                           	psect	text47
 12729  019E3E                     __ptext47:
 12730                           	opt callstack 0
 12731  019E3E                     _toupper:
 12732                           	opt callstack 0
 12733                           
 12734                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12735  019E3E  52E6               	movf	postinc1,f,c
 12736  019E40  52E6               	movf	postinc1,f,c
 12737                           
 12738                           ;stkvar	_c @ sp[(-2)+-2]
 12739                           
 12740                           ;incstack = 0
 12741 ;; hardware stack exceeded
 12742  019E42  0EFC               	movlw	-4
 12743  019E44  50E3               	movf	plusw1,w,c
 12744  019E46  0F9F               	addlw	159
 12745  019E48  6E0B               	movwf	(btemp+10)^0,c
 12746  019E4A  0EFD               	movlw	-3
 12747  019E4C  006F FF8C  F00C    	movff	plusw1,btemp+11
 12748  019E52  0EFF               	movlw	255
 12749  019E54  220C               	addwfc	(btemp+11)^0,f,c
 12750  019E56  500C               	movf	(btemp+11)^0,w,c
 12751  019E58  E106               	bnz	u5950
 12752  019E5A  0E1A               	movlw	26
 12753  019E5C  5C0B               	subwf	(btemp+10)^0,w,c
 12754  019E5E  B0D8               	btfsc	status,0,c
 12755  019E60  D002               	goto	u5950
 12756  019E62  0E01               	movlw	1
 12757  019E64  D001               	goto	u5960
 12758  019E66                     u5950:
 12759  019E66  0E00               	movlw	0
 12760  019E68                     u5960:
 12761  019E68  6E0B               	movwf	(btemp+10)^0,c
 12762  019E6A  6A0C               	clrf	(btemp+11)^0,c
 12763                           
 12764                           ;stkvar	_toupper$6155 @ sp[(-2)+0]
 12765  019E6C  0EFE               	movlw	-2
 12766  019E6E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12767  019E74  0EFF               	movlw	-1
 12768  019E76  0060  F033  FFE3   	movff	btemp+11,plusw1
 12769                           
 12770                           ;stkvar	_toupper$6155 @ sp[(-2)+0]
 12771  019E7C  0EFE               	movlw	-2
 12772  019E7E  006F FF8C  F001    	movff	plusw1,btemp
 12773  019E84  0EFF               	movlw	-1
 12774  019E86  50E3               	movf	plusw1,w,c
 12775  019E88  1001               	iorwf	btemp^0,w,c
 12776  019E8A  B4D8               	btfsc	status,2,c
 12777  019E8C  D00D               	goto	l7788
 12778                           
 12779                           ;stkvar	_c @ sp[(-2)+-2]
 12780  019E8E  0EFC               	movlw	-4
 12781  019E90  006F FF8C  F001    	movff	plusw1,btemp
 12782  019E96  0EFD               	movlw	-3
 12783  019E98  006F FF8C  F002    	movff	plusw1,btemp+1
 12784  019E9E  0E5F               	movlw	95
 12785  019EA0  1601               	andwf	btemp^0,f,c
 12786  019EA2  0E00               	movlw	0
 12787  019EA4  1602               	andwf	(btemp+1)^0,f,c
 12788  019EA6  D008               	goto	l3445
 12789  019EA8                     l7788:
 12790                           
 12791                           ;stkvar	_c @ sp[(-2)+-2]
 12792  019EA8  0EFC               	movlw	-4
 12793  019EAA  006F FF8C  F001    	movff	plusw1,btemp
 12794  019EB0  0EFD               	movlw	-3
 12795  019EB2  006F FF8C  F002    	movff	plusw1,btemp+1
 12796  019EB8                     l3445:
 12797                           
 12798                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12799  019EB8  52E5               	movf	postdec1,f,c
 12800  019EBA  52E5               	movf	postdec1,f,c
 12801  019EBC  52E5               	movf	postdec1,f,c
 12802  019EBE  52E5               	movf	postdec1,f,c
 12803  019EC0  0012               	return		;funcret
 12804  019EC2                     __end_of_toupper:
 12805                           	opt callstack 0
 12806                           
 12807 ;; *************** function _islower *****************
 12808 ;; Defined at:
 12809 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 12810 ;; Parameters:    Size  Location     Type
 12811 ;;  c               2  [STACK] int 
 12812 ;; Auto vars:     Size  Location     Type
 12813 ;;		None
 12814 ;; Return value:  Size  Location     Type
 12815 ;;                  2  [STACK] int 
 12816 ;; Registers used:
 12817 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 12818 ;; Tracked objects:
 12819 ;;		On entry : 0/0
 12820 ;;		On exit  : 0/0
 12821 ;;		Unchanged: 0/0
 12822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12827 ;;Total ram usage:        0 bytes
 12828 ;; Hardware stack levels used:    1
 12829 ;; Hardware stack levels required when called:   15
 12830 ;; This function calls:
 12831 ;;		Nothing
 12832 ;; This function is called by:
 12833 ;;		_toupper
 12834 ;; This function uses a reentrant model
 12835 ;;
 12836                           
 12837                           	psect	text48
 12838  01AAD6                     __ptext48:
 12839                           	opt callstack 0
 12840  01AAD6                     _islower:
 12841                           	opt callstack 0
 12842                           
 12843                           ;stkvar	_c @ sp[(0)+-2]
 12844                           
 12845                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12846                           ;incstack = 0
 12847 ;; hardware stack exceeded
 12848  01AAD6  0EFE               	movlw	-2
 12849  01AAD8  50E3               	movf	plusw1,w,c
 12850  01AADA  0F9F               	addlw	159
 12851  01AADC  6E0B               	movwf	(btemp+10)^0,c
 12852  01AADE  0EFF               	movlw	-1
 12853  01AAE0  006F FF8C  F00C    	movff	plusw1,btemp+11
 12854  01AAE6  0EFF               	movlw	255
 12855  01AAE8  220C               	addwfc	(btemp+11)^0,f,c
 12856  01AAEA  500C               	movf	(btemp+11)^0,w,c
 12857  01AAEC  E106               	bnz	u5640
 12858  01AAEE  0E1A               	movlw	26
 12859  01AAF0  5C0B               	subwf	(btemp+10)^0,w,c
 12860  01AAF2  B0D8               	btfsc	status,0,c
 12861  01AAF4  D002               	goto	u5640
 12862  01AAF6  0E01               	movlw	1
 12863  01AAF8  D001               	goto	u5650
 12864  01AAFA                     u5640:
 12865  01AAFA  0E00               	movlw	0
 12866  01AAFC                     u5650:
 12867  01AAFC  6E01               	movwf	btemp^0,c
 12868  01AAFE  6A02               	clrf	(btemp+1)^0,c
 12869                           
 12870                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12871  01AB00  52E5               	movf	postdec1,f,c
 12872  01AB02  52E5               	movf	postdec1,f,c
 12873  01AB04  0012               	return		;funcret
 12874  01AB06                     __end_of_islower:
 12875                           	opt callstack 0
 12876                           
 12877 ;; *************** function _isalpha *****************
 12878 ;; Defined at:
 12879 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 12880 ;; Parameters:    Size  Location     Type
 12881 ;;  c               2  [STACK] int 
 12882 ;; Auto vars:     Size  Location     Type
 12883 ;;		None
 12884 ;; Return value:  Size  Location     Type
 12885 ;;                  2  [STACK] int 
 12886 ;; Registers used:
 12887 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 12888 ;; Tracked objects:
 12889 ;;		On entry : 0/0
 12890 ;;		On exit  : 0/0
 12891 ;;		Unchanged: 0/0
 12892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12897 ;;Total ram usage:        0 bytes
 12898 ;; Hardware stack levels used:    1
 12899 ;; Hardware stack levels required when called:   15
 12900 ;; This function calls:
 12901 ;;		Nothing
 12902 ;; This function is called by:
 12903 ;;		_xtoa
 12904 ;; This function uses a reentrant model
 12905 ;;
 12906                           
 12907                           	psect	text49
 12908  01A732                     __ptext49:
 12909                           	opt callstack 0
 12910  01A732                     _isalpha:
 12911                           	opt callstack 0
 12912                           
 12913                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12914                           ;incstack = 0
 12915 ;; hardware stack exceeded
 12916  01A732  0E9F               	movlw	159
 12917  01A734  6E0B               	movwf	(btemp+10)^0,c
 12918  01A736  0EFF               	movlw	255
 12919  01A738  6E0C               	movwf	(btemp+11)^0,c
 12920                           
 12921                           ;stkvar	_c @ sp[(0)+-2]
 12922  01A73A  0EFE               	movlw	-2
 12923  01A73C  006F FF8C  F009    	movff	plusw1,btemp+8
 12924  01A742  0EFF               	movlw	-1
 12925  01A744  006F FF8C  F00A    	movff	plusw1,btemp+9
 12926  01A74A  0E20               	movlw	32
 12927  01A74C  1209               	iorwf	(btemp+8)^0,f,c
 12928  01A74E  0E00               	movlw	0
 12929  01A750  120A               	iorwf	(btemp+9)^0,f,c
 12930  01A752  500B               	movf	(btemp+10)^0,w,c
 12931  01A754  2609               	addwf	(btemp+8)^0,f,c
 12932  01A756  500C               	movf	(btemp+11)^0,w,c
 12933  01A758  220A               	addwfc	(btemp+9)^0,f,c
 12934  01A75A  500A               	movf	(btemp+9)^0,w,c
 12935  01A75C  E106               	bnz	u5930
 12936  01A75E  0E1A               	movlw	26
 12937  01A760  5C09               	subwf	(btemp+8)^0,w,c
 12938  01A762  B0D8               	btfsc	status,0,c
 12939  01A764  D002               	goto	u5930
 12940  01A766  0E01               	movlw	1
 12941  01A768  D001               	goto	u5940
 12942  01A76A                     u5930:
 12943  01A76A  0E00               	movlw	0
 12944  01A76C                     u5940:
 12945  01A76C  6E01               	movwf	btemp^0,c
 12946  01A76E  6A02               	clrf	(btemp+1)^0,c
 12947                           
 12948                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12949  01A770  52E5               	movf	postdec1,f,c
 12950  01A772  52E5               	movf	postdec1,f,c
 12951  01A774  0012               	return		;funcret
 12952  01A776                     __end_of_isalpha:
 12953                           	opt callstack 0
 12954                           
 12955 ;; *************** function _utoa *****************
 12956 ;; Defined at:
 12957 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12958 ;; Parameters:    Size  Location     Type
 12959 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12960 ;;		 -> f(6), NULL(0), 
 12961 ;;  d               8  [STACK] unsigned long long 
 12962 ;; Auto vars:     Size  Location     Type
 12963 ;;  n               8  [STACK] unsigned long long 
 12964 ;;  i               2  [STACK] int 
 12965 ;;  w               2  [STACK] int 
 12966 ;;  p               2  [STACK] int 
 12967 ;; Return value:  Size  Location     Type
 12968 ;;                  2  [STACK] int 
 12969 ;; Registers used:
 12970 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 12971 ;; Tracked objects:
 12972 ;;		On entry : 0/0
 12973 ;;		On exit  : 0/0
 12974 ;;		Unchanged: 0/0
 12975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12980 ;;Total ram usage:        0 bytes
 12981 ;; Hardware stack levels used:    1
 12982 ;; Hardware stack levels required when called:   20
 12983 ;; This function calls:
 12984 ;;		___lodiv
 12985 ;;		___lomod
 12986 ;;		_pad
 12987 ;; This function is called by:
 12988 ;;		_vfpfcnvrt
 12989 ;; This function uses a reentrant model
 12990 ;;
 12991                           
 12992                           	psect	text50
 12993  015E3E                     __ptext50:
 12994                           	opt callstack 0
 12995  015E3E                     _utoa:
 12996                           	opt callstack 0
 12997                           
 12998                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 12999  015E3E  0E0E               	movlw	14
 13000  015E40  26E1               	addwf	fsr1l,f,c
 13001  015E42  0E00               	movlw	0
 13002  015E44  22E2               	addwfc	fsr1h,f,c
 13003                           
 13004                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 13005                           
 13006                           ;incstack = 0
 13007 ;; hardware stack exceeded
 13008  015E46  AE24               	btfss	(_prec+1)^0,7,c
 13009                           
 13010                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 13011  015E48  9225               	bcf	_flags^0,1,c
 13012                           
 13013                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 13014  015E4A  BE24               	btfsc	(_prec+1)^0,7,c
 13015  015E4C  D005               	goto	u11210
 13016  015E4E  5024               	movf	(_prec+1)^0,w,c
 13017  015E50  E110               	bnz	l11858
 13018  015E52  0423               	decf	_prec^0,w,c
 13019  015E54  B0D8               	btfsc	status,0,c
 13020  015E56  D00D               	goto	l11858
 13021  015E58                     u11210:
 13022  015E58  0E01               	movlw	1
 13023  015E5A  6E0B               	movwf	(btemp+10)^0,c
 13024  015E5C  0E00               	movlw	0
 13025  015E5E  6E0C               	movwf	(btemp+11)^0,c
 13026                           
 13027                           ;stkvar	_p @ sp[(-14)+12]
 13028  015E60  0EFE               	movlw	-2
 13029  015E62  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13030  015E68  0EFF               	movlw	-1
 13031  015E6A  0060  F033  FFE3   	movff	btemp+11,plusw1
 13032  015E70  D008               	goto	l2263
 13033  015E72                     l11858:
 13034                           
 13035                           ;stkvar	_p @ sp[(-14)+12]
 13036  015E72  0EFE               	movlw	-2
 13037  015E74  0060  F08F  FFE3   	movff	_prec,plusw1
 13038  015E7A  0EFF               	movlw	-1
 13039  015E7C  0060  F093  FFE3   	movff	_prec+1,plusw1
 13040  015E82                     l2263:
 13041                           
 13042                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 13043                           ;stkvar	_w @ sp[(-14)+10]
 13044  015E82  0EFC               	movlw	-4
 13045  015E84  0060  F087  FFE3   	movff	_width,plusw1
 13046  015E8A  0EFD               	movlw	-3
 13047  015E8C  0060  F08B  FFE3   	movff	_width+1,plusw1
 13048                           
 13049                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 13050                           ;stkvar	_d @ sp[(-14)+-10]
 13051  015E92  0EE8               	movlw	232
 13052  015E94  24E1               	addwf	fsr1l,w,c
 13053  015E96  6ED9               	movwf	fsr2l,c
 13054  015E98  0EFF               	movlw	255
 13055  015E9A  20E2               	addwfc	fsr1h,w,c
 13056  015E9C  6EDA               	movwf	fsr2h,c
 13057                           
 13058                           ;stkvar	_n @ sp[(-14)+0]
 13059  015E9E  0E08               	movlw	8
 13060  015EA0  6E01               	movwf	btemp^0,c
 13061  015EA2  0EF2               	movlw	-14
 13062  015EA4                     us1122999:
 13063  015EA4  006F FF7B FFE3     	movff	postinc2,plusw1
 13064  015EAA  28E8               	incf	wreg,w,c
 13065  015EAC  2E01               	decfsz	btemp^0,f,c
 13066  015EAE  D7FA               	bra	us1122999
 13067                           
 13068                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 13069  015EB0  0E4F               	movlw	79
 13070  015EB2  6E0B               	movwf	(btemp+10)^0,c
 13071  015EB4  0E00               	movlw	0
 13072  015EB6  6E0C               	movwf	(btemp+11)^0,c
 13073                           
 13074                           ;stkvar	_i @ sp[(-14)+8]
 13075  015EB8  0EFA               	movlw	-6
 13076  015EBA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13077  015EC0  0EFB               	movlw	-5
 13078  015EC2  0060  F033  FFE3   	movff	btemp+11,plusw1
 13079                           
 13080                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 13081  015EC8  0103               	movlb	3	; () banked
 13082  015ECA  6BE3               	clrf	(_dbuf+79)& (0+255),b
 13083                           
 13084                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 13085  015ECC  D0FB               	goto	l11876
 13086  015ECE                     l11866:
 13087                           
 13088                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 13089                           ;stkvar	_i @ sp[(-14)+8]
 13090  015ECE  50E1               	movf	fsr1l,w,c
 13091  015ED0  0FFA               	addlw	-6
 13092  015ED2  6ED9               	movwf	fsr2l,c
 13093  015ED4  50E2               	movf	fsr1h,w,c
 13094  015ED6  6EDA               	movwf	fsr2h,c
 13095  015ED8  0EFF               	movlw	255
 13096  015EDA  22DA               	addwfc	fsr2h,f,c
 13097  015EDC  06DE               	decf	postinc2,f,c
 13098  015EDE  0E00               	movlw	0
 13099  015EE0  5ADD               	subwfb	postdec2,f,c
 13100                           
 13101                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 13102  015EE2  0E0A               	movlw	10
 13103  015EE4  6EE6               	movwf	postinc1,c
 13104  015EE6  0E00               	movlw	0
 13105  015EE8  6EE6               	movwf	postinc1,c
 13106  015EEA  0E00               	movlw	0
 13107  015EEC  6EE6               	movwf	postinc1,c
 13108  015EEE  0E00               	movlw	0
 13109  015EF0  6EE6               	movwf	postinc1,c
 13110  015EF2  0E00               	movlw	0
 13111  015EF4  6EE6               	movwf	postinc1,c
 13112  015EF6  0E00               	movlw	0
 13113  015EF8  6EE6               	movwf	postinc1,c
 13114  015EFA  0E00               	movlw	0
 13115  015EFC  6EE6               	movwf	postinc1,c
 13116  015EFE  0E00               	movlw	0
 13117  015F00  6EE6               	movwf	postinc1,c
 13118                           
 13119                           ;stkvar	_n @ sp[(-22)+0]
 13120  015F02  50E1               	movf	fsr1l,w,c
 13121  015F04  0FEA               	addlw	-22
 13122  015F06  6ED9               	movwf	fsr2l,c
 13123  015F08  50E2               	movf	fsr1h,w,c
 13124  015F0A  6EDA               	movwf	fsr2h,c
 13125  015F0C  0EFF               	movlw	255
 13126  015F0E  22DA               	addwfc	fsr2h,f,c
 13127  015F10  006F FF7B FFE6     	movff	postinc2,postinc1
 13128  015F16  006F FF7B FFE6     	movff	postinc2,postinc1
 13129  015F1C  006F FF7B FFE6     	movff	postinc2,postinc1
 13130  015F22  006F FF7B FFE6     	movff	postinc2,postinc1
 13131  015F28  006F FF7B FFE6     	movff	postinc2,postinc1
 13132  015F2E  006F FF7B FFE6     	movff	postinc2,postinc1
 13133  015F34  006F FF7B FFE6     	movff	postinc2,postinc1
 13134  015F3A  006F FF7B FFE6     	movff	postinc2,postinc1
 13135  015F40  EC4C  F0C3         	call	___lomod	;wreg free
 13136  015F44  52E5               	movf	postdec1,f,c
 13137  015F46  006F FF9C  F018    	movff	indf1,btemp+23
 13138  015F4C  52E5               	movf	postdec1,f,c
 13139  015F4E  006F FF9C  F017    	movff	indf1,btemp+22
 13140  015F54  52E5               	movf	postdec1,f,c
 13141  015F56  006F FF9C  F016    	movff	indf1,btemp+21
 13142  015F5C  52E5               	movf	postdec1,f,c
 13143  015F5E  006F FF9C  F015    	movff	indf1,btemp+20
 13144  015F64  52E5               	movf	postdec1,f,c
 13145  015F66  006F FF9C  F014    	movff	indf1,btemp+19
 13146  015F6C  52E5               	movf	postdec1,f,c
 13147  015F6E  006F FF9C  F013    	movff	indf1,btemp+18
 13148  015F74  52E5               	movf	postdec1,f,c
 13149  015F76  006F FF9C  F012    	movff	indf1,btemp+17
 13150  015F7C  52E5               	movf	postdec1,f,c
 13151  015F7E  006F FF9C  F011    	movff	indf1,btemp+16
 13152  015F84  0EF8               	movlw	248
 13153  015F86  26E1               	addwf	fsr1l,f,c
 13154  015F88  0EFF               	movlw	255
 13155  015F8A  22E2               	addwfc	fsr1h,f,c
 13156  015F8C  0E30               	movlw	48
 13157  015F8E  2611               	addwf	(btemp+16)^0,f,c
 13158                           
 13159                           ;stkvar	_i @ sp[(-14)+8]
 13160  015F90  0EFA               	movlw	-6
 13161  015F92  006F FF8C  F00B    	movff	plusw1,btemp+10
 13162  015F98  0EFB               	movlw	-5
 13163  015F9A  006F FF8C  F00C    	movff	plusw1,btemp+11
 13164  015FA0  0E94               	movlw	low _dbuf
 13165  015FA2  240B               	addwf	(btemp+10)^0,w,c
 13166  015FA4  6ED9               	movwf	fsr2l,c
 13167  015FA6  0E03               	movlw	high _dbuf
 13168  015FA8  200C               	addwfc	(btemp+11)^0,w,c
 13169  015FAA  6EDA               	movwf	fsr2h,c
 13170  015FAC  0060  F047  FFDF   	movff	btemp+16,indf2
 13171                           
 13172                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 13173                           ;stkvar	_p @ sp[(-14)+12]
 13174  015FB2  50E1               	movf	fsr1l,w,c
 13175  015FB4  0FFE               	addlw	-2
 13176  015FB6  6ED9               	movwf	fsr2l,c
 13177  015FB8  50E2               	movf	fsr1h,w,c
 13178  015FBA  6EDA               	movwf	fsr2h,c
 13179  015FBC  0EFF               	movlw	255
 13180  015FBE  22DA               	addwfc	fsr2h,f,c
 13181  015FC0  06DE               	decf	postinc2,f,c
 13182  015FC2  0E00               	movlw	0
 13183  015FC4  5ADD               	subwfb	postdec2,f,c
 13184                           
 13185                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 13186                           ;stkvar	_w @ sp[(-14)+10]
 13187  015FC6  50E1               	movf	fsr1l,w,c
 13188  015FC8  0FFC               	addlw	-4
 13189  015FCA  6ED9               	movwf	fsr2l,c
 13190  015FCC  50E2               	movf	fsr1h,w,c
 13191  015FCE  6EDA               	movwf	fsr2h,c
 13192  015FD0  0EFF               	movlw	255
 13193  015FD2  22DA               	addwfc	fsr2h,f,c
 13194  015FD4  06DE               	decf	postinc2,f,c
 13195  015FD6  0E00               	movlw	0
 13196  015FD8  5ADD               	subwfb	postdec2,f,c
 13197                           
 13198                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 13199  015FDA  0E0A               	movlw	10
 13200  015FDC  6EE6               	movwf	postinc1,c
 13201  015FDE  0E00               	movlw	0
 13202  015FE0  6EE6               	movwf	postinc1,c
 13203  015FE2  0E00               	movlw	0
 13204  015FE4  6EE6               	movwf	postinc1,c
 13205  015FE6  0E00               	movlw	0
 13206  015FE8  6EE6               	movwf	postinc1,c
 13207  015FEA  0E00               	movlw	0
 13208  015FEC  6EE6               	movwf	postinc1,c
 13209  015FEE  0E00               	movlw	0
 13210  015FF0  6EE6               	movwf	postinc1,c
 13211  015FF2  0E00               	movlw	0
 13212  015FF4  6EE6               	movwf	postinc1,c
 13213  015FF6  0E00               	movlw	0
 13214  015FF8  6EE6               	movwf	postinc1,c
 13215                           
 13216                           ;stkvar	_n @ sp[(-22)+0]
 13217  015FFA  50E1               	movf	fsr1l,w,c
 13218  015FFC  0FEA               	addlw	-22
 13219  015FFE  6ED9               	movwf	fsr2l,c
 13220  016000  50E2               	movf	fsr1h,w,c
 13221  016002  6EDA               	movwf	fsr2h,c
 13222  016004  0EFF               	movlw	255
 13223  016006  22DA               	addwfc	fsr2h,f,c
 13224  016008  006F FF7B FFE6     	movff	postinc2,postinc1
 13225  01600E  006F FF7B FFE6     	movff	postinc2,postinc1
 13226  016014  006F FF7B FFE6     	movff	postinc2,postinc1
 13227  01601A  006F FF7B FFE6     	movff	postinc2,postinc1
 13228  016020  006F FF7B FFE6     	movff	postinc2,postinc1
 13229  016026  006F FF7B FFE6     	movff	postinc2,postinc1
 13230  01602C  006F FF7B FFE6     	movff	postinc2,postinc1
 13231  016032  006F FF7B FFE6     	movff	postinc2,postinc1
 13232  016038  EC57  F0BE         	call	___lodiv	;wreg free
 13233  01603C  52E5               	movf	postdec1,f,c
 13234  01603E  006F FF9C  F018    	movff	indf1,btemp+23
 13235  016044  52E5               	movf	postdec1,f,c
 13236  016046  006F FF9C  F017    	movff	indf1,btemp+22
 13237  01604C  52E5               	movf	postdec1,f,c
 13238  01604E  006F FF9C  F016    	movff	indf1,btemp+21
 13239  016054  52E5               	movf	postdec1,f,c
 13240  016056  006F FF9C  F015    	movff	indf1,btemp+20
 13241  01605C  52E5               	movf	postdec1,f,c
 13242  01605E  006F FF9C  F014    	movff	indf1,btemp+19
 13243  016064  52E5               	movf	postdec1,f,c
 13244  016066  006F FF9C  F013    	movff	indf1,btemp+18
 13245  01606C  52E5               	movf	postdec1,f,c
 13246  01606E  006F FF9C  F012    	movff	indf1,btemp+17
 13247  016074  52E5               	movf	postdec1,f,c
 13248  016076  006F FF9C  F011    	movff	indf1,btemp+16
 13249  01607C  0EF8               	movlw	248
 13250  01607E  26E1               	addwf	fsr1l,f,c
 13251  016080  0EFF               	movlw	255
 13252  016082  22E2               	addwfc	fsr1h,f,c
 13253                           
 13254                           ;stkvar	_n @ sp[(-14)+0]
 13255  016084  0EF2               	movlw	-14
 13256  016086  0060  F047  FFE3   	movff	btemp+16,plusw1
 13257  01608C  0EF3               	movlw	-13
 13258  01608E  0060  F04B  FFE3   	movff	btemp+17,plusw1
 13259  016094  0EF4               	movlw	-12
 13260  016096  0060  F04F  FFE3   	movff	btemp+18,plusw1
 13261  01609C  0EF5               	movlw	-11
 13262  01609E  0060  F053  FFE3   	movff	btemp+19,plusw1
 13263  0160A4  0EF6               	movlw	-10
 13264  0160A6  0060  F057  FFE3   	movff	btemp+20,plusw1
 13265  0160AC  0EF7               	movlw	-9
 13266  0160AE  0060  F05B  FFE3   	movff	btemp+21,plusw1
 13267  0160B4  0EF8               	movlw	-8
 13268  0160B6  0060  F05F  FFE3   	movff	btemp+22,plusw1
 13269  0160BC  0EF9               	movlw	-7
 13270  0160BE  0060  F063  FFE3   	movff	btemp+23,plusw1
 13271  0160C4                     l11876:
 13272                           
 13273                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 13274                           ;stkvar	_i @ sp[(-14)+8]
 13275  0160C4  0EFA               	movlw	-6
 13276  0160C6  006F FF8C  F001    	movff	plusw1,btemp
 13277  0160CC  0EFB               	movlw	-5
 13278  0160CE  50E3               	movf	plusw1,w,c
 13279  0160D0  1001               	iorwf	btemp^0,w,c
 13280  0160D2  B4D8               	btfsc	status,2,c
 13281  0160D4  D02F               	goto	u11270
 13282                           
 13283                           ;stkvar	_n @ sp[(-14)+0]
 13284  0160D6  0EF2               	movlw	-14
 13285  0160D8  50E3               	movf	plusw1,w,c
 13286  0160DA  E115               	bnz	u11241
 13287  0160DC  0EF3               	movlw	-13
 13288  0160DE  50E3               	movf	plusw1,w,c
 13289  0160E0  E112               	bnz	u11241
 13290  0160E2  0EF4               	movlw	-12
 13291  0160E4  50E3               	movf	plusw1,w,c
 13292  0160E6  E10F               	bnz	u11241
 13293  0160E8  0EF5               	movlw	-11
 13294  0160EA  50E3               	movf	plusw1,w,c
 13295  0160EC  E10C               	bnz	u11241
 13296  0160EE  0EF6               	movlw	-10
 13297  0160F0  50E3               	movf	plusw1,w,c
 13298  0160F2  E109               	bnz	u11241
 13299  0160F4  0EF7               	movlw	-9
 13300  0160F6  50E3               	movf	plusw1,w,c
 13301  0160F8  E106               	bnz	u11241
 13302  0160FA  0EF8               	movlw	-8
 13303  0160FC  50E3               	movf	plusw1,w,c
 13304  0160FE  E103               	bnz	u11241
 13305  016100  0EF9               	movlw	-7
 13306  016102  50E3               	movf	plusw1,w,c
 13307  016104  A4D8               	btfss	status,2,c
 13308  016106                     u11241:
 13309  016106  D6E3               	goto	l11866
 13310                           
 13311                           ;stkvar	_p @ sp[(-14)+12]
 13312  016108  0EFF               	movlw	-1
 13313  01610A  BEE3               	btfsc	plusw1,7,c
 13314  01610C  D007               	goto	u11250
 13315  01610E  0EFF               	movlw	-1
 13316  016110  50E3               	movf	plusw1,w,c
 13317  016112  E103               	bnz	u11251
 13318  016114  0EFE               	movlw	-2
 13319  016116  04E3               	decf	plusw1,w,c
 13320  016118  B0D8               	btfsc	status,0,c
 13321  01611A                     u11251:
 13322  01611A  D6D9               	goto	l11866
 13323  01611C                     u11250:
 13324                           
 13325                           ;stkvar	_w @ sp[(-14)+10]
 13326  01611C  0EFD               	movlw	-3
 13327  01611E  BEE3               	btfsc	plusw1,7,c
 13328  016120  D009               	goto	u11270
 13329  016122  0EFD               	movlw	-3
 13330  016124  50E3               	movf	plusw1,w,c
 13331  016126  E104               	bnz	u11260
 13332  016128  0EFC               	movlw	-4
 13333  01612A  04E3               	decf	plusw1,w,c
 13334  01612C  A0D8               	btfss	status,0,c
 13335  01612E  D002               	goto	u11270
 13336  016130                     u11260:
 13337  016130  B225               	btfsc	_flags^0,1,c
 13338  016132  D6CD               	goto	l11866
 13339  016134                     u11270:
 13340                           
 13341                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 13342                           ;stkvar	_w @ sp[(-14)+10]
 13343  016134  0EFC               	movlw	-4
 13344  016136  006F FF8F FFE6     	movff	plusw1,postinc1
 13345  01613C  006F FF8F FFE6     	movff	plusw1,postinc1
 13346                           
 13347                           ;stkvar	_i @ sp[(-16)+8]
 13348  016142  0E94               	movlw	low _dbuf
 13349  016144  6E0B               	movwf	(btemp+10)^0,c
 13350  016146  0E03               	movlw	high _dbuf
 13351  016148  6E0C               	movwf	(btemp+11)^0,c
 13352  01614A  0EF8               	movlw	-8
 13353  01614C  50E3               	movf	plusw1,w,c
 13354  01614E  260B               	addwf	(btemp+10)^0,f,c
 13355  016150  0EF9               	movlw	-7
 13356  016152  50E3               	movf	plusw1,w,c
 13357  016154  220C               	addwfc	(btemp+11)^0,f,c
 13358  016156  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13359  01615C  0060  F033  FFE6   	movff	btemp+11,postinc1
 13360                           
 13361                           ;stkvar	_fp @ sp[(-18)+-2]
 13362  016162  0EEC               	movlw	-20
 13363  016164  006F FF8F FFE6     	movff	plusw1,postinc1
 13364  01616A  006F FF8F FFE6     	movff	plusw1,postinc1
 13365  016170  EC3F  F0C6         	call	_pad	;wreg free
 13366                           
 13367                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 13368  016174  0EE8               	movlw	232
 13369  016176  26E1               	addwf	fsr1l,f,c
 13370  016178  0EFF               	movlw	255
 13371  01617A  22E2               	addwfc	fsr1h,f,c
 13372  01617C  0012               	return		;funcret
 13373  01617E                     __end_of_utoa:
 13374                           	opt callstack 0
 13375                           
 13376 ;; *************** function ___lomod *****************
 13377 ;; Defined at:
 13378 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 13379 ;; Parameters:    Size  Location     Type
 13380 ;;  dividend        8  [STACK] unsigned long long 
 13381 ;;  divisor         8  [STACK] unsigned long long 
 13382 ;; Auto vars:     Size  Location     Type
 13383 ;;  counter         1  [STACK] unsigned char 
 13384 ;; Return value:  Size  Location     Type
 13385 ;;                  8  [STACK] unsigned long long 
 13386 ;; Registers used:
 13387 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 13388 ;; Tracked objects:
 13389 ;;		On entry : 0/3
 13390 ;;		On exit  : 0/0
 13391 ;;		Unchanged: 0/0
 13392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13397 ;;Total ram usage:        0 bytes
 13398 ;; Hardware stack levels used:    1
 13399 ;; Hardware stack levels required when called:   15
 13400 ;; This function calls:
 13401 ;;		Nothing
 13402 ;; This function is called by:
 13403 ;;		_utoa
 13404 ;; This function uses a reentrant model
 13405 ;;
 13406                           
 13407                           	psect	text51
 13408  018698                     __ptext51:
 13409                           	opt callstack 0
 13410  018698                     ___lomod:
 13411                           	opt callstack 0
 13412                           
 13413                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 13414  018698  52E6               	movf	postinc1,f,c
 13415                           
 13416                           ;stkvar	_divisor @ sp[(-1)+-16]
 13417                           
 13418                           ;incstack = 0
 13419 ;; hardware stack exceeded
 13420  01869A  0EEF               	movlw	-17
 13421  01869C  50E3               	movf	plusw1,w,c
 13422  01869E  E116               	bnz	u7080
 13423  0186A0  0EF0               	movlw	-16
 13424  0186A2  50E3               	movf	plusw1,w,c
 13425  0186A4  E113               	bnz	u7080
 13426  0186A6  0EF1               	movlw	-15
 13427  0186A8  50E3               	movf	plusw1,w,c
 13428  0186AA  E110               	bnz	u7080
 13429  0186AC  0EF2               	movlw	-14
 13430  0186AE  50E3               	movf	plusw1,w,c
 13431  0186B0  E10D               	bnz	u7080
 13432  0186B2  0EF3               	movlw	-13
 13433  0186B4  50E3               	movf	plusw1,w,c
 13434  0186B6  E10A               	bnz	u7080
 13435  0186B8  0EF4               	movlw	-12
 13436  0186BA  50E3               	movf	plusw1,w,c
 13437  0186BC  E107               	bnz	u7080
 13438  0186BE  0EF5               	movlw	-11
 13439  0186C0  50E3               	movf	plusw1,w,c
 13440  0186C2  E104               	bnz	u7080
 13441  0186C4  0EF6               	movlw	-10
 13442  0186C6  50E3               	movf	plusw1,w,c
 13443  0186C8  B4D8               	btfsc	status,2,c
 13444  0186CA  D075               	goto	u7110
 13445  0186CC                     u7080:
 13446                           
 13447                           ;stkvar	_counter @ sp[(-1)+0]
 13448  0186CC  0EFF               	movlw	-1
 13449  0186CE  6AE3               	clrf	plusw1,c
 13450  0186D0  D012               	goto	L9
 13451  0186D2                     l8398:
 13452                           
 13453                           ;stkvar	_divisor @ sp[(-1)+-16]
 13454  0186D2  90D8               	bcf	status,0,c
 13455  0186D4  0EEF               	movlw	-17
 13456  0186D6  36E3               	rlcf	plusw1,f,c
 13457  0186D8  0EF0               	movlw	-16
 13458  0186DA  36E3               	rlcf	plusw1,f,c
 13459  0186DC  0EF1               	movlw	-15
 13460  0186DE  36E3               	rlcf	plusw1,f,c
 13461  0186E0  0EF2               	movlw	-14
 13462  0186E2  36E3               	rlcf	plusw1,f,c
 13463  0186E4  0EF3               	movlw	-13
 13464  0186E6  36E3               	rlcf	plusw1,f,c
 13465  0186E8  0EF4               	movlw	-12
 13466  0186EA  36E3               	rlcf	plusw1,f,c
 13467  0186EC  0EF5               	movlw	-11
 13468  0186EE  36E3               	rlcf	plusw1,f,c
 13469  0186F0  0EF6               	movlw	-10
 13470  0186F2  36E3               	rlcf	plusw1,f,c
 13471                           
 13472                           ;stkvar	_counter @ sp[(-1)+0]
 13473  0186F4  0EFF               	movlw	-1
 13474  0186F6                     L9:
 13475  0186F6  2AE3               	incf	plusw1,f,c
 13476                           
 13477                           ;stkvar	_divisor @ sp[(-1)+-16]
 13478  0186F8  0EF6               	movlw	-10
 13479  0186FA  AEE3               	btfss	plusw1,7,c
 13480  0186FC  D7EA               	goto	l8398
 13481  0186FE                     u7090:
 13482                           
 13483                           ;stkvar	_divisor @ sp[(-1)+-16]
 13484                           ;stkvar	_dividend @ sp[(-1)+-8]
 13485  0186FE  50E1               	movf	fsr1l,w,c
 13486  018700  0FF7               	addlw	-9
 13487  018702  6ED9               	movwf	fsr2l,c
 13488  018704  50E2               	movf	fsr1h,w,c
 13489  018706  6EDA               	movwf	fsr2h,c
 13490  018708  0EFF               	movlw	255
 13491  01870A  22DA               	addwfc	fsr2h,f,c
 13492  01870C  0EEF               	movlw	-17
 13493  01870E  50E3               	movf	plusw1,w,c
 13494  018710  5CDE               	subwf	postinc2,w,c
 13495  018712  0EF0               	movlw	-16
 13496  018714  50E3               	movf	plusw1,w,c
 13497  018716  58DE               	subwfb	postinc2,w,c
 13498  018718  0EF1               	movlw	-15
 13499  01871A  50E3               	movf	plusw1,w,c
 13500  01871C  58DE               	subwfb	postinc2,w,c
 13501  01871E  0EF2               	movlw	-14
 13502  018720  50E3               	movf	plusw1,w,c
 13503  018722  58DE               	subwfb	postinc2,w,c
 13504  018724  0EF3               	movlw	-13
 13505  018726  50E3               	movf	plusw1,w,c
 13506  018728  58DE               	subwfb	postinc2,w,c
 13507  01872A  0EF4               	movlw	-12
 13508  01872C  50E3               	movf	plusw1,w,c
 13509  01872E  58DE               	subwfb	postinc2,w,c
 13510  018730  0EF5               	movlw	-11
 13511  018732  50E3               	movf	plusw1,w,c
 13512  018734  58DE               	subwfb	postinc2,w,c
 13513  018736  0EF6               	movlw	-10
 13514  018738  50E3               	movf	plusw1,w,c
 13515  01873A  58DE               	subwfb	postinc2,w,c
 13516  01873C  A0D8               	btfss	status,0,c
 13517  01873E  D01F               	goto	l8406
 13518                           
 13519                           ;stkvar	_divisor @ sp[(-1)+-16]
 13520                           ;stkvar	_dividend @ sp[(-1)+-8]
 13521  018740  50E1               	movf	fsr1l,w,c
 13522  018742  0FF7               	addlw	-9
 13523  018744  6ED9               	movwf	fsr2l,c
 13524  018746  50E2               	movf	fsr1h,w,c
 13525  018748  6EDA               	movwf	fsr2h,c
 13526  01874A  0EFF               	movlw	255
 13527  01874C  22DA               	addwfc	fsr2h,f,c
 13528  01874E  0EEF               	movlw	-17
 13529  018750  50E3               	movf	plusw1,w,c
 13530  018752  5EDE               	subwf	postinc2,f,c
 13531  018754  0EF0               	movlw	-16
 13532  018756  50E3               	movf	plusw1,w,c
 13533  018758  5ADE               	subwfb	postinc2,f,c
 13534  01875A  0EF1               	movlw	-15
 13535  01875C  50E3               	movf	plusw1,w,c
 13536  01875E  5ADE               	subwfb	postinc2,f,c
 13537  018760  0EF2               	movlw	-14
 13538  018762  50E3               	movf	plusw1,w,c
 13539  018764  5ADE               	subwfb	postinc2,f,c
 13540  018766  0EF3               	movlw	-13
 13541  018768  50E3               	movf	plusw1,w,c
 13542  01876A  5ADE               	subwfb	postinc2,f,c
 13543  01876C  0EF4               	movlw	-12
 13544  01876E  50E3               	movf	plusw1,w,c
 13545  018770  5ADE               	subwfb	postinc2,f,c
 13546  018772  0EF5               	movlw	-11
 13547  018774  50E3               	movf	plusw1,w,c
 13548  018776  5ADE               	subwfb	postinc2,f,c
 13549  018778  0EF6               	movlw	-10
 13550  01877A  50E3               	movf	plusw1,w,c
 13551  01877C  5ADE               	subwfb	postinc2,f,c
 13552  01877E                     l8406:
 13553                           
 13554                           ;stkvar	_divisor @ sp[(-1)+-16]
 13555  01877E  90D8               	bcf	status,0,c
 13556  018780  0EF6               	movlw	-10
 13557  018782  32E3               	rrcf	plusw1,f,c
 13558  018784  0EF5               	movlw	-11
 13559  018786  32E3               	rrcf	plusw1,f,c
 13560  018788  0EF4               	movlw	-12
 13561  01878A  32E3               	rrcf	plusw1,f,c
 13562  01878C  0EF3               	movlw	-13
 13563  01878E  32E3               	rrcf	plusw1,f,c
 13564  018790  0EF2               	movlw	-14
 13565  018792  32E3               	rrcf	plusw1,f,c
 13566  018794  0EF1               	movlw	-15
 13567  018796  32E3               	rrcf	plusw1,f,c
 13568  018798  0EF0               	movlw	-16
 13569  01879A  32E3               	rrcf	plusw1,f,c
 13570  01879C  0EEF               	movlw	-17
 13571  01879E  32E3               	rrcf	plusw1,f,c
 13572                           
 13573                           ;stkvar	_counter @ sp[(-1)+0]
 13574  0187A0  0EFF               	movlw	-1
 13575  0187A2  50E3               	movf	plusw1,w,c
 13576  0187A4  6E01               	movwf	btemp^0,c
 13577  0187A6  0E01               	movlw	1
 13578  0187A8  5E01               	subwf	btemp^0,f,c
 13579  0187AA  0EFF               	movlw	-1
 13580  0187AC  0060  F007  FFE3   	movff	btemp,plusw1
 13581  0187B2  A4D8               	btfss	status,2,c
 13582  0187B4  D7A4               	goto	u7090
 13583  0187B6                     u7110:
 13584                           
 13585                           ;stkvar	_dividend @ sp[(-1)+-8]
 13586  0187B6  0EF7               	movlw	247
 13587  0187B8  24E1               	addwf	fsr1l,w,c
 13588  0187BA  6ED9               	movwf	fsr2l,c
 13589  0187BC  0EFF               	movlw	255
 13590  0187BE  20E2               	addwfc	fsr1h,w,c
 13591  0187C0  6EDA               	movwf	fsr2h,c
 13592                           
 13593                           ;stkvar	?___lomod @ sp[(-1)+-8]
 13594  0187C2  0E08               	movlw	8
 13595  0187C4  6E01               	movwf	btemp^0,c
 13596  0187C6  0EF7               	movlw	-9
 13597  0187C8                     us712999:
 13598  0187C8  006F FF7B FFE3     	movff	postinc2,plusw1
 13599  0187CE  28E8               	incf	wreg,w,c
 13600  0187D0  2E01               	decfsz	btemp^0,f,c
 13601  0187D2  D7FA               	bra	us712999
 13602                           
 13603                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 13604  0187D4  52E5               	movf	postdec1,f,c
 13605  0187D6  0012               	return		;funcret
 13606  0187D8                     __end_of___lomod:
 13607                           	opt callstack 0
 13608                           
 13609 ;; *************** function ___lodiv *****************
 13610 ;; Defined at:
 13611 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 13612 ;; Parameters:    Size  Location     Type
 13613 ;;  dividend        8  [STACK] unsigned long long 
 13614 ;;  divisor         8  [STACK] unsigned long long 
 13615 ;; Auto vars:     Size  Location     Type
 13616 ;;  quotient        8  [STACK] unsigned long long 
 13617 ;;  counter         1  [STACK] unsigned char 
 13618 ;; Return value:  Size  Location     Type
 13619 ;;                  8  [STACK] unsigned long long 
 13620 ;; Registers used:
 13621 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 13622 ;; Tracked objects:
 13623 ;;		On entry : 0/3
 13624 ;;		On exit  : 0/0
 13625 ;;		Unchanged: 0/0
 13626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13631 ;;Total ram usage:        0 bytes
 13632 ;; Hardware stack levels used:    1
 13633 ;; Hardware stack levels required when called:   15
 13634 ;; This function calls:
 13635 ;;		Nothing
 13636 ;; This function is called by:
 13637 ;;		_utoa
 13638 ;; This function uses a reentrant model
 13639 ;;
 13640                           
 13641                           	psect	text52
 13642  017CAE                     __ptext52:
 13643                           	opt callstack 0
 13644  017CAE                     ___lodiv:
 13645                           	opt callstack 0
 13646                           
 13647                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 13648  017CAE  0E09               	movlw	9
 13649  017CB0  26E1               	addwf	fsr1l,f,c
 13650  017CB2  0E00               	movlw	0
 13651  017CB4  22E2               	addwfc	fsr1h,f,c
 13652                           
 13653                           ;stkvar	_quotient @ sp[(-9)+0]
 13654                           
 13655                           ;incstack = 0
 13656 ;; hardware stack exceeded
 13657  017CB6  0E07               	movlw	7
 13658  017CB8  6E01               	movwf	btemp^0,c
 13659  017CBA  0EF7               	movlw	-9
 13660  017CBC                     u7021:
 13661  017CBC  6AE3               	clrf	plusw1,c
 13662  017CBE  2AE8               	incf	wreg,f,c
 13663  017CC0  0601               	decf	btemp^0,f,c
 13664  017CC2  E2FC               	bc	u7021
 13665                           
 13666                           ;stkvar	_divisor @ sp[(-9)+-16]
 13667  017CC4  0EE7               	movlw	-25
 13668  017CC6  50E3               	movf	plusw1,w,c
 13669  017CC8  E116               	bnz	u7030
 13670  017CCA  0EE8               	movlw	-24
 13671  017CCC  50E3               	movf	plusw1,w,c
 13672  017CCE  E113               	bnz	u7030
 13673  017CD0  0EE9               	movlw	-23
 13674  017CD2  50E3               	movf	plusw1,w,c
 13675  017CD4  E110               	bnz	u7030
 13676  017CD6  0EEA               	movlw	-22
 13677  017CD8  50E3               	movf	plusw1,w,c
 13678  017CDA  E10D               	bnz	u7030
 13679  017CDC  0EEB               	movlw	-21
 13680  017CDE  50E3               	movf	plusw1,w,c
 13681  017CE0  E10A               	bnz	u7030
 13682  017CE2  0EEC               	movlw	-20
 13683  017CE4  50E3               	movf	plusw1,w,c
 13684  017CE6  E107               	bnz	u7030
 13685  017CE8  0EED               	movlw	-19
 13686  017CEA  50E3               	movf	plusw1,w,c
 13687  017CEC  E104               	bnz	u7030
 13688  017CEE  0EEE               	movlw	-18
 13689  017CF0  50E3               	movf	plusw1,w,c
 13690  017CF2  B4D8               	btfsc	status,2,c
 13691  017CF4  D088               	goto	u7060
 13692  017CF6                     u7030:
 13693                           
 13694                           ;stkvar	_counter @ sp[(-9)+8]
 13695  017CF6  0EFF               	movlw	-1
 13696  017CF8  6AE3               	clrf	plusw1,c
 13697  017CFA  D012               	goto	L10
 13698  017CFC                     l8374:
 13699                           
 13700                           ;stkvar	_divisor @ sp[(-9)+-16]
 13701  017CFC  90D8               	bcf	status,0,c
 13702  017CFE  0EE7               	movlw	-25
 13703  017D00  36E3               	rlcf	plusw1,f,c
 13704  017D02  0EE8               	movlw	-24
 13705  017D04  36E3               	rlcf	plusw1,f,c
 13706  017D06  0EE9               	movlw	-23
 13707  017D08  36E3               	rlcf	plusw1,f,c
 13708  017D0A  0EEA               	movlw	-22
 13709  017D0C  36E3               	rlcf	plusw1,f,c
 13710  017D0E  0EEB               	movlw	-21
 13711  017D10  36E3               	rlcf	plusw1,f,c
 13712  017D12  0EEC               	movlw	-20
 13713  017D14  36E3               	rlcf	plusw1,f,c
 13714  017D16  0EED               	movlw	-19
 13715  017D18  36E3               	rlcf	plusw1,f,c
 13716  017D1A  0EEE               	movlw	-18
 13717  017D1C  36E3               	rlcf	plusw1,f,c
 13718                           
 13719                           ;stkvar	_counter @ sp[(-9)+8]
 13720  017D1E  0EFF               	movlw	-1
 13721  017D20                     L10:
 13722  017D20  2AE3               	incf	plusw1,f,c
 13723                           
 13724                           ;stkvar	_divisor @ sp[(-9)+-16]
 13725  017D22  0EEE               	movlw	-18
 13726  017D24  AEE3               	btfss	plusw1,7,c
 13727  017D26  D7EA               	goto	l8374
 13728  017D28                     u7040:
 13729                           
 13730                           ;stkvar	_quotient @ sp[(-9)+0]
 13731  017D28  90D8               	bcf	status,0,c
 13732  017D2A  0EF7               	movlw	-9
 13733  017D2C  36E3               	rlcf	plusw1,f,c
 13734  017D2E  0EF8               	movlw	-8
 13735  017D30  36E3               	rlcf	plusw1,f,c
 13736  017D32  0EF9               	movlw	-7
 13737  017D34  36E3               	rlcf	plusw1,f,c
 13738  017D36  0EFA               	movlw	-6
 13739  017D38  36E3               	rlcf	plusw1,f,c
 13740  017D3A  0EFB               	movlw	-5
 13741  017D3C  36E3               	rlcf	plusw1,f,c
 13742  017D3E  0EFC               	movlw	-4
 13743  017D40  36E3               	rlcf	plusw1,f,c
 13744  017D42  0EFD               	movlw	-3
 13745  017D44  36E3               	rlcf	plusw1,f,c
 13746  017D46  0EFE               	movlw	-2
 13747  017D48  36E3               	rlcf	plusw1,f,c
 13748                           
 13749                           ;stkvar	_divisor @ sp[(-9)+-16]
 13750                           ;stkvar	_dividend @ sp[(-9)+-8]
 13751  017D4A  50E1               	movf	fsr1l,w,c
 13752  017D4C  0FEF               	addlw	-17
 13753  017D4E  6ED9               	movwf	fsr2l,c
 13754  017D50  50E2               	movf	fsr1h,w,c
 13755  017D52  6EDA               	movwf	fsr2h,c
 13756  017D54  0EFF               	movlw	255
 13757  017D56  22DA               	addwfc	fsr2h,f,c
 13758  017D58  0EE7               	movlw	-25
 13759  017D5A  50E3               	movf	plusw1,w,c
 13760  017D5C  5CDE               	subwf	postinc2,w,c
 13761  017D5E  0EE8               	movlw	-24
 13762  017D60  50E3               	movf	plusw1,w,c
 13763  017D62  58DE               	subwfb	postinc2,w,c
 13764  017D64  0EE9               	movlw	-23
 13765  017D66  50E3               	movf	plusw1,w,c
 13766  017D68  58DE               	subwfb	postinc2,w,c
 13767  017D6A  0EEA               	movlw	-22
 13768  017D6C  50E3               	movf	plusw1,w,c
 13769  017D6E  58DE               	subwfb	postinc2,w,c
 13770  017D70  0EEB               	movlw	-21
 13771  017D72  50E3               	movf	plusw1,w,c
 13772  017D74  58DE               	subwfb	postinc2,w,c
 13773  017D76  0EEC               	movlw	-20
 13774  017D78  50E3               	movf	plusw1,w,c
 13775  017D7A  58DE               	subwfb	postinc2,w,c
 13776  017D7C  0EED               	movlw	-19
 13777  017D7E  50E3               	movf	plusw1,w,c
 13778  017D80  58DE               	subwfb	postinc2,w,c
 13779  017D82  0EEE               	movlw	-18
 13780  017D84  50E3               	movf	plusw1,w,c
 13781  017D86  58DE               	subwfb	postinc2,w,c
 13782  017D88  A0D8               	btfss	status,0,c
 13783  017D8A  D021               	goto	l8386
 13784                           
 13785                           ;stkvar	_divisor @ sp[(-9)+-16]
 13786                           ;stkvar	_dividend @ sp[(-9)+-8]
 13787  017D8C  50E1               	movf	fsr1l,w,c
 13788  017D8E  0FEF               	addlw	-17
 13789  017D90  6ED9               	movwf	fsr2l,c
 13790  017D92  50E2               	movf	fsr1h,w,c
 13791  017D94  6EDA               	movwf	fsr2h,c
 13792  017D96  0EFF               	movlw	255
 13793  017D98  22DA               	addwfc	fsr2h,f,c
 13794  017D9A  0EE7               	movlw	-25
 13795  017D9C  50E3               	movf	plusw1,w,c
 13796  017D9E  5EDE               	subwf	postinc2,f,c
 13797  017DA0  0EE8               	movlw	-24
 13798  017DA2  50E3               	movf	plusw1,w,c
 13799  017DA4  5ADE               	subwfb	postinc2,f,c
 13800  017DA6  0EE9               	movlw	-23
 13801  017DA8  50E3               	movf	plusw1,w,c
 13802  017DAA  5ADE               	subwfb	postinc2,f,c
 13803  017DAC  0EEA               	movlw	-22
 13804  017DAE  50E3               	movf	plusw1,w,c
 13805  017DB0  5ADE               	subwfb	postinc2,f,c
 13806  017DB2  0EEB               	movlw	-21
 13807  017DB4  50E3               	movf	plusw1,w,c
 13808  017DB6  5ADE               	subwfb	postinc2,f,c
 13809  017DB8  0EEC               	movlw	-20
 13810  017DBA  50E3               	movf	plusw1,w,c
 13811  017DBC  5ADE               	subwfb	postinc2,f,c
 13812  017DBE  0EED               	movlw	-19
 13813  017DC0  50E3               	movf	plusw1,w,c
 13814  017DC2  5ADE               	subwfb	postinc2,f,c
 13815  017DC4  0EEE               	movlw	-18
 13816  017DC6  50E3               	movf	plusw1,w,c
 13817  017DC8  5ADE               	subwfb	postinc2,f,c
 13818                           
 13819                           ;stkvar	_quotient @ sp[(-9)+0]
 13820  017DCA  0EF7               	movlw	-9
 13821  017DCC  80E3               	bsf	plusw1,0,c
 13822  017DCE                     l8386:
 13823                           
 13824                           ;stkvar	_divisor @ sp[(-9)+-16]
 13825  017DCE  90D8               	bcf	status,0,c
 13826  017DD0  0EEE               	movlw	-18
 13827  017DD2  32E3               	rrcf	plusw1,f,c
 13828  017DD4  0EED               	movlw	-19
 13829  017DD6  32E3               	rrcf	plusw1,f,c
 13830  017DD8  0EEC               	movlw	-20
 13831  017DDA  32E3               	rrcf	plusw1,f,c
 13832  017DDC  0EEB               	movlw	-21
 13833  017DDE  32E3               	rrcf	plusw1,f,c
 13834  017DE0  0EEA               	movlw	-22
 13835  017DE2  32E3               	rrcf	plusw1,f,c
 13836  017DE4  0EE9               	movlw	-23
 13837  017DE6  32E3               	rrcf	plusw1,f,c
 13838  017DE8  0EE8               	movlw	-24
 13839  017DEA  32E3               	rrcf	plusw1,f,c
 13840  017DEC  0EE7               	movlw	-25
 13841  017DEE  32E3               	rrcf	plusw1,f,c
 13842                           
 13843                           ;stkvar	_counter @ sp[(-9)+8]
 13844  017DF0  0EFF               	movlw	-1
 13845  017DF2  50E3               	movf	plusw1,w,c
 13846  017DF4  6E01               	movwf	btemp^0,c
 13847  017DF6  0E01               	movlw	1
 13848  017DF8  5E01               	subwf	btemp^0,f,c
 13849  017DFA  0EFF               	movlw	-1
 13850  017DFC  0060  F007  FFE3   	movff	btemp,plusw1
 13851  017E02  A4D8               	btfss	status,2,c
 13852  017E04  D791               	goto	u7040
 13853  017E06                     u7060:
 13854                           
 13855                           ;stkvar	_quotient @ sp[(-9)+0]
 13856  017E06  0EF7               	movlw	247
 13857  017E08  24E1               	addwf	fsr1l,w,c
 13858  017E0A  6ED9               	movwf	fsr2l,c
 13859  017E0C  0EFF               	movlw	255
 13860  017E0E  20E2               	addwfc	fsr1h,w,c
 13861  017E10  6EDA               	movwf	fsr2h,c
 13862                           
 13863                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 13864  017E12  0E08               	movlw	8
 13865  017E14  6E01               	movwf	btemp^0,c
 13866  017E16  0EEF               	movlw	-17
 13867  017E18                     us707999:
 13868  017E18  006F FF7B FFE3     	movff	postinc2,plusw1
 13869  017E1E  28E8               	incf	wreg,w,c
 13870  017E20  2E01               	decfsz	btemp^0,f,c
 13871  017E22  D7FA               	bra	us707999
 13872                           
 13873                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 13874  017E24  0EF7               	movlw	247
 13875  017E26  26E1               	addwf	fsr1l,f,c
 13876  017E28  0EFF               	movlw	255
 13877  017E2A  22E2               	addwfc	fsr1h,f,c
 13878  017E2C  0012               	return		;funcret
 13879  017E2E                     __end_of___lodiv:
 13880                           	opt callstack 0
 13881                           
 13882 ;; *************** function _strncmp *****************
 13883 ;; Defined at:
 13884 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 13885 ;; Parameters:    Size  Location     Type
 13886 ;;  _l              2  [STACK] PTR const unsigned char 
 13887 ;;		 -> ct(3), STR_56(85), STR_54(3), STR_53(3), 
 13888 ;;		 -> STR_52(19), STR_51(19), STR_50(19), STR_49(19), 
 13889 ;;		 -> STR_48(19), STR_47(19), STR_46(24), STR_45(15), 
 13890 ;;		 -> STR_44(15), STR_43(15), STR_42(10), STR_41(10), 
 13891 ;;		 -> STR_40(19), STR_39(19), STR_36(3), STR_35(3), 
 13892 ;;		 -> STR_34(3), STR_33(17), STR_32(16), STR_31(16), 
 13893 ;;		 -> STR_30(20), STR_29(20), STR_28(19), STR_27(19), 
 13894 ;;		 -> STR_26(19), STR_25(19), STR_24(19), STR_23(19), 
 13895 ;;		 -> STR_22(19), STR_21(17), STR_20(16), STR_19(16), 
 13896 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(17), 
 13897 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 13898 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 13899 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 13900 ;;		 -> STR_1(17), 
 13901 ;;  _r              2  [STACK] PTR const unsigned char 
 13902 ;;		 -> STR_90(3), STR_86(3), STR_81(3), STR_76(3), 
 13903 ;;		 -> STR_71(3), STR_67(3), 
 13904 ;;  n               2  [STACK] unsigned int 
 13905 ;; Auto vars:     Size  Location     Type
 13906 ;;  r               2  [STACK] PTR const unsigned char 
 13907 ;;		 -> STR_90(3), STR_86(3), STR_81(3), STR_76(3), 
 13908 ;;		 -> STR_71(3), STR_67(3), 
 13909 ;;  l               2  [STACK] PTR const unsigned char 
 13910 ;;		 -> ct(3), STR_56(85), STR_54(3), STR_53(3), 
 13911 ;;		 -> STR_52(19), STR_51(19), STR_50(19), STR_49(19), 
 13912 ;;		 -> STR_48(19), STR_47(19), STR_46(24), STR_45(15), 
 13913 ;;		 -> STR_44(15), STR_43(15), STR_42(10), STR_41(10), 
 13914 ;;		 -> STR_40(19), STR_39(19), STR_36(3), STR_35(3), 
 13915 ;;		 -> STR_34(3), STR_33(17), STR_32(16), STR_31(16), 
 13916 ;;		 -> STR_30(20), STR_29(20), STR_28(19), STR_27(19), 
 13917 ;;		 -> STR_26(19), STR_25(19), STR_24(19), STR_23(19), 
 13918 ;;		 -> STR_22(19), STR_21(17), STR_20(16), STR_19(16), 
 13919 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(17), 
 13920 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 13921 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 13922 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 13923 ;;		 -> STR_1(17), 
 13924 ;; Return value:  Size  Location     Type
 13925 ;;                  2  [STACK] int 
 13926 ;; Registers used:
 13927 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 13928 ;; Tracked objects:
 13929 ;;		On entry : 0/0
 13930 ;;		On exit  : 0/0
 13931 ;;		Unchanged: 0/0
 13932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13937 ;;Total ram usage:        0 bytes
 13938 ;; Hardware stack levels used:    1
 13939 ;; Hardware stack levels required when called:   15
 13940 ;; This function calls:
 13941 ;;		Nothing
 13942 ;; This function is called by:
 13943 ;;		_vfpfcnvrt
 13944 ;; This function uses a reentrant model
 13945 ;;
 13946                           
 13947                           	psect	text53
 13948  017126                     __ptext53:
 13949                           	opt callstack 0
 13950  017126                     _strncmp:
 13951                           	opt callstack 0
 13952                           
 13953                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13954  017126  52E6               	movf	postinc1,f,c
 13955  017128  52E6               	movf	postinc1,f,c
 13956  01712A  52E6               	movf	postinc1,f,c
 13957  01712C  52E6               	movf	postinc1,f,c
 13958                           
 13959                           ;stkvar	__l @ sp[(-4)+-2]
 13960                           
 13961                           ;incstack = 0
 13962 ;; hardware stack exceeded
 13963  01712E  0EFA               	movlw	-6
 13964  017130  006F FF8C  F00B    	movff	plusw1,btemp+10
 13965  017136  0EFB               	movlw	-5
 13966  017138  006F FF8C  F00C    	movff	plusw1,btemp+11
 13967                           
 13968                           ;stkvar	_l @ sp[(-4)+2]
 13969  01713E  0EFF               	movlw	-1
 13970  017140  0060  F033  FFE3   	movff	btemp+11,plusw1
 13971  017146  0EFE               	movlw	-2
 13972  017148  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13973                           
 13974                           ;stkvar	__r @ sp[(-4)+-4]
 13975  01714E  0EF8               	movlw	-8
 13976  017150  006F FF8C  F00B    	movff	plusw1,btemp+10
 13977  017156  0EF9               	movlw	-7
 13978  017158  006F FF8C  F00C    	movff	plusw1,btemp+11
 13979                           
 13980                           ;stkvar	_r @ sp[(-4)+0]
 13981  01715E  0EFD               	movlw	-3
 13982  017160  0060  F033  FFE3   	movff	btemp+11,plusw1
 13983  017166  0EFC               	movlw	-4
 13984  017168  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13985                           
 13986                           ;stkvar	_n @ sp[(-4)+-6]
 13987  01716E  0EF6               	movlw	-10
 13988  017170  006F FF8C  F001    	movff	plusw1,btemp
 13989  017176  0E01               	movlw	1
 13990  017178  5E01               	subwf	btemp^0,f,c
 13991  01717A  0EF6               	movlw	-10
 13992  01717C  0060  F007  FFE3   	movff	btemp,plusw1
 13993  017182  0EF7               	movlw	-9
 13994  017184  006F FF8C  F001    	movff	plusw1,btemp
 13995  01718A  0E00               	movlw	0
 13996  01718C  5A01               	subwfb	btemp^0,f,c
 13997  01718E  0EF7               	movlw	-9
 13998  017190  0060  F007  FFE3   	movff	btemp,plusw1
 13999  017196  0EF6               	movlw	-10
 14000  017198  28E3               	incf	plusw1,w,c
 14001  01719A  E13F               	bnz	l9082
 14002  01719C  0EF7               	movlw	-9
 14003  01719E  28E3               	incf	plusw1,w,c
 14004  0171A0  A4D8               	btfss	status,2,c
 14005  0171A2  D03B               	goto	l9082
 14006  0171A4  0E00               	movlw	0
 14007  0171A6  6E01               	movwf	btemp^0,c
 14008  0171A8  0E00               	movlw	0
 14009  0171AA  6E02               	movwf	(btemp+1)^0,c
 14010  0171AC  D0C7               	goto	l3417
 14011  0171AE                     l9080:
 14012                           
 14013                           ;stkvar	_l @ sp[(-4)+2]
 14014  0171AE  0EFE               	movlw	-2
 14015  0171B0  50E3               	movf	plusw1,w,c
 14016  0171B2  0F01               	addlw	1
 14017  0171B4  6E01               	movwf	btemp^0,c
 14018  0171B6  0EFE               	movlw	-2
 14019  0171B8  0060  F007  FFE3   	movff	btemp,plusw1
 14020  0171BE  6A01               	clrf	btemp^0,c
 14021  0171C0  0EFF               	movlw	-1
 14022  0171C2  50E3               	movf	plusw1,w,c
 14023  0171C4  2001               	addwfc	btemp^0,w,c
 14024  0171C6  6E01               	movwf	btemp^0,c
 14025  0171C8  0EFF               	movlw	-1
 14026  0171CA  0060  F007  FFE3   	movff	btemp,plusw1
 14027                           
 14028                           ;stkvar	_r @ sp[(-4)+0]
 14029  0171D0  0EFC               	movlw	-4
 14030  0171D2  50E3               	movf	plusw1,w,c
 14031  0171D4  0F01               	addlw	1
 14032  0171D6  6E01               	movwf	btemp^0,c
 14033  0171D8  0EFC               	movlw	-4
 14034  0171DA  0060  F007  FFE3   	movff	btemp,plusw1
 14035  0171E0  6A01               	clrf	btemp^0,c
 14036  0171E2  0EFD               	movlw	-3
 14037  0171E4  50E3               	movf	plusw1,w,c
 14038  0171E6  2001               	addwfc	btemp^0,w,c
 14039  0171E8  6E01               	movwf	btemp^0,c
 14040  0171EA  0EFD               	movlw	-3
 14041  0171EC  0060  F007  FFE3   	movff	btemp,plusw1
 14042                           
 14043                           ;stkvar	_n @ sp[(-4)+-6]
 14044  0171F2  0EF6               	movlw	-10
 14045  0171F4  006F FF8C  F001    	movff	plusw1,btemp
 14046  0171FA  0E01               	movlw	1
 14047  0171FC  5E01               	subwf	btemp^0,f,c
 14048  0171FE  0EF6               	movlw	-10
 14049  017200  0060  F007  FFE3   	movff	btemp,plusw1
 14050  017206  0EF7               	movlw	-9
 14051  017208  006F FF8C  F001    	movff	plusw1,btemp
 14052  01720E  0E00               	movlw	0
 14053  017210  5A01               	subwfb	btemp^0,f,c
 14054  017212  0EF7               	movlw	-9
 14055  017214  0060  F007  FFE3   	movff	btemp,plusw1
 14056  01721A                     l9082:
 14057                           
 14058                           ;stkvar	_l @ sp[(-4)+2]
 14059  01721A  0EFE               	movlw	-2
 14060  01721C  006F FF8F FFF6     	movff	plusw1,tblptrl
 14061  017222  0EFF               	movlw	-1
 14062  017224  006F FF8F FFF7     	movff	plusw1,tblptrh
 14063  01722A  0E00               	movlw	low (__mediumconst shr (0+16))
 14064  01722C  6EF8               	movwf	tblptru,c
 14065  01722E  0E1F               	movlw	(high __ramtop+-1)
 14066  017230  64F7               	cpfsgt	tblptrh,c
 14067  017232  D003               	bra	u8357
 14068  017234  0008               	tblrd		*
 14069  017236  50F5               	movf	tablat,w,c
 14070  017238  D007               	bra	u8350
 14071  01723A                     u8357:
 14072  01723A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14073  017240  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14074  017246  50EF               	movf	indf0,w,c
 14075  017248                     u8350:
 14076  017248  0900               	iorlw	0
 14077  01724A  B4D8               	btfsc	status,2,c
 14078  01724C  D04A               	goto	u8390
 14079                           
 14080                           ;stkvar	_r @ sp[(-4)+0]
 14081  01724E  50E1               	movf	fsr1l,w,c
 14082  017250  0FFC               	addlw	-4
 14083  017252  6ED9               	movwf	fsr2l,c
 14084  017254  50E2               	movf	fsr1h,w,c
 14085  017256  6EDA               	movwf	fsr2h,c
 14086  017258  0EFF               	movlw	255
 14087  01725A  22DA               	addwfc	fsr2h,f,c
 14088  01725C  006F FF7B FFF6     	movff	postinc2,tblptrl
 14089  017262  006F FF77 FFF7     	movff	postdec2,tblptrh
 14090  017268                     	if	0	;tblptru may be non-zero
 14091  017268                     	endif
 14092  017268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14093  017268  0E00               	movlw	low (__mediumconst shr (0+16))
 14094  01726A  6EF8               	movwf	tblptru,c
 14095  01726C                     	endif
 14096  01726C  0008               	tblrd		*
 14097  01726E  50F5               	movf	tablat,w,c
 14098  017270  0900               	iorlw	0
 14099  017272  B4D8               	btfsc	status,2,c
 14100  017274  D036               	goto	u8390
 14101                           
 14102                           ;stkvar	_n @ sp[(-4)+-6]
 14103  017276  0EF6               	movlw	-10
 14104  017278  006F FF8C  F001    	movff	plusw1,btemp
 14105  01727E  0EF7               	movlw	-9
 14106  017280  50E3               	movf	plusw1,w,c
 14107  017282  1001               	iorwf	btemp^0,w,c
 14108  017284  B4D8               	btfsc	status,2,c
 14109  017286  D02D               	goto	u8390
 14110                           
 14111                           ;stkvar	_r @ sp[(-4)+0]
 14112  017288  50E1               	movf	fsr1l,w,c
 14113  01728A  0FFC               	addlw	-4
 14114  01728C  6ED9               	movwf	fsr2l,c
 14115  01728E  50E2               	movf	fsr1h,w,c
 14116  017290  6EDA               	movwf	fsr2h,c
 14117  017292  0EFF               	movlw	255
 14118  017294  22DA               	addwfc	fsr2h,f,c
 14119  017296  006F FF7B FFF6     	movff	postinc2,tblptrl
 14120  01729C  006F FF77 FFF7     	movff	postdec2,tblptrh
 14121  0172A2                     	if	0	;tblptru may be non-zero
 14122  0172A2                     	endif
 14123  0172A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14124  0172A2  0E00               	movlw	low (__mediumconst shr (0+16))
 14125  0172A4  6EF8               	movwf	tblptru,c
 14126  0172A6                     	endif
 14127  0172A6  0008               	tblrd		*
 14128  0172A8  006F FFD4  F00C    	movff	tablat,btemp+11
 14129                           
 14130                           ;stkvar	_l @ sp[(-4)+2]
 14131  0172AE  0EFE               	movlw	-2
 14132  0172B0  006F FF8F FFF6     	movff	plusw1,tblptrl
 14133  0172B6  0EFF               	movlw	-1
 14134  0172B8  006F FF8F FFF7     	movff	plusw1,tblptrh
 14135  0172BE  0E00               	movlw	low (__mediumconst shr (0+16))
 14136  0172C0  6EF8               	movwf	tblptru,c
 14137  0172C2  0E1F               	movlw	(high __ramtop+-1)
 14138  0172C4  64F7               	cpfsgt	tblptrh,c
 14139  0172C6  D003               	bra	u8397
 14140  0172C8  0008               	tblrd		*
 14141  0172CA  50F5               	movf	tablat,w,c
 14142  0172CC  D007               	bra	u8395
 14143  0172CE                     u8397:
 14144  0172CE  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14145  0172D4  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14146  0172DA  50EF               	movf	indf0,w,c
 14147  0172DC                     u8395:
 14148  0172DC  180C               	xorwf	(btemp+11)^0,w,c
 14149  0172DE  B4D8               	btfsc	status,2,c
 14150  0172E0  D766               	goto	l9080
 14151  0172E2                     u8390:
 14152                           
 14153                           ;stkvar	_l @ sp[(-4)+2]
 14154  0172E2  0EFE               	movlw	-2
 14155  0172E4  006F FF8F FFF6     	movff	plusw1,tblptrl
 14156  0172EA  0EFF               	movlw	-1
 14157  0172EC  006F FF8F FFF7     	movff	plusw1,tblptrh
 14158  0172F2  0E00               	movlw	low (__mediumconst shr (0+16))
 14159  0172F4  6EF8               	movwf	tblptru,c
 14160  0172F6  0E1F               	movlw	(high __ramtop+-1)
 14161  0172F8  64F7               	cpfsgt	tblptrh,c
 14162  0172FA  D003               	bra	u8407
 14163  0172FC  0008               	tblrd		*
 14164  0172FE  50F5               	movf	tablat,w,c
 14165  017300  D007               	bra	u8400
 14166  017302                     u8407:
 14167  017302  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14168  017308  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14169  01730E  50EF               	movf	indf0,w,c
 14170  017310                     u8400:
 14171  017310  6E01               	movwf	btemp^0,c
 14172  017312  6A02               	clrf	(btemp+1)^0,c
 14173                           
 14174                           ;stkvar	_r @ sp[(-4)+0]
 14175  017314  50E1               	movf	fsr1l,w,c
 14176  017316  0FFC               	addlw	-4
 14177  017318  6ED9               	movwf	fsr2l,c
 14178  01731A  50E2               	movf	fsr1h,w,c
 14179  01731C  6EDA               	movwf	fsr2h,c
 14180  01731E  0EFF               	movlw	255
 14181  017320  22DA               	addwfc	fsr2h,f,c
 14182  017322  006F FF7B FFF6     	movff	postinc2,tblptrl
 14183  017328  006F FF77 FFF7     	movff	postdec2,tblptrh
 14184  01732E                     	if	0	;tblptru may be non-zero
 14185  01732E                     	endif
 14186  01732E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14187  01732E  0E00               	movlw	low (__mediumconst shr (0+16))
 14188  017330  6EF8               	movwf	tblptru,c
 14189  017332                     	endif
 14190  017332  0008               	tblrd		*
 14191  017334  50F5               	movf	tablat,w,c
 14192  017336  5E01               	subwf	btemp^0,f,c
 14193  017338  0E00               	movlw	0
 14194  01733A  5A02               	subwfb	(btemp+1)^0,f,c
 14195  01733C                     l3417:
 14196                           
 14197                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 14198  01733C  0EF6               	movlw	246
 14199  01733E  26E1               	addwf	fsr1l,f,c
 14200  017340  0EFF               	movlw	255
 14201  017342  22E2               	addwfc	fsr1h,f,c
 14202  017344  0012               	return		;funcret
 14203  017346                     __end_of_strncmp:
 14204                           	opt callstack 0
 14205                           
 14206 ;; *************** function _stoa *****************
 14207 ;; Defined at:
 14208 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 14209 ;; Parameters:    Size  Location     Type
 14210 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14211 ;;		 -> f(6), NULL(0), 
 14212 ;;  s               2  [STACK] PTR unsigned char 
 14213 ;;		 -> ?_printf(2), ?_sprintf(2), STR_38(9), STR_37(12), 
 14214 ;;		 -> D.lcd(288), D(290), T(144), STR_3(6), 
 14215 ;;		 -> V(188), 
 14216 ;; Auto vars:     Size  Location     Type
 14217 ;;  nuls            7  [STACK] unsigned char [7]
 14218 ;;  l               2  [STACK] int 
 14219 ;;  p               2  [STACK] int 
 14220 ;;  cp              2  [STACK] PTR unsigned char 
 14221 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_38(9), 
 14222 ;;		 -> STR_37(12), D.lcd(288), D(290), T(144), 
 14223 ;;		 -> STR_3(6), V(188), 
 14224 ;;  w               2  [STACK] int 
 14225 ;;  i               2  [STACK] int 
 14226 ;; Return value:  Size  Location     Type
 14227 ;;                  2  [STACK] int 
 14228 ;; Registers used:
 14229 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 14230 ;; Tracked objects:
 14231 ;;		On entry : 0/0
 14232 ;;		On exit  : 0/0
 14233 ;;		Unchanged: 0/0
 14234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14239 ;;Total ram usage:        0 bytes
 14240 ;; Hardware stack levels used:    1
 14241 ;; Hardware stack levels required when called:   18
 14242 ;; This function calls:
 14243 ;;		_fputc
 14244 ;;		_strlen
 14245 ;; This function is called by:
 14246 ;;		_vfpfcnvrt
 14247 ;; This function uses a reentrant model
 14248 ;;
 14249                           
 14250                           	psect	text54
 14251  016734                     __ptext54:
 14252                           	opt callstack 0
 14253  016734                     _stoa:
 14254                           	opt callstack 0
 14255                           
 14256                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14257  016734  0E11               	movlw	17
 14258  016736  26E1               	addwf	fsr1l,f,c
 14259  016738  0E00               	movlw	0
 14260  01673A  22E2               	addwfc	fsr1h,f,c
 14261                           
 14262                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 14263                           
 14264                           ;incstack = 0
 14265 ;; hardware stack exceeded
 14266  01673C  EE20  F0EC         	lfsr	2,stoa@F1166
 14267                           
 14268                           ;stkvar	_nuls @ sp[(-17)+0]
 14269  016740  0E07               	movlw	7
 14270  016742  6E01               	movwf	btemp^0,c
 14271  016744  0EEF               	movlw	-17
 14272  016746                     us1110999:
 14273  016746  006F FF7B FFE3     	movff	postinc2,plusw1
 14274  01674C  28E8               	incf	wreg,w,c
 14275  01674E  2E01               	decfsz	btemp^0,f,c
 14276  016750  D7FA               	bra	us1110999
 14277                           
 14278                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 14279                           ;stkvar	_s @ sp[(-17)+-4]
 14280  016752  0EEB               	movlw	-21
 14281  016754  006F FF8C  F00B    	movff	plusw1,btemp+10
 14282  01675A  0EEC               	movlw	-20
 14283  01675C  006F FF8C  F00C    	movff	plusw1,btemp+11
 14284                           
 14285                           ;stkvar	_cp @ sp[(-17)+11]
 14286  016762  0EFB               	movlw	-5
 14287  016764  0060  F033  FFE3   	movff	btemp+11,plusw1
 14288  01676A  0EFA               	movlw	-6
 14289  01676C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14290                           
 14291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 14292                           ;stkvar	_cp @ sp[(-17)+11]
 14293  016772  0EFA               	movlw	-6
 14294  016774  006F FF8C  F001    	movff	plusw1,btemp
 14295  01677A  0EFB               	movlw	-5
 14296  01677C  50E3               	movf	plusw1,w,c
 14297  01677E  1001               	iorwf	btemp^0,w,c
 14298  016780  A4D8               	btfss	status,2,c
 14299  016782  D00E               	goto	l11806
 14300                           
 14301                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 14302                           ;stkvar	_nuls @ sp[(-17)+0]
 14303  016784  0EEF               	movlw	239
 14304  016786  24E1               	addwf	fsr1l,w,c
 14305  016788  6E0B               	movwf	(btemp+10)^0,c
 14306  01678A  0EFF               	movlw	255
 14307  01678C  20E2               	addwfc	fsr1h,w,c
 14308  01678E  6E0C               	movwf	(btemp+11)^0,c
 14309                           
 14310                           ;stkvar	_cp @ sp[(-17)+11]
 14311  016790  0EFB               	movlw	-5
 14312  016792  0060  F033  FFE3   	movff	btemp+11,plusw1
 14313  016798  0EFA               	movlw	-6
 14314  01679A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14315  0167A0                     l11806:
 14316                           
 14317                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 14318                           ;stkvar	_cp @ sp[(-17)+11]
 14319  0167A0  0EFA               	movlw	-6
 14320  0167A2  006F FF8F FFE6     	movff	plusw1,postinc1
 14321  0167A8  006F FF8F FFE6     	movff	plusw1,postinc1
 14322  0167AE  EC1B  F0CD         	call	_strlen	;wreg free
 14323                           
 14324                           ;stkvar	_l @ sp[(-17)+7]
 14325  0167B2  0EF6               	movlw	-10
 14326  0167B4  0060  F007  FFE3   	movff	btemp,plusw1
 14327  0167BA  0EF7               	movlw	-9
 14328  0167BC  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14329                           
 14330                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 14331                           ;stkvar	_p @ sp[(-17)+9]
 14332  0167C2  0EF8               	movlw	-8
 14333  0167C4  0060  F08F  FFE3   	movff	_prec,plusw1
 14334  0167CA  0EF9               	movlw	-7
 14335  0167CC  0060  F093  FFE3   	movff	_prec+1,plusw1
 14336                           
 14337                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 14338                           ;stkvar	_p @ sp[(-17)+9]
 14339  0167D2  0EF9               	movlw	-7
 14340  0167D4  BEE3               	btfsc	plusw1,7,c
 14341  0167D6  D023               	goto	l2242
 14342                           
 14343                           ;stkvar	_l @ sp[(-17)+7]
 14344                           ;stkvar	_p @ sp[(-17)+9]
 14345  0167D8  50E1               	movf	fsr1l,w,c
 14346  0167DA  0FF8               	addlw	-8
 14347  0167DC  6ED9               	movwf	fsr2l,c
 14348  0167DE  50E2               	movf	fsr1h,w,c
 14349  0167E0  6EDA               	movwf	fsr2h,c
 14350  0167E2  0EFF               	movlw	255
 14351  0167E4  22DA               	addwfc	fsr2h,f,c
 14352  0167E6  0EF6               	movlw	-10
 14353  0167E8  50E3               	movf	plusw1,w,c
 14354  0167EA  5CDE               	subwf	postinc2,w,c
 14355  0167EC  50DE               	movf	postinc2,w,c
 14356  0167EE  0A80               	xorlw	128
 14357  0167F0  6E01               	movwf	btemp^0,c
 14358  0167F2  0EF7               	movlw	-9
 14359  0167F4  50E3               	movf	plusw1,w,c
 14360  0167F6  0A80               	xorlw	128
 14361  0167F8  5801               	subwfb	btemp^0,w,c
 14362  0167FA  B0D8               	btfsc	status,0,c
 14363  0167FC  D010               	goto	l2242
 14364                           
 14365                           ;stkvar	_p @ sp[(-17)+9]
 14366                           ;stkvar	_l @ sp[(-17)+7]
 14367  0167FE  0EF8               	movlw	-8
 14368  016800  006F FF8C  F001    	movff	plusw1,btemp
 14369  016806  0EF6               	movlw	-10
 14370  016808  0060  F007  FFE3   	movff	btemp,plusw1
 14371  01680E  0EF9               	movlw	-7
 14372  016810  006F FF8C  F001    	movff	plusw1,btemp
 14373  016816  0EF7               	movlw	-9
 14374  016818  0060  F007  FFE3   	movff	btemp,plusw1
 14375  01681E                     l2242:
 14376                           
 14377                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 14378                           ;stkvar	_l @ sp[(-17)+7]
 14379                           ;stkvar	_p @ sp[(-17)+9]
 14380  01681E  0EF6               	movlw	-10
 14381  016820  006F FF8C  F001    	movff	plusw1,btemp
 14382  016826  0EF8               	movlw	-8
 14383  016828  0060  F007  FFE3   	movff	btemp,plusw1
 14384  01682E  0EF7               	movlw	-9
 14385  016830  006F FF8C  F001    	movff	plusw1,btemp
 14386  016836  0EF9               	movlw	-7
 14387  016838  0060  F007  FFE3   	movff	btemp,plusw1
 14388                           
 14389                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 14390                           ;stkvar	_w @ sp[(-17)+13]
 14391  01683E  0EFC               	movlw	-4
 14392  016840  0060  F087  FFE3   	movff	_width,plusw1
 14393  016846  0EFD               	movlw	-3
 14394  016848  0060  F08B  FFE3   	movff	_width+1,plusw1
 14395                           
 14396                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 14397  01684E  A025               	btfss	_flags^0,0,c
 14398  016850  D01F               	goto	l11826
 14399  016852  D031               	goto	u11150
 14400  016854                     l11822:
 14401                           
 14402                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 14403                           ;stkvar	_fp @ sp[(-17)+-2]
 14404  016854  0EED               	movlw	-19
 14405  016856  006F FF8F FFE6     	movff	plusw1,postinc1
 14406  01685C  006F FF8F FFE6     	movff	plusw1,postinc1
 14407  016862  0E20               	movlw	32
 14408  016864  6EE6               	movwf	postinc1,c
 14409  016866  0E00               	movlw	0
 14410  016868  6EE6               	movwf	postinc1,c
 14411  01686A  EC21  F0C5         	call	_fputc	;wreg free
 14412                           
 14413                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 14414                           ;stkvar	_l @ sp[(-17)+7]
 14415  01686E  0EF6               	movlw	-10
 14416  016870  50E3               	movf	plusw1,w,c
 14417  016872  0F01               	addlw	1
 14418  016874  6E01               	movwf	btemp^0,c
 14419  016876  0EF6               	movlw	-10
 14420  016878  0060  F007  FFE3   	movff	btemp,plusw1
 14421  01687E  6A01               	clrf	btemp^0,c
 14422  016880  0EF7               	movlw	-9
 14423  016882  50E3               	movf	plusw1,w,c
 14424  016884  2001               	addwfc	btemp^0,w,c
 14425  016886  6E01               	movwf	btemp^0,c
 14426  016888  0EF7               	movlw	-9
 14427  01688A  0060  F007  FFE3   	movff	btemp,plusw1
 14428  016890                     l11826:
 14429                           
 14430                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 14431                           ;stkvar	_w @ sp[(-17)+13]
 14432                           ;stkvar	_l @ sp[(-17)+7]
 14433  016890  50E1               	movf	fsr1l,w,c
 14434  016892  0FF6               	addlw	-10
 14435  016894  6ED9               	movwf	fsr2l,c
 14436  016896  50E2               	movf	fsr1h,w,c
 14437  016898  6EDA               	movwf	fsr2h,c
 14438  01689A  0EFF               	movlw	255
 14439  01689C  22DA               	addwfc	fsr2h,f,c
 14440  01689E  0EFC               	movlw	-4
 14441  0168A0  50E3               	movf	plusw1,w,c
 14442  0168A2  5CDE               	subwf	postinc2,w,c
 14443  0168A4  50DE               	movf	postinc2,w,c
 14444  0168A6  0A80               	xorlw	128
 14445  0168A8  6E01               	movwf	btemp^0,c
 14446  0168AA  0EFD               	movlw	-3
 14447  0168AC  50E3               	movf	plusw1,w,c
 14448  0168AE  0A80               	xorlw	128
 14449  0168B0  5801               	subwfb	btemp^0,w,c
 14450  0168B2  A0D8               	btfss	status,0,c
 14451  0168B4  D7CF               	goto	l11822
 14452  0168B6                     u11150:
 14453                           
 14454                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 14455                           ;stkvar	_i @ sp[(-17)+15]
 14456  0168B6  0EFE               	movlw	-2
 14457  0168B8  6AE3               	clrf	plusw1,c
 14458  0168BA  0EFF               	movlw	-1
 14459  0168BC  6AE3               	clrf	plusw1,c
 14460                           
 14461                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 14462  0168BE  D045               	goto	l11836
 14463  0168C0                     l11830:
 14464                           
 14465                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 14466                           ;stkvar	_fp @ sp[(-17)+-2]
 14467  0168C0  0EED               	movlw	-19
 14468  0168C2  006F FF8F FFE6     	movff	plusw1,postinc1
 14469  0168C8  006F FF8F FFE6     	movff	plusw1,postinc1
 14470                           
 14471                           ;stkvar	_cp @ sp[(-19)+11]
 14472  0168CE  0EF8               	movlw	-8
 14473  0168D0  006F FF8F FFF6     	movff	plusw1,tblptrl
 14474  0168D6  0EF9               	movlw	-7
 14475  0168D8  006F FF8F FFF7     	movff	plusw1,tblptrh
 14476  0168DE  0E00               	movlw	low (__mediumconst shr (0+16))
 14477  0168E0  6EF8               	movwf	tblptru,c
 14478  0168E2  0E1F               	movlw	(high __ramtop+-1)
 14479  0168E4  64F7               	cpfsgt	tblptrh,c
 14480  0168E6  D003               	bra	u11167
 14481  0168E8  0008               	tblrd		*
 14482  0168EA  50F5               	movf	tablat,w,c
 14483  0168EC  D007               	bra	u11160
 14484  0168EE                     u11167:
 14485  0168EE  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14486  0168F4  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14487  0168FA  50EF               	movf	indf0,w,c
 14488  0168FC                     u11160:
 14489  0168FC  6EE6               	movwf	postinc1,c
 14490  0168FE  0E00               	movlw	0
 14491  016900  6EE6               	movwf	postinc1,c
 14492  016902  EC21  F0C5         	call	_fputc	;wreg free
 14493                           
 14494                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 14495                           ;stkvar	_cp @ sp[(-17)+11]
 14496  016906  0EFA               	movlw	-6
 14497  016908  50E3               	movf	plusw1,w,c
 14498  01690A  0F01               	addlw	1
 14499  01690C  6E01               	movwf	btemp^0,c
 14500  01690E  0EFA               	movlw	-6
 14501  016910  0060  F007  FFE3   	movff	btemp,plusw1
 14502  016916  6A01               	clrf	btemp^0,c
 14503  016918  0EFB               	movlw	-5
 14504  01691A  50E3               	movf	plusw1,w,c
 14505  01691C  2001               	addwfc	btemp^0,w,c
 14506  01691E  6E01               	movwf	btemp^0,c
 14507  016920  0EFB               	movlw	-5
 14508  016922  0060  F007  FFE3   	movff	btemp,plusw1
 14509                           
 14510                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 14511                           ;stkvar	_i @ sp[(-17)+15]
 14512  016928  0EFE               	movlw	-2
 14513  01692A  50E3               	movf	plusw1,w,c
 14514  01692C  0F01               	addlw	1
 14515  01692E  6E01               	movwf	btemp^0,c
 14516  016930  0EFE               	movlw	-2
 14517  016932  0060  F007  FFE3   	movff	btemp,plusw1
 14518  016938  6A01               	clrf	btemp^0,c
 14519  01693A  0EFF               	movlw	-1
 14520  01693C  50E3               	movf	plusw1,w,c
 14521  01693E  2001               	addwfc	btemp^0,w,c
 14522  016940  6E01               	movwf	btemp^0,c
 14523  016942  0EFF               	movlw	-1
 14524  016944  0060  F007  FFE3   	movff	btemp,plusw1
 14525  01694A                     l11836:
 14526                           
 14527                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 14528                           ;stkvar	_p @ sp[(-17)+9]
 14529                           ;stkvar	_i @ sp[(-17)+15]
 14530  01694A  50E1               	movf	fsr1l,w,c
 14531  01694C  0FFE               	addlw	-2
 14532  01694E  6ED9               	movwf	fsr2l,c
 14533  016950  50E2               	movf	fsr1h,w,c
 14534  016952  6EDA               	movwf	fsr2h,c
 14535  016954  0EFF               	movlw	255
 14536  016956  22DA               	addwfc	fsr2h,f,c
 14537  016958  0EF8               	movlw	-8
 14538  01695A  50E3               	movf	plusw1,w,c
 14539  01695C  5CDE               	subwf	postinc2,w,c
 14540  01695E  50DE               	movf	postinc2,w,c
 14541  016960  0A80               	xorlw	128
 14542  016962  6E01               	movwf	btemp^0,c
 14543  016964  0EF9               	movlw	-7
 14544  016966  50E3               	movf	plusw1,w,c
 14545  016968  0A80               	xorlw	128
 14546  01696A  5801               	subwfb	btemp^0,w,c
 14547  01696C  A0D8               	btfss	status,0,c
 14548  01696E  D7A8               	goto	l11830
 14549                           
 14550                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 14551  016970  B025               	btfsc	_flags^0,0,c
 14552  016972  D01F               	goto	l11844
 14553  016974  D031               	goto	u11190
 14554  016976                     l11840:
 14555                           
 14556                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 14557                           ;stkvar	_fp @ sp[(-17)+-2]
 14558  016976  0EED               	movlw	-19
 14559  016978  006F FF8F FFE6     	movff	plusw1,postinc1
 14560  01697E  006F FF8F FFE6     	movff	plusw1,postinc1
 14561  016984  0E20               	movlw	32
 14562  016986  6EE6               	movwf	postinc1,c
 14563  016988  0E00               	movlw	0
 14564  01698A  6EE6               	movwf	postinc1,c
 14565  01698C  EC21  F0C5         	call	_fputc	;wreg free
 14566                           
 14567                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 14568                           ;stkvar	_l @ sp[(-17)+7]
 14569  016990  0EF6               	movlw	-10
 14570  016992  50E3               	movf	plusw1,w,c
 14571  016994  0F01               	addlw	1
 14572  016996  6E01               	movwf	btemp^0,c
 14573  016998  0EF6               	movlw	-10
 14574  01699A  0060  F007  FFE3   	movff	btemp,plusw1
 14575  0169A0  6A01               	clrf	btemp^0,c
 14576  0169A2  0EF7               	movlw	-9
 14577  0169A4  50E3               	movf	plusw1,w,c
 14578  0169A6  2001               	addwfc	btemp^0,w,c
 14579  0169A8  6E01               	movwf	btemp^0,c
 14580  0169AA  0EF7               	movlw	-9
 14581  0169AC  0060  F007  FFE3   	movff	btemp,plusw1
 14582  0169B2                     l11844:
 14583                           
 14584                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 14585                           ;stkvar	_w @ sp[(-17)+13]
 14586                           ;stkvar	_l @ sp[(-17)+7]
 14587  0169B2  50E1               	movf	fsr1l,w,c
 14588  0169B4  0FF6               	addlw	-10
 14589  0169B6  6ED9               	movwf	fsr2l,c
 14590  0169B8  50E2               	movf	fsr1h,w,c
 14591  0169BA  6EDA               	movwf	fsr2h,c
 14592  0169BC  0EFF               	movlw	255
 14593  0169BE  22DA               	addwfc	fsr2h,f,c
 14594  0169C0  0EFC               	movlw	-4
 14595  0169C2  50E3               	movf	plusw1,w,c
 14596  0169C4  5CDE               	subwf	postinc2,w,c
 14597  0169C6  50DE               	movf	postinc2,w,c
 14598  0169C8  0A80               	xorlw	128
 14599  0169CA  6E01               	movwf	btemp^0,c
 14600  0169CC  0EFD               	movlw	-3
 14601  0169CE  50E3               	movf	plusw1,w,c
 14602  0169D0  0A80               	xorlw	128
 14603  0169D2  5801               	subwfb	btemp^0,w,c
 14604  0169D4  A0D8               	btfss	status,0,c
 14605  0169D6  D7CF               	goto	l11840
 14606  0169D8                     u11190:
 14607                           
 14608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 14609                           ;stkvar	_l @ sp[(-17)+7]
 14610  0169D8  0EF6               	movlw	-10
 14611  0169DA  006F FF8C  F001    	movff	plusw1,btemp
 14612  0169E0  0EF7               	movlw	-9
 14613  0169E2  006F FF8C  F002    	movff	plusw1,btemp+1
 14614                           
 14615                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 14616  0169E8  0EEB               	movlw	235
 14617  0169EA  26E1               	addwf	fsr1l,f,c
 14618  0169EC  0EFF               	movlw	255
 14619  0169EE  22E2               	addwfc	fsr1h,f,c
 14620  0169F0  0012               	return		;funcret
 14621  0169F2                     __end_of_stoa:
 14622                           	opt callstack 0
 14623                           
 14624 ;; *************** function _efgtoa *****************
 14625 ;; Defined at:
 14626 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 14627 ;; Parameters:    Size  Location     Type
 14628 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14629 ;;		 -> f(6), NULL(0), 
 14630 ;;  f               4  [STACK] PTR struct _IO_FILE
 14631 ;;  c               1  [STACK] unsigned char 
 14632 ;; Auto vars:     Size  Location     Type
 14633 ;;  u               4  [STACK] unsigned char 
 14634 ;;  g               4  [STACK] unsigned char 
 14635 ;;  l               4  [STACK] unsigned char 
 14636 ;;  h               4  [STACK] unsigned char 
 14637 ;;  ou              4  [STACK] unsigned char 
 14638 ;;  n               2  [STACK] int 
 14639 ;;  e               2  [STACK] int 
 14640 ;;  i               2  [STACK] int 
 14641 ;;  w               2  [STACK] int 
 14642 ;;  p               2  [STACK] int 
 14643 ;;  sign            2  [STACK] int 
 14644 ;;  d               2  [STACK] int 
 14645 ;;  ne              2  [STACK] int 
 14646 ;;  m               2  [STACK] int 
 14647 ;;  pp              2  [STACK] int 
 14648 ;;  t               2  [STACK] int 
 14649 ;;  mode            1  [STACK] unsigned char 
 14650 ;;  nmode           1  [STACK] unsigned char 
 14651 ;; Return value:  Size  Location     Type
 14652 ;;                  2  [STACK] int 
 14653 ;; Registers used:
 14654 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 14655 ;; Tracked objects:
 14656 ;;		On entry : 0/0
 14657 ;;		On exit  : 0/0
 14658 ;;		Unchanged: 0/0
 14659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14664 ;;Total ram usage:        0 bytes
 14665 ;; Hardware stack levels used:    1
 14666 ;; Hardware stack levels required when called:   20
 14667 ;; This function calls:
 14668 ;;		___awdiv
 14669 ;;		___awmod
 14670 ;;		___fladd
 14671 ;;		___fldiv
 14672 ;;		___fleq
 14673 ;;		___flge
 14674 ;;		___flmul
 14675 ;;		___flneg
 14676 ;;		___flsub
 14677 ;;		___fltol
 14678 ;;		___fpclassifyf
 14679 ;;		_floorf
 14680 ;;		_isupper
 14681 ;;		_pad
 14682 ;;		_strcpy
 14683 ;;		_tolower
 14684 ;; This function is called by:
 14685 ;;		_vfpfcnvrt
 14686 ;; This function uses a reentrant model
 14687 ;;
 14688                           
 14689                           	psect	text55
 14690  010000                     __ptext55:
 14691                           	opt callstack 0
 14692  010000                     _efgtoa:
 14693                           	opt callstack 0
 14694                           
 14695                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14696  010000  0E38               	movlw	56
 14697  010002  26E1               	addwf	fsr1l,f,c
 14698  010004  0E00               	movlw	0
 14699  010006  22E2               	addwfc	fsr1h,f,c
 14700                           
 14701                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 14702                           ;stkvar	_sign @ sp[(-56)+42]
 14703                           
 14704                           ;incstack = 0
 14705 ;; hardware stack exceeded
 14706  010008  0EF2               	movlw	-14
 14707  01000A  6AE3               	clrf	plusw1,c
 14708  01000C  0EF3               	movlw	-13
 14709  01000E  6AE3               	clrf	plusw1,c
 14710                           
 14711                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 14712                           ;stkvar	_f @ sp[(-56)+-6]
 14713  010010  0EC2               	movlw	-62
 14714  010012  006F FF8C  F009    	movff	plusw1,btemp+8
 14715  010018  0EC3               	movlw	-61
 14716  01001A  006F FF8C  F00A    	movff	plusw1,btemp+9
 14717  010020  0EC4               	movlw	-60
 14718  010022  006F FF8C  F00B    	movff	plusw1,btemp+10
 14719  010028  0EC5               	movlw	-59
 14720  01002A  006F FF8C  F00C    	movff	plusw1,btemp+11
 14721                           
 14722                           ;stkvar	_g @ sp[(-56)+16]
 14723  010030  0ED8               	movlw	-40
 14724  010032  0060  F027  FFE3   	movff	btemp+8,plusw1
 14725  010038  0ED9               	movlw	-39
 14726  01003A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14727  010040  0EDA               	movlw	-38
 14728  010042  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14729  010048  0EDB               	movlw	-37
 14730  01004A  0060  F033  FFE3   	movff	btemp+11,plusw1
 14731                           
 14732                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 14733                           ;stkvar	_g @ sp[(-56)+16]
 14734  010050  0EDB               	movlw	-37
 14735  010052  AEE3               	btfss	plusw1,7,c
 14736  010054  D02B               	goto	l11504
 14737                           
 14738                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 14739  010056  0E01               	movlw	1
 14740  010058  6E0B               	movwf	(btemp+10)^0,c
 14741  01005A  0E00               	movlw	0
 14742  01005C  6E0C               	movwf	(btemp+11)^0,c
 14743                           
 14744                           ;stkvar	_sign @ sp[(-56)+42]
 14745  01005E  0EF2               	movlw	-14
 14746  010060  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14747  010066  0EF3               	movlw	-13
 14748  010068  0060  F033  FFE3   	movff	btemp+11,plusw1
 14749                           
 14750                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 14751                           ;stkvar	_g @ sp[(-56)+16]
 14752  01006E  0ED8               	movlw	-40
 14753  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 14754  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 14755  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 14756  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 14757  010088  ECC6  F0D2         	call	___flneg	;wreg free
 14758                           
 14759                           ;stkvar	_g @ sp[(-56)+16]
 14760  01008C  0ED8               	movlw	-40
 14761  01008E  0060  F007  FFE3   	movff	btemp,plusw1
 14762  010094  0ED9               	movlw	-39
 14763  010096  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14764  01009C  0EDA               	movlw	-38
 14765  01009E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 14766  0100A4  0EDB               	movlw	-37
 14767  0100A6  0060  F013  FFE3   	movff	btemp+3,plusw1
 14768  0100AC                     l11504:
 14769                           
 14770                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 14771                           ;stkvar	_n @ sp[(-56)+32]
 14772  0100AC  0EE8               	movlw	-24
 14773  0100AE  6AE3               	clrf	plusw1,c
 14774  0100B0  0EE9               	movlw	-23
 14775  0100B2  6AE3               	clrf	plusw1,c
 14776                           
 14777                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 14778                           ;stkvar	_w @ sp[(-56)+38]
 14779  0100B4  0EEE               	movlw	-18
 14780  0100B6  0060  F087  FFE3   	movff	_width,plusw1
 14781  0100BC  0EEF               	movlw	-17
 14782  0100BE  0060  F08B  FFE3   	movff	_width+1,plusw1
 14783                           
 14784                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 14785                           ;stkvar	_sign @ sp[(-56)+42]
 14786  0100C4  0EF2               	movlw	-14
 14787  0100C6  006F FF8C  F001    	movff	plusw1,btemp
 14788  0100CC  0EF3               	movlw	-13
 14789  0100CE  50E3               	movf	plusw1,w,c
 14790  0100D0  1001               	iorwf	btemp^0,w,c
 14791  0100D2  A4D8               	btfss	status,2,c
 14792  0100D4  D002               	goto	u10600
 14793  0100D6  A425               	btfss	_flags^0,2,c
 14794  0100D8  D036               	goto	l11524
 14795  0100DA                     u10600:
 14796                           
 14797                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 14798                           ;stkvar	_sign @ sp[(-56)+42]
 14799  0100DA  0EF2               	movlw	-14
 14800  0100DC  006F FF8C  F001    	movff	plusw1,btemp
 14801  0100E2  0EF3               	movlw	-13
 14802  0100E4  50E3               	movf	plusw1,w,c
 14803  0100E6  1001               	iorwf	btemp^0,w,c
 14804  0100E8  A4D8               	btfss	status,2,c
 14805  0100EA  D002               	goto	l11516
 14806  0100EC  0E2B               	movlw	43
 14807  0100EE  D001               	goto	L11
 14808  0100F0                     l11516:
 14809  0100F0  0E2D               	movlw	45
 14810  0100F2                     L11:
 14811  0100F2  6E0B               	movwf	(btemp+10)^0,c
 14812  0100F4  0E00               	movlw	0
 14813  0100F6  6E0C               	movwf	(btemp+11)^0,c
 14814                           
 14815                           ;stkvar	_efgtoa$5310 @ sp[(-56)+10]
 14816  0100F8  0ED2               	movlw	-46
 14817  0100FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14818  010100  0ED3               	movlw	-45
 14819  010102  0060  F033  FFE3   	movff	btemp+11,plusw1
 14820                           
 14821                           ;stkvar	_efgtoa$5310 @ sp[(-56)+10]
 14822  010108  0ED2               	movlw	-46
 14823  01010A  006F FF8C  F394    	movff	plusw1,_dbuf
 14824                           
 14825                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 14826                           ;stkvar	_n @ sp[(-56)+32]
 14827  010110  0EE8               	movlw	-24
 14828  010112  50E3               	movf	plusw1,w,c
 14829  010114  0F01               	addlw	1
 14830  010116  6E01               	movwf	btemp^0,c
 14831  010118  0EE8               	movlw	-24
 14832  01011A  0060  F007  FFE3   	movff	btemp,plusw1
 14833  010120  6A01               	clrf	btemp^0,c
 14834  010122  0EE9               	movlw	-23
 14835  010124  50E3               	movf	plusw1,w,c
 14836  010126  2001               	addwfc	btemp^0,w,c
 14837  010128  6E01               	movwf	btemp^0,c
 14838  01012A  0EE9               	movlw	-23
 14839  01012C  0060  F007  FFE3   	movff	btemp,plusw1
 14840                           
 14841                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 14842                           ;stkvar	_w @ sp[(-56)+38]
 14843  010132  50E1               	movf	fsr1l,w,c
 14844  010134  0FEE               	addlw	-18
 14845  010136  6ED9               	movwf	fsr2l,c
 14846  010138  50E2               	movf	fsr1h,w,c
 14847  01013A  6EDA               	movwf	fsr2h,c
 14848  01013C  0EFF               	movlw	255
 14849  01013E  22DA               	addwfc	fsr2h,f,c
 14850  010140  06DE               	decf	postinc2,f,c
 14851  010142  0E00               	movlw	0
 14852  010144  5ADD               	subwfb	postdec2,f,c
 14853  010146                     l11524:
 14854                           
 14855                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 14856                           ;stkvar	_g @ sp[(-56)+16]
 14857  010146  0ED8               	movlw	-40
 14858  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 14859  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 14860  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 14861  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 14862  010160  EC8C  F0BD         	call	___fpclassifyf	;wreg free
 14863  010164  0401               	decf	btemp^0,w,c
 14864  010166  1002               	iorwf	(btemp+1)^0,w,c
 14865  010168  A4D8               	btfss	status,2,c
 14866  01016A  D076               	goto	l11542
 14867  01016C  0EBF               	movlw	191
 14868  01016E  6E0B               	movwf	(btemp+10)^0,c
 14869  010170  0EFF               	movlw	255
 14870  010172  6E0C               	movwf	(btemp+11)^0,c
 14871                           
 14872                           ;stkvar	_c @ sp[(-56)+-7]
 14873  010174  0EC1               	movlw	-63
 14874  010176  50E3               	movf	plusw1,w,c
 14875  010178  6E09               	movwf	(btemp+8)^0,c
 14876  01017A  6A0A               	clrf	(btemp+9)^0,c
 14877  01017C  500B               	movf	(btemp+10)^0,w,c
 14878  01017E  2609               	addwf	(btemp+8)^0,f,c
 14879  010180  500C               	movf	(btemp+11)^0,w,c
 14880  010182  220A               	addwfc	(btemp+9)^0,f,c
 14881  010184  500A               	movf	(btemp+9)^0,w,c
 14882  010186  E106               	bnz	u10630
 14883  010188  0E1A               	movlw	26
 14884  01018A  5C09               	subwf	(btemp+8)^0,w,c
 14885  01018C  B0D8               	btfsc	status,0,c
 14886  01018E  D002               	goto	u10630
 14887  010190  0E01               	movlw	1
 14888  010192  D001               	goto	u10640
 14889  010194                     u10630:
 14890  010194  0E00               	movlw	0
 14891  010196                     u10640:
 14892  010196  6E0B               	movwf	(btemp+10)^0,c
 14893  010198  6A0C               	clrf	(btemp+11)^0,c
 14894                           
 14895                           ;stkvar	_efgtoa$5311 @ sp[(-56)+8]
 14896  01019A  0ED0               	movlw	-48
 14897  01019C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14898  0101A2  0ED1               	movlw	-47
 14899  0101A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 14900                           
 14901                           ;stkvar	_efgtoa$5311 @ sp[(-56)+8]
 14902  0101AA  0ED0               	movlw	-48
 14903  0101AC  006F FF8C  F001    	movff	plusw1,btemp
 14904  0101B2  0ED1               	movlw	-47
 14905  0101B4  50E3               	movf	plusw1,w,c
 14906  0101B6  1001               	iorwf	btemp^0,w,c
 14907  0101B8  B4D8               	btfsc	status,2,c
 14908  0101BA  D017               	goto	l11534
 14909                           
 14910                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 14911  0101BC  0ED7               	movlw	low STR_57
 14912  0101BE  6EE6               	movwf	postinc1,c
 14913  0101C0  0EFF               	movlw	high STR_57
 14914  0101C2  6EE6               	movwf	postinc1,c
 14915                           
 14916                           ;stkvar	_n @ sp[(-58)+32]
 14917  0101C4  0E94               	movlw	low _dbuf
 14918  0101C6  6E0B               	movwf	(btemp+10)^0,c
 14919  0101C8  0E03               	movlw	high _dbuf
 14920  0101CA  6E0C               	movwf	(btemp+11)^0,c
 14921  0101CC  0EE6               	movlw	-26
 14922  0101CE  50E3               	movf	plusw1,w,c
 14923  0101D0  260B               	addwf	(btemp+10)^0,f,c
 14924  0101D2  0EE7               	movlw	-25
 14925  0101D4  50E3               	movf	plusw1,w,c
 14926  0101D6  220C               	addwfc	(btemp+11)^0,f,c
 14927  0101D8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14928  0101DE  0060  F033  FFE6   	movff	btemp+11,postinc1
 14929  0101E4  EC40  F0CA         	call	_strcpy	;wreg free
 14930                           
 14931                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 14932  0101E8  D016               	goto	l11536
 14933  0101EA                     l11534:
 14934                           
 14935                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 14936  0101EA  0EDF               	movlw	low STR_58
 14937  0101EC  6EE6               	movwf	postinc1,c
 14938  0101EE  0EFF               	movlw	high STR_58
 14939  0101F0  6EE6               	movwf	postinc1,c
 14940                           
 14941                           ;stkvar	_n @ sp[(-58)+32]
 14942  0101F2  0E94               	movlw	low _dbuf
 14943  0101F4  6E0B               	movwf	(btemp+10)^0,c
 14944  0101F6  0E03               	movlw	high _dbuf
 14945  0101F8  6E0C               	movwf	(btemp+11)^0,c
 14946  0101FA  0EE6               	movlw	-26
 14947  0101FC  50E3               	movf	plusw1,w,c
 14948  0101FE  260B               	addwf	(btemp+10)^0,f,c
 14949  010200  0EE7               	movlw	-25
 14950  010202  50E3               	movf	plusw1,w,c
 14951  010204  220C               	addwfc	(btemp+11)^0,f,c
 14952  010206  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14953  01020C  0060  F033  FFE6   	movff	btemp+11,postinc1
 14954  010212  EC40  F0CA         	call	_strcpy	;wreg free
 14955  010216                     l11536:
 14956                           
 14957                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 14958                           ;stkvar	_w @ sp[(-56)+38]
 14959  010216  50E1               	movf	fsr1l,w,c
 14960  010218  0FEE               	addlw	-18
 14961  01021A  6ED9               	movwf	fsr2l,c
 14962  01021C  50E2               	movf	fsr1h,w,c
 14963  01021E  6EDA               	movwf	fsr2h,c
 14964  010220  0EFF               	movlw	255
 14965  010222  22DA               	addwfc	fsr2h,f,c
 14966  010224  0EFD               	movlw	253
 14967  010226  26DE               	addwf	postinc2,f,c
 14968  010228  0EFF               	movlw	255
 14969  01022A  22DD               	addwfc	postdec2,f,c
 14970  01022C                     l11538:
 14971                           
 14972                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 14973                           ;stkvar	_w @ sp[(-56)+38]
 14974  01022C  0EEE               	movlw	-18
 14975  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 14976  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 14977  01023A  0E94               	movlw	low _dbuf
 14978  01023C  6EE6               	movwf	postinc1,c
 14979  01023E  0E03               	movlw	high _dbuf
 14980  010240  6EE6               	movwf	postinc1,c
 14981                           
 14982                           ;stkvar	_fp @ sp[(-60)+-2]
 14983  010242  0EC2               	movlw	-62
 14984  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 14985  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 14986  010250  EC3F  F0C6         	call	_pad	;wreg free
 14987  010254  EF1D  F089         	goto	l2160
 14988  010258                     l11542:
 14989                           
 14990                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 14991                           ;stkvar	_g @ sp[(-56)+16]
 14992  010258  0ED8               	movlw	-40
 14993  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 14994  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 14995  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 14996  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 14997  010272  EC8C  F0BD         	call	___fpclassifyf	;wreg free
 14998  010276  5001               	movf	btemp^0,w,c
 14999  010278  1002               	iorwf	(btemp+1)^0,w,c
 15000  01027A  A4D8               	btfss	status,2,c
 15001  01027C  D056               	goto	l11560
 15002  01027E  0EBF               	movlw	191
 15003  010280  6E0B               	movwf	(btemp+10)^0,c
 15004  010282  0EFF               	movlw	255
 15005  010284  6E0C               	movwf	(btemp+11)^0,c
 15006                           
 15007                           ;stkvar	_c @ sp[(-56)+-7]
 15008  010286  0EC1               	movlw	-63
 15009  010288  50E3               	movf	plusw1,w,c
 15010  01028A  6E09               	movwf	(btemp+8)^0,c
 15011  01028C  6A0A               	clrf	(btemp+9)^0,c
 15012  01028E  500B               	movf	(btemp+10)^0,w,c
 15013  010290  2609               	addwf	(btemp+8)^0,f,c
 15014  010292  500C               	movf	(btemp+11)^0,w,c
 15015  010294  220A               	addwfc	(btemp+9)^0,f,c
 15016  010296  500A               	movf	(btemp+9)^0,w,c
 15017  010298  E106               	bnz	u10670
 15018  01029A  0E1A               	movlw	26
 15019  01029C  5C09               	subwf	(btemp+8)^0,w,c
 15020  01029E  B0D8               	btfsc	status,0,c
 15021  0102A0  D002               	goto	u10670
 15022  0102A2  0E01               	movlw	1
 15023  0102A4  D001               	goto	u10680
 15024  0102A6                     u10670:
 15025  0102A6  0E00               	movlw	0
 15026  0102A8                     u10680:
 15027  0102A8  6E0B               	movwf	(btemp+10)^0,c
 15028  0102AA  6A0C               	clrf	(btemp+11)^0,c
 15029                           
 15030                           ;stkvar	_efgtoa$5315 @ sp[(-56)+6]
 15031  0102AC  0ECE               	movlw	-50
 15032  0102AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15033  0102B4  0ECF               	movlw	-49
 15034  0102B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 15035                           
 15036                           ;stkvar	_efgtoa$5315 @ sp[(-56)+6]
 15037  0102BC  0ECE               	movlw	-50
 15038  0102BE  006F FF8C  F001    	movff	plusw1,btemp
 15039  0102C4  0ECF               	movlw	-49
 15040  0102C6  50E3               	movf	plusw1,w,c
 15041  0102C8  1001               	iorwf	btemp^0,w,c
 15042  0102CA  B4D8               	btfsc	status,2,c
 15043  0102CC  D017               	goto	l11552
 15044                           
 15045                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 15046  0102CE  0EDB               	movlw	low STR_61
 15047  0102D0  6EE6               	movwf	postinc1,c
 15048  0102D2  0EFF               	movlw	high STR_61
 15049  0102D4  6EE6               	movwf	postinc1,c
 15050                           
 15051                           ;stkvar	_n @ sp[(-58)+32]
 15052  0102D6  0E94               	movlw	low _dbuf
 15053  0102D8  6E0B               	movwf	(btemp+10)^0,c
 15054  0102DA  0E03               	movlw	high _dbuf
 15055  0102DC  6E0C               	movwf	(btemp+11)^0,c
 15056  0102DE  0EE6               	movlw	-26
 15057  0102E0  50E3               	movf	plusw1,w,c
 15058  0102E2  260B               	addwf	(btemp+10)^0,f,c
 15059  0102E4  0EE7               	movlw	-25
 15060  0102E6  50E3               	movf	plusw1,w,c
 15061  0102E8  220C               	addwfc	(btemp+11)^0,f,c
 15062  0102EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15063  0102F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 15064  0102F6  EC40  F0CA         	call	_strcpy	;wreg free
 15065                           
 15066                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 15067  0102FA  D78D               	goto	l11536
 15068  0102FC                     l11552:
 15069                           
 15070                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 15071  0102FC  0EE3               	movlw	low STR_62
 15072  0102FE  6EE6               	movwf	postinc1,c
 15073  010300  0EFF               	movlw	high STR_62
 15074  010302  6EE6               	movwf	postinc1,c
 15075                           
 15076                           ;stkvar	_n @ sp[(-58)+32]
 15077  010304  0E94               	movlw	low _dbuf
 15078  010306  6E0B               	movwf	(btemp+10)^0,c
 15079  010308  0E03               	movlw	high _dbuf
 15080  01030A  6E0C               	movwf	(btemp+11)^0,c
 15081  01030C  0EE6               	movlw	-26
 15082  01030E  50E3               	movf	plusw1,w,c
 15083  010310  260B               	addwf	(btemp+10)^0,f,c
 15084  010312  0EE7               	movlw	-25
 15085  010314  50E3               	movf	plusw1,w,c
 15086  010316  220C               	addwfc	(btemp+11)^0,f,c
 15087  010318  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15088  01031E  0060  F033  FFE6   	movff	btemp+11,postinc1
 15089  010324  EC40  F0CA         	call	_strcpy	;wreg free
 15090  010328  D776               	goto	l11536
 15091  01032A                     l11560:
 15092                           
 15093                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 15094  01032A  0E00               	movlw	0
 15095  01032C  6E09               	movwf	(btemp+8)^0,c
 15096  01032E  0E00               	movlw	0
 15097  010330  6E0A               	movwf	(btemp+9)^0,c
 15098  010332  0E80               	movlw	128
 15099  010334  6E0B               	movwf	(btemp+10)^0,c
 15100  010336  0E3F               	movlw	63
 15101  010338  6E0C               	movwf	(btemp+11)^0,c
 15102                           
 15103                           ;stkvar	_u @ sp[(-56)+12]
 15104  01033A  0ED4               	movlw	-44
 15105  01033C  0060  F027  FFE3   	movff	btemp+8,plusw1
 15106  010342  0ED5               	movlw	-43
 15107  010344  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15108  01034A  0ED6               	movlw	-42
 15109  01034C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15110  010352  0ED7               	movlw	-41
 15111  010354  0060  F033  FFE3   	movff	btemp+11,plusw1
 15112                           
 15113                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 15114                           ;stkvar	_e @ sp[(-56)+34]
 15115  01035A  0EEA               	movlw	-22
 15116  01035C  6AE3               	clrf	plusw1,c
 15117  01035E  0EEB               	movlw	-21
 15118  010360  6AE3               	clrf	plusw1,c
 15119                           
 15120                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 15121  010362  0E00               	movlw	0
 15122  010364  6EE6               	movwf	postinc1,c
 15123  010366  0E00               	movlw	0
 15124  010368  6EE6               	movwf	postinc1,c
 15125  01036A  0E00               	movlw	0
 15126  01036C  6EE6               	movwf	postinc1,c
 15127  01036E  0E00               	movlw	0
 15128  010370  6EE6               	movwf	postinc1,c
 15129                           
 15130                           ;stkvar	_g @ sp[(-60)+16]
 15131  010372  0ED4               	movlw	-44
 15132  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 15133  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 15134  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 15135  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 15136  01038C  ECAA  F0CA         	call	___fleq	;wreg free
 15137  010390  A001               	btfss	btemp& (0+255),0,c
 15138  010392  D039               	goto	l11572
 15139  010394  D0BC               	goto	u10720
 15140  010396                     l11568:
 15141                           
 15142                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 15143  010396  0E00               	movlw	0
 15144  010398  6EE6               	movwf	postinc1,c
 15145  01039A  0E00               	movlw	0
 15146  01039C  6EE6               	movwf	postinc1,c
 15147  01039E  0E20               	movlw	32
 15148  0103A0  6EE6               	movwf	postinc1,c
 15149  0103A2  0E41               	movlw	65
 15150  0103A4  6EE6               	movwf	postinc1,c
 15151                           
 15152                           ;stkvar	_u @ sp[(-60)+12]
 15153  0103A6  0ED0               	movlw	-48
 15154  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 15155  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 15156  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 15157  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 15158  0103C0  EC26  F097         	call	___flmul	;wreg free
 15159                           
 15160                           ;stkvar	_u @ sp[(-56)+12]
 15161  0103C4  0ED4               	movlw	-44
 15162  0103C6  0060  F007  FFE3   	movff	btemp,plusw1
 15163  0103CC  0ED5               	movlw	-43
 15164  0103CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15165  0103D4  0ED6               	movlw	-42
 15166  0103D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15167  0103DC  0ED7               	movlw	-41
 15168  0103DE  0060  F013  FFE3   	movff	btemp+3,plusw1
 15169                           
 15170                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 15171                           ;stkvar	_e @ sp[(-56)+34]
 15172  0103E4  0EEA               	movlw	-22
 15173  0103E6  50E3               	movf	plusw1,w,c
 15174  0103E8  0F01               	addlw	1
 15175  0103EA  6E01               	movwf	btemp^0,c
 15176  0103EC  0EEA               	movlw	-22
 15177  0103EE  0060  F007  FFE3   	movff	btemp,plusw1
 15178  0103F4  6A01               	clrf	btemp^0,c
 15179  0103F6  0EEB               	movlw	-21
 15180  0103F8  50E3               	movf	plusw1,w,c
 15181  0103FA  2001               	addwfc	btemp^0,w,c
 15182  0103FC  6E01               	movwf	btemp^0,c
 15183  0103FE  0EEB               	movlw	-21
 15184  010400  0060  F007  FFE3   	movff	btemp,plusw1
 15185  010406                     l11572:
 15186                           
 15187                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 15188  010406  0E00               	movlw	0
 15189  010408  6EE6               	movwf	postinc1,c
 15190  01040A  0E00               	movlw	0
 15191  01040C  6EE6               	movwf	postinc1,c
 15192  01040E  0E20               	movlw	32
 15193  010410  6EE6               	movwf	postinc1,c
 15194  010412  0E41               	movlw	65
 15195  010414  6EE6               	movwf	postinc1,c
 15196                           
 15197                           ;stkvar	_u @ sp[(-60)+12]
 15198  010416  0ED0               	movlw	-48
 15199  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 15200  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 15201  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 15202  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 15203  010430  EC26  F097         	call	___flmul	;wreg free
 15204  010434  0060  F007  FFE6   	movff	btemp,postinc1
 15205  01043A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15206  010440  0060  F00F  FFE6   	movff	btemp+2,postinc1
 15207  010446  0060  F013  FFE6   	movff	btemp+3,postinc1
 15208                           
 15209                           ;stkvar	_g @ sp[(-60)+16]
 15210  01044C  0ED4               	movlw	-44
 15211  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 15212  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 15213  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 15214  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 15215  010466  EC42  F0C1         	call	___flge	;wreg free
 15216  01046A  A001               	btfss	btemp& (0+255),0,c
 15217  01046C  D032               	goto	l11578
 15218  01046E  D793               	goto	l11568
 15219  010470                     l11574:
 15220                           
 15221                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 15222  010470  0E00               	movlw	0
 15223  010472  6EE6               	movwf	postinc1,c
 15224  010474  0E00               	movlw	0
 15225  010476  6EE6               	movwf	postinc1,c
 15226  010478  0E20               	movlw	32
 15227  01047A  6EE6               	movwf	postinc1,c
 15228  01047C  0E41               	movlw	65
 15229  01047E  6EE6               	movwf	postinc1,c
 15230                           
 15231                           ;stkvar	_u @ sp[(-60)+12]
 15232  010480  0ED0               	movlw	-48
 15233  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 15234  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 15235  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 15236  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 15237  01049A  EC68  F0A2         	call	___fldiv	;wreg free
 15238                           
 15239                           ;stkvar	_u @ sp[(-56)+12]
 15240  01049E  0ED4               	movlw	-44
 15241  0104A0  0060  F007  FFE3   	movff	btemp,plusw1
 15242  0104A6  0ED5               	movlw	-43
 15243  0104A8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15244  0104AE  0ED6               	movlw	-42
 15245  0104B0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15246  0104B6  0ED7               	movlw	-41
 15247  0104B8  0060  F013  FFE3   	movff	btemp+3,plusw1
 15248                           
 15249                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 15250                           ;stkvar	_e @ sp[(-56)+34]
 15251  0104BE  50E1               	movf	fsr1l,w,c
 15252  0104C0  0FEA               	addlw	-22
 15253  0104C2  6ED9               	movwf	fsr2l,c
 15254  0104C4  50E2               	movf	fsr1h,w,c
 15255  0104C6  6EDA               	movwf	fsr2h,c
 15256  0104C8  0EFF               	movlw	255
 15257  0104CA  22DA               	addwfc	fsr2h,f,c
 15258  0104CC  06DE               	decf	postinc2,f,c
 15259  0104CE  0E00               	movlw	0
 15260  0104D0  5ADD               	subwfb	postdec2,f,c
 15261  0104D2                     l11578:
 15262                           
 15263                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 15264                           ;stkvar	_u @ sp[(-56)+12]
 15265  0104D2  0ED4               	movlw	-44
 15266  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 15267  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 15268  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 15269  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 15270                           
 15271                           ;stkvar	_g @ sp[(-60)+16]
 15272  0104EC  0ED4               	movlw	-44
 15273  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 15274  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 15275  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 15276  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 15277  010506  EC42  F0C1         	call	___flge	;wreg free
 15278  01050A  A001               	btfss	btemp& (0+255),0,c
 15279  01050C  D7B1               	goto	l11574
 15280  01050E                     u10720:
 15281                           
 15282                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 15283                           ;stkvar	_c @ sp[(-56)+-7]
 15284  01050E  0EC1               	movlw	-63
 15285  010510  50E3               	movf	plusw1,w,c
 15286  010512  6EE6               	movwf	postinc1,c
 15287  010514  0E00               	movlw	0
 15288  010516  6EE6               	movwf	postinc1,c
 15289  010518  EC61  F0CF         	call	_tolower	;wreg free
 15290                           
 15291                           ;stkvar	_mode @ sp[(-56)+54]
 15292  01051C  0EFE               	movlw	-2
 15293  01051E  0060  F007  FFE3   	movff	btemp,plusw1
 15294                           
 15295                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 15296                           ;stkvar	_mode @ sp[(-56)+54]
 15297                           ;stkvar	_nmode @ sp[(-56)+55]
 15298  010524  0EFE               	movlw	-2
 15299  010526  006F FF8C  F001    	movff	plusw1,btemp
 15300  01052C  0EFF               	movlw	-1
 15301  01052E  0060  F007  FFE3   	movff	btemp,plusw1
 15302                           
 15303                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 15304                           ;stkvar	_mode @ sp[(-56)+54]
 15305  010534  0EFE               	movlw	-2
 15306  010536  006F FF8C  F001    	movff	plusw1,btemp
 15307  01053C  0E67               	movlw	103
 15308  01053E  1801               	xorwf	btemp^0,w,c
 15309  010540  A4D8               	btfss	status,2,c
 15310  010542  D025               	goto	l11596
 15311                           
 15312                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 15313  010544  5023               	movf	_prec^0,w,c
 15314  010546  1024               	iorwf	(_prec+1)^0,w,c
 15315  010548  A4D8               	btfss	status,2,c
 15316  01054A  D004               	goto	l11590
 15317                           
 15318                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 15319  01054C  0E00               	movlw	0
 15320  01054E  6E24               	movwf	(_prec+1)^0,c
 15321  010550  0E01               	movlw	1
 15322  010552  6E23               	movwf	_prec^0,c
 15323  010554                     l11590:
 15324                           
 15325                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 15326  010554  BE24               	btfsc	(_prec+1)^0,7,c
 15327  010556  D005               	goto	u10750
 15328  010558  5024               	movf	(_prec+1)^0,w,c
 15329  01055A  E110               	bnz	l11594
 15330  01055C  0423               	decf	_prec^0,w,c
 15331  01055E  B0D8               	btfsc	status,0,c
 15332  010560  D00D               	goto	l11594
 15333  010562                     u10750:
 15334  010562  0E06               	movlw	6
 15335  010564  6E0B               	movwf	(btemp+10)^0,c
 15336  010566  0E00               	movlw	0
 15337  010568  6E0C               	movwf	(btemp+11)^0,c
 15338                           
 15339                           ;stkvar	_p @ sp[(-56)+40]
 15340  01056A  0EF0               	movlw	-16
 15341  01056C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15342  010572  0EF1               	movlw	-15
 15343  010574  0060  F033  FFE3   	movff	btemp+11,plusw1
 15344  01057A  D00C               	goto	l11602
 15345  01057C                     l11594:
 15346                           
 15347                           ;stkvar	_p @ sp[(-56)+40]
 15348  01057C  0EF0               	movlw	-16
 15349  01057E  0060  F08F  FFE3   	movff	_prec,plusw1
 15350  010584  0EF1               	movlw	-15
 15351  010586  0060  F093  FFE3   	movff	_prec+1,plusw1
 15352  01058C  D003               	goto	l11602
 15353  01058E                     l11596:
 15354                           
 15355                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 15356  01058E  AE24               	btfss	(_prec+1)^0,7,c
 15357  010590  D7F5               	goto	l11594
 15358  010592  D7E7               	goto	u10750
 15359  010594                     l11602:
 15360                           
 15361                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 15362                           ;stkvar	_mode @ sp[(-56)+54]
 15363  010594  0EFE               	movlw	-2
 15364  010596  006F FF8C  F001    	movff	plusw1,btemp
 15365  01059C  0E67               	movlw	103
 15366  01059E  1801               	xorwf	btemp^0,w,c
 15367  0105A0  A4D8               	btfss	status,2,c
 15368  0105A2  D02F               	goto	l11612
 15369                           
 15370                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 15371                           ;stkvar	_e @ sp[(-56)+34]
 15372  0105A4  0EEB               	movlw	-21
 15373  0105A6  AEE3               	btfss	plusw1,7,c
 15374  0105A8  D00E               	goto	u10780
 15375  0105AA  0EEA               	movlw	-22
 15376  0105AC  006F FF8C  F001    	movff	plusw1,btemp
 15377  0105B2  0EFC               	movlw	252
 15378  0105B4  5E01               	subwf	btemp^0,f,c
 15379  0105B6  0EEB               	movlw	-21
 15380  0105B8  006F FF8C  F001    	movff	plusw1,btemp
 15381  0105BE  0EFF               	movlw	255
 15382  0105C0  5A01               	subwfb	btemp^0,f,c
 15383  0105C2  A0D8               	btfss	status,0,c
 15384  0105C4  D018               	goto	l11610
 15385  0105C6                     u10780:
 15386                           
 15387                           ;stkvar	_e @ sp[(-56)+34]
 15388                           ;stkvar	_p @ sp[(-56)+40]
 15389  0105C6  0EF0               	movlw	-16
 15390  0105C8  50E3               	movf	plusw1,w,c
 15391  0105CA  0FFF               	addlw	255
 15392  0105CC  6E0B               	movwf	(btemp+10)^0,c
 15393  0105CE  0EF1               	movlw	-15
 15394  0105D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 15395  0105D6  0EFF               	movlw	255
 15396  0105D8  220C               	addwfc	(btemp+11)^0,f,c
 15397  0105DA  0EEA               	movlw	-22
 15398  0105DC  50E3               	movf	plusw1,w,c
 15399  0105DE  5C0B               	subwf	(btemp+10)^0,w,c
 15400  0105E0  500C               	movf	(btemp+11)^0,w,c
 15401  0105E2  0A80               	xorlw	128
 15402  0105E4  6E01               	movwf	btemp^0,c
 15403  0105E6  0EEB               	movlw	-21
 15404  0105E8  50E3               	movf	plusw1,w,c
 15405  0105EA  0A80               	xorlw	128
 15406  0105EC  5801               	subwfb	btemp^0,w,c
 15407  0105EE  A0D8               	btfss	status,0,c
 15408  0105F0  D002               	goto	l11610
 15409                           
 15410                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 15411  0105F2  0E66               	movlw	102
 15412  0105F4  D001               	goto	L12
 15413  0105F6                     l11610:
 15414                           
 15415                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 15416  0105F6  0E65               	movlw	101
 15417  0105F8                     L12:
 15418  0105F8  6E0C               	movwf	(btemp+11)^0,c
 15419                           
 15420                           ;stkvar	_nmode @ sp[(-56)+55]
 15421  0105FA  0EFF               	movlw	-1
 15422  0105FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 15423  010602                     l11612:
 15424                           
 15425                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 15426                           ;stkvar	_p @ sp[(-56)+40]
 15427                           ;stkvar	_m @ sp[(-56)+48]
 15428  010602  0EF0               	movlw	-16
 15429  010604  006F FF8C  F001    	movff	plusw1,btemp
 15430  01060A  0EF8               	movlw	-8
 15431  01060C  0060  F007  FFE3   	movff	btemp,plusw1
 15432  010612  0EF1               	movlw	-15
 15433  010614  006F FF8C  F001    	movff	plusw1,btemp
 15434  01061A  0EF9               	movlw	-7
 15435  01061C  0060  F007  FFE3   	movff	btemp,plusw1
 15436                           
 15437                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 15438                           ;stkvar	_mode @ sp[(-56)+54]
 15439  010622  0EFE               	movlw	-2
 15440  010624  006F FF8C  F001    	movff	plusw1,btemp
 15441  01062A  0E67               	movlw	103
 15442  01062C  1801               	xorwf	btemp^0,w,c
 15443  01062E  A4D8               	btfss	status,2,c
 15444  010630  D00B               	goto	u10820
 15445                           
 15446                           ;stkvar	_nmode @ sp[(-56)+55]
 15447  010632  0EFF               	movlw	-1
 15448  010634  006F FF8C  F001    	movff	plusw1,btemp
 15449  01063A  0E66               	movlw	102
 15450  01063C  1801               	xorwf	btemp^0,w,c
 15451  01063E  A4D8               	btfss	status,2,c
 15452  010640  D014               	goto	l2189
 15453                           
 15454                           ;stkvar	_e @ sp[(-56)+34]
 15455  010642  0EEB               	movlw	-21
 15456  010644  AEE3               	btfss	plusw1,7,c
 15457  010646  D011               	goto	l2189
 15458  010648                     u10820:
 15459                           
 15460                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 15461                           ;stkvar	_m @ sp[(-56)+48]
 15462  010648  0EF8               	movlw	-8
 15463  01064A  50E3               	movf	plusw1,w,c
 15464  01064C  0F01               	addlw	1
 15465  01064E  6E01               	movwf	btemp^0,c
 15466  010650  0EF8               	movlw	-8
 15467  010652  0060  F007  FFE3   	movff	btemp,plusw1
 15468  010658  6A01               	clrf	btemp^0,c
 15469  01065A  0EF9               	movlw	-7
 15470  01065C  50E3               	movf	plusw1,w,c
 15471  01065E  2001               	addwfc	btemp^0,w,c
 15472  010660  6E01               	movwf	btemp^0,c
 15473  010662  0EF9               	movlw	-7
 15474  010664  0060  F007  FFE3   	movff	btemp,plusw1
 15475  01066A                     l2189:
 15476                           
 15477                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 15478                           ;stkvar	_nmode @ sp[(-56)+55]
 15479  01066A  0EFF               	movlw	-1
 15480  01066C  006F FF8C  F001    	movff	plusw1,btemp
 15481  010672  0E66               	movlw	102
 15482  010674  1801               	xorwf	btemp^0,w,c
 15483  010676  A4D8               	btfss	status,2,c
 15484  010678  D03B               	goto	l11632
 15485                           
 15486                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 15487                           ;stkvar	_e @ sp[(-56)+34]
 15488  01067A  0EEB               	movlw	-21
 15489  01067C  AEE3               	btfss	plusw1,7,c
 15490  01067E  D01C               	goto	l11628
 15491                           
 15492                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 15493  010680  0E00               	movlw	0
 15494  010682  6E09               	movwf	(btemp+8)^0,c
 15495  010684  0E00               	movlw	0
 15496  010686  6E0A               	movwf	(btemp+9)^0,c
 15497  010688  0E80               	movlw	128
 15498  01068A  6E0B               	movwf	(btemp+10)^0,c
 15499  01068C  0E3F               	movlw	63
 15500  01068E  6E0C               	movwf	(btemp+11)^0,c
 15501                           
 15502                           ;stkvar	_u @ sp[(-56)+12]
 15503  010690  0ED4               	movlw	-44
 15504  010692  0060  F027  FFE3   	movff	btemp+8,plusw1
 15505  010698  0ED5               	movlw	-43
 15506  01069A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15507  0106A0  0ED6               	movlw	-42
 15508  0106A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15509  0106A8  0ED7               	movlw	-41
 15510  0106AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 15511                           
 15512                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 15513                           ;stkvar	_e @ sp[(-56)+34]
 15514  0106B0  0EEA               	movlw	-22
 15515  0106B2  6AE3               	clrf	plusw1,c
 15516  0106B4  0EEB               	movlw	-21
 15517  0106B6  6AE3               	clrf	plusw1,c
 15518  0106B8                     l11628:
 15519                           
 15520                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 15521                           ;stkvar	_mode @ sp[(-56)+54]
 15522  0106B8  0EFE               	movlw	-2
 15523  0106BA  006F FF8C  F001    	movff	plusw1,btemp
 15524  0106C0  0E67               	movlw	103
 15525  0106C2  1801               	xorwf	btemp^0,w,c
 15526  0106C4  B4D8               	btfsc	status,2,c
 15527  0106C6  D014               	goto	l11632
 15528                           
 15529                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 15530                           ;stkvar	_e @ sp[(-56)+34]
 15531                           ;stkvar	_m @ sp[(-56)+48]
 15532  0106C8  0EF8               	movlw	-8
 15533  0106CA  50E3               	movf	plusw1,w,c
 15534  0106CC  6E01               	movwf	btemp^0,c
 15535  0106CE  0EEA               	movlw	-22
 15536  0106D0  50E3               	movf	plusw1,w,c
 15537  0106D2  2601               	addwf	btemp^0,f,c
 15538  0106D4  0EF8               	movlw	-8
 15539  0106D6  0060  F007  FFE3   	movff	btemp,plusw1
 15540  0106DC  0EF9               	movlw	-7
 15541  0106DE  50E3               	movf	plusw1,w,c
 15542  0106E0  6E01               	movwf	btemp^0,c
 15543  0106E2  0EEB               	movlw	-21
 15544  0106E4  50E3               	movf	plusw1,w,c
 15545  0106E6  2201               	addwfc	btemp^0,f,c
 15546  0106E8  0EF9               	movlw	-7
 15547  0106EA  0060  F007  FFE3   	movff	btemp,plusw1
 15548  0106F0                     l11632:
 15549                           
 15550                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 15551                           ;stkvar	_i @ sp[(-56)+36]
 15552  0106F0  0EEC               	movlw	-20
 15553  0106F2  6AE3               	clrf	plusw1,c
 15554  0106F4  0EED               	movlw	-19
 15555  0106F6  6AE3               	clrf	plusw1,c
 15556                           
 15557                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 15558                           ;stkvar	_g @ sp[(-56)+16]
 15559  0106F8  0ED8               	movlw	-40
 15560  0106FA  006F FF8C  F009    	movff	plusw1,btemp+8
 15561  010700  0ED9               	movlw	-39
 15562  010702  006F FF8C  F00A    	movff	plusw1,btemp+9
 15563  010708  0EDA               	movlw	-38
 15564  01070A  006F FF8C  F00B    	movff	plusw1,btemp+10
 15565  010710  0EDB               	movlw	-37
 15566  010712  006F FF8C  F00C    	movff	plusw1,btemp+11
 15567                           
 15568                           ;stkvar	_h @ sp[(-56)+24]
 15569  010718  0EE0               	movlw	-32
 15570  01071A  0060  F027  FFE3   	movff	btemp+8,plusw1
 15571  010720  0EE1               	movlw	-31
 15572  010722  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15573  010728  0EE2               	movlw	-30
 15574  01072A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15575  010730  0EE3               	movlw	-29
 15576  010732  0060  F033  FFE3   	movff	btemp+11,plusw1
 15577                           
 15578                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 15579                           ;stkvar	_u @ sp[(-56)+12]
 15580  010738  0ED4               	movlw	-44
 15581  01073A  006F FF8C  F009    	movff	plusw1,btemp+8
 15582  010740  0ED5               	movlw	-43
 15583  010742  006F FF8C  F00A    	movff	plusw1,btemp+9
 15584  010748  0ED6               	movlw	-42
 15585  01074A  006F FF8C  F00B    	movff	plusw1,btemp+10
 15586  010750  0ED7               	movlw	-41
 15587  010752  006F FF8C  F00C    	movff	plusw1,btemp+11
 15588                           
 15589                           ;stkvar	_ou @ sp[(-56)+28]
 15590  010758  0EE4               	movlw	-28
 15591  01075A  0060  F027  FFE3   	movff	btemp+8,plusw1
 15592  010760  0EE5               	movlw	-27
 15593  010762  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15594  010768  0EE6               	movlw	-26
 15595  01076A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15596  010770  0EE7               	movlw	-25
 15597  010772  0060  F033  FFE3   	movff	btemp+11,plusw1
 15598                           
 15599                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 15600  010778  D0D6               	goto	l11648
 15601  01077A                     l11638:
 15602                           
 15603                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 15604                           ;stkvar	_u @ sp[(-56)+12]
 15605  01077A  0ED4               	movlw	-44
 15606  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 15607  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 15608  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 15609  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 15610                           
 15611                           ;stkvar	_h @ sp[(-60)+24]
 15612  010794  0EDC               	movlw	-36
 15613  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 15614  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 15615  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 15616  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 15617  0107AE  EC68  F0A2         	call	___fldiv	;wreg free
 15618  0107B2  0060  F007  FFE6   	movff	btemp,postinc1
 15619  0107B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15620  0107BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 15621  0107C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 15622  0107CA  EC69  F0AD         	call	_floorf	;wreg free
 15623                           
 15624                           ;stkvar	_l @ sp[(-56)+20]
 15625  0107CE  0EDC               	movlw	-36
 15626  0107D0  0060  F007  FFE3   	movff	btemp,plusw1
 15627  0107D6  0EDD               	movlw	-35
 15628  0107D8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15629  0107DE  0EDE               	movlw	-34
 15630  0107E0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15631  0107E6  0EDF               	movlw	-33
 15632  0107E8  0060  F013  FFE3   	movff	btemp+3,plusw1
 15633                           
 15634                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 15635                           ;stkvar	_l @ sp[(-56)+20]
 15636  0107EE  0EDC               	movlw	-36
 15637  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 15638  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 15639  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 15640  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 15641  010808  ECD1  F0BF         	call	___fltol	;wreg free
 15642  01080C  0060  F004  F00B   	movff	btemp,btemp+10
 15643  010812  0060  F008  F00C   	movff	btemp+1,btemp+11
 15644                           
 15645                           ;stkvar	_d @ sp[(-56)+44]
 15646  010818  0EF4               	movlw	-12
 15647  01081A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15648  010820  0EF5               	movlw	-11
 15649  010822  0060  F033  FFE3   	movff	btemp+11,plusw1
 15650                           
 15651                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 15652                           ;stkvar	_u @ sp[(-56)+12]
 15653  010828  0ED4               	movlw	-44
 15654  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 15655  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 15656  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 15657  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 15658                           
 15659                           ;stkvar	_l @ sp[(-60)+20]
 15660  010842  0ED8               	movlw	-40
 15661  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 15662  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 15663  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 15664  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 15665  01085C  EC26  F097         	call	___flmul	;wreg free
 15666  010860  0060  F007  FFE6   	movff	btemp,postinc1
 15667  010866  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15668  01086C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 15669  010872  0060  F013  FFE6   	movff	btemp+3,postinc1
 15670                           
 15671                           ;stkvar	_h @ sp[(-60)+24]
 15672  010878  0EDC               	movlw	-36
 15673  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 15674  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 15675  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 15676  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 15677  010892  EC0D  F0D3         	call	___flsub	;wreg free
 15678                           
 15679                           ;stkvar	_h @ sp[(-56)+24]
 15680  010896  0EE0               	movlw	-32
 15681  010898  0060  F007  FFE3   	movff	btemp,plusw1
 15682  01089E  0EE1               	movlw	-31
 15683  0108A0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15684  0108A6  0EE2               	movlw	-30
 15685  0108A8  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15686  0108AE  0EE3               	movlw	-29
 15687  0108B0  0060  F013  FFE3   	movff	btemp+3,plusw1
 15688                           
 15689                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 15690  0108B6  0E00               	movlw	0
 15691  0108B8  6EE6               	movwf	postinc1,c
 15692  0108BA  0E00               	movlw	0
 15693  0108BC  6EE6               	movwf	postinc1,c
 15694  0108BE  0E20               	movlw	32
 15695  0108C0  6EE6               	movwf	postinc1,c
 15696  0108C2  0E41               	movlw	65
 15697  0108C4  6EE6               	movwf	postinc1,c
 15698                           
 15699                           ;stkvar	_u @ sp[(-60)+12]
 15700  0108C6  0ED0               	movlw	-48
 15701  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 15702  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 15703  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 15704  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 15705  0108E0  EC68  F0A2         	call	___fldiv	;wreg free
 15706                           
 15707                           ;stkvar	_u @ sp[(-56)+12]
 15708  0108E4  0ED4               	movlw	-44
 15709  0108E6  0060  F007  FFE3   	movff	btemp,plusw1
 15710  0108EC  0ED5               	movlw	-43
 15711  0108EE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15712  0108F4  0ED6               	movlw	-42
 15713  0108F6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15714  0108FC  0ED7               	movlw	-41
 15715  0108FE  0060  F013  FFE3   	movff	btemp+3,plusw1
 15716                           
 15717                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 15718                           ;stkvar	_i @ sp[(-56)+36]
 15719  010904  0EEC               	movlw	-20
 15720  010906  50E3               	movf	plusw1,w,c
 15721  010908  0F01               	addlw	1
 15722  01090A  6E01               	movwf	btemp^0,c
 15723  01090C  0EEC               	movlw	-20
 15724  01090E  0060  F007  FFE3   	movff	btemp,plusw1
 15725  010914  6A01               	clrf	btemp^0,c
 15726  010916  0EED               	movlw	-19
 15727  010918  50E3               	movf	plusw1,w,c
 15728  01091A  2001               	addwfc	btemp^0,w,c
 15729  01091C  6E01               	movwf	btemp^0,c
 15730  01091E  0EED               	movlw	-19
 15731  010920  0060  F007  FFE3   	movff	btemp,plusw1
 15732  010926                     l11648:
 15733                           
 15734                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 15735                           ;stkvar	_m @ sp[(-56)+48]
 15736                           ;stkvar	_i @ sp[(-56)+36]
 15737  010926  50E1               	movf	fsr1l,w,c
 15738  010928  0FEC               	addlw	-20
 15739  01092A  6ED9               	movwf	fsr2l,c
 15740  01092C  50E2               	movf	fsr1h,w,c
 15741  01092E  6EDA               	movwf	fsr2h,c
 15742  010930  0EFF               	movlw	255
 15743  010932  22DA               	addwfc	fsr2h,f,c
 15744  010934  0EF8               	movlw	-8
 15745  010936  50E3               	movf	plusw1,w,c
 15746  010938  5CDE               	subwf	postinc2,w,c
 15747  01093A  50DE               	movf	postinc2,w,c
 15748  01093C  0A80               	xorlw	128
 15749  01093E  6E01               	movwf	btemp^0,c
 15750  010940  0EF9               	movlw	-7
 15751  010942  50E3               	movf	plusw1,w,c
 15752  010944  0A80               	xorlw	128
 15753  010946  5801               	subwfb	btemp^0,w,c
 15754  010948  A0D8               	btfss	status,0,c
 15755  01094A  D717               	goto	l11638
 15756                           
 15757                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 15758  01094C  0E00               	movlw	0
 15759  01094E  6EE6               	movwf	postinc1,c
 15760  010950  0E00               	movlw	0
 15761  010952  6EE6               	movwf	postinc1,c
 15762  010954  0EA0               	movlw	160
 15763  010956  6EE6               	movwf	postinc1,c
 15764  010958  0E40               	movlw	64
 15765  01095A  6EE6               	movwf	postinc1,c
 15766                           
 15767                           ;stkvar	_u @ sp[(-60)+12]
 15768  01095C  0ED0               	movlw	-48
 15769  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 15770  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 15771  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 15772  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 15773  010976  EC26  F097         	call	___flmul	;wreg free
 15774                           
 15775                           ;stkvar	_l @ sp[(-56)+20]
 15776  01097A  0EDC               	movlw	-36
 15777  01097C  0060  F007  FFE3   	movff	btemp,plusw1
 15778  010982  0EDD               	movlw	-35
 15779  010984  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15780  01098A  0EDE               	movlw	-34
 15781  01098C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15782  010992  0EDF               	movlw	-33
 15783  010994  0060  F013  FFE3   	movff	btemp+3,plusw1
 15784                           
 15785                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 15786                           ;stkvar	_l @ sp[(-56)+20]
 15787  01099A  0EDC               	movlw	-36
 15788  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 15789  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 15790  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 15791  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 15792                           
 15793                           ;stkvar	_h @ sp[(-60)+24]
 15794  0109B4  0EDC               	movlw	-36
 15795  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 15796  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 15797  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 15798  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 15799  0109CE  EC42  F0C1         	call	___flge	;wreg free
 15800  0109D2  A001               	btfss	btemp& (0+255),0,c
 15801  0109D4  D021               	goto	u10890
 15802                           
 15803                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 15804                           ;stkvar	_l @ sp[(-56)+20]
 15805                           
 15806                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 15807                           
 15808                           ;stkvar	_l @ sp[(-56)+20]
 15809                           
 15810                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 15811  0109D6  0EDC               	movlw	-36
 15812  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 15813  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 15814  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 15815  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 15816                           
 15817                           ;stkvar	_h @ sp[(-60)+24]
 15818  0109F0  0EDC               	movlw	-36
 15819  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 15820  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 15821  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 15822  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 15823  010A0A  ECAA  F0CA         	call	___fleq	;wreg free
 15824  010A0E  A001               	btfss	btemp& (0+255),0,c
 15825  010A10  D01B               	goto	l11662
 15826                           
 15827                           ;stkvar	_d @ sp[(-56)+44]
 15828  010A12  0EF4               	movlw	-12
 15829  010A14  B0E3               	btfsc	plusw1,0,c
 15830  010A16  D018               	goto	l11662
 15831  010A18                     u10890:
 15832                           
 15833                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 15834  010A18  0E00               	movlw	0
 15835  010A1A  6E09               	movwf	(btemp+8)^0,c
 15836  010A1C  0E00               	movlw	0
 15837  010A1E  6E0A               	movwf	(btemp+9)^0,c
 15838  010A20  0E00               	movlw	0
 15839  010A22  6E0B               	movwf	(btemp+10)^0,c
 15840  010A24  0E00               	movlw	0
 15841  010A26  6E0C               	movwf	(btemp+11)^0,c
 15842                           
 15843                           ;stkvar	_l @ sp[(-56)+20]
 15844  010A28  0EDC               	movlw	-36
 15845  010A2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 15846  010A30  0EDD               	movlw	-35
 15847  010A32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15848  010A38  0EDE               	movlw	-34
 15849  010A3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15850  010A40  0EDF               	movlw	-33
 15851  010A42  0060  F033  FFE3   	movff	btemp+11,plusw1
 15852  010A48                     l11662:
 15853                           
 15854                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 15855                           ;stkvar	_l @ sp[(-56)+20]
 15856  010A48  0EDC               	movlw	-36
 15857  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 15858  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 15859  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 15860  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 15861                           
 15862                           ;stkvar	_g @ sp[(-60)+16]
 15863  010A62  0ED4               	movlw	-44
 15864  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 15865  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 15866  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 15867  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 15868  010A7C  EC3B  F09B         	call	___fladd	;wreg free
 15869                           
 15870                           ;stkvar	_h @ sp[(-56)+24]
 15871  010A80  0EE0               	movlw	-32
 15872  010A82  0060  F007  FFE3   	movff	btemp,plusw1
 15873  010A88  0EE1               	movlw	-31
 15874  010A8A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15875  010A90  0EE2               	movlw	-30
 15876  010A92  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15877  010A98  0EE3               	movlw	-29
 15878  010A9A  0060  F013  FFE3   	movff	btemp+3,plusw1
 15879                           
 15880                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 15881                           ;stkvar	_ou @ sp[(-56)+28]
 15882  010AA0  0EE4               	movlw	-28
 15883  010AA2  006F FF8C  F009    	movff	plusw1,btemp+8
 15884  010AA8  0EE5               	movlw	-27
 15885  010AAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 15886  010AB0  0EE6               	movlw	-26
 15887  010AB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 15888  010AB8  0EE7               	movlw	-25
 15889  010ABA  006F FF8C  F00C    	movff	plusw1,btemp+11
 15890                           
 15891                           ;stkvar	_u @ sp[(-56)+12]
 15892  010AC0  0ED4               	movlw	-44
 15893  010AC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 15894  010AC8  0ED5               	movlw	-43
 15895  010ACA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15896  010AD0  0ED6               	movlw	-42
 15897  010AD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15898  010AD8  0ED7               	movlw	-41
 15899  010ADA  0060  F033  FFE3   	movff	btemp+11,plusw1
 15900                           
 15901                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 15902                           ;stkvar	_nmode @ sp[(-56)+55]
 15903  010AE0  0EFF               	movlw	-1
 15904  010AE2  006F FF8C  F001    	movff	plusw1,btemp
 15905  010AE8  0E65               	movlw	101
 15906  010AEA  1801               	xorwf	btemp^0,w,c
 15907  010AEC  B4D8               	btfsc	status,2,c
 15908  010AEE  D011               	goto	l11670
 15909                           
 15910                           ;stkvar	_e @ sp[(-56)+34]
 15911                           ;stkvar	_ne @ sp[(-56)+46]
 15912  010AF0  0EEA               	movlw	-22
 15913  010AF2  006F FF8C  F001    	movff	plusw1,btemp
 15914  010AF8  0EF6               	movlw	-10
 15915  010AFA  0060  F007  FFE3   	movff	btemp,plusw1
 15916  010B00  0EEB               	movlw	-21
 15917  010B02  006F FF8C  F001    	movff	plusw1,btemp
 15918  010B08  0EF7               	movlw	-9
 15919  010B0A  0060  F007  FFE3   	movff	btemp,plusw1
 15920  010B10  D004               	goto	l2204
 15921  010B12                     l11670:
 15922                           
 15923                           ;stkvar	_ne @ sp[(-56)+46]
 15924  010B12  0EF6               	movlw	-10
 15925  010B14  6AE3               	clrf	plusw1,c
 15926  010B16  0EF7               	movlw	-9
 15927  010B18  6AE3               	clrf	plusw1,c
 15928  010B1A                     l2204:
 15929                           
 15930                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 15931                           ;stkvar	_pp @ sp[(-56)+50]
 15932  010B1A  0EFA               	movlw	-6
 15933  010B1C  6AE3               	clrf	plusw1,c
 15934  010B1E  0EFB               	movlw	-5
 15935  010B20  6AE3               	clrf	plusw1,c
 15936                           
 15937                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 15938                           ;stkvar	_t @ sp[(-56)+52]
 15939  010B22  0EFC               	movlw	-4
 15940  010B24  6AE3               	clrf	plusw1,c
 15941  010B26  0EFD               	movlw	-3
 15942  010B28  6AE3               	clrf	plusw1,c
 15943                           
 15944                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 15945                           ;stkvar	_i @ sp[(-56)+36]
 15946  010B2A  0EEC               	movlw	-20
 15947  010B2C  6AE3               	clrf	plusw1,c
 15948  010B2E  0EED               	movlw	-19
 15949  010B30  6AE3               	clrf	plusw1,c
 15950                           
 15951                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 15952  010B32  D1B7               	goto	l11722
 15953  010B34                     l11672:
 15954                           
 15955                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 15956                           ;stkvar	_u @ sp[(-56)+12]
 15957  010B34  0ED4               	movlw	-44
 15958  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 15959  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 15960  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 15961  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 15962                           
 15963                           ;stkvar	_h @ sp[(-60)+24]
 15964  010B4E  0EDC               	movlw	-36
 15965  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 15966  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 15967  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 15968  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 15969  010B68  EC68  F0A2         	call	___fldiv	;wreg free
 15970  010B6C  0060  F007  FFE6   	movff	btemp,postinc1
 15971  010B72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15972  010B78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 15973  010B7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 15974  010B84  EC69  F0AD         	call	_floorf	;wreg free
 15975                           
 15976                           ;stkvar	_l @ sp[(-56)+20]
 15977  010B88  0EDC               	movlw	-36
 15978  010B8A  0060  F007  FFE3   	movff	btemp,plusw1
 15979  010B90  0EDD               	movlw	-35
 15980  010B92  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15981  010B98  0EDE               	movlw	-34
 15982  010B9A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15983  010BA0  0EDF               	movlw	-33
 15984  010BA2  0060  F013  FFE3   	movff	btemp+3,plusw1
 15985                           
 15986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 15987                           ;stkvar	_l @ sp[(-56)+20]
 15988  010BA8  0EDC               	movlw	-36
 15989  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 15990  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 15991  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 15992  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 15993  010BC2  ECD1  F0BF         	call	___fltol	;wreg free
 15994  010BC6  0060  F004  F00B   	movff	btemp,btemp+10
 15995  010BCC  0060  F008  F00C   	movff	btemp+1,btemp+11
 15996                           
 15997                           ;stkvar	_d @ sp[(-56)+44]
 15998  010BD2  0EF4               	movlw	-12
 15999  010BD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16000  010BDA  0EF5               	movlw	-11
 16001  010BDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 16002                           
 16003                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 16004  010BE2  B825               	btfsc	_flags^0,4,c
 16005  010BE4  D026               	goto	l11686
 16006                           
 16007                           ;stkvar	_d @ sp[(-56)+44]
 16008  010BE6  0EF4               	movlw	-12
 16009  010BE8  006F FF8C  F001    	movff	plusw1,btemp
 16010  010BEE  0EF5               	movlw	-11
 16011  010BF0  50E3               	movf	plusw1,w,c
 16012  010BF2  1001               	iorwf	btemp^0,w,c
 16013  010BF4  A4D8               	btfss	status,2,c
 16014  010BF6  D01D               	goto	l11686
 16015                           
 16016                           ;stkvar	_mode @ sp[(-56)+54]
 16017  010BF8  0EFE               	movlw	-2
 16018  010BFA  006F FF8C  F001    	movff	plusw1,btemp
 16019  010C00  0E67               	movlw	103
 16020  010C02  1801               	xorwf	btemp^0,w,c
 16021  010C04  A4D8               	btfss	status,2,c
 16022  010C06  D015               	goto	l11686
 16023                           
 16024                           ;stkvar	_ne @ sp[(-56)+46]
 16025  010C08  0EF7               	movlw	-9
 16026  010C0A  AEE3               	btfss	plusw1,7,c
 16027  010C0C  D012               	goto	l11686
 16028                           
 16029                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 16030                           ;stkvar	_t @ sp[(-56)+52]
 16031  010C0E  0EFC               	movlw	-4
 16032  010C10  50E3               	movf	plusw1,w,c
 16033  010C12  0F01               	addlw	1
 16034  010C14  6E01               	movwf	btemp^0,c
 16035  010C16  0EFC               	movlw	-4
 16036  010C18  0060  F007  FFE3   	movff	btemp,plusw1
 16037  010C1E  6A01               	clrf	btemp^0,c
 16038  010C20  0EFD               	movlw	-3
 16039  010C22  50E3               	movf	plusw1,w,c
 16040  010C24  2001               	addwfc	btemp^0,w,c
 16041  010C26  6E01               	movwf	btemp^0,c
 16042  010C28  0EFD               	movlw	-3
 16043  010C2A  0060  F007  FFE3   	movff	btemp,plusw1
 16044                           
 16045                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 16046  010C30  D0AF               	goto	l11714
 16047  010C32                     l11686:
 16048                           
 16049                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 16050                           ;stkvar	_pp @ sp[(-56)+50]
 16051  010C32  0EFA               	movlw	-6
 16052  010C34  006F FF8C  F001    	movff	plusw1,btemp
 16053  010C3A  0EFB               	movlw	-5
 16054  010C3C  50E3               	movf	plusw1,w,c
 16055  010C3E  1001               	iorwf	btemp^0,w,c
 16056  010C40  A4D8               	btfss	status,2,c
 16057  010C42  D070               	goto	l11706
 16058                           
 16059                           ;stkvar	_ne @ sp[(-56)+46]
 16060  010C44  0EF7               	movlw	-9
 16061  010C46  AEE3               	btfss	plusw1,7,c
 16062  010C48  D06D               	goto	l11706
 16063                           
 16064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 16065                           ;stkvar	_n @ sp[(-56)+32]
 16066  010C4A  0EE8               	movlw	-24
 16067  010C4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 16068  010C52  0EE9               	movlw	-23
 16069  010C54  006F FF8C  F00C    	movff	plusw1,btemp+11
 16070  010C5A  0E94               	movlw	low _dbuf
 16071  010C5C  240B               	addwf	(btemp+10)^0,w,c
 16072  010C5E  6ED9               	movwf	fsr2l,c
 16073  010C60  0E03               	movlw	high _dbuf
 16074  010C62  200C               	addwfc	(btemp+11)^0,w,c
 16075  010C64  6EDA               	movwf	fsr2h,c
 16076  010C66  0E2E               	movlw	46
 16077  010C68  6EDF               	movwf	indf2,c
 16078                           
 16079                           ;stkvar	_n @ sp[(-56)+32]
 16080  010C6A  0EE8               	movlw	-24
 16081  010C6C  50E3               	movf	plusw1,w,c
 16082  010C6E  0F01               	addlw	1
 16083  010C70  6E01               	movwf	btemp^0,c
 16084  010C72  0EE8               	movlw	-24
 16085  010C74  0060  F007  FFE3   	movff	btemp,plusw1
 16086  010C7A  6A01               	clrf	btemp^0,c
 16087  010C7C  0EE9               	movlw	-23
 16088  010C7E  50E3               	movf	plusw1,w,c
 16089  010C80  2001               	addwfc	btemp^0,w,c
 16090  010C82  6E01               	movwf	btemp^0,c
 16091  010C84  0EE9               	movlw	-23
 16092  010C86  0060  F007  FFE3   	movff	btemp,plusw1
 16093                           
 16094                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 16095                           ;stkvar	_w @ sp[(-56)+38]
 16096  010C8C  50E1               	movf	fsr1l,w,c
 16097  010C8E  0FEE               	addlw	-18
 16098  010C90  6ED9               	movwf	fsr2l,c
 16099  010C92  50E2               	movf	fsr1h,w,c
 16100  010C94  6EDA               	movwf	fsr2h,c
 16101  010C96  0EFF               	movlw	255
 16102  010C98  22DA               	addwfc	fsr2h,f,c
 16103  010C9A  06DE               	decf	postinc2,f,c
 16104  010C9C  0E00               	movlw	0
 16105  010C9E  5ADD               	subwfb	postdec2,f,c
 16106                           
 16107                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 16108  010CA0  0E01               	movlw	1
 16109  010CA2  6E0B               	movwf	(btemp+10)^0,c
 16110  010CA4  0E00               	movlw	0
 16111  010CA6  6E0C               	movwf	(btemp+11)^0,c
 16112                           
 16113                           ;stkvar	_pp @ sp[(-56)+50]
 16114  010CA8  0EFA               	movlw	-6
 16115  010CAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16116  010CB0  0EFB               	movlw	-5
 16117  010CB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 16118  010CB8  D035               	goto	l11706
 16119  010CBA                     l11698:
 16120                           
 16121                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 16122                           ;stkvar	_n @ sp[(-56)+32]
 16123  010CBA  0EE8               	movlw	-24
 16124  010CBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 16125  010CC2  0EE9               	movlw	-23
 16126  010CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 16127  010CCA  0E94               	movlw	low _dbuf
 16128  010CCC  240B               	addwf	(btemp+10)^0,w,c
 16129  010CCE  6ED9               	movwf	fsr2l,c
 16130  010CD0  0E03               	movlw	high _dbuf
 16131  010CD2  200C               	addwfc	(btemp+11)^0,w,c
 16132  010CD4  6EDA               	movwf	fsr2h,c
 16133  010CD6  0E30               	movlw	48
 16134  010CD8  6EDF               	movwf	indf2,c
 16135                           
 16136                           ;stkvar	_n @ sp[(-56)+32]
 16137  010CDA  0EE8               	movlw	-24
 16138  010CDC  50E3               	movf	plusw1,w,c
 16139  010CDE  0F01               	addlw	1
 16140  010CE0  6E01               	movwf	btemp^0,c
 16141  010CE2  0EE8               	movlw	-24
 16142  010CE4  0060  F007  FFE3   	movff	btemp,plusw1
 16143  010CEA  6A01               	clrf	btemp^0,c
 16144  010CEC  0EE9               	movlw	-23
 16145  010CEE  50E3               	movf	plusw1,w,c
 16146  010CF0  2001               	addwfc	btemp^0,w,c
 16147  010CF2  6E01               	movwf	btemp^0,c
 16148  010CF4  0EE9               	movlw	-23
 16149  010CF6  0060  F007  FFE3   	movff	btemp,plusw1
 16150                           
 16151                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 16152                           ;stkvar	_w @ sp[(-56)+38]
 16153  010CFC  50E1               	movf	fsr1l,w,c
 16154  010CFE  0FEE               	addlw	-18
 16155  010D00  6ED9               	movwf	fsr2l,c
 16156  010D02  50E2               	movf	fsr1h,w,c
 16157  010D04  6EDA               	movwf	fsr2h,c
 16158  010D06  0EFF               	movlw	255
 16159  010D08  22DA               	addwfc	fsr2h,f,c
 16160  010D0A  06DE               	decf	postinc2,f,c
 16161  010D0C  0E00               	movlw	0
 16162  010D0E  5ADD               	subwfb	postdec2,f,c
 16163                           
 16164                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 16165                           ;stkvar	_t @ sp[(-56)+52]
 16166  010D10  50E1               	movf	fsr1l,w,c
 16167  010D12  0FFC               	addlw	-4
 16168  010D14  6ED9               	movwf	fsr2l,c
 16169  010D16  50E2               	movf	fsr1h,w,c
 16170  010D18  6EDA               	movwf	fsr2h,c
 16171  010D1A  0EFF               	movlw	255
 16172  010D1C  22DA               	addwfc	fsr2h,f,c
 16173  010D1E  06DE               	decf	postinc2,f,c
 16174  010D20  0E00               	movlw	0
 16175  010D22  5ADD               	subwfb	postdec2,f,c
 16176  010D24                     l11706:
 16177                           
 16178                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 16179                           ;stkvar	_t @ sp[(-56)+52]
 16180  010D24  0EFC               	movlw	-4
 16181  010D26  006F FF8C  F001    	movff	plusw1,btemp
 16182  010D2C  0EFD               	movlw	-3
 16183  010D2E  50E3               	movf	plusw1,w,c
 16184  010D30  1001               	iorwf	btemp^0,w,c
 16185  010D32  A4D8               	btfss	status,2,c
 16186  010D34  D7C2               	goto	l11698
 16187                           
 16188                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 16189                           ;stkvar	_n @ sp[(-56)+32]
 16190  010D36  0EE8               	movlw	-24
 16191  010D38  006F FF8C  F00B    	movff	plusw1,btemp+10
 16192  010D3E  0EE9               	movlw	-23
 16193  010D40  006F FF8C  F00C    	movff	plusw1,btemp+11
 16194  010D46  0E94               	movlw	low _dbuf
 16195  010D48  240B               	addwf	(btemp+10)^0,w,c
 16196  010D4A  6ED9               	movwf	fsr2l,c
 16197  010D4C  0E03               	movlw	high _dbuf
 16198  010D4E  200C               	addwfc	(btemp+11)^0,w,c
 16199  010D50  6EDA               	movwf	fsr2h,c
 16200                           
 16201                           ;stkvar	_d @ sp[(-56)+44]
 16202  010D52  0EF4               	movlw	-12
 16203  010D54  50E3               	movf	plusw1,w,c
 16204  010D56  0F30               	addlw	48
 16205  010D58  6EDF               	movwf	indf2,c
 16206                           
 16207                           ;stkvar	_n @ sp[(-56)+32]
 16208  010D5A  0EE8               	movlw	-24
 16209  010D5C  50E3               	movf	plusw1,w,c
 16210  010D5E  0F01               	addlw	1
 16211  010D60  6E01               	movwf	btemp^0,c
 16212  010D62  0EE8               	movlw	-24
 16213  010D64  0060  F007  FFE3   	movff	btemp,plusw1
 16214  010D6A  6A01               	clrf	btemp^0,c
 16215  010D6C  0EE9               	movlw	-23
 16216  010D6E  50E3               	movf	plusw1,w,c
 16217  010D70  2001               	addwfc	btemp^0,w,c
 16218  010D72  6E01               	movwf	btemp^0,c
 16219  010D74  0EE9               	movlw	-23
 16220  010D76  0060  F007  FFE3   	movff	btemp,plusw1
 16221                           
 16222                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 16223                           ;stkvar	_w @ sp[(-56)+38]
 16224  010D7C  50E1               	movf	fsr1l,w,c
 16225  010D7E  0FEE               	addlw	-18
 16226  010D80  6ED9               	movwf	fsr2l,c
 16227  010D82  50E2               	movf	fsr1h,w,c
 16228  010D84  6EDA               	movwf	fsr2h,c
 16229  010D86  0EFF               	movlw	255
 16230  010D88  22DA               	addwfc	fsr2h,f,c
 16231  010D8A  06DE               	decf	postinc2,f,c
 16232  010D8C  0E00               	movlw	0
 16233  010D8E  5ADD               	subwfb	postdec2,f,c
 16234  010D90                     l11714:
 16235                           
 16236                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 16237                           ;stkvar	_u @ sp[(-56)+12]
 16238  010D90  0ED4               	movlw	-44
 16239  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 16240  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 16241  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 16242  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 16243                           
 16244                           ;stkvar	_l @ sp[(-60)+20]
 16245  010DAA  0ED8               	movlw	-40
 16246  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 16247  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 16248  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 16249  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 16250  010DC4  EC26  F097         	call	___flmul	;wreg free
 16251  010DC8  0060  F007  FFE6   	movff	btemp,postinc1
 16252  010DCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16253  010DD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16254  010DDA  0060  F013  FFE6   	movff	btemp+3,postinc1
 16255                           
 16256                           ;stkvar	_h @ sp[(-60)+24]
 16257  010DE0  0EDC               	movlw	-36
 16258  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 16259  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 16260  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 16261  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 16262  010DFA  EC0D  F0D3         	call	___flsub	;wreg free
 16263                           
 16264                           ;stkvar	_h @ sp[(-56)+24]
 16265  010DFE  0EE0               	movlw	-32
 16266  010E00  0060  F007  FFE3   	movff	btemp,plusw1
 16267  010E06  0EE1               	movlw	-31
 16268  010E08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16269  010E0E  0EE2               	movlw	-30
 16270  010E10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16271  010E16  0EE3               	movlw	-29
 16272  010E18  0060  F013  FFE3   	movff	btemp+3,plusw1
 16273                           
 16274                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 16275  010E1E  0E00               	movlw	0
 16276  010E20  6EE6               	movwf	postinc1,c
 16277  010E22  0E00               	movlw	0
 16278  010E24  6EE6               	movwf	postinc1,c
 16279  010E26  0E20               	movlw	32
 16280  010E28  6EE6               	movwf	postinc1,c
 16281  010E2A  0E41               	movlw	65
 16282  010E2C  6EE6               	movwf	postinc1,c
 16283                           
 16284                           ;stkvar	_u @ sp[(-60)+12]
 16285  010E2E  0ED0               	movlw	-48
 16286  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 16287  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 16288  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 16289  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 16290  010E48  EC68  F0A2         	call	___fldiv	;wreg free
 16291                           
 16292                           ;stkvar	_u @ sp[(-56)+12]
 16293  010E4C  0ED4               	movlw	-44
 16294  010E4E  0060  F007  FFE3   	movff	btemp,plusw1
 16295  010E54  0ED5               	movlw	-43
 16296  010E56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16297  010E5C  0ED6               	movlw	-42
 16298  010E5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16299  010E64  0ED7               	movlw	-41
 16300  010E66  0060  F013  FFE3   	movff	btemp+3,plusw1
 16301                           
 16302                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 16303                           ;stkvar	_ne @ sp[(-56)+46]
 16304  010E6C  50E1               	movf	fsr1l,w,c
 16305  010E6E  0FF6               	addlw	-10
 16306  010E70  6ED9               	movwf	fsr2l,c
 16307  010E72  50E2               	movf	fsr1h,w,c
 16308  010E74  6EDA               	movwf	fsr2h,c
 16309  010E76  0EFF               	movlw	255
 16310  010E78  22DA               	addwfc	fsr2h,f,c
 16311  010E7A  06DE               	decf	postinc2,f,c
 16312  010E7C  0E00               	movlw	0
 16313  010E7E  5ADD               	subwfb	postdec2,f,c
 16314                           
 16315                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 16316                           ;stkvar	_i @ sp[(-56)+36]
 16317  010E80  0EEC               	movlw	-20
 16318  010E82  50E3               	movf	plusw1,w,c
 16319  010E84  0F01               	addlw	1
 16320  010E86  6E01               	movwf	btemp^0,c
 16321  010E88  0EEC               	movlw	-20
 16322  010E8A  0060  F007  FFE3   	movff	btemp,plusw1
 16323  010E90  6A01               	clrf	btemp^0,c
 16324  010E92  0EED               	movlw	-19
 16325  010E94  50E3               	movf	plusw1,w,c
 16326  010E96  2001               	addwfc	btemp^0,w,c
 16327  010E98  6E01               	movwf	btemp^0,c
 16328  010E9A  0EED               	movlw	-19
 16329  010E9C  0060  F007  FFE3   	movff	btemp,plusw1
 16330  010EA2                     l11722:
 16331                           
 16332                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 16333                           ;stkvar	_m @ sp[(-56)+48]
 16334                           ;stkvar	_i @ sp[(-56)+36]
 16335  010EA2  50E1               	movf	fsr1l,w,c
 16336  010EA4  0FEC               	addlw	-20
 16337  010EA6  6ED9               	movwf	fsr2l,c
 16338  010EA8  50E2               	movf	fsr1h,w,c
 16339  010EAA  6EDA               	movwf	fsr2h,c
 16340  010EAC  0EFF               	movlw	255
 16341  010EAE  22DA               	addwfc	fsr2h,f,c
 16342  010EB0  0EF8               	movlw	-8
 16343  010EB2  50E3               	movf	plusw1,w,c
 16344  010EB4  5CDE               	subwf	postinc2,w,c
 16345  010EB6  50DE               	movf	postinc2,w,c
 16346  010EB8  0A80               	xorlw	128
 16347  010EBA  6E01               	movwf	btemp^0,c
 16348  010EBC  0EF9               	movlw	-7
 16349  010EBE  50E3               	movf	plusw1,w,c
 16350  010EC0  0A80               	xorlw	128
 16351  010EC2  5801               	subwfb	btemp^0,w,c
 16352  010EC4  B0D8               	btfsc	status,0,c
 16353  010EC6  D00E               	goto	u10990
 16354                           
 16355                           ;stkvar	_n @ sp[(-56)+32]
 16356  010EC8  0EE9               	movlw	-23
 16357  010ECA  BEE3               	btfsc	plusw1,7,c
 16358  010ECC  D633               	goto	l11672
 16359  010ECE  0EE9               	movlw	-23
 16360  010ED0  50E3               	movf	plusw1,w,c
 16361  010ED2  E108               	bnz	u10990
 16362  010ED4  0EE8               	movlw	-24
 16363  010ED6  006F FF8C  F001    	movff	plusw1,btemp
 16364  010EDC  0E4B               	movlw	75
 16365  010EDE  5E01               	subwf	btemp^0,f,c
 16366  010EE0  A0D8               	btfss	status,0,c
 16367  010EE2  D628               	goto	l11672
 16368  010EE4                     u10990:
 16369                           
 16370                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 16371                           ;stkvar	_pp @ sp[(-56)+50]
 16372  010EE4  0EFA               	movlw	-6
 16373  010EE6  006F FF8C  F001    	movff	plusw1,btemp
 16374  010EEC  0EFB               	movlw	-5
 16375  010EEE  50E3               	movf	plusw1,w,c
 16376  010EF0  1001               	iorwf	btemp^0,w,c
 16377  010EF2  B4D8               	btfsc	status,2,c
 16378  010EF4  A825               	btfss	_flags^0,4,c
 16379  010EF6  D021               	goto	l11734
 16380                           
 16381                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 16382                           ;stkvar	_n @ sp[(-56)+32]
 16383  010EF8  0EE8               	movlw	-24
 16384  010EFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 16385  010F00  0EE9               	movlw	-23
 16386  010F02  006F FF8C  F00C    	movff	plusw1,btemp+11
 16387  010F08  0E94               	movlw	low _dbuf
 16388  010F0A  240B               	addwf	(btemp+10)^0,w,c
 16389  010F0C  6ED9               	movwf	fsr2l,c
 16390  010F0E  0E03               	movlw	high _dbuf
 16391  010F10  200C               	addwfc	(btemp+11)^0,w,c
 16392  010F12  6EDA               	movwf	fsr2h,c
 16393  010F14  0E2E               	movlw	46
 16394  010F16  6EDF               	movwf	indf2,c
 16395                           
 16396                           ;stkvar	_n @ sp[(-56)+32]
 16397  010F18  0EE8               	movlw	-24
 16398  010F1A  50E3               	movf	plusw1,w,c
 16399  010F1C  0F01               	addlw	1
 16400  010F1E  6E01               	movwf	btemp^0,c
 16401  010F20  0EE8               	movlw	-24
 16402  010F22  0060  F007  FFE3   	movff	btemp,plusw1
 16403  010F28  6A01               	clrf	btemp^0,c
 16404  010F2A  0EE9               	movlw	-23
 16405  010F2C  50E3               	movf	plusw1,w,c
 16406  010F2E  2001               	addwfc	btemp^0,w,c
 16407  010F30  6E01               	movwf	btemp^0,c
 16408  010F32  0EE9               	movlw	-23
 16409  010F34  0060  F007  FFE3   	movff	btemp,plusw1
 16410  010F3A                     l11734:
 16411                           
 16412                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 16413                           ;stkvar	_n @ sp[(-56)+32]
 16414  010F3A  0EE8               	movlw	-24
 16415  010F3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 16416  010F42  0EE9               	movlw	-23
 16417  010F44  006F FF8C  F00C    	movff	plusw1,btemp+11
 16418  010F4A  0E94               	movlw	low _dbuf
 16419  010F4C  240B               	addwf	(btemp+10)^0,w,c
 16420  010F4E  6ED9               	movwf	fsr2l,c
 16421  010F50  0E03               	movlw	high _dbuf
 16422  010F52  200C               	addwfc	(btemp+11)^0,w,c
 16423  010F54  6EDA               	movwf	fsr2h,c
 16424  010F56  0E00               	movlw	0
 16425  010F58  6EDF               	movwf	indf2,c
 16426                           
 16427                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 16428                           ;stkvar	_nmode @ sp[(-56)+55]
 16429  010F5A  0EFF               	movlw	-1
 16430  010F5C  006F FF8C  F001    	movff	plusw1,btemp
 16431  010F62  0E65               	movlw	101
 16432  010F64  1801               	xorwf	btemp^0,w,c
 16433  010F66  A4D8               	btfss	status,2,c
 16434  010F68  EF16  F081         	goto	l11538
 16435                           
 16436                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 16437  010F6C  0E4F               	movlw	79
 16438  010F6E  6E0B               	movwf	(btemp+10)^0,c
 16439  010F70  0E00               	movlw	0
 16440  010F72  6E0C               	movwf	(btemp+11)^0,c
 16441                           
 16442                           ;stkvar	_i @ sp[(-56)+36]
 16443  010F74  0EEC               	movlw	-20
 16444  010F76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16445  010F7C  0EED               	movlw	-19
 16446  010F7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 16447                           
 16448                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 16449                           ;stkvar	_i @ sp[(-56)+36]
 16450  010F84  0EEC               	movlw	-20
 16451  010F86  006F FF8C  F00B    	movff	plusw1,btemp+10
 16452  010F8C  0EED               	movlw	-19
 16453  010F8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 16454  010F94  0E94               	movlw	low _dbuf
 16455  010F96  240B               	addwf	(btemp+10)^0,w,c
 16456  010F98  6ED9               	movwf	fsr2l,c
 16457  010F9A  0E03               	movlw	high _dbuf
 16458  010F9C  200C               	addwfc	(btemp+11)^0,w,c
 16459  010F9E  6EDA               	movwf	fsr2h,c
 16460  010FA0  0E00               	movlw	0
 16461  010FA2  6EDF               	movwf	indf2,c
 16462                           
 16463                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 16464                           ;stkvar	_sign @ sp[(-56)+42]
 16465  010FA4  0EF2               	movlw	-14
 16466  010FA6  6AE3               	clrf	plusw1,c
 16467  010FA8  0EF3               	movlw	-13
 16468  010FAA  6AE3               	clrf	plusw1,c
 16469                           
 16470                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 16471                           ;stkvar	_e @ sp[(-56)+34]
 16472  010FAC  0EEB               	movlw	-21
 16473  010FAE  AEE3               	btfss	plusw1,7,c
 16474  010FB0  D012               	goto	l11748
 16475                           
 16476                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 16477  010FB2  0E01               	movlw	1
 16478  010FB4  6E0B               	movwf	(btemp+10)^0,c
 16479  010FB6  0E00               	movlw	0
 16480  010FB8  6E0C               	movwf	(btemp+11)^0,c
 16481                           
 16482                           ;stkvar	_sign @ sp[(-56)+42]
 16483  010FBA  0EF2               	movlw	-14
 16484  010FBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16485  010FC2  0EF3               	movlw	-13
 16486  010FC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 16487                           
 16488                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 16489                           ;stkvar	_e @ sp[(-56)+34]
 16490                           ;stkvar	_e @ sp[(-56)+34]
 16491  010FCA  0EEA               	movlw	-22
 16492  010FCC  6CE3               	negf	plusw1,c
 16493  010FCE  0EEB               	movlw	-21
 16494  010FD0  1EE3               	comf	plusw1,f,c
 16495  010FD2  B0D8               	btfsc	status,0,c
 16496  010FD4  2AE3               	incf	plusw1,f,c
 16497  010FD6                     l11748:
 16498                           
 16499                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 16500  010FD6  0E02               	movlw	2
 16501  010FD8  6E0B               	movwf	(btemp+10)^0,c
 16502  010FDA  0E00               	movlw	0
 16503  010FDC  6E0C               	movwf	(btemp+11)^0,c
 16504                           
 16505                           ;stkvar	_p @ sp[(-56)+40]
 16506  010FDE  0EF0               	movlw	-16
 16507  010FE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16508  010FE6  0EF1               	movlw	-15
 16509  010FE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 16510                           
 16511                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 16512  010FEE  D051               	goto	l11760
 16513  010FF0                     l11750:
 16514                           
 16515                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 16516                           ;stkvar	_i @ sp[(-56)+36]
 16517  010FF0  50E1               	movf	fsr1l,w,c
 16518  010FF2  0FEC               	addlw	-20
 16519  010FF4  6ED9               	movwf	fsr2l,c
 16520  010FF6  50E2               	movf	fsr1h,w,c
 16521  010FF8  6EDA               	movwf	fsr2h,c
 16522  010FFA  0EFF               	movlw	255
 16523  010FFC  22DA               	addwfc	fsr2h,f,c
 16524  010FFE  06DE               	decf	postinc2,f,c
 16525  011000  0E00               	movlw	0
 16526  011002  5ADD               	subwfb	postdec2,f,c
 16527                           
 16528                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 16529                           ;stkvar	_i @ sp[(-56)+36]
 16530  011004  0EEC               	movlw	-20
 16531  011006  006F FF8C  F00B    	movff	plusw1,btemp+10
 16532  01100C  0EED               	movlw	-19
 16533  01100E  006F FF8C  F00C    	movff	plusw1,btemp+11
 16534  011014  0E94               	movlw	low _dbuf
 16535  011016  240B               	addwf	(btemp+10)^0,w,c
 16536  011018  6ED9               	movwf	fsr2l,c
 16537  01101A  0E03               	movlw	high _dbuf
 16538  01101C  200C               	addwfc	(btemp+11)^0,w,c
 16539  01101E  6EDA               	movwf	fsr2h,c
 16540  011020  0E0A               	movlw	10
 16541  011022  6EE6               	movwf	postinc1,c
 16542  011024  0E00               	movlw	0
 16543  011026  6EE6               	movwf	postinc1,c
 16544                           
 16545                           ;stkvar	_e @ sp[(-58)+34]
 16546  011028  0EE8               	movlw	-24
 16547  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 16548  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 16549  011036  ECB3  F0C5         	call	___awmod	;wreg free
 16550  01103A  5001               	movf	btemp^0,w,c
 16551  01103C  0F30               	addlw	48
 16552  01103E  6EDF               	movwf	indf2,c
 16553                           
 16554                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 16555  011040  0E0A               	movlw	10
 16556  011042  6EE6               	movwf	postinc1,c
 16557  011044  0E00               	movlw	0
 16558  011046  6EE6               	movwf	postinc1,c
 16559                           
 16560                           ;stkvar	_e @ sp[(-58)+34]
 16561  011048  0EE8               	movlw	-24
 16562  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 16563  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 16564  011056  ECA5  F0C2         	call	___awdiv	;wreg free
 16565                           
 16566                           ;stkvar	_e @ sp[(-56)+34]
 16567  01105A  0EEA               	movlw	-22
 16568  01105C  0060  F007  FFE3   	movff	btemp,plusw1
 16569  011062  0EEB               	movlw	-21
 16570  011064  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16571                           
 16572                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 16573                           ;stkvar	_p @ sp[(-56)+40]
 16574  01106A  50E1               	movf	fsr1l,w,c
 16575  01106C  0FF0               	addlw	-16
 16576  01106E  6ED9               	movwf	fsr2l,c
 16577  011070  50E2               	movf	fsr1h,w,c
 16578  011072  6EDA               	movwf	fsr2h,c
 16579  011074  0EFF               	movlw	255
 16580  011076  22DA               	addwfc	fsr2h,f,c
 16581  011078  06DE               	decf	postinc2,f,c
 16582  01107A  0E00               	movlw	0
 16583  01107C  5ADD               	subwfb	postdec2,f,c
 16584                           
 16585                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 16586                           ;stkvar	_w @ sp[(-56)+38]
 16587  01107E  50E1               	movf	fsr1l,w,c
 16588  011080  0FEE               	addlw	-18
 16589  011082  6ED9               	movwf	fsr2l,c
 16590  011084  50E2               	movf	fsr1h,w,c
 16591  011086  6EDA               	movwf	fsr2h,c
 16592  011088  0EFF               	movlw	255
 16593  01108A  22DA               	addwfc	fsr2h,f,c
 16594  01108C  06DE               	decf	postinc2,f,c
 16595  01108E  0E00               	movlw	0
 16596  011090  5ADD               	subwfb	postdec2,f,c
 16597  011092                     l11760:
 16598                           
 16599                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 16600                           ;stkvar	_e @ sp[(-56)+34]
 16601  011092  0EEA               	movlw	-22
 16602  011094  006F FF8C  F001    	movff	plusw1,btemp
 16603  01109A  0EEB               	movlw	-21
 16604  01109C  50E3               	movf	plusw1,w,c
 16605  01109E  1001               	iorwf	btemp^0,w,c
 16606  0110A0  A4D8               	btfss	status,2,c
 16607  0110A2  D7A6               	goto	l11750
 16608                           
 16609                           ;stkvar	_p @ sp[(-56)+40]
 16610  0110A4  0EF1               	movlw	-15
 16611  0110A6  BEE3               	btfsc	plusw1,7,c
 16612  0110A8  D007               	goto	u11050
 16613  0110AA  0EF1               	movlw	-15
 16614  0110AC  50E3               	movf	plusw1,w,c
 16615  0110AE  E1A0               	bnz	l11750
 16616  0110B0  0EF0               	movlw	-16
 16617  0110B2  04E3               	decf	plusw1,w,c
 16618  0110B4  B0D8               	btfsc	status,0,c
 16619  0110B6  D79C               	goto	l11750
 16620  0110B8                     u11050:
 16621                           
 16622                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 16623                           ;stkvar	_i @ sp[(-56)+36]
 16624  0110B8  50E1               	movf	fsr1l,w,c
 16625  0110BA  0FEC               	addlw	-20
 16626  0110BC  6ED9               	movwf	fsr2l,c
 16627  0110BE  50E2               	movf	fsr1h,w,c
 16628  0110C0  6EDA               	movwf	fsr2h,c
 16629  0110C2  0EFF               	movlw	255
 16630  0110C4  22DA               	addwfc	fsr2h,f,c
 16631  0110C6  06DE               	decf	postinc2,f,c
 16632  0110C8  0E00               	movlw	0
 16633  0110CA  5ADD               	subwfb	postdec2,f,c
 16634                           
 16635                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 16636                           ;stkvar	_sign @ sp[(-56)+42]
 16637  0110CC  0EF2               	movlw	-14
 16638  0110CE  006F FF8C  F001    	movff	plusw1,btemp
 16639  0110D4  0EF3               	movlw	-13
 16640  0110D6  50E3               	movf	plusw1,w,c
 16641  0110D8  1001               	iorwf	btemp^0,w,c
 16642  0110DA  A4D8               	btfss	status,2,c
 16643  0110DC  D002               	goto	l11770
 16644  0110DE  0E2B               	movlw	43
 16645  0110E0  D001               	goto	L13
 16646  0110E2                     l11770:
 16647  0110E2  0E2D               	movlw	45
 16648  0110E4                     L13:
 16649  0110E4  6E0B               	movwf	(btemp+10)^0,c
 16650  0110E6  0E00               	movlw	0
 16651  0110E8  6E0C               	movwf	(btemp+11)^0,c
 16652                           
 16653                           ;stkvar	_efgtoa$5319 @ sp[(-56)+4]
 16654  0110EA  0ECC               	movlw	-52
 16655  0110EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16656  0110F2  0ECD               	movlw	-51
 16657  0110F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 16658                           
 16659                           ;stkvar	_efgtoa$5319 @ sp[(-56)+4]
 16660                           ;stkvar	_i @ sp[(-56)+36]
 16661  0110FA  0EEC               	movlw	-20
 16662  0110FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 16663  011102  0EED               	movlw	-19
 16664  011104  006F FF8C  F00C    	movff	plusw1,btemp+11
 16665  01110A  0E94               	movlw	low _dbuf
 16666  01110C  240B               	addwf	(btemp+10)^0,w,c
 16667  01110E  6ED9               	movwf	fsr2l,c
 16668  011110  0E03               	movlw	high _dbuf
 16669  011112  200C               	addwfc	(btemp+11)^0,w,c
 16670  011114  6EDA               	movwf	fsr2h,c
 16671  011116  0ECC               	movlw	-52
 16672  011118  006F FF8F FFDF     	movff	plusw1,indf2
 16673                           
 16674                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 16675                           ;stkvar	_w @ sp[(-56)+38]
 16676  01111E  50E1               	movf	fsr1l,w,c
 16677  011120  0FEE               	addlw	-18
 16678  011122  6ED9               	movwf	fsr2l,c
 16679  011124  50E2               	movf	fsr1h,w,c
 16680  011126  6EDA               	movwf	fsr2h,c
 16681  011128  0EFF               	movlw	255
 16682  01112A  22DA               	addwfc	fsr2h,f,c
 16683  01112C  06DE               	decf	postinc2,f,c
 16684  01112E  0E00               	movlw	0
 16685  011130  5ADD               	subwfb	postdec2,f,c
 16686                           
 16687                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 16688                           ;stkvar	_i @ sp[(-56)+36]
 16689  011132  50E1               	movf	fsr1l,w,c
 16690  011134  0FEC               	addlw	-20
 16691  011136  6ED9               	movwf	fsr2l,c
 16692  011138  50E2               	movf	fsr1h,w,c
 16693  01113A  6EDA               	movwf	fsr2h,c
 16694  01113C  0EFF               	movlw	255
 16695  01113E  22DA               	addwfc	fsr2h,f,c
 16696  011140  06DE               	decf	postinc2,f,c
 16697  011142  0E00               	movlw	0
 16698  011144  5ADD               	subwfb	postdec2,f,c
 16699  011146  0EBF               	movlw	191
 16700  011148  6E0B               	movwf	(btemp+10)^0,c
 16701  01114A  0EFF               	movlw	255
 16702  01114C  6E0C               	movwf	(btemp+11)^0,c
 16703                           
 16704                           ;stkvar	_c @ sp[(-56)+-7]
 16705  01114E  0EC1               	movlw	-63
 16706  011150  50E3               	movf	plusw1,w,c
 16707  011152  6E09               	movwf	(btemp+8)^0,c
 16708  011154  6A0A               	clrf	(btemp+9)^0,c
 16709  011156  500B               	movf	(btemp+10)^0,w,c
 16710  011158  2609               	addwf	(btemp+8)^0,f,c
 16711  01115A  500C               	movf	(btemp+11)^0,w,c
 16712  01115C  220A               	addwfc	(btemp+9)^0,f,c
 16713  01115E  500A               	movf	(btemp+9)^0,w,c
 16714  011160  E106               	bnz	u11070
 16715  011162  0E1A               	movlw	26
 16716  011164  5C09               	subwf	(btemp+8)^0,w,c
 16717  011166  B0D8               	btfsc	status,0,c
 16718  011168  D002               	goto	u11070
 16719  01116A  0E01               	movlw	1
 16720  01116C  D001               	goto	u11080
 16721  01116E                     u11070:
 16722  01116E  0E00               	movlw	0
 16723  011170                     u11080:
 16724  011170  6E0B               	movwf	(btemp+10)^0,c
 16725  011172  6A0C               	clrf	(btemp+11)^0,c
 16726                           
 16727                           ;stkvar	_efgtoa$5321 @ sp[(-56)+0]
 16728  011174  0EC8               	movlw	-56
 16729  011176  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16730  01117C  0EC9               	movlw	-55
 16731  01117E  0060  F033  FFE3   	movff	btemp+11,plusw1
 16732                           
 16733                           ;stkvar	_efgtoa$5321 @ sp[(-56)+0]
 16734  011184  0EC8               	movlw	-56
 16735  011186  006F FF8C  F001    	movff	plusw1,btemp
 16736  01118C  0EC9               	movlw	-55
 16737  01118E  50E3               	movf	plusw1,w,c
 16738  011190  1001               	iorwf	btemp^0,w,c
 16739  011192  A4D8               	btfss	status,2,c
 16740  011194  D002               	goto	l11786
 16741  011196  0E65               	movlw	101
 16742  011198  D001               	goto	L14
 16743  01119A                     l11786:
 16744  01119A  0E45               	movlw	69
 16745  01119C                     L14:
 16746  01119C  6E0B               	movwf	(btemp+10)^0,c
 16747  01119E  0E00               	movlw	0
 16748  0111A0  6E0C               	movwf	(btemp+11)^0,c
 16749                           
 16750                           ;stkvar	_efgtoa$5320 @ sp[(-56)+2]
 16751  0111A2  0ECA               	movlw	-54
 16752  0111A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16753  0111AA  0ECB               	movlw	-53
 16754  0111AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 16755                           
 16756                           ;stkvar	_efgtoa$5320 @ sp[(-56)+2]
 16757                           ;stkvar	_i @ sp[(-56)+36]
 16758  0111B2  0EEC               	movlw	-20
 16759  0111B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 16760  0111BA  0EED               	movlw	-19
 16761  0111BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 16762  0111C2  0E94               	movlw	low _dbuf
 16763  0111C4  240B               	addwf	(btemp+10)^0,w,c
 16764  0111C6  6ED9               	movwf	fsr2l,c
 16765  0111C8  0E03               	movlw	high _dbuf
 16766  0111CA  200C               	addwfc	(btemp+11)^0,w,c
 16767  0111CC  6EDA               	movwf	fsr2h,c
 16768  0111CE  0ECA               	movlw	-54
 16769  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 16770                           
 16771                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 16772                           ;stkvar	_w @ sp[(-56)+38]
 16773  0111D6  50E1               	movf	fsr1l,w,c
 16774  0111D8  0FEE               	addlw	-18
 16775  0111DA  6ED9               	movwf	fsr2l,c
 16776  0111DC  50E2               	movf	fsr1h,w,c
 16777  0111DE  6EDA               	movwf	fsr2h,c
 16778  0111E0  0EFF               	movlw	255
 16779  0111E2  22DA               	addwfc	fsr2h,f,c
 16780  0111E4  06DE               	decf	postinc2,f,c
 16781  0111E6  0E00               	movlw	0
 16782  0111E8  5ADD               	subwfb	postdec2,f,c
 16783                           
 16784                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 16785                           ;stkvar	_i @ sp[(-56)+36]
 16786  0111EA  0EEC               	movlw	-20
 16787  0111EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 16788  0111F2  0EED               	movlw	-19
 16789  0111F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 16790  0111FA  0E94               	movlw	low _dbuf
 16791  0111FC  240B               	addwf	(btemp+10)^0,w,c
 16792  0111FE  6E09               	movwf	(btemp+8)^0,c
 16793  011200  0E03               	movlw	high _dbuf
 16794  011202  200C               	addwfc	(btemp+11)^0,w,c
 16795  011204  6E0A               	movwf	(btemp+9)^0,c
 16796  011206  0060  F027  FFE6   	movff	btemp+8,postinc1
 16797  01120C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 16798                           
 16799                           ;stkvar	_n @ sp[(-58)+32]
 16800  011212  0E94               	movlw	low _dbuf
 16801  011214  6E0B               	movwf	(btemp+10)^0,c
 16802  011216  0E03               	movlw	high _dbuf
 16803  011218  6E0C               	movwf	(btemp+11)^0,c
 16804  01121A  0EE6               	movlw	-26
 16805  01121C  50E3               	movf	plusw1,w,c
 16806  01121E  260B               	addwf	(btemp+10)^0,f,c
 16807  011220  0EE7               	movlw	-25
 16808  011222  50E3               	movf	plusw1,w,c
 16809  011224  220C               	addwfc	(btemp+11)^0,f,c
 16810  011226  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16811  01122C  0060  F033  FFE6   	movff	btemp+11,postinc1
 16812  011232  EC40  F0CA         	call	_strcpy	;wreg free
 16813  011236  EF16  F081         	goto	l11538
 16814  01123A                     l2160:
 16815                           
 16816                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 16817  01123A  0EC1               	movlw	193
 16818  01123C  26E1               	addwf	fsr1l,f,c
 16819  01123E  0EFF               	movlw	255
 16820  011240  22E2               	addwfc	fsr1h,f,c
 16821  011242  0012               	return		;funcret
 16822  011244                     __end_of_efgtoa:
 16823                           	opt callstack 0
 16824                           
 16825 ;; *************** function _tolower *****************
 16826 ;; Defined at:
 16827 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 16828 ;; Parameters:    Size  Location     Type
 16829 ;;  c               2  [STACK] int 
 16830 ;; Auto vars:     Size  Location     Type
 16831 ;;		None
 16832 ;; Return value:  Size  Location     Type
 16833 ;;                  2  [STACK] int 
 16834 ;; Registers used:
 16835 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 16836 ;; Tracked objects:
 16837 ;;		On entry : 0/0
 16838 ;;		On exit  : 0/0
 16839 ;;		Unchanged: 0/0
 16840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16845 ;;Total ram usage:        0 bytes
 16846 ;; Hardware stack levels used:    1
 16847 ;; Hardware stack levels required when called:   16
 16848 ;; This function calls:
 16849 ;;		_isupper
 16850 ;; This function is called by:
 16851 ;;		_efgtoa
 16852 ;;		_vfpfcnvrt
 16853 ;; This function uses a reentrant model
 16854 ;;
 16855                           
 16856                           	psect	text56
 16857  019EC2                     __ptext56:
 16858                           	opt callstack 0
 16859  019EC2                     _tolower:
 16860                           	opt callstack 0
 16861                           
 16862                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16863  019EC2  52E6               	movf	postinc1,f,c
 16864  019EC4  52E6               	movf	postinc1,f,c
 16865                           
 16866                           ;stkvar	_c @ sp[(-2)+-2]
 16867                           
 16868                           ;incstack = 0
 16869 ;; hardware stack exceeded
 16870  019EC6  0EFC               	movlw	-4
 16871  019EC8  50E3               	movf	plusw1,w,c
 16872  019ECA  0FBF               	addlw	191
 16873  019ECC  6E0B               	movwf	(btemp+10)^0,c
 16874  019ECE  0EFD               	movlw	-3
 16875  019ED0  006F FF8C  F00C    	movff	plusw1,btemp+11
 16876  019ED6  0EFF               	movlw	255
 16877  019ED8  220C               	addwfc	(btemp+11)^0,f,c
 16878  019EDA  500C               	movf	(btemp+11)^0,w,c
 16879  019EDC  E106               	bnz	u5800
 16880  019EDE  0E1A               	movlw	26
 16881  019EE0  5C0B               	subwf	(btemp+10)^0,w,c
 16882  019EE2  B0D8               	btfsc	status,0,c
 16883  019EE4  D002               	goto	u5800
 16884  019EE6  0E01               	movlw	1
 16885  019EE8  D001               	goto	u5810
 16886  019EEA                     u5800:
 16887  019EEA  0E00               	movlw	0
 16888  019EEC                     u5810:
 16889  019EEC  6E0B               	movwf	(btemp+10)^0,c
 16890  019EEE  6A0C               	clrf	(btemp+11)^0,c
 16891                           
 16892                           ;stkvar	_tolower$6140 @ sp[(-2)+0]
 16893  019EF0  0EFE               	movlw	-2
 16894  019EF2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16895  019EF8  0EFF               	movlw	-1
 16896  019EFA  0060  F033  FFE3   	movff	btemp+11,plusw1
 16897                           
 16898                           ;stkvar	_tolower$6140 @ sp[(-2)+0]
 16899  019F00  0EFE               	movlw	-2
 16900  019F02  006F FF8C  F001    	movff	plusw1,btemp
 16901  019F08  0EFF               	movlw	-1
 16902  019F0A  50E3               	movf	plusw1,w,c
 16903  019F0C  1001               	iorwf	btemp^0,w,c
 16904  019F0E  B4D8               	btfsc	status,2,c
 16905  019F10  D00D               	goto	l7732
 16906                           
 16907                           ;stkvar	_c @ sp[(-2)+-2]
 16908  019F12  0EFC               	movlw	-4
 16909  019F14  006F FF8C  F001    	movff	plusw1,btemp
 16910  019F1A  0EFD               	movlw	-3
 16911  019F1C  006F FF8C  F002    	movff	plusw1,btemp+1
 16912  019F22  0E20               	movlw	32
 16913  019F24  1201               	iorwf	btemp^0,f,c
 16914  019F26  0E00               	movlw	0
 16915  019F28  1202               	iorwf	(btemp+1)^0,f,c
 16916  019F2A  D008               	goto	l3432
 16917  019F2C                     l7732:
 16918                           
 16919                           ;stkvar	_c @ sp[(-2)+-2]
 16920  019F2C  0EFC               	movlw	-4
 16921  019F2E  006F FF8C  F001    	movff	plusw1,btemp
 16922  019F34  0EFD               	movlw	-3
 16923  019F36  006F FF8C  F002    	movff	plusw1,btemp+1
 16924  019F3C                     l3432:
 16925                           
 16926                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 16927  019F3C  52E5               	movf	postdec1,f,c
 16928  019F3E  52E5               	movf	postdec1,f,c
 16929  019F40  52E5               	movf	postdec1,f,c
 16930  019F42  52E5               	movf	postdec1,f,c
 16931  019F44  0012               	return		;funcret
 16932  019F46                     __end_of_tolower:
 16933                           	opt callstack 0
 16934                           
 16935 ;; *************** function _isupper *****************
 16936 ;; Defined at:
 16937 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 16938 ;; Parameters:    Size  Location     Type
 16939 ;;  c               2  [STACK] int 
 16940 ;; Auto vars:     Size  Location     Type
 16941 ;;		None
 16942 ;; Return value:  Size  Location     Type
 16943 ;;                  2  [STACK] int 
 16944 ;; Registers used:
 16945 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 16946 ;; Tracked objects:
 16947 ;;		On entry : 0/0
 16948 ;;		On exit  : 0/0
 16949 ;;		Unchanged: 0/0
 16950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16955 ;;Total ram usage:        0 bytes
 16956 ;; Hardware stack levels used:    1
 16957 ;; Hardware stack levels required when called:   15
 16958 ;; This function calls:
 16959 ;;		Nothing
 16960 ;; This function is called by:
 16961 ;;		_efgtoa
 16962 ;;		_xtoa
 16963 ;;		_vfpfcnvrt
 16964 ;;		_tolower
 16965 ;; This function uses a reentrant model
 16966 ;;
 16967                           
 16968                           	psect	text57
 16969  01AB06                     __ptext57:
 16970                           	opt callstack 0
 16971  01AB06                     _isupper:
 16972                           	opt callstack 0
 16973                           
 16974                           ;stkvar	_c @ sp[(0)+-2]
 16975                           
 16976                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16977                           ;incstack = 0
 16978 ;; hardware stack exceeded
 16979  01AB06  0EFE               	movlw	-2
 16980  01AB08  50E3               	movf	plusw1,w,c
 16981  01AB0A  0FBF               	addlw	191
 16982  01AB0C  6E0B               	movwf	(btemp+10)^0,c
 16983  01AB0E  0EFF               	movlw	-1
 16984  01AB10  006F FF8C  F00C    	movff	plusw1,btemp+11
 16985  01AB16  0EFF               	movlw	255
 16986  01AB18  220C               	addwfc	(btemp+11)^0,f,c
 16987  01AB1A  500C               	movf	(btemp+11)^0,w,c
 16988  01AB1C  E106               	bnz	u5200
 16989  01AB1E  0E1A               	movlw	26
 16990  01AB20  5C0B               	subwf	(btemp+10)^0,w,c
 16991  01AB22  B0D8               	btfsc	status,0,c
 16992  01AB24  D002               	goto	u5200
 16993  01AB26  0E01               	movlw	1
 16994  01AB28  D001               	goto	u5210
 16995  01AB2A                     u5200:
 16996  01AB2A  0E00               	movlw	0
 16997  01AB2C                     u5210:
 16998  01AB2C  6E01               	movwf	btemp^0,c
 16999  01AB2E  6A02               	clrf	(btemp+1)^0,c
 17000                           
 17001                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17002  01AB30  52E5               	movf	postdec1,f,c
 17003  01AB32  52E5               	movf	postdec1,f,c
 17004  01AB34  0012               	return		;funcret
 17005  01AB36                     __end_of_isupper:
 17006                           	opt callstack 0
 17007                           
 17008 ;; *************** function _strcpy *****************
 17009 ;; Defined at:
 17010 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 17011 ;; Parameters:    Size  Location     Type
 17012 ;;  dest            2  [STACK] PTR unsigned char 
 17013 ;;		 -> dbuf(80), 
 17014 ;;  src             2  [STACK] PTR const unsigned char 
 17015 ;;		 -> STR_62(4), STR_61(4), STR_58(4), STR_57(4), 
 17016 ;;		 -> dbuf(80), 
 17017 ;; Auto vars:     Size  Location     Type
 17018 ;;  d               2  [STACK] PTR unsigned char 
 17019 ;;		 -> dbuf(80), 
 17020 ;;  s               2  [STACK] PTR const unsigned char 
 17021 ;;		 -> STR_62(4), STR_61(4), STR_58(4), STR_57(4), 
 17022 ;;		 -> dbuf(80), 
 17023 ;; Return value:  Size  Location     Type
 17024 ;;                  2  [STACK] PTR unsigned char 
 17025 ;; Registers used:
 17026 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 17027 ;; Tracked objects:
 17028 ;;		On entry : 0/0
 17029 ;;		On exit  : 0/0
 17030 ;;		Unchanged: 0/0
 17031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17036 ;;Total ram usage:        0 bytes
 17037 ;; Hardware stack levels used:    1
 17038 ;; Hardware stack levels required when called:   15
 17039 ;; This function calls:
 17040 ;;		Nothing
 17041 ;; This function is called by:
 17042 ;;		_efgtoa
 17043 ;; This function uses a reentrant model
 17044 ;;
 17045                           
 17046                           	psect	text58
 17047  019480                     __ptext58:
 17048                           	opt callstack 0
 17049  019480                     _strcpy:
 17050                           	opt callstack 0
 17051                           
 17052                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17053  019480  52E6               	movf	postinc1,f,c
 17054  019482  52E6               	movf	postinc1,f,c
 17055  019484  52E6               	movf	postinc1,f,c
 17056  019486  52E6               	movf	postinc1,f,c
 17057                           
 17058                           ;stkvar	_src @ sp[(-4)+-4]
 17059                           
 17060                           ;incstack = 0
 17061 ;; hardware stack exceeded
 17062  019488  0EF8               	movlw	-8
 17063  01948A  006F FF8C  F00B    	movff	plusw1,btemp+10
 17064  019490  0EF9               	movlw	-7
 17065  019492  006F FF8C  F00C    	movff	plusw1,btemp+11
 17066                           
 17067                           ;stkvar	_s @ sp[(-4)+2]
 17068  019498  0EFF               	movlw	-1
 17069  01949A  0060  F033  FFE3   	movff	btemp+11,plusw1
 17070  0194A0  0EFE               	movlw	-2
 17071  0194A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17072                           
 17073                           ;stkvar	_dest @ sp[(-4)+-2]
 17074  0194A8  0EFA               	movlw	-6
 17075  0194AA  006F FF8C  F00B    	movff	plusw1,btemp+10
 17076  0194B0  0EFB               	movlw	-5
 17077  0194B2  006F FF8C  F00C    	movff	plusw1,btemp+11
 17078                           
 17079                           ;stkvar	_d @ sp[(-4)+0]
 17080  0194B8  0EFD               	movlw	-3
 17081  0194BA  0060  F033  FFE3   	movff	btemp+11,plusw1
 17082  0194C0  0EFC               	movlw	-4
 17083  0194C2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17084  0194C8                     l11370:
 17085                           
 17086                           ;stkvar	_s @ sp[(-4)+2]
 17087  0194C8  50E1               	movf	fsr1l,w,c
 17088  0194CA  0FFE               	addlw	-2
 17089  0194CC  6ED9               	movwf	fsr2l,c
 17090  0194CE  50E2               	movf	fsr1h,w,c
 17091  0194D0  6EDA               	movwf	fsr2h,c
 17092  0194D2  0EFF               	movlw	255
 17093  0194D4  22DA               	addwfc	fsr2h,f,c
 17094  0194D6  006F FF7C  F00B    	movff	indf2,btemp+10
 17095  0194DC  0E01               	movlw	1
 17096  0194DE  26DE               	addwf	postinc2,f,c
 17097  0194E0  006F FF7C  F00C    	movff	indf2,btemp+11
 17098  0194E6  0E00               	movlw	0
 17099  0194E8  22DD               	addwfc	postdec2,f,c
 17100  0194EA  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 17101  0194F0  0060  F033  FFF7   	movff	btemp+11,tblptrh
 17102  0194F6  0E00               	movlw	low (__mediumconst shr (0+16))
 17103  0194F8  6EF8               	movwf	tblptru,c
 17104                           
 17105                           ;stkvar	_d @ sp[(-4)+0]
 17106  0194FA  50E1               	movf	fsr1l,w,c
 17107  0194FC  0FFC               	addlw	-4
 17108  0194FE  6ED9               	movwf	fsr2l,c
 17109  019500  50E2               	movf	fsr1h,w,c
 17110  019502  6EDA               	movwf	fsr2h,c
 17111  019504  0EFF               	movlw	255
 17112  019506  22DA               	addwfc	fsr2h,f,c
 17113  019508  006F FF7C  F00B    	movff	indf2,btemp+10
 17114  01950E  0E01               	movlw	1
 17115  019510  26DE               	addwf	postinc2,f,c
 17116  019512  006F FF7C  F00C    	movff	indf2,btemp+11
 17117  019518  0E00               	movlw	0
 17118  01951A  22DD               	addwfc	postdec2,f,c
 17119  01951C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 17120  019522  0060  F033  FFDA   	movff	btemp+11,fsr2h
 17121  019528  0E1F               	movlw	(high __ramtop+-1)
 17122  01952A  64F7               	cpfsgt	tblptrh,c
 17123  01952C  D003               	bra	u10337
 17124  01952E  0008               	tblrd		*
 17125  019530  50F5               	movf	tablat,w,c
 17126  019532  D007               	bra	u10330
 17127  019534                     u10337:
 17128  019534  006F FFDB FFE9     	movff	tblptrl,fsr0l
 17129  01953A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 17130  019540  50EF               	movf	indf0,w,c
 17131  019542                     u10330:
 17132  019542  6EDF               	movwf	indf2,c
 17133  019544  50DF               	movf	indf2,w,c
 17134  019546  A4D8               	btfss	status,2,c
 17135  019548  D7BF               	goto	l11370
 17136                           
 17137                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 17138  01954A  0EF8               	movlw	248
 17139  01954C  26E1               	addwf	fsr1l,f,c
 17140  01954E  0EFF               	movlw	255
 17141  019550  22E2               	addwfc	fsr1h,f,c
 17142  019552  0012               	return		;funcret
 17143  019554                     __end_of_strcpy:
 17144                           	opt callstack 0
 17145                           
 17146 ;; *************** function _floorf *****************
 17147 ;; Defined at:
 17148 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 17149 ;; Parameters:    Size  Location     Type
 17150 ;;  x               4  [STACK] float 
 17151 ;; Auto vars:     Size  Location     Type
 17152 ;;  u               4  [STACK] struct .
 17153 ;;  m               4  [STACK] unsigned long 
 17154 ;;  e               2  [STACK] int 
 17155 ;; Return value:  Size  Location     Type
 17156 ;;                  4  [STACK] float 
 17157 ;; Registers used:
 17158 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 17159 ;; Tracked objects:
 17160 ;;		On entry : 0/0
 17161 ;;		On exit  : 0/0
 17162 ;;		Unchanged: 0/0
 17163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17168 ;;Total ram usage:        0 bytes
 17169 ;; Hardware stack levels used:    1
 17170 ;; Hardware stack levels required when called:   15
 17171 ;; This function calls:
 17172 ;;		Nothing
 17173 ;; This function is called by:
 17174 ;;		_efgtoa
 17175 ;; This function uses a reentrant model
 17176 ;;
 17177                           
 17178                           	psect	text59
 17179  015AD2                     __ptext59:
 17180                           	opt callstack 0
 17181  015AD2                     _floorf:
 17182                           	opt callstack 0
 17183                           
 17184                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 17185  015AD2  0E0A               	movlw	10
 17186  015AD4  26E1               	addwf	fsr1l,f,c
 17187  015AD6  0E00               	movlw	0
 17188  015AD8  22E2               	addwfc	fsr1h,f,c
 17189                           
 17190                           ;incstack = 0
 17191 ;; hardware stack exceeded
 17192  015ADA  0060  F1E8  F009   	movff	floorf@F524,btemp+8
 17193  015AE0  0060  F1EC  F00A   	movff	floorf@F524+1,btemp+9
 17194  015AE6  0060  F1F0  F00B   	movff	floorf@F524+2,btemp+10
 17195  015AEC  0060  F1F4  F00C   	movff	floorf@F524+3,btemp+11
 17196                           
 17197                           ;stkvar	_u @ sp[(-10)+0]
 17198  015AF2  0EF6               	movlw	-10
 17199  015AF4  0060  F027  FFE3   	movff	btemp+8,plusw1
 17200  015AFA  0EF7               	movlw	-9
 17201  015AFC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17202  015B02  0EF8               	movlw	-8
 17203  015B04  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17204  015B0A  0EF9               	movlw	-7
 17205  015B0C  0060  F033  FFE3   	movff	btemp+11,plusw1
 17206                           
 17207                           ;stkvar	_x @ sp[(-10)+-4]
 17208  015B12  0EF2               	movlw	-14
 17209  015B14  006F FF8C  F009    	movff	plusw1,btemp+8
 17210  015B1A  0EF3               	movlw	-13
 17211  015B1C  006F FF8C  F00A    	movff	plusw1,btemp+9
 17212  015B22  0EF4               	movlw	-12
 17213  015B24  006F FF8C  F00B    	movff	plusw1,btemp+10
 17214  015B2A  0EF5               	movlw	-11
 17215  015B2C  006F FF8C  F00C    	movff	plusw1,btemp+11
 17216                           
 17217                           ;stkvar	_u @ sp[(-10)+0]
 17218  015B32  0EF6               	movlw	-10
 17219  015B34  0060  F027  FFE3   	movff	btemp+8,plusw1
 17220  015B3A  0EF7               	movlw	-9
 17221  015B3C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17222  015B42  0EF8               	movlw	-8
 17223  015B44  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17224  015B4A  0EF9               	movlw	-7
 17225  015B4C  0060  F033  FFE3   	movff	btemp+11,plusw1
 17226  015B52  0E81               	movlw	129
 17227  015B54  6E0B               	movwf	(btemp+10)^0,c
 17228  015B56  0EFF               	movlw	255
 17229  015B58  6E0C               	movwf	(btemp+11)^0,c
 17230                           
 17231                           ;stkvar	_u @ sp[(-10)+0]
 17232  015B5A  0EF6               	movlw	-10
 17233  015B5C  006F FF8C  F005    	movff	plusw1,btemp+4
 17234  015B62  0EF7               	movlw	-9
 17235  015B64  006F FF8C  F006    	movff	plusw1,btemp+5
 17236  015B6A  0EF8               	movlw	-8
 17237  015B6C  006F FF8C  F007    	movff	plusw1,btemp+6
 17238  015B72  0EF9               	movlw	-7
 17239  015B74  006F FF8C  F008    	movff	plusw1,btemp+7
 17240  015B7A  0E18               	movlw	24
 17241  015B7C  D005               	goto	u5830
 17242  015B7E                     u5835:
 17243  015B7E  90D8               	bcf	status,0,c
 17244  015B80  3208               	rrcf	(btemp+7)^0,f,c
 17245  015B82  3207               	rrcf	(btemp+6)^0,f,c
 17246  015B84  3206               	rrcf	(btemp+5)^0,f,c
 17247  015B86  3205               	rrcf	(btemp+4)^0,f,c
 17248  015B88                     u5830:
 17249  015B88  2EE8               	decfsz	wreg,f,c
 17250  015B8A  D7F9               	goto	u5835
 17251  015B8C  0060  F014  F009   	movff	btemp+4,btemp+8
 17252  015B92  0060  F018  F00A   	movff	btemp+5,btemp+9
 17253  015B98  0EFF               	movlw	255
 17254  015B9A  1609               	andwf	(btemp+8)^0,f,c
 17255  015B9C  0E00               	movlw	0
 17256  015B9E  160A               	andwf	(btemp+9)^0,f,c
 17257  015BA0  500B               	movf	(btemp+10)^0,w,c
 17258  015BA2  2609               	addwf	(btemp+8)^0,f,c
 17259  015BA4  500C               	movf	(btemp+11)^0,w,c
 17260  015BA6  220A               	addwfc	(btemp+9)^0,f,c
 17261                           
 17262                           ;stkvar	_e @ sp[(-10)+8]
 17263  015BA8  0EFE               	movlw	-2
 17264  015BAA  0060  F027  FFE3   	movff	btemp+8,plusw1
 17265  015BB0  0EFF               	movlw	-1
 17266  015BB2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17267                           
 17268                           ;stkvar	_e @ sp[(-10)+8]
 17269  015BB8  0EFF               	movlw	-1
 17270  015BBA  BEE3               	btfsc	plusw1,7,c
 17271  015BBC  D019               	goto	l7746
 17272  015BBE  0EFF               	movlw	-1
 17273  015BC0  50E3               	movf	plusw1,w,c
 17274  015BC2  E108               	bnz	u5840
 17275  015BC4  0EFE               	movlw	-2
 17276  015BC6  006F FF8C  F001    	movff	plusw1,btemp
 17277  015BCC  0E17               	movlw	23
 17278  015BCE  5E01               	subwf	btemp^0,f,c
 17279  015BD0  A0D8               	btfss	status,0,c
 17280  015BD2  D00E               	goto	l7746
 17281  015BD4                     u5840:
 17282                           
 17283                           ;stkvar	_x @ sp[(-10)+-4]
 17284  015BD4  0EF2               	movlw	-14
 17285  015BD6  006F FF8C  F001    	movff	plusw1,btemp
 17286  015BDC  0EF3               	movlw	-13
 17287  015BDE  006F FF8C  F002    	movff	plusw1,btemp+1
 17288  015BE4  0EF4               	movlw	-12
 17289  015BE6  006F FF8C  F003    	movff	plusw1,btemp+2
 17290  015BEC  0EF5               	movlw	-11
 17291  015BEE  D11F               	goto	L15
 17292  015BF0                     l7746:
 17293                           
 17294                           ;stkvar	_e @ sp[(-10)+8]
 17295  015BF0  0EFF               	movlw	-1
 17296  015BF2  BEE3               	btfsc	plusw1,7,c
 17297  015BF4  D0B4               	goto	l7762
 17298                           
 17299                           ;stkvar	_e @ sp[(-10)+8]
 17300  015BF6  0EFE               	movlw	-2
 17301  015BF8  006F FF8C  F00C    	movff	plusw1,btemp+11
 17302  015BFE  0EFF               	movlw	255
 17303  015C00  6E05               	movwf	(btemp+4)^0,c
 17304  015C02  0EFF               	movlw	255
 17305  015C04  6E06               	movwf	(btemp+5)^0,c
 17306  015C06  0E7F               	movlw	127
 17307  015C08  6E07               	movwf	(btemp+6)^0,c
 17308  015C0A  0E00               	movlw	0
 17309  015C0C  6E08               	movwf	(btemp+7)^0,c
 17310  015C0E                     u5865:
 17311  015C0E  660C               	tstfsz	(btemp+11)^0,c
 17312  015C10  D001               	goto	u5866
 17313  015C12  D007               	goto	u5867
 17314  015C14                     u5866:
 17315  015C14  3408               	rlcf	(btemp+7)^0,w,c
 17316  015C16  3208               	rrcf	(btemp+7)^0,f,c
 17317  015C18  3207               	rrcf	(btemp+6)^0,f,c
 17318  015C1A  3206               	rrcf	(btemp+5)^0,f,c
 17319  015C1C  3205               	rrcf	(btemp+4)^0,f,c
 17320  015C1E  2E0C               	decfsz	(btemp+11)^0,f,c
 17321  015C20  D7F6               	goto	u5865
 17322  015C22                     u5867:
 17323                           
 17324                           ;stkvar	_m @ sp[(-10)+4]
 17325  015C22  0EFA               	movlw	-6
 17326  015C24  0060  F017  FFE3   	movff	btemp+4,plusw1
 17327  015C2A  0EFB               	movlw	-5
 17328  015C2C  0060  F01B  FFE3   	movff	btemp+5,plusw1
 17329  015C32  0EFC               	movlw	-4
 17330  015C34  0060  F01F  FFE3   	movff	btemp+6,plusw1
 17331  015C3A  0EFD               	movlw	-3
 17332  015C3C  0060  F023  FFE3   	movff	btemp+7,plusw1
 17333                           
 17334                           ;stkvar	_m @ sp[(-10)+4]
 17335                           ;stkvar	_u @ sp[(-10)+0]
 17336  015C42  0EF6               	movlw	-10
 17337  015C44  006F FF8C  F009    	movff	plusw1,btemp+8
 17338  015C4A  0EF7               	movlw	-9
 17339  015C4C  006F FF8C  F00A    	movff	plusw1,btemp+9
 17340  015C52  0EF8               	movlw	-8
 17341  015C54  006F FF8C  F00B    	movff	plusw1,btemp+10
 17342  015C5A  0EF9               	movlw	-7
 17343  015C5C  006F FF8C  F00C    	movff	plusw1,btemp+11
 17344  015C62  0EFA               	movlw	-6
 17345  015C64  50E3               	movf	plusw1,w,c
 17346  015C66  1609               	andwf	(btemp+8)^0,f,c
 17347  015C68  0EFB               	movlw	-5
 17348  015C6A  50E3               	movf	plusw1,w,c
 17349  015C6C  160A               	andwf	(btemp+9)^0,f,c
 17350  015C6E  0EFC               	movlw	-4
 17351  015C70  50E3               	movf	plusw1,w,c
 17352  015C72  160B               	andwf	(btemp+10)^0,f,c
 17353  015C74  0EFD               	movlw	-3
 17354  015C76  50E3               	movf	plusw1,w,c
 17355  015C78  160C               	andwf	(btemp+11)^0,f,c
 17356  015C7A  5009               	movf	(btemp+8)^0,w,c
 17357  015C7C  100A               	iorwf	(btemp+9)^0,w,c
 17358  015C7E  100B               	iorwf	(btemp+10)^0,w,c
 17359  015C80  100C               	iorwf	(btemp+11)^0,w,c
 17360  015C82  B4D8               	btfsc	status,2,c
 17361  015C84  D7A7               	goto	u5840
 17362                           
 17363                           ;stkvar	_u @ sp[(-10)+0]
 17364  015C86  0EF6               	movlw	-10
 17365  015C88  006F FF8C  F009    	movff	plusw1,btemp+8
 17366  015C8E  0EF7               	movlw	-9
 17367  015C90  006F FF8C  F00A    	movff	plusw1,btemp+9
 17368  015C96  0EF8               	movlw	-8
 17369  015C98  006F FF8C  F00B    	movff	plusw1,btemp+10
 17370  015C9E  0EF9               	movlw	-7
 17371  015CA0  006F FF8C  F00C    	movff	plusw1,btemp+11
 17372  015CA6  0E20               	movlw	32
 17373  015CA8  D005               	goto	u5880
 17374  015CAA                     u5885:
 17375  015CAA  90D8               	bcf	status,0,c
 17376  015CAC  320C               	rrcf	(btemp+11)^0,f,c
 17377  015CAE  320B               	rrcf	(btemp+10)^0,f,c
 17378  015CB0  320A               	rrcf	(btemp+9)^0,f,c
 17379  015CB2  3209               	rrcf	(btemp+8)^0,f,c
 17380  015CB4                     u5880:
 17381  015CB4  2EE8               	decfsz	wreg,f,c
 17382  015CB6  D7F9               	goto	u5885
 17383  015CB8  5009               	movf	(btemp+8)^0,w,c
 17384  015CBA  B4D8               	btfsc	status,2,c
 17385  015CBC  D028               	goto	l7760
 17386                           
 17387                           ;stkvar	_m @ sp[(-10)+4]
 17388                           ;stkvar	_u @ sp[(-10)+0]
 17389  015CBE  0EF6               	movlw	-10
 17390  015CC0  50E3               	movf	plusw1,w,c
 17391  015CC2  6E01               	movwf	btemp^0,c
 17392  015CC4  0EFA               	movlw	-6
 17393  015CC6  50E3               	movf	plusw1,w,c
 17394  015CC8  2601               	addwf	btemp^0,f,c
 17395  015CCA  0EF6               	movlw	-10
 17396  015CCC  0060  F007  FFE3   	movff	btemp,plusw1
 17397  015CD2  0EF7               	movlw	-9
 17398  015CD4  50E3               	movf	plusw1,w,c
 17399  015CD6  6E01               	movwf	btemp^0,c
 17400  015CD8  0EFB               	movlw	-5
 17401  015CDA  50E3               	movf	plusw1,w,c
 17402  015CDC  2201               	addwfc	btemp^0,f,c
 17403  015CDE  0EF7               	movlw	-9
 17404  015CE0  0060  F007  FFE3   	movff	btemp,plusw1
 17405  015CE6  0EF8               	movlw	-8
 17406  015CE8  50E3               	movf	plusw1,w,c
 17407  015CEA  6E01               	movwf	btemp^0,c
 17408  015CEC  0EFC               	movlw	-4
 17409  015CEE  50E3               	movf	plusw1,w,c
 17410  015CF0  2201               	addwfc	btemp^0,f,c
 17411  015CF2  0EF8               	movlw	-8
 17412  015CF4  0060  F007  FFE3   	movff	btemp,plusw1
 17413  015CFA  0EF9               	movlw	-7
 17414  015CFC  50E3               	movf	plusw1,w,c
 17415  015CFE  6E01               	movwf	btemp^0,c
 17416  015D00  0EFD               	movlw	-3
 17417  015D02  50E3               	movf	plusw1,w,c
 17418  015D04  2201               	addwfc	btemp^0,f,c
 17419  015D06  0EF9               	movlw	-7
 17420  015D08  0060  F007  FFE3   	movff	btemp,plusw1
 17421  015D0E                     l7760:
 17422                           
 17423                           ;stkvar	_m @ sp[(-10)+4]
 17424  015D0E  0EFA               	movlw	-6
 17425  015D10  006F FF8C  F009    	movff	plusw1,btemp+8
 17426  015D16  0EFB               	movlw	-5
 17427  015D18  006F FF8C  F00A    	movff	plusw1,btemp+9
 17428  015D1E  0EFC               	movlw	-4
 17429  015D20  006F FF8C  F00B    	movff	plusw1,btemp+10
 17430  015D26  0EFD               	movlw	-3
 17431  015D28  006F FF8C  F00C    	movff	plusw1,btemp+11
 17432  015D2E  1C09               	comf	(btemp+8)^0,w,c
 17433  015D30  6E05               	movwf	(btemp+4)^0,c
 17434  015D32  1C0A               	comf	(btemp+9)^0,w,c
 17435  015D34  6E06               	movwf	(btemp+5)^0,c
 17436  015D36  1C0B               	comf	(btemp+10)^0,w,c
 17437  015D38  6E07               	movwf	(btemp+6)^0,c
 17438  015D3A  1C0C               	comf	(btemp+11)^0,w,c
 17439  015D3C  6E08               	movwf	(btemp+7)^0,c
 17440                           
 17441                           ;stkvar	_u @ sp[(-10)+0]
 17442  015D3E  50E1               	movf	fsr1l,w,c
 17443  015D40  0FF6               	addlw	-10
 17444  015D42  6ED9               	movwf	fsr2l,c
 17445  015D44  50E2               	movf	fsr1h,w,c
 17446  015D46  6EDA               	movwf	fsr2h,c
 17447  015D48  0EFF               	movlw	255
 17448  015D4A  22DA               	addwfc	fsr2h,f,c
 17449  015D4C  5005               	movf	(btemp+4)^0,w,c
 17450  015D4E  16DE               	andwf	postinc2,f,c
 17451  015D50  5006               	movf	(btemp+5)^0,w,c
 17452  015D52  16DE               	andwf	postinc2,f,c
 17453  015D54  5007               	movf	(btemp+6)^0,w,c
 17454  015D56  16DE               	andwf	postinc2,f,c
 17455  015D58  5008               	movf	(btemp+7)^0,w,c
 17456  015D5A  16DE               	andwf	postinc2,f,c
 17457  015D5C  D05B               	goto	l7770
 17458  015D5E                     l7762:
 17459                           
 17460                           ;stkvar	_u @ sp[(-10)+0]
 17461  015D5E  0EF6               	movlw	-10
 17462  015D60  006F FF8C  F009    	movff	plusw1,btemp+8
 17463  015D66  0EF7               	movlw	-9
 17464  015D68  006F FF8C  F00A    	movff	plusw1,btemp+9
 17465  015D6E  0EF8               	movlw	-8
 17466  015D70  006F FF8C  F00B    	movff	plusw1,btemp+10
 17467  015D76  0EF9               	movlw	-7
 17468  015D78  006F FF8C  F00C    	movff	plusw1,btemp+11
 17469  015D7E  0E20               	movlw	32
 17470  015D80  D005               	goto	u5900
 17471  015D82                     u5905:
 17472  015D82  90D8               	bcf	status,0,c
 17473  015D84  320C               	rrcf	(btemp+11)^0,f,c
 17474  015D86  320B               	rrcf	(btemp+10)^0,f,c
 17475  015D88  320A               	rrcf	(btemp+9)^0,f,c
 17476  015D8A  3209               	rrcf	(btemp+8)^0,f,c
 17477  015D8C                     u5900:
 17478  015D8C  2EE8               	decfsz	wreg,f,c
 17479  015D8E  D7F9               	goto	u5905
 17480  015D90  6609               	tstfsz	(btemp+8)^0,c
 17481  015D92  D009               	goto	l7766
 17482                           
 17483                           ;stkvar	_u @ sp[(-10)+0]
 17484  015D94  0EF6               	movlw	-10
 17485  015D96  6AE3               	clrf	plusw1,c
 17486  015D98  0EF7               	movlw	-9
 17487  015D9A  6AE3               	clrf	plusw1,c
 17488  015D9C  0EF8               	movlw	-8
 17489  015D9E  6AE3               	clrf	plusw1,c
 17490  015DA0  0EF9               	movlw	-7
 17491  015DA2  6AE3               	clrf	plusw1,c
 17492  015DA4  D037               	goto	l7770
 17493  015DA6                     l7766:
 17494                           
 17495                           ;stkvar	_u @ sp[(-10)+0]
 17496  015DA6  0EF6               	movlw	-10
 17497  015DA8  006F FF8C  F009    	movff	plusw1,btemp+8
 17498  015DAE  0EF7               	movlw	-9
 17499  015DB0  006F FF8C  F00A    	movff	plusw1,btemp+9
 17500  015DB6  0EF8               	movlw	-8
 17501  015DB8  006F FF8C  F00B    	movff	plusw1,btemp+10
 17502  015DBE  0EF9               	movlw	-7
 17503  015DC0  006F FF8C  F00C    	movff	plusw1,btemp+11
 17504  015DC6  90D8               	bcf	status,0,c
 17505  015DC8  3409               	rlcf	(btemp+8)^0,w,c
 17506  015DCA  6E05               	movwf	(btemp+4)^0,c
 17507  015DCC  340A               	rlcf	(btemp+9)^0,w,c
 17508  015DCE  6E06               	movwf	(btemp+5)^0,c
 17509  015DD0  340B               	rlcf	(btemp+10)^0,w,c
 17510  015DD2  6E07               	movwf	(btemp+6)^0,c
 17511  015DD4  340C               	rlcf	(btemp+11)^0,w,c
 17512  015DD6  6E08               	movwf	(btemp+7)^0,c
 17513  015DD8  5005               	movf	(btemp+4)^0,w,c
 17514  015DDA  1006               	iorwf	(btemp+5)^0,w,c
 17515  015DDC  1007               	iorwf	(btemp+6)^0,w,c
 17516  015DDE  1008               	iorwf	(btemp+7)^0,w,c
 17517  015DE0  B4D8               	btfsc	status,2,c
 17518  015DE2  D018               	goto	l7770
 17519  015DE4  0E00               	movlw	0
 17520  015DE6  6E09               	movwf	(btemp+8)^0,c
 17521  015DE8  0E00               	movlw	0
 17522  015DEA  6E0A               	movwf	(btemp+9)^0,c
 17523  015DEC  0E80               	movlw	128
 17524  015DEE  6E0B               	movwf	(btemp+10)^0,c
 17525  015DF0  0EBF               	movlw	191
 17526  015DF2  6E0C               	movwf	(btemp+11)^0,c
 17527                           
 17528                           ;stkvar	_u @ sp[(-10)+0]
 17529  015DF4  0EF6               	movlw	-10
 17530  015DF6  0060  F027  FFE3   	movff	btemp+8,plusw1
 17531  015DFC  0EF7               	movlw	-9
 17532  015DFE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17533  015E04  0EF8               	movlw	-8
 17534  015E06  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17535  015E0C  0EF9               	movlw	-7
 17536  015E0E  0060  F033  FFE3   	movff	btemp+11,plusw1
 17537  015E14                     l7770:
 17538                           
 17539                           ;stkvar	_u @ sp[(-10)+0]
 17540  015E14  0EF6               	movlw	-10
 17541  015E16  006F FF8C  F001    	movff	plusw1,btemp
 17542  015E1C  0EF7               	movlw	-9
 17543  015E1E  006F FF8C  F002    	movff	plusw1,btemp+1
 17544  015E24  0EF8               	movlw	-8
 17545  015E26  006F FF8C  F003    	movff	plusw1,btemp+2
 17546  015E2C  0EF9               	movlw	-7
 17547  015E2E                     L15:
 17548  015E2E  006F FF8C  F004    	movff	plusw1,btemp+3
 17549                           
 17550                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17551  015E34  0EF2               	movlw	242
 17552  015E36  26E1               	addwf	fsr1l,f,c
 17553  015E38  0EFF               	movlw	255
 17554  015E3A  22E2               	addwfc	fsr1h,f,c
 17555  015E3C  0012               	return		;funcret
 17556  015E3E                     __end_of_floorf:
 17557                           	opt callstack 0
 17558                           
 17559 ;; *************** function ___fpclassifyf *****************
 17560 ;; Defined at:
 17561 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 17562 ;; Parameters:    Size  Location     Type
 17563 ;;  x               4  [STACK] float 
 17564 ;; Auto vars:     Size  Location     Type
 17565 ;;  u               4  [STACK] struct .
 17566 ;;  e               2  [STACK] int 
 17567 ;; Return value:  Size  Location     Type
 17568 ;;                  2  [STACK] int 
 17569 ;; Registers used:
 17570 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 17571 ;; Tracked objects:
 17572 ;;		On entry : 0/0
 17573 ;;		On exit  : 0/0
 17574 ;;		Unchanged: 0/0
 17575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17580 ;;Total ram usage:        0 bytes
 17581 ;; Hardware stack levels used:    1
 17582 ;; Hardware stack levels required when called:   15
 17583 ;; This function calls:
 17584 ;;		Nothing
 17585 ;; This function is called by:
 17586 ;;		_efgtoa
 17587 ;; This function uses a reentrant model
 17588 ;;
 17589                           
 17590                           	psect	text60
 17591  017B18                     __ptext60:
 17592                           	opt callstack 0
 17593  017B18                     ___fpclassifyf:
 17594                           	opt callstack 0
 17595                           
 17596                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17597  017B18  0E06               	movlw	6
 17598  017B1A  26E1               	addwf	fsr1l,f,c
 17599  017B1C  0E00               	movlw	0
 17600  017B1E  22E2               	addwfc	fsr1h,f,c
 17601                           
 17602                           ;incstack = 0
 17603 ;; hardware stack exceeded
 17604  017B20  0060  F208  F009   	movff	___fpclassifyf@F463,btemp+8
 17605  017B26  0060  F20C  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 17606  017B2C  0060  F210  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 17607  017B32  0060  F214  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 17608                           
 17609                           ;stkvar	_u @ sp[(-6)+0]
 17610  017B38  0EFA               	movlw	-6
 17611  017B3A  0060  F027  FFE3   	movff	btemp+8,plusw1
 17612  017B40  0EFB               	movlw	-5
 17613  017B42  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17614  017B48  0EFC               	movlw	-4
 17615  017B4A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17616  017B50  0EFD               	movlw	-3
 17617  017B52  0060  F033  FFE3   	movff	btemp+11,plusw1
 17618                           
 17619                           ;stkvar	_x @ sp[(-6)+-4]
 17620  017B58  0EF6               	movlw	-10
 17621  017B5A  006F FF8C  F009    	movff	plusw1,btemp+8
 17622  017B60  0EF7               	movlw	-9
 17623  017B62  006F FF8C  F00A    	movff	plusw1,btemp+9
 17624  017B68  0EF8               	movlw	-8
 17625  017B6A  006F FF8C  F00B    	movff	plusw1,btemp+10
 17626  017B70  0EF9               	movlw	-7
 17627  017B72  006F FF8C  F00C    	movff	plusw1,btemp+11
 17628                           
 17629                           ;stkvar	_u @ sp[(-6)+0]
 17630  017B78  0EFA               	movlw	-6
 17631  017B7A  0060  F027  FFE3   	movff	btemp+8,plusw1
 17632  017B80  0EFB               	movlw	-5
 17633  017B82  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17634  017B88  0EFC               	movlw	-4
 17635  017B8A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17636  017B90  0EFD               	movlw	-3
 17637  017B92  0060  F033  FFE3   	movff	btemp+11,plusw1
 17638                           
 17639                           ;stkvar	_u @ sp[(-6)+0]
 17640  017B98  0EFA               	movlw	-6
 17641  017B9A  006F FF8C  F009    	movff	plusw1,btemp+8
 17642  017BA0  0EFB               	movlw	-5
 17643  017BA2  006F FF8C  F00A    	movff	plusw1,btemp+9
 17644  017BA8  0EFC               	movlw	-4
 17645  017BAA  006F FF8C  F00B    	movff	plusw1,btemp+10
 17646  017BB0  0EFD               	movlw	-3
 17647  017BB2  006F FF8C  F00C    	movff	plusw1,btemp+11
 17648  017BB8  0E18               	movlw	24
 17649  017BBA  D005               	goto	u5710
 17650  017BBC                     u5715:
 17651  017BBC  90D8               	bcf	status,0,c
 17652  017BBE  320C               	rrcf	(btemp+11)^0,f,c
 17653  017BC0  320B               	rrcf	(btemp+10)^0,f,c
 17654  017BC2  320A               	rrcf	(btemp+9)^0,f,c
 17655  017BC4  3209               	rrcf	(btemp+8)^0,f,c
 17656  017BC6                     u5710:
 17657  017BC6  2EE8               	decfsz	wreg,f,c
 17658  017BC8  D7F9               	goto	u5715
 17659  017BCA  0060  F024  F007   	movff	btemp+8,btemp+6
 17660  017BD0  0060  F028  F008   	movff	btemp+9,btemp+7
 17661  017BD6  0EFF               	movlw	255
 17662  017BD8  1607               	andwf	(btemp+6)^0,f,c
 17663  017BDA  0E00               	movlw	0
 17664  017BDC  1608               	andwf	(btemp+7)^0,f,c
 17665                           
 17666                           ;stkvar	_e @ sp[(-6)+4]
 17667  017BDE  0EFE               	movlw	-2
 17668  017BE0  0060  F01F  FFE3   	movff	btemp+6,plusw1
 17669  017BE6  0EFF               	movlw	-1
 17670  017BE8  0060  F023  FFE3   	movff	btemp+7,plusw1
 17671                           
 17672                           ;stkvar	_e @ sp[(-6)+4]
 17673  017BEE  0EFE               	movlw	-2
 17674  017BF0  006F FF8C  F001    	movff	plusw1,btemp
 17675  017BF6  0EFF               	movlw	-1
 17676  017BF8  50E3               	movf	plusw1,w,c
 17677  017BFA  1001               	iorwf	btemp^0,w,c
 17678  017BFC  A4D8               	btfss	status,2,c
 17679  017BFE  D023               	goto	l7708
 17680                           
 17681                           ;stkvar	_u @ sp[(-6)+0]
 17682  017C00  0EFA               	movlw	-6
 17683  017C02  006F FF8C  F009    	movff	plusw1,btemp+8
 17684  017C08  0EFB               	movlw	-5
 17685  017C0A  006F FF8C  F00A    	movff	plusw1,btemp+9
 17686  017C10  0EFC               	movlw	-4
 17687  017C12  006F FF8C  F00B    	movff	plusw1,btemp+10
 17688  017C18  0EFD               	movlw	-3
 17689  017C1A  006F FF8C  F00C    	movff	plusw1,btemp+11
 17690  017C20  90D8               	bcf	status,0,c
 17691  017C22  3409               	rlcf	(btemp+8)^0,w,c
 17692  017C24  6E05               	movwf	(btemp+4)^0,c
 17693  017C26  340A               	rlcf	(btemp+9)^0,w,c
 17694  017C28  6E06               	movwf	(btemp+5)^0,c
 17695  017C2A  340B               	rlcf	(btemp+10)^0,w,c
 17696  017C2C  6E07               	movwf	(btemp+6)^0,c
 17697  017C2E  340C               	rlcf	(btemp+11)^0,w,c
 17698  017C30  6E08               	movwf	(btemp+7)^0,c
 17699  017C32  5005               	movf	(btemp+4)^0,w,c
 17700  017C34  1006               	iorwf	(btemp+5)^0,w,c
 17701  017C36  1007               	iorwf	(btemp+6)^0,w,c
 17702  017C38  1008               	iorwf	(btemp+7)^0,w,c
 17703  017C3A  A4D8               	btfss	status,2,c
 17704  017C3C  D002               	goto	l7704
 17705  017C3E  0E02               	movlw	2
 17706  017C40  D02E               	goto	L16
 17707  017C42                     l7704:
 17708  017C42  0E03               	movlw	3
 17709  017C44  D02C               	goto	L16
 17710  017C46                     l7708:
 17711                           
 17712                           ;stkvar	_e @ sp[(-6)+4]
 17713  017C46  0EFE               	movlw	-2
 17714  017C48  28E3               	incf	plusw1,w,c
 17715  017C4A  E128               	bnz	l7714
 17716  017C4C  0EFF               	movlw	-1
 17717  017C4E  50E3               	movf	plusw1,w,c
 17718  017C50  A4D8               	btfss	status,2,c
 17719  017C52  D024               	goto	l7714
 17720                           
 17721                           ;stkvar	_u @ sp[(-6)+0]
 17722  017C54  0EFA               	movlw	-6
 17723  017C56  006F FF8C  F009    	movff	plusw1,btemp+8
 17724  017C5C  0EFB               	movlw	-5
 17725  017C5E  006F FF8C  F00A    	movff	plusw1,btemp+9
 17726  017C64  0EFC               	movlw	-4
 17727  017C66  006F FF8C  F00B    	movff	plusw1,btemp+10
 17728  017C6C  0EFD               	movlw	-3
 17729  017C6E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17730  017C74  0E09               	movlw	9
 17731  017C76                     u5755:
 17732  017C76  90D8               	bcf	status,0,c
 17733  017C78  3609               	rlcf	(btemp+8)^0,f,c
 17734  017C7A  360A               	rlcf	(btemp+9)^0,f,c
 17735  017C7C  360B               	rlcf	(btemp+10)^0,f,c
 17736  017C7E  360C               	rlcf	(btemp+11)^0,f,c
 17737  017C80  2EE8               	decfsz	wreg,f,c
 17738  017C82  D7F9               	goto	u5755
 17739  017C84  5009               	movf	(btemp+8)^0,w,c
 17740  017C86  100A               	iorwf	(btemp+9)^0,w,c
 17741  017C88  100B               	iorwf	(btemp+10)^0,w,c
 17742  017C8A  100C               	iorwf	(btemp+11)^0,w,c
 17743  017C8C  A4D8               	btfss	status,2,c
 17744  017C8E  D002               	goto	u5760
 17745  017C90  0E01               	movlw	1
 17746  017C92  D001               	goto	u5770
 17747  017C94                     u5760:
 17748  017C94  0E00               	movlw	0
 17749  017C96                     u5770:
 17750  017C96  6E01               	movwf	btemp^0,c
 17751  017C98  6A02               	clrf	(btemp+1)^0,c
 17752  017C9A  D004               	goto	l3042
 17753  017C9C                     l7714:
 17754  017C9C  0E04               	movlw	4
 17755  017C9E                     L16:
 17756  017C9E  6E01               	movwf	btemp^0,c
 17757  017CA0  0E00               	movlw	0
 17758  017CA2  6E02               	movwf	(btemp+1)^0,c
 17759  017CA4                     l3042:
 17760                           
 17761                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 17762  017CA4  0EF6               	movlw	246
 17763  017CA6  26E1               	addwf	fsr1l,f,c
 17764  017CA8  0EFF               	movlw	255
 17765  017CAA  22E2               	addwfc	fsr1h,f,c
 17766  017CAC  0012               	return		;funcret
 17767  017CAE                     __end_of___fpclassifyf:
 17768                           	opt callstack 0
 17769                           
 17770 ;; *************** function ___fltol *****************
 17771 ;; Defined at:
 17772 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 17773 ;; Parameters:    Size  Location     Type
 17774 ;;  f1              4  [STACK] int 
 17775 ;; Auto vars:     Size  Location     Type
 17776 ;;  exp1            1  [STACK] unsigned char 
 17777 ;;  sign1           1  [STACK] unsigned char 
 17778 ;; Return value:  Size  Location     Type
 17779 ;;                  4  [STACK] long 
 17780 ;; Registers used:
 17781 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 17782 ;; Tracked objects:
 17783 ;;		On entry : 0/1
 17784 ;;		On exit  : 0/0
 17785 ;;		Unchanged: 0/0
 17786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17791 ;;Total ram usage:        0 bytes
 17792 ;; Hardware stack levels used:    1
 17793 ;; Hardware stack levels required when called:   15
 17794 ;; This function calls:
 17795 ;;		Nothing
 17796 ;; This function is called by:
 17797 ;;		_calc_bsoc
 17798 ;;		_init_bsoc
 17799 ;;		_efgtoa
 17800 ;; This function uses a reentrant model
 17801 ;;
 17802                           
 17803                           	psect	text61
 17804  017FA2                     __ptext61:
 17805                           	opt callstack 0
 17806  017FA2                     ___fltol:
 17807                           	opt callstack 0
 17808                           
 17809                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17810  017FA2  52E6               	movf	postinc1,f,c
 17811  017FA4  52E6               	movf	postinc1,f,c
 17812                           
 17813                           ;stkvar	_f1 @ sp[(-2)+-4]
 17814                           
 17815                           ;incstack = 0
 17816 ;; hardware stack exceeded
 17817  017FA6  0EFA               	movlw	-6
 17818  017FA8  006F FF8C  F009    	movff	plusw1,btemp+8
 17819  017FAE  0EFB               	movlw	-5
 17820  017FB0  006F FF8C  F00A    	movff	plusw1,btemp+9
 17821  017FB6  0EFC               	movlw	-4
 17822  017FB8  006F FF8C  F00B    	movff	plusw1,btemp+10
 17823  017FBE  0EFD               	movlw	-3
 17824  017FC0  006F FF8C  F00C    	movff	plusw1,btemp+11
 17825  017FC6  0E18               	movlw	24
 17826  017FC8  D005               	goto	u6920
 17827  017FCA                     u6925:
 17828  017FCA  90D8               	bcf	status,0,c
 17829  017FCC  320C               	rrcf	(btemp+11)^0,f,c
 17830  017FCE  320B               	rrcf	(btemp+10)^0,f,c
 17831  017FD0  320A               	rrcf	(btemp+9)^0,f,c
 17832  017FD2  3209               	rrcf	(btemp+8)^0,f,c
 17833  017FD4                     u6920:
 17834  017FD4  2EE8               	decfsz	wreg,f,c
 17835  017FD6  D7F9               	goto	u6925
 17836                           
 17837                           ;stkvar	_exp1 @ sp[(-2)+0]
 17838  017FD8  0EFE               	movlw	-2
 17839  017FDA  0060  F027  FFE3   	movff	btemp+8,plusw1
 17840  017FE0  0EFE               	movlw	-2
 17841  017FE2  50E3               	movf	plusw1,w,c
 17842  017FE4  A4D8               	btfss	status,2,c
 17843  017FE6  D006               	goto	l8334
 17844  017FE8                     u6930:
 17845  017FE8  0E00               	movlw	0
 17846  017FEA  6E01               	movwf	btemp^0,c
 17847  017FEC  6A02               	clrf	(btemp+1)^0,c
 17848  017FEE  6A03               	clrf	(btemp+2)^0,c
 17849  017FF0  6A04               	clrf	(btemp+3)^0,c
 17850  017FF2  D08B               	goto	l2658
 17851  017FF4                     l8334:
 17852                           
 17853                           ;stkvar	_f1 @ sp[(-2)+-4]
 17854  017FF4  0EFA               	movlw	-6
 17855  017FF6  006F FF8C  F009    	movff	plusw1,btemp+8
 17856  017FFC  0EFB               	movlw	-5
 17857  017FFE  006F FF8C  F00A    	movff	plusw1,btemp+9
 17858  018004  0EFC               	movlw	-4
 17859  018006  006F FF8C  F00B    	movff	plusw1,btemp+10
 17860  01800C  0EFD               	movlw	-3
 17861  01800E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17862  018014  0E20               	movlw	32
 17863  018016  D005               	goto	u6940
 17864  018018                     u6945:
 17865  018018  90D8               	bcf	status,0,c
 17866  01801A  320C               	rrcf	(btemp+11)^0,f,c
 17867  01801C  320B               	rrcf	(btemp+10)^0,f,c
 17868  01801E  320A               	rrcf	(btemp+9)^0,f,c
 17869  018020  3209               	rrcf	(btemp+8)^0,f,c
 17870  018022                     u6940:
 17871  018022  2EE8               	decfsz	wreg,f,c
 17872  018024  D7F9               	goto	u6945
 17873                           
 17874                           ;stkvar	_sign1 @ sp[(-2)+1]
 17875  018026  0EFF               	movlw	-1
 17876  018028  0060  F027  FFE3   	movff	btemp+8,plusw1
 17877                           
 17878                           ;stkvar	_f1 @ sp[(-2)+-4]
 17879  01802E  0EFC               	movlw	-4
 17880  018030  8EE3               	bsf	plusw1,7,c
 17881                           
 17882                           ;stkvar	_f1 @ sp[(-2)+-4]
 17883  018032  50E1               	movf	fsr1l,w,c
 17884  018034  0FFA               	addlw	-6
 17885  018036  6ED9               	movwf	fsr2l,c
 17886  018038  50E2               	movf	fsr1h,w,c
 17887  01803A  6EDA               	movwf	fsr2h,c
 17888  01803C  0EFF               	movlw	255
 17889  01803E  22DA               	addwfc	fsr2h,f,c
 17890  018040  0EFF               	movlw	255
 17891  018042  16DE               	andwf	postinc2,f,c
 17892  018044  0EFF               	movlw	255
 17893  018046  16DE               	andwf	postinc2,f,c
 17894  018048  0EFF               	movlw	255
 17895  01804A  16DE               	andwf	postinc2,f,c
 17896  01804C  0E00               	movlw	0
 17897  01804E  16DE               	andwf	postinc2,f,c
 17898                           
 17899                           ;stkvar	_exp1 @ sp[(-2)+0]
 17900  018050  0EFE               	movlw	-2
 17901  018052  006F FF8C  F001    	movff	plusw1,btemp
 17902  018058  0E96               	movlw	150
 17903  01805A  5E01               	subwf	btemp^0,f,c
 17904  01805C  0EFE               	movlw	-2
 17905  01805E  0060  F007  FFE3   	movff	btemp,plusw1
 17906                           
 17907                           ;stkvar	_exp1 @ sp[(-2)+0]
 17908  018064  0EFE               	movlw	-2
 17909  018066  AEE3               	btfss	plusw1,7,c
 17910  018068  D014               	goto	l8352
 17911                           
 17912                           ;stkvar	_exp1 @ sp[(-2)+0]
 17913  01806A  0EFE               	movlw	-2
 17914  01806C  50E3               	movf	plusw1,w,c
 17915  01806E  0A80               	xorlw	128
 17916  018070  0F97               	addlw	151
 17917  018072  A0D8               	btfss	status,0,c
 17918  018074  D7B9               	goto	u6930
 17919  018076                     l8350:
 17920                           
 17921                           ;stkvar	_f1 @ sp[(-2)+-4]
 17922  018076  90D8               	bcf	status,0,c
 17923  018078  0EFD               	movlw	-3
 17924  01807A  32E3               	rrcf	plusw1,f,c
 17925  01807C  0EFC               	movlw	-4
 17926  01807E  32E3               	rrcf	plusw1,f,c
 17927  018080  0EFB               	movlw	-5
 17928  018082  32E3               	rrcf	plusw1,f,c
 17929  018084  0EFA               	movlw	-6
 17930  018086  32E3               	rrcf	plusw1,f,c
 17931                           
 17932                           ;stkvar	_exp1 @ sp[(-2)+0]
 17933  018088  0EFE               	movlw	-2
 17934  01808A  2AE3               	incf	plusw1,f,c
 17935  01808C  B4D8               	btfsc	status,2,c
 17936  01808E  D018               	goto	u6990
 17937  018090  D7F2               	goto	l8350
 17938  018092                     l8352:
 17939                           
 17940                           ;stkvar	_exp1 @ sp[(-2)+0]
 17941  018092  0EFE               	movlw	-2
 17942  018094  006F FF8C  F001    	movff	plusw1,btemp
 17943  01809A  0E1F               	movlw	31
 17944  01809C  6401               	cpfsgt	btemp^0,c
 17945  01809E  D00C               	goto	l8360
 17946  0180A0  D7A3               	goto	u6930
 17947  0180A2                     l8358:
 17948                           
 17949                           ;stkvar	_f1 @ sp[(-2)+-4]
 17950  0180A2  90D8               	bcf	status,0,c
 17951  0180A4  0EFA               	movlw	-6
 17952  0180A6  36E3               	rlcf	plusw1,f,c
 17953  0180A8  0EFB               	movlw	-5
 17954  0180AA  36E3               	rlcf	plusw1,f,c
 17955  0180AC  0EFC               	movlw	-4
 17956  0180AE  36E3               	rlcf	plusw1,f,c
 17957  0180B0  0EFD               	movlw	-3
 17958  0180B2  36E3               	rlcf	plusw1,f,c
 17959                           
 17960                           ;stkvar	_exp1 @ sp[(-2)+0]
 17961  0180B4  0EFE               	movlw	-2
 17962  0180B6  06E3               	decf	plusw1,f,c
 17963  0180B8                     l8360:
 17964                           
 17965                           ;stkvar	_exp1 @ sp[(-2)+0]
 17966  0180B8  0EFE               	movlw	-2
 17967  0180BA  50E3               	movf	plusw1,w,c
 17968  0180BC  A4D8               	btfss	status,2,c
 17969  0180BE  D7F1               	goto	l8358
 17970  0180C0                     u6990:
 17971                           
 17972                           ;stkvar	_sign1 @ sp[(-2)+1]
 17973  0180C0  0EFF               	movlw	-1
 17974  0180C2  50E3               	movf	plusw1,w,c
 17975  0180C4  B4D8               	btfsc	status,2,c
 17976  0180C6  D011               	goto	u7010
 17977                           
 17978                           ;stkvar	_f1 @ sp[(-2)+-4]
 17979                           ;stkvar	_f1 @ sp[(-2)+-4]
 17980  0180C8  0EFA               	movlw	-6
 17981  0180CA  6CE3               	negf	plusw1,c
 17982  0180CC  0EFB               	movlw	-5
 17983  0180CE  1EE3               	comf	plusw1,f,c
 17984  0180D0  0EFC               	movlw	-4
 17985  0180D2  1EE3               	comf	plusw1,f,c
 17986  0180D4  0EFD               	movlw	-3
 17987  0180D6  1EE3               	comf	plusw1,f,c
 17988  0180D8  E308               	bnc	u7010
 17989  0180DA  0EFB               	movlw	-5
 17990  0180DC  2AE3               	incf	plusw1,f,c
 17991  0180DE  E305               	bnc	u7010
 17992  0180E0  0EFC               	movlw	-4
 17993  0180E2  2AE3               	incf	plusw1,f,c
 17994  0180E4  E302               	bnc	u7010
 17995  0180E6  0EFD               	movlw	-3
 17996  0180E8  2AE3               	incf	plusw1,f,c
 17997  0180EA                     u7010:
 17998                           
 17999                           ;stkvar	_f1 @ sp[(-2)+-4]
 18000  0180EA  0EFA               	movlw	-6
 18001  0180EC  006F FF8C  F001    	movff	plusw1,btemp
 18002  0180F2  0EFB               	movlw	-5
 18003  0180F4  006F FF8C  F002    	movff	plusw1,btemp+1
 18004  0180FA  0EFC               	movlw	-4
 18005  0180FC  006F FF8C  F003    	movff	plusw1,btemp+2
 18006  018102  0EFD               	movlw	-3
 18007  018104  006F FF8C  F004    	movff	plusw1,btemp+3
 18008  01810A                     l2658:
 18009                           
 18010                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18011  01810A  0EFA               	movlw	250
 18012  01810C  26E1               	addwf	fsr1l,f,c
 18013  01810E  0EFF               	movlw	255
 18014  018110  22E2               	addwfc	fsr1h,f,c
 18015  018112  0012               	return		;funcret
 18016  018114                     __end_of___fltol:
 18017                           	opt callstack 0
 18018                           
 18019 ;; *************** function ___flneg *****************
 18020 ;; Defined at:
 18021 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 18022 ;; Parameters:    Size  Location     Type
 18023 ;;  f1              4  [STACK] long 
 18024 ;; Auto vars:     Size  Location     Type
 18025 ;;		None
 18026 ;; Return value:  Size  Location     Type
 18027 ;;                  4  [STACK] long 
 18028 ;; Registers used:
 18029 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 18030 ;; Tracked objects:
 18031 ;;		On entry : 0/0
 18032 ;;		On exit  : 0/0
 18033 ;;		Unchanged: 0/0
 18034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18039 ;;Total ram usage:        0 bytes
 18040 ;; Hardware stack levels used:    1
 18041 ;; Hardware stack levels required when called:   15
 18042 ;; This function calls:
 18043 ;;		Nothing
 18044 ;; This function is called by:
 18045 ;;		_calc_bsoc
 18046 ;;		_efgtoa
 18047 ;; This function uses a reentrant model
 18048 ;;
 18049                           
 18050                           	psect	text62
 18051  01A58C                     __ptext62:
 18052                           	opt callstack 0
 18053  01A58C                     ___flneg:
 18054                           	opt callstack 0
 18055                           
 18056                           ;stkvar	_f1 @ sp[(0)+-4]
 18057                           
 18058                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18059                           ;incstack = 0
 18060 ;; hardware stack exceeded
 18061  01A58C  0EFC               	movlw	-4
 18062  01A58E  50E3               	movf	plusw1,w,c
 18063  01A590  E10A               	bnz	u6910
 18064  01A592  0EFD               	movlw	-3
 18065  01A594  50E3               	movf	plusw1,w,c
 18066  01A596  E107               	bnz	u6910
 18067  01A598  0EFE               	movlw	-2
 18068  01A59A  50E3               	movf	plusw1,w,c
 18069  01A59C  E104               	bnz	u6910
 18070  01A59E  0EFF               	movlw	-1
 18071  01A5A0  50E3               	movf	plusw1,w,c
 18072  01A5A2  B4D8               	btfsc	status,2,c
 18073  01A5A4  D002               	goto	l8324
 18074  01A5A6                     u6910:
 18075                           
 18076                           ;stkvar	_f1 @ sp[(0)+-4]
 18077  01A5A6  0EFF               	movlw	-1
 18078  01A5A8  7EE3               	btg	plusw1,7,c
 18079  01A5AA                     l8324:
 18080                           
 18081                           ;stkvar	_f1 @ sp[(0)+-4]
 18082  01A5AA  0EFC               	movlw	-4
 18083  01A5AC  006F FF8C  F001    	movff	plusw1,btemp
 18084  01A5B2  0EFD               	movlw	-3
 18085  01A5B4  006F FF8C  F002    	movff	plusw1,btemp+1
 18086  01A5BA  0EFE               	movlw	-2
 18087  01A5BC  006F FF8C  F003    	movff	plusw1,btemp+2
 18088  01A5C2  0EFF               	movlw	-1
 18089  01A5C4  006F FF8C  F004    	movff	plusw1,btemp+3
 18090                           
 18091                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18092  01A5CA  52E5               	movf	postdec1,f,c
 18093  01A5CC  52E5               	movf	postdec1,f,c
 18094  01A5CE  52E5               	movf	postdec1,f,c
 18095  01A5D0  52E5               	movf	postdec1,f,c
 18096  01A5D2  0012               	return		;funcret
 18097  01A5D4                     __end_of___flneg:
 18098                           	opt callstack 0
 18099                           
 18100 ;; *************** function ___fleq *****************
 18101 ;; Defined at:
 18102 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 18103 ;; Parameters:    Size  Location     Type
 18104 ;;  ff1             4  [STACK] long 
 18105 ;;  ff2             4  [STACK] long 
 18106 ;; Auto vars:     Size  Location     Type
 18107 ;;		None
 18108 ;; Return value:  Size  Location     Type
 18109 ;;		None               void
 18110 ;; Registers used:
 18111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18112 ;; Tracked objects:
 18113 ;;		On entry : 0/0
 18114 ;;		On exit  : 0/0
 18115 ;;		Unchanged: 0/0
 18116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18121 ;;Total ram usage:        0 bytes
 18122 ;; Hardware stack levels used:    1
 18123 ;; Hardware stack levels required when called:   15
 18124 ;; This function calls:
 18125 ;;		Nothing
 18126 ;; This function is called by:
 18127 ;;		_efgtoa
 18128 ;; This function uses a reentrant model
 18129 ;;
 18130                           
 18131                           	psect	text63
 18132  019554                     __ptext63:
 18133                           	opt callstack 0
 18134  019554                     ___fleq:
 18135                           	opt callstack 0
 18136                           
 18137                           ;stkvar	_ff1 @ sp[(0)+-4]
 18138                           
 18139                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18140                           ;incstack = 0
 18141 ;; hardware stack exceeded
 18142  019554  50E1               	movf	fsr1l,w,c
 18143  019556  0FFC               	addlw	-4
 18144  019558  6ED9               	movwf	fsr2l,c
 18145  01955A  50E2               	movf	fsr1h,w,c
 18146  01955C  6EDA               	movwf	fsr2h,c
 18147  01955E  0EFF               	movlw	255
 18148  019560  22DA               	addwfc	fsr2h,f,c
 18149  019562  0E00               	movlw	0
 18150  019564  14DE               	andwf	postinc2,w,c
 18151  019566  6E09               	movwf	(btemp+8)^0,c
 18152  019568  0E00               	movlw	0
 18153  01956A  14DE               	andwf	postinc2,w,c
 18154  01956C  6E0A               	movwf	(btemp+9)^0,c
 18155  01956E  0E80               	movlw	128
 18156  019570  14DE               	andwf	postinc2,w,c
 18157  019572  6E0B               	movwf	(btemp+10)^0,c
 18158  019574  0E7F               	movlw	127
 18159  019576  14DE               	andwf	postinc2,w,c
 18160  019578  6E0C               	movwf	(btemp+11)^0,c
 18161  01957A  5009               	movf	(btemp+8)^0,w,c
 18162  01957C  100A               	iorwf	(btemp+9)^0,w,c
 18163  01957E  100B               	iorwf	(btemp+10)^0,w,c
 18164  019580  100C               	iorwf	(btemp+11)^0,w,c
 18165  019582  A4D8               	btfss	status,2,c
 18166  019584  D008               	goto	l8282
 18167                           
 18168                           ;stkvar	_ff1 @ sp[(0)+-4]
 18169  019586  0EFC               	movlw	-4
 18170  019588  6AE3               	clrf	plusw1,c
 18171  01958A  0EFD               	movlw	-3
 18172  01958C  6AE3               	clrf	plusw1,c
 18173  01958E  0EFE               	movlw	-2
 18174  019590  6AE3               	clrf	plusw1,c
 18175  019592  0EFF               	movlw	-1
 18176  019594  6AE3               	clrf	plusw1,c
 18177  019596                     l8282:
 18178                           
 18179                           ;stkvar	_ff2 @ sp[(0)+-8]
 18180  019596  50E1               	movf	fsr1l,w,c
 18181  019598  0FF8               	addlw	-8
 18182  01959A  6ED9               	movwf	fsr2l,c
 18183  01959C  50E2               	movf	fsr1h,w,c
 18184  01959E  6EDA               	movwf	fsr2h,c
 18185  0195A0  0EFF               	movlw	255
 18186  0195A2  22DA               	addwfc	fsr2h,f,c
 18187  0195A4  0E00               	movlw	0
 18188  0195A6  14DE               	andwf	postinc2,w,c
 18189  0195A8  6E09               	movwf	(btemp+8)^0,c
 18190  0195AA  0E00               	movlw	0
 18191  0195AC  14DE               	andwf	postinc2,w,c
 18192  0195AE  6E0A               	movwf	(btemp+9)^0,c
 18193  0195B0  0E80               	movlw	128
 18194  0195B2  14DE               	andwf	postinc2,w,c
 18195  0195B4  6E0B               	movwf	(btemp+10)^0,c
 18196  0195B6  0E7F               	movlw	127
 18197  0195B8  14DE               	andwf	postinc2,w,c
 18198  0195BA  6E0C               	movwf	(btemp+11)^0,c
 18199  0195BC  5009               	movf	(btemp+8)^0,w,c
 18200  0195BE  100A               	iorwf	(btemp+9)^0,w,c
 18201  0195C0  100B               	iorwf	(btemp+10)^0,w,c
 18202  0195C2  100C               	iorwf	(btemp+11)^0,w,c
 18203  0195C4  A4D8               	btfss	status,2,c
 18204  0195C6  D008               	goto	l8286
 18205                           
 18206                           ;stkvar	_ff2 @ sp[(0)+-8]
 18207  0195C8  0EF8               	movlw	-8
 18208  0195CA  6AE3               	clrf	plusw1,c
 18209  0195CC  0EF9               	movlw	-7
 18210  0195CE  6AE3               	clrf	plusw1,c
 18211  0195D0  0EFA               	movlw	-6
 18212  0195D2  6AE3               	clrf	plusw1,c
 18213  0195D4  0EFB               	movlw	-5
 18214  0195D6  6AE3               	clrf	plusw1,c
 18215  0195D8                     l8286:
 18216                           
 18217                           ;stkvar	_ff2 @ sp[(0)+-8]
 18218                           ;stkvar	_ff1 @ sp[(0)+-4]
 18219  0195D8  50E1               	movf	fsr1l,w,c
 18220  0195DA  0FFC               	addlw	-4
 18221  0195DC  6ED9               	movwf	fsr2l,c
 18222  0195DE  50E2               	movf	fsr1h,w,c
 18223  0195E0  6EDA               	movwf	fsr2h,c
 18224  0195E2  0EFF               	movlw	255
 18225  0195E4  22DA               	addwfc	fsr2h,f,c
 18226  0195E6  0EF8               	movlw	-8
 18227  0195E8  50E3               	movf	plusw1,w,c
 18228  0195EA  18DE               	xorwf	postinc2,w,c
 18229  0195EC  E10D               	bnz	u6850
 18230  0195EE  0EF9               	movlw	-7
 18231  0195F0  50E3               	movf	plusw1,w,c
 18232  0195F2  18DE               	xorwf	postinc2,w,c
 18233  0195F4  E109               	bnz	u6850
 18234  0195F6  0EFA               	movlw	-6
 18235  0195F8  50E3               	movf	plusw1,w,c
 18236  0195FA  18DE               	xorwf	postinc2,w,c
 18237  0195FC  E105               	bnz	u6850
 18238  0195FE  0EFB               	movlw	-5
 18239  019600  50E3               	movf	plusw1,w,c
 18240  019602  18DE               	xorwf	postinc2,w,c
 18241  019604  B4D8               	btfsc	status,2,c
 18242  019606  D002               	goto	l8290
 18243  019608                     u6850:
 18244  019608  9001               	bcf	btemp& (0+255),0,c
 18245  01960A  D001               	goto	l2620
 18246  01960C                     l8290:
 18247  01960C  8001               	bsf	btemp& (0+255),0,c
 18248  01960E                     l2620:
 18249                           
 18250                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 18251  01960E  0EF8               	movlw	248
 18252  019610  26E1               	addwf	fsr1l,f,c
 18253  019612  0EFF               	movlw	255
 18254  019614  22E2               	addwfc	fsr1h,f,c
 18255  019616  0012               	return		;funcret
 18256  019618                     __end_of___fleq:
 18257                           	opt callstack 0
 18258                           
 18259 ;; *************** function ___awmod *****************
 18260 ;; Defined at:
 18261 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 18262 ;; Parameters:    Size  Location     Type
 18263 ;;  dividend        2  [STACK] int 
 18264 ;;  divisor         2  [STACK] int 
 18265 ;; Auto vars:     Size  Location     Type
 18266 ;;  sign            1  [STACK] unsigned char 
 18267 ;;  counter         1  [STACK] unsigned char 
 18268 ;; Return value:  Size  Location     Type
 18269 ;;                  2  [STACK] int 
 18270 ;; Registers used:
 18271 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 18272 ;; Tracked objects:
 18273 ;;		On entry : 0/0
 18274 ;;		On exit  : 0/0
 18275 ;;		Unchanged: 0/0
 18276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18281 ;;Total ram usage:        0 bytes
 18282 ;; Hardware stack levels used:    1
 18283 ;; Hardware stack levels required when called:   15
 18284 ;; This function calls:
 18285 ;;		Nothing
 18286 ;; This function is called by:
 18287 ;;		_efgtoa
 18288 ;; This function uses a reentrant model
 18289 ;;
 18290                           
 18291                           	psect	text64
 18292  018B66                     __ptext64:
 18293                           	opt callstack 0
 18294  018B66                     ___awmod:
 18295                           	opt callstack 0
 18296                           
 18297                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18298  018B66  52E6               	movf	postinc1,f,c
 18299  018B68  52E6               	movf	postinc1,f,c
 18300                           
 18301                           ;stkvar	_sign @ sp[(-2)+0]
 18302                           
 18303                           ;incstack = 0
 18304 ;; hardware stack exceeded
 18305  018B6A  0EFE               	movlw	-2
 18306  018B6C  6AE3               	clrf	plusw1,c
 18307                           
 18308                           ;stkvar	_dividend @ sp[(-2)+-2]
 18309  018B6E  0EFD               	movlw	-3
 18310  018B70  AEE3               	btfss	plusw1,7,c
 18311  018B72  D009               	goto	l8248
 18312                           
 18313                           ;stkvar	_dividend @ sp[(-2)+-2]
 18314                           ;stkvar	_dividend @ sp[(-2)+-2]
 18315  018B74  0EFC               	movlw	-4
 18316  018B76  6CE3               	negf	plusw1,c
 18317  018B78  0EFD               	movlw	-3
 18318  018B7A  1EE3               	comf	plusw1,f,c
 18319  018B7C  B0D8               	btfsc	status,0,c
 18320  018B7E  2AE3               	incf	plusw1,f,c
 18321                           
 18322                           ;stkvar	_sign @ sp[(-2)+0]
 18323  018B80  0EFE               	movlw	-2
 18324  018B82  6AE3               	clrf	plusw1,c
 18325  018B84  2AE3               	incf	plusw1,f,c
 18326  018B86                     l8248:
 18327                           
 18328                           ;stkvar	_divisor @ sp[(-2)+-4]
 18329  018B86  0EFB               	movlw	-5
 18330  018B88  AEE3               	btfss	plusw1,7,c
 18331  018B8A  D006               	goto	l8252
 18332                           
 18333                           ;stkvar	_divisor @ sp[(-2)+-4]
 18334                           ;stkvar	_divisor @ sp[(-2)+-4]
 18335  018B8C  0EFA               	movlw	-6
 18336  018B8E  6CE3               	negf	plusw1,c
 18337  018B90  0EFB               	movlw	-5
 18338  018B92  1EE3               	comf	plusw1,f,c
 18339  018B94  B0D8               	btfsc	status,0,c
 18340  018B96  2AE3               	incf	plusw1,f,c
 18341  018B98                     l8252:
 18342                           
 18343                           ;stkvar	_divisor @ sp[(-2)+-4]
 18344  018B98  0EFA               	movlw	-6
 18345  018B9A  006F FF8C  F001    	movff	plusw1,btemp
 18346  018BA0  0EFB               	movlw	-5
 18347  018BA2  50E3               	movf	plusw1,w,c
 18348  018BA4  1001               	iorwf	btemp^0,w,c
 18349  018BA6  B4D8               	btfsc	status,2,c
 18350  018BA8  D053               	goto	u6810
 18351                           
 18352                           ;stkvar	_counter @ sp[(-2)+1]
 18353  018BAA  0EFF               	movlw	-1
 18354  018BAC  6AE3               	clrf	plusw1,c
 18355  018BAE  D012               	goto	L17
 18356  018BB0                     l8256:
 18357                           
 18358                           ;stkvar	_divisor @ sp[(-2)+-4]
 18359  018BB0  0EFA               	movlw	-6
 18360  018BB2  50E3               	movf	plusw1,w,c
 18361  018BB4  90D8               	bcf	status,0,c
 18362  018BB6  34E8               	rlcf	wreg,w,c
 18363  018BB8  6E01               	movwf	btemp^0,c
 18364  018BBA  0EFA               	movlw	-6
 18365  018BBC  0060  F007  FFE3   	movff	btemp,plusw1
 18366  018BC2  0EFB               	movlw	-5
 18367  018BC4  50E3               	movf	plusw1,w,c
 18368  018BC6  34E8               	rlcf	wreg,w,c
 18369  018BC8  6E01               	movwf	btemp^0,c
 18370  018BCA  0EFB               	movlw	-5
 18371  018BCC  0060  F007  FFE3   	movff	btemp,plusw1
 18372                           
 18373                           ;stkvar	_counter @ sp[(-2)+1]
 18374  018BD2  0EFF               	movlw	-1
 18375  018BD4                     L17:
 18376  018BD4  2AE3               	incf	plusw1,f,c
 18377                           
 18378                           ;stkvar	_divisor @ sp[(-2)+-4]
 18379  018BD6  0EFB               	movlw	-5
 18380  018BD8  AEE3               	btfss	plusw1,7,c
 18381  018BDA  D7EA               	goto	l8256
 18382  018BDC                     u6790:
 18383                           
 18384                           ;stkvar	_divisor @ sp[(-2)+-4]
 18385  018BDC  0EFA               	movlw	-6
 18386  018BDE  006F FF8C  F00B    	movff	plusw1,btemp+10
 18387  018BE4  0EFB               	movlw	-5
 18388  018BE6  006F FF8C  F00C    	movff	plusw1,btemp+11
 18389                           
 18390                           ;stkvar	_dividend @ sp[(-2)+-2]
 18391  018BEC  0EFC               	movlw	-4
 18392  018BEE  006F FF8C  F009    	movff	plusw1,btemp+8
 18393  018BF4  0EFD               	movlw	-3
 18394  018BF6  006F FF8C  F00A    	movff	plusw1,btemp+9
 18395  018BFC  500B               	movf	(btemp+10)^0,w,c
 18396  018BFE  5C09               	subwf	(btemp+8)^0,w,c
 18397  018C00  500C               	movf	(btemp+11)^0,w,c
 18398  018C02  580A               	subwfb	(btemp+9)^0,w,c
 18399  018C04  A0D8               	btfss	status,0,c
 18400  018C06  D014               	goto	l8266
 18401                           
 18402                           ;stkvar	_divisor @ sp[(-2)+-4]
 18403                           ;stkvar	_dividend @ sp[(-2)+-2]
 18404  018C08  0EFC               	movlw	-4
 18405  018C0A  50E3               	movf	plusw1,w,c
 18406  018C0C  6E01               	movwf	btemp^0,c
 18407  018C0E  0EFA               	movlw	-6
 18408  018C10  50E3               	movf	plusw1,w,c
 18409  018C12  5E01               	subwf	btemp^0,f,c
 18410  018C14  0EFC               	movlw	-4
 18411  018C16  0060  F007  FFE3   	movff	btemp,plusw1
 18412  018C1C  0EFD               	movlw	-3
 18413  018C1E  50E3               	movf	plusw1,w,c
 18414  018C20  6E01               	movwf	btemp^0,c
 18415  018C22  0EFB               	movlw	-5
 18416  018C24  50E3               	movf	plusw1,w,c
 18417  018C26  5A01               	subwfb	btemp^0,f,c
 18418  018C28  0EFD               	movlw	-3
 18419  018C2A  0060  F007  FFE3   	movff	btemp,plusw1
 18420  018C30                     l8266:
 18421                           
 18422                           ;stkvar	_divisor @ sp[(-2)+-4]
 18423  018C30  90D8               	bcf	status,0,c
 18424  018C32  0EFB               	movlw	-5
 18425  018C34  32E3               	rrcf	plusw1,f,c
 18426  018C36  0EFA               	movlw	-6
 18427  018C38  32E3               	rrcf	plusw1,f,c
 18428                           
 18429                           ;stkvar	_counter @ sp[(-2)+1]
 18430  018C3A  0EFF               	movlw	-1
 18431  018C3C  50E3               	movf	plusw1,w,c
 18432  018C3E  6E01               	movwf	btemp^0,c
 18433  018C40  0E01               	movlw	1
 18434  018C42  5E01               	subwf	btemp^0,f,c
 18435  018C44  0EFF               	movlw	-1
 18436  018C46  0060  F007  FFE3   	movff	btemp,plusw1
 18437  018C4C  A4D8               	btfss	status,2,c
 18438  018C4E  D7C6               	goto	u6790
 18439  018C50                     u6810:
 18440                           
 18441                           ;stkvar	_sign @ sp[(-2)+0]
 18442  018C50  0EFE               	movlw	-2
 18443  018C52  50E3               	movf	plusw1,w,c
 18444  018C54  B4D8               	btfsc	status,2,c
 18445  018C56  D006               	goto	l8274
 18446                           
 18447                           ;stkvar	_dividend @ sp[(-2)+-2]
 18448                           ;stkvar	_dividend @ sp[(-2)+-2]
 18449  018C58  0EFC               	movlw	-4
 18450  018C5A  6CE3               	negf	plusw1,c
 18451  018C5C  0EFD               	movlw	-3
 18452  018C5E  1EE3               	comf	plusw1,f,c
 18453  018C60  B0D8               	btfsc	status,0,c
 18454  018C62  2AE3               	incf	plusw1,f,c
 18455  018C64                     l8274:
 18456                           
 18457                           ;stkvar	_dividend @ sp[(-2)+-2]
 18458  018C64  0EFC               	movlw	-4
 18459  018C66  006F FF8C  F001    	movff	plusw1,btemp
 18460  018C6C  0EFD               	movlw	-3
 18461  018C6E  006F FF8C  F002    	movff	plusw1,btemp+1
 18462                           
 18463                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18464  018C74  0EFA               	movlw	250
 18465  018C76  26E1               	addwf	fsr1l,f,c
 18466  018C78  0EFF               	movlw	255
 18467  018C7A  22E2               	addwfc	fsr1h,f,c
 18468  018C7C  0012               	return		;funcret
 18469  018C7E                     __end_of___awmod:
 18470                           	opt callstack 0
 18471                           
 18472 ;; *************** function ___awdiv *****************
 18473 ;; Defined at:
 18474 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 18475 ;; Parameters:    Size  Location     Type
 18476 ;;  dividend        2  [STACK] int 
 18477 ;;  divisor         2  [STACK] int 
 18478 ;; Auto vars:     Size  Location     Type
 18479 ;;  quotient        2  [STACK] int 
 18480 ;;  sign            1  [STACK] unsigned char 
 18481 ;;  counter         1  [STACK] unsigned char 
 18482 ;; Return value:  Size  Location     Type
 18483 ;;                  2  [STACK] int 
 18484 ;; Registers used:
 18485 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 18486 ;; Tracked objects:
 18487 ;;		On entry : 0/0
 18488 ;;		On exit  : 0/0
 18489 ;;		Unchanged: 0/0
 18490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18495 ;;Total ram usage:        0 bytes
 18496 ;; Hardware stack levels used:    1
 18497 ;; Hardware stack levels required when called:   15
 18498 ;; This function calls:
 18499 ;;		Nothing
 18500 ;; This function is called by:
 18501 ;;		_efgtoa
 18502 ;; This function uses a reentrant model
 18503 ;;
 18504                           
 18505                           	psect	text65
 18506  01854A                     __ptext65:
 18507                           	opt callstack 0
 18508  01854A                     ___awdiv:
 18509                           	opt callstack 0
 18510                           
 18511                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18512  01854A  52E6               	movf	postinc1,f,c
 18513  01854C  52E6               	movf	postinc1,f,c
 18514  01854E  52E6               	movf	postinc1,f,c
 18515  018550  52E6               	movf	postinc1,f,c
 18516                           
 18517                           ;stkvar	_sign @ sp[(-4)+2]
 18518                           
 18519                           ;incstack = 0
 18520 ;; hardware stack exceeded
 18521  018552  0EFE               	movlw	-2
 18522  018554  6AE3               	clrf	plusw1,c
 18523                           
 18524                           ;stkvar	_divisor @ sp[(-4)+-4]
 18525  018556  0EF9               	movlw	-7
 18526  018558  AEE3               	btfss	plusw1,7,c
 18527  01855A  D009               	goto	l8202
 18528                           
 18529                           ;stkvar	_divisor @ sp[(-4)+-4]
 18530                           ;stkvar	_divisor @ sp[(-4)+-4]
 18531  01855C  0EF8               	movlw	-8
 18532  01855E  6CE3               	negf	plusw1,c
 18533  018560  0EF9               	movlw	-7
 18534  018562  1EE3               	comf	plusw1,f,c
 18535  018564  B0D8               	btfsc	status,0,c
 18536  018566  2AE3               	incf	plusw1,f,c
 18537                           
 18538                           ;stkvar	_sign @ sp[(-4)+2]
 18539  018568  0EFE               	movlw	-2
 18540  01856A  6AE3               	clrf	plusw1,c
 18541  01856C  2AE3               	incf	plusw1,f,c
 18542  01856E                     l8202:
 18543                           
 18544                           ;stkvar	_dividend @ sp[(-4)+-2]
 18545  01856E  0EFB               	movlw	-5
 18546  018570  AEE3               	btfss	plusw1,7,c
 18547  018572  D008               	goto	l8208
 18548                           
 18549                           ;stkvar	_dividend @ sp[(-4)+-2]
 18550                           ;stkvar	_dividend @ sp[(-4)+-2]
 18551  018574  0EFA               	movlw	-6
 18552  018576  6CE3               	negf	plusw1,c
 18553  018578  0EFB               	movlw	-5
 18554  01857A  1EE3               	comf	plusw1,f,c
 18555  01857C  B0D8               	btfsc	status,0,c
 18556  01857E  2AE3               	incf	plusw1,f,c
 18557                           
 18558                           ;stkvar	_sign @ sp[(-4)+2]
 18559  018580  0EFE               	movlw	-2
 18560  018582  70E3               	btg	plusw1,0,c
 18561  018584                     l8208:
 18562                           
 18563                           ;stkvar	_quotient @ sp[(-4)+0]
 18564  018584  0EFC               	movlw	-4
 18565  018586  6AE3               	clrf	plusw1,c
 18566  018588  0EFD               	movlw	-3
 18567  01858A  6AE3               	clrf	plusw1,c
 18568                           
 18569                           ;stkvar	_divisor @ sp[(-4)+-4]
 18570  01858C  0EF8               	movlw	-8
 18571  01858E  006F FF8C  F001    	movff	plusw1,btemp
 18572  018594  0EF9               	movlw	-7
 18573  018596  50E3               	movf	plusw1,w,c
 18574  018598  1001               	iorwf	btemp^0,w,c
 18575  01859A  B4D8               	btfsc	status,2,c
 18576  01859C  D066               	goto	u6740
 18577                           
 18578                           ;stkvar	_counter @ sp[(-4)+3]
 18579  01859E  0EFF               	movlw	-1
 18580  0185A0  6AE3               	clrf	plusw1,c
 18581  0185A2  D012               	goto	L18
 18582  0185A4                     l8214:
 18583                           
 18584                           ;stkvar	_divisor @ sp[(-4)+-4]
 18585  0185A4  0EF8               	movlw	-8
 18586  0185A6  50E3               	movf	plusw1,w,c
 18587  0185A8  90D8               	bcf	status,0,c
 18588  0185AA  34E8               	rlcf	wreg,w,c
 18589  0185AC  6E01               	movwf	btemp^0,c
 18590  0185AE  0EF8               	movlw	-8
 18591  0185B0  0060  F007  FFE3   	movff	btemp,plusw1
 18592  0185B6  0EF9               	movlw	-7
 18593  0185B8  50E3               	movf	plusw1,w,c
 18594  0185BA  34E8               	rlcf	wreg,w,c
 18595  0185BC  6E01               	movwf	btemp^0,c
 18596  0185BE  0EF9               	movlw	-7
 18597  0185C0  0060  F007  FFE3   	movff	btemp,plusw1
 18598                           
 18599                           ;stkvar	_counter @ sp[(-4)+3]
 18600  0185C6  0EFF               	movlw	-1
 18601  0185C8                     L18:
 18602  0185C8  2AE3               	incf	plusw1,f,c
 18603                           
 18604                           ;stkvar	_divisor @ sp[(-4)+-4]
 18605  0185CA  0EF9               	movlw	-7
 18606  0185CC  AEE3               	btfss	plusw1,7,c
 18607  0185CE  D7EA               	goto	l8214
 18608  0185D0                     u6720:
 18609                           
 18610                           ;stkvar	_quotient @ sp[(-4)+0]
 18611  0185D0  0EFC               	movlw	-4
 18612  0185D2  50E3               	movf	plusw1,w,c
 18613  0185D4  90D8               	bcf	status,0,c
 18614  0185D6  34E8               	rlcf	wreg,w,c
 18615  0185D8  6E01               	movwf	btemp^0,c
 18616  0185DA  0EFC               	movlw	-4
 18617  0185DC  0060  F007  FFE3   	movff	btemp,plusw1
 18618  0185E2  0EFD               	movlw	-3
 18619  0185E4  50E3               	movf	plusw1,w,c
 18620  0185E6  34E8               	rlcf	wreg,w,c
 18621  0185E8  6E01               	movwf	btemp^0,c
 18622  0185EA  0EFD               	movlw	-3
 18623  0185EC  0060  F007  FFE3   	movff	btemp,plusw1
 18624                           
 18625                           ;stkvar	_divisor @ sp[(-4)+-4]
 18626  0185F2  0EF8               	movlw	-8
 18627  0185F4  006F FF8C  F00B    	movff	plusw1,btemp+10
 18628  0185FA  0EF9               	movlw	-7
 18629  0185FC  006F FF8C  F00C    	movff	plusw1,btemp+11
 18630                           
 18631                           ;stkvar	_dividend @ sp[(-4)+-2]
 18632  018602  0EFA               	movlw	-6
 18633  018604  006F FF8C  F009    	movff	plusw1,btemp+8
 18634  01860A  0EFB               	movlw	-5
 18635  01860C  006F FF8C  F00A    	movff	plusw1,btemp+9
 18636  018612  500B               	movf	(btemp+10)^0,w,c
 18637  018614  5C09               	subwf	(btemp+8)^0,w,c
 18638  018616  500C               	movf	(btemp+11)^0,w,c
 18639  018618  580A               	subwfb	(btemp+9)^0,w,c
 18640  01861A  A0D8               	btfss	status,0,c
 18641  01861C  D016               	goto	l8228
 18642                           
 18643                           ;stkvar	_divisor @ sp[(-4)+-4]
 18644                           ;stkvar	_dividend @ sp[(-4)+-2]
 18645  01861E  0EFA               	movlw	-6
 18646  018620  50E3               	movf	plusw1,w,c
 18647  018622  6E01               	movwf	btemp^0,c
 18648  018624  0EF8               	movlw	-8
 18649  018626  50E3               	movf	plusw1,w,c
 18650  018628  5E01               	subwf	btemp^0,f,c
 18651  01862A  0EFA               	movlw	-6
 18652  01862C  0060  F007  FFE3   	movff	btemp,plusw1
 18653  018632  0EFB               	movlw	-5
 18654  018634  50E3               	movf	plusw1,w,c
 18655  018636  6E01               	movwf	btemp^0,c
 18656  018638  0EF9               	movlw	-7
 18657  01863A  50E3               	movf	plusw1,w,c
 18658  01863C  5A01               	subwfb	btemp^0,f,c
 18659  01863E  0EFB               	movlw	-5
 18660  018640  0060  F007  FFE3   	movff	btemp,plusw1
 18661                           
 18662                           ;stkvar	_quotient @ sp[(-4)+0]
 18663  018646  0EFC               	movlw	-4
 18664  018648  80E3               	bsf	plusw1,0,c
 18665  01864A                     l8228:
 18666                           
 18667                           ;stkvar	_divisor @ sp[(-4)+-4]
 18668  01864A  90D8               	bcf	status,0,c
 18669  01864C  0EF9               	movlw	-7
 18670  01864E  32E3               	rrcf	plusw1,f,c
 18671  018650  0EF8               	movlw	-8
 18672  018652  32E3               	rrcf	plusw1,f,c
 18673                           
 18674                           ;stkvar	_counter @ sp[(-4)+3]
 18675  018654  0EFF               	movlw	-1
 18676  018656  50E3               	movf	plusw1,w,c
 18677  018658  6E01               	movwf	btemp^0,c
 18678  01865A  0E01               	movlw	1
 18679  01865C  5E01               	subwf	btemp^0,f,c
 18680  01865E  0EFF               	movlw	-1
 18681  018660  0060  F007  FFE3   	movff	btemp,plusw1
 18682  018666  A4D8               	btfss	status,2,c
 18683  018668  D7B3               	goto	u6720
 18684  01866A                     u6740:
 18685                           
 18686                           ;stkvar	_sign @ sp[(-4)+2]
 18687  01866A  0EFE               	movlw	-2
 18688  01866C  50E3               	movf	plusw1,w,c
 18689  01866E  B4D8               	btfsc	status,2,c
 18690  018670  D006               	goto	l8236
 18691                           
 18692                           ;stkvar	_quotient @ sp[(-4)+0]
 18693                           ;stkvar	_quotient @ sp[(-4)+0]
 18694  018672  0EFC               	movlw	-4
 18695  018674  6CE3               	negf	plusw1,c
 18696  018676  0EFD               	movlw	-3
 18697  018678  1EE3               	comf	plusw1,f,c
 18698  01867A  B0D8               	btfsc	status,0,c
 18699  01867C  2AE3               	incf	plusw1,f,c
 18700  01867E                     l8236:
 18701                           
 18702                           ;stkvar	_quotient @ sp[(-4)+0]
 18703  01867E  0EFC               	movlw	-4
 18704  018680  006F FF8C  F001    	movff	plusw1,btemp
 18705  018686  0EFD               	movlw	-3
 18706  018688  006F FF8C  F002    	movff	plusw1,btemp+1
 18707                           
 18708                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18709  01868E  0EF8               	movlw	248
 18710  018690  26E1               	addwf	fsr1l,f,c
 18711  018692  0EFF               	movlw	255
 18712  018694  22E2               	addwfc	fsr1h,f,c
 18713  018696  0012               	return		;funcret
 18714  018698                     __end_of___awdiv:
 18715                           	opt callstack 0
 18716                           
 18717 ;; *************** function _dtoa *****************
 18718 ;; Defined at:
 18719 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18720 ;; Parameters:    Size  Location     Type
 18721 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18722 ;;		 -> f(6), NULL(0), 
 18723 ;;  d               8  [STACK] long long 
 18724 ;; Auto vars:     Size  Location     Type
 18725 ;;  n               8  [STACK] long long 
 18726 ;;  i               2  [STACK] int 
 18727 ;;  s               2  [STACK] int 
 18728 ;;  w               2  [STACK] int 
 18729 ;;  p               2  [STACK] int 
 18730 ;; Return value:  Size  Location     Type
 18731 ;;                  2  [STACK] int 
 18732 ;; Registers used:
 18733 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 18734 ;; Tracked objects:
 18735 ;;		On entry : 0/0
 18736 ;;		On exit  : 0/0
 18737 ;;		Unchanged: 0/0
 18738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18743 ;;Total ram usage:        0 bytes
 18744 ;; Hardware stack levels used:    1
 18745 ;; Hardware stack levels required when called:   20
 18746 ;; This function calls:
 18747 ;;		___aodiv
 18748 ;;		___aomod
 18749 ;;		_abs
 18750 ;;		_pad
 18751 ;; This function is called by:
 18752 ;;		_vfpfcnvrt
 18753 ;; This function uses a reentrant model
 18754 ;;
 18755                           
 18756                           	psect	text66
 18757  014EF6                     __ptext66:
 18758                           	opt callstack 0
 18759  014EF6                     _dtoa:
 18760                           	opt callstack 0
 18761                           
 18762                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 18763  014EF6  0E12               	movlw	18
 18764  014EF8  26E1               	addwf	fsr1l,f,c
 18765  014EFA  0E00               	movlw	0
 18766  014EFC  22E2               	addwfc	fsr1h,f,c
 18767                           
 18768                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 18769                           ;stkvar	_d @ sp[(-18)+-10]
 18770                           
 18771                           ;incstack = 0
 18772 ;; hardware stack exceeded
 18773  014EFE  0EE4               	movlw	228
 18774  014F00  24E1               	addwf	fsr1l,w,c
 18775  014F02  6ED9               	movwf	fsr2l,c
 18776  014F04  0EFF               	movlw	255
 18777  014F06  20E2               	addwfc	fsr1h,w,c
 18778  014F08  6EDA               	movwf	fsr2h,c
 18779                           
 18780                           ;stkvar	_n @ sp[(-18)+2]
 18781  014F0A  0E08               	movlw	8
 18782  014F0C  6E01               	movwf	btemp^0,c
 18783  014F0E  0EF0               	movlw	-16
 18784  014F10                     us1041999:
 18785  014F10  006F FF7B FFE3     	movff	postinc2,plusw1
 18786  014F16  28E8               	incf	wreg,w,c
 18787  014F18  2E01               	decfsz	btemp^0,f,c
 18788  014F1A  D7FA               	bra	us1041999
 18789                           
 18790                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 18791                           ;stkvar	_n @ sp[(-18)+2]
 18792  014F1C  0EF7               	movlw	-9
 18793  014F1E  AEE3               	btfss	plusw1,7,c
 18794  014F20  D002               	goto	u10420
 18795  014F22  0E01               	movlw	1
 18796  014F24  D001               	goto	u10430
 18797  014F26                     u10420:
 18798  014F26  0E00               	movlw	0
 18799  014F28                     u10430:
 18800  014F28  6E0B               	movwf	(btemp+10)^0,c
 18801  014F2A  6A0C               	clrf	(btemp+11)^0,c
 18802                           
 18803                           ;stkvar	_s @ sp[(-18)+12]
 18804  014F2C  0EFA               	movlw	-6
 18805  014F2E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18806  014F34  0EFB               	movlw	-5
 18807  014F36  0060  F033  FFE3   	movff	btemp+11,plusw1
 18808                           
 18809                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 18810                           ;stkvar	_s @ sp[(-18)+12]
 18811  014F3C  0EFA               	movlw	-6
 18812  014F3E  006F FF8C  F001    	movff	plusw1,btemp
 18813  014F44  0EFB               	movlw	-5
 18814  014F46  50E3               	movf	plusw1,w,c
 18815  014F48  1001               	iorwf	btemp^0,w,c
 18816  014F4A  B4D8               	btfsc	status,2,c
 18817  014F4C  D025               	goto	u10450
 18818                           
 18819                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 18820                           ;stkvar	_n @ sp[(-18)+2]
 18821                           ;stkvar	_n @ sp[(-18)+2]
 18822  014F4E  0EF0               	movlw	-16
 18823  014F50  6CE3               	negf	plusw1,c
 18824  014F52  0EF1               	movlw	-15
 18825  014F54  1EE3               	comf	plusw1,f,c
 18826  014F56  0EF2               	movlw	-14
 18827  014F58  1EE3               	comf	plusw1,f,c
 18828  014F5A  0EF3               	movlw	-13
 18829  014F5C  1EE3               	comf	plusw1,f,c
 18830  014F5E  0EF4               	movlw	-12
 18831  014F60  1EE3               	comf	plusw1,f,c
 18832  014F62  0EF5               	movlw	-11
 18833  014F64  1EE3               	comf	plusw1,f,c
 18834  014F66  0EF6               	movlw	-10
 18835  014F68  1EE3               	comf	plusw1,f,c
 18836  014F6A  0EF7               	movlw	-9
 18837  014F6C  1EE3               	comf	plusw1,f,c
 18838  014F6E  E314               	bnc	u10450
 18839  014F70  0EF1               	movlw	-15
 18840  014F72  2AE3               	incf	plusw1,f,c
 18841  014F74  E311               	bnc	u10450
 18842  014F76  0EF2               	movlw	-14
 18843  014F78  2AE3               	incf	plusw1,f,c
 18844  014F7A  E30E               	bnc	u10450
 18845  014F7C  0EF3               	movlw	-13
 18846  014F7E  2AE3               	incf	plusw1,f,c
 18847  014F80  E30B               	bnc	u10450
 18848  014F82  0EF4               	movlw	-12
 18849  014F84  2AE3               	incf	plusw1,f,c
 18850  014F86  E308               	bnc	u10450
 18851  014F88  0EF5               	movlw	-11
 18852  014F8A  2AE3               	incf	plusw1,f,c
 18853  014F8C  E305               	bnc	u10450
 18854  014F8E  0EF6               	movlw	-10
 18855  014F90  2AE3               	incf	plusw1,f,c
 18856  014F92  E302               	bnc	u10450
 18857  014F94  0EF7               	movlw	-9
 18858  014F96  2AE3               	incf	plusw1,f,c
 18859  014F98                     u10450:
 18860                           
 18861                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 18862  014F98  AE24               	btfss	(_prec+1)^0,7,c
 18863                           
 18864                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 18865  014F9A  9225               	bcf	_flags^0,1,c
 18866                           
 18867                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 18868  014F9C  BE24               	btfsc	(_prec+1)^0,7,c
 18869  014F9E  D005               	goto	u10470
 18870  014FA0  5024               	movf	(_prec+1)^0,w,c
 18871  014FA2  E110               	bnz	l11444
 18872  014FA4  0423               	decf	_prec^0,w,c
 18873  014FA6  B0D8               	btfsc	status,0,c
 18874  014FA8  D00D               	goto	l11444
 18875  014FAA                     u10470:
 18876  014FAA  0E01               	movlw	1
 18877  014FAC  6E0B               	movwf	(btemp+10)^0,c
 18878  014FAE  0E00               	movlw	0
 18879  014FB0  6E0C               	movwf	(btemp+11)^0,c
 18880                           
 18881                           ;stkvar	_p @ sp[(-18)+16]
 18882  014FB2  0EFE               	movlw	-2
 18883  014FB4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18884  014FBA  0EFF               	movlw	-1
 18885  014FBC  0060  F033  FFE3   	movff	btemp+11,plusw1
 18886  014FC2  D008               	goto	l2124
 18887  014FC4                     l11444:
 18888                           
 18889                           ;stkvar	_p @ sp[(-18)+16]
 18890  014FC4  0EFE               	movlw	-2
 18891  014FC6  0060  F08F  FFE3   	movff	_prec,plusw1
 18892  014FCC  0EFF               	movlw	-1
 18893  014FCE  0060  F093  FFE3   	movff	_prec+1,plusw1
 18894  014FD4                     l2124:
 18895                           
 18896                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 18897                           ;stkvar	_w @ sp[(-18)+14]
 18898  014FD4  0EFC               	movlw	-4
 18899  014FD6  0060  F087  FFE3   	movff	_width,plusw1
 18900  014FDC  0EFD               	movlw	-3
 18901  014FDE  0060  F08B  FFE3   	movff	_width+1,plusw1
 18902                           
 18903                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 18904                           ;stkvar	_s @ sp[(-18)+12]
 18905  014FE4  0EFA               	movlw	-6
 18906  014FE6  006F FF8C  F001    	movff	plusw1,btemp
 18907  014FEC  0EFB               	movlw	-5
 18908  014FEE  50E3               	movf	plusw1,w,c
 18909  014FF0  1001               	iorwf	btemp^0,w,c
 18910  014FF2  A4D8               	btfss	status,2,c
 18911  014FF4  D002               	goto	u10490
 18912  014FF6  A425               	btfss	_flags^0,2,c
 18913  014FF8  D00A               	goto	l11452
 18914  014FFA                     u10490:
 18915                           
 18916                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 18917                           ;stkvar	_w @ sp[(-18)+14]
 18918  014FFA  50E1               	movf	fsr1l,w,c
 18919  014FFC  0FFC               	addlw	-4
 18920  014FFE  6ED9               	movwf	fsr2l,c
 18921  015000  50E2               	movf	fsr1h,w,c
 18922  015002  6EDA               	movwf	fsr2h,c
 18923  015004  0EFF               	movlw	255
 18924  015006  22DA               	addwfc	fsr2h,f,c
 18925  015008  06DE               	decf	postinc2,f,c
 18926  01500A  0E00               	movlw	0
 18927  01500C  5ADD               	subwfb	postdec2,f,c
 18928  01500E                     l11452:
 18929                           
 18930                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 18931  01500E  0E4F               	movlw	79
 18932  015010  6E0B               	movwf	(btemp+10)^0,c
 18933  015012  0E00               	movlw	0
 18934  015014  6E0C               	movwf	(btemp+11)^0,c
 18935                           
 18936                           ;stkvar	_i @ sp[(-18)+10]
 18937  015016  0EF8               	movlw	-8
 18938  015018  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18939  01501E  0EF9               	movlw	-7
 18940  015020  0060  F033  FFE3   	movff	btemp+11,plusw1
 18941                           
 18942                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 18943  015026  0103               	movlb	3	; () banked
 18944  015028  6BE3               	clrf	(_dbuf+79)& (0+255),b
 18945                           
 18946                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 18947  01502A  D109               	goto	l11466
 18948  01502C                     l11456:
 18949                           
 18950                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 18951                           ;stkvar	_i @ sp[(-18)+10]
 18952  01502C  50E1               	movf	fsr1l,w,c
 18953  01502E  0FF8               	addlw	-8
 18954  015030  6ED9               	movwf	fsr2l,c
 18955  015032  50E2               	movf	fsr1h,w,c
 18956  015034  6EDA               	movwf	fsr2h,c
 18957  015036  0EFF               	movlw	255
 18958  015038  22DA               	addwfc	fsr2h,f,c
 18959  01503A  06DE               	decf	postinc2,f,c
 18960  01503C  0E00               	movlw	0
 18961  01503E  5ADD               	subwfb	postdec2,f,c
 18962                           
 18963                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 18964  015040  0E0A               	movlw	10
 18965  015042  6EE6               	movwf	postinc1,c
 18966  015044  0E00               	movlw	0
 18967  015046  6EE6               	movwf	postinc1,c
 18968  015048  0E00               	movlw	0
 18969  01504A  6EE6               	movwf	postinc1,c
 18970  01504C  0E00               	movlw	0
 18971  01504E  6EE6               	movwf	postinc1,c
 18972  015050  0E00               	movlw	0
 18973  015052  6EE6               	movwf	postinc1,c
 18974  015054  0E00               	movlw	0
 18975  015056  6EE6               	movwf	postinc1,c
 18976  015058  0E00               	movlw	0
 18977  01505A  6EE6               	movwf	postinc1,c
 18978  01505C  0E00               	movlw	0
 18979  01505E  6EE6               	movwf	postinc1,c
 18980                           
 18981                           ;stkvar	_n @ sp[(-26)+2]
 18982  015060  50E1               	movf	fsr1l,w,c
 18983  015062  0FE8               	addlw	-24
 18984  015064  6ED9               	movwf	fsr2l,c
 18985  015066  50E2               	movf	fsr1h,w,c
 18986  015068  6EDA               	movwf	fsr2h,c
 18987  01506A  0EFF               	movlw	255
 18988  01506C  22DA               	addwfc	fsr2h,f,c
 18989  01506E  006F FF7B FFE6     	movff	postinc2,postinc1
 18990  015074  006F FF7B FFE6     	movff	postinc2,postinc1
 18991  01507A  006F FF7B FFE6     	movff	postinc2,postinc1
 18992  015080  006F FF7B FFE6     	movff	postinc2,postinc1
 18993  015086  006F FF7B FFE6     	movff	postinc2,postinc1
 18994  01508C  006F FF7B FFE6     	movff	postinc2,postinc1
 18995  015092  006F FF7B FFE6     	movff	postinc2,postinc1
 18996  015098  006F FF7B FFE6     	movff	postinc2,postinc1
 18997  01509E  EC73  F0B7         	call	___aomod	;wreg free
 18998  0150A2  52E5               	movf	postdec1,f,c
 18999  0150A4  006F FF9C  F018    	movff	indf1,btemp+23
 19000  0150AA  52E5               	movf	postdec1,f,c
 19001  0150AC  006F FF9C  F017    	movff	indf1,btemp+22
 19002  0150B2  52E5               	movf	postdec1,f,c
 19003  0150B4  006F FF9C  F016    	movff	indf1,btemp+21
 19004  0150BA  52E5               	movf	postdec1,f,c
 19005  0150BC  006F FF9C  F015    	movff	indf1,btemp+20
 19006  0150C2  52E5               	movf	postdec1,f,c
 19007  0150C4  006F FF9C  F014    	movff	indf1,btemp+19
 19008  0150CA  52E5               	movf	postdec1,f,c
 19009  0150CC  006F FF9C  F013    	movff	indf1,btemp+18
 19010  0150D2  52E5               	movf	postdec1,f,c
 19011  0150D4  006F FF9C  F012    	movff	indf1,btemp+17
 19012  0150DA  52E5               	movf	postdec1,f,c
 19013  0150DC  006F FF9C  F011    	movff	indf1,btemp+16
 19014  0150E2  0EF8               	movlw	248
 19015  0150E4  26E1               	addwf	fsr1l,f,c
 19016  0150E6  0EFF               	movlw	255
 19017  0150E8  22E2               	addwfc	fsr1h,f,c
 19018  0150EA  0060  F044  F00B   	movff	btemp+16,btemp+10
 19019  0150F0  0060  F048  F00C   	movff	btemp+17,btemp+11
 19020  0150F6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19021  0150FC  0060  F033  FFE6   	movff	btemp+11,postinc1
 19022  015102  ECEA  F0D2         	call	_abs	;wreg free
 19023  015106  0E30               	movlw	48
 19024  015108  2601               	addwf	btemp^0,f,c
 19025                           
 19026                           ;stkvar	_i @ sp[(-18)+10]
 19027  01510A  0EF8               	movlw	-8
 19028  01510C  006F FF8C  F00B    	movff	plusw1,btemp+10
 19029  015112  0EF9               	movlw	-7
 19030  015114  006F FF8C  F00C    	movff	plusw1,btemp+11
 19031  01511A  0E94               	movlw	low _dbuf
 19032  01511C  240B               	addwf	(btemp+10)^0,w,c
 19033  01511E  6ED9               	movwf	fsr2l,c
 19034  015120  0E03               	movlw	high _dbuf
 19035  015122  200C               	addwfc	(btemp+11)^0,w,c
 19036  015124  6EDA               	movwf	fsr2h,c
 19037  015126  0060  F007  FFDF   	movff	btemp,indf2
 19038                           
 19039                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 19040                           ;stkvar	_p @ sp[(-18)+16]
 19041  01512C  50E1               	movf	fsr1l,w,c
 19042  01512E  0FFE               	addlw	-2
 19043  015130  6ED9               	movwf	fsr2l,c
 19044  015132  50E2               	movf	fsr1h,w,c
 19045  015134  6EDA               	movwf	fsr2h,c
 19046  015136  0EFF               	movlw	255
 19047  015138  22DA               	addwfc	fsr2h,f,c
 19048  01513A  06DE               	decf	postinc2,f,c
 19049  01513C  0E00               	movlw	0
 19050  01513E  5ADD               	subwfb	postdec2,f,c
 19051                           
 19052                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 19053                           ;stkvar	_w @ sp[(-18)+14]
 19054  015140  50E1               	movf	fsr1l,w,c
 19055  015142  0FFC               	addlw	-4
 19056  015144  6ED9               	movwf	fsr2l,c
 19057  015146  50E2               	movf	fsr1h,w,c
 19058  015148  6EDA               	movwf	fsr2h,c
 19059  01514A  0EFF               	movlw	255
 19060  01514C  22DA               	addwfc	fsr2h,f,c
 19061  01514E  06DE               	decf	postinc2,f,c
 19062  015150  0E00               	movlw	0
 19063  015152  5ADD               	subwfb	postdec2,f,c
 19064                           
 19065                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 19066  015154  0E0A               	movlw	10
 19067  015156  6EE6               	movwf	postinc1,c
 19068  015158  0E00               	movlw	0
 19069  01515A  6EE6               	movwf	postinc1,c
 19070  01515C  0E00               	movlw	0
 19071  01515E  6EE6               	movwf	postinc1,c
 19072  015160  0E00               	movlw	0
 19073  015162  6EE6               	movwf	postinc1,c
 19074  015164  0E00               	movlw	0
 19075  015166  6EE6               	movwf	postinc1,c
 19076  015168  0E00               	movlw	0
 19077  01516A  6EE6               	movwf	postinc1,c
 19078  01516C  0E00               	movlw	0
 19079  01516E  6EE6               	movwf	postinc1,c
 19080  015170  0E00               	movlw	0
 19081  015172  6EE6               	movwf	postinc1,c
 19082                           
 19083                           ;stkvar	_n @ sp[(-26)+2]
 19084  015174  50E1               	movf	fsr1l,w,c
 19085  015176  0FE8               	addlw	-24
 19086  015178  6ED9               	movwf	fsr2l,c
 19087  01517A  50E2               	movf	fsr1h,w,c
 19088  01517C  6EDA               	movwf	fsr2h,c
 19089  01517E  0EFF               	movlw	255
 19090  015180  22DA               	addwfc	fsr2h,f,c
 19091  015182  006F FF7B FFE6     	movff	postinc2,postinc1
 19092  015188  006F FF7B FFE6     	movff	postinc2,postinc1
 19093  01518E  006F FF7B FFE6     	movff	postinc2,postinc1
 19094  015194  006F FF7B FFE6     	movff	postinc2,postinc1
 19095  01519A  006F FF7B FFE6     	movff	postinc2,postinc1
 19096  0151A0  006F FF7B FFE6     	movff	postinc2,postinc1
 19097  0151A6  006F FF7B FFE6     	movff	postinc2,postinc1
 19098  0151AC  006F FF7B FFE6     	movff	postinc2,postinc1
 19099  0151B2  ECF9  F0B4         	call	___aodiv	;wreg free
 19100  0151B6  52E5               	movf	postdec1,f,c
 19101  0151B8  006F FF9C  F018    	movff	indf1,btemp+23
 19102  0151BE  52E5               	movf	postdec1,f,c
 19103  0151C0  006F FF9C  F017    	movff	indf1,btemp+22
 19104  0151C6  52E5               	movf	postdec1,f,c
 19105  0151C8  006F FF9C  F016    	movff	indf1,btemp+21
 19106  0151CE  52E5               	movf	postdec1,f,c
 19107  0151D0  006F FF9C  F015    	movff	indf1,btemp+20
 19108  0151D6  52E5               	movf	postdec1,f,c
 19109  0151D8  006F FF9C  F014    	movff	indf1,btemp+19
 19110  0151DE  52E5               	movf	postdec1,f,c
 19111  0151E0  006F FF9C  F013    	movff	indf1,btemp+18
 19112  0151E6  52E5               	movf	postdec1,f,c
 19113  0151E8  006F FF9C  F012    	movff	indf1,btemp+17
 19114  0151EE  52E5               	movf	postdec1,f,c
 19115  0151F0  006F FF9C  F011    	movff	indf1,btemp+16
 19116  0151F6  0EF8               	movlw	248
 19117  0151F8  26E1               	addwf	fsr1l,f,c
 19118  0151FA  0EFF               	movlw	255
 19119  0151FC  22E2               	addwfc	fsr1h,f,c
 19120                           
 19121                           ;stkvar	_n @ sp[(-18)+2]
 19122  0151FE  0EF0               	movlw	-16
 19123  015200  0060  F047  FFE3   	movff	btemp+16,plusw1
 19124  015206  0EF1               	movlw	-15
 19125  015208  0060  F04B  FFE3   	movff	btemp+17,plusw1
 19126  01520E  0EF2               	movlw	-14
 19127  015210  0060  F04F  FFE3   	movff	btemp+18,plusw1
 19128  015216  0EF3               	movlw	-13
 19129  015218  0060  F053  FFE3   	movff	btemp+19,plusw1
 19130  01521E  0EF4               	movlw	-12
 19131  015220  0060  F057  FFE3   	movff	btemp+20,plusw1
 19132  015226  0EF5               	movlw	-11
 19133  015228  0060  F05B  FFE3   	movff	btemp+21,plusw1
 19134  01522E  0EF6               	movlw	-10
 19135  015230  0060  F05F  FFE3   	movff	btemp+22,plusw1
 19136  015236  0EF7               	movlw	-9
 19137  015238  0060  F063  FFE3   	movff	btemp+23,plusw1
 19138  01523E                     l11466:
 19139                           
 19140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19141                           ;stkvar	_i @ sp[(-18)+10]
 19142  01523E  0EF9               	movlw	-7
 19143  015240  BEE3               	btfsc	plusw1,7,c
 19144  015242  D036               	goto	u10540
 19145  015244  0EF9               	movlw	-7
 19146  015246  50E3               	movf	plusw1,w,c
 19147  015248  E104               	bnz	u10500
 19148  01524A  0EF8               	movlw	-8
 19149  01524C  04E3               	decf	plusw1,w,c
 19150  01524E  A0D8               	btfss	status,0,c
 19151  015250  D02F               	goto	u10540
 19152  015252                     u10500:
 19153                           
 19154                           ;stkvar	_n @ sp[(-18)+2]
 19155  015252  0EF0               	movlw	-16
 19156  015254  50E3               	movf	plusw1,w,c
 19157  015256  E115               	bnz	u10511
 19158  015258  0EF1               	movlw	-15
 19159  01525A  50E3               	movf	plusw1,w,c
 19160  01525C  E112               	bnz	u10511
 19161  01525E  0EF2               	movlw	-14
 19162  015260  50E3               	movf	plusw1,w,c
 19163  015262  E10F               	bnz	u10511
 19164  015264  0EF3               	movlw	-13
 19165  015266  50E3               	movf	plusw1,w,c
 19166  015268  E10C               	bnz	u10511
 19167  01526A  0EF4               	movlw	-12
 19168  01526C  50E3               	movf	plusw1,w,c
 19169  01526E  E109               	bnz	u10511
 19170  015270  0EF5               	movlw	-11
 19171  015272  50E3               	movf	plusw1,w,c
 19172  015274  E106               	bnz	u10511
 19173  015276  0EF6               	movlw	-10
 19174  015278  50E3               	movf	plusw1,w,c
 19175  01527A  E103               	bnz	u10511
 19176  01527C  0EF7               	movlw	-9
 19177  01527E  50E3               	movf	plusw1,w,c
 19178  015280  A4D8               	btfss	status,2,c
 19179  015282                     u10511:
 19180  015282  D6D4               	goto	l11456
 19181                           
 19182                           ;stkvar	_p @ sp[(-18)+16]
 19183  015284  0EFF               	movlw	-1
 19184  015286  BEE3               	btfsc	plusw1,7,c
 19185  015288  D007               	goto	u10520
 19186  01528A  0EFF               	movlw	-1
 19187  01528C  50E3               	movf	plusw1,w,c
 19188  01528E  E103               	bnz	u10521
 19189  015290  0EFE               	movlw	-2
 19190  015292  04E3               	decf	plusw1,w,c
 19191  015294  B0D8               	btfsc	status,0,c
 19192  015296                     u10521:
 19193  015296  D6CA               	goto	l11456
 19194  015298                     u10520:
 19195                           
 19196                           ;stkvar	_w @ sp[(-18)+14]
 19197  015298  0EFD               	movlw	-3
 19198  01529A  BEE3               	btfsc	plusw1,7,c
 19199  01529C  D009               	goto	u10540
 19200  01529E  0EFD               	movlw	-3
 19201  0152A0  50E3               	movf	plusw1,w,c
 19202  0152A2  E104               	bnz	u10530
 19203  0152A4  0EFC               	movlw	-4
 19204  0152A6  04E3               	decf	plusw1,w,c
 19205  0152A8  A0D8               	btfss	status,0,c
 19206  0152AA  D002               	goto	u10540
 19207  0152AC                     u10530:
 19208  0152AC  B225               	btfsc	_flags^0,1,c
 19209  0152AE  D6BE               	goto	l11456
 19210  0152B0                     u10540:
 19211                           
 19212                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 19213                           ;stkvar	_s @ sp[(-18)+12]
 19214  0152B0  0EFA               	movlw	-6
 19215  0152B2  006F FF8C  F001    	movff	plusw1,btemp
 19216  0152B8  0EFB               	movlw	-5
 19217  0152BA  50E3               	movf	plusw1,w,c
 19218  0152BC  1001               	iorwf	btemp^0,w,c
 19219  0152BE  A4D8               	btfss	status,2,c
 19220  0152C0  D002               	goto	u10560
 19221  0152C2  A425               	btfss	_flags^0,2,c
 19222  0152C4  D033               	goto	l11490
 19223  0152C6                     u10560:
 19224                           
 19225                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 19226                           ;stkvar	_i @ sp[(-18)+10]
 19227  0152C6  50E1               	movf	fsr1l,w,c
 19228  0152C8  0FF8               	addlw	-8
 19229  0152CA  6ED9               	movwf	fsr2l,c
 19230  0152CC  50E2               	movf	fsr1h,w,c
 19231  0152CE  6EDA               	movwf	fsr2h,c
 19232  0152D0  0EFF               	movlw	255
 19233  0152D2  22DA               	addwfc	fsr2h,f,c
 19234  0152D4  06DE               	decf	postinc2,f,c
 19235  0152D6  0E00               	movlw	0
 19236  0152D8  5ADD               	subwfb	postdec2,f,c
 19237                           
 19238                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 19239                           ;stkvar	_s @ sp[(-18)+12]
 19240  0152DA  0EFA               	movlw	-6
 19241  0152DC  006F FF8C  F001    	movff	plusw1,btemp
 19242  0152E2  0EFB               	movlw	-5
 19243  0152E4  50E3               	movf	plusw1,w,c
 19244  0152E6  1001               	iorwf	btemp^0,w,c
 19245  0152E8  A4D8               	btfss	status,2,c
 19246  0152EA  D002               	goto	l11486
 19247  0152EC  0E2B               	movlw	43
 19248  0152EE  D001               	goto	L19
 19249  0152F0                     l11486:
 19250  0152F0  0E2D               	movlw	45
 19251  0152F2                     L19:
 19252  0152F2  6E0B               	movwf	(btemp+10)^0,c
 19253  0152F4  0E00               	movlw	0
 19254  0152F6  6E0C               	movwf	(btemp+11)^0,c
 19255                           
 19256                           ;stkvar	_dtoa$5287 @ sp[(-18)+0]
 19257  0152F8  0EEE               	movlw	-18
 19258  0152FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19259  015300  0EEF               	movlw	-17
 19260  015302  0060  F033  FFE3   	movff	btemp+11,plusw1
 19261                           
 19262                           ;stkvar	_dtoa$5287 @ sp[(-18)+0]
 19263                           ;stkvar	_i @ sp[(-18)+10]
 19264  015308  0EF8               	movlw	-8
 19265  01530A  006F FF8C  F00B    	movff	plusw1,btemp+10
 19266  015310  0EF9               	movlw	-7
 19267  015312  006F FF8C  F00C    	movff	plusw1,btemp+11
 19268  015318  0E94               	movlw	low _dbuf
 19269  01531A  240B               	addwf	(btemp+10)^0,w,c
 19270  01531C  6ED9               	movwf	fsr2l,c
 19271  01531E  0E03               	movlw	high _dbuf
 19272  015320  200C               	addwfc	(btemp+11)^0,w,c
 19273  015322  6EDA               	movwf	fsr2h,c
 19274  015324  0EEE               	movlw	-18
 19275  015326  006F FF8F FFDF     	movff	plusw1,indf2
 19276  01532C                     l11490:
 19277                           
 19278                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 19279                           ;stkvar	_w @ sp[(-18)+14]
 19280  01532C  0EFC               	movlw	-4
 19281  01532E  006F FF8F FFE6     	movff	plusw1,postinc1
 19282  015334  006F FF8F FFE6     	movff	plusw1,postinc1
 19283                           
 19284                           ;stkvar	_i @ sp[(-20)+10]
 19285  01533A  0E94               	movlw	low _dbuf
 19286  01533C  6E0B               	movwf	(btemp+10)^0,c
 19287  01533E  0E03               	movlw	high _dbuf
 19288  015340  6E0C               	movwf	(btemp+11)^0,c
 19289  015342  0EF6               	movlw	-10
 19290  015344  50E3               	movf	plusw1,w,c
 19291  015346  260B               	addwf	(btemp+10)^0,f,c
 19292  015348  0EF7               	movlw	-9
 19293  01534A  50E3               	movf	plusw1,w,c
 19294  01534C  220C               	addwfc	(btemp+11)^0,f,c
 19295  01534E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19296  015354  0060  F033  FFE6   	movff	btemp+11,postinc1
 19297                           
 19298                           ;stkvar	_fp @ sp[(-22)+-2]
 19299  01535A  0EE8               	movlw	-24
 19300  01535C  006F FF8F FFE6     	movff	plusw1,postinc1
 19301  015362  006F FF8F FFE6     	movff	plusw1,postinc1
 19302  015368  EC3F  F0C6         	call	_pad	;wreg free
 19303                           
 19304                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 19305  01536C  0EE4               	movlw	228
 19306  01536E  26E1               	addwf	fsr1l,f,c
 19307  015370  0EFF               	movlw	255
 19308  015372  22E2               	addwfc	fsr1h,f,c
 19309  015374  0012               	return		;funcret
 19310  015376                     __end_of_dtoa:
 19311                           	opt callstack 0
 19312                           
 19313 ;; *************** function _abs *****************
 19314 ;; Defined at:
 19315 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 19316 ;; Parameters:    Size  Location     Type
 19317 ;;  a               2  [STACK] int 
 19318 ;; Auto vars:     Size  Location     Type
 19319 ;;		None
 19320 ;; Return value:  Size  Location     Type
 19321 ;;                  2  [STACK] int 
 19322 ;; Registers used:
 19323 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 19324 ;; Tracked objects:
 19325 ;;		On entry : 0/3
 19326 ;;		On exit  : 0/0
 19327 ;;		Unchanged: 0/0
 19328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19333 ;;Total ram usage:        0 bytes
 19334 ;; Hardware stack levels used:    1
 19335 ;; Hardware stack levels required when called:   15
 19336 ;; This function calls:
 19337 ;;		Nothing
 19338 ;; This function is called by:
 19339 ;;		_dtoa
 19340 ;; This function uses a reentrant model
 19341 ;;
 19342                           
 19343                           	psect	text67
 19344  01A5D4                     __ptext67:
 19345                           	opt callstack 0
 19346  01A5D4                     _abs:
 19347                           	opt callstack 0
 19348                           
 19349                           ;stkvar	_a @ sp[(0)+-2]
 19350                           
 19351                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19352                           ;incstack = 0
 19353 ;; hardware stack exceeded
 19354  01A5D4  0EFF               	movlw	-1
 19355  01A5D6  BEE3               	btfsc	plusw1,7,c
 19356  01A5D8  D007               	goto	u5700
 19357  01A5DA  0EFF               	movlw	-1
 19358  01A5DC  50E3               	movf	plusw1,w,c
 19359  01A5DE  E112               	bnz	l7690
 19360  01A5E0  0EFE               	movlw	-2
 19361  01A5E2  04E3               	decf	plusw1,w,c
 19362  01A5E4  B0D8               	btfsc	status,0,c
 19363  01A5E6  D00E               	goto	l7690
 19364  01A5E8                     u5700:
 19365                           
 19366                           ;stkvar	_a @ sp[(0)+-2]
 19367  01A5E8  0EFE               	movlw	-2
 19368  01A5EA  006F FF8C  F001    	movff	plusw1,btemp
 19369  01A5F0  1E01               	comf	btemp^0,f,c
 19370  01A5F2  0EFF               	movlw	-1
 19371  01A5F4  006F FF8C  F002    	movff	plusw1,btemp+1
 19372  01A5FA  1E02               	comf	(btemp+1)^0,f,c
 19373  01A5FC  2A01               	incf	btemp^0,f,c
 19374  01A5FE  B4D8               	btfsc	status,2,c
 19375  01A600  2A02               	incf	(btemp+1)^0,f,c
 19376  01A602  D008               	goto	l3050
 19377  01A604                     l7690:
 19378                           
 19379                           ;stkvar	_a @ sp[(0)+-2]
 19380  01A604  0EFE               	movlw	-2
 19381  01A606  006F FF8C  F001    	movff	plusw1,btemp
 19382  01A60C  0EFF               	movlw	-1
 19383  01A60E  006F FF8C  F002    	movff	plusw1,btemp+1
 19384  01A614                     l3050:
 19385                           
 19386                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 19387  01A614  52E5               	movf	postdec1,f,c
 19388  01A616  52E5               	movf	postdec1,f,c
 19389  01A618  0012               	return		;funcret
 19390  01A61A                     __end_of_abs:
 19391                           	opt callstack 0
 19392                           
 19393 ;; *************** function ___aomod *****************
 19394 ;; Defined at:
 19395 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 19396 ;; Parameters:    Size  Location     Type
 19397 ;;  dividend        8  [STACK] long long 
 19398 ;;  divisor         8  [STACK] long long 
 19399 ;; Auto vars:     Size  Location     Type
 19400 ;;  sign            1  [STACK] unsigned char 
 19401 ;;  counter         1  [STACK] unsigned char 
 19402 ;; Return value:  Size  Location     Type
 19403 ;;                  8  [STACK] long long 
 19404 ;; Registers used:
 19405 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 19406 ;; Tracked objects:
 19407 ;;		On entry : 0/3
 19408 ;;		On exit  : 0/0
 19409 ;;		Unchanged: 0/0
 19410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19415 ;;Total ram usage:        0 bytes
 19416 ;; Hardware stack levels used:    1
 19417 ;; Hardware stack levels required when called:   15
 19418 ;; This function calls:
 19419 ;;		Nothing
 19420 ;; This function is called by:
 19421 ;;		_dtoa
 19422 ;; This function uses a reentrant model
 19423 ;;
 19424                           
 19425                           	psect	text68
 19426  016EE6                     __ptext68:
 19427                           	opt callstack 0
 19428  016EE6                     ___aomod:
 19429                           	opt callstack 0
 19430                           
 19431                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 19432  016EE6  52E6               	movf	postinc1,f,c
 19433  016EE8  52E6               	movf	postinc1,f,c
 19434                           
 19435                           ;stkvar	_sign @ sp[(-2)+0]
 19436                           
 19437                           ;incstack = 0
 19438 ;; hardware stack exceeded
 19439  016EEA  0EFE               	movlw	-2
 19440  016EEC  6AE3               	clrf	plusw1,c
 19441                           
 19442                           ;stkvar	_dividend @ sp[(-2)+-8]
 19443  016EEE  0EFD               	movlw	-3
 19444  016EF0  AEE3               	btfss	plusw1,7,c
 19445  016EF2  D028               	goto	l7848
 19446                           
 19447                           ;stkvar	_dividend @ sp[(-2)+-8]
 19448                           ;stkvar	_dividend @ sp[(-2)+-8]
 19449  016EF4  0EF6               	movlw	-10
 19450  016EF6  6CE3               	negf	plusw1,c
 19451  016EF8  0EF7               	movlw	-9
 19452  016EFA  1EE3               	comf	plusw1,f,c
 19453  016EFC  0EF8               	movlw	-8
 19454  016EFE  1EE3               	comf	plusw1,f,c
 19455  016F00  0EF9               	movlw	-7
 19456  016F02  1EE3               	comf	plusw1,f,c
 19457  016F04  0EFA               	movlw	-6
 19458  016F06  1EE3               	comf	plusw1,f,c
 19459  016F08  0EFB               	movlw	-5
 19460  016F0A  1EE3               	comf	plusw1,f,c
 19461  016F0C  0EFC               	movlw	-4
 19462  016F0E  1EE3               	comf	plusw1,f,c
 19463  016F10  0EFD               	movlw	-3
 19464  016F12  1EE3               	comf	plusw1,f,c
 19465  016F14  E314               	bnc	u6130
 19466  016F16  0EF7               	movlw	-9
 19467  016F18  2AE3               	incf	plusw1,f,c
 19468  016F1A  E311               	bnc	u6130
 19469  016F1C  0EF8               	movlw	-8
 19470  016F1E  2AE3               	incf	plusw1,f,c
 19471  016F20  E30E               	bnc	u6130
 19472  016F22  0EF9               	movlw	-7
 19473  016F24  2AE3               	incf	plusw1,f,c
 19474  016F26  E30B               	bnc	u6130
 19475  016F28  0EFA               	movlw	-6
 19476  016F2A  2AE3               	incf	plusw1,f,c
 19477  016F2C  E308               	bnc	u6130
 19478  016F2E  0EFB               	movlw	-5
 19479  016F30  2AE3               	incf	plusw1,f,c
 19480  016F32  E305               	bnc	u6130
 19481  016F34  0EFC               	movlw	-4
 19482  016F36  2AE3               	incf	plusw1,f,c
 19483  016F38  E302               	bnc	u6130
 19484  016F3A  0EFD               	movlw	-3
 19485  016F3C  2AE3               	incf	plusw1,f,c
 19486  016F3E                     u6130:
 19487                           
 19488                           ;stkvar	_sign @ sp[(-2)+0]
 19489  016F3E  0EFE               	movlw	-2
 19490  016F40  6AE3               	clrf	plusw1,c
 19491  016F42  2AE3               	incf	plusw1,f,c
 19492  016F44                     l7848:
 19493                           
 19494                           ;stkvar	_divisor @ sp[(-2)+-16]
 19495  016F44  0EF5               	movlw	-11
 19496  016F46  AEE3               	btfss	plusw1,7,c
 19497  016F48  D025               	goto	u6150
 19498                           
 19499                           ;stkvar	_divisor @ sp[(-2)+-16]
 19500                           ;stkvar	_divisor @ sp[(-2)+-16]
 19501  016F4A  0EEE               	movlw	-18
 19502  016F4C  6CE3               	negf	plusw1,c
 19503  016F4E  0EEF               	movlw	-17
 19504  016F50  1EE3               	comf	plusw1,f,c
 19505  016F52  0EF0               	movlw	-16
 19506  016F54  1EE3               	comf	plusw1,f,c
 19507  016F56  0EF1               	movlw	-15
 19508  016F58  1EE3               	comf	plusw1,f,c
 19509  016F5A  0EF2               	movlw	-14
 19510  016F5C  1EE3               	comf	plusw1,f,c
 19511  016F5E  0EF3               	movlw	-13
 19512  016F60  1EE3               	comf	plusw1,f,c
 19513  016F62  0EF4               	movlw	-12
 19514  016F64  1EE3               	comf	plusw1,f,c
 19515  016F66  0EF5               	movlw	-11
 19516  016F68  1EE3               	comf	plusw1,f,c
 19517  016F6A  E314               	bnc	u6150
 19518  016F6C  0EEF               	movlw	-17
 19519  016F6E  2AE3               	incf	plusw1,f,c
 19520  016F70  E311               	bnc	u6150
 19521  016F72  0EF0               	movlw	-16
 19522  016F74  2AE3               	incf	plusw1,f,c
 19523  016F76  E30E               	bnc	u6150
 19524  016F78  0EF1               	movlw	-15
 19525  016F7A  2AE3               	incf	plusw1,f,c
 19526  016F7C  E30B               	bnc	u6150
 19527  016F7E  0EF2               	movlw	-14
 19528  016F80  2AE3               	incf	plusw1,f,c
 19529  016F82  E308               	bnc	u6150
 19530  016F84  0EF3               	movlw	-13
 19531  016F86  2AE3               	incf	plusw1,f,c
 19532  016F88  E305               	bnc	u6150
 19533  016F8A  0EF4               	movlw	-12
 19534  016F8C  2AE3               	incf	plusw1,f,c
 19535  016F8E  E302               	bnc	u6150
 19536  016F90  0EF5               	movlw	-11
 19537  016F92  2AE3               	incf	plusw1,f,c
 19538  016F94                     u6150:
 19539                           
 19540                           ;stkvar	_divisor @ sp[(-2)+-16]
 19541  016F94  0EEE               	movlw	-18
 19542  016F96  50E3               	movf	plusw1,w,c
 19543  016F98  E116               	bnz	u6160
 19544  016F9A  0EEF               	movlw	-17
 19545  016F9C  50E3               	movf	plusw1,w,c
 19546  016F9E  E113               	bnz	u6160
 19547  016FA0  0EF0               	movlw	-16
 19548  016FA2  50E3               	movf	plusw1,w,c
 19549  016FA4  E110               	bnz	u6160
 19550  016FA6  0EF1               	movlw	-15
 19551  016FA8  50E3               	movf	plusw1,w,c
 19552  016FAA  E10D               	bnz	u6160
 19553  016FAC  0EF2               	movlw	-14
 19554  016FAE  50E3               	movf	plusw1,w,c
 19555  016FB0  E10A               	bnz	u6160
 19556  016FB2  0EF3               	movlw	-13
 19557  016FB4  50E3               	movf	plusw1,w,c
 19558  016FB6  E107               	bnz	u6160
 19559  016FB8  0EF4               	movlw	-12
 19560  016FBA  50E3               	movf	plusw1,w,c
 19561  016FBC  E104               	bnz	u6160
 19562  016FBE  0EF5               	movlw	-11
 19563  016FC0  50E3               	movf	plusw1,w,c
 19564  016FC2  B4D8               	btfsc	status,2,c
 19565  016FC4  D075               	goto	u6190
 19566  016FC6                     u6160:
 19567                           
 19568                           ;stkvar	_counter @ sp[(-2)+1]
 19569  016FC6  0EFF               	movlw	-1
 19570  016FC8  6AE3               	clrf	plusw1,c
 19571  016FCA  D012               	goto	L20
 19572  016FCC                     l7856:
 19573                           
 19574                           ;stkvar	_divisor @ sp[(-2)+-16]
 19575  016FCC  90D8               	bcf	status,0,c
 19576  016FCE  0EEE               	movlw	-18
 19577  016FD0  36E3               	rlcf	plusw1,f,c
 19578  016FD2  0EEF               	movlw	-17
 19579  016FD4  36E3               	rlcf	plusw1,f,c
 19580  016FD6  0EF0               	movlw	-16
 19581  016FD8  36E3               	rlcf	plusw1,f,c
 19582  016FDA  0EF1               	movlw	-15
 19583  016FDC  36E3               	rlcf	plusw1,f,c
 19584  016FDE  0EF2               	movlw	-14
 19585  016FE0  36E3               	rlcf	plusw1,f,c
 19586  016FE2  0EF3               	movlw	-13
 19587  016FE4  36E3               	rlcf	plusw1,f,c
 19588  016FE6  0EF4               	movlw	-12
 19589  016FE8  36E3               	rlcf	plusw1,f,c
 19590  016FEA  0EF5               	movlw	-11
 19591  016FEC  36E3               	rlcf	plusw1,f,c
 19592                           
 19593                           ;stkvar	_counter @ sp[(-2)+1]
 19594  016FEE  0EFF               	movlw	-1
 19595  016FF0                     L20:
 19596  016FF0  2AE3               	incf	plusw1,f,c
 19597                           
 19598                           ;stkvar	_divisor @ sp[(-2)+-16]
 19599  016FF2  0EF5               	movlw	-11
 19600  016FF4  AEE3               	btfss	plusw1,7,c
 19601  016FF6  D7EA               	goto	l7856
 19602  016FF8                     u6170:
 19603                           
 19604                           ;stkvar	_divisor @ sp[(-2)+-16]
 19605                           ;stkvar	_dividend @ sp[(-2)+-8]
 19606  016FF8  50E1               	movf	fsr1l,w,c
 19607  016FFA  0FF6               	addlw	-10
 19608  016FFC  6ED9               	movwf	fsr2l,c
 19609  016FFE  50E2               	movf	fsr1h,w,c
 19610  017000  6EDA               	movwf	fsr2h,c
 19611  017002  0EFF               	movlw	255
 19612  017004  22DA               	addwfc	fsr2h,f,c
 19613  017006  0EEE               	movlw	-18
 19614  017008  50E3               	movf	plusw1,w,c
 19615  01700A  5CDE               	subwf	postinc2,w,c
 19616  01700C  0EEF               	movlw	-17
 19617  01700E  50E3               	movf	plusw1,w,c
 19618  017010  58DE               	subwfb	postinc2,w,c
 19619  017012  0EF0               	movlw	-16
 19620  017014  50E3               	movf	plusw1,w,c
 19621  017016  58DE               	subwfb	postinc2,w,c
 19622  017018  0EF1               	movlw	-15
 19623  01701A  50E3               	movf	plusw1,w,c
 19624  01701C  58DE               	subwfb	postinc2,w,c
 19625  01701E  0EF2               	movlw	-14
 19626  017020  50E3               	movf	plusw1,w,c
 19627  017022  58DE               	subwfb	postinc2,w,c
 19628  017024  0EF3               	movlw	-13
 19629  017026  50E3               	movf	plusw1,w,c
 19630  017028  58DE               	subwfb	postinc2,w,c
 19631  01702A  0EF4               	movlw	-12
 19632  01702C  50E3               	movf	plusw1,w,c
 19633  01702E  58DE               	subwfb	postinc2,w,c
 19634  017030  0EF5               	movlw	-11
 19635  017032  50E3               	movf	plusw1,w,c
 19636  017034  58DE               	subwfb	postinc2,w,c
 19637  017036  A0D8               	btfss	status,0,c
 19638  017038  D01F               	goto	l7864
 19639                           
 19640                           ;stkvar	_divisor @ sp[(-2)+-16]
 19641                           ;stkvar	_dividend @ sp[(-2)+-8]
 19642  01703A  50E1               	movf	fsr1l,w,c
 19643  01703C  0FF6               	addlw	-10
 19644  01703E  6ED9               	movwf	fsr2l,c
 19645  017040  50E2               	movf	fsr1h,w,c
 19646  017042  6EDA               	movwf	fsr2h,c
 19647  017044  0EFF               	movlw	255
 19648  017046  22DA               	addwfc	fsr2h,f,c
 19649  017048  0EEE               	movlw	-18
 19650  01704A  50E3               	movf	plusw1,w,c
 19651  01704C  5EDE               	subwf	postinc2,f,c
 19652  01704E  0EEF               	movlw	-17
 19653  017050  50E3               	movf	plusw1,w,c
 19654  017052  5ADE               	subwfb	postinc2,f,c
 19655  017054  0EF0               	movlw	-16
 19656  017056  50E3               	movf	plusw1,w,c
 19657  017058  5ADE               	subwfb	postinc2,f,c
 19658  01705A  0EF1               	movlw	-15
 19659  01705C  50E3               	movf	plusw1,w,c
 19660  01705E  5ADE               	subwfb	postinc2,f,c
 19661  017060  0EF2               	movlw	-14
 19662  017062  50E3               	movf	plusw1,w,c
 19663  017064  5ADE               	subwfb	postinc2,f,c
 19664  017066  0EF3               	movlw	-13
 19665  017068  50E3               	movf	plusw1,w,c
 19666  01706A  5ADE               	subwfb	postinc2,f,c
 19667  01706C  0EF4               	movlw	-12
 19668  01706E  50E3               	movf	plusw1,w,c
 19669  017070  5ADE               	subwfb	postinc2,f,c
 19670  017072  0EF5               	movlw	-11
 19671  017074  50E3               	movf	plusw1,w,c
 19672  017076  5ADE               	subwfb	postinc2,f,c
 19673  017078                     l7864:
 19674                           
 19675                           ;stkvar	_divisor @ sp[(-2)+-16]
 19676  017078  90D8               	bcf	status,0,c
 19677  01707A  0EF5               	movlw	-11
 19678  01707C  32E3               	rrcf	plusw1,f,c
 19679  01707E  0EF4               	movlw	-12
 19680  017080  32E3               	rrcf	plusw1,f,c
 19681  017082  0EF3               	movlw	-13
 19682  017084  32E3               	rrcf	plusw1,f,c
 19683  017086  0EF2               	movlw	-14
 19684  017088  32E3               	rrcf	plusw1,f,c
 19685  01708A  0EF1               	movlw	-15
 19686  01708C  32E3               	rrcf	plusw1,f,c
 19687  01708E  0EF0               	movlw	-16
 19688  017090  32E3               	rrcf	plusw1,f,c
 19689  017092  0EEF               	movlw	-17
 19690  017094  32E3               	rrcf	plusw1,f,c
 19691  017096  0EEE               	movlw	-18
 19692  017098  32E3               	rrcf	plusw1,f,c
 19693                           
 19694                           ;stkvar	_counter @ sp[(-2)+1]
 19695  01709A  0EFF               	movlw	-1
 19696  01709C  50E3               	movf	plusw1,w,c
 19697  01709E  6E01               	movwf	btemp^0,c
 19698  0170A0  0E01               	movlw	1
 19699  0170A2  5E01               	subwf	btemp^0,f,c
 19700  0170A4  0EFF               	movlw	-1
 19701  0170A6  0060  F007  FFE3   	movff	btemp,plusw1
 19702  0170AC  A4D8               	btfss	status,2,c
 19703  0170AE  D7A4               	goto	u6170
 19704  0170B0                     u6190:
 19705                           
 19706                           ;stkvar	_sign @ sp[(-2)+0]
 19707  0170B0  0EFE               	movlw	-2
 19708  0170B2  50E3               	movf	plusw1,w,c
 19709  0170B4  B4D8               	btfsc	status,2,c
 19710  0170B6  D025               	goto	u6210
 19711                           
 19712                           ;stkvar	_dividend @ sp[(-2)+-8]
 19713                           ;stkvar	_dividend @ sp[(-2)+-8]
 19714  0170B8  0EF6               	movlw	-10
 19715  0170BA  6CE3               	negf	plusw1,c
 19716  0170BC  0EF7               	movlw	-9
 19717  0170BE  1EE3               	comf	plusw1,f,c
 19718  0170C0  0EF8               	movlw	-8
 19719  0170C2  1EE3               	comf	plusw1,f,c
 19720  0170C4  0EF9               	movlw	-7
 19721  0170C6  1EE3               	comf	plusw1,f,c
 19722  0170C8  0EFA               	movlw	-6
 19723  0170CA  1EE3               	comf	plusw1,f,c
 19724  0170CC  0EFB               	movlw	-5
 19725  0170CE  1EE3               	comf	plusw1,f,c
 19726  0170D0  0EFC               	movlw	-4
 19727  0170D2  1EE3               	comf	plusw1,f,c
 19728  0170D4  0EFD               	movlw	-3
 19729  0170D6  1EE3               	comf	plusw1,f,c
 19730  0170D8  E314               	bnc	u6210
 19731  0170DA  0EF7               	movlw	-9
 19732  0170DC  2AE3               	incf	plusw1,f,c
 19733  0170DE  E311               	bnc	u6210
 19734  0170E0  0EF8               	movlw	-8
 19735  0170E2  2AE3               	incf	plusw1,f,c
 19736  0170E4  E30E               	bnc	u6210
 19737  0170E6  0EF9               	movlw	-7
 19738  0170E8  2AE3               	incf	plusw1,f,c
 19739  0170EA  E30B               	bnc	u6210
 19740  0170EC  0EFA               	movlw	-6
 19741  0170EE  2AE3               	incf	plusw1,f,c
 19742  0170F0  E308               	bnc	u6210
 19743  0170F2  0EFB               	movlw	-5
 19744  0170F4  2AE3               	incf	plusw1,f,c
 19745  0170F6  E305               	bnc	u6210
 19746  0170F8  0EFC               	movlw	-4
 19747  0170FA  2AE3               	incf	plusw1,f,c
 19748  0170FC  E302               	bnc	u6210
 19749  0170FE  0EFD               	movlw	-3
 19750  017100  2AE3               	incf	plusw1,f,c
 19751  017102                     u6210:
 19752                           
 19753                           ;stkvar	_dividend @ sp[(-2)+-8]
 19754  017102  0EF6               	movlw	246
 19755  017104  24E1               	addwf	fsr1l,w,c
 19756  017106  6ED9               	movwf	fsr2l,c
 19757  017108  0EFF               	movlw	255
 19758  01710A  20E2               	addwfc	fsr1h,w,c
 19759  01710C  6EDA               	movwf	fsr2h,c
 19760                           
 19761                           ;stkvar	?___aomod @ sp[(-2)+-8]
 19762  01710E  0E08               	movlw	8
 19763  017110  6E01               	movwf	btemp^0,c
 19764  017112  0EF6               	movlw	-10
 19765  017114                     us622999:
 19766  017114  006F FF7B FFE3     	movff	postinc2,plusw1
 19767  01711A  28E8               	incf	wreg,w,c
 19768  01711C  2E01               	decfsz	btemp^0,f,c
 19769  01711E  D7FA               	bra	us622999
 19770                           
 19771                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 19772  017120  52E5               	movf	postdec1,f,c
 19773  017122  52E5               	movf	postdec1,f,c
 19774  017124  0012               	return		;funcret
 19775  017126                     __end_of___aomod:
 19776                           	opt callstack 0
 19777                           
 19778 ;; *************** function ___aodiv *****************
 19779 ;; Defined at:
 19780 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 19781 ;; Parameters:    Size  Location     Type
 19782 ;;  dividend        8  [STACK] long long 
 19783 ;;  divisor         8  [STACK] long long 
 19784 ;; Auto vars:     Size  Location     Type
 19785 ;;  quotient        8  [STACK] long long 
 19786 ;;  sign            1  [STACK] unsigned char 
 19787 ;;  counter         1  [STACK] unsigned char 
 19788 ;; Return value:  Size  Location     Type
 19789 ;;                  8  [STACK] long long 
 19790 ;; Registers used:
 19791 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 19792 ;; Tracked objects:
 19793 ;;		On entry : 0/3
 19794 ;;		On exit  : 0/0
 19795 ;;		Unchanged: 0/0
 19796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19801 ;;Total ram usage:        0 bytes
 19802 ;; Hardware stack levels used:    1
 19803 ;; Hardware stack levels required when called:   15
 19804 ;; This function calls:
 19805 ;;		Nothing
 19806 ;; This function is called by:
 19807 ;;		_dtoa
 19808 ;; This function uses a reentrant model
 19809 ;;
 19810                           
 19811                           	psect	text69
 19812  0169F2                     __ptext69:
 19813                           	opt callstack 0
 19814  0169F2                     ___aodiv:
 19815                           	opt callstack 0
 19816                           
 19817                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 19818  0169F2  0E0A               	movlw	10
 19819  0169F4  26E1               	addwf	fsr1l,f,c
 19820  0169F6  0E00               	movlw	0
 19821  0169F8  22E2               	addwfc	fsr1h,f,c
 19822                           
 19823                           ;stkvar	_sign @ sp[(-10)+8]
 19824                           
 19825                           ;incstack = 0
 19826 ;; hardware stack exceeded
 19827  0169FA  0EFE               	movlw	-2
 19828  0169FC  6AE3               	clrf	plusw1,c
 19829                           
 19830                           ;stkvar	_divisor @ sp[(-10)+-16]
 19831  0169FE  0EED               	movlw	-19
 19832  016A00  AEE3               	btfss	plusw1,7,c
 19833  016A02  D028               	goto	l7804
 19834                           
 19835                           ;stkvar	_divisor @ sp[(-10)+-16]
 19836                           ;stkvar	_divisor @ sp[(-10)+-16]
 19837  016A04  0EE6               	movlw	-26
 19838  016A06  6CE3               	negf	plusw1,c
 19839  016A08  0EE7               	movlw	-25
 19840  016A0A  1EE3               	comf	plusw1,f,c
 19841  016A0C  0EE8               	movlw	-24
 19842  016A0E  1EE3               	comf	plusw1,f,c
 19843  016A10  0EE9               	movlw	-23
 19844  016A12  1EE3               	comf	plusw1,f,c
 19845  016A14  0EEA               	movlw	-22
 19846  016A16  1EE3               	comf	plusw1,f,c
 19847  016A18  0EEB               	movlw	-21
 19848  016A1A  1EE3               	comf	plusw1,f,c
 19849  016A1C  0EEC               	movlw	-20
 19850  016A1E  1EE3               	comf	plusw1,f,c
 19851  016A20  0EED               	movlw	-19
 19852  016A22  1EE3               	comf	plusw1,f,c
 19853  016A24  E314               	bnc	u6010
 19854  016A26  0EE7               	movlw	-25
 19855  016A28  2AE3               	incf	plusw1,f,c
 19856  016A2A  E311               	bnc	u6010
 19857  016A2C  0EE8               	movlw	-24
 19858  016A2E  2AE3               	incf	plusw1,f,c
 19859  016A30  E30E               	bnc	u6010
 19860  016A32  0EE9               	movlw	-23
 19861  016A34  2AE3               	incf	plusw1,f,c
 19862  016A36  E30B               	bnc	u6010
 19863  016A38  0EEA               	movlw	-22
 19864  016A3A  2AE3               	incf	plusw1,f,c
 19865  016A3C  E308               	bnc	u6010
 19866  016A3E  0EEB               	movlw	-21
 19867  016A40  2AE3               	incf	plusw1,f,c
 19868  016A42  E305               	bnc	u6010
 19869  016A44  0EEC               	movlw	-20
 19870  016A46  2AE3               	incf	plusw1,f,c
 19871  016A48  E302               	bnc	u6010
 19872  016A4A  0EED               	movlw	-19
 19873  016A4C  2AE3               	incf	plusw1,f,c
 19874  016A4E                     u6010:
 19875                           
 19876                           ;stkvar	_sign @ sp[(-10)+8]
 19877  016A4E  0EFE               	movlw	-2
 19878  016A50  6AE3               	clrf	plusw1,c
 19879  016A52  2AE3               	incf	plusw1,f,c
 19880  016A54                     l7804:
 19881                           
 19882                           ;stkvar	_dividend @ sp[(-10)+-8]
 19883  016A54  0EF5               	movlw	-11
 19884  016A56  AEE3               	btfss	plusw1,7,c
 19885  016A58  D027               	goto	l7810
 19886                           
 19887                           ;stkvar	_dividend @ sp[(-10)+-8]
 19888                           ;stkvar	_dividend @ sp[(-10)+-8]
 19889  016A5A  0EEE               	movlw	-18
 19890  016A5C  6CE3               	negf	plusw1,c
 19891  016A5E  0EEF               	movlw	-17
 19892  016A60  1EE3               	comf	plusw1,f,c
 19893  016A62  0EF0               	movlw	-16
 19894  016A64  1EE3               	comf	plusw1,f,c
 19895  016A66  0EF1               	movlw	-15
 19896  016A68  1EE3               	comf	plusw1,f,c
 19897  016A6A  0EF2               	movlw	-14
 19898  016A6C  1EE3               	comf	plusw1,f,c
 19899  016A6E  0EF3               	movlw	-13
 19900  016A70  1EE3               	comf	plusw1,f,c
 19901  016A72  0EF4               	movlw	-12
 19902  016A74  1EE3               	comf	plusw1,f,c
 19903  016A76  0EF5               	movlw	-11
 19904  016A78  1EE3               	comf	plusw1,f,c
 19905  016A7A  E314               	bnc	u6030
 19906  016A7C  0EEF               	movlw	-17
 19907  016A7E  2AE3               	incf	plusw1,f,c
 19908  016A80  E311               	bnc	u6030
 19909  016A82  0EF0               	movlw	-16
 19910  016A84  2AE3               	incf	plusw1,f,c
 19911  016A86  E30E               	bnc	u6030
 19912  016A88  0EF1               	movlw	-15
 19913  016A8A  2AE3               	incf	plusw1,f,c
 19914  016A8C  E30B               	bnc	u6030
 19915  016A8E  0EF2               	movlw	-14
 19916  016A90  2AE3               	incf	plusw1,f,c
 19917  016A92  E308               	bnc	u6030
 19918  016A94  0EF3               	movlw	-13
 19919  016A96  2AE3               	incf	plusw1,f,c
 19920  016A98  E305               	bnc	u6030
 19921  016A9A  0EF4               	movlw	-12
 19922  016A9C  2AE3               	incf	plusw1,f,c
 19923  016A9E  E302               	bnc	u6030
 19924  016AA0  0EF5               	movlw	-11
 19925  016AA2  2AE3               	incf	plusw1,f,c
 19926  016AA4                     u6030:
 19927                           
 19928                           ;stkvar	_sign @ sp[(-10)+8]
 19929  016AA4  0EFE               	movlw	-2
 19930  016AA6  70E3               	btg	plusw1,0,c
 19931  016AA8                     l7810:
 19932                           
 19933                           ;stkvar	_quotient @ sp[(-10)+0]
 19934  016AA8  0E07               	movlw	7
 19935  016AAA  6E01               	movwf	btemp^0,c
 19936  016AAC  0EF6               	movlw	-10
 19937  016AAE                     u6041:
 19938  016AAE  6AE3               	clrf	plusw1,c
 19939  016AB0  2AE8               	incf	wreg,f,c
 19940  016AB2  0601               	decf	btemp^0,f,c
 19941  016AB4  E2FC               	bc	u6041
 19942                           
 19943                           ;stkvar	_divisor @ sp[(-10)+-16]
 19944  016AB6  0EE6               	movlw	-26
 19945  016AB8  50E3               	movf	plusw1,w,c
 19946  016ABA  E116               	bnz	u6050
 19947  016ABC  0EE7               	movlw	-25
 19948  016ABE  50E3               	movf	plusw1,w,c
 19949  016AC0  E113               	bnz	u6050
 19950  016AC2  0EE8               	movlw	-24
 19951  016AC4  50E3               	movf	plusw1,w,c
 19952  016AC6  E110               	bnz	u6050
 19953  016AC8  0EE9               	movlw	-23
 19954  016ACA  50E3               	movf	plusw1,w,c
 19955  016ACC  E10D               	bnz	u6050
 19956  016ACE  0EEA               	movlw	-22
 19957  016AD0  50E3               	movf	plusw1,w,c
 19958  016AD2  E10A               	bnz	u6050
 19959  016AD4  0EEB               	movlw	-21
 19960  016AD6  50E3               	movf	plusw1,w,c
 19961  016AD8  E107               	bnz	u6050
 19962  016ADA  0EEC               	movlw	-20
 19963  016ADC  50E3               	movf	plusw1,w,c
 19964  016ADE  E104               	bnz	u6050
 19965  016AE0  0EED               	movlw	-19
 19966  016AE2  50E3               	movf	plusw1,w,c
 19967  016AE4  B4D8               	btfsc	status,2,c
 19968  016AE6  D088               	goto	u6080
 19969  016AE8                     u6050:
 19970                           
 19971                           ;stkvar	_counter @ sp[(-10)+9]
 19972  016AE8  0EFF               	movlw	-1
 19973  016AEA  6AE3               	clrf	plusw1,c
 19974  016AEC  D012               	goto	L21
 19975  016AEE                     l7816:
 19976                           
 19977                           ;stkvar	_divisor @ sp[(-10)+-16]
 19978  016AEE  90D8               	bcf	status,0,c
 19979  016AF0  0EE6               	movlw	-26
 19980  016AF2  36E3               	rlcf	plusw1,f,c
 19981  016AF4  0EE7               	movlw	-25
 19982  016AF6  36E3               	rlcf	plusw1,f,c
 19983  016AF8  0EE8               	movlw	-24
 19984  016AFA  36E3               	rlcf	plusw1,f,c
 19985  016AFC  0EE9               	movlw	-23
 19986  016AFE  36E3               	rlcf	plusw1,f,c
 19987  016B00  0EEA               	movlw	-22
 19988  016B02  36E3               	rlcf	plusw1,f,c
 19989  016B04  0EEB               	movlw	-21
 19990  016B06  36E3               	rlcf	plusw1,f,c
 19991  016B08  0EEC               	movlw	-20
 19992  016B0A  36E3               	rlcf	plusw1,f,c
 19993  016B0C  0EED               	movlw	-19
 19994  016B0E  36E3               	rlcf	plusw1,f,c
 19995                           
 19996                           ;stkvar	_counter @ sp[(-10)+9]
 19997  016B10  0EFF               	movlw	-1
 19998  016B12                     L21:
 19999  016B12  2AE3               	incf	plusw1,f,c
 20000                           
 20001                           ;stkvar	_divisor @ sp[(-10)+-16]
 20002  016B14  0EED               	movlw	-19
 20003  016B16  AEE3               	btfss	plusw1,7,c
 20004  016B18  D7EA               	goto	l7816
 20005  016B1A                     u6060:
 20006                           
 20007                           ;stkvar	_quotient @ sp[(-10)+0]
 20008  016B1A  90D8               	bcf	status,0,c
 20009  016B1C  0EF6               	movlw	-10
 20010  016B1E  36E3               	rlcf	plusw1,f,c
 20011  016B20  0EF7               	movlw	-9
 20012  016B22  36E3               	rlcf	plusw1,f,c
 20013  016B24  0EF8               	movlw	-8
 20014  016B26  36E3               	rlcf	plusw1,f,c
 20015  016B28  0EF9               	movlw	-7
 20016  016B2A  36E3               	rlcf	plusw1,f,c
 20017  016B2C  0EFA               	movlw	-6
 20018  016B2E  36E3               	rlcf	plusw1,f,c
 20019  016B30  0EFB               	movlw	-5
 20020  016B32  36E3               	rlcf	plusw1,f,c
 20021  016B34  0EFC               	movlw	-4
 20022  016B36  36E3               	rlcf	plusw1,f,c
 20023  016B38  0EFD               	movlw	-3
 20024  016B3A  36E3               	rlcf	plusw1,f,c
 20025                           
 20026                           ;stkvar	_divisor @ sp[(-10)+-16]
 20027                           ;stkvar	_dividend @ sp[(-10)+-8]
 20028  016B3C  50E1               	movf	fsr1l,w,c
 20029  016B3E  0FEE               	addlw	-18
 20030  016B40  6ED9               	movwf	fsr2l,c
 20031  016B42  50E2               	movf	fsr1h,w,c
 20032  016B44  6EDA               	movwf	fsr2h,c
 20033  016B46  0EFF               	movlw	255
 20034  016B48  22DA               	addwfc	fsr2h,f,c
 20035  016B4A  0EE6               	movlw	-26
 20036  016B4C  50E3               	movf	plusw1,w,c
 20037  016B4E  5CDE               	subwf	postinc2,w,c
 20038  016B50  0EE7               	movlw	-25
 20039  016B52  50E3               	movf	plusw1,w,c
 20040  016B54  58DE               	subwfb	postinc2,w,c
 20041  016B56  0EE8               	movlw	-24
 20042  016B58  50E3               	movf	plusw1,w,c
 20043  016B5A  58DE               	subwfb	postinc2,w,c
 20044  016B5C  0EE9               	movlw	-23
 20045  016B5E  50E3               	movf	plusw1,w,c
 20046  016B60  58DE               	subwfb	postinc2,w,c
 20047  016B62  0EEA               	movlw	-22
 20048  016B64  50E3               	movf	plusw1,w,c
 20049  016B66  58DE               	subwfb	postinc2,w,c
 20050  016B68  0EEB               	movlw	-21
 20051  016B6A  50E3               	movf	plusw1,w,c
 20052  016B6C  58DE               	subwfb	postinc2,w,c
 20053  016B6E  0EEC               	movlw	-20
 20054  016B70  50E3               	movf	plusw1,w,c
 20055  016B72  58DE               	subwfb	postinc2,w,c
 20056  016B74  0EED               	movlw	-19
 20057  016B76  50E3               	movf	plusw1,w,c
 20058  016B78  58DE               	subwfb	postinc2,w,c
 20059  016B7A  A0D8               	btfss	status,0,c
 20060  016B7C  D021               	goto	l7828
 20061                           
 20062                           ;stkvar	_divisor @ sp[(-10)+-16]
 20063                           ;stkvar	_dividend @ sp[(-10)+-8]
 20064  016B7E  50E1               	movf	fsr1l,w,c
 20065  016B80  0FEE               	addlw	-18
 20066  016B82  6ED9               	movwf	fsr2l,c
 20067  016B84  50E2               	movf	fsr1h,w,c
 20068  016B86  6EDA               	movwf	fsr2h,c
 20069  016B88  0EFF               	movlw	255
 20070  016B8A  22DA               	addwfc	fsr2h,f,c
 20071  016B8C  0EE6               	movlw	-26
 20072  016B8E  50E3               	movf	plusw1,w,c
 20073  016B90  5EDE               	subwf	postinc2,f,c
 20074  016B92  0EE7               	movlw	-25
 20075  016B94  50E3               	movf	plusw1,w,c
 20076  016B96  5ADE               	subwfb	postinc2,f,c
 20077  016B98  0EE8               	movlw	-24
 20078  016B9A  50E3               	movf	plusw1,w,c
 20079  016B9C  5ADE               	subwfb	postinc2,f,c
 20080  016B9E  0EE9               	movlw	-23
 20081  016BA0  50E3               	movf	plusw1,w,c
 20082  016BA2  5ADE               	subwfb	postinc2,f,c
 20083  016BA4  0EEA               	movlw	-22
 20084  016BA6  50E3               	movf	plusw1,w,c
 20085  016BA8  5ADE               	subwfb	postinc2,f,c
 20086  016BAA  0EEB               	movlw	-21
 20087  016BAC  50E3               	movf	plusw1,w,c
 20088  016BAE  5ADE               	subwfb	postinc2,f,c
 20089  016BB0  0EEC               	movlw	-20
 20090  016BB2  50E3               	movf	plusw1,w,c
 20091  016BB4  5ADE               	subwfb	postinc2,f,c
 20092  016BB6  0EED               	movlw	-19
 20093  016BB8  50E3               	movf	plusw1,w,c
 20094  016BBA  5ADE               	subwfb	postinc2,f,c
 20095                           
 20096                           ;stkvar	_quotient @ sp[(-10)+0]
 20097  016BBC  0EF6               	movlw	-10
 20098  016BBE  80E3               	bsf	plusw1,0,c
 20099  016BC0                     l7828:
 20100                           
 20101                           ;stkvar	_divisor @ sp[(-10)+-16]
 20102  016BC0  90D8               	bcf	status,0,c
 20103  016BC2  0EED               	movlw	-19
 20104  016BC4  32E3               	rrcf	plusw1,f,c
 20105  016BC6  0EEC               	movlw	-20
 20106  016BC8  32E3               	rrcf	plusw1,f,c
 20107  016BCA  0EEB               	movlw	-21
 20108  016BCC  32E3               	rrcf	plusw1,f,c
 20109  016BCE  0EEA               	movlw	-22
 20110  016BD0  32E3               	rrcf	plusw1,f,c
 20111  016BD2  0EE9               	movlw	-23
 20112  016BD4  32E3               	rrcf	plusw1,f,c
 20113  016BD6  0EE8               	movlw	-24
 20114  016BD8  32E3               	rrcf	plusw1,f,c
 20115  016BDA  0EE7               	movlw	-25
 20116  016BDC  32E3               	rrcf	plusw1,f,c
 20117  016BDE  0EE6               	movlw	-26
 20118  016BE0  32E3               	rrcf	plusw1,f,c
 20119                           
 20120                           ;stkvar	_counter @ sp[(-10)+9]
 20121  016BE2  0EFF               	movlw	-1
 20122  016BE4  50E3               	movf	plusw1,w,c
 20123  016BE6  6E01               	movwf	btemp^0,c
 20124  016BE8  0E01               	movlw	1
 20125  016BEA  5E01               	subwf	btemp^0,f,c
 20126  016BEC  0EFF               	movlw	-1
 20127  016BEE  0060  F007  FFE3   	movff	btemp,plusw1
 20128  016BF4  A4D8               	btfss	status,2,c
 20129  016BF6  D791               	goto	u6060
 20130  016BF8                     u6080:
 20131                           
 20132                           ;stkvar	_sign @ sp[(-10)+8]
 20133  016BF8  0EFE               	movlw	-2
 20134  016BFA  50E3               	movf	plusw1,w,c
 20135  016BFC  B4D8               	btfsc	status,2,c
 20136  016BFE  D025               	goto	u6100
 20137                           
 20138                           ;stkvar	_quotient @ sp[(-10)+0]
 20139                           ;stkvar	_quotient @ sp[(-10)+0]
 20140  016C00  0EF6               	movlw	-10
 20141  016C02  6CE3               	negf	plusw1,c
 20142  016C04  0EF7               	movlw	-9
 20143  016C06  1EE3               	comf	plusw1,f,c
 20144  016C08  0EF8               	movlw	-8
 20145  016C0A  1EE3               	comf	plusw1,f,c
 20146  016C0C  0EF9               	movlw	-7
 20147  016C0E  1EE3               	comf	plusw1,f,c
 20148  016C10  0EFA               	movlw	-6
 20149  016C12  1EE3               	comf	plusw1,f,c
 20150  016C14  0EFB               	movlw	-5
 20151  016C16  1EE3               	comf	plusw1,f,c
 20152  016C18  0EFC               	movlw	-4
 20153  016C1A  1EE3               	comf	plusw1,f,c
 20154  016C1C  0EFD               	movlw	-3
 20155  016C1E  1EE3               	comf	plusw1,f,c
 20156  016C20  E314               	bnc	u6100
 20157  016C22  0EF7               	movlw	-9
 20158  016C24  2AE3               	incf	plusw1,f,c
 20159  016C26  E311               	bnc	u6100
 20160  016C28  0EF8               	movlw	-8
 20161  016C2A  2AE3               	incf	plusw1,f,c
 20162  016C2C  E30E               	bnc	u6100
 20163  016C2E  0EF9               	movlw	-7
 20164  016C30  2AE3               	incf	plusw1,f,c
 20165  016C32  E30B               	bnc	u6100
 20166  016C34  0EFA               	movlw	-6
 20167  016C36  2AE3               	incf	plusw1,f,c
 20168  016C38  E308               	bnc	u6100
 20169  016C3A  0EFB               	movlw	-5
 20170  016C3C  2AE3               	incf	plusw1,f,c
 20171  016C3E  E305               	bnc	u6100
 20172  016C40  0EFC               	movlw	-4
 20173  016C42  2AE3               	incf	plusw1,f,c
 20174  016C44  E302               	bnc	u6100
 20175  016C46  0EFD               	movlw	-3
 20176  016C48  2AE3               	incf	plusw1,f,c
 20177  016C4A                     u6100:
 20178                           
 20179                           ;stkvar	_quotient @ sp[(-10)+0]
 20180  016C4A  0EF6               	movlw	246
 20181  016C4C  24E1               	addwf	fsr1l,w,c
 20182  016C4E  6ED9               	movwf	fsr2l,c
 20183  016C50  0EFF               	movlw	255
 20184  016C52  20E2               	addwfc	fsr1h,w,c
 20185  016C54  6EDA               	movwf	fsr2h,c
 20186                           
 20187                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 20188  016C56  0E08               	movlw	8
 20189  016C58  6E01               	movwf	btemp^0,c
 20190  016C5A  0EEE               	movlw	-18
 20191  016C5C                     us611999:
 20192  016C5C  006F FF7B FFE3     	movff	postinc2,plusw1
 20193  016C62  28E8               	incf	wreg,w,c
 20194  016C64  2E01               	decfsz	btemp^0,f,c
 20195  016C66  D7FA               	bra	us611999
 20196                           
 20197                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 20198  016C68  0EF6               	movlw	246
 20199  016C6A  26E1               	addwf	fsr1l,f,c
 20200  016C6C  0EFF               	movlw	255
 20201  016C6E  22E2               	addwfc	fsr1h,f,c
 20202  016C70  0012               	return		;funcret
 20203  016C72                     __end_of___aodiv:
 20204                           	opt callstack 0
 20205                           
 20206 ;; *************** function _ctoa *****************
 20207 ;; Defined at:
 20208 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20209 ;; Parameters:    Size  Location     Type
 20210 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20211 ;;		 -> f(6), NULL(0), 
 20212 ;;  c               1  [STACK] unsigned char 
 20213 ;; Auto vars:     Size  Location     Type
 20214 ;;  w               2  [STACK] int 
 20215 ;;  l               2    0        int 
 20216 ;; Return value:  Size  Location     Type
 20217 ;;                  2  [STACK] int 
 20218 ;; Registers used:
 20219 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20220 ;; Tracked objects:
 20221 ;;		On entry : 0/0
 20222 ;;		On exit  : 0/0
 20223 ;;		Unchanged: 0/0
 20224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20229 ;;Total ram usage:        0 bytes
 20230 ;; Hardware stack levels used:    1
 20231 ;; Hardware stack levels required when called:   20
 20232 ;; This function calls:
 20233 ;;		_pad
 20234 ;; This function is called by:
 20235 ;;		_vfpfcnvrt
 20236 ;; This function uses a reentrant model
 20237 ;;
 20238                           
 20239                           	psect	text70
 20240  019DB6                     __ptext70:
 20241                           	opt callstack 0
 20242  019DB6                     _ctoa:
 20243                           	opt callstack 0
 20244                           
 20245                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20246  019DB6  52E6               	movf	postinc1,f,c
 20247  019DB8  52E6               	movf	postinc1,f,c
 20248                           
 20249                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 20250                           
 20251                           ;incstack = 0
 20252 ;; hardware stack exceeded
 20253  019DBA  5021               	movf	_width^0,w,c
 20254  019DBC  1022               	iorwf	(_width+1)^0,w,c
 20255  019DBE  A4D8               	btfss	status,2,c
 20256  019DC0  D009               	goto	l11418
 20257                           
 20258                           ;stkvar	_w @ sp[(-2)+0]
 20259  019DC2  0EFE               	movlw	-2
 20260  019DC4  0060  F087  FFE3   	movff	_width,plusw1
 20261  019DCA  0EFF               	movlw	-1
 20262  019DCC  0060  F08B  FFE3   	movff	_width+1,plusw1
 20263  019DD2  D016               	goto	l11420
 20264  019DD4                     l11418:
 20265  019DD4  0EFF               	movlw	255
 20266  019DD6  6E0B               	movwf	(btemp+10)^0,c
 20267  019DD8  0EFF               	movlw	255
 20268  019DDA  6E0C               	movwf	(btemp+11)^0,c
 20269  019DDC  0060  F084  F009   	movff	_width,btemp+8
 20270  019DE2  0060  F088  F00A   	movff	_width+1,btemp+9
 20271  019DE8  500B               	movf	(btemp+10)^0,w,c
 20272  019DEA  2609               	addwf	(btemp+8)^0,f,c
 20273  019DEC  500C               	movf	(btemp+11)^0,w,c
 20274  019DEE  220A               	addwfc	(btemp+9)^0,f,c
 20275                           
 20276                           ;stkvar	_w @ sp[(-2)+0]
 20277  019DF0  0EFE               	movlw	-2
 20278  019DF2  0060  F027  FFE3   	movff	btemp+8,plusw1
 20279  019DF8  0EFF               	movlw	-1
 20280  019DFA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 20281  019E00                     l11420:
 20282                           
 20283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 20284                           ;stkvar	_c @ sp[(-2)+-3]
 20285  019E00  0EFB               	movlw	-5
 20286  019E02  006F FF8C  F394    	movff	plusw1,_dbuf
 20287                           
 20288                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 20289  019E08  0103               	movlb	3	; () banked
 20290  019E0A  6B95               	clrf	(_dbuf+1)& (0+255),b
 20291                           
 20292                           ; BSR set to: 3
 20293                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 20294                           ;stkvar	_w @ sp[(-2)+0]
 20295  019E0C  0EFE               	movlw	-2
 20296  019E0E  006F FF8F FFE6     	movff	plusw1,postinc1
 20297  019E14  006F FF8F FFE6     	movff	plusw1,postinc1
 20298  019E1A  0E94               	movlw	low _dbuf
 20299  019E1C  6EE6               	movwf	postinc1,c
 20300  019E1E  0E03               	movlw	high _dbuf
 20301  019E20  6EE6               	movwf	postinc1,c
 20302                           
 20303                           ;stkvar	_fp @ sp[(-6)+-2]
 20304  019E22  0EF8               	movlw	-8
 20305  019E24  006F FF8F FFE6     	movff	plusw1,postinc1
 20306  019E2A  006F FF8F FFE6     	movff	plusw1,postinc1
 20307  019E30  EC3F  F0C6         	call	_pad	;wreg free
 20308                           
 20309                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 20310  019E34  0EFB               	movlw	251
 20311  019E36  26E1               	addwf	fsr1l,f,c
 20312  019E38  0EFF               	movlw	255
 20313  019E3A  22E2               	addwfc	fsr1h,f,c
 20314  019E3C  0012               	return		;funcret
 20315  019E3E                     __end_of_ctoa:
 20316                           	opt callstack 0
 20317                           
 20318 ;; *************** function _pad *****************
 20319 ;; Defined at:
 20320 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20321 ;; Parameters:    Size  Location     Type
 20322 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20323 ;;		 -> f(6), NULL(0), 
 20324 ;;  buf             2  [STACK] PTR unsigned char 
 20325 ;;		 -> dbuf(80), 
 20326 ;;  p               2  [STACK] int 
 20327 ;; Auto vars:     Size  Location     Type
 20328 ;;  w               2  [STACK] int 
 20329 ;;  i               2  [STACK] int 
 20330 ;; Return value:  Size  Location     Type
 20331 ;;                  2  [STACK] int 
 20332 ;; Registers used:
 20333 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20334 ;; Tracked objects:
 20335 ;;		On entry : 0/3
 20336 ;;		On exit  : 0/0
 20337 ;;		Unchanged: 0/0
 20338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20343 ;;Total ram usage:        0 bytes
 20344 ;; Hardware stack levels used:    1
 20345 ;; Hardware stack levels required when called:   19
 20346 ;; This function calls:
 20347 ;;		_fputc
 20348 ;;		_fputs
 20349 ;;		_strlen
 20350 ;; This function is called by:
 20351 ;;		_ctoa
 20352 ;;		_dtoa
 20353 ;;		_efgtoa
 20354 ;;		_utoa
 20355 ;;		_xtoa
 20356 ;; This function uses a reentrant model
 20357 ;;
 20358                           
 20359                           	psect	text71
 20360  018C7E                     __ptext71:
 20361                           	opt callstack 0
 20362  018C7E                     _pad:
 20363                           	opt callstack 0
 20364                           
 20365                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20366  018C7E  52E6               	movf	postinc1,f,c
 20367  018C80  52E6               	movf	postinc1,f,c
 20368  018C82  52E6               	movf	postinc1,f,c
 20369  018C84  52E6               	movf	postinc1,f,c
 20370                           
 20371                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 20372                           
 20373                           ;incstack = 0
 20374 ;; hardware stack exceeded
 20375  018C86  A025               	btfss	_flags^0,0,c
 20376  018C88  D010               	goto	l11350
 20377                           
 20378                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 20379                           ;stkvar	_fp @ sp[(-4)+-2]
 20380  018C8A  0EFA               	movlw	-6
 20381  018C8C  006F FF8F FFE6     	movff	plusw1,postinc1
 20382  018C92  006F FF8F FFE6     	movff	plusw1,postinc1
 20383                           
 20384                           ;stkvar	_buf @ sp[(-6)+-4]
 20385  018C98  0EF6               	movlw	-10
 20386  018C9A  006F FF8F FFE6     	movff	plusw1,postinc1
 20387  018CA0  006F FF8F FFE6     	movff	plusw1,postinc1
 20388  018CA6  EC6C  F0CD         	call	_fputs	;wreg free
 20389  018CAA                     l11350:
 20390                           
 20391                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 20392                           ;stkvar	_p @ sp[(-4)+-6]
 20393  018CAA  0EF7               	movlw	-9
 20394  018CAC  BEE3               	btfsc	plusw1,7,c
 20395  018CAE  D011               	goto	l11354
 20396                           
 20397                           ;stkvar	_p @ sp[(-4)+-6]
 20398                           ;stkvar	_w @ sp[(-4)+0]
 20399  018CB0  0EF6               	movlw	-10
 20400  018CB2  006F FF8C  F001    	movff	plusw1,btemp
 20401  018CB8  0EFC               	movlw	-4
 20402  018CBA  0060  F007  FFE3   	movff	btemp,plusw1
 20403  018CC0  0EF7               	movlw	-9
 20404  018CC2  006F FF8C  F001    	movff	plusw1,btemp
 20405  018CC8  0EFD               	movlw	-3
 20406  018CCA  0060  F007  FFE3   	movff	btemp,plusw1
 20407  018CD0  D004               	goto	l2104
 20408  018CD2                     l11354:
 20409                           
 20410                           ;stkvar	_w @ sp[(-4)+0]
 20411  018CD2  0EFC               	movlw	-4
 20412  018CD4  6AE3               	clrf	plusw1,c
 20413  018CD6  0EFD               	movlw	-3
 20414  018CD8  6AE3               	clrf	plusw1,c
 20415  018CDA                     l2104:
 20416                           
 20417                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 20418                           ;stkvar	_i @ sp[(-4)+2]
 20419  018CDA  0EFE               	movlw	-2
 20420  018CDC  6AE3               	clrf	plusw1,c
 20421  018CDE  0EFF               	movlw	-1
 20422  018CE0  6AE3               	clrf	plusw1,c
 20423                           
 20424                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 20425  018CE2  D01E               	goto	l11360
 20426  018CE4                     l11356:
 20427                           
 20428                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 20429                           ;stkvar	_fp @ sp[(-4)+-2]
 20430  018CE4  0EFA               	movlw	-6
 20431  018CE6  006F FF8F FFE6     	movff	plusw1,postinc1
 20432  018CEC  006F FF8F FFE6     	movff	plusw1,postinc1
 20433  018CF2  0E20               	movlw	32
 20434  018CF4  6EE6               	movwf	postinc1,c
 20435  018CF6  0E00               	movlw	0
 20436  018CF8  6EE6               	movwf	postinc1,c
 20437  018CFA  EC21  F0C5         	call	_fputc	;wreg free
 20438                           
 20439                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 20440                           ;stkvar	_i @ sp[(-4)+2]
 20441  018CFE  0EFE               	movlw	-2
 20442  018D00  50E3               	movf	plusw1,w,c
 20443  018D02  0F01               	addlw	1
 20444  018D04  6E01               	movwf	btemp^0,c
 20445  018D06  0EFE               	movlw	-2
 20446  018D08  0060  F007  FFE3   	movff	btemp,plusw1
 20447  018D0E  6A01               	clrf	btemp^0,c
 20448  018D10  0EFF               	movlw	-1
 20449  018D12  50E3               	movf	plusw1,w,c
 20450  018D14  2001               	addwfc	btemp^0,w,c
 20451  018D16  6E01               	movwf	btemp^0,c
 20452  018D18  0EFF               	movlw	-1
 20453  018D1A  0060  F007  FFE3   	movff	btemp,plusw1
 20454  018D20                     l11360:
 20455                           
 20456                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 20457                           ;stkvar	_w @ sp[(-4)+0]
 20458                           ;stkvar	_i @ sp[(-4)+2]
 20459  018D20  50E1               	movf	fsr1l,w,c
 20460  018D22  0FFE               	addlw	-2
 20461  018D24  6ED9               	movwf	fsr2l,c
 20462  018D26  50E2               	movf	fsr1h,w,c
 20463  018D28  6EDA               	movwf	fsr2h,c
 20464  018D2A  0EFF               	movlw	255
 20465  018D2C  22DA               	addwfc	fsr2h,f,c
 20466  018D2E  0EFC               	movlw	-4
 20467  018D30  50E3               	movf	plusw1,w,c
 20468  018D32  5CDE               	subwf	postinc2,w,c
 20469  018D34  50DE               	movf	postinc2,w,c
 20470  018D36  0A80               	xorlw	128
 20471  018D38  6E01               	movwf	btemp^0,c
 20472  018D3A  0EFD               	movlw	-3
 20473  018D3C  50E3               	movf	plusw1,w,c
 20474  018D3E  0A80               	xorlw	128
 20475  018D40  5801               	subwfb	btemp^0,w,c
 20476  018D42  A0D8               	btfss	status,0,c
 20477  018D44  D7CF               	goto	l11356
 20478                           
 20479                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 20480  018D46  B025               	btfsc	_flags^0,0,c
 20481  018D48  D010               	goto	l11364
 20482                           
 20483                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 20484                           ;stkvar	_fp @ sp[(-4)+-2]
 20485  018D4A  0EFA               	movlw	-6
 20486  018D4C  006F FF8F FFE6     	movff	plusw1,postinc1
 20487  018D52  006F FF8F FFE6     	movff	plusw1,postinc1
 20488                           
 20489                           ;stkvar	_buf @ sp[(-6)+-4]
 20490  018D58  0EF6               	movlw	-10
 20491  018D5A  006F FF8F FFE6     	movff	plusw1,postinc1
 20492  018D60  006F FF8F FFE6     	movff	plusw1,postinc1
 20493  018D66  EC6C  F0CD         	call	_fputs	;wreg free
 20494  018D6A                     l11364:
 20495                           
 20496                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 20497                           ;stkvar	_w @ sp[(-4)+0]
 20498                           ;stkvar	_buf @ sp[(-4)+-4]
 20499  018D6A  0EF8               	movlw	-8
 20500  018D6C  006F FF8F FFE6     	movff	plusw1,postinc1
 20501  018D72  006F FF8F FFE6     	movff	plusw1,postinc1
 20502  018D78  EC1B  F0CD         	call	_strlen	;wreg free
 20503  018D7C  0EFC               	movlw	-4
 20504  018D7E  50E3               	movf	plusw1,w,c
 20505  018D80  2601               	addwf	btemp^0,f,c
 20506  018D82  0EFD               	movlw	-3
 20507  018D84  50E3               	movf	plusw1,w,c
 20508  018D86  2202               	addwfc	(btemp+1)^0,f,c
 20509                           
 20510                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 20511  018D88  0EF6               	movlw	246
 20512  018D8A  26E1               	addwf	fsr1l,f,c
 20513  018D8C  0EFF               	movlw	255
 20514  018D8E  22E2               	addwfc	fsr1h,f,c
 20515  018D90  0012               	return		;funcret
 20516  018D92                     __end_of_pad:
 20517                           	opt callstack 0
 20518                           
 20519 ;; *************** function _strlen *****************
 20520 ;; Defined at:
 20521 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 20522 ;; Parameters:    Size  Location     Type
 20523 ;;  s               2  [STACK] PTR const unsigned char 
 20524 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 20525 ;;		 -> spin(120), STR_38(9), STR_37(12), D.lcd(288), 
 20526 ;;		 -> D(290), T(144), port_data(512), STR_3(6), 
 20527 ;;		 -> V(188), 
 20528 ;; Auto vars:     Size  Location     Type
 20529 ;;  a               2  [STACK] PTR const unsigned char 
 20530 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 20531 ;;		 -> spin(120), STR_38(9), STR_37(12), D.lcd(288), 
 20532 ;;		 -> D(290), T(144), port_data(512), STR_3(6), 
 20533 ;;		 -> V(188), 
 20534 ;; Return value:  Size  Location     Type
 20535 ;;                  2  [STACK] unsigned int 
 20536 ;; Registers used:
 20537 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 20538 ;; Tracked objects:
 20539 ;;		On entry : 0/0
 20540 ;;		On exit  : 0/0
 20541 ;;		Unchanged: 0/0
 20542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20547 ;;Total ram usage:        0 bytes
 20548 ;; Hardware stack levels used:    1
 20549 ;; Hardware stack levels required when called:   15
 20550 ;; This function calls:
 20551 ;;		Nothing
 20552 ;; This function is called by:
 20553 ;;		_eaDogM_WriteString
 20554 ;;		_spinners
 20555 ;;		_calc_bsoc
 20556 ;;		_pad
 20557 ;;		_stoa
 20558 ;; This function uses a reentrant model
 20559 ;;
 20560                           
 20561                           	psect	text72
 20562  019A36                     __ptext72:
 20563                           	opt callstack 0
 20564  019A36                     _strlen:
 20565                           	opt callstack 0
 20566                           
 20567                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20568  019A36  52E6               	movf	postinc1,f,c
 20569  019A38  52E6               	movf	postinc1,f,c
 20570                           
 20571                           ;stkvar	_s @ sp[(-2)+-2]
 20572                           
 20573                           ;incstack = 0
 20574 ;; hardware stack exceeded
 20575  019A3A  0EFC               	movlw	-4
 20576  019A3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 20577  019A42  0EFD               	movlw	-3
 20578  019A44  006F FF8C  F00C    	movff	plusw1,btemp+11
 20579                           
 20580                           ;stkvar	_a @ sp[(-2)+0]
 20581  019A4A  0EFF               	movlw	-1
 20582  019A4C  0060  F033  FFE3   	movff	btemp+11,plusw1
 20583  019A52  0EFE               	movlw	-2
 20584  019A54  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20585  019A5A  D011               	goto	l7422
 20586  019A5C                     l7420:
 20587                           
 20588                           ;stkvar	_s @ sp[(-2)+-2]
 20589  019A5C  0EFC               	movlw	-4
 20590  019A5E  50E3               	movf	plusw1,w,c
 20591  019A60  0F01               	addlw	1
 20592  019A62  6E01               	movwf	btemp^0,c
 20593  019A64  0EFC               	movlw	-4
 20594  019A66  0060  F007  FFE3   	movff	btemp,plusw1
 20595  019A6C  6A01               	clrf	btemp^0,c
 20596  019A6E  0EFD               	movlw	-3
 20597  019A70  50E3               	movf	plusw1,w,c
 20598  019A72  2001               	addwfc	btemp^0,w,c
 20599  019A74  6E01               	movwf	btemp^0,c
 20600  019A76  0EFD               	movlw	-3
 20601  019A78  0060  F007  FFE3   	movff	btemp,plusw1
 20602  019A7E                     l7422:
 20603                           
 20604                           ;stkvar	_s @ sp[(-2)+-2]
 20605  019A7E  0EFC               	movlw	-4
 20606  019A80  006F FF8F FFF6     	movff	plusw1,tblptrl
 20607  019A86  0EFD               	movlw	-3
 20608  019A88  006F FF8F FFF7     	movff	plusw1,tblptrh
 20609  019A8E  0E00               	movlw	low (__mediumconst shr (0+16))
 20610  019A90  6EF8               	movwf	tblptru,c
 20611  019A92  0E1F               	movlw	(high __ramtop+-1)
 20612  019A94  64F7               	cpfsgt	tblptrh,c
 20613  019A96  D003               	bra	u5177
 20614  019A98  0008               	tblrd		*
 20615  019A9A  50F5               	movf	tablat,w,c
 20616  019A9C  D007               	bra	u5170
 20617  019A9E                     u5177:
 20618  019A9E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 20619  019AA4  006F FFDF FFEA     	movff	tblptrh,fsr0h
 20620  019AAA  50EF               	movf	indf0,w,c
 20621  019AAC                     u5170:
 20622  019AAC  0900               	iorlw	0
 20623  019AAE  A4D8               	btfss	status,2,c
 20624  019AB0  D7D5               	goto	l7420
 20625                           
 20626                           ;stkvar	_a @ sp[(-2)+0]
 20627                           ;stkvar	_s @ sp[(-2)+-2]
 20628  019AB2  0EFC               	movlw	-4
 20629  019AB4  006F FF8C  F001    	movff	plusw1,btemp
 20630  019ABA  0EFD               	movlw	-3
 20631  019ABC  006F FF8C  F002    	movff	plusw1,btemp+1
 20632  019AC2  0EFE               	movlw	-2
 20633  019AC4  50E3               	movf	plusw1,w,c
 20634  019AC6  5E01               	subwf	btemp^0,f,c
 20635  019AC8  0EFF               	movlw	-1
 20636  019ACA  50E3               	movf	plusw1,w,c
 20637  019ACC  5A02               	subwfb	(btemp+1)^0,f,c
 20638                           
 20639                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 20640  019ACE  52E5               	movf	postdec1,f,c
 20641  019AD0  52E5               	movf	postdec1,f,c
 20642  019AD2  52E5               	movf	postdec1,f,c
 20643  019AD4  52E5               	movf	postdec1,f,c
 20644  019AD6  0012               	return		;funcret
 20645  019AD8                     __end_of_strlen:
 20646                           	opt callstack 0
 20647                           
 20648 ;; *************** function _fputs *****************
 20649 ;; Defined at:
 20650 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 20651 ;; Parameters:    Size  Location     Type
 20652 ;;  s               2  [STACK] PTR const unsigned char 
 20653 ;;		 -> dbuf(80), 
 20654 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20655 ;;		 -> f(6), NULL(0), 
 20656 ;; Auto vars:     Size  Location     Type
 20657 ;;  i               2  [STACK] int 
 20658 ;;  c               1  [STACK] unsigned char 
 20659 ;; Return value:  Size  Location     Type
 20660 ;;                  2  [STACK] int 
 20661 ;; Registers used:
 20662 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 20663 ;; Tracked objects:
 20664 ;;		On entry : 0/3
 20665 ;;		On exit  : 0/0
 20666 ;;		Unchanged: 0/0
 20667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20672 ;;Total ram usage:        0 bytes
 20673 ;; Hardware stack levels used:    1
 20674 ;; Hardware stack levels required when called:   18
 20675 ;; This function calls:
 20676 ;;		_fputc
 20677 ;; This function is called by:
 20678 ;;		_pad
 20679 ;; This function uses a reentrant model
 20680 ;;
 20681                           
 20682                           	psect	text73
 20683  019AD8                     __ptext73:
 20684                           	opt callstack 0
 20685  019AD8                     _fputs:
 20686                           	opt callstack 0
 20687                           
 20688                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20689  019AD8  52E6               	movf	postinc1,f,c
 20690  019ADA  52E6               	movf	postinc1,f,c
 20691  019ADC  52E6               	movf	postinc1,f,c
 20692                           
 20693                           ;stkvar	_i @ sp[(-3)+0]
 20694                           
 20695                           ;incstack = 0
 20696 ;; hardware stack exceeded
 20697  019ADE  0EFD               	movlw	-3
 20698  019AE0  6AE3               	clrf	plusw1,c
 20699  019AE2  0EFE               	movlw	-2
 20700  019AE4  6AE3               	clrf	plusw1,c
 20701  019AE6  D01F               	goto	l11344
 20702  019AE8                     l11340:
 20703                           
 20704                           ;stkvar	_fp @ sp[(-3)+-4]
 20705  019AE8  0EF9               	movlw	-7
 20706  019AEA  006F FF8F FFE6     	movff	plusw1,postinc1
 20707  019AF0  006F FF8F FFE6     	movff	plusw1,postinc1
 20708                           
 20709                           ;stkvar	_c @ sp[(-5)+2]
 20710  019AF6  0EFD               	movlw	-3
 20711  019AF8  50E3               	movf	plusw1,w,c
 20712  019AFA  6EE6               	movwf	postinc1,c
 20713  019AFC  0E00               	movlw	0
 20714  019AFE  6EE6               	movwf	postinc1,c
 20715  019B00  EC21  F0C5         	call	_fputc	;wreg free
 20716                           
 20717                           ;stkvar	_i @ sp[(-3)+0]
 20718  019B04  0EFD               	movlw	-3
 20719  019B06  50E3               	movf	plusw1,w,c
 20720  019B08  0F01               	addlw	1
 20721  019B0A  6E01               	movwf	btemp^0,c
 20722  019B0C  0EFD               	movlw	-3
 20723  019B0E  0060  F007  FFE3   	movff	btemp,plusw1
 20724  019B14  6A01               	clrf	btemp^0,c
 20725  019B16  0EFE               	movlw	-2
 20726  019B18  50E3               	movf	plusw1,w,c
 20727  019B1A  2001               	addwfc	btemp^0,w,c
 20728  019B1C  6E01               	movwf	btemp^0,c
 20729  019B1E  0EFE               	movlw	-2
 20730  019B20  0060  F007  FFE3   	movff	btemp,plusw1
 20731  019B26                     l11344:
 20732                           
 20733                           ;stkvar	_i @ sp[(-3)+0]
 20734  019B26  0EFD               	movlw	-3
 20735  019B28  006F FF8C  F00B    	movff	plusw1,btemp+10
 20736  019B2E  0EFE               	movlw	-2
 20737  019B30  006F FF8C  F00C    	movff	plusw1,btemp+11
 20738                           
 20739                           ;stkvar	_s @ sp[(-3)+-2]
 20740  019B36  0EFB               	movlw	-5
 20741  019B38  006F FF8C  F009    	movff	plusw1,btemp+8
 20742  019B3E  0EFC               	movlw	-4
 20743  019B40  006F FF8C  F00A    	movff	plusw1,btemp+9
 20744  019B46  500B               	movf	(btemp+10)^0,w,c
 20745  019B48  2409               	addwf	(btemp+8)^0,w,c
 20746  019B4A  6ED9               	movwf	fsr2l,c
 20747  019B4C  500C               	movf	(btemp+11)^0,w,c
 20748  019B4E  200A               	addwfc	(btemp+9)^0,w,c
 20749  019B50  6EDA               	movwf	fsr2h,c
 20750  019B52  50DF               	movf	indf2,w,c
 20751  019B54  6E0C               	movwf	(btemp+11)^0,c
 20752                           
 20753                           ;stkvar	_c @ sp[(-3)+2]
 20754  019B56  0EFF               	movlw	-1
 20755  019B58  0060  F033  FFE3   	movff	btemp+11,plusw1
 20756  019B5E  0EFF               	movlw	-1
 20757  019B60  50E3               	movf	plusw1,w,c
 20758  019B62  A4D8               	btfss	status,2,c
 20759  019B64  D7C1               	goto	l11340
 20760                           
 20761                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 20762  019B66  0EF9               	movlw	249
 20763  019B68  26E1               	addwf	fsr1l,f,c
 20764  019B6A  0EFF               	movlw	255
 20765  019B6C  22E2               	addwfc	fsr1h,f,c
 20766  019B6E  0012               	return		;funcret
 20767  019B70                     __end_of_fputs:
 20768                           	opt callstack 0
 20769                           
 20770 ;; *************** function _fputc *****************
 20771 ;; Defined at:
 20772 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 20773 ;; Parameters:    Size  Location     Type
 20774 ;;  c               2  [STACK] int 
 20775 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20776 ;;		 -> f(6), NULL(0), 
 20777 ;; Auto vars:     Size  Location     Type
 20778 ;;		None
 20779 ;; Return value:  Size  Location     Type
 20780 ;;                  2  [STACK] int 
 20781 ;; Registers used:
 20782 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 20783 ;; Tracked objects:
 20784 ;;		On entry : 0/0
 20785 ;;		On exit  : 0/0
 20786 ;;		Unchanged: 0/0
 20787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20792 ;;Total ram usage:        0 bytes
 20793 ;; Hardware stack levels used:    1
 20794 ;; Hardware stack levels required when called:   17
 20795 ;; This function calls:
 20796 ;;		_putch
 20797 ;; This function is called by:
 20798 ;;		_pad
 20799 ;;		_stoa
 20800 ;;		_vfpfcnvrt
 20801 ;;		_fputs
 20802 ;; This function uses a reentrant model
 20803 ;;
 20804                           
 20805                           	psect	text74
 20806  018A42                     __ptext74:
 20807                           	opt callstack 0
 20808  018A42                     _fputc:
 20809                           	opt callstack 0
 20810                           
 20811                           ;stkvar	_fp @ sp[(0)+-4]
 20812                           
 20813                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20814                           ;incstack = 0
 20815 ;; hardware stack exceeded
 20816  018A42  0EFC               	movlw	-4
 20817  018A44  006F FF8C  F001    	movff	plusw1,btemp
 20818  018A4A  0EFD               	movlw	-3
 20819  018A4C  50E3               	movf	plusw1,w,c
 20820  018A4E  1001               	iorwf	btemp^0,w,c
 20821  018A50  B4D8               	btfsc	status,2,c
 20822  018A52  D009               	goto	u10250
 20823                           
 20824                           ;stkvar	_fp @ sp[(0)+-4]
 20825  018A54  0EFC               	movlw	-4
 20826  018A56  006F FF8C  F001    	movff	plusw1,btemp
 20827  018A5C  0EFD               	movlw	-3
 20828  018A5E  50E3               	movf	plusw1,w,c
 20829  018A60  1001               	iorwf	btemp^0,w,c
 20830  018A62  A4D8               	btfss	status,2,c
 20831  018A64  D006               	goto	l11328
 20832  018A66                     u10250:
 20833                           
 20834                           ;stkvar	_c @ sp[(0)+-2]
 20835  018A66  0EFE               	movlw	-2
 20836  018A68  50E3               	movf	plusw1,w,c
 20837  018A6A  6EE6               	movwf	postinc1,c
 20838  018A6C  EC7C  F0D8         	call	_putch	;wreg free
 20839  018A70  D075               	goto	l3150
 20840  018A72                     l11328:
 20841                           
 20842                           ;stkvar	_fp @ sp[(0)+-4]
 20843  018A72  0EFC               	movlw	-4
 20844  018A74  006F FF8C  F00B    	movff	plusw1,btemp+10
 20845  018A7A  0EFD               	movlw	-3
 20846  018A7C  006F FF8C  F00C    	movff	plusw1,btemp+11
 20847  018A82  0E04               	movlw	4
 20848  018A84  240B               	addwf	(btemp+10)^0,w,c
 20849  018A86  6ED9               	movwf	fsr2l,c
 20850  018A88  0E00               	movlw	0
 20851  018A8A  200C               	addwfc	(btemp+11)^0,w,c
 20852  018A8C  6EDA               	movwf	fsr2h,c
 20853  018A8E  50DE               	movf	postinc2,w,c
 20854  018A90  10DE               	iorwf	postinc2,w,c
 20855  018A92  B4D8               	btfsc	status,2,c
 20856  018A94  D026               	goto	u10270
 20857                           
 20858                           ;stkvar	_fp @ sp[(0)+-4]
 20859  018A96  0EFC               	movlw	-4
 20860  018A98  006F FF8C  F00B    	movff	plusw1,btemp+10
 20861  018A9E  0EFD               	movlw	-3
 20862  018AA0  006F FF8C  F00C    	movff	plusw1,btemp+11
 20863  018AA6  0E04               	movlw	4
 20864  018AA8  240B               	addwf	(btemp+10)^0,w,c
 20865  018AAA  6ED9               	movwf	fsr2l,c
 20866  018AAC  0E00               	movlw	0
 20867  018AAE  200C               	addwfc	(btemp+11)^0,w,c
 20868  018AB0  6EDA               	movwf	fsr2h,c
 20869                           
 20870                           ;stkvar	_fp @ sp[(0)+-4]
 20871  018AB2  0EFC               	movlw	-4
 20872  018AB4  006F FF8C  F00B    	movff	plusw1,btemp+10
 20873  018ABA  0EFD               	movlw	-3
 20874  018ABC  006F FF8C  F00C    	movff	plusw1,btemp+11
 20875  018AC2  0E02               	movlw	2
 20876  018AC4  240B               	addwf	(btemp+10)^0,w,c
 20877  018AC6  6EE9               	movwf	fsr0l,c
 20878  018AC8  0E00               	movlw	0
 20879  018ACA  200C               	addwfc	(btemp+11)^0,w,c
 20880  018ACC  6EEA               	movwf	fsr0h,c
 20881  018ACE  50DE               	movf	postinc2,w,c
 20882  018AD0  5CEE               	subwf	postinc0,w,c
 20883  018AD2  50EE               	movf	postinc0,w,c
 20884  018AD4  0A80               	xorlw	128
 20885  018AD6  6E01               	movwf	btemp^0,c
 20886  018AD8  50DE               	movf	postinc2,w,c
 20887  018ADA  0A80               	xorlw	128
 20888  018ADC  5801               	subwfb	btemp^0,w,c
 20889  018ADE  B0D8               	btfsc	status,0,c
 20890  018AE0  D03D               	goto	l3150
 20891  018AE2                     u10270:
 20892                           
 20893                           ;stkvar	_c @ sp[(0)+-2]
 20894                           ;stkvar	_fp @ sp[(0)+-4]
 20895  018AE2  0EFC               	movlw	-4
 20896  018AE4  006F FF8C  F00B    	movff	plusw1,btemp+10
 20897  018AEA  0EFD               	movlw	-3
 20898  018AEC  006F FF8C  F00C    	movff	plusw1,btemp+11
 20899  018AF2  0E02               	movlw	2
 20900  018AF4  240B               	addwf	(btemp+10)^0,w,c
 20901  018AF6  6ED9               	movwf	fsr2l,c
 20902  018AF8  0E00               	movlw	0
 20903  018AFA  200C               	addwfc	(btemp+11)^0,w,c
 20904  018AFC  6EDA               	movwf	fsr2h,c
 20905  018AFE  006F FF78  F00B    	movff	postinc2,btemp+10
 20906  018B04  006F FF74  F00C    	movff	postdec2,btemp+11
 20907                           
 20908                           ;stkvar	_fp @ sp[(0)+-4]
 20909  018B0A  0EFC               	movlw	-4
 20910  018B0C  006F FF8F FFD9     	movff	plusw1,fsr2l
 20911  018B12  0EFD               	movlw	-3
 20912  018B14  006F FF8F FFDA     	movff	plusw1,fsr2h
 20913  018B1A  006F FF78  F009    	movff	postinc2,btemp+8
 20914  018B20  006F FF74  F00A    	movff	postdec2,btemp+9
 20915  018B26  500B               	movf	(btemp+10)^0,w,c
 20916  018B28  2409               	addwf	(btemp+8)^0,w,c
 20917  018B2A  6ED9               	movwf	fsr2l,c
 20918  018B2C  500C               	movf	(btemp+11)^0,w,c
 20919  018B2E  200A               	addwfc	(btemp+9)^0,w,c
 20920  018B30  6EDA               	movwf	fsr2h,c
 20921  018B32  0EFE               	movlw	-2
 20922  018B34  006F FF8F FFDF     	movff	plusw1,indf2
 20923                           
 20924                           ;stkvar	_fp @ sp[(0)+-4]
 20925  018B3A  0EFC               	movlw	-4
 20926  018B3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 20927  018B42  0EFD               	movlw	-3
 20928  018B44  006F FF8C  F00C    	movff	plusw1,btemp+11
 20929  018B4A  0E02               	movlw	2
 20930  018B4C  240B               	addwf	(btemp+10)^0,w,c
 20931  018B4E  6ED9               	movwf	fsr2l,c
 20932  018B50  0E00               	movlw	0
 20933  018B52  200C               	addwfc	(btemp+11)^0,w,c
 20934  018B54  6EDA               	movwf	fsr2h,c
 20935  018B56  2ADE               	incf	postinc2,f,c
 20936  018B58  0E00               	movlw	0
 20937  018B5A  22DD               	addwfc	postdec2,f,c
 20938  018B5C                     l3150:
 20939                           
 20940                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 20941  018B5C  52E5               	movf	postdec1,f,c
 20942  018B5E  52E5               	movf	postdec1,f,c
 20943  018B60  52E5               	movf	postdec1,f,c
 20944  018B62  52E5               	movf	postdec1,f,c
 20945  018B64  0012               	return		;funcret
 20946  018B66                     __end_of_fputc:
 20947                           	opt callstack 0
 20948                           
 20949 ;; *************** function _putch *****************
 20950 ;; Defined at:
 20951 ;;		line 170 in file "eadog.c"
 20952 ;; Parameters:    Size  Location     Type
 20953 ;;  c               1  [STACK] unsigned char 
 20954 ;; Auto vars:     Size  Location     Type
 20955 ;;		None
 20956 ;; Return value:  Size  Location     Type
 20957 ;;                  1  [STACK] void 
 20958 ;; Registers used:
 20959 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 20960 ;; Tracked objects:
 20961 ;;		On entry : 0/0
 20962 ;;		On exit  : 0/0
 20963 ;;		Unchanged: 0/0
 20964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20969 ;;Total ram usage:        0 bytes
 20970 ;; Hardware stack levels used:    1
 20971 ;; Hardware stack levels required when called:   16
 20972 ;; This function calls:
 20973 ;;		_ringBufS_put_dma
 20974 ;; This function is called by:
 20975 ;;		_fputc
 20976 ;; This function uses a reentrant model
 20977 ;;
 20978                           
 20979                           	psect	text75
 20980  01B0F8                     __ptext75:
 20981                           	opt callstack 0
 20982  01B0F8                     _putch:
 20983                           	opt callstack 0
 20984                           
 20985                           ;eadog.c: 170: void putch(char c);eadog.c: 171: {;eadog.c: 172:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 20986                           ;stkvar	_c @ sp[(0)+-1]
 20987                           
 20988                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20989                           ;incstack = 0
 20990 ;; hardware stack exceeded
 20991  01B0F8  0EFF               	movlw	-1
 20992  01B0FA  50E3               	movf	plusw1,w,c
 20993  01B0FC  6EE6               	movwf	postinc1,c
 20994  01B0FE  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 20995  01B104  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 20996  01B10A  EC73  F0CC         	call	_ringBufS_put_dma	;wreg free
 20997                           
 20998                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 20999  01B10E  52E5               	movf	postdec1,f,c
 21000  01B110  0012               	return		;funcret
 21001  01B112                     __end_of_putch:
 21002                           	opt callstack 0
 21003                           
 21004 ;; *************** function _ringBufS_put_dma *****************
 21005 ;; Defined at:
 21006 ;;		line 67 in file "ringbufs.c"
 21007 ;; Parameters:    Size  Location     Type
 21008 ;;  _this           2  [STACK] PTR struct ringBufS_t
 21009 ;;		 -> ring_buf1(67), 
 21010 ;;  c               1  [STACK] const unsigned char 
 21011 ;; Auto vars:     Size  Location     Type
 21012 ;;		None
 21013 ;; Return value:  Size  Location     Type
 21014 ;;                  1  [STACK] void 
 21015 ;; Registers used:
 21016 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21017 ;; Tracked objects:
 21018 ;;		On entry : 0/0
 21019 ;;		On exit  : 0/0
 21020 ;;		Unchanged: 0/0
 21021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21026 ;;Total ram usage:        0 bytes
 21027 ;; Hardware stack levels used:    1
 21028 ;; Hardware stack levels required when called:   15
 21029 ;; This function calls:
 21030 ;;		Nothing
 21031 ;; This function is called by:
 21032 ;;		_putch
 21033 ;; This function uses a reentrant model
 21034 ;;
 21035                           
 21036                           	psect	text76
 21037  0198E6                     __ptext76:
 21038                           	opt callstack 0
 21039  0198E6                     _ringBufS_put_dma:
 21040                           	opt callstack 0
 21041                           
 21042                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 21043                           ;stkvar	__this @ sp[(0)+-2]
 21044                           
 21045                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21046                           ;incstack = 0
 21047 ;; hardware stack exceeded
 21048  0198E6  0EFE               	movlw	-2
 21049  0198E8  006F FF8C  F00B    	movff	plusw1,btemp+10
 21050  0198EE  0EFF               	movlw	-1
 21051  0198F0  006F FF8C  F00C    	movff	plusw1,btemp+11
 21052  0198F6  0E42               	movlw	66
 21053  0198F8  240B               	addwf	(btemp+10)^0,w,c
 21054  0198FA  6ED9               	movwf	fsr2l,c
 21055  0198FC  0E00               	movlw	0
 21056  0198FE  200C               	addwfc	(btemp+11)^0,w,c
 21057  019900  6EDA               	movwf	fsr2h,c
 21058  019902  0E40               	movlw	64
 21059  019904  60DF               	cpfslt	indf2,c
 21060  019906  D040               	goto	l1573
 21061                           
 21062                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 21063                           ;stkvar	_c @ sp[(0)+-3]
 21064                           ;stkvar	__this @ sp[(0)+-2]
 21065  019908  0EFE               	movlw	-2
 21066  01990A  006F FF8C  F00B    	movff	plusw1,btemp+10
 21067  019910  0EFF               	movlw	-1
 21068  019912  006F FF8C  F00C    	movff	plusw1,btemp+11
 21069  019918  0E40               	movlw	64
 21070  01991A  240B               	addwf	(btemp+10)^0,w,c
 21071  01991C  6ED9               	movwf	fsr2l,c
 21072  01991E  0E00               	movlw	0
 21073  019920  200C               	addwfc	(btemp+11)^0,w,c
 21074  019922  6EDA               	movwf	fsr2h,c
 21075  019924  50DF               	movf	indf2,w,c
 21076  019926  6E0C               	movwf	(btemp+11)^0,c
 21077                           
 21078                           ;stkvar	__this @ sp[(0)+-2]
 21079  019928  0EFE               	movlw	-2
 21080  01992A  006F FF8C  F009    	movff	plusw1,btemp+8
 21081  019930  0EFF               	movlw	-1
 21082  019932  006F FF8C  F00A    	movff	plusw1,btemp+9
 21083  019938  500C               	movf	(btemp+11)^0,w,c
 21084  01993A  2409               	addwf	(btemp+8)^0,w,c
 21085  01993C  6ED9               	movwf	fsr2l,c
 21086  01993E  0E00               	movlw	0
 21087  019940  200A               	addwfc	(btemp+9)^0,w,c
 21088  019942  6EDA               	movwf	fsr2h,c
 21089  019944  0EFD               	movlw	-3
 21090  019946  006F FF8F FFDF     	movff	plusw1,indf2
 21091                           
 21092                           ;ringbufs.c: 71:   ++_this->head;
 21093                           ;stkvar	__this @ sp[(0)+-2]
 21094  01994C  0EFE               	movlw	-2
 21095  01994E  006F FF8C  F00B    	movff	plusw1,btemp+10
 21096  019954  0EFF               	movlw	-1
 21097  019956  006F FF8C  F00C    	movff	plusw1,btemp+11
 21098  01995C  0E40               	movlw	64
 21099  01995E  240B               	addwf	(btemp+10)^0,w,c
 21100  019960  6ED9               	movwf	fsr2l,c
 21101  019962  0E00               	movlw	0
 21102  019964  200C               	addwfc	(btemp+11)^0,w,c
 21103  019966  6EDA               	movwf	fsr2h,c
 21104  019968  2ADF               	incf	indf2,f,c
 21105                           
 21106                           ;ringbufs.c: 72:   ++_this->count;
 21107                           ;stkvar	__this @ sp[(0)+-2]
 21108  01996A  0EFE               	movlw	-2
 21109  01996C  006F FF8C  F00B    	movff	plusw1,btemp+10
 21110  019972  0EFF               	movlw	-1
 21111  019974  006F FF8C  F00C    	movff	plusw1,btemp+11
 21112  01997A  0E42               	movlw	66
 21113  01997C  240B               	addwf	(btemp+10)^0,w,c
 21114  01997E  6ED9               	movwf	fsr2l,c
 21115  019980  0E00               	movlw	0
 21116  019982  200C               	addwfc	(btemp+11)^0,w,c
 21117  019984  6EDA               	movwf	fsr2h,c
 21118  019986  2ADF               	incf	indf2,f,c
 21119  019988                     l1573:
 21120                           
 21121                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 21122  019988  52E5               	movf	postdec1,f,c
 21123  01998A  52E5               	movf	postdec1,f,c
 21124  01998C  52E5               	movf	postdec1,f,c
 21125  01998E  0012               	return		;funcret
 21126  019990                     __end_of_ringBufS_put_dma:
 21127                           	opt callstack 0
 21128                           
 21129 ;; *************** function _atoi *****************
 21130 ;; Defined at:
 21131 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 21132 ;; Parameters:    Size  Location     Type
 21133 ;;  s               2  [STACK] PTR const unsigned char 
 21134 ;;		 -> STR_56(85), STR_54(3), STR_53(3), STR_52(19), 
 21135 ;;		 -> STR_51(19), STR_50(19), STR_49(19), STR_48(19), 
 21136 ;;		 -> STR_47(19), STR_46(24), STR_45(15), STR_44(15), 
 21137 ;;		 -> STR_43(15), STR_42(10), STR_41(10), STR_40(19), 
 21138 ;;		 -> STR_39(19), STR_36(3), STR_35(3), STR_34(3), 
 21139 ;;		 -> STR_33(17), STR_32(16), STR_31(16), STR_30(20), 
 21140 ;;		 -> STR_29(20), STR_28(19), STR_27(19), STR_26(19), 
 21141 ;;		 -> STR_25(19), STR_24(19), STR_23(19), STR_22(19), 
 21142 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 21143 ;;		 -> STR_17(26), STR_16(22), STR_15(17), STR_14(17), 
 21144 ;;		 -> STR_13(17), STR_12(17), STR_11(22), STR_10(22), 
 21145 ;;		 -> STR_9(23), STR_8(18), STR_7(17), STR_6(17), 
 21146 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 21147 ;; Auto vars:     Size  Location     Type
 21148 ;;  n               2  [STACK] int 
 21149 ;;  neg             2  [STACK] int 
 21150 ;; Return value:  Size  Location     Type
 21151 ;;                  2  [STACK] int 
 21152 ;; Registers used:
 21153 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 21154 ;; Tracked objects:
 21155 ;;		On entry : 0/0
 21156 ;;		On exit  : 0/0
 21157 ;;		Unchanged: 0/0
 21158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21163 ;;Total ram usage:        0 bytes
 21164 ;; Hardware stack levels used:    1
 21165 ;; Hardware stack levels required when called:   16
 21166 ;; This function calls:
 21167 ;;		_isdigit
 21168 ;;		_isspace
 21169 ;; This function is called by:
 21170 ;;		_vfpfcnvrt
 21171 ;; This function uses a reentrant model
 21172 ;;
 21173                           
 21174                           	psect	text77
 21175  016C72                     __ptext77:
 21176                           	opt callstack 0
 21177  016C72                     _atoi:
 21178                           	opt callstack 0
 21179                           
 21180                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21181  016C72  0E09               	movlw	9
 21182  016C74  26E1               	addwf	fsr1l,f,c
 21183  016C76  0E00               	movlw	0
 21184  016C78  22E2               	addwfc	fsr1h,f,c
 21185                           
 21186                           ;stkvar	_n @ sp[(-9)+5]
 21187                           
 21188                           ;incstack = 0
 21189 ;; hardware stack exceeded
 21190  016C7A  0EFC               	movlw	-4
 21191  016C7C  6AE3               	clrf	plusw1,c
 21192  016C7E  0EFD               	movlw	-3
 21193  016C80  6AE3               	clrf	plusw1,c
 21194                           
 21195                           ;stkvar	_neg @ sp[(-9)+7]
 21196  016C82  0EFE               	movlw	-2
 21197  016C84  6AE3               	clrf	plusw1,c
 21198  016C86  0EFF               	movlw	-1
 21199  016C88  6AE3               	clrf	plusw1,c
 21200  016C8A  D011               	goto	l9030
 21201  016C8C                     l9028:
 21202                           
 21203                           ;stkvar	_s @ sp[(-9)+-2]
 21204  016C8C  0EF5               	movlw	-11
 21205  016C8E  50E3               	movf	plusw1,w,c
 21206  016C90  0F01               	addlw	1
 21207  016C92  6E01               	movwf	btemp^0,c
 21208  016C94  0EF5               	movlw	-11
 21209  016C96  0060  F007  FFE3   	movff	btemp,plusw1
 21210  016C9C  6A01               	clrf	btemp^0,c
 21211  016C9E  0EF6               	movlw	-10
 21212  016CA0  50E3               	movf	plusw1,w,c
 21213  016CA2  2001               	addwfc	btemp^0,w,c
 21214  016CA4  6E01               	movwf	btemp^0,c
 21215  016CA6  0EF6               	movlw	-10
 21216  016CA8  0060  F007  FFE3   	movff	btemp,plusw1
 21217  016CAE                     l9030:
 21218                           
 21219                           ;stkvar	_atoi$5870 @ sp[(-9)+4]
 21220  016CAE  0EFB               	movlw	-5
 21221  016CB0  6AE3               	clrf	plusw1,c
 21222  016CB2  2AE3               	incf	plusw1,f,c
 21223                           
 21224                           ;stkvar	_s @ sp[(-9)+-2]
 21225  016CB4  50E1               	movf	fsr1l,w,c
 21226  016CB6  0FF5               	addlw	-11
 21227  016CB8  6ED9               	movwf	fsr2l,c
 21228  016CBA  50E2               	movf	fsr1h,w,c
 21229  016CBC  6EDA               	movwf	fsr2h,c
 21230  016CBE  0EFF               	movlw	255
 21231  016CC0  22DA               	addwfc	fsr2h,f,c
 21232  016CC2  006F FF7B FFF6     	movff	postinc2,tblptrl
 21233  016CC8  006F FF77 FFF7     	movff	postdec2,tblptrh
 21234  016CCE                     	if	0	;tblptru may be non-zero
 21235  016CCE                     	endif
 21236  016CCE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21237  016CCE  0E00               	movlw	low (__mediumconst shr (0+16))
 21238  016CD0  6EF8               	movwf	tblptru,c
 21239  016CD2                     	endif
 21240  016CD2  0008               	tblrd		*
 21241  016CD4  50F5               	movf	tablat,w,c
 21242  016CD6  0A20               	xorlw	32
 21243  016CD8  B4D8               	btfsc	status,2,c
 21244  016CDA  D023               	goto	l9038
 21245  016CDC  0EF7               	movlw	247
 21246  016CDE  6E0B               	movwf	(btemp+10)^0,c
 21247  016CE0  0EFF               	movlw	255
 21248  016CE2  6E0C               	movwf	(btemp+11)^0,c
 21249                           
 21250                           ;stkvar	_s @ sp[(-9)+-2]
 21251  016CE4  50E1               	movf	fsr1l,w,c
 21252  016CE6  0FF5               	addlw	-11
 21253  016CE8  6ED9               	movwf	fsr2l,c
 21254  016CEA  50E2               	movf	fsr1h,w,c
 21255  016CEC  6EDA               	movwf	fsr2h,c
 21256  016CEE  0EFF               	movlw	255
 21257  016CF0  22DA               	addwfc	fsr2h,f,c
 21258  016CF2  006F FF7B FFF6     	movff	postinc2,tblptrl
 21259  016CF8  006F FF77 FFF7     	movff	postdec2,tblptrh
 21260  016CFE                     	if	0	;tblptru may be non-zero
 21261  016CFE                     	endif
 21262  016CFE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21263  016CFE  0E00               	movlw	low (__mediumconst shr (0+16))
 21264  016D00  6EF8               	movwf	tblptru,c
 21265  016D02                     	endif
 21266  016D02  0008               	tblrd		*
 21267  016D04  50F5               	movf	tablat,w,c
 21268  016D06  6E09               	movwf	(btemp+8)^0,c
 21269  016D08  6A0A               	clrf	(btemp+9)^0,c
 21270  016D0A  500B               	movf	(btemp+10)^0,w,c
 21271  016D0C  2609               	addwf	(btemp+8)^0,f,c
 21272  016D0E  500C               	movf	(btemp+11)^0,w,c
 21273  016D10  220A               	addwfc	(btemp+9)^0,f,c
 21274  016D12  500A               	movf	(btemp+9)^0,w,c
 21275  016D14  E104               	bnz	u8280
 21276  016D16  0E05               	movlw	5
 21277  016D18  5C09               	subwf	(btemp+8)^0,w,c
 21278  016D1A  A0D8               	btfss	status,0,c
 21279  016D1C  D002               	goto	l9038
 21280  016D1E                     u8280:
 21281                           
 21282                           ;stkvar	_atoi$5870 @ sp[(-9)+4]
 21283  016D1E  0EFB               	movlw	-5
 21284  016D20  6AE3               	clrf	plusw1,c
 21285  016D22                     l9038:
 21286                           
 21287                           ;stkvar	_atoi$5870 @ sp[(-9)+4]
 21288  016D22  0EFB               	movlw	-5
 21289  016D24  50E3               	movf	plusw1,w,c
 21290  016D26  6E0B               	movwf	(btemp+10)^0,c
 21291  016D28  6A0C               	clrf	(btemp+11)^0,c
 21292                           
 21293                           ;stkvar	_atoi$5869 @ sp[(-9)+2]
 21294  016D2A  0EF9               	movlw	-7
 21295  016D2C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21296  016D32  0EFA               	movlw	-6
 21297  016D34  0060  F033  FFE3   	movff	btemp+11,plusw1
 21298                           
 21299                           ;stkvar	_atoi$5869 @ sp[(-9)+2]
 21300  016D3A  0EF9               	movlw	-7
 21301  016D3C  006F FF8C  F001    	movff	plusw1,btemp
 21302  016D42  0EFA               	movlw	-6
 21303  016D44  50E3               	movf	plusw1,w,c
 21304  016D46  1001               	iorwf	btemp^0,w,c
 21305  016D48  B4D8               	btfsc	status,2,c
 21306  016D4A  D01F               	goto	l9048
 21307  016D4C  D79F               	goto	l9028
 21308  016D4E                     l9044:
 21309  016D4E  0E01               	movlw	1
 21310  016D50  6E0B               	movwf	(btemp+10)^0,c
 21311  016D52  0E00               	movlw	0
 21312  016D54  6E0C               	movwf	(btemp+11)^0,c
 21313                           
 21314                           ;stkvar	_neg @ sp[(-9)+7]
 21315  016D56  0EFE               	movlw	-2
 21316  016D58  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21317  016D5E  0EFF               	movlw	-1
 21318  016D60  0060  F033  FFE3   	movff	btemp+11,plusw1
 21319  016D66                     l9046:
 21320                           
 21321                           ;stkvar	_s @ sp[(-9)+-2]
 21322  016D66  0EF5               	movlw	-11
 21323  016D68  50E3               	movf	plusw1,w,c
 21324  016D6A  0F01               	addlw	1
 21325  016D6C  6E01               	movwf	btemp^0,c
 21326  016D6E  0EF5               	movlw	-11
 21327  016D70  0060  F007  FFE3   	movff	btemp,plusw1
 21328  016D76  6A01               	clrf	btemp^0,c
 21329  016D78  0EF6               	movlw	-10
 21330  016D7A  50E3               	movf	plusw1,w,c
 21331  016D7C  2001               	addwfc	btemp^0,w,c
 21332  016D7E  6E01               	movwf	btemp^0,c
 21333  016D80  0EF6               	movlw	-10
 21334  016D82  0060  F007  FFE3   	movff	btemp,plusw1
 21335  016D88  D053               	goto	l9054
 21336  016D8A                     l9048:
 21337                           
 21338                           ;stkvar	_s @ sp[(-9)+-2]
 21339  016D8A  50E1               	movf	fsr1l,w,c
 21340  016D8C  0FF5               	addlw	-11
 21341  016D8E  6ED9               	movwf	fsr2l,c
 21342  016D90  50E2               	movf	fsr1h,w,c
 21343  016D92  6EDA               	movwf	fsr2h,c
 21344  016D94  0EFF               	movlw	255
 21345  016D96  22DA               	addwfc	fsr2h,f,c
 21346  016D98  006F FF7B FFF6     	movff	postinc2,tblptrl
 21347  016D9E  006F FF77 FFF7     	movff	postdec2,tblptrh
 21348  016DA4                     	if	0	;tblptru may be non-zero
 21349  016DA4                     	endif
 21350  016DA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21351  016DA4  0E00               	movlw	low (__mediumconst shr (0+16))
 21352  016DA6  6EF8               	movwf	tblptru,c
 21353  016DA8                     	endif
 21354  016DA8  0008               	tblrd		*
 21355  016DAA  50F5               	movf	tablat,w,c
 21356  016DAC  6E0B               	movwf	(btemp+10)^0,c
 21357  016DAE  6A0C               	clrf	(btemp+11)^0,c
 21358                           
 21359                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21360                           ; Switch size 1, requested type "simple"
 21361                           ; Number of cases is 1, Range of values is 0 to 0
 21362                           ; switch strategies available:
 21363                           ; Name         Instructions Cycles
 21364                           ; simple_byte            4     3 (average)
 21365                           ;	Chosen strategy is simple_byte
 21366  016DB0  500C               	movf	(btemp+11)^0,w,c
 21367  016DB2  0A00               	xorlw	0	; case 0
 21368  016DB4  A4D8               	btfss	status,2,c
 21369  016DB6  D03C               	goto	l9054
 21370                           
 21371                           ; Switch size 1, requested type "simple"
 21372                           ; Number of cases is 2, Range of values is 43 to 45
 21373                           ; switch strategies available:
 21374                           ; Name         Instructions Cycles
 21375                           ; simple_byte            7     4 (average)
 21376                           ;	Chosen strategy is simple_byte
 21377  016DB8  500B               	movf	(btemp+10)^0,w,c
 21378  016DBA  0A2B               	xorlw	43	; case 43
 21379  016DBC  B4D8               	btfsc	status,2,c
 21380  016DBE  D7D3               	goto	l9046
 21381  016DC0  0A06               	xorlw	6	; case 45
 21382  016DC2  B4D8               	btfsc	status,2,c
 21383  016DC4  D7C4               	goto	l9044
 21384  016DC6  D034               	goto	l9054
 21385  016DC8                     l9050:
 21386                           
 21387                           ;stkvar	_n @ sp[(-9)+5]
 21388  016DC8  0EFC               	movlw	-4
 21389  016DCA  006F FF8C  F00B    	movff	plusw1,btemp+10
 21390  016DD0  0EFD               	movlw	-3
 21391  016DD2  006F FF8C  F00C    	movff	plusw1,btemp+11
 21392  016DD8  0E0A               	movlw	10
 21393  016DDA  020B               	mulwf	(btemp+10)^0,c
 21394  016DDC  006F FFCC  F009    	movff	prodl,btemp+8
 21395  016DE2  006F FFD0  F00A    	movff	prodh,btemp+9
 21396  016DE8  020C               	mulwf	(btemp+11)^0,c
 21397  016DEA  50F3               	movf	prodl,w,c
 21398  016DEC  260A               	addwf	(btemp+9)^0,f,c
 21399                           
 21400                           ;stkvar	_s @ sp[(-9)+-2]
 21401  016DEE  50E1               	movf	fsr1l,w,c
 21402  016DF0  0FF5               	addlw	-11
 21403  016DF2  6ED9               	movwf	fsr2l,c
 21404  016DF4  50E2               	movf	fsr1h,w,c
 21405  016DF6  6EDA               	movwf	fsr2h,c
 21406  016DF8  0EFF               	movlw	255
 21407  016DFA  22DA               	addwfc	fsr2h,f,c
 21408  016DFC  006F FF7B FFF6     	movff	postinc2,tblptrl
 21409  016E02  006F FF77 FFF7     	movff	postdec2,tblptrh
 21410  016E08                     	if	0	;tblptru may be non-zero
 21411  016E08                     	endif
 21412  016E08                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21413  016E08  0E00               	movlw	low (__mediumconst shr (0+16))
 21414  016E0A  6EF8               	movwf	tblptru,c
 21415  016E0C                     	endif
 21416  016E0C  0008               	tblrd		*
 21417  016E0E  50F5               	movf	tablat,w,c
 21418  016E10  5E09               	subwf	(btemp+8)^0,f,c
 21419  016E12  0E00               	movlw	0
 21420  016E14  5A0A               	subwfb	(btemp+9)^0,f,c
 21421  016E16  0E30               	movlw	48
 21422  016E18  2609               	addwf	(btemp+8)^0,f,c
 21423  016E1A  0E00               	movlw	0
 21424  016E1C  220A               	addwfc	(btemp+9)^0,f,c
 21425                           
 21426                           ;stkvar	_n @ sp[(-9)+5]
 21427  016E1E  0EFC               	movlw	-4
 21428  016E20  0060  F027  FFE3   	movff	btemp+8,plusw1
 21429  016E26  0EFD               	movlw	-3
 21430  016E28  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21431  016E2E  D79B               	goto	l9046
 21432  016E30                     l9054:
 21433  016E30  0ED0               	movlw	208
 21434  016E32  6E0B               	movwf	(btemp+10)^0,c
 21435  016E34  0EFF               	movlw	255
 21436  016E36  6E0C               	movwf	(btemp+11)^0,c
 21437                           
 21438                           ;stkvar	_s @ sp[(-9)+-2]
 21439  016E38  50E1               	movf	fsr1l,w,c
 21440  016E3A  0FF5               	addlw	-11
 21441  016E3C  6ED9               	movwf	fsr2l,c
 21442  016E3E  50E2               	movf	fsr1h,w,c
 21443  016E40  6EDA               	movwf	fsr2h,c
 21444  016E42  0EFF               	movlw	255
 21445  016E44  22DA               	addwfc	fsr2h,f,c
 21446  016E46  006F FF7B FFF6     	movff	postinc2,tblptrl
 21447  016E4C  006F FF77 FFF7     	movff	postdec2,tblptrh
 21448  016E52                     	if	0	;tblptru may be non-zero
 21449  016E52                     	endif
 21450  016E52                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21451  016E52  0E00               	movlw	low (__mediumconst shr (0+16))
 21452  016E54  6EF8               	movwf	tblptru,c
 21453  016E56                     	endif
 21454  016E56  0008               	tblrd		*
 21455  016E58  50F5               	movf	tablat,w,c
 21456  016E5A  6E09               	movwf	(btemp+8)^0,c
 21457  016E5C  6A0A               	clrf	(btemp+9)^0,c
 21458  016E5E  500B               	movf	(btemp+10)^0,w,c
 21459  016E60  2609               	addwf	(btemp+8)^0,f,c
 21460  016E62  500C               	movf	(btemp+11)^0,w,c
 21461  016E64  220A               	addwfc	(btemp+9)^0,f,c
 21462  016E66  500A               	movf	(btemp+9)^0,w,c
 21463  016E68  E106               	bnz	u8300
 21464  016E6A  0E0A               	movlw	10
 21465  016E6C  5C09               	subwf	(btemp+8)^0,w,c
 21466  016E6E  B0D8               	btfsc	status,0,c
 21467  016E70  D002               	goto	u8300
 21468  016E72  0E01               	movlw	1
 21469  016E74  D001               	goto	u8310
 21470  016E76                     u8300:
 21471  016E76  0E00               	movlw	0
 21472  016E78                     u8310:
 21473  016E78  6E0B               	movwf	(btemp+10)^0,c
 21474  016E7A  6A0C               	clrf	(btemp+11)^0,c
 21475                           
 21476                           ;stkvar	_atoi$5871 @ sp[(-9)+0]
 21477  016E7C  0EF7               	movlw	-9
 21478  016E7E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21479  016E84  0EF8               	movlw	-8
 21480  016E86  0060  F033  FFE3   	movff	btemp+11,plusw1
 21481                           
 21482                           ;stkvar	_atoi$5871 @ sp[(-9)+0]
 21483  016E8C  0EF7               	movlw	-9
 21484  016E8E  006F FF8C  F001    	movff	plusw1,btemp
 21485  016E94  0EF8               	movlw	-8
 21486  016E96  50E3               	movf	plusw1,w,c
 21487  016E98  1001               	iorwf	btemp^0,w,c
 21488  016E9A  A4D8               	btfss	status,2,c
 21489  016E9C  D795               	goto	l9050
 21490                           
 21491                           ;stkvar	_neg @ sp[(-9)+7]
 21492  016E9E  0EFE               	movlw	-2
 21493  016EA0  006F FF8C  F001    	movff	plusw1,btemp
 21494  016EA6  0EFF               	movlw	-1
 21495  016EA8  50E3               	movf	plusw1,w,c
 21496  016EAA  1001               	iorwf	btemp^0,w,c
 21497  016EAC  A4D8               	btfss	status,2,c
 21498  016EAE  D00E               	goto	l9064
 21499                           
 21500                           ;stkvar	_n @ sp[(-9)+5]
 21501  016EB0  0EFC               	movlw	-4
 21502  016EB2  006F FF8C  F001    	movff	plusw1,btemp
 21503  016EB8  1E01               	comf	btemp^0,f,c
 21504  016EBA  0EFD               	movlw	-3
 21505  016EBC  006F FF8C  F002    	movff	plusw1,btemp+1
 21506  016EC2  1E02               	comf	(btemp+1)^0,f,c
 21507  016EC4  2A01               	incf	btemp^0,f,c
 21508  016EC6  B4D8               	btfsc	status,2,c
 21509  016EC8  2A02               	incf	(btemp+1)^0,f,c
 21510  016ECA  D008               	goto	l3081
 21511  016ECC                     l9064:
 21512                           
 21513                           ;stkvar	_n @ sp[(-9)+5]
 21514  016ECC  0EFC               	movlw	-4
 21515  016ECE  006F FF8C  F001    	movff	plusw1,btemp
 21516  016ED4  0EFD               	movlw	-3
 21517  016ED6  006F FF8C  F002    	movff	plusw1,btemp+1
 21518  016EDC                     l3081:
 21519                           
 21520                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 21521  016EDC  0EF5               	movlw	245
 21522  016EDE  26E1               	addwf	fsr1l,f,c
 21523  016EE0  0EFF               	movlw	255
 21524  016EE2  22E2               	addwfc	fsr1h,f,c
 21525  016EE4  0012               	return		;funcret
 21526  016EE6                     __end_of_atoi:
 21527                           	opt callstack 0
 21528                           
 21529 ;; *************** function _isspace *****************
 21530 ;; Defined at:
 21531 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 21532 ;; Parameters:    Size  Location     Type
 21533 ;;  c               2  [STACK] int 
 21534 ;; Auto vars:     Size  Location     Type
 21535 ;;		None
 21536 ;; Return value:  Size  Location     Type
 21537 ;;                  2  [STACK] int 
 21538 ;; Registers used:
 21539 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 21540 ;; Tracked objects:
 21541 ;;		On entry : 0/0
 21542 ;;		On exit  : 0/0
 21543 ;;		Unchanged: 0/0
 21544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21549 ;;Total ram usage:        0 bytes
 21550 ;; Hardware stack levels used:    1
 21551 ;; Hardware stack levels required when called:   15
 21552 ;; This function calls:
 21553 ;;		Nothing
 21554 ;; This function is called by:
 21555 ;;		_atoi
 21556 ;; This function uses a reentrant model
 21557 ;;
 21558                           
 21559                           	psect	text78
 21560  01A450                     __ptext78:
 21561                           	opt callstack 0
 21562  01A450                     _isspace:
 21563                           	opt callstack 0
 21564                           
 21565                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21566  01A450  52E6               	movf	postinc1,f,c
 21567                           
 21568                           ;stkvar	_isspace$5920 @ sp[(-1)+0]
 21569                           
 21570                           ;incstack = 0
 21571 ;; hardware stack exceeded
 21572  01A452  0EFF               	movlw	-1
 21573  01A454  6AE3               	clrf	plusw1,c
 21574  01A456  2AE3               	incf	plusw1,f,c
 21575                           
 21576                           ;stkvar	_c @ sp[(-1)+-2]
 21577  01A458  0EFD               	movlw	-3
 21578  01A45A  006F FF8C  F001    	movff	plusw1,btemp
 21579  01A460  0E20               	movlw	32
 21580  01A462  1801               	xorwf	btemp^0,w,c
 21581  01A464  E104               	bnz	u7130
 21582  01A466  0EFE               	movlw	-2
 21583  01A468  50E3               	movf	plusw1,w,c
 21584  01A46A  B4D8               	btfsc	status,2,c
 21585  01A46C  D012               	goto	l8422
 21586  01A46E                     u7130:
 21587                           
 21588                           ;stkvar	_c @ sp[(-1)+-2]
 21589  01A46E  0EFD               	movlw	-3
 21590  01A470  50E3               	movf	plusw1,w,c
 21591  01A472  0FF7               	addlw	247
 21592  01A474  6E0B               	movwf	(btemp+10)^0,c
 21593  01A476  0EFE               	movlw	-2
 21594  01A478  006F FF8C  F00C    	movff	plusw1,btemp+11
 21595  01A47E  0EFF               	movlw	255
 21596  01A480  220C               	addwfc	(btemp+11)^0,f,c
 21597  01A482  500C               	movf	(btemp+11)^0,w,c
 21598  01A484  E104               	bnz	u7140
 21599  01A486  0E05               	movlw	5
 21600  01A488  5C0B               	subwf	(btemp+10)^0,w,c
 21601  01A48A  A0D8               	btfss	status,0,c
 21602  01A48C  D002               	goto	l8422
 21603  01A48E                     u7140:
 21604                           
 21605                           ;stkvar	_isspace$5920 @ sp[(-1)+0]
 21606  01A48E  0EFF               	movlw	-1
 21607  01A490  6AE3               	clrf	plusw1,c
 21608  01A492                     l8422:
 21609                           
 21610                           ;stkvar	_isspace$5920 @ sp[(-1)+0]
 21611  01A492  0EFF               	movlw	-1
 21612  01A494  50E3               	movf	plusw1,w,c
 21613  01A496  6E01               	movwf	btemp^0,c
 21614  01A498  6A02               	clrf	(btemp+1)^0,c
 21615                           
 21616                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 21617  01A49A  52E5               	movf	postdec1,f,c
 21618  01A49C  52E5               	movf	postdec1,f,c
 21619  01A49E  52E5               	movf	postdec1,f,c
 21620  01A4A0  0012               	return		;funcret
 21621  01A4A2                     __end_of_isspace:
 21622                           	opt callstack 0
 21623                           
 21624 ;; *************** function _isdigit *****************
 21625 ;; Defined at:
 21626 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 21627 ;; Parameters:    Size  Location     Type
 21628 ;;  c               2  [STACK] int 
 21629 ;; Auto vars:     Size  Location     Type
 21630 ;;		None
 21631 ;; Return value:  Size  Location     Type
 21632 ;;                  2  [STACK] int 
 21633 ;; Registers used:
 21634 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 21635 ;; Tracked objects:
 21636 ;;		On entry : 0/0
 21637 ;;		On exit  : 0/0
 21638 ;;		Unchanged: 0/0
 21639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21644 ;;Total ram usage:        0 bytes
 21645 ;; Hardware stack levels used:    1
 21646 ;; Hardware stack levels required when called:   15
 21647 ;; This function calls:
 21648 ;;		Nothing
 21649 ;; This function is called by:
 21650 ;;		_vfpfcnvrt
 21651 ;;		_atoi
 21652 ;; This function uses a reentrant model
 21653 ;;
 21654                           
 21655                           	psect	text79
 21656  01AB36                     __ptext79:
 21657                           	opt callstack 0
 21658  01AB36                     _isdigit:
 21659                           	opt callstack 0
 21660                           
 21661                           ;stkvar	_c @ sp[(0)+-2]
 21662                           
 21663                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21664                           ;incstack = 0
 21665 ;; hardware stack exceeded
 21666  01AB36  0EFE               	movlw	-2
 21667  01AB38  50E3               	movf	plusw1,w,c
 21668  01AB3A  0FD0               	addlw	208
 21669  01AB3C  6E0B               	movwf	(btemp+10)^0,c
 21670  01AB3E  0EFF               	movlw	-1
 21671  01AB40  006F FF8C  F00C    	movff	plusw1,btemp+11
 21672  01AB46  0EFF               	movlw	255
 21673  01AB48  220C               	addwfc	(btemp+11)^0,f,c
 21674  01AB4A  500C               	movf	(btemp+11)^0,w,c
 21675  01AB4C  E106               	bnz	u5980
 21676  01AB4E  0E0A               	movlw	10
 21677  01AB50  5C0B               	subwf	(btemp+10)^0,w,c
 21678  01AB52  B0D8               	btfsc	status,0,c
 21679  01AB54  D002               	goto	u5980
 21680  01AB56  0E01               	movlw	1
 21681  01AB58  D001               	goto	u5990
 21682  01AB5A                     u5980:
 21683  01AB5A  0E00               	movlw	0
 21684  01AB5C                     u5990:
 21685  01AB5C  6E01               	movwf	btemp^0,c
 21686  01AB5E  6A02               	clrf	(btemp+1)^0,c
 21687                           
 21688                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 21689  01AB60  52E5               	movf	postdec1,f,c
 21690  01AB62  52E5               	movf	postdec1,f,c
 21691  01AB64  0012               	return		;funcret
 21692  01AB66                     __end_of_isdigit:
 21693                           	opt callstack 0
 21694                           
 21695 ;; *************** function _set_vterm *****************
 21696 ;; Defined at:
 21697 ;;		line 107 in file "mconfig.c"
 21698 ;; Parameters:    Size  Location     Type
 21699 ;;  vterm           1  [STACK] const unsigned char 
 21700 ;; Auto vars:     Size  Location     Type
 21701 ;;		None
 21702 ;; Return value:  Size  Location     Type
 21703 ;;                  1  [STACK] unsigned char 
 21704 ;; Registers used:
 21705 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 21706 ;; Tracked objects:
 21707 ;;		On entry : 0/1
 21708 ;;		On exit  : 0/0
 21709 ;;		Unchanged: 0/0
 21710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21715 ;;Total ram usage:        0 bytes
 21716 ;; Hardware stack levels used:    1
 21717 ;; Hardware stack levels required when called:   15
 21718 ;; This function calls:
 21719 ;;		Nothing
 21720 ;; This function is called by:
 21721 ;;		_main
 21722 ;;		_check_help
 21723 ;; This function uses a reentrant model
 21724 ;;
 21725                           
 21726                           	psect	text80
 21727  01B048                     __ptext80:
 21728                           	opt callstack 0
 21729  01B048                     _set_vterm:
 21730                           	opt callstack 15
 21731                           
 21732                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 21733                           ;stkvar	_vterm @ sp[(0)+-1]
 21734                           
 21735                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21736                           ;incstack = 0
 21737  01B048  0EFF               	movlw	-1
 21738  01B04A  006F FF8C  F00C    	movff	plusw1,btemp+11
 21739  01B050  0E03               	movlw	3
 21740  01B052  160C               	andwf	(btemp+11)^0,f,c
 21741  01B054  EE22  F11F         	lfsr	2,_D+288
 21742  01B058  50DF               	movf	223,w,c
 21743  01B05A  180C               	xorwf	(btemp+11)^0,w,c
 21744  01B05C  0BFE               	andlw	-2
 21745  01B05E  180C               	xorwf	(btemp+11)^0,w,c
 21746  01B060  6EDF               	movwf	223,c
 21747                           
 21748                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 21749  01B062  52E5               	movf	postdec1,f,c
 21750  01B064  0012               	return		;funcret
 21751  01B066                     __end_of_set_vterm:
 21752                           	opt callstack 0
 21753                           
 21754 ;; *************** function _set_temp_display_help *****************
 21755 ;; Defined at:
 21756 ;;		line 211 in file "mconfig.c"
 21757 ;; Parameters:    Size  Location     Type
 21758 ;;  new_response    1  [STACK] const enum E16509
 21759 ;; Auto vars:     Size  Location     Type
 21760 ;;		None
 21761 ;; Return value:  Size  Location     Type
 21762 ;;                  1  [STACK] enum E16509
 21763 ;; Registers used:
 21764 ;;		wreg, fsr1l, fsr1h
 21765 ;; Tracked objects:
 21766 ;;		On entry : 0/2
 21767 ;;		On exit  : 3F/2
 21768 ;;		Unchanged: 0/0
 21769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21774 ;;Total ram usage:        0 bytes
 21775 ;; Hardware stack levels used:    1
 21776 ;; Hardware stack levels required when called:   15
 21777 ;; This function calls:
 21778 ;;		Nothing
 21779 ;; This function is called by:
 21780 ;;		_check_help
 21781 ;; This function uses a reentrant model
 21782 ;;
 21783                           
 21784                           	psect	text81
 21785  01B1E6                     __ptext81:
 21786                           	opt callstack 0
 21787  01B1E6                     _set_temp_display_help:
 21788                           	opt callstack 14
 21789                           
 21790                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 21791                           
 21792                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21793                           ;incstack = 0
 21794  01B1E6  0102               	movlb	2	; () banked
 21795  01B1E8  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 21796                           
 21797                           ; BSR set to: 2
 21798                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 21799                           ;stkvar	_new_response_info @ sp[(0)+-1]
 21800  01B1EA  0EFF               	movlw	-1
 21801  01B1EC  006F FF8C  F2A4    	movff	plusw1,_V+164	;volatile
 21802                           
 21803                           ; BSR set to: 2
 21804                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 21805  01B1F2  52E5               	movf	postdec1,f,c
 21806  01B1F4  0012               	return		;funcret
 21807  01B1F6                     __end_of_set_temp_display_help:
 21808                           	opt callstack 0
 21809                           
 21810 ;; *************** function _set_display_info *****************
 21811 ;; Defined at:
 21812 ;;		line 200 in file "mconfig.c"
 21813 ;; Parameters:    Size  Location     Type
 21814 ;;  new_response    1  [STACK] const enum E16509
 21815 ;; Auto vars:     Size  Location     Type
 21816 ;;		None
 21817 ;; Return value:  Size  Location     Type
 21818 ;;                  1  [STACK] enum E16994
 21819 ;; Registers used:
 21820 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 21821 ;; Tracked objects:
 21822 ;;		On entry : 0/0
 21823 ;;		On exit  : 0/0
 21824 ;;		Unchanged: 0/0
 21825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21830 ;;Total ram usage:        0 bytes
 21831 ;; Hardware stack levels used:    1
 21832 ;; Hardware stack levels required when called:   16
 21833 ;; This function calls:
 21834 ;;		_TimerDone
 21835 ;; This function is called by:
 21836 ;;		_main
 21837 ;;		_check_help
 21838 ;; This function uses a reentrant model
 21839 ;;
 21840                           
 21841                           	psect	text82
 21842  01B066                     __ptext82:
 21843                           	opt callstack 0
 21844  01B066                     _set_display_info:
 21845                           	opt callstack 14
 21846                           
 21847                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 21848                           
 21849                           ; BSR set to: 2
 21850                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21851                           ;incstack = 0
 21852  01B066  0E07               	movlw	7
 21853  01B068  6EE6               	movwf	postinc1,c
 21854  01B06A  EC5D  F0D6         	call	_TimerDone	;wreg free
 21855  01B06E  5001               	movf	btemp^0,w,c
 21856  01B070  B4D8               	btfsc	status,2,c
 21857  01B072  D006               	goto	l1708
 21858                           
 21859                           ;mconfig.c: 205:   old_info = V.response.info;
 21860  01B074  0102               	movlb	2	; () banked
 21861  01B076  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 21862                           
 21863                           ; BSR set to: 2
 21864                           ;mconfig.c: 206:   V.response.info = new_response_info;
 21865                           ;stkvar	_new_response_info @ sp[(0)+-1]
 21866  01B078  0EFF               	movlw	-1
 21867  01B07A  006F FF8C  F2A3    	movff	plusw1,_V+163	;volatile
 21868  01B080                     l1708:
 21869                           
 21870                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 21871  01B080  52E5               	movf	postdec1,f,c
 21872  01B082  0012               	return		;funcret
 21873  01B084                     __end_of_set_display_info:
 21874                           	opt callstack 0
 21875                           
 21876 ;; *************** function _mode_lamp_dim *****************
 21877 ;; Defined at:
 21878 ;;		line 13 in file "mconfig.c"
 21879 ;; Parameters:    Size  Location     Type
 21880 ;;  level           2  [STACK] const unsigned short 
 21881 ;; Auto vars:     Size  Location     Type
 21882 ;;		None
 21883 ;; Return value:  Size  Location     Type
 21884 ;;                  1  [STACK] void 
 21885 ;; Registers used:
 21886 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 21887 ;; Tracked objects:
 21888 ;;		On entry : 0/2
 21889 ;;		On exit  : 0/0
 21890 ;;		Unchanged: 0/0
 21891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21896 ;;Total ram usage:        0 bytes
 21897 ;; Hardware stack levels used:    1
 21898 ;; Hardware stack levels required when called:   16
 21899 ;; This function calls:
 21900 ;;		_PWM8_LoadDutyValue
 21901 ;; This function is called by:
 21902 ;;		_main
 21903 ;;		_check_help
 21904 ;; This function uses a reentrant model
 21905 ;;
 21906                           
 21907                           	psect	text83
 21908  01B12E                     __ptext83:
 21909                           	opt callstack 0
 21910  01B12E                     _mode_lamp_dim:
 21911                           	opt callstack 14
 21912                           
 21913                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 21914                           ;stkvar	_level @ sp[(0)+-2]
 21915                           
 21916                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21917                           ;incstack = 0
 21918  01B12E  0EFE               	movlw	-2
 21919  01B130  006F FF8F FFE6     	movff	plusw1,postinc1
 21920  01B136  006F FF8F FFE6     	movff	plusw1,postinc1
 21921  01B13C  ECBB  F0D3         	call	_PWM8_LoadDutyValue	;wreg free
 21922                           
 21923                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 21924  01B140  52E5               	movf	postdec1,f,c
 21925  01B142  52E5               	movf	postdec1,f,c
 21926  01B144  0012               	return		;funcret
 21927  01B146                     __end_of_mode_lamp_dim:
 21928                           	opt callstack 0
 21929                           
 21930 ;; *************** function _mode_lamp_bright *****************
 21931 ;; Defined at:
 21932 ;;		line 18 in file "mconfig.c"
 21933 ;; Parameters:    Size  Location     Type
 21934 ;;		None
 21935 ;; Auto vars:     Size  Location     Type
 21936 ;;		None
 21937 ;; Return value:  Size  Location     Type
 21938 ;;                  1  [STACK] void 
 21939 ;; Registers used:
 21940 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 21941 ;; Tracked objects:
 21942 ;;		On entry : 0/0
 21943 ;;		On exit  : 0/0
 21944 ;;		Unchanged: 0/0
 21945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21950 ;;Total ram usage:        0 bytes
 21951 ;; Hardware stack levels used:    1
 21952 ;; Hardware stack levels required when called:   16
 21953 ;; This function calls:
 21954 ;;		_PWM8_LoadDutyValue
 21955 ;; This function is called by:
 21956 ;;		_check_help
 21957 ;; This function uses a reentrant model
 21958 ;;
 21959                           
 21960                           	psect	text84
 21961  01B204                     __ptext84:
 21962                           	opt callstack 0
 21963  01B204                     _mode_lamp_bright:
 21964                           	opt callstack 13
 21965                           
 21966                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 21967                           
 21968                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21969                           ;incstack = 0
 21970  01B204  0E2C               	movlw	44
 21971  01B206  6EE6               	movwf	postinc1,c
 21972  01B208  0E01               	movlw	1
 21973  01B20A  6EE6               	movwf	postinc1,c
 21974  01B20C  ECBB  F0D3         	call	_PWM8_LoadDutyValue	;wreg free
 21975                           
 21976                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 21977  01B210  0012               	return		;funcret
 21978  01B212                     __end_of_mode_lamp_bright:
 21979                           	opt callstack 0
 21980                           
 21981 ;; *************** function _PWM8_LoadDutyValue *****************
 21982 ;; Defined at:
 21983 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 21984 ;; Parameters:    Size  Location     Type
 21985 ;;  dutyValue       2  [STACK] unsigned short 
 21986 ;; Auto vars:     Size  Location     Type
 21987 ;;		None
 21988 ;; Return value:  Size  Location     Type
 21989 ;;                  1  [STACK] void 
 21990 ;; Registers used:
 21991 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 21992 ;; Tracked objects:
 21993 ;;		On entry : 0/2
 21994 ;;		On exit  : 0/0
 21995 ;;		Unchanged: 0/0
 21996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22001 ;;Total ram usage:        0 bytes
 22002 ;; Hardware stack levels used:    1
 22003 ;; Hardware stack levels required when called:   15
 22004 ;; This function calls:
 22005 ;;		Nothing
 22006 ;; This function is called by:
 22007 ;;		_mode_lamp_dim
 22008 ;;		_mode_lamp_bright
 22009 ;; This function uses a reentrant model
 22010 ;;
 22011                           
 22012                           	psect	text85
 22013  01A776                     __ptext85:
 22014                           	opt callstack 0
 22015  01A776                     _PWM8_LoadDutyValue:
 22016                           	opt callstack 14
 22017                           
 22018                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 22019                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22020                           
 22021                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22022                           ;incstack = 0
 22023  01A776  0EFE               	movlw	-2
 22024  01A778  006F FF8C  F00B    	movff	plusw1,btemp+10
 22025  01A77E  0EFF               	movlw	-1
 22026  01A780  006F FF8C  F00C    	movff	plusw1,btemp+11
 22027  01A786  90D8               	bcf	status,0,c
 22028  01A788  320C               	rrcf	(btemp+11)^0,f,c
 22029  01A78A  320B               	rrcf	(btemp+10)^0,f,c
 22030  01A78C  90D8               	bcf	status,0,c
 22031  01A78E  320C               	rrcf	(btemp+11)^0,f,c
 22032  01A790  320B               	rrcf	(btemp+10)^0,f,c
 22033  01A792  500B               	movf	(btemp+10)^0,w,c
 22034  01A794  6E61               	movwf	97,c	;volatile
 22035                           
 22036                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 22037                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22038  01A796  0EFE               	movlw	-2
 22039  01A798  006F FF8C  F00C    	movff	plusw1,btemp+11
 22040  01A79E  0E03               	movlw	3
 22041  01A7A0  160C               	andwf	(btemp+11)^0,f,c
 22042  01A7A2  0E06               	movlw	6
 22043  01A7A4  6E01               	movwf	btemp^0,c
 22044  01A7A6                     u8785:
 22045  01A7A6  90D8               	bcf	status,0,c
 22046  01A7A8  360C               	rlcf	(btemp+11)^0,f,c
 22047  01A7AA  2E01               	decfsz	btemp^0,f,c
 22048  01A7AC  D7FC               	goto	u8785
 22049  01A7AE  500C               	movf	(btemp+11)^0,w,c
 22050  01A7B0  6E60               	movwf	96,c	;volatile
 22051                           
 22052                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 22053  01A7B2  52E5               	movf	postdec1,f,c
 22054  01A7B4  52E5               	movf	postdec1,f,c
 22055  01A7B6  0012               	return		;funcret
 22056  01A7B8                     __end_of_PWM8_LoadDutyValue:
 22057                           	opt callstack 0
 22058                           
 22059 ;; *************** function _help_button *****************
 22060 ;; Defined at:
 22061 ;;		line 26 in file "mconfig.c"
 22062 ;; Parameters:    Size  Location     Type
 22063 ;;		None
 22064 ;; Auto vars:     Size  Location     Type
 22065 ;;		None
 22066 ;; Return value:  Size  Location     Type
 22067 ;;                  1  [STACK] _Bool 
 22068 ;; Registers used:
 22069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22070 ;; Tracked objects:
 22071 ;;		On entry : 0/2
 22072 ;;		On exit  : 0/0
 22073 ;;		Unchanged: 0/0
 22074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22079 ;;Total ram usage:        0 bytes
 22080 ;; Hardware stack levels used:    1
 22081 ;; Hardware stack levels required when called:   16
 22082 ;; This function calls:
 22083 ;;		_StartTimer
 22084 ;;		_TimerDone
 22085 ;; This function is called by:
 22086 ;;		_check_help
 22087 ;; This function uses a reentrant model
 22088 ;;
 22089                           
 22090                           	psect	text86
 22091  01A930                     __ptext86:
 22092                           	opt callstack 0
 22093  01A930                     _help_button:
 22094                           	opt callstack 13
 22095                           
 22096                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 22097                           
 22098                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22099                           ;incstack = 0
 22100  01A930  B0CB               	btfsc	203,0,c	;volatile
 22101  01A932  D00C               	goto	l1651
 22102                           
 22103                           ;mconfig.c: 29:   V.help = 1;
 22104  01A934  0102               	movlb	2	; () banked
 22105  01A936  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 22106                           
 22107                           ; BSR set to: 2
 22108                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 22109  01A938  0E08               	movlw	8
 22110  01A93A  6EE6               	movwf	postinc1,c
 22111  01A93C  EC5D  F0D6         	call	_TimerDone	;wreg free
 22112  01A940  5001               	movf	btemp^0,w,c
 22113  01A942  B4D8               	btfsc	status,2,c
 22114  01A944  D003               	goto	l1651
 22115                           
 22116                           ;mconfig.c: 31:    return 1;
 22117  01A946  0E01               	movlw	1
 22118  01A948  6E01               	movwf	btemp^0,c
 22119  01A94A  0012               	return	
 22120  01A94C                     l1651:
 22121                           
 22122                           ;mconfig.c: 34:  if (!V.help)
 22123  01A94C  0102               	movlb	2	; () banked
 22124  01A94E  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 22125  01A950  D008               	goto	l10100
 22126                           
 22127                           ; BSR set to: 2
 22128                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 22129  01A952  0E2C               	movlw	44
 22130  01A954  6EE6               	movwf	postinc1,c
 22131  01A956  0E01               	movlw	1
 22132  01A958  6EE6               	movwf	postinc1,c
 22133  01A95A  0E08               	movlw	8
 22134  01A95C  6EE6               	movwf	postinc1,c
 22135  01A95E  ECDC  F0D3         	call	_StartTimer	;wreg free
 22136  01A962                     l10100:
 22137                           
 22138                           ;mconfig.c: 37:  return 0;
 22139  01A962  0E00               	movlw	0
 22140  01A964  6E01               	movwf	btemp^0,c
 22141                           
 22142                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 22143  01A966  0012               	return		;funcret
 22144  01A968                     __end_of_help_button:
 22145                           	opt callstack 0
 22146                           
 22147 ;; *************** function _TimerDone *****************
 22148 ;; Defined at:
 22149 ;;		line 20 in file "timers.c"
 22150 ;; Parameters:    Size  Location     Type
 22151 ;;  timer           1  [STACK] const unsigned char 
 22152 ;; Auto vars:     Size  Location     Type
 22153 ;;		None
 22154 ;; Return value:  Size  Location     Type
 22155 ;;                  1  [STACK] _Bool 
 22156 ;; Registers used:
 22157 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22158 ;; Tracked objects:
 22159 ;;		On entry : 0/0
 22160 ;;		On exit  : 0/0
 22161 ;;		Unchanged: 0/0
 22162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22167 ;;Total ram usage:        0 bytes
 22168 ;; Hardware stack levels used:    1
 22169 ;; Hardware stack levels required when called:   15
 22170 ;; This function calls:
 22171 ;;		Nothing
 22172 ;; This function is called by:
 22173 ;;		_main
 22174 ;;		_WaitMs
 22175 ;;		_help_button
 22176 ;;		_check_help
 22177 ;;		_set_display_info
 22178 ;;		_update_adc_result
 22179 ;;		_esr_check
 22180 ;; This function uses a reentrant model
 22181 ;;
 22182                           
 22183                           	psect	text87
 22184  01ACBA                     __ptext87:
 22185                           	opt callstack 0
 22186  01ACBA                     _TimerDone:
 22187                           	opt callstack 14
 22188                           
 22189                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22190                           ;incstack = 0
 22191  01ACBA  0004               	clrwdt		;# 
 22192                           
 22193                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 22194                           ;stkvar	_timer @ sp[(0)+-1]
 22195  01ACBC  0EFF               	movlw	-1
 22196  01ACBE  50E3               	movf	plusw1,w,c
 22197  01ACC0  0D02               	mullw	2
 22198  01ACC2  0EE5               	movlw	low _tickCount
 22199  01ACC4  24F3               	addwf	243,w,c
 22200  01ACC6  6ED9               	movwf	fsr2l,c
 22201  01ACC8  0E02               	movlw	high _tickCount
 22202  01ACCA  20F4               	addwfc	prodh,w,c
 22203  01ACCC  6EDA               	movwf	fsr2h,c
 22204  01ACCE  50DE               	movf	postinc2,w,c
 22205  01ACD0  10DE               	iorwf	postinc2,w,c
 22206  01ACD2  A4D8               	btfss	status,2,c
 22207  01ACD4  D002               	goto	l9334
 22208                           
 22209                           ;timers.c: 24:   return 1;
 22210  01ACD6  0E01               	movlw	1
 22211  01ACD8  D001               	goto	L22
 22212  01ACDA                     l9334:
 22213                           
 22214                           ;timers.c: 26:  return 0;
 22215  01ACDA  0E00               	movlw	0
 22216  01ACDC                     L22:
 22217  01ACDC  6E01               	movwf	btemp^0,c
 22218                           
 22219                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22220  01ACDE  52E5               	movf	postdec1,f,c
 22221  01ACE0  0012               	return		;funcret
 22222  01ACE2                     __end_of_TimerDone:
 22223                           	opt callstack 0
 22224                           
 22225 ;; *************** function _StartTimer *****************
 22226 ;; Defined at:
 22227 ;;		line 12 in file "timers.c"
 22228 ;; Parameters:    Size  Location     Type
 22229 ;;  timer           1  [STACK] const unsigned char 
 22230 ;;  count           2  [STACK] const unsigned short 
 22231 ;; Auto vars:     Size  Location     Type
 22232 ;;		None
 22233 ;; Return value:  Size  Location     Type
 22234 ;;                  1  [STACK] void 
 22235 ;; Registers used:
 22236 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22237 ;; Tracked objects:
 22238 ;;		On entry : 0/0
 22239 ;;		On exit  : 0/0
 22240 ;;		Unchanged: 0/0
 22241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22246 ;;Total ram usage:        0 bytes
 22247 ;; Hardware stack levels used:    1
 22248 ;; Hardware stack levels required when called:   15
 22249 ;; This function calls:
 22250 ;;		Nothing
 22251 ;; This function is called by:
 22252 ;;		_main
 22253 ;;		_WaitMs
 22254 ;;		_help_button
 22255 ;;		_check_help
 22256 ;;		_update_adc_result
 22257 ;;		_calc_bsoc
 22258 ;;		_esr_check
 22259 ;; This function uses a reentrant model
 22260 ;;
 22261                           
 22262                           	psect	text88
 22263  01A7B8                     __ptext88:
 22264                           	opt callstack 0
 22265  01A7B8                     _StartTimer:
 22266                           	opt callstack 0
 22267                           
 22268                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 22269                           ;stkvar	_count @ sp[(0)+-3]
 22270                           
 22271                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22272                           ;incstack = 0
 22273 ;; hardware stack exceeded
 22274  01A7B8  0EFD               	movlw	-3
 22275  01A7BA  006F FF8C  F00B    	movff	plusw1,btemp+10
 22276  01A7C0  0EFE               	movlw	-2
 22277  01A7C2  006F FF8C  F00C    	movff	plusw1,btemp+11
 22278  01A7C8  90D8               	bcf	status,0,c
 22279  01A7CA  340B               	rlcf	(btemp+10)^0,w,c
 22280  01A7CC  6E09               	movwf	(btemp+8)^0,c
 22281  01A7CE  340C               	rlcf	(btemp+11)^0,w,c
 22282  01A7D0  6E0A               	movwf	(btemp+9)^0,c
 22283                           
 22284                           ;stkvar	_timer @ sp[(0)+-1]
 22285  01A7D2  0EFF               	movlw	-1
 22286  01A7D4  50E3               	movf	plusw1,w,c
 22287  01A7D6  0D02               	mullw	2
 22288  01A7D8  0EE5               	movlw	low _tickCount
 22289  01A7DA  24F3               	addwf	243,w,c
 22290  01A7DC  6ED9               	movwf	fsr2l,c
 22291  01A7DE  0E02               	movlw	high _tickCount
 22292  01A7E0  20F4               	addwfc	prodh,w,c
 22293  01A7E2  6EDA               	movwf	fsr2h,c
 22294  01A7E4  0060  F027  FFDE   	movff	btemp+8,postinc2
 22295  01A7EA  0060  F02B  FFDD   	movff	btemp+9,postdec2
 22296                           
 22297                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 22298  01A7F0  52E5               	movf	postdec1,f,c
 22299  01A7F2  52E5               	movf	postdec1,f,c
 22300  01A7F4  52E5               	movf	postdec1,f,c
 22301  01A7F6  0012               	return		;funcret
 22302  01A7F8                     __end_of_StartTimer:
 22303                           	opt callstack 0
 22304                           
 22305 ;; *************** function _display_info *****************
 22306 ;; Defined at:
 22307 ;;		line 190 in file "mconfig.c"
 22308 ;; Parameters:    Size  Location     Type
 22309 ;;		None
 22310 ;; Auto vars:     Size  Location     Type
 22311 ;;		None
 22312 ;; Return value:  Size  Location     Type
 22313 ;;                  1  [STACK] enum E16509
 22314 ;; Registers used:
 22315 ;;		btemp
 22316 ;; Tracked objects:
 22317 ;;		On entry : 0/2
 22318 ;;		On exit  : 0/0
 22319 ;;		Unchanged: 0/0
 22320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22325 ;;Total ram usage:        0 bytes
 22326 ;; Hardware stack levels used:    1
 22327 ;; Hardware stack levels required when called:   15
 22328 ;; This function calls:
 22329 ;;		Nothing
 22330 ;; This function is called by:
 22331 ;;		_check_help
 22332 ;; This function uses a reentrant model
 22333 ;;
 22334                           
 22335                           	psect	text89
 22336  01B27A                     __ptext89:
 22337                           	opt callstack 0
 22338  01B27A                     _display_info:
 22339                           	opt callstack 14
 22340                           
 22341                           ;mconfig.c: 192:  return V.response.info;
 22342                           
 22343                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22344                           ;incstack = 0
 22345  01B27A  0060  FA8C  F001   	movff	_V+163,btemp	;volatile
 22346                           
 22347                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 22348  01B280  0012               	return		;funcret
 22349  01B282                     __end_of_display_info:
 22350                           	opt callstack 0
 22351                           
 22352 ;; *************** function _display_help *****************
 22353 ;; Defined at:
 22354 ;;		line 195 in file "mconfig.c"
 22355 ;; Parameters:    Size  Location     Type
 22356 ;;		None
 22357 ;; Auto vars:     Size  Location     Type
 22358 ;;		None
 22359 ;; Return value:  Size  Location     Type
 22360 ;;                  1  [STACK] enum E16509
 22361 ;; Registers used:
 22362 ;;		btemp
 22363 ;; Tracked objects:
 22364 ;;		On entry : 3F/2
 22365 ;;		On exit  : 0/0
 22366 ;;		Unchanged: 0/0
 22367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22372 ;;Total ram usage:        0 bytes
 22373 ;; Hardware stack levels used:    1
 22374 ;; Hardware stack levels required when called:   15
 22375 ;; This function calls:
 22376 ;;		Nothing
 22377 ;; This function is called by:
 22378 ;;		_check_help
 22379 ;; This function uses a reentrant model
 22380 ;;
 22381                           
 22382                           	psect	text90
 22383  01B282                     __ptext90:
 22384                           	opt callstack 0
 22385  01B282                     _display_help:
 22386                           	opt callstack 14
 22387                           
 22388                           ;mconfig.c: 197:  return V.response.help_temp;
 22389                           
 22390                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22391                           ;incstack = 0
 22392  01B282  0060  FA90  F001   	movff	_V+164,btemp	;volatile
 22393                           
 22394                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 22395  01B288  0012               	return		;funcret
 22396  01B28A                     __end_of_display_help:
 22397                           	opt callstack 0
 22398                           
 22399 ;; *************** function _check_enter_button *****************
 22400 ;; Defined at:
 22401 ;;		line 42 in file "hid.c"
 22402 ;; Parameters:    Size  Location     Type
 22403 ;;  h               1  [STACK] PTR struct H_data
 22404 ;;		 -> H(7), 
 22405 ;; Auto vars:     Size  Location     Type
 22406 ;;		None
 22407 ;; Return value:  Size  Location     Type
 22408 ;;                  1  [STACK] _Bool 
 22409 ;; Registers used:
 22410 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 22411 ;; Tracked objects:
 22412 ;;		On entry : 0/0
 22413 ;;		On exit  : 0/0
 22414 ;;		Unchanged: 0/0
 22415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22420 ;;Total ram usage:        0 bytes
 22421 ;; Hardware stack levels used:    1
 22422 ;; Hardware stack levels required when called:   15
 22423 ;; This function calls:
 22424 ;;		Nothing
 22425 ;; This function is called by:
 22426 ;;		_main
 22427 ;; This function uses a reentrant model
 22428 ;;
 22429                           
 22430                           	psect	text91
 22431  01A7F8                     __ptext91:
 22432                           	opt callstack 0
 22433  01A7F8                     _check_enter_button:
 22434                           	opt callstack 15
 22435                           
 22436                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 22437                           ;stkvar	_h @ sp[(0)+-1]
 22438                           
 22439                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22440                           ;incstack = 0
 22441  01A7F8  0EFF               	movlw	-1
 22442  01A7FA  50E3               	movf	plusw1,w,c
 22443  01A7FC  6ED9               	movwf	fsr2l,c
 22444  01A7FE  6ADA               	clrf	fsr2h,c
 22445  01A800  0E04               	movlw	4
 22446  01A802  26D9               	addwf	fsr2l,f,c
 22447  01A804  50DF               	movf	indf2,w,c
 22448  01A806  A4D8               	btfss	status,2,c
 22449  01A808  D013               	goto	l10764
 22450                           
 22451                           ;stkvar	_h @ sp[(0)+-1]
 22452  01A80A  0EFF               	movlw	-1
 22453  01A80C  50E3               	movf	plusw1,w,c
 22454  01A80E  6ED9               	movwf	fsr2l,c
 22455  01A810  6ADA               	clrf	fsr2h,c
 22456  01A812  0E05               	movlw	5
 22457  01A814  26D9               	addwf	fsr2l,f,c
 22458  01A816  50DF               	movf	indf2,w,c
 22459  01A818  A4D8               	btfss	status,2,c
 22460  01A81A  D00A               	goto	l10764
 22461                           
 22462                           ;hid.c: 45:   h->wait_enter = 1;
 22463                           ;stkvar	_h @ sp[(0)+-1]
 22464  01A81C  0EFF               	movlw	-1
 22465  01A81E  50E3               	movf	plusw1,w,c
 22466  01A820  6ED9               	movwf	fsr2l,c
 22467  01A822  6ADA               	clrf	fsr2h,c
 22468  01A824  0E04               	movlw	4
 22469  01A826  26D9               	addwf	fsr2l,f,c
 22470  01A828  0E01               	movlw	1
 22471  01A82A  6EDF               	movwf	indf2,c
 22472                           
 22473                           ;hid.c: 46:   return 1;
 22474  01A82C  0E01               	movlw	1
 22475  01A82E  D001               	goto	L23
 22476  01A830                     l10764:
 22477                           
 22478                           ;hid.c: 48:  return 0;
 22479  01A830  0E00               	movlw	0
 22480  01A832                     L23:
 22481  01A832  6E01               	movwf	btemp^0,c
 22482                           
 22483                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 22484  01A834  52E5               	movf	postdec1,f,c
 22485  01A836  0012               	return		;funcret
 22486  01A838                     __end_of_check_enter_button:
 22487                           	opt callstack 0
 22488                           
 22489 ;; *************** function _calc_ror_data *****************
 22490 ;; Defined at:
 22491 ;;		line 101 in file "mbmc.c"
 22492 ;; Parameters:    Size  Location     Type
 22493 ;;		None
 22494 ;; Auto vars:     Size  Location     Type
 22495 ;;		None
 22496 ;; Return value:  Size  Location     Type
 22497 ;;                  1  [STACK] void 
 22498 ;; Registers used:
 22499 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22500 ;; Tracked objects:
 22501 ;;		On entry : 0/39
 22502 ;;		On exit  : 0/0
 22503 ;;		Unchanged: 0/0
 22504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22509 ;;Total ram usage:        0 bytes
 22510 ;; Hardware stack levels used:    1
 22511 ;; Hardware stack levels required when called:   18
 22512 ;; This function calls:
 22513 ;;		___flge
 22514 ;;		___flsub
 22515 ;;		_conv_raw_result
 22516 ;;		_fabsf
 22517 ;; This function is called by:
 22518 ;;		_main
 22519 ;; This function uses a reentrant model
 22520 ;;
 22521                           
 22522                           	psect	text92
 22523  017E2E                     __ptext92:
 22524                           	opt callstack 0
 22525  017E2E                     _calc_ror_data:
 22526                           	opt callstack 12
 22527                           
 22528                           ;mbmc.c: 103:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 105:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 22529                           
 22530                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22531                           ;incstack = 0
 22532  017E2E  0060  F21B  FFE6   	movff	calc_ror_data@bcror,postinc1
 22533  017E34  0060  F21F  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 22534  017E3A  0060  F223  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 22535  017E40  0060  F227  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 22536  017E46  0E00               	movlw	0
 22537  017E48  6EE6               	movwf	postinc1,c
 22538  017E4A  0E00               	movlw	0
 22539  017E4C  6EE6               	movwf	postinc1,c
 22540  017E4E  EC25  F0A5         	call	_conv_raw_result	;wreg free
 22541  017E52  0060  F007  FFE6   	movff	btemp,postinc1
 22542  017E58  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22543  017E5E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22544  017E64  0060  F013  FFE6   	movff	btemp+3,postinc1
 22545  017E6A  EC0D  F0D3         	call	___flsub	;wreg free
 22546  017E6E  0060  F007  FFE6   	movff	btemp,postinc1
 22547  017E74  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22548  017E7A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22549  017E80  0060  F013  FFE6   	movff	btemp+3,postinc1
 22550  017E86  ECC6  F0CB         	call	_fabsf	;wreg free
 22551  017E8A  0060  F004  F16C   	movff	btemp,_C+108	;volatile
 22552  017E90  0060  F008  F16D   	movff	btemp+1,_C+109	;volatile
 22553  017E96  0060  F00C  F16E   	movff	btemp+2,_C+110	;volatile
 22554  017E9C  0060  F010  F16F   	movff	btemp+3,_C+111	;volatile
 22555                           
 22556                           ;mbmc.c: 106:  bcror = conv_raw_result(C_BATT, CONV);
 22557  017EA2  0E00               	movlw	0
 22558  017EA4  6EE6               	movwf	postinc1,c
 22559  017EA6  0E00               	movlw	0
 22560  017EA8  6EE6               	movwf	postinc1,c
 22561  017EAA  EC25  F0A5         	call	_conv_raw_result	;wreg free
 22562  017EAE  0060  F004  F086   	movff	btemp,calc_ror_data@bcror
 22563  017EB4  0060  F008  F087   	movff	btemp+1,calc_ror_data@bcror+1
 22564  017EBA  0060  F00C  F088   	movff	btemp+2,calc_ror_data@bcror+2
 22565  017EC0  0060  F010  F089   	movff	btemp+3,calc_ror_data@bcror+3
 22566                           
 22567                           ;mbmc.c: 107:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 22568  017EC6  0060  F22B  FFE6   	movff	calc_ror_data@bvror,postinc1
 22569  017ECC  0060  F22F  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 22570  017ED2  0060  F233  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 22571  017ED8  0060  F237  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 22572  017EDE  0E00               	movlw	0
 22573  017EE0  6EE6               	movwf	postinc1,c
 22574  017EE2  0E04               	movlw	4
 22575  017EE4  6EE6               	movwf	postinc1,c
 22576  017EE6  EC25  F0A5         	call	_conv_raw_result	;wreg free
 22577  017EEA  0060  F007  FFE6   	movff	btemp,postinc1
 22578  017EF0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22579  017EF6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22580  017EFC  0060  F013  FFE6   	movff	btemp+3,postinc1
 22581  017F02  EC0D  F0D3         	call	___flsub	;wreg free
 22582  017F06  0060  F007  FFE6   	movff	btemp,postinc1
 22583  017F0C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22584  017F12  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22585  017F18  0060  F013  FFE6   	movff	btemp+3,postinc1
 22586  017F1E  ECC6  F0CB         	call	_fabsf	;wreg free
 22587  017F22  0060  F004  F168   	movff	btemp,_C+104	;volatile
 22588  017F28  0060  F008  F169   	movff	btemp+1,_C+105	;volatile
 22589  017F2E  0060  F00C  F16A   	movff	btemp+2,_C+106	;volatile
 22590  017F34  0060  F010  F16B   	movff	btemp+3,_C+107	;volatile
 22591                           
 22592                           ;mbmc.c: 108:  if (C.bv_ror < 0.0051)
 22593  017F3A  0EE7               	movlw	231
 22594  017F3C  6EE6               	movwf	postinc1,c
 22595  017F3E  0E1D               	movlw	29
 22596  017F40  6EE6               	movwf	postinc1,c
 22597  017F42  0EA7               	movlw	167
 22598  017F44  6EE6               	movwf	postinc1,c
 22599  017F46  0E3B               	movlw	59
 22600  017F48  6EE6               	movwf	postinc1,c
 22601  017F4A  0060  F5A3  FFE6   	movff	_C+104,postinc1
 22602  017F50  0060  F5A7  FFE6   	movff	_C+105,postinc1
 22603  017F56  0060  F5AB  FFE6   	movff	_C+106,postinc1
 22604  017F5C  0060  F5AF  FFE6   	movff	_C+107,postinc1
 22605  017F62  EC42  F0C1         	call	___flge	;wreg free
 22606  017F66  B001               	btfsc	btemp& (0+255),0,c
 22607  017F68  D009               	goto	l10496
 22608                           
 22609                           ;mbmc.c: 109:   C.bv_ror = 0.0140 + 0.0001;
 22610  017F6A  0EB0               	movlw	176
 22611  017F6C  0101               	movlb	1	; () banked
 22612  017F6E  6F68               	movwf	(_C+104)& (0+255),b	;volatile
 22613  017F70  0E03               	movlw	3
 22614  017F72  6F69               	movwf	(_C+105)& (0+255),b	;volatile
 22615  017F74  0E67               	movlw	103
 22616  017F76  6F6A               	movwf	(_C+106)& (0+255),b	;volatile
 22617  017F78  0E3C               	movlw	60
 22618  017F7A  6F6B               	movwf	(_C+107)& (0+255),b	;volatile
 22619  017F7C                     l10496:
 22620                           
 22621                           ;mbmc.c: 110:  bvror = conv_raw_result(V_BAT, CONV);
 22622  017F7C  0E00               	movlw	0
 22623  017F7E  6EE6               	movwf	postinc1,c
 22624  017F80  0E04               	movlw	4
 22625  017F82  6EE6               	movwf	postinc1,c
 22626  017F84  EC25  F0A5         	call	_conv_raw_result	;wreg free
 22627  017F88  0060  F004  F08A   	movff	btemp,calc_ror_data@bvror
 22628  017F8E  0060  F008  F08B   	movff	btemp+1,calc_ror_data@bvror+1
 22629  017F94  0060  F00C  F08C   	movff	btemp+2,calc_ror_data@bvror+2
 22630  017F9A  0060  F010  F08D   	movff	btemp+3,calc_ror_data@bvror+3
 22631                           
 22632                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 22633  017FA0  0012               	return		;funcret
 22634  017FA2                     __end_of_calc_ror_data:
 22635                           	opt callstack 0
 22636                           
 22637 ;; *************** function _fabsf *****************
 22638 ;; Defined at:
 22639 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 22640 ;; Parameters:    Size  Location     Type
 22641 ;;  x               4  [STACK] float 
 22642 ;; Auto vars:     Size  Location     Type
 22643 ;;  u               4  [STACK] struct .
 22644 ;; Return value:  Size  Location     Type
 22645 ;;                  4  [STACK] float 
 22646 ;; Registers used:
 22647 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 22648 ;; Tracked objects:
 22649 ;;		On entry : 0/0
 22650 ;;		On exit  : 0/0
 22651 ;;		Unchanged: 0/0
 22652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22657 ;;Total ram usage:        0 bytes
 22658 ;; Hardware stack levels used:    1
 22659 ;; Hardware stack levels required when called:   15
 22660 ;; This function calls:
 22661 ;;		Nothing
 22662 ;; This function is called by:
 22663 ;;		_calc_ror_data
 22664 ;;		_esr_check
 22665 ;; This function uses a reentrant model
 22666 ;;
 22667                           
 22668                           	psect	text93
 22669  01978C                     __ptext93:
 22670                           	opt callstack 0
 22671  01978C                     _fabsf:
 22672                           	opt callstack 0
 22673                           
 22674                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22675  01978C  52E6               	movf	postinc1,f,c
 22676  01978E  52E6               	movf	postinc1,f,c
 22677  019790  52E6               	movf	postinc1,f,c
 22678  019792  52E6               	movf	postinc1,f,c
 22679                           
 22680                           ;incstack = 0
 22681  019794  0060  F1F8  F009   	movff	fabsf@F463,btemp+8
 22682  01979A  0060  F1FC  F00A   	movff	fabsf@F463+1,btemp+9
 22683  0197A0  0060  F200  F00B   	movff	fabsf@F463+2,btemp+10
 22684  0197A6  0060  F204  F00C   	movff	fabsf@F463+3,btemp+11
 22685                           
 22686                           ;stkvar	_u @ sp[(-4)+0]
 22687  0197AC  0EFC               	movlw	-4
 22688  0197AE  0060  F027  FFE3   	movff	btemp+8,plusw1
 22689  0197B4  0EFD               	movlw	-3
 22690  0197B6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22691  0197BC  0EFE               	movlw	-2
 22692  0197BE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22693  0197C4  0EFF               	movlw	-1
 22694  0197C6  0060  F033  FFE3   	movff	btemp+11,plusw1
 22695                           
 22696                           ;stkvar	_x @ sp[(-4)+-4]
 22697  0197CC  0EF8               	movlw	-8
 22698  0197CE  006F FF8C  F009    	movff	plusw1,btemp+8
 22699  0197D4  0EF9               	movlw	-7
 22700  0197D6  006F FF8C  F00A    	movff	plusw1,btemp+9
 22701  0197DC  0EFA               	movlw	-6
 22702  0197DE  006F FF8C  F00B    	movff	plusw1,btemp+10
 22703  0197E4  0EFB               	movlw	-5
 22704  0197E6  006F FF8C  F00C    	movff	plusw1,btemp+11
 22705                           
 22706                           ;stkvar	_u @ sp[(-4)+0]
 22707  0197EC  0EFC               	movlw	-4
 22708  0197EE  0060  F027  FFE3   	movff	btemp+8,plusw1
 22709  0197F4  0EFD               	movlw	-3
 22710  0197F6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22711  0197FC  0EFE               	movlw	-2
 22712  0197FE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22713  019804  0EFF               	movlw	-1
 22714  019806  0060  F033  FFE3   	movff	btemp+11,plusw1
 22715                           
 22716                           ;stkvar	_u @ sp[(-4)+0]
 22717  01980C  0EFF               	movlw	-1
 22718  01980E  9EE3               	bcf	plusw1,7,c
 22719                           
 22720                           ;stkvar	_u @ sp[(-4)+0]
 22721  019810  0EFC               	movlw	-4
 22722  019812  006F FF8C  F001    	movff	plusw1,btemp
 22723  019818  0EFD               	movlw	-3
 22724  01981A  006F FF8C  F002    	movff	plusw1,btemp+1
 22725  019820  0EFE               	movlw	-2
 22726  019822  006F FF8C  F003    	movff	plusw1,btemp+2
 22727  019828  0EFF               	movlw	-1
 22728  01982A  006F FF8C  F004    	movff	plusw1,btemp+3
 22729                           
 22730                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 22731  019830  0EF8               	movlw	248
 22732  019832  26E1               	addwf	fsr1l,f,c
 22733  019834  0EFF               	movlw	255
 22734  019836  22E2               	addwfc	fsr1h,f,c
 22735  019838  0012               	return		;funcret
 22736  01983A                     __end_of_fabsf:
 22737                           	opt callstack 0
 22738                           
 22739 ;; *************** function _conv_raw_result *****************
 22740 ;; Defined at:
 22741 ;;		line 95 in file "daq.c"
 22742 ;; Parameters:    Size  Location     Type
 22743 ;;  chan            1  [STACK] const enum E16582
 22744 ;;  to_what         1  [STACK] const enum E16644
 22745 ;; Auto vars:     Size  Location     Type
 22746 ;;		None
 22747 ;; Return value:  Size  Location     Type
 22748 ;;                  4  [STACK] float 
 22749 ;; Registers used:
 22750 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22751 ;; Tracked objects:
 22752 ;;		On entry : 0/39
 22753 ;;		On exit  : 0/0
 22754 ;;		Unchanged: 0/0
 22755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22760 ;;Total ram usage:        0 bytes
 22761 ;; Hardware stack levels used:    1
 22762 ;; Hardware stack levels required when called:   17
 22763 ;; This function calls:
 22764 ;;		___fldiv
 22765 ;;		___flmul
 22766 ;;		___flsub
 22767 ;;		___xxtofl
 22768 ;;		_get_raw_result
 22769 ;;		_nanf
 22770 ;; This function is called by:
 22771 ;;		_main
 22772 ;;		_convert_adc_data
 22773 ;;		_calc_ror_data
 22774 ;;		_init_bsoc
 22775 ;;		_esr_check
 22776 ;; This function uses a reentrant model
 22777 ;;
 22778                           
 22779                           	psect	text94
 22780  014A4A                     __ptext94:
 22781                           	opt callstack 0
 22782  014A4A                     _conv_raw_result:
 22783                           	opt callstack 12
 22784                           
 22785                           ;daq.c: 95: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 96: {;daq.c: 98:  switch (to_what) {
 22786                           
 22787                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22788                           ;incstack = 0
 22789  014A4A  D242               	goto	l10030
 22790  014A4C                     l9976:
 22791                           
 22792                           ;daq.c: 100:   if (!(0b0011110001110111 >> chan & 0x1))
 22793                           ;stkvar	_chan @ sp[(0)+-1]
 22794  014A4C  0EFF               	movlw	-1
 22795  014A4E  006F FF8C  F00C    	movff	plusw1,btemp+11
 22796  014A54  0E77               	movlw	119
 22797  014A56  6E09               	movwf	(btemp+8)^0,c
 22798  014A58  0E3C               	movlw	60
 22799  014A5A  6E0A               	movwf	(btemp+9)^0,c
 22800  014A5C  2A0C               	incf	(btemp+11)^0,f,c
 22801  014A5E  D003               	goto	u9044
 22802  014A60                     u9045:
 22803  014A60  340A               	rlcf	(btemp+9)^0,w,c
 22804  014A62  320A               	rrcf	(btemp+9)^0,f,c
 22805  014A64  3209               	rrcf	(btemp+8)^0,f,c
 22806  014A66                     u9044:
 22807  014A66  2E0C               	decfsz	(btemp+11)^0,f,c
 22808  014A68  D7FB               	goto	u9045
 22809  014A6A  B009               	btfsc	(btemp+8)^0,0,c
 22810  014A6C  D007               	goto	l9982
 22811                           
 22812                           ;daq.c: 101:    return nanf("");
 22813  014A6E  0E6F               	movlw	low (STR_56+84)
 22814  014A70  6EE6               	movwf	postinc1,c
 22815  014A72  0EFD               	movlw	high (STR_56+84)
 22816  014A74  6EE6               	movwf	postinc1,c
 22817  014A76  EC17  F0D1         	call	_nanf	;wreg free
 22818  014A7A  D23A               	goto	l1770
 22819  014A7C                     l9982:
 22820                           
 22821                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1) {
 22822                           ;stkvar	_chan @ sp[(0)+-1]
 22823  014A7C  0EFF               	movlw	-1
 22824  014A7E  006F FF8C  F00C    	movff	plusw1,btemp+11
 22825  014A84  0E03               	movlw	3
 22826  014A86  6E09               	movwf	(btemp+8)^0,c
 22827  014A88  0E00               	movlw	0
 22828  014A8A  6E0A               	movwf	(btemp+9)^0,c
 22829  014A8C  2A0C               	incf	(btemp+11)^0,f,c
 22830  014A8E  D003               	goto	u9064
 22831  014A90                     u9065:
 22832  014A90  340A               	rlcf	(btemp+9)^0,w,c
 22833  014A92  320A               	rrcf	(btemp+9)^0,f,c
 22834  014A94  3209               	rrcf	(btemp+8)^0,f,c
 22835  014A96                     u9064:
 22836  014A96  2E0C               	decfsz	(btemp+11)^0,f,c
 22837  014A98  D7FB               	goto	u9065
 22838  014A9A  A009               	btfss	(btemp+8)^0,0,c
 22839  014A9C  D0EB               	goto	l9996
 22840                           
 22841                           ;daq.c: 104:    if (0b0000000000000001 >> chan & 0x1) {
 22842                           ;stkvar	_chan @ sp[(0)+-1]
 22843  014A9E  0EFF               	movlw	-1
 22844  014AA0  006F FF8C  F00C    	movff	plusw1,btemp+11
 22845  014AA6  0E01               	movlw	1
 22846  014AA8  6E09               	movwf	(btemp+8)^0,c
 22847  014AAA  0E00               	movlw	0
 22848  014AAC  6E0A               	movwf	(btemp+9)^0,c
 22849  014AAE  2A0C               	incf	(btemp+11)^0,f,c
 22850  014AB0  D003               	goto	u9084
 22851  014AB2                     u9085:
 22852  014AB2  340A               	rlcf	(btemp+9)^0,w,c
 22853  014AB4  320A               	rrcf	(btemp+9)^0,f,c
 22854  014AB6  3209               	rrcf	(btemp+8)^0,f,c
 22855  014AB8                     u9084:
 22856  014AB8  2E0C               	decfsz	(btemp+11)^0,f,c
 22857  014ABA  D7FB               	goto	u9085
 22858  014ABC  A009               	btfss	(btemp+8)^0,0,c
 22859  014ABE  D06D               	goto	l9992
 22860                           
 22861                           ;daq.c: 105:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.0850
      +                          000;
 22862  014AC0  0E7B               	movlw	123
 22863  014AC2  6EE6               	movwf	postinc1,c
 22864  014AC4  0E14               	movlw	20
 22865  014AC6  6EE6               	movwf	postinc1,c
 22866  014AC8  0EAE               	movlw	174
 22867  014ACA  6EE6               	movwf	postinc1,c
 22868  014ACC  0E3D               	movlw	61
 22869  014ACE  6EE6               	movwf	postinc1,c
 22870  014AD0  0060  F390  F009   	movff	_R+32,btemp+8	;volatile
 22871  014AD6  0060  F394  F00A   	movff	_R+33,btemp+9	;volatile
 22872  014ADC  0E00               	movlw	0
 22873  014ADE  BE0A               	btfsc	(btemp+9)^0,7,c
 22874  014AE0  0EFF               	movlw	255
 22875  014AE2  6E0B               	movwf	(btemp+10)^0,c
 22876  014AE4  6E0C               	movwf	(btemp+11)^0,c
 22877  014AE6  0060  F027  FFE6   	movff	btemp+8,postinc1
 22878  014AEC  0060  F02B  FFE6   	movff	btemp+9,postinc1
 22879  014AF2  0060  F02F  FFE6   	movff	btemp+10,postinc1
 22880  014AF8  0060  F033  FFE6   	movff	btemp+11,postinc1
 22881  014AFE  0E01               	movlw	1
 22882  014B00  6EE6               	movwf	postinc1,c
 22883  014B02  ECAC  F0BA         	call	___xxtofl	;wreg free
 22884  014B06  0060  F007  FFE6   	movff	btemp,postinc1
 22885  014B0C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22886  014B12  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22887  014B18  0060  F013  FFE6   	movff	btemp+3,postinc1
 22888                           
 22889                           ;stkvar	_chan @ sp[(-8)+-1]
 22890  014B1E  0EF7               	movlw	-9
 22891  014B20  50E3               	movf	plusw1,w,c
 22892  014B22  6EE6               	movwf	postinc1,c
 22893  014B24  EC42  F0D8         	call	_get_raw_result	;wreg free
 22894  014B28  0060  F004  F00B   	movff	btemp,btemp+10
 22895  014B2E  0060  F008  F00C   	movff	btemp+1,btemp+11
 22896  014B34  500B               	movf	(btemp+10)^0,w,c
 22897  014B36  6E05               	movwf	(btemp+4)^0,c
 22898  014B38  500C               	movf	(btemp+11)^0,w,c
 22899  014B3A  6E06               	movwf	(btemp+5)^0,c
 22900  014B3C  6A07               	clrf	(btemp+6)^0,c
 22901  014B3E  6A08               	clrf	(btemp+7)^0,c
 22902  014B40  0060  F017  FFE6   	movff	btemp+4,postinc1
 22903  014B46  0060  F01B  FFE6   	movff	btemp+5,postinc1
 22904  014B4C  0060  F01F  FFE6   	movff	btemp+6,postinc1
 22905  014B52  0060  F023  FFE6   	movff	btemp+7,postinc1
 22906  014B58  0E00               	movlw	0
 22907  014B5A  6EE6               	movwf	postinc1,c
 22908  014B5C  ECAC  F0BA         	call	___xxtofl	;wreg free
 22909  014B60  0060  F007  FFE6   	movff	btemp,postinc1
 22910  014B66  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22911  014B6C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22912  014B72  0060  F013  FFE6   	movff	btemp+3,postinc1
 22913  014B78  EC0D  F0D3         	call	___flsub	;wreg free
 22914  014B7C  0060  F007  FFE6   	movff	btemp,postinc1
 22915  014B82  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22916  014B88  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22917  014B8E  0060  F013  FFE6   	movff	btemp+3,postinc1
 22918  014B94  EC26  F097         	call	___flmul	;wreg free
 22919  014B98  D1AB               	goto	l1770
 22920  014B9A                     l9992:
 22921                           
 22922                           ;daq.c: 107:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.0350
      +                          000;
 22923  014B9A  0E29               	movlw	41
 22924  014B9C  6EE6               	movwf	postinc1,c
 22925  014B9E  0E5C               	movlw	92
 22926  014BA0  6EE6               	movwf	postinc1,c
 22927  014BA2  0E0F               	movlw	15
 22928  014BA4  6EE6               	movwf	postinc1,c
 22929  014BA6  0E3D               	movlw	61
 22930  014BA8  6EE6               	movwf	postinc1,c
 22931  014BAA  0060  F398  F009   	movff	_R+34,btemp+8	;volatile
 22932  014BB0  0060  F39C  F00A   	movff	_R+35,btemp+9	;volatile
 22933  014BB6  0E00               	movlw	0
 22934  014BB8  BE0A               	btfsc	(btemp+9)^0,7,c
 22935  014BBA  0EFF               	movlw	255
 22936  014BBC  6E0B               	movwf	(btemp+10)^0,c
 22937  014BBE  6E0C               	movwf	(btemp+11)^0,c
 22938  014BC0  0060  F027  FFE6   	movff	btemp+8,postinc1
 22939  014BC6  0060  F02B  FFE6   	movff	btemp+9,postinc1
 22940  014BCC  0060  F02F  FFE6   	movff	btemp+10,postinc1
 22941  014BD2  0060  F033  FFE6   	movff	btemp+11,postinc1
 22942  014BD8  0E01               	movlw	1
 22943  014BDA  6EE6               	movwf	postinc1,c
 22944  014BDC  ECAC  F0BA         	call	___xxtofl	;wreg free
 22945  014BE0  0060  F007  FFE6   	movff	btemp,postinc1
 22946  014BE6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22947  014BEC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22948  014BF2  0060  F013  FFE6   	movff	btemp+3,postinc1
 22949                           
 22950                           ;stkvar	_chan @ sp[(-8)+-1]
 22951  014BF8  0EF7               	movlw	-9
 22952  014BFA  50E3               	movf	plusw1,w,c
 22953  014BFC  6EE6               	movwf	postinc1,c
 22954  014BFE  EC42  F0D8         	call	_get_raw_result	;wreg free
 22955  014C02  0060  F004  F00B   	movff	btemp,btemp+10
 22956  014C08  0060  F008  F00C   	movff	btemp+1,btemp+11
 22957  014C0E  500B               	movf	(btemp+10)^0,w,c
 22958  014C10  6E05               	movwf	(btemp+4)^0,c
 22959  014C12  500C               	movf	(btemp+11)^0,w,c
 22960  014C14  6E06               	movwf	(btemp+5)^0,c
 22961  014C16  6A07               	clrf	(btemp+6)^0,c
 22962  014C18  6A08               	clrf	(btemp+7)^0,c
 22963  014C1A  0060  F017  FFE6   	movff	btemp+4,postinc1
 22964  014C20  0060  F01B  FFE6   	movff	btemp+5,postinc1
 22965  014C26  0060  F01F  FFE6   	movff	btemp+6,postinc1
 22966  014C2C  0060  F023  FFE6   	movff	btemp+7,postinc1
 22967  014C32  0E00               	movlw	0
 22968  014C34  6EE6               	movwf	postinc1,c
 22969  014C36  ECAC  F0BA         	call	___xxtofl	;wreg free
 22970  014C3A  0060  F007  FFE6   	movff	btemp,postinc1
 22971  014C40  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22972  014C46  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22973  014C4C  0060  F013  FFE6   	movff	btemp+3,postinc1
 22974  014C52  EC0D  F0D3         	call	___flsub	;wreg free
 22975  014C56  0060  F007  FFE6   	movff	btemp,postinc1
 22976  014C5C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22977  014C62  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22978  014C68  0060  F013  FFE6   	movff	btemp+3,postinc1
 22979  014C6E  EC26  F097         	call	___flmul	;wreg free
 22980  014C72  D13E               	goto	l1770
 22981  014C74                     l9996:
 22982                           
 22983                           ;daq.c: 110:    if (0b0000100000000000 >> chan & 0x1) {
 22984                           ;stkvar	_chan @ sp[(0)+-1]
 22985  014C74  0EFF               	movlw	-1
 22986  014C76  006F FF8C  F00C    	movff	plusw1,btemp+11
 22987  014C7C  0E00               	movlw	0
 22988  014C7E  6E09               	movwf	(btemp+8)^0,c
 22989  014C80  0E08               	movlw	8
 22990  014C82  6E0A               	movwf	(btemp+9)^0,c
 22991  014C84  2A0C               	incf	(btemp+11)^0,f,c
 22992  014C86  D003               	goto	u9104
 22993  014C88                     u9105:
 22994  014C88  340A               	rlcf	(btemp+9)^0,w,c
 22995  014C8A  320A               	rrcf	(btemp+9)^0,f,c
 22996  014C8C  3209               	rrcf	(btemp+8)^0,f,c
 22997  014C8E                     u9104:
 22998  014C8E  2E0C               	decfsz	(btemp+11)^0,f,c
 22999  014C90  D7FB               	goto	u9105
 23000  014C92  A009               	btfss	(btemp+8)^0,0,c
 23001  014C94  D008               	goto	l10004
 23002                           
 23003                           ;daq.c: 111:     return 25.0;
 23004  014C96  0E00               	movlw	0
 23005  014C98  6E01               	movwf	btemp^0,c
 23006  014C9A  0E00               	movlw	0
 23007  014C9C  6E02               	movwf	(btemp+1)^0,c
 23008  014C9E  0EC8               	movlw	200
 23009  014CA0  6E03               	movwf	(btemp+2)^0,c
 23010  014CA2  0E41               	movlw	65
 23011  014CA4  D113               	goto	L24
 23012  014CA6                     l10004:
 23013                           
 23014                           ;daq.c: 113:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 23015  014CA6  0E00               	movlw	0
 23016  014CA8  6EE6               	movwf	postinc1,c
 23017  014CAA  0E00               	movlw	0
 23018  014CAC  6EE6               	movwf	postinc1,c
 23019  014CAE  0E7A               	movlw	122
 23020  014CB0  6EE6               	movwf	postinc1,c
 23021  014CB2  0E44               	movlw	68
 23022  014CB4  6EE6               	movwf	postinc1,c
 23023  014CB6  0E61               	movlw	97
 23024  014CB8  6EE6               	movwf	postinc1,c
 23025  014CBA  0E03               	movlw	3
 23026  014CBC  6EE6               	movwf	postinc1,c
 23027  014CBE  0E84               	movlw	132
 23028  014CC0  6EE6               	movwf	postinc1,c
 23029  014CC2  0E40               	movlw	64
 23030  014CC4  6EE6               	movwf	postinc1,c
 23031                           
 23032                           ;stkvar	_chan @ sp[(-8)+-1]
 23033  014CC6  0EF7               	movlw	-9
 23034  014CC8  50E3               	movf	plusw1,w,c
 23035  014CCA  6EE6               	movwf	postinc1,c
 23036  014CCC  EC42  F0D8         	call	_get_raw_result	;wreg free
 23037  014CD0  0060  F004  F00B   	movff	btemp,btemp+10
 23038  014CD6  0060  F008  F00C   	movff	btemp+1,btemp+11
 23039  014CDC  500B               	movf	(btemp+10)^0,w,c
 23040  014CDE  6E05               	movwf	(btemp+4)^0,c
 23041  014CE0  500C               	movf	(btemp+11)^0,w,c
 23042  014CE2  6E06               	movwf	(btemp+5)^0,c
 23043  014CE4  6A07               	clrf	(btemp+6)^0,c
 23044  014CE6  6A08               	clrf	(btemp+7)^0,c
 23045  014CE8  0060  F017  FFE6   	movff	btemp+4,postinc1
 23046  014CEE  0060  F01B  FFE6   	movff	btemp+5,postinc1
 23047  014CF4  0060  F01F  FFE6   	movff	btemp+6,postinc1
 23048  014CFA  0060  F023  FFE6   	movff	btemp+7,postinc1
 23049  014D00  0E00               	movlw	0
 23050  014D02  6EE6               	movwf	postinc1,c
 23051  014D04  ECAC  F0BA         	call	___xxtofl	;wreg free
 23052  014D08  0060  F007  FFE6   	movff	btemp,postinc1
 23053  014D0E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23054  014D14  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23055  014D1A  0060  F013  FFE6   	movff	btemp+3,postinc1
 23056  014D20  EC26  F097         	call	___flmul	;wreg free
 23057  014D24  0060  F007  FFE6   	movff	btemp,postinc1
 23058  014D2A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23059  014D30  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23060  014D36  0060  F013  FFE6   	movff	btemp+3,postinc1
 23061  014D3C  EC68  F0A2         	call	___fldiv	;wreg free
 23062  014D40  D0D7               	goto	l1770
 23063  014D42                     l10008:
 23064                           
 23065                           ;daq.c: 118:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 23066                           ;stkvar	_chan @ sp[(0)+-1]
 23067  014D42  0EFF               	movlw	-1
 23068  014D44  006F FF8C  F00C    	movff	plusw1,btemp+11
 23069  014D4A  0E03               	movlw	3
 23070  014D4C  6E09               	movwf	(btemp+8)^0,c
 23071  014D4E  0E00               	movlw	0
 23072  014D50  6E0A               	movwf	(btemp+9)^0,c
 23073  014D52  2A0C               	incf	(btemp+11)^0,f,c
 23074  014D54  D003               	goto	u9124
 23075  014D56                     u9125:
 23076  014D56  340A               	rlcf	(btemp+9)^0,w,c
 23077  014D58  320A               	rrcf	(btemp+9)^0,f,c
 23078  014D5A  3209               	rrcf	(btemp+8)^0,f,c
 23079  014D5C                     u9124:
 23080  014D5C  2E0C               	decfsz	(btemp+11)^0,f,c
 23081  014D5E  D7FB               	goto	u9125
 23082  014D60  B009               	btfsc	(btemp+8)^0,0,c
 23083  014D62  D011               	goto	u9150
 23084                           
 23085                           ;stkvar	_chan @ sp[(0)+-1]
 23086  014D64  0EFF               	movlw	-1
 23087  014D66  006F FF8C  F00C    	movff	plusw1,btemp+11
 23088  014D6C  0E00               	movlw	0
 23089  014D6E  6E09               	movwf	(btemp+8)^0,c
 23090  014D70  0E08               	movlw	8
 23091  014D72  6E0A               	movwf	(btemp+9)^0,c
 23092  014D74  2A0C               	incf	(btemp+11)^0,f,c
 23093  014D76  D003               	goto	u9144
 23094  014D78                     u9145:
 23095  014D78  340A               	rlcf	(btemp+9)^0,w,c
 23096  014D7A  320A               	rrcf	(btemp+9)^0,f,c
 23097  014D7C  3209               	rrcf	(btemp+8)^0,f,c
 23098  014D7E                     u9144:
 23099  014D7E  2E0C               	decfsz	(btemp+11)^0,f,c
 23100  014D80  D7FB               	goto	u9145
 23101  014D82  A009               	btfss	(btemp+8)^0,0,c
 23102  014D84  D04E               	goto	l10016
 23103  014D86                     u9150:
 23104                           
 23105                           ;daq.c: 119:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 23106  014D86  0E00               	movlw	0
 23107  014D88  6EE6               	movwf	postinc1,c
 23108  014D8A  0E00               	movlw	0
 23109  014D8C  6EE6               	movwf	postinc1,c
 23110  014D8E  0E7A               	movlw	122
 23111  014D90  6EE6               	movwf	postinc1,c
 23112  014D92  0E44               	movlw	68
 23113  014D94  6EE6               	movwf	postinc1,c
 23114  014D96  0E00               	movlw	0
 23115  014D98  6EE6               	movwf	postinc1,c
 23116  014D9A  0E00               	movlw	0
 23117  014D9C  6EE6               	movwf	postinc1,c
 23118  014D9E  0E20               	movlw	32
 23119  014DA0  6EE6               	movwf	postinc1,c
 23120  014DA2  0E3F               	movlw	63
 23121  014DA4  6EE6               	movwf	postinc1,c
 23122                           
 23123                           ;stkvar	_chan @ sp[(-8)+-1]
 23124  014DA6  0EF7               	movlw	-9
 23125  014DA8  50E3               	movf	plusw1,w,c
 23126  014DAA  6EE6               	movwf	postinc1,c
 23127  014DAC  EC42  F0D8         	call	_get_raw_result	;wreg free
 23128  014DB0  0060  F004  F00B   	movff	btemp,btemp+10
 23129  014DB6  0060  F008  F00C   	movff	btemp+1,btemp+11
 23130  014DBC  500B               	movf	(btemp+10)^0,w,c
 23131  014DBE  6E05               	movwf	(btemp+4)^0,c
 23132  014DC0  500C               	movf	(btemp+11)^0,w,c
 23133  014DC2  6E06               	movwf	(btemp+5)^0,c
 23134  014DC4  6A07               	clrf	(btemp+6)^0,c
 23135  014DC6  6A08               	clrf	(btemp+7)^0,c
 23136  014DC8  0060  F017  FFE6   	movff	btemp+4,postinc1
 23137  014DCE  0060  F01B  FFE6   	movff	btemp+5,postinc1
 23138  014DD4  0060  F01F  FFE6   	movff	btemp+6,postinc1
 23139  014DDA  0060  F023  FFE6   	movff	btemp+7,postinc1
 23140  014DE0  0E00               	movlw	0
 23141  014DE2  6EE6               	movwf	postinc1,c
 23142  014DE4  ECAC  F0BA         	call	___xxtofl	;wreg free
 23143  014DE8  0060  F007  FFE6   	movff	btemp,postinc1
 23144  014DEE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23145  014DF4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23146  014DFA  0060  F013  FFE6   	movff	btemp+3,postinc1
 23147  014E00  EC26  F097         	call	___flmul	;wreg free
 23148  014E04  0060  F007  FFE6   	movff	btemp,postinc1
 23149  014E0A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23150  014E10  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23151  014E16  0060  F013  FFE6   	movff	btemp+3,postinc1
 23152  014E1C  EC68  F0A2         	call	___fldiv	;wreg free
 23153  014E20  D067               	goto	l1770
 23154  014E22                     l10016:
 23155                           
 23156                           ;daq.c: 121:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 23157  014E22  0E00               	movlw	0
 23158  014E24  6EE6               	movwf	postinc1,c
 23159  014E26  0E00               	movlw	0
 23160  014E28  6EE6               	movwf	postinc1,c
 23161  014E2A  0E7A               	movlw	122
 23162  014E2C  6EE6               	movwf	postinc1,c
 23163  014E2E  0E44               	movlw	68
 23164  014E30  6EE6               	movwf	postinc1,c
 23165  014E32  0E61               	movlw	97
 23166  014E34  6EE6               	movwf	postinc1,c
 23167  014E36  0E03               	movlw	3
 23168  014E38  6EE6               	movwf	postinc1,c
 23169  014E3A  0E84               	movlw	132
 23170  014E3C  6EE6               	movwf	postinc1,c
 23171  014E3E  0E40               	movlw	64
 23172  014E40  6EE6               	movwf	postinc1,c
 23173                           
 23174                           ;stkvar	_chan @ sp[(-8)+-1]
 23175  014E42  0EF7               	movlw	-9
 23176  014E44  50E3               	movf	plusw1,w,c
 23177  014E46  6EE6               	movwf	postinc1,c
 23178  014E48  EC42  F0D8         	call	_get_raw_result	;wreg free
 23179  014E4C  0060  F004  F00B   	movff	btemp,btemp+10
 23180  014E52  0060  F008  F00C   	movff	btemp+1,btemp+11
 23181  014E58  500B               	movf	(btemp+10)^0,w,c
 23182  014E5A  6E05               	movwf	(btemp+4)^0,c
 23183  014E5C  500C               	movf	(btemp+11)^0,w,c
 23184  014E5E  6E06               	movwf	(btemp+5)^0,c
 23185  014E60  6A07               	clrf	(btemp+6)^0,c
 23186  014E62  6A08               	clrf	(btemp+7)^0,c
 23187  014E64  0060  F017  FFE6   	movff	btemp+4,postinc1
 23188  014E6A  0060  F01B  FFE6   	movff	btemp+5,postinc1
 23189  014E70  0060  F01F  FFE6   	movff	btemp+6,postinc1
 23190  014E76  0060  F023  FFE6   	movff	btemp+7,postinc1
 23191  014E7C  0E00               	movlw	0
 23192  014E7E  6EE6               	movwf	postinc1,c
 23193  014E80  ECAC  F0BA         	call	___xxtofl	;wreg free
 23194  014E84  0060  F007  FFE6   	movff	btemp,postinc1
 23195  014E8A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23196  014E90  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23197  014E96  0060  F013  FFE6   	movff	btemp+3,postinc1
 23198  014E9C  EC26  F097         	call	___flmul	;wreg free
 23199  014EA0  0060  F007  FFE6   	movff	btemp,postinc1
 23200  014EA6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23201  014EAC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23202  014EB2  0060  F013  FFE6   	movff	btemp+3,postinc1
 23203  014EB8  EC68  F0A2         	call	___fldiv	;wreg free
 23204  014EBC  D019               	goto	l1770
 23205  014EBE                     l10022:
 23206                           
 23207                           ;daq.c: 124:   return 0.0;
 23208  014EBE  0E00               	movlw	0
 23209  014EC0  6E01               	movwf	btemp^0,c
 23210  014EC2  0E00               	movlw	0
 23211  014EC4  6E02               	movwf	(btemp+1)^0,c
 23212  014EC6  0E00               	movlw	0
 23213  014EC8  6E03               	movwf	(btemp+2)^0,c
 23214  014ECA  0E00               	movlw	0
 23215  014ECC                     L24:
 23216  014ECC  6E04               	movwf	(btemp+3)^0,c
 23217  014ECE  D010               	goto	l1770
 23218  014ED0                     l10030:
 23219                           
 23220                           ;stkvar	_to_what @ sp[(0)+-2]
 23221  014ED0  0EFE               	movlw	-2
 23222  014ED2  50E3               	movf	plusw1,w,c
 23223  014ED4  6E0B               	movwf	(btemp+10)^0,c
 23224  014ED6  6A0C               	clrf	(btemp+11)^0,c
 23225                           
 23226                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23227                           ; Switch size 1, requested type "simple"
 23228                           ; Number of cases is 1, Range of values is 0 to 0
 23229                           ; switch strategies available:
 23230                           ; Name         Instructions Cycles
 23231                           ; simple_byte            4     3 (average)
 23232                           ;	Chosen strategy is simple_byte
 23233  014ED8  500C               	movf	(btemp+11)^0,w,c
 23234  014EDA  0A00               	xorlw	0	; case 0
 23235  014EDC  A4D8               	btfss	status,2,c
 23236  014EDE  D7EF               	goto	l10022
 23237                           
 23238                           ; Switch size 1, requested type "simple"
 23239                           ; Number of cases is 2, Range of values is 0 to 1
 23240                           ; switch strategies available:
 23241                           ; Name         Instructions Cycles
 23242                           ; simple_byte            7     4 (average)
 23243                           ;	Chosen strategy is simple_byte
 23244  014EE0  500B               	movf	(btemp+10)^0,w,c
 23245  014EE2  0A00               	xorlw	0	; case 0
 23246  014EE4  B4D8               	btfsc	status,2,c
 23247  014EE6  D5B2               	goto	l9976
 23248  014EE8  0A01               	xorlw	1	; case 1
 23249  014EEA  B4D8               	btfsc	status,2,c
 23250  014EEC  D72A               	goto	l10008
 23251  014EEE  D7E7               	goto	l10022
 23252  014EF0                     l1770:
 23253                           
 23254                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 23255  014EF0  52E5               	movf	postdec1,f,c
 23256  014EF2  52E5               	movf	postdec1,f,c
 23257  014EF4  0012               	return		;funcret
 23258  014EF6                     __end_of_conv_raw_result:
 23259                           	opt callstack 0
 23260                           
 23261 ;; *************** function _nanf *****************
 23262 ;; Defined at:
 23263 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 23264 ;; Parameters:    Size  Location     Type
 23265 ;;  s               2  [STACK] PTR const unsigned char 
 23266 ;;		 -> STR_93(1), STR_55(1), 
 23267 ;; Auto vars:     Size  Location     Type
 23268 ;;  u               4  [STACK] struct .
 23269 ;; Return value:  Size  Location     Type
 23270 ;;                  4  [STACK] float 
 23271 ;; Registers used:
 23272 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 23273 ;; Tracked objects:
 23274 ;;		On entry : 0/39
 23275 ;;		On exit  : 0/0
 23276 ;;		Unchanged: 0/0
 23277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23282 ;;Total ram usage:        0 bytes
 23283 ;; Hardware stack levels used:    1
 23284 ;; Hardware stack levels required when called:   15
 23285 ;; This function calls:
 23286 ;;		Nothing
 23287 ;; This function is called by:
 23288 ;;		_conv_raw_result
 23289 ;; This function uses a reentrant model
 23290 ;;
 23291                           
 23292                           	psect	text95
 23293  01A22E                     __ptext95:
 23294                           	opt callstack 0
 23295  01A22E                     _nanf:
 23296                           	opt callstack 0
 23297                           
 23298                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23299  01A22E  52E6               	movf	postinc1,f,c
 23300  01A230  52E6               	movf	postinc1,f,c
 23301  01A232  52E6               	movf	postinc1,f,c
 23302  01A234  52E6               	movf	postinc1,f,c
 23303                           
 23304                           ;incstack = 0
 23305  01A236  0EFF               	movlw	255
 23306  01A238  6E09               	movwf	(btemp+8)^0,c
 23307  01A23A  0EFF               	movlw	255
 23308  01A23C  6E0A               	movwf	(btemp+9)^0,c
 23309  01A23E  0EFF               	movlw	255
 23310  01A240  6E0B               	movwf	(btemp+10)^0,c
 23311  01A242  0E7F               	movlw	127
 23312  01A244  6E0C               	movwf	(btemp+11)^0,c
 23313                           
 23314                           ;stkvar	_u @ sp[(-4)+0]
 23315  01A246  0EFC               	movlw	-4
 23316  01A248  0060  F027  FFE3   	movff	btemp+8,plusw1
 23317  01A24E  0EFD               	movlw	-3
 23318  01A250  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23319  01A256  0EFE               	movlw	-2
 23320  01A258  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23321  01A25E  0EFF               	movlw	-1
 23322  01A260  0060  F033  FFE3   	movff	btemp+11,plusw1
 23323                           
 23324                           ;stkvar	_u @ sp[(-4)+0]
 23325  01A266  0EFC               	movlw	-4
 23326  01A268  006F FF8C  F001    	movff	plusw1,btemp
 23327  01A26E  0EFD               	movlw	-3
 23328  01A270  006F FF8C  F002    	movff	plusw1,btemp+1
 23329  01A276  0EFE               	movlw	-2
 23330  01A278  006F FF8C  F003    	movff	plusw1,btemp+2
 23331  01A27E  0EFF               	movlw	-1
 23332  01A280  006F FF8C  F004    	movff	plusw1,btemp+3
 23333                           
 23334                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 23335  01A286  0EFA               	movlw	250
 23336  01A288  26E1               	addwf	fsr1l,f,c
 23337  01A28A  0EFF               	movlw	255
 23338  01A28C  22E2               	addwfc	fsr1h,f,c
 23339  01A28E  0012               	return		;funcret
 23340  01A290                     __end_of_nanf:
 23341                           	opt callstack 0
 23342                           
 23343 ;; *************** function _get_raw_result *****************
 23344 ;; Defined at:
 23345 ;;		line 87 in file "daq.c"
 23346 ;; Parameters:    Size  Location     Type
 23347 ;;  index           1  [STACK] const enum E16582
 23348 ;; Auto vars:     Size  Location     Type
 23349 ;;		None
 23350 ;; Return value:  Size  Location     Type
 23351 ;;                  2  [STACK] unsigned short 
 23352 ;; Registers used:
 23353 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 23354 ;; Tracked objects:
 23355 ;;		On entry : 0/2
 23356 ;;		On exit  : 0/0
 23357 ;;		Unchanged: 0/0
 23358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23363 ;;Total ram usage:        0 bytes
 23364 ;; Hardware stack levels used:    1
 23365 ;; Hardware stack levels required when called:   15
 23366 ;; This function calls:
 23367 ;;		Nothing
 23368 ;; This function is called by:
 23369 ;;		_main
 23370 ;;		_conv_raw_result
 23371 ;; This function uses a reentrant model
 23372 ;;
 23373                           
 23374                           	psect	text96
 23375  01B084                     __ptext96:
 23376                           	opt callstack 0
 23377  01B084                     _get_raw_result:
 23378                           	opt callstack 13
 23379                           
 23380                           ;daq.c: 87: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 88: {;daq.c: 
      +                          89:  return R.raw_adc[index];
 23381                           ;stkvar	_index @ sp[(0)+-1]
 23382                           
 23383                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23384                           ;incstack = 0
 23385  01B084  0EFF               	movlw	-1
 23386  01B086  50E3               	movf	plusw1,w,c
 23387  01B088  0D02               	mullw	2
 23388  01B08A  50F3               	movf	243,w,c
 23389  01B08C  0FC4               	addlw	low _R
 23390  01B08E  6ED9               	movwf	fsr2l,c
 23391  01B090  6ADA               	clrf	fsr2h,c
 23392  01B092  006F FF78  F001    	movff	postinc2,btemp
 23393  01B098  006F FF74  F002    	movff	postdec2,btemp+1
 23394                           
 23395                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 23396  01B09E  52E5               	movf	postdec1,f,c
 23397  01B0A0  0012               	return		;funcret
 23398  01B0A2                     __end_of_get_raw_result:
 23399                           	opt callstack 0
 23400                           
 23401 ;; *************** function ___xxtofl *****************
 23402 ;; Defined at:
 23403 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 23404 ;; Parameters:    Size  Location     Type
 23405 ;;  sign            1  [STACK] unsigned char 
 23406 ;;  val             4  [STACK] long 
 23407 ;; Auto vars:     Size  Location     Type
 23408 ;;  arg             4  [STACK] unsigned long 
 23409 ;;  exp             1  [STACK] unsigned char 
 23410 ;; Return value:  Size  Location     Type
 23411 ;;                  4  [STACK] unsigned char 
 23412 ;; Registers used:
 23413 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 23414 ;; Tracked objects:
 23415 ;;		On entry : 0/1
 23416 ;;		On exit  : 0/0
 23417 ;;		Unchanged: 0/0
 23418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23423 ;;Total ram usage:        0 bytes
 23424 ;; Hardware stack levels used:    1
 23425 ;; Hardware stack levels required when called:   15
 23426 ;; This function calls:
 23427 ;;		Nothing
 23428 ;; This function is called by:
 23429 ;;		_conv_raw_result
 23430 ;;		_init_bsoc
 23431 ;; This function uses a reentrant model
 23432 ;;
 23433                           
 23434                           	psect	text97
 23435  017558                     __ptext97:
 23436                           	opt callstack 0
 23437  017558                     ___xxtofl:
 23438                           	opt callstack 0
 23439                           
 23440                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23441  017558  0E05               	movlw	5
 23442  01755A  26E1               	addwf	fsr1l,f,c
 23443  01755C  0E00               	movlw	0
 23444  01755E  22E2               	addwfc	fsr1h,f,c
 23445                           
 23446                           ;stkvar	_sign @ sp[(-5)+-1]
 23447                           
 23448                           ;incstack = 0
 23449  017560  0EFA               	movlw	-6
 23450  017562  50E3               	movf	plusw1,w,c
 23451  017564  B4D8               	btfsc	status,2,c
 23452  017566  D01D               	goto	l9512
 23453                           
 23454                           ;stkvar	_val @ sp[(-5)+-5]
 23455  017568  0EF9               	movlw	-7
 23456  01756A  AEE3               	btfss	plusw1,7,c
 23457  01756C  D01A               	goto	l9512
 23458                           
 23459                           ;stkvar	_val @ sp[(-5)+-5]
 23460  01756E  0EF6               	movlw	-10
 23461  017570  006F FF8C  F009    	movff	plusw1,btemp+8
 23462  017576  0EF7               	movlw	-9
 23463  017578  006F FF8C  F00A    	movff	plusw1,btemp+9
 23464  01757E  0EF8               	movlw	-8
 23465  017580  006F FF8C  F00B    	movff	plusw1,btemp+10
 23466  017586  0EF9               	movlw	-7
 23467  017588  006F FF8C  F00C    	movff	plusw1,btemp+11
 23468  01758E  1E09               	comf	(btemp+8)^0,f,c
 23469  017590  1E0A               	comf	(btemp+9)^0,f,c
 23470  017592  1E0B               	comf	(btemp+10)^0,f,c
 23471  017594  1E0C               	comf	(btemp+11)^0,f,c
 23472  017596  2A09               	incf	(btemp+8)^0,f,c
 23473  017598  0E00               	movlw	0
 23474  01759A  220A               	addwfc	(btemp+9)^0,f,c
 23475  01759C  220B               	addwfc	(btemp+10)^0,f,c
 23476  01759E  220C               	addwfc	(btemp+11)^0,f,c
 23477  0175A0  D010               	goto	L25
 23478  0175A2                     l9512:
 23479                           
 23480                           ;stkvar	_val @ sp[(-5)+-5]
 23481  0175A2  0EF6               	movlw	-10
 23482  0175A4  006F FF8C  F009    	movff	plusw1,btemp+8
 23483  0175AA  0EF7               	movlw	-9
 23484  0175AC  006F FF8C  F00A    	movff	plusw1,btemp+9
 23485  0175B2  0EF8               	movlw	-8
 23486  0175B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 23487  0175BA  0EF9               	movlw	-7
 23488  0175BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 23489  0175C2                     L25:
 23490                           
 23491                           ;stkvar	_arg @ sp[(-5)+0]
 23492  0175C2  0EFB               	movlw	-5
 23493  0175C4  0060  F027  FFE3   	movff	btemp+8,plusw1
 23494  0175CA  0EFC               	movlw	-4
 23495  0175CC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23496  0175D2  0EFD               	movlw	-3
 23497  0175D4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23498  0175DA  0EFE               	movlw	-2
 23499  0175DC  0060  F033  FFE3   	movff	btemp+11,plusw1
 23500                           
 23501                           ;stkvar	_val @ sp[(-5)+-5]
 23502  0175E2  0EF6               	movlw	-10
 23503  0175E4  50E3               	movf	plusw1,w,c
 23504  0175E6  E113               	bnz	l9520
 23505  0175E8  0EF7               	movlw	-9
 23506  0175EA  50E3               	movf	plusw1,w,c
 23507  0175EC  E110               	bnz	l9520
 23508  0175EE  0EF8               	movlw	-8
 23509  0175F0  50E3               	movf	plusw1,w,c
 23510  0175F2  E10D               	bnz	l9520
 23511  0175F4  0EF9               	movlw	-7
 23512  0175F6  50E3               	movf	plusw1,w,c
 23513  0175F8  A4D8               	btfss	status,2,c
 23514  0175FA  D009               	goto	l9520
 23515  0175FC  0E00               	movlw	0
 23516  0175FE  6E01               	movwf	btemp^0,c
 23517  017600  0E00               	movlw	0
 23518  017602  6E02               	movwf	(btemp+1)^0,c
 23519  017604  0E00               	movlw	0
 23520  017606  6E03               	movwf	(btemp+2)^0,c
 23521  017608  0E00               	movlw	0
 23522  01760A  6E04               	movwf	(btemp+3)^0,c
 23523  01760C  D0A2               	goto	l3019
 23524  01760E                     l9520:
 23525  01760E  0E96               	movlw	150
 23526  017610  6E0C               	movwf	(btemp+11)^0,c
 23527                           
 23528                           ;stkvar	_exp @ sp[(-5)+4]
 23529  017612  0EFF               	movlw	-1
 23530  017614  0060  F033  FFE3   	movff	btemp+11,plusw1
 23531  01761A  D00B               	goto	l9524
 23532  01761C                     l9522:
 23533                           
 23534                           ;stkvar	_exp @ sp[(-5)+4]
 23535  01761C  0EFF               	movlw	-1
 23536  01761E  2AE3               	incf	plusw1,f,c
 23537                           
 23538                           ;stkvar	_arg @ sp[(-5)+0]
 23539  017620  90D8               	bcf	status,0,c
 23540  017622  0EFE               	movlw	-2
 23541  017624  32E3               	rrcf	plusw1,f,c
 23542  017626  0EFD               	movlw	-3
 23543  017628  32E3               	rrcf	plusw1,f,c
 23544  01762A  0EFC               	movlw	-4
 23545  01762C  32E3               	rrcf	plusw1,f,c
 23546  01762E  0EFB               	movlw	-5
 23547  017630  32E3               	rrcf	plusw1,f,c
 23548  017632                     l9524:
 23549                           
 23550                           ;stkvar	_arg @ sp[(-5)+0]
 23551  017632  50E1               	movf	fsr1l,w,c
 23552  017634  0FFB               	addlw	-5
 23553  017636  6ED9               	movwf	fsr2l,c
 23554  017638  50E2               	movf	fsr1h,w,c
 23555  01763A  6EDA               	movwf	fsr2h,c
 23556  01763C  0EFF               	movlw	255
 23557  01763E  22DA               	addwfc	fsr2h,f,c
 23558  017640  52DE               	movf	postinc2,f,c
 23559  017642  52DE               	movf	postinc2,f,c
 23560  017644  52DE               	movf	postinc2,f,c
 23561  017646  0EFE               	movlw	254
 23562  017648  14DD               	andwf	postdec2,w,c
 23563  01764A  B4D8               	btfsc	status,2,c
 23564  01764C  D018               	goto	l9532
 23565  01764E  D7E6               	goto	l9522
 23566  017650                     l9526:
 23567                           
 23568                           ;stkvar	_exp @ sp[(-5)+4]
 23569  017650  0EFF               	movlw	-1
 23570  017652  2AE3               	incf	plusw1,f,c
 23571                           
 23572                           ;stkvar	_arg @ sp[(-5)+0]
 23573  017654  50E1               	movf	fsr1l,w,c
 23574  017656  0FFB               	addlw	-5
 23575  017658  6ED9               	movwf	fsr2l,c
 23576  01765A  50E2               	movf	fsr1h,w,c
 23577  01765C  6EDA               	movwf	fsr2h,c
 23578  01765E  0EFF               	movlw	255
 23579  017660  22DA               	addwfc	fsr2h,f,c
 23580  017662  2ADE               	incf	postinc2,f,c
 23581  017664  0E00               	movlw	0
 23582  017666  22DE               	addwfc	postinc2,f,c
 23583  017668  22DE               	addwfc	postinc2,f,c
 23584  01766A  22DE               	addwfc	postinc2,f,c
 23585                           
 23586                           ;stkvar	_arg @ sp[(-5)+0]
 23587  01766C  90D8               	bcf	status,0,c
 23588  01766E  0EFE               	movlw	-2
 23589  017670  32E3               	rrcf	plusw1,f,c
 23590  017672  0EFD               	movlw	-3
 23591  017674  32E3               	rrcf	plusw1,f,c
 23592  017676  0EFC               	movlw	-4
 23593  017678  32E3               	rrcf	plusw1,f,c
 23594  01767A  0EFB               	movlw	-5
 23595  01767C  32E3               	rrcf	plusw1,f,c
 23596  01767E                     l9532:
 23597                           
 23598                           ;stkvar	_arg @ sp[(-5)+0]
 23599  01767E  50E1               	movf	fsr1l,w,c
 23600  017680  0FFB               	addlw	-5
 23601  017682  6ED9               	movwf	fsr2l,c
 23602  017684  50E2               	movf	fsr1h,w,c
 23603  017686  6EDA               	movwf	fsr2h,c
 23604  017688  0EFF               	movlw	255
 23605  01768A  22DA               	addwfc	fsr2h,f,c
 23606  01768C  52DE               	movf	postinc2,f,c
 23607  01768E  52DE               	movf	postinc2,f,c
 23608  017690  52DE               	movf	postinc2,f,c
 23609  017692  0EFF               	movlw	255
 23610  017694  14DD               	andwf	postdec2,w,c
 23611  017696  B4D8               	btfsc	status,2,c
 23612  017698  D00C               	goto	l9536
 23613  01769A  D7DA               	goto	l9526
 23614  01769C                     l9534:
 23615                           
 23616                           ;stkvar	_exp @ sp[(-5)+4]
 23617  01769C  0EFF               	movlw	-1
 23618  01769E  06E3               	decf	plusw1,f,c
 23619                           
 23620                           ;stkvar	_arg @ sp[(-5)+0]
 23621  0176A0  90D8               	bcf	status,0,c
 23622  0176A2  0EFB               	movlw	-5
 23623  0176A4  36E3               	rlcf	plusw1,f,c
 23624  0176A6  0EFC               	movlw	-4
 23625  0176A8  36E3               	rlcf	plusw1,f,c
 23626  0176AA  0EFD               	movlw	-3
 23627  0176AC  36E3               	rlcf	plusw1,f,c
 23628  0176AE  0EFE               	movlw	-2
 23629  0176B0  36E3               	rlcf	plusw1,f,c
 23630  0176B2                     l9536:
 23631                           
 23632                           ;stkvar	_arg @ sp[(-5)+0]
 23633  0176B2  0EFD               	movlw	-3
 23634  0176B4  BEE3               	btfsc	plusw1,7,c
 23635  0176B6  D007               	goto	u8890
 23636                           
 23637                           ;stkvar	_exp @ sp[(-5)+4]
 23638  0176B8  0EFF               	movlw	-1
 23639  0176BA  006F FF8C  F001    	movff	plusw1,btemp
 23640  0176C0  0E02               	movlw	2
 23641  0176C2  6001               	cpfslt	btemp^0,c
 23642  0176C4  D7EB               	goto	l9534
 23643  0176C6                     u8890:
 23644                           
 23645                           ;stkvar	_exp @ sp[(-5)+4]
 23646  0176C6  0EFF               	movlw	-1
 23647  0176C8  B0E3               	btfsc	plusw1,0,c
 23648  0176CA  D002               	goto	l9544
 23649                           
 23650                           ;stkvar	_arg @ sp[(-5)+0]
 23651  0176CC  0EFD               	movlw	-3
 23652  0176CE  9EE3               	bcf	plusw1,7,c
 23653  0176D0                     l9544:
 23654                           
 23655                           ;stkvar	_exp @ sp[(-5)+4]
 23656  0176D0  50E1               	movf	fsr1l,w,c
 23657  0176D2  0FFF               	addlw	-1
 23658  0176D4  6ED9               	movwf	fsr2l,c
 23659  0176D6  50E2               	movf	fsr1h,w,c
 23660  0176D8  6EDA               	movwf	fsr2h,c
 23661  0176DA  0EFF               	movlw	255
 23662  0176DC  22DA               	addwfc	fsr2h,f,c
 23663  0176DE  90D8               	bcf	status,0,c
 23664  0176E0  32DF               	rrcf	indf2,f,c
 23665                           
 23666                           ;stkvar	_exp @ sp[(-5)+4]
 23667  0176E2  0EFF               	movlw	-1
 23668  0176E4  006F FF8C  F00C    	movff	plusw1,btemp+11
 23669  0176EA  0060  F030  F005   	movff	btemp+11,btemp+4
 23670  0176F0  6A06               	clrf	(btemp+5)^0,c
 23671  0176F2  6A07               	clrf	(btemp+6)^0,c
 23672  0176F4  6A08               	clrf	(btemp+7)^0,c
 23673  0176F6  0060  F014  F008   	movff	btemp+4,btemp+7
 23674  0176FC  6A07               	clrf	(btemp+6)^0,c
 23675  0176FE  6A06               	clrf	(btemp+5)^0,c
 23676  017700  6A05               	clrf	(btemp+4)^0,c
 23677                           
 23678                           ;stkvar	_arg @ sp[(-5)+0]
 23679  017702  50E1               	movf	fsr1l,w,c
 23680  017704  0FFB               	addlw	-5
 23681  017706  6ED9               	movwf	fsr2l,c
 23682  017708  50E2               	movf	fsr1h,w,c
 23683  01770A  6EDA               	movwf	fsr2h,c
 23684  01770C  0EFF               	movlw	255
 23685  01770E  22DA               	addwfc	fsr2h,f,c
 23686  017710  5005               	movf	(btemp+4)^0,w,c
 23687  017712  12DE               	iorwf	postinc2,f,c
 23688  017714  5006               	movf	(btemp+5)^0,w,c
 23689  017716  12DE               	iorwf	postinc2,f,c
 23690  017718  5007               	movf	(btemp+6)^0,w,c
 23691  01771A  12DE               	iorwf	postinc2,f,c
 23692  01771C  5008               	movf	(btemp+7)^0,w,c
 23693  01771E  12DE               	iorwf	postinc2,f,c
 23694                           
 23695                           ;stkvar	_sign @ sp[(-5)+-1]
 23696  017720  0EFA               	movlw	-6
 23697  017722  50E3               	movf	plusw1,w,c
 23698  017724  B4D8               	btfsc	status,2,c
 23699  017726  D005               	goto	l9554
 23700                           
 23701                           ;stkvar	_val @ sp[(-5)+-5]
 23702  017728  0EF9               	movlw	-7
 23703  01772A  AEE3               	btfss	plusw1,7,c
 23704  01772C  D002               	goto	l9554
 23705                           
 23706                           ;stkvar	_arg @ sp[(-5)+0]
 23707  01772E  0EFE               	movlw	-2
 23708  017730  8EE3               	bsf	plusw1,7,c
 23709  017732                     l9554:
 23710                           
 23711                           ;stkvar	_arg @ sp[(-5)+0]
 23712  017732  0EFB               	movlw	-5
 23713  017734  006F FF8C  F001    	movff	plusw1,btemp
 23714  01773A  0EFC               	movlw	-4
 23715  01773C  006F FF8C  F002    	movff	plusw1,btemp+1
 23716  017742  0EFD               	movlw	-3
 23717  017744  006F FF8C  F003    	movff	plusw1,btemp+2
 23718  01774A  0EFE               	movlw	-2
 23719  01774C  006F FF8C  F004    	movff	plusw1,btemp+3
 23720  017752                     l3019:
 23721                           
 23722                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 23723  017752  0EF6               	movlw	246
 23724  017754  26E1               	addwf	fsr1l,f,c
 23725  017756  0EFF               	movlw	255
 23726  017758  22E2               	addwfc	fsr1h,f,c
 23727  01775A  0012               	return		;funcret
 23728  01775C                     __end_of___xxtofl:
 23729                           	opt callstack 0
 23730                           
 23731 ;; *************** function ___fldiv *****************
 23732 ;; Defined at:
 23733 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 23734 ;; Parameters:    Size  Location     Type
 23735 ;;  b               4  [STACK] unsigned char 
 23736 ;;  a               4  [STACK] unsigned char 
 23737 ;; Auto vars:     Size  Location     Type
 23738 ;;  grs             4  [STACK] unsigned long 
 23739 ;;  rem             4  [STACK] unsigned long 
 23740 ;;  new_exp         2  [STACK] short 
 23741 ;;  aexp            1  [STACK] unsigned char 
 23742 ;;  bexp            1  [STACK] unsigned char 
 23743 ;;  sign            1  [STACK] unsigned char 
 23744 ;; Return value:  Size  Location     Type
 23745 ;;                  4  [STACK] unsigned char 
 23746 ;; Registers used:
 23747 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 23748 ;; Tracked objects:
 23749 ;;		On entry : 0/1
 23750 ;;		On exit  : 0/0
 23751 ;;		Unchanged: 0/0
 23752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23757 ;;Total ram usage:        0 bytes
 23758 ;; Hardware stack levels used:    1
 23759 ;; Hardware stack levels required when called:   15
 23760 ;; This function calls:
 23761 ;;		Nothing
 23762 ;; This function is called by:
 23763 ;;		_conv_raw_result
 23764 ;;		_calc_bsoc
 23765 ;;		_init_bsoc
 23766 ;;		_esr_check
 23767 ;;		_efgtoa
 23768 ;; This function uses a reentrant model
 23769 ;;
 23770                           
 23771                           	psect	text98
 23772  0144D0                     __ptext98:
 23773                           	opt callstack 0
 23774  0144D0                     ___fldiv:
 23775                           	opt callstack 0
 23776                           
 23777                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 23778  0144D0  0E0D               	movlw	13
 23779  0144D2  26E1               	addwf	fsr1l,f,c
 23780  0144D4  0E00               	movlw	0
 23781  0144D6  22E2               	addwfc	fsr1h,f,c
 23782                           
 23783                           ;stkvar	_b @ sp[(-13)+-4]
 23784                           
 23785                           ;incstack = 0
 23786 ;; hardware stack exceeded
 23787  0144D8  0EF2               	movlw	242
 23788  0144DA  24E1               	addwf	fsr1l,w,c
 23789  0144DC  6ED9               	movwf	fsr2l,c
 23790  0144DE  0EFF               	movlw	255
 23791  0144E0  20E2               	addwfc	fsr1h,w,c
 23792  0144E2  6EDA               	movwf	fsr2h,c
 23793  0144E4  50DF               	movf	indf2,w,c
 23794  0144E6  6E0C               	movwf	(btemp+11)^0,c
 23795  0144E8  0E80               	movlw	128
 23796  0144EA  160C               	andwf	(btemp+11)^0,f,c
 23797                           
 23798                           ;stkvar	_sign @ sp[(-13)+12]
 23799  0144EC  0EFF               	movlw	-1
 23800  0144EE  0060  F033  FFE3   	movff	btemp+11,plusw1
 23801                           
 23802                           ;stkvar	_b @ sp[(-13)+-4]
 23803  0144F4  0EF2               	movlw	242
 23804  0144F6  24E1               	addwf	fsr1l,w,c
 23805  0144F8  6ED9               	movwf	fsr2l,c
 23806  0144FA  0EFF               	movlw	255
 23807  0144FC  20E2               	addwfc	fsr1h,w,c
 23808  0144FE  6EDA               	movwf	fsr2h,c
 23809  014500  50DF               	movf	indf2,w,c
 23810  014502  6E0C               	movwf	(btemp+11)^0,c
 23811  014504  90D8               	bcf	status,0,c
 23812  014506  340C               	rlcf	(btemp+11)^0,w,c
 23813  014508  6E0B               	movwf	(btemp+10)^0,c
 23814                           
 23815                           ;stkvar	_bexp @ sp[(-13)+11]
 23816  01450A  0EFE               	movlw	-2
 23817  01450C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23818                           
 23819                           ;stkvar	_b @ sp[(-13)+-4]
 23820  014512  0EF1               	movlw	241
 23821  014514  24E1               	addwf	fsr1l,w,c
 23822  014516  6ED9               	movwf	fsr2l,c
 23823  014518  0EFF               	movlw	255
 23824  01451A  20E2               	addwfc	fsr1h,w,c
 23825  01451C  6EDA               	movwf	fsr2h,c
 23826  01451E  AEDF               	btfss	indf2,7,c
 23827  014520  D002               	goto	l7884
 23828                           
 23829                           ;stkvar	_bexp @ sp[(-13)+11]
 23830  014522  0EFE               	movlw	-2
 23831  014524  80E3               	bsf	plusw1,0,c
 23832  014526                     l7884:
 23833                           
 23834                           ;stkvar	_bexp @ sp[(-13)+11]
 23835  014526  0EFE               	movlw	-2
 23836  014528  50E3               	movf	plusw1,w,c
 23837  01452A  B4D8               	btfsc	status,2,c
 23838  01452C  D027               	goto	l7894
 23839                           
 23840                           ;stkvar	_bexp @ sp[(-13)+11]
 23841  01452E  0EFE               	movlw	-2
 23842  014530  28E3               	incf	plusw1,w,c
 23843  014532  A4D8               	btfss	status,2,c
 23844  014534  D018               	goto	l7890
 23845  014536  0E00               	movlw	0
 23846  014538  6E09               	movwf	(btemp+8)^0,c
 23847  01453A  0E00               	movlw	0
 23848  01453C  6E0A               	movwf	(btemp+9)^0,c
 23849  01453E  0E00               	movlw	0
 23850  014540  6E0B               	movwf	(btemp+10)^0,c
 23851  014542  0E00               	movlw	0
 23852  014544  6E0C               	movwf	(btemp+11)^0,c
 23853                           
 23854                           ;stkvar	_b @ sp[(-13)+-4]
 23855  014546  0EEF               	movlw	-17
 23856  014548  0060  F027  FFE3   	movff	btemp+8,plusw1
 23857  01454E  0EF0               	movlw	-16
 23858  014550  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23859  014556  0EF1               	movlw	-15
 23860  014558  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23861  01455E  0EF2               	movlw	-14
 23862  014560  0060  F033  FFE3   	movff	btemp+11,plusw1
 23863  014566                     l7890:
 23864                           
 23865                           ;stkvar	_b @ sp[(-13)+-4]
 23866  014566  0EF1               	movlw	-15
 23867  014568  8EE3               	bsf	plusw1,7,c
 23868                           
 23869                           ;stkvar	_b @ sp[(-13)+-4]
 23870  01456A  0EF2               	movlw	242
 23871  01456C  24E1               	addwf	fsr1l,w,c
 23872  01456E  6ED9               	movwf	fsr2l,c
 23873  014570  0EFF               	movlw	255
 23874  014572  20E2               	addwfc	fsr1h,w,c
 23875  014574  6EDA               	movwf	fsr2h,c
 23876  014576  0E00               	movlw	0
 23877  014578  6EDF               	movwf	indf2,c
 23878  01457A  D018               	goto	l7896
 23879  01457C                     l7894:
 23880  01457C  0E00               	movlw	0
 23881  01457E  6E09               	movwf	(btemp+8)^0,c
 23882  014580  0E00               	movlw	0
 23883  014582  6E0A               	movwf	(btemp+9)^0,c
 23884  014584  0E00               	movlw	0
 23885  014586  6E0B               	movwf	(btemp+10)^0,c
 23886  014588  0E00               	movlw	0
 23887  01458A  6E0C               	movwf	(btemp+11)^0,c
 23888                           
 23889                           ;stkvar	_b @ sp[(-13)+-4]
 23890  01458C  0EEF               	movlw	-17
 23891  01458E  0060  F027  FFE3   	movff	btemp+8,plusw1
 23892  014594  0EF0               	movlw	-16
 23893  014596  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23894  01459C  0EF1               	movlw	-15
 23895  01459E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23896  0145A4  0EF2               	movlw	-14
 23897  0145A6  0060  F033  FFE3   	movff	btemp+11,plusw1
 23898  0145AC                     l7896:
 23899                           
 23900                           ;stkvar	_a @ sp[(-13)+-8]
 23901  0145AC  0EEE               	movlw	238
 23902  0145AE  24E1               	addwf	fsr1l,w,c
 23903  0145B0  6ED9               	movwf	fsr2l,c
 23904  0145B2  0EFF               	movlw	255
 23905  0145B4  20E2               	addwfc	fsr1h,w,c
 23906  0145B6  6EDA               	movwf	fsr2h,c
 23907  0145B8  50DF               	movf	indf2,w,c
 23908  0145BA  6E0C               	movwf	(btemp+11)^0,c
 23909  0145BC  0E80               	movlw	128
 23910  0145BE  160C               	andwf	(btemp+11)^0,f,c
 23911                           
 23912                           ;stkvar	_sign @ sp[(-13)+12]
 23913  0145C0  50E1               	movf	fsr1l,w,c
 23914  0145C2  0FFF               	addlw	-1
 23915  0145C4  6ED9               	movwf	fsr2l,c
 23916  0145C6  50E2               	movf	fsr1h,w,c
 23917  0145C8  6EDA               	movwf	fsr2h,c
 23918  0145CA  0EFF               	movlw	255
 23919  0145CC  22DA               	addwfc	fsr2h,f,c
 23920  0145CE  500C               	movf	(btemp+11)^0,w,c
 23921  0145D0  1ADF               	xorwf	indf2,f,c
 23922                           
 23923                           ;stkvar	_a @ sp[(-13)+-8]
 23924  0145D2  0EEE               	movlw	238
 23925  0145D4  24E1               	addwf	fsr1l,w,c
 23926  0145D6  6ED9               	movwf	fsr2l,c
 23927  0145D8  0EFF               	movlw	255
 23928  0145DA  20E2               	addwfc	fsr1h,w,c
 23929  0145DC  6EDA               	movwf	fsr2h,c
 23930  0145DE  50DF               	movf	indf2,w,c
 23931  0145E0  6E0C               	movwf	(btemp+11)^0,c
 23932  0145E2  90D8               	bcf	status,0,c
 23933  0145E4  340C               	rlcf	(btemp+11)^0,w,c
 23934  0145E6  6E0B               	movwf	(btemp+10)^0,c
 23935                           
 23936                           ;stkvar	_aexp @ sp[(-13)+10]
 23937  0145E8  0EFD               	movlw	-3
 23938  0145EA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23939                           
 23940                           ;stkvar	_a @ sp[(-13)+-8]
 23941  0145F0  0EED               	movlw	237
 23942  0145F2  24E1               	addwf	fsr1l,w,c
 23943  0145F4  6ED9               	movwf	fsr2l,c
 23944  0145F6  0EFF               	movlw	255
 23945  0145F8  20E2               	addwfc	fsr1h,w,c
 23946  0145FA  6EDA               	movwf	fsr2h,c
 23947  0145FC  AEDF               	btfss	indf2,7,c
 23948  0145FE  D002               	goto	l7904
 23949                           
 23950                           ;stkvar	_aexp @ sp[(-13)+10]
 23951  014600  0EFD               	movlw	-3
 23952  014602  80E3               	bsf	plusw1,0,c
 23953  014604                     l7904:
 23954                           
 23955                           ;stkvar	_aexp @ sp[(-13)+10]
 23956  014604  0EFD               	movlw	-3
 23957  014606  50E3               	movf	plusw1,w,c
 23958  014608  B4D8               	btfsc	status,2,c
 23959  01460A  D027               	goto	l7914
 23960                           
 23961                           ;stkvar	_aexp @ sp[(-13)+10]
 23962  01460C  0EFD               	movlw	-3
 23963  01460E  28E3               	incf	plusw1,w,c
 23964  014610  A4D8               	btfss	status,2,c
 23965  014612  D018               	goto	l7910
 23966  014614  0E00               	movlw	0
 23967  014616  6E09               	movwf	(btemp+8)^0,c
 23968  014618  0E00               	movlw	0
 23969  01461A  6E0A               	movwf	(btemp+9)^0,c
 23970  01461C  0E00               	movlw	0
 23971  01461E  6E0B               	movwf	(btemp+10)^0,c
 23972  014620  0E00               	movlw	0
 23973  014622  6E0C               	movwf	(btemp+11)^0,c
 23974                           
 23975                           ;stkvar	_a @ sp[(-13)+-8]
 23976  014624  0EEB               	movlw	-21
 23977  014626  0060  F027  FFE3   	movff	btemp+8,plusw1
 23978  01462C  0EEC               	movlw	-20
 23979  01462E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23980  014634  0EED               	movlw	-19
 23981  014636  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23982  01463C  0EEE               	movlw	-18
 23983  01463E  0060  F033  FFE3   	movff	btemp+11,plusw1
 23984  014644                     l7910:
 23985                           
 23986                           ;stkvar	_a @ sp[(-13)+-8]
 23987  014644  0EED               	movlw	-19
 23988  014646  8EE3               	bsf	plusw1,7,c
 23989                           
 23990                           ;stkvar	_a @ sp[(-13)+-8]
 23991  014648  0EEE               	movlw	238
 23992  01464A  24E1               	addwf	fsr1l,w,c
 23993  01464C  6ED9               	movwf	fsr2l,c
 23994  01464E  0EFF               	movlw	255
 23995  014650  20E2               	addwfc	fsr1h,w,c
 23996  014652  6EDA               	movwf	fsr2h,c
 23997  014654  0E00               	movlw	0
 23998  014656  6EDF               	movwf	indf2,c
 23999  014658  D018               	goto	l7916
 24000  01465A                     l7914:
 24001  01465A  0E00               	movlw	0
 24002  01465C  6E09               	movwf	(btemp+8)^0,c
 24003  01465E  0E00               	movlw	0
 24004  014660  6E0A               	movwf	(btemp+9)^0,c
 24005  014662  0E00               	movlw	0
 24006  014664  6E0B               	movwf	(btemp+10)^0,c
 24007  014666  0E00               	movlw	0
 24008  014668  6E0C               	movwf	(btemp+11)^0,c
 24009                           
 24010                           ;stkvar	_a @ sp[(-13)+-8]
 24011  01466A  0EEB               	movlw	-21
 24012  01466C  0060  F027  FFE3   	movff	btemp+8,plusw1
 24013  014672  0EEC               	movlw	-20
 24014  014674  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24015  01467A  0EED               	movlw	-19
 24016  01467C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24017  014682  0EEE               	movlw	-18
 24018  014684  0060  F033  FFE3   	movff	btemp+11,plusw1
 24019  01468A                     l7916:
 24020                           
 24021                           ;stkvar	_a @ sp[(-13)+-8]
 24022  01468A  0EEB               	movlw	-21
 24023  01468C  50E3               	movf	plusw1,w,c
 24024  01468E  E139               	bnz	l7928
 24025  014690  0EEC               	movlw	-20
 24026  014692  50E3               	movf	plusw1,w,c
 24027  014694  E136               	bnz	l7928
 24028  014696  0EED               	movlw	-19
 24029  014698  50E3               	movf	plusw1,w,c
 24030  01469A  E133               	bnz	l7928
 24031  01469C  0EEE               	movlw	-18
 24032  01469E  50E3               	movf	plusw1,w,c
 24033  0146A0  A4D8               	btfss	status,2,c
 24034  0146A2  D02F               	goto	l7928
 24035                           
 24036                           ;stkvar	_b @ sp[(-13)+-4]
 24037  0146A4  0EEF               	movlw	-17
 24038  0146A6  6AE3               	clrf	plusw1,c
 24039  0146A8  0EF0               	movlw	-16
 24040  0146AA  6AE3               	clrf	plusw1,c
 24041  0146AC  0EF1               	movlw	-15
 24042  0146AE  6AE3               	clrf	plusw1,c
 24043  0146B0  0EF2               	movlw	-14
 24044  0146B2  6AE3               	clrf	plusw1,c
 24045                           
 24046                           ;stkvar	_b @ sp[(-13)+-4]
 24047  0146B4  0EF1               	movlw	241
 24048  0146B6  24E1               	addwf	fsr1l,w,c
 24049  0146B8  6ED9               	movwf	fsr2l,c
 24050  0146BA  0EFF               	movlw	255
 24051  0146BC  20E2               	addwfc	fsr1h,w,c
 24052  0146BE  6EDA               	movwf	fsr2h,c
 24053  0146C0  0E80               	movlw	128
 24054  0146C2  12DE               	iorwf	postinc2,f,c
 24055  0146C4  0E7F               	movlw	127
 24056  0146C6  12DD               	iorwf	postdec2,f,c
 24057  0146C8                     l7922:
 24058                           
 24059                           ;stkvar	_sign @ sp[(-13)+12]
 24060  0146C8  0EFF               	movlw	-1
 24061  0146CA  006F FF8C  F00C    	movff	plusw1,btemp+11
 24062                           
 24063                           ;stkvar	_b @ sp[(-13)+-4]
 24064  0146D0  0EF2               	movlw	242
 24065  0146D2  24E1               	addwf	fsr1l,w,c
 24066  0146D4  6ED9               	movwf	fsr2l,c
 24067  0146D6  0EFF               	movlw	255
 24068  0146D8  20E2               	addwfc	fsr1h,w,c
 24069  0146DA  6EDA               	movwf	fsr2h,c
 24070  0146DC  500C               	movf	(btemp+11)^0,w,c
 24071  0146DE  12DF               	iorwf	indf2,f,c
 24072                           
 24073                           ;stkvar	_b @ sp[(-13)+-4]
 24074  0146E0  0EEF               	movlw	-17
 24075  0146E2  006F FF8C  F001    	movff	plusw1,btemp
 24076  0146E8  0EF0               	movlw	-16
 24077  0146EA  006F FF8C  F002    	movff	plusw1,btemp+1
 24078  0146F0  0EF1               	movlw	-15
 24079  0146F2  006F FF8C  F003    	movff	plusw1,btemp+2
 24080  0146F8  0EF2               	movlw	-14
 24081  0146FA  006F FF8C  F004    	movff	plusw1,btemp+3
 24082  014700  D19F               	goto	l2943
 24083  014702                     l7928:
 24084                           
 24085                           ;stkvar	_bexp @ sp[(-13)+11]
 24086  014702  0EFE               	movlw	-2
 24087  014704  50E3               	movf	plusw1,w,c
 24088  014706  A4D8               	btfss	status,2,c
 24089  014708  D009               	goto	l7936
 24090  01470A  0E00               	movlw	0
 24091  01470C  6E01               	movwf	btemp^0,c
 24092  01470E  0E00               	movlw	0
 24093  014710  6E02               	movwf	(btemp+1)^0,c
 24094  014712  0E00               	movlw	0
 24095  014714  6E03               	movwf	(btemp+2)^0,c
 24096  014716  0E00               	movlw	0
 24097  014718  6E04               	movwf	(btemp+3)^0,c
 24098  01471A  D192               	goto	l2943
 24099  01471C                     l7936:
 24100                           
 24101                           ;stkvar	_bexp @ sp[(-13)+11]
 24102  01471C  0EFE               	movlw	-2
 24103  01471E  50E3               	movf	plusw1,w,c
 24104  014720  6E0B               	movwf	(btemp+10)^0,c
 24105  014722  6A0C               	clrf	(btemp+11)^0,c
 24106                           
 24107                           ;stkvar	_aexp @ sp[(-13)+10]
 24108  014724  0EFD               	movlw	-3
 24109  014726  50E3               	movf	plusw1,w,c
 24110  014728  5E0B               	subwf	(btemp+10)^0,f,c
 24111  01472A  0E00               	movlw	0
 24112  01472C  5A0C               	subwfb	(btemp+11)^0,f,c
 24113  01472E  0E7F               	movlw	127
 24114  014730  260B               	addwf	(btemp+10)^0,f,c
 24115  014732  0E00               	movlw	0
 24116  014734  220C               	addwfc	(btemp+11)^0,f,c
 24117                           
 24118                           ;stkvar	_new_exp @ sp[(-13)+8]
 24119  014736  0EFB               	movlw	-5
 24120  014738  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24121  01473E  0EFC               	movlw	-4
 24122  014740  0060  F033  FFE3   	movff	btemp+11,plusw1
 24123                           
 24124                           ;stkvar	_b @ sp[(-13)+-4]
 24125  014746  0EEF               	movlw	-17
 24126  014748  006F FF8C  F009    	movff	plusw1,btemp+8
 24127  01474E  0EF0               	movlw	-16
 24128  014750  006F FF8C  F00A    	movff	plusw1,btemp+9
 24129  014756  0EF1               	movlw	-15
 24130  014758  006F FF8C  F00B    	movff	plusw1,btemp+10
 24131  01475E  0EF2               	movlw	-14
 24132  014760  006F FF8C  F00C    	movff	plusw1,btemp+11
 24133                           
 24134                           ;stkvar	_rem @ sp[(-13)+4]
 24135  014766  0EF7               	movlw	-9
 24136  014768  0060  F027  FFE3   	movff	btemp+8,plusw1
 24137  01476E  0EF8               	movlw	-8
 24138  014770  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24139  014776  0EF9               	movlw	-7
 24140  014778  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24141  01477E  0EFA               	movlw	-6
 24142  014780  0060  F033  FFE3   	movff	btemp+11,plusw1
 24143                           
 24144                           ;stkvar	_b @ sp[(-13)+-4]
 24145  014786  0EEF               	movlw	-17
 24146  014788  6AE3               	clrf	plusw1,c
 24147  01478A  0EF0               	movlw	-16
 24148  01478C  6AE3               	clrf	plusw1,c
 24149  01478E  0EF1               	movlw	-15
 24150  014790  6AE3               	clrf	plusw1,c
 24151  014792  0EF2               	movlw	-14
 24152  014794  6AE3               	clrf	plusw1,c
 24153                           
 24154                           ;stkvar	_grs @ sp[(-13)+0]
 24155  014796  0EF3               	movlw	-13
 24156  014798  6AE3               	clrf	plusw1,c
 24157  01479A  0EF4               	movlw	-12
 24158  01479C  6AE3               	clrf	plusw1,c
 24159  01479E  0EF5               	movlw	-11
 24160  0147A0  6AE3               	clrf	plusw1,c
 24161  0147A2  0EF6               	movlw	-10
 24162  0147A4  6AE3               	clrf	plusw1,c
 24163                           
 24164                           ;stkvar	_aexp @ sp[(-13)+10]
 24165  0147A6  0EFD               	movlw	-3
 24166  0147A8  6AE3               	clrf	plusw1,c
 24167  0147AA  D050               	goto	l7964
 24168  0147AC                     l7946:
 24169                           
 24170                           ;stkvar	_aexp @ sp[(-13)+10]
 24171  0147AC  0EFD               	movlw	-3
 24172  0147AE  50E3               	movf	plusw1,w,c
 24173  0147B0  B4D8               	btfsc	status,2,c
 24174  0147B2  D020               	goto	l7956
 24175                           
 24176                           ;stkvar	_rem @ sp[(-13)+4]
 24177  0147B4  90D8               	bcf	status,0,c
 24178  0147B6  0EF7               	movlw	-9
 24179  0147B8  36E3               	rlcf	plusw1,f,c
 24180  0147BA  0EF8               	movlw	-8
 24181  0147BC  36E3               	rlcf	plusw1,f,c
 24182  0147BE  0EF9               	movlw	-7
 24183  0147C0  36E3               	rlcf	plusw1,f,c
 24184  0147C2  0EFA               	movlw	-6
 24185  0147C4  36E3               	rlcf	plusw1,f,c
 24186                           
 24187                           ;stkvar	_b @ sp[(-13)+-4]
 24188  0147C6  90D8               	bcf	status,0,c
 24189  0147C8  0EEF               	movlw	-17
 24190  0147CA  36E3               	rlcf	plusw1,f,c
 24191  0147CC  0EF0               	movlw	-16
 24192  0147CE  36E3               	rlcf	plusw1,f,c
 24193  0147D0  0EF1               	movlw	-15
 24194  0147D2  36E3               	rlcf	plusw1,f,c
 24195  0147D4  0EF2               	movlw	-14
 24196  0147D6  36E3               	rlcf	plusw1,f,c
 24197                           
 24198                           ;stkvar	_grs @ sp[(-13)+0]
 24199  0147D8  0EF6               	movlw	-10
 24200  0147DA  AEE3               	btfss	plusw1,7,c
 24201  0147DC  D002               	goto	l7954
 24202                           
 24203                           ;stkvar	_b @ sp[(-13)+-4]
 24204  0147DE  0EEF               	movlw	-17
 24205  0147E0  80E3               	bsf	plusw1,0,c
 24206  0147E2                     l7954:
 24207                           
 24208                           ;stkvar	_grs @ sp[(-13)+0]
 24209  0147E2  90D8               	bcf	status,0,c
 24210  0147E4  0EF3               	movlw	-13
 24211  0147E6  36E3               	rlcf	plusw1,f,c
 24212  0147E8  0EF4               	movlw	-12
 24213  0147EA  36E3               	rlcf	plusw1,f,c
 24214  0147EC  0EF5               	movlw	-11
 24215  0147EE  36E3               	rlcf	plusw1,f,c
 24216  0147F0  0EF6               	movlw	-10
 24217  0147F2  36E3               	rlcf	plusw1,f,c
 24218  0147F4                     l7956:
 24219                           
 24220                           ;stkvar	_a @ sp[(-13)+-8]
 24221                           ;stkvar	_rem @ sp[(-13)+4]
 24222  0147F4  50E1               	movf	fsr1l,w,c
 24223  0147F6  0FF7               	addlw	-9
 24224  0147F8  6ED9               	movwf	fsr2l,c
 24225  0147FA  50E2               	movf	fsr1h,w,c
 24226  0147FC  6EDA               	movwf	fsr2h,c
 24227  0147FE  0EFF               	movlw	255
 24228  014800  22DA               	addwfc	fsr2h,f,c
 24229  014802  0EEB               	movlw	-21
 24230  014804  50E3               	movf	plusw1,w,c
 24231  014806  5CDE               	subwf	postinc2,w,c
 24232  014808  0EEC               	movlw	-20
 24233  01480A  50E3               	movf	plusw1,w,c
 24234  01480C  58DE               	subwfb	postinc2,w,c
 24235  01480E  0EED               	movlw	-19
 24236  014810  50E3               	movf	plusw1,w,c
 24237  014812  58DE               	subwfb	postinc2,w,c
 24238  014814  0EEE               	movlw	-18
 24239  014816  50E3               	movf	plusw1,w,c
 24240  014818  58DE               	subwfb	postinc2,w,c
 24241  01481A  A0D8               	btfss	status,0,c
 24242  01481C  D015               	goto	l7962
 24243                           
 24244                           ;stkvar	_grs @ sp[(-13)+0]
 24245  01481E  0EF6               	movlw	-10
 24246  014820  8CE3               	bsf	plusw1,6,c
 24247                           
 24248                           ;stkvar	_a @ sp[(-13)+-8]
 24249                           ;stkvar	_rem @ sp[(-13)+4]
 24250  014822  50E1               	movf	fsr1l,w,c
 24251  014824  0FF7               	addlw	-9
 24252  014826  6ED9               	movwf	fsr2l,c
 24253  014828  50E2               	movf	fsr1h,w,c
 24254  01482A  6EDA               	movwf	fsr2h,c
 24255  01482C  0EFF               	movlw	255
 24256  01482E  22DA               	addwfc	fsr2h,f,c
 24257  014830  0EEB               	movlw	-21
 24258  014832  50E3               	movf	plusw1,w,c
 24259  014834  5EDE               	subwf	postinc2,f,c
 24260  014836  0EEC               	movlw	-20
 24261  014838  50E3               	movf	plusw1,w,c
 24262  01483A  5ADE               	subwfb	postinc2,f,c
 24263  01483C  0EED               	movlw	-19
 24264  01483E  50E3               	movf	plusw1,w,c
 24265  014840  5ADE               	subwfb	postinc2,f,c
 24266  014842  0EEE               	movlw	-18
 24267  014844  50E3               	movf	plusw1,w,c
 24268  014846  5ADE               	subwfb	postinc2,f,c
 24269  014848                     l7962:
 24270                           
 24271                           ;stkvar	_aexp @ sp[(-13)+10]
 24272  014848  0EFD               	movlw	-3
 24273  01484A  2AE3               	incf	plusw1,f,c
 24274  01484C                     l7964:
 24275                           
 24276                           ;stkvar	_aexp @ sp[(-13)+10]
 24277  01484C  0EFD               	movlw	-3
 24278  01484E  006F FF8C  F001    	movff	plusw1,btemp
 24279  014854  0E19               	movlw	25
 24280  014856  6401               	cpfsgt	btemp^0,c
 24281  014858  D7A9               	goto	l7946
 24282                           
 24283                           ;stkvar	_rem @ sp[(-13)+4]
 24284  01485A  0EF7               	movlw	-9
 24285  01485C  50E3               	movf	plusw1,w,c
 24286  01485E  E10A               	bnz	u6350
 24287  014860  0EF8               	movlw	-8
 24288  014862  50E3               	movf	plusw1,w,c
 24289  014864  E107               	bnz	u6350
 24290  014866  0EF9               	movlw	-7
 24291  014868  50E3               	movf	plusw1,w,c
 24292  01486A  E104               	bnz	u6350
 24293  01486C  0EFA               	movlw	-6
 24294  01486E  50E3               	movf	plusw1,w,c
 24295  014870  B4D8               	btfsc	status,2,c
 24296  014872  D024               	goto	l7980
 24297  014874                     u6350:
 24298                           
 24299                           ;stkvar	_grs @ sp[(-13)+0]
 24300  014874  0EF3               	movlw	-13
 24301  014876  80E3               	bsf	plusw1,0,c
 24302  014878  D021               	goto	l7980
 24303  01487A                     l7970:
 24304                           
 24305                           ;stkvar	_b @ sp[(-13)+-4]
 24306  01487A  90D8               	bcf	status,0,c
 24307  01487C  0EEF               	movlw	-17
 24308  01487E  36E3               	rlcf	plusw1,f,c
 24309  014880  0EF0               	movlw	-16
 24310  014882  36E3               	rlcf	plusw1,f,c
 24311  014884  0EF1               	movlw	-15
 24312  014886  36E3               	rlcf	plusw1,f,c
 24313  014888  0EF2               	movlw	-14
 24314  01488A  36E3               	rlcf	plusw1,f,c
 24315                           
 24316                           ;stkvar	_grs @ sp[(-13)+0]
 24317  01488C  0EF6               	movlw	-10
 24318  01488E  AEE3               	btfss	plusw1,7,c
 24319  014890  D002               	goto	l7976
 24320                           
 24321                           ;stkvar	_b @ sp[(-13)+-4]
 24322  014892  0EEF               	movlw	-17
 24323  014894  80E3               	bsf	plusw1,0,c
 24324  014896                     l7976:
 24325                           
 24326                           ;stkvar	_grs @ sp[(-13)+0]
 24327  014896  90D8               	bcf	status,0,c
 24328  014898  0EF3               	movlw	-13
 24329  01489A  36E3               	rlcf	plusw1,f,c
 24330  01489C  0EF4               	movlw	-12
 24331  01489E  36E3               	rlcf	plusw1,f,c
 24332  0148A0  0EF5               	movlw	-11
 24333  0148A2  36E3               	rlcf	plusw1,f,c
 24334  0148A4  0EF6               	movlw	-10
 24335  0148A6  36E3               	rlcf	plusw1,f,c
 24336                           
 24337                           ;stkvar	_new_exp @ sp[(-13)+8]
 24338  0148A8  50E1               	movf	fsr1l,w,c
 24339  0148AA  0FFB               	addlw	-5
 24340  0148AC  6ED9               	movwf	fsr2l,c
 24341  0148AE  50E2               	movf	fsr1h,w,c
 24342  0148B0  6EDA               	movwf	fsr2h,c
 24343  0148B2  0EFF               	movlw	255
 24344  0148B4  22DA               	addwfc	fsr2h,f,c
 24345  0148B6  06DE               	decf	postinc2,f,c
 24346  0148B8  0E00               	movlw	0
 24347  0148BA  5ADD               	subwfb	postdec2,f,c
 24348  0148BC                     l7980:
 24349                           
 24350                           ;stkvar	_b @ sp[(-13)+-4]
 24351  0148BC  0EF1               	movlw	-15
 24352  0148BE  AEE3               	btfss	plusw1,7,c
 24353  0148C0  D7DC               	goto	l7970
 24354                           
 24355                           ;stkvar	_aexp @ sp[(-13)+10]
 24356  0148C2  0EFD               	movlw	-3
 24357  0148C4  6AE3               	clrf	plusw1,c
 24358                           
 24359                           ;stkvar	_grs @ sp[(-13)+0]
 24360  0148C6  0EF6               	movlw	-10
 24361  0148C8  AEE3               	btfss	plusw1,7,c
 24362  0148CA  D020               	goto	l7994
 24363                           
 24364                           ;stkvar	_grs @ sp[(-13)+0]
 24365  0148CC  50E1               	movf	fsr1l,w,c
 24366  0148CE  0FF3               	addlw	-13
 24367  0148D0  6ED9               	movwf	fsr2l,c
 24368  0148D2  50E2               	movf	fsr1h,w,c
 24369  0148D4  6EDA               	movwf	fsr2h,c
 24370  0148D6  0EFF               	movlw	255
 24371  0148D8  22DA               	addwfc	fsr2h,f,c
 24372  0148DA  0EFF               	movlw	255
 24373  0148DC  14DE               	andwf	postinc2,w,c
 24374  0148DE  6E09               	movwf	(btemp+8)^0,c
 24375  0148E0  0EFF               	movlw	255
 24376  0148E2  14DE               	andwf	postinc2,w,c
 24377  0148E4  6E0A               	movwf	(btemp+9)^0,c
 24378  0148E6  0EFF               	movlw	255
 24379  0148E8  14DE               	andwf	postinc2,w,c
 24380  0148EA  6E0B               	movwf	(btemp+10)^0,c
 24381  0148EC  0E7F               	movlw	127
 24382  0148EE  14DE               	andwf	postinc2,w,c
 24383  0148F0  6E0C               	movwf	(btemp+11)^0,c
 24384  0148F2  5009               	movf	(btemp+8)^0,w,c
 24385  0148F4  100A               	iorwf	(btemp+9)^0,w,c
 24386  0148F6  100B               	iorwf	(btemp+10)^0,w,c
 24387  0148F8  100C               	iorwf	(btemp+11)^0,w,c
 24388  0148FA  B4D8               	btfsc	status,2,c
 24389  0148FC  D004               	goto	l7990
 24390  0148FE                     u6390:
 24391                           
 24392                           ;stkvar	_aexp @ sp[(-13)+10]
 24393  0148FE  0EFD               	movlw	-3
 24394  014900  6AE3               	clrf	plusw1,c
 24395  014902  2AE3               	incf	plusw1,f,c
 24396  014904  D003               	goto	l7994
 24397  014906                     l7990:
 24398                           
 24399                           ;stkvar	_b @ sp[(-13)+-4]
 24400  014906  0EEF               	movlw	-17
 24401  014908  B0E3               	btfsc	plusw1,0,c
 24402  01490A  D7F9               	goto	u6390
 24403  01490C                     l7994:
 24404                           
 24405                           ;stkvar	_aexp @ sp[(-13)+10]
 24406  01490C  0EFD               	movlw	-3
 24407  01490E  50E3               	movf	plusw1,w,c
 24408  014910  B4D8               	btfsc	status,2,c
 24409  014912  D036               	goto	l8004
 24410                           
 24411                           ;stkvar	_b @ sp[(-13)+-4]
 24412  014914  50E1               	movf	fsr1l,w,c
 24413  014916  0FEF               	addlw	-17
 24414  014918  6ED9               	movwf	fsr2l,c
 24415  01491A  50E2               	movf	fsr1h,w,c
 24416  01491C  6EDA               	movwf	fsr2h,c
 24417  01491E  0EFF               	movlw	255
 24418  014920  22DA               	addwfc	fsr2h,f,c
 24419  014922  2ADE               	incf	postinc2,f,c
 24420  014924  0E00               	movlw	0
 24421  014926  22DE               	addwfc	postinc2,f,c
 24422  014928  22DE               	addwfc	postinc2,f,c
 24423  01492A  22DE               	addwfc	postinc2,f,c
 24424                           
 24425                           ;stkvar	_b @ sp[(-13)+-4]
 24426  01492C  0EF2               	movlw	-14
 24427  01492E  A0E3               	btfss	plusw1,0,c
 24428  014930  D027               	goto	l8004
 24429  014932  0E01               	movlw	1
 24430  014934  6E0C               	movwf	(btemp+11)^0,c
 24431                           
 24432                           ;stkvar	_b @ sp[(-13)+-4]
 24433  014936  50E1               	movf	fsr1l,w,c
 24434  014938  0FEF               	addlw	-17
 24435  01493A  6ED9               	movwf	fsr2l,c
 24436  01493C  50E2               	movf	fsr1h,w,c
 24437  01493E  6EDA               	movwf	fsr2h,c
 24438  014940  0EFF               	movlw	255
 24439  014942  22DA               	addwfc	fsr2h,f,c
 24440  014944  280C               	incf	(btemp+11)^0,w,c
 24441  014946  52DE               	movf	postinc2,f,c
 24442  014948  D008               	goto	u6430
 24443  01494A                     u6435:
 24444  01494A  52DE               	movf	postinc2,f,c
 24445  01494C  90D8               	bcf	status,0,c
 24446  01494E  BEDC               	btfsc	preinc2,7,c
 24447  014950  80D8               	bsf	status,0,c
 24448  014952  32DD               	rrcf	postdec2,f,c
 24449  014954  32DD               	rrcf	postdec2,f,c
 24450  014956  32DD               	rrcf	postdec2,f,c
 24451  014958  32DE               	rrcf	postinc2,f,c
 24452  01495A                     u6430:
 24453  01495A  2EE8               	decfsz	wreg,f,c
 24454  01495C  D7F6               	goto	u6435
 24455                           
 24456                           ;stkvar	_new_exp @ sp[(-13)+8]
 24457  01495E  0EFB               	movlw	-5
 24458  014960  50E3               	movf	plusw1,w,c
 24459  014962  0F01               	addlw	1
 24460  014964  6E01               	movwf	btemp^0,c
 24461  014966  0EFB               	movlw	-5
 24462  014968  0060  F007  FFE3   	movff	btemp,plusw1
 24463  01496E  6A01               	clrf	btemp^0,c
 24464  014970  0EFC               	movlw	-4
 24465  014972  50E3               	movf	plusw1,w,c
 24466  014974  2001               	addwfc	btemp^0,w,c
 24467  014976  6E01               	movwf	btemp^0,c
 24468  014978  0EFC               	movlw	-4
 24469  01497A  0060  F007  FFE3   	movff	btemp,plusw1
 24470  014980                     l8004:
 24471                           
 24472                           ;stkvar	_new_exp @ sp[(-13)+8]
 24473  014980  0EFC               	movlw	-4
 24474  014982  BEE3               	btfsc	plusw1,7,c
 24475  014984  D01B               	goto	l8010
 24476  014986  0EFC               	movlw	-4
 24477  014988  50E3               	movf	plusw1,w,c
 24478  01498A  E104               	bnz	u6440
 24479  01498C  0EFB               	movlw	-5
 24480  01498E  28E3               	incf	plusw1,w,c
 24481  014990  A0D8               	btfss	status,0,c
 24482  014992  D014               	goto	l8010
 24483  014994                     u6440:
 24484  014994  0EFF               	movlw	255
 24485  014996  6E0B               	movwf	(btemp+10)^0,c
 24486  014998  0E00               	movlw	0
 24487  01499A  6E0C               	movwf	(btemp+11)^0,c
 24488                           
 24489                           ;stkvar	_new_exp @ sp[(-13)+8]
 24490  01499C  0EFB               	movlw	-5
 24491  01499E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24492  0149A4  0EFC               	movlw	-4
 24493  0149A6  0060  F033  FFE3   	movff	btemp+11,plusw1
 24494                           
 24495                           ;stkvar	_b @ sp[(-13)+-4]
 24496  0149AC  0EEF               	movlw	-17
 24497  0149AE  6AE3               	clrf	plusw1,c
 24498  0149B0  0EF0               	movlw	-16
 24499  0149B2  6AE3               	clrf	plusw1,c
 24500  0149B4  0EF1               	movlw	-15
 24501  0149B6  6AE3               	clrf	plusw1,c
 24502  0149B8  0EF2               	movlw	-14
 24503  0149BA  6AE3               	clrf	plusw1,c
 24504  0149BC                     l8010:
 24505                           
 24506                           ;stkvar	_new_exp @ sp[(-13)+8]
 24507  0149BC  0EFC               	movlw	-4
 24508  0149BE  BEE3               	btfsc	plusw1,7,c
 24509  0149C0  D007               	goto	u6450
 24510  0149C2  0EFC               	movlw	-4
 24511  0149C4  50E3               	movf	plusw1,w,c
 24512  0149C6  E112               	bnz	l8016
 24513  0149C8  0EFB               	movlw	-5
 24514  0149CA  04E3               	decf	plusw1,w,c
 24515  0149CC  B0D8               	btfsc	status,0,c
 24516  0149CE  D00E               	goto	l8016
 24517  0149D0                     u6450:
 24518                           
 24519                           ;stkvar	_new_exp @ sp[(-13)+8]
 24520  0149D0  0EFB               	movlw	-5
 24521  0149D2  6AE3               	clrf	plusw1,c
 24522  0149D4  0EFC               	movlw	-4
 24523  0149D6  6AE3               	clrf	plusw1,c
 24524                           
 24525                           ;stkvar	_b @ sp[(-13)+-4]
 24526  0149D8  0EEF               	movlw	-17
 24527  0149DA  6AE3               	clrf	plusw1,c
 24528  0149DC  0EF0               	movlw	-16
 24529  0149DE  6AE3               	clrf	plusw1,c
 24530  0149E0  0EF1               	movlw	-15
 24531  0149E2  6AE3               	clrf	plusw1,c
 24532  0149E4  0EF2               	movlw	-14
 24533  0149E6  6AE3               	clrf	plusw1,c
 24534                           
 24535                           ;stkvar	_sign @ sp[(-13)+12]
 24536  0149E8  0EFF               	movlw	-1
 24537  0149EA  6AE3               	clrf	plusw1,c
 24538  0149EC                     l8016:
 24539                           
 24540                           ;stkvar	_new_exp @ sp[(-13)+8]
 24541                           ;stkvar	_bexp @ sp[(-13)+11]
 24542  0149EC  0EFB               	movlw	-5
 24543  0149EE  006F FF8C  F001    	movff	plusw1,btemp
 24544  0149F4  0EFE               	movlw	-2
 24545  0149F6  0060  F007  FFE3   	movff	btemp,plusw1
 24546                           
 24547                           ;stkvar	_bexp @ sp[(-13)+11]
 24548  0149FC  0EFE               	movlw	-2
 24549  0149FE  A0E3               	btfss	plusw1,0,c
 24550  014A00  D009               	goto	l8022
 24551                           
 24552                           ;stkvar	_b @ sp[(-13)+-4]
 24553  014A02  0EF1               	movlw	241
 24554  014A04  24E1               	addwf	fsr1l,w,c
 24555  014A06  6ED9               	movwf	fsr2l,c
 24556  014A08  0EFF               	movlw	255
 24557  014A0A  20E2               	addwfc	fsr1h,w,c
 24558  014A0C  6EDA               	movwf	fsr2h,c
 24559  014A0E  0E00               	movlw	0
 24560  014A10  8EDB               	bsf	plusw2,7,c
 24561  014A12  D008               	goto	l8024
 24562  014A14                     l8022:
 24563                           
 24564                           ;stkvar	_b @ sp[(-13)+-4]
 24565  014A14  0EF1               	movlw	241
 24566  014A16  24E1               	addwf	fsr1l,w,c
 24567  014A18  6ED9               	movwf	fsr2l,c
 24568  014A1A  0EFF               	movlw	255
 24569  014A1C  20E2               	addwfc	fsr1h,w,c
 24570  014A1E  6EDA               	movwf	fsr2h,c
 24571  014A20  0E7F               	movlw	127
 24572  014A22  16DF               	andwf	indf2,f,c
 24573  014A24                     l8024:
 24574                           
 24575                           ;stkvar	_b @ sp[(-13)+-4]
 24576  014A24  0EF2               	movlw	242
 24577  014A26  24E1               	addwf	fsr1l,w,c
 24578  014A28  6ED9               	movwf	fsr2l,c
 24579  014A2A  0EFF               	movlw	255
 24580  014A2C  20E2               	addwfc	fsr1h,w,c
 24581  014A2E  6EDA               	movwf	fsr2h,c
 24582                           
 24583                           ;stkvar	_bexp @ sp[(-13)+11]
 24584  014A30  0EFE               	movlw	-2
 24585  014A32  006F FF8C  F00C    	movff	plusw1,btemp+11
 24586  014A38  90D8               	bcf	status,0,c
 24587  014A3A  300C               	rrcf	(btemp+11)^0,w,c
 24588  014A3C  6EDF               	movwf	indf2,c
 24589  014A3E  D644               	goto	l7922
 24590  014A40                     l2943:
 24591                           
 24592                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 24593  014A40  0EEB               	movlw	235
 24594  014A42  26E1               	addwf	fsr1l,f,c
 24595  014A44  0EFF               	movlw	255
 24596  014A46  22E2               	addwfc	fsr1h,f,c
 24597  014A48  0012               	return		;funcret
 24598  014A4A                     __end_of___fldiv:
 24599                           	opt callstack 0
 24600                           
 24601 ;; *************** function ___flge *****************
 24602 ;; Defined at:
 24603 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 24604 ;; Parameters:    Size  Location     Type
 24605 ;;  ff1             4  [STACK] unsigned char 
 24606 ;;  ff2             4  [STACK] unsigned char 
 24607 ;; Auto vars:     Size  Location     Type
 24608 ;;		None
 24609 ;; Return value:  Size  Location     Type
 24610 ;;		None               void
 24611 ;; Registers used:
 24612 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 24613 ;; Tracked objects:
 24614 ;;		On entry : 0/0
 24615 ;;		On exit  : 0/0
 24616 ;;		Unchanged: 0/0
 24617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24622 ;;Total ram usage:        0 bytes
 24623 ;; Hardware stack levels used:    1
 24624 ;; Hardware stack levels required when called:   15
 24625 ;; This function calls:
 24626 ;;		Nothing
 24627 ;; This function is called by:
 24628 ;;		_main
 24629 ;;		_calc_ror_data
 24630 ;;		_calc_bsoc
 24631 ;;		_efgtoa
 24632 ;; This function uses a reentrant model
 24633 ;;
 24634                           
 24635                           	psect	text99
 24636  018284                     __ptext99:
 24637                           	opt callstack 0
 24638  018284                     ___flge:
 24639                           	opt callstack 0
 24640                           
 24641                           ;stkvar	_ff1 @ sp[(0)+-4]
 24642                           
 24643                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24644                           ;incstack = 0
 24645 ;; hardware stack exceeded
 24646  018284  50E1               	movf	fsr1l,w,c
 24647  018286  0FFC               	addlw	-4
 24648  018288  6ED9               	movwf	fsr2l,c
 24649  01828A  50E2               	movf	fsr1h,w,c
 24650  01828C  6EDA               	movwf	fsr2h,c
 24651  01828E  0EFF               	movlw	255
 24652  018290  22DA               	addwfc	fsr2h,f,c
 24653  018292  0E00               	movlw	0
 24654  018294  14DE               	andwf	postinc2,w,c
 24655  018296  6E09               	movwf	(btemp+8)^0,c
 24656  018298  0E00               	movlw	0
 24657  01829A  14DE               	andwf	postinc2,w,c
 24658  01829C  6E0A               	movwf	(btemp+9)^0,c
 24659  01829E  0E80               	movlw	128
 24660  0182A0  14DE               	andwf	postinc2,w,c
 24661  0182A2  6E0B               	movwf	(btemp+10)^0,c
 24662  0182A4  0E7F               	movlw	127
 24663  0182A6  14DE               	andwf	postinc2,w,c
 24664  0182A8  6E0C               	movwf	(btemp+11)^0,c
 24665  0182AA  5009               	movf	(btemp+8)^0,w,c
 24666  0182AC  100A               	iorwf	(btemp+9)^0,w,c
 24667  0182AE  100B               	iorwf	(btemp+10)^0,w,c
 24668  0182B0  100C               	iorwf	(btemp+11)^0,w,c
 24669  0182B2  A4D8               	btfss	status,2,c
 24670  0182B4  D008               	goto	l8298
 24671                           
 24672                           ;stkvar	_ff1 @ sp[(0)+-4]
 24673  0182B6  0EFC               	movlw	-4
 24674  0182B8  6AE3               	clrf	plusw1,c
 24675  0182BA  0EFD               	movlw	-3
 24676  0182BC  6AE3               	clrf	plusw1,c
 24677  0182BE  0EFE               	movlw	-2
 24678  0182C0  6AE3               	clrf	plusw1,c
 24679  0182C2  0EFF               	movlw	-1
 24680  0182C4  6AE3               	clrf	plusw1,c
 24681  0182C6                     l8298:
 24682                           
 24683                           ;stkvar	_ff2 @ sp[(0)+-8]
 24684  0182C6  50E1               	movf	fsr1l,w,c
 24685  0182C8  0FF8               	addlw	-8
 24686  0182CA  6ED9               	movwf	fsr2l,c
 24687  0182CC  50E2               	movf	fsr1h,w,c
 24688  0182CE  6EDA               	movwf	fsr2h,c
 24689  0182D0  0EFF               	movlw	255
 24690  0182D2  22DA               	addwfc	fsr2h,f,c
 24691  0182D4  0E00               	movlw	0
 24692  0182D6  14DE               	andwf	postinc2,w,c
 24693  0182D8  6E09               	movwf	(btemp+8)^0,c
 24694  0182DA  0E00               	movlw	0
 24695  0182DC  14DE               	andwf	postinc2,w,c
 24696  0182DE  6E0A               	movwf	(btemp+9)^0,c
 24697  0182E0  0E80               	movlw	128
 24698  0182E2  14DE               	andwf	postinc2,w,c
 24699  0182E4  6E0B               	movwf	(btemp+10)^0,c
 24700  0182E6  0E7F               	movlw	127
 24701  0182E8  14DE               	andwf	postinc2,w,c
 24702  0182EA  6E0C               	movwf	(btemp+11)^0,c
 24703  0182EC  5009               	movf	(btemp+8)^0,w,c
 24704  0182EE  100A               	iorwf	(btemp+9)^0,w,c
 24705  0182F0  100B               	iorwf	(btemp+10)^0,w,c
 24706  0182F2  100C               	iorwf	(btemp+11)^0,w,c
 24707  0182F4  A4D8               	btfss	status,2,c
 24708  0182F6  D008               	goto	l2624
 24709                           
 24710                           ;stkvar	_ff2 @ sp[(0)+-8]
 24711  0182F8  0EF8               	movlw	-8
 24712  0182FA  6AE3               	clrf	plusw1,c
 24713  0182FC  0EF9               	movlw	-7
 24714  0182FE  6AE3               	clrf	plusw1,c
 24715  018300  0EFA               	movlw	-6
 24716  018302  6AE3               	clrf	plusw1,c
 24717  018304  0EFB               	movlw	-5
 24718  018306  6AE3               	clrf	plusw1,c
 24719  018308                     l2624:
 24720                           
 24721                           ;stkvar	_ff1 @ sp[(0)+-4]
 24722  018308  0EFF               	movlw	-1
 24723  01830A  AEE3               	btfss	plusw1,7,c
 24724  01830C  D024               	goto	l8304
 24725                           
 24726                           ;stkvar	_ff1 @ sp[(0)+-4]
 24727  01830E  0E00               	movlw	0
 24728  018310  6E09               	movwf	(btemp+8)^0,c
 24729  018312  0E00               	movlw	0
 24730  018314  6E0A               	movwf	(btemp+9)^0,c
 24731  018316  0E00               	movlw	0
 24732  018318  6E0B               	movwf	(btemp+10)^0,c
 24733  01831A  0E80               	movlw	128
 24734  01831C  6E0C               	movwf	(btemp+11)^0,c
 24735  01831E  0EFC               	movlw	-4
 24736  018320  50E3               	movf	plusw1,w,c
 24737  018322  5E09               	subwf	(btemp+8)^0,f,c
 24738  018324  0EFD               	movlw	-3
 24739  018326  50E3               	movf	plusw1,w,c
 24740  018328  5A0A               	subwfb	(btemp+9)^0,f,c
 24741  01832A  0EFE               	movlw	-2
 24742  01832C  50E3               	movf	plusw1,w,c
 24743  01832E  5A0B               	subwfb	(btemp+10)^0,f,c
 24744  018330  0EFF               	movlw	-1
 24745  018332  50E3               	movf	plusw1,w,c
 24746  018334  5A0C               	subwfb	(btemp+11)^0,f,c
 24747                           
 24748                           ;stkvar	_ff1 @ sp[(0)+-4]
 24749  018336  0EFC               	movlw	-4
 24750  018338  0060  F027  FFE3   	movff	btemp+8,plusw1
 24751  01833E  0EFD               	movlw	-3
 24752  018340  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24753  018346  0EFE               	movlw	-2
 24754  018348  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24755  01834E  0EFF               	movlw	-1
 24756  018350  0060  F033  FFE3   	movff	btemp+11,plusw1
 24757  018356                     l8304:
 24758                           
 24759                           ;stkvar	_ff2 @ sp[(0)+-8]
 24760  018356  0EFB               	movlw	-5
 24761  018358  AEE3               	btfss	plusw1,7,c
 24762  01835A  D024               	goto	l8308
 24763                           
 24764                           ;stkvar	_ff2 @ sp[(0)+-8]
 24765  01835C  0E00               	movlw	0
 24766  01835E  6E09               	movwf	(btemp+8)^0,c
 24767  018360  0E00               	movlw	0
 24768  018362  6E0A               	movwf	(btemp+9)^0,c
 24769  018364  0E00               	movlw	0
 24770  018366  6E0B               	movwf	(btemp+10)^0,c
 24771  018368  0E80               	movlw	128
 24772  01836A  6E0C               	movwf	(btemp+11)^0,c
 24773  01836C  0EF8               	movlw	-8
 24774  01836E  50E3               	movf	plusw1,w,c
 24775  018370  5E09               	subwf	(btemp+8)^0,f,c
 24776  018372  0EF9               	movlw	-7
 24777  018374  50E3               	movf	plusw1,w,c
 24778  018376  5A0A               	subwfb	(btemp+9)^0,f,c
 24779  018378  0EFA               	movlw	-6
 24780  01837A  50E3               	movf	plusw1,w,c
 24781  01837C  5A0B               	subwfb	(btemp+10)^0,f,c
 24782  01837E  0EFB               	movlw	-5
 24783  018380  50E3               	movf	plusw1,w,c
 24784  018382  5A0C               	subwfb	(btemp+11)^0,f,c
 24785                           
 24786                           ;stkvar	_ff2 @ sp[(0)+-8]
 24787  018384  0EF8               	movlw	-8
 24788  018386  0060  F027  FFE3   	movff	btemp+8,plusw1
 24789  01838C  0EF9               	movlw	-7
 24790  01838E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24791  018394  0EFA               	movlw	-6
 24792  018396  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24793  01839C  0EFB               	movlw	-5
 24794  01839E  0060  F033  FFE3   	movff	btemp+11,plusw1
 24795  0183A4                     l8308:
 24796                           
 24797                           ;stkvar	_ff1 @ sp[(0)+-4]
 24798  0183A4  0EFF               	movlw	-1
 24799  0183A6  7EE3               	btg	plusw1,7,c
 24800                           
 24801                           ;stkvar	_ff2 @ sp[(0)+-8]
 24802  0183A8  0EFB               	movlw	-5
 24803  0183AA  7EE3               	btg	plusw1,7,c
 24804                           
 24805                           ;stkvar	_ff2 @ sp[(0)+-8]
 24806                           ;stkvar	_ff1 @ sp[(0)+-4]
 24807  0183AC  50E1               	movf	fsr1l,w,c
 24808  0183AE  0FFC               	addlw	-4
 24809  0183B0  6ED9               	movwf	fsr2l,c
 24810  0183B2  50E2               	movf	fsr1h,w,c
 24811  0183B4  6EDA               	movwf	fsr2h,c
 24812  0183B6  0EFF               	movlw	255
 24813  0183B8  22DA               	addwfc	fsr2h,f,c
 24814  0183BA  0EF8               	movlw	-8
 24815  0183BC  50E3               	movf	plusw1,w,c
 24816  0183BE  5CDE               	subwf	postinc2,w,c
 24817  0183C0  0EF9               	movlw	-7
 24818  0183C2  50E3               	movf	plusw1,w,c
 24819  0183C4  58DE               	subwfb	postinc2,w,c
 24820  0183C6  0EFA               	movlw	-6
 24821  0183C8  50E3               	movf	plusw1,w,c
 24822  0183CA  58DE               	subwfb	postinc2,w,c
 24823  0183CC  0EFB               	movlw	-5
 24824  0183CE  50E3               	movf	plusw1,w,c
 24825  0183D0  58DE               	subwfb	postinc2,w,c
 24826  0183D2  B0D8               	btfsc	status,0,c
 24827  0183D4  D002               	goto	l8316
 24828  0183D6  9001               	bcf	btemp& (0+255),0,c
 24829  0183D8  D001               	goto	l2631
 24830  0183DA                     l8316:
 24831  0183DA  8001               	bsf	btemp& (0+255),0,c
 24832  0183DC                     l2631:
 24833                           
 24834                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 24835  0183DC  0EF8               	movlw	248
 24836  0183DE  26E1               	addwf	fsr1l,f,c
 24837  0183E0  0EFF               	movlw	255
 24838  0183E2  22E2               	addwfc	fsr1h,f,c
 24839  0183E4  0012               	return		;funcret
 24840  0183E6                     __end_of___flge:
 24841                           	opt callstack 0
 24842                           
 24843 ;; *************** function _calc_model_data *****************
 24844 ;; Defined at:
 24845 ;;		line 67 in file "mbmc.c"
 24846 ;; Parameters:    Size  Location     Type
 24847 ;;		None
 24848 ;; Auto vars:     Size  Location     Type
 24849 ;;		None
 24850 ;; Return value:  Size  Location     Type
 24851 ;;                  1  [STACK] void 
 24852 ;; Registers used:
 24853 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24854 ;; Tracked objects:
 24855 ;;		On entry : 0/0
 24856 ;;		On exit  : 3F/1
 24857 ;;		Unchanged: 0/0
 24858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24863 ;;Total ram usage:        0 bytes
 24864 ;; Hardware stack levels used:    1
 24865 ;; Hardware stack levels required when called:   18
 24866 ;; This function calls:
 24867 ;;		___fladd
 24868 ;;		___flmul
 24869 ;;		___flsub
 24870 ;;		_lp_filter
 24871 ;;		_start_bsoc
 24872 ;;		_stop_bsoc
 24873 ;; This function is called by:
 24874 ;;		_main
 24875 ;; This function uses a reentrant model
 24876 ;;
 24877                           
 24878                           	psect	text100
 24879  015730                     __ptext100:
 24880                           	opt callstack 0
 24881  015730                     _calc_model_data:
 24882                           	opt callstack 12
 24883                           
 24884                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 24885                           
 24886                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24887                           ;incstack = 0
 24888  015730  EC52  F0D9         	call	_stop_bsoc	;wreg free
 24889                           
 24890                           ; BSR set to: 57
 24891                           ;mbmc.c: 72:  if (!V.calib) {
 24892  015734  0102               	movlb	2	; () banked
 24893  015736  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
 24894  015738  A4D8               	btfss	status,2,c
 24895  01573A  D1C5               	goto	l10664
 24896                           
 24897                           ; BSR set to: 2
 24898                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 24899  01573C  C100  F144         	movff	_C,_C+68	;volatile
 24900  015740  C101  F145         	movff	_C+1,_C+69	;volatile
 24901  015744  C102  F146         	movff	_C+2,_C+70	;volatile
 24902  015748  C103  F147         	movff	_C+3,_C+71	;volatile
 24903                           
 24904                           ; BSR set to: 2
 24905                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 24906  01574C  0060  F23B  FFE6   	movff	calc_model_data@bcror,postinc1
 24907  015752  0060  F23F  FFE6   	movff	calc_model_data@bcror+1,postinc1
 24908  015758  0060  F243  FFE6   	movff	calc_model_data@bcror+2,postinc1
 24909  01575E  0060  F247  FFE6   	movff	calc_model_data@bcror+3,postinc1
 24910  015764  0060  F513  FFE6   	movff	_C+68,postinc1
 24911  01576A  0060  F517  FFE6   	movff	_C+69,postinc1
 24912  015770  0060  F51B  FFE6   	movff	_C+70,postinc1
 24913  015776  0060  F51F  FFE6   	movff	_C+71,postinc1
 24914  01577C  EC0D  F0D3         	call	___flsub	;wreg free
 24915  015780  0060  F004  F16C   	movff	btemp,_C+108	;volatile
 24916  015786  0060  F008  F16D   	movff	btemp+1,_C+109	;volatile
 24917  01578C  0060  F00C  F16E   	movff	btemp+2,_C+110	;volatile
 24918  015792  0060  F010  F16F   	movff	btemp+3,_C+111	;volatile
 24919                           
 24920                           ;mbmc.c: 75:   bcror = C.c_bat;
 24921  015798  C144  F08E         	movff	_C+68,calc_model_data@bcror	;volatile
 24922  01579C  C145  F08F         	movff	_C+69,calc_model_data@bcror+1	;volatile
 24923  0157A0  C146  F090         	movff	_C+70,calc_model_data@bcror+2	;volatile
 24924  0157A4  C147  F091         	movff	_C+71,calc_model_data@bcror+3	;volatile
 24925                           
 24926                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 24927  0157A8  C104  F148         	movff	_C+4,_C+72	;volatile
 24928  0157AC  C105  F149         	movff	_C+5,_C+73	;volatile
 24929  0157B0  C106  F14A         	movff	_C+6,_C+74	;volatile
 24930  0157B4  C107  F14B         	movff	_C+7,_C+75	;volatile
 24931                           
 24932                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 24933  0157B8  C110  F154         	movff	_C+16,_C+84	;volatile
 24934  0157BC  C111  F155         	movff	_C+17,_C+85	;volatile
 24935  0157C0  C112  F156         	movff	_C+18,_C+86	;volatile
 24936  0157C4  C113  F157         	movff	_C+19,_C+87	;volatile
 24937                           
 24938                           ;mbmc.c: 78:   C.bv_ror = C.v_bat - bvror;
 24939  0157C8  0060  F24B  FFE6   	movff	calc_model_data@bvror,postinc1
 24940  0157CE  0060  F24F  FFE6   	movff	calc_model_data@bvror+1,postinc1
 24941  0157D4  0060  F253  FFE6   	movff	calc_model_data@bvror+2,postinc1
 24942  0157DA  0060  F257  FFE6   	movff	calc_model_data@bvror+3,postinc1
 24943  0157E0  0060  F553  FFE6   	movff	_C+84,postinc1
 24944  0157E6  0060  F557  FFE6   	movff	_C+85,postinc1
 24945  0157EC  0060  F55B  FFE6   	movff	_C+86,postinc1
 24946  0157F2  0060  F55F  FFE6   	movff	_C+87,postinc1
 24947  0157F8  EC0D  F0D3         	call	___flsub	;wreg free
 24948  0157FC  0060  F004  F168   	movff	btemp,_C+104	;volatile
 24949  015802  0060  F008  F169   	movff	btemp+1,_C+105	;volatile
 24950  015808  0060  F00C  F16A   	movff	btemp+2,_C+106	;volatile
 24951  01580E  0060  F010  F16B   	movff	btemp+3,_C+107	;volatile
 24952                           
 24953                           ;mbmc.c: 79:   bvror = C.v_bat;
 24954  015814  C154  F092         	movff	_C+84,calc_model_data@bvror	;volatile
 24955  015818  C155  F093         	movff	_C+85,calc_model_data@bvror+1	;volatile
 24956  01581C  C156  F094         	movff	_C+86,calc_model_data@bvror+2	;volatile
 24957  015820  C157  F095         	movff	_C+87,calc_model_data@bvror+3	;volatile
 24958                           
 24959                           ;mbmc.c: 80:   C.v_pv = C.calc[V_PV];
 24960  015824  C114  F150         	movff	_C+20,_C+80	;volatile
 24961  015828  C115  F151         	movff	_C+21,_C+81	;volatile
 24962  01582C  C116  F152         	movff	_C+22,_C+82	;volatile
 24963  015830  C117  F153         	movff	_C+23,_C+83	;volatile
 24964                           
 24965                           ;mbmc.c: 81:   C.v_cc = C.calc[V_CC];
 24966  015834  C108  F14C         	movff	_C+8,_C+76	;volatile
 24967  015838  C109  F14D         	movff	_C+9,_C+77	;volatile
 24968  01583C  C10A  F14E         	movff	_C+10,_C+78	;volatile
 24969  015840  C10B  F14F         	movff	_C+11,_C+79	;volatile
 24970                           
 24971                           ;mbmc.c: 82:   C.v_inverter = C.calc[V_INVERTER];
 24972  015844  C130  F164         	movff	_C+48,_C+100	;volatile
 24973  015848  C131  F165         	movff	_C+49,_C+101	;volatile
 24974  01584C  C132  F166         	movff	_C+50,_C+102	;volatile
 24975  015850  C133  F167         	movff	_C+51,_C+103	;volatile
 24976                           
 24977                           ;mbmc.c: 83:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 24978  015854  0E01               	movlw	1
 24979  015856  6EE6               	movwf	postinc1,c
 24980  015858  0E10               	movlw	16
 24981  01585A  6EE6               	movwf	postinc1,c
 24982  01585C  0060  F403  FFE6   	movff	_C,postinc1
 24983  015862  0060  F407  FFE6   	movff	_C+1,postinc1
 24984  015868  0060  F40B  FFE6   	movff	_C+2,postinc1
 24985  01586E  0060  F40F  FFE6   	movff	_C+3,postinc1
 24986  015874  0060  F413  FFE6   	movff	_C+4,postinc1
 24987  01587A  0060  F417  FFE6   	movff	_C+5,postinc1
 24988  015880  0060  F41B  FFE6   	movff	_C+6,postinc1
 24989  015886  0060  F41F  FFE6   	movff	_C+7,postinc1
 24990  01588C  EC0D  F0D3         	call	___flsub	;wreg free
 24991  015890  0060  F007  FFE6   	movff	btemp,postinc1
 24992  015896  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24993  01589C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24994  0158A2  0060  F013  FFE6   	movff	btemp+3,postinc1
 24995  0158A8  ECAE  F0BC         	call	_lp_filter	;wreg free
 24996  0158AC  0060  F004  F140   	movff	btemp,_C+64	;volatile
 24997  0158B2  0060  F008  F141   	movff	btemp+1,_C+65	;volatile
 24998  0158B8  0060  F00C  F142   	movff	btemp+2,_C+66	;volatile
 24999  0158BE  0060  F010  F143   	movff	btemp+3,_C+67	;volatile
 25000                           
 25001                           ;mbmc.c: 84:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 25002  0158C4  0E01               	movlw	1
 25003  0158C6  6EE6               	movwf	postinc1,c
 25004  0158C8  0E11               	movlw	17
 25005  0158CA  6EE6               	movwf	postinc1,c
 25006  0158CC  0060  F553  FFE6   	movff	_C+84,postinc1
 25007  0158D2  0060  F557  FFE6   	movff	_C+85,postinc1
 25008  0158D8  0060  F55B  FFE6   	movff	_C+86,postinc1
 25009  0158DE  0060  F55F  FFE6   	movff	_C+87,postinc1
 25010  0158E4  0060  F503  FFE6   	movff	_C+64,postinc1
 25011  0158EA  0060  F507  FFE6   	movff	_C+65,postinc1
 25012  0158F0  0060  F50B  FFE6   	movff	_C+66,postinc1
 25013  0158F6  0060  F50F  FFE6   	movff	_C+67,postinc1
 25014  0158FC  EC26  F097         	call	___flmul	;wreg free
 25015  015900  0060  F007  FFE6   	movff	btemp,postinc1
 25016  015906  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25017  01590C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25018  015912  0060  F013  FFE6   	movff	btemp+3,postinc1
 25019  015918  ECAE  F0BC         	call	_lp_filter	;wreg free
 25020  01591C  0060  F004  F170   	movff	btemp,_C+112	;volatile
 25021  015922  0060  F008  F171   	movff	btemp+1,_C+113	;volatile
 25022  015928  0060  F00C  F172   	movff	btemp+2,_C+114	;volatile
 25023  01592E  0060  F010  F173   	movff	btemp+3,_C+115	;volatile
 25024                           
 25025                           ;mbmc.c: 85:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 25026  015934  0E01               	movlw	1
 25027  015936  6EE6               	movwf	postinc1,c
 25028  015938  0E12               	movlw	18
 25029  01593A  6EE6               	movwf	postinc1,c
 25030  01593C  0060  F543  FFE6   	movff	_C+80,postinc1
 25031  015942  0060  F547  FFE6   	movff	_C+81,postinc1
 25032  015948  0060  F54B  FFE6   	movff	_C+82,postinc1
 25033  01594E  0060  F54F  FFE6   	movff	_C+83,postinc1
 25034  015954  0060  F523  FFE6   	movff	_C+72,postinc1
 25035  01595A  0060  F527  FFE6   	movff	_C+73,postinc1
 25036  015960  0060  F52B  FFE6   	movff	_C+74,postinc1
 25037  015966  0060  F52F  FFE6   	movff	_C+75,postinc1
 25038  01596C  EC26  F097         	call	___flmul	;wreg free
 25039  015970  0060  F007  FFE6   	movff	btemp,postinc1
 25040  015976  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25041  01597C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25042  015982  0060  F013  FFE6   	movff	btemp+3,postinc1
 25043  015988  ECAE  F0BC         	call	_lp_filter	;wreg free
 25044  01598C  0060  F004  F178   	movff	btemp,_C+120	;volatile
 25045  015992  0060  F008  F179   	movff	btemp+1,_C+121	;volatile
 25046  015998  0060  F00C  F17A   	movff	btemp+2,_C+122	;volatile
 25047  01599E  0060  F010  F17B   	movff	btemp+3,_C+123	;volatile
 25048                           
 25049                           ;mbmc.c: 86:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 25050  0159A4  0E01               	movlw	1
 25051  0159A6  6EE6               	movwf	postinc1,c
 25052  0159A8  0E13               	movlw	19
 25053  0159AA  6EE6               	movwf	postinc1,c
 25054  0159AC  0E00               	movlw	0
 25055  0159AE  6EE6               	movwf	postinc1,c
 25056  0159B0  0E00               	movlw	0
 25057  0159B2  6EE6               	movwf	postinc1,c
 25058  0159B4  0E60               	movlw	96
 25059  0159B6  6EE6               	movwf	postinc1,c
 25060  0159B8  0EC1               	movlw	193
 25061  0159BA  6EE6               	movwf	postinc1,c
 25062  0159BC  0060  F593  FFE6   	movff	_C+100,postinc1
 25063  0159C2  0060  F597  FFE6   	movff	_C+101,postinc1
 25064  0159C8  0060  F59B  FFE6   	movff	_C+102,postinc1
 25065  0159CE  0060  F59F  FFE6   	movff	_C+103,postinc1
 25066  0159D4  0060  F503  FFE6   	movff	_C+64,postinc1
 25067  0159DA  0060  F507  FFE6   	movff	_C+65,postinc1
 25068  0159E0  0060  F50B  FFE6   	movff	_C+66,postinc1
 25069  0159E6  0060  F50F  FFE6   	movff	_C+67,postinc1
 25070  0159EC  EC26  F097         	call	___flmul	;wreg free
 25071  0159F0  0060  F007  FFE6   	movff	btemp,postinc1
 25072  0159F6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25073  0159FC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25074  015A02  0060  F013  FFE6   	movff	btemp+3,postinc1
 25075  015A08  EC3B  F09B         	call	___fladd	;wreg free
 25076  015A0C  0060  F007  FFE6   	movff	btemp,postinc1
 25077  015A12  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25078  015A18  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25079  015A1E  0060  F013  FFE6   	movff	btemp+3,postinc1
 25080  015A24  ECAE  F0BC         	call	_lp_filter	;wreg free
 25081  015A28  0060  F004  F174   	movff	btemp,_C+116	;volatile
 25082  015A2E  0060  F008  F175   	movff	btemp+1,_C+117	;volatile
 25083  015A34  0060  F00C  F176   	movff	btemp+2,_C+118	;volatile
 25084  015A3A  0060  F010  F177   	movff	btemp+3,_C+119	;volatile
 25085                           
 25086                           ;mbmc.c: 87:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 25087  015A40  0E01               	movlw	1
 25088  015A42  6EE6               	movwf	postinc1,c
 25089  015A44  0E14               	movlw	20
 25090  015A46  6EE6               	movwf	postinc1,c
 25091  015A48  0060  F553  FFE6   	movff	_C+84,postinc1
 25092  015A4E  0060  F557  FFE6   	movff	_C+85,postinc1
 25093  015A54  0060  F55B  FFE6   	movff	_C+86,postinc1
 25094  015A5A  0060  F55F  FFE6   	movff	_C+87,postinc1
 25095  015A60  0060  F513  FFE6   	movff	_C+68,postinc1
 25096  015A66  0060  F517  FFE6   	movff	_C+69,postinc1
 25097  015A6C  0060  F51B  FFE6   	movff	_C+70,postinc1
 25098  015A72  0060  F51F  FFE6   	movff	_C+71,postinc1
 25099  015A78  EC26  F097         	call	___flmul	;wreg free
 25100  015A7C  0060  F007  FFE6   	movff	btemp,postinc1
 25101  015A82  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25102  015A88  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25103  015A8E  0060  F013  FFE6   	movff	btemp+3,postinc1
 25104  015A94  ECAE  F0BC         	call	_lp_filter	;wreg free
 25105  015A98  0060  F004  F17C   	movff	btemp,_C+124	;volatile
 25106  015A9E  0060  F008  F17D   	movff	btemp+1,_C+125	;volatile
 25107  015AA4  0060  F00C  F17E   	movff	btemp+2,_C+126	;volatile
 25108  015AAA  0060  F010  F17F   	movff	btemp+3,_C+127	;volatile
 25109                           
 25110                           ;mbmc.c: 91:   if (C.p_inverter < 0.0)
 25111  015AB0  0101               	movlb	1	; () banked
 25112  015AB2  AF77               	btfss	(_C+119)& (0+255),7,b	;volatile
 25113  015AB4  D008               	goto	l10664
 25114                           
 25115                           ; BSR set to: 1
 25116                           ;mbmc.c: 92:    C.p_inverter = 0.0001;
 25117  015AB6  0E17               	movlw	23
 25118  015AB8  6F74               	movwf	(_C+116)& (0+255),b	;volatile
 25119  015ABA  0EB7               	movlw	183
 25120  015ABC  6F75               	movwf	(_C+117)& (0+255),b	;volatile
 25121  015ABE  0ED1               	movlw	209
 25122  015AC0  6F76               	movwf	(_C+118)& (0+255),b	;volatile
 25123  015AC2  0E38               	movlw	56
 25124  015AC4  6F77               	movwf	(_C+119)& (0+255),b	;volatile
 25125  015AC6                     l10664:
 25126                           
 25127                           ;mbmc.c: 94:  start_bsoc();
 25128  015AC6  ECF4  F0D7         	call	_start_bsoc	;wreg free
 25129                           
 25130                           ; BSR set to: 57
 25131                           ;mbmc.c: 95:  C.update = 1;
 25132  015ACA  0E01               	movlw	1
 25133  015ACC  0101               	movlb	1	; () banked
 25134  015ACE  6FAC               	movwf	(_C+172)& (0+255),b	;volatile
 25135                           
 25136                           ; BSR set to: 1
 25137                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25138  015AD0  0012               	return		;funcret
 25139  015AD2                     __end_of_calc_model_data:
 25140                           	opt callstack 0
 25141                           
 25142 ;; *************** function _stop_bsoc *****************
 25143 ;; Defined at:
 25144 ;;		line 107 in file "bsoc.c"
 25145 ;; Parameters:    Size  Location     Type
 25146 ;;		None
 25147 ;; Auto vars:     Size  Location     Type
 25148 ;;		None
 25149 ;; Return value:  Size  Location     Type
 25150 ;;                  1  [STACK] void 
 25151 ;; Registers used:
 25152 ;;		None
 25153 ;; Tracked objects:
 25154 ;;		On entry : 0/0
 25155 ;;		On exit  : 3F/39
 25156 ;;		Unchanged: 0/0
 25157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25162 ;;Total ram usage:        0 bytes
 25163 ;; Hardware stack levels used:    1
 25164 ;; Hardware stack levels required when called:   15
 25165 ;; This function calls:
 25166 ;;		Nothing
 25167 ;; This function is called by:
 25168 ;;		_calc_model_data
 25169 ;; This function uses a reentrant model
 25170 ;;
 25171                           
 25172                           	psect	text101
 25173  01B2A4                     __ptext101:
 25174                           	opt callstack 0
 25175  01B2A4                     _stop_bsoc:
 25176                           	opt callstack 14
 25177                           
 25178                           ;bsoc.c: 110:  PIE6bits.TMR3IE = 0;
 25179                           
 25180                           ; BSR set to: 1
 25181                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25182                           ;incstack = 0
 25183  01B2A4  0139               	movlb	57	; () banked
 25184  01B2A6  9D96               	bcf	150,6,b	;volatile
 25185                           
 25186                           ; BSR set to: 57
 25187                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 25188  01B2A8  0012               	return		;funcret
 25189  01B2AA                     __end_of_stop_bsoc:
 25190                           	opt callstack 0
 25191                           
 25192 ;; *************** function _start_bsoc *****************
 25193 ;; Defined at:
 25194 ;;		line 98 in file "bsoc.c"
 25195 ;; Parameters:    Size  Location     Type
 25196 ;;		None
 25197 ;; Auto vars:     Size  Location     Type
 25198 ;;		None
 25199 ;; Return value:  Size  Location     Type
 25200 ;;                  1  [STACK] void 
 25201 ;; Registers used:
 25202 ;;		wreg, status,2, status,0, btemp+11
 25203 ;; Tracked objects:
 25204 ;;		On entry : 3C/2
 25205 ;;		On exit  : 3F/39
 25206 ;;		Unchanged: 0/0
 25207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25212 ;;Total ram usage:        0 bytes
 25213 ;; Hardware stack levels used:    1
 25214 ;; Hardware stack levels required when called:   15
 25215 ;; This function calls:
 25216 ;;		Nothing
 25217 ;; This function is called by:
 25218 ;;		_calc_model_data
 25219 ;; This function uses a reentrant model
 25220 ;;
 25221                           
 25222                           	psect	text102
 25223  01AFE8                     __ptext102:
 25224                           	opt callstack 0
 25225  01AFE8                     _start_bsoc:
 25226                           	opt callstack 14
 25227                           
 25228                           ;bsoc.c: 101:  PIE6bits.TMR3IE = 1;
 25229                           
 25230                           ; BSR set to: 57
 25231                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25232                           ;incstack = 0
 25233  01AFE8  0139               	movlb	57	; () banked
 25234  01AFEA  8D96               	bsf	150,6,b	;volatile
 25235                           
 25236                           ; BSR set to: 57
 25237  01AFEC  A4BE               	btfss	190,2,c	;volatile
 25238  01AFEE  D002               	goto	u9260
 25239  01AFF0  0E01               	movlw	1
 25240  01AFF2  D001               	goto	u9266
 25241  01AFF4                     u9260:
 25242  01AFF4  0E00               	movlw	0
 25243  01AFF6                     u9266:
 25244  01AFF6  0AFF               	xorlw	255
 25245  01AFF8  6E0C               	movwf	(btemp+11)^0,c
 25246  01AFFA  460C               	rlncf	(btemp+11)^0,f,c
 25247  01AFFC  460C               	rlncf	(btemp+11)^0,f,c
 25248  01AFFE  50BE               	movf	190,w,c	;volatile
 25249  01B000  180C               	xorwf	(btemp+11)^0,w,c
 25250  01B002  0BFB               	andlw	-5
 25251  01B004  180C               	xorwf	(btemp+11)^0,w,c
 25252  01B006  6EBE               	movwf	190,c	;volatile
 25253                           
 25254                           ; BSR set to: 57
 25255                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 25256  01B008  0012               	return		;funcret
 25257  01B00A                     __end_of_start_bsoc:
 25258                           	opt callstack 0
 25259                           
 25260 ;; *************** function _lp_filter *****************
 25261 ;; Defined at:
 25262 ;;		line 29 in file "mbmc.c"
 25263 ;; Parameters:    Size  Location     Type
 25264 ;;  new             4  [STACK] const float 
 25265 ;;  bn              1  [STACK] const unsigned char 
 25266 ;;  slow            1  [STACK] const char 
 25267 ;; Auto vars:     Size  Location     Type
 25268 ;;  lp_speed        4  [STACK] float 
 25269 ;; Return value:  Size  Location     Type
 25270 ;;                  4  [STACK] float 
 25271 ;; Registers used:
 25272 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25273 ;; Tracked objects:
 25274 ;;		On entry : 0/2
 25275 ;;		On exit  : 0/0
 25276 ;;		Unchanged: 0/0
 25277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25282 ;;Total ram usage:        0 bytes
 25283 ;; Hardware stack levels used:    1
 25284 ;; Hardware stack levels required when called:   17
 25285 ;; This function calls:
 25286 ;;		___fladd
 25287 ;;		___flmul
 25288 ;;		___flsub
 25289 ;; This function is called by:
 25290 ;;		_main
 25291 ;;		_convert_adc_data
 25292 ;;		_calc_model_data
 25293 ;; This function uses a reentrant model
 25294 ;;
 25295                           
 25296                           	psect	text103
 25297  01795C                     __ptext103:
 25298                           	opt callstack 0
 25299  01795C                     _lp_filter:
 25300                           	opt callstack 0
 25301                           
 25302                           ; BSR set to: 57
 25303                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25304  01795C  52E6               	movf	postinc1,f,c
 25305  01795E  52E6               	movf	postinc1,f,c
 25306  017960  52E6               	movf	postinc1,f,c
 25307  017962  52E6               	movf	postinc1,f,c
 25308                           
 25309                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 25310                           ;stkvar	_bn @ sp[(-4)+-5]
 25311                           
 25312                           ;incstack = 0
 25313  017964  0EF7               	movlw	-9
 25314  017966  006F FF8C  F001    	movff	plusw1,btemp
 25315  01796C  0E14               	movlw	20
 25316  01796E  6401               	cpfsgt	btemp^0,c
 25317  017970  D011               	goto	l10054
 25318  017972                     u9170:
 25319                           
 25320                           ;mbmc.c: 35:   return new;
 25321                           ;stkvar	_new @ sp[(-4)+-4]
 25322  017972  0EF8               	movlw	-8
 25323  017974  006F FF8C  F001    	movff	plusw1,btemp
 25324  01797A  0EF9               	movlw	-7
 25325  01797C  006F FF8C  F002    	movff	plusw1,btemp+1
 25326  017982  0EFA               	movlw	-6
 25327  017984  006F FF8C  F003    	movff	plusw1,btemp+2
 25328  01798A  0EFB               	movlw	-5
 25329  01798C  006F FF8C  F004    	movff	plusw1,btemp+3
 25330  017992  D0BD               	goto	l1821
 25331  017994                     l10054:
 25332                           
 25333                           ;mbmc.c: 37:  if (slow == (-1)) {
 25334                           ;stkvar	_slow @ sp[(-4)+-6]
 25335  017994  0EF6               	movlw	-10
 25336  017996  28E3               	incf	plusw1,w,c
 25337  017998  A4D8               	btfss	status,2,c
 25338  01799A  D012               	goto	l10062
 25339                           
 25340                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 25341                           ;stkvar	_bn @ sp[(-4)+-5]
 25342  01799C  0EF7               	movlw	-9
 25343  01799E  50E3               	movf	plusw1,w,c
 25344  0179A0  0D04               	mullw	4
 25345  0179A2  0E00               	movlw	low lp_filter@smooth
 25346  0179A4  24F3               	addwf	243,w,c
 25347  0179A6  6ED9               	movwf	fsr2l,c
 25348  0179A8  0E03               	movlw	high lp_filter@smooth
 25349  0179AA  20F4               	addwfc	prodh,w,c
 25350  0179AC  6EDA               	movwf	fsr2h,c
 25351  0179AE  0E00               	movlw	0
 25352  0179B0  6EDE               	movwf	postinc2,c
 25353  0179B2  0E00               	movlw	0
 25354  0179B4  6EDE               	movwf	postinc2,c
 25355  0179B6  0E00               	movlw	0
 25356  0179B8  6EDE               	movwf	postinc2,c
 25357  0179BA  0E00               	movlw	0
 25358  0179BC  6EDD               	movwf	postdec2,c
 25359  0179BE  D7D9               	goto	u9170
 25360  0179C0                     l10062:
 25361                           
 25362                           ;mbmc.c: 42:  if (slow) {
 25363                           ;stkvar	_slow @ sp[(-4)+-6]
 25364  0179C0  0EF6               	movlw	-10
 25365  0179C2  50E3               	movf	plusw1,w,c
 25366  0179C4  B4D8               	btfsc	status,2,c
 25367  0179C6  D006               	goto	l10066
 25368                           
 25369                           ;mbmc.c: 43:   lp_speed = 0.033;
 25370  0179C8  0E02               	movlw	2
 25371  0179CA  6E09               	movwf	(btemp+8)^0,c
 25372  0179CC  0E2B               	movlw	43
 25373  0179CE  6E0A               	movwf	(btemp+9)^0,c
 25374  0179D0  0E07               	movlw	7
 25375  0179D2  D005               	goto	L26
 25376  0179D4                     l10066:
 25377                           
 25378                           ;mbmc.c: 45:   lp_speed = 0.066;
 25379  0179D4  0E02               	movlw	2
 25380  0179D6  6E09               	movwf	(btemp+8)^0,c
 25381  0179D8  0E2B               	movlw	43
 25382  0179DA  6E0A               	movwf	(btemp+9)^0,c
 25383  0179DC  0E87               	movlw	135
 25384  0179DE                     L26:
 25385  0179DE  6E0B               	movwf	(btemp+10)^0,c
 25386  0179E0  0E3D               	movlw	61
 25387  0179E2  6E0C               	movwf	(btemp+11)^0,c
 25388                           
 25389                           ;stkvar	_lp_speed @ sp[(-4)+0]
 25390  0179E4  0EFC               	movlw	-4
 25391  0179E6  0060  F027  FFE3   	movff	btemp+8,plusw1
 25392  0179EC  0EFD               	movlw	-3
 25393  0179EE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25394  0179F4  0EFE               	movlw	-2
 25395  0179F6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25396  0179FC  0EFF               	movlw	-1
 25397  0179FE  0060  F033  FFE3   	movff	btemp+11,plusw1
 25398                           
 25399                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 25400                           ;stkvar	_bn @ sp[(-4)+-5]
 25401  017A04  0EF7               	movlw	-9
 25402  017A06  50E3               	movf	plusw1,w,c
 25403  017A08  0D04               	mullw	4
 25404  017A0A  0E00               	movlw	low lp_filter@smooth
 25405  017A0C  24F3               	addwf	243,w,c
 25406  017A0E  6ED9               	movwf	fsr2l,c
 25407  017A10  0E03               	movlw	high lp_filter@smooth
 25408  017A12  20F4               	addwfc	prodh,w,c
 25409  017A14  6EDA               	movwf	fsr2h,c
 25410  017A16  006F FF7B FFE6     	movff	postinc2,postinc1
 25411  017A1C  006F FF7B FFE6     	movff	postinc2,postinc1
 25412  017A22  006F FF7B FFE6     	movff	postinc2,postinc1
 25413  017A28  006F FF7B FFE6     	movff	postinc2,postinc1
 25414                           
 25415                           ;stkvar	_lp_speed @ sp[(-8)+0]
 25416  017A2E  0EF8               	movlw	-8
 25417  017A30  006F FF8F FFE6     	movff	plusw1,postinc1
 25418  017A36  006F FF8F FFE6     	movff	plusw1,postinc1
 25419  017A3C  006F FF8F FFE6     	movff	plusw1,postinc1
 25420  017A42  006F FF8F FFE6     	movff	plusw1,postinc1
 25421                           
 25422                           ;stkvar	_bn @ sp[(-12)+-5]
 25423  017A48  0EEF               	movlw	-17
 25424  017A4A  50E3               	movf	plusw1,w,c
 25425  017A4C  0D04               	mullw	4
 25426  017A4E  0E00               	movlw	low lp_filter@smooth
 25427  017A50  24F3               	addwf	243,w,c
 25428  017A52  6ED9               	movwf	fsr2l,c
 25429  017A54  0E03               	movlw	high lp_filter@smooth
 25430  017A56  20F4               	addwfc	prodh,w,c
 25431  017A58  6EDA               	movwf	fsr2h,c
 25432  017A5A  006F FF7B FFE6     	movff	postinc2,postinc1
 25433  017A60  006F FF7B FFE6     	movff	postinc2,postinc1
 25434  017A66  006F FF7B FFE6     	movff	postinc2,postinc1
 25435  017A6C  006F FF7B FFE6     	movff	postinc2,postinc1
 25436                           
 25437                           ;stkvar	_new @ sp[(-16)+-4]
 25438  017A72  0EEC               	movlw	-20
 25439  017A74  006F FF8F FFE6     	movff	plusw1,postinc1
 25440  017A7A  006F FF8F FFE6     	movff	plusw1,postinc1
 25441  017A80  006F FF8F FFE6     	movff	plusw1,postinc1
 25442  017A86  006F FF8F FFE6     	movff	plusw1,postinc1
 25443  017A8C  EC0D  F0D3         	call	___flsub	;wreg free
 25444  017A90  0060  F007  FFE6   	movff	btemp,postinc1
 25445  017A96  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25446  017A9C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25447  017AA2  0060  F013  FFE6   	movff	btemp+3,postinc1
 25448  017AA8  EC26  F097         	call	___flmul	;wreg free
 25449  017AAC  0060  F007  FFE6   	movff	btemp,postinc1
 25450  017AB2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25451  017AB8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25452  017ABE  0060  F013  FFE6   	movff	btemp+3,postinc1
 25453  017AC4  EC3B  F09B         	call	___fladd	;wreg free
 25454                           
 25455                           ;stkvar	_bn @ sp[(-4)+-5]
 25456  017AC8  0EF7               	movlw	-9
 25457  017ACA  50E3               	movf	plusw1,w,c
 25458  017ACC  0D04               	mullw	4
 25459  017ACE  0E00               	movlw	low lp_filter@smooth
 25460  017AD0  24F3               	addwf	243,w,c
 25461  017AD2  6ED9               	movwf	fsr2l,c
 25462  017AD4  0E03               	movlw	high lp_filter@smooth
 25463  017AD6  20F4               	addwfc	prodh,w,c
 25464  017AD8  6EDA               	movwf	fsr2h,c
 25465  017ADA  0060  F007  FFDE   	movff	btemp,postinc2
 25466  017AE0  0060  F00B  FFDE   	movff	btemp+1,postinc2
 25467  017AE6  0060  F00F  FFDE   	movff	btemp+2,postinc2
 25468  017AEC  0060  F013  FFDD   	movff	btemp+3,postdec2
 25469  017AF2  52DD               	movf	postdec2,f,c
 25470  017AF4  52DD               	movf	postdec2,f,c
 25471  017AF6  006F FF78  F001    	movff	postinc2,btemp
 25472  017AFC  006F FF78  F002    	movff	postinc2,btemp+1
 25473  017B02  006F FF78  F003    	movff	postinc2,btemp+2
 25474  017B08  006F FF78  F004    	movff	postinc2,btemp+3
 25475  017B0E                     l1821:
 25476                           
 25477                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 25478  017B0E  0EF6               	movlw	246
 25479  017B10  26E1               	addwf	fsr1l,f,c
 25480  017B12  0EFF               	movlw	255
 25481  017B14  22E2               	addwfc	fsr1h,f,c
 25482  017B16  0012               	return		;funcret
 25483  017B18                     __end_of_lp_filter:
 25484                           	opt callstack 0
 25485                           
 25486 ;; *************** function ___flsub *****************
 25487 ;; Defined at:
 25488 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 25489 ;; Parameters:    Size  Location     Type
 25490 ;;  b               4  [STACK] float 
 25491 ;;  a               4  [STACK] float 
 25492 ;; Auto vars:     Size  Location     Type
 25493 ;;		None
 25494 ;; Return value:  Size  Location     Type
 25495 ;;                  4  [STACK] float 
 25496 ;; Registers used:
 25497 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 25498 ;; Tracked objects:
 25499 ;;		On entry : 0/0
 25500 ;;		On exit  : 0/0
 25501 ;;		Unchanged: 0/0
 25502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25507 ;;Total ram usage:        0 bytes
 25508 ;; Hardware stack levels used:    1
 25509 ;; Hardware stack levels required when called:   16
 25510 ;; This function calls:
 25511 ;;		___fladd
 25512 ;; This function is called by:
 25513 ;;		_conv_raw_result
 25514 ;;		_lp_filter
 25515 ;;		_calc_model_data
 25516 ;;		_calc_ror_data
 25517 ;;		_esr_check
 25518 ;;		_efgtoa
 25519 ;; This function uses a reentrant model
 25520 ;;
 25521                           
 25522                           	psect	text104
 25523  01A61A                     __ptext104:
 25524                           	opt callstack 0
 25525  01A61A                     ___flsub:
 25526                           	opt callstack 0
 25527                           
 25528                           ;stkvar	_a @ sp[(0)+-8]
 25529                           
 25530                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25531                           ;incstack = 0
 25532 ;; hardware stack exceeded
 25533  01A61A  0EFB               	movlw	-5
 25534  01A61C  7EE3               	btg	plusw1,7,c
 25535                           
 25536                           ;stkvar	_a @ sp[(0)+-8]
 25537  01A61E  0EF8               	movlw	-8
 25538  01A620  006F FF8F FFE6     	movff	plusw1,postinc1
 25539  01A626  006F FF8F FFE6     	movff	plusw1,postinc1
 25540  01A62C  006F FF8F FFE6     	movff	plusw1,postinc1
 25541  01A632  006F FF8F FFE6     	movff	plusw1,postinc1
 25542                           
 25543                           ;stkvar	_b @ sp[(-4)+-4]
 25544  01A638  0EF8               	movlw	-8
 25545  01A63A  006F FF8F FFE6     	movff	plusw1,postinc1
 25546  01A640  006F FF8F FFE6     	movff	plusw1,postinc1
 25547  01A646  006F FF8F FFE6     	movff	plusw1,postinc1
 25548  01A64C  006F FF8F FFE6     	movff	plusw1,postinc1
 25549  01A652  EC3B  F09B         	call	___fladd	;wreg free
 25550                           
 25551                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 25552  01A656  0EF8               	movlw	248
 25553  01A658  26E1               	addwf	fsr1l,f,c
 25554  01A65A  0EFF               	movlw	255
 25555  01A65C  22E2               	addwfc	fsr1h,f,c
 25556  01A65E  0012               	return		;funcret
 25557  01A660                     __end_of___flsub:
 25558                           	opt callstack 0
 25559                           
 25560 ;; *************** function ___fladd *****************
 25561 ;; Defined at:
 25562 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 25563 ;; Parameters:    Size  Location     Type
 25564 ;;  b               4  [STACK] float 
 25565 ;;  a               4  [STACK] float 
 25566 ;; Auto vars:     Size  Location     Type
 25567 ;;  grs             1  [STACK] unsigned char 
 25568 ;;  bexp            1  [STACK] unsigned char 
 25569 ;;  aexp            1  [STACK] unsigned char 
 25570 ;;  signs           1  [STACK] unsigned char 
 25571 ;; Return value:  Size  Location     Type
 25572 ;;                  4  [STACK] unsigned char 
 25573 ;; Registers used:
 25574 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 25575 ;; Tracked objects:
 25576 ;;		On entry : 0/0
 25577 ;;		On exit  : 0/0
 25578 ;;		Unchanged: 0/0
 25579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25584 ;;Total ram usage:        0 bytes
 25585 ;; Hardware stack levels used:    1
 25586 ;; Hardware stack levels required when called:   15
 25587 ;; This function calls:
 25588 ;;		Nothing
 25589 ;; This function is called by:
 25590 ;;		_lp_filter
 25591 ;;		_calc_model_data
 25592 ;;		_calc_bsoc
 25593 ;;		_efgtoa
 25594 ;;		___flsub
 25595 ;; This function uses a reentrant model
 25596 ;;
 25597                           
 25598                           	psect	text105
 25599  013676                     __ptext105:
 25600                           	opt callstack 0
 25601  013676                     ___fladd:
 25602                           	opt callstack 0
 25603                           
 25604                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25605  013676  52E6               	movf	postinc1,f,c
 25606  013678  52E6               	movf	postinc1,f,c
 25607  01367A  52E6               	movf	postinc1,f,c
 25608  01367C  52E6               	movf	postinc1,f,c
 25609                           
 25610                           ;stkvar	_b @ sp[(-4)+-4]
 25611                           
 25612                           ;incstack = 0
 25613 ;; hardware stack exceeded
 25614  01367E  0EFB               	movlw	251
 25615  013680  24E1               	addwf	fsr1l,w,c
 25616  013682  6ED9               	movwf	fsr2l,c
 25617  013684  0EFF               	movlw	255
 25618  013686  20E2               	addwfc	fsr1h,w,c
 25619  013688  6EDA               	movwf	fsr2h,c
 25620  01368A  50DF               	movf	indf2,w,c
 25621  01368C  6E0C               	movwf	(btemp+11)^0,c
 25622  01368E  0E80               	movlw	128
 25623  013690  160C               	andwf	(btemp+11)^0,f,c
 25624                           
 25625                           ;stkvar	_signs @ sp[(-4)+3]
 25626  013692  0EFF               	movlw	-1
 25627  013694  0060  F033  FFE3   	movff	btemp+11,plusw1
 25628                           
 25629                           ;stkvar	_b @ sp[(-4)+-4]
 25630  01369A  0EFB               	movlw	251
 25631  01369C  24E1               	addwf	fsr1l,w,c
 25632  01369E  6ED9               	movwf	fsr2l,c
 25633  0136A0  0EFF               	movlw	255
 25634  0136A2  20E2               	addwfc	fsr1h,w,c
 25635  0136A4  6EDA               	movwf	fsr2h,c
 25636  0136A6  50DF               	movf	indf2,w,c
 25637  0136A8  6E0C               	movwf	(btemp+11)^0,c
 25638  0136AA  90D8               	bcf	status,0,c
 25639  0136AC  340C               	rlcf	(btemp+11)^0,w,c
 25640  0136AE  6E0B               	movwf	(btemp+10)^0,c
 25641                           
 25642                           ;stkvar	_bexp @ sp[(-4)+1]
 25643  0136B0  0EFD               	movlw	-3
 25644  0136B2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25645                           
 25646                           ;stkvar	_b @ sp[(-4)+-4]
 25647  0136B8  0EFA               	movlw	250
 25648  0136BA  24E1               	addwf	fsr1l,w,c
 25649  0136BC  6ED9               	movwf	fsr2l,c
 25650  0136BE  0EFF               	movlw	255
 25651  0136C0  20E2               	addwfc	fsr1h,w,c
 25652  0136C2  6EDA               	movwf	fsr2h,c
 25653  0136C4  AEDF               	btfss	indf2,7,c
 25654  0136C6  D002               	goto	l7448
 25655                           
 25656                           ;stkvar	_bexp @ sp[(-4)+1]
 25657  0136C8  0EFD               	movlw	-3
 25658  0136CA  80E3               	bsf	plusw1,0,c
 25659  0136CC                     l7448:
 25660                           
 25661                           ;stkvar	_bexp @ sp[(-4)+1]
 25662  0136CC  0EFD               	movlw	-3
 25663  0136CE  50E3               	movf	plusw1,w,c
 25664  0136D0  B4D8               	btfsc	status,2,c
 25665  0136D2  D027               	goto	l7458
 25666                           
 25667                           ;stkvar	_bexp @ sp[(-4)+1]
 25668  0136D4  0EFD               	movlw	-3
 25669  0136D6  28E3               	incf	plusw1,w,c
 25670  0136D8  A4D8               	btfss	status,2,c
 25671  0136DA  D018               	goto	l7454
 25672  0136DC  0E00               	movlw	0
 25673  0136DE  6E09               	movwf	(btemp+8)^0,c
 25674  0136E0  0E00               	movlw	0
 25675  0136E2  6E0A               	movwf	(btemp+9)^0,c
 25676  0136E4  0E00               	movlw	0
 25677  0136E6  6E0B               	movwf	(btemp+10)^0,c
 25678  0136E8  0E00               	movlw	0
 25679  0136EA  6E0C               	movwf	(btemp+11)^0,c
 25680                           
 25681                           ;stkvar	_b @ sp[(-4)+-4]
 25682  0136EC  0EF8               	movlw	-8
 25683  0136EE  0060  F027  FFE3   	movff	btemp+8,plusw1
 25684  0136F4  0EF9               	movlw	-7
 25685  0136F6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25686  0136FC  0EFA               	movlw	-6
 25687  0136FE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25688  013704  0EFB               	movlw	-5
 25689  013706  0060  F033  FFE3   	movff	btemp+11,plusw1
 25690  01370C                     l7454:
 25691                           
 25692                           ;stkvar	_b @ sp[(-4)+-4]
 25693  01370C  0EFA               	movlw	-6
 25694  01370E  8EE3               	bsf	plusw1,7,c
 25695                           
 25696                           ;stkvar	_b @ sp[(-4)+-4]
 25697  013710  0EFB               	movlw	251
 25698  013712  24E1               	addwf	fsr1l,w,c
 25699  013714  6ED9               	movwf	fsr2l,c
 25700  013716  0EFF               	movlw	255
 25701  013718  20E2               	addwfc	fsr1h,w,c
 25702  01371A  6EDA               	movwf	fsr2h,c
 25703  01371C  0E00               	movlw	0
 25704  01371E  6EDF               	movwf	indf2,c
 25705  013720  D018               	goto	l7460
 25706  013722                     l7458:
 25707  013722  0E00               	movlw	0
 25708  013724  6E09               	movwf	(btemp+8)^0,c
 25709  013726  0E00               	movlw	0
 25710  013728  6E0A               	movwf	(btemp+9)^0,c
 25711  01372A  0E00               	movlw	0
 25712  01372C  6E0B               	movwf	(btemp+10)^0,c
 25713  01372E  0E00               	movlw	0
 25714  013730  6E0C               	movwf	(btemp+11)^0,c
 25715                           
 25716                           ;stkvar	_b @ sp[(-4)+-4]
 25717  013732  0EF8               	movlw	-8
 25718  013734  0060  F027  FFE3   	movff	btemp+8,plusw1
 25719  01373A  0EF9               	movlw	-7
 25720  01373C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25721  013742  0EFA               	movlw	-6
 25722  013744  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25723  01374A  0EFB               	movlw	-5
 25724  01374C  0060  F033  FFE3   	movff	btemp+11,plusw1
 25725  013752                     l7460:
 25726                           
 25727                           ;stkvar	_a @ sp[(-4)+-8]
 25728  013752  0EF7               	movlw	247
 25729  013754  24E1               	addwf	fsr1l,w,c
 25730  013756  6ED9               	movwf	fsr2l,c
 25731  013758  0EFF               	movlw	255
 25732  01375A  20E2               	addwfc	fsr1h,w,c
 25733  01375C  6EDA               	movwf	fsr2h,c
 25734  01375E  50DF               	movf	indf2,w,c
 25735  013760  6E0C               	movwf	(btemp+11)^0,c
 25736  013762  0E80               	movlw	128
 25737  013764  160C               	andwf	(btemp+11)^0,f,c
 25738                           
 25739                           ;stkvar	_aexp @ sp[(-4)+2]
 25740  013766  0EFE               	movlw	-2
 25741  013768  0060  F033  FFE3   	movff	btemp+11,plusw1
 25742                           
 25743                           ;stkvar	_signs @ sp[(-4)+3]
 25744                           ;stkvar	_aexp @ sp[(-4)+2]
 25745  01376E  50E1               	movf	fsr1l,w,c
 25746  013770  0FFE               	addlw	-2
 25747  013772  6ED9               	movwf	fsr2l,c
 25748  013774  50E2               	movf	fsr1h,w,c
 25749  013776  6EDA               	movwf	fsr2h,c
 25750  013778  0EFF               	movlw	255
 25751  01377A  22DA               	addwfc	fsr2h,f,c
 25752  01377C  0EFF               	movlw	-1
 25753  01377E  50E3               	movf	plusw1,w,c
 25754  013780  18DE               	xorwf	postinc2,w,c
 25755  013782  B4D8               	btfsc	status,2,c
 25756  013784  D002               	goto	l7466
 25757                           
 25758                           ;stkvar	_signs @ sp[(-4)+3]
 25759  013786  0EFF               	movlw	-1
 25760  013788  8CE3               	bsf	plusw1,6,c
 25761  01378A                     l7466:
 25762                           
 25763                           ;stkvar	_a @ sp[(-4)+-8]
 25764  01378A  0EF7               	movlw	247
 25765  01378C  24E1               	addwf	fsr1l,w,c
 25766  01378E  6ED9               	movwf	fsr2l,c
 25767  013790  0EFF               	movlw	255
 25768  013792  20E2               	addwfc	fsr1h,w,c
 25769  013794  6EDA               	movwf	fsr2h,c
 25770  013796  50DF               	movf	indf2,w,c
 25771  013798  6E0C               	movwf	(btemp+11)^0,c
 25772  01379A  90D8               	bcf	status,0,c
 25773  01379C  340C               	rlcf	(btemp+11)^0,w,c
 25774  01379E  6E0B               	movwf	(btemp+10)^0,c
 25775                           
 25776                           ;stkvar	_aexp @ sp[(-4)+2]
 25777  0137A0  0EFE               	movlw	-2
 25778  0137A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25779                           
 25780                           ;stkvar	_a @ sp[(-4)+-8]
 25781  0137A8  0EF6               	movlw	246
 25782  0137AA  24E1               	addwf	fsr1l,w,c
 25783  0137AC  6ED9               	movwf	fsr2l,c
 25784  0137AE  0EFF               	movlw	255
 25785  0137B0  20E2               	addwfc	fsr1h,w,c
 25786  0137B2  6EDA               	movwf	fsr2h,c
 25787  0137B4  AEDF               	btfss	indf2,7,c
 25788  0137B6  D002               	goto	l7472
 25789                           
 25790                           ;stkvar	_aexp @ sp[(-4)+2]
 25791  0137B8  0EFE               	movlw	-2
 25792  0137BA  80E3               	bsf	plusw1,0,c
 25793  0137BC                     l7472:
 25794                           
 25795                           ;stkvar	_aexp @ sp[(-4)+2]
 25796  0137BC  0EFE               	movlw	-2
 25797  0137BE  50E3               	movf	plusw1,w,c
 25798  0137C0  B4D8               	btfsc	status,2,c
 25799  0137C2  D027               	goto	l7482
 25800                           
 25801                           ;stkvar	_aexp @ sp[(-4)+2]
 25802  0137C4  0EFE               	movlw	-2
 25803  0137C6  28E3               	incf	plusw1,w,c
 25804  0137C8  A4D8               	btfss	status,2,c
 25805  0137CA  D018               	goto	l7478
 25806  0137CC  0E00               	movlw	0
 25807  0137CE  6E09               	movwf	(btemp+8)^0,c
 25808  0137D0  0E00               	movlw	0
 25809  0137D2  6E0A               	movwf	(btemp+9)^0,c
 25810  0137D4  0E00               	movlw	0
 25811  0137D6  6E0B               	movwf	(btemp+10)^0,c
 25812  0137D8  0E00               	movlw	0
 25813  0137DA  6E0C               	movwf	(btemp+11)^0,c
 25814                           
 25815                           ;stkvar	_a @ sp[(-4)+-8]
 25816  0137DC  0EF4               	movlw	-12
 25817  0137DE  0060  F027  FFE3   	movff	btemp+8,plusw1
 25818  0137E4  0EF5               	movlw	-11
 25819  0137E6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25820  0137EC  0EF6               	movlw	-10
 25821  0137EE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25822  0137F4  0EF7               	movlw	-9
 25823  0137F6  0060  F033  FFE3   	movff	btemp+11,plusw1
 25824  0137FC                     l7478:
 25825                           
 25826                           ;stkvar	_a @ sp[(-4)+-8]
 25827  0137FC  0EF6               	movlw	-10
 25828  0137FE  8EE3               	bsf	plusw1,7,c
 25829                           
 25830                           ;stkvar	_a @ sp[(-4)+-8]
 25831  013800  0EF7               	movlw	247
 25832  013802  24E1               	addwf	fsr1l,w,c
 25833  013804  6ED9               	movwf	fsr2l,c
 25834  013806  0EFF               	movlw	255
 25835  013808  20E2               	addwfc	fsr1h,w,c
 25836  01380A  6EDA               	movwf	fsr2h,c
 25837  01380C  0E00               	movlw	0
 25838  01380E  6EDF               	movwf	indf2,c
 25839  013810  D018               	goto	l7484
 25840  013812                     l7482:
 25841  013812  0E00               	movlw	0
 25842  013814  6E09               	movwf	(btemp+8)^0,c
 25843  013816  0E00               	movlw	0
 25844  013818  6E0A               	movwf	(btemp+9)^0,c
 25845  01381A  0E00               	movlw	0
 25846  01381C  6E0B               	movwf	(btemp+10)^0,c
 25847  01381E  0E00               	movlw	0
 25848  013820  6E0C               	movwf	(btemp+11)^0,c
 25849                           
 25850                           ;stkvar	_a @ sp[(-4)+-8]
 25851  013822  0EF4               	movlw	-12
 25852  013824  0060  F027  FFE3   	movff	btemp+8,plusw1
 25853  01382A  0EF5               	movlw	-11
 25854  01382C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25855  013832  0EF6               	movlw	-10
 25856  013834  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25857  01383A  0EF7               	movlw	-9
 25858  01383C  0060  F033  FFE3   	movff	btemp+11,plusw1
 25859  013842                     l7484:
 25860                           
 25861                           ;stkvar	_bexp @ sp[(-4)+1]
 25862                           ;stkvar	_aexp @ sp[(-4)+2]
 25863  013842  50E1               	movf	fsr1l,w,c
 25864  013844  0FFE               	addlw	-2
 25865  013846  6ED9               	movwf	fsr2l,c
 25866  013848  50E2               	movf	fsr1h,w,c
 25867  01384A  6EDA               	movwf	fsr2h,c
 25868  01384C  0EFF               	movlw	255
 25869  01384E  22DA               	addwfc	fsr2h,f,c
 25870  013850  0EFD               	movlw	-3
 25871  013852  50E3               	movf	plusw1,w,c
 25872  013854  5CDE               	subwf	postinc2,w,c
 25873  013856  B0D8               	btfsc	status,0,c
 25874  013858  D0A4               	goto	l7520
 25875                           
 25876                           ;stkvar	_signs @ sp[(-4)+3]
 25877  01385A  0EFF               	movlw	-1
 25878  01385C  ACE3               	btfss	plusw1,6,c
 25879  01385E  D002               	goto	l7490
 25880                           
 25881                           ;stkvar	_signs @ sp[(-4)+3]
 25882  013860  0EFF               	movlw	-1
 25883  013862  7EE3               	btg	plusw1,7,c
 25884  013864                     l7490:
 25885                           
 25886                           ;stkvar	_bexp @ sp[(-4)+1]
 25887                           ;stkvar	_grs @ sp[(-4)+0]
 25888  013864  0EFD               	movlw	-3
 25889  013866  006F FF8C  F001    	movff	plusw1,btemp
 25890  01386C  0EFC               	movlw	-4
 25891  01386E  0060  F007  FFE3   	movff	btemp,plusw1
 25892                           
 25893                           ;stkvar	_aexp @ sp[(-4)+2]
 25894                           ;stkvar	_bexp @ sp[(-4)+1]
 25895  013874  0EFE               	movlw	-2
 25896  013876  006F FF8C  F001    	movff	plusw1,btemp
 25897  01387C  0EFD               	movlw	-3
 25898  01387E  0060  F007  FFE3   	movff	btemp,plusw1
 25899                           
 25900                           ;stkvar	_grs @ sp[(-4)+0]
 25901                           ;stkvar	_aexp @ sp[(-4)+2]
 25902  013884  0EFC               	movlw	-4
 25903  013886  006F FF8C  F001    	movff	plusw1,btemp
 25904  01388C  0EFE               	movlw	-2
 25905  01388E  0060  F007  FFE3   	movff	btemp,plusw1
 25906                           
 25907                           ;stkvar	_b @ sp[(-4)+-4]
 25908                           ;stkvar	_grs @ sp[(-4)+0]
 25909  013894  0EF8               	movlw	-8
 25910  013896  006F FF8C  F001    	movff	plusw1,btemp
 25911  01389C  0EFC               	movlw	-4
 25912  01389E  0060  F007  FFE3   	movff	btemp,plusw1
 25913                           
 25914                           ;stkvar	_a @ sp[(-4)+-8]
 25915                           ;stkvar	_b @ sp[(-4)+-4]
 25916  0138A4  0EF4               	movlw	-12
 25917  0138A6  006F FF8C  F001    	movff	plusw1,btemp
 25918  0138AC  0EF8               	movlw	-8
 25919  0138AE  0060  F007  FFE3   	movff	btemp,plusw1
 25920                           
 25921                           ;stkvar	_grs @ sp[(-4)+0]
 25922                           ;stkvar	_a @ sp[(-4)+-8]
 25923  0138B4  0EFC               	movlw	-4
 25924  0138B6  006F FF8C  F001    	movff	plusw1,btemp
 25925  0138BC  0EF4               	movlw	-12
 25926  0138BE  0060  F007  FFE3   	movff	btemp,plusw1
 25927                           
 25928                           ;stkvar	_b @ sp[(-4)+-4]
 25929  0138C4  0EF9               	movlw	249
 25930  0138C6  24E1               	addwf	fsr1l,w,c
 25931  0138C8  6ED9               	movwf	fsr2l,c
 25932  0138CA  0EFF               	movlw	255
 25933  0138CC  20E2               	addwfc	fsr1h,w,c
 25934  0138CE  6EDA               	movwf	fsr2h,c
 25935  0138D0  50DF               	movf	indf2,w,c
 25936  0138D2  6E0C               	movwf	(btemp+11)^0,c
 25937                           
 25938                           ;stkvar	_grs @ sp[(-4)+0]
 25939  0138D4  0EFC               	movlw	-4
 25940  0138D6  0060  F033  FFE3   	movff	btemp+11,plusw1
 25941                           
 25942                           ;stkvar	_a @ sp[(-4)+-8]
 25943  0138DC  0EF5               	movlw	245
 25944  0138DE  24E1               	addwf	fsr1l,w,c
 25945  0138E0  6ED9               	movwf	fsr2l,c
 25946  0138E2  0EFF               	movlw	255
 25947  0138E4  20E2               	addwfc	fsr1h,w,c
 25948  0138E6  6EDA               	movwf	fsr2h,c
 25949                           
 25950                           ;stkvar	_b @ sp[(-4)+-4]
 25951  0138E8  0EF9               	movlw	249
 25952  0138EA  24E1               	addwf	fsr1l,w,c
 25953  0138EC  6EE9               	movwf	fsr0l,c
 25954  0138EE  0EFF               	movlw	255
 25955  0138F0  20E2               	addwfc	fsr1h,w,c
 25956  0138F2  6EEA               	movwf	fsr0h,c
 25957  0138F4  006F FF7F FFEF     	movff	indf2,indf0
 25958                           
 25959                           ;stkvar	_grs @ sp[(-4)+0]
 25960                           ;stkvar	_a @ sp[(-4)+-8]
 25961  0138FA  0EF5               	movlw	245
 25962  0138FC  24E1               	addwf	fsr1l,w,c
 25963  0138FE  6ED9               	movwf	fsr2l,c
 25964  013900  0EFF               	movlw	255
 25965  013902  20E2               	addwfc	fsr1h,w,c
 25966  013904  6EDA               	movwf	fsr2h,c
 25967  013906  0EFC               	movlw	-4
 25968  013908  006F FF8F FFDF     	movff	plusw1,indf2
 25969                           
 25970                           ;stkvar	_b @ sp[(-4)+-4]
 25971  01390E  0EFA               	movlw	250
 25972  013910  24E1               	addwf	fsr1l,w,c
 25973  013912  6ED9               	movwf	fsr2l,c
 25974  013914  0EFF               	movlw	255
 25975  013916  20E2               	addwfc	fsr1h,w,c
 25976  013918  6EDA               	movwf	fsr2h,c
 25977  01391A  50DF               	movf	indf2,w,c
 25978  01391C  6E0C               	movwf	(btemp+11)^0,c
 25979                           
 25980                           ;stkvar	_grs @ sp[(-4)+0]
 25981  01391E  0EFC               	movlw	-4
 25982  013920  0060  F033  FFE3   	movff	btemp+11,plusw1
 25983                           
 25984                           ;stkvar	_a @ sp[(-4)+-8]
 25985  013926  0EF6               	movlw	246
 25986  013928  24E1               	addwf	fsr1l,w,c
 25987  01392A  6ED9               	movwf	fsr2l,c
 25988  01392C  0EFF               	movlw	255
 25989  01392E  20E2               	addwfc	fsr1h,w,c
 25990  013930  6EDA               	movwf	fsr2h,c
 25991                           
 25992                           ;stkvar	_b @ sp[(-4)+-4]
 25993  013932  0EFA               	movlw	250
 25994  013934  24E1               	addwf	fsr1l,w,c
 25995  013936  6EE9               	movwf	fsr0l,c
 25996  013938  0EFF               	movlw	255
 25997  01393A  20E2               	addwfc	fsr1h,w,c
 25998  01393C  6EEA               	movwf	fsr0h,c
 25999  01393E  006F FF7F FFEF     	movff	indf2,indf0
 26000                           
 26001                           ;stkvar	_grs @ sp[(-4)+0]
 26002                           ;stkvar	_a @ sp[(-4)+-8]
 26003  013944  0EF6               	movlw	246
 26004  013946  24E1               	addwf	fsr1l,w,c
 26005  013948  6ED9               	movwf	fsr2l,c
 26006  01394A  0EFF               	movlw	255
 26007  01394C  20E2               	addwfc	fsr1h,w,c
 26008  01394E  6EDA               	movwf	fsr2h,c
 26009  013950  0EFC               	movlw	-4
 26010  013952  006F FF8F FFDF     	movff	plusw1,indf2
 26011                           
 26012                           ;stkvar	_b @ sp[(-4)+-4]
 26013  013958  0EFB               	movlw	251
 26014  01395A  24E1               	addwf	fsr1l,w,c
 26015  01395C  6ED9               	movwf	fsr2l,c
 26016  01395E  0EFF               	movlw	255
 26017  013960  20E2               	addwfc	fsr1h,w,c
 26018  013962  6EDA               	movwf	fsr2h,c
 26019  013964  50DF               	movf	indf2,w,c
 26020  013966  6E0C               	movwf	(btemp+11)^0,c
 26021                           
 26022                           ;stkvar	_grs @ sp[(-4)+0]
 26023  013968  0EFC               	movlw	-4
 26024  01396A  0060  F033  FFE3   	movff	btemp+11,plusw1
 26025                           
 26026                           ;stkvar	_a @ sp[(-4)+-8]
 26027  013970  0EF7               	movlw	247
 26028  013972  24E1               	addwf	fsr1l,w,c
 26029  013974  6ED9               	movwf	fsr2l,c
 26030  013976  0EFF               	movlw	255
 26031  013978  20E2               	addwfc	fsr1h,w,c
 26032  01397A  6EDA               	movwf	fsr2h,c
 26033                           
 26034                           ;stkvar	_b @ sp[(-4)+-4]
 26035  01397C  0EFB               	movlw	251
 26036  01397E  24E1               	addwf	fsr1l,w,c
 26037  013980  6EE9               	movwf	fsr0l,c
 26038  013982  0EFF               	movlw	255
 26039  013984  20E2               	addwfc	fsr1h,w,c
 26040  013986  6EEA               	movwf	fsr0h,c
 26041  013988  006F FF7F FFEF     	movff	indf2,indf0
 26042                           
 26043                           ;stkvar	_grs @ sp[(-4)+0]
 26044                           ;stkvar	_a @ sp[(-4)+-8]
 26045  01398E  0EF7               	movlw	247
 26046  013990  24E1               	addwf	fsr1l,w,c
 26047  013992  6ED9               	movwf	fsr2l,c
 26048  013994  0EFF               	movlw	255
 26049  013996  20E2               	addwfc	fsr1h,w,c
 26050  013998  6EDA               	movwf	fsr2h,c
 26051  01399A  0EFC               	movlw	-4
 26052  01399C  006F FF8F FFDF     	movff	plusw1,indf2
 26053  0139A2                     l7520:
 26054                           
 26055                           ;stkvar	_grs @ sp[(-4)+0]
 26056  0139A2  0EFC               	movlw	-4
 26057  0139A4  6AE3               	clrf	plusw1,c
 26058                           
 26059                           ;stkvar	_aexp @ sp[(-4)+2]
 26060  0139A6  0EFE               	movlw	-2
 26061  0139A8  50E3               	movf	plusw1,w,c
 26062  0139AA  6E0B               	movwf	(btemp+10)^0,c
 26063  0139AC  6A0C               	clrf	(btemp+11)^0,c
 26064                           
 26065                           ;stkvar	_bexp @ sp[(-4)+1]
 26066  0139AE  0EFD               	movlw	-3
 26067  0139B0  50E3               	movf	plusw1,w,c
 26068  0139B2  5E0B               	subwf	(btemp+10)^0,f,c
 26069  0139B4  0E00               	movlw	0
 26070  0139B6  5A0C               	subwfb	(btemp+11)^0,f,c
 26071  0139B8  BE0C               	btfsc	(btemp+11)^0,7,c
 26072  0139BA  D062               	goto	l7544
 26073  0139BC  500C               	movf	(btemp+11)^0,w,c
 26074  0139BE  E104               	bnz	u5310
 26075  0139C0  0E1A               	movlw	26
 26076  0139C2  5C0B               	subwf	(btemp+10)^0,w,c
 26077  0139C4  A0D8               	btfss	status,0,c
 26078  0139C6  D05C               	goto	l7544
 26079  0139C8                     u5310:
 26080                           
 26081                           ;stkvar	_b @ sp[(-4)+-4]
 26082  0139C8  0EF8               	movlw	-8
 26083  0139CA  50E3               	movf	plusw1,w,c
 26084  0139CC  E10A               	bnz	u5321
 26085  0139CE  0EF9               	movlw	-7
 26086  0139D0  50E3               	movf	plusw1,w,c
 26087  0139D2  E107               	bnz	u5321
 26088  0139D4  0EFA               	movlw	-6
 26089  0139D6  50E3               	movf	plusw1,w,c
 26090  0139D8  E104               	bnz	u5321
 26091  0139DA  0EFB               	movlw	-5
 26092  0139DC  50E3               	movf	plusw1,w,c
 26093  0139DE  B4D8               	btfsc	status,2,c
 26094  0139E0  D003               	goto	u5320
 26095  0139E2                     u5321:
 26096  0139E2  6A0C               	clrf	(btemp+11)^0,c
 26097  0139E4  2A0C               	incf	(btemp+11)^0,f,c
 26098  0139E6  D001               	goto	u5338
 26099  0139E8                     u5320:
 26100  0139E8  6A0C               	clrf	(btemp+11)^0,c
 26101  0139EA                     u5338:
 26102                           
 26103                           ;stkvar	_grs @ sp[(-4)+0]
 26104  0139EA  0EFC               	movlw	-4
 26105  0139EC  0060  F033  FFE3   	movff	btemp+11,plusw1
 26106                           
 26107                           ;stkvar	_b @ sp[(-4)+-4]
 26108  0139F2  0EF8               	movlw	-8
 26109  0139F4  6AE3               	clrf	plusw1,c
 26110  0139F6  0EF9               	movlw	-7
 26111  0139F8  6AE3               	clrf	plusw1,c
 26112  0139FA  0EFA               	movlw	-6
 26113  0139FC  6AE3               	clrf	plusw1,c
 26114  0139FE  0EFB               	movlw	-5
 26115  013A00  6AE3               	clrf	plusw1,c
 26116                           
 26117                           ;stkvar	_aexp @ sp[(-4)+2]
 26118                           ;stkvar	_bexp @ sp[(-4)+1]
 26119  013A02  0EFE               	movlw	-2
 26120  013A04  006F FF8C  F001    	movff	plusw1,btemp
 26121  013A0A  0EFD               	movlw	-3
 26122  013A0C  0060  F007  FFE3   	movff	btemp,plusw1
 26123  013A12  D042               	goto	u5370
 26124  013A14                     l7530:
 26125                           
 26126                           ;stkvar	_grs @ sp[(-4)+0]
 26127  013A14  0EFC               	movlw	-4
 26128  013A16  A0E3               	btfss	plusw1,0,c
 26129  013A18  D00D               	goto	l7534
 26130                           
 26131                           ;stkvar	_grs @ sp[(-4)+0]
 26132  013A1A  0EFC               	movlw	-4
 26133  013A1C  006F FF8C  F00C    	movff	plusw1,btemp+11
 26134  013A22  90D8               	bcf	status,0,c
 26135  013A24  320C               	rrcf	(btemp+11)^0,f,c
 26136  013A26  0E01               	movlw	1
 26137  013A28  120C               	iorwf	(btemp+11)^0,f,c
 26138                           
 26139                           ;stkvar	_grs @ sp[(-4)+0]
 26140  013A2A  0EFC               	movlw	-4
 26141  013A2C  0060  F033  FFE3   	movff	btemp+11,plusw1
 26142  013A32  D009               	goto	l7536
 26143  013A34                     l7534:
 26144                           
 26145                           ;stkvar	_grs @ sp[(-4)+0]
 26146  013A34  50E1               	movf	fsr1l,w,c
 26147  013A36  0FFC               	addlw	-4
 26148  013A38  6ED9               	movwf	fsr2l,c
 26149  013A3A  50E2               	movf	fsr1h,w,c
 26150  013A3C  6EDA               	movwf	fsr2h,c
 26151  013A3E  0EFF               	movlw	255
 26152  013A40  22DA               	addwfc	fsr2h,f,c
 26153  013A42  90D8               	bcf	status,0,c
 26154  013A44  32DF               	rrcf	indf2,f,c
 26155  013A46                     l7536:
 26156                           
 26157                           ;stkvar	_b @ sp[(-4)+-4]
 26158  013A46  0EF8               	movlw	-8
 26159  013A48  A0E3               	btfss	plusw1,0,c
 26160  013A4A  D002               	goto	l7540
 26161                           
 26162                           ;stkvar	_grs @ sp[(-4)+0]
 26163  013A4C  0EFC               	movlw	-4
 26164  013A4E  8EE3               	bsf	plusw1,7,c
 26165  013A50                     l7540:
 26166  013A50  0E01               	movlw	1
 26167  013A52  6E0C               	movwf	(btemp+11)^0,c
 26168                           
 26169                           ;stkvar	_b @ sp[(-4)+-4]
 26170  013A54  50E1               	movf	fsr1l,w,c
 26171  013A56  0FF8               	addlw	-8
 26172  013A58  6ED9               	movwf	fsr2l,c
 26173  013A5A  50E2               	movf	fsr1h,w,c
 26174  013A5C  6EDA               	movwf	fsr2h,c
 26175  013A5E  0EFF               	movlw	255
 26176  013A60  22DA               	addwfc	fsr2h,f,c
 26177  013A62  280C               	incf	(btemp+11)^0,w,c
 26178  013A64  52DE               	movf	postinc2,f,c
 26179  013A66  D008               	goto	u5360
 26180  013A68                     u5365:
 26181  013A68  52DE               	movf	postinc2,f,c
 26182  013A6A  90D8               	bcf	status,0,c
 26183  013A6C  BEDC               	btfsc	preinc2,7,c
 26184  013A6E  80D8               	bsf	status,0,c
 26185  013A70  32DD               	rrcf	postdec2,f,c
 26186  013A72  32DD               	rrcf	postdec2,f,c
 26187  013A74  32DD               	rrcf	postdec2,f,c
 26188  013A76  32DE               	rrcf	postinc2,f,c
 26189  013A78                     u5360:
 26190  013A78  2EE8               	decfsz	wreg,f,c
 26191  013A7A  D7F6               	goto	u5365
 26192                           
 26193                           ;stkvar	_bexp @ sp[(-4)+1]
 26194  013A7C  0EFD               	movlw	-3
 26195  013A7E  2AE3               	incf	plusw1,f,c
 26196  013A80                     l7544:
 26197                           
 26198                           ;stkvar	_aexp @ sp[(-4)+2]
 26199                           ;stkvar	_bexp @ sp[(-4)+1]
 26200  013A80  50E1               	movf	fsr1l,w,c
 26201  013A82  0FFD               	addlw	-3
 26202  013A84  6ED9               	movwf	fsr2l,c
 26203  013A86  50E2               	movf	fsr1h,w,c
 26204  013A88  6EDA               	movwf	fsr2h,c
 26205  013A8A  0EFF               	movlw	255
 26206  013A8C  22DA               	addwfc	fsr2h,f,c
 26207  013A8E  0EFE               	movlw	-2
 26208  013A90  50E3               	movf	plusw1,w,c
 26209  013A92  5CDE               	subwf	postinc2,w,c
 26210  013A94  A0D8               	btfss	status,0,c
 26211  013A96  D7BE               	goto	l7530
 26212  013A98                     u5370:
 26213                           
 26214                           ;stkvar	_signs @ sp[(-4)+3]
 26215  013A98  0EFF               	movlw	-1
 26216  013A9A  BCE3               	btfsc	plusw1,6,c
 26217  013A9C  D066               	goto	l7572
 26218                           
 26219                           ;stkvar	_bexp @ sp[(-4)+1]
 26220  013A9E  0EFD               	movlw	-3
 26221  013AA0  50E3               	movf	plusw1,w,c
 26222  013AA2  B4D8               	btfsc	status,2,c
 26223  013AA4  D0F2               	goto	u5470
 26224                           
 26225                           ;stkvar	_a @ sp[(-4)+-8]
 26226                           ;stkvar	_b @ sp[(-4)+-4]
 26227  013AA6  0EF8               	movlw	-8
 26228  013AA8  50E3               	movf	plusw1,w,c
 26229  013AAA  6E01               	movwf	btemp^0,c
 26230  013AAC  0EF4               	movlw	-12
 26231  013AAE  50E3               	movf	plusw1,w,c
 26232  013AB0  2601               	addwf	btemp^0,f,c
 26233  013AB2  0EF8               	movlw	-8
 26234  013AB4  0060  F007  FFE3   	movff	btemp,plusw1
 26235  013ABA  0EF9               	movlw	-7
 26236  013ABC  50E3               	movf	plusw1,w,c
 26237  013ABE  6E01               	movwf	btemp^0,c
 26238  013AC0  0EF5               	movlw	-11
 26239  013AC2  50E3               	movf	plusw1,w,c
 26240  013AC4  2201               	addwfc	btemp^0,f,c
 26241  013AC6  0EF9               	movlw	-7
 26242  013AC8  0060  F007  FFE3   	movff	btemp,plusw1
 26243  013ACE  0EFA               	movlw	-6
 26244  013AD0  50E3               	movf	plusw1,w,c
 26245  013AD2  6E01               	movwf	btemp^0,c
 26246  013AD4  0EF6               	movlw	-10
 26247  013AD6  50E3               	movf	plusw1,w,c
 26248  013AD8  2201               	addwfc	btemp^0,f,c
 26249  013ADA  0EFA               	movlw	-6
 26250  013ADC  0060  F007  FFE3   	movff	btemp,plusw1
 26251  013AE2  0EFB               	movlw	-5
 26252  013AE4  50E3               	movf	plusw1,w,c
 26253  013AE6  6E01               	movwf	btemp^0,c
 26254  013AE8  0EF7               	movlw	-9
 26255  013AEA  50E3               	movf	plusw1,w,c
 26256  013AEC  2201               	addwfc	btemp^0,f,c
 26257  013AEE  0EFB               	movlw	-5
 26258  013AF0  0060  F007  FFE3   	movff	btemp,plusw1
 26259                           
 26260                           ;stkvar	_b @ sp[(-4)+-4]
 26261  013AF6  0EFB               	movlw	-5
 26262  013AF8  A0E3               	btfss	plusw1,0,c
 26263  013AFA  D101               	goto	u5510
 26264                           
 26265                           ;stkvar	_grs @ sp[(-4)+0]
 26266  013AFC  0EFC               	movlw	-4
 26267  013AFE  A0E3               	btfss	plusw1,0,c
 26268  013B00  D00D               	goto	l7562
 26269                           
 26270                           ;stkvar	_grs @ sp[(-4)+0]
 26271  013B02  0EFC               	movlw	-4
 26272  013B04  006F FF8C  F00C    	movff	plusw1,btemp+11
 26273  013B0A  90D8               	bcf	status,0,c
 26274  013B0C  320C               	rrcf	(btemp+11)^0,f,c
 26275  013B0E  0E01               	movlw	1
 26276  013B10  120C               	iorwf	(btemp+11)^0,f,c
 26277                           
 26278                           ;stkvar	_grs @ sp[(-4)+0]
 26279  013B12  0EFC               	movlw	-4
 26280  013B14  0060  F033  FFE3   	movff	btemp+11,plusw1
 26281  013B1A  D009               	goto	l7564
 26282  013B1C                     l7562:
 26283                           
 26284                           ;stkvar	_grs @ sp[(-4)+0]
 26285  013B1C  50E1               	movf	fsr1l,w,c
 26286  013B1E  0FFC               	addlw	-4
 26287  013B20  6ED9               	movwf	fsr2l,c
 26288  013B22  50E2               	movf	fsr1h,w,c
 26289  013B24  6EDA               	movwf	fsr2h,c
 26290  013B26  0EFF               	movlw	255
 26291  013B28  22DA               	addwfc	fsr2h,f,c
 26292  013B2A  90D8               	bcf	status,0,c
 26293  013B2C  32DF               	rrcf	indf2,f,c
 26294  013B2E                     l7564:
 26295                           
 26296                           ;stkvar	_b @ sp[(-4)+-4]
 26297  013B2E  0EF8               	movlw	-8
 26298  013B30  A0E3               	btfss	plusw1,0,c
 26299  013B32  D002               	goto	l7568
 26300                           
 26301                           ;stkvar	_grs @ sp[(-4)+0]
 26302  013B34  0EFC               	movlw	-4
 26303  013B36  8EE3               	bsf	plusw1,7,c
 26304  013B38                     l7568:
 26305  013B38  0E01               	movlw	1
 26306  013B3A  6E0C               	movwf	(btemp+11)^0,c
 26307                           
 26308                           ;stkvar	_b @ sp[(-4)+-4]
 26309  013B3C  50E1               	movf	fsr1l,w,c
 26310  013B3E  0FF8               	addlw	-8
 26311  013B40  6ED9               	movwf	fsr2l,c
 26312  013B42  50E2               	movf	fsr1h,w,c
 26313  013B44  6EDA               	movwf	fsr2h,c
 26314  013B46  0EFF               	movlw	255
 26315  013B48  22DA               	addwfc	fsr2h,f,c
 26316  013B4A  280C               	incf	(btemp+11)^0,w,c
 26317  013B4C  52DE               	movf	postinc2,f,c
 26318  013B4E  D008               	goto	u5430
 26319  013B50                     u5435:
 26320  013B50  52DE               	movf	postinc2,f,c
 26321  013B52  90D8               	bcf	status,0,c
 26322  013B54  BEDC               	btfsc	preinc2,7,c
 26323  013B56  80D8               	bsf	status,0,c
 26324  013B58  32DD               	rrcf	postdec2,f,c
 26325  013B5A  32DD               	rrcf	postdec2,f,c
 26326  013B5C  32DD               	rrcf	postdec2,f,c
 26327  013B5E  32DE               	rrcf	postinc2,f,c
 26328  013B60                     u5430:
 26329  013B60  2EE8               	decfsz	wreg,f,c
 26330  013B62  D7F6               	goto	u5435
 26331                           
 26332                           ;stkvar	_bexp @ sp[(-4)+1]
 26333  013B64  0EFD               	movlw	-3
 26334  013B66  2AE3               	incf	plusw1,f,c
 26335  013B68  D0CA               	goto	u5510
 26336  013B6A                     l7572:
 26337                           
 26338                           ;stkvar	_a @ sp[(-4)+-8]
 26339                           ;stkvar	_b @ sp[(-4)+-4]
 26340  013B6A  50E1               	movf	fsr1l,w,c
 26341  013B6C  0FF8               	addlw	-8
 26342  013B6E  6ED9               	movwf	fsr2l,c
 26343  013B70  50E2               	movf	fsr1h,w,c
 26344  013B72  6EDA               	movwf	fsr2h,c
 26345  013B74  0EFF               	movlw	255
 26346  013B76  22DA               	addwfc	fsr2h,f,c
 26347  013B78  0EF4               	movlw	-12
 26348  013B7A  50E3               	movf	plusw1,w,c
 26349  013B7C  5CDE               	subwf	postinc2,w,c
 26350  013B7E  0EF5               	movlw	-11
 26351  013B80  50E3               	movf	plusw1,w,c
 26352  013B82  58DE               	subwfb	postinc2,w,c
 26353  013B84  0EF6               	movlw	-10
 26354  013B86  50E3               	movf	plusw1,w,c
 26355  013B88  58DE               	subwfb	postinc2,w,c
 26356  013B8A  50DE               	movf	postinc2,w,c
 26357  013B8C  0A80               	xorlw	128
 26358  013B8E  6E01               	movwf	btemp^0,c
 26359  013B90  0EF7               	movlw	-9
 26360  013B92  50E3               	movf	plusw1,w,c
 26361  013B94  0A80               	xorlw	128
 26362  013B96  5801               	subwfb	btemp^0,w,c
 26363  013B98  B0D8               	btfsc	status,0,c
 26364  013B9A  D053               	goto	l7584
 26365                           
 26366                           ;stkvar	_b @ sp[(-4)+-4]
 26367                           ;stkvar	_a @ sp[(-4)+-8]
 26368  013B9C  0EF4               	movlw	-12
 26369  013B9E  006F FF8C  F009    	movff	plusw1,btemp+8
 26370  013BA4  0EF5               	movlw	-11
 26371  013BA6  006F FF8C  F00A    	movff	plusw1,btemp+9
 26372  013BAC  0EF6               	movlw	-10
 26373  013BAE  006F FF8C  F00B    	movff	plusw1,btemp+10
 26374  013BB4  0EF7               	movlw	-9
 26375  013BB6  006F FF8C  F00C    	movff	plusw1,btemp+11
 26376  013BBC  0EF8               	movlw	-8
 26377  013BBE  50E3               	movf	plusw1,w,c
 26378  013BC0  5E09               	subwf	(btemp+8)^0,f,c
 26379  013BC2  0EF9               	movlw	-7
 26380  013BC4  50E3               	movf	plusw1,w,c
 26381  013BC6  5A0A               	subwfb	(btemp+9)^0,f,c
 26382  013BC8  0EFA               	movlw	-6
 26383  013BCA  50E3               	movf	plusw1,w,c
 26384  013BCC  5A0B               	subwfb	(btemp+10)^0,f,c
 26385  013BCE  0EFB               	movlw	-5
 26386  013BD0  50E3               	movf	plusw1,w,c
 26387  013BD2  5A0C               	subwfb	(btemp+11)^0,f,c
 26388  013BD4  0EFF               	movlw	255
 26389  013BD6  2409               	addwf	(btemp+8)^0,w,c
 26390  013BD8  6E05               	movwf	(btemp+4)^0,c
 26391  013BDA  0EFF               	movlw	255
 26392  013BDC  200A               	addwfc	(btemp+9)^0,w,c
 26393  013BDE  6E06               	movwf	(btemp+5)^0,c
 26394  013BE0  0EFF               	movlw	255
 26395  013BE2  200B               	addwfc	(btemp+10)^0,w,c
 26396  013BE4  6E07               	movwf	(btemp+6)^0,c
 26397  013BE6  0EFF               	movlw	255
 26398  013BE8  200C               	addwfc	(btemp+11)^0,w,c
 26399  013BEA  6E08               	movwf	(btemp+7)^0,c
 26400                           
 26401                           ;stkvar	_b @ sp[(-4)+-4]
 26402  013BEC  0EF8               	movlw	-8
 26403  013BEE  0060  F017  FFE3   	movff	btemp+4,plusw1
 26404  013BF4  0EF9               	movlw	-7
 26405  013BF6  0060  F01B  FFE3   	movff	btemp+5,plusw1
 26406  013BFC  0EFA               	movlw	-6
 26407  013BFE  0060  F01F  FFE3   	movff	btemp+6,plusw1
 26408  013C04  0EFB               	movlw	-5
 26409  013C06  0060  F023  FFE3   	movff	btemp+7,plusw1
 26410                           
 26411                           ;stkvar	_signs @ sp[(-4)+3]
 26412  013C0C  0EFF               	movlw	-1
 26413  013C0E  7EE3               	btg	plusw1,7,c
 26414                           
 26415                           ;stkvar	_grs @ sp[(-4)+0]
 26416  013C10  0EFC               	movlw	-4
 26417  013C12  50E3               	movf	plusw1,w,c
 26418  013C14  0800               	sublw	0
 26419  013C16  6E0C               	movwf	(btemp+11)^0,c
 26420                           
 26421                           ;stkvar	_grs @ sp[(-4)+0]
 26422  013C18  0EFC               	movlw	-4
 26423  013C1A  0060  F033  FFE3   	movff	btemp+11,plusw1
 26424                           
 26425                           ;stkvar	_grs @ sp[(-4)+0]
 26426  013C20  0EFC               	movlw	-4
 26427  013C22  50E3               	movf	plusw1,w,c
 26428  013C24  A4D8               	btfss	status,2,c
 26429  013C26  D020               	goto	l7586
 26430                           
 26431                           ;stkvar	_b @ sp[(-4)+-4]
 26432  013C28  50E1               	movf	fsr1l,w,c
 26433  013C2A  0FF8               	addlw	-8
 26434  013C2C  6ED9               	movwf	fsr2l,c
 26435  013C2E  50E2               	movf	fsr1h,w,c
 26436  013C30  6EDA               	movwf	fsr2h,c
 26437  013C32  0EFF               	movlw	255
 26438  013C34  22DA               	addwfc	fsr2h,f,c
 26439  013C36  2ADE               	incf	postinc2,f,c
 26440  013C38  0E00               	movlw	0
 26441  013C3A  22DE               	addwfc	postinc2,f,c
 26442  013C3C  22DE               	addwfc	postinc2,f,c
 26443  013C3E  22DE               	addwfc	postinc2,f,c
 26444  013C40  D013               	goto	l7586
 26445  013C42                     l7584:
 26446                           
 26447                           ;stkvar	_a @ sp[(-4)+-8]
 26448                           ;stkvar	_b @ sp[(-4)+-4]
 26449  013C42  50E1               	movf	fsr1l,w,c
 26450  013C44  0FF8               	addlw	-8
 26451  013C46  6ED9               	movwf	fsr2l,c
 26452  013C48  50E2               	movf	fsr1h,w,c
 26453  013C4A  6EDA               	movwf	fsr2h,c
 26454  013C4C  0EFF               	movlw	255
 26455  013C4E  22DA               	addwfc	fsr2h,f,c
 26456  013C50  0EF4               	movlw	-12
 26457  013C52  50E3               	movf	plusw1,w,c
 26458  013C54  5EDE               	subwf	postinc2,f,c
 26459  013C56  0EF5               	movlw	-11
 26460  013C58  50E3               	movf	plusw1,w,c
 26461  013C5A  5ADE               	subwfb	postinc2,f,c
 26462  013C5C  0EF6               	movlw	-10
 26463  013C5E  50E3               	movf	plusw1,w,c
 26464  013C60  5ADE               	subwfb	postinc2,f,c
 26465  013C62  0EF7               	movlw	-9
 26466  013C64  50E3               	movf	plusw1,w,c
 26467  013C66  5ADE               	subwfb	postinc2,f,c
 26468  013C68                     l7586:
 26469                           
 26470                           ;stkvar	_b @ sp[(-4)+-4]
 26471  013C68  0EF8               	movlw	-8
 26472  013C6A  50E3               	movf	plusw1,w,c
 26473  013C6C  E145               	bnz	l7608
 26474  013C6E  0EF9               	movlw	-7
 26475  013C70  50E3               	movf	plusw1,w,c
 26476  013C72  E142               	bnz	l7608
 26477  013C74  0EFA               	movlw	-6
 26478  013C76  50E3               	movf	plusw1,w,c
 26479  013C78  E13F               	bnz	l7608
 26480  013C7A  0EFB               	movlw	-5
 26481  013C7C  50E3               	movf	plusw1,w,c
 26482  013C7E  A4D8               	btfss	status,2,c
 26483  013C80  D03B               	goto	l7608
 26484                           
 26485                           ;stkvar	_grs @ sp[(-4)+0]
 26486  013C82  0EFC               	movlw	-4
 26487  013C84  50E3               	movf	plusw1,w,c
 26488  013C86  A4D8               	btfss	status,2,c
 26489  013C88  D037               	goto	l7608
 26490  013C8A                     u5470:
 26491  013C8A  0E00               	movlw	0
 26492  013C8C  6E01               	movwf	btemp^0,c
 26493  013C8E  0E00               	movlw	0
 26494  013C90  6E02               	movwf	(btemp+1)^0,c
 26495  013C92  0E00               	movlw	0
 26496  013C94  6E03               	movwf	(btemp+2)^0,c
 26497  013C96  0E00               	movlw	0
 26498  013C98  6E04               	movwf	(btemp+3)^0,c
 26499  013C9A  D0C6               	goto	l2898
 26500  013C9C                     l7594:
 26501                           
 26502                           ;stkvar	_b @ sp[(-4)+-4]
 26503  013C9C  90D8               	bcf	status,0,c
 26504  013C9E  0EF8               	movlw	-8
 26505  013CA0  36E3               	rlcf	plusw1,f,c
 26506  013CA2  0EF9               	movlw	-7
 26507  013CA4  36E3               	rlcf	plusw1,f,c
 26508  013CA6  0EFA               	movlw	-6
 26509  013CA8  36E3               	rlcf	plusw1,f,c
 26510  013CAA  0EFB               	movlw	-5
 26511  013CAC  36E3               	rlcf	plusw1,f,c
 26512                           
 26513                           ;stkvar	_grs @ sp[(-4)+0]
 26514  013CAE  0EFC               	movlw	-4
 26515  013CB0  AEE3               	btfss	plusw1,7,c
 26516  013CB2  D002               	goto	l2910
 26517                           
 26518                           ;stkvar	_b @ sp[(-4)+-4]
 26519  013CB4  0EF8               	movlw	-8
 26520  013CB6  80E3               	bsf	plusw1,0,c
 26521  013CB8                     l2910:
 26522                           
 26523                           ;stkvar	_grs @ sp[(-4)+0]
 26524  013CB8  0EFC               	movlw	-4
 26525  013CBA  A0E3               	btfss	plusw1,0,c
 26526  013CBC  D00E               	goto	l7602
 26527                           
 26528                           ;stkvar	_grs @ sp[(-4)+0]
 26529  013CBE  0EFC               	movlw	-4
 26530  013CC0  006F FF8C  F00C    	movff	plusw1,btemp+11
 26531  013CC6  90D8               	bcf	status,0,c
 26532  013CC8  340C               	rlcf	(btemp+11)^0,w,c
 26533  013CCA  6E0B               	movwf	(btemp+10)^0,c
 26534  013CCC  0E01               	movlw	1
 26535  013CCE  120B               	iorwf	(btemp+10)^0,f,c
 26536                           
 26537                           ;stkvar	_grs @ sp[(-4)+0]
 26538  013CD0  0EFC               	movlw	-4
 26539  013CD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26540  013CD8  D009               	goto	l7604
 26541  013CDA                     l7602:
 26542                           
 26543                           ;stkvar	_grs @ sp[(-4)+0]
 26544  013CDA  50E1               	movf	fsr1l,w,c
 26545  013CDC  0FFC               	addlw	-4
 26546  013CDE  6ED9               	movwf	fsr2l,c
 26547  013CE0  50E2               	movf	fsr1h,w,c
 26548  013CE2  6EDA               	movwf	fsr2h,c
 26549  013CE4  0EFF               	movlw	255
 26550  013CE6  22DA               	addwfc	fsr2h,f,c
 26551  013CE8  90D8               	bcf	status,0,c
 26552  013CEA  36DF               	rlcf	indf2,f,c
 26553  013CEC                     l7604:
 26554                           
 26555                           ;stkvar	_bexp @ sp[(-4)+1]
 26556  013CEC  0EFD               	movlw	-3
 26557  013CEE  50E3               	movf	plusw1,w,c
 26558  013CF0  B4D8               	btfsc	status,2,c
 26559  013CF2  D002               	goto	l7608
 26560                           
 26561                           ;stkvar	_bexp @ sp[(-4)+1]
 26562  013CF4  0EFD               	movlw	-3
 26563  013CF6  06E3               	decf	plusw1,f,c
 26564  013CF8                     l7608:
 26565                           
 26566                           ;stkvar	_b @ sp[(-4)+-4]
 26567  013CF8  0EFA               	movlw	-6
 26568  013CFA  AEE3               	btfss	plusw1,7,c
 26569  013CFC  D7CF               	goto	l7594
 26570  013CFE                     u5510:
 26571                           
 26572                           ;stkvar	_aexp @ sp[(-4)+2]
 26573  013CFE  0EFE               	movlw	-2
 26574  013D00  6AE3               	clrf	plusw1,c
 26575                           
 26576                           ;stkvar	_grs @ sp[(-4)+0]
 26577  013D02  0EFC               	movlw	-4
 26578  013D04  AEE3               	btfss	plusw1,7,c
 26579  013D06  D00F               	goto	l7622
 26580                           
 26581                           ;stkvar	_grs @ sp[(-4)+0]
 26582  013D08  0EFC               	movlw	-4
 26583  013D0A  006F FF8C  F00C    	movff	plusw1,btemp+11
 26584  013D10  0E7F               	movlw	127
 26585  013D12  160C               	andwf	(btemp+11)^0,f,c
 26586  013D14  B4D8               	btfsc	status,2,c
 26587  013D16  D004               	goto	l7618
 26588  013D18                     u5530:
 26589                           
 26590                           ;stkvar	_aexp @ sp[(-4)+2]
 26591  013D18  0EFE               	movlw	-2
 26592  013D1A  6AE3               	clrf	plusw1,c
 26593  013D1C  2AE3               	incf	plusw1,f,c
 26594  013D1E  D003               	goto	l7622
 26595  013D20                     l7618:
 26596                           
 26597                           ;stkvar	_b @ sp[(-4)+-4]
 26598  013D20  0EF8               	movlw	-8
 26599  013D22  B0E3               	btfsc	plusw1,0,c
 26600  013D24  D7F9               	goto	u5530
 26601  013D26                     l7622:
 26602                           
 26603                           ;stkvar	_aexp @ sp[(-4)+2]
 26604  013D26  0EFE               	movlw	-2
 26605  013D28  50E3               	movf	plusw1,w,c
 26606  013D2A  B4D8               	btfsc	status,2,c
 26607  013D2C  D02B               	goto	l7634
 26608                           
 26609                           ;stkvar	_b @ sp[(-4)+-4]
 26610  013D2E  50E1               	movf	fsr1l,w,c
 26611  013D30  0FF8               	addlw	-8
 26612  013D32  6ED9               	movwf	fsr2l,c
 26613  013D34  50E2               	movf	fsr1h,w,c
 26614  013D36  6EDA               	movwf	fsr2h,c
 26615  013D38  0EFF               	movlw	255
 26616  013D3A  22DA               	addwfc	fsr2h,f,c
 26617  013D3C  2ADE               	incf	postinc2,f,c
 26618  013D3E  0E00               	movlw	0
 26619  013D40  22DE               	addwfc	postinc2,f,c
 26620  013D42  22DE               	addwfc	postinc2,f,c
 26621  013D44  22DE               	addwfc	postinc2,f,c
 26622                           
 26623                           ;stkvar	_b @ sp[(-4)+-4]
 26624  013D46  0EFB               	movlw	-5
 26625  013D48  A0E3               	btfss	plusw1,0,c
 26626  013D4A  D01C               	goto	l7634
 26627  013D4C  0E01               	movlw	1
 26628  013D4E  6E0C               	movwf	(btemp+11)^0,c
 26629                           
 26630                           ;stkvar	_b @ sp[(-4)+-4]
 26631  013D50  50E1               	movf	fsr1l,w,c
 26632  013D52  0FF8               	addlw	-8
 26633  013D54  6ED9               	movwf	fsr2l,c
 26634  013D56  50E2               	movf	fsr1h,w,c
 26635  013D58  6EDA               	movwf	fsr2h,c
 26636  013D5A  0EFF               	movlw	255
 26637  013D5C  22DA               	addwfc	fsr2h,f,c
 26638  013D5E  280C               	incf	(btemp+11)^0,w,c
 26639  013D60  52DE               	movf	postinc2,f,c
 26640  013D62  D008               	goto	u5570
 26641  013D64                     u5575:
 26642  013D64  52DE               	movf	postinc2,f,c
 26643  013D66  90D8               	bcf	status,0,c
 26644  013D68  BEDC               	btfsc	preinc2,7,c
 26645  013D6A  80D8               	bsf	status,0,c
 26646  013D6C  32DD               	rrcf	postdec2,f,c
 26647  013D6E  32DD               	rrcf	postdec2,f,c
 26648  013D70  32DD               	rrcf	postdec2,f,c
 26649  013D72  32DE               	rrcf	postinc2,f,c
 26650  013D74                     u5570:
 26651  013D74  2EE8               	decfsz	wreg,f,c
 26652  013D76  D7F6               	goto	u5575
 26653                           
 26654                           ;stkvar	_bexp @ sp[(-4)+1]
 26655  013D78  0EFD               	movlw	-3
 26656  013D7A  28E3               	incf	plusw1,w,c
 26657  013D7C  B4D8               	btfsc	status,2,c
 26658  013D7E  D002               	goto	l7634
 26659                           
 26660                           ;stkvar	_bexp @ sp[(-4)+1]
 26661  013D80  0EFD               	movlw	-3
 26662  013D82  2AE3               	incf	plusw1,f,c
 26663  013D84                     l7634:
 26664                           
 26665                           ;stkvar	_bexp @ sp[(-4)+1]
 26666  013D84  0EFD               	movlw	-3
 26667  013D86  28E3               	incf	plusw1,w,c
 26668  013D88  B4D8               	btfsc	status,2,c
 26669  013D8A  D004               	goto	u5600
 26670                           
 26671                           ;stkvar	_bexp @ sp[(-4)+1]
 26672  013D8C  0EFD               	movlw	-3
 26673  013D8E  50E3               	movf	plusw1,w,c
 26674  013D90  A4D8               	btfss	status,2,c
 26675  013D92  D00E               	goto	l7644
 26676  013D94                     u5600:
 26677                           
 26678                           ;stkvar	_b @ sp[(-4)+-4]
 26679  013D94  0EF8               	movlw	-8
 26680  013D96  6AE3               	clrf	plusw1,c
 26681  013D98  0EF9               	movlw	-7
 26682  013D9A  6AE3               	clrf	plusw1,c
 26683  013D9C  0EFA               	movlw	-6
 26684  013D9E  6AE3               	clrf	plusw1,c
 26685  013DA0  0EFB               	movlw	-5
 26686  013DA2  6AE3               	clrf	plusw1,c
 26687                           
 26688                           ;stkvar	_bexp @ sp[(-4)+1]
 26689  013DA4  0EFD               	movlw	-3
 26690  013DA6  50E3               	movf	plusw1,w,c
 26691  013DA8  A4D8               	btfss	status,2,c
 26692  013DAA  D002               	goto	l7644
 26693                           
 26694                           ;stkvar	_signs @ sp[(-4)+3]
 26695  013DAC  0EFF               	movlw	-1
 26696  013DAE  6AE3               	clrf	plusw1,c
 26697  013DB0                     l7644:
 26698                           
 26699                           ;stkvar	_bexp @ sp[(-4)+1]
 26700  013DB0  0EFD               	movlw	-3
 26701  013DB2  A0E3               	btfss	plusw1,0,c
 26702  013DB4  D009               	goto	l7648
 26703                           
 26704                           ;stkvar	_b @ sp[(-4)+-4]
 26705  013DB6  0EFA               	movlw	250
 26706  013DB8  24E1               	addwf	fsr1l,w,c
 26707  013DBA  6ED9               	movwf	fsr2l,c
 26708  013DBC  0EFF               	movlw	255
 26709  013DBE  20E2               	addwfc	fsr1h,w,c
 26710  013DC0  6EDA               	movwf	fsr2h,c
 26711  013DC2  0E00               	movlw	0
 26712  013DC4  8EDB               	bsf	plusw2,7,c
 26713  013DC6  D008               	goto	l7650
 26714  013DC8                     l7648:
 26715                           
 26716                           ;stkvar	_b @ sp[(-4)+-4]
 26717  013DC8  0EFA               	movlw	250
 26718  013DCA  24E1               	addwf	fsr1l,w,c
 26719  013DCC  6ED9               	movwf	fsr2l,c
 26720  013DCE  0EFF               	movlw	255
 26721  013DD0  20E2               	addwfc	fsr1h,w,c
 26722  013DD2  6EDA               	movwf	fsr2h,c
 26723  013DD4  0E7F               	movlw	127
 26724  013DD6  16DF               	andwf	indf2,f,c
 26725  013DD8                     l7650:
 26726                           
 26727                           ;stkvar	_b @ sp[(-4)+-4]
 26728  013DD8  0EFB               	movlw	251
 26729  013DDA  24E1               	addwf	fsr1l,w,c
 26730  013DDC  6ED9               	movwf	fsr2l,c
 26731  013DDE  0EFF               	movlw	255
 26732  013DE0  20E2               	addwfc	fsr1h,w,c
 26733  013DE2  6EDA               	movwf	fsr2h,c
 26734                           
 26735                           ;stkvar	_bexp @ sp[(-4)+1]
 26736  013DE4  0EFD               	movlw	-3
 26737  013DE6  006F FF8C  F00C    	movff	plusw1,btemp+11
 26738  013DEC  90D8               	bcf	status,0,c
 26739  013DEE  300C               	rrcf	(btemp+11)^0,w,c
 26740  013DF0  6EDF               	movwf	indf2,c
 26741                           
 26742                           ;stkvar	_signs @ sp[(-4)+3]
 26743  013DF2  0EFF               	movlw	-1
 26744  013DF4  AEE3               	btfss	plusw1,7,c
 26745  013DF6  D008               	goto	l7656
 26746                           
 26747                           ;stkvar	_b @ sp[(-4)+-4]
 26748  013DF8  0EFB               	movlw	251
 26749  013DFA  24E1               	addwf	fsr1l,w,c
 26750  013DFC  6ED9               	movwf	fsr2l,c
 26751  013DFE  0EFF               	movlw	255
 26752  013E00  20E2               	addwfc	fsr1h,w,c
 26753  013E02  6EDA               	movwf	fsr2h,c
 26754  013E04  0E00               	movlw	0
 26755  013E06  8EDB               	bsf	plusw2,7,c
 26756  013E08                     l7656:
 26757                           
 26758                           ;stkvar	_b @ sp[(-4)+-4]
 26759  013E08  0EF8               	movlw	-8
 26760  013E0A  006F FF8C  F001    	movff	plusw1,btemp
 26761  013E10  0EF9               	movlw	-7
 26762  013E12  006F FF8C  F002    	movff	plusw1,btemp+1
 26763  013E18  0EFA               	movlw	-6
 26764  013E1A  006F FF8C  F003    	movff	plusw1,btemp+2
 26765  013E20  0EFB               	movlw	-5
 26766  013E22  006F FF8C  F004    	movff	plusw1,btemp+3
 26767  013E28                     l2898:
 26768                           
 26769                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 26770  013E28  0EF4               	movlw	244
 26771  013E2A  26E1               	addwf	fsr1l,f,c
 26772  013E2C  0EFF               	movlw	255
 26773  013E2E  22E2               	addwfc	fsr1h,f,c
 26774  013E30  0012               	return		;funcret
 26775  013E32                     __end_of___fladd:
 26776                           	opt callstack 0
 26777                           
 26778 ;; *************** function ___flmul *****************
 26779 ;; Defined at:
 26780 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 26781 ;; Parameters:    Size  Location     Type
 26782 ;;  b               4  [STACK] unsigned char 
 26783 ;;  a               4  [STACK] unsigned char 
 26784 ;; Auto vars:     Size  Location     Type
 26785 ;;  prod            4  [STACK] struct .
 26786 ;;  grs             4  [STACK] unsigned long 
 26787 ;;  temp            2  [STACK] struct .
 26788 ;;  bexp            1  [STACK] unsigned char 
 26789 ;;  aexp            1  [STACK] unsigned char 
 26790 ;;  sign            1  [STACK] unsigned char 
 26791 ;; Return value:  Size  Location     Type
 26792 ;;                  4  [STACK] unsigned char 
 26793 ;; Registers used:
 26794 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 26795 ;; Tracked objects:
 26796 ;;		On entry : 0/1
 26797 ;;		On exit  : 0/0
 26798 ;;		Unchanged: 0/0
 26799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26804 ;;Total ram usage:        0 bytes
 26805 ;; Hardware stack levels used:    1
 26806 ;; Hardware stack levels required when called:   15
 26807 ;; This function calls:
 26808 ;;		Nothing
 26809 ;; This function is called by:
 26810 ;;		_conv_raw_result
 26811 ;;		_lp_filter
 26812 ;;		_calc_model_data
 26813 ;;		_calc_bsoc
 26814 ;;		_init_bsoc
 26815 ;;		_efgtoa
 26816 ;; This function uses a reentrant model
 26817 ;;
 26818                           
 26819                           	psect	text106
 26820  012E4C                     __ptext106:
 26821                           	opt callstack 0
 26822  012E4C                     ___flmul:
 26823                           	opt callstack 0
 26824                           
 26825                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 26826  012E4C  0E0D               	movlw	13
 26827  012E4E  26E1               	addwf	fsr1l,f,c
 26828  012E50  0E00               	movlw	0
 26829  012E52  22E2               	addwfc	fsr1h,f,c
 26830                           
 26831                           ;stkvar	_b @ sp[(-13)+-4]
 26832                           
 26833                           ;incstack = 0
 26834 ;; hardware stack exceeded
 26835  012E54  0EF2               	movlw	242
 26836  012E56  24E1               	addwf	fsr1l,w,c
 26837  012E58  6ED9               	movwf	fsr2l,c
 26838  012E5A  0EFF               	movlw	255
 26839  012E5C  20E2               	addwfc	fsr1h,w,c
 26840  012E5E  6EDA               	movwf	fsr2h,c
 26841  012E60  50DF               	movf	indf2,w,c
 26842  012E62  6E0C               	movwf	(btemp+11)^0,c
 26843  012E64  0E80               	movlw	128
 26844  012E66  160C               	andwf	(btemp+11)^0,f,c
 26845                           
 26846                           ;stkvar	_sign @ sp[(-13)+12]
 26847  012E68  0EFF               	movlw	-1
 26848  012E6A  0060  F033  FFE3   	movff	btemp+11,plusw1
 26849                           
 26850                           ;stkvar	_b @ sp[(-13)+-4]
 26851  012E70  0EF2               	movlw	242
 26852  012E72  24E1               	addwf	fsr1l,w,c
 26853  012E74  6ED9               	movwf	fsr2l,c
 26854  012E76  0EFF               	movlw	255
 26855  012E78  20E2               	addwfc	fsr1h,w,c
 26856  012E7A  6EDA               	movwf	fsr2h,c
 26857  012E7C  50DF               	movf	indf2,w,c
 26858  012E7E  6E0C               	movwf	(btemp+11)^0,c
 26859  012E80  90D8               	bcf	status,0,c
 26860  012E82  340C               	rlcf	(btemp+11)^0,w,c
 26861  012E84  6E0B               	movwf	(btemp+10)^0,c
 26862                           
 26863                           ;stkvar	_bexp @ sp[(-13)+10]
 26864  012E86  0EFD               	movlw	-3
 26865  012E88  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26866                           
 26867                           ;stkvar	_b @ sp[(-13)+-4]
 26868  012E8E  0EF1               	movlw	241
 26869  012E90  24E1               	addwf	fsr1l,w,c
 26870  012E92  6ED9               	movwf	fsr2l,c
 26871  012E94  0EFF               	movlw	255
 26872  012E96  20E2               	addwfc	fsr1h,w,c
 26873  012E98  6EDA               	movwf	fsr2h,c
 26874  012E9A  AEDF               	btfss	indf2,7,c
 26875  012E9C  D002               	goto	l8040
 26876                           
 26877                           ;stkvar	_bexp @ sp[(-13)+10]
 26878  012E9E  0EFD               	movlw	-3
 26879  012EA0  80E3               	bsf	plusw1,0,c
 26880  012EA2                     l8040:
 26881                           
 26882                           ;stkvar	_bexp @ sp[(-13)+10]
 26883  012EA2  0EFD               	movlw	-3
 26884  012EA4  50E3               	movf	plusw1,w,c
 26885  012EA6  B4D8               	btfsc	status,2,c
 26886  012EA8  D01F               	goto	l8048
 26887                           
 26888                           ;stkvar	_bexp @ sp[(-13)+10]
 26889  012EAA  0EFD               	movlw	-3
 26890  012EAC  28E3               	incf	plusw1,w,c
 26891  012EAE  A4D8               	btfss	status,2,c
 26892  012EB0  D018               	goto	l8046
 26893  012EB2  0E00               	movlw	0
 26894  012EB4  6E09               	movwf	(btemp+8)^0,c
 26895  012EB6  0E00               	movlw	0
 26896  012EB8  6E0A               	movwf	(btemp+9)^0,c
 26897  012EBA  0E00               	movlw	0
 26898  012EBC  6E0B               	movwf	(btemp+10)^0,c
 26899  012EBE  0E00               	movlw	0
 26900  012EC0  6E0C               	movwf	(btemp+11)^0,c
 26901                           
 26902                           ;stkvar	_b @ sp[(-13)+-4]
 26903  012EC2  0EEF               	movlw	-17
 26904  012EC4  0060  F027  FFE3   	movff	btemp+8,plusw1
 26905  012ECA  0EF0               	movlw	-16
 26906  012ECC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26907  012ED2  0EF1               	movlw	-15
 26908  012ED4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26909  012EDA  0EF2               	movlw	-14
 26910  012EDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 26911  012EE2                     l8046:
 26912                           
 26913                           ;stkvar	_b @ sp[(-13)+-4]
 26914  012EE2  0EF1               	movlw	-15
 26915  012EE4  8EE3               	bsf	plusw1,7,c
 26916  012EE6  D018               	goto	l8050
 26917  012EE8                     l8048:
 26918  012EE8  0E00               	movlw	0
 26919  012EEA  6E09               	movwf	(btemp+8)^0,c
 26920  012EEC  0E00               	movlw	0
 26921  012EEE  6E0A               	movwf	(btemp+9)^0,c
 26922  012EF0  0E00               	movlw	0
 26923  012EF2  6E0B               	movwf	(btemp+10)^0,c
 26924  012EF4  0E00               	movlw	0
 26925  012EF6  6E0C               	movwf	(btemp+11)^0,c
 26926                           
 26927                           ;stkvar	_b @ sp[(-13)+-4]
 26928  012EF8  0EEF               	movlw	-17
 26929  012EFA  0060  F027  FFE3   	movff	btemp+8,plusw1
 26930  012F00  0EF0               	movlw	-16
 26931  012F02  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26932  012F08  0EF1               	movlw	-15
 26933  012F0A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26934  012F10  0EF2               	movlw	-14
 26935  012F12  0060  F033  FFE3   	movff	btemp+11,plusw1
 26936  012F18                     l8050:
 26937                           
 26938                           ;stkvar	_a @ sp[(-13)+-8]
 26939  012F18  0EEE               	movlw	238
 26940  012F1A  24E1               	addwf	fsr1l,w,c
 26941  012F1C  6ED9               	movwf	fsr2l,c
 26942  012F1E  0EFF               	movlw	255
 26943  012F20  20E2               	addwfc	fsr1h,w,c
 26944  012F22  6EDA               	movwf	fsr2h,c
 26945  012F24  50DF               	movf	indf2,w,c
 26946  012F26  6E0C               	movwf	(btemp+11)^0,c
 26947  012F28  0E80               	movlw	128
 26948  012F2A  160C               	andwf	(btemp+11)^0,f,c
 26949                           
 26950                           ;stkvar	_sign @ sp[(-13)+12]
 26951  012F2C  50E1               	movf	fsr1l,w,c
 26952  012F2E  0FFF               	addlw	-1
 26953  012F30  6ED9               	movwf	fsr2l,c
 26954  012F32  50E2               	movf	fsr1h,w,c
 26955  012F34  6EDA               	movwf	fsr2h,c
 26956  012F36  0EFF               	movlw	255
 26957  012F38  22DA               	addwfc	fsr2h,f,c
 26958  012F3A  500C               	movf	(btemp+11)^0,w,c
 26959  012F3C  1ADF               	xorwf	indf2,f,c
 26960                           
 26961                           ;stkvar	_a @ sp[(-13)+-8]
 26962  012F3E  0EEE               	movlw	238
 26963  012F40  24E1               	addwf	fsr1l,w,c
 26964  012F42  6ED9               	movwf	fsr2l,c
 26965  012F44  0EFF               	movlw	255
 26966  012F46  20E2               	addwfc	fsr1h,w,c
 26967  012F48  6EDA               	movwf	fsr2h,c
 26968  012F4A  50DF               	movf	indf2,w,c
 26969  012F4C  6E0C               	movwf	(btemp+11)^0,c
 26970  012F4E  90D8               	bcf	status,0,c
 26971  012F50  340C               	rlcf	(btemp+11)^0,w,c
 26972  012F52  6E0B               	movwf	(btemp+10)^0,c
 26973                           
 26974                           ;stkvar	_aexp @ sp[(-13)+11]
 26975  012F54  0EFE               	movlw	-2
 26976  012F56  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26977                           
 26978                           ;stkvar	_a @ sp[(-13)+-8]
 26979  012F5C  0EED               	movlw	237
 26980  012F5E  24E1               	addwf	fsr1l,w,c
 26981  012F60  6ED9               	movwf	fsr2l,c
 26982  012F62  0EFF               	movlw	255
 26983  012F64  20E2               	addwfc	fsr1h,w,c
 26984  012F66  6EDA               	movwf	fsr2h,c
 26985  012F68  AEDF               	btfss	indf2,7,c
 26986  012F6A  D002               	goto	l8058
 26987                           
 26988                           ;stkvar	_aexp @ sp[(-13)+11]
 26989  012F6C  0EFE               	movlw	-2
 26990  012F6E  80E3               	bsf	plusw1,0,c
 26991  012F70                     l8058:
 26992                           
 26993                           ;stkvar	_aexp @ sp[(-13)+11]
 26994  012F70  0EFE               	movlw	-2
 26995  012F72  50E3               	movf	plusw1,w,c
 26996  012F74  B4D8               	btfsc	status,2,c
 26997  012F76  D01F               	goto	l8066
 26998                           
 26999                           ;stkvar	_aexp @ sp[(-13)+11]
 27000  012F78  0EFE               	movlw	-2
 27001  012F7A  28E3               	incf	plusw1,w,c
 27002  012F7C  A4D8               	btfss	status,2,c
 27003  012F7E  D018               	goto	l8064
 27004  012F80  0E00               	movlw	0
 27005  012F82  6E09               	movwf	(btemp+8)^0,c
 27006  012F84  0E00               	movlw	0
 27007  012F86  6E0A               	movwf	(btemp+9)^0,c
 27008  012F88  0E00               	movlw	0
 27009  012F8A  6E0B               	movwf	(btemp+10)^0,c
 27010  012F8C  0E00               	movlw	0
 27011  012F8E  6E0C               	movwf	(btemp+11)^0,c
 27012                           
 27013                           ;stkvar	_a @ sp[(-13)+-8]
 27014  012F90  0EEB               	movlw	-21
 27015  012F92  0060  F027  FFE3   	movff	btemp+8,plusw1
 27016  012F98  0EEC               	movlw	-20
 27017  012F9A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27018  012FA0  0EED               	movlw	-19
 27019  012FA2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27020  012FA8  0EEE               	movlw	-18
 27021  012FAA  0060  F033  FFE3   	movff	btemp+11,plusw1
 27022  012FB0                     l8064:
 27023                           
 27024                           ;stkvar	_a @ sp[(-13)+-8]
 27025  012FB0  0EED               	movlw	-19
 27026  012FB2  8EE3               	bsf	plusw1,7,c
 27027  012FB4  D018               	goto	l8068
 27028  012FB6                     l8066:
 27029  012FB6  0E00               	movlw	0
 27030  012FB8  6E09               	movwf	(btemp+8)^0,c
 27031  012FBA  0E00               	movlw	0
 27032  012FBC  6E0A               	movwf	(btemp+9)^0,c
 27033  012FBE  0E00               	movlw	0
 27034  012FC0  6E0B               	movwf	(btemp+10)^0,c
 27035  012FC2  0E00               	movlw	0
 27036  012FC4  6E0C               	movwf	(btemp+11)^0,c
 27037                           
 27038                           ;stkvar	_a @ sp[(-13)+-8]
 27039  012FC6  0EEB               	movlw	-21
 27040  012FC8  0060  F027  FFE3   	movff	btemp+8,plusw1
 27041  012FCE  0EEC               	movlw	-20
 27042  012FD0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27043  012FD6  0EED               	movlw	-19
 27044  012FD8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27045  012FDE  0EEE               	movlw	-18
 27046  012FE0  0060  F033  FFE3   	movff	btemp+11,plusw1
 27047  012FE6                     l8068:
 27048                           
 27049                           ;stkvar	_aexp @ sp[(-13)+11]
 27050  012FE6  0EFE               	movlw	-2
 27051  012FE8  50E3               	movf	plusw1,w,c
 27052  012FEA  B4D8               	btfsc	status,2,c
 27053  012FEC  D004               	goto	u6540
 27054                           
 27055                           ;stkvar	_bexp @ sp[(-13)+10]
 27056  012FEE  0EFD               	movlw	-3
 27057  012FF0  50E3               	movf	plusw1,w,c
 27058  012FF2  A4D8               	btfss	status,2,c
 27059  012FF4  D009               	goto	l8076
 27060  012FF6                     u6540:
 27061  012FF6  0E00               	movlw	0
 27062  012FF8  6E01               	movwf	btemp^0,c
 27063  012FFA  0E00               	movlw	0
 27064  012FFC  6E02               	movwf	(btemp+1)^0,c
 27065  012FFE  0E00               	movlw	0
 27066  013000  6E03               	movwf	(btemp+2)^0,c
 27067  013002  0E00               	movlw	0
 27068  013004  6E04               	movwf	(btemp+3)^0,c
 27069  013006  D332               	goto	l2979
 27070  013008                     l8076:
 27071                           
 27072                           ;stkvar	_b @ sp[(-13)+-4]
 27073  013008  0EEF               	movlw	-17
 27074  01300A  006F FF8C  F00C    	movff	plusw1,btemp+11
 27075                           
 27076                           ;stkvar	_a @ sp[(-13)+-8]
 27077  013010  0EED               	movlw	237
 27078  013012  24E1               	addwf	fsr1l,w,c
 27079  013014  6ED9               	movwf	fsr2l,c
 27080  013016  0EFF               	movlw	255
 27081  013018  20E2               	addwfc	fsr1h,w,c
 27082  01301A  6EDA               	movwf	fsr2h,c
 27083  01301C  50DF               	movf	indf2,w,c
 27084  01301E  020C               	mulwf	(btemp+11)^0,c
 27085                           
 27086                           ;stkvar	_temp @ sp[(-13)+8]
 27087  013020  0EFB               	movlw	-5
 27088  013022  006F FFCF FFE3     	movff	prodl,plusw1
 27089  013028  0EFC               	movlw	-4
 27090  01302A  006F FFD3 FFE3     	movff	prodh,plusw1
 27091                           
 27092                           ;stkvar	_temp @ sp[(-13)+8]
 27093  013030  0EFB               	movlw	-5
 27094  013032  006F FF8C  F00C    	movff	plusw1,btemp+11
 27095  013038  0060  F030  F005   	movff	btemp+11,btemp+4
 27096  01303E  6A06               	clrf	(btemp+5)^0,c
 27097  013040  6A07               	clrf	(btemp+6)^0,c
 27098  013042  6A08               	clrf	(btemp+7)^0,c
 27099                           
 27100                           ;stkvar	_grs @ sp[(-13)+4]
 27101  013044  0EF7               	movlw	-9
 27102  013046  0060  F017  FFE3   	movff	btemp+4,plusw1
 27103  01304C  0EF8               	movlw	-8
 27104  01304E  0060  F01B  FFE3   	movff	btemp+5,plusw1
 27105  013054  0EF9               	movlw	-7
 27106  013056  0060  F01F  FFE3   	movff	btemp+6,plusw1
 27107  01305C  0EFA               	movlw	-6
 27108  01305E  0060  F023  FFE3   	movff	btemp+7,plusw1
 27109                           
 27110                           ;stkvar	_temp @ sp[(-13)+8]
 27111  013064  0EFC               	movlw	252
 27112  013066  24E1               	addwf	fsr1l,w,c
 27113  013068  6ED9               	movwf	fsr2l,c
 27114  01306A  0EFF               	movlw	255
 27115  01306C  20E2               	addwfc	fsr1h,w,c
 27116  01306E  6EDA               	movwf	fsr2h,c
 27117  013070  50DF               	movf	indf2,w,c
 27118  013072  6E0C               	movwf	(btemp+11)^0,c
 27119  013074  0060  F030  F005   	movff	btemp+11,btemp+4
 27120  01307A  6A06               	clrf	(btemp+5)^0,c
 27121  01307C  6A07               	clrf	(btemp+6)^0,c
 27122  01307E  6A08               	clrf	(btemp+7)^0,c
 27123                           
 27124                           ;stkvar	_prod @ sp[(-13)+0]
 27125  013080  0EF3               	movlw	-13
 27126  013082  0060  F017  FFE3   	movff	btemp+4,plusw1
 27127  013088  0EF4               	movlw	-12
 27128  01308A  0060  F01B  FFE3   	movff	btemp+5,plusw1
 27129  013090  0EF5               	movlw	-11
 27130  013092  0060  F01F  FFE3   	movff	btemp+6,plusw1
 27131  013098  0EF6               	movlw	-10
 27132  01309A  0060  F023  FFE3   	movff	btemp+7,plusw1
 27133                           
 27134                           ;stkvar	_b @ sp[(-13)+-4]
 27135  0130A0  0EF0               	movlw	240
 27136  0130A2  24E1               	addwf	fsr1l,w,c
 27137  0130A4  6ED9               	movwf	fsr2l,c
 27138  0130A6  0EFF               	movlw	255
 27139  0130A8  20E2               	addwfc	fsr1h,w,c
 27140  0130AA  6EDA               	movwf	fsr2h,c
 27141  0130AC  50DF               	movf	indf2,w,c
 27142  0130AE  6E0C               	movwf	(btemp+11)^0,c
 27143                           
 27144                           ;stkvar	_a @ sp[(-13)+-8]
 27145  0130B0  0EEC               	movlw	236
 27146  0130B2  24E1               	addwf	fsr1l,w,c
 27147  0130B4  6ED9               	movwf	fsr2l,c
 27148  0130B6  0EFF               	movlw	255
 27149  0130B8  20E2               	addwfc	fsr1h,w,c
 27150  0130BA  6EDA               	movwf	fsr2h,c
 27151  0130BC  50DF               	movf	indf2,w,c
 27152  0130BE  020C               	mulwf	(btemp+11)^0,c
 27153                           
 27154                           ;stkvar	_temp @ sp[(-13)+8]
 27155  0130C0  0EFB               	movlw	-5
 27156  0130C2  006F FFCF FFE3     	movff	prodl,plusw1
 27157  0130C8  0EFC               	movlw	-4
 27158  0130CA  006F FFD3 FFE3     	movff	prodh,plusw1
 27159                           
 27160                           ;stkvar	_grs @ sp[(-13)+4]
 27161  0130D0  50E1               	movf	fsr1l,w,c
 27162  0130D2  0FF7               	addlw	-9
 27163  0130D4  6ED9               	movwf	fsr2l,c
 27164  0130D6  50E2               	movf	fsr1h,w,c
 27165  0130D8  6EDA               	movwf	fsr2h,c
 27166  0130DA  0EFF               	movlw	255
 27167  0130DC  22DA               	addwfc	fsr2h,f,c
 27168                           
 27169                           ;stkvar	_temp @ sp[(-13)+8]
 27170  0130DE  0EFB               	movlw	-5
 27171  0130E0  50E3               	movf	plusw1,w,c
 27172  0130E2  26DE               	addwf	postinc2,f,c
 27173  0130E4  0E00               	movlw	0
 27174  0130E6  22DE               	addwfc	postinc2,f,c
 27175  0130E8  22DE               	addwfc	postinc2,f,c
 27176  0130EA  22DE               	addwfc	postinc2,f,c
 27177                           
 27178                           ;stkvar	_prod @ sp[(-13)+0]
 27179  0130EC  50E1               	movf	fsr1l,w,c
 27180  0130EE  0FF3               	addlw	-13
 27181  0130F0  6ED9               	movwf	fsr2l,c
 27182  0130F2  50E2               	movf	fsr1h,w,c
 27183  0130F4  6EDA               	movwf	fsr2h,c
 27184  0130F6  0EFF               	movlw	255
 27185  0130F8  22DA               	addwfc	fsr2h,f,c
 27186                           
 27187                           ;stkvar	_temp @ sp[(-13)+8]
 27188  0130FA  0EFC               	movlw	252
 27189  0130FC  24E1               	addwf	fsr1l,w,c
 27190  0130FE  6EE9               	movwf	fsr0l,c
 27191  013100  0EFF               	movlw	255
 27192  013102  20E2               	addwfc	fsr1h,w,c
 27193  013104  6EEA               	movwf	fsr0h,c
 27194  013106  50EF               	movf	indf0,w,c
 27195  013108  26DE               	addwf	postinc2,f,c
 27196  01310A  0E00               	movlw	0
 27197  01310C  22DE               	addwfc	postinc2,f,c
 27198  01310E  22DE               	addwfc	postinc2,f,c
 27199  013110  22DE               	addwfc	postinc2,f,c
 27200                           
 27201                           ;stkvar	_b @ sp[(-13)+-4]
 27202  013112  0EF1               	movlw	241
 27203  013114  24E1               	addwf	fsr1l,w,c
 27204  013116  6ED9               	movwf	fsr2l,c
 27205  013118  0EFF               	movlw	255
 27206  01311A  20E2               	addwfc	fsr1h,w,c
 27207  01311C  6EDA               	movwf	fsr2h,c
 27208  01311E  50DF               	movf	indf2,w,c
 27209  013120  6E0C               	movwf	(btemp+11)^0,c
 27210                           
 27211                           ;stkvar	_a @ sp[(-13)+-8]
 27212  013122  0EEB               	movlw	-21
 27213  013124  50E3               	movf	plusw1,w,c
 27214  013126  020C               	mulwf	(btemp+11)^0,c
 27215                           
 27216                           ;stkvar	_temp @ sp[(-13)+8]
 27217  013128  0EFB               	movlw	-5
 27218  01312A  006F FFCF FFE3     	movff	prodl,plusw1
 27219  013130  0EFC               	movlw	-4
 27220  013132  006F FFD3 FFE3     	movff	prodh,plusw1
 27221                           
 27222                           ;stkvar	_grs @ sp[(-13)+4]
 27223  013138  50E1               	movf	fsr1l,w,c
 27224  01313A  0FF7               	addlw	-9
 27225  01313C  6ED9               	movwf	fsr2l,c
 27226  01313E  50E2               	movf	fsr1h,w,c
 27227  013140  6EDA               	movwf	fsr2h,c
 27228  013142  0EFF               	movlw	255
 27229  013144  22DA               	addwfc	fsr2h,f,c
 27230                           
 27231                           ;stkvar	_temp @ sp[(-13)+8]
 27232  013146  0EFB               	movlw	-5
 27233  013148  50E3               	movf	plusw1,w,c
 27234  01314A  26DE               	addwf	postinc2,f,c
 27235  01314C  0E00               	movlw	0
 27236  01314E  22DE               	addwfc	postinc2,f,c
 27237  013150  22DE               	addwfc	postinc2,f,c
 27238  013152  22DE               	addwfc	postinc2,f,c
 27239                           
 27240                           ;stkvar	_prod @ sp[(-13)+0]
 27241  013154  50E1               	movf	fsr1l,w,c
 27242  013156  0FF3               	addlw	-13
 27243  013158  6ED9               	movwf	fsr2l,c
 27244  01315A  50E2               	movf	fsr1h,w,c
 27245  01315C  6EDA               	movwf	fsr2h,c
 27246  01315E  0EFF               	movlw	255
 27247  013160  22DA               	addwfc	fsr2h,f,c
 27248                           
 27249                           ;stkvar	_temp @ sp[(-13)+8]
 27250  013162  0EFC               	movlw	252
 27251  013164  24E1               	addwf	fsr1l,w,c
 27252  013166  6EE9               	movwf	fsr0l,c
 27253  013168  0EFF               	movlw	255
 27254  01316A  20E2               	addwfc	fsr1h,w,c
 27255  01316C  6EEA               	movwf	fsr0h,c
 27256  01316E  50EF               	movf	indf0,w,c
 27257  013170  26DE               	addwf	postinc2,f,c
 27258  013172  0E00               	movlw	0
 27259  013174  22DE               	addwfc	postinc2,f,c
 27260  013176  22DE               	addwfc	postinc2,f,c
 27261  013178  22DE               	addwfc	postinc2,f,c
 27262                           
 27263                           ;stkvar	_grs @ sp[(-13)+4]
 27264  01317A  50E1               	movf	fsr1l,w,c
 27265  01317C  0FF7               	addlw	-9
 27266  01317E  6ED9               	movwf	fsr2l,c
 27267  013180  50E2               	movf	fsr1h,w,c
 27268  013182  6EDA               	movwf	fsr2h,c
 27269  013184  0EFF               	movlw	255
 27270  013186  22DA               	addwfc	fsr2h,f,c
 27271  013188  0E08               	movlw	8
 27272  01318A                     u6555:
 27273  01318A  90D8               	bcf	status,0,c
 27274  01318C  36DE               	rlcf	postinc2,f,c
 27275  01318E  36DE               	rlcf	postinc2,f,c
 27276  013190  36DE               	rlcf	postinc2,f,c
 27277  013192  36DD               	rlcf	postdec2,f,c
 27278  013194  52DD               	movf	postdec2,f,c
 27279  013196  52DD               	movf	postdec2,f,c
 27280  013198  2EE8               	decfsz	wreg,f,c
 27281  01319A  D7F7               	goto	u6555
 27282                           
 27283                           ;stkvar	_b @ sp[(-13)+-4]
 27284  01319C  0EF0               	movlw	240
 27285  01319E  24E1               	addwf	fsr1l,w,c
 27286  0131A0  6ED9               	movwf	fsr2l,c
 27287  0131A2  0EFF               	movlw	255
 27288  0131A4  20E2               	addwfc	fsr1h,w,c
 27289  0131A6  6EDA               	movwf	fsr2h,c
 27290  0131A8  50DF               	movf	indf2,w,c
 27291  0131AA  6E0C               	movwf	(btemp+11)^0,c
 27292                           
 27293                           ;stkvar	_a @ sp[(-13)+-8]
 27294  0131AC  0EEB               	movlw	-21
 27295  0131AE  50E3               	movf	plusw1,w,c
 27296  0131B0  020C               	mulwf	(btemp+11)^0,c
 27297                           
 27298                           ;stkvar	_temp @ sp[(-13)+8]
 27299  0131B2  0EFB               	movlw	-5
 27300  0131B4  006F FFCF FFE3     	movff	prodl,plusw1
 27301  0131BA  0EFC               	movlw	-4
 27302  0131BC  006F FFD3 FFE3     	movff	prodh,plusw1
 27303                           
 27304                           ;stkvar	_temp @ sp[(-13)+8]
 27305  0131C2  0EFB               	movlw	-5
 27306  0131C4  006F FF8C  F00B    	movff	plusw1,btemp+10
 27307  0131CA  0EFC               	movlw	-4
 27308  0131CC  006F FF8C  F00C    	movff	plusw1,btemp+11
 27309                           
 27310                           ;stkvar	_grs @ sp[(-13)+4]
 27311  0131D2  50E1               	movf	fsr1l,w,c
 27312  0131D4  0FF7               	addlw	-9
 27313  0131D6  6ED9               	movwf	fsr2l,c
 27314  0131D8  50E2               	movf	fsr1h,w,c
 27315  0131DA  6EDA               	movwf	fsr2h,c
 27316  0131DC  0EFF               	movlw	255
 27317  0131DE  22DA               	addwfc	fsr2h,f,c
 27318  0131E0  500B               	movf	(btemp+10)^0,w,c
 27319  0131E2  26DE               	addwf	postinc2,f,c
 27320  0131E4  500C               	movf	(btemp+11)^0,w,c
 27321  0131E6  22DE               	addwfc	postinc2,f,c
 27322  0131E8  0E00               	movlw	0
 27323  0131EA  22DE               	addwfc	postinc2,f,c
 27324  0131EC  22DE               	addwfc	postinc2,f,c
 27325                           
 27326                           ;stkvar	_b @ sp[(-13)+-4]
 27327  0131EE  0EEF               	movlw	-17
 27328  0131F0  006F FF8C  F00C    	movff	plusw1,btemp+11
 27329                           
 27330                           ;stkvar	_a @ sp[(-13)+-8]
 27331  0131F6  0EEC               	movlw	236
 27332  0131F8  24E1               	addwf	fsr1l,w,c
 27333  0131FA  6ED9               	movwf	fsr2l,c
 27334  0131FC  0EFF               	movlw	255
 27335  0131FE  20E2               	addwfc	fsr1h,w,c
 27336  013200  6EDA               	movwf	fsr2h,c
 27337  013202  50DF               	movf	indf2,w,c
 27338  013204  020C               	mulwf	(btemp+11)^0,c
 27339                           
 27340                           ;stkvar	_temp @ sp[(-13)+8]
 27341  013206  0EFB               	movlw	-5
 27342  013208  006F FFCF FFE3     	movff	prodl,plusw1
 27343  01320E  0EFC               	movlw	-4
 27344  013210  006F FFD3 FFE3     	movff	prodh,plusw1
 27345                           
 27346                           ;stkvar	_temp @ sp[(-13)+8]
 27347  013216  0EFB               	movlw	-5
 27348  013218  006F FF8C  F00B    	movff	plusw1,btemp+10
 27349  01321E  0EFC               	movlw	-4
 27350  013220  006F FF8C  F00C    	movff	plusw1,btemp+11
 27351                           
 27352                           ;stkvar	_grs @ sp[(-13)+4]
 27353  013226  50E1               	movf	fsr1l,w,c
 27354  013228  0FF7               	addlw	-9
 27355  01322A  6ED9               	movwf	fsr2l,c
 27356  01322C  50E2               	movf	fsr1h,w,c
 27357  01322E  6EDA               	movwf	fsr2h,c
 27358  013230  0EFF               	movlw	255
 27359  013232  22DA               	addwfc	fsr2h,f,c
 27360  013234  500B               	movf	(btemp+10)^0,w,c
 27361  013236  26DE               	addwf	postinc2,f,c
 27362  013238  500C               	movf	(btemp+11)^0,w,c
 27363  01323A  22DE               	addwfc	postinc2,f,c
 27364  01323C  0E00               	movlw	0
 27365  01323E  22DE               	addwfc	postinc2,f,c
 27366  013240  22DE               	addwfc	postinc2,f,c
 27367                           
 27368                           ;stkvar	_grs @ sp[(-13)+4]
 27369  013242  50E1               	movf	fsr1l,w,c
 27370  013244  0FF7               	addlw	-9
 27371  013246  6ED9               	movwf	fsr2l,c
 27372  013248  50E2               	movf	fsr1h,w,c
 27373  01324A  6EDA               	movwf	fsr2h,c
 27374  01324C  0EFF               	movlw	255
 27375  01324E  22DA               	addwfc	fsr2h,f,c
 27376  013250  0E08               	movlw	8
 27377  013252                     u6565:
 27378  013252  90D8               	bcf	status,0,c
 27379  013254  36DE               	rlcf	postinc2,f,c
 27380  013256  36DE               	rlcf	postinc2,f,c
 27381  013258  36DE               	rlcf	postinc2,f,c
 27382  01325A  36DD               	rlcf	postdec2,f,c
 27383  01325C  52DD               	movf	postdec2,f,c
 27384  01325E  52DD               	movf	postdec2,f,c
 27385  013260  2EE8               	decfsz	wreg,f,c
 27386  013262  D7F7               	goto	u6565
 27387                           
 27388                           ;stkvar	_b @ sp[(-13)+-4]
 27389  013264  0EEF               	movlw	-17
 27390  013266  006F FF8C  F00C    	movff	plusw1,btemp+11
 27391                           
 27392                           ;stkvar	_a @ sp[(-13)+-8]
 27393  01326C  0EEB               	movlw	-21
 27394  01326E  50E3               	movf	plusw1,w,c
 27395  013270  020C               	mulwf	(btemp+11)^0,c
 27396                           
 27397                           ;stkvar	_temp @ sp[(-13)+8]
 27398  013272  0EFB               	movlw	-5
 27399  013274  006F FFCF FFE3     	movff	prodl,plusw1
 27400  01327A  0EFC               	movlw	-4
 27401  01327C  006F FFD3 FFE3     	movff	prodh,plusw1
 27402                           
 27403                           ;stkvar	_temp @ sp[(-13)+8]
 27404  013282  0EFB               	movlw	-5
 27405  013284  006F FF8C  F00B    	movff	plusw1,btemp+10
 27406  01328A  0EFC               	movlw	-4
 27407  01328C  006F FF8C  F00C    	movff	plusw1,btemp+11
 27408                           
 27409                           ;stkvar	_grs @ sp[(-13)+4]
 27410  013292  50E1               	movf	fsr1l,w,c
 27411  013294  0FF7               	addlw	-9
 27412  013296  6ED9               	movwf	fsr2l,c
 27413  013298  50E2               	movf	fsr1h,w,c
 27414  01329A  6EDA               	movwf	fsr2h,c
 27415  01329C  0EFF               	movlw	255
 27416  01329E  22DA               	addwfc	fsr2h,f,c
 27417  0132A0  500B               	movf	(btemp+10)^0,w,c
 27418  0132A2  26DE               	addwf	postinc2,f,c
 27419  0132A4  500C               	movf	(btemp+11)^0,w,c
 27420  0132A6  22DE               	addwfc	postinc2,f,c
 27421  0132A8  0E00               	movlw	0
 27422  0132AA  22DE               	addwfc	postinc2,f,c
 27423  0132AC  22DE               	addwfc	postinc2,f,c
 27424                           
 27425                           ;stkvar	_b @ sp[(-13)+-4]
 27426  0132AE  0EF0               	movlw	240
 27427  0132B0  24E1               	addwf	fsr1l,w,c
 27428  0132B2  6ED9               	movwf	fsr2l,c
 27429  0132B4  0EFF               	movlw	255
 27430  0132B6  20E2               	addwfc	fsr1h,w,c
 27431  0132B8  6EDA               	movwf	fsr2h,c
 27432  0132BA  50DF               	movf	indf2,w,c
 27433  0132BC  6E0C               	movwf	(btemp+11)^0,c
 27434                           
 27435                           ;stkvar	_a @ sp[(-13)+-8]
 27436  0132BE  0EED               	movlw	237
 27437  0132C0  24E1               	addwf	fsr1l,w,c
 27438  0132C2  6ED9               	movwf	fsr2l,c
 27439  0132C4  0EFF               	movlw	255
 27440  0132C6  20E2               	addwfc	fsr1h,w,c
 27441  0132C8  6EDA               	movwf	fsr2h,c
 27442  0132CA  50DF               	movf	indf2,w,c
 27443  0132CC  020C               	mulwf	(btemp+11)^0,c
 27444                           
 27445                           ;stkvar	_temp @ sp[(-13)+8]
 27446  0132CE  0EFB               	movlw	-5
 27447  0132D0  006F FFCF FFE3     	movff	prodl,plusw1
 27448  0132D6  0EFC               	movlw	-4
 27449  0132D8  006F FFD3 FFE3     	movff	prodh,plusw1
 27450                           
 27451                           ;stkvar	_temp @ sp[(-13)+8]
 27452  0132DE  0EFB               	movlw	-5
 27453  0132E0  006F FF8C  F00B    	movff	plusw1,btemp+10
 27454  0132E6  0EFC               	movlw	-4
 27455  0132E8  006F FF8C  F00C    	movff	plusw1,btemp+11
 27456                           
 27457                           ;stkvar	_prod @ sp[(-13)+0]
 27458  0132EE  50E1               	movf	fsr1l,w,c
 27459  0132F0  0FF3               	addlw	-13
 27460  0132F2  6ED9               	movwf	fsr2l,c
 27461  0132F4  50E2               	movf	fsr1h,w,c
 27462  0132F6  6EDA               	movwf	fsr2h,c
 27463  0132F8  0EFF               	movlw	255
 27464  0132FA  22DA               	addwfc	fsr2h,f,c
 27465  0132FC  500B               	movf	(btemp+10)^0,w,c
 27466  0132FE  26DE               	addwf	postinc2,f,c
 27467  013300  500C               	movf	(btemp+11)^0,w,c
 27468  013302  22DE               	addwfc	postinc2,f,c
 27469  013304  0E00               	movlw	0
 27470  013306  22DE               	addwfc	postinc2,f,c
 27471  013308  22DE               	addwfc	postinc2,f,c
 27472                           
 27473                           ;stkvar	_b @ sp[(-13)+-4]
 27474  01330A  0EF1               	movlw	241
 27475  01330C  24E1               	addwf	fsr1l,w,c
 27476  01330E  6ED9               	movwf	fsr2l,c
 27477  013310  0EFF               	movlw	255
 27478  013312  20E2               	addwfc	fsr1h,w,c
 27479  013314  6EDA               	movwf	fsr2h,c
 27480  013316  50DF               	movf	indf2,w,c
 27481  013318  6E0C               	movwf	(btemp+11)^0,c
 27482                           
 27483                           ;stkvar	_a @ sp[(-13)+-8]
 27484  01331A  0EEC               	movlw	236
 27485  01331C  24E1               	addwf	fsr1l,w,c
 27486  01331E  6ED9               	movwf	fsr2l,c
 27487  013320  0EFF               	movlw	255
 27488  013322  20E2               	addwfc	fsr1h,w,c
 27489  013324  6EDA               	movwf	fsr2h,c
 27490  013326  50DF               	movf	indf2,w,c
 27491  013328  020C               	mulwf	(btemp+11)^0,c
 27492                           
 27493                           ;stkvar	_temp @ sp[(-13)+8]
 27494  01332A  0EFB               	movlw	-5
 27495  01332C  006F FFCF FFE3     	movff	prodl,plusw1
 27496  013332  0EFC               	movlw	-4
 27497  013334  006F FFD3 FFE3     	movff	prodh,plusw1
 27498                           
 27499                           ;stkvar	_temp @ sp[(-13)+8]
 27500  01333A  0EFB               	movlw	-5
 27501  01333C  006F FF8C  F00B    	movff	plusw1,btemp+10
 27502  013342  0EFC               	movlw	-4
 27503  013344  006F FF8C  F00C    	movff	plusw1,btemp+11
 27504                           
 27505                           ;stkvar	_prod @ sp[(-13)+0]
 27506  01334A  50E1               	movf	fsr1l,w,c
 27507  01334C  0FF3               	addlw	-13
 27508  01334E  6ED9               	movwf	fsr2l,c
 27509  013350  50E2               	movf	fsr1h,w,c
 27510  013352  6EDA               	movwf	fsr2h,c
 27511  013354  0EFF               	movlw	255
 27512  013356  22DA               	addwfc	fsr2h,f,c
 27513  013358  500B               	movf	(btemp+10)^0,w,c
 27514  01335A  26DE               	addwf	postinc2,f,c
 27515  01335C  500C               	movf	(btemp+11)^0,w,c
 27516  01335E  22DE               	addwfc	postinc2,f,c
 27517  013360  0E00               	movlw	0
 27518  013362  22DE               	addwfc	postinc2,f,c
 27519  013364  22DE               	addwfc	postinc2,f,c
 27520                           
 27521                           ;stkvar	_b @ sp[(-13)+-4]
 27522  013366  0EF1               	movlw	241
 27523  013368  24E1               	addwf	fsr1l,w,c
 27524  01336A  6ED9               	movwf	fsr2l,c
 27525  01336C  0EFF               	movlw	255
 27526  01336E  20E2               	addwfc	fsr1h,w,c
 27527  013370  6EDA               	movwf	fsr2h,c
 27528  013372  50DF               	movf	indf2,w,c
 27529  013374  6E0C               	movwf	(btemp+11)^0,c
 27530                           
 27531                           ;stkvar	_a @ sp[(-13)+-8]
 27532  013376  0EED               	movlw	237
 27533  013378  24E1               	addwf	fsr1l,w,c
 27534  01337A  6ED9               	movwf	fsr2l,c
 27535  01337C  0EFF               	movlw	255
 27536  01337E  20E2               	addwfc	fsr1h,w,c
 27537  013380  6EDA               	movwf	fsr2h,c
 27538  013382  50DF               	movf	indf2,w,c
 27539  013384  020C               	mulwf	(btemp+11)^0,c
 27540                           
 27541                           ;stkvar	_temp @ sp[(-13)+8]
 27542  013386  0EFB               	movlw	-5
 27543  013388  006F FFCF FFE3     	movff	prodl,plusw1
 27544  01338E  0EFC               	movlw	-4
 27545  013390  006F FFD3 FFE3     	movff	prodh,plusw1
 27546                           
 27547                           ;stkvar	_temp @ sp[(-13)+8]
 27548  013396  0EFB               	movlw	-5
 27549  013398  006F FF8C  F00B    	movff	plusw1,btemp+10
 27550  01339E  0EFC               	movlw	-4
 27551  0133A0  006F FF8C  F00C    	movff	plusw1,btemp+11
 27552  0133A6  500B               	movf	(btemp+10)^0,w,c
 27553  0133A8  6E05               	movwf	(btemp+4)^0,c
 27554  0133AA  500C               	movf	(btemp+11)^0,w,c
 27555  0133AC  6E06               	movwf	(btemp+5)^0,c
 27556  0133AE  6A07               	clrf	(btemp+6)^0,c
 27557  0133B0  6A08               	clrf	(btemp+7)^0,c
 27558  0133B2  0060  F01C  F008   	movff	btemp+6,btemp+7
 27559  0133B8  0060  F018  F007   	movff	btemp+5,btemp+6
 27560  0133BE  0060  F014  F006   	movff	btemp+4,btemp+5
 27561  0133C4  6A05               	clrf	(btemp+4)^0,c
 27562                           
 27563                           ;stkvar	_prod @ sp[(-13)+0]
 27564  0133C6  50E1               	movf	fsr1l,w,c
 27565  0133C8  0FF3               	addlw	-13
 27566  0133CA  6ED9               	movwf	fsr2l,c
 27567  0133CC  50E2               	movf	fsr1h,w,c
 27568  0133CE  6EDA               	movwf	fsr2h,c
 27569  0133D0  0EFF               	movlw	255
 27570  0133D2  22DA               	addwfc	fsr2h,f,c
 27571  0133D4  5005               	movf	(btemp+4)^0,w,c
 27572  0133D6  26DE               	addwf	postinc2,f,c
 27573  0133D8  5006               	movf	(btemp+5)^0,w,c
 27574  0133DA  22DE               	addwfc	postinc2,f,c
 27575  0133DC  5007               	movf	(btemp+6)^0,w,c
 27576  0133DE  22DE               	addwfc	postinc2,f,c
 27577  0133E0  5008               	movf	(btemp+7)^0,w,c
 27578  0133E2  22DE               	addwfc	postinc2,f,c
 27579                           
 27580                           ;stkvar	_prod @ sp[(-13)+0]
 27581  0133E4  50E1               	movf	fsr1l,w,c
 27582  0133E6  0FF3               	addlw	-13
 27583  0133E8  6ED9               	movwf	fsr2l,c
 27584  0133EA  50E2               	movf	fsr1h,w,c
 27585  0133EC  6EDA               	movwf	fsr2h,c
 27586  0133EE  0EFF               	movlw	255
 27587  0133F0  22DA               	addwfc	fsr2h,f,c
 27588                           
 27589                           ;stkvar	_grs @ sp[(-13)+4]
 27590  0133F2  0EFA               	movlw	250
 27591  0133F4  24E1               	addwf	fsr1l,w,c
 27592  0133F6  6EE9               	movwf	fsr0l,c
 27593  0133F8  0EFF               	movlw	255
 27594  0133FA  20E2               	addwfc	fsr1h,w,c
 27595  0133FC  6EEA               	movwf	fsr0h,c
 27596  0133FE  50EF               	movf	indf0,w,c
 27597  013400  26DE               	addwf	postinc2,f,c
 27598  013402  0E00               	movlw	0
 27599  013404  22DE               	addwfc	postinc2,f,c
 27600  013406  22DE               	addwfc	postinc2,f,c
 27601  013408  22DE               	addwfc	postinc2,f,c
 27602                           
 27603                           ;stkvar	_grs @ sp[(-13)+4]
 27604  01340A  50E1               	movf	fsr1l,w,c
 27605  01340C  0FF7               	addlw	-9
 27606  01340E  6ED9               	movwf	fsr2l,c
 27607  013410  50E2               	movf	fsr1h,w,c
 27608  013412  6EDA               	movwf	fsr2h,c
 27609  013414  0EFF               	movlw	255
 27610  013416  22DA               	addwfc	fsr2h,f,c
 27611  013418  0E08               	movlw	8
 27612  01341A                     u6575:
 27613  01341A  90D8               	bcf	status,0,c
 27614  01341C  36DE               	rlcf	postinc2,f,c
 27615  01341E  36DE               	rlcf	postinc2,f,c
 27616  013420  36DE               	rlcf	postinc2,f,c
 27617  013422  36DD               	rlcf	postdec2,f,c
 27618  013424  52DD               	movf	postdec2,f,c
 27619  013426  52DD               	movf	postdec2,f,c
 27620  013428  2EE8               	decfsz	wreg,f,c
 27621  01342A  D7F7               	goto	u6575
 27622  01342C  0E82               	movlw	130
 27623  01342E  6E0B               	movwf	(btemp+10)^0,c
 27624  013430  0EFF               	movlw	255
 27625  013432  6E0C               	movwf	(btemp+11)^0,c
 27626                           
 27627                           ;stkvar	_bexp @ sp[(-13)+10]
 27628  013434  0EFD               	movlw	-3
 27629  013436  50E3               	movf	plusw1,w,c
 27630  013438  6E09               	movwf	(btemp+8)^0,c
 27631  01343A  6A0A               	clrf	(btemp+9)^0,c
 27632                           
 27633                           ;stkvar	_aexp @ sp[(-13)+11]
 27634  01343C  0EFE               	movlw	-2
 27635  01343E  50E3               	movf	plusw1,w,c
 27636  013440  2609               	addwf	(btemp+8)^0,f,c
 27637  013442  0E00               	movlw	0
 27638  013444  220A               	addwfc	(btemp+9)^0,f,c
 27639  013446  500B               	movf	(btemp+10)^0,w,c
 27640  013448  2609               	addwf	(btemp+8)^0,f,c
 27641  01344A  500C               	movf	(btemp+11)^0,w,c
 27642  01344C  220A               	addwfc	(btemp+9)^0,f,c
 27643                           
 27644                           ;stkvar	_temp @ sp[(-13)+8]
 27645  01344E  0EFB               	movlw	-5
 27646  013450  0060  F027  FFE3   	movff	btemp+8,plusw1
 27647  013456  0EFC               	movlw	-4
 27648  013458  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27649  01345E  D021               	goto	l8138
 27650  013460                     l8128:
 27651                           
 27652                           ;stkvar	_prod @ sp[(-13)+0]
 27653  013460  90D8               	bcf	status,0,c
 27654  013462  0EF3               	movlw	-13
 27655  013464  36E3               	rlcf	plusw1,f,c
 27656  013466  0EF4               	movlw	-12
 27657  013468  36E3               	rlcf	plusw1,f,c
 27658  01346A  0EF5               	movlw	-11
 27659  01346C  36E3               	rlcf	plusw1,f,c
 27660  01346E  0EF6               	movlw	-10
 27661  013470  36E3               	rlcf	plusw1,f,c
 27662                           
 27663                           ;stkvar	_grs @ sp[(-13)+4]
 27664  013472  0EFA               	movlw	-6
 27665  013474  AEE3               	btfss	plusw1,7,c
 27666  013476  D002               	goto	l8134
 27667                           
 27668                           ;stkvar	_prod @ sp[(-13)+0]
 27669  013478  0EF3               	movlw	-13
 27670  01347A  80E3               	bsf	plusw1,0,c
 27671  01347C                     l8134:
 27672                           
 27673                           ;stkvar	_grs @ sp[(-13)+4]
 27674  01347C  90D8               	bcf	status,0,c
 27675  01347E  0EF7               	movlw	-9
 27676  013480  36E3               	rlcf	plusw1,f,c
 27677  013482  0EF8               	movlw	-8
 27678  013484  36E3               	rlcf	plusw1,f,c
 27679  013486  0EF9               	movlw	-7
 27680  013488  36E3               	rlcf	plusw1,f,c
 27681  01348A  0EFA               	movlw	-6
 27682  01348C  36E3               	rlcf	plusw1,f,c
 27683                           
 27684                           ;stkvar	_temp @ sp[(-13)+8]
 27685  01348E  50E1               	movf	fsr1l,w,c
 27686  013490  0FFB               	addlw	-5
 27687  013492  6ED9               	movwf	fsr2l,c
 27688  013494  50E2               	movf	fsr1h,w,c
 27689  013496  6EDA               	movwf	fsr2h,c
 27690  013498  0EFF               	movlw	255
 27691  01349A  22DA               	addwfc	fsr2h,f,c
 27692  01349C  06DE               	decf	postinc2,f,c
 27693  01349E  0E00               	movlw	0
 27694  0134A0  5ADD               	subwfb	postdec2,f,c
 27695  0134A2                     l8138:
 27696                           
 27697                           ;stkvar	_prod @ sp[(-13)+0]
 27698  0134A2  0EF5               	movlw	-11
 27699  0134A4  AEE3               	btfss	plusw1,7,c
 27700  0134A6  D7DC               	goto	l8128
 27701                           
 27702                           ;stkvar	_aexp @ sp[(-13)+11]
 27703  0134A8  0EFE               	movlw	-2
 27704  0134AA  6AE3               	clrf	plusw1,c
 27705                           
 27706                           ;stkvar	_grs @ sp[(-13)+4]
 27707  0134AC  0EFA               	movlw	-6
 27708  0134AE  AEE3               	btfss	plusw1,7,c
 27709  0134B0  D020               	goto	l8152
 27710                           
 27711                           ;stkvar	_grs @ sp[(-13)+4]
 27712  0134B2  50E1               	movf	fsr1l,w,c
 27713  0134B4  0FF7               	addlw	-9
 27714  0134B6  6ED9               	movwf	fsr2l,c
 27715  0134B8  50E2               	movf	fsr1h,w,c
 27716  0134BA  6EDA               	movwf	fsr2h,c
 27717  0134BC  0EFF               	movlw	255
 27718  0134BE  22DA               	addwfc	fsr2h,f,c
 27719  0134C0  0EFF               	movlw	255
 27720  0134C2  14DE               	andwf	postinc2,w,c
 27721  0134C4  6E09               	movwf	(btemp+8)^0,c
 27722  0134C6  0EFF               	movlw	255
 27723  0134C8  14DE               	andwf	postinc2,w,c
 27724  0134CA  6E0A               	movwf	(btemp+9)^0,c
 27725  0134CC  0EFF               	movlw	255
 27726  0134CE  14DE               	andwf	postinc2,w,c
 27727  0134D0  6E0B               	movwf	(btemp+10)^0,c
 27728  0134D2  0E7F               	movlw	127
 27729  0134D4  14DE               	andwf	postinc2,w,c
 27730  0134D6  6E0C               	movwf	(btemp+11)^0,c
 27731  0134D8  5009               	movf	(btemp+8)^0,w,c
 27732  0134DA  100A               	iorwf	(btemp+9)^0,w,c
 27733  0134DC  100B               	iorwf	(btemp+10)^0,w,c
 27734  0134DE  100C               	iorwf	(btemp+11)^0,w,c
 27735  0134E0  B4D8               	btfsc	status,2,c
 27736  0134E2  D004               	goto	l8148
 27737  0134E4                     u6610:
 27738                           
 27739                           ;stkvar	_aexp @ sp[(-13)+11]
 27740  0134E4  0EFE               	movlw	-2
 27741  0134E6  6AE3               	clrf	plusw1,c
 27742  0134E8  2AE3               	incf	plusw1,f,c
 27743  0134EA  D003               	goto	l8152
 27744  0134EC                     l8148:
 27745                           
 27746                           ;stkvar	_prod @ sp[(-13)+0]
 27747  0134EC  0EF3               	movlw	-13
 27748  0134EE  B0E3               	btfsc	plusw1,0,c
 27749  0134F0  D7F9               	goto	u6610
 27750  0134F2                     l8152:
 27751                           
 27752                           ;stkvar	_aexp @ sp[(-13)+11]
 27753  0134F2  0EFE               	movlw	-2
 27754  0134F4  50E3               	movf	plusw1,w,c
 27755  0134F6  B4D8               	btfsc	status,2,c
 27756  0134F8  D036               	goto	l8162
 27757                           
 27758                           ;stkvar	_prod @ sp[(-13)+0]
 27759  0134FA  50E1               	movf	fsr1l,w,c
 27760  0134FC  0FF3               	addlw	-13
 27761  0134FE  6ED9               	movwf	fsr2l,c
 27762  013500  50E2               	movf	fsr1h,w,c
 27763  013502  6EDA               	movwf	fsr2h,c
 27764  013504  0EFF               	movlw	255
 27765  013506  22DA               	addwfc	fsr2h,f,c
 27766  013508  2ADE               	incf	postinc2,f,c
 27767  01350A  0E00               	movlw	0
 27768  01350C  22DE               	addwfc	postinc2,f,c
 27769  01350E  22DE               	addwfc	postinc2,f,c
 27770  013510  22DE               	addwfc	postinc2,f,c
 27771                           
 27772                           ;stkvar	_prod @ sp[(-13)+0]
 27773  013512  0EF6               	movlw	-10
 27774  013514  A0E3               	btfss	plusw1,0,c
 27775  013516  D027               	goto	l8162
 27776  013518  0E01               	movlw	1
 27777  01351A  6E0C               	movwf	(btemp+11)^0,c
 27778                           
 27779                           ;stkvar	_prod @ sp[(-13)+0]
 27780  01351C  50E1               	movf	fsr1l,w,c
 27781  01351E  0FF3               	addlw	-13
 27782  013520  6ED9               	movwf	fsr2l,c
 27783  013522  50E2               	movf	fsr1h,w,c
 27784  013524  6EDA               	movwf	fsr2h,c
 27785  013526  0EFF               	movlw	255
 27786  013528  22DA               	addwfc	fsr2h,f,c
 27787  01352A  280C               	incf	(btemp+11)^0,w,c
 27788  01352C  52DE               	movf	postinc2,f,c
 27789  01352E  D008               	goto	u6650
 27790  013530                     u6655:
 27791  013530  52DE               	movf	postinc2,f,c
 27792  013532  90D8               	bcf	status,0,c
 27793  013534  BEDC               	btfsc	preinc2,7,c
 27794  013536  80D8               	bsf	status,0,c
 27795  013538  32DD               	rrcf	postdec2,f,c
 27796  01353A  32DD               	rrcf	postdec2,f,c
 27797  01353C  32DD               	rrcf	postdec2,f,c
 27798  01353E  32DE               	rrcf	postinc2,f,c
 27799  013540                     u6650:
 27800  013540  2EE8               	decfsz	wreg,f,c
 27801  013542  D7F6               	goto	u6655
 27802                           
 27803                           ;stkvar	_temp @ sp[(-13)+8]
 27804  013544  0EFB               	movlw	-5
 27805  013546  50E3               	movf	plusw1,w,c
 27806  013548  0F01               	addlw	1
 27807  01354A  6E01               	movwf	btemp^0,c
 27808  01354C  0EFB               	movlw	-5
 27809  01354E  0060  F007  FFE3   	movff	btemp,plusw1
 27810  013554  6A01               	clrf	btemp^0,c
 27811  013556  0EFC               	movlw	-4
 27812  013558  50E3               	movf	plusw1,w,c
 27813  01355A  2001               	addwfc	btemp^0,w,c
 27814  01355C  6E01               	movwf	btemp^0,c
 27815  01355E  0EFC               	movlw	-4
 27816  013560  0060  F007  FFE3   	movff	btemp,plusw1
 27817  013566                     l8162:
 27818                           
 27819                           ;stkvar	_temp @ sp[(-13)+8]
 27820  013566  0EFC               	movlw	-4
 27821  013568  BEE3               	btfsc	plusw1,7,c
 27822  01356A  D020               	goto	l8166
 27823  01356C  0EFC               	movlw	-4
 27824  01356E  50E3               	movf	plusw1,w,c
 27825  013570  E104               	bnz	u6660
 27826  013572  0EFB               	movlw	-5
 27827  013574  28E3               	incf	plusw1,w,c
 27828  013576  A0D8               	btfss	status,0,c
 27829  013578  D019               	goto	l8166
 27830  01357A                     u6660:
 27831  01357A  0E00               	movlw	0
 27832  01357C  6E09               	movwf	(btemp+8)^0,c
 27833  01357E  0E00               	movlw	0
 27834  013580  6E0A               	movwf	(btemp+9)^0,c
 27835  013582  0E80               	movlw	128
 27836  013584  6E0B               	movwf	(btemp+10)^0,c
 27837  013586  0E7F               	movlw	127
 27838  013588  6E0C               	movwf	(btemp+11)^0,c
 27839                           
 27840                           ;stkvar	_prod @ sp[(-13)+0]
 27841  01358A  0EF3               	movlw	-13
 27842  01358C  0060  F027  FFE3   	movff	btemp+8,plusw1
 27843  013592  0EF4               	movlw	-12
 27844  013594  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27845  01359A  0EF5               	movlw	-11
 27846  01359C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27847  0135A2  0EF6               	movlw	-10
 27848  0135A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 27849  0135AA  D044               	goto	l8182
 27850  0135AC                     l8166:
 27851                           
 27852                           ;stkvar	_temp @ sp[(-13)+8]
 27853  0135AC  0EFC               	movlw	-4
 27854  0135AE  BEE3               	btfsc	plusw1,7,c
 27855  0135B0  D007               	goto	u6670
 27856  0135B2  0EFC               	movlw	-4
 27857  0135B4  50E3               	movf	plusw1,w,c
 27858  0135B6  E10F               	bnz	l8172
 27859  0135B8  0EFB               	movlw	-5
 27860  0135BA  04E3               	decf	plusw1,w,c
 27861  0135BC  B0D8               	btfsc	status,0,c
 27862  0135BE  D00B               	goto	l8172
 27863  0135C0                     u6670:
 27864                           
 27865                           ;stkvar	_prod @ sp[(-13)+0]
 27866  0135C0  0EF3               	movlw	-13
 27867  0135C2  6AE3               	clrf	plusw1,c
 27868  0135C4  0EF4               	movlw	-12
 27869  0135C6  6AE3               	clrf	plusw1,c
 27870  0135C8  0EF5               	movlw	-11
 27871  0135CA  6AE3               	clrf	plusw1,c
 27872  0135CC  0EF6               	movlw	-10
 27873  0135CE  6AE3               	clrf	plusw1,c
 27874                           
 27875                           ;stkvar	_sign @ sp[(-13)+12]
 27876  0135D0  0EFF               	movlw	-1
 27877  0135D2  6AE3               	clrf	plusw1,c
 27878  0135D4  D02F               	goto	l8182
 27879  0135D6                     l8172:
 27880                           
 27881                           ;stkvar	_temp @ sp[(-13)+8]
 27882                           ;stkvar	_bexp @ sp[(-13)+10]
 27883  0135D6  0EFB               	movlw	-5
 27884  0135D8  006F FF8C  F001    	movff	plusw1,btemp
 27885  0135DE  0EFD               	movlw	-3
 27886  0135E0  0060  F007  FFE3   	movff	btemp,plusw1
 27887                           
 27888                           ;stkvar	_prod @ sp[(-13)+0]
 27889  0135E6  50E1               	movf	fsr1l,w,c
 27890  0135E8  0FF3               	addlw	-13
 27891  0135EA  6ED9               	movwf	fsr2l,c
 27892  0135EC  50E2               	movf	fsr1h,w,c
 27893  0135EE  6EDA               	movwf	fsr2h,c
 27894  0135F0  0EFF               	movlw	255
 27895  0135F2  22DA               	addwfc	fsr2h,f,c
 27896  0135F4  0EFF               	movlw	255
 27897  0135F6  16DE               	andwf	postinc2,f,c
 27898  0135F8  0EFF               	movlw	255
 27899  0135FA  16DE               	andwf	postinc2,f,c
 27900  0135FC  0E7F               	movlw	127
 27901  0135FE  16DE               	andwf	postinc2,f,c
 27902  013600  0E00               	movlw	0
 27903  013602  16DE               	andwf	postinc2,f,c
 27904                           
 27905                           ;stkvar	_bexp @ sp[(-13)+10]
 27906  013604  0EFD               	movlw	-3
 27907  013606  A0E3               	btfss	plusw1,0,c
 27908  013608  D008               	goto	l8180
 27909                           
 27910                           ;stkvar	_prod @ sp[(-13)+0]
 27911  01360A  0EF5               	movlw	245
 27912  01360C  24E1               	addwf	fsr1l,w,c
 27913  01360E  6ED9               	movwf	fsr2l,c
 27914  013610  0EFF               	movlw	255
 27915  013612  20E2               	addwfc	fsr1h,w,c
 27916  013614  6EDA               	movwf	fsr2h,c
 27917  013616  0E00               	movlw	0
 27918  013618  8EDB               	bsf	plusw2,7,c
 27919  01361A                     l8180:
 27920                           
 27921                           ;stkvar	_prod @ sp[(-13)+0]
 27922  01361A  0EF6               	movlw	246
 27923  01361C  24E1               	addwf	fsr1l,w,c
 27924  01361E  6ED9               	movwf	fsr2l,c
 27925  013620  0EFF               	movlw	255
 27926  013622  20E2               	addwfc	fsr1h,w,c
 27927  013624  6EDA               	movwf	fsr2h,c
 27928                           
 27929                           ;stkvar	_bexp @ sp[(-13)+10]
 27930  013626  0EFD               	movlw	-3
 27931  013628  006F FF8C  F00C    	movff	plusw1,btemp+11
 27932  01362E  90D8               	bcf	status,0,c
 27933  013630  300C               	rrcf	(btemp+11)^0,w,c
 27934  013632  6EDF               	movwf	indf2,c
 27935  013634                     l8182:
 27936                           
 27937                           ;stkvar	_sign @ sp[(-13)+12]
 27938  013634  0EFF               	movlw	-1
 27939  013636  006F FF8C  F00C    	movff	plusw1,btemp+11
 27940                           
 27941                           ;stkvar	_prod @ sp[(-13)+0]
 27942  01363C  0EF6               	movlw	246
 27943  01363E  24E1               	addwf	fsr1l,w,c
 27944  013640  6ED9               	movwf	fsr2l,c
 27945  013642  0EFF               	movlw	255
 27946  013644  20E2               	addwfc	fsr1h,w,c
 27947  013646  6EDA               	movwf	fsr2h,c
 27948  013648  500C               	movf	(btemp+11)^0,w,c
 27949  01364A  12DF               	iorwf	indf2,f,c
 27950                           
 27951                           ;stkvar	_prod @ sp[(-13)+0]
 27952  01364C  0EF3               	movlw	-13
 27953  01364E  006F FF8C  F001    	movff	plusw1,btemp
 27954  013654  0EF4               	movlw	-12
 27955  013656  006F FF8C  F002    	movff	plusw1,btemp+1
 27956  01365C  0EF5               	movlw	-11
 27957  01365E  006F FF8C  F003    	movff	plusw1,btemp+2
 27958  013664  0EF6               	movlw	-10
 27959  013666  006F FF8C  F004    	movff	plusw1,btemp+3
 27960  01366C                     l2979:
 27961                           
 27962                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 27963  01366C  0EEB               	movlw	235
 27964  01366E  26E1               	addwf	fsr1l,f,c
 27965  013670  0EFF               	movlw	255
 27966  013672  22E2               	addwfc	fsr1h,f,c
 27967  013674  0012               	return		;funcret
 27968  013676                     __end_of___flmul:
 27969                           	opt callstack 0
 27970                           
 27971 ;; *************** function _SYSTEM_Initialize *****************
 27972 ;; Defined at:
 27973 ;;		line 50 in file "mcc_generated_files/mcc.c"
 27974 ;; Parameters:    Size  Location     Type
 27975 ;;		None
 27976 ;; Auto vars:     Size  Location     Type
 27977 ;;		None
 27978 ;; Return value:  Size  Location     Type
 27979 ;;                  1  [STACK] void 
 27980 ;; Registers used:
 27981 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 27982 ;; Tracked objects:
 27983 ;;		On entry : 0/0
 27984 ;;		On exit  : 3F/3C
 27985 ;;		Unchanged: 0/0
 27986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27991 ;;Total ram usage:        0 bytes
 27992 ;; Hardware stack levels used:    1
 27993 ;; Hardware stack levels required when called:   17
 27994 ;; This function calls:
 27995 ;;		_ADCC_Initialize
 27996 ;;		_CLKREF_Initialize
 27997 ;;		_DMA1_Initialize
 27998 ;;		_DMA2_Initialize
 27999 ;;		_EXT_INT_Initialize
 28000 ;;		_FVR_Initialize
 28001 ;;		_INTERRUPT_Initialize
 28002 ;;		_OSCILLATOR_Initialize
 28003 ;;		_PIN_MANAGER_Initialize
 28004 ;;		_PMD_Initialize
 28005 ;;		_PWM8_Initialize
 28006 ;;		_SPI1_Initialize
 28007 ;;		_TMR2_Initialize
 28008 ;;		_TMR3_Initialize
 28009 ;;		_TMR5_Initialize
 28010 ;;		_TMR6_Initialize
 28011 ;;		_UART1_Initialize
 28012 ;;		_UART2_Initialize
 28013 ;; This function is called by:
 28014 ;;		_main
 28015 ;; This function uses a reentrant model
 28016 ;;
 28017                           
 28018                           	psect	text107
 28019  01A542                     __ptext107:
 28020                           	opt callstack 0
 28021  01A542                     _SYSTEM_Initialize:
 28022                           	opt callstack 13
 28023                           
 28024                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 28025                           
 28026                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28027                           ;incstack = 0
 28028  01A542  EC81  F0D0         	call	_INTERRUPT_Initialize	;wreg free
 28029                           
 28030                           ; BSR set to: 57
 28031                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 28032  01A546  ECD0  F0D8         	call	_PMD_Initialize	;wreg free
 28033                           
 28034                           ; BSR set to: 57
 28035                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 28036  01A54A  EC4A  F0CE         	call	_PIN_MANAGER_Initialize	;wreg free
 28037                           
 28038                           ; BSR set to: 58
 28039                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 28040  01A54E  ECC5  F0D8         	call	_OSCILLATOR_Initialize	;wreg free
 28041                           
 28042                           ; BSR set to: 57
 28043                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 28044  01A552  EC45  F0D9         	call	_FVR_Initialize	;wreg free
 28045                           
 28046                           ; BSR set to: 62
 28047                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 28048  01A556  EC17  F0D0         	call	_ADCC_Initialize	;wreg free
 28049                           
 28050                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 28051  01A55A  ECBA  F0D8         	call	_PWM8_Initialize	;wreg free
 28052                           
 28053                           ; BSR set to: 63
 28054                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 28055  01A55E  ECA3  F0D8         	call	_TMR2_Initialize	;wreg free
 28056                           
 28057                           ; BSR set to: 57
 28058                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 28059  01A562  EC1F  F0D5         	call	_EXT_INT_Initialize	;wreg free
 28060                           
 28061                           ; BSR set to: 57
 28062                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 28063  01A566  EC0C  F0D6         	call	_TMR6_Initialize	;wreg free
 28064                           
 28065                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 28066  01A56A  EC76  F0D3         	call	_TMR3_Initialize	;wreg free
 28067                           
 28068                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 28069  01A56E  EC53  F0D3         	call	_TMR5_Initialize	;wreg free
 28070                           
 28071                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 28072  01A572  EC30  F0D3         	call	_UART1_Initialize	;wreg free
 28073                           
 28074                           ; BSR set to: 57
 28075                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 28076  01A576  EC48  F0D1         	call	_UART2_Initialize	;wreg free
 28077                           
 28078                           ; BSR set to: 57
 28079                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 28080  01A57A  ECAF  F0D8         	call	_SPI1_Initialize	;wreg free
 28081                           
 28082                           ; BSR set to: 61
 28083                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 28084  01A57E  ECA4  F0D1         	call	_DMA2_Initialize	;wreg free
 28085                           
 28086                           ; BSR set to: 59
 28087                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 28088  01A582  ECE2  F0CF         	call	_DMA1_Initialize	;wreg free
 28089                           
 28090                           ; BSR set to: 59
 28091                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 28092  01A586  EC19  F0D9         	call	_CLKREF_Initialize	;wreg free
 28093                           
 28094                           ; BSR set to: 60
 28095                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 28096  01A58A  0012               	return		;funcret
 28097  01A58C                     __end_of_SYSTEM_Initialize:
 28098                           	opt callstack 0
 28099                           
 28100 ;; *************** function _UART2_Initialize *****************
 28101 ;; Defined at:
 28102 ;;		line 78 in file "mcc_generated_files/uart2.c"
 28103 ;; Parameters:    Size  Location     Type
 28104 ;;		None
 28105 ;; Auto vars:     Size  Location     Type
 28106 ;;		None
 28107 ;; Return value:  Size  Location     Type
 28108 ;;                  1  [STACK] void 
 28109 ;; Registers used:
 28110 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 28111 ;; Tracked objects:
 28112 ;;		On entry : 3F/39
 28113 ;;		On exit  : 3F/39
 28114 ;;		Unchanged: 0/0
 28115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28120 ;;Total ram usage:        0 bytes
 28121 ;; Hardware stack levels used:    1
 28122 ;; Hardware stack levels required when called:   16
 28123 ;; This function calls:
 28124 ;;		_UART2_SetRxInterruptHandler
 28125 ;;		_UART2_SetTxInterruptHandler
 28126 ;; This function is called by:
 28127 ;;		_SYSTEM_Initialize
 28128 ;; This function uses a reentrant model
 28129 ;;
 28130                           
 28131                           	psect	text108
 28132  01A290                     __ptext108:
 28133                           	opt callstack 0
 28134  01A290                     _UART2_Initialize:
 28135                           	opt callstack 13
 28136                           
 28137                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 28138                           
 28139                           ; BSR set to: 60
 28140                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28141                           ;incstack = 0
 28142  01A290  0139               	movlb	57	; () banked
 28143  01A292  9596               	bcf	150,2,b	;volatile
 28144                           
 28145                           ; BSR set to: 57
 28146                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 28147  01A294  0EA2               	movlw	low _UART2_Receive_ISR
 28148  01A296  6EE6               	movwf	postinc1,c
 28149  01A298  0EB0               	movlw	high _UART2_Receive_ISR
 28150  01A29A  6EE6               	movwf	postinc1,c
 28151  01A29C  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 28152  01A29E  6EE6               	movwf	postinc1,c
 28153  01A2A0  EC85  F0D6         	call	_UART2_SetRxInterruptHandler	;wreg free
 28154                           
 28155                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 28156  01A2A4  0139               	movlb	57	; () banked
 28157  01A2A6  9796               	bcf	150,3,b	;volatile
 28158                           
 28159                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 28160  01A2A8  0EEC               	movlw	low _UART2_Transmit_ISR
 28161  01A2AA  6EE6               	movwf	postinc1,c
 28162  01A2AC  0EAB               	movlw	high _UART2_Transmit_ISR
 28163  01A2AE  6EE6               	movwf	postinc1,c
 28164  01A2B0  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 28165  01A2B2  6EE6               	movwf	postinc1,c
 28166  01A2B4  EC71  F0D6         	call	_UART2_SetTxInterruptHandler	;wreg free
 28167                           
 28168                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 28169  01A2B8  013D               	movlb	61	; () banked
 28170  01A2BA  6BD4               	clrf	212,b	;volatile
 28171                           
 28172                           ; BSR set to: 61
 28173                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 28174  01A2BC  6BD6               	clrf	214,b	;volatile
 28175                           
 28176                           ; BSR set to: 61
 28177                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 28178  01A2BE  6BD8               	clrf	216,b	;volatile
 28179                           
 28180                           ; BSR set to: 61
 28181                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 28182  01A2C0  0EB0               	movlw	176
 28183  01A2C2  6FDA               	movwf	218,b	;volatile
 28184                           
 28185                           ; BSR set to: 61
 28186                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 28187  01A2C4  0E80               	movlw	128
 28188  01A2C6  6FDB               	movwf	219,b	;volatile
 28189                           
 28190                           ; BSR set to: 61
 28191                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 28192  01A2C8  6BDC               	clrf	220,b	;volatile
 28193                           
 28194                           ; BSR set to: 61
 28195                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 28196  01A2CA  0E82               	movlw	130
 28197  01A2CC  6FDD               	movwf	221,b	;volatile
 28198                           
 28199                           ; BSR set to: 61
 28200                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 28201  01A2CE  0E06               	movlw	6
 28202  01A2D0  6FDE               	movwf	222,b	;volatile
 28203                           
 28204                           ; BSR set to: 61
 28205                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 28206  01A2D2  6BDF               	clrf	223,b	;volatile
 28207                           
 28208                           ; BSR set to: 61
 28209                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 28210  01A2D4  6BE0               	clrf	224,b	;volatile
 28211                           
 28212                           ; BSR set to: 61
 28213                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 28214  01A2D6  6BE1               	clrf	225,b	;volatile
 28215                           
 28216                           ; BSR set to: 61
 28217                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 28218  01A2D8  6BE2               	clrf	226,b	;volatile
 28219                           
 28220                           ; BSR set to: 61
 28221                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 28222  01A2DA  6A35               	clrf	_uart2TxHead^0,c	;volatile
 28223                           
 28224                           ; BSR set to: 61
 28225                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 28226  01A2DC  6A34               	clrf	_uart2TxTail^0,c	;volatile
 28227                           
 28228                           ; BSR set to: 61
 28229                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 28230  01A2DE  0E40               	movlw	64
 28231  01A2E0  6E33               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 28232                           
 28233                           ; BSR set to: 61
 28234                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 28235  01A2E2  6A32               	clrf	_uart2RxHead^0,c	;volatile
 28236                           
 28237                           ; BSR set to: 61
 28238                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 28239  01A2E4  6A31               	clrf	_uart2RxTail^0,c	;volatile
 28240                           
 28241                           ; BSR set to: 61
 28242                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 28243  01A2E6  6A30               	clrf	_uart2RxCount^0,c	;volatile
 28244                           
 28245                           ; BSR set to: 61
 28246                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 28247  01A2E8  0139               	movlb	57	; () banked
 28248  01A2EA  8596               	bsf	150,2,b	;volatile
 28249                           
 28250                           ; BSR set to: 57
 28251                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 28252  01A2EC  0012               	return		;funcret
 28253  01A2EE                     __end_of_UART2_Initialize:
 28254                           	opt callstack 0
 28255                           
 28256 ;; *************** function _UART2_SetTxInterruptHandler *****************
 28257 ;; Defined at:
 28258 ;;		line 252 in file "mcc_generated_files/uart2.c"
 28259 ;; Parameters:    Size  Location     Type
 28260 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28261 ;;		 -> UART2_Transmit_ISR(1), 
 28262 ;; Auto vars:     Size  Location     Type
 28263 ;;		None
 28264 ;; Return value:  Size  Location     Type
 28265 ;;                  1  [STACK] void 
 28266 ;; Registers used:
 28267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28268 ;; Tracked objects:
 28269 ;;		On entry : 3F/39
 28270 ;;		On exit  : 0/0
 28271 ;;		Unchanged: 0/0
 28272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28277 ;;Total ram usage:        0 bytes
 28278 ;; Hardware stack levels used:    1
 28279 ;; Hardware stack levels required when called:   15
 28280 ;; This function calls:
 28281 ;;		Nothing
 28282 ;; This function is called by:
 28283 ;;		_UART2_Initialize
 28284 ;; This function uses a reentrant model
 28285 ;;
 28286                           
 28287                           	psect	text109
 28288  01ACE2                     __ptext109:
 28289                           	opt callstack 0
 28290  01ACE2                     _UART2_SetTxInterruptHandler:
 28291                           	opt callstack 13
 28292                           
 28293                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 28294                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28295                           
 28296                           ; BSR set to: 57
 28297                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28298                           ;incstack = 0
 28299  01ACE2  50E1               	movf	fsr1l,w,c
 28300  01ACE4  0FFD               	addlw	-3
 28301  01ACE6  6ED9               	movwf	fsr2l,c
 28302  01ACE8  50E2               	movf	fsr1h,w,c
 28303  01ACEA  6EDA               	movwf	fsr2h,c
 28304  01ACEC  0EFF               	movlw	255
 28305  01ACEE  22DA               	addwfc	fsr2h,f,c
 28306  01ACF0  006F FF78  F0B4    	movff	postinc2,_UART2_TxInterruptHandler
 28307  01ACF6  006F FF78  F0B5    	movff	postinc2,_UART2_TxInterruptHandler+1
 28308  01ACFC  006F FF74  F0B6    	movff	postdec2,_UART2_TxInterruptHandler+2
 28309                           
 28310                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 28311  01AD02  52E5               	movf	postdec1,f,c
 28312  01AD04  52E5               	movf	postdec1,f,c
 28313  01AD06  52E5               	movf	postdec1,f,c
 28314  01AD08  0012               	return		;funcret
 28315  01AD0A                     __end_of_UART2_SetTxInterruptHandler:
 28316                           	opt callstack 0
 28317                           
 28318 ;; *************** function _UART2_SetRxInterruptHandler *****************
 28319 ;; Defined at:
 28320 ;;		line 248 in file "mcc_generated_files/uart2.c"
 28321 ;; Parameters:    Size  Location     Type
 28322 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28323 ;;		 -> UART2_Receive_ISR(1), 
 28324 ;; Auto vars:     Size  Location     Type
 28325 ;;		None
 28326 ;; Return value:  Size  Location     Type
 28327 ;;                  1  [STACK] void 
 28328 ;; Registers used:
 28329 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28330 ;; Tracked objects:
 28331 ;;		On entry : 3F/39
 28332 ;;		On exit  : 0/0
 28333 ;;		Unchanged: 0/0
 28334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28339 ;;Total ram usage:        0 bytes
 28340 ;; Hardware stack levels used:    1
 28341 ;; Hardware stack levels required when called:   15
 28342 ;; This function calls:
 28343 ;;		Nothing
 28344 ;; This function is called by:
 28345 ;;		_UART2_Initialize
 28346 ;; This function uses a reentrant model
 28347 ;;
 28348                           
 28349                           	psect	text110
 28350  01AD0A                     __ptext110:
 28351                           	opt callstack 0
 28352  01AD0A                     _UART2_SetRxInterruptHandler:
 28353                           	opt callstack 13
 28354                           
 28355                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 28356                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28357                           
 28358                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28359                           ;incstack = 0
 28360  01AD0A  50E1               	movf	fsr1l,w,c
 28361  01AD0C  0FFD               	addlw	-3
 28362  01AD0E  6ED9               	movwf	fsr2l,c
 28363  01AD10  50E2               	movf	fsr1h,w,c
 28364  01AD12  6EDA               	movwf	fsr2h,c
 28365  01AD14  0EFF               	movlw	255
 28366  01AD16  22DA               	addwfc	fsr2h,f,c
 28367  01AD18  006F FF78  F0B7    	movff	postinc2,_UART2_RxInterruptHandler
 28368  01AD1E  006F FF78  F0B8    	movff	postinc2,_UART2_RxInterruptHandler+1
 28369  01AD24  006F FF74  F0B9    	movff	postdec2,_UART2_RxInterruptHandler+2
 28370                           
 28371                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 28372  01AD2A  52E5               	movf	postdec1,f,c
 28373  01AD2C  52E5               	movf	postdec1,f,c
 28374  01AD2E  52E5               	movf	postdec1,f,c
 28375  01AD30  0012               	return		;funcret
 28376  01AD32                     __end_of_UART2_SetRxInterruptHandler:
 28377                           	opt callstack 0
 28378                           
 28379 ;; *************** function _UART1_Initialize *****************
 28380 ;; Defined at:
 28381 ;;		line 75 in file "mcc_generated_files/uart1.c"
 28382 ;; Parameters:    Size  Location     Type
 28383 ;;		None
 28384 ;; Auto vars:     Size  Location     Type
 28385 ;;		None
 28386 ;; Return value:  Size  Location     Type
 28387 ;;                  1  [STACK] void 
 28388 ;; Registers used:
 28389 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 28390 ;; Tracked objects:
 28391 ;;		On entry : 0/39
 28392 ;;		On exit  : 3F/39
 28393 ;;		Unchanged: 0/0
 28394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28399 ;;Total ram usage:        0 bytes
 28400 ;; Hardware stack levels used:    1
 28401 ;; Hardware stack levels required when called:   16
 28402 ;; This function calls:
 28403 ;;		_UART1_SetRxInterruptHandler
 28404 ;; This function is called by:
 28405 ;;		_SYSTEM_Initialize
 28406 ;; This function uses a reentrant model
 28407 ;;
 28408                           
 28409                           	psect	text111
 28410  01A660                     __ptext111:
 28411                           	opt callstack 0
 28412  01A660                     _UART1_Initialize:
 28413                           	opt callstack 13
 28414                           
 28415                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 28416                           
 28417                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28418                           ;incstack = 0
 28419  01A660  0139               	movlb	57	; () banked
 28420  01A662  9793               	bcf	147,3,b	;volatile
 28421                           
 28422                           ; BSR set to: 57
 28423                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 28424  01A664  0EDC               	movlw	low _UART1_Receive_ISR
 28425  01A666  6EE6               	movwf	postinc1,c
 28426  01A668  0EB0               	movlw	high _UART1_Receive_ISR
 28427  01A66A  6EE6               	movwf	postinc1,c
 28428  01A66C  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 28429  01A66E  6EE6               	movwf	postinc1,c
 28430  01A670  EC99  F0D6         	call	_UART1_SetRxInterruptHandler	;wreg free
 28431                           
 28432                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 28433  01A674  013D               	movlb	61	; () banked
 28434  01A676  6BEC               	clrf	236,b	;volatile
 28435                           
 28436                           ; BSR set to: 61
 28437                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 28438  01A678  6BED               	clrf	237,b	;volatile
 28439                           
 28440                           ; BSR set to: 61
 28441                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 28442  01A67A  6BEE               	clrf	238,b	;volatile
 28443                           
 28444                           ; BSR set to: 61
 28445                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 28446  01A67C  6BEF               	clrf	239,b	;volatile
 28447                           
 28448                           ; BSR set to: 61
 28449                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 28450  01A67E  6BF0               	clrf	240,b	;volatile
 28451                           
 28452                           ; BSR set to: 61
 28453                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 28454  01A680  6BF1               	clrf	241,b	;volatile
 28455                           
 28456                           ; BSR set to: 61
 28457                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 28458  01A682  0EB0               	movlw	176
 28459  01A684  6FF2               	movwf	242,b	;volatile
 28460                           
 28461                           ; BSR set to: 61
 28462                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 28463  01A686  0E80               	movlw	128
 28464  01A688  6FF3               	movwf	243,b	;volatile
 28465                           
 28466                           ; BSR set to: 61
 28467                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 28468  01A68A  6BF4               	clrf	244,b	;volatile
 28469                           
 28470                           ; BSR set to: 61
 28471                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 28472  01A68C  0E8A               	movlw	138
 28473  01A68E  6FF5               	movwf	245,b	;volatile
 28474                           
 28475                           ; BSR set to: 61
 28476                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 28477  01A690  6BF6               	clrf	246,b	;volatile
 28478                           
 28479                           ; BSR set to: 61
 28480                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 28481  01A692  6BF7               	clrf	247,b	;volatile
 28482                           
 28483                           ; BSR set to: 61
 28484                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 28485  01A694  6BF8               	clrf	248,b	;volatile
 28486                           
 28487                           ; BSR set to: 61
 28488                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 28489  01A696  6BF9               	clrf	249,b	;volatile
 28490                           
 28491                           ; BSR set to: 61
 28492                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 28493  01A698  6BFA               	clrf	250,b	;volatile
 28494                           
 28495                           ; BSR set to: 61
 28496                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 28497  01A69A  6A38               	clrf	_uart1RxHead^0,c	;volatile
 28498                           
 28499                           ; BSR set to: 61
 28500                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 28501  01A69C  6A37               	clrf	_uart1RxTail^0,c	;volatile
 28502                           
 28503                           ; BSR set to: 61
 28504                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 28505  01A69E  6A36               	clrf	_uart1RxCount^0,c	;volatile
 28506                           
 28507                           ; BSR set to: 61
 28508                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 28509  01A6A0  0139               	movlb	57	; () banked
 28510  01A6A2  8793               	bsf	147,3,b	;volatile
 28511                           
 28512                           ; BSR set to: 57
 28513                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 28514  01A6A4  0012               	return		;funcret
 28515  01A6A6                     __end_of_UART1_Initialize:
 28516                           	opt callstack 0
 28517                           
 28518 ;; *************** function _UART1_SetRxInterruptHandler *****************
 28519 ;; Defined at:
 28520 ;;		line 207 in file "mcc_generated_files/uart1.c"
 28521 ;; Parameters:    Size  Location     Type
 28522 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28523 ;;		 -> UART1_Receive_ISR(1), 
 28524 ;; Auto vars:     Size  Location     Type
 28525 ;;		None
 28526 ;; Return value:  Size  Location     Type
 28527 ;;                  1  [STACK] void 
 28528 ;; Registers used:
 28529 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28530 ;; Tracked objects:
 28531 ;;		On entry : 3F/39
 28532 ;;		On exit  : 0/0
 28533 ;;		Unchanged: 0/0
 28534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28539 ;;Total ram usage:        0 bytes
 28540 ;; Hardware stack levels used:    1
 28541 ;; Hardware stack levels required when called:   15
 28542 ;; This function calls:
 28543 ;;		Nothing
 28544 ;; This function is called by:
 28545 ;;		_UART1_Initialize
 28546 ;; This function uses a reentrant model
 28547 ;;
 28548                           
 28549                           	psect	text112
 28550  01AD32                     __ptext112:
 28551                           	opt callstack 0
 28552  01AD32                     _UART1_SetRxInterruptHandler:
 28553                           	opt callstack 13
 28554                           
 28555                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 28556                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28557                           
 28558                           ; BSR set to: 57
 28559                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28560                           ;incstack = 0
 28561  01AD32  50E1               	movf	fsr1l,w,c
 28562  01AD34  0FFD               	addlw	-3
 28563  01AD36  6ED9               	movwf	fsr2l,c
 28564  01AD38  50E2               	movf	fsr1h,w,c
 28565  01AD3A  6EDA               	movwf	fsr2h,c
 28566  01AD3C  0EFF               	movlw	255
 28567  01AD3E  22DA               	addwfc	fsr2h,f,c
 28568  01AD40  006F FF78  F0B1    	movff	postinc2,_UART1_RxInterruptHandler
 28569  01AD46  006F FF78  F0B2    	movff	postinc2,_UART1_RxInterruptHandler+1
 28570  01AD4C  006F FF74  F0B3    	movff	postdec2,_UART1_RxInterruptHandler+2
 28571                           
 28572                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 28573  01AD52  52E5               	movf	postdec1,f,c
 28574  01AD54  52E5               	movf	postdec1,f,c
 28575  01AD56  52E5               	movf	postdec1,f,c
 28576  01AD58  0012               	return		;funcret
 28577  01AD5A                     __end_of_UART1_SetRxInterruptHandler:
 28578                           	opt callstack 0
 28579                           
 28580 ;; *************** function _TMR6_Initialize *****************
 28581 ;; Defined at:
 28582 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 28583 ;; Parameters:    Size  Location     Type
 28584 ;;		None
 28585 ;; Auto vars:     Size  Location     Type
 28586 ;;		None
 28587 ;; Return value:  Size  Location     Type
 28588 ;;                  1  [STACK] void 
 28589 ;; Registers used:
 28590 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 28591 ;; Tracked objects:
 28592 ;;		On entry : 3F/39
 28593 ;;		On exit  : 0/0
 28594 ;;		Unchanged: 0/0
 28595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28600 ;;Total ram usage:        0 bytes
 28601 ;; Hardware stack levels used:    1
 28602 ;; Hardware stack levels required when called:   16
 28603 ;; This function calls:
 28604 ;;		_TMR6_SetInterruptHandler
 28605 ;; This function is called by:
 28606 ;;		_SYSTEM_Initialize
 28607 ;; This function uses a reentrant model
 28608 ;;
 28609                           
 28610                           	psect	text113
 28611  01AC18                     __ptext113:
 28612                           	opt callstack 0
 28613  01AC18                     _TMR6_Initialize:
 28614                           	opt callstack 13
 28615                           
 28616                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 28617                           
 28618                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28619                           ;incstack = 0
 28620  01AC18  0E01               	movlw	1
 28621  01AC1A  6E96               	movwf	150,c	;volatile
 28622                           
 28623                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 28624  01AC1C  6A95               	clrf	149,c	;volatile
 28625                           
 28626                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 28627  01AC1E  6A97               	clrf	151,c	;volatile
 28628                           
 28629                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 28630  01AC20  0E7C               	movlw	124
 28631  01AC22  6E93               	movwf	147,c	;volatile
 28632                           
 28633                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 28634  01AC24  6A92               	clrf	146,c	;volatile
 28635                           
 28636                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 28637  01AC26  0139               	movlb	57	; () banked
 28638  01AC28  91A9               	bcf	169,0,b	;volatile
 28639                           
 28640                           ; BSR set to: 57
 28641                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 28642  01AC2A  8199               	bsf	153,0,b	;volatile
 28643                           
 28644                           ; BSR set to: 57
 28645                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 28646  01AC2C  0EF4               	movlw	low _TMR6_DefaultInterruptHandler
 28647  01AC2E  6EE6               	movwf	postinc1,c
 28648  01AC30  0EA4               	movlw	high _TMR6_DefaultInterruptHandler
 28649  01AC32  6EE6               	movwf	postinc1,c
 28650  01AC34  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 28651  01AC36  6EE6               	movwf	postinc1,c
 28652  01AC38  ECAD  F0D6         	call	_TMR6_SetInterruptHandler	;wreg free
 28653                           
 28654                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 28655  01AC3C  0EE0               	movlw	224
 28656  01AC3E  6E94               	movwf	148,c	;volatile
 28657                           
 28658                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 28659  01AC40  0012               	return		;funcret
 28660  01AC42                     __end_of_TMR6_Initialize:
 28661                           	opt callstack 0
 28662                           
 28663 ;; *************** function _TMR6_SetInterruptHandler *****************
 28664 ;; Defined at:
 28665 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 28666 ;; Parameters:    Size  Location     Type
 28667 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28668 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 28669 ;; Auto vars:     Size  Location     Type
 28670 ;;		None
 28671 ;; Return value:  Size  Location     Type
 28672 ;;                  1  [STACK] void 
 28673 ;; Registers used:
 28674 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28675 ;; Tracked objects:
 28676 ;;		On entry : 3F/39
 28677 ;;		On exit  : 0/0
 28678 ;;		Unchanged: 0/0
 28679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28684 ;;Total ram usage:        0 bytes
 28685 ;; Hardware stack levels used:    1
 28686 ;; Hardware stack levels required when called:   15
 28687 ;; This function calls:
 28688 ;;		Nothing
 28689 ;; This function is called by:
 28690 ;;		_TMR6_Initialize
 28691 ;; This function uses a reentrant model
 28692 ;;
 28693                           
 28694                           	psect	text114
 28695  01AD5A                     __ptext114:
 28696                           	opt callstack 0
 28697  01AD5A                     _TMR6_SetInterruptHandler:
 28698                           	opt callstack 13
 28699                           
 28700                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 28701                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28702                           
 28703                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28704                           ;incstack = 0
 28705  01AD5A  50E1               	movf	fsr1l,w,c
 28706  01AD5C  0FFD               	addlw	-3
 28707  01AD5E  6ED9               	movwf	fsr2l,c
 28708  01AD60  50E2               	movf	fsr1h,w,c
 28709  01AD62  6EDA               	movwf	fsr2h,c
 28710  01AD64  0EFF               	movlw	255
 28711  01AD66  22DA               	addwfc	fsr2h,f,c
 28712  01AD68  006F FF78  F0A8    	movff	postinc2,_TMR6_InterruptHandler
 28713  01AD6E  006F FF78  F0A9    	movff	postinc2,_TMR6_InterruptHandler+1
 28714  01AD74  006F FF74  F0AA    	movff	postdec2,_TMR6_InterruptHandler+2
 28715                           
 28716                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 28717  01AD7A  52E5               	movf	postdec1,f,c
 28718  01AD7C  52E5               	movf	postdec1,f,c
 28719  01AD7E  52E5               	movf	postdec1,f,c
 28720  01AD80  0012               	return		;funcret
 28721  01AD82                     __end_of_TMR6_SetInterruptHandler:
 28722                           	opt callstack 0
 28723                           
 28724 ;; *************** function _TMR5_Initialize *****************
 28725 ;; Defined at:
 28726 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 28727 ;; Parameters:    Size  Location     Type
 28728 ;;		None
 28729 ;; Auto vars:     Size  Location     Type
 28730 ;;		None
 28731 ;; Return value:  Size  Location     Type
 28732 ;;                  1  [STACK] void 
 28733 ;; Registers used:
 28734 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 28735 ;; Tracked objects:
 28736 ;;		On entry : 0/39
 28737 ;;		On exit  : 0/0
 28738 ;;		Unchanged: 0/0
 28739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28744 ;;Total ram usage:        0 bytes
 28745 ;; Hardware stack levels used:    1
 28746 ;; Hardware stack levels required when called:   16
 28747 ;; This function calls:
 28748 ;;		_TMR5_SetInterruptHandler
 28749 ;; This function is called by:
 28750 ;;		_SYSTEM_Initialize
 28751 ;; This function uses a reentrant model
 28752 ;;
 28753                           
 28754                           	psect	text115
 28755  01A6A6                     __ptext115:
 28756                           	opt callstack 0
 28757  01A6A6                     _TMR5_Initialize:
 28758                           	opt callstack 13
 28759                           
 28760                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 28761                           
 28762                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28763                           ;incstack = 0
 28764  01A6A6  6A9B               	clrf	155,c	;volatile
 28765                           
 28766                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 28767  01A6A8  6A9C               	clrf	156,c	;volatile
 28768                           
 28769                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 28770  01A6AA  0E01               	movlw	1
 28771  01A6AC  6E9D               	movwf	157,c	;volatile
 28772                           
 28773                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 28774  01A6AE  0E63               	movlw	99
 28775  01A6B0  6E99               	movwf	153,c	;volatile
 28776                           
 28777                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 28778  01A6B2  0EC0               	movlw	192
 28779  01A6B4  6E98               	movwf	152,c	;volatile
 28780                           
 28781                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 28782  01A6B6  5098               	movf	152,w,c	;volatile
 28783  01A6B8  006F FE64  F001    	movff	16281,btemp	;volatile
 28784  01A6BE  6A02               	clrf	(btemp+1)^0,c
 28785  01A6C0  0060  F004  F002   	movff	btemp,btemp+1
 28786  01A6C6  6A01               	clrf	btemp^0,c
 28787  01A6C8  1001               	iorwf	btemp^0,w,c
 28788  01A6CA  6E2B               	movwf	_timer5ReloadVal^0,c	;volatile
 28789  01A6CC  5002               	movf	(btemp+1)^0,w,c
 28790  01A6CE  6E2C               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 28791                           
 28792                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 28793  01A6D0  0139               	movlb	57	; () banked
 28794  01A6D2  9DA8               	bcf	168,6,b	;volatile
 28795                           
 28796                           ; BSR set to: 57
 28797                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 28798  01A6D4  8D98               	bsf	152,6,b	;volatile
 28799                           
 28800                           ; BSR set to: 57
 28801                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 28802  01A6D6  0E72               	movlw	low _TMR5_DefaultInterruptHandler
 28803  01A6D8  6EE6               	movwf	postinc1,c
 28804  01A6DA  0EAA               	movlw	high _TMR5_DefaultInterruptHandler
 28805  01A6DC  6EE6               	movwf	postinc1,c
 28806  01A6DE  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 28807  01A6E0  6EE6               	movwf	postinc1,c
 28808  01A6E2  ECC1  F0D6         	call	_TMR5_SetInterruptHandler	;wreg free
 28809                           
 28810                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 28811  01A6E6  0E31               	movlw	49
 28812  01A6E8  6E9A               	movwf	154,c	;volatile
 28813                           
 28814                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 28815  01A6EA  0012               	return		;funcret
 28816  01A6EC                     __end_of_TMR5_Initialize:
 28817                           	opt callstack 0
 28818                           
 28819 ;; *************** function _TMR5_SetInterruptHandler *****************
 28820 ;; Defined at:
 28821 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 28822 ;; Parameters:    Size  Location     Type
 28823 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28824 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 28825 ;; Auto vars:     Size  Location     Type
 28826 ;;		None
 28827 ;; Return value:  Size  Location     Type
 28828 ;;                  1  [STACK] void 
 28829 ;; Registers used:
 28830 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28831 ;; Tracked objects:
 28832 ;;		On entry : 3F/39
 28833 ;;		On exit  : 0/0
 28834 ;;		Unchanged: 0/0
 28835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28840 ;;Total ram usage:        0 bytes
 28841 ;; Hardware stack levels used:    1
 28842 ;; Hardware stack levels required when called:   15
 28843 ;; This function calls:
 28844 ;;		Nothing
 28845 ;; This function is called by:
 28846 ;;		_TMR5_Initialize
 28847 ;; This function uses a reentrant model
 28848 ;;
 28849                           
 28850                           	psect	text116
 28851  01AD82                     __ptext116:
 28852                           	opt callstack 0
 28853  01AD82                     _TMR5_SetInterruptHandler:
 28854                           	opt callstack 13
 28855                           
 28856                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 28857                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28858                           
 28859                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28860                           ;incstack = 0
 28861  01AD82  50E1               	movf	fsr1l,w,c
 28862  01AD84  0FFD               	addlw	-3
 28863  01AD86  6ED9               	movwf	fsr2l,c
 28864  01AD88  50E2               	movf	fsr1h,w,c
 28865  01AD8A  6EDA               	movwf	fsr2h,c
 28866  01AD8C  0EFF               	movlw	255
 28867  01AD8E  22DA               	addwfc	fsr2h,f,c
 28868  01AD90  006F FF78  F0A5    	movff	postinc2,_TMR5_InterruptHandler
 28869  01AD96  006F FF78  F0A6    	movff	postinc2,_TMR5_InterruptHandler+1
 28870  01AD9C  006F FF74  F0A7    	movff	postdec2,_TMR5_InterruptHandler+2
 28871                           
 28872                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 28873  01ADA2  52E5               	movf	postdec1,f,c
 28874  01ADA4  52E5               	movf	postdec1,f,c
 28875  01ADA6  52E5               	movf	postdec1,f,c
 28876  01ADA8  0012               	return		;funcret
 28877  01ADAA                     __end_of_TMR5_SetInterruptHandler:
 28878                           	opt callstack 0
 28879                           
 28880 ;; *************** function _TMR3_Initialize *****************
 28881 ;; Defined at:
 28882 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 28883 ;; Parameters:    Size  Location     Type
 28884 ;;		None
 28885 ;; Auto vars:     Size  Location     Type
 28886 ;;		None
 28887 ;; Return value:  Size  Location     Type
 28888 ;;                  1  [STACK] void 
 28889 ;; Registers used:
 28890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 28891 ;; Tracked objects:
 28892 ;;		On entry : 0/39
 28893 ;;		On exit  : 0/0
 28894 ;;		Unchanged: 0/0
 28895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28900 ;;Total ram usage:        0 bytes
 28901 ;; Hardware stack levels used:    1
 28902 ;; Hardware stack levels required when called:   16
 28903 ;; This function calls:
 28904 ;;		_TMR3_SetInterruptHandler
 28905 ;; This function is called by:
 28906 ;;		_SYSTEM_Initialize
 28907 ;; This function uses a reentrant model
 28908 ;;
 28909                           
 28910                           	psect	text117
 28911  01A6EC                     __ptext117:
 28912                           	opt callstack 0
 28913  01A6EC                     _TMR3_Initialize:
 28914                           	opt callstack 13
 28915                           
 28916                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 28917                           
 28918                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28919                           ;incstack = 0
 28920  01A6EC  6AA7               	clrf	167,c	;volatile
 28921                           
 28922                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 28923  01A6EE  6AA8               	clrf	168,c	;volatile
 28924                           
 28925                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 28926  01A6F0  0E01               	movlw	1
 28927  01A6F2  6EA9               	movwf	169,c	;volatile
 28928                           
 28929                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 28930  01A6F4  0E3C               	movlw	60
 28931  01A6F6  6EA5               	movwf	165,c	;volatile
 28932                           
 28933                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 28934  01A6F8  0EB0               	movlw	176
 28935  01A6FA  6EA4               	movwf	164,c	;volatile
 28936                           
 28937                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 28938  01A6FC  50A4               	movf	164,w,c	;volatile
 28939  01A6FE  006F FE94  F001    	movff	16293,btemp	;volatile
 28940  01A704  6A02               	clrf	(btemp+1)^0,c
 28941  01A706  0060  F004  F002   	movff	btemp,btemp+1
 28942  01A70C  6A01               	clrf	btemp^0,c
 28943  01A70E  1001               	iorwf	btemp^0,w,c
 28944  01A710  6E27               	movwf	_timer3ReloadVal^0,c	;volatile
 28945  01A712  5002               	movf	(btemp+1)^0,w,c
 28946  01A714  6E28               	movwf	(_timer3ReloadVal+1)^0,c	;volatile
 28947                           
 28948                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 28949  01A716  0139               	movlb	57	; () banked
 28950  01A718  9DA6               	bcf	166,6,b	;volatile
 28951                           
 28952                           ; BSR set to: 57
 28953                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 28954  01A71A  8D96               	bsf	150,6,b	;volatile
 28955                           
 28956                           ; BSR set to: 57
 28957                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 28958  01A71C  0EB4               	movlw	low _TMR3_DefaultInterruptHandler
 28959  01A71E  6EE6               	movwf	postinc1,c
 28960  01A720  0EB2               	movlw	high _TMR3_DefaultInterruptHandler
 28961  01A722  6EE6               	movwf	postinc1,c
 28962  01A724  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 28963  01A726  6EE6               	movwf	postinc1,c
 28964  01A728  ECD5  F0D6         	call	_TMR3_SetInterruptHandler	;wreg free
 28965                           
 28966                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 28967  01A72C  0E31               	movlw	49
 28968  01A72E  6EA6               	movwf	166,c	;volatile
 28969                           
 28970                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 28971  01A730  0012               	return		;funcret
 28972  01A732                     __end_of_TMR3_Initialize:
 28973                           	opt callstack 0
 28974                           
 28975 ;; *************** function _TMR3_SetInterruptHandler *****************
 28976 ;; Defined at:
 28977 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 28978 ;; Parameters:    Size  Location     Type
 28979 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28980 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 28981 ;; Auto vars:     Size  Location     Type
 28982 ;;		None
 28983 ;; Return value:  Size  Location     Type
 28984 ;;                  1  [STACK] void 
 28985 ;; Registers used:
 28986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28987 ;; Tracked objects:
 28988 ;;		On entry : 0/1
 28989 ;;		On exit  : 0/0
 28990 ;;		Unchanged: 0/0
 28991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28996 ;;Total ram usage:        0 bytes
 28997 ;; Hardware stack levels used:    1
 28998 ;; Hardware stack levels required when called:   15
 28999 ;; This function calls:
 29000 ;;		Nothing
 29001 ;; This function is called by:
 29002 ;;		_TMR3_Initialize
 29003 ;;		_init_bsoc
 29004 ;; This function uses a reentrant model
 29005 ;;
 29006                           
 29007                           	psect	text118
 29008  01ADAA                     __ptext118:
 29009                           	opt callstack 0
 29010  01ADAA                     _TMR3_SetInterruptHandler:
 29011                           	opt callstack 14
 29012                           
 29013                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 29014                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29015                           
 29016                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29017                           ;incstack = 0
 29018  01ADAA  50E1               	movf	fsr1l,w,c
 29019  01ADAC  0FFD               	addlw	-3
 29020  01ADAE  6ED9               	movwf	fsr2l,c
 29021  01ADB0  50E2               	movf	fsr1h,w,c
 29022  01ADB2  6EDA               	movwf	fsr2h,c
 29023  01ADB4  0EFF               	movlw	255
 29024  01ADB6  22DA               	addwfc	fsr2h,f,c
 29025  01ADB8  006F FF78  F0A2    	movff	postinc2,_TMR3_InterruptHandler
 29026  01ADBE  006F FF78  F0A3    	movff	postinc2,_TMR3_InterruptHandler+1
 29027  01ADC4  006F FF74  F0A4    	movff	postdec2,_TMR3_InterruptHandler+2
 29028                           
 29029                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29030  01ADCA  52E5               	movf	postdec1,f,c
 29031  01ADCC  52E5               	movf	postdec1,f,c
 29032  01ADCE  52E5               	movf	postdec1,f,c
 29033  01ADD0  0012               	return		;funcret
 29034  01ADD2                     __end_of_TMR3_SetInterruptHandler:
 29035                           	opt callstack 0
 29036                           
 29037 ;; *************** function _TMR2_Initialize *****************
 29038 ;; Defined at:
 29039 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 29040 ;; Parameters:    Size  Location     Type
 29041 ;;		None
 29042 ;; Auto vars:     Size  Location     Type
 29043 ;;		None
 29044 ;; Return value:  Size  Location     Type
 29045 ;;                  1  [STACK] void 
 29046 ;; Registers used:
 29047 ;;		wreg, status,2
 29048 ;; Tracked objects:
 29049 ;;		On entry : 3F/3F
 29050 ;;		On exit  : 3F/39
 29051 ;;		Unchanged: 0/0
 29052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29057 ;;Total ram usage:        0 bytes
 29058 ;; Hardware stack levels used:    1
 29059 ;; Hardware stack levels required when called:   15
 29060 ;; This function calls:
 29061 ;;		Nothing
 29062 ;; This function is called by:
 29063 ;;		_SYSTEM_Initialize
 29064 ;; This function uses a reentrant model
 29065 ;;
 29066                           
 29067                           	psect	text119
 29068  01B146                     __ptext119:
 29069                           	opt callstack 0
 29070  01B146                     _TMR2_Initialize:
 29071                           	opt callstack 14
 29072                           
 29073                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 29074                           
 29075                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29076                           ;incstack = 0
 29077  01B146  0E01               	movlw	1
 29078  01B148  6EAE               	movwf	174,c	;volatile
 29079                           
 29080                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 29081  01B14A  6AAD               	clrf	173,c	;volatile
 29082                           
 29083                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 29084  01B14C  6AAF               	clrf	175,c	;volatile
 29085                           
 29086                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 29087  01B14E  0E63               	movlw	99
 29088  01B150  6EAB               	movwf	171,c	;volatile
 29089                           
 29090                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 29091  01B152  6AAA               	clrf	170,c	;volatile
 29092                           
 29093                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 29094  01B154  0139               	movlb	57	; () banked
 29095  01B156  95A4               	bcf	164,2,b	;volatile
 29096                           
 29097                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 29098  01B158  0EC0               	movlw	192
 29099  01B15A  6EAC               	movwf	172,c	;volatile
 29100                           
 29101                           ; BSR set to: 57
 29102                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29103  01B15C  0012               	return		;funcret
 29104  01B15E                     __end_of_TMR2_Initialize:
 29105                           	opt callstack 0
 29106                           
 29107 ;; *************** function _SPI1_Initialize *****************
 29108 ;; Defined at:
 29109 ;;		line 64 in file "mcc_generated_files/spi1.c"
 29110 ;; Parameters:    Size  Location     Type
 29111 ;;		None
 29112 ;; Auto vars:     Size  Location     Type
 29113 ;;		None
 29114 ;; Return value:  Size  Location     Type
 29115 ;;                  1  [STACK] void 
 29116 ;; Registers used:
 29117 ;;		wreg, status,2
 29118 ;; Tracked objects:
 29119 ;;		On entry : 3F/39
 29120 ;;		On exit  : 3F/3D
 29121 ;;		Unchanged: 0/0
 29122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29127 ;;Total ram usage:        0 bytes
 29128 ;; Hardware stack levels used:    1
 29129 ;; Hardware stack levels required when called:   15
 29130 ;; This function calls:
 29131 ;;		Nothing
 29132 ;; This function is called by:
 29133 ;;		_SYSTEM_Initialize
 29134 ;; This function uses a reentrant model
 29135 ;;
 29136                           
 29137                           	psect	text120
 29138  01B15E                     __ptext120:
 29139                           	opt callstack 0
 29140  01B15E                     _SPI1_Initialize:
 29141                           	opt callstack 14
 29142                           
 29143                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 29144                           
 29145                           ; BSR set to: 57
 29146                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29147                           ;incstack = 0
 29148  01B15E  0E40               	movlw	64
 29149  01B160  013D               	movlb	61	; () banked
 29150  01B162  6F15               	movwf	21,b	;volatile
 29151                           
 29152                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 29153  01B164  0E03               	movlw	3
 29154  01B166  6F16               	movwf	22,b	;volatile
 29155                           
 29156                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 29157  01B168  0E4F               	movlw	79
 29158  01B16A  6F19               	movwf	25,b	;volatile
 29159                           
 29160                           ; BSR set to: 61
 29161                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 29162  01B16C  6B1C               	clrf	28,b	;volatile
 29163                           
 29164                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 29165  01B16E  0E83               	movlw	131
 29166  01B170  6F14               	movwf	20,b	;volatile
 29167                           
 29168                           ; BSR set to: 61
 29169                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29170  01B172  0012               	return		;funcret
 29171  01B174                     __end_of_SPI1_Initialize:
 29172                           	opt callstack 0
 29173                           
 29174 ;; *************** function _PWM8_Initialize *****************
 29175 ;; Defined at:
 29176 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 29177 ;; Parameters:    Size  Location     Type
 29178 ;;		None
 29179 ;; Auto vars:     Size  Location     Type
 29180 ;;		None
 29181 ;; Return value:  Size  Location     Type
 29182 ;;                  1  [STACK] void 
 29183 ;; Registers used:
 29184 ;;		wreg, status,2
 29185 ;; Tracked objects:
 29186 ;;		On entry : 0/3E
 29187 ;;		On exit  : 3F/3F
 29188 ;;		Unchanged: 0/0
 29189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29194 ;;Total ram usage:        0 bytes
 29195 ;; Hardware stack levels used:    1
 29196 ;; Hardware stack levels required when called:   15
 29197 ;; This function calls:
 29198 ;;		Nothing
 29199 ;; This function is called by:
 29200 ;;		_SYSTEM_Initialize
 29201 ;; This function uses a reentrant model
 29202 ;;
 29203                           
 29204                           	psect	text121
 29205  01B174                     __ptext121:
 29206                           	opt callstack 0
 29207  01B174                     _PWM8_Initialize:
 29208                           	opt callstack 14
 29209                           
 29210                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 29211                           
 29212                           ; BSR set to: 61
 29213                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29214                           ;incstack = 0
 29215  01B174  0E80               	movlw	128
 29216  01B176  6E62               	movwf	98,c	;volatile
 29217                           
 29218                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 29219  01B178  6A61               	clrf	97,c	;volatile
 29220                           
 29221                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 29222  01B17A  0E40               	movlw	64
 29223  01B17C  6E60               	movwf	96,c	;volatile
 29224                           
 29225                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 29226  01B17E  013F               	movlb	63	; () banked
 29227  01B180  515F               	movf	95,w,b	;volatile
 29228  01B182  0B3F               	andlw	-193
 29229  01B184  0940               	iorlw	64
 29230  01B186  6F5F               	movwf	95,b	;volatile
 29231                           
 29232                           ; BSR set to: 63
 29233                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29234  01B188  0012               	return		;funcret
 29235  01B18A                     __end_of_PWM8_Initialize:
 29236                           	opt callstack 0
 29237                           
 29238 ;; *************** function _PMD_Initialize *****************
 29239 ;; Defined at:
 29240 ;;		line 90 in file "mcc_generated_files/mcc.c"
 29241 ;; Parameters:    Size  Location     Type
 29242 ;;		None
 29243 ;; Auto vars:     Size  Location     Type
 29244 ;;		None
 29245 ;; Return value:  Size  Location     Type
 29246 ;;                  1  [STACK] void 
 29247 ;; Registers used:
 29248 ;;		None
 29249 ;; Tracked objects:
 29250 ;;		On entry : 3F/39
 29251 ;;		On exit  : 3F/39
 29252 ;;		Unchanged: 0/0
 29253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29258 ;;Total ram usage:        0 bytes
 29259 ;; Hardware stack levels used:    1
 29260 ;; Hardware stack levels required when called:   15
 29261 ;; This function calls:
 29262 ;;		Nothing
 29263 ;; This function is called by:
 29264 ;;		_SYSTEM_Initialize
 29265 ;; This function uses a reentrant model
 29266 ;;
 29267                           
 29268                           	psect	text122
 29269  01B1A0                     __ptext122:
 29270                           	opt callstack 0
 29271  01B1A0                     _PMD_Initialize:
 29272                           	opt callstack 14
 29273                           
 29274                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 29275                           
 29276                           ; BSR set to: 63
 29277                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29278                           ;incstack = 0
 29279  01B1A0  0139               	movlb	57	; () banked
 29280  01B1A2  6BC0               	clrf	192,b	;volatile
 29281                           
 29282                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 29283  01B1A4  6BC1               	clrf	193,b	;volatile
 29284                           
 29285                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 29286  01B1A6  6BC2               	clrf	194,b	;volatile
 29287                           
 29288                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 29289  01B1A8  6BC3               	clrf	195,b	;volatile
 29290                           
 29291                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 29292  01B1AA  6BC4               	clrf	196,b	;volatile
 29293                           
 29294                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 29295  01B1AC  6BC5               	clrf	197,b	;volatile
 29296                           
 29297                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 29298  01B1AE  6BC6               	clrf	198,b	;volatile
 29299                           
 29300                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 29301  01B1B0  6BC7               	clrf	199,b	;volatile
 29302                           
 29303                           ; BSR set to: 57
 29304                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 29305  01B1B2  0012               	return		;funcret
 29306  01B1B4                     __end_of_PMD_Initialize:
 29307                           	opt callstack 0
 29308                           
 29309 ;; *************** function _PIN_MANAGER_Initialize *****************
 29310 ;; Defined at:
 29311 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 29312 ;; Parameters:    Size  Location     Type
 29313 ;;		None
 29314 ;; Auto vars:     Size  Location     Type
 29315 ;;		None
 29316 ;; Return value:  Size  Location     Type
 29317 ;;                  1  [STACK] void 
 29318 ;; Registers used:
 29319 ;;		wreg, status,2
 29320 ;; Tracked objects:
 29321 ;;		On entry : 3F/39
 29322 ;;		On exit  : 3F/3A
 29323 ;;		Unchanged: 0/0
 29324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29329 ;;Total ram usage:        0 bytes
 29330 ;; Hardware stack levels used:    1
 29331 ;; Hardware stack levels required when called:   15
 29332 ;; This function calls:
 29333 ;;		Nothing
 29334 ;; This function is called by:
 29335 ;;		_SYSTEM_Initialize
 29336 ;; This function uses a reentrant model
 29337 ;;
 29338                           
 29339                           	psect	text123
 29340  019C94                     __ptext123:
 29341                           	opt callstack 0
 29342  019C94                     _PIN_MANAGER_Initialize:
 29343                           	opt callstack 14
 29344                           
 29345                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 29346                           
 29347                           ; BSR set to: 57
 29348                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29349                           ;incstack = 0
 29350  019C94  0E07               	movlw	7
 29351  019C96  6EBE               	movwf	190,c	;volatile
 29352                           
 29353                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 29354  019C98  0E80               	movlw	128
 29355  019C9A  6EBD               	movwf	189,c	;volatile
 29356                           
 29357                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 29358  019C9C  6ABA               	clrf	186,c	;volatile
 29359                           
 29360                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 29361  019C9E  6ABF               	clrf	191,c	;volatile
 29362                           
 29363                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 29364  019CA0  6ABB               	clrf	187,c	;volatile
 29365                           
 29366                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 29367  019CA2  0E07               	movlw	7
 29368  019CA4  6EBC               	movwf	188,c	;volatile
 29369                           
 29370                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 29371  019CA6  6AC6               	clrf	198,c	;volatile
 29372                           
 29373                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 29374  019CA8  0E0F               	movlw	15
 29375  019CAA  6EC7               	movwf	199,c	;volatile
 29376                           
 29377                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 29378  019CAC  68C2               	setf	194,c	;volatile
 29379                           
 29380                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 29381  019CAE  0EBF               	movlw	191
 29382  019CB0  6EC3               	movwf	195,c	;volatile
 29383                           
 29384                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 29385  019CB2  0E90               	movlw	144
 29386  019CB4  6EC4               	movwf	196,c	;volatile
 29387                           
 29388                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 29389  019CB6  0E0C               	movlw	12
 29390  019CB8  6EC5               	movwf	197,c	;volatile
 29391                           
 29392                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 29393  019CBA  013A               	movlb	58	; () banked
 29394  019CBC  6B70               	clrf	112,b	;volatile
 29395                           
 29396                           ; BSR set to: 58
 29397                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 29398  019CBE  6B60               	clrf	96,b	;volatile
 29399                           
 29400                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 29401  019CC0  0E3C               	movlw	60
 29402  019CC2  6F50               	movwf	80,b	;volatile
 29403                           
 29404                           ; BSR set to: 58
 29405                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 29406  019CC4  6B80               	clrf	128,b	;volatile
 29407                           
 29408                           ; BSR set to: 58
 29409                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 29410  019CC6  6B90               	clrf	144,b	;volatile
 29411                           
 29412                           ; BSR set to: 58
 29413                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 29414  019CC8  6940               	setf	64,b	;volatile
 29415                           
 29416                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 29417  019CCA  0E0C               	movlw	12
 29418  019CCC  6F71               	movwf	113,b	;volatile
 29419                           
 29420                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 29421  019CCE  0E0F               	movlw	15
 29422  019CD0  6F91               	movwf	145,b	;volatile
 29423                           
 29424                           ; BSR set to: 58
 29425                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 29426  019CD2  6B81               	clrf	129,b	;volatile
 29427                           
 29428                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 29429  019CD4  0E83               	movlw	131
 29430  019CD6  6F51               	movwf	81,b	;volatile
 29431                           
 29432                           ; BSR set to: 58
 29433                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 29434  019CD8  6B41               	clrf	65,b	;volatile
 29435                           
 29436                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 29437  019CDA  0E97               	movlw	151
 29438  019CDC  6F61               	movwf	97,b	;volatile
 29439                           
 29440                           ; BSR set to: 58
 29441                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 29442  019CDE  6B82               	clrf	130,b	;volatile
 29443                           
 29444                           ; BSR set to: 58
 29445                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 29446  019CE0  6B92               	clrf	146,b	;volatile
 29447                           
 29448                           ; BSR set to: 58
 29449                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 29450  019CE2  6B42               	clrf	66,b	;volatile
 29451                           
 29452                           ; BSR set to: 58
 29453                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 29454  019CE4  6B52               	clrf	82,b	;volatile
 29455                           
 29456                           ; BSR set to: 58
 29457                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 29458  019CE6  6B62               	clrf	98,b	;volatile
 29459                           
 29460                           ; BSR set to: 58
 29461                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 29462  019CE8  6B72               	clrf	114,b	;volatile
 29463                           
 29464                           ; BSR set to: 58
 29465                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 29466  019CEA  6943               	setf	67,b	;volatile
 29467                           
 29468                           ; BSR set to: 58
 29469                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 29470  019CEC  6953               	setf	83,b	;volatile
 29471                           
 29472                           ; BSR set to: 58
 29473                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 29474  019CEE  6963               	setf	99,b	;volatile
 29475                           
 29476                           ; BSR set to: 58
 29477                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 29478  019CF0  6973               	setf	115,b	;volatile
 29479                           
 29480                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 29481  019CF2  0E07               	movlw	7
 29482  019CF4  6F83               	movwf	131,b	;volatile
 29483                           
 29484                           ; BSR set to: 58
 29485                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 29486  019CF6  6993               	setf	147,b	;volatile
 29487                           
 29488                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 29489  019CF8  0E0F               	movlw	15
 29490  019CFA  6FE8               	movwf	232,b	;volatile
 29491                           
 29492                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 29493  019CFC  0E13               	movlw	19
 29494  019CFE  6FDE               	movwf	222,b	;volatile
 29495                           
 29496                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 29497  019D00  0E16               	movlw	22
 29498  019D02  6F0E               	movwf	14,b	;volatile
 29499                           
 29500                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 29501  019D04  0E1E               	movlw	30
 29502  019D06  6F13               	movwf	19,b	;volatile
 29503                           
 29504                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 29505  019D08  0E08               	movlw	8
 29506  019D0A  6FC0               	movwf	192,b	;volatile
 29507                           
 29508                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 29509  019D0C  0E10               	movlw	16
 29510  019D0E  6F19               	movwf	25,b	;volatile
 29511                           
 29512                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 29513  019D10  0E09               	movlw	9
 29514  019D12  6FC1               	movwf	193,b	;volatile
 29515                           
 29516                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 29517  019D14  0E1F               	movlw	31
 29518  019D16  6F15               	movwf	21,b	;volatile
 29519                           
 29520                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 29521  019D18  0E13               	movlw	19
 29522  019D1A  6F16               	movwf	22,b	;volatile
 29523                           
 29524                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 29525  019D1C  0E17               	movlw	23
 29526  019D1E  6FE5               	movwf	229,b	;volatile
 29527                           
 29528                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 29529  019D20  0E14               	movlw	20
 29530  019D22  6FDF               	movwf	223,b	;volatile
 29531                           
 29532                           ; BSR set to: 58
 29533                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 29534  019D24  0012               	return		;funcret
 29535  019D26                     __end_of_PIN_MANAGER_Initialize:
 29536                           	opt callstack 0
 29537                           
 29538 ;; *************** function _OSCILLATOR_Initialize *****************
 29539 ;; Defined at:
 29540 ;;		line 72 in file "mcc_generated_files/mcc.c"
 29541 ;; Parameters:    Size  Location     Type
 29542 ;;		None
 29543 ;; Auto vars:     Size  Location     Type
 29544 ;;		None
 29545 ;; Return value:  Size  Location     Type
 29546 ;;                  1  [STACK] void 
 29547 ;; Registers used:
 29548 ;;		wreg, status,2
 29549 ;; Tracked objects:
 29550 ;;		On entry : 3F/3A
 29551 ;;		On exit  : 3F/39
 29552 ;;		Unchanged: 0/0
 29553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29558 ;;Total ram usage:        0 bytes
 29559 ;; Hardware stack levels used:    1
 29560 ;; Hardware stack levels required when called:   15
 29561 ;; This function calls:
 29562 ;;		Nothing
 29563 ;; This function is called by:
 29564 ;;		_SYSTEM_Initialize
 29565 ;; This function uses a reentrant model
 29566 ;;
 29567                           
 29568                           	psect	text124
 29569  01B18A                     __ptext124:
 29570                           	opt callstack 0
 29571  01B18A                     _OSCILLATOR_Initialize:
 29572                           	opt callstack 14
 29573                           
 29574                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 29575                           
 29576                           ; BSR set to: 58
 29577                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29578                           ;incstack = 0
 29579  01B18A  0E20               	movlw	32
 29580  01B18C  0139               	movlb	57	; () banked
 29581  01B18E  6FD9               	movwf	217,b	;volatile
 29582                           
 29583                           ; BSR set to: 57
 29584                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 29585  01B190  6BDB               	clrf	219,b	;volatile
 29586                           
 29587                           ; BSR set to: 57
 29588                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 29589  01B192  6BDD               	clrf	221,b	;volatile
 29590                           
 29591                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 29592  01B194  0E02               	movlw	2
 29593  01B196  6FDF               	movwf	223,b	;volatile
 29594                           
 29595                           ; BSR set to: 57
 29596                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 29597  01B198  6BDE               	clrf	222,b	;volatile
 29598  01B19A                     l169:
 29599                           
 29600                           ; BSR set to: 57
 29601                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 29602  01B19A  B1DC               	btfsc	220,0,b	;volatile
 29603  01B19C  0012               	return	
 29604  01B19E  D7FD               	goto	l169
 29605  01B1A0                     __end_of_OSCILLATOR_Initialize:
 29606                           	opt callstack 0
 29607                           
 29608 ;; *************** function _INTERRUPT_Initialize *****************
 29609 ;; Defined at:
 29610 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 29611 ;; Parameters:    Size  Location     Type
 29612 ;;		None
 29613 ;; Auto vars:     Size  Location     Type
 29614 ;;  state           1  [STACK] _Bool 
 29615 ;; Return value:  Size  Location     Type
 29616 ;;                  1  [STACK] void 
 29617 ;; Registers used:
 29618 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 29619 ;; Tracked objects:
 29620 ;;		On entry : 0/0
 29621 ;;		On exit  : 3F/39
 29622 ;;		Unchanged: 0/0
 29623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29628 ;;Total ram usage:        0 bytes
 29629 ;; Hardware stack levels used:    1
 29630 ;; Hardware stack levels required when called:   15
 29631 ;; This function calls:
 29632 ;;		Nothing
 29633 ;; This function is called by:
 29634 ;;		_SYSTEM_Initialize
 29635 ;; This function uses a reentrant model
 29636 ;;
 29637                           
 29638                           	psect	text125
 29639  01A102                     __ptext125:
 29640                           	opt callstack 0
 29641  01A102                     _INTERRUPT_Initialize:
 29642                           	opt callstack 0
 29643                           
 29644                           ; BSR set to: 57
 29645                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29646  01A102  52E6               	movf	postinc1,f,c
 29647                           
 29648                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 29649                           
 29650                           ;incstack = 0
 29651  01A104  8AD2               	bsf	210,5,c	;volatile
 29652                           
 29653                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 29654  01A106  AED2               	btfss	16338,7,c	;volatile
 29655  01A108  D003               	goto	u8930
 29656  01A10A  6A0C               	clrf	(btemp+11)^0,c
 29657  01A10C  2A0C               	incf	(btemp+11)^0,f,c
 29658  01A10E  D001               	goto	u8948
 29659  01A110                     u8930:
 29660  01A110  6A0C               	clrf	(btemp+11)^0,c
 29661  01A112                     u8948:
 29662                           
 29663                           ;stkvar	_state @ sp[(-1)+0]
 29664  01A112  0EFF               	movlw	-1
 29665  01A114  0060  F033  FFE3   	movff	btemp+11,plusw1
 29666                           
 29667                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 29668  01A11A  9ED2               	bcf	16338,7,c	;volatile
 29669                           
 29670                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 29671  01A11C  0E55               	movlw	85
 29672  01A11E  6ED4               	movwf	212,c	;volatile
 29673                           
 29674                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 29675  01A120  0EAA               	movlw	170
 29676  01A122  6ED4               	movwf	212,c	;volatile
 29677                           
 29678                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 29679  01A124  90D4               	bcf	212,0,c	;volatile
 29680                           
 29681                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 29682  01A126  0138               	movlb	56	; () banked
 29683  01A128  6B9F               	clrf	159,b	;volatile
 29684                           
 29685                           ; BSR set to: 56
 29686                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 29687  01A12A  6B9E               	clrf	158,b	;volatile
 29688                           
 29689                           ; BSR set to: 56
 29690                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 29691  01A12C  0E08               	movlw	8
 29692  01A12E  6F9D               	movwf	157,b	;volatile
 29693                           
 29694                           ; BSR set to: 56
 29695                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 29696  01A130  0E55               	movlw	85
 29697  01A132  6ED4               	movwf	212,c	;volatile
 29698                           
 29699                           ; BSR set to: 56
 29700                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 29701  01A134  0EAA               	movlw	170
 29702  01A136  6ED4               	movwf	212,c	;volatile
 29703                           
 29704                           ; BSR set to: 56
 29705                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 29706  01A138  80D4               	bsf	212,0,c	;volatile
 29707                           
 29708                           ; BSR set to: 56
 29709                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 29710                           ;stkvar	_state @ sp[(-1)+0]
 29711  01A13A  0EFF               	movlw	-1
 29712  01A13C  B0E3               	btfsc	plusw1,0,c
 29713  01A13E  D002               	bra	u8955
 29714  01A140  9ED2               	bcf	16338,7,c	;volatile
 29715  01A142  D001               	bra	u8956
 29716  01A144                     u8955:
 29717  01A144  8ED2               	bsf	16338,7,c	;volatile
 29718  01A146                     u8956:
 29719                           
 29720                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 29721  01A146  0139               	movlb	57	; () banked
 29722  01A148  8782               	bsf	130,3,b	;volatile
 29723                           
 29724                           ; BSR set to: 57
 29725                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 29726  01A14A  8382               	bsf	130,1,b	;volatile
 29727                           
 29728                           ; BSR set to: 57
 29729                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 29730  01A14C  8182               	bsf	130,0,b	;volatile
 29731                           
 29732                           ; BSR set to: 57
 29733                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 29734  01A14E  8582               	bsf	130,2,b	;volatile
 29735                           
 29736                           ; BSR set to: 57
 29737                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 29738  01A150  8786               	bsf	134,3,b	;volatile
 29739                           
 29740                           ; BSR set to: 57
 29741                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 29742  01A152  8586               	bsf	134,2,b	;volatile
 29743                           
 29744                           ; BSR set to: 57
 29745                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 29746  01A154  8783               	bsf	131,3,b	;volatile
 29747                           
 29748                           ; BSR set to: 57
 29749                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 29750  01A156  8181               	bsf	129,0,b	;volatile
 29751                           
 29752                           ; BSR set to: 57
 29753                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 29754  01A158  9185               	bcf	133,0,b	;volatile
 29755                           
 29756                           ; BSR set to: 57
 29757                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 29758  01A15A  8189               	bsf	137,0,b	;volatile
 29759                           
 29760                           ; BSR set to: 57
 29761                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 29762  01A15C  9D88               	bcf	136,6,b	;volatile
 29763                           
 29764                           ; BSR set to: 57
 29765                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR6bits.TMR3IP = 0;
 29766  01A15E  9D86               	bcf	134,6,b	;volatile
 29767                           
 29768                           ; BSR set to: 57
 29769                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 29770  01A160  8581               	bsf	129,2,b	;volatile
 29771                           
 29772                           ; BSR set to: 57
 29773                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 29774  01A162  8781               	bsf	129,3,b	;volatile
 29775                           
 29776                           ; BSR set to: 57
 29777                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 29778  01A164  52E5               	movf	postdec1,f,c
 29779  01A166  0012               	return		;funcret
 29780  01A168                     __end_of_INTERRUPT_Initialize:
 29781                           	opt callstack 0
 29782                           
 29783 ;; *************** function _FVR_Initialize *****************
 29784 ;; Defined at:
 29785 ;;		line 58 in file "mcc_generated_files/fvr.c"
 29786 ;; Parameters:    Size  Location     Type
 29787 ;;		None
 29788 ;; Auto vars:     Size  Location     Type
 29789 ;;		None
 29790 ;; Return value:  Size  Location     Type
 29791 ;;                  1  [STACK] void 
 29792 ;; Registers used:
 29793 ;;		wreg, status,2
 29794 ;; Tracked objects:
 29795 ;;		On entry : 3F/39
 29796 ;;		On exit  : 3F/3E
 29797 ;;		Unchanged: 0/0
 29798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29803 ;;Total ram usage:        0 bytes
 29804 ;; Hardware stack levels used:    1
 29805 ;; Hardware stack levels required when called:   15
 29806 ;; This function calls:
 29807 ;;		Nothing
 29808 ;; This function is called by:
 29809 ;;		_SYSTEM_Initialize
 29810 ;; This function uses a reentrant model
 29811 ;;
 29812                           
 29813                           	psect	text126
 29814  01B28A                     __ptext126:
 29815                           	opt callstack 0
 29816  01B28A                     _FVR_Initialize:
 29817                           	opt callstack 14
 29818                           
 29819                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 29820                           
 29821                           ; BSR set to: 57
 29822                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29823                           ;incstack = 0
 29824  01B28A  0EAF               	movlw	175
 29825  01B28C  013E               	movlb	62	; () banked
 29826  01B28E  6FC1               	movwf	193,b	;volatile
 29827                           
 29828                           ; BSR set to: 62
 29829                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 29830  01B290  0012               	return		;funcret
 29831  01B292                     __end_of_FVR_Initialize:
 29832                           	opt callstack 0
 29833                           
 29834 ;; *************** function _EXT_INT_Initialize *****************
 29835 ;; Defined at:
 29836 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 29837 ;; Parameters:    Size  Location     Type
 29838 ;;		None
 29839 ;; Auto vars:     Size  Location     Type
 29840 ;;		None
 29841 ;; Return value:  Size  Location     Type
 29842 ;;                  1  [STACK] void 
 29843 ;; Registers used:
 29844 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29845 ;; Tracked objects:
 29846 ;;		On entry : 3F/39
 29847 ;;		On exit  : 3F/39
 29848 ;;		Unchanged: 0/0
 29849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29854 ;;Total ram usage:        0 bytes
 29855 ;; Hardware stack levels used:    1
 29856 ;; Hardware stack levels required when called:   16
 29857 ;; This function calls:
 29858 ;;		_INT0_SetInterruptHandler
 29859 ;;		_INT1_SetInterruptHandler
 29860 ;; This function is called by:
 29861 ;;		_SYSTEM_Initialize
 29862 ;; This function uses a reentrant model
 29863 ;;
 29864                           
 29865                           	psect	text127
 29866  01AA3E                     __ptext127:
 29867                           	opt callstack 0
 29868  01AA3E                     _EXT_INT_Initialize:
 29869                           	opt callstack 13
 29870                           
 29871                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 29872                           
 29873                           ; BSR set to: 62
 29874                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29875                           ;incstack = 0
 29876  01AA3E  0139               	movlb	57	; () banked
 29877  01AA40  91A1               	bcf	161,0,b	;volatile
 29878                           
 29879                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 29880  01AA42  90D2               	bcf	210,0,c	;volatile
 29881                           
 29882                           ; BSR set to: 57
 29883                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 29884  01AA44  0EB6               	movlw	low _INT0_DefaultInterruptHandler
 29885  01AA46  6EE6               	movwf	postinc1,c
 29886  01AA48  0EB2               	movlw	high _INT0_DefaultInterruptHandler
 29887  01AA4A  6EE6               	movwf	postinc1,c
 29888  01AA4C  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 29889  01AA4E  6EE6               	movwf	postinc1,c
 29890  01AA50  ECFD  F0D6         	call	_INT0_SetInterruptHandler	;wreg free
 29891                           
 29892                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 29893  01AA54  0139               	movlb	57	; () banked
 29894  01AA56  8191               	bsf	145,0,b	;volatile
 29895                           
 29896                           ; BSR set to: 57
 29897                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 29898  01AA58  91A5               	bcf	165,0,b	;volatile
 29899                           
 29900                           ; BSR set to: 57
 29901                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 29902  01AA5A  92D2               	bcf	210,1,c	;volatile
 29903                           
 29904                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 29905  01AA5C  0EB2               	movlw	low _INT1_DefaultInterruptHandler
 29906  01AA5E  6EE6               	movwf	postinc1,c
 29907  01AA60  0EB2               	movlw	high _INT1_DefaultInterruptHandler
 29908  01AA62  6EE6               	movwf	postinc1,c
 29909  01AA64  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 29910  01AA66  6EE6               	movwf	postinc1,c
 29911  01AA68  ECE9  F0D6         	call	_INT1_SetInterruptHandler	;wreg free
 29912                           
 29913                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 29914  01AA6C  0139               	movlb	57	; () banked
 29915  01AA6E  8195               	bsf	149,0,b	;volatile
 29916                           
 29917                           ; BSR set to: 57
 29918                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 29919  01AA70  0012               	return		;funcret
 29920  01AA72                     __end_of_EXT_INT_Initialize:
 29921                           	opt callstack 0
 29922                           
 29923 ;; *************** function _INT1_SetInterruptHandler *****************
 29924 ;; Defined at:
 29925 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 29926 ;; Parameters:    Size  Location     Type
 29927 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29928 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 29929 ;; Auto vars:     Size  Location     Type
 29930 ;;		None
 29931 ;; Return value:  Size  Location     Type
 29932 ;;                  1  [STACK] void 
 29933 ;; Registers used:
 29934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29935 ;; Tracked objects:
 29936 ;;		On entry : 3F/39
 29937 ;;		On exit  : 0/0
 29938 ;;		Unchanged: 0/0
 29939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29944 ;;Total ram usage:        0 bytes
 29945 ;; Hardware stack levels used:    1
 29946 ;; Hardware stack levels required when called:   15
 29947 ;; This function calls:
 29948 ;;		Nothing
 29949 ;; This function is called by:
 29950 ;;		_EXT_INT_Initialize
 29951 ;;		_start_switch_handler
 29952 ;; This function uses a reentrant model
 29953 ;;
 29954                           
 29955                           	psect	text128
 29956  01ADD2                     __ptext128:
 29957                           	opt callstack 0
 29958  01ADD2                     _INT1_SetInterruptHandler:
 29959                           	opt callstack 14
 29960                           
 29961                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 29962                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29963                           
 29964                           ; BSR set to: 57
 29965                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29966                           ;incstack = 0
 29967  01ADD2  50E1               	movf	fsr1l,w,c
 29968  01ADD4  0FFD               	addlw	-3
 29969  01ADD6  6ED9               	movwf	fsr2l,c
 29970  01ADD8  50E2               	movf	fsr1h,w,c
 29971  01ADDA  6EDA               	movwf	fsr2h,c
 29972  01ADDC  0EFF               	movlw	255
 29973  01ADDE  22DA               	addwfc	fsr2h,f,c
 29974  01ADE0  006F FF78  F0BA    	movff	postinc2,_INT1_InterruptHandler
 29975  01ADE6  006F FF78  F0BB    	movff	postinc2,_INT1_InterruptHandler+1
 29976  01ADEC  006F FF74  F0BC    	movff	postdec2,_INT1_InterruptHandler+2
 29977                           
 29978                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29979  01ADF2  52E5               	movf	postdec1,f,c
 29980  01ADF4  52E5               	movf	postdec1,f,c
 29981  01ADF6  52E5               	movf	postdec1,f,c
 29982  01ADF8  0012               	return		;funcret
 29983  01ADFA                     __end_of_INT1_SetInterruptHandler:
 29984                           	opt callstack 0
 29985                           
 29986 ;; *************** function _INT0_SetInterruptHandler *****************
 29987 ;; Defined at:
 29988 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 29989 ;; Parameters:    Size  Location     Type
 29990 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29991 ;;		 -> INT0_DefaultInterruptHandler(1), 
 29992 ;; Auto vars:     Size  Location     Type
 29993 ;;		None
 29994 ;; Return value:  Size  Location     Type
 29995 ;;                  1  [STACK] void 
 29996 ;; Registers used:
 29997 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29998 ;; Tracked objects:
 29999 ;;		On entry : 3F/39
 30000 ;;		On exit  : 0/0
 30001 ;;		Unchanged: 0/0
 30002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30007 ;;Total ram usage:        0 bytes
 30008 ;; Hardware stack levels used:    1
 30009 ;; Hardware stack levels required when called:   15
 30010 ;; This function calls:
 30011 ;;		Nothing
 30012 ;; This function is called by:
 30013 ;;		_EXT_INT_Initialize
 30014 ;; This function uses a reentrant model
 30015 ;;
 30016                           
 30017                           	psect	text129
 30018  01ADFA                     __ptext129:
 30019                           	opt callstack 0
 30020  01ADFA                     _INT0_SetInterruptHandler:
 30021                           	opt callstack 13
 30022                           
 30023                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 30024                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30025                           
 30026                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30027                           ;incstack = 0
 30028  01ADFA  50E1               	movf	fsr1l,w,c
 30029  01ADFC  0FFD               	addlw	-3
 30030  01ADFE  6ED9               	movwf	fsr2l,c
 30031  01AE00  50E2               	movf	fsr1h,w,c
 30032  01AE02  6EDA               	movwf	fsr2h,c
 30033  01AE04  0EFF               	movlw	255
 30034  01AE06  22DA               	addwfc	fsr2h,f,c
 30035  01AE08  006F FF78  F0BD    	movff	postinc2,_INT0_InterruptHandler
 30036  01AE0E  006F FF78  F0BE    	movff	postinc2,_INT0_InterruptHandler+1
 30037  01AE14  006F FF74  F0BF    	movff	postdec2,_INT0_InterruptHandler+2
 30038                           
 30039                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30040  01AE1A  52E5               	movf	postdec1,f,c
 30041  01AE1C  52E5               	movf	postdec1,f,c
 30042  01AE1E  52E5               	movf	postdec1,f,c
 30043  01AE20  0012               	return		;funcret
 30044  01AE22                     __end_of_INT0_SetInterruptHandler:
 30045                           	opt callstack 0
 30046                           
 30047 ;; *************** function _DMA2_Initialize *****************
 30048 ;; Defined at:
 30049 ;;		line 61 in file "mcc_generated_files/dma2.c"
 30050 ;; Parameters:    Size  Location     Type
 30051 ;;		None
 30052 ;; Auto vars:     Size  Location     Type
 30053 ;;		None
 30054 ;; Return value:  Size  Location     Type
 30055 ;;                  1  [STACK] void 
 30056 ;; Registers used:
 30057 ;;		wreg, status,2
 30058 ;; Tracked objects:
 30059 ;;		On entry : 3F/3D
 30060 ;;		On exit  : 3F/3B
 30061 ;;		Unchanged: 0/0
 30062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30067 ;;Total ram usage:        0 bytes
 30068 ;; Hardware stack levels used:    1
 30069 ;; Hardware stack levels required when called:   15
 30070 ;; This function calls:
 30071 ;;		Nothing
 30072 ;; This function is called by:
 30073 ;;		_SYSTEM_Initialize
 30074 ;; This function uses a reentrant model
 30075 ;;
 30076                           
 30077                           	psect	text130
 30078  01A348                     __ptext130:
 30079                           	opt callstack 0
 30080  01A348                     _DMA2_Initialize:
 30081                           	opt callstack 14
 30082                           
 30083                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 30084                           
 30085                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30086                           ;incstack = 0
 30087  01A348  0E00               	movlw	0
 30088  01A34A  013B               	movlb	59	; () banked
 30089  01A34C  6FD9               	movwf	217,b	;volatile
 30090  01A34E  0E10               	movlw	16
 30091  01A350  6FDA               	movwf	218,b	;volatile
 30092  01A352  0E00               	movlw	0
 30093  01A354  6FDB               	movwf	219,b	;volatile
 30094                           
 30095                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 30096  01A356  0E3F               	movlw	63
 30097  01A358  6FD1               	movwf	209,b	;volatile
 30098  01A35A  0EBB               	movlw	187
 30099  01A35C  6FD0               	movwf	208,b	;volatile
 30100                           
 30101                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 30102  01A35E  0E03               	movlw	3
 30103  01A360  6FDD               	movwf	221,b	;volatile
 30104                           
 30105                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 30106  01A362  0E00               	movlw	0
 30107  01A364  6FD8               	movwf	216,b	;volatile
 30108  01A366  0E01               	movlw	1
 30109  01A368  6FD7               	movwf	215,b	;volatile
 30110                           
 30111                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 30112  01A36A  0E00               	movlw	0
 30113  01A36C  6FCF               	movwf	207,b	;volatile
 30114  01A36E  0E01               	movlw	1
 30115  01A370  6FCE               	movwf	206,b	;volatile
 30116                           
 30117                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 30118  01A372  0E1C               	movlw	28
 30119  01A374  6FDF               	movwf	223,b	;volatile
 30120                           
 30121                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 30122  01A376  0E3D               	movlw	61
 30123  01A378  6FDE               	movwf	222,b	;volatile
 30124                           
 30125                           ; BSR set to: 59
 30126                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 30127  01A37A  0139               	movlb	57	; () banked
 30128  01A37C  97A5               	bcf	165,3,b	;volatile
 30129                           
 30130                           ; BSR set to: 57
 30131                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 30132  01A37E  95A5               	bcf	165,2,b	;volatile
 30133                           
 30134                           ; BSR set to: 57
 30135                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 30136  01A380  9BA5               	bcf	165,5,b	;volatile
 30137                           
 30138                           ; BSR set to: 57
 30139                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 30140  01A382  99A5               	bcf	165,4,b	;volatile
 30141                           
 30142                           ; BSR set to: 57
 30143                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 30144  01A384  9795               	bcf	149,3,b	;volatile
 30145                           
 30146                           ; BSR set to: 57
 30147                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 30148  01A386  9595               	bcf	149,2,b	;volatile
 30149                           
 30150                           ; BSR set to: 57
 30151                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 30152  01A388  9B95               	bcf	149,5,b	;volatile
 30153                           
 30154                           ; BSR set to: 57
 30155                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 30156  01A38A  9995               	bcf	149,4,b	;volatile
 30157  01A38C  9ED2               	bcf	16338,7,c	;# 
 30158  01A38E  0139               	banksel	14831	;# 
 30159  01A390  0E55               	movlw	85	;# 
 30160  01A392  6FEF               	movwf	14831,b	;# 
 30161  01A394  0EAA               	movlw	170	;# 
 30162  01A396  6FEF               	movwf	14831,b	;# 
 30163  01A398  81EF               	bsf	14831,0,b	;# 
 30164  01A39A  8ED2               	bsf	16338,7,c	;# 
 30165                           
 30166                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 30167  01A39C  013B               	movlb	59	; () banked
 30168  01A39E  6BDC               	clrf	220,b	;volatile
 30169                           
 30170                           ; BSR set to: 59
 30171                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30172  01A3A0  0012               	return		;funcret
 30173  01A3A2                     __end_of_DMA2_Initialize:
 30174                           	opt callstack 0
 30175                           
 30176 ;; *************** function _DMA1_Initialize *****************
 30177 ;; Defined at:
 30178 ;;		line 86 in file "mcc_generated_files/dma1.c"
 30179 ;; Parameters:    Size  Location     Type
 30180 ;;		None
 30181 ;; Auto vars:     Size  Location     Type
 30182 ;;		None
 30183 ;; Return value:  Size  Location     Type
 30184 ;;                  1  [STACK] void 
 30185 ;; Registers used:
 30186 ;;		wreg, status,2
 30187 ;; Tracked objects:
 30188 ;;		On entry : 3F/3B
 30189 ;;		On exit  : 3F/3B
 30190 ;;		Unchanged: 0/0
 30191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30196 ;;Total ram usage:        0 bytes
 30197 ;; Hardware stack levels used:    1
 30198 ;; Hardware stack levels required when called:   15
 30199 ;; This function calls:
 30200 ;;		Nothing
 30201 ;; This function is called by:
 30202 ;;		_SYSTEM_Initialize
 30203 ;; This function uses a reentrant model
 30204 ;;
 30205                           
 30206                           	psect	text131
 30207  019FC4                     __ptext131:
 30208                           	opt callstack 0
 30209  019FC4                     _DMA1_Initialize:
 30210                           	opt callstack 14
 30211                           
 30212                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 30213                           
 30214                           ; BSR set to: 59
 30215                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30216                           ;incstack = 0
 30217  019FC4  0E00               	movlw	0
 30218  019FC6  013B               	movlb	59	; () banked
 30219  019FC8  6FF9               	movwf	249,b	;volatile
 30220  019FCA  0E10               	movlw	16
 30221  019FCC  6FFA               	movwf	250,b	;volatile
 30222  019FCE  0E00               	movlw	0
 30223  019FD0  6FFB               	movwf	251,b	;volatile
 30224                           
 30225                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 30226  019FD2  0E3D               	movlw	61
 30227  019FD4  6FF1               	movwf	241,b	;volatile
 30228  019FD6  0E11               	movlw	17
 30229  019FD8  6FF0               	movwf	240,b	;volatile
 30230                           
 30231                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 30232  019FDA  0E03               	movlw	3
 30233  019FDC  6FFD               	movwf	253,b	;volatile
 30234                           
 30235                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 30236  019FDE  0E00               	movlw	0
 30237  019FE0  6FF8               	movwf	248,b	;volatile
 30238  019FE2  0E01               	movlw	1
 30239  019FE4  6FF7               	movwf	247,b	;volatile
 30240                           
 30241                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 30242  019FE6  0E00               	movlw	0
 30243  019FE8  6FEF               	movwf	239,b	;volatile
 30244  019FEA  0E01               	movlw	1
 30245  019FEC  6FEE               	movwf	238,b	;volatile
 30246                           
 30247                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 30248  019FEE  0E15               	movlw	21
 30249  019FF0  6FFF               	movwf	255,b	;volatile
 30250                           
 30251                           ; BSR set to: 59
 30252                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 30253  019FF2  6BFE               	clrf	254,b	;volatile
 30254                           
 30255                           ; BSR set to: 59
 30256                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 30257  019FF4  0139               	movlb	57	; () banked
 30258  019FF6  93A2               	bcf	162,1,b	;volatile
 30259                           
 30260                           ; BSR set to: 57
 30261                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 30262  019FF8  91A2               	bcf	162,0,b	;volatile
 30263                           
 30264                           ; BSR set to: 57
 30265                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 30266  019FFA  97A2               	bcf	162,3,b	;volatile
 30267                           
 30268                           ; BSR set to: 57
 30269                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 30270  019FFC  95A2               	bcf	162,2,b	;volatile
 30271                           
 30272                           ; BSR set to: 57
 30273                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 30274  019FFE  8392               	bsf	146,1,b	;volatile
 30275                           
 30276                           ; BSR set to: 57
 30277                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 30278  01A000  8192               	bsf	146,0,b	;volatile
 30279                           
 30280                           ; BSR set to: 57
 30281                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 30282  01A002  8792               	bsf	146,3,b	;volatile
 30283                           
 30284                           ; BSR set to: 57
 30285                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 30286  01A004  8592               	bsf	146,2,b	;volatile
 30287                           
 30288                           ; BSR set to: 57
 30289                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 30290  01A006  6BF1               	clrf	241,b	;volatile
 30291                           
 30292                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 30293  01A008  0E01               	movlw	1
 30294  01A00A  6FF2               	movwf	242,b	;volatile
 30295                           
 30296                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 30297  01A00C  0E04               	movlw	4
 30298  01A00E  6FF3               	movwf	243,b	;volatile
 30299                           
 30300                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 30301  01A010  0E02               	movlw	2
 30302  01A012  6FF4               	movwf	244,b	;volatile
 30303                           
 30304                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 30305  01A014  0E03               	movlw	3
 30306  01A016  6FF7               	movwf	247,b	;volatile
 30307  01A018  9ED2               	bcf	16338,7,c	;# 
 30308  01A01A  0139               	banksel	14831	;# 
 30309  01A01C  0E55               	movlw	85	;# 
 30310  01A01E  6FEF               	movwf	14831,b	;# 
 30311  01A020  0EAA               	movlw	170	;# 
 30312  01A022  6FEF               	movwf	14831,b	;# 
 30313  01A024  81EF               	bsf	14831,0,b	;# 
 30314  01A026  8ED2               	bsf	16338,7,c	;# 
 30315                           
 30316                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 30317  01A028  013B               	movlb	59	; () banked
 30318  01A02A  6BFC               	clrf	252,b	;volatile
 30319                           
 30320                           ; BSR set to: 59
 30321                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30322  01A02C  0012               	return		;funcret
 30323  01A02E                     __end_of_DMA1_Initialize:
 30324                           	opt callstack 0
 30325                           
 30326 ;; *************** function _CLKREF_Initialize *****************
 30327 ;; Defined at:
 30328 ;;		line 58 in file "mcc_generated_files/clkref.c"
 30329 ;; Parameters:    Size  Location     Type
 30330 ;;		None
 30331 ;; Auto vars:     Size  Location     Type
 30332 ;;		None
 30333 ;; Return value:  Size  Location     Type
 30334 ;;                  1  [STACK] void 
 30335 ;; Registers used:
 30336 ;;		wreg, status,2
 30337 ;; Tracked objects:
 30338 ;;		On entry : 3F/3B
 30339 ;;		On exit  : 3F/3C
 30340 ;;		Unchanged: 0/0
 30341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30346 ;;Total ram usage:        0 bytes
 30347 ;; Hardware stack levels used:    1
 30348 ;; Hardware stack levels required when called:   15
 30349 ;; This function calls:
 30350 ;;		Nothing
 30351 ;; This function is called by:
 30352 ;;		_SYSTEM_Initialize
 30353 ;; This function uses a reentrant model
 30354 ;;
 30355                           
 30356                           	psect	text132
 30357  01B232                     __ptext132:
 30358                           	opt callstack 0
 30359  01B232                     _CLKREF_Initialize:
 30360                           	opt callstack 14
 30361                           
 30362                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 30363                           
 30364                           ; BSR set to: 59
 30365                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30366                           ;incstack = 0
 30367  01B232  013C               	movlb	60	; () banked
 30368  01B234  6BE6               	clrf	230,b	;volatile
 30369                           
 30370                           ; BSR set to: 60
 30371                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 30372  01B236  0E94               	movlw	148
 30373  01B238  6FE5               	movwf	229,b	;volatile
 30374                           
 30375                           ; BSR set to: 60
 30376                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 30377  01B23A  0012               	return		;funcret
 30378  01B23C                     __end_of_CLKREF_Initialize:
 30379                           	opt callstack 0
 30380                           
 30381 ;; *************** function _ADCC_Initialize *****************
 30382 ;; Defined at:
 30383 ;;		line 65 in file "mcc_generated_files/adcc.c"
 30384 ;; Parameters:    Size  Location     Type
 30385 ;;		None
 30386 ;; Auto vars:     Size  Location     Type
 30387 ;;		None
 30388 ;; Return value:  Size  Location     Type
 30389 ;;                  1  [STACK] void 
 30390 ;; Registers used:
 30391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 30392 ;; Tracked objects:
 30393 ;;		On entry : 3F/3E
 30394 ;;		On exit  : 0/0
 30395 ;;		Unchanged: 0/0
 30396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30401 ;;Total ram usage:        0 bytes
 30402 ;; Hardware stack levels used:    1
 30403 ;; Hardware stack levels required when called:   16
 30404 ;; This function calls:
 30405 ;;		_ADCC_SetADIInterruptHandler
 30406 ;;		_ADCC_SetADTIInterruptHandler
 30407 ;; This function is called by:
 30408 ;;		_SYSTEM_Initialize
 30409 ;; This function uses a reentrant model
 30410 ;;
 30411                           
 30412                           	psect	text133
 30413  01A02E                     __ptext133:
 30414                           	opt callstack 0
 30415  01A02E                     _ADCC_Initialize:
 30416                           	opt callstack 13
 30417                           
 30418                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 30419                           
 30420                           ; BSR set to: 60
 30421                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30422                           ;incstack = 0
 30423  01A02E  013E               	movlb	62	; () banked
 30424  01A030  6BDE               	clrf	222,b	;volatile
 30425                           
 30426                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 30427  01A032  6BDF               	clrf	223,b	;volatile
 30428                           
 30429                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 30430  01A034  6BE0               	clrf	224,b	;volatile
 30431                           
 30432                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 30433  01A036  6BE1               	clrf	225,b	;volatile
 30434                           
 30435                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 30436  01A038  6BE4               	clrf	228,b	;volatile
 30437                           
 30438                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 30439  01A03A  6BE5               	clrf	229,b	;volatile
 30440                           
 30441                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 30442  01A03C  6BEA               	clrf	234,b	;volatile
 30443                           
 30444                           ; BSR set to: 62
 30445                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 30446  01A03E  0E40               	movlw	64
 30447  01A040  6FEC               	movwf	236,b	;volatile
 30448                           
 30449                           ; BSR set to: 62
 30450                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 30451  01A042  6BF1               	clrf	241,b	;volatile
 30452                           
 30453                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 30454  01A044  0E20               	movlw	32
 30455  01A046  6FF3               	movwf	243,b	;volatile
 30456                           
 30457                           ; BSR set to: 62
 30458                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 30459  01A048  6BF4               	clrf	244,b	;volatile
 30460                           
 30461                           ; BSR set to: 62
 30462                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 30463  01A04A  6BF5               	clrf	245,b	;volatile
 30464                           
 30465                           ; BSR set to: 62
 30466                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 30467  01A04C  6BF6               	clrf	246,b	;volatile
 30468                           
 30469                           ; BSR set to: 62
 30470                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 30471  01A04E  6BF7               	clrf	247,b	;volatile
 30472                           
 30473                           ; BSR set to: 62
 30474                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 30475  01A050  6BF9               	clrf	249,b	;volatile
 30476                           
 30477                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 30478  01A052  0E5B               	movlw	91
 30479  01A054  6FFA               	movwf	250,b	;volatile
 30480                           
 30481                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 30482  01A056  0E27               	movlw	39
 30483  01A058  6FFB               	movwf	251,b	;volatile
 30484                           
 30485                           ; BSR set to: 62
 30486                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 30487  01A05A  6BFC               	clrf	252,b	;volatile
 30488                           
 30489                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 30490  01A05C  0E02               	movlw	2
 30491  01A05E  6FFD               	movwf	253,b	;volatile
 30492                           
 30493                           ; BSR set to: 62
 30494                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 30495  01A060  6BFE               	clrf	254,b	;volatile
 30496                           
 30497                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 30498  01A062  0E07               	movlw	7
 30499  01A064  6FFF               	movwf	255,b	;volatile
 30500                           
 30501                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 30502  01A066  0E84               	movlw	132
 30503  01A068  6FF8               	movwf	248,b	;volatile
 30504                           
 30505                           ; BSR set to: 62
 30506                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 30507  01A06A  0139               	movlb	57	; () banked
 30508  01A06C  95A1               	bcf	161,2,b	;volatile
 30509                           
 30510                           ; BSR set to: 57
 30511                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 30512  01A06E  8591               	bsf	145,2,b	;volatile
 30513                           
 30514                           ; BSR set to: 57
 30515                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 30516  01A070  0EB8               	movlw	low _ADCC_DefaultInterruptHandler
 30517  01A072  6EE6               	movwf	postinc1,c
 30518  01A074  0EB2               	movlw	high _ADCC_DefaultInterruptHandler
 30519  01A076  6EE6               	movwf	postinc1,c
 30520  01A078  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 30521  01A07A  6EE6               	movwf	postinc1,c
 30522  01A07C  EC25  F0D7         	call	_ADCC_SetADIInterruptHandler	;wreg free
 30523                           
 30524                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 30525  01A080  0139               	movlb	57	; () banked
 30526  01A082  97A1               	bcf	161,3,b	;volatile
 30527                           
 30528                           ; BSR set to: 57
 30529                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 30530  01A084  8791               	bsf	145,3,b	;volatile
 30531                           
 30532                           ; BSR set to: 57
 30533                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 30534  01A086  0EB8               	movlw	low _ADCC_DefaultInterruptHandler
 30535  01A088  6EE6               	movwf	postinc1,c
 30536  01A08A  0EB2               	movlw	high _ADCC_DefaultInterruptHandler
 30537  01A08C  6EE6               	movwf	postinc1,c
 30538  01A08E  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 30539  01A090  6EE6               	movwf	postinc1,c
 30540  01A092  EC11  F0D7         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 30541                           
 30542                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30543  01A096  0012               	return		;funcret
 30544  01A098                     __end_of_ADCC_Initialize:
 30545                           	opt callstack 0
 30546                           
 30547 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 30548 ;; Defined at:
 30549 ;;		line 336 in file "mcc_generated_files/adcc.c"
 30550 ;; Parameters:    Size  Location     Type
 30551 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30552 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 30553 ;; Auto vars:     Size  Location     Type
 30554 ;;		None
 30555 ;; Return value:  Size  Location     Type
 30556 ;;                  1  [STACK] void 
 30557 ;; Registers used:
 30558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30559 ;; Tracked objects:
 30560 ;;		On entry : 0/0
 30561 ;;		On exit  : 0/0
 30562 ;;		Unchanged: 0/0
 30563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30568 ;;Total ram usage:        0 bytes
 30569 ;; Hardware stack levels used:    1
 30570 ;; Hardware stack levels required when called:   15
 30571 ;; This function calls:
 30572 ;;		Nothing
 30573 ;; This function is called by:
 30574 ;;		_ADCC_Initialize
 30575 ;;		_start_adc_scan
 30576 ;; This function uses a reentrant model
 30577 ;;
 30578                           
 30579                           	psect	text134
 30580  01AE22                     __ptext134:
 30581                           	opt callstack 0
 30582  01AE22                     _ADCC_SetADTIInterruptHandler:
 30583                           	opt callstack 14
 30584                           
 30585                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 30586                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30587                           
 30588                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30589                           ;incstack = 0
 30590  01AE22  50E1               	movf	fsr1l,w,c
 30591  01AE24  0FFD               	addlw	-3
 30592  01AE26  6ED9               	movwf	fsr2l,c
 30593  01AE28  50E2               	movf	fsr1h,w,c
 30594  01AE2A  6EDA               	movwf	fsr2h,c
 30595  01AE2C  0EFF               	movlw	255
 30596  01AE2E  22DA               	addwfc	fsr2h,f,c
 30597  01AE30  006F FF78  F0AB    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 30598  01AE36  006F FF78  F0AC    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 30599  01AE3C  006F FF74  F0AD    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 30600                           
 30601                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 30602  01AE42  52E5               	movf	postdec1,f,c
 30603  01AE44  52E5               	movf	postdec1,f,c
 30604  01AE46  52E5               	movf	postdec1,f,c
 30605  01AE48  0012               	return		;funcret
 30606  01AE4A                     __end_of_ADCC_SetADTIInterruptHandler:
 30607                           	opt callstack 0
 30608                           
 30609 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 30610 ;; Defined at:
 30611 ;;		line 323 in file "mcc_generated_files/adcc.c"
 30612 ;; Parameters:    Size  Location     Type
 30613 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30614 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 30615 ;; Auto vars:     Size  Location     Type
 30616 ;;		None
 30617 ;; Return value:  Size  Location     Type
 30618 ;;                  1  [STACK] void 
 30619 ;; Registers used:
 30620 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30621 ;; Tracked objects:
 30622 ;;		On entry : 6/0
 30623 ;;		On exit  : 0/0
 30624 ;;		Unchanged: 0/0
 30625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30630 ;;Total ram usage:        0 bytes
 30631 ;; Hardware stack levels used:    1
 30632 ;; Hardware stack levels required when called:   15
 30633 ;; This function calls:
 30634 ;;		Nothing
 30635 ;; This function is called by:
 30636 ;;		_ADCC_Initialize
 30637 ;;		_start_adc_scan
 30638 ;; This function uses a reentrant model
 30639 ;;
 30640                           
 30641                           	psect	text135
 30642  01AE4A                     __ptext135:
 30643                           	opt callstack 0
 30644  01AE4A                     _ADCC_SetADIInterruptHandler:
 30645                           	opt callstack 14
 30646                           
 30647                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 30648                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30649                           
 30650                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30651                           ;incstack = 0
 30652  01AE4A  50E1               	movf	fsr1l,w,c
 30653  01AE4C  0FFD               	addlw	-3
 30654  01AE4E  6ED9               	movwf	fsr2l,c
 30655  01AE50  50E2               	movf	fsr1h,w,c
 30656  01AE52  6EDA               	movwf	fsr2h,c
 30657  01AE54  0EFF               	movlw	255
 30658  01AE56  22DA               	addwfc	fsr2h,f,c
 30659  01AE58  006F FF78  F0AE    	movff	postinc2,_ADCC_ADI_InterruptHandler
 30660  01AE5E  006F FF78  F0AF    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 30661  01AE64  006F FF74  F0B0    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 30662                           
 30663                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 30664  01AE6A  52E5               	movf	postdec1,f,c
 30665  01AE6C  52E5               	movf	postdec1,f,c
 30666  01AE6E  52E5               	movf	postdec1,f,c
 30667  01AE70  0012               	return		;funcret
 30668  01AE72                     __end_of_ADCC_SetADIInterruptHandler:
 30669                           	opt callstack 0
 30670                           
 30671 ;; *************** function _INT1_ISR *****************
 30672 ;; Defined at:
 30673 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 30674 ;; Parameters:    Size  Location     Type
 30675 ;;		None
 30676 ;; Auto vars:     Size  Location     Type
 30677 ;;		None
 30678 ;; Return value:  Size  Location     Type
 30679 ;;                  1    wreg      void 
 30680 ;; Registers used:
 30681 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 30682 ;; Tracked objects:
 30683 ;;		On entry : 0/0
 30684 ;;		On exit  : 0/0
 30685 ;;		Unchanged: 0/0
 30686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30689 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30690 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30691 ;;Total ram usage:        4 bytes
 30692 ;; Hardware stack levels used:    1
 30693 ;; Hardware stack levels required when called:    5
 30694 ;; This function calls:
 30695 ;;		_INT1_CallBack
 30696 ;; This function is called by:
 30697 ;;		Interrupt level 1
 30698 ;; This function uses a non-reentrant model
 30699 ;;
 30700                           
 30701                           	psect	text136
 30702  01A8B8                     __ptext136:
 30703                           	opt callstack 0
 30704  01A8B8                     _INT1_ISR:
 30705                           	opt callstack 12
 30706                           
 30707                           ;incstack = 0
 30708  01A8B8  006F FF60  F03F    	movff	status,??_INT1_ISR
 30709  01A8BE  0060  F004  F040   	movff	btemp,??_INT1_ISR+1
 30710  01A8C4  0060  F02C  F041   	movff	btemp+10,??_INT1_ISR+2
 30711  01A8CA  0060  F030  F042   	movff	btemp+11,??_INT1_ISR+3
 30712  01A8D0  EE16  F061         	lfsr	1,___intlo_sp
 30713                           
 30714                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 30715  01A8D4  0139               	movlb	57	; () banked
 30716  01A8D6  91A5               	bcf	165,0,b	;volatile
 30717                           
 30718                           ; BSR set to: 57
 30719                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 30720  01A8D8  EC9A  F0D7         	call	_INT1_CallBack	;wreg free
 30721  01A8DC  0060  F108  F00C   	movff	??_INT1_ISR+3,btemp+11
 30722  01A8E2  0060  F104  F00B   	movff	??_INT1_ISR+2,btemp+10
 30723  01A8E8  0060  F100  F001   	movff	??_INT1_ISR+1,btemp
 30724  01A8EE  0060  F0FF  FFD8   	movff	??_INT1_ISR,status
 30725  01A8F4  0011               	retfie		f
 30726  01A8F6                     __end_of_INT1_ISR:
 30727                           	opt callstack 0
 30728                           
 30729 ;; *************** function _INT1_CallBack *****************
 30730 ;; Defined at:
 30731 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 30732 ;; Parameters:    Size  Location     Type
 30733 ;;		None
 30734 ;; Auto vars:     Size  Location     Type
 30735 ;;		None
 30736 ;; Return value:  Size  Location     Type
 30737 ;;                  1  [STACK] void 
 30738 ;; Registers used:
 30739 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 30740 ;; Tracked objects:
 30741 ;;		On entry : 3F/39
 30742 ;;		On exit  : 0/0
 30743 ;;		Unchanged: 0/0
 30744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30749 ;;Total ram usage:        0 bytes
 30750 ;; Hardware stack levels used:    1
 30751 ;; Hardware stack levels required when called:    4
 30752 ;; This function calls:
 30753 ;;		Absolute function
 30754 ;;		_INT1_DefaultInterruptHandler
 30755 ;;		_switch_handler
 30756 ;; This function is called by:
 30757 ;;		_INT1_ISR
 30758 ;; This function uses a reentrant model
 30759 ;;
 30760                           
 30761                           	psect	text137
 30762  01AF34                     __ptext137:
 30763                           	opt callstack 0
 30764  01AF34                     _INT1_CallBack:
 30765                           	opt callstack 12
 30766                           
 30767                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 30768                           
 30769                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30770                           ;incstack = 0
 30771  01AF34  0100               	movlb	0	; () banked
 30772  01AF36  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 30773  01AF38  11BB               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 30774  01AF3A  11BC               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 30775  01AF3C  B4D8               	btfsc	status,2,c
 30776  01AF3E  0012               	return	
 30777                           
 30778                           ; BSR set to: 0
 30779                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 30780  01AF40  D801               	call	u954_28
 30781  01AF42  0012               	return	
 30782  01AF44                     u954_28:
 30783  01AF44  0005               	push	
 30784  01AF46  6EFA               	movwf	pclath,c
 30785  01AF48  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 30786  01AF4A  6EFD               	movwf	tosl,c
 30787  01AF4C  51BB               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 30788  01AF4E  6EFE               	movwf	tosh,c
 30789  01AF50  51BC               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 30790  01AF52  6EFF               	movwf	tosu,c
 30791  01AF54  50FA               	movf	pclath,w,c
 30792  01AF56  0012               	return		;indir
 30793  01AF58                     __end_of_INT1_CallBack:
 30794                           	opt callstack 0
 30795                           
 30796 ;; *************** function _INT1_DefaultInterruptHandler *****************
 30797 ;; Defined at:
 30798 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 30799 ;; Parameters:    Size  Location     Type
 30800 ;;		None
 30801 ;; Auto vars:     Size  Location     Type
 30802 ;;		None
 30803 ;; Return value:  Size  Location     Type
 30804 ;;                  1  [STACK] void 
 30805 ;; Registers used:
 30806 ;;		None
 30807 ;; Tracked objects:
 30808 ;;		On entry : 3F/0
 30809 ;;		On exit  : 0/0
 30810 ;;		Unchanged: 0/0
 30811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30816 ;;Total ram usage:        0 bytes
 30817 ;; Hardware stack levels used:    1
 30818 ;; Hardware stack levels required when called:    3
 30819 ;; This function calls:
 30820 ;;		Nothing
 30821 ;; This function is called by:
 30822 ;;		_EXT_INT_Initialize
 30823 ;;		_INT1_CallBack
 30824 ;; This function uses a reentrant model
 30825 ;;
 30826                           
 30827                           	psect	text138
 30828  01B2B2                     __ptext138:
 30829                           	opt callstack 0
 30830  01B2B2                     _INT1_DefaultInterruptHandler:
 30831                           	opt callstack 12
 30832                           
 30833                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 30834                           
 30835                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30836                           ;incstack = 0
 30837  01B2B2  0012               	return		;funcret
 30838  01B2B4                     __end_of_INT1_DefaultInterruptHandler:
 30839                           	opt callstack 0
 30840                           
 30841 ;; *************** function _switch_handler *****************
 30842 ;; Defined at:
 30843 ;;		line 58 in file "dio.c"
 30844 ;; Parameters:    Size  Location     Type
 30845 ;;		None
 30846 ;; Auto vars:     Size  Location     Type
 30847 ;;  i               1  [STACK] unsigned char 
 30848 ;;  sw_value        1  [STACK] unsigned char 
 30849 ;; Return value:  Size  Location     Type
 30850 ;;                  1  [STACK] void 
 30851 ;; Registers used:
 30852 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 30853 ;; Tracked objects:
 30854 ;;		On entry : 3F/0
 30855 ;;		On exit  : 0/0
 30856 ;;		Unchanged: 0/0
 30857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30862 ;;Total ram usage:        0 bytes
 30863 ;; Hardware stack levels used:    1
 30864 ;; Hardware stack levels required when called:    3
 30865 ;; This function calls:
 30866 ;;		Nothing
 30867 ;; This function is called by:
 30868 ;;		_start_switch_handler
 30869 ;;		_INT1_CallBack
 30870 ;; This function uses a reentrant model
 30871 ;;
 30872                           
 30873                           	psect	text139
 30874  0187D8                     __ptext139:
 30875                           	opt callstack 0
 30876  0187D8                     _switch_handler:
 30877                           	opt callstack 0
 30878                           
 30879                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30880  0187D8  52E6               	movf	postinc1,f,c
 30881  0187DA  52E6               	movf	postinc1,f,c
 30882                           
 30883                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 30884                           ;stkvar	_i @ sp[(-2)+0]
 30885                           
 30886                           ;incstack = 0
 30887  0187DC  0EFE               	movlw	-2
 30888  0187DE  6AE3               	clrf	plusw1,c
 30889  0187E0  9EBD               	bcf	189,7,c	;volatile
 30890                           
 30891                           ;dio.c: 72:  __nop();
 30892  0187E2  F000               	nop	
 30893                           
 30894                           ;dio.c: 73:  __nop();
 30895  0187E4  F000               	nop	
 30896                           
 30897                           ;dio.c: 74:  __nop();
 30898  0187E6  F000               	nop	
 30899  0187E8  D019               	goto	l10184
 30900  0187EA                     l10172:
 30901                           
 30902                           ;dio.c: 79:    sw_value = PORTFbits.RF3;
 30903  0187EA  A6CF               	btfss	207,3,c	;volatile
 30904  0187EC  D011               	goto	u930_20
 30905  0187EE  D00D               	goto	u930_21
 30906  0187F0                     u927_28:
 30907                           
 30908                           ;stkvar	_sw_value @ sp[(-2)+1]
 30909  0187F0  0EFF               	movlw	-1
 30910  0187F2  0060  F033  FFE3   	movff	btemp+11,plusw1
 30911                           
 30912                           ;dio.c: 80:    break;
 30913  0187F8  D027               	goto	l10186
 30914  0187FA                     l10174:
 30915                           
 30916                           ;dio.c: 82:    sw_value = PORTFbits.RF2;
 30917  0187FA  A4CF               	btfss	207,2,c	;volatile
 30918  0187FC  D009               	goto	u930_20
 30919  0187FE  D005               	goto	u930_21
 30920  018800                     l10176:
 30921                           
 30922                           ;dio.c: 85:    sw_value = PORTFbits.RF1;
 30923  018800  A2CF               	btfss	207,1,c	;volatile
 30924  018802  D006               	goto	u930_20
 30925  018804  D002               	goto	u930_21
 30926  018806                     l10178:
 30927                           
 30928                           ;dio.c: 88:    sw_value = PORTFbits.RF0;
 30929  018806  A0CF               	btfss	207,0,c	;volatile
 30930  018808  D003               	goto	u930_20
 30931  01880A                     u930_21:
 30932  01880A  6A0C               	clrf	(btemp+11)^0,c
 30933  01880C  2A0C               	incf	(btemp+11)^0,f,c
 30934  01880E  D7F0               	goto	u927_28
 30935  018810                     u930_20:
 30936  018810  6A0C               	clrf	(btemp+11)^0,c
 30937  018812  D7EE               	goto	u927_28
 30938  018814                     l10180:
 30939                           
 30940                           ;dio.c: 91:    sw_value = 1;
 30941                           ;stkvar	_sw_value @ sp[(-2)+1]
 30942  018814  0EFF               	movlw	-1
 30943  018816  6AE3               	clrf	plusw1,c
 30944  018818  2AE3               	incf	plusw1,f,c
 30945                           
 30946                           ;dio.c: 92:    break;
 30947  01881A  D016               	goto	l10186
 30948  01881C                     l10184:
 30949                           
 30950                           ;stkvar	_i @ sp[(-2)+0]
 30951  01881C  0EFE               	movlw	-2
 30952  01881E  50E3               	movf	plusw1,w,c
 30953  018820  6E0B               	movwf	(btemp+10)^0,c
 30954  018822  6A0C               	clrf	(btemp+11)^0,c
 30955                           
 30956                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30957                           ; Switch size 1, requested type "simple"
 30958                           ; Number of cases is 1, Range of values is 0 to 0
 30959                           ; switch strategies available:
 30960                           ; Name         Instructions Cycles
 30961                           ; simple_byte            4     3 (average)
 30962                           ;	Chosen strategy is simple_byte
 30963  018824  500C               	movf	(btemp+11)^0,w,c
 30964  018826  0A00               	xorlw	0	; case 0
 30965  018828  A4D8               	btfss	status,2,c
 30966  01882A  D7F4               	goto	l10180
 30967                           
 30968                           ; Switch size 1, requested type "simple"
 30969                           ; Number of cases is 4, Range of values is 0 to 3
 30970                           ; switch strategies available:
 30971                           ; Name         Instructions Cycles
 30972                           ; simple_byte           13     7 (average)
 30973                           ;	Chosen strategy is simple_byte
 30974  01882C  500B               	movf	(btemp+10)^0,w,c
 30975  01882E  0A00               	xorlw	0	; case 0
 30976  018830  B4D8               	btfsc	status,2,c
 30977  018832  D7E9               	goto	l10178
 30978  018834  0A01               	xorlw	1	; case 1
 30979  018836  B4D8               	btfsc	status,2,c
 30980  018838  D7E3               	goto	l10176
 30981  01883A  0A03               	xorlw	3	; case 2
 30982  01883C  B4D8               	btfsc	status,2,c
 30983  01883E  D7DD               	goto	l10174
 30984  018840  0A01               	xorlw	1	; case 3
 30985  018842  B4D8               	btfsc	status,2,c
 30986  018844  D7D2               	goto	l10172
 30987  018846  D7E6               	goto	l10180
 30988  018848                     l10186:
 30989                           
 30990                           ;dio.c: 96:   if (sw_value) {
 30991                           ;stkvar	_sw_value @ sp[(-2)+1]
 30992  018848  0EFF               	movlw	-1
 30993  01884A  50E3               	movf	plusw1,w,c
 30994  01884C  B4D8               	btfsc	status,2,c
 30995  01884E  D018               	goto	l10192
 30996                           
 30997                           ;dio.c: 97:    if (S.button[i].sw == SW_ON) {
 30998                           ;stkvar	_i @ sp[(-2)+0]
 30999  018850  0EFE               	movlw	-2
 31000  018852  50E3               	movf	plusw1,w,c
 31001  018854  0D05               	mullw	5
 31002  018856  0EBC               	movlw	low _S
 31003  018858  24F3               	addwf	243,w,c
 31004  01885A  6ED9               	movwf	fsr2l,c
 31005  01885C  0E02               	movlw	high _S
 31006  01885E  20F4               	addwfc	prodh,w,c
 31007  018860  6EDA               	movwf	fsr2h,c
 31008  018862  04DE               	decf	postinc2,w,c
 31009  018864  A4D8               	btfss	status,2,c
 31010  018866  D049               	goto	l10200
 31011                           
 31012                           ;dio.c: 98:     S.button[i].sw = SW_OFF;
 31013                           ;stkvar	_i @ sp[(-2)+0]
 31014  018868  0EFE               	movlw	-2
 31015  01886A  50E3               	movf	plusw1,w,c
 31016  01886C  0D05               	mullw	5
 31017  01886E  0EBC               	movlw	low _S
 31018  018870  24F3               	addwf	243,w,c
 31019  018872  6ED9               	movwf	fsr2l,c
 31020  018874  0E02               	movlw	high _S
 31021  018876  20F4               	addwfc	prodh,w,c
 31022  018878  6EDA               	movwf	fsr2h,c
 31023  01887A  0E00               	movlw	0
 31024  01887C  6EDF               	movwf	indf2,c
 31025  01887E  D03D               	goto	l10200
 31026  018880                     l10192:
 31027                           
 31028                           ;dio.c: 101:    if (S.button[i].sw == SW_OFF) {
 31029                           ;stkvar	_i @ sp[(-2)+0]
 31030  018880  0EFE               	movlw	-2
 31031  018882  50E3               	movf	plusw1,w,c
 31032  018884  0D05               	mullw	5
 31033  018886  0EBC               	movlw	low _S
 31034  018888  24F3               	addwf	243,w,c
 31035  01888A  6ED9               	movwf	fsr2l,c
 31036  01888C  0E02               	movlw	high _S
 31037  01888E  20F4               	addwfc	prodh,w,c
 31038  018890  6EDA               	movwf	fsr2h,c
 31039  018892  50DF               	movf	indf2,w,c
 31040  018894  A4D8               	btfss	status,2,c
 31041  018896  D031               	goto	l10200
 31042                           
 31043                           ;dio.c: 102:     S.button[i].sw = SW_ON;
 31044                           ;stkvar	_i @ sp[(-2)+0]
 31045  018898  0EFE               	movlw	-2
 31046  01889A  50E3               	movf	plusw1,w,c
 31047  01889C  0D05               	mullw	5
 31048  01889E  0EBC               	movlw	low _S
 31049  0188A0  24F3               	addwf	243,w,c
 31050  0188A2  6ED9               	movwf	fsr2l,c
 31051  0188A4  0E02               	movlw	high _S
 31052  0188A6  20F4               	addwfc	prodh,w,c
 31053  0188A8  6EDA               	movwf	fsr2h,c
 31054  0188AA  0E01               	movlw	1
 31055  0188AC  6EDF               	movwf	indf2,c
 31056                           
 31057                           ;dio.c: 103:     S.button[i].count = V.timerint_count;
 31058  0188AE  EE20  F2B8         	lfsr	2,_V+184	;volatile
 31059                           
 31060                           ;stkvar	_i @ sp[(-2)+0]
 31061  0188B2  0EFE               	movlw	-2
 31062  0188B4  50E3               	movf	plusw1,w,c
 31063  0188B6  0D05               	mullw	5
 31064  0188B8  0EBD               	movlw	low (_S+1)
 31065  0188BA  24F3               	addwf	243,w,c
 31066  0188BC  6EE9               	movwf	fsr0l,c
 31067  0188BE  0E02               	movlw	high (_S+1)
 31068  0188C0  20F4               	addwfc	prodh,w,c
 31069  0188C2  6EEA               	movwf	fsr0h,c
 31070  0188C4  006F FF7B FFEE     	movff	postinc2,postinc0
 31071  0188CA  006F FF7B FFEE     	movff	postinc2,postinc0
 31072  0188D0  006F FF7B FFEE     	movff	postinc2,postinc0
 31073  0188D6  006F FF7B FFEE     	movff	postinc2,postinc0
 31074                           
 31075                           ;dio.c: 104:     S.sw_bitmap |= 1 << i;
 31076                           ;stkvar	_i @ sp[(-2)+0]
 31077  0188DC  0EFE               	movlw	-2
 31078  0188DE  006F FF8C  F00C    	movff	plusw1,btemp+11
 31079  0188E4  0E01               	movlw	1
 31080  0188E6  6E0B               	movwf	(btemp+10)^0,c
 31081  0188E8  2A0C               	incf	(btemp+11)^0,f,c
 31082  0188EA  D002               	goto	u934_24
 31083  0188EC                     u934_25:
 31084  0188EC  90D8               	bcf	status,0,c
 31085  0188EE  360B               	rlcf	(btemp+10)^0,f,c
 31086  0188F0                     u934_24:
 31087  0188F0  2E0C               	decfsz	(btemp+11)^0,f,c
 31088  0188F2  D7FC               	goto	u934_25
 31089  0188F4  500B               	movf	(btemp+10)^0,w,c
 31090  0188F6  0102               	movlb	2	; () banked
 31091  0188F8  13E4               	iorwf	(_S+40)& (0+255),f,b	;volatile
 31092  0188FA                     l10200:
 31093                           
 31094                           ;dio.c: 107:  } while (++i < 4);
 31095                           ;stkvar	_i @ sp[(-2)+0]
 31096  0188FA  0EFE               	movlw	-2
 31097  0188FC  2AE3               	incf	plusw1,f,c
 31098  0188FE  0EFE               	movlw	-2
 31099  018900  006F FF8C  F001    	movff	plusw1,btemp
 31100  018906  0E03               	movlw	3
 31101  018908  6401               	cpfsgt	btemp^0,c
 31102  01890A  D788               	goto	l10184
 31103                           
 31104                           ;dio.c: 116:  do { LATDbits.LATD7 = 1; } while(0);
 31105  01890C  8EBD               	bsf	189,7,c	;volatile
 31106                           
 31107                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 31108  01890E  52E5               	movf	postdec1,f,c
 31109  018910  52E5               	movf	postdec1,f,c
 31110  018912  0012               	return		;funcret
 31111  018914                     __end_of_switch_handler:
 31112                           	opt callstack 0
 31113                           
 31114 ;; *************** function _TMR5_ISR *****************
 31115 ;; Defined at:
 31116 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 31117 ;; Parameters:    Size  Location     Type
 31118 ;;		None
 31119 ;; Auto vars:     Size  Location     Type
 31120 ;;		None
 31121 ;; Return value:  Size  Location     Type
 31122 ;;                  1    wreg      void 
 31123 ;; Registers used:
 31124 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 31125 ;; Tracked objects:
 31126 ;;		On entry : 0/0
 31127 ;;		On exit  : 0/0
 31128 ;;		Unchanged: 0/0
 31129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31132 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31133 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31134 ;;Total ram usage:        4 bytes
 31135 ;; Hardware stack levels used:    1
 31136 ;; Hardware stack levels required when called:    5
 31137 ;; This function calls:
 31138 ;;		_TMR5_CallBack
 31139 ;;		_TMR5_WriteTimer
 31140 ;; This function is called by:
 31141 ;;		Interrupt level 1
 31142 ;; This function uses a non-reentrant model
 31143 ;;
 31144                           
 31145                           	psect	text140
 31146  01A3A4                     __ptext140:
 31147                           	opt callstack 0
 31148  01A3A4                     _TMR5_ISR:
 31149                           	opt callstack 12
 31150                           
 31151                           ;incstack = 0
 31152  01A3A4  006F FF60  F045    	movff	status,??_TMR5_ISR+2
 31153  01A3AA  0060  F030  F046   	movff	btemp+11,??_TMR5_ISR+3
 31154  01A3B0  EE16  F061         	lfsr	1,___intlo_sp
 31155                           
 31156                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 31157  01A3B4  0139               	movlb	57	; () banked
 31158  01A3B6  9DA8               	bcf	168,6,b	;volatile
 31159                           
 31160                           ; BSR set to: 57
 31161                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 31162  01A3B8  0060  F0AF  FFE6   	movff	_timer5ReloadVal,postinc1
 31163  01A3BE  0060  F0B3  FFE6   	movff	_timer5ReloadVal+1,postinc1
 31164  01A3C4  EC1C  F0D4         	call	_TMR5_WriteTimer	;wreg free
 31165                           
 31166                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 31167  01A3C8  0102               	movlb	2	; () banked
 31168  01A3CA  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 31169  01A3CC  6E43               	movwf	??_TMR5_ISR^0,c
 31170  01A3CE  6A44               	clrf	(??_TMR5_ISR+1)^0,c
 31171  01A3D0  0E05               	movlw	5
 31172  01A3D2  2643               	addwf	??_TMR5_ISR^0,f,c
 31173  01A3D4  0E00               	movlw	0
 31174  01A3D6  2244               	addwfc	(??_TMR5_ISR+1)^0,f,c
 31175  01A3D8  4A29               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 31176  01A3DA  2A2A               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 31177  01A3DC  5043               	movf	??_TMR5_ISR^0,w,c
 31178  01A3DE  5C29               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 31179  01A3E0  5044               	movf	(??_TMR5_ISR+1)^0,w,c
 31180  01A3E2  582A               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 31181  01A3E4  A0D8               	btfss	status,0,c
 31182  01A3E6  D004               	goto	i1l1017
 31183                           
 31184                           ; BSR set to: 2
 31185                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 31186  01A3E8  ECAC  F0D7         	call	_TMR5_CallBack	;wreg free
 31187                           
 31188                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 31189  01A3EC  6A29               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 31190  01A3EE  6A2A               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 31191  01A3F0                     i1l1017:
 31192  01A3F0  0060  F118  F00C   	movff	??_TMR5_ISR+3,btemp+11
 31193  01A3F6  0060  F117  FFD8   	movff	??_TMR5_ISR+2,status
 31194  01A3FC  0011               	retfie		f
 31195  01A3FE                     __end_of_TMR5_ISR:
 31196                           	opt callstack 0
 31197                           
 31198 ;; *************** function _TMR5_WriteTimer *****************
 31199 ;; Defined at:
 31200 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 31201 ;; Parameters:    Size  Location     Type
 31202 ;;  timerVal        2  [STACK] unsigned short 
 31203 ;; Auto vars:     Size  Location     Type
 31204 ;;		None
 31205 ;; Return value:  Size  Location     Type
 31206 ;;                  1  [STACK] void 
 31207 ;; Registers used:
 31208 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 31209 ;; Tracked objects:
 31210 ;;		On entry : 3F/39
 31211 ;;		On exit  : 0/0
 31212 ;;		Unchanged: 0/0
 31213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31218 ;;Total ram usage:        0 bytes
 31219 ;; Hardware stack levels used:    1
 31220 ;; Hardware stack levels required when called:    3
 31221 ;; This function calls:
 31222 ;;		Nothing
 31223 ;; This function is called by:
 31224 ;;		_TMR5_ISR
 31225 ;; This function uses a reentrant model
 31226 ;;
 31227                           
 31228                           	psect	text141
 31229  01A838                     __ptext141:
 31230                           	opt callstack 0
 31231  01A838                     _TMR5_WriteTimer:
 31232                           	opt callstack 13
 31233                           
 31234                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 31235                           
 31236                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31237                           ;incstack = 0
 31238  01A838  A49A               	btfss	154,2,c	;volatile
 31239  01A83A  D00F               	goto	l10382
 31240                           
 31241                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 31242  01A83C  909A               	bcf	154,0,c	;volatile
 31243                           
 31244                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 31245                           ;stkvar	_timerVal @ sp[(0)+-2]
 31246  01A83E  0EFF               	movlw	255
 31247  01A840  24E1               	addwf	fsr1l,w,c
 31248  01A842  6ED9               	movwf	fsr2l,c
 31249  01A844  0EFF               	movlw	255
 31250  01A846  20E2               	addwfc	fsr1h,w,c
 31251  01A848  6EDA               	movwf	fsr2h,c
 31252  01A84A  50DF               	movf	indf2,w,c
 31253  01A84C  6E99               	movwf	153,c	;volatile
 31254                           
 31255                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 31256                           ;stkvar	_timerVal @ sp[(0)+-2]
 31257  01A84E  0EFE               	movlw	-2
 31258  01A850  006F FF8F FF98     	movff	plusw1,16280	;volatile
 31259                           
 31260                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 31261  01A856  809A               	bsf	154,0,c	;volatile
 31262                           
 31263                           ;mcc_generated_files/tmr5.c: 142:  } else {
 31264  01A858  D00C               	goto	l1000
 31265  01A85A                     l10382:
 31266                           
 31267                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 31268                           ;stkvar	_timerVal @ sp[(0)+-2]
 31269  01A85A  0EFF               	movlw	255
 31270  01A85C  24E1               	addwf	fsr1l,w,c
 31271  01A85E  6ED9               	movwf	fsr2l,c
 31272  01A860  0EFF               	movlw	255
 31273  01A862  20E2               	addwfc	fsr1h,w,c
 31274  01A864  6EDA               	movwf	fsr2h,c
 31275  01A866  50DF               	movf	indf2,w,c
 31276  01A868  6E99               	movwf	153,c	;volatile
 31277                           
 31278                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 31279                           ;stkvar	_timerVal @ sp[(0)+-2]
 31280  01A86A  0EFE               	movlw	-2
 31281  01A86C  006F FF8F FF98     	movff	plusw1,16280	;volatile
 31282  01A872                     l1000:
 31283                           
 31284                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 31285  01A872  52E5               	movf	postdec1,f,c
 31286  01A874  52E5               	movf	postdec1,f,c
 31287  01A876  0012               	return		;funcret
 31288  01A878                     __end_of_TMR5_WriteTimer:
 31289                           	opt callstack 0
 31290                           
 31291 ;; *************** function _TMR5_CallBack *****************
 31292 ;; Defined at:
 31293 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 31294 ;; Parameters:    Size  Location     Type
 31295 ;;		None
 31296 ;; Auto vars:     Size  Location     Type
 31297 ;;		None
 31298 ;; Return value:  Size  Location     Type
 31299 ;;                  1  [STACK] void 
 31300 ;; Registers used:
 31301 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 31302 ;; Tracked objects:
 31303 ;;		On entry : 3F/2
 31304 ;;		On exit  : 0/0
 31305 ;;		Unchanged: 0/0
 31306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31311 ;;Total ram usage:        0 bytes
 31312 ;; Hardware stack levels used:    1
 31313 ;; Hardware stack levels required when called:    4
 31314 ;; This function calls:
 31315 ;;		Absolute function
 31316 ;;		_TMR5_DefaultInterruptHandler
 31317 ;; This function is called by:
 31318 ;;		_TMR5_ISR
 31319 ;; This function uses a reentrant model
 31320 ;;
 31321                           
 31322                           	psect	text142
 31323  01AF58                     __ptext142:
 31324                           	opt callstack 0
 31325  01AF58                     _TMR5_CallBack:
 31326                           	opt callstack 12
 31327                           
 31328                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 31329                           
 31330                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31331                           ;incstack = 0
 31332  01AF58  0100               	movlb	0	; () banked
 31333  01AF5A  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 31334  01AF5C  11A6               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 31335  01AF5E  11A7               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 31336  01AF60  B4D8               	btfsc	status,2,c
 31337  01AF62  0012               	return	
 31338                           
 31339                           ; BSR set to: 0
 31340                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 31341  01AF64  D801               	call	u963_28
 31342  01AF66  0012               	return	
 31343  01AF68                     u963_28:
 31344  01AF68  0005               	push	
 31345  01AF6A  6EFA               	movwf	pclath,c
 31346  01AF6C  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 31347  01AF6E  6EFD               	movwf	tosl,c
 31348  01AF70  51A6               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 31349  01AF72  6EFE               	movwf	tosh,c
 31350  01AF74  51A7               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 31351  01AF76  6EFF               	movwf	tosu,c
 31352  01AF78  50FA               	movf	pclath,w,c
 31353  01AF7A  0012               	return		;indir
 31354  01AF7C                     __end_of_TMR5_CallBack:
 31355                           	opt callstack 0
 31356                           
 31357 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 31358 ;; Defined at:
 31359 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 31360 ;; Parameters:    Size  Location     Type
 31361 ;;		None
 31362 ;; Auto vars:     Size  Location     Type
 31363 ;;		None
 31364 ;; Return value:  Size  Location     Type
 31365 ;;                  1  [STACK] void 
 31366 ;; Registers used:
 31367 ;;		wreg, status,2, status,0, btemp+11
 31368 ;; Tracked objects:
 31369 ;;		On entry : 3F/0
 31370 ;;		On exit  : 3F/2
 31371 ;;		Unchanged: 0/0
 31372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31377 ;;Total ram usage:        0 bytes
 31378 ;; Hardware stack levels used:    1
 31379 ;; Hardware stack levels required when called:    3
 31380 ;; This function calls:
 31381 ;;		Nothing
 31382 ;; This function is called by:
 31383 ;;		_TMR5_Initialize
 31384 ;;		_TMR5_CallBack
 31385 ;; This function uses a reentrant model
 31386 ;;
 31387                           
 31388                           	psect	text143
 31389  01AA72                     __ptext143:
 31390                           	opt callstack 0
 31391  01AA72                     _TMR5_DefaultInterruptHandler:
 31392                           	opt callstack 12
 31393                           
 31394                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 31395                           
 31396                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31397                           ;incstack = 0
 31398  01AA72  A0BE               	btfss	190,0,c	;volatile
 31399  01AA74  D002               	goto	u899_20
 31400  01AA76  0E01               	movlw	1
 31401  01AA78  D001               	goto	u899_26
 31402  01AA7A                     u899_20:
 31403  01AA7A  0E00               	movlw	0
 31404  01AA7C                     u899_26:
 31405  01AA7C  0AFF               	xorlw	255
 31406  01AA7E  6E0C               	movwf	(btemp+11)^0,c
 31407  01AA80  50BE               	movf	190,w,c	;volatile
 31408  01AA82  180C               	xorwf	(btemp+11)^0,w,c
 31409  01AA84  0BFE               	andlw	-2
 31410  01AA86  180C               	xorwf	(btemp+11)^0,w,c
 31411  01AA88  6EBE               	movwf	190,c	;volatile
 31412                           
 31413                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 31414  01AA8A  0E01               	movlw	1
 31415  01AA8C  0102               	movlb	2	; () banked
 31416  01AA8E  27B8               	addwf	(_V+184)& (0+255),f,b	;volatile
 31417  01AA90  0E00               	movlw	0
 31418  01AA92  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 31419  01AA94  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 31420  01AA96  23BB               	addwfc	(_V+187)& (0+255),f,b	;volatile
 31421                           
 31422                           ; BSR set to: 2
 31423                           ;mcc_generated_files/tmr5.c: 201:  V.ticks++;
 31424  01AA98  0E01               	movlw	1
 31425  01AA9A  2781               	addwf	(_V+129)& (0+255),f,b	;volatile
 31426  01AA9C  0E00               	movlw	0
 31427  01AA9E  2382               	addwfc	(_V+130)& (0+255),f,b	;volatile
 31428  01AAA0  2383               	addwfc	(_V+131)& (0+255),f,b	;volatile
 31429  01AAA2  2384               	addwfc	(_V+132)& (0+255),f,b	;volatile
 31430                           
 31431                           ; BSR set to: 2
 31432                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 31433  01AAA4  0012               	return		;funcret
 31434  01AAA6                     __end_of_TMR5_DefaultInterruptHandler:
 31435                           	opt callstack 0
 31436                           
 31437 ;; *************** function _TMR3_ISR *****************
 31438 ;; Defined at:
 31439 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 31440 ;; Parameters:    Size  Location     Type
 31441 ;;		None
 31442 ;; Auto vars:     Size  Location     Type
 31443 ;;		None
 31444 ;; Return value:  Size  Location     Type
 31445 ;;                  1    wreg      void 
 31446 ;; Registers used:
 31447 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 31448 ;; Tracked objects:
 31449 ;;		On entry : 0/0
 31450 ;;		On exit  : 3F/0
 31451 ;;		Unchanged: 0/0
 31452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31455 ;;      Temps:          0       0       0       0      25       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31456 ;;      Totals:         0       0       0       0      25       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31457 ;;Total ram usage:       25 bytes
 31458 ;; Hardware stack levels used:    1
 31459 ;; Hardware stack levels required when called:   14
 31460 ;; This function calls:
 31461 ;;		_TMR3_CallBack
 31462 ;;		_TMR3_WriteTimer
 31463 ;; This function is called by:
 31464 ;;		Interrupt level 1
 31465 ;; This function uses a non-reentrant model
 31466 ;;
 31467                           
 31468                           	psect	text144
 31469  0183E8                     __ptext144:
 31470                           	opt callstack 0
 31471  0183E8                     _TMR3_ISR:
 31472                           	opt callstack 3
 31473                           
 31474                           ; BSR set to: 2
 31475                           ;incstack = 0
 31476  0183E8  006F FF60  F3E4    	movff	status,??_TMR3_ISR
 31477  0183EE  006F FFD8  F3E5    	movff	tblptrl,??_TMR3_ISR+1
 31478  0183F4  006F FFDC  F3E6    	movff	tblptrh,??_TMR3_ISR+2
 31479  0183FA  006F FFE0  F3E7    	movff	tblptru,??_TMR3_ISR+3
 31480  018400  006F FFD4  F3E8    	movff	tablat,??_TMR3_ISR+4
 31481  018406  0060  F004  F3E9   	movff	btemp,??_TMR3_ISR+5
 31482  01840C  0060  F008  F3EA   	movff	btemp+1,??_TMR3_ISR+6
 31483  018412  0060  F00C  F3EB   	movff	btemp+2,??_TMR3_ISR+7
 31484  018418  0060  F010  F3EC   	movff	btemp+3,??_TMR3_ISR+8
 31485  01841E  0060  F014  F3ED   	movff	btemp+4,??_TMR3_ISR+9
 31486  018424  0060  F018  F3EE   	movff	btemp+5,??_TMR3_ISR+10
 31487  01842A  0060  F01C  F3EF   	movff	btemp+6,??_TMR3_ISR+11
 31488  018430  0060  F020  F3F0   	movff	btemp+7,??_TMR3_ISR+12
 31489  018436  0060  F024  F3F1   	movff	btemp+8,??_TMR3_ISR+13
 31490  01843C  0060  F028  F3F2   	movff	btemp+9,??_TMR3_ISR+14
 31491  018442  0060  F02C  F3F3   	movff	btemp+10,??_TMR3_ISR+15
 31492  018448  0060  F030  F3F4   	movff	btemp+11,??_TMR3_ISR+16
 31493  01844E  0060  F044  F3F5   	movff	btemp+16,??_TMR3_ISR+17
 31494  018454  0060  F048  F3F6   	movff	btemp+17,??_TMR3_ISR+18
 31495  01845A  0060  F04C  F3F7   	movff	btemp+18,??_TMR3_ISR+19
 31496  018460  0060  F050  F3F8   	movff	btemp+19,??_TMR3_ISR+20
 31497  018466  0060  F054  F3F9   	movff	btemp+20,??_TMR3_ISR+21
 31498  01846C  0060  F058  F3FA   	movff	btemp+21,??_TMR3_ISR+22
 31499  018472  0060  F05C  F3FB   	movff	btemp+22,??_TMR3_ISR+23
 31500  018478  0060  F060  F3FC   	movff	btemp+23,??_TMR3_ISR+24
 31501  01847E  EE16  F061         	lfsr	1,___intlo_sp
 31502                           
 31503                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 31504  018482  0139               	movlb	57	; () banked
 31505  018484  9DA6               	bcf	166,6,b	;volatile
 31506                           
 31507                           ; BSR set to: 57
 31508                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 31509  018486  0060  F09F  FFE6   	movff	_timer3ReloadVal,postinc1
 31510  01848C  0060  F0A3  FFE6   	movff	_timer3ReloadVal+1,postinc1
 31511  018492  EC3C  F0D4         	call	_TMR3_WriteTimer	;wreg free
 31512                           
 31513                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 31514  018496  0100               	movlb	0	; () banked
 31515  018498  4BC2               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 31516  01849A  2BC3               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 31517  01849C  51C3               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 31518  01849E  E104               	bnz	i1u1199_20
 31519  0184A0  0E28               	movlw	40
 31520  0184A2  5DC2               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 31521  0184A4  A0D8               	btfss	status,0,c
 31522  0184A6  D005               	goto	i1l1205
 31523  0184A8                     i1u1199_20:
 31524                           
 31525                           ; BSR set to: 0
 31526                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 31527  0184A8  ECBE  F0D7         	call	_TMR3_CallBack	;wreg free
 31528                           
 31529                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 31530  0184AC  0100               	movlb	0	; () banked
 31531  0184AE  6BC2               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 31532  0184B0  6BC3               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 31533  0184B2                     i1l1205:
 31534                           
 31535                           ; BSR set to: 0
 31536  0184B2  0060  FFF0  F018   	movff	??_TMR3_ISR+24,btemp+23
 31537  0184B8  0060  FFEC  F017   	movff	??_TMR3_ISR+23,btemp+22
 31538  0184BE  0060  FFE8  F016   	movff	??_TMR3_ISR+22,btemp+21
 31539  0184C4  0060  FFE4  F015   	movff	??_TMR3_ISR+21,btemp+20
 31540  0184CA  0060  FFE0  F014   	movff	??_TMR3_ISR+20,btemp+19
 31541  0184D0  0060  FFDC  F013   	movff	??_TMR3_ISR+19,btemp+18
 31542  0184D6  0060  FFD8  F012   	movff	??_TMR3_ISR+18,btemp+17
 31543  0184DC  0060  FFD4  F011   	movff	??_TMR3_ISR+17,btemp+16
 31544  0184E2  0060  FFD0  F00C   	movff	??_TMR3_ISR+16,btemp+11
 31545  0184E8  0060  FFCC  F00B   	movff	??_TMR3_ISR+15,btemp+10
 31546  0184EE  0060  FFC8  F00A   	movff	??_TMR3_ISR+14,btemp+9
 31547  0184F4  0060  FFC4  F009   	movff	??_TMR3_ISR+13,btemp+8
 31548  0184FA  0060  FFC0  F008   	movff	??_TMR3_ISR+12,btemp+7
 31549  018500  0060  FFBC  F007   	movff	??_TMR3_ISR+11,btemp+6
 31550  018506  0060  FFB8  F006   	movff	??_TMR3_ISR+10,btemp+5
 31551  01850C  0060  FFB4  F005   	movff	??_TMR3_ISR+9,btemp+4
 31552  018512  0060  FFB0  F004   	movff	??_TMR3_ISR+8,btemp+3
 31553  018518  0060  FFAC  F003   	movff	??_TMR3_ISR+7,btemp+2
 31554  01851E  0060  FFA8  F002   	movff	??_TMR3_ISR+6,btemp+1
 31555  018524  0060  FFA4  F001   	movff	??_TMR3_ISR+5,btemp
 31556  01852A  0060  FFA3  FFF5   	movff	??_TMR3_ISR+4,tablat
 31557  018530  0060  FF9F  FFF8   	movff	??_TMR3_ISR+3,tblptru
 31558  018536  0060  FF9B  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 31559  01853C  0060  FF97  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 31560  018542  0060  FF93  FFD8   	movff	??_TMR3_ISR,status
 31561  018548  0011               	retfie		f
 31562  01854A                     __end_of_TMR3_ISR:
 31563                           	opt callstack 0
 31564                           
 31565 ;; *************** function _TMR3_WriteTimer *****************
 31566 ;; Defined at:
 31567 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 31568 ;; Parameters:    Size  Location     Type
 31569 ;;  timerVal        2  [STACK] unsigned short 
 31570 ;; Auto vars:     Size  Location     Type
 31571 ;;		None
 31572 ;; Return value:  Size  Location     Type
 31573 ;;                  1  [STACK] void 
 31574 ;; Registers used:
 31575 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 31576 ;; Tracked objects:
 31577 ;;		On entry : 3F/39
 31578 ;;		On exit  : 0/0
 31579 ;;		Unchanged: 0/0
 31580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31585 ;;Total ram usage:        0 bytes
 31586 ;; Hardware stack levels used:    1
 31587 ;; Hardware stack levels required when called:    3
 31588 ;; This function calls:
 31589 ;;		Nothing
 31590 ;; This function is called by:
 31591 ;;		_TMR3_ISR
 31592 ;; This function uses a reentrant model
 31593 ;;
 31594                           
 31595                           	psect	text145
 31596  01A878                     __ptext145:
 31597                           	opt callstack 0
 31598  01A878                     _TMR3_WriteTimer:
 31599                           	opt callstack 13
 31600                           
 31601                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 31602                           
 31603                           ; BSR set to: 0
 31604                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31605                           ;incstack = 0
 31606  01A878  A4A6               	btfss	166,2,c	;volatile
 31607  01A87A  D00F               	goto	l10400
 31608                           
 31609                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 31610  01A87C  90A6               	bcf	166,0,c	;volatile
 31611                           
 31612                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 31613                           ;stkvar	_timerVal @ sp[(0)+-2]
 31614  01A87E  0EFF               	movlw	255
 31615  01A880  24E1               	addwf	fsr1l,w,c
 31616  01A882  6ED9               	movwf	fsr2l,c
 31617  01A884  0EFF               	movlw	255
 31618  01A886  20E2               	addwfc	fsr1h,w,c
 31619  01A888  6EDA               	movwf	fsr2h,c
 31620  01A88A  50DF               	movf	indf2,w,c
 31621  01A88C  6EA5               	movwf	165,c	;volatile
 31622                           
 31623                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 31624                           ;stkvar	_timerVal @ sp[(0)+-2]
 31625  01A88E  0EFE               	movlw	-2
 31626  01A890  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 31627                           
 31628                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 31629  01A896  80A6               	bsf	166,0,c	;volatile
 31630                           
 31631                           ;mcc_generated_files/tmr3.c: 141:     }
 31632  01A898  D00C               	goto	l1188
 31633  01A89A                     l10400:
 31634                           
 31635                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 31636                           ;stkvar	_timerVal @ sp[(0)+-2]
 31637  01A89A  0EFF               	movlw	255
 31638  01A89C  24E1               	addwf	fsr1l,w,c
 31639  01A89E  6ED9               	movwf	fsr2l,c
 31640  01A8A0  0EFF               	movlw	255
 31641  01A8A2  20E2               	addwfc	fsr1h,w,c
 31642  01A8A4  6EDA               	movwf	fsr2h,c
 31643  01A8A6  50DF               	movf	indf2,w,c
 31644  01A8A8  6EA5               	movwf	165,c	;volatile
 31645                           
 31646                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 31647                           ;stkvar	_timerVal @ sp[(0)+-2]
 31648  01A8AA  0EFE               	movlw	-2
 31649  01A8AC  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 31650  01A8B2                     l1188:
 31651                           
 31652                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 31653  01A8B2  52E5               	movf	postdec1,f,c
 31654  01A8B4  52E5               	movf	postdec1,f,c
 31655  01A8B6  0012               	return		;funcret
 31656  01A8B8                     __end_of_TMR3_WriteTimer:
 31657                           	opt callstack 0
 31658                           
 31659 ;; *************** function _TMR3_CallBack *****************
 31660 ;; Defined at:
 31661 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 31662 ;; Parameters:    Size  Location     Type
 31663 ;;		None
 31664 ;; Auto vars:     Size  Location     Type
 31665 ;;		None
 31666 ;; Return value:  Size  Location     Type
 31667 ;;                  1  [STACK] void 
 31668 ;; Registers used:
 31669 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 31670 ;; Tracked objects:
 31671 ;;		On entry : 3F/0
 31672 ;;		On exit  : 0/0
 31673 ;;		Unchanged: 0/0
 31674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31679 ;;Total ram usage:        0 bytes
 31680 ;; Hardware stack levels used:    1
 31681 ;; Hardware stack levels required when called:   13
 31682 ;; This function calls:
 31683 ;;		Absolute function
 31684 ;;		_TMR3_DefaultInterruptHandler
 31685 ;;		_calc_bsoc
 31686 ;; This function is called by:
 31687 ;;		_TMR3_ISR
 31688 ;; This function uses a reentrant model
 31689 ;;
 31690                           
 31691                           	psect	text146
 31692  01AF7C                     __ptext146:
 31693                           	opt callstack 0
 31694  01AF7C                     _TMR3_CallBack:
 31695                           	opt callstack 3
 31696                           
 31697                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 31698                           
 31699                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31700                           ;incstack = 0
 31701  01AF7C  0100               	movlb	0	; () banked
 31702  01AF7E  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 31703  01AF80  11A3               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 31704  01AF82  11A4               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 31705  01AF84  B4D8               	btfsc	status,2,c
 31706  01AF86  0012               	return	
 31707                           
 31708                           ; BSR set to: 0
 31709                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 31710  01AF88  D801               	call	u1190_28
 31711  01AF8A  0012               	return	
 31712  01AF8C                     u1190_28:
 31713  01AF8C  0005               	push	
 31714  01AF8E  6EFA               	movwf	pclath,c
 31715  01AF90  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 31716  01AF92  6EFD               	movwf	tosl,c
 31717  01AF94  51A3               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 31718  01AF96  6EFE               	movwf	tosh,c
 31719  01AF98  51A4               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 31720  01AF9A  6EFF               	movwf	tosu,c
 31721  01AF9C  50FA               	movf	pclath,w,c
 31722  01AF9E  0012               	return		;indir
 31723  01AFA0                     __end_of_TMR3_CallBack:
 31724                           	opt callstack 0
 31725                           
 31726 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 31727 ;; Defined at:
 31728 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 31729 ;; Parameters:    Size  Location     Type
 31730 ;;		None
 31731 ;; Auto vars:     Size  Location     Type
 31732 ;;		None
 31733 ;; Return value:  Size  Location     Type
 31734 ;;                  1  [STACK] void 
 31735 ;; Registers used:
 31736 ;;		None
 31737 ;; Tracked objects:
 31738 ;;		On entry : 3F/0
 31739 ;;		On exit  : 0/0
 31740 ;;		Unchanged: 0/0
 31741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31746 ;;Total ram usage:        0 bytes
 31747 ;; Hardware stack levels used:    1
 31748 ;; Hardware stack levels required when called:    3
 31749 ;; This function calls:
 31750 ;;		Nothing
 31751 ;; This function is called by:
 31752 ;;		_TMR3_Initialize
 31753 ;;		_TMR3_CallBack
 31754 ;; This function uses a reentrant model
 31755 ;;
 31756                           
 31757                           	psect	text147
 31758  01B2B4                     __ptext147:
 31759                           	opt callstack 0
 31760  01B2B4                     _TMR3_DefaultInterruptHandler:
 31761                           	opt callstack 12
 31762                           
 31763                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 31764                           
 31765                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31766                           ;incstack = 0
 31767  01B2B4  0012               	return		;funcret
 31768  01B2B6                     __end_of_TMR3_DefaultInterruptHandler:
 31769                           	opt callstack 0
 31770                           
 31771 ;; *************** function _calc_bsoc *****************
 31772 ;; Defined at:
 31773 ;;		line 39 in file "bsoc.c"
 31774 ;; Parameters:    Size  Location     Type
 31775 ;;		None
 31776 ;; Auto vars:     Size  Location     Type
 31777 ;;  log_ptr         2  [STACK] PTR unsigned char 
 31778 ;;		 -> port_data(512), 
 31779 ;; Return value:  Size  Location     Type
 31780 ;;                  1  [STACK] void 
 31781 ;; Registers used:
 31782 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 31783 ;; Tracked objects:
 31784 ;;		On entry : 3F/0
 31785 ;;		On exit  : 3F/1
 31786 ;;		Unchanged: 0/0
 31787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31792 ;;Total ram usage:        0 bytes
 31793 ;; Hardware stack levels used:    1
 31794 ;; Hardware stack levels required when called:   12
 31795 ;; This function calls:
 31796 ;;		_StartTimer
 31797 ;;		___fladd
 31798 ;;		___fldiv
 31799 ;;		___flge
 31800 ;;		___flmul
 31801 ;;		___flneg
 31802 ;;		___fltol
 31803 ;;		_port_data_dma_ptr
 31804 ;;		_send_port_data_dma
 31805 ;;		_sprintf
 31806 ;;		_strlen
 31807 ;; This function is called by:
 31808 ;;		_init_bsoc
 31809 ;;		_TMR3_CallBack
 31810 ;; This function uses a reentrant model
 31811 ;;
 31812                           
 31813                           	psect	text148
 31814  013E32                     __ptext148:
 31815                           	opt callstack 0
 31816  013E32                     _calc_bsoc:
 31817                           	opt callstack 0
 31818                           
 31819                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31820  013E32  52E6               	movf	postinc1,f,c
 31821  013E34  52E6               	movf	postinc1,f,c
 31822                           
 31823                           ;incstack = 0
 31824                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 43:  do { LATEbits.LATE1 = 1; } while(0);
 31825  013E36  82BE               	bsf	190,1,c	;volatile
 31826                           
 31827                           ;bsoc.c: 45:  C.dynamic_ah += (C.c_bat / 3600.0);
 31828  013E38  0E00               	movlw	0
 31829  013E3A  6EE6               	movwf	postinc1,c
 31830  013E3C  0E00               	movlw	0
 31831  013E3E  6EE6               	movwf	postinc1,c
 31832  013E40  0E61               	movlw	97
 31833  013E42  6EE6               	movwf	postinc1,c
 31834  013E44  0E45               	movlw	69
 31835  013E46  6EE6               	movwf	postinc1,c
 31836  013E48  0060  F513  FFE6   	movff	_C+68,postinc1
 31837  013E4E  0060  F517  FFE6   	movff	_C+69,postinc1
 31838  013E54  0060  F51B  FFE6   	movff	_C+70,postinc1
 31839  013E5A  0060  F51F  FFE6   	movff	_C+71,postinc1
 31840  013E60  EC68  F0A2         	call	___fldiv	;wreg free
 31841  013E64  0060  F007  FFE6   	movff	btemp,postinc1
 31842  013E6A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31843  013E70  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31844  013E76  0060  F013  FFE6   	movff	btemp+3,postinc1
 31845  013E7C  0060  F633  FFE6   	movff	_C+140,postinc1
 31846  013E82  0060  F637  FFE6   	movff	_C+141,postinc1
 31847  013E88  0060  F63B  FFE6   	movff	_C+142,postinc1
 31848  013E8E  0060  F63F  FFE6   	movff	_C+143,postinc1
 31849  013E94  EC3B  F09B         	call	___fladd	;wreg free
 31850  013E98  0060  F004  F18C   	movff	btemp,_C+140	;volatile
 31851  013E9E  0060  F008  F18D   	movff	btemp+1,_C+141	;volatile
 31852  013EA4  0060  F00C  F18E   	movff	btemp+2,_C+142	;volatile
 31853  013EAA  0060  F010  F18F   	movff	btemp+3,_C+143	;volatile
 31854                           
 31855                           ;bsoc.c: 46:  if (C.dynamic_ah > (C.bank_ah))
 31856  013EB0  0060  F633  FFE6   	movff	_C+140,postinc1
 31857  013EB6  0060  F637  FFE6   	movff	_C+141,postinc1
 31858  013EBC  0060  F63B  FFE6   	movff	_C+142,postinc1
 31859  013EC2  0060  F63F  FFE6   	movff	_C+143,postinc1
 31860  013EC8  0060  F623  FFE6   	movff	_C+136,postinc1
 31861  013ECE  0060  F627  FFE6   	movff	_C+137,postinc1
 31862  013ED4  0060  F62B  FFE6   	movff	_C+138,postinc1
 31863  013EDA  0060  F62F  FFE6   	movff	_C+139,postinc1
 31864  013EE0  EC42  F0C1         	call	___flge	;wreg free
 31865  013EE4  B001               	btfsc	btemp& (0+255),0,c
 31866  013EE6  D008               	goto	l12300
 31867                           
 31868                           ;bsoc.c: 47:   C.dynamic_ah = C.bank_ah;
 31869  013EE8  C188  F18C         	movff	_C+136,_C+140	;volatile
 31870  013EEC  C189  F18D         	movff	_C+137,_C+141	;volatile
 31871  013EF0  C18A  F18E         	movff	_C+138,_C+142	;volatile
 31872  013EF4  C18B  F18F         	movff	_C+139,_C+143	;volatile
 31873  013EF8                     l12300:
 31874                           
 31875                           ;bsoc.c: 48:  if (C.dynamic_ah < 0.1)
 31876  013EF8  0ECD               	movlw	205
 31877  013EFA  6EE6               	movwf	postinc1,c
 31878  013EFC  0ECC               	movlw	204
 31879  013EFE  6EE6               	movwf	postinc1,c
 31880  013F00  0ECC               	movlw	204
 31881  013F02  6EE6               	movwf	postinc1,c
 31882  013F04  0E3D               	movlw	61
 31883  013F06  6EE6               	movwf	postinc1,c
 31884  013F08  0060  F633  FFE6   	movff	_C+140,postinc1
 31885  013F0E  0060  F637  FFE6   	movff	_C+141,postinc1
 31886  013F14  0060  F63B  FFE6   	movff	_C+142,postinc1
 31887  013F1A  0060  F63F  FFE6   	movff	_C+143,postinc1
 31888  013F20  EC42  F0C1         	call	___flge	;wreg free
 31889  013F24  B001               	btfsc	btemp& (0+255),0,c
 31890  013F26  D009               	goto	l12304
 31891                           
 31892                           ;bsoc.c: 49:   C.dynamic_ah = 0.1;
 31893  013F28  0ECD               	movlw	205
 31894  013F2A  0101               	movlb	1	; () banked
 31895  013F2C  6F8C               	movwf	(_C+140)& (0+255),b	;volatile
 31896  013F2E  0ECC               	movlw	204
 31897  013F30  6F8D               	movwf	(_C+141)& (0+255),b	;volatile
 31898  013F32  0ECC               	movlw	204
 31899  013F34  6F8E               	movwf	(_C+142)& (0+255),b	;volatile
 31900  013F36  0E3D               	movlw	61
 31901  013F38  6F8F               	movwf	(_C+143)& (0+255),b	;volatile
 31902  013F3A                     l12304:
 31903                           
 31904                           ;bsoc.c: 51:  C.pv_ah += (C.c_pv / 3600.0);
 31905  013F3A  0E00               	movlw	0
 31906  013F3C  6EE6               	movwf	postinc1,c
 31907  013F3E  0E00               	movlw	0
 31908  013F40  6EE6               	movwf	postinc1,c
 31909  013F42  0E61               	movlw	97
 31910  013F44  6EE6               	movwf	postinc1,c
 31911  013F46  0E45               	movlw	69
 31912  013F48  6EE6               	movwf	postinc1,c
 31913  013F4A  0060  F523  FFE6   	movff	_C+72,postinc1
 31914  013F50  0060  F527  FFE6   	movff	_C+73,postinc1
 31915  013F56  0060  F52B  FFE6   	movff	_C+74,postinc1
 31916  013F5C  0060  F52F  FFE6   	movff	_C+75,postinc1
 31917  013F62  EC68  F0A2         	call	___fldiv	;wreg free
 31918  013F66  0060  F007  FFE6   	movff	btemp,postinc1
 31919  013F6C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31920  013F72  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31921  013F78  0060  F013  FFE6   	movff	btemp+3,postinc1
 31922  013F7E  0060  F643  FFE6   	movff	_C+144,postinc1
 31923  013F84  0060  F647  FFE6   	movff	_C+145,postinc1
 31924  013F8A  0060  F64B  FFE6   	movff	_C+146,postinc1
 31925  013F90  0060  F64F  FFE6   	movff	_C+147,postinc1
 31926  013F96  EC3B  F09B         	call	___fladd	;wreg free
 31927  013F9A  0060  F004  F190   	movff	btemp,_C+144	;volatile
 31928  013FA0  0060  F008  F191   	movff	btemp+1,_C+145	;volatile
 31929  013FA6  0060  F00C  F192   	movff	btemp+2,_C+146	;volatile
 31930  013FAC  0060  F010  F193   	movff	btemp+3,_C+147	;volatile
 31931                           
 31932                           ;bsoc.c: 52:  C.pvkw += (C.p_pv / 3600.0);
 31933  013FB2  0E00               	movlw	0
 31934  013FB4  6EE6               	movwf	postinc1,c
 31935  013FB6  0E00               	movlw	0
 31936  013FB8  6EE6               	movwf	postinc1,c
 31937  013FBA  0E61               	movlw	97
 31938  013FBC  6EE6               	movwf	postinc1,c
 31939  013FBE  0E45               	movlw	69
 31940  013FC0  6EE6               	movwf	postinc1,c
 31941  013FC2  0060  F5E3  FFE6   	movff	_C+120,postinc1
 31942  013FC8  0060  F5E7  FFE6   	movff	_C+121,postinc1
 31943  013FCE  0060  F5EB  FFE6   	movff	_C+122,postinc1
 31944  013FD4  0060  F5EF  FFE6   	movff	_C+123,postinc1
 31945  013FDA  EC68  F0A2         	call	___fldiv	;wreg free
 31946  013FDE  0060  F007  FFE6   	movff	btemp,postinc1
 31947  013FE4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31948  013FEA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31949  013FF0  0060  F013  FFE6   	movff	btemp+3,postinc1
 31950  013FF6  0060  F683  FFE6   	movff	_C+160,postinc1
 31951  013FFC  0060  F687  FFE6   	movff	_C+161,postinc1
 31952  014002  0060  F68B  FFE6   	movff	_C+162,postinc1
 31953  014008  0060  F68F  FFE6   	movff	_C+163,postinc1
 31954  01400E  EC3B  F09B         	call	___fladd	;wreg free
 31955  014012  0060  F004  F1A0   	movff	btemp,_C+160	;volatile
 31956  014018  0060  F008  F1A1   	movff	btemp+1,_C+161	;volatile
 31957  01401E  0060  F00C  F1A2   	movff	btemp+2,_C+162	;volatile
 31958  014024  0060  F010  F1A3   	movff	btemp+3,_C+163	;volatile
 31959                           
 31960                           ;bsoc.c: 53:  C.invkw += (C.p_inverter / 3600.0);
 31961  01402A  0E00               	movlw	0
 31962  01402C  6EE6               	movwf	postinc1,c
 31963  01402E  0E00               	movlw	0
 31964  014030  6EE6               	movwf	postinc1,c
 31965  014032  0E61               	movlw	97
 31966  014034  6EE6               	movwf	postinc1,c
 31967  014036  0E45               	movlw	69
 31968  014038  6EE6               	movwf	postinc1,c
 31969  01403A  0060  F5D3  FFE6   	movff	_C+116,postinc1
 31970  014040  0060  F5D7  FFE6   	movff	_C+117,postinc1
 31971  014046  0060  F5DB  FFE6   	movff	_C+118,postinc1
 31972  01404C  0060  F5DF  FFE6   	movff	_C+119,postinc1
 31973  014052  EC68  F0A2         	call	___fldiv	;wreg free
 31974  014056  0060  F007  FFE6   	movff	btemp,postinc1
 31975  01405C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 31976  014062  0060  F00F  FFE6   	movff	btemp+2,postinc1
 31977  014068  0060  F013  FFE6   	movff	btemp+3,postinc1
 31978  01406E  0060  F693  FFE6   	movff	_C+164,postinc1
 31979  014074  0060  F697  FFE6   	movff	_C+165,postinc1
 31980  01407A  0060  F69B  FFE6   	movff	_C+166,postinc1
 31981  014080  0060  F69F  FFE6   	movff	_C+167,postinc1
 31982  014086  EC3B  F09B         	call	___fladd	;wreg free
 31983  01408A  0060  F004  F1A4   	movff	btemp,_C+164	;volatile
 31984  014090  0060  F008  F1A5   	movff	btemp+1,_C+165	;volatile
 31985  014096  0060  F00C  F1A6   	movff	btemp+2,_C+166	;volatile
 31986  01409C  0060  F010  F1A7   	movff	btemp+3,_C+167	;volatile
 31987                           
 31988                           ;bsoc.c: 54:  if (C.p_bat > 0.0)
 31989  0140A2  0060  F5F3  FFE6   	movff	_C+124,postinc1
 31990  0140A8  0060  F5F7  FFE6   	movff	_C+125,postinc1
 31991  0140AE  0060  F5FB  FFE6   	movff	_C+126,postinc1
 31992  0140B4  0060  F5FF  FFE6   	movff	_C+127,postinc1
 31993  0140BA  0E00               	movlw	0
 31994  0140BC  6EE6               	movwf	postinc1,c
 31995  0140BE  0E00               	movlw	0
 31996  0140C0  6EE6               	movwf	postinc1,c
 31997  0140C2  0E00               	movlw	0
 31998  0140C4  6EE6               	movwf	postinc1,c
 31999  0140C6  0E00               	movlw	0
 32000  0140C8  6EE6               	movwf	postinc1,c
 32001  0140CA  EC42  F0C1         	call	___flge	;wreg free
 32002  0140CE  B001               	btfsc	btemp& (0+255),0,c
 32003  0140D0  D03C               	goto	l12314
 32004                           
 32005                           ;bsoc.c: 55:   C.bkwi += (C.p_bat / 3600.0);
 32006  0140D2  0E00               	movlw	0
 32007  0140D4  6EE6               	movwf	postinc1,c
 32008  0140D6  0E00               	movlw	0
 32009  0140D8  6EE6               	movwf	postinc1,c
 32010  0140DA  0E61               	movlw	97
 32011  0140DC  6EE6               	movwf	postinc1,c
 32012  0140DE  0E45               	movlw	69
 32013  0140E0  6EE6               	movwf	postinc1,c
 32014  0140E2  0060  F5F3  FFE6   	movff	_C+124,postinc1
 32015  0140E8  0060  F5F7  FFE6   	movff	_C+125,postinc1
 32016  0140EE  0060  F5FB  FFE6   	movff	_C+126,postinc1
 32017  0140F4  0060  F5FF  FFE6   	movff	_C+127,postinc1
 32018  0140FA  EC68  F0A2         	call	___fldiv	;wreg free
 32019  0140FE  0060  F007  FFE6   	movff	btemp,postinc1
 32020  014104  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32021  01410A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 32022  014110  0060  F013  FFE6   	movff	btemp+3,postinc1
 32023  014116  0060  F663  FFE6   	movff	_C+152,postinc1
 32024  01411C  0060  F667  FFE6   	movff	_C+153,postinc1
 32025  014122  0060  F66B  FFE6   	movff	_C+154,postinc1
 32026  014128  0060  F66F  FFE6   	movff	_C+155,postinc1
 32027  01412E  EC3B  F09B         	call	___fladd	;wreg free
 32028  014132  0060  F004  F198   	movff	btemp,_C+152	;volatile
 32029  014138  0060  F008  F199   	movff	btemp+1,_C+153	;volatile
 32030  01413E  0060  F00C  F19A   	movff	btemp+2,_C+154	;volatile
 32031  014144  0060  F010  F19B   	movff	btemp+3,_C+155	;volatile
 32032  01414A                     l12314:
 32033                           
 32034                           ;bsoc.c: 56:  if (C.p_bat < 0.0)
 32035  01414A  0101               	movlb	1	; () banked
 32036  01414C  AF7F               	btfss	(_C+127)& (0+255),7,b	;volatile
 32037  01414E  D03C               	goto	l12318
 32038                           
 32039                           ; BSR set to: 1
 32040                           ;bsoc.c: 57:   C.bkwo += (C.p_bat / 3600.0);
 32041  014150  0E00               	movlw	0
 32042  014152  6EE6               	movwf	postinc1,c
 32043  014154  0E00               	movlw	0
 32044  014156  6EE6               	movwf	postinc1,c
 32045  014158  0E61               	movlw	97
 32046  01415A  6EE6               	movwf	postinc1,c
 32047  01415C  0E45               	movlw	69
 32048  01415E  6EE6               	movwf	postinc1,c
 32049  014160  0060  F5F3  FFE6   	movff	_C+124,postinc1
 32050  014166  0060  F5F7  FFE6   	movff	_C+125,postinc1
 32051  01416C  0060  F5FB  FFE6   	movff	_C+126,postinc1
 32052  014172  0060  F5FF  FFE6   	movff	_C+127,postinc1
 32053  014178  EC68  F0A2         	call	___fldiv	;wreg free
 32054  01417C  0060  F007  FFE6   	movff	btemp,postinc1
 32055  014182  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32056  014188  0060  F00F  FFE6   	movff	btemp+2,postinc1
 32057  01418E  0060  F013  FFE6   	movff	btemp+3,postinc1
 32058  014194  0060  F673  FFE6   	movff	_C+156,postinc1
 32059  01419A  0060  F677  FFE6   	movff	_C+157,postinc1
 32060  0141A0  0060  F67B  FFE6   	movff	_C+158,postinc1
 32061  0141A6  0060  F67F  FFE6   	movff	_C+159,postinc1
 32062  0141AC  EC3B  F09B         	call	___fladd	;wreg free
 32063  0141B0  0060  F004  F19C   	movff	btemp,_C+156	;volatile
 32064  0141B6  0060  F008  F19D   	movff	btemp+1,_C+157	;volatile
 32065  0141BC  0060  F00C  F19E   	movff	btemp+2,_C+158	;volatile
 32066  0141C2  0060  F010  F19F   	movff	btemp+3,_C+159	;volatile
 32067  0141C8                     l12318:
 32068                           
 32069                           ;bsoc.c: 59:  C.soc = ((uint16_t) ((C.dynamic_ah / C.bank_ah)*100.0) + 1);
 32070  0141C8  0E00               	movlw	0
 32071  0141CA  6EE6               	movwf	postinc1,c
 32072  0141CC  0E00               	movlw	0
 32073  0141CE  6EE6               	movwf	postinc1,c
 32074  0141D0  0EC8               	movlw	200
 32075  0141D2  6EE6               	movwf	postinc1,c
 32076  0141D4  0E42               	movlw	66
 32077  0141D6  6EE6               	movwf	postinc1,c
 32078  0141D8  0060  F623  FFE6   	movff	_C+136,postinc1
 32079  0141DE  0060  F627  FFE6   	movff	_C+137,postinc1
 32080  0141E4  0060  F62B  FFE6   	movff	_C+138,postinc1
 32081  0141EA  0060  F62F  FFE6   	movff	_C+139,postinc1
 32082  0141F0  0060  F633  FFE6   	movff	_C+140,postinc1
 32083  0141F6  0060  F637  FFE6   	movff	_C+141,postinc1
 32084  0141FC  0060  F63B  FFE6   	movff	_C+142,postinc1
 32085  014202  0060  F63F  FFE6   	movff	_C+143,postinc1
 32086  014208  EC68  F0A2         	call	___fldiv	;wreg free
 32087  01420C  0060  F007  FFE6   	movff	btemp,postinc1
 32088  014212  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32089  014218  0060  F00F  FFE6   	movff	btemp+2,postinc1
 32090  01421E  0060  F013  FFE6   	movff	btemp+3,postinc1
 32091  014224  EC26  F097         	call	___flmul	;wreg free
 32092  014228  0060  F007  FFE6   	movff	btemp,postinc1
 32093  01422E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32094  014234  0060  F00F  FFE6   	movff	btemp+2,postinc1
 32095  01423A  0060  F013  FFE6   	movff	btemp+3,postinc1
 32096  014240  ECD1  F0BF         	call	___fltol	;wreg free
 32097  014244  0060  F004  F00B   	movff	btemp,btemp+10
 32098  01424A  0060  F008  F00C   	movff	btemp+1,btemp+11
 32099  014250  0E01               	movlw	1
 32100  014252  240B               	addwf	(btemp+10)^0,w,c
 32101  014254  0101               	movlb	1	; () banked
 32102  014256  6FAA               	movwf	(_C+170)& (0+255),b	;volatile
 32103  014258  0E00               	movlw	0
 32104  01425A  200C               	addwfc	(btemp+11)^0,w,c
 32105  01425C  6FAB               	movwf	(_C+171)& (0+255),b	;volatile
 32106                           
 32107                           ; BSR set to: 1
 32108                           ;bsoc.c: 60:  if (C.soc > 100)
 32109  01425E  51AB               	movf	(_C+171)& (0+255),w,b	;volatile
 32110  014260  E104               	bnz	u1186_20
 32111  014262  0E65               	movlw	101
 32112  014264  5DAA               	subwf	(_C+170)& (0+255),w,b	;volatile
 32113  014266  A0D8               	btfss	status,0,c
 32114  014268  D004               	goto	l12324
 32115  01426A                     u1186_20:
 32116                           
 32117                           ; BSR set to: 1
 32118                           ;bsoc.c: 61:   C.soc = 100;
 32119  01426A  0E00               	movlw	0
 32120  01426C  6FAB               	movwf	(_C+171)& (0+255),b	;volatile
 32121  01426E  0E64               	movlw	100
 32122  014270  6FAA               	movwf	(_C+170)& (0+255),b	;volatile
 32123  014272                     l12324:
 32124                           
 32125                           ; BSR set to: 1
 32126                           ;bsoc.c: 63:  if (C.c_bat < 0.0) {
 32127  014272  AF47               	btfss	(_C+71)& (0+255),7,b	;volatile
 32128  014274  D043               	goto	l12328
 32129                           
 32130                           ; BSR set to: 1
 32131                           ;bsoc.c: 64:   C.runtime = (uint16_t) (-(C.dynamic_ah / C.c_bat));
 32132  014276  0060  F513  FFE6   	movff	_C+68,postinc1
 32133  01427C  0060  F517  FFE6   	movff	_C+69,postinc1
 32134  014282  0060  F51B  FFE6   	movff	_C+70,postinc1
 32135  014288  0060  F51F  FFE6   	movff	_C+71,postinc1
 32136  01428E  0060  F633  FFE6   	movff	_C+140,postinc1
 32137  014294  0060  F637  FFE6   	movff	_C+141,postinc1
 32138  01429A  0060  F63B  FFE6   	movff	_C+142,postinc1
 32139  0142A0  0060  F63F  FFE6   	movff	_C+143,postinc1
 32140  0142A6  EC68  F0A2         	call	___fldiv	;wreg free
 32141  0142AA  0060  F007  FFE6   	movff	btemp,postinc1
 32142  0142B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32143  0142B6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 32144  0142BC  0060  F013  FFE6   	movff	btemp+3,postinc1
 32145  0142C2  ECC6  F0D2         	call	___flneg	;wreg free
 32146  0142C6  0060  F007  FFE6   	movff	btemp,postinc1
 32147  0142CC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32148  0142D2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 32149  0142D8  0060  F013  FFE6   	movff	btemp+3,postinc1
 32150  0142DE  ECD1  F0BF         	call	___fltol	;wreg free
 32151  0142E2  0060  F004  F00B   	movff	btemp,btemp+10
 32152  0142E8  0060  F008  F00C   	movff	btemp+1,btemp+11
 32153  0142EE  0060  F02C  F1A8   	movff	btemp+10,_C+168	;volatile
 32154  0142F4  0060  F030  F1A9   	movff	btemp+11,_C+169	;volatile
 32155                           
 32156                           ;bsoc.c: 65:  } else {
 32157  0142FA  D004               	goto	l12330
 32158  0142FC                     l12328:
 32159                           
 32160                           ; BSR set to: 1
 32161                           ;bsoc.c: 66:   C.runtime = 120;
 32162  0142FC  0E00               	movlw	0
 32163  0142FE  6FA9               	movwf	(_C+169)& (0+255),b	;volatile
 32164  014300  0E78               	movlw	120
 32165  014302  6FA8               	movwf	(_C+168)& (0+255),b	;volatile
 32166  014304                     l12330:
 32167                           
 32168                           ;bsoc.c: 68:  if (C.runtime > 120)
 32169  014304  0101               	movlb	1	; () banked
 32170  014306  51A9               	movf	(_C+169)& (0+255),w,b	;volatile
 32171  014308  E104               	bnz	u1188_20
 32172  01430A  0E79               	movlw	121
 32173  01430C  5DA8               	subwf	(_C+168)& (0+255),w,b	;volatile
 32174  01430E  A0D8               	btfss	status,0,c
 32175  014310  D004               	goto	l12334
 32176  014312                     u1188_20:
 32177                           
 32178                           ; BSR set to: 1
 32179                           ;bsoc.c: 69:   C.runtime = 120;
 32180  014312  0E00               	movlw	0
 32181  014314  6FA9               	movwf	(_C+169)& (0+255),b	;volatile
 32182  014316  0E78               	movlw	120
 32183  014318  6FA8               	movwf	(_C+168)& (0+255),b	;volatile
 32184  01431A                     l12334:
 32185                           
 32186                           ; BSR set to: 1
 32187                           ;bsoc.c: 71:  V.lowint_count++;
 32188  01431A  0E01               	movlw	1
 32189  01431C  0102               	movlb	2	; () banked
 32190  01431E  27B0               	addwf	(_V+176)& (0+255),f,b	;volatile
 32191  014320  0E00               	movlw	0
 32192  014322  23B1               	addwfc	(_V+177)& (0+255),f,b	;volatile
 32193  014324  23B2               	addwfc	(_V+178)& (0+255),f,b	;volatile
 32194  014326  23B3               	addwfc	(_V+179)& (0+255),f,b	;volatile
 32195                           
 32196                           ; BSR set to: 2
 32197                           ;bsoc.c: 73:  log_ptr = port_data_dma_ptr();
 32198  014328  EC1E  F0D9         	call	_port_data_dma_ptr	;wreg free
 32199                           
 32200                           ;stkvar	_log_ptr @ sp[(-2)+0]
 32201  01432C  0EFF               	movlw	-1
 32202  01432E  0060  F00B  FFE3   	movff	btemp+1,plusw1
 32203  014334  0EFE               	movlw	-2
 32204  014336  0060  F007  FFE3   	movff	btemp,plusw1
 32205                           
 32206                           ;bsoc.c: 74:  sprintf((char*) log_ptr, " %lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4.3f,%4.3f,%
      +                          4.3f,%4.3f,%4.3f,%4.3d,%4.3d,%2.6f\r\n",
 32207  01433C  0060  F613  FFE6   	movff	_C+132,postinc1
 32208  014342  0060  F617  FFE6   	movff	_C+133,postinc1
 32209  014348  0060  F61B  FFE6   	movff	_C+134,postinc1
 32210  01434E  0060  F61F  FFE6   	movff	_C+135,postinc1
 32211  014354  0060  F6A3  FFE6   	movff	_C+168,postinc1
 32212  01435A  0060  F6A7  FFE6   	movff	_C+169,postinc1
 32213  014360  0060  F6AB  FFE6   	movff	_C+170,postinc1
 32214  014366  0060  F6AF  FFE6   	movff	_C+171,postinc1
 32215  01436C  0060  F643  FFE6   	movff	_C+144,postinc1
 32216  014372  0060  F647  FFE6   	movff	_C+145,postinc1
 32217  014378  0060  F64B  FFE6   	movff	_C+146,postinc1
 32218  01437E  0060  F64F  FFE6   	movff	_C+147,postinc1
 32219  014384  0060  F633  FFE6   	movff	_C+140,postinc1
 32220  01438A  0060  F637  FFE6   	movff	_C+141,postinc1
 32221  014390  0060  F63B  FFE6   	movff	_C+142,postinc1
 32222  014396  0060  F63F  FFE6   	movff	_C+143,postinc1
 32223  01439C  0060  F5D3  FFE6   	movff	_C+116,postinc1
 32224  0143A2  0060  F5D7  FFE6   	movff	_C+117,postinc1
 32225  0143A8  0060  F5DB  FFE6   	movff	_C+118,postinc1
 32226  0143AE  0060  F5DF  FFE6   	movff	_C+119,postinc1
 32227  0143B4  0060  F5C3  FFE6   	movff	_C+112,postinc1
 32228  0143BA  0060  F5C7  FFE6   	movff	_C+113,postinc1
 32229  0143C0  0060  F5CB  FFE6   	movff	_C+114,postinc1
 32230  0143C6  0060  F5CF  FFE6   	movff	_C+115,postinc1
 32231  0143CC  0060  F5E3  FFE6   	movff	_C+120,postinc1
 32232  0143D2  0060  F5E7  FFE6   	movff	_C+121,postinc1
 32233  0143D8  0060  F5EB  FFE6   	movff	_C+122,postinc1
 32234  0143DE  0060  F5EF  FFE6   	movff	_C+123,postinc1
 32235  0143E4  0060  F5F3  FFE6   	movff	_C+124,postinc1
 32236  0143EA  0060  F5F7  FFE6   	movff	_C+125,postinc1
 32237  0143F0  0060  F5FB  FFE6   	movff	_C+126,postinc1
 32238  0143F6  0060  F5FF  FFE6   	movff	_C+127,postinc1
 32239  0143FC  0060  F593  FFE6   	movff	_C+100,postinc1
 32240  014402  0060  F597  FFE6   	movff	_C+101,postinc1
 32241  014408  0060  F59B  FFE6   	movff	_C+102,postinc1
 32242  01440E  0060  F59F  FFE6   	movff	_C+103,postinc1
 32243  014414  0060  F533  FFE6   	movff	_C+76,postinc1
 32244  01441A  0060  F537  FFE6   	movff	_C+77,postinc1
 32245  014420  0060  F53B  FFE6   	movff	_C+78,postinc1
 32246  014426  0060  F53F  FFE6   	movff	_C+79,postinc1
 32247  01442C  0060  F543  FFE6   	movff	_C+80,postinc1
 32248  014432  0060  F547  FFE6   	movff	_C+81,postinc1
 32249  014438  0060  F54B  FFE6   	movff	_C+82,postinc1
 32250  01443E  0060  F54F  FFE6   	movff	_C+83,postinc1
 32251  014444  0060  F553  FFE6   	movff	_C+84,postinc1
 32252  01444A  0060  F557  FFE6   	movff	_C+85,postinc1
 32253  014450  0060  F55B  FFE6   	movff	_C+86,postinc1
 32254  014456  0060  F55F  FFE6   	movff	_C+87,postinc1
 32255  01445C  0060  FA07  FFE6   	movff	_V+129,postinc1
 32256  014462  0060  FA0B  FFE6   	movff	_V+130,postinc1
 32257  014468  0060  FA0F  FFE6   	movff	_V+131,postinc1
 32258  01446E  0060  FA13  FFE6   	movff	_V+132,postinc1
 32259  014474  0E1B               	movlw	low STR_56
 32260  014476  6EE6               	movwf	postinc1,c
 32261  014478  0EFD               	movlw	high STR_56
 32262  01447A  6EE6               	movwf	postinc1,c
 32263                           
 32264                           ;stkvar	_log_ptr @ sp[(-56)+0]
 32265  01447C  0EC8               	movlw	-56
 32266  01447E  006F FF8F FFE6     	movff	plusw1,postinc1
 32267  014484  006F FF8F FFE6     	movff	plusw1,postinc1
 32268  01448A  0E38               	movlw	56
 32269  01448C  6EE6               	movwf	postinc1,c
 32270  01448E  ECD8  F0C7         	call	_sprintf	;wreg free
 32271                           
 32272                           ; BSR set to: 0
 32273                           ;bsoc.c: 80:  StartTimer(TMR_DISPLAY, 125);
 32274  014492  0E7D               	movlw	125
 32275  014494  6EE6               	movwf	postinc1,c
 32276  014496  0E00               	movlw	0
 32277  014498  6EE6               	movwf	postinc1,c
 32278  01449A  0E0A               	movlw	10
 32279  01449C  6EE6               	movwf	postinc1,c
 32280  01449E  ECDC  F0D3         	call	_StartTimer	;wreg free
 32281                           
 32282                           ;bsoc.c: 81:  send_port_data_dma(strlen((char*) log_ptr));
 32283                           ;stkvar	_log_ptr @ sp[(-2)+0]
 32284  0144A2  0EFE               	movlw	-2
 32285  0144A4  006F FF8F FFE6     	movff	plusw1,postinc1
 32286  0144AA  006F FF8F FFE6     	movff	plusw1,postinc1
 32287  0144B0  EC1B  F0CD         	call	_strlen	;wreg free
 32288  0144B4  0060  F007  FFE6   	movff	btemp,postinc1
 32289  0144BA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 32290  0144C0  EC51  F0D2         	call	_send_port_data_dma	;wreg free
 32291                           
 32292                           ; BSR set to: 59
 32293                           ;bsoc.c: 82:  C.update = 0;
 32294  0144C4  0101               	movlb	1	; () banked
 32295  0144C6  6BAC               	clrf	(_C+172)& (0+255),b	;volatile
 32296                           
 32297                           ; BSR set to: 1
 32298  0144C8  92BE               	bcf	190,1,c	;volatile
 32299                           
 32300                           ; BSR set to: 1
 32301                           ; _calc_bsoc: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 32302  0144CA  52E5               	movf	postdec1,f,c
 32303  0144CC  52E5               	movf	postdec1,f,c
 32304  0144CE  0012               	return		;funcret
 32305  0144D0                     __end_of_calc_bsoc:
 32306                           	opt callstack 0
 32307                           
 32308 ;; *************** function _send_port_data_dma *****************
 32309 ;; Defined at:
 32310 ;;		line 258 in file "eadog.c"
 32311 ;; Parameters:    Size  Location     Type
 32312 ;;  dsize           2  [STACK] unsigned short 
 32313 ;; Auto vars:     Size  Location     Type
 32314 ;;		None
 32315 ;; Return value:  Size  Location     Type
 32316 ;;                  1  [STACK] void 
 32317 ;; Registers used:
 32318 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 32319 ;; Tracked objects:
 32320 ;;		On entry : 0/0
 32321 ;;		On exit  : 3F/3B
 32322 ;;		Unchanged: 0/0
 32323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32328 ;;Total ram usage:        0 bytes
 32329 ;; Hardware stack levels used:    1
 32330 ;; Hardware stack levels required when called:    3
 32331 ;; This function calls:
 32332 ;;		Nothing
 32333 ;; This function is called by:
 32334 ;;		_calc_bsoc
 32335 ;; This function uses a reentrant model
 32336 ;;
 32337                           
 32338                           	psect	text149
 32339  01A4A2                     __ptext149:
 32340                           	opt callstack 0
 32341  01A4A2                     _send_port_data_dma:
 32342                           	opt callstack 11
 32343                           
 32344                           ;eadog.c: 258: void send_port_data_dma(uint16_t dsize);eadog.c: 259: {;eadog.c: 260:  if
      +                           (dsize > 512)
 32345                           ;stkvar	_dsize @ sp[(0)+-2]
 32346                           
 32347                           ; BSR set to: 1
 32348                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32349                           ;incstack = 0
 32350  01A4A2  0EFE               	movlw	-2
 32351  01A4A4  04E3               	decf	plusw1,w,c
 32352  01A4A6  0EFF               	movlw	-1
 32353  01A4A8  006F FF8C  F001    	movff	plusw1,btemp
 32354  01A4AE  0E02               	movlw	2
 32355  01A4B0  5A01               	subwfb	btemp^0,f,c
 32356  01A4B2  A0D8               	btfss	status,0,c
 32357  01A4B4  D00C               	goto	l9484
 32358                           
 32359                           ;eadog.c: 261:   dsize = 512;
 32360  01A4B6  0E00               	movlw	0
 32361  01A4B8  6E0B               	movwf	(btemp+10)^0,c
 32362  01A4BA  0E02               	movlw	2
 32363  01A4BC  6E0C               	movwf	(btemp+11)^0,c
 32364                           
 32365                           ;stkvar	_dsize @ sp[(0)+-2]
 32366  01A4BE  0EFE               	movlw	-2
 32367  01A4C0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 32368  01A4C6  0EFF               	movlw	-1
 32369  01A4C8  0060  F033  FFE3   	movff	btemp+11,plusw1
 32370  01A4CE                     l9484:
 32371                           
 32372                           ;eadog.c: 263:  DMA2CON0bits.EN = 0;
 32373  01A4CE  013B               	movlb	59	; () banked
 32374  01A4D0  9FDC               	bcf	220,7,b	;volatile
 32375                           
 32376                           ; BSR set to: 59
 32377                           ;eadog.c: 264:  DMA2SSZ = dsize;
 32378                           ;stkvar	_dsize @ sp[(0)+-2]
 32379  01A4D2  0EFE               	movlw	-2
 32380  01A4D4  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 32381  01A4DA  0EFF               	movlw	-1
 32382  01A4DC  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 32383                           
 32384                           ; BSR set to: 59
 32385                           ;eadog.c: 265:  DMA2DSZ = 1;
 32386  01A4E2  0E00               	movlw	0
 32387  01A4E4  6FCF               	movwf	207,b	;volatile
 32388  01A4E6  0E01               	movlw	1
 32389  01A4E8  6FCE               	movwf	206,b	;volatile
 32390                           
 32391                           ; BSR set to: 59
 32392                           ;eadog.c: 266:  DMA2CON0bits.EN = 1;
 32393  01A4EA  8FDC               	bsf	220,7,b	;volatile
 32394                           
 32395                           ; BSR set to: 59
 32396                           ;eadog.c: 267:  DMA2CON0bits.DMA2SIRQEN = 1;
 32397  01A4EC  8DDC               	bsf	220,6,b	;volatile
 32398                           
 32399                           ; BSR set to: 59
 32400                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 32401  01A4EE  52E5               	movf	postdec1,f,c
 32402  01A4F0  52E5               	movf	postdec1,f,c
 32403  01A4F2  0012               	return		;funcret
 32404  01A4F4                     __end_of_send_port_data_dma:
 32405                           	opt callstack 0
 32406                           
 32407 ;; *************** function _port_data_dma_ptr *****************
 32408 ;; Defined at:
 32409 ;;		line 273 in file "eadog.c"
 32410 ;; Parameters:    Size  Location     Type
 32411 ;;		None
 32412 ;; Auto vars:     Size  Location     Type
 32413 ;;		None
 32414 ;; Return value:  Size  Location     Type
 32415 ;;                  2  [STACK] PTR unsigned char 
 32416 ;; Registers used:
 32417 ;;		wreg, status,2, status,0, btemp, btemp+1
 32418 ;; Tracked objects:
 32419 ;;		On entry : 3F/2
 32420 ;;		On exit  : 0/0
 32421 ;;		Unchanged: 0/0
 32422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32427 ;;Total ram usage:        0 bytes
 32428 ;; Hardware stack levels used:    1
 32429 ;; Hardware stack levels required when called:    3
 32430 ;; This function calls:
 32431 ;;		Nothing
 32432 ;; This function is called by:
 32433 ;;		_calc_bsoc
 32434 ;; This function uses a reentrant model
 32435 ;;
 32436                           
 32437                           	psect	text150
 32438  01B23C                     __ptext150:
 32439                           	opt callstack 0
 32440  01B23C                     _port_data_dma_ptr:
 32441                           	opt callstack 11
 32442                           
 32443                           ;eadog.c: 275:  return port_data;
 32444                           
 32445                           ; BSR set to: 59
 32446                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32447                           ;incstack = 0
 32448  01B23C  0EFF               	movlw	low _port_data
 32449  01B23E  6E01               	movwf	btemp^0,c
 32450  01B240  0E05               	movlw	high _port_data
 32451  01B242  6E02               	movwf	(btemp+1)^0,c
 32452                           
 32453                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 32454  01B244  0012               	return		;funcret
 32455  01B246                     __end_of_port_data_dma_ptr:
 32456                           	opt callstack 0
 32457                           
 32458 ;; *************** function _INT0_ISR *****************
 32459 ;; Defined at:
 32460 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 32461 ;; Parameters:    Size  Location     Type
 32462 ;;		None
 32463 ;; Auto vars:     Size  Location     Type
 32464 ;;		None
 32465 ;; Return value:  Size  Location     Type
 32466 ;;                  1    wreg      void 
 32467 ;; Registers used:
 32468 ;;		wreg, status,2, status,0, pclath, tosl
 32469 ;; Tracked objects:
 32470 ;;		On entry : 0/0
 32471 ;;		On exit  : 0/0
 32472 ;;		Unchanged: 0/0
 32473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32478 ;;Total ram usage:        0 bytes
 32479 ;; Hardware stack levels used:    1
 32480 ;; Hardware stack levels required when called:    2
 32481 ;; This function calls:
 32482 ;;		_INT0_CallBack
 32483 ;; This function is called by:
 32484 ;;		Interrupt level 2
 32485 ;; This function uses a non-reentrant model
 32486 ;;
 32487                           
 32488                           	psect	text151
 32489  01B214                     __ptext151:
 32490                           	opt callstack 0
 32491  01B214                     _INT0_ISR:
 32492                           	opt callstack 3
 32493                           
 32494                           ;incstack = 0
 32495  01B214  EE14  F0C2         	lfsr	1,___inthi_sp
 32496                           
 32497                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 32498  01B218  0139               	movlb	57	; () banked
 32499  01B21A  91A1               	bcf	161,0,b	;volatile
 32500                           
 32501                           ; BSR set to: 57
 32502                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 32503  01B21C  ECD0  F0D7         	call	_INT0_CallBack	;wreg free
 32504  01B220  0011               	retfie		f
 32505  01B222                     __end_of_INT0_ISR:
 32506                           	opt callstack 0
 32507                           
 32508 ;; *************** function _INT0_CallBack *****************
 32509 ;; Defined at:
 32510 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 32511 ;; Parameters:    Size  Location     Type
 32512 ;;		None
 32513 ;; Auto vars:     Size  Location     Type
 32514 ;;		None
 32515 ;; Return value:  Size  Location     Type
 32516 ;;                  1  [STACK] void 
 32517 ;; Registers used:
 32518 ;;		wreg, status,2, status,0, pclath, tosl
 32519 ;; Tracked objects:
 32520 ;;		On entry : 3F/39
 32521 ;;		On exit  : 0/0
 32522 ;;		Unchanged: 0/0
 32523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32528 ;;Total ram usage:        0 bytes
 32529 ;; Hardware stack levels used:    1
 32530 ;; Hardware stack levels required when called:    1
 32531 ;; This function calls:
 32532 ;;		Absolute function
 32533 ;;		_INT0_DefaultInterruptHandler
 32534 ;; This function is called by:
 32535 ;;		_INT0_ISR
 32536 ;; This function uses a reentrant model
 32537 ;;
 32538                           
 32539                           	psect	text152
 32540  01AFA0                     __ptext152:
 32541                           	opt callstack 0
 32542  01AFA0                     _INT0_CallBack:
 32543                           	opt callstack 3
 32544                           
 32545                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 32546                           
 32547                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32548                           ;incstack = 0
 32549  01AFA0  0100               	movlb	0	; () banked
 32550  01AFA2  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 32551  01AFA4  11BE               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 32552  01AFA6  11BF               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 32553  01AFA8  B4D8               	btfsc	status,2,c
 32554  01AFAA  0012               	return	
 32555                           
 32556                           ; BSR set to: 0
 32557                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 32558  01AFAC  D801               	call	u952_48
 32559  01AFAE  0012               	return	
 32560  01AFB0                     u952_48:
 32561  01AFB0  0005               	push	
 32562  01AFB2  6EFA               	movwf	pclath,c
 32563  01AFB4  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 32564  01AFB6  6EFD               	movwf	tosl,c
 32565  01AFB8  51BE               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 32566  01AFBA  6EFE               	movwf	tosh,c
 32567  01AFBC  51BF               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 32568  01AFBE  6EFF               	movwf	tosu,c
 32569  01AFC0  50FA               	movf	pclath,w,c
 32570  01AFC2  0012               	return		;indir
 32571  01AFC4                     __end_of_INT0_CallBack:
 32572                           	opt callstack 0
 32573                           
 32574 ;; *************** function _INT0_DefaultInterruptHandler *****************
 32575 ;; Defined at:
 32576 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 32577 ;; Parameters:    Size  Location     Type
 32578 ;;		None
 32579 ;; Auto vars:     Size  Location     Type
 32580 ;;		None
 32581 ;; Return value:  Size  Location     Type
 32582 ;;                  1  [STACK] void 
 32583 ;; Registers used:
 32584 ;;		None
 32585 ;; Tracked objects:
 32586 ;;		On entry : 3F/0
 32587 ;;		On exit  : 0/0
 32588 ;;		Unchanged: 0/0
 32589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32594 ;;Total ram usage:        0 bytes
 32595 ;; Hardware stack levels used:    1
 32596 ;; This function calls:
 32597 ;;		Nothing
 32598 ;; This function is called by:
 32599 ;;		_EXT_INT_Initialize
 32600 ;;		_INT0_CallBack
 32601 ;; This function uses a reentrant model
 32602 ;;
 32603                           
 32604                           	psect	text153
 32605  01B2B6                     __ptext153:
 32606                           	opt callstack 0
 32607  01B2B6                     _INT0_DefaultInterruptHandler:
 32608                           	opt callstack 3
 32609                           
 32610                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32611                           
 32612                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32613                           ;incstack = 0
 32614  01B2B6  0012               	return		;funcret
 32615  01B2B8                     __end_of_INT0_DefaultInterruptHandler:
 32616                           	opt callstack 0
 32617                           
 32618 ;; *************** function _Default_ISR *****************
 32619 ;; Defined at:
 32620 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 32621 ;; Parameters:    Size  Location     Type
 32622 ;;		None
 32623 ;; Auto vars:     Size  Location     Type
 32624 ;;		None
 32625 ;; Return value:  Size  Location     Type
 32626 ;;                  1    wreg      void 
 32627 ;; Registers used:
 32628 ;;		None
 32629 ;; Tracked objects:
 32630 ;;		On entry : 0/0
 32631 ;;		On exit  : 0/0
 32632 ;;		Unchanged: 0/0
 32633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32638 ;;Total ram usage:        0 bytes
 32639 ;; Hardware stack levels used:    1
 32640 ;; This function calls:
 32641 ;;		Nothing
 32642 ;; This function is called by:
 32643 ;;		Interrupt level 2
 32644 ;; This function uses a non-reentrant model
 32645 ;;
 32646                           
 32647                           	psect	text154
 32648  01B2AC                     __ptext154:
 32649                           	opt callstack 0
 32650  01B2AC                     _Default_ISR:
 32651                           	opt callstack 5
 32652                           
 32653                           ;incstack = 0
 32654  01B2AC  EE14  F0C2         	lfsr	1,___inthi_sp
 32655  01B2B0  0011               	retfie		f
 32656  01B2B2                     __end_of_Default_ISR:
 32657                           	opt callstack 0
 32658                           
 32659 ;; *************** function _ADCC_ISR *****************
 32660 ;; Defined at:
 32661 ;;		line 314 in file "mcc_generated_files/adcc.c"
 32662 ;; Parameters:    Size  Location     Type
 32663 ;;		None
 32664 ;; Auto vars:     Size  Location     Type
 32665 ;;		None
 32666 ;; Return value:  Size  Location     Type
 32667 ;;                  1    wreg      void 
 32668 ;; Registers used:
 32669 ;;		wreg, status,2, status,0, pclath, tosl
 32670 ;; Tracked objects:
 32671 ;;		On entry : 0/0
 32672 ;;		On exit  : 0/0
 32673 ;;		Unchanged: 0/0
 32674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32679 ;;Total ram usage:        0 bytes
 32680 ;; Hardware stack levels used:    1
 32681 ;; Hardware stack levels required when called:    1
 32682 ;; This function calls:
 32683 ;;		Absolute function
 32684 ;;		_ADCC_DefaultInterruptHandler
 32685 ;;		_adc_int_handler
 32686 ;; This function is called by:
 32687 ;;		Interrupt level 2
 32688 ;; This function uses a non-reentrant model
 32689 ;;
 32690                           
 32691                           	psect	text155
 32692  01ABC0                     __ptext155:
 32693                           	opt callstack 0
 32694  01ABC0                     _ADCC_ISR:
 32695                           	opt callstack 4
 32696                           
 32697                           ;incstack = 0
 32698  01ABC0  EE14  F0C2         	lfsr	1,___inthi_sp
 32699                           
 32700                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 32701  01ABC4  0139               	movlb	57	; () banked
 32702  01ABC6  95A1               	bcf	161,2,b	;volatile
 32703                           
 32704                           ; BSR set to: 57
 32705                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 32706  01ABC8  0100               	movlb	0	; () banked
 32707  01ABCA  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 32708  01ABCC  11AF               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 32709  01ABCE  11B0               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 32710  01ABD0  B4D8               	btfsc	status,2,c
 32711  01ABD2  0011               	retfie		f
 32712                           
 32713                           ; BSR set to: 0
 32714                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 32715  01ABD4  D801               	call	i2u998_48
 32716  01ABD6  0011               	retfie		f
 32717  01ABD8                     i2u998_48:
 32718  01ABD8  0005               	push	
 32719  01ABDA  6EFA               	movwf	pclath,c
 32720  01ABDC  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 32721  01ABDE  6EFD               	movwf	tosl,c
 32722  01ABE0  51AF               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 32723  01ABE2  6EFE               	movwf	tosh,c
 32724  01ABE4  51B0               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 32725  01ABE6  6EFF               	movwf	tosu,c
 32726  01ABE8  50FA               	movf	pclath,w,c
 32727  01ABEA  0012               	return		;indir
 32728  01ABEC                     __end_of_ADCC_ISR:
 32729                           	opt callstack 0
 32730                           
 32731 ;; *************** function _adc_int_t_handler *****************
 32732 ;; Defined at:
 32733 ;;		line 143 in file "daq.c"
 32734 ;; Parameters:    Size  Location     Type
 32735 ;;		None
 32736 ;; Auto vars:     Size  Location     Type
 32737 ;;		None
 32738 ;; Return value:  Size  Location     Type
 32739 ;;                  1  [STACK] void 
 32740 ;; Registers used:
 32741 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 32742 ;; Tracked objects:
 32743 ;;		On entry : 3F/0
 32744 ;;		On exit  : 1/0
 32745 ;;		Unchanged: 0/0
 32746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32751 ;;Total ram usage:        0 bytes
 32752 ;; Hardware stack levels used:    1
 32753 ;; Hardware stack levels required when called:    1
 32754 ;; This function calls:
 32755 ;;		_ADCC_DischargeSampleCapacitor
 32756 ;;		_ADCC_StartConversion
 32757 ;; This function is called by:
 32758 ;;		_start_adc_scan
 32759 ;;		_ADCC_ThresholdISR
 32760 ;; This function uses a reentrant model
 32761 ;;
 32762                           
 32763                           	psect	text156
 32764  019F46                     __ptext156:
 32765                           	opt callstack 0
 32766  019F46                     _adc_int_t_handler:
 32767                           	opt callstack 3
 32768                           
 32769                           ;daq.c: 148:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 32770                           
 32771                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32772                           ;incstack = 0
 32773  019F46  013E               	movlb	62	; () banked
 32774  019F48  51E6               	movf	230,w,b	;volatile
 32775  019F4A  006F FB9C  F001    	movff	16103,btemp	;volatile
 32776  019F50  6A02               	clrf	(btemp+1)^0,c
 32777  019F52  0060  F004  F002   	movff	btemp,btemp+1
 32778  019F58  6A01               	clrf	btemp^0,c
 32779  019F5A  2601               	addwf	btemp^0,f,c
 32780  019F5C  0E00               	movlw	0
 32781  019F5E  2202               	addwfc	(btemp+1)^0,f,c
 32782  019F60  0100               	movlb	0	; () banked
 32783  019F62  51E8               	movf	(_R+36)& (0+255),w,b	;volatile
 32784  019F64  0D02               	mullw	2
 32785  019F66  50F3               	movf	243,w,c
 32786  019F68  0FC4               	addlw	low _R
 32787  019F6A  6ED9               	movwf	fsr2l,c
 32788  019F6C  6ADA               	clrf	fsr2h,c
 32789  019F6E  0060  F007  FFDE   	movff	btemp,postinc2
 32790  019F74  0060  F00B  FFDD   	movff	btemp+1,postdec2
 32791  019F7A                     l10770:
 32792                           
 32793                           ;daq.c: 150:   if (++R.scan_index > 0XD) {
 32794  019F7A  0100               	movlb	0	; () banked
 32795  019F7C  2BE8               	incf	(_R+36)& (0+255),f,b	;volatile
 32796  019F7E  0E0D               	movlw	13
 32797  019F80  65E8               	cpfsgt	(_R+36)& (0+255),b	;volatile
 32798  019F82  D003               	goto	l10776
 32799                           
 32800                           ; BSR set to: 0
 32801                           ;daq.c: 151:    R.done = 1;
 32802  019F84  0E01               	movlw	1
 32803  019F86  6FEB               	movwf	(_R+39)& (0+255),b	;volatile
 32804  019F88  0012               	return	
 32805  019F8A                     l10776:
 32806                           
 32807                           ; BSR set to: 0
 32808                           ;daq.c: 157:  } while (!((R.scan_select >> R.scan_index) &0x1));
 32809  019F8A  0060  F3A0  F00C   	movff	_R+36,btemp+11	;volatile
 32810  019F90  EE20  F0E9         	lfsr	2,_R+37	;volatile
 32811  019F94  006F FF78  F009    	movff	postinc2,btemp+8
 32812  019F9A  006F FF74  F00A    	movff	postdec2,btemp+9
 32813  019FA0  2A0C               	incf	(btemp+11)^0,f,c
 32814  019FA2  D003               	goto	u995_44
 32815  019FA4                     u995_45:
 32816  019FA4  90D8               	bcf	status,0,c
 32817  019FA6  320A               	rrcf	(btemp+9)^0,f,c
 32818  019FA8  3209               	rrcf	(btemp+8)^0,f,c
 32819  019FAA                     u995_44:
 32820  019FAA  2E0C               	decfsz	(btemp+11)^0,f,c
 32821  019FAC  D7FB               	goto	u995_45
 32822  019FAE  A009               	btfss	(btemp+8)^0,0,c
 32823  019FB0  D7E4               	goto	l10770
 32824                           
 32825                           ;daq.c: 158:  ADCC_DischargeSampleCapacitor();
 32826  019FB2  EC35  F0D9         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 32827                           
 32828                           ; BSR set to: 62
 32829                           ;daq.c: 159:  ADCC_StartConversion(R.scan_index & 0xf);
 32830  019FB6  0100               	movlb	0	; () banked
 32831  019FB8  51E8               	movf	(_R+36)& (0+255),w,b	;volatile
 32832  019FBA  0B0F               	andlw	15
 32833  019FBC  6EE6               	movwf	postinc1,c
 32834  019FBE  ECDA  F0D8         	call	_ADCC_StartConversion	;wreg free
 32835                           
 32836                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 32837  019FC2  0012               	return		;funcret
 32838  019FC4                     __end_of_adc_int_t_handler:
 32839                           	opt callstack 0
 32840                           
 32841 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 32842 ;; Defined at:
 32843 ;;		line 339 in file "mcc_generated_files/adcc.c"
 32844 ;; Parameters:    Size  Location     Type
 32845 ;;		None
 32846 ;; Auto vars:     Size  Location     Type
 32847 ;;		None
 32848 ;; Return value:  Size  Location     Type
 32849 ;;                  1  [STACK] void 
 32850 ;; Registers used:
 32851 ;;		None
 32852 ;; Tracked objects:
 32853 ;;		On entry : 3F/0
 32854 ;;		On exit  : 0/0
 32855 ;;		Unchanged: 0/0
 32856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32861 ;;Total ram usage:        0 bytes
 32862 ;; Hardware stack levels used:    1
 32863 ;; This function calls:
 32864 ;;		Nothing
 32865 ;; This function is called by:
 32866 ;;		_ADCC_Initialize
 32867 ;;		_ADCC_ISR
 32868 ;;		_ADCC_ThresholdISR
 32869 ;; This function uses a reentrant model
 32870 ;;
 32871                           
 32872                           	psect	text157
 32873  01B2B8                     __ptext157:
 32874                           	opt callstack 0
 32875  01B2B8                     _ADCC_DefaultInterruptHandler:
 32876                           	opt callstack 4
 32877                           
 32878                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32879                           
 32880                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32881                           ;incstack = 0
 32882  01B2B8  0012               	return		;funcret
 32883  01B2BA                     __end_of_ADCC_DefaultInterruptHandler:
 32884                           	opt callstack 0
 32885                           
 32886 ;; *************** function _adc_int_handler *****************
 32887 ;; Defined at:
 32888 ;;		line 133 in file "daq.c"
 32889 ;; Parameters:    Size  Location     Type
 32890 ;;		None
 32891 ;; Auto vars:     Size  Location     Type
 32892 ;;		None
 32893 ;; Return value:  Size  Location     Type
 32894 ;;                  1  [STACK] void 
 32895 ;; Registers used:
 32896 ;;		None
 32897 ;; Tracked objects:
 32898 ;;		On entry : 3F/0
 32899 ;;		On exit  : 0/0
 32900 ;;		Unchanged: 0/0
 32901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32906 ;;Total ram usage:        0 bytes
 32907 ;; Hardware stack levels used:    1
 32908 ;; This function calls:
 32909 ;;		Nothing
 32910 ;; This function is called by:
 32911 ;;		_start_adc_scan
 32912 ;;		_ADCC_ISR
 32913 ;; This function uses a reentrant model
 32914 ;;
 32915                           
 32916                           	psect	text158
 32917  01B2BA                     __ptext158:
 32918                           	opt callstack 0
 32919  01B2BA                     _adc_int_handler:
 32920                           	opt callstack 4
 32921                           
 32922                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32923                           
 32924                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32925                           ;incstack = 0
 32926  01B2BA  0012               	return		;funcret
 32927  01B2BC                     __end_of_adc_int_handler:
 32928                           	opt callstack 0
 32929                           
 32930 ;; *************** function _ADCC_ThresholdISR *****************
 32931 ;; Defined at:
 32932 ;;		line 327 in file "mcc_generated_files/adcc.c"
 32933 ;; Parameters:    Size  Location     Type
 32934 ;;		None
 32935 ;; Auto vars:     Size  Location     Type
 32936 ;;		None
 32937 ;; Return value:  Size  Location     Type
 32938 ;;                  1    wreg      void 
 32939 ;; Registers used:
 32940 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 32941 ;; Tracked objects:
 32942 ;;		On entry : 0/0
 32943 ;;		On exit  : 0/0
 32944 ;;		Unchanged: 0/0
 32945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32948 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32949 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32950 ;;Total ram usage:        5 bytes
 32951 ;; Hardware stack levels used:    1
 32952 ;; Hardware stack levels required when called:    2
 32953 ;; This function calls:
 32954 ;;		Absolute function
 32955 ;;		_ADCC_DefaultInterruptHandler
 32956 ;;		_adc_int_t_handler
 32957 ;; This function is called by:
 32958 ;;		Interrupt level 2
 32959 ;; This function uses a non-reentrant model
 32960 ;;
 32961                           
 32962                           	psect	text159
 32963  01A098                     __ptext159:
 32964                           	opt callstack 0
 32965  01A098                     _ADCC_ThresholdISR:
 32966                           	opt callstack 3
 32967                           
 32968                           ;incstack = 0
 32969  01A098  0060  F004  F039   	movff	btemp,??_ADCC_ThresholdISR
 32970  01A09E  0060  F008  F03A   	movff	btemp+1,??_ADCC_ThresholdISR+1
 32971  01A0A4  0060  F024  F03B   	movff	btemp+8,??_ADCC_ThresholdISR+2
 32972  01A0AA  0060  F028  F03C   	movff	btemp+9,??_ADCC_ThresholdISR+3
 32973  01A0B0  0060  F030  F03D   	movff	btemp+11,??_ADCC_ThresholdISR+4
 32974  01A0B6  EE14  F0C2         	lfsr	1,___inthi_sp
 32975                           
 32976                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 32977  01A0BA  0139               	movlb	57	; () banked
 32978  01A0BC  97A1               	bcf	161,3,b	;volatile
 32979                           
 32980                           ; BSR set to: 57
 32981                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 32982  01A0BE  0100               	movlb	0	; () banked
 32983  01A0C0  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 32984  01A0C2  11AC               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 32985  01A0C4  11AD               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 32986  01A0C6  B4D8               	btfsc	status,2,c
 32987  01A0C8  D00C               	goto	i2u1000_49
 32988                           
 32989                           ; BSR set to: 0
 32990                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 32991  01A0CA  D801               	call	i2u1000_48
 32992  01A0CC  D00A               	goto	i2u1000_49
 32993  01A0CE                     i2u1000_48:
 32994  01A0CE  0005               	push	
 32995  01A0D0  6EFA               	movwf	pclath,c
 32996  01A0D2  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 32997  01A0D4  6EFD               	movwf	tosl,c
 32998  01A0D6  51AC               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 32999  01A0D8  6EFE               	movwf	tosh,c
 33000  01A0DA  51AD               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 33001  01A0DC  6EFF               	movwf	tosu,c
 33002  01A0DE  50FA               	movf	pclath,w,c
 33003  01A0E0  0012               	return		;indir
 33004  01A0E2                     i2u1000_49:
 33005  01A0E2  0060  F0F4  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 33006  01A0E8  0060  F0F0  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 33007  01A0EE  0060  F0EC  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 33008  01A0F4  0060  F0E8  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 33009  01A0FA  0060  F0E4  F001   	movff	??_ADCC_ThresholdISR,btemp
 33010  01A100  0011               	retfie		f
 33011  01A102                     __end_of_ADCC_ThresholdISR:
 33012                           	opt callstack 0
 33013                           
 33014 ;; *************** function _UART1_rx_vect_isr *****************
 33015 ;; Defined at:
 33016 ;;		line 181 in file "mcc_generated_files/uart1.c"
 33017 ;; Parameters:    Size  Location     Type
 33018 ;;		None
 33019 ;; Auto vars:     Size  Location     Type
 33020 ;;		None
 33021 ;; Return value:  Size  Location     Type
 33022 ;;                  1    wreg      void 
 33023 ;; Registers used:
 33024 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 33025 ;; Tracked objects:
 33026 ;;		On entry : 0/0
 33027 ;;		On exit  : 0/0
 33028 ;;		Unchanged: 0/0
 33029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33034 ;;Total ram usage:        0 bytes
 33035 ;; Hardware stack levels used:    1
 33036 ;; Hardware stack levels required when called:    1
 33037 ;; This function calls:
 33038 ;;		Absolute function
 33039 ;;		_UART1_Receive_ISR
 33040 ;; This function is called by:
 33041 ;;		Interrupt level 2
 33042 ;; This function uses a non-reentrant model
 33043 ;;
 33044                           
 33045                           	psect	text160
 33046  01AE74                     __ptext160:
 33047                           	opt callstack 0
 33048  01AE74                     _UART1_rx_vect_isr:
 33049                           	opt callstack 4
 33050                           
 33051                           ;incstack = 0
 33052  01AE74  EE14  F0C2         	lfsr	1,___inthi_sp
 33053                           
 33054                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 33055  01AE78  0100               	movlb	0	; () banked
 33056  01AE7A  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 33057  01AE7C  11B2               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 33058  01AE7E  11B3               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 33059  01AE80  B4D8               	btfsc	status,2,c
 33060  01AE82  0011               	retfie		f
 33061                           
 33062                           ; BSR set to: 0
 33063                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 33064  01AE84  D801               	call	i2u1002_48
 33065  01AE86  0011               	retfie		f
 33066  01AE88                     i2u1002_48:
 33067  01AE88  0005               	push	
 33068  01AE8A  6EFA               	movwf	pclath,c
 33069  01AE8C  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 33070  01AE8E  6EFD               	movwf	tosl,c
 33071  01AE90  51B2               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 33072  01AE92  6EFE               	movwf	tosh,c
 33073  01AE94  51B3               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 33074  01AE96  6EFF               	movwf	tosu,c
 33075  01AE98  50FA               	movf	pclath,w,c
 33076  01AE9A  0012               	return		;indir
 33077  01AE9C                     __end_of_UART1_rx_vect_isr:
 33078                           	opt callstack 0
 33079                           
 33080 ;; *************** function _UART1_Receive_ISR *****************
 33081 ;; Defined at:
 33082 ;;		line 192 in file "mcc_generated_files/uart1.c"
 33083 ;; Parameters:    Size  Location     Type
 33084 ;;		None
 33085 ;; Auto vars:     Size  Location     Type
 33086 ;;		None
 33087 ;; Return value:  Size  Location     Type
 33088 ;;                  1  [STACK] void 
 33089 ;; Registers used:
 33090 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33091 ;; Tracked objects:
 33092 ;;		On entry : 3F/0
 33093 ;;		On exit  : 0/0
 33094 ;;		Unchanged: 0/0
 33095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33100 ;;Total ram usage:        0 bytes
 33101 ;; Hardware stack levels used:    1
 33102 ;; This function calls:
 33103 ;;		Nothing
 33104 ;; This function is called by:
 33105 ;;		_UART1_Initialize
 33106 ;;		_UART1_rx_vect_isr
 33107 ;; This function uses a reentrant model
 33108 ;;
 33109                           
 33110                           	psect	text161
 33111  01B0DC                     __ptext161:
 33112                           	opt callstack 0
 33113  01B0DC                     _UART1_Receive_ISR:
 33114                           	opt callstack 4
 33115                           
 33116                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 33117                           
 33118                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33119                           ;incstack = 0
 33120  01B0DC  5038               	movf	_uart1RxHead^0,w,c
 33121  01B0DE  0F6C               	addlw	low _uart1RxBuffer
 33122  01B0E0  6ED9               	movwf	fsr2l,c
 33123  01B0E2  6ADA               	clrf	fsr2h,c
 33124  01B0E4  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 33125  01B0EA  2A38               	incf	_uart1RxHead^0,f,c	;volatile
 33126                           
 33127                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 33128  01B0EC  0E07               	movlw	7
 33129  01B0EE  6438               	cpfsgt	_uart1RxHead^0,c
 33130  01B0F0  D001               	goto	l10344
 33131                           
 33132                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 33133  01B0F2  6A38               	clrf	_uart1RxHead^0,c	;volatile
 33134  01B0F4                     l10344:
 33135                           
 33136                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 33137  01B0F4  2A36               	incf	_uart1RxCount^0,f,c	;volatile
 33138                           
 33139                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33140  01B0F6  0012               	return		;funcret
 33141  01B0F8                     __end_of_UART1_Receive_ISR:
 33142                           	opt callstack 0
 33143                           
 33144 ;; *************** function _UART2_tx_vect_isr *****************
 33145 ;; Defined at:
 33146 ;;		line 195 in file "mcc_generated_files/uart2.c"
 33147 ;; Parameters:    Size  Location     Type
 33148 ;;		None
 33149 ;; Auto vars:     Size  Location     Type
 33150 ;;		None
 33151 ;; Return value:  Size  Location     Type
 33152 ;;                  1    wreg      void 
 33153 ;; Registers used:
 33154 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 33155 ;; Tracked objects:
 33156 ;;		On entry : 0/0
 33157 ;;		On exit  : 0/0
 33158 ;;		Unchanged: 0/0
 33159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33164 ;;Total ram usage:        0 bytes
 33165 ;; Hardware stack levels used:    1
 33166 ;; Hardware stack levels required when called:    1
 33167 ;; This function calls:
 33168 ;;		Absolute function
 33169 ;;		_UART2_Transmit_ISR
 33170 ;; This function is called by:
 33171 ;;		Interrupt level 2
 33172 ;; This function uses a non-reentrant model
 33173 ;;
 33174                           
 33175                           	psect	text162
 33176  01AE9C                     __ptext162:
 33177                           	opt callstack 0
 33178  01AE9C                     _UART2_tx_vect_isr:
 33179                           	opt callstack 4
 33180                           
 33181                           ;incstack = 0
 33182  01AE9C  EE14  F0C2         	lfsr	1,___inthi_sp
 33183                           
 33184                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 33185  01AEA0  0100               	movlb	0	; () banked
 33186  01AEA2  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 33187  01AEA4  11B5               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 33188  01AEA6  11B6               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 33189  01AEA8  B4D8               	btfsc	status,2,c
 33190  01AEAA  0011               	retfie		f
 33191                           
 33192                           ; BSR set to: 0
 33193                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 33194  01AEAC  D801               	call	i2u1004_48
 33195  01AEAE  0011               	retfie		f
 33196  01AEB0                     i2u1004_48:
 33197  01AEB0  0005               	push	
 33198  01AEB2  6EFA               	movwf	pclath,c
 33199  01AEB4  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 33200  01AEB6  6EFD               	movwf	tosl,c
 33201  01AEB8  51B5               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 33202  01AEBA  6EFE               	movwf	tosh,c
 33203  01AEBC  51B6               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 33204  01AEBE  6EFF               	movwf	tosu,c
 33205  01AEC0  50FA               	movf	pclath,w,c
 33206  01AEC2  0012               	return		;indir
 33207  01AEC4                     __end_of_UART2_tx_vect_isr:
 33208                           	opt callstack 0
 33209                           
 33210 ;; *************** function _UART2_Transmit_ISR *****************
 33211 ;; Defined at:
 33212 ;;		line 213 in file "mcc_generated_files/uart2.c"
 33213 ;; Parameters:    Size  Location     Type
 33214 ;;		None
 33215 ;; Auto vars:     Size  Location     Type
 33216 ;;		None
 33217 ;; Return value:  Size  Location     Type
 33218 ;;                  1  [STACK] void 
 33219 ;; Registers used:
 33220 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33221 ;; Tracked objects:
 33222 ;;		On entry : 3F/0
 33223 ;;		On exit  : 3B/39
 33224 ;;		Unchanged: 0/0
 33225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33230 ;;Total ram usage:        0 bytes
 33231 ;; Hardware stack levels used:    1
 33232 ;; This function calls:
 33233 ;;		Nothing
 33234 ;; This function is called by:
 33235 ;;		_UART2_Initialize
 33236 ;;		_UART2_tx_vect_isr
 33237 ;; This function uses a reentrant model
 33238 ;;
 33239                           
 33240                           	psect	text163
 33241  01ABEC                     __ptext163:
 33242                           	opt callstack 0
 33243  01ABEC                     _UART2_Transmit_ISR:
 33244                           	opt callstack 4
 33245                           
 33246                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 33247                           
 33248                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33249                           ;incstack = 0
 33250  01ABEC  0E40               	movlw	64
 33251  01ABEE  6033               	cpfslt	_uart2TxBufferRemaining^0,c
 33252  01ABF0  D010               	goto	l673
 33253                           
 33254                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 33255  01ABF2  0E54               	movlw	low _uart2TxBuffer
 33256  01ABF4  2434               	addwf	_uart2TxTail^0,w,c	;volatile
 33257  01ABF6  6ED9               	movwf	fsr2l,c
 33258  01ABF8  6ADA               	clrf	fsr2h,c
 33259  01ABFA  0E03               	movlw	high _uart2TxBuffer
 33260  01ABFC  22DA               	addwfc	fsr2h,f,c
 33261  01ABFE  50DF               	movf	indf2,w,c
 33262  01AC00  013D               	movlb	61	; () banked
 33263  01AC02  6FD2               	movwf	210,b	;volatile
 33264                           
 33265                           ; BSR set to: 61
 33266  01AC04  2A34               	incf	_uart2TxTail^0,f,c	;volatile
 33267                           
 33268                           ; BSR set to: 61
 33269                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 33270  01AC06  0E3F               	movlw	63
 33271  01AC08  6434               	cpfsgt	_uart2TxTail^0,c
 33272  01AC0A  D001               	goto	l10356
 33273                           
 33274                           ; BSR set to: 61
 33275                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 33276  01AC0C  6A34               	clrf	_uart2TxTail^0,c	;volatile
 33277  01AC0E                     l10356:
 33278                           
 33279                           ; BSR set to: 61
 33280                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 33281  01AC0E  2A33               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 33282                           
 33283                           ;mcc_generated_files/uart2.c: 224:     }
 33284  01AC10  0012               	return	
 33285  01AC12                     l673:
 33286                           
 33287                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 33288  01AC12  0139               	movlb	57	; () banked
 33289  01AC14  9796               	bcf	150,3,b	;volatile
 33290                           
 33291                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 33292  01AC16  0012               	return		;funcret
 33293  01AC18                     __end_of_UART2_Transmit_ISR:
 33294                           	opt callstack 0
 33295                           
 33296 ;; *************** function _UART2_rx_vect_isr *****************
 33297 ;; Defined at:
 33298 ;;		line 203 in file "mcc_generated_files/uart2.c"
 33299 ;; Parameters:    Size  Location     Type
 33300 ;;		None
 33301 ;; Auto vars:     Size  Location     Type
 33302 ;;		None
 33303 ;; Return value:  Size  Location     Type
 33304 ;;                  1    wreg      void 
 33305 ;; Registers used:
 33306 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 33307 ;; Tracked objects:
 33308 ;;		On entry : 0/0
 33309 ;;		On exit  : 0/0
 33310 ;;		Unchanged: 0/0
 33311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33316 ;;Total ram usage:        0 bytes
 33317 ;; Hardware stack levels used:    1
 33318 ;; Hardware stack levels required when called:    1
 33319 ;; This function calls:
 33320 ;;		Absolute function
 33321 ;;		_UART2_Receive_ISR
 33322 ;; This function is called by:
 33323 ;;		Interrupt level 2
 33324 ;; This function uses a non-reentrant model
 33325 ;;
 33326                           
 33327                           	psect	text164
 33328  01AEC4                     __ptext164:
 33329                           	opt callstack 0
 33330  01AEC4                     _UART2_rx_vect_isr:
 33331                           	opt callstack 4
 33332                           
 33333                           ;incstack = 0
 33334  01AEC4  EE14  F0C2         	lfsr	1,___inthi_sp
 33335                           
 33336                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 33337  01AEC8  0100               	movlb	0	; () banked
 33338  01AECA  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 33339  01AECC  11B8               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 33340  01AECE  11B9               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 33341  01AED0  B4D8               	btfsc	status,2,c
 33342  01AED2  0011               	retfie		f
 33343                           
 33344                           ; BSR set to: 0
 33345                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 33346  01AED4  D801               	call	i2u1006_48
 33347  01AED6  0011               	retfie		f
 33348  01AED8                     i2u1006_48:
 33349  01AED8  0005               	push	
 33350  01AEDA  6EFA               	movwf	pclath,c
 33351  01AEDC  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 33352  01AEDE  6EFD               	movwf	tosl,c
 33353  01AEE0  51B8               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 33354  01AEE2  6EFE               	movwf	tosh,c
 33355  01AEE4  51B9               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 33356  01AEE6  6EFF               	movwf	tosu,c
 33357  01AEE8  50FA               	movf	pclath,w,c
 33358  01AEEA  0012               	return		;indir
 33359  01AEEC                     __end_of_UART2_rx_vect_isr:
 33360                           	opt callstack 0
 33361                           
 33362 ;; *************** function _UART2_Receive_ISR *****************
 33363 ;; Defined at:
 33364 ;;		line 233 in file "mcc_generated_files/uart2.c"
 33365 ;; Parameters:    Size  Location     Type
 33366 ;;		None
 33367 ;; Auto vars:     Size  Location     Type
 33368 ;;		None
 33369 ;; Return value:  Size  Location     Type
 33370 ;;                  1  [STACK] void 
 33371 ;; Registers used:
 33372 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33373 ;; Tracked objects:
 33374 ;;		On entry : 3F/0
 33375 ;;		On exit  : 0/0
 33376 ;;		Unchanged: 0/0
 33377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33382 ;;Total ram usage:        0 bytes
 33383 ;; Hardware stack levels used:    1
 33384 ;; This function calls:
 33385 ;;		Nothing
 33386 ;; This function is called by:
 33387 ;;		_UART2_Initialize
 33388 ;;		_UART2_rx_vect_isr
 33389 ;; This function uses a reentrant model
 33390 ;;
 33391                           
 33392                           	psect	text165
 33393  01B0A2                     __ptext165:
 33394                           	opt callstack 0
 33395  01B0A2                     _UART2_Receive_ISR:
 33396                           	opt callstack 4
 33397                           
 33398                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 33399                           
 33400                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33401                           ;incstack = 0
 33402  01B0A2  0E00               	movlw	low _uart2RxBuffer
 33403  01B0A4  2432               	addwf	_uart2RxHead^0,w,c	;volatile
 33404  01B0A6  6ED9               	movwf	fsr2l,c
 33405  01B0A8  6ADA               	clrf	fsr2h,c
 33406  01B0AA  0E05               	movlw	high _uart2RxBuffer
 33407  01B0AC  22DA               	addwfc	fsr2h,f,c
 33408  01B0AE  006F F743 FFDF     	movff	15824,indf2	;volatile
 33409  01B0B4  2A32               	incf	_uart2RxHead^0,f,c	;volatile
 33410                           
 33411                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 33412  01B0B6  2832               	incf	_uart2RxHead^0,w,c
 33413  01B0B8  B4D8               	btfsc	status,2,c
 33414                           
 33415                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 33416  01B0BA  6A32               	clrf	_uart2RxHead^0,c	;volatile
 33417                           
 33418                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 33419  01B0BC  2A30               	incf	_uart2RxCount^0,f,c	;volatile
 33420                           
 33421                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33422  01B0BE  0012               	return		;funcret
 33423  01B0C0                     __end_of_UART2_Receive_ISR:
 33424                           	opt callstack 0
 33425                           
 33426 ;; *************** function _TMR6_ISR *****************
 33427 ;; Defined at:
 33428 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 33429 ;; Parameters:    Size  Location     Type
 33430 ;;		None
 33431 ;; Auto vars:     Size  Location     Type
 33432 ;;		None
 33433 ;; Return value:  Size  Location     Type
 33434 ;;                  1    wreg      void 
 33435 ;; Registers used:
 33436 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 33437 ;; Tracked objects:
 33438 ;;		On entry : 0/0
 33439 ;;		On exit  : 0/0
 33440 ;;		Unchanged: 0/0
 33441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33444 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33445 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33446 ;;Total ram usage:        1 bytes
 33447 ;; Hardware stack levels used:    1
 33448 ;; Hardware stack levels required when called:    2
 33449 ;; This function calls:
 33450 ;;		_TMR6_CallBack
 33451 ;; This function is called by:
 33452 ;;		Interrupt level 2
 33453 ;; This function uses a non-reentrant model
 33454 ;;
 33455                           
 33456                           	psect	text166
 33457  01B114                     __ptext166:
 33458                           	opt callstack 0
 33459  01B114                     _TMR6_ISR:
 33460                           	opt callstack 3
 33461                           
 33462                           ;incstack = 0
 33463  01B114  0060  F004  F03E   	movff	btemp,??_TMR6_ISR
 33464  01B11A  EE14  F0C2         	lfsr	1,___inthi_sp
 33465                           
 33466                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 33467  01B11E  0139               	movlb	57	; () banked
 33468  01B120  91A9               	bcf	169,0,b	;volatile
 33469                           
 33470                           ; BSR set to: 57
 33471                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 33472  01B122  ECE2  F0D7         	call	_TMR6_CallBack	;wreg free
 33473  01B126  0060  F0F8  F001   	movff	??_TMR6_ISR,btemp
 33474  01B12C  0011               	retfie		f
 33475  01B12E                     __end_of_TMR6_ISR:
 33476                           	opt callstack 0
 33477                           
 33478 ;; *************** function _TMR6_CallBack *****************
 33479 ;; Defined at:
 33480 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 33481 ;; Parameters:    Size  Location     Type
 33482 ;;		None
 33483 ;; Auto vars:     Size  Location     Type
 33484 ;;		None
 33485 ;; Return value:  Size  Location     Type
 33486 ;;                  1  [STACK] void 
 33487 ;; Registers used:
 33488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 33489 ;; Tracked objects:
 33490 ;;		On entry : 3F/39
 33491 ;;		On exit  : 0/0
 33492 ;;		Unchanged: 0/0
 33493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33498 ;;Total ram usage:        0 bytes
 33499 ;; Hardware stack levels used:    1
 33500 ;; Hardware stack levels required when called:    1
 33501 ;; This function calls:
 33502 ;;		Absolute function
 33503 ;;		_TMR6_DefaultInterruptHandler
 33504 ;; This function is called by:
 33505 ;;		_TMR6_ISR
 33506 ;; This function uses a reentrant model
 33507 ;;
 33508                           
 33509                           	psect	text167
 33510  01AFC4                     __ptext167:
 33511                           	opt callstack 0
 33512  01AFC4                     _TMR6_CallBack:
 33513                           	opt callstack 3
 33514                           
 33515                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 33516                           
 33517                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33518                           ;incstack = 0
 33519  01AFC4  0100               	movlb	0	; () banked
 33520  01AFC6  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 33521  01AFC8  11A9               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 33522  01AFCA  11AA               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 33523  01AFCC  B4D8               	btfsc	status,2,c
 33524  01AFCE  0012               	return	
 33525                           
 33526                           ; BSR set to: 0
 33527                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 33528  01AFD0  D801               	call	u960_48
 33529  01AFD2  0012               	return	
 33530  01AFD4                     u960_48:
 33531  01AFD4  0005               	push	
 33532  01AFD6  6EFA               	movwf	pclath,c
 33533  01AFD8  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 33534  01AFDA  6EFD               	movwf	tosl,c
 33535  01AFDC  51A9               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 33536  01AFDE  6EFE               	movwf	tosh,c
 33537  01AFE0  51AA               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 33538  01AFE2  6EFF               	movwf	tosu,c
 33539  01AFE4  50FA               	movf	pclath,w,c
 33540  01AFE6  0012               	return		;indir
 33541  01AFE8                     __end_of_TMR6_CallBack:
 33542                           	opt callstack 0
 33543                           
 33544 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 33545 ;; Defined at:
 33546 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 33547 ;; Parameters:    Size  Location     Type
 33548 ;;		None
 33549 ;; Auto vars:     Size  Location     Type
 33550 ;;  i               1  [STACK] unsigned char 
 33551 ;; Return value:  Size  Location     Type
 33552 ;;                  1  [STACK] void 
 33553 ;; Registers used:
 33554 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 33555 ;; Tracked objects:
 33556 ;;		On entry : 3F/0
 33557 ;;		On exit  : 0/0
 33558 ;;		Unchanged: 0/0
 33559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33564 ;;Total ram usage:        0 bytes
 33565 ;; Hardware stack levels used:    1
 33566 ;; This function calls:
 33567 ;;		Nothing
 33568 ;; This function is called by:
 33569 ;;		_TMR6_Initialize
 33570 ;;		_TMR6_CallBack
 33571 ;; This function uses a reentrant model
 33572 ;;
 33573                           
 33574                           	psect	text168
 33575  01A4F4                     __ptext168:
 33576                           	opt callstack 0
 33577  01A4F4                     _TMR6_DefaultInterruptHandler:
 33578                           	opt callstack 0
 33579                           
 33580                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33581  01A4F4  52E6               	movf	postinc1,f,c
 33582                           
 33583                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 33584                           ;stkvar	_i @ sp[(-1)+0]
 33585                           
 33586                           ;incstack = 0
 33587  01A4F6  0EFF               	movlw	-1
 33588  01A4F8  6AE3               	clrf	plusw1,c
 33589  01A4FA                     l9926:
 33590                           
 33591                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 33592                           ;stkvar	_i @ sp[(-1)+0]
 33593  01A4FA  0EFF               	movlw	-1
 33594  01A4FC  50E3               	movf	plusw1,w,c
 33595  01A4FE  0D02               	mullw	2
 33596  01A500  0EE5               	movlw	low _tickCount
 33597  01A502  24F3               	addwf	243,w,c
 33598  01A504  6ED9               	movwf	fsr2l,c
 33599  01A506  0E02               	movlw	high _tickCount
 33600  01A508  20F4               	addwfc	prodh,w,c
 33601  01A50A  6EDA               	movwf	fsr2h,c
 33602  01A50C  50DE               	movf	postinc2,w,c
 33603  01A50E  10DE               	iorwf	postinc2,w,c
 33604  01A510  B4D8               	btfsc	status,2,c
 33605  01A512  D00C               	goto	l9930
 33606                           
 33607                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 33608                           ;stkvar	_i @ sp[(-1)+0]
 33609  01A514  0EFF               	movlw	-1
 33610  01A516  50E3               	movf	plusw1,w,c
 33611  01A518  0D02               	mullw	2
 33612  01A51A  0EE5               	movlw	low _tickCount
 33613  01A51C  24F3               	addwf	243,w,c
 33614  01A51E  6ED9               	movwf	fsr2l,c
 33615  01A520  0E02               	movlw	high _tickCount
 33616  01A522  20F4               	addwfc	prodh,w,c
 33617  01A524  6EDA               	movwf	fsr2h,c
 33618  01A526  06DE               	decf	postinc2,f,c
 33619  01A528  0E00               	movlw	0
 33620  01A52A  5ADD               	subwfb	postdec2,f,c
 33621  01A52C                     l9930:
 33622                           
 33623                           ;mcc_generated_files/tmr6.c: 207:  }
 33624                           ;stkvar	_i @ sp[(-1)+0]
 33625  01A52C  0EFF               	movlw	-1
 33626  01A52E  2AE3               	incf	plusw1,f,c
 33627                           
 33628                           ;stkvar	_i @ sp[(-1)+0]
 33629  01A530  0EFF               	movlw	-1
 33630  01A532  006F FF8C  F001    	movff	plusw1,btemp
 33631  01A538  0E0C               	movlw	12
 33632  01A53A  6401               	cpfsgt	btemp^0,c
 33633  01A53C  D7DE               	goto	l9926
 33634                           
 33635                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33636  01A53E  52E5               	movf	postdec1,f,c
 33637  01A540  0012               	return		;funcret
 33638  01A542                     __end_of_TMR6_DefaultInterruptHandler:
 33639                           	opt callstack 0
 33640                           
 33641 ;; *************** function _DMA1_DMASCNT_ISR *****************
 33642 ;; Defined at:
 33643 ;;		line 126 in file "mcc_generated_files/dma1.c"
 33644 ;; Parameters:    Size  Location     Type
 33645 ;;		None
 33646 ;; Auto vars:     Size  Location     Type
 33647 ;;		None
 33648 ;; Return value:  Size  Location     Type
 33649 ;;                  1    wreg      void 
 33650 ;; Registers used:
 33651 ;;		None
 33652 ;; Tracked objects:
 33653 ;;		On entry : 0/0
 33654 ;;		On exit  : 3F/0
 33655 ;;		Unchanged: 0/0
 33656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33661 ;;Total ram usage:        0 bytes
 33662 ;; Hardware stack levels used:    1
 33663 ;; This function calls:
 33664 ;;		Nothing
 33665 ;; This function is called by:
 33666 ;;		Interrupt level 2
 33667 ;; This function uses a non-reentrant model
 33668 ;;
 33669                           
 33670                           	psect	text169
 33671  01B224                     __ptext169:
 33672                           	opt callstack 0
 33673  01B224                     _DMA1_DMASCNT_ISR:
 33674                           	opt callstack 5
 33675                           
 33676                           ;incstack = 0
 33677  01B224  EE14  F0C2         	lfsr	1,___inthi_sp
 33678                           
 33679                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 33680  01B228  0139               	movlb	57	; () banked
 33681  01B22A  91A2               	bcf	162,0,b	;volatile
 33682                           
 33683                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 33684  01B22C  0100               	movlb	0	; () banked
 33685  01B22E  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 33686                           
 33687                           ; BSR set to: 0
 33688  01B230  0011               	retfie		f
 33689  01B232                     __end_of_DMA1_DMASCNT_ISR:
 33690                           	opt callstack 0
 33691                           
 33692 ;; *************** function _DMA1_DMADCNT_ISR *****************
 33693 ;; Defined at:
 33694 ;;		line 134 in file "mcc_generated_files/dma1.c"
 33695 ;; Parameters:    Size  Location     Type
 33696 ;;		None
 33697 ;; Auto vars:     Size  Location     Type
 33698 ;;		None
 33699 ;; Return value:  Size  Location     Type
 33700 ;;                  1    wreg      void 
 33701 ;; Registers used:
 33702 ;;		None
 33703 ;; Tracked objects:
 33704 ;;		On entry : 0/0
 33705 ;;		On exit  : 3F/39
 33706 ;;		Unchanged: 0/0
 33707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33712 ;;Total ram usage:        0 bytes
 33713 ;; Hardware stack levels used:    1
 33714 ;; This function calls:
 33715 ;;		Nothing
 33716 ;; This function is called by:
 33717 ;;		Interrupt level 2
 33718 ;; This function uses a non-reentrant model
 33719 ;;
 33720                           
 33721                           	psect	text170
 33722  01B248                     __ptext170:
 33723                           	opt callstack 0
 33724  01B248                     _DMA1_DMADCNT_ISR:
 33725                           	opt callstack 5
 33726                           
 33727                           ; BSR set to: 0
 33728                           ;incstack = 0
 33729  01B248  EE14  F0C2         	lfsr	1,___inthi_sp
 33730                           
 33731                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 33732  01B24C  0139               	movlb	57	; () banked
 33733  01B24E  93A2               	bcf	162,1,b	;volatile
 33734                           
 33735                           ; BSR set to: 57
 33736  01B250  0011               	retfie		f
 33737  01B252                     __end_of_DMA1_DMADCNT_ISR:
 33738                           	opt callstack 0
 33739                           
 33740 ;; *************** function _DMA1_DMAA_ISR *****************
 33741 ;; Defined at:
 33742 ;;		line 144 in file "mcc_generated_files/dma1.c"
 33743 ;; Parameters:    Size  Location     Type
 33744 ;;		None
 33745 ;; Auto vars:     Size  Location     Type
 33746 ;;		None
 33747 ;; Return value:  Size  Location     Type
 33748 ;;                  1    wreg      void 
 33749 ;; Registers used:
 33750 ;;		None
 33751 ;; Tracked objects:
 33752 ;;		On entry : 0/0
 33753 ;;		On exit  : 3F/39
 33754 ;;		Unchanged: 0/0
 33755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33760 ;;Total ram usage:        0 bytes
 33761 ;; Hardware stack levels used:    1
 33762 ;; This function calls:
 33763 ;;		Nothing
 33764 ;; This function is called by:
 33765 ;;		Interrupt level 2
 33766 ;; This function uses a non-reentrant model
 33767 ;;
 33768                           
 33769                           	psect	text171
 33770  01B254                     __ptext171:
 33771                           	opt callstack 0
 33772  01B254                     _DMA1_DMAA_ISR:
 33773                           	opt callstack 5
 33774                           
 33775                           ; BSR set to: 57
 33776                           ;incstack = 0
 33777  01B254  EE14  F0C2         	lfsr	1,___inthi_sp
 33778                           
 33779                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 33780  01B258  0139               	movlb	57	; () banked
 33781  01B25A  97A2               	bcf	162,3,b	;volatile
 33782                           
 33783                           ; BSR set to: 57
 33784  01B25C  0011               	retfie		f
 33785  01B25E                     __end_of_DMA1_DMAA_ISR:
 33786                           	opt callstack 0
 33787                           
 33788 ;; *************** function _DMA1_DMAOR_ISR *****************
 33789 ;; Defined at:
 33790 ;;		line 155 in file "mcc_generated_files/dma1.c"
 33791 ;; Parameters:    Size  Location     Type
 33792 ;;		None
 33793 ;; Auto vars:     Size  Location     Type
 33794 ;;		None
 33795 ;; Return value:  Size  Location     Type
 33796 ;;                  1    wreg      void 
 33797 ;; Registers used:
 33798 ;;		None
 33799 ;; Tracked objects:
 33800 ;;		On entry : 0/0
 33801 ;;		On exit  : 3F/39
 33802 ;;		Unchanged: 0/0
 33803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33808 ;;Total ram usage:        0 bytes
 33809 ;; Hardware stack levels used:    1
 33810 ;; This function calls:
 33811 ;;		Nothing
 33812 ;; This function is called by:
 33813 ;;		Interrupt level 2
 33814 ;; This function uses a non-reentrant model
 33815 ;;
 33816                           
 33817                           	psect	text172
 33818  01B260                     __ptext172:
 33819                           	opt callstack 0
 33820  01B260                     _DMA1_DMAOR_ISR:
 33821                           	opt callstack 5
 33822                           
 33823                           ; BSR set to: 57
 33824                           ;incstack = 0
 33825  01B260  EE14  F0C2         	lfsr	1,___inthi_sp
 33826                           
 33827                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 33828  01B264  0139               	movlb	57	; () banked
 33829  01B266  95A2               	bcf	162,2,b	;volatile
 33830                           
 33831                           ; BSR set to: 57
 33832  01B268  0011               	retfie		f
 33833  01B26A                     __end_of_DMA1_DMAOR_ISR:
 33834                           	opt callstack 0
 33835                           
 33836                           ;
 33837                           ; Interrupt Vector Table @ 0x8
 33838                           ;
 33839                           
 33840                           	psect	ivt0x8
 33841  000008                     __pivt0x8:
 33842                           	opt callstack 0
 33843  000008                     ivt0x8_base:
 33844                           	opt callstack 0
 33845                           
 33846                           ; Vector 0 : SWINT
 33847  000008  6CAB               	dw	_Default_ISR shr (0+2)
 33848                           
 33849                           ; Vector 1 : HLVD
 33850  00000A  6CAB               	dw	_Default_ISR shr (0+2)
 33851                           
 33852                           ; Vector 2 : OSF
 33853  00000C  6CAB               	dw	_Default_ISR shr (0+2)
 33854                           
 33855                           ; Vector 3 : CSW
 33856  00000E  6CAB               	dw	_Default_ISR shr (0+2)
 33857                           
 33858                           ; Vector 4 : NVM
 33859  000010  6CAB               	dw	_Default_ISR shr (0+2)
 33860                           
 33861                           ; Vector 5 : SCAN
 33862  000012  6CAB               	dw	_Default_ISR shr (0+2)
 33863                           
 33864                           ; Vector 6 : CRC
 33865  000014  6CAB               	dw	_Default_ISR shr (0+2)
 33866                           
 33867                           ; Vector 7 : IOC
 33868  000016  6CAB               	dw	_Default_ISR shr (0+2)
 33869                           
 33870                           ; Vector 8 : INT0
 33871  000018  6C85               	dw	_INT0_ISR shr (0+2)
 33872                           
 33873                           ; Vector 9 : ZCD
 33874  00001A  6CAB               	dw	_Default_ISR shr (0+2)
 33875                           
 33876                           ; Vector 10 : AD
 33877  00001C  6AF0               	dw	_ADCC_ISR shr (0+2)
 33878                           
 33879                           ; Vector 11 : ADT
 33880  00001E  6826               	dw	_ADCC_ThresholdISR shr (0+2)
 33881                           
 33882                           ; Vector 12 : CMP1
 33883  000020  6CAB               	dw	_Default_ISR shr (0+2)
 33884                           
 33885                           ; Vector 13 : SMT1
 33886  000022  6CAB               	dw	_Default_ISR shr (0+2)
 33887                           
 33888                           ; Vector 14 : SMT1PRA
 33889  000024  6CAB               	dw	_Default_ISR shr (0+2)
 33890                           
 33891                           ; Vector 15 : SMT1PRW
 33892  000026  6CAB               	dw	_Default_ISR shr (0+2)
 33893                           
 33894                           ; Vector 16 : DMA1SCNT
 33895  000028  6C89               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 33896                           
 33897                           ; Vector 17 : DMA1DCNT
 33898  00002A  6C92               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 33899                           
 33900                           ; Vector 18 : DMA1OR
 33901  00002C  6C98               	dw	_DMA1_DMAOR_ISR shr (0+2)
 33902                           
 33903                           ; Vector 19 : DMA1A
 33904  00002E  6C95               	dw	_DMA1_DMAA_ISR shr (0+2)
 33905                           
 33906                           ; Vector 20 : SPI1RX
 33907  000030  6CAB               	dw	_Default_ISR shr (0+2)
 33908                           
 33909                           ; Vector 21 : SPI1TX
 33910  000032  6CAB               	dw	_Default_ISR shr (0+2)
 33911                           
 33912                           ; Vector 22 : SPI1
 33913  000034  6CAB               	dw	_Default_ISR shr (0+2)
 33914                           
 33915                           ; Vector 23 : I2C1RX
 33916  000036  6CAB               	dw	_Default_ISR shr (0+2)
 33917                           
 33918                           ; Vector 24 : I2C1TX
 33919  000038  6CAB               	dw	_Default_ISR shr (0+2)
 33920                           
 33921                           ; Vector 25 : I2C1
 33922  00003A  6CAB               	dw	_Default_ISR shr (0+2)
 33923                           
 33924                           ; Vector 26 : I2C1E
 33925  00003C  6CAB               	dw	_Default_ISR shr (0+2)
 33926                           
 33927                           ; Vector 27 : U1RX
 33928  00003E  6B9D               	dw	_UART1_rx_vect_isr shr (0+2)
 33929                           
 33930                           ; Vector 28 : U1TX
 33931  000040  6CAB               	dw	_Default_ISR shr (0+2)
 33932                           
 33933                           ; Vector 29 : U1E
 33934  000042  6CAB               	dw	_Default_ISR shr (0+2)
 33935                           
 33936                           ; Vector 30 : U1
 33937  000044  6CAB               	dw	_Default_ISR shr (0+2)
 33938                           
 33939                           ; Vector 31 : TMR0
 33940  000046  6CAB               	dw	_Default_ISR shr (0+2)
 33941                           
 33942                           ; Vector 32 : TMR1
 33943  000048  6CAB               	dw	_Default_ISR shr (0+2)
 33944                           
 33945                           ; Vector 33 : TMR1G
 33946  00004A  6CAB               	dw	_Default_ISR shr (0+2)
 33947                           
 33948                           ; Vector 34 : TMR2
 33949  00004C  6CAB               	dw	_Default_ISR shr (0+2)
 33950                           
 33951                           ; Vector 35 : CCP1
 33952  00004E  6CAB               	dw	_Default_ISR shr (0+2)
 33953                           
 33954                           ; Vector 36 : Undefined
 33955  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 33956                           
 33957                           ; Vector 37 : NCO1
 33958  000052  6CAB               	dw	_Default_ISR shr (0+2)
 33959                           
 33960                           ; Vector 38 : CWG1
 33961  000054  6CAB               	dw	_Default_ISR shr (0+2)
 33962                           
 33963                           ; Vector 39 : CLC1
 33964  000056  6CAB               	dw	_Default_ISR shr (0+2)
 33965                           
 33966                           ; Vector 40 : INT1
 33967  000058  6A2E               	dw	_INT1_ISR shr (0+2)
 33968                           
 33969                           ; Vector 41 : CMP2
 33970  00005A  6CAB               	dw	_Default_ISR shr (0+2)
 33971                           
 33972                           ; Vector 42 : DMA2SCNT
 33973  00005C  6CAB               	dw	_Default_ISR shr (0+2)
 33974                           
 33975                           ; Vector 43 : DMA2DCNT
 33976  00005E  6CAB               	dw	_Default_ISR shr (0+2)
 33977                           
 33978                           ; Vector 44 : DMA2OR
 33979  000060  6CAB               	dw	_Default_ISR shr (0+2)
 33980                           
 33981                           ; Vector 45 : DMA2A
 33982  000062  6CAB               	dw	_Default_ISR shr (0+2)
 33983                           
 33984                           ; Vector 46 : I2C2RX
 33985  000064  6CAB               	dw	_Default_ISR shr (0+2)
 33986                           
 33987                           ; Vector 47 : I2C2TX
 33988  000066  6CAB               	dw	_Default_ISR shr (0+2)
 33989                           
 33990                           ; Vector 48 : I2C2
 33991  000068  6CAB               	dw	_Default_ISR shr (0+2)
 33992                           
 33993                           ; Vector 49 : I2C2E
 33994  00006A  6CAB               	dw	_Default_ISR shr (0+2)
 33995                           
 33996                           ; Vector 50 : U2RX
 33997  00006C  6BB1               	dw	_UART2_rx_vect_isr shr (0+2)
 33998                           
 33999                           ; Vector 51 : U2TX
 34000  00006E  6BA7               	dw	_UART2_tx_vect_isr shr (0+2)
 34001                           
 34002                           ; Vector 52 : U2E
 34003  000070  6CAB               	dw	_Default_ISR shr (0+2)
 34004                           
 34005                           ; Vector 53 : U2
 34006  000072  6CAB               	dw	_Default_ISR shr (0+2)
 34007                           
 34008                           ; Vector 54 : TMR3
 34009  000074  60FA               	dw	_TMR3_ISR shr (0+2)
 34010                           
 34011                           ; Vector 55 : TMR3G
 34012  000076  6CAB               	dw	_Default_ISR shr (0+2)
 34013                           
 34014                           ; Vector 56 : TMR4
 34015  000078  6CAB               	dw	_Default_ISR shr (0+2)
 34016                           
 34017                           ; Vector 57 : CCP2
 34018  00007A  6CAB               	dw	_Default_ISR shr (0+2)
 34019                           
 34020                           ; Vector 58 : Undefined
 34021  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 34022                           
 34023                           ; Vector 59 : CWG2
 34024  00007E  6CAB               	dw	_Default_ISR shr (0+2)
 34025                           
 34026                           ; Vector 60 : CLC2
 34027  000080  6CAB               	dw	_Default_ISR shr (0+2)
 34028                           
 34029                           ; Vector 61 : INT2
 34030  000082  6CAB               	dw	_Default_ISR shr (0+2)
 34031                           
 34032                           ; Vector 62 : Undefined
 34033  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 34034                           
 34035                           ; Vector 63 : Undefined
 34036  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 34037                           
 34038                           ; Vector 64 : Undefined
 34039  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 34040                           
 34041                           ; Vector 65 : Undefined
 34042  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 34043                           
 34044                           ; Vector 66 : Undefined
 34045  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 34046                           
 34047                           ; Vector 67 : Undefined
 34048  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 34049                           
 34050                           ; Vector 68 : Undefined
 34051  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 34052                           
 34053                           ; Vector 69 : Undefined
 34054  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 34055                           
 34056                           ; Vector 70 : TMR5
 34057  000094  68E9               	dw	_TMR5_ISR shr (0+2)
 34058                           
 34059                           ; Vector 71 : TMR5G
 34060  000096  6CAB               	dw	_Default_ISR shr (0+2)
 34061                           
 34062                           ; Vector 72 : TMR6
 34063  000098  6C45               	dw	_TMR6_ISR shr (0+2)
 34064                           
 34065                           ; Vector 73 : CCP3
 34066  00009A  6CAB               	dw	_Default_ISR shr (0+2)
 34067                           
 34068                           ; Vector 74 : CWG3
 34069  00009C  6CAB               	dw	_Default_ISR shr (0+2)
 34070                           
 34071                           ; Vector 75 : CLC3
 34072  00009E  6CAB               	dw	_Default_ISR shr (0+2)
 34073                           
 34074                           ; Vector 76 : Undefined
 34075  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 34076                           
 34077                           ; Vector 77 : Undefined
 34078  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 34079                           
 34080                           ; Vector 78 : Undefined
 34081  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 34082                           
 34083                           ; Vector 79 : Undefined
 34084  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 34085                           
 34086                           ; Vector 80 : CCP4
 34087  0000A8  6CAB               	dw	_Default_ISR shr (0+2)
 34088                           
 34089                           ; Vector 81 : CLC4
 34090  0000AA  6CAB               	dw	_Default_ISR shr (0+2)
 34091  0000AC                     ivt0x8_undefint:
 34092                           	opt callstack 0
 34093  0000AC  00FF               	reset	
 34094                           
 34095                           	psect	text173
 34096  000000                     __ptext173:
 34097                           	opt callstack 0
 34098                           
 34099                           	psect	rparam
 34100  0000                     
 34101                           	psect	temp
 34102  000001                     btemp:
 34103                           	opt callstack 0
 34104  000001                     	ds	32
 34105  0000                     wtemp0	set	btemp
 34106  0000                     wtemp1	set	btemp+2
 34107  0000                     wtemp2	set	btemp+4
 34108  0000                     wtemp3	set	btemp+6
 34109  0000                     wtemp4	set	btemp+8
 34110  0000                     wtemp5	set	btemp+10
 34111  0000                     wtemp8	set	btemp+1
 34112  0000                     ttemp0	set	btemp
 34113  0000                     ttemp1	set	btemp+3
 34114  0000                     ttemp2	set	btemp+6
 34115  0000                     ttemp3	set	btemp+9
 34116  0000                     ttemp5	set	btemp+1
 34117  0000                     ttemp6	set	btemp+4
 34118  0000                     ttemp7	set	btemp+8
 34119  0000                     ltemp0	set	btemp
 34120  0000                     ltemp1	set	btemp+4
 34121  0000                     ltemp2	set	btemp+8
 34122  0000                     lltemp0	set	btemp
 34123  0000                     lltemp1	set	btemp+8
 34124  0000                     lltemp2	set	btemp+16
 34125  0000                     lltemp3	set	btemp+24
 34126                           tosu	equ	0x3FFF
 34127                           tosh	equ	0x3FFE
 34128                           tosl	equ	0x3FFD
 34129                           stkptr	equ	0x3FFC
 34130                           pclatu	equ	0x3FFB
 34131                           pclath	equ	0x3FFA
 34132                           pcl	equ	0x3FF9
 34133                           tblptru	equ	0x3FF8
 34134                           tblptrh	equ	0x3FF7
 34135                           tblptrl	equ	0x3FF6
 34136                           tablat	equ	0x3FF5
 34137                           prodh	equ	0x3FF4
 34138                           prodl	equ	0x3FF3
 34139                           indf0	equ	0x3FEF
 34140                           postinc0	equ	0x3FEE
 34141                           postdec0	equ	0x3FED
 34142                           preinc0	equ	0x3FEC
 34143                           plusw0	equ	0x3FEB
 34144                           fsr0h	equ	0x3FEA
 34145                           fsr0l	equ	0x3FE9
 34146                           wreg	equ	0x3FE8
 34147                           indf1	equ	0x3FE7
 34148                           postinc1	equ	0x3FE6
 34149                           postdec1	equ	0x3FE5
 34150                           preinc1	equ	0x3FE4
 34151                           plusw1	equ	0x3FE3
 34152                           fsr1h	equ	0x3FE2
 34153                           fsr1l	equ	0x3FE1
 34154                           bsr	equ	0x3FE0
 34155                           indf2	equ	0x3FDF
 34156                           postinc2	equ	0x3FDE
 34157                           postdec2	equ	0x3FDD
 34158                           preinc2	equ	0x3FDC
 34159                           plusw2	equ	0x3FDB
 34160                           fsr2h	equ	0x3FDA
 34161                           fsr2l	equ	0x3FD9
 34162                           status	equ	0x3FD8


Data Sizes:
    Strings     740
    Constant    492
    Data        997
    BSS         1106
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     14      38
    BANK0           160      0     154
    BANK1           256      0     251
    BANK2           256      0     255
    BANK3           256     25     253
    BANK4           256      0     134
    BANK5           256      0     255
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_93(CODE[1]), STR_55(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_90(CODE[3]), STR_86(CODE[3]), STR_81(CODE[3]), STR_76(CODE[3]), 
		 -> STR_71(CODE[3]), STR_67(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_90(CODE[3]), STR_86(CODE[3]), STR_81(CODE[3]), STR_76(CODE[3]), 
		 -> STR_71(CODE[3]), STR_67(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 85
		 -> ct(STACK[3]), STR_56(CODE[85]), STR_54(CODE[3]), STR_53(CODE[3]), 
		 -> STR_52(CODE[19]), STR_51(CODE[19]), STR_50(CODE[19]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_47(CODE[19]), STR_46(CODE[24]), STR_45(CODE[15]), 
		 -> STR_44(CODE[15]), STR_43(CODE[15]), STR_42(CODE[10]), STR_41(CODE[10]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_36(CODE[3]), STR_35(CODE[3]), 
		 -> STR_34(CODE[3]), STR_33(CODE[17]), STR_32(CODE[16]), STR_31(CODE[16]), 
		 -> STR_30(CODE[20]), STR_29(CODE[20]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[17]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    l	PTR const unsigned char  size(2) Largest target is 85
		 -> ct(STACK[3]), STR_56(CODE[85]), STR_54(CODE[3]), STR_53(CODE[3]), 
		 -> STR_52(CODE[19]), STR_51(CODE[19]), STR_50(CODE[19]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_47(CODE[19]), STR_46(CODE[24]), STR_45(CODE[15]), 
		 -> STR_44(CODE[15]), STR_43(CODE[15]), STR_42(CODE[10]), STR_41(CODE[10]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_36(CODE[3]), STR_35(CODE[3]), 
		 -> STR_34(CODE[3]), STR_33(CODE[17]), STR_32(CODE[16]), STR_31(CODE[16]), 
		 -> STR_30(CODE[20]), STR_29(CODE[20]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[17]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> spin(CODE[120]), STR_38(CODE[9]), STR_37(CODE[12]), D.lcd(BIGRAM[288]), 
		 -> D(BIGRAM[290]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[6]), 
		 -> V(BANK2[188]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> spin(CODE[120]), STR_38(CODE[9]), STR_37(CODE[12]), D.lcd(BIGRAM[288]), 
		 -> D(BIGRAM[290]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[6]), 
		 -> V(BANK2[188]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_62(CODE[4]), STR_61(CODE[4]), STR_58(CODE[4]), STR_57(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_62(CODE[4]), STR_61(CODE[4]), STR_58(CODE[4]), STR_57(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_36(CODE[3]), STR_35(CODE[3]), STR_34(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 85
		 -> STR_56(CODE[85]), STR_54(CODE[3]), STR_53(CODE[3]), STR_52(CODE[19]), 
		 -> STR_51(CODE[19]), STR_50(CODE[19]), STR_49(CODE[19]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_46(CODE[24]), STR_45(CODE[15]), STR_44(CODE[15]), 
		 -> STR_43(CODE[15]), STR_42(CODE[10]), STR_41(CODE[10]), STR_40(CODE[19]), 
		 -> STR_39(CODE[19]), STR_33(CODE[17]), STR_32(CODE[16]), STR_31(CODE[16]), 
		 -> STR_30(CODE[20]), STR_29(CODE[20]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[17]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S5948_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[290]), port_data(BIGRAM[512]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR const unsigned char  size(2) Largest target is 85
		 -> STR_56(CODE[85]), STR_54(CODE[3]), STR_53(CODE[3]), STR_52(CODE[19]), 
		 -> STR_51(CODE[19]), STR_50(CODE[19]), STR_49(CODE[19]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_46(CODE[24]), STR_45(CODE[15]), STR_44(CODE[15]), 
		 -> STR_43(CODE[15]), STR_42(CODE[10]), STR_41(CODE[10]), STR_40(CODE[19]), 
		 -> STR_39(CODE[19]), STR_36(CODE[3]), STR_35(CODE[3]), STR_34(CODE[3]), 
		 -> STR_33(CODE[17]), STR_32(CODE[16]), STR_31(CODE[16]), STR_30(CODE[20]), 
		 -> STR_29(CODE[20]), STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), 
		 -> STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), STR_22(CODE[19]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[17]), STR_14(CODE[17]), 
		 -> STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), STR_6(CODE[17]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 85
		 -> STR_56(CODE[85]), STR_54(CODE[3]), STR_53(CODE[3]), STR_52(CODE[19]), 
		 -> STR_51(CODE[19]), STR_50(CODE[19]), STR_49(CODE[19]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_46(CODE[24]), STR_45(CODE[15]), STR_44(CODE[15]), 
		 -> STR_43(CODE[15]), STR_42(CODE[10]), STR_41(CODE[10]), STR_40(CODE[19]), 
		 -> STR_39(CODE[19]), STR_36(CODE[3]), STR_35(CODE[3]), STR_34(CODE[3]), 
		 -> STR_33(CODE[17]), STR_32(CODE[16]), STR_31(CODE[16]), STR_30(CODE[20]), 
		 -> STR_29(CODE[20]), STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), 
		 -> STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), STR_22(CODE[19]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[17]), STR_14(CODE[17]), 
		 -> STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), STR_6(CODE[17]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 85
		 -> STR_56(CODE[85]), STR_54(CODE[3]), STR_53(CODE[3]), STR_52(CODE[19]), 
		 -> STR_51(CODE[19]), STR_50(CODE[19]), STR_49(CODE[19]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_46(CODE[24]), STR_45(CODE[15]), STR_44(CODE[15]), 
		 -> STR_43(CODE[15]), STR_42(CODE[10]), STR_41(CODE[10]), STR_40(CODE[19]), 
		 -> STR_39(CODE[19]), STR_36(CODE[3]), STR_35(CODE[3]), STR_34(CODE[3]), 
		 -> STR_33(CODE[17]), STR_32(CODE[16]), STR_31(CODE[16]), STR_30(CODE[20]), 
		 -> STR_29(CODE[20]), STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), 
		 -> STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), STR_22(CODE[19]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[17]), STR_14(CODE[17]), 
		 -> STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), STR_6(CODE[17]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_38(CODE[9]), STR_37(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_3(CODE[6]), 
		 -> V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_38(CODE[9]), STR_37(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_3(CODE[6]), 
		 -> V(BANK2[188]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_38(CODE[9]), 
		 -> STR_37(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), 
		 -> STR_3(CODE[6]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4464tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_38(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_37(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1995spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    S1995spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0  371708
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                             ___flge
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                _eaDogM_WriteCommand
                          _esr_check
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      31
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8321
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         4     0      4      22
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1    8753
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31190
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  186232
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   92863
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            66    10     56   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   62814
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   62550
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31159
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (2) _fabsf                                                8     4      4      47
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (3) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                             10 COMRAM     4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           25    25      0   35433
                                              0 BANK3     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0   35343
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           2     2      0   35343
                         _StartTimer
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            66    10     56   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (17) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (17) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (27) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (27) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___flge
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _esr_check
     _StartTimer
     _TimerDone
     _WaitMs
       _StartTimer
       _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     322      69        9.8%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      86      13       52.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100     19      FD      11       98.8%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FF       9       99.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FB       7       98.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      9A       5       96.2%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      E      26       1       60.3%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     53C      58        0.0%
DATA                 0      0     85E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Dec 13 16:31:35 2019

                     _SPI1_Exchange8bit B02A                __end_of_set_display_info B084  
                                     _C 0100                                       _D 07FF  
                                     _H 00F3                                       _P 009E  
                                     _R 00C4                                       _S 02BC  
                                     _T FBFF                                       _V 0200  
      __end_of_TMR5_SetInterruptHandler ADAA            __end_of_start_switch_handler B02A  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FD07                  __end_of_FVR_Initialize B292  
                           __CFG_LVP$ON 000000                                     l169 B19A  
                                   l807 B038                                     l673 AC12  
                                   _GIE 01FE97                                     _abs A5D4  
                                   _pad 8C7E                 __size_of_PMD_Initialize 0014  
                       _TMR2_Initialize B146                                     prod 003FF3  
                                   tosl 003FFD                                     wreg 003FE8  
                         _INT0_CallBack AFA0                       _update_adc_result A8F6  
                         __CFG_BBEN$OFF 000000                   __size_of_Volts_to_SOC 0092  
                         _INT1_CallBack AF34                            __CFG_ZCD$OFF 000000  
                                  l1000 A872                                    l2104 8CDA  
                                  l1320 224E                                    l2124 4FD4  
                                  l2204 0B1A                                    l2047 6730  
                                  l1335 27A8                                    l2160 123A  
                                  l1352 2E10                                    l1433 A2F8  
                                  l1345 2846                                    l1337 27AE  
                                  l3050 A614                                    l3042 7CA4  
                                  l2242 681E                                    l3019 7752  
                                  l1347 290C                         _timer3ReloadVal 0027  
                                  l1188 A8B2                                    l1348 2A1A  
                                  l3150 8B5C                                    l2263 5E82  
                                  l2328 21E6                                    l3081 6EDC  
                                  l1651 A94C                                    l1708 B080  
                                  l2620 960E                                    l1660 73F8  
                                  l1821 7B0E                                    l1573 9988  
                                  l2189 066A                                    l1661 7554  
                                  l2278 53BA                                    l2631 83DC  
                                  l2624 8308                                    l3432 9F3C  
                                  l1592 A9B6                                    l3417 733C  
                                  l1577 9C8C                                    l1770 4EF0  
                                  l1668 8E9E                                    l1924 9DB2  
                                  l3445 9EB8                                    l1933 91B8  
                                  l2910 3CB8                                    l1862 93AE  
                  _ADCC_StartConversion B1B4                                    l2658 810A  
                                  l2943 4A40                                    l8010 49BC  
                                  l8004 4980                                    l8022 4A14  
                                  l8040 2EA2                                    l8024 4A24  
                                  l8016 49EC                                    l8050 2F18  
                                  l2898 3E28                                    l8202 856E  
                                  l2979 366C                                    l7420 9A5C  
                                  l8134 347C                                    l8046 2EE2  
                                  l9030 6CAE                                    l7422 9A7E  
                                  l8214 85A4                                    l8152 34F2  
                                  l8128 3460                                    l8064 2FB0  
                                  l8048 2EE8                                    l7520 39A2  
                                  l8304 8356                                    l8208 8584  
                                  l8162 3566                                    l8138 34A2  
                                  l8066 2FB6                                    l8058 2F70  
                                  l7602 3CDA                                    l7530 3A14  
                                  l9050 6DC8                                    l8180 361A  
                                  l8172 35D6                                    l8148 34EC  
                                  l8076 3008                                    l8068 2FE6  
                                  l7604 3CEC                                    l7540 3A50  
                                  l7460 3752                                    l8316 83DA  
                                  l8308 83A4                                    l9044 6D4E  
                                  l9028 6C8C                                    l8236 867E  
                                  l8228 864A                                    l8252 8B98  
                                  l8324 A5AA                                    l8182 3634  
                                  l8166 35AC                                    l7622 3D26  
                                  l7534 3A34                                    l7454 370C  
                                  l8422 A492                                    l9054 6E30  
                                  l9046 6D66                                    l9038 6D22  
                                  l8350 8076                                    l8334 7FF4  
                                  l8406 877E                                    l7608 3CF8  
                                  l7536 3A46                                    l7544 3A80  
                                  l7472 37BC                                    l7448 36CC  
                                  l9064 6ECC                                    l9048 6D8A  
                                  l8256 8BB0                                    l8248 8B86  
                                  l8360 80B8                                    l8352 8092  
                                  l7704 7C42                                    l9080 71AE  
                                  l7650 3DD8                                    l7634 3D84  
                                  l7618 3D20                                    l7562 3B1C  
                                  l7490 3864                                    l7482 3812  
                                  l7466 378A                                    l7458 3722  
                                  l7810 6AA8                                    l8274 8C64  
                                  l8266 8C30                                    l8290 960C  
                                  l8282 9596                                    l7714 7C9C  
                                  l9082 721A                                    l7644 3DB0  
                                  l7564 3B2E                                    l7572 3B6A  
                                  l7484 3842                                    l7804 6A54  
                                  l7708 7C46                                    l7732 9F2C  
                                  l7478 37FC                                    l7910 4644  
                                  l9334 ACDA                                    l8286 95D8  
                                  l8358 80A2                                    l8374 7CFC  
                                  l9422 A9C0                                    l7656 3E08  
                                  l7648 3DC8                                    l7584 3C42  
                                  l7568 3B38                                    l7904 4604  
                                  l9520 760E                                    l9512 75A2  
                                  l7816 6AEE                                    l7760 5D0E  
                                  l7594 3C9C                                    l7586 3C68  
                                  l8298 82C6                                    l7922 46C8  
                                  l7914 465A                                    l9522 761C  
                                  l7690 A604                                    l7770 5E14  
                                  l7762 5D5E                                    l7746 5BF0  
                                  l8386 7DCE                                    l7916 468A  
                                  l9532 767E                                    l9524 7632  
                                  l7828 6BC0                                    l9534 769C  
                                  l9526 7650                                    l7766 5DA6  
                                  l8398 86D2                                    l7936 471C  
                                  l7928 4702                                    l9544 76D0  
                                  l9536 76B2                                    l7864 7078  
                                  l7856 6FCC                                    l7848 6F44  
                                  l7970 487A                                    l7962 4848  
                                  l7954 47E2                                    l7946 47AC  
                                  l7890 4566                                    l9554 7732  
                                  l9484 A4CE                                    l7980 48BC  
                                  l7956 47F4                                    l7964 484C  
                                  l7884 4526                                    l7788 9EA8  
                                  l9476 ABA6                                    l7990 4906  
                                  l7894 457C                                    l7976 4896  
                                  l7896 45AC                                    l9930 A52C  
                                  l7994 490C                                    l9926 A4FA  
                                  STR_1 FF51                                    STR_2 FFA3  
                                  STR_3 FFD1                                    STR_4 FF0D  
                                  STR_5 FE3F                                    STR_6 FE3F  
                                  STR_7 FE3F                                    l9982 4A7C  
                                  STR_8 FEFB                                    STR_9 FDBC  
                                  l9992 4B9A                                    l9976 4A4C  
                                  l9996 4C74                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    _T2PR 003FAB  
                                  u5200 AB2A                                    u6010 6A4E  
                                  u5210 AB2C                                    u6100 6C4A  
                                  u5310 39C8                                    u6030 6AA4  
                                  u5320 39E8                                    u5321 39E2  
                                  u6041 6AAE                                    u5170 9AAC  
                                  u6050 6AE8                                    u6210 7102  
                                  u6130 6F3E                                    u7010 80EA  
                                  _T6PR 003F93                                    u6060 6B1A  
                                  _PMD0 0039C0                                    u7021 7CBC  
                                  _PMD1 0039C1                                    u5510 3CFE  
                                  u5430 3B60                                    u6150 6F94  
                                  u7030 7CF6                                    u7110 87B6  
                                  _PMD2 0039C2                                    _PMD3 0039C3  
                                  u5600 3D94                                    u5360 3A78  
                                  u6080 6BF8                                    u6160 6FC6  
                                  u7040 7D28                                    _PMD4 0039C4  
                                  u5177 9A9E                                    _PMD5 0039C5  
                                  u5530 3D18                                    u5370 3A98  
                                  u5338 39EA                                    u7130 A46E  
                                  u6170 6FF8                                    _PMD6 0039C6  
                                  u5435 3B50                                    _PMD7 0039C7  
                                  u7140 A48E                                    u5700 A5E8  
                                  u7060 7E06                                    u5365 3A68  
                                  u5470 3C8A                                    u6430 495A  
                                  u6350 4874                                    u6190 70B0  
                                  u5710 7BC6                                    u6440 4994  
                                  u5800 9EEA                                    u7080 86CC  
                                  u5640 AAFA                                    u6610 34E4  
                                  u5570 3D74                                    u6450 49D0  
                                  u5810 9EEC                                    u7090 86FE  
                                  u5650 AAFC                                    u6435 494A  
                                  u5715 7BBC                                    u6540 2FF6  
                                  u8300 6E76                                    u5900 5D8C  
                                  u9005 B1E0                                    u6390 48FE  
                                  u8310 6E78                                    u5830 5B88  
                                  u9006 B1E2                                    u5575 3D64  
                                  u9015 B1D0                                    u9104 4C8E  
                                  u6720 85D0                                    u5760 7C94  
                                  u5840 5BD4                                    u8400 7310  
                                  u9016 B1D2                                    u9105 4C88  
                                  u5905 5D82                                    u6650 3540  
                                  u6810 8C50                                    u5770 7C96  
                                  u5930 A76A                                    u6555 318A  
                                  u5755 7C76                                    u5835 5B7E  
                                  u6660 357A                                    u9124 4D5C  
                                  u9044 4A66                                    u6740 866A  
                                  u5940 A76C                                    u6565 3252  
                                  u9125 4D56                                    u9045 4A60  
                                  u6670 35C0                                    u9150 4D86  
                                  u6910 A5A6                                    u8350 7248  
                                  u5950 9E66                                    u6655 3530  
                                  u6575 341A                                    u8407 7302  
                                  u9144 4D7E                                    u9064 4A96  
                                  u8280 6D1E                                    u6920 7FD4  
                                  u5880 5CB4                                    u5960 9E68  
                                  u9400 9D9E                                    u9145 4D78  
                                  u9065 4A90                                    u5865 5C0E  
                                  u9170 7972                                    u6850 9608  
                                  u6930 7FE8                                    u5866 5C14  
                                  u5867 5C22                                    u9260 AFF4  
                                  u9084 4AB8                                    u5980 AB5A  
                                  u6940 8022                                    u9085 4AB2  
                                  u6925 7FCA                                    u5885 5CAA  
                                  u8357 723A                                    u5990 AB5C  
                                  u6790 8BDC                                    u8390 72E2  
                                  u6945 8018                                    u9266 AFF6  
                                  u9418 9DA0                                    u9370 9D58  
                                  u8395 72DC                                    u8397 72CE  
                                  u6990 80C0                                    u8930 A110  
                                  _PLLR 01CEE0                                    u9388 9D5A  
                                  u8785 A7A6                                    u8890 76C6  
                                  u8955 A144                                    u8956 A146  
                                  u8948 A112                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR ABEC  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0394  
                                  _cp_h FD17                                    _cp_l FD13  
                                  _atoi 6C72                                    _ctoa 9DB6  
                                  _main 21F0                                    _dtoa 4EF6  
                                  _nanf A22E                                    _seed 01F3  
                                  _prec 0023                                    _nout 00C0  
                                  _spin FC8F                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 6734                                    btemp 0001  
                                  _utoa 5E3E                                    _xtoa 5376  
                __end_of_check_adc_scan B27A                           ___fpclassifyf 7B18  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 002B  
             __end_of_SPI1_Exchange8bit B048               __size_of_clear_hid_pflags 0024  
                       _TMR3_Initialize A6EC             __size_of_set_load_relay_one 0010  
           __size_of_set_load_relay_two 0010                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr AE74                            ___param_bank 000000  
                    ?_UART1_rx_vect_isr 0039                        __end_of_INT0_ISR B222  
                      __end_of_INT1_ISR A8F6          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma 9990           __end_of_OSCILLATOR_Initialize B1A0  
                                 l10004 4CA6                                   l10100 A962  
                                 l10022 4EBE                                   l10030 4ED0  
                                 l10200 88FA                                   l10016 4E22  
                                 l10008 4D42                                   l10212 9D6C  
                                 l10062 79C0                                   l10054 7994  
                                 l10142 A916                                   l10400 A89A  
                                 l10066 79D4                                   l10180 8814  
                                 l10172 87EA                                   l12100 1BDA  
                                 l10174 87FA                                   l12110 1C88  
                                 l12014 14A8                                   l10510 9470  
                                 l10344 B0F4                                   l10192 8880  
                                 l10176 8800                                   l10184 881C  
                                 l12120 1DAA                                   l12016 14E2  
                                 l10280 9B78                                   l10504 93CA  
                                 l10178 8806                                   l10186 8848  
                                 l12130 1E60                                   l12034 165C  
                                 l12018 14F8                                   l10610 6720  
                                 l10530 6488                                   l10356 AC0E  
                                 l12300 3EF8                                   l11340 9AE8  
                                 l11420 9E00                                   l12052 17E0  
                                 l12044 16F4                                   l10620 96DA  
                                 l10532 648C                                   l10284 9BE0  
                                 l10382 A85A                                   l11350 8CAA  
                                 l12230 98A8                                   l11406 63EC  
                                 l12214 99E8                                   l12304 3F3A  
                                 l11328 8A72                                   l11344 9B26  
                                 l11360 8D20                                   l11504 00AC  
                                 l12144 1FDC                                   l12080 1A7A  
                                 l12056 1834                                   l10624 9718  
                                 l10552 64FA                                   l10528 6478  
                                 l10608 66F8                                   l12330 4304  
                                 l12314 414A                                   l11354 8CD2  
                                 l11418 9DD4                                   l11370 94C8  
                                 l11610 05F6                                   l11602 0594  
                                 l10546 64D0                                   l10538 64B2  
                                 l12324 4272                                   l11364 8D6A  
                                 l11356 8CE4                                   l11452 500E  
                                 l11444 4FC4                                   l11612 0602  
                                 l11516 00F0                                   l11524 0146  
                                 l12164 216E                                   l12076 1A46  
                                 l12068 198E                                   l12228 9866  
                                 l12260 8DB6                                   l10580 65A2  
                                 l12334 431A                                   l12318 41C8  
                                 l11534 01EA                                   l11542 0258  
                                 l12158 2114                                   l12174 2192  
                                 l10574 6584                                   l10566 6536  
                                 l10558 6518                                   l10670 90C6  
                                 l12328 42FC                                   l10664 5AC6  
                                 l10496 7F7C                                   l11456 502C  
                                 l11632 06F0                                   l11552 02FC  
                                 l11560 032A                                   l11536 0216  
                                 l12168 2172                                   l11392 62D4  
                                 l12512 2256                                   l10770 9F7A  
                                 l11490 532C                                   l11466 523E  
                                 l11706 0D24                                   l11714 0D90  
                                 l11722 0EA2                                   l11538 022C  
                                 l11386 6216                                   l10586 65B0  
                                 l10682 9122                                   l12514 2268  
                                 l12506 2230                                   l10764 A830  
                                 l11628 06B8                                   l11572 0406  
                                 l12444 73C8                                   l10692 9192  
                                 l12508 2238                                   PRLOCK 0039EF  
                                 l11486 52F0                                   l11750 0FF0  
                                 l11734 0F3A                                   l11670 0B12  
                                 l11662 0A48                                   l11638 077A  
                                 l11590 0554                                   l11574 0470  
                                 l11830 68C0                                   l11822 6854  
                                 l11806 67A0                                   l11910 5420  
                                 l11398 633E                                   l12702 2DC0  
                                 l12614 2696                                   l12606 2650  
                                 l12622 27B2                                   l10776 9F8A  
                                 l11760 1092                                   l11672 0B34  
                                 l11648 0926                                   l11568 0396  
                                 l11840 6976                                   l11904 53E4  
                                 l12624 27E0                                   l12608 265A  
                                 l11770 10E2                                   l11594 057C  
                                 l11578 04D2                                   l11826 6890  
                                 l12458 74F0                                   l12706 2DE6  
                                 l11748 0FD6                                   l11596 058E  
                                 l11844 69B2                                   l11836 694A  
                                 l12716 2E3A                                   l12660 2B6E  
                                 l12644 2838                                   l12636 2814  
                                 l12564 241A                                   l11686 0C32  
                                 l11934 5576                                   l11918 5480  
                                 l11942 55FC                                   l12670 2CEA  
                                 l12656 2B0C                                   l12672 2D14  
                                 l11786 119A                                   l11698 0CBA  
                                 l11866 5ECE                                   l11858 5E72  
                                 l11876 60C4                                   l11958 56E6  
                                 l12694 2D8A                                   l12678 2D34  
                                 l11992 1326                                   l12696 2DA2  
                                 l12688 2D78                                   l11898 53AA  
                                 l11994 1360                                   l11996 1376  
                       __end_of___aodiv 6C72                            _Volts_to_SOC 9B70  
                                 _ADCAP 003EF5                                   _ADACT 003EFE  
                       __end_of___fladd 3E32                                   _ADCLK 003EFF  
                       __end_of___aomod 7126                                   _ADPCH 003EF1  
                       __end_of___fldiv 4A4A                                   _ADREF 003EFD  
                       __end_of___awdiv 8698                         __end_of___flneg A5D4  
                                 STR_10 FDE9                                   STR_11 FDFF  
                                 STR_12 FF1E                                   STR_21 FF62  
                                 STR_13 FF2F                                   STR_14 FF73  
                                 STR_22 FE76                                   STR_30 FE15  
                                 STR_31 FF84                                   STR_15 FF40  
                                 STR_23 FE9C                                   STR_40 FE50  
                                 STR_32 FF84                                   STR_24 FE89  
                                 STR_16 FDD3                                   STR_33 FF62  
                                 STR_41 FFBE                                   STR_25 FEE8  
                                 STR_17 FD70                           __CFG_WDTE$OFF 000000  
                                 STR_42 FFBE                                   STR_34 FFFC  
                                 STR_26 FEC2                                   STR_18 FD8A  
                                 STR_35 FFF9                                   STR_43 FF94  
                                 STR_19 FF84                                   STR_27 FED5  
                                 STR_44 FF94                                   STR_28 FEAF  
                       __end_of___awmod 8C7E                                   STR_45 FF94  
                                 STR_61 FFDB                                   STR_37 FFB2  
                                 STR_29 FE29                                   STR_62 FFE3  
                                 STR_38 FFC8                                   STR_46 FDA4  
                                 STR_55 FD6F                                   STR_71 FFF0  
                                 STR_39 FE50                                   STR_48 FE63  
                                 STR_56 FD1B                                   _ADRPT 003EEC  
                                 STR_81 FFF3                                   STR_65 FFEA  
                                 STR_57 FFD7                                   STR_49 FE3D  
                                 STR_90 FFE7                                   STR_74 FFED  
                                 STR_58 FFDF                                   STR_67 FFEA  
                                 STR_76 FFED                                   STR_84 FFF6  
                                 STR_69 FFF0                                   STR_86 FFF6  
                                 STR_79 FFF3                                   STR_88 FFE7  
                       __end_of___flmul 3676                         __end_of___flsub A660  
                       __end_of___fltol 8114                                   u10250 8A66  
                                 u10330 9542                                   u11050 10B8  
                                 u11210 5E58                                   u10500 5252  
                                 u10420 4F26                                   u10270 8AE2  
                                 u10430 4F28                                   u11070 116E  
                                 u11150 68B6                                   u12030 2538  
                                 u10511 5282                                   u10520 5298  
                                 u11080 1170                                   u10600 00DA  
                                 u11160 68FC                                   u11400 5618  
                                 u11320 5478                                   u10521 5296  
                                 u10337 9534                                   u11241 6106  
                                 u10530 52AC                                   u10450 4F98  
                                 u11250 611C                                   u11330 54CC  
                       __end_of___lodiv 7E2E                                   u11251 611A  
                                 u11411 5648                                   u10540 52B0  
                                 u11260 6130                                   u11420 565E  
                                 u11340 54CE                                   u11500 13BE  
                                 u11421 565C                                   u10470 4FAA  
                                 u10630 0194                                   u11190 69D8  
                                 u11270 6134                                   u11430 5672  
                                 u11510 13C0                                   u10390 6460  
                                 u11167 68EE                                   u10560 52C6  
                                 u10720 050E                                   u10640 0196  
                                 u11440 5676                                   u11360 552C  
                                 u11520 13E6                                   u10490 4FFA  
                                 u11370 552E                                   u11290 5390  
                                 _U1P1H 003DED                                   u10820 0648  
                                 u11620 1748                                   _U1P2H 003DEF  
                                 u10750 0562                                   u10670 02A6  
                                 u11390 55F8                                   u11550 1540  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 _T3CLK 003FA9                                   u10680 02A8  
                                 u11640 18BC                                   u11560 1542  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 u11570 1568                                   _U1P3L 003DF0  
                                 u11395 55DA                                   u10780 05C6  
                                 u11740 1EB4                                   u11670 1B34  
                                 _U2P1L 003DD4                                   u11760 2064  
                                 u11680 1B36                                   _T3CON 003FA6  
                                 _U2P2L 003DD6                                   u10890 0A18  
                                 _U2P3L 003DD8                                   u11780 99C8  
                                 u10990 0EE4                                   _T5CLK 003F9D  
                       __end_of___lomod 87D8                                   u11970 7540  
                                 u11980 7542                                   _T2HLT 003FAD  
                                 _T5CON 003F9A                                   _T6CON 003F94  
                        __CFG_DEBUG$OFF 000000                                   _T6HLT 003F95  
            _ADCC_ADTI_InterruptHandler 00AB                                   _T2TMR 003FAA  
                                 _U1UIR 003DF8                                   _T2RST 003FAF  
                                 _U1RXB 003DE8                                   _U2UIR 003DE0  
                                 _U2RXB 003DD0                                   _U2TXB 003DD2  
                                 _T6TMR 003F92                                   _T6RST 003F97  
                   ??_UART1_rx_vect_isr 003E                                   _ISRPR 0039F1  
                                 _OSCEN 0039DD                                   _TMR3H 003FA5  
                                 _TMR5H 003F99                                   _TMR3L 003FA4  
                                 _TMR5L 003F98               __end_of_update_adc_result A930  
                                 _TRISA 003FC2                                   _TRISB 003FC3  
                                 _TRISC 003FC4                                   _TRISD 003FC5  
                                 _TRISE 003FC6                                   _TRISF 003FC7  
                           _Default_ISR B2AC                 __size_of_clear_adc_scan 0006  
     __size_of_TMR3_SetInterruptHandler 0028       __size_of_TMR6_SetInterruptHandler 0028  
                         __CFG_WRTB$OFF 000000                        __end_of_TMR3_ISR 854A  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR A3FE                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR B12E                            _DMA1CON1bits 003BFD  
                                 _fabsf 978C                                   _flags 0025  
              __size_of_calc_model_data 03A2                            _DMA2CON0bits 003BDC  
                          _DMA2CON1bits 003BDD                                   _fputc 8A42  
            __size_of_send_lcd_cmd_long 0028                         __end_of_isalpha A776  
                                 _fputs 9AD8                         __end_of_isdigit AB66  
                       __end_of_ivln2_h FD13                      __CFG_MCLRE$EXTMCLR 000000  
                                 _srand AA0A                                   _width 0021  
                                 _putch B0F8                         __end_of_islower AB06  
                       __end_of_isspace A4A2                _INT1_SetInterruptHandler ADD2  
                       __end_of_isupper AB36                                   pclath 003FFA  
                                 tablat 003FF5                                   ltemp0 0001  
                                 ltemp1 0005                                   ltemp2 0009  
              __size_of_DMA1_Initialize 006A                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0001  
                                 ttemp1 0004                                   ttemp2 0007  
                                 ttemp3 000A                                   ttemp5 0002  
                                 ttemp6 0005                                   ttemp7 0009  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler AD5A  
           _UART1_SetRxInterruptHandler AD32                                   wtemp0 0001  
                                 wtemp1 0003                                   wtemp2 0005  
                                 wtemp3 0007                                   wtemp4 0009  
                                 wtemp5 000B                                   wtemp8 0002  
                       __end_of_sprintf 90BA                         __end_of_tolower 9F46  
                       __end_of_strncmp 7346                         __end_of_toupper 9EC2  
             __size_of_DMA1_DMADCNT_ISR 000A               __end_of_UART1_rx_vect_isr AE9C  
              __size_of_SPI1_Initialize 0016                         _TMR5_Initialize A6A6  
                 __end_of_ringBufS_init ACBA                         __initialization 8EA2  
                     _UART2_rx_vect_isr AEC4                            __end_of_cp_h FD1B  
                          __end_of_cp_l FD17                            __end_of_atoi 6EE6  
                          __end_of_ctoa 9E3E                            __end_of_main 2E4C  
                          __end_of_dtoa 5376                            __end_of_nanf A290  
                          __end_of_spin FD07                            __end_of_stoa 69F2  
                          __end_of_utoa 617E                            __end_of_xtoa 5730  
                        __CFG_SAFEN$OFF 000000                      ?_UART2_rx_vect_isr 0039  
               __end_of_TMR2_Initialize B15E                __size_of_DMA2_Initialize 005A  
            __end_of_check_enter_button A838                _TMR5_SetInterruptHandler AD82  
                         __activetblptr 000003               __size_of_DMA1_DMASCNT_ISR 000E  
                 _TMR3_InterruptHandler 00A2                       _port_data_dma_ptr B23C  
                    esr_check@esr_state 002D                     ??_UART2_rx_vect_isr 003E  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize AC18  
                       _PWM8_Initialize B174                        _UART1_Initialize A660  
                     _UART2_tx_vect_isr AE9C                      _UART2_Transmit_ISR ABEC  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan A168  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue A776  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0039                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _T3GATE 003FA8                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _T3GCON 003FA7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                i1l1017 A3F0                                  _RB6PPS 003A0E  
                                i1l1205 84B2                    _start_switch_handler B00A  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
               __end_of_TMR3_Initialize A732                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright B204  
                                _SCANPR 0039F7                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                u930_20 8810                                  u930_21 880A  
                                u934_24 88F0                                  u934_25 88EC  
                                u927_28 87F0                                  u960_48 AFD4  
                                u952_48 AFB0                                  u954_28 AF44  
                                u963_28 AF68                    __size_of_hid_display 0102  
                                u899_20 AA7A                                  u899_26 AA7C  
                                u995_44 9FAA                                  u995_45 9FA4  
                      __end_of___xxtofl 775C   __end_of_ADCC_DischargeSampleCapacitor B272  
__size_of_ADCC_DischargeSampleCapacitor 0008           _ADCC_DischargeSampleCapacitor B26A  
              __end_of_send_lcd_cmd_dma A450                         _TMR3_WriteTimer A878  
                   ??_UART2_tx_vect_isr 003E               __end_of_UART2_rx_vect_isr AEEC  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize B232  
                      _UART2_Initialize A290                                  _WaitMs A99E  
                       _conv_raw_result 4A4A                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 8284  
                                ___fleq 9554                       _ADCC_ThresholdISR A098  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush 9C02  
                                _efgtoa 0000                                  _floorf 5AD2  
                    ?_ADCC_ThresholdISR 0039                                  _memset 617E  
                  __size_of_help_button 0038                                  clear_0 8F36  
                                clear_1 8F4A                                  clear_2 8F5C  
                                clear_3 8F68                                  clear_4 8F74  
                                clear_5 8F80                                  clear_6 8F8C  
                                clear_7 8F98               __end_of_port_data_dma_ptr B246  
                                _printf A1CC                      _eaDogM_WriteString 9990  
                                _strcpy 9480                               ?_ADCC_ISR 0039  
                                _strlen 9A36                      __size_of_TimerDone 0028  
                          __pdataBIGRAM 05FF                         _ADCC_Initialize A02E  
                        _PMD_Initialize B1A0              __size_of_update_adc_result 003A  
             __end_of_UART2_tx_vect_isr AEC4                                  lltemp0 0001  
                                lltemp1 0009                                  lltemp2 0011  
                                lltemp3 0019                     ??_ADCC_ThresholdISR 0039  
                __end_of_start_adc_scan A1CC                            __mediumconst FB2E  
                                preinc2 003FDC                  __size_of_init_port_dma 0030  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay A348  
                      __end_of_spinners 9480                        __end_of_vfprintf 98E6  
                            _StartTimer A7B8           __size_of_INTERRUPT_Initialize 0066  
               __end_of_TMR5_Initialize A6EC                       _SYSTEM_Initialize A542  
                            __accesstop 0060                 __end_of__initialization 8FAA  
                             ?_INT0_ISR 0039                               ?_INT1_ISR 0039  
                  __end_of_display_help B28A                    __end_of_display_info B282  
             __end_of_CLKREF_Initialize B23C                           ___rparam_used 000001  
            __size_of_UART1_rx_vect_isr 0028                         _TMR5_WriteTimer A838  
                 _set_temp_display_help B1E6                        _clear_hid_pflags AF10  
                 __end_of_TMR3_CallBack AFA0               __end_of_ADCC_ThresholdISR A102  
                    __size_of_calc_bsoc 069E                  __end_of_ringBufS_flush 9C94  
                        __pcstackCOMRAM 0039                              ___inthi_sp 10C2  
                            ___intlo_sp 1861                            __pidataBANK0 A968  
                          __pidataBANK1 91BC                            __pidataBANK2 9618  
           __size_of_send_port_data_dma 0052                           __end_of_fabsf 983A  
                             ?_TMR3_ISR 0039                               ?_TMR5_ISR 0039  
                             ?_TMR6_ISR 0039                          ivt0x8_undefint 00AC  
                         __end_of_fputc 8B66                           __end_of_fputs 9B70  
                         __end_of_srand AA3E                   __end_of_TMR5_CallBack AF7C  
                         __end_of_putch B112                 __end_of_PWM8_Initialize B18A  
               __end_of_TMR6_Initialize AC42                       _adc_int_t_handler 9F46  
                __end_of_PMD_Initialize B1B4                              __end_of_bp FD0F  
                            ??_ADCC_ISR 0039                   __end_of_TMR6_CallBack AFE8  
           __size_of_EXT_INT_Initialize 0034                  __size_of_calc_ror_data 0174  
                         _DMA1_DMAA_ISR B254                   TMR3_ISR@CountCallBack 00C2  
                        _clear_adc_scan B292                      __size_of_hid_input 0090  
                __size_of_mode_lamp_dim 0018                _UART2_RxInterruptHandler 00B7  
             __end_of_SYSTEM_Initialize A58C                         __CFG_PR1WAY$OFF 000000  
                       __CFG_IVT1WAY$ON 000000                 __end_of_TMR3_WriteTimer A8B8  
                            __pbssBANK0 0060                              __pbssBANK1 01F3  
                            __pbssBANK2 02BC                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              __pbssBANK5 0500  
                            _check_help 7346                 __end_of_conv_raw_result 4EF6  
                    __size_of_esr_check 02CA                   _INT0_InterruptHandler 00BD  
                            ??_INT0_ISR 0039                              ??_INT1_ISR 003F  
                     __end_of_TimerDone ACE2                        _DMA1_DMADCNT_ISR B248  
                    __size_of_init_bsoc 0170              __size_of_UART2_rx_vect_isr 0028  
                               IVTBASEH 003FD6                                 IVTBASEL 003FD5  
                               IVTBASEU 003FD7                      __size_of_lp_filter 01BC  
                         _init_port_dma AAA6                   __end_of_wait_lcd_done B0DC  
      __end_of_TMR3_SetInterruptHandler ADD2                         __CFG_PPS1WAY$ON 000000  
      __end_of_TMR6_SetInterruptHandler AD82                              ??_TMR3_ISR 03E4  
               __end_of_ADCC_Initialize A098                              ??_TMR5_ISR 0043  
             __end_of_adc_int_t_handler 9FC4                              ??_TMR6_ISR 003E  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
  __end_of_ADCC_SetADTIInterruptHandler AE4A   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler AE22                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7              __size_of_port_data_dma_ptr 000A  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                     _UART1_Receive_ISR B0DC                                 _CLKRCLK 003CE6  
                               _CLKRCON 003CE5                  __end_of_clear_adc_scan B298  
                        ?_DMA1_DMAA_ISR 0039                        _DMA1_DMASCNT_ISR B224  
                               _U1ERRIE 003DFA                      __size_of_set_vterm 001E  
                               _U1ERRIR 003DF9                                 _U2ERRIE 003DE2  
                               u1190_28 AF8C                                 _U2ERRIR 003DE1  
                               u1186_20 426A                                 u1188_20 4312  
                               _INT0PPS 003AC0                     __CFG_PWRTS$PWRT_OFF 000000  
                               _INT1PPS 003AC1                            ?_Default_ISR 0039  
            __size_of_UART2_tx_vect_isr 0028                                 _U1RXPPS 003AE5  
                               _U2RXPPS 003AE8                                 _OSCCON1 0039D9  
                               _OSCCON3 0039DB                                 _IVTLOCK 003FD4  
                    __size_of_vfpfcnvrt 0FAC                                 _SPI1CLK 003D1C  
                               _SPI1RXB 003D10                       __end_of_calc_bsoc 44D0  
                               _SPI1TXB 003D11                                 _OSCTUNE 0039DE  
                               _PWM8DCH 003F61                                 _PWM8DCL 003F60  
                               _PWM8CON 003F62                                 _SLRCONA 003A43  
                               _SLRCONB 003A53                                 _SLRCONC 003A63  
                               _SLRCOND 003A73                                 _SLRCONE 003A83  
                               _SLRCONF 003A93                              _get_switch AB94  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer A878  
               __size_of_switch_handler 013C                      __size_of_stop_bsoc 0006  
            __end_of_set_load_relay_one B1E6              __end_of_set_load_relay_two B1D6  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
                         _calc_ror_data 7E2E                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 006A  
                         _mode_lamp_dim B12E                                 __Lparam 0000  
              __end_of_UART1_Initialize A6A6                       __end_of_hid_input 9DB6  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 69F2  
                               ___fladd 3676                                 ___aomod 6EE6  
                               ___fldiv 44D0                                 ___awdiv 854A  
                               ___flneg A58C                                 ___awmod 8B66  
                               ___flmul 2E4C                                 ___flsub A61A  
                               ___fltol 7FA2                                 ___lodiv 7CAE  
                               ___lomod 8698               __end_of_UART1_Receive_ISR B0F8  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display 939A                                 __pcinit 8EA2  
              __end_of_mode_lamp_bright B212                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand B1F6  
                               __ramtop 2000                                 __ptext0 21F0  
                               __ptext1 AEEC                                 __ptext2 B00A  
                               __ptext3 AA0A                                 __ptext4 939A  
                               __ptext5 AAA6                                 __ptext6 92B0  
                               __ptext7 AC42                                 __ptext8 AC6A  
                               __ptext9 B02A                       __end_of_esr_check 6734  
                     _UART2_Receive_ISR B0A2                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                                 us611999 6C5C  
                 _OSCILLATOR_Initialize B18A                                 us622999 7114  
                          __size_of_abs 0046                                 us712999 87C8  
                               us707999 7E18                            __size_of_pad 0114  
                     __end_of_init_bsoc 8284                                 _isalpha A732  
                               _isdigit AB36                                 _ivln2_h FD0F  
                             _T3CONbits 003FA6                                 _mode_sw 002F  
                     __end_of_lp_filter 7B18                                 _islower AAD6  
                               _isspace A450                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                __end_of_UART2_Initialize A2EE  
                               _isupper AB06              __size_of_SYSTEM_Initialize 004A  
                               _sprintf 8FB0                                 _tolower 9EC2  
                 __size_of_display_help 0008                                 _utctime 0096  
                 __size_of_display_info 0008                                 _strncmp 7126  
                               _toupper 9E3E                    end_of_initialization 8FAA  
             __size_of_convert_adc_data 00B8                      _check_enter_button A7F8  
                             i1u1199_20 84A8                               i2u1000_48 A0CE  
                             i2u1000_49 A0E2     __end_of_UART2_SetRxInterruptHandler AD32  
           _UART2_SetRxInterruptHandler AD0A                               i2u1002_48 AE88  
                             i2u1004_48 AEB0                               i2u1006_48 AED8  
                     __end_of_set_vterm B066                       __end_of_vfpfcnvrt 21F0  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 007E  
                   __size_of_StartTimer 0040                       __end_of_start_lcd B2A4  
             __end_of_UART2_Receive_ISR B0C0                          wdtdelay@dcount 009A  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 003F  
                 _INT1_InterruptHandler 00BA                               _PORTBbits 003FCB  
                     __end_of_stop_bsoc B2AA                _TMR3_SetInterruptHandler ADAA  
                             _PORTFbits 003FCF                _TMR6_SetInterruptHandler AD5A  
                          _display_help B282                   _TMR5_InterruptHandler 00A5  
                          _display_info B27A    __size_of_UART2_SetTxInterruptHandler 0028  
              __end_of_clear_hid_pflags AF34                       __size_of_ADCC_ISR 002C  
   __end_of_ADCC_SetADIInterruptHandler AE72             _ADCC_SetADIInterruptHandler AE4A  
                            _update_lcd 8D92                         _calc_model_data 5730  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                            _static_soc AEEC                         _DMA1_Initialize 9FC4  
                            _start_bsoc AFE8                         _SPI1_Initialize B15E  
                 __end_of_get_vterm_ptr AB94                       __size_of_INT0_ISR 000E  
                     __size_of_INT1_ISR 003E                          __end_of_WaitMs A9D4  
          __end_of_INTERRUPT_Initialize A168                              _vterm_dump 8914  
                        __end_of___flge 83E6                          __end_of___fleq 9618  
  __end_of_INT0_DefaultInterruptHandler B2B8   __size_of_INT0_DefaultInterruptHandler 0002  
          _INT0_DefaultInterruptHandler B2B6              __size_of_UART1_Receive_ISR 001C  
                       _DMA2_Initialize A348                           __pidataBIGRAM 775C  
                        __end_of_efgtoa 1244                       __size_of_TMR3_ISR 0162  
                     __size_of_TMR5_ISR 005A                       __size_of_TMR6_ISR 001A  
                   __size_of_check_help 0212                          __end_of_floorf 5E3E  
           __size_of_UART2_Transmit_ISR 002C                              floorf@F524 007A  
                        __end_of_memset 646A                          __end_of_printf A22E  
              __end_of_DMA1_DMADCNT_ISR B252             __size_of_PWM8_LoadDutyValue 0042  
                 __end_of_INT0_CallBack AFC4                          __end_of_strcpy 9554  
                        __end_of_strlen 9AD8                     start_initialization 8EA2  
  __end_of_TMR5_DefaultInterruptHandler AAA6   __size_of_TMR5_DefaultInterruptHandler 0034  
          _TMR5_DefaultInterruptHandler AA72         __size_of_PIN_MANAGER_Initialize 0092  
                           __end_of_abs A61A                   __end_of_INT1_CallBack AF58  
             __size_of_set_display_info 001E                             __end_of_pad 8D92  
                  __size_of_Default_ISR 0006                    __end_of_send_lcd_cmd AC92  
                        _switch_handler 87D8           __size_of_ADCC_StartConversion 0012  
                            ivt0x8_base 0008                           _uart1RxBuffer 006C  
                 __end_of___fpclassifyf 7CAE                           _uart2RxBuffer 0500  
              __end_of_DMA1_DMASCNT_ISR B232                           _uart2TxBuffer 0354  
                        _DMA1_DMAOR_ISR B260                     __end_of_hid_display 91BC  
            __end_of_send_port_data_dma A4F4                        __CFG_LPBOREN$OFF 000000  
                 __size_of_init_display 00EA             __size_of_eaDogM_WriteString 00A6  
                             _TimerDone ACBA                           _ringBufS_init AC92  
                           __pdataBANK0 00C4                             __pdataBANK1 0100  
                           __pdataBANK2 0200              __size_of_UART2_Receive_ISR 001E  
                   __size_of_get_switch 002C              __end_of_EXT_INT_Initialize AA72  
               __end_of_calc_model_data 5AD2                     __end_of_help_button A968  
       __end_of_eaDogM_WriteStringAtPos AA0A                     __end_of_BVSOC_TABLE FBFF  
                  calc_model_data@bcror 008E                             __pbssBIGRAM 07FF  
               __end_of_DMA1_Initialize A02E                    calc_model_data@bvror 0092  
                           __pbssCOMRAM 0021        __end_of_INT0_SetInterruptHandler AE22  
                         __pcstackBANK3 03E4                __size_of_TMR2_Initialize 0018  
                __size_of_TMR3_CallBack 0024                  __end_of_switch_handler 8914  
                     __size_of___xxtofl 0204                 __end_of_SPI1_Initialize B174  
              _UART1_RxInterruptHandler 00B1                _UART2_TxInterruptHandler 00B4  
                             __end_of_T FC8F                        _convert_adc_data 96D4  
                             _calc_bsoc 3E32               __size_of_ringBufS_put_dma 00AA  
                          _init_display 92B0                  __end_of_DMA1_DMAOR_ISR B26A  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 00A8  
                    calc_ror_data@bcror 0086                  __size_of_TMR6_CallBack 0024  
               __end_of_DMA2_Initialize A3A2                      calc_ror_data@bvror 008A  
                _PIN_MANAGER_Initialize 9C94                __size_of_TMR3_Initialize 0046  
                  __end_of_wait_lcd_set B29E                           __pmediumconst FB2E  
                             __ptext100 5730                               __ptext101 B2A4  
                             __ptext110 AD0A                               __ptext102 AFE8  
                             __ptext111 A660                               __ptext103 795C  
                             __ptext120 B15E                               __ptext112 AD32  
                             __ptext104 A61A                               __ptext121 B174  
                             __ptext113 AC18                               __ptext105 3676  
                             __ptext130 A348                               __ptext122 B1A0  
                             __ptext114 AD5A                               __ptext106 2E4C  
                             __ptext131 9FC4                               __ptext123 9C94  
                             __ptext115 A6A6                               __ptext107 A542  
                             __ptext140 A3A4                               __ptext132 B232  
                             __ptext124 B18A                               __ptext116 AD82  
                             __ptext108 A290                               __ptext141 A838  
                             __ptext133 A02E                               __ptext125 A102  
                             __ptext117 A6EC                               __ptext109 ACE2  
                             __ptext150 B23C                               __ptext142 AF58  
                             __ptext134 AE22                               __ptext126 B28A  
                             __ptext118 ADAA                               __ptext151 B214  
                             __ptext143 AA72                               __ptext135 AE4A  
                             __ptext127 AA3E                               __ptext119 B146  
                             __ptext160 AE74                               __ptext152 AFA0  
                             __ptext144 83E8                               __ptext136 A8B8  
                             __ptext128 ADD2                               __ptext161 B0DC  
                             __ptext153 B2B6                               __ptext145 A878  
                             __ptext137 AF34                               __ptext129 ADFA  
                             __ptext170 B248                               __ptext162 AE9C  
                             __ptext154 B2AC                               __ptext146 AF7C  
                             __ptext138 B2B2                               __ptext171 B254  
                             __ptext163 ABEC                               __ptext155 ABC0  
                             __ptext147 B2B4                               __ptext139 87D8  
                             __ptext172 B260                               __ptext164 AEC4  
                             __ptext156 9F46                               __ptext148 3E32  
                             __ptext173 0000                               __ptext165 B0A2  
                             __ptext157 B2B8                               __ptext149 A4A2  
                             __ptext166 B114                               __ptext158 B2BA  
                             __ptext167 AFC4                               __ptext159 A098  
                             __ptext168 A4F4                               __ptext169 B224  
                             _hid_input 9D26                      __end_of_StartTimer A7F8  
                    _set_load_relay_one B1D6                      _set_load_relay_two B1C6  
                     __size_of_wdtdelay 005A                       __size_of_spinners 00E6  
                     __size_of_vfprintf 00AC                                _ADCC_ISR ABC0  
                __CFG_BBSIZE$BBSIZE_512 000000                               fabsf@F463 007E  
                              _DMA1CON0 003BFC                                _DMA1CON1 003BFD  
                              _DMA1AIRQ 003BFE                                _DMA2CON0 003BDC  
                              _DMA2CON1 003BDD                                _DMA2AIRQ 003BDE  
                              _DMA1SIRQ 003BFF                                _DMA2SIRQ 003BDF  
                             _esr_check 646A                 __size_of_get_raw_result 001E  
                        __size_of_fabsf 00AE                               _init_bsoc 8114  
                __size_of_wait_lcd_done 001C                          __size_of_fputc 0124  
                              _T2CLKCON 003FAE                          __size_of_fputs 0098  
                             _lp_filter 795C                             _hid_display 90BA  
                        __size_of_srand 0034                          __size_of_putch 001A  
                  _INTERRUPT_Initialize A102                                _T6CLKCON 003F96  
         __size_of_start_switch_handler 0020                         ?_DMA1_DMAOR_ISR 0039  
                              _INT0_ISR B214                                _INT1_ISR A8B8  
                              _LATCbits 003FBC                                _LATDbits 003FBD  
                              _LATEbits 003FBE       __size_of_INT1_SetInterruptHandler 0028  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 02E5  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                             _ring_buf1 0443                               _ring_buf2 0400  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                           _TMR3_CallBack AF7C  
                              _PIR5bits 0039A5                                _PIR6bits 0039A6  
                              _PIR8bits 0039A8                                _PIR9bits 0039A9  
              __size_of_TMR5_Initialize 0046                                i2u998_48 ABD8  
                             _set_vterm B048                     __size_of_update_lcd 0110  
                           _help_button A930                                _TMR3_ISR 83E8  
                           _BVSOC_TABLE FB2F                                _TMR5_ISR A3A4  
                              _TMR6_ISR B114                               _port_data 05FF  
                   __size_of_static_soc 0024                               _vfpfcnvrt 1244  
                          _SPI1INTFbits 003D1A                     __size_of_start_bsoc 0022  
                         _TMR5_CallBack AF58                              _ADCON0bits 003EF8  
                    __end_of_check_help 7558                               _start_lcd B29E  
               __size_of_FVR_Initialize 0008               __size_of_send_lcd_cmd_dma 0052  
                         _TMR6_CallBack AFC4                   __size_of_send_lcd_cmd 0028  
     __size_of_TMR5_SetInterruptHandler 0028                               _stop_bsoc B2A4  
                      _set_display_info B066                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                             _INTCON0bits 003FD2  
                             copy_data0 8EB6                               copy_data1 8EDC  
                             copy_data2 8EFE                               copy_data3 8F20  
              _INT0_SetInterruptHandler ADFA                     __size_of_vterm_dump 012E  
   __end_of_UART2_SetTxInterruptHandler AD0A             _UART2_SetTxInterruptHandler ACE2  
                          _uart1RxCount 0036                            _uart2RxCount 0030  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 0036  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_TMR3_WriteTimer 0040  
                              __Lrparam 0000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000                __size_of_conv_raw_result 04AC  
                         _wait_lcd_done B0C0                            _send_lcd_cmd AC6A  
                      __size_of___aodiv 0280                        __size_of___fladd 07BC  
                      __size_of___aomod 0240                         _adc_int_handler B2BA  
                      __size_of___fldiv 057A                        __size_of___awdiv 014E  
                      __size_of___flneg 0048                        __size_of___awmod 0118  
                      __size_of___flmul 082A                        __size_of___flsub 0046  
                      __size_of___fltol 0172                        __size_of___lodiv 0180  
                      __size_of___lomod 0140                      __end_of_get_switch ABC0  
                 __end_of_DMA1_DMAA_ISR B25E                      ___fpclassifyf@F463 0082  
  __size_of_UART1_SetRxInterruptHandler 0028                         lp_filter@smooth 0300  
                              ___xxtofl 7558                       ?_DMA1_DMADCNT_ISR 0039  
           __size_of_check_enter_button 0040                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand B204                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 003F                                __ptext10 AC92  
                              __ptext11 8114                                __ptext20 B26A  
                              __ptext12 9B70                                __ptext21 B292  
                              __ptext13 90BA                                __ptext30 8FB0  
                              __ptext22 B272                                __ptext14 9D26  
                              __ptext31 AB66                                __ptext23 B1C6  
                              __ptext15 AB94                                __ptext40 B29E  
                              __ptext32 A99E                                __ptext24 B1D6  
                              __ptext16 646A                                __ptext41 9C02  
                              __ptext33 8D92                                __ptext25 B1F6  
                              __ptext17 A8F6                                __ptext50 5E3E  
                              __ptext42 617E                                __ptext34 A9D4  
                              __ptext26 96D4                                __ptext18 A168  
                              __ptext51 8698                                __ptext43 A1CC  
                              __ptext35 A3FE                                __ptext27 AF10  
                              __ptext19 B1B4                                __ptext60 7B18  
                              __ptext52 7CAE                                __ptext44 983A  
                              __ptext36 B0C0                                __ptext28 7346  
                              __ptext61 7FA2                                __ptext53 7126  
                              __ptext45 1244                                __ptext37 A2EE  
                              __ptext29 8914                                __ptext70 9DB6  
                              __ptext62 A58C                                __ptext54 6734  
                              __ptext46 5376                                __ptext38 9990  
                              __ptext71 8C7E                                __ptext63 9554  
                              __ptext55 0000                                __ptext47 9E3E  
                              __ptext39 B298                                __ptext80 B048  
                              __ptext72 9A36                                __ptext64 8B66  
                              __ptext56 9EC2                                __ptext48 AAD6  
                              __ptext81 B1E6                                __ptext73 9AD8  
                              __ptext65 854A                                __ptext57 AB06  
                              __ptext49 A732                                __ptext90 B282  
                              __ptext82 B066                                __ptext74 8A42  
                              __ptext66 4EF6                                __ptext58 9480  
                              __ptext91 A7F8                                __ptext83 B12E  
                              __ptext75 B0F8                                __ptext67 A5D4  
                              __ptext59 5AD2                                __ptext92 7E2E  
                              __ptext84 B204                                __ptext76 98E6  
                              __ptext68 6EE6                                __ptext93 978C  
                              __ptext85 A776                                __ptext77 6C72  
                              __ptext69 69F2                                __ptext94 4A4A  
                              __ptext86 A930                                __ptext78 A450  
                              __ptext95 A22E                                __ptext87 ACBA  
                              __ptext79 AB36                                __ptext96 B084  
                              __ptext88 A7B8                                __ptext97 7558  
                              __ptext89 B27A                                __ptext98 44D0  
                              __ptext99 8284                        __size_of_isupper 0030  
                              us1110999 6746                                us1041999 4F10  
                              us1122999 5EA4                                us1131999 53F6  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                      __size_of_strncmp 0220                        __size_of_toupper 0084  
                      _ringBufS_put_dma 98E6                    __end_of_Volts_to_SOC 9C02  
                         __size_of_atoi 0274                           __size_of_ctoa 0088  
                         __size_of_main 0C5C                           __size_of_dtoa 0480  
                         __size_of_nanf 0062                   __size_of_wait_lcd_set 0006  
                         __size_of_stoa 02BE                           __size_of_utoa 0340  
                         __size_of_xtoa 03BA                    __CFG_WDTCWS$WDTCWS_7 000000  
                     ?_DMA1_DMASCNT_ISR 0039                   __end_of_init_port_dma AAD6  
                           _IVTLOCKbits 003FD4                __size_of_TMR5_WriteTimer 0040  
             _ADCC_ADI_InterruptHandler 00AE                               stoa@F1166 00EC  
                    ??_DMA1_DMASCNT_ISR 003F            __end_of_ADCC_StartConversion B1C6  
                              _spi_link 0060                                _wdtdelay A2EE  
            __end_of_UART2_Transmit_ISR AC18                                _spinners 939A  
                              _vfprintf 983A                __end_of_convert_adc_data 978C  
            __end_of_PWM8_LoadDutyValue A7B8    __end_of_TMR3_DefaultInterruptHandler B2B6  
 __size_of_TMR3_DefaultInterruptHandler 0002            _TMR3_DefaultInterruptHandler B2B4  
  __end_of_INT1_DefaultInterruptHandler B2B4   __size_of_INT1_DefaultInterruptHandler 0002  
          _INT1_DefaultInterruptHandler B2B2                      _send_port_data_dma A4A2  
                         ??_Default_ISR 0039                             _uart1RxHead 0038  
                __size_of_get_vterm_ptr 002E                             _uart2RxHead 0032  
                           _uart1RxTail 0037                          _get_raw_result B084  
                           _uart2TxHead 0035                             _uart2RxTail 0031  
                             spinners@s 0074                             _uart2TxTail 0034  
                          _wait_lcd_set B298                        Volts_to_SOC@slot 002E  
                    _EXT_INT_Initialize AA3E    __end_of_TMR6_DefaultInterruptHandler A542  
 __size_of_TMR6_DefaultInterruptHandler 004E            _TMR6_DefaultInterruptHandler A4F4  
  __end_of_ADCC_DefaultInterruptHandler B2BA   __size_of_ADCC_DefaultInterruptHandler 0002  
          _ADCC_DefaultInterruptHandler B2B8                                intlevel1 0000  
                              intlevel2 0000                       _send_lcd_cmd_long AC42  
        __size_of_set_temp_display_help 0010           __end_of_set_temp_display_help B1F6  
                 __end_of_calc_ror_data 7FA2                       __CFG_CLKOUTEN$OFF 000000  
            __end_of_eaDogM_WriteString 9A36                   __end_of_mode_lamp_dim B146  
               __end_of_adc_int_handler B2BC                  __size_of_INT0_CallBack 0024  
                            _SPI1SCKPPS 003ADE                              _SPI1SDIPPS 003ADF  
                __size_of_INT1_CallBack 0024                      __end_of_update_lcd 8EA2  
                _uart2TxBufferRemaining 0033                      __end_of_static_soc AF10  
                    __end_of_start_bsoc B00A                          _FVR_Initialize B28A  
                __end_of_get_raw_result B0A2                        _send_lcd_cmd_dma A3FE  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 0029  
      __end_of_INT1_SetInterruptHandler ADFA               __size_of_UART1_Initialize 0046  
                      ??_DMA1_DMAOR_ISR 003F               __end_of_send_lcd_cmd_long AC6A  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR B2B2  
        __end_of_PIN_MANAGER_Initialize 9D26               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump 8A42                 _eaDogM_WriteStringAtPos A9D4  
                         _get_vterm_ptr AB66                          _check_adc_scan B272  
             __size_of_UART2_Initialize 005E  
