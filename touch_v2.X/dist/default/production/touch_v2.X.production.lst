

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb 19 03:39:52 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=2
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1,group=2
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=2
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=2
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=2
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=2
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=2
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=2
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=2
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=2
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1,group=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=2
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1,group=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1,group=2
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1,group=2
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1,group=2
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1,group=2
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1,group=2
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1,group=2
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1,inline
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1,inline
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1,group=2
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1,group=2
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1,group=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1,group=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1,group=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1,group=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1,group=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1,group=1
   179                           	psect	text155,global,reloc=2,class=CODE,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1
   183                           	psect	text159,global,reloc=2,class=CODE,delta=1
   184                           	psect	text160,global,reloc=2,class=CODE,delta=1
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1
   186                           	psect	text162,global,reloc=2,class=CODE,delta=1
   187                           	psect	text163,global,reloc=2,class=CODE,delta=1
   188                           	psect	text164,global,reloc=2,class=CODE,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1
   190                           	psect	text166,global,reloc=2,class=CODE,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,delta=1
   194                           	psect	text170,global,reloc=2,class=CODE,delta=1
   195                           	psect	text171,global,reloc=2,class=CODE,delta=1
   196                           	psect	text172,global,reloc=2,class=CODE,delta=1
   197                           	psect	text173,global,reloc=2,class=CODE,delta=1
   198                           	psect	text174,global,reloc=2,class=CODE,delta=1
   199                           	psect	text175,global,reloc=2,class=CODE,delta=1
   200                           	psect	text176,global,reloc=2,class=CODE,delta=1
   201                           	psect	text177,global,reloc=2,class=CODE,delta=1
   202                           	psect	text178,global,reloc=2,class=CODE,delta=1
   203                           	psect	text179,global,reloc=2,class=CODE,delta=1
   204                           	psect	text180,global,reloc=2,class=CODE,delta=1
   205                           	psect	text181,global,reloc=2,class=CODE,delta=1
   206                           	psect	text182,global,reloc=2,class=CODE,delta=1
   207                           	psect	text183,global,reloc=2,class=CODE,delta=1
   208                           	psect	text184,global,reloc=2,class=CODE,delta=1
   209                           	psect	text185,global,reloc=4,class=CODE,delta=1
   210                           	psect	text186,global,reloc=2,class=CODE,delta=1
   211                           	psect	text187,global,reloc=2,class=CODE,delta=1
   212                           	psect	text188,global,reloc=2,class=CODE,delta=1
   213                           	psect	text189,global,reloc=4,class=CODE,delta=1
   214                           	psect	text190,global,reloc=2,class=CODE,delta=1
   215                           	psect	text191,global,reloc=2,class=CODE,delta=1
   216                           	psect	text192,global,reloc=2,class=CODE,delta=1
   217                           	psect	text193,global,reloc=2,class=CODE,delta=1
   218                           	psect	text194,global,reloc=2,class=CODE,delta=1
   219                           	psect	text195,global,reloc=2,class=CODE,delta=1
   220                           	psect	text196,global,reloc=4,class=CODE,delta=1
   221                           	psect	text197,global,reloc=2,class=CODE,delta=1
   222                           	psect	text198,global,reloc=2,class=CODE,delta=1
   223                           	psect	text199,global,reloc=2,class=CODE,delta=1
   224                           	psect	text200,global,reloc=2,class=CODE,delta=1
   225                           	psect	text201,global,reloc=2,class=CODE,delta=1
   226                           	psect	text202,global,reloc=2,class=CODE,delta=1
   227                           	psect	text203,global,reloc=2,class=CODE,delta=1,group=1
   228                           	psect	text204,global,reloc=4,class=CODE,delta=1
   229                           	psect	text205,global,reloc=2,class=CODE,delta=1
   230                           	psect	text206,global,reloc=2,class=CODE,delta=1
   231                           	psect	text207,global,reloc=4,class=CODE,delta=1
   232                           	psect	text208,global,reloc=4,class=CODE,delta=1
   233                           	psect	text209,global,reloc=2,class=CODE,delta=1
   234                           	psect	text210,global,reloc=2,class=CODE,delta=1
   235                           	psect	text211,global,reloc=2,class=CODE,delta=1
   236                           	psect	text212,global,reloc=4,class=CODE,delta=1
   237                           	psect	text213,global,reloc=4,class=CODE,delta=1
   238                           	psect	text214,global,reloc=2,class=CODE,delta=1
   239                           	psect	text215,global,reloc=4,class=CODE,delta=1
   240                           	psect	text216,global,reloc=2,class=CODE,delta=1
   241                           	psect	text217,global,reloc=4,class=CODE,delta=1
   242                           	psect	text218,global,reloc=2,class=CODE,delta=1
   243                           	psect	text219,global,reloc=4,class=CODE,delta=1
   244                           	psect	text220,global,reloc=2,class=CODE,delta=1
   245                           	psect	text221,global,reloc=2,class=CODE,delta=1
   246                           	psect	text222,global,reloc=4,class=CODE,delta=1
   247                           	psect	text223,global,reloc=4,class=CODE,delta=1
   248                           	psect	text224,global,reloc=4,class=CODE,delta=1
   249                           	psect	text225,global,reloc=4,class=CODE,delta=1
   250                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   251                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   252                           	psect	text226,global,reloc=4,class=CODE,delta=1
   253                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   254                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   255  0000                     
   256                           ; Version 2.10
   257                           ; Generated 31/07/2019 GMT
   258                           ; 
   259                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   260                           ; All rights reserved.
   261                           ; 
   262                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   263                           ; 
   264                           ; Redistribution and use in source and binary forms, with or without modification, are
   265                           ; permitted provided that the following conditions are met:
   266                           ; 
   267                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   268                           ;        conditions and the following disclaimer.
   269                           ; 
   270                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   271                           ;        of conditions and the following disclaimer in the documentation and/or other
   272                           ;        materials provided with the distribution.
   273                           ; 
   274                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   275                           ;        software without specific prior written permission.
   276                           ; 
   277                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   278                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   279                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   280                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   281                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   282                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   283                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   284                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   285                           ; 
   286                           ; 
   287                           ; Code-generator required, PIC18F57K42 Definitions
   288                           ; 
   289                           ; SFR Addresses
   290  0000                     
   291 ;;_main$4035	offset	0
   292 ;;_main$4031	offset	2
   293 ;;_esr_temp	offset	4
   294 ;;_i_esr	offset	8
   295 ;;_shape	offset	10
   296 ;;_inp_index	offset	11
   297 ;;_k	offset	12
   298 ;;_j	offset	13
   299 ;;_i	offset	14
   300 ;;_mode	offset	15
   301 ;;_i_ror	offset	16
   302 ;;_mode	offset=-1 (param)
   303 ;;_hist	offset=-3 (param)
   304 ;;_s	offset=-2 (param)
   305 ;;_t	offset=-8 (param)
   306 ;;_voltage	offset=-4 (param)
   307 ;;_voltage	offset=-4 (param)
   308 ;;_voltage	offset=-4 (param)
   309 ;;_set	offset=-1 (param)
   310 ;;_x	offset	0
   311 ;;_r_cal_ptr	offset	2
   312 ;;_y	offset	4
   313 ;;_crcVal_save	offset	6
   314 ;;_bAdd	offset=-2 (param)
   315 ;;_esr_rescale	offset	0
   316 ;;_data	offset=-1 (param)
   317 ;;_cmd	offset=-1 (param)
   318 ;;_cmd	offset=-1 (param)
   319 ;;_delay	offset=-4 (param)
   320 ;;_data	offset=-1 (param)
   321 ;;__this	offset=-2 (param)
   322 ;;_soc	offset	0
   323 ;;_slot	offset	2
   324 ;;_cvoltage	offset=-4 (param)
   325 ;;_h	offset=-2 (param)
   326 ;;_h	offset=-2 (param)
   327 ;;_fsm	offset=-1 (param)
   328 ;;_mode	offset=-1 (param)
   329 ;;_mode	offset=-1 (param)
   330 ;;_cmd	offset=-1 (param)
   331 ;;_t	offset=-8 (param)
   332 ;;_t	offset=-1 (param)
   333 ;;_t	offset=-1 (param)
   334 ;;_tm	offset=-3 (param)
   335 ;;_y	offset	0
   336 ;;_t1	offset	8
   337 ;;_t0	offset	16
   338 ;;_t	offset=-8 (param)
   339 ;;_local	offset=-10 (param)
   340 ;;_isdst	offset=-12 (param)
   341 ;;_offset	offset=-14 (param)
   342 ;;_oppoff	offset=-16 (param)
   343 ;;_zonename	offset=-18 (param)
   344 ;;_t	offset=-8 (param)
   345 ;;_local	offset=-10 (param)
   346 ;;_alt	offset=-12 (param)
   347 ;;_z	offset=-2 (param)
   348 ;;_days	offset	0
   349 ;;_wday	offset	2
   350 ;;_t	offset	4
   351 ;;_is_leap	offset	12
   352 ;;_n	offset	14
   353 ;;_x	offset	16
   354 ;;_m	offset	18
   355 ;;_d	offset	20
   356 ;;_rule	offset=-6 (param)
   357 ;;_year	offset=-8 (param)
   358 ;;_m	offset=-2 (param)
   359 ;;_is_leap	offset=-4 (param)
   360 ;;_y	offset	0
   361 ;;_leaps	offset	2
   362 ;;_rem	offset	4
   363 ;;F5	offset	6
   364 ;;_centuries	offset	8
   365 ;;_leaps	offset	10
   366 ;;_cycles	offset	12
   367 ;;_year	offset=-8 (param)
   368 ;;_is_leap	offset=-10 (param)
   369 ;;_t	offset	0
   370 ;;_month	offset=-2 (param)
   371 ;;_is_leap	offset=-4 (param)
   372 ;;_s	offset	0
   373 ;;_r	offset	0
   374 ;;_p	offset=-2 (param)
   375 ;;_rule	offset=-4 (param)
   376 ;;_off	offset	0
   377 ;;_neg	offset	2
   378 ;;_p	offset=-2 (param)
   379 ;;_x	offset	0
   380 ;;_p	offset=-2 (param)
   381 ;;_i	offset	0
   382 ;;_d	offset=-2 (param)
   383 ;;_p	offset=-4 (param)
   384 ;;___secs_to_tm$7621	offset	0
   385 ;;_years	offset	1
   386 ;;_days	offset	9
   387 ;;_secs	offset	17
   388 ;;_remdays	offset	25
   389 ;;_q_cycles	offset	29
   390 ;;_c_cycles	offset	33
   391 ;;_remyears	offset	37
   392 ;;_remsecs	offset	41
   393 ;;_qc_cycles	offset	45
   394 ;;_months	offset	49
   395 ;;_leap	offset	51
   396 ;;_yday	offset	53
   397 ;;_wday	offset	55
   398 ;;_t	offset=-8 (param)
   399 ;;_tm	offset=-10 (param)
   400 ;;_product	offset	0
   401 ;;_multiplier	offset=-8 (param)
   402 ;;_multiplicand	offset=-16 (param)
   403 ;;_product	offset	0
   404 ;;_multiplier	offset=-4 (param)
   405 ;;_multiplicand	offset=-8 (param)
   406 ;;_sign	offset	0
   407 ;;_counter	offset	1
   408 ;;_dividend	offset=-4 (param)
   409 ;;_divisor	offset=-8 (param)
   410 ;;_quotient	offset	0
   411 ;;_sign	offset	4
   412 ;;_counter	offset	5
   413 ;;_dividend	offset=-4 (param)
   414 ;;_divisor	offset=-8 (param)
   415 ;;_cp	offset	0
   416 ;;_s	offset	2
   417 ;;_tim	offset=-2 (param)
   418 ;;_cp	offset=-2 (param)
   419 ;;_i	offset=-3 (param)
   420 ;;_cl	offset=-4 (param)
   421 ;;_ct	offset=-5 (param)
   422 ;;_rem	offset	0
   423 ;;_counter	offset	1
   424 ;;_dividend	offset=-1 (param)
   425 ;;_divisor	offset=-2 (param)
   426 ;;_cp	offset	0
   427 ;;_cb	offset	4
   428 ;;_x	offset	8
   429 ;;_x	offset	0
   430 ;;_r_cal_ptr	offset	2
   431 ;;_y	offset	4
   432 ;;_crcVal	offset	6
   433 ;;_GIEBitValue	offset	0
   434 ;;_bAdd	offset=-2 (param)
   435 ;;_bData	offset=-3 (param)
   436 ;;_result	offset	0
   437 ;;_mask	offset	2
   438 ;;_reverse	offset=-1 (param)
   439 ;;_xorValue	offset=-3 (param)
   440 ;;_mask	offset	0
   441 ;;_reverse	offset	2
   442 ;;_crc	offset=-2 (param)
   443 ;;_data	offset=-1 (param)
   444 ;;_channel	offset=-1 (param)
   445 ;;_c	offset	0
   446 ;;_shape	offset=-1 (param)
   447 ;;_reset	offset=-2 (param)
   448 ;;_i	offset=-1 (param)
   449 ;;_mode	offset=-1 (param)
   450 ;;_cb	offset=-3 (param)
   451 ;;_cp	offset=-5 (param)
   452 ;;_value	offset=-2 (param)
   453 ;;_window	offset=-4 (param)
   454 ;;_standard	offset=-6 (param)
   455 ;;_i	offset	0
   456 ;;_h	offset=-2 (param)
   457 ;;_flipper	offset=-1 (param)
   458 ;;_f	offset	0
   459 ;;_ap	offset	6
   460 ;;_s	offset=-3 (param)
   461 ;;_fmt	offset=-5 (param)
   462 ;;_line	offset=-1 (param)
   463 ;;_vterm	offset=-2 (param)
   464 ;;_numMilliseconds	offset=-2 (param)
   465 ;;_vterm	offset=-1 (param)
   466 ;;_row	offset	0
   467 ;;_r	offset=-1 (param)
   468 ;;_c	offset=-2 (param)
   469 ;;_strPtr	offset=-4 (param)
   470 ;;_strPtr	offset=-1 (param)
   471 ;;_strPtr	offset=-1 (param)
   472 ;;_strPtr	offset=-2 (param)
   473 ;;__this	offset=-2 (param)
   474 ;;_clearBuffer	offset=-3 (param)
   475 ;;_s	offset	0
   476 ;;_k	offset	2
   477 ;;_dest	offset=-2 (param)
   478 ;;_c	offset=-4 (param)
   479 ;;_n	offset=-6 (param)
   480 ;;_ap	offset	0
   481 ;;_fmt	offset=-3 (param)
   482 ;;_cfmt	offset	0
   483 ;;_fp	offset=-2 (param)
   484 ;;_fmt	offset=-4 (param)
   485 ;;_ap	offset=-6 (param)
   486 ;;_vfpfcnvrt$6662	offset	0
   487 ;;_vfpfcnvrt$6673	offset	2
   488 ;;_vfpfcnvrt$6661	offset	4
   489 ;;_llu	offset	6
   490 ;;_ll	offset	14
   491 ;;_f	offset	22
   492 ;;_ct	offset	26
   493 ;;_cp	offset	29
   494 ;;_c	offset	31
   495 ;;_fp	offset=-2 (param)
   496 ;;_fmt	offset=-4 (param)
   497 ;;_ap	offset=-6 (param)
   498 ;;_xtoa$6647	offset	0
   499 ;;_xtoa$6646	offset	2
   500 ;;_n	offset	4
   501 ;;_c	offset	12
   502 ;;_i	offset	14
   503 ;;_w	offset	16
   504 ;;_p	offset	18
   505 ;;_fp	offset=-2 (param)
   506 ;;_d	offset=-10 (param)
   507 ;;_x	offset=-11 (param)
   508 ;;_toupper$7588	offset	0
   509 ;;_c	offset=-2 (param)
   510 ;;_c	offset=-2 (param)
   511 ;;_c	offset=-2 (param)
   512 ;;_n	offset	0
   513 ;;_i	offset	8
   514 ;;_w	offset	10
   515 ;;_p	offset	12
   516 ;;_fp	offset=-2 (param)
   517 ;;_d	offset=-10 (param)
   518 ;;_counter	offset	0
   519 ;;_dividend	offset=-8 (param)
   520 ;;_divisor	offset=-16 (param)
   521 ;;_quotient	offset	0
   522 ;;_counter	offset	8
   523 ;;_dividend	offset=-8 (param)
   524 ;;_divisor	offset=-16 (param)
   525 ;;_r	offset	0
   526 ;;_l	offset	2
   527 ;;__l	offset=-2 (param)
   528 ;;__r	offset=-4 (param)
   529 ;;_n	offset=-6 (param)
   530 ;;_nuls	offset	0
   531 ;;_l	offset	7
   532 ;;_p	offset	9
   533 ;;_cp	offset	11
   534 ;;_w	offset	13
   535 ;;_i	offset	15
   536 ;;_fp	offset=-2 (param)
   537 ;;_s	offset=-4 (param)
   538 ;;_efgtoa$6619	offset	0
   539 ;;_efgtoa$6618	offset	2
   540 ;;_efgtoa$6617	offset	4
   541 ;;_efgtoa$6613	offset	6
   542 ;;_efgtoa$6609	offset	8
   543 ;;_efgtoa$6608	offset	10
   544 ;;_u	offset	12
   545 ;;_g	offset	16
   546 ;;_l	offset	20
   547 ;;_h	offset	24
   548 ;;_ou	offset	28
   549 ;;_n	offset	32
   550 ;;_e	offset	34
   551 ;;_i	offset	36
   552 ;;_w	offset	38
   553 ;;_p	offset	40
   554 ;;_sign	offset	42
   555 ;;_d	offset	44
   556 ;;_ne	offset	46
   557 ;;_m	offset	48
   558 ;;_pp	offset	50
   559 ;;_t	offset	52
   560 ;;_mode	offset	54
   561 ;;_nmode	offset	55
   562 ;;_fp	offset=-2 (param)
   563 ;;_f	offset=-6 (param)
   564 ;;_c	offset=-7 (param)
   565 ;;_tolower$7573	offset	0
   566 ;;_c	offset=-2 (param)
   567 ;;_c	offset=-2 (param)
   568 ;;_d	offset	0
   569 ;;_s	offset	2
   570 ;;_dest	offset=-2 (param)
   571 ;;_src	offset=-4 (param)
   572 ;;_u	offset	0
   573 ;;_m	offset	4
   574 ;;_e	offset	8
   575 ;;_x	offset=-4 (param)
   576 ;;_u	offset	0
   577 ;;_e	offset	4
   578 ;;_x	offset=-4 (param)
   579 ;;_exp1	offset	0
   580 ;;_sign1	offset	1
   581 ;;_f1	offset=-4 (param)
   582 ;;_f1	offset=-4 (param)
   583 ;;_ff1	offset=-4 (param)
   584 ;;_ff2	offset=-8 (param)
   585 ;;_sign	offset	0
   586 ;;_counter	offset	1
   587 ;;_dividend	offset=-2 (param)
   588 ;;_divisor	offset=-4 (param)
   589 ;;_quotient	offset	0
   590 ;;_sign	offset	2
   591 ;;_counter	offset	3
   592 ;;_dividend	offset=-2 (param)
   593 ;;_divisor	offset=-4 (param)
   594 ;;_dtoa$6585	offset	0
   595 ;;_n	offset	2
   596 ;;_i	offset	10
   597 ;;_s	offset	12
   598 ;;_w	offset	14
   599 ;;_p	offset	16
   600 ;;_fp	offset=-2 (param)
   601 ;;_d	offset=-10 (param)
   602 ;;_a	offset=-2 (param)
   603 ;;_sign	offset	0
   604 ;;_counter	offset	1
   605 ;;_dividend	offset=-8 (param)
   606 ;;_divisor	offset=-16 (param)
   607 ;;_quotient	offset	0
   608 ;;_sign	offset	8
   609 ;;_counter	offset	9
   610 ;;_dividend	offset=-8 (param)
   611 ;;_divisor	offset=-16 (param)
   612 ;;_w	offset	0
   613 ;;_fp	offset=-2 (param)
   614 ;;_c	offset=-3 (param)
   615 ;;_w	offset	0
   616 ;;_i	offset	2
   617 ;;_fp	offset=-2 (param)
   618 ;;_buf	offset=-4 (param)
   619 ;;_p	offset=-6 (param)
   620 ;;_a	offset	0
   621 ;;_s	offset=-2 (param)
   622 ;;_i	offset	0
   623 ;;_c	offset	2
   624 ;;_s	offset=-2 (param)
   625 ;;_fp	offset=-4 (param)
   626 ;;_c	offset=-2 (param)
   627 ;;_fp	offset=-4 (param)
   628 ;;_c	offset=-1 (param)
   629 ;;__this	offset=-2 (param)
   630 ;;_c	offset=-3 (param)
   631 ;;_atoi$7205	offset	0
   632 ;;_atoi$7203	offset	2
   633 ;;_atoi$7204	offset	4
   634 ;;_n	offset	5
   635 ;;_neg	offset	7
   636 ;;_s	offset=-2 (param)
   637 ;;_isspace$7254	offset	0
   638 ;;_c	offset=-2 (param)
   639 ;;_c	offset=-2 (param)
   640 ;;_vterm	offset=-1 (param)
   641 ;;_new_response_info	offset=-1 (param)
   642 ;;_new_response_info	offset=-1 (param)
   643 ;;_level	offset=-2 (param)
   644 ;;_dutyValue	offset=-2 (param)
   645 ;;_timer	offset=-1 (param)
   646 ;;_timer	offset=-1 (param)
   647 ;;_count	offset=-3 (param)
   648 ;;_h	offset=-2 (param)
   649 ;;_u	offset	0
   650 ;;_x	offset=-4 (param)
   651 ;;_chan	offset=-1 (param)
   652 ;;_to_what	offset=-2 (param)
   653 ;;_u	offset	0
   654 ;;_s	offset=-2 (param)
   655 ;;_index	offset=-1 (param)
   656 ;;_arg	offset	0
   657 ;;_exp	offset	4
   658 ;;_sign	offset=-1 (param)
   659 ;;_val	offset=-5 (param)
   660 ;;_grs	offset	0
   661 ;;_rem	offset	4
   662 ;;_new_exp	offset	8
   663 ;;_aexp	offset	10
   664 ;;_bexp	offset	11
   665 ;;_sign	offset	12
   666 ;;_b	offset=-4 (param)
   667 ;;_a	offset=-8 (param)
   668 ;;_ff1	offset=-4 (param)
   669 ;;_ff2	offset=-8 (param)
   670 ;;_lp_speed	offset	0
   671 ;;_new	offset=-4 (param)
   672 ;;_bn	offset=-5 (param)
   673 ;;_slow	offset=-6 (param)
   674 ;;_b	offset=-4 (param)
   675 ;;_a	offset=-8 (param)
   676 ;;_grs	offset	0
   677 ;;_bexp	offset	1
   678 ;;_aexp	offset	2
   679 ;;_signs	offset	3
   680 ;;_b	offset=-4 (param)
   681 ;;_a	offset=-8 (param)
   682 ;;_prod	offset	0
   683 ;;_grs	offset	4
   684 ;;_temp	offset	8
   685 ;;_bexp	offset	10
   686 ;;_aexp	offset	11
   687 ;;_sign	offset	12
   688 ;;_b	offset=-4 (param)
   689 ;;_a	offset=-8 (param)
   690 ;;_InterruptHandler	offset=-3 (param)
   691 ;;_InterruptHandler	offset=-3 (param)
   692 ;;_InterruptHandler	offset=-3 (param)
   693 ;;_InterruptHandler	offset=-3 (param)
   694 ;;_InterruptHandler	offset=-3 (param)
   695 ;;_InterruptHandler	offset=-3 (param)
   696 ;;_state	offset	0
   697 ;;_InterruptHandler	offset=-3 (param)
   698 ;;_InterruptHandler	offset=-3 (param)
   699 ;;_seed	offset	0
   700 ;;_poly	offset	2
   701 ;;_InterruptHandler	offset=-3 (param)
   702 ;;_InterruptHandler	offset=-3 (param)
   703 ;;_i	offset	0
   704 ;;_sw_value	offset	1
   705 ;;_timerVal	offset=-2 (param)
   706 ;;_light	offset	0
   707 ;;_t	offset=-8 (param)
   708 ;;_mode	offset=-1 (param)
   709 ;;_chan	offset=-1 (param)
   710 ;;_to_what	offset=-2 (param)
   711 ;;_u	offset	0
   712 ;;_s	offset=-2 (param)
   713 ;;_index	offset=-1 (param)
   714 ;;_arg	offset	0
   715 ;;_exp	offset	4
   716 ;;_sign	offset=-1 (param)
   717 ;;_val	offset=-5 (param)
   718 ;;_b	offset=-4 (param)
   719 ;;_a	offset=-8 (param)
   720 ;;_grs	offset	0
   721 ;;_bexp	offset	1
   722 ;;_aexp	offset	2
   723 ;;_signs	offset	3
   724 ;;_b	offset=-4 (param)
   725 ;;_a	offset=-8 (param)
   726 ;;_prod	offset	0
   727 ;;_grs	offset	4
   728 ;;_temp	offset	8
   729 ;;_bexp	offset	10
   730 ;;_aexp	offset	11
   731 ;;_sign	offset	12
   732 ;;_b	offset=-4 (param)
   733 ;;_a	offset=-8 (param)
   734 ;;_grs	offset	0
   735 ;;_rem	offset	4
   736 ;;_new_exp	offset	8
   737 ;;_aexp	offset	10
   738 ;;_bexp	offset	11
   739 ;;_sign	offset	12
   740 ;;_b	offset=-4 (param)
   741 ;;_a	offset=-8 (param)
   742 ;;_ff1	offset=-4 (param)
   743 ;;_ff2	offset=-8 (param)
   744 ;;_timerVal	offset=-2 (param)
   745 ;;_adj	offset	0
   746 ;;_log_ptr	offset	4
   747 ;;_f	offset	0
   748 ;;_ap	offset	6
   749 ;;_s	offset=-3 (param)
   750 ;;_fmt	offset=-5 (param)
   751 ;;_cfmt	offset	0
   752 ;;_fp	offset=-2 (param)
   753 ;;_fmt	offset=-4 (param)
   754 ;;_ap	offset=-6 (param)
   755 ;;_vfpfcnvrt$6662	offset	0
   756 ;;_vfpfcnvrt$6673	offset	2
   757 ;;_vfpfcnvrt$6661	offset	4
   758 ;;_llu	offset	6
   759 ;;_ll	offset	14
   760 ;;_f	offset	22
   761 ;;_ct	offset	26
   762 ;;_cp	offset	29
   763 ;;_c	offset	31
   764 ;;_fp	offset=-2 (param)
   765 ;;_fmt	offset=-4 (param)
   766 ;;_ap	offset=-6 (param)
   767 ;;_xtoa$6647	offset	0
   768 ;;_xtoa$6646	offset	2
   769 ;;_n	offset	4
   770 ;;_c	offset	12
   771 ;;_i	offset	14
   772 ;;_w	offset	16
   773 ;;_p	offset	18
   774 ;;_fp	offset=-2 (param)
   775 ;;_d	offset=-10 (param)
   776 ;;_x	offset=-11 (param)
   777 ;;_toupper$7588	offset	0
   778 ;;_c	offset=-2 (param)
   779 ;;_c	offset=-2 (param)
   780 ;;_c	offset=-2 (param)
   781 ;;_n	offset	0
   782 ;;_i	offset	8
   783 ;;_w	offset	10
   784 ;;_p	offset	12
   785 ;;_fp	offset=-2 (param)
   786 ;;_d	offset=-10 (param)
   787 ;;_counter	offset	0
   788 ;;_dividend	offset=-8 (param)
   789 ;;_divisor	offset=-16 (param)
   790 ;;_quotient	offset	0
   791 ;;_counter	offset	8
   792 ;;_dividend	offset=-8 (param)
   793 ;;_divisor	offset=-16 (param)
   794 ;;_r	offset	0
   795 ;;_l	offset	2
   796 ;;__l	offset=-2 (param)
   797 ;;__r	offset=-4 (param)
   798 ;;_n	offset=-6 (param)
   799 ;;_nuls	offset	0
   800 ;;_l	offset	7
   801 ;;_p	offset	9
   802 ;;_cp	offset	11
   803 ;;_w	offset	13
   804 ;;_i	offset	15
   805 ;;_fp	offset=-2 (param)
   806 ;;_s	offset=-4 (param)
   807 ;;_efgtoa$6619	offset	0
   808 ;;_efgtoa$6618	offset	2
   809 ;;_efgtoa$6617	offset	4
   810 ;;_efgtoa$6613	offset	6
   811 ;;_efgtoa$6609	offset	8
   812 ;;_efgtoa$6608	offset	10
   813 ;;_u	offset	12
   814 ;;_g	offset	16
   815 ;;_l	offset	20
   816 ;;_h	offset	24
   817 ;;_ou	offset	28
   818 ;;_n	offset	32
   819 ;;_e	offset	34
   820 ;;_i	offset	36
   821 ;;_w	offset	38
   822 ;;_p	offset	40
   823 ;;_sign	offset	42
   824 ;;_d	offset	44
   825 ;;_ne	offset	46
   826 ;;_m	offset	48
   827 ;;_pp	offset	50
   828 ;;_t	offset	52
   829 ;;_mode	offset	54
   830 ;;_nmode	offset	55
   831 ;;_fp	offset=-2 (param)
   832 ;;_f	offset=-6 (param)
   833 ;;_c	offset=-7 (param)
   834 ;;_tolower$7573	offset	0
   835 ;;_c	offset=-2 (param)
   836 ;;_c	offset=-2 (param)
   837 ;;_d	offset	0
   838 ;;_s	offset	2
   839 ;;_dest	offset=-2 (param)
   840 ;;_src	offset=-4 (param)
   841 ;;_u	offset	0
   842 ;;_m	offset	4
   843 ;;_e	offset	8
   844 ;;_x	offset=-4 (param)
   845 ;;_u	offset	0
   846 ;;_e	offset	4
   847 ;;_x	offset=-4 (param)
   848 ;;_exp1	offset	0
   849 ;;_sign1	offset	1
   850 ;;_f1	offset=-4 (param)
   851 ;;_f1	offset=-4 (param)
   852 ;;_ff1	offset=-4 (param)
   853 ;;_ff2	offset=-8 (param)
   854 ;;_sign	offset	0
   855 ;;_counter	offset	1
   856 ;;_dividend	offset=-2 (param)
   857 ;;_divisor	offset=-4 (param)
   858 ;;_quotient	offset	0
   859 ;;_sign	offset	2
   860 ;;_counter	offset	3
   861 ;;_dividend	offset=-2 (param)
   862 ;;_divisor	offset=-4 (param)
   863 ;;_dtoa$6585	offset	0
   864 ;;_n	offset	2
   865 ;;_i	offset	10
   866 ;;_s	offset	12
   867 ;;_w	offset	14
   868 ;;_p	offset	16
   869 ;;_fp	offset=-2 (param)
   870 ;;_d	offset=-10 (param)
   871 ;;_a	offset=-2 (param)
   872 ;;_sign	offset	0
   873 ;;_counter	offset	1
   874 ;;_dividend	offset=-8 (param)
   875 ;;_divisor	offset=-16 (param)
   876 ;;_quotient	offset	0
   877 ;;_sign	offset	8
   878 ;;_counter	offset	9
   879 ;;_dividend	offset=-8 (param)
   880 ;;_divisor	offset=-16 (param)
   881 ;;_w	offset	0
   882 ;;_fp	offset=-2 (param)
   883 ;;_c	offset=-3 (param)
   884 ;;_w	offset	0
   885 ;;_i	offset	2
   886 ;;_fp	offset=-2 (param)
   887 ;;_buf	offset=-4 (param)
   888 ;;_p	offset=-6 (param)
   889 ;;_a	offset	0
   890 ;;_s	offset=-2 (param)
   891 ;;_i	offset	0
   892 ;;_c	offset	2
   893 ;;_s	offset=-2 (param)
   894 ;;_fp	offset=-4 (param)
   895 ;;_c	offset=-2 (param)
   896 ;;_fp	offset=-4 (param)
   897 ;;_c	offset=-1 (param)
   898 ;;__this	offset=-2 (param)
   899 ;;_c	offset=-3 (param)
   900 ;;_atoi$7205	offset	0
   901 ;;_atoi$7203	offset	2
   902 ;;_atoi$7204	offset	4
   903 ;;_n	offset	5
   904 ;;_neg	offset	7
   905 ;;_s	offset=-2 (param)
   906 ;;_isspace$7254	offset	0
   907 ;;_c	offset=-2 (param)
   908 ;;_c	offset=-2 (param)
   909 ;;_dsize	offset=-2 (param)
   910 ;;_u	offset	0
   911 ;;_x	offset=-4 (param)
   912 ;;_f1p	offset=-2 (param)
   913 ;;_f2	offset=-6 (param)
   914 ;;_timer	offset=-1 (param)
   915 ;;_count	offset=-3 (param)
   916 ;;_channel	offset=-1 (param)
   917 ;;_i	offset	0
   918                           
   919                           	psect	idataBIGRAM
   920  01A2F0                     __pidataBIGRAM:
   921                           	opt callstack 0
   922                           
   923                           ;initializer for _port_data
   924  01A2F0  FF                 	db	255
   925  01A2F1  00                 	db	0
   926  01A2F2  FF                 	db	255
   927  01A2F3  00                 	db	0
   928  01A2F4  FF                 	db	255
   929  01A2F5  00                 	db	0
   930  01A2F6  FF                 	db	255
   931  01A2F7  00                 	db	0
   932  01A2F8  FF                 	db	255
   933  01A2F9  00                 	db	0
   934  01A2FA  FF                 	db	255
   935  01A2FB  00                 	db	0
   936  01A2FC  FF                 	db	255
   937  01A2FD  00                 	db	0
   938  01A2FE  FF                 	db	255
   939  01A2FF  00                 	db	0
   940  01A300  00                 	db	0
   941  01A301  00                 	db	0
   942  01A302  00                 	db	0
   943  01A303  00                 	db	0
   944  01A304  00                 	db	0
   945  01A305  00                 	db	0
   946  01A306  00                 	db	0
   947  01A307  00                 	db	0
   948  01A308  00                 	db	0
   949  01A309  00                 	db	0
   950  01A30A  00                 	db	0
   951  01A30B  00                 	db	0
   952  01A30C  00                 	db	0
   953  01A30D  00                 	db	0
   954  01A30E  00                 	db	0
   955  01A30F  00                 	db	0
   956  01A310  00                 	db	0
   957  01A311  00                 	db	0
   958  01A312  00                 	db	0
   959  01A313  00                 	db	0
   960  01A314  00                 	db	0
   961  01A315  00                 	db	0
   962  01A316  00                 	db	0
   963  01A317  00                 	db	0
   964  01A318  00                 	db	0
   965  01A319  00                 	db	0
   966  01A31A  00                 	db	0
   967  01A31B  00                 	db	0
   968  01A31C  00                 	db	0
   969  01A31D  00                 	db	0
   970  01A31E  00                 	db	0
   971  01A31F  00                 	db	0
   972  01A320  00                 	db	0
   973  01A321  00                 	db	0
   974  01A322  00                 	db	0
   975  01A323  00                 	db	0
   976  01A324  00                 	db	0
   977  01A325  00                 	db	0
   978  01A326  00                 	db	0
   979  01A327  00                 	db	0
   980  01A328  00                 	db	0
   981  01A329  00                 	db	0
   982  01A32A  00                 	db	0
   983  01A32B  00                 	db	0
   984  01A32C  00                 	db	0
   985  01A32D  00                 	db	0
   986  01A32E  00                 	db	0
   987  01A32F  00                 	db	0
   988  01A330  00                 	db	0
   989  01A331  00                 	db	0
   990  01A332  00                 	db	0
   991  01A333  00                 	db	0
   992  01A334  00                 	db	0
   993  01A335  00                 	db	0
   994  01A336  00                 	db	0
   995  01A337  00                 	db	0
   996  01A338  00                 	db	0
   997  01A339  00                 	db	0
   998  01A33A  00                 	db	0
   999  01A33B  00                 	db	0
  1000  01A33C  00                 	db	0
  1001  01A33D  00                 	db	0
  1002  01A33E  00                 	db	0
  1003  01A33F  00                 	db	0
  1004  01A340  00                 	db	0
  1005  01A341  00                 	db	0
  1006  01A342  00                 	db	0
  1007  01A343  00                 	db	0
  1008  01A344  00                 	db	0
  1009  01A345  00                 	db	0
  1010  01A346  00                 	db	0
  1011  01A347  00                 	db	0
  1012  01A348  00                 	db	0
  1013  01A349  00                 	db	0
  1014  01A34A  00                 	db	0
  1015  01A34B  00                 	db	0
  1016  01A34C  00                 	db	0
  1017  01A34D  00                 	db	0
  1018  01A34E  00                 	db	0
  1019  01A34F  00                 	db	0
  1020  01A350  00                 	db	0
  1021  01A351  00                 	db	0
  1022  01A352  00                 	db	0
  1023  01A353  00                 	db	0
  1024  01A354  00                 	db	0
  1025  01A355  00                 	db	0
  1026  01A356  00                 	db	0
  1027  01A357  00                 	db	0
  1028  01A358  00                 	db	0
  1029  01A359  00                 	db	0
  1030  01A35A  00                 	db	0
  1031  01A35B  00                 	db	0
  1032  01A35C  00                 	db	0
  1033  01A35D  00                 	db	0
  1034  01A35E  00                 	db	0
  1035  01A35F  00                 	db	0
  1036  01A360  00                 	db	0
  1037  01A361  00                 	db	0
  1038  01A362  00                 	db	0
  1039  01A363  00                 	db	0
  1040  01A364  00                 	db	0
  1041  01A365  00                 	db	0
  1042  01A366  00                 	db	0
  1043  01A367  00                 	db	0
  1044  01A368  00                 	db	0
  1045  01A369  00                 	db	0
  1046  01A36A  00                 	db	0
  1047  01A36B  00                 	db	0
  1048  01A36C  00                 	db	0
  1049  01A36D  00                 	db	0
  1050  01A36E  00                 	db	0
  1051  01A36F  00                 	db	0
  1052  01A370  00                 	db	0
  1053  01A371  00                 	db	0
  1054  01A372  00                 	db	0
  1055  01A373  00                 	db	0
  1056  01A374  00                 	db	0
  1057  01A375  00                 	db	0
  1058  01A376  00                 	db	0
  1059  01A377  00                 	db	0
  1060  01A378  00                 	db	0
  1061  01A379  00                 	db	0
  1062  01A37A  00                 	db	0
  1063  01A37B  00                 	db	0
  1064  01A37C  00                 	db	0
  1065  01A37D  00                 	db	0
  1066  01A37E  00                 	db	0
  1067  01A37F  00                 	db	0
  1068  01A380  00                 	db	0
  1069  01A381  00                 	db	0
  1070  01A382  00                 	db	0
  1071  01A383  00                 	db	0
  1072  01A384  00                 	db	0
  1073  01A385  00                 	db	0
  1074  01A386  00                 	db	0
  1075  01A387  00                 	db	0
  1076  01A388  00                 	db	0
  1077  01A389  00                 	db	0
  1078  01A38A  00                 	db	0
  1079  01A38B  00                 	db	0
  1080  01A38C  00                 	db	0
  1081  01A38D  00                 	db	0
  1082  01A38E  00                 	db	0
  1083  01A38F  00                 	db	0
  1084  01A390  00                 	db	0
  1085  01A391  00                 	db	0
  1086  01A392  00                 	db	0
  1087  01A393  00                 	db	0
  1088  01A394  00                 	db	0
  1089  01A395  00                 	db	0
  1090  01A396  00                 	db	0
  1091  01A397  00                 	db	0
  1092  01A398  00                 	db	0
  1093  01A399  00                 	db	0
  1094  01A39A  00                 	db	0
  1095  01A39B  00                 	db	0
  1096  01A39C  00                 	db	0
  1097  01A39D  00                 	db	0
  1098  01A39E  00                 	db	0
  1099  01A39F  00                 	db	0
  1100  01A3A0  00                 	db	0
  1101  01A3A1  00                 	db	0
  1102  01A3A2  00                 	db	0
  1103  01A3A3  00                 	db	0
  1104  01A3A4  00                 	db	0
  1105  01A3A5  00                 	db	0
  1106  01A3A6  00                 	db	0
  1107  01A3A7  00                 	db	0
  1108  01A3A8  00                 	db	0
  1109  01A3A9  00                 	db	0
  1110  01A3AA  00                 	db	0
  1111  01A3AB  00                 	db	0
  1112  01A3AC  00                 	db	0
  1113  01A3AD  00                 	db	0
  1114  01A3AE  00                 	db	0
  1115  01A3AF  00                 	db	0
  1116  01A3B0  00                 	db	0
  1117  01A3B1  00                 	db	0
  1118  01A3B2  00                 	db	0
  1119  01A3B3  00                 	db	0
  1120  01A3B4  00                 	db	0
  1121  01A3B5  00                 	db	0
  1122  01A3B6  00                 	db	0
  1123  01A3B7  00                 	db	0
  1124  01A3B8  00                 	db	0
  1125  01A3B9  00                 	db	0
  1126  01A3BA  00                 	db	0
  1127  01A3BB  00                 	db	0
  1128  01A3BC  00                 	db	0
  1129  01A3BD  00                 	db	0
  1130  01A3BE  00                 	db	0
  1131  01A3BF  00                 	db	0
  1132  01A3C0  00                 	db	0
  1133  01A3C1  00                 	db	0
  1134  01A3C2  00                 	db	0
  1135  01A3C3  00                 	db	0
  1136  01A3C4  00                 	db	0
  1137  01A3C5  00                 	db	0
  1138  01A3C6  00                 	db	0
  1139  01A3C7  00                 	db	0
  1140  01A3C8  00                 	db	0
  1141  01A3C9  00                 	db	0
  1142  01A3CA  00                 	db	0
  1143  01A3CB  00                 	db	0
  1144  01A3CC  00                 	db	0
  1145  01A3CD  00                 	db	0
  1146  01A3CE  00                 	db	0
  1147  01A3CF  00                 	db	0
  1148  01A3D0  00                 	db	0
  1149  01A3D1  00                 	db	0
  1150  01A3D2  00                 	db	0
  1151  01A3D3  00                 	db	0
  1152  01A3D4  00                 	db	0
  1153  01A3D5  00                 	db	0
  1154  01A3D6  00                 	db	0
  1155  01A3D7  00                 	db	0
  1156  01A3D8  00                 	db	0
  1157  01A3D9  00                 	db	0
  1158  01A3DA  00                 	db	0
  1159  01A3DB  00                 	db	0
  1160  01A3DC  00                 	db	0
  1161  01A3DD  00                 	db	0
  1162  01A3DE  00                 	db	0
  1163  01A3DF  00                 	db	0
  1164  01A3E0  00                 	db	0
  1165  01A3E1  00                 	db	0
  1166  01A3E2  00                 	db	0
  1167  01A3E3  00                 	db	0
  1168  01A3E4  00                 	db	0
  1169  01A3E5  00                 	db	0
  1170  01A3E6  00                 	db	0
  1171  01A3E7  00                 	db	0
  1172  01A3E8  00                 	db	0
  1173  01A3E9  00                 	db	0
  1174  01A3EA  00                 	db	0
  1175  01A3EB  00                 	db	0
  1176  01A3EC  00                 	db	0
  1177  01A3ED  00                 	db	0
  1178  01A3EE  00                 	db	0
  1179  01A3EF  00                 	db	0
  1180  01A3F0  00                 	db	0
  1181  01A3F1  00                 	db	0
  1182  01A3F2  00                 	db	0
  1183  01A3F3  00                 	db	0
  1184  01A3F4  00                 	db	0
  1185  01A3F5  00                 	db	0
  1186  01A3F6  00                 	db	0
  1187  01A3F7  00                 	db	0
  1188  01A3F8  00                 	db	0
  1189  01A3F9  00                 	db	0
  1190  01A3FA  00                 	db	0
  1191  01A3FB  00                 	db	0
  1192  01A3FC  00                 	db	0
  1193  01A3FD  00                 	db	0
  1194  01A3FE  00                 	db	0
  1195  01A3FF  00                 	db	0
  1196  01A400  00                 	db	0
  1197  01A401  00                 	db	0
  1198  01A402  00                 	db	0
  1199  01A403  00                 	db	0
  1200  01A404  00                 	db	0
  1201  01A405  00                 	db	0
  1202  01A406  00                 	db	0
  1203  01A407  00                 	db	0
  1204  01A408  00                 	db	0
  1205  01A409  00                 	db	0
  1206  01A40A  00                 	db	0
  1207  01A40B  00                 	db	0
  1208  01A40C  00                 	db	0
  1209  01A40D  00                 	db	0
  1210  01A40E  00                 	db	0
  1211  01A40F  00                 	db	0
  1212  01A410  00                 	db	0
  1213  01A411  00                 	db	0
  1214  01A412  00                 	db	0
  1215  01A413  00                 	db	0
  1216  01A414  00                 	db	0
  1217  01A415  00                 	db	0
  1218  01A416  00                 	db	0
  1219  01A417  00                 	db	0
  1220  01A418  00                 	db	0
  1221  01A419  00                 	db	0
  1222  01A41A  00                 	db	0
  1223  01A41B  00                 	db	0
  1224  01A41C  00                 	db	0
  1225  01A41D  00                 	db	0
  1226  01A41E  00                 	db	0
  1227  01A41F  00                 	db	0
  1228  01A420  00                 	db	0
  1229  01A421  00                 	db	0
  1230  01A422  00                 	db	0
  1231  01A423  00                 	db	0
  1232  01A424  00                 	db	0
  1233  01A425  00                 	db	0
  1234  01A426  00                 	db	0
  1235  01A427  00                 	db	0
  1236  01A428  00                 	db	0
  1237  01A429  00                 	db	0
  1238  01A42A  00                 	db	0
  1239  01A42B  00                 	db	0
  1240  01A42C  00                 	db	0
  1241  01A42D  00                 	db	0
  1242  01A42E  00                 	db	0
  1243  01A42F  00                 	db	0
  1244  01A430  00                 	db	0
  1245  01A431  00                 	db	0
  1246  01A432  00                 	db	0
  1247  01A433  00                 	db	0
  1248  01A434  00                 	db	0
  1249  01A435  00                 	db	0
  1250  01A436  00                 	db	0
  1251  01A437  00                 	db	0
  1252  01A438  00                 	db	0
  1253  01A439  00                 	db	0
  1254  01A43A  00                 	db	0
  1255  01A43B  00                 	db	0
  1256  01A43C  00                 	db	0
  1257  01A43D  00                 	db	0
  1258  01A43E  00                 	db	0
  1259  01A43F  00                 	db	0
  1260  01A440  00                 	db	0
  1261  01A441  00                 	db	0
  1262  01A442  00                 	db	0
  1263  01A443  00                 	db	0
  1264  01A444  00                 	db	0
  1265  01A445  00                 	db	0
  1266  01A446  00                 	db	0
  1267  01A447  00                 	db	0
  1268  01A448  00                 	db	0
  1269  01A449  00                 	db	0
  1270  01A44A  00                 	db	0
  1271  01A44B  00                 	db	0
  1272  01A44C  00                 	db	0
  1273  01A44D  00                 	db	0
  1274  01A44E  00                 	db	0
  1275  01A44F  00                 	db	0
  1276  01A450  00                 	db	0
  1277  01A451  00                 	db	0
  1278  01A452  00                 	db	0
  1279  01A453  00                 	db	0
  1280  01A454  00                 	db	0
  1281  01A455  00                 	db	0
  1282  01A456  00                 	db	0
  1283  01A457  00                 	db	0
  1284  01A458  00                 	db	0
  1285  01A459  00                 	db	0
  1286  01A45A  00                 	db	0
  1287  01A45B  00                 	db	0
  1288  01A45C  00                 	db	0
  1289  01A45D  00                 	db	0
  1290  01A45E  00                 	db	0
  1291  01A45F  00                 	db	0
  1292  01A460  00                 	db	0
  1293  01A461  00                 	db	0
  1294  01A462  00                 	db	0
  1295  01A463  00                 	db	0
  1296  01A464  00                 	db	0
  1297  01A465  00                 	db	0
  1298  01A466  00                 	db	0
  1299  01A467  00                 	db	0
  1300  01A468  00                 	db	0
  1301  01A469  00                 	db	0
  1302  01A46A  00                 	db	0
  1303  01A46B  00                 	db	0
  1304  01A46C  00                 	db	0
  1305  01A46D  00                 	db	0
  1306  01A46E  00                 	db	0
  1307  01A46F  00                 	db	0
  1308  01A470  00                 	db	0
  1309  01A471  00                 	db	0
  1310  01A472  00                 	db	0
  1311  01A473  00                 	db	0
  1312  01A474  00                 	db	0
  1313  01A475  00                 	db	0
  1314  01A476  00                 	db	0
  1315  01A477  00                 	db	0
  1316  01A478  00                 	db	0
  1317  01A479  00                 	db	0
  1318  01A47A  00                 	db	0
  1319  01A47B  00                 	db	0
  1320  01A47C  00                 	db	0
  1321  01A47D  00                 	db	0
  1322  01A47E  00                 	db	0
  1323  01A47F  00                 	db	0
  1324  01A480  00                 	db	0
  1325  01A481  00                 	db	0
  1326  01A482  00                 	db	0
  1327  01A483  00                 	db	0
  1328  01A484  00                 	db	0
  1329  01A485  00                 	db	0
  1330  01A486  00                 	db	0
  1331  01A487  00                 	db	0
  1332  01A488  00                 	db	0
  1333  01A489  00                 	db	0
  1334  01A48A  00                 	db	0
  1335  01A48B  00                 	db	0
  1336  01A48C  00                 	db	0
  1337  01A48D  00                 	db	0
  1338  01A48E  00                 	db	0
  1339  01A48F  00                 	db	0
  1340  01A490  00                 	db	0
  1341  01A491  00                 	db	0
  1342  01A492  00                 	db	0
  1343  01A493  00                 	db	0
  1344  01A494  00                 	db	0
  1345  01A495  00                 	db	0
  1346  01A496  00                 	db	0
  1347  01A497  00                 	db	0
  1348  01A498  00                 	db	0
  1349  01A499  00                 	db	0
  1350  01A49A  00                 	db	0
  1351  01A49B  00                 	db	0
  1352  01A49C  00                 	db	0
  1353  01A49D  00                 	db	0
  1354  01A49E  00                 	db	0
  1355  01A49F  00                 	db	0
  1356  01A4A0  00                 	db	0
  1357  01A4A1  00                 	db	0
  1358  01A4A2  00                 	db	0
  1359  01A4A3  00                 	db	0
  1360  01A4A4  00                 	db	0
  1361  01A4A5  00                 	db	0
  1362  01A4A6  00                 	db	0
  1363  01A4A7  00                 	db	0
  1364  01A4A8  00                 	db	0
  1365  01A4A9  00                 	db	0
  1366  01A4AA  00                 	db	0
  1367  01A4AB  00                 	db	0
  1368  01A4AC  00                 	db	0
  1369  01A4AD  00                 	db	0
  1370  01A4AE  00                 	db	0
  1371  01A4AF  00                 	db	0
  1372  01A4B0  00                 	db	0
  1373  01A4B1  00                 	db	0
  1374  01A4B2  00                 	db	0
  1375  01A4B3  00                 	db	0
  1376  01A4B4  00                 	db	0
  1377  01A4B5  00                 	db	0
  1378  01A4B6  00                 	db	0
  1379  01A4B7  00                 	db	0
  1380  01A4B8  00                 	db	0
  1381  01A4B9  00                 	db	0
  1382  01A4BA  00                 	db	0
  1383  01A4BB  00                 	db	0
  1384  01A4BC  00                 	db	0
  1385  01A4BD  00                 	db	0
  1386  01A4BE  00                 	db	0
  1387  01A4BF  00                 	db	0
  1388  01A4C0  00                 	db	0
  1389  01A4C1  00                 	db	0
  1390  01A4C2  00                 	db	0
  1391  01A4C3  00                 	db	0
  1392  01A4C4  00                 	db	0
  1393  01A4C5  00                 	db	0
  1394  01A4C6  00                 	db	0
  1395  01A4C7  00                 	db	0
  1396  01A4C8  00                 	db	0
  1397  01A4C9  00                 	db	0
  1398  01A4CA  00                 	db	0
  1399  01A4CB  00                 	db	0
  1400  01A4CC  00                 	db	0
  1401  01A4CD  00                 	db	0
  1402  01A4CE  00                 	db	0
  1403  01A4CF  00                 	db	0
  1404  01A4D0  00                 	db	0
  1405  01A4D1  00                 	db	0
  1406  01A4D2  00                 	db	0
  1407  01A4D3  00                 	db	0
  1408  01A4D4  00                 	db	0
  1409  01A4D5  00                 	db	0
  1410  01A4D6  00                 	db	0
  1411  01A4D7  00                 	db	0
  1412  01A4D8  00                 	db	0
  1413  01A4D9  00                 	db	0
  1414  01A4DA  00                 	db	0
  1415  01A4DB  00                 	db	0
  1416  01A4DC  00                 	db	0
  1417  01A4DD  00                 	db	0
  1418  01A4DE  00                 	db	0
  1419  01A4DF  00                 	db	0
  1420  01A4E0  00                 	db	0
  1421  01A4E1  00                 	db	0
  1422  01A4E2  00                 	db	0
  1423  01A4E3  00                 	db	0
  1424  01A4E4  00                 	db	0
  1425  01A4E5  00                 	db	0
  1426  01A4E6  00                 	db	0
  1427  01A4E7  00                 	db	0
  1428  01A4E8  00                 	db	0
  1429  01A4E9  00                 	db	0
  1430  01A4EA  00                 	db	0
  1431  01A4EB  00                 	db	0
  1432  01A4EC  00                 	db	0
  1433  01A4ED  00                 	db	0
  1434  01A4EE  00                 	db	0
  1435  01A4EF  00                 	db	0
  1436                           
  1437                           ;initializer for _C
  1438  01A4F0  0000               	dw	0
  1439  01A4F2  0000               	dw	0
  1440  01A4F4  0000               	dw	0
  1441  01A4F6  0000               	dw	0
  1442  01A4F8  0000               	dw	0
  1443  01A4FA  0000               	dw	0
  1444  01A4FC  0000               	dw	0
  1445  01A4FE  0000               	dw	0
  1446  01A500  0000               	dw	0
  1447  01A502  0000               	dw	0
  1448  01A504  0000               	dw	0
  1449  01A506  0000               	dw	0
  1450  01A508  0000               	dw	0
  1451  01A50A  0000               	dw	0
  1452  01A50C  0000               	dw	0
  1453  01A50E  0000               	dw	0
  1454  01A510  0000               	dw	0
  1455  01A512  0000               	dw	0
  1456  01A514  0000               	dw	0
  1457  01A516  0000               	dw	0
  1458  01A518  0000               	dw	0
  1459  01A51A  0000               	dw	0
  1460  01A51C  0000               	dw	0
  1461  01A51E  0000               	dw	0
  1462  01A520  0000               	dw	0
  1463  01A522  0000               	dw	0
  1464  01A524  0000               	dw	0
  1465  01A526  0000               	dw	0
  1466  01A528  0000               	dw	0
  1467  01A52A  0000               	dw	0
  1468  01A52C  0000               	dw	0
  1469  01A52E  0000               	dw	0
  1470  01A530  0000               	dw	0
  1471  01A532  0000               	dw	0
  1472  01A534  0000               	dw	0
  1473  01A536  0000               	dw	0
  1474  01A538  0000               	dw	0
  1475  01A53A  0000               	dw	0
  1476  01A53C  0000               	dw	0
  1477  01A53E  0000               	dw	0
  1478  01A540  0000               	dw	0
  1479  01A542  0000               	dw	0
  1480  01A544  0000               	dw	0
  1481  01A546  0000               	dw	0
  1482  01A548  0000               	dw	0
  1483  01A54A  0000               	dw	0
  1484  01A54C  0000               	dw	0
  1485  01A54E  0000               	dw	0
  1486  01A550  0000               	dw	0
  1487  01A552  0000               	dw	0
  1488  01A554  0000               	dw	0
  1489  01A556  0000               	dw	0
  1490  01A558  0000               	dw	0
  1491  01A55A  0000               	dw	0
  1492  01A55C  0000               	dw	0
  1493  01A55E  0000               	dw	0
  1494  01A560  0000               	dw	0
  1495  01A562  0000               	dw	0
  1496  01A564  0000               	dw	0
  1497  01A566  0000               	dw	0
  1498  01A568  0000               	dw	0
  1499  01A56A  0000               	dw	0
  1500  01A56C  0000               	dw	0
  1501  01A56E  0000               	dw	0
  1502  01A570  0000               	dw	0
  1503  01A572  0000               	dw	0
  1504  01A574  0000               	dw	0
  1505  01A576  0000               	dw	0
  1506  01A578  0000               	dw	0
  1507  01A57A  0000               	dw	0
  1508  01A57C  0000               	dw	0
  1509  01A57E  42FA               	dw	17146
  1510  01A580  0000               	dw	0
  1511  01A582  0000               	dw	0
  1512  01A584  0000               	dw	0
  1513  01A586  0000               	dw	0
  1514  01A588  0000               	dw	0
  1515  01A58A  0000               	dw	0
  1516  01A58C  0000               	dw	0
  1517  01A58E  0000               	dw	0
  1518  01A590  0000               	dw	0
  1519  01A592  0000               	dw	0
  1520  01A594  0000               	dw	0
  1521  01A596  0000               	dw	0
  1522  01A598  0000               	dw	0
  1523  01A59A  0000               	dw	0
  1524  01A59C  0000               	dw	0
  1525  01A59E  0000               	dw	0
  1526  01A5A0  0000               	dw	0
  1527  01A5A2  0000               	dw	0
  1528  01A5A4  0000               	dw	0
  1529  01A5A6  0000               	dw	0
  1530  01A5A8  00                 	db	0
  1531  01A5A9  01                 	db	1
  1532  01A5AA  0000               	dw	0
  1533  01A5AC  0000               	dw	0
  1534  01A5AE  0000               	dw	0
  1535  01A5B0  0000               	dw	0
  1536  01A5B2  0000               	dw	0
  1537  01A5B4  3F80               	dw	16256
  1538  01A5B6  0000               	dw	0
  1539  01A5B8  3F80               	dw	16256
  1540  01A5BA  0000               	dw	0
  1541  01A5BC  0000               	dw	0
  1542  01A5BE  0000               	dw	0
  1543  01A5C0  0000               	dw	0
  1544  01A5C2  0000               	dw	0
  1545  01A5C4  0000               	dw	0
  1546  01A5C6  0000               	dw	0
  1547  01A5C8  0000               	dw	0
  1548  01A5CA  0000               	dw	0
  1549  01A5CC  0000               	dw	0
  1550  01A5CE  00                 	db	0
  1551  01A5CF  00                 	db	0
  1552  01A5D0  00                 	db	0
  1553  01A5D1  00                 	db	0
  1554  01A5D2  00                 	db	0
  1555  01A5D3  00                 	db	0
  1556  01A5D4  00                 	db	0
  1557  01A5D5  00                 	db	0
  1558  01A5D6  00                 	db	0
  1559  01A5D7  00                 	db	0
  1560  01A5D8  00                 	db	0
  1561  01A5D9  00                 	db	0
  1562  01A5DA  00                 	db	0
  1563  01A5DB  00                 	db	0
  1564  01A5DC  00                 	db	0
  1565  01A5DD  00                 	db	0
  1566  01A5DE  00                 	db	0
  1567  01A5DF  00                 	db	0
  1568  01A5E0  00                 	db	0
  1569  01A5E1  00                 	db	0
  1570  01A5E2  00                 	db	0
  1571  01A5E3  00                 	db	0
  1572  01A5E4  00                 	db	0
  1573  01A5E5  00                 	db	0
  1574  01A5E6  00                 	db	0
  1575  01A5E7  00                 	db	0
  1576  01A5E8  00                 	db	0
  1577  01A5E9  00                 	db	0
  1578  01A5EA  00                 	db	0
  1579  01A5EB  00                 	db	0
  1580  01A5EC  00                 	db	0
  1581  01A5ED  00                 	db	0
  1582  01A5EE  00                 	db	0
  1583  01A5EF  00                 	db	0
  1584  01A5F0  00                 	db	0
  1585  01A5F1  00                 	db	0
  1586  01A5F2  00                 	db	0
  1587  01A5F3  00                 	db	0
  1588  01A5F4  00                 	db	0
  1589  01A5F5  00                 	db	0
  1590  01A5F6  00                 	db	0
  1591  01A5F7  00                 	db	0
  1592  01A5F8  00                 	db	0
  1593  01A5F9  00                 	db	0
  1594  01A5FA  00                 	db	0
  1595  01A5FB  00                 	db	0
  1596  01A5FC  00                 	db	0
  1597  01A5FD  00                 	db	0
  1598  01A5FE  00                 	db	0
  1599  01A5FF  00                 	db	0
  1600  01A600  00                 	db	0
  1601  01A601  00                 	db	0
  1602  01A602  00                 	db	0
  1603  01A603  00                 	db	0
  1604  01A604  00                 	db	0
  1605  01A605  00                 	db	0
  1606  01A606  00                 	db	0
  1607  01A607  00                 	db	0
  1608  01A608  00                 	db	0
  1609  01A609  00                 	db	0
  1610  01A60A  0000               	dw	0
  1611  01A60C  0000               	dw	0
  1612  01A60E  0000               	dw	0
  1613  01A610  0000               	dw	0
  1614  01A612  0000               	dw	0
  1615  01A614  0000               	dw	0
  1616  01A616  0000               	dw	0
  1617  01A618  0000               	dw	0
  1618  01A61A  0000               	dw	0
  1619  01A61C  0000               	dw	0
  1620  01A61E  01                 	db	1
  1621  01A61F  00                 	db	0
  1622  01A620  0000               	dw	0
  1623  01A622  0000               	dw	0
  1624  01A624  0000               	dw	0
  1625  01A626  0000               	dw	0
  1626  01A628  0000               	dw	0
  1627  01A62A  0000               	dw	0
  1628  01A62C  0000               	dw	0
  1629  01A62E  0000               	dw	0
  1630                           
  1631                           	psect	idataBANK1
  1632  0008AA                     __pidataBANK1:
  1633                           	opt callstack 0
  1634                           
  1635                           ;initializer for _R
  1636  0008AA  0000               	dw	0
  1637  0008AC  0000               	dw	0
  1638  0008AE  0000               	dw	0
  1639  0008B0  0000               	dw	0
  1640  0008B2  0000               	dw	0
  1641  0008B4  0000               	dw	0
  1642  0008B6  0000               	dw	0
  1643  0008B8  0000               	dw	0
  1644  0008BA  0000               	dw	0
  1645  0008BC  0000               	dw	0
  1646  0008BE  0000               	dw	0
  1647  0008C0  0000               	dw	0
  1648  0008C2  0000               	dw	0
  1649  0008C4  0000               	dw	0
  1650  0008C6  0000               	dw	0
  1651  0008C8  0000               	dw	0
  1652  0008CA  0000               	dw	0
  1653  0008CC  0000               	dw	0
  1654  0008CE  0000               	dw	0
  1655  0008D0  0F62               	dw	3938
  1656  0008D2  0FA4               	dw	4004
  1657  0008D4  89A0               	dw	35232
  1658  0008D6  3DB0               	dw	15792
  1659  0008D8  DEA4               	dw	56996
  1660  0008DA  3D13               	dw	15635
  1661  0008DC  00                 	db	0
  1662  0008DD  0000               	dw	0
  1663  0008DF  00                 	db	0
  1664  0008E0  00                 	db	0
  1665  0008E1  0000               	dw	0
  1666  0008E3  0000               	dw	0
  1667  0008E5  0000               	dw	0
  1668  0008E7  0000               	dw	0
  1669  0008E9  0000               	dw	0
  1670  0008EB  0000               	dw	0
  1671  0008ED  0000               	dw	0
  1672  0008EF  0000               	dw	0
  1673  0008F1  0000               	dw	0
  1674  0008F3  0000               	dw	0
  1675  0008F5  0000               	dw	0
  1676  0008F7  0000               	dw	0
  1677  0008F9  0000               	dw	0
  1678  0008FB  0000               	dw	0
  1679  0008FD  0000               	dw	0
  1680  0008FF  0000               	dw	0
  1681  000901  0000               	dw	0
  1682  000903  0000               	dw	0
  1683  000905  0000               	dw	0
  1684  000907  0000               	dw	0
  1685  000909  0000               	dw	0
  1686  00090B  0000               	dw	0
  1687  00090D  0000               	dw	0
  1688  00090F  0000               	dw	0
  1689  000911  0000               	dw	0
  1690  000913  0000               	dw	0
  1691  000915  0000               	dw	0
  1692  000917  0000               	dw	0
  1693  000919  0000               	dw	0
  1694  00091B  0000               	dw	0
  1695  00091D  0000               	dw	0
  1696  00091F  0000               	dw	0
  1697  000921  0000               	dw	0
  1698  000923  0000               	dw	0
  1699  000925  0000               	dw	0
  1700  000927  0000               	dw	0
  1701  000929  0000               	dw	0
  1702  00092B  0000               	dw	0
  1703  00092D  0000               	dw	0
  1704  00092F  0000               	dw	0
  1705  000931  0000               	dw	0
  1706  000933  0000               	dw	0
  1707  000935  0000               	dw	0
  1708  000937  0000               	dw	0
  1709  000939  0000               	dw	0
  1710  00093B  0000               	dw	0
  1711  00093D  0000               	dw	0
  1712  00093F  0000               	dw	0
  1713  000941  00                 	db	0
  1714  000942  1957               	dw	6487
  1715  000944  42                 	db	66
  1716                           
  1717                           ;initializer for _H
  1718  000945  00                 	db	0
  1719  000946  00                 	db	0
  1720  000947  01                 	db	1
  1721  000948  00                 	db	0
  1722  000949  01                 	db	1
  1723  00094A  00                 	db	0
  1724  00094B  01                 	db	1
  1725  00094C  00                 	db	0
  1726  00094D  00                 	db	0
  1727                           
  1728                           	psect	idataBANK2
  1729  00031C                     __pidataBANK2:
  1730                           	opt callstack 0
  1731                           
  1732                           ;initializer for stoa@F1166
  1733  00031C  28                 	db	40
  1734  00031D  6E                 	db	110
  1735  00031E  75                 	db	117
  1736  00031F  6C                 	db	108
  1737  000320  6C                 	db	108
  1738  000321  29                 	db	41
  1739  000322  00                 	db	0
  1740                           
  1741                           ;initializer for _V
  1742  000323  00                 	db	0
  1743  000324  00                 	db	0
  1744  000325  00                 	db	0
  1745  000326  00                 	db	0
  1746  000327  00                 	db	0
  1747  000328  00                 	db	0
  1748  000329  00                 	db	0
  1749  00032A  00                 	db	0
  1750  00032B  00                 	db	0
  1751  00032C  00                 	db	0
  1752  00032D  00                 	db	0
  1753  00032E  00                 	db	0
  1754  00032F  00                 	db	0
  1755  000330  00                 	db	0
  1756  000331  00                 	db	0
  1757  000332  00                 	db	0
  1758  000333  00                 	db	0
  1759  000334  00                 	db	0
  1760  000335  00                 	db	0
  1761  000336  00                 	db	0
  1762  000337  00                 	db	0
  1763  000338  00                 	db	0
  1764  000339  00                 	db	0
  1765  00033A  00                 	db	0
  1766  00033B  00                 	db	0
  1767  00033C  00                 	db	0
  1768  00033D  00                 	db	0
  1769  00033E  00                 	db	0
  1770  00033F  00                 	db	0
  1771  000340  00                 	db	0
  1772  000341  00                 	db	0
  1773  000342  00                 	db	0
  1774  000343  00                 	db	0
  1775  000344  00                 	db	0
  1776  000345  00                 	db	0
  1777  000346  00                 	db	0
  1778  000347  00                 	db	0
  1779  000348  00                 	db	0
  1780  000349  00                 	db	0
  1781  00034A  00                 	db	0
  1782  00034B  00                 	db	0
  1783  00034C  00                 	db	0
  1784  00034D  00                 	db	0
  1785  00034E  00                 	db	0
  1786  00034F  00                 	db	0
  1787  000350  00                 	db	0
  1788  000351  00                 	db	0
  1789  000352  00                 	db	0
  1790  000353  00                 	db	0
  1791  000354  00                 	db	0
  1792  000355  00                 	db	0
  1793  000356  00                 	db	0
  1794  000357  00                 	db	0
  1795  000358  00                 	db	0
  1796  000359  00                 	db	0
  1797  00035A  00                 	db	0
  1798  00035B  00                 	db	0
  1799  00035C  00                 	db	0
  1800  00035D  00                 	db	0
  1801  00035E  00                 	db	0
  1802  00035F  00                 	db	0
  1803  000360  00                 	db	0
  1804  000361  00                 	db	0
  1805  000362  00                 	db	0
  1806  000363  00                 	db	0
  1807  000364  00                 	db	0
  1808  000365  00                 	db	0
  1809  000366  00                 	db	0
  1810  000367  00                 	db	0
  1811  000368  00                 	db	0
  1812  000369  00                 	db	0
  1813  00036A  00                 	db	0
  1814  00036B  00                 	db	0
  1815  00036C  00                 	db	0
  1816  00036D  00                 	db	0
  1817  00036E  00                 	db	0
  1818  00036F  00                 	db	0
  1819  000370  00                 	db	0
  1820  000371  00                 	db	0
  1821  000372  00                 	db	0
  1822  000373  00                 	db	0
  1823  000374  00                 	db	0
  1824  000375  00                 	db	0
  1825  000376  00                 	db	0
  1826  000377  00                 	db	0
  1827  000378  00                 	db	0
  1828  000379  00                 	db	0
  1829  00037A  00                 	db	0
  1830  00037B  00                 	db	0
  1831  00037C  00                 	db	0
  1832  00037D  00                 	db	0
  1833  00037E  00                 	db	0
  1834  00037F  00                 	db	0
  1835  000380  00                 	db	0
  1836  000381  00                 	db	0
  1837  000382  00                 	db	0
  1838  000383  00                 	db	0
  1839  000384  00                 	db	0
  1840  000385  00                 	db	0
  1841  000386  00                 	db	0
  1842  000387  00                 	db	0
  1843  000388  00                 	db	0
  1844  000389  00                 	db	0
  1845  00038A  00                 	db	0
  1846  00038B  00                 	db	0
  1847  00038C  00                 	db	0
  1848  00038D  00                 	db	0
  1849  00038E  00                 	db	0
  1850  00038F  00                 	db	0
  1851  000390  00                 	db	0
  1852  000391  00                 	db	0
  1853  000392  00                 	db	0
  1854  000393  00                 	db	0
  1855  000394  00                 	db	0
  1856  000395  00                 	db	0
  1857  000396  00                 	db	0
  1858  000397  00                 	db	0
  1859  000398  00                 	db	0
  1860  000399  00                 	db	0
  1861  00039A  00                 	db	0
  1862  00039B  00                 	db	0
  1863  00039C  00                 	db	0
  1864  00039D  00                 	db	0
  1865  00039E  00                 	db	0
  1866  00039F  00                 	db	0
  1867  0003A0  00                 	db	0
  1868  0003A1  00                 	db	0
  1869  0003A2  00                 	db	0
  1870  0003A3  00                 	db	0
  1871  0003A4  879E               	dw	34718
  1872  0003A6  5E4C               	dw	24140
  1873  0003A8  00                 	db	0
  1874  0003A9  00                 	db	0
  1875  0003AA  00                 	db	0
  1876  0003AB  00                 	db	0
  1877  0003AC  00                 	db	0
  1878  0003AD  00                 	db	0
  1879  0003AE  00                 	db	0
  1880  0003AF  0000               	dw	0
  1881  0003B1  0000               	dw	0
  1882  0003B3  0000               	dw	0
  1883  0003B5  0000               	dw	0
  1884  0003B7  0000               	dw	0
  1885  0003B9  0000               	dw	0
  1886  0003BB  00                 	db	0
  1887  0003BC  00                 	db	0
  1888  0003BD  00                 	db	0
  1889  0003BE  00                 	db	0
  1890  0003BF  00                 	db	0
  1891  0003C0  00                 	db	0
  1892  0003C1  00                 	db	0
  1893  0003C2  00                 	db	0
  1894  0003C3  00                 	db	0
  1895  0003C4  00                 	db	0
  1896  0003C5  00                 	db	0
  1897  0003C6  0000               	dw	0
  1898  0003C8  0000               	dw	0
  1899  0003CA  2D                 	db	45
  1900  0003CB  00                 	db	0
  1901  0003CC  00                 	db	0
  1902  0003CD  00                 	db	0
  1903  0003CE  00                 	db	0
  1904  0003CF  00                 	db	0
  1905  0003D0  0000               	dw	0
  1906  0003D2  0000               	dw	0
  1907  0003D4  0000               	dw	0
  1908  0003D6  0000               	dw	0
  1909                           
  1910                           	psect	mediumconst
  1911  00F7AA                     __pmediumconst:
  1912                           	opt callstack 0
  1913  00F7AA  00                 	db	0
  1914  00F7AB                     _BVSOC_TABLE:
  1915                           	opt callstack 0
  1916  00F7AB  59D8               	dw	23000
  1917  00F7AD  0000               	dw	0
  1918  00F7AF  0005               	dw	5
  1919  00F7B1  0000               	dw	0
  1920  00F7B3  5B68               	dw	23400
  1921  00F7B5  0000               	dw	0
  1922  00F7B7  000A               	dw	10
  1923  00F7B9  0000               	dw	0
  1924  00F7BB  5C30               	dw	23600
  1925  00F7BD  0000               	dw	0
  1926  00F7BF  0014               	dw	20
  1927  00F7C1  0000               	dw	0
  1928  00F7C3  5E38               	dw	24120
  1929  00F7C5  0000               	dw	0
  1930  00F7C7  0019               	dw	25
  1931  00F7C9  0000               	dw	0
  1932  00F7CB  5E88               	dw	24200
  1933  00F7CD  0000               	dw	0
  1934  00F7CF  001E               	dw	30
  1935  00F7D1  0000               	dw	0
  1936  00F7D3  5F78               	dw	24440
  1937  00F7D5  0000               	dw	0
  1938  00F7D7  0028               	dw	40
  1939  00F7D9  0000               	dw	0
  1940  00F7DB  5FDC               	dw	24540
  1941  00F7DD  0000               	dw	0
  1942  00F7DF  002D               	dw	45
  1943  00F7E1  0000               	dw	0
  1944  00F7E3  6018               	dw	24600
  1945  00F7E5  0000               	dw	0
  1946  00F7E7  0032               	dw	50
  1947  00F7E9  0000               	dw	0
  1948  00F7EB  6046               	dw	24646
  1949  00F7ED  0000               	dw	0
  1950  00F7EF  0035               	dw	53
  1951  00F7F1  0000               	dw	0
  1952  00F7F3  607C               	dw	24700
  1953  00F7F5  0000               	dw	0
  1954  00F7F7  0037               	dw	55
  1955  00F7F9  0000               	dw	0
  1956  00F7FB  60AE               	dw	24750
  1957  00F7FD  0000               	dw	0
  1958  00F7FF  0039               	dw	57
  1959  00F801  0000               	dw	0
  1960  00F803  60E0               	dw	24800
  1961  00F805  0000               	dw	0
  1962  00F807  003C               	dw	60
  1963  00F809  0000               	dw	0
  1964  00F80B  6112               	dw	24850
  1965  00F80D  0000               	dw	0
  1966  00F80F  003F               	dw	63
  1967  00F811  0000               	dw	0
  1968  00F813  615D               	dw	24925
  1969  00F815  0000               	dw	0
  1970  00F817  0043               	dw	67
  1971  00F819  0000               	dw	0
  1972  00F81B  61A8               	dw	25000
  1973  00F81D  0000               	dw	0
  1974  00F81F  0046               	dw	70
  1975  00F821  0000               	dw	0
  1976  00F823  61BC               	dw	25020
  1977  00F825  0000               	dw	0
  1978  00F827  0048               	dw	72
  1979  00F829  0000               	dw	0
  1980  00F82B  61D0               	dw	25040
  1981  00F82D  0000               	dw	0
  1982  00F82F  004B               	dw	75
  1983  00F831  0000               	dw	0
  1984  00F833  61DA               	dw	25050
  1985  00F835  0000               	dw	0
  1986  00F837  0050               	dw	80
  1987  00F839  0000               	dw	0
  1988  00F83B  61E4               	dw	25060
  1989  00F83D  0000               	dw	0
  1990  00F83F  0055               	dw	85
  1991  00F841  0000               	dw	0
  1992  00F843  61F8               	dw	25080
  1993  00F845  0000               	dw	0
  1994  00F847  005A               	dw	90
  1995  00F849  0000               	dw	0
  1996  00F84B  6208               	dw	25096
  1997  00F84D  0000               	dw	0
  1998  00F84F  005C               	dw	92
  1999  00F851  0000               	dw	0
  2000  00F853  6222               	dw	25122
  2001  00F855  0000               	dw	0
  2002  00F857  005D               	dw	93
  2003  00F859  0000               	dw	0
  2004  00F85B  6234               	dw	25140
  2005  00F85D  0000               	dw	0
  2006  00F85F  005F               	dw	95
  2007  00F861  0000               	dw	0
  2008  00F863  6248               	dw	25160
  2009  00F865  0000               	dw	0
  2010  00F867  0061               	dw	97
  2011  00F869  0000               	dw	0
  2012  00F86B  625C               	dw	25180
  2013  00F86D  0000               	dw	0
  2014  00F86F  0064               	dw	100
  2015  00F871  0000               	dw	0
  2016  00F873  6784               	dw	26500
  2017  00F875  0000               	dw	0
  2018  00F877  0062               	dw	98
  2019  00F879  0000               	dw	0
  2020  00F87B                     __end_of_BVSOC_TABLE:
  2021                           	opt callstack 0
  2022  00F87B                     ___month_to_secs@secs_through_month:
  2023                           	opt callstack 0
  2024  00F87B  0000               	dw	0
  2025  00F87D  0000               	dw	0
  2026  00F87F  DE80               	dw	56960
  2027  00F881  0028               	dw	40
  2028  00F883  C880               	dw	51328
  2029  00F885  004D               	dw	77
  2030  00F887  A700               	dw	42752
  2031  00F889  0076               	dw	118
  2032  00F88B  3400               	dw	13312
  2033  00F88D  009E               	dw	158
  2034  00F88F  1280               	dw	4736
  2035  00F891  00C7               	dw	199
  2036  00F893  9F80               	dw	40832
  2037  00F895  00EE               	dw	238
  2038  00F897  7E00               	dw	32256
  2039  00F899  0117               	dw	279
  2040  00F89B  5C80               	dw	23680
  2041  00F89D  0140               	dw	320
  2042  00F89F  E980               	dw	59776
  2043  00F8A1  0167               	dw	359
  2044  00F8A3  C800               	dw	51200
  2045  00F8A5  0190               	dw	400
  2046  00F8A7  5500               	dw	21760
  2047  00F8A9  01B8               	dw	440
  2048  00F8AB                     __end_of___month_to_secs@secs_through_month:
  2049                           	opt callstack 0
  2050  00F8AB                     ___secs_to_tm@days_in_month:
  2051                           	opt callstack 0
  2052  00F8AB  1F                 	db	31
  2053  00F8AC  1E                 	db	30
  2054  00F8AD  1F                 	db	31
  2055  00F8AE  1E                 	db	30
  2056  00F8AF  1F                 	db	31
  2057  00F8B0  1F                 	db	31
  2058  00F8B1  1E                 	db	30
  2059  00F8B2  1F                 	db	31
  2060  00F8B3  1E                 	db	30
  2061  00F8B4  1F                 	db	31
  2062  00F8B5  1F                 	db	31
  2063  00F8B6  1D                 	db	29
  2064  00F8B7                     __end_of___secs_to_tm@days_in_month:
  2065                           	opt callstack 0
  2066  00F8B7                     _T:
  2067                           	opt callstack 0
  2068  00F8B7  63                 	db	99
  2069  00F8B8  6F                 	db	111
  2070  00F8B9  6D                 	db	109
  2071  00F8BA  6D                 	db	109
  2072  00F8BB  61                 	db	97
  2073  00F8BC  6E                 	db	110
  2074  00F8BD  64                 	db	100
  2075  00F8BE  73                 	db	115
  2076  00F8BF  20                 	db	32
  2077  00F8C0  31                 	db	49
  2078  00F8C1  00                 	db	0
  2079  00F8C2  00                 	db	0
  2080  00F8C3  00                 	db	0
  2081  00F8C4  00                 	db	0
  2082  00F8C5  00                 	db	0
  2083  00F8C6  00                 	db	0
  2084  00F8C7  00                 	db	0
  2085  00F8C8  00                 	db	0
  2086  00F8C9  00                 	db	0
  2087  00F8CA  00                 	db	0
  2088  00F8CB  00                 	db	0
  2089  00F8CC  00                 	db	0
  2090  00F8CD  64                 	db	100
  2091  00F8CE  69                 	db	105
  2092  00F8CF  73                 	db	115
  2093  00F8D0  70                 	db	112
  2094  00F8D1  6C                 	db	108
  2095  00F8D2  61                 	db	97
  2096  00F8D3  79                 	db	121
  2097  00F8D4  73                 	db	115
  2098  00F8D5  20                 	db	32
  2099  00F8D6  31                 	db	49
  2100  00F8D7  00                 	db	0
  2101  00F8D8  00                 	db	0
  2102  00F8D9  00                 	db	0
  2103  00F8DA  00                 	db	0
  2104  00F8DB  00                 	db	0
  2105  00F8DC  00                 	db	0
  2106  00F8DD  00                 	db	0
  2107  00F8DE  00                 	db	0
  2108  00F8DF  00                 	db	0
  2109  00F8E0  00                 	db	0
  2110  00F8E1  00                 	db	0
  2111  00F8E2  00                 	db	0
  2112  00F8E3  63                 	db	99
  2113  00F8E4  6F                 	db	111
  2114  00F8E5  6D                 	db	109
  2115  00F8E6  6D                 	db	109
  2116  00F8E7  61                 	db	97
  2117  00F8E8  6E                 	db	110
  2118  00F8E9  64                 	db	100
  2119  00F8EA  73                 	db	115
  2120  00F8EB  20                 	db	32
  2121  00F8EC  32                 	db	50
  2122  00F8ED  00                 	db	0
  2123  00F8EE  00                 	db	0
  2124  00F8EF  00                 	db	0
  2125  00F8F0  00                 	db	0
  2126  00F8F1  00                 	db	0
  2127  00F8F2  00                 	db	0
  2128  00F8F3  00                 	db	0
  2129  00F8F4  00                 	db	0
  2130  00F8F5  00                 	db	0
  2131  00F8F6  00                 	db	0
  2132  00F8F7  00                 	db	0
  2133  00F8F8  00                 	db	0
  2134  00F8F9  64                 	db	100
  2135  00F8FA  69                 	db	105
  2136  00F8FB  73                 	db	115
  2137  00F8FC  70                 	db	112
  2138  00F8FD  6C                 	db	108
  2139  00F8FE  61                 	db	97
  2140  00F8FF  79                 	db	121
  2141  00F900  73                 	db	115
  2142  00F901  20                 	db	32
  2143  00F902  32                 	db	50
  2144  00F903  00                 	db	0
  2145  00F904  00                 	db	0
  2146  00F905  00                 	db	0
  2147  00F906  00                 	db	0
  2148  00F907  00                 	db	0
  2149  00F908  00                 	db	0
  2150  00F909  00                 	db	0
  2151  00F90A  00                 	db	0
  2152  00F90B  00                 	db	0
  2153  00F90C  00                 	db	0
  2154  00F90D  00                 	db	0
  2155  00F90E  00                 	db	0
  2156  00F90F  63                 	db	99
  2157  00F910  6F                 	db	111
  2158  00F911  6D                 	db	109
  2159  00F912  6D                 	db	109
  2160  00F913  61                 	db	97
  2161  00F914  6E                 	db	110
  2162  00F915  64                 	db	100
  2163  00F916  73                 	db	115
  2164  00F917  20                 	db	32
  2165  00F918  33                 	db	51
  2166  00F919  00                 	db	0
  2167  00F91A  00                 	db	0
  2168  00F91B  00                 	db	0
  2169  00F91C  00                 	db	0
  2170  00F91D  00                 	db	0
  2171  00F91E  00                 	db	0
  2172  00F91F  00                 	db	0
  2173  00F920  00                 	db	0
  2174  00F921  00                 	db	0
  2175  00F922  00                 	db	0
  2176  00F923  00                 	db	0
  2177  00F924  00                 	db	0
  2178  00F925  64                 	db	100
  2179  00F926  69                 	db	105
  2180  00F927  73                 	db	115
  2181  00F928  70                 	db	112
  2182  00F929  6C                 	db	108
  2183  00F92A  61                 	db	97
  2184  00F92B  79                 	db	121
  2185  00F92C  73                 	db	115
  2186  00F92D  20                 	db	32
  2187  00F92E  33                 	db	51
  2188  00F92F  00                 	db	0
  2189  00F930  00                 	db	0
  2190  00F931  00                 	db	0
  2191  00F932  00                 	db	0
  2192  00F933  00                 	db	0
  2193  00F934  00                 	db	0
  2194  00F935  00                 	db	0
  2195  00F936  00                 	db	0
  2196  00F937  00                 	db	0
  2197  00F938  00                 	db	0
  2198  00F939  00                 	db	0
  2199  00F93A  00                 	db	0
  2200  00F93B  63                 	db	99
  2201  00F93C  6F                 	db	111
  2202  00F93D  6D                 	db	109
  2203  00F93E  6D                 	db	109
  2204  00F93F  61                 	db	97
  2205  00F940  6E                 	db	110
  2206  00F941  64                 	db	100
  2207  00F942  73                 	db	115
  2208  00F943  20                 	db	32
  2209  00F944  34                 	db	52
  2210  00F945  00                 	db	0
  2211  00F946  00                 	db	0
  2212  00F947  00                 	db	0
  2213  00F948  00                 	db	0
  2214  00F949  00                 	db	0
  2215  00F94A  00                 	db	0
  2216  00F94B  00                 	db	0
  2217  00F94C  00                 	db	0
  2218  00F94D  00                 	db	0
  2219  00F94E  00                 	db	0
  2220  00F94F  00                 	db	0
  2221  00F950  00                 	db	0
  2222  00F951  64                 	db	100
  2223  00F952  69                 	db	105
  2224  00F953  73                 	db	115
  2225  00F954  70                 	db	112
  2226  00F955  6C                 	db	108
  2227  00F956  61                 	db	97
  2228  00F957  79                 	db	121
  2229  00F958  73                 	db	115
  2230  00F959  20                 	db	32
  2231  00F95A  34                 	db	52
  2232  00F95B  00                 	db	0
  2233  00F95C  00                 	db	0
  2234  00F95D  00                 	db	0
  2235  00F95E  00                 	db	0
  2236  00F95F  00                 	db	0
  2237  00F960  00                 	db	0
  2238  00F961  00                 	db	0
  2239  00F962  00                 	db	0
  2240  00F963  00                 	db	0
  2241  00F964  00                 	db	0
  2242  00F965  00                 	db	0
  2243  00F966  00                 	db	0
  2244  00F967                     __end_of_T:
  2245                           	opt callstack 0
  2246  00F967                     _spin:
  2247                           	opt callstack 0
  2248  00F967  7C                 	db	124
  2249  00F968  7C                 	db	124
  2250  00F969  2F                 	db	47
  2251  00F96A  2F                 	db	47
  2252  00F96B  2D                 	db	45
  2253  00F96C  2D                 	db	45
  2254  00F96D  00                 	db	0
  2255  00F96E  00                 	db	0
  2256  00F96F  00                 	db	0
  2257  00F970  00                 	db	0
  2258  00F971  00                 	db	0
  2259  00F972  00                 	db	0
  2260  00F973  00                 	db	0
  2261  00F974  00                 	db	0
  2262  00F975  00                 	db	0
  2263  00F976  00                 	db	0
  2264  00F977  00                 	db	0
  2265  00F978  00                 	db	0
  2266  00F979  00                 	db	0
  2267  00F97A  00                 	db	0
  2268  00F97B  7C                 	db	124
  2269  00F97C  7C                 	db	124
  2270  00F97D  2F                 	db	47
  2271  00F97E  2F                 	db	47
  2272  00F97F  2D                 	db	45
  2273  00F980  2D                 	db	45
  2274  00F981  5C                 	db	92
  2275  00F982  5C                 	db	92
  2276  00F983  00                 	db	0
  2277  00F984  00                 	db	0
  2278  00F985  00                 	db	0
  2279  00F986  00                 	db	0
  2280  00F987  00                 	db	0
  2281  00F988  00                 	db	0
  2282  00F989  00                 	db	0
  2283  00F98A  00                 	db	0
  2284  00F98B  00                 	db	0
  2285  00F98C  00                 	db	0
  2286  00F98D  00                 	db	0
  2287  00F98E  00                 	db	0
  2288  00F98F  4F                 	db	79
  2289  00F990  4F                 	db	79
  2290  00F991  4F                 	db	79
  2291  00F992  4F                 	db	79
  2292  00F993  4F                 	db	79
  2293  00F994  4F                 	db	79
  2294  00F995  2D                 	db	45
  2295  00F996  2D                 	db	45
  2296  00F997  5F                 	db	95
  2297  00F998  5F                 	db	95
  2298  00F999  2D                 	db	45
  2299  00F99A  00                 	db	0
  2300  00F99B  00                 	db	0
  2301  00F99C  00                 	db	0
  2302  00F99D  00                 	db	0
  2303  00F99E  00                 	db	0
  2304  00F99F  00                 	db	0
  2305  00F9A0  00                 	db	0
  2306  00F9A1  00                 	db	0
  2307  00F9A2  00                 	db	0
  2308  00F9A3  76                 	db	118
  2309  00F9A4  76                 	db	118
  2310  00F9A5  3C                 	db	60
  2311  00F9A6  3C                 	db	60
  2312  00F9A7  5E                 	db	94
  2313  00F9A8  5E                 	db	94
  2314  00F9A9  3E                 	db	62
  2315  00F9AA  3E                 	db	62
  2316  00F9AB  00                 	db	0
  2317  00F9AC  00                 	db	0
  2318  00F9AD  00                 	db	0
  2319  00F9AE  00                 	db	0
  2320  00F9AF  00                 	db	0
  2321  00F9B0  00                 	db	0
  2322  00F9B1  00                 	db	0
  2323  00F9B2  00                 	db	0
  2324  00F9B3  00                 	db	0
  2325  00F9B4  00                 	db	0
  2326  00F9B5  00                 	db	0
  2327  00F9B6  00                 	db	0
  2328  00F9B7  2E                 	db	46
  2329  00F9B8  2E                 	db	46
  2330  00F9B9  2A                 	db	42
  2331  00F9BA  2A                 	db	42
  2332  00F9BB  78                 	db	120
  2333  00F9BC  23                 	db	35
  2334  00F9BD  78                 	db	120
  2335  00F9BE  23                 	db	35
  2336  00F9BF  58                 	db	88
  2337  00F9C0  58                 	db	88
  2338  00F9C1  7C                 	db	124
  2339  00F9C2  7C                 	db	124
  2340  00F9C3  2D                 	db	45
  2341  00F9C4  2D                 	db	45
  2342  00F9C5  00                 	db	0
  2343  00F9C6  00                 	db	0
  2344  00F9C7  00                 	db	0
  2345  00F9C8  00                 	db	0
  2346  00F9C9  00                 	db	0
  2347  00F9CA  00                 	db	0
  2348  00F9CB  2E                 	db	46
  2349  00F9CC  2E                 	db	46
  2350  00F9CD  6F                 	db	111
  2351  00F9CE  6F                 	db	111
  2352  00F9CF  4F                 	db	79
  2353  00F9D0  4F                 	db	79
  2354  00F9D1  6F                 	db	111
  2355  00F9D2  6F                 	db	111
  2356  00F9D3  00                 	db	0
  2357  00F9D4  00                 	db	0
  2358  00F9D5  00                 	db	0
  2359  00F9D6  00                 	db	0
  2360  00F9D7  00                 	db	0
  2361  00F9D8  00                 	db	0
  2362  00F9D9  00                 	db	0
  2363  00F9DA  00                 	db	0
  2364  00F9DB  00                 	db	0
  2365  00F9DC  00                 	db	0
  2366  00F9DD  00                 	db	0
  2367  00F9DE  00                 	db	0
  2368  00F9DF                     __end_of_spin:
  2369                           	opt callstack 0
  2370  00F9DF  0000               	dw	0
  2371  00F9E1  3F80               	dw	16256
  2372  00F9E3  0000               	dw	0
  2373  00F9E5  3FC0               	dw	16320
  2374  00F9E7                     __end_of_bp:
  2375                           	opt callstack 0
  2376  00F9E7                     ___gmt:
  2377                           	opt callstack 0
  2378  00F9E7  47                 	db	71
  2379  00F9E8  4D                 	db	77
  2380  00F9E9  54                 	db	84
  2381  00F9EA  00                 	db	0
  2382  00F9EB                     __end_of___gmt:
  2383                           	opt callstack 0
  2384  00F9EB  AA00               	dw	43520
  2385  00F9ED  3FB8               	dw	16312
  2386  00F9EF                     __end_of_ivln2_h:
  2387                           	opt callstack 0
  2388  00F9EF  23C6               	dw	9158
  2389  00F9F1  B8F6               	dw	47350
  2390  00F9F3                     __end_of_cp_l:
  2391                           	opt callstack 0
  2392  00F9F3  4000               	dw	16384
  2393  00F9F5  3F76               	dw	16246
  2394  00F9F7                     __end_of_cp_h:
  2395                           	opt callstack 0
  2396  0000                     _IVTADL	set	14493
  2397  0000                     _IVTADH	set	14494
  2398  0000                     _IVTADU	set	14495
  2399  0000                     _CRCDATH	set	14689
  2400  0000                     _CRCDATL	set	14688
  2401  0000                     _CRCCON0bits	set	14696
  2402  0000                     _CRCCON1bits	set	14697
  2403  0000                     _CRCXORL	set	14694
  2404  0000                     _CRCXORH	set	14695
  2405  0000                     _SCANTRIG	set	14717
  2406  0000                     _SCANHADRL	set	14713
  2407  0000                     _SCANHADRH	set	14714
  2408  0000                     _SCANHADRU	set	14715
  2409  0000                     _SCANLADRL	set	14710
  2410  0000                     _SCANLADRH	set	14711
  2411  0000                     _SCANLADRU	set	14712
  2412  0000                     _SCANCON0	set	14716
  2413  0000                     _CRCACCH	set	14691
  2414  0000                     _CRCACCL	set	14690
  2415  0000                     _CRCCON1	set	14697
  2416  0000                     _CRCCON0	set	14696
  2417  0000                     _PIR6bits	set	14758
  2418  0000                     _PIR4bits	set	14756
  2419  0000                     _PIE8bits	set	14744
  2420  0000                     _PIR8bits	set	14760
  2421  0000                     _PIR0bits	set	14752
  2422  0000                     _NVMCON2	set	14822
  2423  0000                     _NVMDAT	set	14819
  2424  0000                     _NVMADRL	set	14816
  2425  0000                     _NVMADRH	set	14817
  2426  0000                     _NVMCON1bits	set	14821
  2427  0000                     _SCANPR	set	14839
  2428  0000                     _DMA2PR	set	14836
  2429  0000                     _DMA1PR	set	14835
  2430  0000                     _MAINPR	set	14834
  2431  0000                     _ISRPR	set	14833
  2432  0000                     _PIE2bits	set	14738
  2433  0000                     _PIR2bits	set	14754
  2434  0000                     _PIE9bits	set	14745
  2435  0000                     _PIR9bits	set	14761
  2436  0000                     _PIE6bits	set	14742
  2437  0000                     _PIE3bits	set	14739
  2438  0000                     _PMD7	set	14791
  2439  0000                     _PMD6	set	14790
  2440  0000                     _PMD5	set	14789
  2441  0000                     _PMD4	set	14788
  2442  0000                     _PMD3	set	14787
  2443  0000                     _PMD2	set	14786
  2444  0000                     _PMD1	set	14785
  2445  0000                     _PMD0	set	14784
  2446  0000                     _OSCTUNE	set	14814
  2447  0000                     _OSCFRQ	set	14815
  2448  0000                     _OSCEN	set	14813
  2449  0000                     _OSCCON3	set	14811
  2450  0000                     _OSCCON1	set	14809
  2451  0000                     _IPR8bits	set	14728
  2452  0000                     _IPR9bits	set	14729
  2453  0000                     _IPR5bits	set	14725
  2454  0000                     _IPR1bits	set	14721
  2455  0000                     _IPR3bits	set	14723
  2456  0000                     _IPR6bits	set	14726
  2457  0000                     _IPR2bits	set	14722
  2458  0000                     _PIE5bits	set	14741
  2459  0000                     _PIE1bits	set	14737
  2460  0000                     _PIR5bits	set	14757
  2461  0000                     _PIR1bits	set	14753
  2462  0000                     _PLLR	set	118496
  2463  0000                     _SPI1SDIPPS	set	15071
  2464  0000                     _U1RXPPS	set	15077
  2465  0000                     _RC6PPS	set	14870
  2466  0000                     _RC5PPS	set	14869
  2467  0000                     _INT1PPS	set	15041
  2468  0000                     _RD1PPS	set	14873
  2469  0000                     _INT0PPS	set	15040
  2470  0000                     _RC3PPS	set	14867
  2471  0000                     _RB6PPS	set	14862
  2472  0000                     _SPI1SCKPPS	set	15070
  2473  0000                     _U2RXPPS	set	15080
  2474  0000                     _SLRCONF	set	14995
  2475  0000                     _SLRCONE	set	14979
  2476  0000                     _SLRCOND	set	14963
  2477  0000                     _SLRCONC	set	14947
  2478  0000                     _SLRCONB	set	14931
  2479  0000                     _SLRCONA	set	14915
  2480  0000                     _ODCOND	set	14962
  2481  0000                     _ODCONC	set	14946
  2482  0000                     _ODCONB	set	14930
  2483  0000                     _ODCONA	set	14914
  2484  0000                     _ODCONF	set	14994
  2485  0000                     _ODCONE	set	14978
  2486  0000                     _WPUC	set	14945
  2487  0000                     _WPUA	set	14913
  2488  0000                     _WPUB	set	14929
  2489  0000                     _WPUE	set	14977
  2490  0000                     _WPUF	set	14993
  2491  0000                     _WPUD	set	14961
  2492  0000                     _ANSELA	set	14912
  2493  0000                     _ANSELF	set	14992
  2494  0000                     _ANSELE	set	14976
  2495  0000                     _ANSELB	set	14928
  2496  0000                     _ANSELC	set	14944
  2497  0000                     _ANSELD	set	14960
  2498  0000                     _DMA2SSA	set	15321
  2499  0000                     _DMA1SSA	set	15353
  2500  0000                     _DMA2DSZ	set	15310
  2501  0000                     _DMA2SSZ	set	15319
  2502  0000                     _DMA2DSA	set	15312
  2503  0000                     _DMA1DSZ	set	15342
  2504  0000                     _DMA1SSZ	set	15351
  2505  0000                     _DMA1DSA	set	15344
  2506  0000                     _DMA2CON0bits	set	15324
  2507  0000                     _DMA2CON1bits	set	15325
  2508  0000                     _DMA1CON0bits	set	15356
  2509  0000                     _DMA1CON1bits	set	15357
  2510  0000                     _DMA2CON0	set	15324
  2511  0000                     _DMA2AIRQ	set	15326
  2512  0000                     _DMA2SIRQ	set	15327
  2513  0000                     _DMA2CON1	set	15325
  2514  0000                     _DMA1CON0	set	15356
  2515  0000                     _DMA1AIRQ	set	15358
  2516  0000                     _DMA1SIRQ	set	15359
  2517  0000                     _DMA1CON1	set	15357
  2518  0000                     _CLKRCON	set	15589
  2519  0000                     _CLKRCLK	set	15590
  2520  0000                     _SPI1CON1bits	set	15637
  2521  0000                     _SPI1STATUSbits	set	15639
  2522  0000                     _SPI1INTFbits	set	15642
  2523  0000                     _SPI1CON0bits	set	15636
  2524  0000                     _SPI1RXB	set	15632
  2525  0000                     _SPI1TXB	set	15633
  2526  0000                     _SPI1TCNTL	set	15634
  2527  0000                     _SPI1CON0	set	15636
  2528  0000                     _SPI1CLK	set	15644
  2529  0000                     _SPI1BAUD	set	15641
  2530  0000                     _SPI1CON2	set	15638
  2531  0000                     _SPI1CON1	set	15637
  2532  0000                     _U2RXB	set	15824
  2533  0000                     _U2TXB	set	15826
  2534  0000                     _U2ERRIE	set	15842
  2535  0000                     _U2ERRIR	set	15841
  2536  0000                     _U2UIR	set	15840
  2537  0000                     _U2FIFO	set	15839
  2538  0000                     _U2BRGH	set	15838
  2539  0000                     _U2BRGL	set	15837
  2540  0000                     _U2CON2	set	15836
  2541  0000                     _U2CON1	set	15835
  2542  0000                     _U2CON0	set	15834
  2543  0000                     _U2P3L	set	15832
  2544  0000                     _U2P2L	set	15830
  2545  0000                     _U2P1L	set	15828
  2546  0000                     _U1RXB	set	15848
  2547  0000                     _U1ERRIE	set	15866
  2548  0000                     _U1ERRIR	set	15865
  2549  0000                     _U1UIR	set	15864
  2550  0000                     _U1FIFO	set	15863
  2551  0000                     _U1BRGH	set	15862
  2552  0000                     _U1BRGL	set	15861
  2553  0000                     _U1CON2	set	15860
  2554  0000                     _U1CON1	set	15859
  2555  0000                     _U1CON0	set	15858
  2556  0000                     _U1P3H	set	15857
  2557  0000                     _U1P3L	set	15856
  2558  0000                     _U1P2H	set	15855
  2559  0000                     _U1P2L	set	15854
  2560  0000                     _U1P1H	set	15853
  2561  0000                     _U1P1L	set	15852
  2562  0000                     _FVRCON	set	16065
  2563  0000                     _ADFLTRL	set	16102
  2564  0000                     _ADFLTRH	set	16103
  2565  0000                     _ADCON0bits	set	16120
  2566  0000                     _ADCON0	set	16120
  2567  0000                     _ADCLK	set	16127
  2568  0000                     _ADACT	set	16126
  2569  0000                     _ADREF	set	16125
  2570  0000                     _ADSTAT	set	16124
  2571  0000                     _ADCON3	set	16123
  2572  0000                     _ADCON2	set	16122
  2573  0000                     _ADCON1	set	16121
  2574  0000                     _ADPREH	set	16119
  2575  0000                     _ADPREL	set	16118
  2576  0000                     _ADCAP	set	16117
  2577  0000                     _ADACQH	set	16116
  2578  0000                     _ADACQL	set	16115
  2579  0000                     _ADPCH	set	16113
  2580  0000                     _ADRPT	set	16108
  2581  0000                     _ADACCU	set	16106
  2582  0000                     _ADSTPTH	set	16101
  2583  0000                     _ADSTPTL	set	16100
  2584  0000                     _ADUTHH	set	16097
  2585  0000                     _ADUTHL	set	16096
  2586  0000                     _ADLTHH	set	16095
  2587  0000                     _ADLTHL	set	16094
  2588  0000                     _CCPTMRS1bits	set	16223
  2589  0000                     _PORTDbits	set	16333
  2590  0000                     _PORTFbits	set	16335
  2591  0000                     _LATFbits	set	16319
  2592  0000                     _LATCbits	set	16316
  2593  0000                     _LATDbits	set	16317
  2594  0000                     _PORTBbits	set	16331
  2595  0000                     _T3CONbits	set	16294
  2596  0000                     _T3CON	set	16294
  2597  0000                     _TMR3L	set	16292
  2598  0000                     _TMR3H	set	16293
  2599  0000                     _T3CLK	set	16297
  2600  0000                     _T3GATE	set	16296
  2601  0000                     _T3GCON	set	16295
  2602  0000                     _T2CON	set	16300
  2603  0000                     _T2TMR	set	16298
  2604  0000                     _T2PR	set	16299
  2605  0000                     _T2RST	set	16303
  2606  0000                     _T2HLT	set	16301
  2607  0000                     _T2CLKCON	set	16302
  2608  0000                     _PWM8DCL	set	16224
  2609  0000                     _PWM8DCH	set	16225
  2610  0000                     _PWM8CON	set	16226
  2611  0000                     _LATEbits	set	16318
  2612  0000                     _T5CONbits	set	16282
  2613  0000                     _T5CON	set	16282
  2614  0000                     _TMR5L	set	16280
  2615  0000                     _TMR5H	set	16281
  2616  0000                     _T5CLK	set	16285
  2617  0000                     _T5GATE	set	16284
  2618  0000                     _T5GCON	set	16283
  2619  0000                     _T6CON	set	16276
  2620  0000                     _T6TMR	set	16274
  2621  0000                     _T6PR	set	16275
  2622  0000                     _T6RST	set	16279
  2623  0000                     _T6HLT	set	16277
  2624  0000                     _T6CLKCON	set	16278
  2625  0000                     _TRISD	set	16325
  2626  0000                     _TRISC	set	16324
  2627  0000                     _TRISB	set	16323
  2628  0000                     _TRISA	set	16322
  2629  0000                     _TRISF	set	16327
  2630  0000                     _TRISE	set	16326
  2631  0000                     _LATC	set	16316
  2632  0000                     _LATB	set	16315
  2633  0000                     _LATF	set	16319
  2634  0000                     _LATA	set	16314
  2635  0000                     _LATD	set	16317
  2636  0000                     _LATE	set	16318
  2637  0000                     _IVTLOCKbits	set	16340
  2638  0000                     _IVTLOCK	set	16340
  2639  0000                     _INTCON0bits	set	16338
  2640  0000                     _GIE	set	130711
  2641  00F9F7                     STR_90:
  2642                           
  2643                           ; BSR set to: 57
  2644  00F9F7  20                 	db	32
  2645  00F9F8  25                 	db	37
  2646  00F9F9  63                 	db	99	;'c'
  2647  00F9FA  20                 	db	32
  2648  00F9FB  2C                 	db	44
  2649  00F9FC  25                 	db	37
  2650  00F9FD  6C                 	db	108	;'l'
  2651  00F9FE  75                 	db	117	;'u'
  2652  00F9FF  2C                 	db	44
  2653  00FA00  25                 	db	37
  2654  00FA01  34                 	db	52	;'4'
  2655  00FA02  2E                 	db	46
  2656  00FA03  34                 	db	52	;'4'
  2657  00FA04  66                 	db	102	;'f'
  2658  00FA05  2C                 	db	44
  2659  00FA06  25                 	db	37
  2660  00FA07  34                 	db	52	;'4'
  2661  00FA08  2E                 	db	46
  2662  00FA09  34                 	db	52	;'4'
  2663  00FA0A  66                 	db	102	;'f'
  2664  00FA0B  2C                 	db	44
  2665  00FA0C  25                 	db	37
  2666  00FA0D  34                 	db	52	;'4'
  2667  00FA0E  2E                 	db	46
  2668  00FA0F  34                 	db	52	;'4'
  2669  00FA10  66                 	db	102	;'f'
  2670  00FA11  2C                 	db	44
  2671  00FA12  25                 	db	37
  2672  00FA13  34                 	db	52	;'4'
  2673  00FA14  2E                 	db	46
  2674  00FA15  34                 	db	52	;'4'
  2675  00FA16  66                 	db	102	;'f'
  2676  00FA17  2C                 	db	44
  2677  00FA18  25                 	db	37
  2678  00FA19  34                 	db	52	;'4'
  2679  00FA1A  2E                 	db	46
  2680  00FA1B  34                 	db	52	;'4'
  2681  00FA1C  66                 	db	102	;'f'
  2682  00FA1D  2C                 	db	44
  2683  00FA1E  25                 	db	37
  2684  00FA1F  34                 	db	52	;'4'
  2685  00FA20  2E                 	db	46
  2686  00FA21  33                 	db	51	;'3'
  2687  00FA22  66                 	db	102	;'f'
  2688  00FA23  2C                 	db	44
  2689  00FA24  25                 	db	37
  2690  00FA25  34                 	db	52	;'4'
  2691  00FA26  2E                 	db	46
  2692  00FA27  33                 	db	51	;'3'
  2693  00FA28  66                 	db	102	;'f'
  2694  00FA29  2C                 	db	44
  2695  00FA2A  25                 	db	37
  2696  00FA2B  34                 	db	52	;'4'
  2697  00FA2C  2E                 	db	46
  2698  00FA2D  33                 	db	51	;'3'
  2699  00FA2E  66                 	db	102	;'f'
  2700  00FA2F  2C                 	db	44
  2701  00FA30  25                 	db	37
  2702  00FA31  34                 	db	52	;'4'
  2703  00FA32  2E                 	db	46
  2704  00FA33  33                 	db	51	;'3'
  2705  00FA34  66                 	db	102	;'f'
  2706  00FA35  2C                 	db	44
  2707  00FA36  25                 	db	37
  2708  00FA37  34                 	db	52	;'4'
  2709  00FA38  2E                 	db	46
  2710  00FA39  33                 	db	51	;'3'
  2711  00FA3A  66                 	db	102	;'f'
  2712  00FA3B  2C                 	db	44
  2713  00FA3C  25                 	db	37
  2714  00FA3D  34                 	db	52	;'4'
  2715  00FA3E  2E                 	db	46
  2716  00FA3F  33                 	db	51	;'3'
  2717  00FA40  66                 	db	102	;'f'
  2718  00FA41  2C                 	db	44
  2719  00FA42  25                 	db	37
  2720  00FA43  64                 	db	100	;'d'
  2721  00FA44  2C                 	db	44
  2722  00FA45  25                 	db	37
  2723  00FA46  64                 	db	100	;'d'
  2724  00FA47  2C                 	db	44
  2725  00FA48  25                 	db	37
  2726  00FA49  32                 	db	50	;'2'
  2727  00FA4A  2E                 	db	46
  2728  00FA4B  36                 	db	54	;'6'
  2729  00FA4C  66                 	db	102	;'f'
  2730  00FA4D  2C                 	db	44
  2731  00FA4E  25                 	db	37
  2732  00FA4F  34                 	db	52	;'4'
  2733  00FA50  2E                 	db	46
  2734  00FA51  33                 	db	51	;'3'
  2735  00FA52  66                 	db	102	;'f'
  2736  00FA53  2C                 	db	44
  2737  00FA54  25                 	db	37
  2738  00FA55  64                 	db	100	;'d'
  2739  00FA56  2C                 	db	44
  2740  00FA57  25                 	db	37
  2741  00FA58  64                 	db	100	;'d'
  2742  00FA59  2C                 	db	44
  2743  00FA5A  25                 	db	37
  2744  00FA5B  6C                 	db	108	;'l'
  2745  00FA5C  75                 	db	117	;'u'
  2746  00FA5D  2C                 	db	44
  2747  00FA5E  25                 	db	37
  2748  00FA5F  6C                 	db	108	;'l'
  2749  00FA60  75                 	db	117	;'u'
  2750  00FA61  2C                 	db	44
  2751  00FA62  25                 	db	37
  2752  00FA63  34                 	db	52	;'4'
  2753  00FA64  2E                 	db	46
  2754  00FA65  33                 	db	51	;'3'
  2755  00FA66  66                 	db	102	;'f'
  2756  00FA67  2C                 	db	44
  2757  00FA68  25                 	db	37
  2758  00FA69  34                 	db	52	;'4'
  2759  00FA6A  2E                 	db	46
  2760  00FA6B  33                 	db	51	;'3'
  2761  00FA6C  66                 	db	102	;'f'
  2762  00FA6D  2C                 	db	44
  2763  00FA6E  25                 	db	37
  2764  00FA6F  34                 	db	52	;'4'
  2765  00FA70  2E                 	db	46
  2766  00FA71  33                 	db	51	;'3'
  2767  00FA72  66                 	db	102	;'f'
  2768  00FA73  0D                 	db	13
  2769  00FA74  0A                 	db	10
  2770  00FA75  00                 	db	0
  2771  00FA76                     STR_128:
  2772                           
  2773                           ; BSR set to: 57
  2774  00FA76  4A                 	db	74	;'J'
  2775  00FA77  61                 	db	97	;'a'
  2776  00FA78  6E                 	db	110	;'n'
  2777  00FA79  46                 	db	70	;'F'
  2778  00FA7A  65                 	db	101	;'e'
  2779  00FA7B  62                 	db	98	;'b'
  2780  00FA7C  4D                 	db	77	;'M'
  2781  00FA7D  61                 	db	97	;'a'
  2782  00FA7E  72                 	db	114	;'r'
  2783  00FA7F  41                 	db	65	;'A'
  2784  00FA80  70                 	db	112	;'p'
  2785  00FA81  72                 	db	114	;'r'
  2786  00FA82  4D                 	db	77	;'M'
  2787  00FA83  61                 	db	97	;'a'
  2788  00FA84  79                 	db	121	;'y'
  2789  00FA85  4A                 	db	74	;'J'
  2790  00FA86  75                 	db	117	;'u'
  2791  00FA87  6E                 	db	110	;'n'
  2792  00FA88  4A                 	db	74	;'J'
  2793  00FA89  75                 	db	117	;'u'
  2794  00FA8A  6C                 	db	108	;'l'
  2795  00FA8B  41                 	db	65	;'A'
  2796  00FA8C  75                 	db	117	;'u'
  2797  00FA8D  67                 	db	103	;'g'
  2798  00FA8E  53                 	db	83	;'S'
  2799  00FA8F  65                 	db	101	;'e'
  2800  00FA90  70                 	db	112	;'p'
  2801  00FA91  4F                 	db	79	;'O'
  2802  00FA92  63                 	db	99	;'c'
  2803  00FA93  74                 	db	116	;'t'
  2804  00FA94  4E                 	db	78	;'N'
  2805  00FA95  6F                 	db	111	;'o'
  2806  00FA96  76                 	db	118	;'v'
  2807  00FA97  44                 	db	68	;'D'
  2808  00FA98  65                 	db	101	;'e'
  2809  00FA99  63                 	db	99	;'c'
  2810  00FA9A  00                 	db	0
  2811  00FA9B                     STR_45:
  2812                           
  2813                           ; BSR set to: 57
  2814  00FA9B  53                 	db	83	;'S'
  2815  00FA9C  25                 	db	37
  2816  00FA9D  63                 	db	99	;'c'
  2817  00FA9E  43                 	db	67	;'C'
  2818  00FA9F  20                 	db	32
  2819  00FAA0  25                 	db	37
  2820  00FAA1  64                 	db	100	;'d'
  2821  00FAA2  20                 	db	32
  2822  00FAA3  52                 	db	82	;'R'
  2823  00FAA4  55                 	db	85	;'U'
  2824  00FAA5  4E                 	db	78	;'N'
  2825  00FAA6  20                 	db	32
  2826  00FAA7  25                 	db	37
  2827  00FAA8  64                 	db	100	;'d'
  2828  00FAA9  20                 	db	32
  2829  00FAAA  56                 	db	86	;'V'
  2830  00FAAB  25                 	db	37
  2831  00FAAC  32                 	db	50	;'2'
  2832  00FAAD  2E                 	db	46
  2833  00FAAE  32                 	db	50	;'2'
  2834  00FAAF  66                 	db	102	;'f'
  2835  00FAB0  20                 	db	32
  2836  00FAB1  20                 	db	32
  2837  00FAB2  20                 	db	32
  2838  00FAB3  20                 	db	32
  2839  00FAB4  20                 	db	32
  2840  00FAB5  20                 	db	32
  2841  00FAB6  20                 	db	32
  2842  00FAB7  20                 	db	32
  2843  00FAB8  00                 	db	0
  2844  00FAB9                     STR_65:
  2845                           
  2846                           ; BSR set to: 57
  2847  00FAB9  25                 	db	37
  2848  00FABA  64                 	db	100	;'d'
  2849  00FABB  20                 	db	32
  2850  00FABC  25                 	db	37
  2851  00FABD  64                 	db	100	;'d'
  2852  00FABE  20                 	db	32
  2853  00FABF  25                 	db	37
  2854  00FAC0  64                 	db	100	;'d'
  2855  00FAC1  20                 	db	32
  2856  00FAC2  25                 	db	37
  2857  00FAC3  64                 	db	100	;'d'
  2858  00FAC4  20                 	db	32
  2859  00FAC5  20                 	db	32
  2860  00FAC6  20                 	db	32
  2861  00FAC7  20                 	db	32
  2862  00FAC8  20                 	db	32
  2863  00FAC9  20                 	db	32
  2864  00FACA  20                 	db	32
  2865  00FACB  20                 	db	32
  2866  00FACC  20                 	db	32
  2867  00FACD  20                 	db	32
  2868  00FACE  20                 	db	32
  2869  00FACF  20                 	db	32
  2870  00FAD0  20                 	db	32
  2871  00FAD1  20                 	db	32
  2872  00FAD2  20                 	db	32
  2873  00FAD3  20                 	db	32
  2874  00FAD4  00                 	db	0
  2875  00FAD5                     STR_22:
  2876                           
  2877                           ; BSR set to: 57
  2878  00FAD5  52                 	db	82	;'R'
  2879  00FAD6  31                 	db	49	;'1'
  2880  00FAD7  20                 	db	32
  2881  00FAD8  25                 	db	37
  2882  00FAD9  32                 	db	50	;'2'
  2883  00FADA  2E                 	db	46
  2884  00FADB  33                 	db	51	;'3'
  2885  00FADC  66                 	db	102	;'f'
  2886  00FADD  20                 	db	32
  2887  00FADE  25                 	db	37
  2888  00FADF  33                 	db	51	;'3'
  2889  00FAE0  2E                 	db	46
  2890  00FAE1  34                 	db	52	;'4'
  2891  00FAE2  66                 	db	102	;'f'
  2892  00FAE3  20                 	db	32
  2893  00FAE4  20                 	db	32
  2894  00FAE5  20                 	db	32
  2895  00FAE6  20                 	db	32
  2896  00FAE7  20                 	db	32
  2897  00FAE8  20                 	db	32
  2898  00FAE9  20                 	db	32
  2899  00FAEA  20                 	db	32
  2900  00FAEB  20                 	db	32
  2901  00FAEC  20                 	db	32
  2902  00FAED  20                 	db	32
  2903  00FAEE  20                 	db	32
  2904  00FAEF  00                 	db	0
  2905  00FAF0                     STR_23:
  2906                           
  2907                           ; BSR set to: 57
  2908  00FAF0  52                 	db	82	;'R'
  2909  00FAF1  32                 	db	50	;'2'
  2910  00FAF2  20                 	db	32
  2911  00FAF3  25                 	db	37
  2912  00FAF4  32                 	db	50	;'2'
  2913  00FAF5  2E                 	db	46
  2914  00FAF6  33                 	db	51	;'3'
  2915  00FAF7  66                 	db	102	;'f'
  2916  00FAF8  20                 	db	32
  2917  00FAF9  25                 	db	37
  2918  00FAFA  33                 	db	51	;'3'
  2919  00FAFB  2E                 	db	46
  2920  00FAFC  34                 	db	52	;'4'
  2921  00FAFD  66                 	db	102	;'f'
  2922  00FAFE  20                 	db	32
  2923  00FAFF  20                 	db	32
  2924  00FB00  20                 	db	32
  2925  00FB01  20                 	db	32
  2926  00FB02  20                 	db	32
  2927  00FB03  20                 	db	32
  2928  00FB04  20                 	db	32
  2929  00FB05  20                 	db	32
  2930  00FB06  20                 	db	32
  2931  00FB07  20                 	db	32
  2932  00FB08  20                 	db	32
  2933  00FB09  20                 	db	32
  2934  00FB0A  00                 	db	0
  2935  00FB0B                     
  2936                           ; BSR set to: 57
  2937  00FB0B  20                 	db	32
  2938  00FB0C  4D                 	db	77	;'M'
  2939  00FB0D  65                 	db	101	;'e'
  2940  00FB0E  73                 	db	115	;'s'
  2941  00FB0F  67                 	db	103	;'g'
  2942  00FB10  20                 	db	32
  2943  00FB11  25                 	db	37
  2944  00FB12  64                 	db	100	;'d'
  2945  00FB13  20                 	db	32
  2946  00FB14  53                 	db	83	;'S'
  2947  00FB15  74                 	db	116	;'t'
  2948  00FB16  61                 	db	97	;'a'
  2949  00FB17  63                 	db	99	;'c'
  2950  00FB18  6B                 	db	107	;'k'
  2951  00FB19  20                 	db	32
  2952  00FB1A  25                 	db	37
  2953  00FB1B  64                 	db	100	;'d'
  2954  00FB1C  20                 	db	32
  2955  00FB1D  20                 	db	32
  2956  00FB1E  20                 	db	32
  2957  00FB1F  20                 	db	32
  2958  00FB20  20                 	db	32
  2959  00FB21  20                 	db	32
  2960  00FB22  20                 	db	32
  2961  00FB23  20                 	db	32
  2962  00FB24  00                 	db	0
  2963  00FB25                     STR_13:
  2964                           
  2965                           ; BSR set to: 57
  2966  00FB25  53                 	db	83	;'S'
  2967  00FB26  20                 	db	32
  2968  00FB27  53                 	db	83	;'S'
  2969  00FB28  25                 	db	37
  2970  00FB29  63                 	db	99	;'c'
  2971  00FB2A  43                 	db	67	;'C'
  2972  00FB2B  20                 	db	32
  2973  00FB2C  25                 	db	37
  2974  00FB2D  64                 	db	100	;'d'
  2975  00FB2E  20                 	db	32
  2976  00FB2F  25                 	db	37
  2977  00FB30  32                 	db	50	;'2'
  2978  00FB31  2E                 	db	46
  2979  00FB32  34                 	db	52	;'4'
  2980  00FB33  66                 	db	102	;'f'
  2981  00FB34  20                 	db	32
  2982  00FB35  20                 	db	32
  2983  00FB36  20                 	db	32
  2984  00FB37  20                 	db	32
  2985  00FB38  20                 	db	32
  2986  00FB39  20                 	db	32
  2987  00FB3A  20                 	db	32
  2988  00FB3B  20                 	db	32
  2989  00FB3C  20                 	db	32
  2990  00FB3D  20                 	db	32
  2991  00FB3E  00                 	db	0
  2992  00FB3F                     STR_46:
  2993                           
  2994                           ; BSR set to: 57
  2995  00FB3F  45                 	db	69	;'E'
  2996  00FB40  53                 	db	83	;'S'
  2997  00FB41  52                 	db	82	;'R'
  2998  00FB42  20                 	db	32
  2999  00FB43  20                 	db	32
  3000  00FB44  25                 	db	37
  3001  00FB45  32                 	db	50	;'2'
  3002  00FB46  2E                 	db	46
  3003  00FB47  36                 	db	54	;'6'
  3004  00FB48  66                 	db	102	;'f'
  3005  00FB49  20                 	db	32
  3006  00FB4A  20                 	db	32
  3007  00FB4B  20                 	db	32
  3008  00FB4C  20                 	db	32
  3009  00FB4D  20                 	db	32
  3010  00FB4E  20                 	db	32
  3011  00FB4F  20                 	db	32
  3012  00FB50  20                 	db	32
  3013  00FB51  20                 	db	32
  3014  00FB52  20                 	db	32
  3015  00FB53  20                 	db	32
  3016  00FB54  20                 	db	32
  3017  00FB55  20                 	db	32
  3018  00FB56  00                 	db	0
  3019  00FB57                     STR_43:
  3020                           
  3021                           ; BSR set to: 57
  3022  00FB57  42                 	db	66	;'B'
  3023  00FB58  41                 	db	65	;'A'
  3024  00FB59  54                 	db	84	;'T'
  3025  00FB5A  54                 	db	84	;'T'
  3026  00FB5B  20                 	db	32
  3027  00FB5C  50                 	db	80	;'P'
  3028  00FB5D  57                 	db	87	;'W'
  3029  00FB5E  52                 	db	82	;'R'
  3030  00FB5F  20                 	db	32
  3031  00FB60  25                 	db	37
  3032  00FB61  33                 	db	51	;'3'
  3033  00FB62  2E                 	db	46
  3034  00FB63  32                 	db	50	;'2'
  3035  00FB64  66                 	db	102	;'f'
  3036  00FB65  20                 	db	32
  3037  00FB66  20                 	db	32
  3038  00FB67  20                 	db	32
  3039  00FB68  20                 	db	32
  3040  00FB69  20                 	db	32
  3041  00FB6A  20                 	db	32
  3042  00FB6B  20                 	db	32
  3043  00FB6C  20                 	db	32
  3044  00FB6D  20                 	db	32
  3045  00FB6E  00                 	db	0
  3046  00FB6F                     STR_47:
  3047                           
  3048                           ; BSR set to: 57
  3049  00FB6F  52                 	db	82	;'R'
  3050  00FB70  31                 	db	49	;'1'
  3051  00FB71  20                 	db	32
  3052  00FB72  25                 	db	37
  3053  00FB73  32                 	db	50	;'2'
  3054  00FB74  2E                 	db	46
  3055  00FB75  33                 	db	51	;'3'
  3056  00FB76  66                 	db	102	;'f'
  3057  00FB77  20                 	db	32
  3058  00FB78  25                 	db	37
  3059  00FB79  33                 	db	51	;'3'
  3060  00FB7A  2E                 	db	46
  3061  00FB7B  34                 	db	52	;'4'
  3062  00FB7C  66                 	db	102	;'f'
  3063  00FB7D  20                 	db	32
  3064  00FB7E  20                 	db	32
  3065  00FB7F  20                 	db	32
  3066  00FB80  20                 	db	32
  3067  00FB81  20                 	db	32
  3068  00FB82  20                 	db	32
  3069  00FB83  20                 	db	32
  3070  00FB84  20                 	db	32
  3071  00FB85  20                 	db	32
  3072  00FB86  00                 	db	0
  3073  00FB87                     STR_48:
  3074                           
  3075                           ; BSR set to: 57
  3076  00FB87  52                 	db	82	;'R'
  3077  00FB88  32                 	db	50	;'2'
  3078  00FB89  20                 	db	32
  3079  00FB8A  25                 	db	37
  3080  00FB8B  32                 	db	50	;'2'
  3081  00FB8C  2E                 	db	46
  3082  00FB8D  33                 	db	51	;'3'
  3083  00FB8E  66                 	db	102	;'f'
  3084  00FB8F  20                 	db	32
  3085  00FB90  25                 	db	37
  3086  00FB91  33                 	db	51	;'3'
  3087  00FB92  2E                 	db	46
  3088  00FB93  34                 	db	52	;'4'
  3089  00FB94  66                 	db	102	;'f'
  3090  00FB95  20                 	db	32
  3091  00FB96  20                 	db	32
  3092  00FB97  20                 	db	32
  3093  00FB98  20                 	db	32
  3094  00FB99  20                 	db	32
  3095  00FB9A  20                 	db	32
  3096  00FB9B  20                 	db	32
  3097  00FB9C  20                 	db	32
  3098  00FB9D  20                 	db	32
  3099  00FB9E  00                 	db	0
  3100  00FB9F                     STR_44:
  3101                           
  3102                           ; BSR set to: 57
  3103  00FB9F  42                 	db	66	;'B'
  3104  00FBA0  41                 	db	65	;'A'
  3105  00FBA1  48                 	db	72	;'H'
  3106  00FBA2  20                 	db	32
  3107  00FBA3  25                 	db	37
  3108  00FBA4  33                 	db	51	;'3'
  3109  00FBA5  2E                 	db	46
  3110  00FBA6  32                 	db	50	;'2'
  3111  00FBA7  66                 	db	102	;'f'
  3112  00FBA8  20                 	db	32
  3113  00FBA9  50                 	db	80	;'P'
  3114  00FBAA  25                 	db	37
  3115  00FBAB  33                 	db	51	;'3'
  3116  00FBAC  2E                 	db	46
  3117  00FBAD  32                 	db	50	;'2'
  3118  00FBAE  66                 	db	102	;'f'
  3119  00FBAF  20                 	db	32
  3120  00FBB0  20                 	db	32
  3121  00FBB1  20                 	db	32
  3122  00FBB2  20                 	db	32
  3123  00FBB3  20                 	db	32
  3124  00FBB4  20                 	db	32
  3125  00FBB5  20                 	db	32
  3126  00FBB6  00                 	db	0
  3127  00FBB7                     STR_16:
  3128                           
  3129                           ; BSR set to: 57
  3130  00FBB7  20                 	db	32
  3131  00FBB8  20                 	db	32
  3132  00FBB9  20                 	db	32
  3133  00FBBA  20                 	db	32
  3134  00FBBB  20                 	db	32
  3135  00FBBC  20                 	db	32
  3136  00FBBD  20                 	db	32
  3137  00FBBE  20                 	db	32
  3138  00FBBF  20                 	db	32
  3139  00FBC0  20                 	db	32
  3140  00FBC1  20                 	db	32
  3141  00FBC2  20                 	db	32
  3142  00FBC3  20                 	db	32
  3143  00FBC4  20                 	db	32
  3144  00FBC5  20                 	db	32
  3145  00FBC6  20                 	db	32
  3146  00FBC7  20                 	db	32
  3147  00FBC8  20                 	db	32
  3148  00FBC9  20                 	db	32
  3149  00FBCA  20                 	db	32
  3150  00FBCB  20                 	db	32
  3151  00FBCC  20                 	db	32
  3152  00FBCD  00                 	db	0
  3153  00FBCE                     STR_21:
  3154                           
  3155                           ; BSR set to: 57
  3156  00FBCE  45                 	db	69	;'E'
  3157  00FBCF  53                 	db	83	;'S'
  3158  00FBD0  52                 	db	82	;'R'
  3159  00FBD1  20                 	db	32
  3160  00FBD2  20                 	db	32
  3161  00FBD3  25                 	db	37
  3162  00FBD4  32                 	db	50	;'2'
  3163  00FBD5  2E                 	db	46
  3164  00FBD6  36                 	db	54	;'6'
  3165  00FBD7  66                 	db	102	;'f'
  3166  00FBD8  20                 	db	32
  3167  00FBD9  20                 	db	32
  3168  00FBDA  20                 	db	32
  3169  00FBDB  20                 	db	32
  3170  00FBDC  20                 	db	32
  3171  00FBDD  20                 	db	32
  3172  00FBDE  20                 	db	32
  3173  00FBDF  20                 	db	32
  3174  00FBE0  20                 	db	32
  3175  00FBE1  20                 	db	32
  3176  00FBE2  20                 	db	32
  3177  00FBE3  20                 	db	32
  3178  00FBE4  00                 	db	0
  3179  00FBE5                     STR_14:
  3180                           
  3181                           ; BSR set to: 57
  3182  00FBE5  53                 	db	83	;'S'
  3183  00FBE6  74                 	db	116	;'t'
  3184  00FBE7  61                 	db	97	;'a'
  3185  00FBE8  74                 	db	116	;'t'
  3186  00FBE9  69                 	db	105	;'i'
  3187  00FBEA  63                 	db	99	;'c'
  3188  00FBEB  20                 	db	32
  3189  00FBEC  53                 	db	83	;'S'
  3190  00FBED  4F                 	db	79	;'O'
  3191  00FBEE  43                 	db	67	;'C'
  3192  00FBEF  20                 	db	32
  3193  00FBF0  25                 	db	37
  3194  00FBF1  64                 	db	100	;'d'
  3195  00FBF2  20                 	db	32
  3196  00FBF3  20                 	db	32
  3197  00FBF4  20                 	db	32
  3198  00FBF5  20                 	db	32
  3199  00FBF6  20                 	db	32
  3200  00FBF7  20                 	db	32
  3201  00FBF8  20                 	db	32
  3202  00FBF9  20                 	db	32
  3203  00FBFA  20                 	db	32
  3204  00FBFB  00                 	db	0
  3205  00FBFC                     STR_40:
  3206                           
  3207                           ; BSR set to: 57
  3208  00FBFC  42                 	db	66	;'B'
  3209  00FBFD  41                 	db	65	;'A'
  3210  00FBFE  54                 	db	84	;'T'
  3211  00FBFF  20                 	db	32
  3212  00FC00  49                 	db	73	;'I'
  3213  00FC01  57                 	db	87	;'W'
  3214  00FC02  48                 	db	72	;'H'
  3215  00FC03  20                 	db	32
  3216  00FC04  25                 	db	37
  3217  00FC05  34                 	db	52	;'4'
  3218  00FC06  2E                 	db	46
  3219  00FC07  31                 	db	49	;'1'
  3220  00FC08  66                 	db	102	;'f'
  3221  00FC09  20                 	db	32
  3222  00FC0A  20                 	db	32
  3223  00FC0B  20                 	db	32
  3224  00FC0C  20                 	db	32
  3225  00FC0D  20                 	db	32
  3226  00FC0E  20                 	db	32
  3227  00FC0F  20                 	db	32
  3228  00FC10  20                 	db	32
  3229  00FC11  20                 	db	32
  3230  00FC12  00                 	db	0
  3231  00FC13                     STR_41:
  3232                           
  3233                           ; BSR set to: 57
  3234  00FC13  42                 	db	66	;'B'
  3235  00FC14  41                 	db	65	;'A'
  3236  00FC15  54                 	db	84	;'T'
  3237  00FC16  20                 	db	32
  3238  00FC17  4F                 	db	79	;'O'
  3239  00FC18  57                 	db	87	;'W'
  3240  00FC19  48                 	db	72	;'H'
  3241  00FC1A  20                 	db	32
  3242  00FC1B  25                 	db	37
  3243  00FC1C  34                 	db	52	;'4'
  3244  00FC1D  2E                 	db	46
  3245  00FC1E  31                 	db	49	;'1'
  3246  00FC1F  66                 	db	102	;'f'
  3247  00FC20  20                 	db	32
  3248  00FC21  20                 	db	32
  3249  00FC22  20                 	db	32
  3250  00FC23  20                 	db	32
  3251  00FC24  20                 	db	32
  3252  00FC25  20                 	db	32
  3253  00FC26  20                 	db	32
  3254  00FC27  20                 	db	32
  3255  00FC28  20                 	db	32
  3256  00FC29  00                 	db	0
  3257  00FC2A                     STR_42:
  3258                           
  3259                           ; BSR set to: 57
  3260  00FC2A  42                 	db	66	;'B'
  3261  00FC2B  41                 	db	65	;'A'
  3262  00FC2C  54                 	db	84	;'T'
  3263  00FC2D  20                 	db	32
  3264  00FC2E  54                 	db	84	;'T'
  3265  00FC2F  57                 	db	87	;'W'
  3266  00FC30  48                 	db	72	;'H'
  3267  00FC31  20                 	db	32
  3268  00FC32  25                 	db	37
  3269  00FC33  34                 	db	52	;'4'
  3270  00FC34  2E                 	db	46
  3271  00FC35  31                 	db	49	;'1'
  3272  00FC36  66                 	db	102	;'f'
  3273  00FC37  20                 	db	32
  3274  00FC38  20                 	db	32
  3275  00FC39  20                 	db	32
  3276  00FC3A  20                 	db	32
  3277  00FC3B  20                 	db	32
  3278  00FC3C  20                 	db	32
  3279  00FC3D  20                 	db	32
  3280  00FC3E  20                 	db	32
  3281  00FC3F  20                 	db	32
  3282  00FC40  00                 	db	0
  3283  00FC41                     STR_36:
  3284                           
  3285                           ; BSR set to: 57
  3286  00FC41  49                 	db	73	;'I'
  3287  00FC42  4E                 	db	78	;'N'
  3288  00FC43  56                 	db	86	;'V'
  3289  00FC44  20                 	db	32
  3290  00FC45  20                 	db	32
  3291  00FC46  57                 	db	87	;'W'
  3292  00FC47  48                 	db	72	;'H'
  3293  00FC48  20                 	db	32
  3294  00FC49  25                 	db	37
  3295  00FC4A  33                 	db	51	;'3'
  3296  00FC4B  2E                 	db	46
  3297  00FC4C  32                 	db	50	;'2'
  3298  00FC4D  66                 	db	102	;'f'
  3299  00FC4E  20                 	db	32
  3300  00FC4F  20                 	db	32
  3301  00FC50  20                 	db	32
  3302  00FC51  20                 	db	32
  3303  00FC52  20                 	db	32
  3304  00FC53  20                 	db	32
  3305  00FC54  20                 	db	32
  3306  00FC55  20                 	db	32
  3307  00FC56  20                 	db	32
  3308  00FC57  00                 	db	0
  3309  00FC58                     STR_35:
  3310                           
  3311                           ; BSR set to: 57
  3312  00FC58  4C                 	db	76	;'L'
  3313  00FC59  4F                 	db	79	;'O'
  3314  00FC5A  41                 	db	65	;'A'
  3315  00FC5B  44                 	db	68	;'D'
  3316  00FC5C  20                 	db	32
  3317  00FC5D  57                 	db	87	;'W'
  3318  00FC5E  48                 	db	72	;'H'
  3319  00FC5F  20                 	db	32
  3320  00FC60  25                 	db	37
  3321  00FC61  33                 	db	51	;'3'
  3322  00FC62  2E                 	db	46
  3323  00FC63  32                 	db	50	;'2'
  3324  00FC64  66                 	db	102	;'f'
  3325  00FC65  20                 	db	32
  3326  00FC66  20                 	db	32
  3327  00FC67  20                 	db	32
  3328  00FC68  20                 	db	32
  3329  00FC69  20                 	db	32
  3330  00FC6A  20                 	db	32
  3331  00FC6B  20                 	db	32
  3332  00FC6C  20                 	db	32
  3333  00FC6D  20                 	db	32
  3334  00FC6E  00                 	db	0
  3335  00FC6F                     STR_34:
  3336                           
  3337                           ; BSR set to: 57
  3338  00FC6F  50                 	db	80	;'P'
  3339  00FC70  56                 	db	86	;'V'
  3340  00FC71  20                 	db	32
  3341  00FC72  25                 	db	37
  3342  00FC73  63                 	db	99	;'c'
  3343  00FC74  20                 	db	32
  3344  00FC75  57                 	db	87	;'W'
  3345  00FC76  48                 	db	72	;'H'
  3346  00FC77  20                 	db	32
  3347  00FC78  25                 	db	37
  3348  00FC79  33                 	db	51	;'3'
  3349  00FC7A  2E                 	db	46
  3350  00FC7B  32                 	db	50	;'2'
  3351  00FC7C  66                 	db	102	;'f'
  3352  00FC7D  20                 	db	32
  3353  00FC7E  20                 	db	32
  3354  00FC7F  20                 	db	32
  3355  00FC80  20                 	db	32
  3356  00FC81  20                 	db	32
  3357  00FC82  20                 	db	32
  3358  00FC83  20                 	db	32
  3359  00FC84  20                 	db	32
  3360  00FC85  00                 	db	0
  3361  00FC86                     STR_33:
  3362                           
  3363                           ; BSR set to: 57
  3364  00FC86  49                 	db	73	;'I'
  3365  00FC87  4E                 	db	78	;'N'
  3366  00FC88  56                 	db	86	;'V'
  3367  00FC89  20                 	db	32
  3368  00FC8A  20                 	db	32
  3369  00FC8B  50                 	db	80	;'P'
  3370  00FC8C  57                 	db	87	;'W'
  3371  00FC8D  52                 	db	82	;'R'
  3372  00FC8E  20                 	db	32
  3373  00FC8F  25                 	db	37
  3374  00FC90  33                 	db	51	;'3'
  3375  00FC91  2E                 	db	46
  3376  00FC92  32                 	db	50	;'2'
  3377  00FC93  66                 	db	102	;'f'
  3378  00FC94  20                 	db	32
  3379  00FC95  20                 	db	32
  3380  00FC96  20                 	db	32
  3381  00FC97  20                 	db	32
  3382  00FC98  20                 	db	32
  3383  00FC99  20                 	db	32
  3384  00FC9A  20                 	db	32
  3385  00FC9B  20                 	db	32
  3386  00FC9C  00                 	db	0
  3387  00FC9D                     STR_32:
  3388                           
  3389                           ; BSR set to: 57
  3390  00FC9D  4C                 	db	76	;'L'
  3391  00FC9E  4F                 	db	79	;'O'
  3392  00FC9F  41                 	db	65	;'A'
  3393  00FCA0  44                 	db	68	;'D'
  3394  00FCA1  20                 	db	32
  3395  00FCA2  50                 	db	80	;'P'
  3396  00FCA3  57                 	db	87	;'W'
  3397  00FCA4  52                 	db	82	;'R'
  3398  00FCA5  20                 	db	32
  3399  00FCA6  25                 	db	37
  3400  00FCA7  33                 	db	51	;'3'
  3401  00FCA8  2E                 	db	46
  3402  00FCA9  32                 	db	50	;'2'
  3403  00FCAA  66                 	db	102	;'f'
  3404  00FCAB  20                 	db	32
  3405  00FCAC  20                 	db	32
  3406  00FCAD  20                 	db	32
  3407  00FCAE  20                 	db	32
  3408  00FCAF  20                 	db	32
  3409  00FCB0  20                 	db	32
  3410  00FCB1  20                 	db	32
  3411  00FCB2  20                 	db	32
  3412  00FCB3  00                 	db	0
  3413  00FCB4                     STR_31:
  3414                           
  3415                           ; BSR set to: 57
  3416  00FCB4  50                 	db	80	;'P'
  3417  00FCB5  56                 	db	86	;'V'
  3418  00FCB6  20                 	db	32
  3419  00FCB7  25                 	db	37
  3420  00FCB8  63                 	db	99	;'c'
  3421  00FCB9  20                 	db	32
  3422  00FCBA  50                 	db	80	;'P'
  3423  00FCBB  57                 	db	87	;'W'
  3424  00FCBC  52                 	db	82	;'R'
  3425  00FCBD  20                 	db	32
  3426  00FCBE  25                 	db	37
  3427  00FCBF  33                 	db	51	;'3'
  3428  00FCC0  2E                 	db	46
  3429  00FCC1  32                 	db	50	;'2'
  3430  00FCC2  66                 	db	102	;'f'
  3431  00FCC3  20                 	db	32
  3432  00FCC4  20                 	db	32
  3433  00FCC5  20                 	db	32
  3434  00FCC6  20                 	db	32
  3435  00FCC7  20                 	db	32
  3436  00FCC8  20                 	db	32
  3437  00FCC9  20                 	db	32
  3438  00FCCA  00                 	db	0
  3439  00FCCB                     STR_15:
  3440                           
  3441                           ; BSR set to: 57
  3442  00FCCB  42                 	db	66	;'B'
  3443  00FCCC  61                 	db	97	;'a'
  3444  00FCCD  74                 	db	116	;'t'
  3445  00FCCE  74                 	db	116	;'t'
  3446  00FCCF  65                 	db	101	;'e'
  3447  00FCD0  72                 	db	114	;'r'
  3448  00FCD1  79                 	db	121	;'y'
  3449  00FCD2  20                 	db	32
  3450  00FCD3  41                 	db	65	;'A'
  3451  00FCD4  68                 	db	104	;'h'
  3452  00FCD5  20                 	db	32
  3453  00FCD6  25                 	db	37
  3454  00FCD7  33                 	db	51	;'3'
  3455  00FCD8  2E                 	db	46
  3456  00FCD9  32                 	db	50	;'2'
  3457  00FCDA  66                 	db	102	;'f'
  3458  00FCDB  20                 	db	32
  3459  00FCDC  20                 	db	32
  3460  00FCDD  20                 	db	32
  3461  00FCDE  20                 	db	32
  3462  00FCDF  20                 	db	32
  3463  00FCE0  20                 	db	32
  3464  00FCE1  00                 	db	0
  3465  00FCE2                     STR_38:
  3466                           
  3467                           ; BSR set to: 57
  3468  00FCE2  42                 	db	66	;'B'
  3469  00FCE3  56                 	db	86	;'V'
  3470  00FCE4  20                 	db	32
  3471  00FCE5  25                 	db	37
  3472  00FCE6  32                 	db	50	;'2'
  3473  00FCE7  2E                 	db	46
  3474  00FCE8  32                 	db	50	;'2'
  3475  00FCE9  66                 	db	102	;'f'
  3476  00FCEA  20                 	db	32
  3477  00FCEB  42                 	db	66	;'B'
  3478  00FCEC  41                 	db	65	;'A'
  3479  00FCED  20                 	db	32
  3480  00FCEE  25                 	db	37
  3481  00FCEF  32                 	db	50	;'2'
  3482  00FCF0  2E                 	db	46
  3483  00FCF1  32                 	db	50	;'2'
  3484  00FCF2  66                 	db	102	;'f'
  3485  00FCF3  20                 	db	32
  3486  00FCF4  20                 	db	32
  3487  00FCF5  20                 	db	32
  3488  00FCF6  20                 	db	32
  3489  00FCF7  20                 	db	32
  3490  00FCF8  00                 	db	0
  3491  00FCF9                     STR_39:
  3492                           
  3493                           ; BSR set to: 57
  3494  00FCF9  43                 	db	67	;'C'
  3495  00FCFA  56                 	db	86	;'V'
  3496  00FCFB  20                 	db	32
  3497  00FCFC  25                 	db	37
  3498  00FCFD  32                 	db	50	;'2'
  3499  00FCFE  2E                 	db	46
  3500  00FCFF  32                 	db	50	;'2'
  3501  00FD00  66                 	db	102	;'f'
  3502  00FD01  20                 	db	32
  3503  00FD02  4C                 	db	76	;'L'
  3504  00FD03  41                 	db	65	;'A'
  3505  00FD04  20                 	db	32
  3506  00FD05  25                 	db	37
  3507  00FD06  32                 	db	50	;'2'
  3508  00FD07  2E                 	db	46
  3509  00FD08  32                 	db	50	;'2'
  3510  00FD09  66                 	db	102	;'f'
  3511  00FD0A  20                 	db	32
  3512  00FD0B  20                 	db	32
  3513  00FD0C  20                 	db	32
  3514  00FD0D  20                 	db	32
  3515  00FD0E  20                 	db	32
  3516  00FD0F  00                 	db	0
  3517  00FD10                     STR_37:
  3518                           
  3519                           ; BSR set to: 57
  3520  00FD10  50                 	db	80	;'P'
  3521  00FD11  56                 	db	86	;'V'
  3522  00FD12  20                 	db	32
  3523  00FD13  25                 	db	37
  3524  00FD14  32                 	db	50	;'2'
  3525  00FD15  2E                 	db	46
  3526  00FD16  32                 	db	50	;'2'
  3527  00FD17  66                 	db	102	;'f'
  3528  00FD18  20                 	db	32
  3529  00FD19  50                 	db	80	;'P'
  3530  00FD1A  41                 	db	65	;'A'
  3531  00FD1B  20                 	db	32
  3532  00FD1C  25                 	db	37
  3533  00FD1D  32                 	db	50	;'2'
  3534  00FD1E  2E                 	db	46
  3535  00FD1F  32                 	db	50	;'2'
  3536  00FD20  66                 	db	102	;'f'
  3537  00FD21  20                 	db	32
  3538  00FD22  20                 	db	32
  3539  00FD23  20                 	db	32
  3540  00FD24  20                 	db	32
  3541  00FD25  20                 	db	32
  3542  00FD26  00                 	db	0
  3543  00FD27                     STR_127:
  3544                           
  3545                           ; BSR set to: 57
  3546  00FD27  53                 	db	83	;'S'
  3547  00FD28  75                 	db	117	;'u'
  3548  00FD29  6E                 	db	110	;'n'
  3549  00FD2A  4D                 	db	77	;'M'
  3550  00FD2B  6F                 	db	111	;'o'
  3551  00FD2C  6E                 	db	110	;'n'
  3552  00FD2D  54                 	db	84	;'T'
  3553  00FD2E  75                 	db	117	;'u'
  3554  00FD2F  65                 	db	101	;'e'
  3555  00FD30  57                 	db	87	;'W'
  3556  00FD31  65                 	db	101	;'e'
  3557  00FD32  64                 	db	100	;'d'
  3558  00FD33  54                 	db	84	;'T'
  3559  00FD34  68                 	db	104	;'h'
  3560  00FD35  75                 	db	117	;'u'
  3561  00FD36  46                 	db	70	;'F'
  3562  00FD37  72                 	db	114	;'r'
  3563  00FD38  69                 	db	105	;'i'
  3564  00FD39  53                 	db	83	;'S'
  3565  00FD3A  61                 	db	97	;'a'
  3566  00FD3B  74                 	db	116	;'t'
  3567  00FD3C  00                 	db	0
  3568  00FD3D                     STR_57:
  3569                           
  3570                           ; BSR set to: 57
  3571  00FD3D  20                 	db	32
  3572  00FD3E  25                 	db	37
  3573  00FD3F  64                 	db	100	;'d'
  3574  00FD40  20                 	db	32
  3575  00FD41  25                 	db	37
  3576  00FD42  64                 	db	100	;'d'
  3577  00FD43  20                 	db	32
  3578  00FD44  20                 	db	32
  3579  00FD45  20                 	db	32
  3580  00FD46  20                 	db	32
  3581  00FD47  20                 	db	32
  3582  00FD48  20                 	db	32
  3583  00FD49  20                 	db	32
  3584  00FD4A  20                 	db	32
  3585  00FD4B  20                 	db	32
  3586  00FD4C  20                 	db	32
  3587  00FD4D  20                 	db	32
  3588  00FD4E  20                 	db	32
  3589  00FD4F  20                 	db	32
  3590  00FD50  20                 	db	32
  3591  00FD51  20                 	db	32
  3592  00FD52  00                 	db	0
  3593  00FD53                     STR_60:
  3594                           
  3595                           ; BSR set to: 57
  3596  00FD53  20                 	db	32
  3597  00FD54  25                 	db	37
  3598  00FD55  6C                 	db	108	;'l'
  3599  00FD56  64                 	db	100	;'d'
  3600  00FD57  20                 	db	32
  3601  00FD58  25                 	db	37
  3602  00FD59  6C                 	db	108	;'l'
  3603  00FD5A  64                 	db	100	;'d'
  3604  00FD5B  20                 	db	32
  3605  00FD5C  20                 	db	32
  3606  00FD5D  20                 	db	32
  3607  00FD5E  20                 	db	32
  3608  00FD5F  20                 	db	32
  3609  00FD60  20                 	db	32
  3610  00FD61  20                 	db	32
  3611  00FD62  20                 	db	32
  3612  00FD63  20                 	db	32
  3613  00FD64  20                 	db	32
  3614  00FD65  20                 	db	32
  3615  00FD66  20                 	db	32
  3616  00FD67  20                 	db	32
  3617  00FD68  00                 	db	0
  3618  00FD69                     STR_12:
  3619                           
  3620                           ; BSR set to: 57
  3621  00FD69  42                 	db	66	;'B'
  3622  00FD6A  56                 	db	86	;'V'
  3623  00FD6B  20                 	db	32
  3624  00FD6C  25                 	db	37
  3625  00FD6D  32                 	db	50	;'2'
  3626  00FD6E  2E                 	db	46
  3627  00FD6F  34                 	db	52	;'4'
  3628  00FD70  66                 	db	102	;'f'
  3629  00FD71  20                 	db	32
  3630  00FD72  20                 	db	32
  3631  00FD73  20                 	db	32
  3632  00FD74  20                 	db	32
  3633  00FD75  20                 	db	32
  3634  00FD76  20                 	db	32
  3635  00FD77  20                 	db	32
  3636  00FD78  20                 	db	32
  3637  00FD79  20                 	db	32
  3638  00FD7A  20                 	db	32
  3639  00FD7B  20                 	db	32
  3640  00FD7C  20                 	db	32
  3641  00FD7D  20                 	db	32
  3642  00FD7E  00                 	db	0
  3643  00FD7F                     STR_26:
  3644                           
  3645                           ; BSR set to: 57
  3646  00FD7F  54                 	db	84	;'T'
  3647  00FD80  6F                 	db	111	;'o'
  3648  00FD81  20                 	db	32
  3649  00FD82  45                 	db	69	;'E'
  3650  00FD83  45                 	db	69	;'E'
  3651  00FD84  50                 	db	80	;'P'
  3652  00FD85  52                 	db	82	;'R'
  3653  00FD86  4F                 	db	79	;'O'
  3654  00FD87  4D                 	db	77	;'M'
  3655  00FD88  20                 	db	32
  3656  00FD89  20                 	db	32
  3657  00FD8A  20                 	db	32
  3658  00FD8B  20                 	db	32
  3659  00FD8C  20                 	db	32
  3660  00FD8D  20                 	db	32
  3661  00FD8E  20                 	db	32
  3662  00FD8F  20                 	db	32
  3663  00FD90  20                 	db	32
  3664  00FD91  20                 	db	32
  3665  00FD92  20                 	db	32
  3666  00FD93  20                 	db	32
  3667  00FD94  00                 	db	0
  3668  00FD95                     STR_17:
  3669                           
  3670                           ; BSR set to: 57
  3671  00FD95  42                 	db	66	;'B'
  3672  00FD96  61                 	db	97	;'a'
  3673  00FD97  74                 	db	116	;'t'
  3674  00FD98  74                 	db	116	;'t'
  3675  00FD99  65                 	db	101	;'e'
  3676  00FD9A  72                 	db	114	;'r'
  3677  00FD9B  79                 	db	121	;'y'
  3678  00FD9C  20                 	db	32
  3679  00FD9D  45                 	db	69	;'E'
  3680  00FD9E  53                 	db	83	;'S'
  3681  00FD9F  52                 	db	82	;'R'
  3682  00FDA0  20                 	db	32
  3683  00FDA1  20                 	db	32
  3684  00FDA2  20                 	db	32
  3685  00FDA3  20                 	db	32
  3686  00FDA4  20                 	db	32
  3687  00FDA5  20                 	db	32
  3688  00FDA6  20                 	db	32
  3689  00FDA7  20                 	db	32
  3690  00FDA8  20                 	db	32
  3691  00FDA9  20                 	db	32
  3692  00FDAA  00                 	db	0
  3693  00FDAB                     STR_18:
  3694                           
  3695                           ; BSR set to: 57
  3696  00FDAB  43                 	db	67	;'C'
  3697  00FDAC  61                 	db	97	;'a'
  3698  00FDAD  6C                 	db	108	;'l'
  3699  00FDAE  63                 	db	99	;'c'
  3700  00FDAF  75                 	db	117	;'u'
  3701  00FDB0  6C                 	db	108	;'l'
  3702  00FDB1  61                 	db	97	;'a'
  3703  00FDB2  74                 	db	116	;'t'
  3704  00FDB3  69                 	db	105	;'i'
  3705  00FDB4  6F                 	db	111	;'o'
  3706  00FDB5  6E                 	db	110	;'n'
  3707  00FDB6  20                 	db	32
  3708  00FDB7  20                 	db	32
  3709  00FDB8  20                 	db	32
  3710  00FDB9  20                 	db	32
  3711  00FDBA  20                 	db	32
  3712  00FDBB  20                 	db	32
  3713  00FDBC  20                 	db	32
  3714  00FDBD  20                 	db	32
  3715  00FDBE  20                 	db	32
  3716  00FDBF  20                 	db	32
  3717  00FDC0  00                 	db	0
  3718  00FDC1                     STR_54:
  3719                           
  3720                           ; BSR set to: 57
  3721  00FDC1  43                 	db	67	;'C'
  3722  00FDC2  61                 	db	97	;'a'
  3723  00FDC3  6C                 	db	108	;'l'
  3724  00FDC4  69                 	db	105	;'i'
  3725  00FDC5  62                 	db	98	;'b'
  3726  00FDC6  72                 	db	114	;'r'
  3727  00FDC7  61                 	db	97	;'a'
  3728  00FDC8  74                 	db	116	;'t'
  3729  00FDC9  69                 	db	105	;'i'
  3730  00FDCA  6F                 	db	111	;'o'
  3731  00FDCB  6E                 	db	110	;'n'
  3732  00FDCC  20                 	db	32
  3733  00FDCD  20                 	db	32
  3734  00FDCE  20                 	db	32
  3735  00FDCF  20                 	db	32
  3736  00FDD0  20                 	db	32
  3737  00FDD1  20                 	db	32
  3738  00FDD2  20                 	db	32
  3739  00FDD3  20                 	db	32
  3740  00FDD4  20                 	db	32
  3741  00FDD5  20                 	db	32
  3742  00FDD6  00                 	db	0
  3743  00FDD7                     STR_53:
  3744                           
  3745                           ; BSR set to: 57
  3746  00FDD7  53                 	db	83	;'S'
  3747  00FDD8  65                 	db	101	;'e'
  3748  00FDD9  6E                 	db	110	;'n'
  3749  00FDDA  73                 	db	115	;'s'
  3750  00FDDB  6F                 	db	111	;'o'
  3751  00FDDC  72                 	db	114	;'r'
  3752  00FDDD  20                 	db	32
  3753  00FDDE  5A                 	db	90	;'Z'
  3754  00FDDF  65                 	db	101	;'e'
  3755  00FDE0  72                 	db	114	;'r'
  3756  00FDE1  6F                 	db	111	;'o'
  3757  00FDE2  20                 	db	32
  3758  00FDE3  20                 	db	32
  3759  00FDE4  20                 	db	32
  3760  00FDE5  20                 	db	32
  3761  00FDE6  20                 	db	32
  3762  00FDE7  20                 	db	32
  3763  00FDE8  20                 	db	32
  3764  00FDE9  20                 	db	32
  3765  00FDEA  20                 	db	32
  3766  00FDEB  20                 	db	32
  3767  00FDEC  00                 	db	0
  3768  00FDED                     STR_61:
  3769                           
  3770                           ; BSR set to: 57
  3771  00FDED  5A                 	db	90	;'Z'
  3772  00FDEE  65                 	db	101	;'e'
  3773  00FDEF  72                 	db	114	;'r'
  3774  00FDF0  6F                 	db	111	;'o'
  3775  00FDF1  20                 	db	32
  3776  00FDF2  43                 	db	67	;'C'
  3777  00FDF3  61                 	db	97	;'a'
  3778  00FDF4  6C                 	db	108	;'l'
  3779  00FDF5  20                 	db	32
  3780  00FDF6  53                 	db	83	;'S'
  3781  00FDF7  65                 	db	101	;'e'
  3782  00FDF8  74                 	db	116	;'t'
  3783  00FDF9  20                 	db	32
  3784  00FDFA  20                 	db	32
  3785  00FDFB  20                 	db	32
  3786  00FDFC  20                 	db	32
  3787  00FDFD  20                 	db	32
  3788  00FDFE  20                 	db	32
  3789  00FDFF  20                 	db	32
  3790  00FE00  20                 	db	32
  3791  00FE01  20                 	db	32
  3792  00FE02  00                 	db	0
  3793  00FE03                     STR_52:
  3794                           
  3795                           ; BSR set to: 57
  3796  00FE03  42                 	db	66	;'B'
  3797  00FE04  61                 	db	97	;'a'
  3798  00FE05  74                 	db	116	;'t'
  3799  00FE06  74                 	db	116	;'t'
  3800  00FE07  65                 	db	101	;'e'
  3801  00FE08  72                 	db	114	;'r'
  3802  00FE09  79                 	db	121	;'y'
  3803  00FE0A  20                 	db	32
  3804  00FE0B  61                 	db	97	;'a'
  3805  00FE0C  6E                 	db	110	;'n'
  3806  00FE0D  64                 	db	100	;'d'
  3807  00FE0E  20                 	db	32
  3808  00FE0F  50                 	db	80	;'P'
  3809  00FE10  56                 	db	86	;'V'
  3810  00FE11  20                 	db	32
  3811  00FE12  20                 	db	32
  3812  00FE13  20                 	db	32
  3813  00FE14  20                 	db	32
  3814  00FE15  20                 	db	32
  3815  00FE16  20                 	db	32
  3816  00FE17  20                 	db	32
  3817  00FE18  00                 	db	0
  3818  00FE19                     STR_20:
  3819                           
  3820                           ; BSR set to: 57
  3821  00FE19  43                 	db	67	;'C'
  3822  00FE1A  68                 	db	104	;'h'
  3823  00FE1B  65                 	db	101	;'e'
  3824  00FE1C  63                 	db	99	;'c'
  3825  00FE1D  6B                 	db	107	;'k'
  3826  00FE1E  69                 	db	105	;'i'
  3827  00FE1F  6E                 	db	110	;'n'
  3828  00FE20  67                 	db	103	;'g'
  3829  00FE21  20                 	db	32
  3830  00FE22  25                 	db	37
  3831  00FE23  63                 	db	99	;'c'
  3832  00FE24  20                 	db	32
  3833  00FE25  25                 	db	37
  3834  00FE26  63                 	db	99	;'c'
  3835  00FE27  20                 	db	32
  3836  00FE28  20                 	db	32
  3837  00FE29  20                 	db	32
  3838  00FE2A  20                 	db	32
  3839  00FE2B  20                 	db	32
  3840  00FE2C  20                 	db	32
  3841  00FE2D  20                 	db	32
  3842  00FE2E  00                 	db	0
  3843  00FE2F                     STR_27:
  3844                           
  3845                           ; BSR set to: 57
  3846  00FE2F  20                 	db	32
  3847  00FE30  54                 	db	84	;'T'
  3848  00FE31  69                 	db	105	;'i'
  3849  00FE32  6D                 	db	109	;'m'
  3850  00FE33  65                 	db	101	;'e'
  3851  00FE34  20                 	db	32
  3852  00FE35  25                 	db	37
  3853  00FE36  6C                 	db	108	;'l'
  3854  00FE37  75                 	db	117	;'u'
  3855  00FE38  2C                 	db	44
  3856  00FE39  20                 	db	32
  3857  00FE3A  25                 	db	37
  3858  00FE3B  6C                 	db	108	;'l'
  3859  00FE3C  75                 	db	117	;'u'
  3860  00FE3D  20                 	db	32
  3861  00FE3E  20                 	db	32
  3862  00FE3F  20                 	db	32
  3863  00FE40  20                 	db	32
  3864  00FE41  20                 	db	32
  3865  00FE42  20                 	db	32
  3866  00FE43  20                 	db	32
  3867  00FE44  00                 	db	0
  3868  00FE45                     STR_56:
  3869                           
  3870                           ; BSR set to: 57
  3871  00FE45  53                 	db	83	;'S'
  3872  00FE46  65                 	db	101	;'e'
  3873  00FE47  6E                 	db	110	;'n'
  3874  00FE48  73                 	db	115	;'s'
  3875  00FE49  6F                 	db	111	;'o'
  3876  00FE4A  72                 	db	114	;'r'
  3877  00FE4B  20                 	db	32
  3878  00FE4C  52                 	db	82	;'R'
  3879  00FE4D  65                 	db	101	;'e'
  3880  00FE4E  61                 	db	97	;'a'
  3881  00FE4F  64                 	db	100	;'d'
  3882  00FE50  69                 	db	105	;'i'
  3883  00FE51  6E                 	db	110	;'n'
  3884  00FE52  67                 	db	103	;'g'
  3885  00FE53  73                 	db	115	;'s'
  3886  00FE54  20                 	db	32
  3887  00FE55  20                 	db	32
  3888  00FE56  20                 	db	32
  3889  00FE57  20                 	db	32
  3890  00FE58  20                 	db	32
  3891  00FE59  20                 	db	32
  3892  00FE5A  00                 	db	0
  3893  00FE5B                     STR_19:
  3894                           
  3895                           ; BSR set to: 57
  3896  00FE5B  43                 	db	67	;'C'
  3897  00FE5C  68                 	db	104	;'h'
  3898  00FE5D  65                 	db	101	;'e'
  3899  00FE5E  63                 	db	99	;'c'
  3900  00FE5F  6B                 	db	107	;'k'
  3901  00FE60  20                 	db	32
  3902  00FE61  33                 	db	51	;'3'
  3903  00FE62  30                 	db	48	;'0'
  3904  00FE63  20                 	db	32
  3905  00FE64  73                 	db	115	;'s'
  3906  00FE65  65                 	db	101	;'e'
  3907  00FE66  63                 	db	99	;'c'
  3908  00FE67  6F                 	db	111	;'o'
  3909  00FE68  6E                 	db	110	;'n'
  3910  00FE69  64                 	db	100	;'d'
  3911  00FE6A  73                 	db	115	;'s'
  3912  00FE6B  20                 	db	32
  3913  00FE6C  20                 	db	32
  3914  00FE6D  20                 	db	32
  3915  00FE6E  20                 	db	32
  3916  00FE6F  20                 	db	32
  3917  00FE70  00                 	db	0
  3918  00FE71                     STR_64:
  3919                           
  3920                           ; BSR set to: 57
  3921  00FE71  5A                 	db	90	;'Z'
  3922  00FE72  65                 	db	101	;'e'
  3923  00FE73  72                 	db	114	;'r'
  3924  00FE74  6F                 	db	111	;'o'
  3925  00FE75  20                 	db	32
  3926  00FE76  4F                 	db	79	;'O'
  3927  00FE77  75                 	db	117	;'u'
  3928  00FE78  74                 	db	116	;'t'
  3929  00FE79  20                 	db	32
  3930  00FE7A  4F                 	db	79	;'O'
  3931  00FE7B  66                 	db	102	;'f'
  3932  00FE7C  20                 	db	32
  3933  00FE7D  52                 	db	82	;'R'
  3934  00FE7E  61                 	db	97	;'a'
  3935  00FE7F  6E                 	db	110	;'n'
  3936  00FE80  67                 	db	103	;'g'
  3937  00FE81  65                 	db	101	;'e'
  3938  00FE82  20                 	db	32
  3939  00FE83  20                 	db	32
  3940  00FE84  20                 	db	32
  3941  00FE85  20                 	db	32
  3942  00FE86  00                 	db	0
  3943  00FE87                     STR_49:
  3944                           
  3945                           ; BSR set to: 57
  3946  00FE87  25                 	db	37
  3947  00FE88  64                 	db	100	;'d'
  3948  00FE89  20                 	db	32
  3949  00FE8A  25                 	db	37
  3950  00FE8B  32                 	db	50	;'2'
  3951  00FE8C  2E                 	db	46
  3952  00FE8D  34                 	db	52	;'4'
  3953  00FE8E  66                 	db	102	;'f'
  3954  00FE8F  2C                 	db	44
  3955  00FE90  20                 	db	32
  3956  00FE91  25                 	db	37
  3957  00FE92  64                 	db	100	;'d'
  3958  00FE93  20                 	db	32
  3959  00FE94  20                 	db	32
  3960  00FE95  54                 	db	84	;'T'
  3961  00FE96  52                 	db	82	;'R'
  3962  00FE97  49                 	db	73	;'I'
  3963  00FE98  4D                 	db	77	;'M'
  3964  00FE99  20                 	db	32
  3965  00FE9A  20                 	db	32
  3966  00FE9B  20                 	db	32
  3967  00FE9C  00                 	db	0
  3968  00FE9D                     STR_58:
  3969                           
  3970                           ; BSR set to: 57
  3971  00FE9D  53                 	db	83	;'S'
  3972  00FE9E  74                 	db	116	;'t'
  3973  00FE9F  61                 	db	97	;'a'
  3974  00FEA0  62                 	db	98	;'b'
  3975  00FEA1  69                 	db	105	;'i'
  3976  00FEA2  6C                 	db	108	;'l'
  3977  00FEA3  69                 	db	105	;'i'
  3978  00FEA4  74                 	db	116	;'t'
  3979  00FEA5  79                 	db	121	;'y'
  3980  00FEA6  20                 	db	32
  3981  00FEA7  63                 	db	99	;'c'
  3982  00FEA8  6C                 	db	108	;'l'
  3983  00FEA9  6F                 	db	111	;'o'
  3984  00FEAA  63                 	db	99	;'c'
  3985  00FEAB  6B                 	db	107	;'k'
  3986  00FEAC  20                 	db	32
  3987  00FEAD  25                 	db	37
  3988  00FEAE  64                 	db	100	;'d'
  3989  00FEAF  20                 	db	32
  3990  00FEB0  20                 	db	32
  3991  00FEB1  20                 	db	32
  3992  00FEB2  00                 	db	0
  3993  00FEB3                     STR_25:
  3994                           
  3995                           ; BSR set to: 57
  3996  00FEB3  48                 	db	72	;'H'
  3997  00FEB4  69                 	db	105	;'i'
  3998  00FEB5  73                 	db	115	;'s'
  3999  00FEB6  74                 	db	116	;'t'
  4000  00FEB7  6F                 	db	111	;'o'
  4001  00FEB8  72                 	db	114	;'r'
  4002  00FEB9  79                 	db	121	;'y'
  4003  00FEBA  20                 	db	32
  4004  00FEBB  44                 	db	68	;'D'
  4005  00FEBC  61                 	db	97	;'a'
  4006  00FEBD  74                 	db	116	;'t'
  4007  00FEBE  61                 	db	97	;'a'
  4008  00FEBF  20                 	db	32
  4009  00FEC0  20                 	db	32
  4010  00FEC1  53                 	db	83	;'S'
  4011  00FEC2  61                 	db	97	;'a'
  4012  00FEC3  76                 	db	118	;'v'
  4013  00FEC4  65                 	db	101	;'e'
  4014  00FEC5  64                 	db	100	;'d'
  4015  00FEC6  20                 	db	32
  4016  00FEC7  20                 	db	32
  4017  00FEC8  00                 	db	0
  4018  00FEC9                     
  4019                           ; BSR set to: 57
  4020  00FEC9  48                 	db	72	;'H'
  4021  00FECA  45                 	db	69	;'E'
  4022  00FECB  4C                 	db	76	;'L'
  4023  00FECC  50                 	db	80	;'P'
  4024  00FECD  20                 	db	32
  4025  00FECE  25                 	db	37
  4026  00FECF  73                 	db	115	;'s'
  4027  00FED0  20                 	db	32
  4028  00FED1  20                 	db	32
  4029  00FED2  20                 	db	32
  4030  00FED3  20                 	db	32
  4031  00FED4  20                 	db	32
  4032  00FED5  20                 	db	32
  4033  00FED6  20                 	db	32
  4034  00FED7  20                 	db	32
  4035  00FED8  20                 	db	32
  4036  00FED9  20                 	db	32
  4037  00FEDA  20                 	db	32
  4038  00FEDB  20                 	db	32
  4039  00FEDC  20                 	db	32
  4040  00FEDD  00                 	db	0
  4041  00FEDE                     
  4042                           ; BSR set to: 57
  4043  00FEDE  44                 	db	68	;'D'
  4044  00FEDF  49                 	db	73	;'I'
  4045  00FEE0  53                 	db	83	;'S'
  4046  00FEE1  50                 	db	80	;'P'
  4047  00FEE2  4C                 	db	76	;'L'
  4048  00FEE3  41                 	db	65	;'A'
  4049  00FEE4  59                 	db	89	;'Y'
  4050  00FEE5  20                 	db	32
  4051  00FEE6  25                 	db	37
  4052  00FEE7  73                 	db	115	;'s'
  4053  00FEE8  20                 	db	32
  4054  00FEE9  20                 	db	32
  4055  00FEEA  20                 	db	32
  4056  00FEEB  20                 	db	32
  4057  00FEEC  20                 	db	32
  4058  00FEED  20                 	db	32
  4059  00FEEE  20                 	db	32
  4060  00FEEF  20                 	db	32
  4061  00FEF0  20                 	db	32
  4062  00FEF1  20                 	db	32
  4063  00FEF2  00                 	db	0
  4064  00FEF3                     STR_4:
  4065                           
  4066                           ; BSR set to: 57
  4067  00FEF3  20                 	db	32
  4068  00FEF4  4E                 	db	78	;'N'
  4069  00FEF5  53                 	db	83	;'S'
  4070  00FEF6  41                 	db	65	;'A'
  4071  00FEF7  53                 	db	83	;'S'
  4072  00FEF8  50                 	db	80	;'P'
  4073  00FEF9  4F                 	db	79	;'O'
  4074  00FEFA  4F                 	db	79	;'O'
  4075  00FEFB  4B                 	db	75	;'K'
  4076  00FEFC  20                 	db	32
  4077  00FEFD  20                 	db	32
  4078  00FEFE  20                 	db	32
  4079  00FEFF  20                 	db	32
  4080  00FF00  20                 	db	32
  4081  00FF01  20                 	db	32
  4082  00FF02  20                 	db	32
  4083  00FF03  20                 	db	32
  4084  00FF04  20                 	db	32
  4085  00FF05  20                 	db	32
  4086  00FF06  20                 	db	32
  4087  00FF07  00                 	db	0
  4088  00FF08                     STR_2:
  4089                           
  4090                           ; BSR set to: 57
  4091  00FF08  20                 	db	32
  4092  00FF09  56                 	db	86	;'V'
  4093  00FF0A  65                 	db	101	;'e'
  4094  00FF0B  72                 	db	114	;'r'
  4095  00FF0C  73                 	db	115	;'s'
  4096  00FF0D  69                 	db	105	;'i'
  4097  00FF0E  6F                 	db	111	;'o'
  4098  00FF0F  6E                 	db	110	;'n'
  4099  00FF10  20                 	db	32
  4100  00FF11  25                 	db	37
  4101  00FF12  73                 	db	115	;'s'
  4102  00FF13  20                 	db	32
  4103  00FF14  20                 	db	32
  4104  00FF15  20                 	db	32
  4105  00FF16  20                 	db	32
  4106  00FF17  20                 	db	32
  4107  00FF18  20                 	db	32
  4108  00FF19  20                 	db	32
  4109  00FF1A  20                 	db	32
  4110  00FF1B  20                 	db	32
  4111  00FF1C  00                 	db	0
  4112  00FF1D                     STR_1:
  4113                           
  4114                           ; BSR set to: 57
  4115  00FF1D  20                 	db	32
  4116  00FF1E  4D                 	db	77	;'M'
  4117  00FF1F  42                 	db	66	;'B'
  4118  00FF20  4D                 	db	77	;'M'
  4119  00FF21  43                 	db	67	;'C'
  4120  00FF22  20                 	db	32
  4121  00FF23  53                 	db	83	;'S'
  4122  00FF24  4F                 	db	79	;'O'
  4123  00FF25  4C                 	db	76	;'L'
  4124  00FF26  41                 	db	65	;'A'
  4125  00FF27  52                 	db	82	;'R'
  4126  00FF28  4D                 	db	77	;'M'
  4127  00FF29  4F                 	db	79	;'O'
  4128  00FF2A  4E                 	db	78	;'N'
  4129  00FF2B  20                 	db	32
  4130  00FF2C  20                 	db	32
  4131  00FF2D  20                 	db	32
  4132  00FF2E  20                 	db	32
  4133  00FF2F  20                 	db	32
  4134  00FF30  20                 	db	32
  4135  00FF31  00                 	db	0
  4136  00FF32                     STR_10:
  4137                           
  4138                           ; BSR set to: 57
  4139  00FF32  52                 	db	82	;'R'
  4140  00FF33  65                 	db	101	;'e'
  4141  00FF34  61                 	db	97	;'a'
  4142  00FF35  64                 	db	100	;'d'
  4143  00FF36  20                 	db	32
  4144  00FF37  45                 	db	69	;'E'
  4145  00FF38  45                 	db	69	;'E'
  4146  00FF39  50                 	db	80	;'P'
  4147  00FF3A  52                 	db	82	;'R'
  4148  00FF3B  4F                 	db	79	;'O'
  4149  00FF3C  4D                 	db	77	;'M'
  4150  00FF3D  20                 	db	32
  4151  00FF3E  44                 	db	68	;'D'
  4152  00FF3F  41                 	db	65	;'A'
  4153  00FF40  54                 	db	84	;'T'
  4154  00FF41  41                 	db	65	;'A'
  4155  00FF42  20                 	db	32
  4156  00FF43  20                 	db	32
  4157  00FF44  20                 	db	32
  4158  00FF45  20                 	db	32
  4159  00FF46  00                 	db	0
  4160  00FF47                     STR_55:
  4161                           
  4162                           ; BSR set to: 57
  4163  00FF47  52                 	db	82	;'R'
  4164  00FF48  65                 	db	101	;'e'
  4165  00FF49  6C                 	db	108	;'l'
  4166  00FF4A  65                 	db	101	;'e'
  4167  00FF4B  61                 	db	97	;'a'
  4168  00FF4C  73                 	db	115	;'s'
  4169  00FF4D  65                 	db	101	;'e'
  4170  00FF4E  20                 	db	32
  4171  00FF4F  62                 	db	98	;'b'
  4172  00FF50  75                 	db	117	;'u'
  4173  00FF51  74                 	db	116	;'t'
  4174  00FF52  74                 	db	116	;'t'
  4175  00FF53  6F                 	db	111	;'o'
  4176  00FF54  6E                 	db	110	;'n'
  4177  00FF55  20                 	db	32
  4178  00FF56  25                 	db	37
  4179  00FF57  63                 	db	99	;'c'
  4180  00FF58  20                 	db	32
  4181  00FF59  20                 	db	32
  4182  00FF5A  20                 	db	32
  4183  00FF5B  00                 	db	0
  4184  00FF5C                     STR_11:
  4185                           
  4186                           ; BSR set to: 57
  4187  00FF5C  49                 	db	73	;'I'
  4188  00FF5D  6E                 	db	110	;'n'
  4189  00FF5E  76                 	db	118	;'v'
  4190  00FF5F  61                 	db	97	;'a'
  4191  00FF60  6C                 	db	108	;'l'
  4192  00FF61  69                 	db	105	;'i'
  4193  00FF62  64                 	db	100	;'d'
  4194  00FF63  20                 	db	32
  4195  00FF64  45                 	db	69	;'E'
  4196  00FF65  45                 	db	69	;'E'
  4197  00FF66  50                 	db	80	;'P'
  4198  00FF67  52                 	db	82	;'R'
  4199  00FF68  4F                 	db	79	;'O'
  4200  00FF69  4D                 	db	77	;'M'
  4201  00FF6A  20                 	db	32
  4202  00FF6B  44                 	db	68	;'D'
  4203  00FF6C  41                 	db	65	;'A'
  4204  00FF6D  54                 	db	84	;'T'
  4205  00FF6E  41                 	db	65	;'A'
  4206  00FF6F  20                 	db	32
  4207  00FF70  00                 	db	0
  4208  00FF71                     STR_72:
  4209                           
  4210                           ; BSR set to: 57
  4211  00FF71  48                 	db	72	;'H'
  4212  00FF72  45                 	db	69	;'E'
  4213  00FF73  4C                 	db	76	;'L'
  4214  00FF74  50                 	db	80	;'P'
  4215  00FF75  20                 	db	32
  4216  00FF76  25                 	db	37
  4217  00FF77  73                 	db	115	;'s'
  4218  00FF78  20                 	db	32
  4219  00FF79  20                 	db	32
  4220  00FF7A  20                 	db	32
  4221  00FF7B  20                 	db	32
  4222  00FF7C  20                 	db	32
  4223  00FF7D  20                 	db	32
  4224  00FF7E  20                 	db	32
  4225  00FF7F  20                 	db	32
  4226  00FF80  20                 	db	32
  4227  00FF81  20                 	db	32
  4228  00FF82  20                 	db	32
  4229  00FF83  00                 	db	0
  4230  00FF84                     
  4231                           ; BSR set to: 57
  4232  00FF84  25                 	db	37
  4233  00FF85  64                 	db	100	;'d'
  4234  00FF86  20                 	db	32
  4235  00FF87  25                 	db	37
  4236  00FF88  32                 	db	50	;'2'
  4237  00FF89  2E                 	db	46
  4238  00FF8A  34                 	db	52	;'4'
  4239  00FF8B  66                 	db	102	;'f'
  4240  00FF8C  2C                 	db	44
  4241  00FF8D  20                 	db	32
  4242  00FF8E  25                 	db	37
  4243  00FF8F  64                 	db	100	;'d'
  4244  00FF90  20                 	db	32
  4245  00FF91  20                 	db	32
  4246  00FF92  20                 	db	32
  4247  00FF93  23                 	db	35
  4248  00FF94  20                 	db	32
  4249  00FF95  00                 	db	0
  4250  00FF96                     STR_28:
  4251                           
  4252                           ; BSR set to: 57
  4253  00FF96  25                 	db	37
  4254  00FF97  64                 	db	100	;'d'
  4255  00FF98  20                 	db	32
  4256  00FF99  25                 	db	37
  4257  00FF9A  32                 	db	50	;'2'
  4258  00FF9B  2E                 	db	46
  4259  00FF9C  34                 	db	52	;'4'
  4260  00FF9D  66                 	db	102	;'f'
  4261  00FF9E  20                 	db	32
  4262  00FF9F  20                 	db	32
  4263  00FFA0  20                 	db	32
  4264  00FFA1  25                 	db	37
  4265  00FFA2  64                 	db	100	;'d'
  4266  00FFA3  20                 	db	32
  4267  00FFA4  20                 	db	32
  4268  00FFA5  20                 	db	32
  4269  00FFA6  00                 	db	0
  4270  00FFA7                     STR_76:
  4271                           
  4272                           ; BSR set to: 57
  4273  00FFA7  76                 	db	118	;'v'
  4274  00FFA8  74                 	db	116	;'t'
  4275  00FFA9  65                 	db	101	;'e'
  4276  00FFAA  72                 	db	114	;'r'
  4277  00FFAB  6D                 	db	109	;'m'
  4278  00FFAC  20                 	db	32
  4279  00FFAD  25                 	db	37
  4280  00FFAE  78                 	db	120	;'x'
  4281  00FFAF  3A                 	db	58	;':'
  4282  00FFB0  25                 	db	37
  4283  00FFB1  78                 	db	120	;'x'
  4284  00FFB2  20                 	db	32
  4285  00FFB3  20                 	db	32
  4286  00FFB4  20                 	db	32
  4287  00FFB5  00                 	db	0
  4288  00FFB6                     STR_70:
  4289                           
  4290                           ; BSR set to: 57
  4291  00FFB6  46                 	db	70	;'F'
  4292  00FFB7  65                 	db	101	;'e'
  4293  00FFB8  62                 	db	98	;'b'
  4294  00FFB9  20                 	db	32
  4295  00FFBA  31                 	db	49	;'1'
  4296  00FFBB  38                 	db	56	;'8'
  4297  00FFBC  20                 	db	32
  4298  00FFBD  32                 	db	50	;'2'
  4299  00FFBE  30                 	db	48	;'0'
  4300  00FFBF  32                 	db	50	;'2'
  4301  00FFC0  30                 	db	48	;'0'
  4302  00FFC1  00                 	db	0
  4303  00FFC2                     STR_74:
  4304                           
  4305                           ; BSR set to: 57
  4306  00FFC2  25                 	db	37
  4307  00FFC3  73                 	db	115	;'s'
  4308  00FFC4  20                 	db	32
  4309  00FFC5  20                 	db	32
  4310  00FFC6  20                 	db	32
  4311  00FFC7  20                 	db	32
  4312  00FFC8  20                 	db	32
  4313  00FFC9  20                 	db	32
  4314  00FFCA  20                 	db	32
  4315  00FFCB  00                 	db	0
  4316  00FFCC                     STR_71:
  4317                           
  4318                           ; BSR set to: 57
  4319  00FFCC  31                 	db	49	;'1'
  4320  00FFCD  39                 	db	57	;'9'
  4321  00FFCE  3A                 	db	58	;':'
  4322  00FFCF  33                 	db	51	;'3'
  4323  00FFD0  39                 	db	57	;'9'
  4324  00FFD1  3A                 	db	58	;':'
  4325  00FFD2  33                 	db	51	;'3'
  4326  00FFD3  34                 	db	52	;'4'
  4327  00FFD4  00                 	db	0
  4328  00FFD5                     STR_3:
  4329                           
  4330                           ; BSR set to: 57
  4331  00FFD5  31                 	db	49	;'1'
  4332  00FFD6  2E                 	db	46
  4333  00FFD7  32                 	db	50	;'2'
  4334  00FFD8  36                 	db	54	;'6'
  4335  00FFD9  00                 	db	0
  4336  00FFDA                     STR_91:
  4337                           
  4338                           ; BSR set to: 57
  4339  00FFDA  49                 	db	73	;'I'
  4340  00FFDB  4E                 	db	78	;'N'
  4341  00FFDC  46                 	db	70	;'F'
  4342  00FFDD  00                 	db	0
  4343  00FFDE                     STR_95:
  4344                           
  4345                           ; BSR set to: 57
  4346  00FFDE  4E                 	db	78	;'N'
  4347  00FFDF  41                 	db	65	;'A'
  4348  00FFE0  4E                 	db	78	;'N'
  4349  00FFE1  00                 	db	0
  4350  00FFE2                     STR_92:
  4351                           
  4352                           ; BSR set to: 57
  4353  00FFE2  69                 	db	105	;'i'
  4354  00FFE3  6E                 	db	110	;'n'
  4355  00FFE4  66                 	db	102	;'f'
  4356  00FFE5  00                 	db	0
  4357  00FFE6                     STR_96:
  4358                           
  4359                           ; BSR set to: 57
  4360  00FFE6  6E                 	db	110	;'n'
  4361  00FFE7  61                 	db	97	;'a'
  4362  00FFE8  6E                 	db	110	;'n'
  4363  00FFE9  00                 	db	0
  4364  00FFEA                     STR_122:
  4365                           
  4366                           ; BSR set to: 57
  4367  00FFEA  6C                 	db	108	;'l'
  4368  00FFEB  58                 	db	88	;'X'
  4369  00FFEC  00                 	db	0
  4370  00FFED                     STR_99:
  4371                           
  4372                           ; BSR set to: 57
  4373  00FFED  6C                 	db	108	;'l'
  4374  00FFEE  64                 	db	100	;'d'
  4375  00FFEF  00                 	db	0
  4376  00FFF0                     STR_108:
  4377                           
  4378                           ; BSR set to: 57
  4379  00FFF0  6C                 	db	108	;'l'
  4380  00FFF1  66                 	db	102	;'f'
  4381  00FFF2  00                 	db	0
  4382  00FFF3                     STR_103:
  4383                           
  4384                           ; BSR set to: 57
  4385  00FFF3  6C                 	db	108	;'l'
  4386  00FFF4  69                 	db	105	;'i'
  4387  00FFF5  00                 	db	0
  4388  00FFF6                     STR_113:
  4389                           
  4390                           ; BSR set to: 57
  4391  00FFF6  6C                 	db	108	;'l'
  4392  00FFF7  75                 	db	117	;'u'
  4393  00FFF8  00                 	db	0
  4394  00FFF9                     STR_118:
  4395                           
  4396                           ; BSR set to: 57
  4397  00FFF9  6C                 	db	108	;'l'
  4398  00FFFA  78                 	db	120	;'x'
  4399  00FFFB  00                 	db	0
  4400  00FFFC                     STR_69:
  4401                           
  4402                           ; BSR set to: 57
  4403  00FFFC  25                 	db	37
  4404  00FFFD  73                 	db	115	;'s'
  4405  00FFFE  00                 	db	0
  4406  0000                     
  4407                           ; #config settings
  4408  00FFFF  00                 	db	0	; dummy byte at the end
  4409  0000                     
  4410                           	psect	cinit
  4411  01F8FC                     __pcinit:
  4412                           	opt callstack 0
  4413  01F8FC                     start_initialization:
  4414                           	opt callstack 0
  4415  01F8FC                     __initialization:
  4416                           	opt callstack 0
  4417                           
  4418                           ; Initialize objects allocated to BIGRAM (832 bytes)
  4419                           ; load TBLPTR registers with __pidataBIGRAM
  4420  01F8FC  0EF0               	movlw	low __pidataBIGRAM
  4421  01F8FE  6EF6               	movwf	tblptrl,c
  4422  01F900  0EA2               	movlw	high __pidataBIGRAM
  4423  01F902  6EF7               	movwf	tblptrh,c
  4424  01F904  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  4425  01F906  6EF8               	movwf	tblptru,c
  4426  01F908  EE01  F2FF         	lfsr	0,__pdataBIGRAM
  4427  01F90C  EE20 F340          	lfsr	2,832
  4428  01F910                     copy_data0:
  4429  01F910  0009               	tblrd		*+
  4430  01F912  006F FFD7 FFEE     	movff	tablat,postinc0
  4431  01F918  50DD               	movf	postdec2,w,c
  4432  01F91A  50D9               	movf	fsr2l,w,c
  4433  01F91C  E1F9               	bnz	copy_data0
  4434  01F91E  50DA               	movf	fsr2h,w,c
  4435  01F920  E1F7               	bnz	copy_data0
  4436                           
  4437                           ; Initialize objects allocated to BANK2 (188 bytes)
  4438                           ; load TBLPTR registers with __pidataBANK2
  4439  01F922  0E1C               	movlw	low __pidataBANK2
  4440  01F924  6EF6               	movwf	tblptrl,c
  4441  01F926  0E03               	movlw	high __pidataBANK2
  4442  01F928  6EF7               	movwf	tblptrh,c
  4443  01F92A  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  4444  01F92C  6EF8               	movwf	tblptru,c
  4445  01F92E  EE00  F200         	lfsr	0,__pdataBANK2
  4446  01F932  EE20 F0BC          	lfsr	2,188
  4447  01F936                     copy_data1:
  4448  01F936  0009               	tblrd		*+
  4449  01F938  006F FFD7 FFEE     	movff	tablat,postinc0
  4450  01F93E  50DD               	movf	postdec2,w,c
  4451  01F940  50D9               	movf	fsr2l,w,c
  4452  01F942  E1F9               	bnz	copy_data1
  4453                           
  4454                           ; Initialize objects allocated to BANK1 (164 bytes)
  4455                           ; load TBLPTR registers with __pidataBANK1
  4456  01F944  0EAA               	movlw	low __pidataBANK1
  4457  01F946  6EF6               	movwf	tblptrl,c
  4458  01F948  0E08               	movlw	high __pidataBANK1
  4459  01F94A  6EF7               	movwf	tblptrh,c
  4460  01F94C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  4461  01F94E  6EF8               	movwf	tblptru,c
  4462  01F950  EE00  F100         	lfsr	0,__pdataBANK1
  4463  01F954  EE20 F0A4          	lfsr	2,164
  4464  01F958                     copy_data2:
  4465  01F958  0009               	tblrd		*+
  4466  01F95A  006F FFD7 FFEE     	movff	tablat,postinc0
  4467  01F960  50DD               	movf	postdec2,w,c
  4468  01F962  50D9               	movf	fsr2l,w,c
  4469  01F964  E1F9               	bnz	copy_data2
  4470                           
  4471                           ; Clear objects allocated to BIGRAM (642 bytes)
  4472  01F966  EE02  F23F         	lfsr	0,__pbssBIGRAM
  4473  01F96A  EE20 F282          	lfsr	2,642
  4474  01F96E                     clear_0:
  4475  01F96E  6AEE               	clrf	postinc0,c
  4476  01F970  50DD               	movf	postdec2,w,c
  4477  01F972  50D9               	movf	fsr2l,w,c
  4478  01F974  E1FC               	bnz	clear_0
  4479  01F976  50DA               	movf	fsr2h,w,c
  4480  01F978  E1FA               	bnz	clear_0
  4481                           
  4482                           ; Clear objects allocated to BANK6 (255 bytes)
  4483  01F97A  EE01  F200         	lfsr	0,__pbssBANK6
  4484  01F97E  EE20 F0FF          	lfsr	2,255
  4485  01F982                     clear_1:
  4486  01F982  6AEE               	clrf	postinc0,c
  4487  01F984  50DD               	movf	postdec2,w,c
  4488  01F986  50D9               	movf	fsr2l,w,c
  4489  01F988  E1FC               	bnz	clear_1
  4490  01F98A  50DA               	movf	fsr2h,w,c
  4491  01F98C  E1FA               	bnz	clear_1
  4492                           
  4493                           ; Clear objects allocated to BANK5 (134 bytes)
  4494  01F98E  EE01  F100         	lfsr	0,__pbssBANK5
  4495  01F992  0E86               	movlw	134
  4496  01F994                     clear_2:
  4497  01F994  6AEE               	clrf	postinc0,c
  4498  01F996  06E8               	decf	wreg,f,c
  4499  01F998  E1FD               	bnz	clear_2
  4500                           
  4501                           ; Clear objects allocated to BANK4 (219 bytes)
  4502  01F99A  EE01  F000         	lfsr	0,__pbssBANK4
  4503  01F99E  0EDB               	movlw	219
  4504  01F9A0                     clear_3:
  4505  01F9A0  6AEE               	clrf	postinc0,c
  4506  01F9A2  06E8               	decf	wreg,f,c
  4507  01F9A4  E1FD               	bnz	clear_3
  4508                           
  4509                           ; Clear objects allocated to BANK3 (247 bytes)
  4510  01F9A6  EE00  F300         	lfsr	0,__pbssBANK3
  4511  01F9AA  0EF7               	movlw	247
  4512  01F9AC                     clear_4:
  4513  01F9AC  6AEE               	clrf	postinc0,c
  4514  01F9AE  06E8               	decf	wreg,f,c
  4515  01F9B0  E1FD               	bnz	clear_4
  4516                           
  4517                           ; Clear objects allocated to BANK2 (42 bytes)
  4518  01F9B2  EE00  F2BC         	lfsr	0,__pbssBANK2
  4519  01F9B6  0E2A               	movlw	42
  4520  01F9B8                     clear_5:
  4521  01F9B8  6AEE               	clrf	postinc0,c
  4522  01F9BA  06E8               	decf	wreg,f,c
  4523  01F9BC  E1FD               	bnz	clear_5
  4524                           
  4525                           ; Clear objects allocated to BANK1 (89 bytes)
  4526  01F9BE  EE00  F1A4         	lfsr	0,__pbssBANK1
  4527  01F9C2  0E59               	movlw	89
  4528  01F9C4                     clear_6:
  4529  01F9C4  6AEE               	clrf	postinc0,c
  4530  01F9C6  06E8               	decf	wreg,f,c
  4531  01F9C8  E1FD               	bnz	clear_6
  4532                           
  4533                           ; Clear objects allocated to BANK0 (133 bytes)
  4534  01F9CA  EE00  F060         	lfsr	0,__pbssBANK0
  4535  01F9CE  0E85               	movlw	133
  4536  01F9D0                     clear_7:
  4537  01F9D0  6AEE               	clrf	postinc0,c
  4538  01F9D2  06E8               	decf	wreg,f,c
  4539  01F9D4  E1FD               	bnz	clear_7
  4540                           
  4541                           ; Clear objects allocated to COMRAM (14 bytes)
  4542  01F9D6  EE00  F04A         	lfsr	0,__pbssCOMRAM
  4543  01F9DA  0E0E               	movlw	14
  4544  01F9DC                     clear_8:
  4545  01F9DC  6AEE               	clrf	postinc0,c
  4546  01F9DE  06E8               	decf	wreg,f,c
  4547  01F9E0  E1FD               	bnz	clear_8
  4548                           
  4549                           ;
  4550                           ; Setup IVTBASE
  4551                           ;
  4552  01F9E2  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  4553  01F9E4  6ED5               	movwf	213,c
  4554  01F9E6  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  4555  01F9E8  6ED6               	movwf	214,c
  4556  01F9EA  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  4557  01F9EC  6ED7               	movwf	215,c
  4558  01F9EE                     end_of_initialization:
  4559                           	opt callstack 0
  4560  01F9EE                     __end_of__initialization:
  4561                           	opt callstack 0
  4562  01F9EE  0100               	movlb	0
  4563  01F9F0  EF00  F080         	goto	_main	;jump to C main() function
  4564                           
  4565                           	psect	bssCOMRAM
  4566  00004A                     __pbssCOMRAM:
  4567                           	opt callstack 0
  4568  00004A                     _width:
  4569                           	opt callstack 0
  4570  00004A                     	ds	2
  4571  00004C                     _prec:
  4572                           	opt callstack 0
  4573  00004C                     	ds	2
  4574  00004E                     _flags:
  4575                           	opt callstack 0
  4576  00004E                     	ds	2
  4577  000050                     calc_bsoc@log_update_wait:
  4578                           	opt callstack 0
  4579  000050                     	ds	1
  4580  000051                     check_day_time@day_delay:
  4581                           	opt callstack 0
  4582  000051                     	ds	1
  4583  000052                     dac_spi_control@init:
  4584                           	opt callstack 0
  4585  000052                     	ds	1
  4586  000053                     display_history@bwait:
  4587                           	opt callstack 0
  4588  000053                     	ds	1
  4589  000054                     _uart2RxHead:
  4590                           	opt callstack 0
  4591  000054                     	ds	1
  4592  000055                     _uart2TxBufferRemaining:
  4593                           	opt callstack 0
  4594  000055                     	ds	1
  4595  000056                     _uart2TxTail:
  4596                           	opt callstack 0
  4597  000056                     	ds	1
  4598  000057                     _uart1RxHead:
  4599                           	opt callstack 0
  4600  000057                     	ds	1
  4601                           
  4602                           	psect	bssBANK0
  4603  000060                     __pbssBANK0:
  4604                           	opt callstack 0
  4605  000060                     _spi_link:
  4606                           	opt callstack 0
  4607  000060                     	ds	12
  4608  00006C                     ___tzname:
  4609                           	opt callstack 0
  4610  00006C                     	ds	4
  4611  000070                     ___timezone:
  4612                           	opt callstack 0
  4613  000070                     	ds	4
  4614  000074                     floorf@F524:
  4615                           	opt callstack 0
  4616  000074                     	ds	4
  4617  000078                     fabsf@F463:
  4618                           	opt callstack 0
  4619  000078                     	ds	4
  4620  00007C                     ___fpclassifyf@F463:
  4621                           	opt callstack 0
  4622  00007C                     	ds	4
  4623  000080                     calc_ror_data@bcror:
  4624                           	opt callstack 0
  4625  000080                     	ds	4
  4626  000084                     calc_ror_data@bvror:
  4627                           	opt callstack 0
  4628  000084                     	ds	4
  4629  000088                     calc_model_data@bcror:
  4630                           	opt callstack 0
  4631  000088                     	ds	4
  4632  00008C                     calc_model_data@bvror:
  4633                           	opt callstack 0
  4634  00008C                     	ds	4
  4635  000090                     wdtdelay@dcount:
  4636                           	opt callstack 0
  4637  000090                     	ds	4
  4638  000094                     _P:
  4639                           	opt callstack 0
  4640  000094                     	ds	4
  4641  000098                     _TMR3_InterruptHandler:
  4642                           	opt callstack 0
  4643  000098                     	ds	3
  4644  00009B                     _TMR5_InterruptHandler:
  4645                           	opt callstack 0
  4646  00009B                     	ds	3
  4647  00009E                     _TMR6_InterruptHandler:
  4648                           	opt callstack 0
  4649  00009E                     	ds	3
  4650  0000A1                     _ADCC_ADTI_InterruptHandler:
  4651                           	opt callstack 0
  4652  0000A1                     	ds	3
  4653  0000A4                     _ADCC_ADI_InterruptHandler:
  4654                           	opt callstack 0
  4655  0000A4                     	ds	3
  4656  0000A7                     _UART1_RxInterruptHandler:
  4657                           	opt callstack 0
  4658  0000A7                     	ds	3
  4659  0000AA                     _UART2_TxInterruptHandler:
  4660                           	opt callstack 0
  4661  0000AA                     	ds	3
  4662  0000AD                     _UART2_RxInterruptHandler:
  4663                           	opt callstack 0
  4664  0000AD                     	ds	3
  4665  0000B0                     _INT1_InterruptHandler:
  4666                           	opt callstack 0
  4667  0000B0                     	ds	3
  4668  0000B3                     _INT0_InterruptHandler:
  4669                           	opt callstack 0
  4670  0000B3                     	ds	3
  4671  0000B6                     _dst_off:
  4672                           	opt callstack 0
  4673  0000B6                     	ds	2
  4674  0000B8                     ___daylight:
  4675                           	opt callstack 0
  4676  0000B8                     	ds	2
  4677  0000BA                     _nout:
  4678                           	opt callstack 0
  4679  0000BA                     	ds	2
  4680  0000BC                     _t_mbmc:
  4681                           	opt callstack 0
  4682  0000BC                     	ds	2
  4683  0000BE                     TMR3_ISR@CountCallBack:
  4684                           	opt callstack 0
  4685  0000BE                     	ds	2
  4686  0000C0                     _timer3ReloadVal:
  4687                           	opt callstack 0
  4688  0000C0                     	ds	2
  4689  0000C2                     TMR5_ISR@CountCallBack:
  4690                           	opt callstack 0
  4691  0000C2                     	ds	2
  4692  0000C4                     _timer5ReloadVal:
  4693                           	opt callstack 0
  4694  0000C4                     	ds	2
  4695  0000C6                     esr_check@esr_state:
  4696                           	opt callstack 0
  4697  0000C6                     	ds	1
  4698  0000C7                     dac_spi_control@SB:
  4699                           	opt callstack 0
  4700  0000C7                     	ds	1
  4701  0000C8                     dac_spi_control@SC:
  4702                           	opt callstack 0
  4703  0000C8                     	ds	1
  4704  0000C9                     dac_spi_control@S2:
  4705                           	opt callstack 0
  4706  0000C9                     	ds	1
  4707  0000CA                     dac_spi_control@S1:
  4708                           	opt callstack 0
  4709  0000CA                     	ds	1
  4710  0000CB                     dac_spi_control@S0:
  4711                           	opt callstack 0
  4712  0000CB                     	ds	1
  4713  0000CC                     _mode_sw:
  4714                           	opt callstack 0
  4715  0000CC                     	ds	1
  4716  0000CD                     _uart2RxCount:
  4717                           	opt callstack 0
  4718  0000CD                     	ds	1
  4719  0000CE                     _uart2RxTail:
  4720                           	opt callstack 0
  4721  0000CE                     	ds	1
  4722  0000CF                     _uart2TxHead:
  4723                           	opt callstack 0
  4724  0000CF                     	ds	1
  4725  0000D0                     _uart1RxCount:
  4726                           	opt callstack 0
  4727  0000D0                     	ds	1
  4728  0000D1                     _uart1RxTail:
  4729                           	opt callstack 0
  4730  0000D1                     	ds	1
  4731  0000D2                     time@current_time:
  4732                           	opt callstack 0
  4733  0000D2                     	ds	8
  4734  0000DA                     _pclock:
  4735                           	opt callstack 0
  4736  0000DA                     	ds	8
  4737  0000E2                     _crcObj:
  4738                           	opt callstack 0
  4739  0000E2                     	ds	3
  4740                           
  4741                           	psect	bssBANK1
  4742  0001A4                     __pbssBANK1:
  4743                           	opt callstack 0
  4744  0001A4                     _S:
  4745                           	opt callstack 0
  4746  0001A4                     	ds	41
  4747  0001CD                     spinners@s:
  4748                           	opt callstack 0
  4749  0001CD                     	ds	6
  4750  0001D3                     _lock:
  4751                           	opt callstack 0
  4752  0001D3                     	ds	4
  4753  0001D7                     _utctime:
  4754                           	opt callstack 0
  4755  0001D7                     	ds	4
  4756  0001DB                     _r1:
  4757                           	opt callstack 0
  4758  0001DB                     	ds	10
  4759  0001E5                     _r0:
  4760                           	opt callstack 0
  4761  0001E5                     	ds	10
  4762  0001EF                     _dst_name:
  4763                           	opt callstack 0
  4764  0001EF                     	ds	7
  4765  0001F6                     _std_name:
  4766                           	opt callstack 0
  4767  0001F6                     	ds	7
  4768                           
  4769                           	psect	dataBANK1
  4770  000100                     __pdataBANK1:
  4771                           	opt callstack 0
  4772  000100                     _R:
  4773                           	opt callstack 0
  4774  000100                     	ds	155
  4775  00019B                     _H:
  4776                           	opt callstack 0
  4777  00019B                     	ds	9
  4778                           
  4779                           	psect	bssBANK2
  4780  0002BC                     __pbssBANK2:
  4781                           	opt callstack 0
  4782  0002BC                     _tickCount:
  4783                           	opt callstack 0
  4784  0002BC                     	ds	26
  4785  0002D6                     _uart1RxBuffer:
  4786                           	opt callstack 0
  4787  0002D6                     	ds	8
  4788  0002DE                     _seed:
  4789                           	opt callstack 0
  4790  0002DE                     	ds	8
  4791                           
  4792                           	psect	dataBANK2
  4793  000200                     __pdataBANK2:
  4794                           	opt callstack 0
  4795  000200                     stoa@F1166:
  4796                           	opt callstack 0
  4797  000200                     	ds	7
  4798  000207                     _V:
  4799                           	opt callstack 0
  4800  000207                     	ds	181
  4801                           
  4802                           	psect	bssBANK3
  4803  000300                     __pbssBANK3:
  4804                           	opt callstack 0
  4805  000300                     lp_filter@smooth:
  4806                           	opt callstack 0
  4807  000300                     	ds	84
  4808  000354                     _dbuf:
  4809                           	opt callstack 0
  4810  000354                     	ds	80
  4811  0003A4                     	ds	32
  4812  0003C4                     asctime@buf:
  4813                           	opt callstack 0
  4814  0003C4                     	ds	27
  4815  0003DF                     localtime@tm:
  4816                           	opt callstack 0
  4817  0003DF                     	ds	24
  4818                           
  4819                           	psect	bssBANK4
  4820  000400                     __pbssBANK4:
  4821                           	opt callstack 0
  4822  000400                     _uart2TxBuffer:
  4823                           	opt callstack 0
  4824  000400                     	ds	64
  4825  000440                     _r_cal:
  4826                           	opt callstack 0
  4827  000440                     	ds	155
  4828                           
  4829                           	psect	bssBANK5
  4830  000500                     __pbssBANK5:
  4831                           	opt callstack 0
  4832  000500                     _ring_buf2:
  4833                           	opt callstack 0
  4834  000500                     	ds	67
  4835  000543                     _ring_buf1:
  4836                           	opt callstack 0
  4837  000543                     	ds	67
  4838                           
  4839                           	psect	bssBANK6
  4840  000600                     __pbssBANK6:
  4841                           	opt callstack 0
  4842  000600                     _uart2RxBuffer:
  4843                           	opt callstack 0
  4844  000600                     	ds	255
  4845                           
  4846                           	psect	bssBIGRAM
  4847  000A3F                     __pbssBIGRAM:
  4848                           	opt callstack 0
  4849  000A3F                     _D:
  4850                           	opt callstack 0
  4851  000A3F                     	ds	642
  4852                           
  4853                           	psect	dataBIGRAM
  4854  0006FF                     __pdataBIGRAM:
  4855                           	opt callstack 0
  4856  0006FF                     _port_data:
  4857                           	opt callstack 0
  4858  0006FF                     	ds	512
  4859  0008FF                     _C:
  4860                           	opt callstack 0
  4861  0008FF                     	ds	320
  4862                           
  4863                           	psect	cstackBANK0
  4864  0000E5                     __pcstackBANK0:
  4865                           	opt callstack 0
  4866  0000E5                     ??_TMR3_ISR:
  4867                           
  4868                           ; 1 bytes @ 0x0
  4869  0000E5                     	ds	25
  4870                           
  4871                           	psect	cstackCOMRAM
  4872  000001                     __pcstackCOMRAM:
  4873                           	opt callstack 0
  4874  000001                     ??_ADCC_ThresholdISR:
  4875  000001                     
  4876                           ; 1 bytes @ 0x0
  4877  000001                     	ds	5
  4878  000006                     ??_TMR6_ISR:
  4879                           
  4880                           ; 1 bytes @ 0x5
  4881  000006                     	ds	1
  4882  000007                     ??_INT1_ISR:
  4883  000007                     
  4884                           ; 1 bytes @ 0x6
  4885  000007                     	ds	4
  4886  00000B                     ??_TMR5_ISR:
  4887                           
  4888                           ; 1 bytes @ 0xA
  4889  00000B                     	ds	31
  4890                           
  4891 ;;
  4892 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  4893 ;;
  4894 ;; *************** function _main *****************
  4895 ;; Defined at:
  4896 ;;		line 198 in file "main.c"
  4897 ;; Parameters:    Size  Location     Type
  4898 ;;		None
  4899 ;; Auto vars:     Size  Location     Type
  4900 ;;  esr_temp        4  [STACK] float 
  4901 ;;  i_esr           2  [STACK] unsigned short 
  4902 ;;  shape           1  [STACK] unsigned char 
  4903 ;;  inp_index       1  [STACK] unsigned char 
  4904 ;;  k               1  [STACK] unsigned char 
  4905 ;;  j               1  [STACK] unsigned char 
  4906 ;;  i               1  [STACK] unsigned char 
  4907 ;;  mode            1  [STACK] enum E17179
  4908 ;;  i_ror           1  [STACK] unsigned char 
  4909 ;; Return value:  Size  Location     Type
  4910 ;;                  1  [STACK] void 
  4911 ;; Registers used:
  4912 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
  4913 ;; Tracked objects:
  4914 ;;		On entry : 0/0
  4915 ;;		On exit  : 0/0
  4916 ;;		Unchanged: 0/0
  4917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4922 ;;Total ram usage:        0 bytes
  4923 ;; Hardware stack levels required when called:   28
  4924 ;; This function calls:
  4925 ;;		_SYSTEM_Initialize
  4926 ;;		_StartTimer
  4927 ;;		_TimerDone
  4928 ;;		_WaitMs
  4929 ;;		___fladd
  4930 ;;		___flge
  4931 ;;		___fltol
  4932 ;;		_asctime
  4933 ;;		_calc_model_data
  4934 ;;		_calc_ror_data
  4935 ;;		_check_adc_scan
  4936 ;;		_check_enter_button
  4937 ;;		_check_help
  4938 ;;		_clear_adc_scan
  4939 ;;		_clear_hid_pflags
  4940 ;;		_conv_raw_result
  4941 ;;		_convert_adc_data
  4942 ;;		_current_sensor_cal
  4943 ;;		_display_history
  4944 ;;		_eaDogM_WriteCommand
  4945 ;;		_esr_check
  4946 ;;		_fabsf
  4947 ;;		_get_raw_result
  4948 ;;		_get_switch
  4949 ;;		_get_vterm_ptr
  4950 ;;		_hid_display
  4951 ;;		_init_bsoc
  4952 ;;		_init_display
  4953 ;;		_init_port_dma
  4954 ;;		_load_hist_data
  4955 ;;		_localtime
  4956 ;;		_lp_filter
  4957 ;;		_mode_lamp_dim
  4958 ;;		_read_cal_data
  4959 ;;		_set_dac
  4960 ;;		_set_dac_a
  4961 ;;		_set_dac_b
  4962 ;;		_set_display_info
  4963 ;;		_set_hist_flag
  4964 ;;		_set_load_relay_one
  4965 ;;		_set_load_relay_two
  4966 ;;		_set_time
  4967 ;;		_set_vterm
  4968 ;;		_spinners
  4969 ;;		_sprintf
  4970 ;;		_srand
  4971 ;;		_start_adc_scan
  4972 ;;		_start_switch_handler
  4973 ;;		_static_soc
  4974 ;;		_time
  4975 ;;		_update_cal_data
  4976 ;;		_update_hist_data
  4977 ;;		_update_lcd
  4978 ;;		_wait_lcd_done
  4979 ;;		_write_cal_data
  4980 ;; This function is called by:
  4981 ;;		Startup code after reset
  4982 ;; This function uses a reentrant model
  4983 ;;
  4984                           
  4985                           	psect	text0
  4986  010000                     __ptext0:
  4987                           	opt callstack 0
  4988  010000                     _main:
  4989                           	opt callstack 0
  4990                           
  4991                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4992  010000  0E11               	movlw	17
  4993  010002  26E1               	addwf	fsr1l,f,c
  4994  010004  0E00               	movlw	0
  4995  010006  22E2               	addwfc	fsr1h,f,c
  4996                           
  4997                           ;main.c: 200:  UI_STATES mode;;main.c: 201:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  4998                           ;stkvar	_inp_index @ sp[(-17)+11]
  4999                           
  5000                           ;incstack = 0
  5001  010008  0EFA               	movlw	-6
  5002  01000A  6AE3               	clrf	plusw1,c
  5003                           
  5004                           ;stkvar	_i @ sp[(-17)+14]
  5005  01000C  0EFD               	movlw	-3
  5006  01000E  6AE3               	clrf	plusw1,c
  5007                           
  5008                           ;stkvar	_j @ sp[(-17)+13]
  5009  010010  0EFC               	movlw	-4
  5010  010012  6AE3               	clrf	plusw1,c
  5011  010014  2AE3               	incf	plusw1,f,c
  5012                           
  5013                           ;stkvar	_k @ sp[(-17)+12]
  5014  010016  0EFB               	movlw	-5
  5015  010018  6AE3               	clrf	plusw1,c
  5016  01001A  82E3               	bsf	plusw1,1,c
  5017                           
  5018                           ;main.c: 204:  SYSTEM_Initialize();
  5019  01001C  EC58  F00C         	call	_SYSTEM_Initialize	;wreg free
  5020                           
  5021                           ; BSR set to: 60
  5022                           ;main.c: 207:  (INTCON0bits.GIEH = 1);
  5023  010020  8ED2               	bsf	210,7,c	;volatile
  5024                           
  5025                           ; BSR set to: 60
  5026                           ;main.c: 210:  (INTCON0bits.GIEL = 1);
  5027  010022  8CD2               	bsf	210,6,c	;volatile
  5028                           
  5029                           ; BSR set to: 60
  5030                           ;main.c: 212:  V.ui_state = UI_STATE_INIT;
  5031  010024  0102               	movlb	2	; () banked
  5032  010026  6B07               	clrf	_V& (0+255),b	;volatile
  5033                           
  5034                           ; BSR set to: 2
  5035                           ;main.c: 217:  WaitMs(300);
  5036  010028  0E2C               	movlw	44
  5037  01002A  6EE6               	movwf	postinc1,c
  5038  01002C  0E01               	movlw	1
  5039  01002E  6EE6               	movwf	postinc1,c
  5040  010030  EC2F  F00F         	call	_WaitMs	;wreg free
  5041                           
  5042                           ;main.c: 218:  if (PORTBbits.RB0) {
  5043  010034  A0CB               	btfss	203,0,c	;volatile
  5044  010036  D004               	goto	l17374
  5045                           
  5046                           ;main.c: 219:   mode = UI_STATE_HOST;
  5047                           ;stkvar	_mode @ sp[(-17)+15]
  5048  010038  0EFE               	movlw	-2
  5049  01003A  6AE3               	clrf	plusw1,c
  5050  01003C  2AE3               	incf	plusw1,f,c
  5051                           
  5052                           ;main.c: 220:  } else {
  5053  01003E  D004               	goto	l17376
  5054  010040                     l17374:
  5055                           
  5056                           ;main.c: 221:   mode = UI_STATE_LOG;
  5057                           ;stkvar	_mode @ sp[(-17)+15]
  5058  010040  0EFE               	movlw	-2
  5059  010042  6AE3               	clrf	plusw1,c
  5060  010044  80E3               	bsf	plusw1,0,c
  5061  010046  82E3               	bsf	plusw1,1,c	;indir
  5062  010048                     l17376:
  5063                           
  5064                           ;main.c: 224:  if (mode == UI_STATE_HOST) {
  5065                           ;stkvar	_mode @ sp[(-17)+15]
  5066  010048  0EFE               	movlw	-2
  5067  01004A  04E3               	decf	plusw1,w,c
  5068  01004C  A4D8               	btfss	status,2,c
  5069  01004E  D007               	goto	l1455
  5070                           
  5071                           ;main.c: 225:   do { LATDbits.LATD0 = 1; } while(0);
  5072  010050  80BD               	bsf	189,0,c	;volatile
  5073                           
  5074                           ;main.c: 226:   V.mode_pwm = 70;
  5075  010052  0E00               	movlw	0
  5076  010054  0102               	movlb	2	; () banked
  5077  010056  6F9A               	movwf	(_V+147)& (0+255),b	;volatile
  5078  010058  0E46               	movlw	70
  5079  01005A  6F99               	movwf	(_V+146)& (0+255),b	;volatile
  5080                           
  5081                           ;main.c: 227:  } else {
  5082  01005C  D004               	goto	l17380
  5083  01005E                     l1455:
  5084  01005E  90BD               	bcf	189,0,c	;volatile
  5085                           
  5086                           ;main.c: 229:   V.mode_pwm = 0;
  5087  010060  0102               	movlb	2	; () banked
  5088  010062  6B99               	clrf	(_V+146)& (0+255),b	;volatile
  5089  010064  6B9A               	clrf	(_V+147)& (0+255),b	;volatile
  5090  010066                     l17380:
  5091                           
  5092                           ; BSR set to: 2
  5093                           ;main.c: 231:  mode_lamp_dim(V.mode_pwm);
  5094  010066  0060  FA67  FFE6   	movff	_V+146,postinc1
  5095  01006C  0060  FA6B  FFE6   	movff	_V+147,postinc1
  5096  010072  ECDB  F012         	call	_mode_lamp_dim	;wreg free
  5097  010076  EF66  F084         	goto	l17538
  5098  01007A                     l17382:
  5099                           
  5100                           ; BSR set to: 2
  5101                           ;main.c: 239:    init_port_dma();
  5102  01007A  ECCB  F00F         	call	_init_port_dma	;wreg free
  5103                           
  5104                           ; BSR set to: 59
  5105                           ;main.c: 241:    init_display();
  5106  01007E  ECDF  F0FE         	call	_init_display	;wreg free
  5107                           
  5108                           ; BSR set to: 61
  5109                           ;main.c: 242:    eaDogM_WriteCommand(0b00001100);
  5110  010082  0E0C               	movlw	12
  5111  010084  6EE6               	movwf	postinc1,c
  5112  010086  EC63  F013         	call	_eaDogM_WriteCommand	;wreg free
  5113                           
  5114                           ; BSR set to: 61
  5115                           ;main.c: 243:    set_dac();
  5116  01008A  ECA5  F002         	call	_set_dac	;wreg free
  5117                           
  5118                           ;main.c: 247:    set_load_relay_one(1);
  5119  01008E  0E01               	movlw	1
  5120  010090  6EE6               	movwf	postinc1,c
  5121  010092  EC43  F013         	call	_set_load_relay_one	;wreg free
  5122                           
  5123                           ;main.c: 248:    set_load_relay_two(1);
  5124  010096  0E01               	movlw	1
  5125  010098  6EE6               	movwf	postinc1,c
  5126  01009A  EC3B  F013         	call	_set_load_relay_two	;wreg free
  5127                           
  5128                           ;main.c: 250:    V.ui_state = mode;
  5129                           ;stkvar	_mode @ sp[(-17)+15]
  5130  01009E  0EFE               	movlw	-2
  5131  0100A0  006F FF8C  F207    	movff	plusw1,_V	;volatile
  5132                           
  5133                           ;main.c: 251:    srand(1957);
  5134  0100A6  0EA5               	movlw	165
  5135  0100A8  6EE6               	movwf	postinc1,c
  5136  0100AA  0E07               	movlw	7
  5137  0100AC  6EE6               	movwf	postinc1,c
  5138  0100AE  EC4A  F00F         	call	_srand	;wreg free
  5139                           
  5140                           ; BSR set to: 2
  5141                           ;main.c: 252:    set_vterm(0);
  5142  0100B2  0E00               	movlw	0
  5143  0100B4  6EE6               	movwf	postinc1,c
  5144  0100B6  ECA3  F012         	call	_set_vterm	;wreg free
  5145                           
  5146                           ;main.c: 253:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON      ");
  5147  0100BA  0E1D               	movlw	low STR_1
  5148  0100BC  6EE6               	movwf	postinc1,c
  5149  0100BE  0EFF               	movlw	high STR_1
  5150  0100C0  6EE6               	movwf	postinc1,c
  5151  0100C2  0E00               	movlw	0
  5152  0100C4  6EE6               	movwf	postinc1,c
  5153  0100C6  0E00               	movlw	0
  5154  0100C8  6EE6               	movwf	postinc1,c
  5155  0100CA  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  5156  0100CE  0060  F0AB  FFE6   	movff	btemp,postinc1
  5157  0100D4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5158  0100DA  0E04               	movlw	4
  5159  0100DC  6EE6               	movwf	postinc1,c
  5160  0100DE  ECF9  F0FB         	call	_sprintf	;wreg free
  5161                           
  5162                           ; BSR set to: 0
  5163                           ;main.c: 254:    sprintf(get_vterm_ptr(1, 0), " Version %s         ", "1.26");
  5164  0100E2  0ED5               	movlw	low STR_3
  5165  0100E4  6EE6               	movwf	postinc1,c
  5166  0100E6  0EFF               	movlw	high STR_3
  5167  0100E8  6EE6               	movwf	postinc1,c
  5168  0100EA  0E08               	movlw	low STR_2
  5169  0100EC  6EE6               	movwf	postinc1,c
  5170  0100EE  0EFF               	movlw	high STR_2
  5171  0100F0  6EE6               	movwf	postinc1,c
  5172  0100F2  0E00               	movlw	0
  5173  0100F4  6EE6               	movwf	postinc1,c
  5174  0100F6  0E01               	movlw	1
  5175  0100F8  6EE6               	movwf	postinc1,c
  5176  0100FA  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  5177  0100FE  0060  F0AB  FFE6   	movff	btemp,postinc1
  5178  010104  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5179  01010A  0E06               	movlw	6
  5180  01010C  6EE6               	movwf	postinc1,c
  5181  01010E  ECF9  F0FB         	call	_sprintf	;wreg free
  5182                           
  5183                           ; BSR set to: 0
  5184                           ;main.c: 255:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK           ");
  5185  010112  0EF3               	movlw	low STR_4
  5186  010114  6EE6               	movwf	postinc1,c
  5187  010116  0EFE               	movlw	high STR_4
  5188  010118  6EE6               	movwf	postinc1,c
  5189  01011A  0E00               	movlw	0
  5190  01011C  6EE6               	movwf	postinc1,c
  5191  01011E  0E02               	movlw	2
  5192  010120  6EE6               	movwf	postinc1,c
  5193  010122  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  5194  010126  0060  F0AB  FFE6   	movff	btemp,postinc1
  5195  01012C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5196  010132  0E04               	movlw	4
  5197  010134  6EE6               	movwf	postinc1,c
  5198  010136  ECF9  F0FB         	call	_sprintf	;wreg free
  5199                           
  5200                           ; BSR set to: 0
  5201                           ;main.c: 256:    sprintf(get_vterm_ptr(3, 0), "                    ");
  5202  01013A  0EB9               	movlw	low (STR_16+2)
  5203  01013C  6EE6               	movwf	postinc1,c
  5204  01013E  0EFB               	movlw	high (STR_16+2)
  5205  010140  6EE6               	movwf	postinc1,c
  5206  010142  0E00               	movlw	0
  5207  010144  6EE6               	movwf	postinc1,c
  5208  010146  0E03               	movlw	3
  5209  010148  6EE6               	movwf	postinc1,c
  5210  01014A  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  5211  01014E  0060  F0AB  FFE6   	movff	btemp,postinc1
  5212  010154  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5213  01015A  0E04               	movlw	4
  5214  01015C  6EE6               	movwf	postinc1,c
  5215  01015E  ECF9  F0FB         	call	_sprintf	;wreg free
  5216                           
  5217                           ; BSR set to: 0
  5218                           ;main.c: 257:    sprintf(get_vterm_ptr(0, 2), "                    ");
  5219  010162  0EB9               	movlw	low (STR_16+2)
  5220  010164  6EE6               	movwf	postinc1,c
  5221  010166  0EFB               	movlw	high (STR_16+2)
  5222  010168  6EE6               	movwf	postinc1,c
  5223  01016A  0E02               	movlw	2
  5224  01016C  6EE6               	movwf	postinc1,c
  5225  01016E  0E00               	movlw	0
  5226  010170  6EE6               	movwf	postinc1,c
  5227  010172  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  5228  010176  0060  F0AB  FFE6   	movff	btemp,postinc1
  5229  01017C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5230  010182  0E04               	movlw	4
  5231  010184  6EE6               	movwf	postinc1,c
  5232  010186  ECF9  F0FB         	call	_sprintf	;wreg free
  5233                           
  5234                           ; BSR set to: 0
  5235                           ;main.c: 258:    sprintf(get_vterm_ptr(1, 2), "                    ");
  5236  01018A  0EB9               	movlw	low (STR_16+2)
  5237  01018C  6EE6               	movwf	postinc1,c
  5238  01018E  0EFB               	movlw	high (STR_16+2)
  5239  010190  6EE6               	movwf	postinc1,c
  5240  010192  0E02               	movlw	2
  5241  010194  6EE6               	movwf	postinc1,c
  5242  010196  0E01               	movlw	1
  5243  010198  6EE6               	movwf	postinc1,c
  5244  01019A  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  5245  01019E  0060  F0AB  FFE6   	movff	btemp,postinc1
  5246  0101A4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5247  0101AA  0E04               	movlw	4
  5248  0101AC  6EE6               	movwf	postinc1,c
  5249  0101AE  ECF9  F0FB         	call	_sprintf	;wreg free
  5250                           
  5251                           ; BSR set to: 0
  5252                           ;main.c: 259:    sprintf(get_vterm_ptr(2, 2), "                    ");
  5253  0101B2  0EB9               	movlw	low (STR_16+2)
  5254  0101B4  6EE6               	movwf	postinc1,c
  5255  0101B6  0EFB               	movlw	high (STR_16+2)
  5256  0101B8  6EE6               	movwf	postinc1,c
  5257  0101BA  0E02               	movlw	2
  5258  0101BC  6EE6               	movwf	postinc1,c
  5259  0101BE  0E02               	movlw	2
  5260  0101C0  6EE6               	movwf	postinc1,c
  5261  0101C2  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  5262  0101C6  0060  F0AB  FFE6   	movff	btemp,postinc1
  5263  0101CC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5264  0101D2  0E04               	movlw	4
  5265  0101D4  6EE6               	movwf	postinc1,c
  5266  0101D6  ECF9  F0FB         	call	_sprintf	;wreg free
  5267                           
  5268                           ; BSR set to: 0
  5269                           ;main.c: 260:    sprintf(get_vterm_ptr(3, 2), "                    ");
  5270  0101DA  0EB9               	movlw	low (STR_16+2)
  5271  0101DC  6EE6               	movwf	postinc1,c
  5272  0101DE  0EFB               	movlw	high (STR_16+2)
  5273  0101E0  6EE6               	movwf	postinc1,c
  5274  0101E2  0E02               	movlw	2
  5275  0101E4  6EE6               	movwf	postinc1,c
  5276  0101E6  0E03               	movlw	3
  5277  0101E8  6EE6               	movwf	postinc1,c
  5278  0101EA  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  5279  0101EE  0060  F0AB  FFE6   	movff	btemp,postinc1
  5280  0101F4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5281  0101FA  0E04               	movlw	4
  5282  0101FC  6EE6               	movwf	postinc1,c
  5283  0101FE  ECF9  F0FB         	call	_sprintf	;wreg free
  5284                           
  5285                           ; BSR set to: 0
  5286                           ;main.c: 261:    update_lcd(0);
  5287  010202  0E00               	movlw	0
  5288  010204  6EE6               	movwf	postinc1,c
  5289  010206  ECAB  F0F4         	call	_update_lcd	;wreg free
  5290                           
  5291                           ;main.c: 262:    WaitMs(1000);
  5292  01020A  0EE8               	movlw	232
  5293  01020C  6EE6               	movwf	postinc1,c
  5294  01020E  0E03               	movlw	3
  5295  010210  6EE6               	movwf	postinc1,c
  5296  010212  EC2F  F00F         	call	_WaitMs	;wreg free
  5297                           
  5298                           ;main.c: 263:    StartTimer(TMR_DISPLAY, 250);
  5299  010216  0EFA               	movlw	250
  5300  010218  6EE6               	movwf	postinc1,c
  5301  01021A  0E00               	movlw	0
  5302  01021C  6EE6               	movwf	postinc1,c
  5303  01021E  0E0A               	movlw	10
  5304  010220  6EE6               	movwf	postinc1,c
  5305  010222  EC22  F00E         	call	_StartTimer	;wreg free
  5306                           
  5307                           ;main.c: 264:    StartTimer(TMR_ADC, 200);
  5308  010226  0EC8               	movlw	200
  5309  010228  6EE6               	movwf	postinc1,c
  5310  01022A  0E00               	movlw	0
  5311  01022C  6EE6               	movwf	postinc1,c
  5312  01022E  0E01               	movlw	1
  5313  010230  6EE6               	movwf	postinc1,c
  5314  010232  EC22  F00E         	call	_StartTimer	;wreg free
  5315                           
  5316                           ;main.c: 265:    StartTimer(TMR_INFO, 3000);
  5317  010236  0EB8               	movlw	184
  5318  010238  6EE6               	movwf	postinc1,c
  5319  01023A  0E0B               	movlw	11
  5320  01023C  6EE6               	movwf	postinc1,c
  5321  01023E  0E07               	movlw	7
  5322  010240  6EE6               	movwf	postinc1,c
  5323  010242  EC22  F00E         	call	_StartTimer	;wreg free
  5324                           
  5325                           ;main.c: 266:    StartTimer(TMR_FLIPPER, 1500);
  5326  010246  0EDC               	movlw	220
  5327  010248  6EE6               	movwf	postinc1,c
  5328  01024A  0E05               	movlw	5
  5329  01024C  6EE6               	movwf	postinc1,c
  5330  01024E  0E0B               	movlw	11
  5331  010250  6EE6               	movwf	postinc1,c
  5332  010252  EC22  F00E         	call	_StartTimer	;wreg free
  5333                           
  5334                           ;main.c: 267:    StartTimer(TMR_HELPDIS, 3000);
  5335  010256  0EB8               	movlw	184
  5336  010258  6EE6               	movwf	postinc1,c
  5337  01025A  0E0B               	movlw	11
  5338  01025C  6EE6               	movwf	postinc1,c
  5339  01025E  0E09               	movlw	9
  5340  010260  6EE6               	movwf	postinc1,c
  5341  010262  EC22  F00E         	call	_StartTimer	;wreg free
  5342                           
  5343                           ;main.c: 269:    start_adc_scan();
  5344  010266  EC61  F00A         	call	_start_adc_scan	;wreg free
  5345                           
  5346                           ;main.c: 270:    start_switch_handler();
  5347  01026A  EC65  F012         	call	_start_switch_handler	;wreg free
  5348                           
  5349                           ; BSR set to: 57
  5350                           ;main.c: 271:    WaitMs(1000);
  5351  01026E  0EE8               	movlw	232
  5352  010270  6EE6               	movwf	postinc1,c
  5353  010272  0E03               	movlw	3
  5354  010274  6EE6               	movwf	postinc1,c
  5355  010276  EC2F  F00F         	call	_WaitMs	;wreg free
  5356                           
  5357                           ;main.c: 276:    if (read_cal_data()) {
  5358  01027A  ECB1  F0EA         	call	_read_cal_data	;wreg free
  5359  01027E  502A               	movf	btemp^0,w,c
  5360  010280  B4D8               	btfsc	status,2,c
  5361  010282  D07C               	goto	l17448
  5362                           
  5363                           ;main.c: 277:     update_cal_data();
  5364  010284  ECDB  F00B         	call	_update_cal_data	;wreg free
  5365                           
  5366                           ; BSR set to: 1
  5367                           ;main.c: 278:     if (update_hist_data(1, &C.hist[0]) && (C.hist[0].pclock > time(((void
      +                          *)0))))
  5368  010288  0EB8               	movlw	low (_C+185)
  5369  01028A  6EE6               	movwf	postinc1,c
  5370  01028C  0E09               	movlw	high (_C+185)
  5371  01028E  6EE6               	movwf	postinc1,c
  5372  010290  0E01               	movlw	1
  5373  010292  6EE6               	movwf	postinc1,c
  5374  010294  EC06  F008         	call	_update_hist_data	;wreg free
  5375  010298  502A               	movf	btemp^0,w,c
  5376  01029A  B4D8               	btfsc	status,2,c
  5377  01029C  D05A               	goto	l17446
  5378  01029E  0E00               	movlw	0
  5379  0102A0  6EE6               	movwf	postinc1,c
  5380  0102A2  0E00               	movlw	0
  5381  0102A4  6EE6               	movwf	postinc1,c
  5382  0102A6  EC25  F00B         	call	_time	;wreg free
  5383  0102AA  52E5               	movf	postdec1,f,c
  5384  0102AC  006F FF9C  F041    	movff	indf1,btemp+23
  5385  0102B2  52E5               	movf	postdec1,f,c
  5386  0102B4  006F FF9C  F040    	movff	indf1,btemp+22
  5387  0102BA  52E5               	movf	postdec1,f,c
  5388  0102BC  006F FF9C  F03F    	movff	indf1,btemp+21
  5389  0102C2  52E5               	movf	postdec1,f,c
  5390  0102C4  006F FF9C  F03E    	movff	indf1,btemp+20
  5391  0102CA  52E5               	movf	postdec1,f,c
  5392  0102CC  006F FF9C  F03D    	movff	indf1,btemp+19
  5393  0102D2  52E5               	movf	postdec1,f,c
  5394  0102D4  006F FF9C  F03C    	movff	indf1,btemp+18
  5395  0102DA  52E5               	movf	postdec1,f,c
  5396  0102DC  006F FF9C  F03B    	movff	indf1,btemp+17
  5397  0102E2  52E5               	movf	postdec1,f,c
  5398  0102E4  006F FF9C  F03A    	movff	indf1,btemp+16
  5399  0102EA  EE22  F1B9         	lfsr	2,_C+186	;volatile
  5400  0102EE  50DE               	movf	postinc2,w,c
  5401  0102F0  5C3A               	subwf	(btemp+16)^0,w,c
  5402  0102F2  50DE               	movf	postinc2,w,c
  5403  0102F4  583B               	subwfb	(btemp+17)^0,w,c
  5404  0102F6  50DE               	movf	postinc2,w,c
  5405  0102F8  583C               	subwfb	(btemp+18)^0,w,c
  5406  0102FA  50DE               	movf	postinc2,w,c
  5407  0102FC  583D               	subwfb	(btemp+19)^0,w,c
  5408  0102FE  50DE               	movf	postinc2,w,c
  5409  010300  583E               	subwfb	(btemp+20)^0,w,c
  5410  010302  50DE               	movf	postinc2,w,c
  5411  010304  583F               	subwfb	(btemp+21)^0,w,c
  5412  010306  50DE               	movf	postinc2,w,c
  5413  010308  5840               	subwfb	(btemp+22)^0,w,c
  5414  01030A  5041               	movf	(btemp+23)^0,w,c
  5415  01030C  0A80               	xorlw	128
  5416  01030E  6E2A               	movwf	btemp^0,c
  5417  010310  50DE               	movf	postinc2,w,c
  5418  010312  0A80               	xorlw	128
  5419  010314  582A               	subwfb	btemp^0,w,c
  5420  010316  B0D8               	btfsc	status,0,c
  5421  010318  D01C               	goto	l17446
  5422                           
  5423                           ; BSR set to: 57
  5424                           ;main.c: 279:      set_time(C.hist[0].pclock);
  5425  01031A  EE22  F1B9         	lfsr	2,_C+186	;volatile
  5426  01031E  006F FF7B FFE6     	movff	postinc2,postinc1
  5427  010324  006F FF7B FFE6     	movff	postinc2,postinc1
  5428  01032A  006F FF7B FFE6     	movff	postinc2,postinc1
  5429  010330  006F FF7B FFE6     	movff	postinc2,postinc1
  5430  010336  006F FF7B FFE6     	movff	postinc2,postinc1
  5431  01033C  006F FF7B FFE6     	movff	postinc2,postinc1
  5432  010342  006F FF7B FFE6     	movff	postinc2,postinc1
  5433  010348  006F FF7B FFE6     	movff	postinc2,postinc1
  5434  01034E  EC14  F00F         	call	_set_time	;wreg free
  5435  010352                     l17446:
  5436                           
  5437                           ;main.c: 281:     sprintf(get_vterm_ptr(2, 0), "Read EEPROM DATA    ");
  5438  010352  0E32               	movlw	low STR_10
  5439  010354  6EE6               	movwf	postinc1,c
  5440  010356  0EFF               	movlw	high STR_10
  5441  010358  6EE6               	movwf	postinc1,c
  5442  01035A  0E00               	movlw	0
  5443  01035C  6EE6               	movwf	postinc1,c
  5444  01035E  0E02               	movlw	2
  5445  010360  6EE6               	movwf	postinc1,c
  5446  010362  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  5447  010366  0060  F0AB  FFE6   	movff	btemp,postinc1
  5448  01036C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5449  010372  0E04               	movlw	4
  5450  010374  6EE6               	movwf	postinc1,c
  5451  010376  ECF9  F0FB         	call	_sprintf	;wreg free
  5452                           
  5453                           ;main.c: 282:    } else {
  5454  01037A  D014               	goto	l1462
  5455  01037C                     l17448:
  5456                           
  5457                           ;main.c: 283:     sprintf(get_vterm_ptr(2, 0), "Invalid EEPROM DATA ");
  5458  01037C  0E5C               	movlw	low STR_11
  5459  01037E  6EE6               	movwf	postinc1,c
  5460  010380  0EFF               	movlw	high STR_11
  5461  010382  6EE6               	movwf	postinc1,c
  5462  010384  0E00               	movlw	0
  5463  010386  6EE6               	movwf	postinc1,c
  5464  010388  0E02               	movlw	2
  5465  01038A  6EE6               	movwf	postinc1,c
  5466  01038C  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  5467  010390  0060  F0AB  FFE6   	movff	btemp,postinc1
  5468  010396  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5469  01039C  0E04               	movlw	4
  5470  01039E  6EE6               	movwf	postinc1,c
  5471  0103A0  ECF9  F0FB         	call	_sprintf	;wreg free
  5472  0103A4                     l1462:
  5473                           
  5474                           ; BSR set to: 0
  5475                           ;main.c: 285:    update_lcd(0);
  5476  0103A4  0E00               	movlw	0
  5477  0103A6  6EE6               	movwf	postinc1,c
  5478  0103A8  ECAB  F0F4         	call	_update_lcd	;wreg free
  5479                           
  5480                           ;main.c: 286:    WaitMs(2000);
  5481  0103AC  0ED0               	movlw	208
  5482  0103AE  6EE6               	movwf	postinc1,c
  5483  0103B0  0E07               	movlw	7
  5484  0103B2  6EE6               	movwf	postinc1,c
  5485  0103B4  EC2F  F00F         	call	_WaitMs	;wreg free
  5486                           
  5487                           ;main.c: 288:    i_ror = 1;
  5488                           ;stkvar	_i_ror @ sp[(-17)+16]
  5489  0103B8  0EFF               	movlw	-1
  5490  0103BA  6AE3               	clrf	plusw1,c
  5491  0103BC  2AE3               	incf	plusw1,f,c
  5492  0103BE                     l17454:
  5493                           
  5494                           ;main.c: 290:     calc_ror_data();
  5495  0103BE  ECA1  F0EF         	call	_calc_ror_data	;wreg free
  5496                           
  5497                           ;main.c: 291:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f             ", conv_raw_result(
      +                          V_BAT, CONV));
  5498  0103C2  0E00               	movlw	0
  5499  0103C4  6EE6               	movwf	postinc1,c
  5500  0103C6  0E04               	movlw	4
  5501  0103C8  6EE6               	movwf	postinc1,c
  5502  0103CA  EC26  F0C3         	call	_conv_raw_result	;wreg free
  5503  0103CE  0060  F0AB  FFE6   	movff	btemp,postinc1
  5504  0103D4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5505  0103DA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  5506  0103E0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  5507  0103E6  0E69               	movlw	low STR_12
  5508  0103E8  6EE6               	movwf	postinc1,c
  5509  0103EA  0EFD               	movlw	high STR_12
  5510  0103EC  6EE6               	movwf	postinc1,c
  5511  0103EE  0E00               	movlw	0
  5512  0103F0  6EE6               	movwf	postinc1,c
  5513  0103F2  0E01               	movlw	1
  5514  0103F4  6EE6               	movwf	postinc1,c
  5515  0103F6  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  5516  0103FA  0060  F0AB  FFE6   	movff	btemp,postinc1
  5517  010400  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5518  010406  0E08               	movlw	8
  5519  010408  6EE6               	movwf	postinc1,c
  5520  01040A  ECF9  F0FB         	call	_sprintf	;wreg free
  5521                           
  5522                           ; BSR set to: 0
  5523                           ;main.c: 292:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f          ", spinners(5, 
      +                          0), i_ror, C.bv_ror);
  5524  01040E  EE22  F16B         	lfsr	2,_C+108	;volatile
  5525  010412  006F FF7B FFE6     	movff	postinc2,postinc1
  5526  010418  006F FF7B FFE6     	movff	postinc2,postinc1
  5527  01041E  006F FF7B FFE6     	movff	postinc2,postinc1
  5528  010424  006F FF7B FFE6     	movff	postinc2,postinc1
  5529                           
  5530                           ;stkvar	_i_ror @ sp[(-21)+16]
  5531  01042A  0EFB               	movlw	-5
  5532  01042C  50E3               	movf	plusw1,w,c
  5533  01042E  6EE6               	movwf	postinc1,c
  5534  010430  0E00               	movlw	0
  5535  010432  6EE6               	movwf	postinc1,c
  5536  010434  0E00               	movlw	0
  5537  010436  6EE6               	movwf	postinc1,c
  5538  010438  0E05               	movlw	5
  5539  01043A  6EE6               	movwf	postinc1,c
  5540  01043C  EC75  F0FD         	call	_spinners	;wreg free
  5541  010440  502A               	movf	btemp^0,w,c
  5542  010442  6EE6               	movwf	postinc1,c
  5543  010444  0E00               	movlw	0
  5544  010446  6EE6               	movwf	postinc1,c
  5545  010448  0E25               	movlw	low STR_13
  5546  01044A  6EE6               	movwf	postinc1,c
  5547  01044C  0EFB               	movlw	high STR_13
  5548  01044E  6EE6               	movwf	postinc1,c
  5549  010450  0E00               	movlw	0
  5550  010452  6EE6               	movwf	postinc1,c
  5551  010454  0E02               	movlw	2
  5552  010456  6EE6               	movwf	postinc1,c
  5553  010458  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  5554  01045C  0060  F0AB  FFE6   	movff	btemp,postinc1
  5555  010462  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5556  010468  0E0C               	movlw	12
  5557  01046A  6EE6               	movwf	postinc1,c
  5558  01046C  ECF9  F0FB         	call	_sprintf	;wreg free
  5559                           
  5560                           ; BSR set to: 0
  5561                           ;main.c: 293:     update_lcd(0);
  5562  010470  0E00               	movlw	0
  5563  010472  6EE6               	movwf	postinc1,c
  5564  010474  ECAB  F0F4         	call	_update_lcd	;wreg free
  5565                           
  5566                           ;main.c: 294:     clear_adc_scan();
  5567  010478  ECC5  F013         	call	_clear_adc_scan	;wreg free
  5568                           
  5569                           ; BSR set to: 1
  5570                           ;main.c: 295:     start_adc_scan();
  5571  01047C  EC61  F00A         	call	_start_adc_scan	;wreg free
  5572                           
  5573                           ;main.c: 296:     WaitMs(2000);
  5574  010480  0ED0               	movlw	208
  5575  010482  6EE6               	movwf	postinc1,c
  5576  010484  0E07               	movlw	7
  5577  010486  6EE6               	movwf	postinc1,c
  5578  010488  EC2F  F00F         	call	_WaitMs	;wreg free
  5579                           
  5580                           ;main.c: 299:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  5581                           ;stkvar	_i_ror @ sp[(-17)+16]
  5582  01048C  0EFF               	movlw	-1
  5583  01048E  006F FF8C  F035    	movff	plusw1,btemp+11
  5584  010494  2A35               	incf	(btemp+11)^0,f,c
  5585  010496  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  5586  01049C  0635               	decf	(btemp+11)^0,f,c
  5587  01049E  0E1E               	movlw	30
  5588  0104A0  6035               	cpfslt	(btemp+11)^0,c
  5589  0104A2  D01A               	goto	u17030
  5590  0104A4  EE22  F16B         	lfsr	2,_C+108	;volatile
  5591  0104A8  006F FF7B FFE6     	movff	postinc2,postinc1
  5592  0104AE  006F FF7B FFE6     	movff	postinc2,postinc1
  5593  0104B4  006F FF7B FFE6     	movff	postinc2,postinc1
  5594  0104BA  006F FF7B FFE6     	movff	postinc2,postinc1
  5595  0104C0  0E42               	movlw	66
  5596  0104C2  6EE6               	movwf	postinc1,c
  5597  0104C4  0E60               	movlw	96
  5598  0104C6  6EE6               	movwf	postinc1,c
  5599  0104C8  0E65               	movlw	101
  5600  0104CA  6EE6               	movwf	postinc1,c
  5601  0104CC  0E3C               	movlw	60
  5602  0104CE  6EE6               	movwf	postinc1,c
  5603  0104D0  EC49  F0F3         	call	___flge	;wreg free
  5604  0104D4  A02A               	btfss	btemp& (0+255),0,c
  5605  0104D6  D773               	goto	l17454
  5606  0104D8                     u17030:
  5607                           
  5608                           ;main.c: 301:    static_soc();
  5609  0104D8  EC54  F00B         	call	_static_soc	;wreg free
  5610                           
  5611                           ;main.c: 302:    init_bsoc();
  5612  0104DC  EC0B  F0E2         	call	_init_bsoc	;wreg free
  5613                           
  5614                           ;main.c: 303:    set_load_relay_one(0);
  5615  0104E0  0E00               	movlw	0
  5616  0104E2  6EE6               	movwf	postinc1,c
  5617  0104E4  EC43  F013         	call	_set_load_relay_one	;wreg free
  5618                           
  5619                           ;main.c: 304:    set_load_relay_two(0);
  5620  0104E8  0E00               	movlw	0
  5621  0104EA  6EE6               	movwf	postinc1,c
  5622  0104EC  EC3B  F013         	call	_set_load_relay_two	;wreg free
  5623                           
  5624                           ;main.c: 305:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d         ", C.soc);
  5625  0104F0  EE22  F1B5         	lfsr	2,_C+182	;volatile
  5626  0104F4  006F FF78  F034    	movff	postinc2,btemp+10
  5627  0104FA  006F FF74  F035    	movff	postdec2,btemp+11
  5628  010500  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  5629  010506  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  5630  01050C  0EE5               	movlw	low STR_14
  5631  01050E  6EE6               	movwf	postinc1,c
  5632  010510  0EFB               	movlw	high STR_14
  5633  010512  6EE6               	movwf	postinc1,c
  5634  010514  0E00               	movlw	0
  5635  010516  6EE6               	movwf	postinc1,c
  5636  010518  0E00               	movlw	0
  5637  01051A  6EE6               	movwf	postinc1,c
  5638  01051C  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  5639  010520  0060  F0AB  FFE6   	movff	btemp,postinc1
  5640  010526  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5641  01052C  0E06               	movlw	6
  5642  01052E  6EE6               	movwf	postinc1,c
  5643  010530  ECF9  F0FB         	call	_sprintf	;wreg free
  5644                           
  5645                           ; BSR set to: 0
  5646                           ;main.c: 306:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f      ", C.dynamic_ah);
  5647  010534  EE22  F18F         	lfsr	2,_C+144	;volatile
  5648  010538  006F FF7B FFE6     	movff	postinc2,postinc1
  5649  01053E  006F FF7B FFE6     	movff	postinc2,postinc1
  5650  010544  006F FF7B FFE6     	movff	postinc2,postinc1
  5651  01054A  006F FF7B FFE6     	movff	postinc2,postinc1
  5652  010550  0ECB               	movlw	low STR_15
  5653  010552  6EE6               	movwf	postinc1,c
  5654  010554  0EFC               	movlw	high STR_15
  5655  010556  6EE6               	movwf	postinc1,c
  5656  010558  0E00               	movlw	0
  5657  01055A  6EE6               	movwf	postinc1,c
  5658  01055C  0E01               	movlw	1
  5659  01055E  6EE6               	movwf	postinc1,c
  5660  010560  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  5661  010564  0060  F0AB  FFE6   	movff	btemp,postinc1
  5662  01056A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5663  010570  0E08               	movlw	8
  5664  010572  6EE6               	movwf	postinc1,c
  5665  010574  ECF9  F0FB         	call	_sprintf	;wreg free
  5666                           
  5667                           ; BSR set to: 0
  5668                           ;main.c: 307:    sprintf(get_vterm_ptr(2, 0), "                      ");
  5669  010578  0EB7               	movlw	low STR_16
  5670  01057A  6EE6               	movwf	postinc1,c
  5671  01057C  0EFB               	movlw	high STR_16
  5672  01057E  6EE6               	movwf	postinc1,c
  5673  010580  0E00               	movlw	0
  5674  010582  6EE6               	movwf	postinc1,c
  5675  010584  0E02               	movlw	2
  5676  010586  6EE6               	movwf	postinc1,c
  5677  010588  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  5678  01058C  0060  F0AB  FFE6   	movff	btemp,postinc1
  5679  010592  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5680  010598  0E04               	movlw	4
  5681  01059A  6EE6               	movwf	postinc1,c
  5682  01059C  ECF9  F0FB         	call	_sprintf	;wreg free
  5683                           
  5684                           ; BSR set to: 0
  5685                           ;main.c: 308:    update_lcd(0);
  5686  0105A0  0E00               	movlw	0
  5687  0105A2  6EE6               	movwf	postinc1,c
  5688  0105A4  ECAB  F0F4         	call	_update_lcd	;wreg free
  5689                           
  5690                           ;main.c: 309:    WaitMs(2000);
  5691  0105A8  0ED0               	movlw	208
  5692  0105AA  6EE6               	movwf	postinc1,c
  5693  0105AC  0E07               	movlw	7
  5694  0105AE  6EE6               	movwf	postinc1,c
  5695  0105B0  EC2F  F00F         	call	_WaitMs	;wreg free
  5696                           
  5697                           ;main.c: 310:    sprintf(get_vterm_ptr(0, 0), "Battery ESR          ");
  5698  0105B4  0E95               	movlw	low STR_17
  5699  0105B6  6EE6               	movwf	postinc1,c
  5700  0105B8  0EFD               	movlw	high STR_17
  5701  0105BA  6EE6               	movwf	postinc1,c
  5702  0105BC  0E00               	movlw	0
  5703  0105BE  6EE6               	movwf	postinc1,c
  5704  0105C0  0E00               	movlw	0
  5705  0105C2  6EE6               	movwf	postinc1,c
  5706  0105C4  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  5707  0105C8  0060  F0AB  FFE6   	movff	btemp,postinc1
  5708  0105CE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5709  0105D4  0E04               	movlw	4
  5710  0105D6  6EE6               	movwf	postinc1,c
  5711  0105D8  ECF9  F0FB         	call	_sprintf	;wreg free
  5712                           
  5713                           ; BSR set to: 0
  5714                           ;main.c: 311:    sprintf(get_vterm_ptr(1, 0), "Calculation          ");
  5715  0105DC  0EAB               	movlw	low STR_18
  5716  0105DE  6EE6               	movwf	postinc1,c
  5717  0105E0  0EFD               	movlw	high STR_18
  5718  0105E2  6EE6               	movwf	postinc1,c
  5719  0105E4  0E00               	movlw	0
  5720  0105E6  6EE6               	movwf	postinc1,c
  5721  0105E8  0E01               	movlw	1
  5722  0105EA  6EE6               	movwf	postinc1,c
  5723  0105EC  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  5724  0105F0  0060  F0AB  FFE6   	movff	btemp,postinc1
  5725  0105F6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5726  0105FC  0E04               	movlw	4
  5727  0105FE  6EE6               	movwf	postinc1,c
  5728  010600  ECF9  F0FB         	call	_sprintf	;wreg free
  5729                           
  5730                           ; BSR set to: 0
  5731                           ;main.c: 312:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds     ");
  5732  010604  0E5B               	movlw	low STR_19
  5733  010606  6EE6               	movwf	postinc1,c
  5734  010608  0EFE               	movlw	high STR_19
  5735  01060A  6EE6               	movwf	postinc1,c
  5736  01060C  0E00               	movlw	0
  5737  01060E  6EE6               	movwf	postinc1,c
  5738  010610  0E02               	movlw	2
  5739  010612  6EE6               	movwf	postinc1,c
  5740  010614  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  5741  010618  0060  F0AB  FFE6   	movff	btemp,postinc1
  5742  01061E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5743  010624  0E04               	movlw	4
  5744  010626  6EE6               	movwf	postinc1,c
  5745  010628  ECF9  F0FB         	call	_sprintf	;wreg free
  5746                           
  5747                           ; BSR set to: 0
  5748                           ;main.c: 313:    update_lcd(0);
  5749  01062C  0E00               	movlw	0
  5750  01062E  6EE6               	movwf	postinc1,c
  5751  010630  ECAB  F0F4         	call	_update_lcd	;wreg free
  5752                           
  5753                           ;main.c: 314:    uint16_t i_esr = 1;
  5754  010634  0E01               	movlw	1
  5755  010636  6E34               	movwf	(btemp+10)^0,c
  5756  010638  0E00               	movlw	0
  5757  01063A  6E35               	movwf	(btemp+11)^0,c
  5758                           
  5759                           ;stkvar	_i_esr @ sp[(-17)+8]
  5760  01063C  0EF7               	movlw	-9
  5761  01063E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  5762  010644  0EF8               	movlw	-8
  5763  010646  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  5764                           
  5765                           ;main.c: 316:    float esr_temp;;main.c: 317:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  5766  01064C  D06D               	goto	l17514
  5767  01064E                     l17502:
  5768                           
  5769                           ;main.c: 318:     WaitMs(110);
  5770  01064E  0E6E               	movlw	110
  5771  010650  6EE6               	movwf	postinc1,c
  5772  010652  0E00               	movlw	0
  5773  010654  6EE6               	movwf	postinc1,c
  5774  010656  EC2F  F00F         	call	_WaitMs	;wreg free
  5775                           
  5776                           ;main.c: 319:     shape = (uint8_t) fabsf(esr_temp);
  5777                           ;stkvar	_esr_temp @ sp[(-17)+4]
  5778  01065A  0EF3               	movlw	-13
  5779  01065C  006F FF8F FFE6     	movff	plusw1,postinc1
  5780  010662  006F FF8F FFE6     	movff	plusw1,postinc1
  5781  010668  006F FF8F FFE6     	movff	plusw1,postinc1
  5782  01066E  006F FF8F FFE6     	movff	plusw1,postinc1
  5783  010674  EC00  F003         	call	_fabsf	;wreg free
  5784  010678  0060  F0AB  FFE6   	movff	btemp,postinc1
  5785  01067E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5786  010684  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  5787  01068A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  5788  010690  ECDD  F0F1         	call	___fltol	;wreg free
  5789  010694  0060  F0A8  F035   	movff	btemp,btemp+11
  5790                           
  5791                           ;stkvar	_shape @ sp[(-17)+10]
  5792  01069A  0EF9               	movlw	-7
  5793  01069C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  5794                           
  5795                           ;main.c: 320:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c       ", spinners(0, 0), 
      +                          spinners(shape, 0));
  5796  0106A2  0E00               	movlw	0
  5797  0106A4  6EE6               	movwf	postinc1,c
  5798                           
  5799                           ;stkvar	_shape @ sp[(-18)+10]
  5800  0106A6  0EF8               	movlw	-8
  5801  0106A8  50E3               	movf	plusw1,w,c
  5802  0106AA  6EE6               	movwf	postinc1,c
  5803  0106AC  EC75  F0FD         	call	_spinners	;wreg free
  5804  0106B0  502A               	movf	btemp^0,w,c
  5805  0106B2  6EE6               	movwf	postinc1,c
  5806  0106B4  0E00               	movlw	0
  5807  0106B6  6EE6               	movwf	postinc1,c
  5808  0106B8  0E00               	movlw	0
  5809  0106BA  6EE6               	movwf	postinc1,c
  5810  0106BC  0E00               	movlw	0
  5811  0106BE  6EE6               	movwf	postinc1,c
  5812  0106C0  EC75  F0FD         	call	_spinners	;wreg free
  5813  0106C4  502A               	movf	btemp^0,w,c
  5814  0106C6  6EE6               	movwf	postinc1,c
  5815  0106C8  0E00               	movlw	0
  5816  0106CA  6EE6               	movwf	postinc1,c
  5817  0106CC  0E19               	movlw	low STR_20
  5818  0106CE  6EE6               	movwf	postinc1,c
  5819  0106D0  0EFE               	movlw	high STR_20
  5820  0106D2  6EE6               	movwf	postinc1,c
  5821  0106D4  0E00               	movlw	0
  5822  0106D6  6EE6               	movwf	postinc1,c
  5823  0106D8  0E02               	movlw	2
  5824  0106DA  6EE6               	movwf	postinc1,c
  5825  0106DC  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  5826  0106E0  0060  F0AB  FFE6   	movff	btemp,postinc1
  5827  0106E6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5828  0106EC  0E08               	movlw	8
  5829  0106EE  6EE6               	movwf	postinc1,c
  5830  0106F0  ECF9  F0FB         	call	_sprintf	;wreg free
  5831                           
  5832                           ; BSR set to: 0
  5833                           ;main.c: 321:     update_lcd(0);
  5834  0106F4  0E00               	movlw	0
  5835  0106F6  6EE6               	movwf	postinc1,c
  5836  0106F8  ECAB  F0F4         	call	_update_lcd	;wreg free
  5837                           
  5838                           ;main.c: 323:     if (i_esr++ > 512)
  5839                           ;stkvar	_i_esr @ sp[(-17)+8]
  5840  0106FC  50E1               	movf	fsr1l,w,c
  5841  0106FE  0FF7               	addlw	-9
  5842  010700  6ED9               	movwf	fsr2l,c
  5843  010702  50E2               	movf	fsr1h,w,c
  5844  010704  6EDA               	movwf	fsr2h,c
  5845  010706  0EFF               	movlw	255
  5846  010708  22DA               	addwfc	fsr2h,f,c
  5847  01070A  006F FF7C  F034    	movff	indf2,btemp+10
  5848  010710  0E01               	movlw	1
  5849  010712  26DE               	addwf	postinc2,f,c
  5850  010714  006F FF7C  F035    	movff	indf2,btemp+11
  5851  01071A  0E00               	movlw	0
  5852  01071C  22DD               	addwfc	postdec2,f,c
  5853  01071E  0434               	decf	(btemp+10)^0,w,c
  5854  010720  0E02               	movlw	2
  5855  010722  5835               	subwfb	(btemp+11)^0,w,c
  5856  010724  B0D8               	btfsc	status,0,c
  5857  010726  D017               	goto	u17050
  5858  010728                     l17514:
  5859                           
  5860                           ;main.c: 317:    while ((esr_temp = esr_check(0)) < 0.0) {
  5861  010728  0E00               	movlw	0
  5862  01072A  6EE6               	movwf	postinc1,c
  5863  01072C  EC19  F0D9         	call	_esr_check	;wreg free
  5864                           
  5865                           ;stkvar	_esr_temp @ sp[(-17)+4]
  5866  010730  0EF3               	movlw	-13
  5867  010732  0060  F0AB  FFE3   	movff	btemp,plusw1
  5868  010738  0EF4               	movlw	-12
  5869  01073A  0060  F0AF  FFE3   	movff	btemp+1,plusw1
  5870  010740  0EF5               	movlw	-11
  5871  010742  0060  F0B3  FFE3   	movff	btemp+2,plusw1
  5872  010748  0EF6               	movlw	-10
  5873  01074A  0060  F0B7  FFE3   	movff	btemp+3,plusw1
  5874  010750  0EF6               	movlw	-10
  5875  010752  BEE3               	btfsc	plusw1,7,c
  5876  010754  D77C               	goto	l17502
  5877  010756                     u17050:
  5878                           
  5879                           ;main.c: 326:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f            ", C.esr);
  5880  010756  EE22  F187         	lfsr	2,_C+136	;volatile
  5881  01075A  006F FF7B FFE6     	movff	postinc2,postinc1
  5882  010760  006F FF7B FFE6     	movff	postinc2,postinc1
  5883  010766  006F FF7B FFE6     	movff	postinc2,postinc1
  5884  01076C  006F FF7B FFE6     	movff	postinc2,postinc1
  5885  010772  0ECE               	movlw	low STR_21
  5886  010774  6EE6               	movwf	postinc1,c
  5887  010776  0EFB               	movlw	high STR_21
  5888  010778  6EE6               	movwf	postinc1,c
  5889  01077A  0E00               	movlw	0
  5890  01077C  6EE6               	movwf	postinc1,c
  5891  01077E  0E00               	movlw	0
  5892  010780  6EE6               	movwf	postinc1,c
  5893  010782  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  5894  010786  0060  F0AB  FFE6   	movff	btemp,postinc1
  5895  01078C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5896  010792  0E08               	movlw	8
  5897  010794  6EE6               	movwf	postinc1,c
  5898  010796  ECF9  F0FB         	call	_sprintf	;wreg free
  5899                           
  5900                           ;main.c: 327:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f            ", C.bv_one_loa
      +                          d, C.load_i1);
  5901  01079A  EE22  F219         	lfsr	2,_C+282	;volatile
  5902  01079E  006F FF7B FFE6     	movff	postinc2,postinc1
  5903  0107A4  006F FF7B FFE6     	movff	postinc2,postinc1
  5904  0107AA  006F FF7B FFE6     	movff	postinc2,postinc1
  5905  0107B0  006F FF7B FFE6     	movff	postinc2,postinc1
  5906  0107B6  EE22  F225         	lfsr	2,_C+294	;volatile
  5907  0107BA  006F FF7B FFE6     	movff	postinc2,postinc1
  5908  0107C0  006F FF7B FFE6     	movff	postinc2,postinc1
  5909  0107C6  006F FF7B FFE6     	movff	postinc2,postinc1
  5910  0107CC  006F FF7B FFE6     	movff	postinc2,postinc1
  5911  0107D2  0ED5               	movlw	low STR_22
  5912  0107D4  6EE6               	movwf	postinc1,c
  5913  0107D6  0EFA               	movlw	high STR_22
  5914  0107D8  6EE6               	movwf	postinc1,c
  5915  0107DA  0E00               	movlw	0
  5916  0107DC  6EE6               	movwf	postinc1,c
  5917  0107DE  0E01               	movlw	1
  5918  0107E0  6EE6               	movwf	postinc1,c
  5919  0107E2  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  5920  0107E6  0060  F0AB  FFE6   	movff	btemp,postinc1
  5921  0107EC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5922  0107F2  0E0C               	movlw	12
  5923  0107F4  6EE6               	movwf	postinc1,c
  5924  0107F6  ECF9  F0FB         	call	_sprintf	;wreg free
  5925                           
  5926                           ;main.c: 328:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f            ", C.bv_full_lo
      +                          ad, C.load_i2);
  5927  0107FA  EE22  F21D         	lfsr	2,_C+286	;volatile
  5928  0107FE  006F FF7B FFE6     	movff	postinc2,postinc1
  5929  010804  006F FF7B FFE6     	movff	postinc2,postinc1
  5930  01080A  006F FF7B FFE6     	movff	postinc2,postinc1
  5931  010810  006F FF7B FFE6     	movff	postinc2,postinc1
  5932  010816  EE22  F229         	lfsr	2,_C+298	;volatile
  5933  01081A  006F FF7B FFE6     	movff	postinc2,postinc1
  5934  010820  006F FF7B FFE6     	movff	postinc2,postinc1
  5935  010826  006F FF7B FFE6     	movff	postinc2,postinc1
  5936  01082C  006F FF7B FFE6     	movff	postinc2,postinc1
  5937  010832  0EF0               	movlw	low STR_23
  5938  010834  6EE6               	movwf	postinc1,c
  5939  010836  0EFA               	movlw	high STR_23
  5940  010838  6EE6               	movwf	postinc1,c
  5941  01083A  0E00               	movlw	0
  5942  01083C  6EE6               	movwf	postinc1,c
  5943  01083E  0E02               	movlw	2
  5944  010840  6EE6               	movwf	postinc1,c
  5945  010842  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  5946  010846  0060  F0AB  FFE6   	movff	btemp,postinc1
  5947  01084C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5948  010852  0E0C               	movlw	12
  5949  010854  6EE6               	movwf	postinc1,c
  5950  010856  ECF9  F0FB         	call	_sprintf	;wreg free
  5951                           
  5952                           ;main.c: 329:    update_lcd(0);
  5953  01085A  0E00               	movlw	0
  5954  01085C  6EE6               	movwf	postinc1,c
  5955  01085E  ECAB  F0F4         	call	_update_lcd	;wreg free
  5956                           
  5957                           ;main.c: 330:    WaitMs(4000);
  5958  010862  0EA0               	movlw	160
  5959  010864  6EE6               	movwf	postinc1,c
  5960  010866  0E0F               	movlw	15
  5961  010868  6EE6               	movwf	postinc1,c
  5962  01086A  EC2F  F00F         	call	_WaitMs	;wreg free
  5963                           
  5964                           ;main.c: 331:    V.sensor_set = get_switch(SCALIB);
  5965  01086E  0E04               	movlw	4
  5966  010870  6EE6               	movwf	postinc1,c
  5967  010872  EC42  F010         	call	_get_switch	;wreg free
  5968  010876  502A               	movf	btemp^0,w,c
  5969  010878  B4D8               	btfsc	status,2,c
  5970  01087A  D002               	goto	u17060
  5971  01087C  0E01               	movlw	1
  5972  01087E  D001               	goto	u17070
  5973  010880                     u17060:
  5974  010880  0E00               	movlw	0
  5975  010882                     u17070:
  5976  010882  0102               	movlb	2	; () banked
  5977  010884  6FB2               	movwf	(_V+171)& (0+255),b	;volatile
  5978                           
  5979                           ; BSR set to: 2
  5980                           ;main.c: 332:    WaitMs(1000);
  5981  010886  0EE8               	movlw	232
  5982  010888  6EE6               	movwf	postinc1,c
  5983  01088A  0E03               	movlw	3
  5984  01088C  6EE6               	movwf	postinc1,c
  5985  01088E  EC2F  F00F         	call	_WaitMs	;wreg free
  5986                           
  5987                           ;main.c: 333:    if (V.sensor_set && get_switch(SCALIB)) {
  5988  010892  0102               	movlb	2	; () banked
  5989  010894  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
  5990  010896  B4D8               	btfsc	status,2,c
  5991  010898  D00F               	goto	l17532
  5992                           
  5993                           ; BSR set to: 2
  5994  01089A  0E04               	movlw	4
  5995  01089C  6EE6               	movwf	postinc1,c
  5996  01089E  EC42  F010         	call	_get_switch	;wreg free
  5997  0108A2  502A               	movf	btemp^0,w,c
  5998  0108A4  B4D8               	btfsc	status,2,c
  5999  0108A6  D008               	goto	l17532
  6000                           
  6001                           ;main.c: 334:     current_sensor_cal();
  6002  0108A8  ECC4  F0C7         	call	_current_sensor_cal	;wreg free
  6003                           
  6004                           ;main.c: 335:     WaitMs(4000);
  6005  0108AC  0EA0               	movlw	160
  6006  0108AE  6EE6               	movwf	postinc1,c
  6007  0108B0  0E0F               	movlw	15
  6008  0108B2  6EE6               	movwf	postinc1,c
  6009  0108B4  EC2F  F00F         	call	_WaitMs	;wreg free
  6010  0108B8                     l17532:
  6011                           
  6012                           ;main.c: 337:    V.sensor_set = 0;
  6013  0108B8  0102               	movlb	2	; () banked
  6014  0108BA  6BB2               	clrf	(_V+171)& (0+255),b	;volatile
  6015                           
  6016                           ; BSR set to: 2
  6017                           ;main.c: 338:    V.system_stable = 1;
  6018  0108BC  0E01               	movlw	1
  6019  0108BE  6FB3               	movwf	(_V+172)& (0+255),b	;volatile
  6020                           
  6021                           ;main.c: 339:    break;
  6022  0108C0  D01D               	goto	l17540
  6023  0108C2                     l1475:
  6024                           
  6025                           ; BSR set to: 2
  6026                           ;main.c: 345:    P.SYSTEM_STABLE = 1;
  6027  0108C2  0100               	movlb	0	; () banked
  6028  0108C4  8195               	bsf	(_P+1)& (0+255),0,b	;volatile
  6029                           
  6030                           ;main.c: 346:    break;
  6031  0108C6  D01A               	goto	l17540
  6032  0108C8                     l1477:
  6033                           
  6034                           ; BSR set to: 2
  6035                           ;main.c: 349:    V.ui_state = UI_STATE_INIT;
  6036  0108C8  6B07               	clrf	_V& (0+255),b	;volatile
  6037                           
  6038                           ;main.c: 350:    break;
  6039  0108CA  D018               	goto	l17540
  6040  0108CC                     l17538:
  6041  0108CC  0102               	movlb	2	; () banked
  6042  0108CE  5107               	movf	_V& (0+255),w,b	;volatile
  6043  0108D0  6E34               	movwf	(btemp+10)^0,c
  6044  0108D2  6A35               	clrf	(btemp+11)^0,c
  6045                           
  6046                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6047                           ; Switch size 1, requested type "simple"
  6048                           ; Number of cases is 1, Range of values is 0 to 0
  6049                           ; switch strategies available:
  6050                           ; Name         Instructions Cycles
  6051                           ; simple_byte            4     3 (average)
  6052                           ;	Chosen strategy is simple_byte
  6053  0108D4  5035               	movf	(btemp+11)^0,w,c
  6054  0108D6  0A00               	xorlw	0	; case 0
  6055  0108D8  A4D8               	btfss	status,2,c
  6056  0108DA  D7F6               	goto	l1477
  6057                           
  6058                           ; BSR set to: 2
  6059                           ; Switch size 1, requested type "simple"
  6060                           ; Number of cases is 5, Range of values is 0 to 5
  6061                           ; switch strategies available:
  6062                           ; Name         Instructions Cycles
  6063                           ; simple_byte           16     9 (average)
  6064                           ;	Chosen strategy is simple_byte
  6065  0108DC  5034               	movf	(btemp+10)^0,w,c
  6066  0108DE  0A00               	xorlw	0	; case 0
  6067  0108E0  B4D8               	btfsc	status,2,c
  6068  0108E2  EF3D  F080         	goto	l17382
  6069  0108E6  0A01               	xorlw	1	; case 1
  6070  0108E8  B4D8               	btfsc	status,2,c
  6071  0108EA  D008               	goto	l17540
  6072  0108EC  0A02               	xorlw	2	; case 3
  6073  0108EE  B4D8               	btfsc	status,2,c
  6074  0108F0  D005               	goto	l17540
  6075  0108F2  0A07               	xorlw	7	; case 4
  6076  0108F4  B4D8               	btfsc	status,2,c
  6077  0108F6  D7E5               	goto	l1475
  6078  0108F8  0A01               	xorlw	1	; case 5
  6079  0108FA  D7E6               	goto	l1477
  6080  0108FC                     l17540:
  6081                           
  6082                           ;main.c: 353:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  6083  0108FC  0E01               	movlw	1
  6084  0108FE  6EE6               	movwf	postinc1,c
  6085  010900  ECAD  F010         	call	_TimerDone	;wreg free
  6086  010904  502A               	movf	btemp^0,w,c
  6087  010906  B4D8               	btfsc	status,2,c
  6088  010908  D013               	goto	l17552
  6089  01090A  ECAB  F013         	call	_check_adc_scan	;wreg free
  6090  01090E  502A               	movf	btemp^0,w,c
  6091  010910  B4D8               	btfsc	status,2,c
  6092  010912  D00E               	goto	l17552
  6093                           
  6094                           ;main.c: 357:    convert_adc_data();
  6095  010914  EC49  F002         	call	_convert_adc_data	;wreg free
  6096                           
  6097                           ;main.c: 361:    clear_adc_scan();
  6098  010918  ECC5  F013         	call	_clear_adc_scan	;wreg free
  6099                           
  6100                           ; BSR set to: 1
  6101                           ;main.c: 362:    start_adc_scan();
  6102  01091C  EC61  F00A         	call	_start_adc_scan	;wreg free
  6103                           
  6104                           ;main.c: 363:    StartTimer(TMR_ADC, 200);
  6105  010920  0EC8               	movlw	200
  6106  010922  6EE6               	movwf	postinc1,c
  6107  010924  0E00               	movlw	0
  6108  010926  6EE6               	movwf	postinc1,c
  6109  010928  0E01               	movlw	1
  6110  01092A  6EE6               	movwf	postinc1,c
  6111  01092C  EC22  F00E         	call	_StartTimer	;wreg free
  6112  010930                     l17552:
  6113                           
  6114                           ;main.c: 366:   if (TimerDone(TMR_DISPLAY)) {
  6115  010930  0E0A               	movlw	10
  6116  010932  6EE6               	movwf	postinc1,c
  6117  010934  ECAD  F010         	call	_TimerDone	;wreg free
  6118  010938  502A               	movf	btemp^0,w,c
  6119  01093A  B4D8               	btfsc	status,2,c
  6120  01093C  EF60  F08A         	goto	l17662
  6121                           
  6122                           ;main.c: 367:    if (TimerDone(TMR_HELPDIS)) {
  6123  010940  0E09               	movlw	9
  6124  010942  6EE6               	movwf	postinc1,c
  6125  010944  ECAD  F010         	call	_TimerDone	;wreg free
  6126  010948  502A               	movf	btemp^0,w,c
  6127  01094A  B4D8               	btfsc	status,2,c
  6128  01094C  D004               	goto	l17558
  6129                           
  6130                           ;main.c: 368:     set_display_info(DIS_STR);
  6131  01094E  0E00               	movlw	0
  6132  010950  6EE6               	movwf	postinc1,c
  6133  010952  ECB2  F012         	call	_set_display_info	;wreg free
  6134  010956                     l17558:
  6135                           
  6136                           ;main.c: 370:    pclock = time(((void*)0));
  6137  010956  0E00               	movlw	0
  6138  010958  6EE6               	movwf	postinc1,c
  6139  01095A  0E00               	movlw	0
  6140  01095C  6EE6               	movwf	postinc1,c
  6141  01095E  EC25  F00B         	call	_time	;wreg free
  6142  010962  52E5               	movf	postdec1,f,c
  6143  010964  006F FF9C  F041    	movff	indf1,btemp+23
  6144  01096A  52E5               	movf	postdec1,f,c
  6145  01096C  006F FF9C  F040    	movff	indf1,btemp+22
  6146  010972  52E5               	movf	postdec1,f,c
  6147  010974  006F FF9C  F03F    	movff	indf1,btemp+21
  6148  01097A  52E5               	movf	postdec1,f,c
  6149  01097C  006F FF9C  F03E    	movff	indf1,btemp+20
  6150  010982  52E5               	movf	postdec1,f,c
  6151  010984  006F FF9C  F03D    	movff	indf1,btemp+19
  6152  01098A  52E5               	movf	postdec1,f,c
  6153  01098C  006F FF9C  F03C    	movff	indf1,btemp+18
  6154  010992  52E5               	movf	postdec1,f,c
  6155  010994  006F FF9C  F03B    	movff	indf1,btemp+17
  6156  01099A  52E5               	movf	postdec1,f,c
  6157  01099C  006F FF9C  F03A    	movff	indf1,btemp+16
  6158  0109A2  0060  F0E8  F0DA   	movff	btemp+16,_pclock
  6159  0109A8  0060  F0EC  F0DB   	movff	btemp+17,_pclock+1
  6160  0109AE  0060  F0F0  F0DC   	movff	btemp+18,_pclock+2
  6161  0109B4  0060  F0F4  F0DD   	movff	btemp+19,_pclock+3
  6162  0109BA  0060  F0F8  F0DE   	movff	btemp+20,_pclock+4
  6163  0109C0  0060  F0FC  F0DF   	movff	btemp+21,_pclock+5
  6164  0109C6  0060  F100  F0E0   	movff	btemp+22,_pclock+6
  6165  0109CC  0060  F104  F0E1   	movff	btemp+23,_pclock+7
  6166                           
  6167                           ; BSR set to: 57
  6168                           ;main.c: 371:    t_mbmc = localtime(&pclock);
  6169  0109D2  0EDA               	movlw	_pclock& (0+255)
  6170  0109D4  6EE6               	movwf	postinc1,c
  6171  0109D6  ECF3  F012         	call	_localtime	;wreg free
  6172  0109DA  0060  F0A8  F0BC   	movff	btemp,_t_mbmc
  6173  0109E0  0060  F0AC  F0BD   	movff	btemp+1,_t_mbmc+1
  6174                           
  6175                           ;main.c: 372:    sprintf(get_vterm_ptr(3, 0), "%s           ", asctime(t_mbmc));
  6176  0109E6  0060  F2F3  FFE6   	movff	_t_mbmc,postinc1
  6177  0109EC  0060  F2F7  FFE6   	movff	_t_mbmc+1,postinc1
  6178  0109F2  EC9B  F0C0         	call	_asctime	;wreg free
  6179  0109F6  0060  F0AB  FFE6   	movff	btemp,postinc1
  6180  0109FC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6181  010A02  0E76               	movlw	low (STR_72+5)
  6182  010A04  6EE6               	movwf	postinc1,c
  6183  010A06  0EFF               	movlw	high (STR_72+5)
  6184  010A08  6EE6               	movwf	postinc1,c
  6185  010A0A  0E00               	movlw	0
  6186  010A0C  6EE6               	movwf	postinc1,c
  6187  010A0E  0E03               	movlw	3
  6188  010A10  6EE6               	movwf	postinc1,c
  6189  010A12  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  6190  010A16  0060  F0AB  FFE6   	movff	btemp,postinc1
  6191  010A1C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6192  010A22  0E06               	movlw	6
  6193  010A24  6EE6               	movwf	postinc1,c
  6194  010A26  ECF9  F0FB         	call	_sprintf	;wreg free
  6195                           
  6196                           ; BSR set to: 0
  6197                           ;main.c: 373:    calc_model_data();
  6198  010A2A  ECFE  F0C9         	call	_calc_model_data	;wreg free
  6199                           
  6200                           ; BSR set to: 57
  6201                           ;main.c: 374:    if (C.dupdate) {
  6202  010A2E  EE22  F22E         	lfsr	2,_C+303	;volatile
  6203  010A32  50DF               	movf	indf2,w,c
  6204  010A34  B4D8               	btfsc	status,2,c
  6205  010A36  D0A4               	goto	l17588
  6206                           
  6207                           ; BSR set to: 57
  6208                           ;main.c: 375:     C.dupdate = 0;
  6209  010A38  0E00               	movlw	0
  6210  010A3A  006F FFA0  FA2E    	movff	wreg,_C+303	;volatile
  6211                           
  6212                           ;main.c: 376:     set_hist_flag();
  6213  010A40  ECBF  F013         	call	_set_hist_flag	;wreg free
  6214                           
  6215                           ; BSR set to: 1
  6216                           ;main.c: 377:     load_hist_data();
  6217  010A44  ECDE  F0E0         	call	_load_hist_data	;wreg free
  6218                           
  6219                           ; BSR set to: 57
  6220                           ;main.c: 378:     update_hist_data(0, &C.hist[0]);
  6221  010A48  0EB8               	movlw	low (_C+185)
  6222  010A4A  6EE6               	movwf	postinc1,c
  6223  010A4C  0E09               	movlw	high (_C+185)
  6224  010A4E  6EE6               	movwf	postinc1,c
  6225  010A50  0E00               	movlw	0
  6226  010A52  6EE6               	movwf	postinc1,c
  6227  010A54  EC06  F008         	call	_update_hist_data	;wreg free
  6228                           
  6229                           ;main.c: 379:     write_cal_data();
  6230  010A58  EC08  F0F6         	call	_write_cal_data	;wreg free
  6231                           
  6232                           ;main.c: 380:     sprintf(get_vterm_ptr(0, 0), "History Data  Saved  ");
  6233  010A5C  0EB3               	movlw	low STR_25
  6234  010A5E  6EE6               	movwf	postinc1,c
  6235  010A60  0EFE               	movlw	high STR_25
  6236  010A62  6EE6               	movwf	postinc1,c
  6237  010A64  0E00               	movlw	0
  6238  010A66  6EE6               	movwf	postinc1,c
  6239  010A68  0E00               	movlw	0
  6240  010A6A  6EE6               	movwf	postinc1,c
  6241  010A6C  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  6242  010A70  0060  F0AB  FFE6   	movff	btemp,postinc1
  6243  010A76  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6244  010A7C  0E04               	movlw	4
  6245  010A7E  6EE6               	movwf	postinc1,c
  6246  010A80  ECF9  F0FB         	call	_sprintf	;wreg free
  6247                           
  6248                           ; BSR set to: 0
  6249                           ;main.c: 381:     sprintf(get_vterm_ptr(1, 0), "To EEPROM            ");
  6250  010A84  0E7F               	movlw	low STR_26
  6251  010A86  6EE6               	movwf	postinc1,c
  6252  010A88  0EFD               	movlw	high STR_26
  6253  010A8A  6EE6               	movwf	postinc1,c
  6254  010A8C  0E00               	movlw	0
  6255  010A8E  6EE6               	movwf	postinc1,c
  6256  010A90  0E01               	movlw	1
  6257  010A92  6EE6               	movwf	postinc1,c
  6258  010A94  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  6259  010A98  0060  F0AB  FFE6   	movff	btemp,postinc1
  6260  010A9E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6261  010AA4  0E04               	movlw	4
  6262  010AA6  6EE6               	movwf	postinc1,c
  6263  010AA8  ECF9  F0FB         	call	_sprintf	;wreg free
  6264                           
  6265                           ; BSR set to: 0
  6266                           ;main.c: 382:     sprintf(get_vterm_ptr(2, 0), " Time %lu, %lu       ", time(((void*)0))
      +                          , C.hist[0].updates);
  6267  010AAC  EE22  F1D9         	lfsr	2,_C+218	;volatile
  6268  010AB0  006F FF7B FFE6     	movff	postinc2,postinc1
  6269  010AB6  006F FF7B FFE6     	movff	postinc2,postinc1
  6270  010ABC  006F FF7B FFE6     	movff	postinc2,postinc1
  6271  010AC2  006F FF7B FFE6     	movff	postinc2,postinc1
  6272  010AC8  0E00               	movlw	0
  6273  010ACA  6EE6               	movwf	postinc1,c
  6274  010ACC  0E00               	movlw	0
  6275  010ACE  6EE6               	movwf	postinc1,c
  6276  010AD0  EC25  F00B         	call	_time	;wreg free
  6277  010AD4  52E5               	movf	postdec1,f,c
  6278  010AD6  006F FF9C  F041    	movff	indf1,btemp+23
  6279  010ADC  52E5               	movf	postdec1,f,c
  6280  010ADE  006F FF9C  F040    	movff	indf1,btemp+22
  6281  010AE4  52E5               	movf	postdec1,f,c
  6282  010AE6  006F FF9C  F03F    	movff	indf1,btemp+21
  6283  010AEC  52E5               	movf	postdec1,f,c
  6284  010AEE  006F FF9C  F03E    	movff	indf1,btemp+20
  6285  010AF4  52E5               	movf	postdec1,f,c
  6286  010AF6  006F FF9C  F03D    	movff	indf1,btemp+19
  6287  010AFC  52E5               	movf	postdec1,f,c
  6288  010AFE  006F FF9C  F03C    	movff	indf1,btemp+18
  6289  010B04  52E5               	movf	postdec1,f,c
  6290  010B06  006F FF9C  F03B    	movff	indf1,btemp+17
  6291  010B0C  52E5               	movf	postdec1,f,c
  6292  010B0E  006F FF9C  F03A    	movff	indf1,btemp+16
  6293  010B14  0060  F0EB  FFE6   	movff	btemp+16,postinc1
  6294  010B1A  0060  F0EF  FFE6   	movff	btemp+17,postinc1
  6295  010B20  0060  F0F3  FFE6   	movff	btemp+18,postinc1
  6296  010B26  0060  F0F7  FFE6   	movff	btemp+19,postinc1
  6297  010B2C  0060  F0FB  FFE6   	movff	btemp+20,postinc1
  6298  010B32  0060  F0FF  FFE6   	movff	btemp+21,postinc1
  6299  010B38  0060  F103  FFE6   	movff	btemp+22,postinc1
  6300  010B3E  0060  F107  FFE6   	movff	btemp+23,postinc1
  6301  010B44  0E2F               	movlw	low STR_27
  6302  010B46  6EE6               	movwf	postinc1,c
  6303  010B48  0EFE               	movlw	high STR_27
  6304  010B4A  6EE6               	movwf	postinc1,c
  6305  010B4C  0E00               	movlw	0
  6306  010B4E  6EE6               	movwf	postinc1,c
  6307  010B50  0E02               	movlw	2
  6308  010B52  6EE6               	movwf	postinc1,c
  6309  010B54  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  6310  010B58  0060  F0AB  FFE6   	movff	btemp,postinc1
  6311  010B5E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6312  010B64  0E10               	movlw	16
  6313  010B66  6EE6               	movwf	postinc1,c
  6314  010B68  ECF9  F0FB         	call	_sprintf	;wreg free
  6315                           
  6316                           ; BSR set to: 0
  6317                           ;main.c: 383:     update_lcd(0);
  6318  010B6C  0E00               	movlw	0
  6319  010B6E  6EE6               	movwf	postinc1,c
  6320  010B70  ECAB  F0F4         	call	_update_lcd	;wreg free
  6321                           
  6322                           ;main.c: 384:     WaitMs(2000);
  6323  010B74  0ED0               	movlw	208
  6324  010B76  6EE6               	movwf	postinc1,c
  6325  010B78  0E07               	movlw	7
  6326  010B7A  6EE6               	movwf	postinc1,c
  6327  010B7C  EC2F  F00F         	call	_WaitMs	;wreg free
  6328  010B80                     l17588:
  6329                           
  6330                           ;main.c: 392:     hid_display(&H);
  6331  010B80  0E9B               	movlw	low _H
  6332  010B82  6EE6               	movwf	postinc1,c
  6333  010B84  0E01               	movlw	high _H
  6334  010B86  6EE6               	movwf	postinc1,c
  6335  010B88  EC98  F0E7         	call	_hid_display	;wreg free
  6336                           
  6337                           ;main.c: 393:     switch (H.hid_display) {
  6338  010B8C  EFF1  F089         	goto	l17632
  6339  010B90                     l1485:
  6340                           
  6341                           ; BSR set to: 1
  6342                           ;main.c: 395:      V.calib = 0;
  6343  010B90  0102               	movlb	2	; () banked
  6344  010B92  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  6345                           
  6346                           ; BSR set to: 2
  6347                           ;main.c: 396:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f       ", (C.day) ? 'D' 
      +                          : ' ', C.p_pv);
  6348  010B94  EE22  F22D         	lfsr	2,_C+302	;volatile
  6349  010B98  50DF               	movf	indf2,w,c
  6350  010B9A  A4D8               	btfss	status,2,c
  6351  010B9C  D002               	goto	l17594
  6352                           
  6353                           ; BSR set to: 2
  6354  010B9E  0E20               	movlw	32
  6355  010BA0  D001               	goto	L1
  6356  010BA2                     l17594:
  6357                           
  6358                           ; BSR set to: 2
  6359  010BA2  0E44               	movlw	68
  6360  010BA4                     L1:
  6361  010BA4  6E34               	movwf	(btemp+10)^0,c
  6362  010BA6  0E00               	movlw	0
  6363  010BA8  6E35               	movwf	(btemp+11)^0,c
  6364                           
  6365                           ;stkvar	_main$4031 @ sp[(-17)+2]
  6366  010BAA  0EF1               	movlw	-15
  6367  010BAC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  6368  010BB2  0EF2               	movlw	-14
  6369  010BB4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  6370                           
  6371                           ; BSR set to: 2
  6372  010BBA  EE22  F17B         	lfsr	2,_C+124	;volatile
  6373  010BBE  006F FF7B FFE6     	movff	postinc2,postinc1
  6374  010BC4  006F FF7B FFE6     	movff	postinc2,postinc1
  6375  010BCA  006F FF7B FFE6     	movff	postinc2,postinc1
  6376  010BD0  006F FF7B FFE6     	movff	postinc2,postinc1
  6377                           
  6378                           ;stkvar	_main$4031 @ sp[(-21)+2]
  6379  010BD6  0EED               	movlw	-19
  6380  010BD8  006F FF8F FFE6     	movff	plusw1,postinc1
  6381  010BDE  006F FF8F FFE6     	movff	plusw1,postinc1
  6382  010BE4  0EB4               	movlw	low STR_31
  6383  010BE6  6EE6               	movwf	postinc1,c
  6384  010BE8  0EFC               	movlw	high STR_31
  6385  010BEA  6EE6               	movwf	postinc1,c
  6386  010BEC  0E00               	movlw	0
  6387  010BEE  6EE6               	movwf	postinc1,c
  6388  010BF0  0E00               	movlw	0
  6389  010BF2  6EE6               	movwf	postinc1,c
  6390  010BF4  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  6391  010BF8  0060  F0AB  FFE6   	movff	btemp,postinc1
  6392  010BFE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6393  010C04  0E0A               	movlw	10
  6394  010C06  6EE6               	movwf	postinc1,c
  6395  010C08  ECF9  F0FB         	call	_sprintf	;wreg free
  6396                           
  6397                           ; BSR set to: 0
  6398                           ;main.c: 397:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f        ", C.p_load);
  6399  010C0C  EE22  F173         	lfsr	2,_C+116	;volatile
  6400  010C10  006F FF7B FFE6     	movff	postinc2,postinc1
  6401  010C16  006F FF7B FFE6     	movff	postinc2,postinc1
  6402  010C1C  006F FF7B FFE6     	movff	postinc2,postinc1
  6403  010C22  006F FF7B FFE6     	movff	postinc2,postinc1
  6404  010C28  0E9D               	movlw	low STR_32
  6405  010C2A  6EE6               	movwf	postinc1,c
  6406  010C2C  0EFC               	movlw	high STR_32
  6407  010C2E  6EE6               	movwf	postinc1,c
  6408  010C30  0E00               	movlw	0
  6409  010C32  6EE6               	movwf	postinc1,c
  6410  010C34  0E01               	movlw	1
  6411  010C36  6EE6               	movwf	postinc1,c
  6412  010C38  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  6413  010C3C  0060  F0AB  FFE6   	movff	btemp,postinc1
  6414  010C42  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6415  010C48  0E08               	movlw	8
  6416  010C4A  6EE6               	movwf	postinc1,c
  6417  010C4C  ECF9  F0FB         	call	_sprintf	;wreg free
  6418                           
  6419                           ; BSR set to: 0
  6420                           ;main.c: 398:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f        ", C.p_inverter);
  6421  010C50  EE22  F177         	lfsr	2,_C+120	;volatile
  6422  010C54  006F FF7B FFE6     	movff	postinc2,postinc1
  6423  010C5A  006F FF7B FFE6     	movff	postinc2,postinc1
  6424  010C60  006F FF7B FFE6     	movff	postinc2,postinc1
  6425  010C66  006F FF7B FFE6     	movff	postinc2,postinc1
  6426  010C6C  0E86               	movlw	low STR_33
  6427  010C6E  6EE6               	movwf	postinc1,c
  6428  010C70  0EFC               	movlw	high STR_33
  6429  010C72  6EE6               	movwf	postinc1,c
  6430  010C74  0E00               	movlw	0
  6431  010C76  6EE6               	movwf	postinc1,c
  6432  010C78  0E02               	movlw	2
  6433  010C7A  6EE6               	movwf	postinc1,c
  6434  010C7C  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  6435  010C80  0060  F0AB  FFE6   	movff	btemp,postinc1
  6436  010C86  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6437  010C8C  0E08               	movlw	8
  6438  010C8E  6EE6               	movwf	postinc1,c
  6439  010C90  ECF9  F0FB         	call	_sprintf	;wreg free
  6440                           
  6441                           ; BSR set to: 0
  6442                           ;main.c: 400:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f        ", (C.day) ? 'D' 
      +                          : ' ', C.pvkw);
  6443  010C94  EE22  F22D         	lfsr	2,_C+302	;volatile
  6444  010C98  50DF               	movf	indf2,w,c
  6445  010C9A  A4D8               	btfss	status,2,c
  6446  010C9C  D002               	goto	l17606
  6447                           
  6448                           ; BSR set to: 0
  6449  010C9E  0E20               	movlw	32
  6450  010CA0  D001               	goto	L2
  6451  010CA2                     l17606:
  6452                           
  6453                           ; BSR set to: 0
  6454  010CA2  0E44               	movlw	68
  6455  010CA4                     L2:
  6456  010CA4  6E34               	movwf	(btemp+10)^0,c
  6457  010CA6  0E00               	movlw	0
  6458  010CA8  6E35               	movwf	(btemp+11)^0,c
  6459                           
  6460                           ;stkvar	_main$4035 @ sp[(-17)+0]
  6461  010CAA  0EEF               	movlw	-17
  6462  010CAC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  6463  010CB2  0EF0               	movlw	-16
  6464  010CB4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  6465                           
  6466                           ; BSR set to: 0
  6467  010CBA  EE22  F1A7         	lfsr	2,_C+168	;volatile
  6468  010CBE  006F FF7B FFE6     	movff	postinc2,postinc1
  6469  010CC4  006F FF7B FFE6     	movff	postinc2,postinc1
  6470  010CCA  006F FF7B FFE6     	movff	postinc2,postinc1
  6471  010CD0  006F FF7B FFE6     	movff	postinc2,postinc1
  6472                           
  6473                           ;stkvar	_main$4035 @ sp[(-21)+0]
  6474  010CD6  0EEB               	movlw	-21
  6475  010CD8  006F FF8F FFE6     	movff	plusw1,postinc1
  6476  010CDE  006F FF8F FFE6     	movff	plusw1,postinc1
  6477  010CE4  0E6F               	movlw	low STR_34
  6478  010CE6  6EE6               	movwf	postinc1,c
  6479  010CE8  0EFC               	movlw	high STR_34
  6480  010CEA  6EE6               	movwf	postinc1,c
  6481  010CEC  0E01               	movlw	1
  6482  010CEE  6EE6               	movwf	postinc1,c
  6483  010CF0  0E00               	movlw	0
  6484  010CF2  6EE6               	movwf	postinc1,c
  6485  010CF4  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  6486  010CF8  0060  F0AB  FFE6   	movff	btemp,postinc1
  6487  010CFE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6488  010D04  0E0A               	movlw	10
  6489  010D06  6EE6               	movwf	postinc1,c
  6490  010D08  ECF9  F0FB         	call	_sprintf	;wreg free
  6491                           
  6492                           ; BSR set to: 0
  6493                           ;main.c: 401:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f         ", C.loadkw);
  6494  010D0C  EE22  F1AF         	lfsr	2,_C+176	;volatile
  6495  010D10  006F FF7B FFE6     	movff	postinc2,postinc1
  6496  010D16  006F FF7B FFE6     	movff	postinc2,postinc1
  6497  010D1C  006F FF7B FFE6     	movff	postinc2,postinc1
  6498  010D22  006F FF7B FFE6     	movff	postinc2,postinc1
  6499  010D28  0E58               	movlw	low STR_35
  6500  010D2A  6EE6               	movwf	postinc1,c
  6501  010D2C  0EFC               	movlw	high STR_35
  6502  010D2E  6EE6               	movwf	postinc1,c
  6503  010D30  0E01               	movlw	1
  6504  010D32  6EE6               	movwf	postinc1,c
  6505  010D34  0E01               	movlw	1
  6506  010D36  6EE6               	movwf	postinc1,c
  6507  010D38  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  6508  010D3C  0060  F0AB  FFE6   	movff	btemp,postinc1
  6509  010D42  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6510  010D48  0E08               	movlw	8
  6511  010D4A  6EE6               	movwf	postinc1,c
  6512  010D4C  ECF9  F0FB         	call	_sprintf	;wreg free
  6513                           
  6514                           ; BSR set to: 0
  6515                           ;main.c: 402:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f         ", C.invkw);
  6516  010D50  EE22  F1AB         	lfsr	2,_C+172	;volatile
  6517  010D54  006F FF7B FFE6     	movff	postinc2,postinc1
  6518  010D5A  006F FF7B FFE6     	movff	postinc2,postinc1
  6519  010D60  006F FF7B FFE6     	movff	postinc2,postinc1
  6520  010D66  006F FF7B FFE6     	movff	postinc2,postinc1
  6521  010D6C  0E41               	movlw	low STR_36
  6522  010D6E  6EE6               	movwf	postinc1,c
  6523  010D70  0EFC               	movlw	high STR_36
  6524  010D72  6EE6               	movwf	postinc1,c
  6525  010D74  0E01               	movlw	1
  6526  010D76  6EE6               	movwf	postinc1,c
  6527  010D78  0E02               	movlw	2
  6528  010D7A  6EE6               	movwf	postinc1,c
  6529  010D7C  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  6530  010D80  0060  F0AB  FFE6   	movff	btemp,postinc1
  6531  010D86  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6532  010D8C  0E08               	movlw	8
  6533  010D8E  6EE6               	movwf	postinc1,c
  6534  010D90  ECF9  F0FB         	call	_sprintf	;wreg free
  6535                           
  6536                           ;main.c: 403:      break;
  6537  010D94  D33C               	goto	l17634
  6538  010D96                     l1495:
  6539                           
  6540                           ; BSR set to: 1
  6541                           ;main.c: 405:      V.calib = 0;
  6542  010D96  0102               	movlb	2	; () banked
  6543  010D98  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  6544                           
  6545                           ; BSR set to: 2
  6546                           ;main.c: 406:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f     ", C.calc[V_PV], 
      +                          C.calc[C_PV]);
  6547  010D9A  EE22  F103         	lfsr	2,_C+4	;volatile
  6548  010D9E  006F FF7B FFE6     	movff	postinc2,postinc1
  6549  010DA4  006F FF7B FFE6     	movff	postinc2,postinc1
  6550  010DAA  006F FF7B FFE6     	movff	postinc2,postinc1
  6551  010DB0  006F FF7B FFE6     	movff	postinc2,postinc1
  6552  010DB6  EE22  F113         	lfsr	2,_C+20	;volatile
  6553  010DBA  006F FF7B FFE6     	movff	postinc2,postinc1
  6554  010DC0  006F FF7B FFE6     	movff	postinc2,postinc1
  6555  010DC6  006F FF7B FFE6     	movff	postinc2,postinc1
  6556  010DCC  006F FF7B FFE6     	movff	postinc2,postinc1
  6557  010DD2  0E10               	movlw	low STR_37
  6558  010DD4  6EE6               	movwf	postinc1,c
  6559  010DD6  0EFD               	movlw	high STR_37
  6560  010DD8  6EE6               	movwf	postinc1,c
  6561  010DDA  0E00               	movlw	0
  6562  010DDC  6EE6               	movwf	postinc1,c
  6563  010DDE  0E00               	movlw	0
  6564  010DE0  6EE6               	movwf	postinc1,c
  6565  010DE2  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  6566  010DE6  0060  F0AB  FFE6   	movff	btemp,postinc1
  6567  010DEC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6568  010DF2  0E0C               	movlw	12
  6569  010DF4  6EE6               	movwf	postinc1,c
  6570  010DF6  ECF9  F0FB         	call	_sprintf	;wreg free
  6571                           
  6572                           ;main.c: 407:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f     ", C.calc[V_BAT],
      +                           C.calc[C_BATT]);
  6573  010DFA  EE22  F0FF         	lfsr	2,_C
  6574  010DFE  006F FF7B FFE6     	movff	postinc2,postinc1
  6575  010E04  006F FF7B FFE6     	movff	postinc2,postinc1
  6576  010E0A  006F FF7B FFE6     	movff	postinc2,postinc1
  6577  010E10  006F FF7B FFE6     	movff	postinc2,postinc1
  6578  010E16  EE22  F10F         	lfsr	2,_C+16	;volatile
  6579  010E1A  006F FF7B FFE6     	movff	postinc2,postinc1
  6580  010E20  006F FF7B FFE6     	movff	postinc2,postinc1
  6581  010E26  006F FF7B FFE6     	movff	postinc2,postinc1
  6582  010E2C  006F FF7B FFE6     	movff	postinc2,postinc1
  6583  010E32  0EE2               	movlw	low STR_38
  6584  010E34  6EE6               	movwf	postinc1,c
  6585  010E36  0EFC               	movlw	high STR_38
  6586  010E38  6EE6               	movwf	postinc1,c
  6587  010E3A  0E00               	movlw	0
  6588  010E3C  6EE6               	movwf	postinc1,c
  6589  010E3E  0E01               	movlw	1
  6590  010E40  6EE6               	movwf	postinc1,c
  6591  010E42  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  6592  010E46  0060  F0AB  FFE6   	movff	btemp,postinc1
  6593  010E4C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6594  010E52  0E0C               	movlw	12
  6595  010E54  6EE6               	movwf	postinc1,c
  6596  010E56  ECF9  F0FB         	call	_sprintf	;wreg free
  6597                           
  6598                           ;main.c: 408:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f     ", C.calc[V_CC], 
      +                          C.c_load);
  6599  010E5A  EE22  F13F         	lfsr	2,_C+64	;volatile
  6600  010E5E  006F FF7B FFE6     	movff	postinc2,postinc1
  6601  010E64  006F FF7B FFE6     	movff	postinc2,postinc1
  6602  010E6A  006F FF7B FFE6     	movff	postinc2,postinc1
  6603  010E70  006F FF7B FFE6     	movff	postinc2,postinc1
  6604  010E76  EE22  F107         	lfsr	2,_C+8	;volatile
  6605  010E7A  006F FF7B FFE6     	movff	postinc2,postinc1
  6606  010E80  006F FF7B FFE6     	movff	postinc2,postinc1
  6607  010E86  006F FF7B FFE6     	movff	postinc2,postinc1
  6608  010E8C  006F FF7B FFE6     	movff	postinc2,postinc1
  6609  010E92  0EF9               	movlw	low STR_39
  6610  010E94  6EE6               	movwf	postinc1,c
  6611  010E96  0EFC               	movlw	high STR_39
  6612  010E98  6EE6               	movwf	postinc1,c
  6613  010E9A  0E00               	movlw	0
  6614  010E9C  6EE6               	movwf	postinc1,c
  6615  010E9E  0E02               	movlw	2
  6616  010EA0  6EE6               	movwf	postinc1,c
  6617  010EA2  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  6618  010EA6  0060  F0AB  FFE6   	movff	btemp,postinc1
  6619  010EAC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6620  010EB2  0E0C               	movlw	12
  6621  010EB4  6EE6               	movwf	postinc1,c
  6622  010EB6  ECF9  F0FB         	call	_sprintf	;wreg free
  6623                           
  6624                           ;main.c: 410:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f         ", C.bkwi);
  6625  010EBA  EE22  F19F         	lfsr	2,_C+160	;volatile
  6626  010EBE  006F FF7B FFE6     	movff	postinc2,postinc1
  6627  010EC4  006F FF7B FFE6     	movff	postinc2,postinc1
  6628  010ECA  006F FF7B FFE6     	movff	postinc2,postinc1
  6629  010ED0  006F FF7B FFE6     	movff	postinc2,postinc1
  6630  010ED6  0EFC               	movlw	low STR_40
  6631  010ED8  6EE6               	movwf	postinc1,c
  6632  010EDA  0EFB               	movlw	high STR_40
  6633  010EDC  6EE6               	movwf	postinc1,c
  6634  010EDE  0E01               	movlw	1
  6635  010EE0  6EE6               	movwf	postinc1,c
  6636  010EE2  0E00               	movlw	0
  6637  010EE4  6EE6               	movwf	postinc1,c
  6638  010EE6  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  6639  010EEA  0060  F0AB  FFE6   	movff	btemp,postinc1
  6640  010EF0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6641  010EF6  0E08               	movlw	8
  6642  010EF8  6EE6               	movwf	postinc1,c
  6643  010EFA  ECF9  F0FB         	call	_sprintf	;wreg free
  6644                           
  6645                           ;main.c: 411:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f         ", C.bkwo);
  6646  010EFE  EE22  F1A3         	lfsr	2,_C+164	;volatile
  6647  010F02  006F FF7B FFE6     	movff	postinc2,postinc1
  6648  010F08  006F FF7B FFE6     	movff	postinc2,postinc1
  6649  010F0E  006F FF7B FFE6     	movff	postinc2,postinc1
  6650  010F14  006F FF7B FFE6     	movff	postinc2,postinc1
  6651  010F1A  0E13               	movlw	low STR_41
  6652  010F1C  6EE6               	movwf	postinc1,c
  6653  010F1E  0EFC               	movlw	high STR_41
  6654  010F20  6EE6               	movwf	postinc1,c
  6655  010F22  0E01               	movlw	1
  6656  010F24  6EE6               	movwf	postinc1,c
  6657  010F26  0E01               	movlw	1
  6658  010F28  6EE6               	movwf	postinc1,c
  6659  010F2A  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  6660  010F2E  0060  F0AB  FFE6   	movff	btemp,postinc1
  6661  010F34  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6662  010F3A  0E08               	movlw	8
  6663  010F3C  6EE6               	movwf	postinc1,c
  6664  010F3E  ECF9  F0FB         	call	_sprintf	;wreg free
  6665                           
  6666                           ;main.c: 412:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f         ", C.bkwi + C.bkw
      +                          o);
  6667  010F42  EE22  F1A3         	lfsr	2,_C+164	;volatile
  6668  010F46  006F FF7B FFE6     	movff	postinc2,postinc1
  6669  010F4C  006F FF7B FFE6     	movff	postinc2,postinc1
  6670  010F52  006F FF7B FFE6     	movff	postinc2,postinc1
  6671  010F58  006F FF7B FFE6     	movff	postinc2,postinc1
  6672  010F5E  EE22  F19F         	lfsr	2,_C+160	;volatile
  6673  010F62  006F FF7B FFE6     	movff	postinc2,postinc1
  6674  010F68  006F FF7B FFE6     	movff	postinc2,postinc1
  6675  010F6E  006F FF7B FFE6     	movff	postinc2,postinc1
  6676  010F74  006F FF7B FFE6     	movff	postinc2,postinc1
  6677  010F7A  ECA2  F0B6         	call	___fladd	;wreg free
  6678  010F7E  0060  F0AB  FFE6   	movff	btemp,postinc1
  6679  010F84  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6680  010F8A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  6681  010F90  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  6682  010F96  0E2A               	movlw	low STR_42
  6683  010F98  6EE6               	movwf	postinc1,c
  6684  010F9A  0EFC               	movlw	high STR_42
  6685  010F9C  6EE6               	movwf	postinc1,c
  6686  010F9E  0E01               	movlw	1
  6687  010FA0  6EE6               	movwf	postinc1,c
  6688  010FA2  0E02               	movlw	2
  6689  010FA4  6EE6               	movwf	postinc1,c
  6690  010FA6  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  6691  010FAA  0060  F0AB  FFE6   	movff	btemp,postinc1
  6692  010FB0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6693  010FB6  0E08               	movlw	8
  6694  010FB8  6EE6               	movwf	postinc1,c
  6695  010FBA  ECF9  F0FB         	call	_sprintf	;wreg free
  6696                           
  6697                           ;main.c: 413:      break;
  6698  010FBE  D227               	goto	l17634
  6699  010FC0                     l1496:
  6700                           
  6701                           ; BSR set to: 1
  6702                           ;main.c: 415:      V.calib = 0;
  6703  010FC0  0102               	movlb	2	; () banked
  6704  010FC2  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  6705                           
  6706                           ; BSR set to: 2
  6707                           ;main.c: 416:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f         ", C.p_bat);
  6708  010FC4  EE22  F17F         	lfsr	2,_C+128	;volatile
  6709  010FC8  006F FF7B FFE6     	movff	postinc2,postinc1
  6710  010FCE  006F FF7B FFE6     	movff	postinc2,postinc1
  6711  010FD4  006F FF7B FFE6     	movff	postinc2,postinc1
  6712  010FDA  006F FF7B FFE6     	movff	postinc2,postinc1
  6713  010FE0  0E57               	movlw	low STR_43
  6714  010FE2  6EE6               	movwf	postinc1,c
  6715  010FE4  0EFB               	movlw	high STR_43
  6716  010FE6  6EE6               	movwf	postinc1,c
  6717  010FE8  0E00               	movlw	0
  6718  010FEA  6EE6               	movwf	postinc1,c
  6719  010FEC  0E00               	movlw	0
  6720  010FEE  6EE6               	movwf	postinc1,c
  6721  010FF0  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  6722  010FF4  0060  F0AB  FFE6   	movff	btemp,postinc1
  6723  010FFA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6724  011000  0E08               	movlw	8
  6725  011002  6EE6               	movwf	postinc1,c
  6726  011004  ECF9  F0FB         	call	_sprintf	;wreg free
  6727                           
  6728                           ;main.c: 417:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f       ", C.dynamic_ah,
      +                           C.pv_ah);
  6729  011008  EE22  F193         	lfsr	2,_C+148	;volatile
  6730  01100C  006F FF7B FFE6     	movff	postinc2,postinc1
  6731  011012  006F FF7B FFE6     	movff	postinc2,postinc1
  6732  011018  006F FF7B FFE6     	movff	postinc2,postinc1
  6733  01101E  006F FF7B FFE6     	movff	postinc2,postinc1
  6734  011024  EE22  F18F         	lfsr	2,_C+144	;volatile
  6735  011028  006F FF7B FFE6     	movff	postinc2,postinc1
  6736  01102E  006F FF7B FFE6     	movff	postinc2,postinc1
  6737  011034  006F FF7B FFE6     	movff	postinc2,postinc1
  6738  01103A  006F FF7B FFE6     	movff	postinc2,postinc1
  6739  011040  0E9F               	movlw	low STR_44
  6740  011042  6EE6               	movwf	postinc1,c
  6741  011044  0EFB               	movlw	high STR_44
  6742  011046  6EE6               	movwf	postinc1,c
  6743  011048  0E00               	movlw	0
  6744  01104A  6EE6               	movwf	postinc1,c
  6745  01104C  0E01               	movlw	1
  6746  01104E  6EE6               	movwf	postinc1,c
  6747  011050  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  6748  011054  0060  F0AB  FFE6   	movff	btemp,postinc1
  6749  01105A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6750  011060  0E0C               	movlw	12
  6751  011062  6EE6               	movwf	postinc1,c
  6752  011064  ECF9  F0FB         	call	_sprintf	;wreg free
  6753                           
  6754                           ;main.c: 418:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d V%2.2f        ", spinner
      +                          s(5, 0), C.soc, C.runtime, C.calc[V_BAT]);
  6755  011068  EE22  F10F         	lfsr	2,_C+16	;volatile
  6756  01106C  006F FF7B FFE6     	movff	postinc2,postinc1
  6757  011072  006F FF7B FFE6     	movff	postinc2,postinc1
  6758  011078  006F FF7B FFE6     	movff	postinc2,postinc1
  6759  01107E  006F FF7B FFE6     	movff	postinc2,postinc1
  6760  011084  EE22  F1B3         	lfsr	2,_C+180	;volatile
  6761  011088  006F FF78  F034    	movff	postinc2,btemp+10
  6762  01108E  006F FF74  F035    	movff	postdec2,btemp+11
  6763  011094  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  6764  01109A  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  6765  0110A0  EE22  F1B5         	lfsr	2,_C+182	;volatile
  6766  0110A4  006F FF78  F034    	movff	postinc2,btemp+10
  6767  0110AA  006F FF74  F035    	movff	postdec2,btemp+11
  6768  0110B0  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  6769  0110B6  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  6770  0110BC  0E00               	movlw	0
  6771  0110BE  6EE6               	movwf	postinc1,c
  6772  0110C0  0E05               	movlw	5
  6773  0110C2  6EE6               	movwf	postinc1,c
  6774  0110C4  EC75  F0FD         	call	_spinners	;wreg free
  6775  0110C8  502A               	movf	btemp^0,w,c
  6776  0110CA  6EE6               	movwf	postinc1,c
  6777  0110CC  0E00               	movlw	0
  6778  0110CE  6EE6               	movwf	postinc1,c
  6779  0110D0  0E9B               	movlw	low STR_45
  6780  0110D2  6EE6               	movwf	postinc1,c
  6781  0110D4  0EFA               	movlw	high STR_45
  6782  0110D6  6EE6               	movwf	postinc1,c
  6783  0110D8  0E00               	movlw	0
  6784  0110DA  6EE6               	movwf	postinc1,c
  6785  0110DC  0E02               	movlw	2
  6786  0110DE  6EE6               	movwf	postinc1,c
  6787  0110E0  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  6788  0110E4  0060  F0AB  FFE6   	movff	btemp,postinc1
  6789  0110EA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6790  0110F0  0E0E               	movlw	14
  6791  0110F2  6EE6               	movwf	postinc1,c
  6792  0110F4  ECF9  F0FB         	call	_sprintf	;wreg free
  6793                           
  6794                           ;main.c: 420:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f             ", C.esr);
  6795  0110F8  EE22  F187         	lfsr	2,_C+136	;volatile
  6796  0110FC  006F FF7B FFE6     	movff	postinc2,postinc1
  6797  011102  006F FF7B FFE6     	movff	postinc2,postinc1
  6798  011108  006F FF7B FFE6     	movff	postinc2,postinc1
  6799  01110E  006F FF7B FFE6     	movff	postinc2,postinc1
  6800  011114  0E3F               	movlw	low STR_46
  6801  011116  6EE6               	movwf	postinc1,c
  6802  011118  0EFB               	movlw	high STR_46
  6803  01111A  6EE6               	movwf	postinc1,c
  6804  01111C  0E01               	movlw	1
  6805  01111E  6EE6               	movwf	postinc1,c
  6806  011120  0E00               	movlw	0
  6807  011122  6EE6               	movwf	postinc1,c
  6808  011124  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  6809  011128  0060  F0AB  FFE6   	movff	btemp,postinc1
  6810  01112E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6811  011134  0E08               	movlw	8
  6812  011136  6EE6               	movwf	postinc1,c
  6813  011138  ECF9  F0FB         	call	_sprintf	;wreg free
  6814                           
  6815                           ;main.c: 421:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f         ", C.bv_one_load
      +                          , C.load_i1);
  6816  01113C  EE22  F219         	lfsr	2,_C+282	;volatile
  6817  011140  006F FF7B FFE6     	movff	postinc2,postinc1
  6818  011146  006F FF7B FFE6     	movff	postinc2,postinc1
  6819  01114C  006F FF7B FFE6     	movff	postinc2,postinc1
  6820  011152  006F FF7B FFE6     	movff	postinc2,postinc1
  6821  011158  EE22  F225         	lfsr	2,_C+294	;volatile
  6822  01115C  006F FF7B FFE6     	movff	postinc2,postinc1
  6823  011162  006F FF7B FFE6     	movff	postinc2,postinc1
  6824  011168  006F FF7B FFE6     	movff	postinc2,postinc1
  6825  01116E  006F FF7B FFE6     	movff	postinc2,postinc1
  6826  011174  0E6F               	movlw	low STR_47
  6827  011176  6EE6               	movwf	postinc1,c
  6828  011178  0EFB               	movlw	high STR_47
  6829  01117A  6EE6               	movwf	postinc1,c
  6830  01117C  0E01               	movlw	1
  6831  01117E  6EE6               	movwf	postinc1,c
  6832  011180  0E01               	movlw	1
  6833  011182  6EE6               	movwf	postinc1,c
  6834  011184  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  6835  011188  0060  F0AB  FFE6   	movff	btemp,postinc1
  6836  01118E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6837  011194  0E0C               	movlw	12
  6838  011196  6EE6               	movwf	postinc1,c
  6839  011198  ECF9  F0FB         	call	_sprintf	;wreg free
  6840                           
  6841                           ;main.c: 422:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f         ", C.bv_full_loa
      +                          d, C.load_i2);
  6842  01119C  EE22  F21D         	lfsr	2,_C+286	;volatile
  6843  0111A0  006F FF7B FFE6     	movff	postinc2,postinc1
  6844  0111A6  006F FF7B FFE6     	movff	postinc2,postinc1
  6845  0111AC  006F FF7B FFE6     	movff	postinc2,postinc1
  6846  0111B2  006F FF7B FFE6     	movff	postinc2,postinc1
  6847  0111B8  EE22  F229         	lfsr	2,_C+298	;volatile
  6848  0111BC  006F FF7B FFE6     	movff	postinc2,postinc1
  6849  0111C2  006F FF7B FFE6     	movff	postinc2,postinc1
  6850  0111C8  006F FF7B FFE6     	movff	postinc2,postinc1
  6851  0111CE  006F FF7B FFE6     	movff	postinc2,postinc1
  6852  0111D4  0E87               	movlw	low STR_48
  6853  0111D6  6EE6               	movwf	postinc1,c
  6854  0111D8  0EFB               	movlw	high STR_48
  6855  0111DA  6EE6               	movwf	postinc1,c
  6856  0111DC  0E01               	movlw	1
  6857  0111DE  6EE6               	movwf	postinc1,c
  6858  0111E0  0E02               	movlw	2
  6859  0111E2  6EE6               	movwf	postinc1,c
  6860  0111E4  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  6861  0111E8  0060  F0AB  FFE6   	movff	btemp,postinc1
  6862  0111EE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6863  0111F4  0E0C               	movlw	12
  6864  0111F6  6EE6               	movwf	postinc1,c
  6865  0111F8  ECF9  F0FB         	call	_sprintf	;wreg free
  6866                           
  6867                           ;main.c: 423:      break;
  6868  0111FC  D108               	goto	l17634
  6869  0111FE                     l17618:
  6870                           
  6871                           ; BSR set to: 1
  6872                           ;main.c: 425:      if (!V.calib) {
  6873  0111FE  0102               	movlb	2	; () banked
  6874  011200  51B0               	movf	(_V+169)& (0+255),w,b	;volatile
  6875  011202  A4D8               	btfss	status,2,c
  6876  011204  D02D               	goto	l17622
  6877                           
  6878                           ; BSR set to: 2
  6879                           ;main.c: 426:       lp_filter(0.0, i, -1);
  6880  011206  0EFF               	movlw	255
  6881  011208  6EE6               	movwf	postinc1,c
  6882                           
  6883                           ;stkvar	_i @ sp[(-18)+14]
  6884  01120A  0EFC               	movlw	-4
  6885  01120C  50E3               	movf	plusw1,w,c
  6886  01120E  6EE6               	movwf	postinc1,c
  6887  011210  0E00               	movlw	0
  6888  011212  6EE6               	movwf	postinc1,c
  6889  011214  0E00               	movlw	0
  6890  011216  6EE6               	movwf	postinc1,c
  6891  011218  0E00               	movlw	0
  6892  01121A  6EE6               	movwf	postinc1,c
  6893  01121C  0E00               	movlw	0
  6894  01121E  6EE6               	movwf	postinc1,c
  6895  011220  EC96  F0EB         	call	_lp_filter	;wreg free
  6896                           
  6897                           ;main.c: 427:       lp_filter(0.0, j, -1);
  6898  011224  0EFF               	movlw	255
  6899  011226  6EE6               	movwf	postinc1,c
  6900                           
  6901                           ;stkvar	_j @ sp[(-18)+13]
  6902  011228  0EFB               	movlw	-5
  6903  01122A  50E3               	movf	plusw1,w,c
  6904  01122C  6EE6               	movwf	postinc1,c
  6905  01122E  0E00               	movlw	0
  6906  011230  6EE6               	movwf	postinc1,c
  6907  011232  0E00               	movlw	0
  6908  011234  6EE6               	movwf	postinc1,c
  6909  011236  0E00               	movlw	0
  6910  011238  6EE6               	movwf	postinc1,c
  6911  01123A  0E00               	movlw	0
  6912  01123C  6EE6               	movwf	postinc1,c
  6913  01123E  EC96  F0EB         	call	_lp_filter	;wreg free
  6914                           
  6915                           ;main.c: 428:       lp_filter(0.0, k, -1);
  6916  011242  0EFF               	movlw	255
  6917  011244  6EE6               	movwf	postinc1,c
  6918                           
  6919                           ;stkvar	_k @ sp[(-18)+12]
  6920  011246  0EFA               	movlw	-6
  6921  011248  50E3               	movf	plusw1,w,c
  6922  01124A  6EE6               	movwf	postinc1,c
  6923  01124C  0E00               	movlw	0
  6924  01124E  6EE6               	movwf	postinc1,c
  6925  011250  0E00               	movlw	0
  6926  011252  6EE6               	movwf	postinc1,c
  6927  011254  0E00               	movlw	0
  6928  011256  6EE6               	movwf	postinc1,c
  6929  011258  0E00               	movlw	0
  6930  01125A  6EE6               	movwf	postinc1,c
  6931  01125C  EC96  F0EB         	call	_lp_filter	;wreg free
  6932  011260                     l17622:
  6933                           
  6934                           ;main.c: 430:      V.calib = 1;
  6935  011260  0E01               	movlw	1
  6936  011262  0102               	movlb	2	; () banked
  6937  011264  6FB0               	movwf	(_V+169)& (0+255),b	;volatile
  6938                           
  6939                           ; BSR set to: 2
  6940                           ;main.c: 431:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          i), C.calc[i], inp_index);
  6941                           ;stkvar	_inp_index @ sp[(-17)+11]
  6942  011266  0EFA               	movlw	-6
  6943  011268  50E3               	movf	plusw1,w,c
  6944  01126A  6EE6               	movwf	postinc1,c
  6945  01126C  0E00               	movlw	0
  6946  01126E  6EE6               	movwf	postinc1,c
  6947                           
  6948                           ;stkvar	_i @ sp[(-19)+14]
  6949  011270  0EFB               	movlw	-5
  6950  011272  50E3               	movf	plusw1,w,c
  6951  011274  0D04               	mullw	4
  6952  011276  0EFF               	movlw	low _C
  6953  011278  24F3               	addwf	243,w,c
  6954  01127A  6ED9               	movwf	fsr2l,c
  6955  01127C  0E08               	movlw	high _C
  6956  01127E  20F4               	addwfc	prodh,w,c
  6957  011280  6EDA               	movwf	fsr2h,c
  6958  011282  006F FF7B FFE6     	movff	postinc2,postinc1
  6959  011288  006F FF7B FFE6     	movff	postinc2,postinc1
  6960  01128E  006F FF7B FFE6     	movff	postinc2,postinc1
  6961  011294  006F FF7B FFE6     	movff	postinc2,postinc1
  6962                           
  6963                           ;stkvar	_i @ sp[(-23)+14]
  6964  01129A  0EF7               	movlw	-9
  6965  01129C  50E3               	movf	plusw1,w,c
  6966  01129E  6EE6               	movwf	postinc1,c
  6967  0112A0  EC32  F012         	call	_get_raw_result	;wreg free
  6968  0112A4  0060  F0AB  FFE6   	movff	btemp,postinc1
  6969  0112AA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6970  0112B0  0E87               	movlw	low STR_49
  6971  0112B2  6EE6               	movwf	postinc1,c
  6972  0112B4  0EFE               	movlw	high STR_49
  6973  0112B6  6EE6               	movwf	postinc1,c
  6974  0112B8  0E00               	movlw	0
  6975  0112BA  6EE6               	movwf	postinc1,c
  6976  0112BC  0E00               	movlw	0
  6977  0112BE  6EE6               	movwf	postinc1,c
  6978  0112C0  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  6979  0112C4  0060  F0AB  FFE6   	movff	btemp,postinc1
  6980  0112CA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6981  0112D0  0E0C               	movlw	12
  6982  0112D2  6EE6               	movwf	postinc1,c
  6983  0112D4  ECF9  F0FB         	call	_sprintf	;wreg free
  6984                           
  6985                           ; BSR set to: 0
  6986                           ;main.c: 432:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          j), C.calc[j], inp_index + 1);
  6987                           ;stkvar	_inp_index @ sp[(-17)+11]
  6988  0112D8  0EFA               	movlw	-6
  6989  0112DA  50E3               	movf	plusw1,w,c
  6990  0112DC  6E34               	movwf	(btemp+10)^0,c
  6991  0112DE  6A35               	clrf	(btemp+11)^0,c
  6992  0112E0  0E01               	movlw	1
  6993  0112E2  2634               	addwf	(btemp+10)^0,f,c
  6994  0112E4  0E00               	movlw	0
  6995  0112E6  2235               	addwfc	(btemp+11)^0,f,c
  6996  0112E8  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  6997  0112EE  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  6998                           
  6999                           ;stkvar	_j @ sp[(-19)+13]
  7000  0112F4  0EFA               	movlw	-6
  7001  0112F6  50E3               	movf	plusw1,w,c
  7002  0112F8  0D04               	mullw	4
  7003  0112FA  0EFF               	movlw	low _C
  7004  0112FC  24F3               	addwf	243,w,c
  7005  0112FE  6ED9               	movwf	fsr2l,c
  7006  011300  0E08               	movlw	high _C
  7007  011302  20F4               	addwfc	prodh,w,c
  7008  011304  6EDA               	movwf	fsr2h,c
  7009  011306  006F FF7B FFE6     	movff	postinc2,postinc1
  7010  01130C  006F FF7B FFE6     	movff	postinc2,postinc1
  7011  011312  006F FF7B FFE6     	movff	postinc2,postinc1
  7012  011318  006F FF7B FFE6     	movff	postinc2,postinc1
  7013                           
  7014                           ;stkvar	_j @ sp[(-23)+13]
  7015  01131E  0EF6               	movlw	-10
  7016  011320  50E3               	movf	plusw1,w,c
  7017  011322  6EE6               	movwf	postinc1,c
  7018  011324  EC32  F012         	call	_get_raw_result	;wreg free
  7019  011328  0060  F0AB  FFE6   	movff	btemp,postinc1
  7020  01132E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7021  011334  0E87               	movlw	low STR_49
  7022  011336  6EE6               	movwf	postinc1,c
  7023  011338  0EFE               	movlw	high STR_49
  7024  01133A  6EE6               	movwf	postinc1,c
  7025  01133C  0E00               	movlw	0
  7026  01133E  6EE6               	movwf	postinc1,c
  7027  011340  0E01               	movlw	1
  7028  011342  6EE6               	movwf	postinc1,c
  7029  011344  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  7030  011348  0060  F0AB  FFE6   	movff	btemp,postinc1
  7031  01134E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7032  011354  0E0C               	movlw	12
  7033  011356  6EE6               	movwf	postinc1,c
  7034  011358  ECF9  F0FB         	call	_sprintf	;wreg free
  7035                           
  7036                           ; BSR set to: 0
  7037                           ;main.c: 433:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          k), C.calc[k], inp_index + 2);
  7038                           ;stkvar	_inp_index @ sp[(-17)+11]
  7039  01135C  0EFA               	movlw	-6
  7040  01135E  50E3               	movf	plusw1,w,c
  7041  011360  6E34               	movwf	(btemp+10)^0,c
  7042  011362  6A35               	clrf	(btemp+11)^0,c
  7043  011364  0E02               	movlw	2
  7044  011366  2634               	addwf	(btemp+10)^0,f,c
  7045  011368  0E00               	movlw	0
  7046  01136A  2235               	addwfc	(btemp+11)^0,f,c
  7047  01136C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  7048  011372  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  7049                           
  7050                           ;stkvar	_k @ sp[(-19)+12]
  7051  011378  0EF9               	movlw	-7
  7052  01137A  50E3               	movf	plusw1,w,c
  7053  01137C  0D04               	mullw	4
  7054  01137E  0EFF               	movlw	low _C
  7055  011380  24F3               	addwf	243,w,c
  7056  011382  6ED9               	movwf	fsr2l,c
  7057  011384  0E08               	movlw	high _C
  7058  011386  20F4               	addwfc	prodh,w,c
  7059  011388  6EDA               	movwf	fsr2h,c
  7060  01138A  006F FF7B FFE6     	movff	postinc2,postinc1
  7061  011390  006F FF7B FFE6     	movff	postinc2,postinc1
  7062  011396  006F FF7B FFE6     	movff	postinc2,postinc1
  7063  01139C  006F FF7B FFE6     	movff	postinc2,postinc1
  7064                           
  7065                           ;stkvar	_k @ sp[(-23)+12]
  7066  0113A2  0EF5               	movlw	-11
  7067  0113A4  50E3               	movf	plusw1,w,c
  7068  0113A6  6EE6               	movwf	postinc1,c
  7069  0113A8  EC32  F012         	call	_get_raw_result	;wreg free
  7070  0113AC  0060  F0AB  FFE6   	movff	btemp,postinc1
  7071  0113B2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7072  0113B8  0E87               	movlw	low STR_49
  7073  0113BA  6EE6               	movwf	postinc1,c
  7074  0113BC  0EFE               	movlw	high STR_49
  7075  0113BE  6EE6               	movwf	postinc1,c
  7076  0113C0  0E00               	movlw	0
  7077  0113C2  6EE6               	movwf	postinc1,c
  7078  0113C4  0E02               	movlw	2
  7079  0113C6  6EE6               	movwf	postinc1,c
  7080  0113C8  EC2B  F010         	call	_get_vterm_ptr	;wreg free
  7081  0113CC  0060  F0AB  FFE6   	movff	btemp,postinc1
  7082  0113D2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7083  0113D8  0E0C               	movlw	12
  7084  0113DA  6EE6               	movwf	postinc1,c
  7085  0113DC  ECF9  F0FB         	call	_sprintf	;wreg free
  7086                           
  7087                           ;main.c: 434:      break;
  7088  0113E0  D016               	goto	l17634
  7089  0113E2                     l17632:
  7090  0113E2  0101               	movlb	1	; () banked
  7091  0113E4  519B               	movf	_H& (0+255),w,b
  7092  0113E6  6E34               	movwf	(btemp+10)^0,c
  7093  0113E8  6A35               	clrf	(btemp+11)^0,c
  7094                           
  7095                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7096                           ; Switch size 1, requested type "simple"
  7097                           ; Number of cases is 1, Range of values is 0 to 0
  7098                           ; switch strategies available:
  7099                           ; Name         Instructions Cycles
  7100                           ; simple_byte            4     3 (average)
  7101                           ;	Chosen strategy is simple_byte
  7102  0113EA  5035               	movf	(btemp+11)^0,w,c
  7103  0113EC  0A00               	xorlw	0	; case 0
  7104  0113EE  A4D8               	btfss	status,2,c
  7105  0113F0  D00E               	goto	l17634
  7106                           
  7107                           ; BSR set to: 1
  7108                           ; Switch size 1, requested type "simple"
  7109                           ; Number of cases is 4, Range of values is 0 to 3
  7110                           ; switch strategies available:
  7111                           ; Name         Instructions Cycles
  7112                           ; simple_byte           13     7 (average)
  7113                           ;	Chosen strategy is simple_byte
  7114  0113F2  5034               	movf	(btemp+10)^0,w,c
  7115  0113F4  0A00               	xorlw	0	; case 0
  7116  0113F6  B4D8               	btfsc	status,2,c
  7117  0113F8  D4CE               	goto	l1495
  7118  0113FA  0A01               	xorlw	1	; case 1
  7119  0113FC  B4D8               	btfsc	status,2,c
  7120  0113FE  EFC8  F085         	goto	l1485
  7121  011402  0A03               	xorlw	3	; case 2
  7122  011404  B4D8               	btfsc	status,2,c
  7123  011406  D5DC               	goto	l1496
  7124  011408  0A01               	xorlw	1	; case 3
  7125  01140A  B4D8               	btfsc	status,2,c
  7126  01140C  D6F8               	goto	l17618
  7127  01140E                     l17634:
  7128                           
  7129                           ;main.c: 438:     clear_hid_pflags(&H);
  7130  01140E  0E9B               	movlw	low _H
  7131  011410  6EE6               	movwf	postinc1,c
  7132  011412  0E01               	movlw	high _H
  7133  011414  6EE6               	movwf	postinc1,c
  7134  011416  ECC9  F009         	call	_clear_hid_pflags	;wreg free
  7135                           
  7136                           ;main.c: 440:    StartTimer(TMR_DISPLAY, 250);
  7137  01141A  0EFA               	movlw	250
  7138  01141C  6EE6               	movwf	postinc1,c
  7139  01141E  0E00               	movlw	0
  7140  011420  6EE6               	movwf	postinc1,c
  7141  011422  0E0A               	movlw	10
  7142  011424  6EE6               	movwf	postinc1,c
  7143  011426  EC22  F00E         	call	_StartTimer	;wreg free
  7144                           
  7145                           ;main.c: 441:    V.enter = check_enter_button(&H);
  7146  01142A  0E9B               	movlw	low _H
  7147  01142C  6EE6               	movwf	postinc1,c
  7148  01142E  0E01               	movlw	high _H
  7149  011430  6EE6               	movwf	postinc1,c
  7150  011432  ECBD  F008         	call	_check_enter_button	;wreg free
  7151  011436  502A               	movf	btemp^0,w,c
  7152  011438  0102               	movlb	2	; () banked
  7153  01143A  6FB1               	movwf	(_V+170)& (0+255),b	;volatile
  7154                           
  7155                           ; BSR set to: 2
  7156                           ;main.c: 442:    if (V.enter && (H.hid_display != HID_AUX)) {
  7157  01143C  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
  7158  01143E  B4D8               	btfsc	status,2,c
  7159  011440  D013               	goto	l17648
  7160                           
  7161                           ; BSR set to: 2
  7162  011442  0E03               	movlw	3
  7163  011444  0101               	movlb	1	; () banked
  7164  011446  199B               	xorwf	_H& (0+255),w,b
  7165  011448  B4D8               	btfsc	status,2,c
  7166  01144A  D00E               	goto	l17648
  7167                           
  7168                           ; BSR set to: 1
  7169                           ;main.c: 443:     V.enter = 0;
  7170  01144C  0102               	movlb	2	; () banked
  7171  01144E  6BB1               	clrf	(_V+170)& (0+255),b	;volatile
  7172                           
  7173                           ; BSR set to: 2
  7174                           ;main.c: 444:     V.screen = ~V.screen;
  7175  011450  A1A0               	btfss	(_V+153)& (0+255),0,b	;volatile
  7176  011452  D002               	goto	u17200
  7177  011454  0E01               	movlw	1
  7178  011456  D001               	goto	u17206
  7179  011458                     u17200:
  7180  011458  0E00               	movlw	0
  7181  01145A                     u17206:
  7182  01145A  0AFF               	xorlw	255
  7183  01145C  6E35               	movwf	(btemp+11)^0,c
  7184  01145E  51A0               	movf	(_V+153)& (0+255),w,b	;volatile
  7185  011460  1835               	xorwf	(btemp+11)^0,w,c
  7186  011462  0BFE               	andlw	-2
  7187  011464  1835               	xorwf	(btemp+11)^0,w,c
  7188  011466  6FA0               	movwf	(_V+153)& (0+255),b	;volatile
  7189  011468                     l17648:
  7190                           
  7191                           ;main.c: 446:    set_vterm(V.screen);
  7192  011468  0102               	movlb	2	; () banked
  7193  01146A  A1A0               	btfss	(_V+153)& (0+255),0,b	;volatile
  7194  01146C  D002               	goto	u17210
  7195  01146E  0E01               	movlw	1
  7196  011470  D001               	goto	u17216
  7197  011472                     u17210:
  7198  011472  0E00               	movlw	0
  7199  011474                     u17216:
  7200  011474  6EE6               	movwf	postinc1,c
  7201  011476  ECA3  F012         	call	_set_vterm	;wreg free
  7202                           
  7203                           ;main.c: 447:    update_lcd(V.screen);
  7204  01147A  0102               	movlb	2	; () banked
  7205  01147C  A1A0               	btfss	(_V+153)& (0+255),0,b	;volatile
  7206  01147E  D002               	goto	u17220
  7207  011480  0E01               	movlw	1
  7208  011482  D001               	goto	u17226
  7209  011484                     u17220:
  7210  011484  0E00               	movlw	0
  7211  011486                     u17226:
  7212  011486  6EE6               	movwf	postinc1,c
  7213  011488  ECAB  F0F4         	call	_update_lcd	;wreg free
  7214                           
  7215                           ;main.c: 448:    display_history();
  7216  01148C  ECAC  F0D7         	call	_display_history	;wreg free
  7217                           
  7218                           ;main.c: 450:    wait_lcd_done();
  7219  011490  EC6A  F013         	call	_wait_lcd_done	;wreg free
  7220                           
  7221                           ; BSR set to: 61
  7222                           ;main.c: 451:    set_dac_a(3.333);
  7223  011494  0EDF               	movlw	223
  7224  011496  6EE6               	movwf	postinc1,c
  7225  011498  0E4F               	movlw	79
  7226  01149A  6EE6               	movwf	postinc1,c
  7227  01149C  0E55               	movlw	85
  7228  01149E  6EE6               	movwf	postinc1,c
  7229  0114A0  0E40               	movlw	64
  7230  0114A2  6EE6               	movwf	postinc1,c
  7231  0114A4  EC7E  F00F         	call	_set_dac_a	;wreg free
  7232                           
  7233                           ;main.c: 452:    set_dac_b(6.666);
  7234  0114A8  0EDF               	movlw	223
  7235  0114AA  6EE6               	movwf	postinc1,c
  7236  0114AC  0E4F               	movlw	79
  7237  0114AE  6EE6               	movwf	postinc1,c
  7238  0114B0  0ED5               	movlw	213
  7239  0114B2  6EE6               	movwf	postinc1,c
  7240  0114B4  0E40               	movlw	64
  7241  0114B6  6EE6               	movwf	postinc1,c
  7242  0114B8  EC64  F00F         	call	_set_dac_b	;wreg free
  7243                           
  7244                           ;main.c: 453:    set_dac();
  7245  0114BC  ECA5  F002         	call	_set_dac	;wreg free
  7246  0114C0                     l17662:
  7247                           
  7248                           ;main.c: 459:   check_help(V.flipper);
  7249  0114C0  0102               	movlb	2	; () banked
  7250  0114C2  51AF               	movf	(_V+168)& (0+255),w,b	;volatile
  7251  0114C4  6EE6               	movwf	postinc1,c
  7252  0114C6  ECA6  F0E8         	call	_check_help	;wreg free
  7253                           
  7254                           ;main.c: 461:   if (V.enter) {
  7255  0114CA  0102               	movlb	2	; () banked
  7256  0114CC  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
  7257  0114CE  B4D8               	btfsc	status,2,c
  7258  0114D0  D062               	goto	l1501
  7259                           
  7260                           ; BSR set to: 2
  7261                           ;main.c: 462:    V.enter = 0;
  7262  0114D2  6BB1               	clrf	(_V+170)& (0+255),b	;volatile
  7263                           
  7264                           ;main.c: 463:    V.calib = 0;
  7265  0114D4  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  7266                           
  7267                           ; BSR set to: 2
  7268                           ;main.c: 464:    inp_index += 3;
  7269                           ;stkvar	_inp_index @ sp[(-17)+11]
  7270  0114D6  0EFA               	movlw	-6
  7271  0114D8  006F FF8C  F02A    	movff	plusw1,btemp
  7272  0114DE  0E03               	movlw	3
  7273  0114E0  262A               	addwf	btemp^0,f,c
  7274  0114E2  0EFA               	movlw	-6
  7275  0114E4  0060  F0AB  FFE3   	movff	btemp,plusw1
  7276                           
  7277                           ;main.c: 465:    if (inp_index > 9)
  7278                           ;stkvar	_inp_index @ sp[(-17)+11]
  7279  0114EA  0EFA               	movlw	-6
  7280  0114EC  006F FF8C  F02A    	movff	plusw1,btemp
  7281  0114F2  0E09               	movlw	9
  7282  0114F4  642A               	cpfsgt	btemp^0,c
  7283  0114F6  D03A               	goto	l17690
  7284                           
  7285                           ; BSR set to: 2
  7286                           ;main.c: 466:     inp_index = 0;
  7287                           ;stkvar	_inp_index @ sp[(-17)+11]
  7288  0114F8  0EFA               	movlw	-6
  7289  0114FA  6AE3               	clrf	plusw1,c
  7290  0114FC  D037               	goto	l17690
  7291  0114FE                     l17672:
  7292                           
  7293                           ; BSR set to: 2
  7294                           ;main.c: 469:     i = C_BATT;
  7295                           ;stkvar	_i @ sp[(-17)+14]
  7296  0114FE  0EFD               	movlw	-3
  7297  011500  6AE3               	clrf	plusw1,c
  7298                           
  7299                           ; BSR set to: 2
  7300                           ;main.c: 470:     j = C_PV;
  7301                           ;stkvar	_j @ sp[(-17)+13]
  7302  011502  0EFC               	movlw	-4
  7303  011504  6AE3               	clrf	plusw1,c
  7304  011506  2AE3               	incf	plusw1,f,c
  7305                           
  7306                           ; BSR set to: 2
  7307                           ;main.c: 471:     k = V_CC;
  7308                           ;stkvar	_k @ sp[(-17)+12]
  7309  011508  0EFB               	movlw	-5
  7310  01150A  6AE3               	clrf	plusw1,c
  7311  01150C  82E3               	bsf	plusw1,1,c
  7312                           
  7313                           ;main.c: 472:     break;
  7314  01150E  D043               	goto	l1501
  7315  011510                     l17678:
  7316                           
  7317                           ; BSR set to: 2
  7318                           ;main.c: 474:     i = V_BAT;
  7319                           ;stkvar	_i @ sp[(-17)+14]
  7320  011510  0EFD               	movlw	-3
  7321  011512  6AE3               	clrf	plusw1,c
  7322  011514  84E3               	bsf	plusw1,2,c
  7323                           
  7324                           ;main.c: 475:     j = V_PV;
  7325                           ;stkvar	_j @ sp[(-17)+13]
  7326  011516  0EFC               	movlw	-4
  7327  011518  6AE3               	clrf	plusw1,c
  7328  01151A  80E3               	bsf	plusw1,0,c
  7329  01151C  84E3               	bsf	plusw1,2,c	;indir
  7330                           
  7331                           ;main.c: 476:     k = V_CBUS;
  7332                           ;stkvar	_k @ sp[(-17)+12]
  7333  01151E  0EFB               	movlw	-5
  7334  011520  6AE3               	clrf	plusw1,c
  7335  011522  82E3               	bsf	plusw1,1,c
  7336  011524  84E3               	bsf	plusw1,2,c	;indir
  7337                           
  7338                           ;main.c: 477:     break;
  7339  011526  D037               	goto	l1501
  7340  011528                     l17680:
  7341                           
  7342                           ; BSR set to: 2
  7343                           ;main.c: 479:     i = V_BBAT;
  7344                           ;stkvar	_i @ sp[(-17)+14]
  7345  011528  0EFD               	movlw	-3
  7346  01152A  6AE3               	clrf	plusw1,c
  7347  01152C  82E3               	bsf	plusw1,1,c
  7348  01152E  86E3               	bsf	plusw1,3,c	;indir
  7349                           
  7350                           ; BSR set to: 2
  7351                           ;main.c: 480:     j = V_TEMP;
  7352  011530  0E0B               	movlw	11
  7353  011532  6E35               	movwf	(btemp+11)^0,c
  7354                           
  7355                           ;stkvar	_j @ sp[(-17)+13]
  7356  011534  0EFC               	movlw	-4
  7357  011536  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7358                           
  7359                           ; BSR set to: 2
  7360                           ;main.c: 481:     k = V_INVERTER;
  7361                           ;stkvar	_k @ sp[(-17)+12]
  7362  01153C  0EFB               	movlw	-5
  7363  01153E  6AE3               	clrf	plusw1,c
  7364  011540  84E3               	bsf	plusw1,2,c
  7365  011542  86E3               	bsf	plusw1,3,c	;indir
  7366                           
  7367                           ;main.c: 482:     break;
  7368  011544  D028               	goto	l1501
  7369  011546                     l17686:
  7370                           
  7371                           ; BSR set to: 2
  7372                           ;main.c: 484:     i = V_LIGHT_SENSOR;
  7373  011546  0E0D               	movlw	13
  7374  011548  6E35               	movwf	(btemp+11)^0,c
  7375                           
  7376                           ;stkvar	_i @ sp[(-17)+14]
  7377  01154A  0EFD               	movlw	-3
  7378  01154C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7379                           
  7380                           ;main.c: 485:     j = V_LIGHT_SENSOR;
  7381  011552  0E0D               	movlw	13
  7382  011554  6E35               	movwf	(btemp+11)^0,c
  7383                           
  7384                           ;stkvar	_j @ sp[(-17)+13]
  7385  011556  0EFC               	movlw	-4
  7386  011558  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7387                           
  7388                           ;main.c: 486:     k = V_LIGHT_SENSOR;
  7389  01155E  0E0D               	movlw	13
  7390  011560  6E35               	movwf	(btemp+11)^0,c
  7391                           
  7392                           ;stkvar	_k @ sp[(-17)+12]
  7393  011562  0EFB               	movlw	-5
  7394  011564  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7395                           
  7396                           ;main.c: 487:     break;
  7397  01156A  D015               	goto	l1501
  7398  01156C                     l17690:
  7399                           
  7400                           ; BSR set to: 2
  7401                           ;stkvar	_inp_index @ sp[(-17)+11]
  7402  01156C  0EFA               	movlw	-6
  7403  01156E  50E3               	movf	plusw1,w,c
  7404  011570  6E34               	movwf	(btemp+10)^0,c
  7405  011572  6A35               	clrf	(btemp+11)^0,c
  7406                           
  7407                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7408                           ; Switch size 1, requested type "simple"
  7409                           ; Number of cases is 1, Range of values is 0 to 0
  7410                           ; switch strategies available:
  7411                           ; Name         Instructions Cycles
  7412                           ; simple_byte            4     3 (average)
  7413                           ;	Chosen strategy is simple_byte
  7414  011574  5035               	movf	(btemp+11)^0,w,c
  7415  011576  0A00               	xorlw	0	; case 0
  7416  011578  A4D8               	btfss	status,2,c
  7417  01157A  D00D               	goto	l1501
  7418                           
  7419                           ; BSR set to: 2
  7420                           ; Switch size 1, requested type "simple"
  7421                           ; Number of cases is 4, Range of values is 0 to 9
  7422                           ; switch strategies available:
  7423                           ; Name         Instructions Cycles
  7424                           ; simple_byte           13     7 (average)
  7425                           ;	Chosen strategy is simple_byte
  7426  01157C  5034               	movf	(btemp+10)^0,w,c
  7427  01157E  0A00               	xorlw	0	; case 0
  7428  011580  B4D8               	btfsc	status,2,c
  7429  011582  D7BD               	goto	l17672
  7430  011584  0A03               	xorlw	3	; case 3
  7431  011586  B4D8               	btfsc	status,2,c
  7432  011588  D7C3               	goto	l17678
  7433  01158A  0A05               	xorlw	5	; case 6
  7434  01158C  B4D8               	btfsc	status,2,c
  7435  01158E  D7CC               	goto	l17680
  7436  011590  0A0F               	xorlw	15	; case 9
  7437  011592  B4D8               	btfsc	status,2,c
  7438  011594  D7D8               	goto	l17686
  7439  011596                     l1501:
  7440                           
  7441                           ; BSR set to: 2
  7442                           ;main.c: 496:   if (V.set_sequ) {
  7443  011596  A19F               	btfss	(_V+152)& (0+255),0,b	;volatile
  7444  011598  EF66  F084         	goto	l17538
  7445                           
  7446                           ; BSR set to: 2
  7447                           ;main.c: 497:    if (TimerDone(TMR_INFO)) {
  7448  01159C  0E07               	movlw	7
  7449  01159E  6EE6               	movwf	postinc1,c
  7450  0115A0  ECAD  F010         	call	_TimerDone	;wreg free
  7451  0115A4  502A               	movf	btemp^0,w,c
  7452  0115A6  B4D8               	btfsc	status,2,c
  7453  0115A8  D00C               	goto	l17700
  7454                           
  7455                           ;main.c: 498:     V.set_sequ = 0;
  7456  0115AA  0102               	movlb	2	; () banked
  7457  0115AC  919F               	bcf	(_V+152)& (0+255),0,b	;volatile
  7458                           
  7459                           ; BSR set to: 2
  7460                           ;main.c: 499:     set_vterm(0);
  7461  0115AE  0E00               	movlw	0
  7462  0115B0  6EE6               	movwf	postinc1,c
  7463  0115B2  ECA3  F012         	call	_set_vterm	;wreg free
  7464                           
  7465                           ;main.c: 500:     update_lcd(0);
  7466  0115B6  0E00               	movlw	0
  7467  0115B8  6EE6               	movwf	postinc1,c
  7468  0115BA  ECAB  F0F4         	call	_update_lcd	;wreg free
  7469                           
  7470                           ;main.c: 501:    } else {
  7471  0115BE  EF66  F084         	goto	l17538
  7472  0115C2                     l17700:
  7473                           
  7474                           ;main.c: 503:     set_vterm(2);
  7475  0115C2  0E02               	movlw	2
  7476  0115C4  6EE6               	movwf	postinc1,c
  7477  0115C6  ECA3  F012         	call	_set_vterm	;wreg free
  7478                           
  7479                           ;main.c: 504:     update_lcd(2);
  7480  0115CA  0E02               	movlw	2
  7481  0115CC  6EE6               	movwf	postinc1,c
  7482  0115CE  ECAB  F0F4         	call	_update_lcd	;wreg free
  7483  0115D2  EF66  F084         	goto	l17538
  7484  0115D6                     __end_of_main:
  7485                           	opt callstack 0
  7486                           
  7487 ;; *************** function _update_hist_data *****************
  7488 ;; Defined at:
  7489 ;;		line 456 in file "daq.c"
  7490 ;; Parameters:    Size  Location     Type
  7491 ;;  mode            1  [STACK] const _Bool 
  7492 ;;  hist            2  [STACK] PTR volatile struct hist
  7493 ;;		 -> C.hist(97), C(320), 
  7494 ;; Auto vars:     Size  Location     Type
  7495 ;;		None
  7496 ;; Return value:  Size  Location     Type
  7497 ;;                  1  [STACK] _Bool 
  7498 ;; Registers used:
  7499 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl
  7500 ;; Tracked objects:
  7501 ;;		On entry : 7/1
  7502 ;;		On exit  : 0/0
  7503 ;;		Unchanged: 0/0
  7504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7509 ;;Total ram usage:        0 bytes
  7510 ;; Hardware stack levels used:    1
  7511 ;; Hardware stack levels required when called:   15
  7512 ;; This function calls:
  7513 ;;		Nothing
  7514 ;; This function is called by:
  7515 ;;		_main
  7516 ;; This function uses a reentrant model
  7517 ;;
  7518                           
  7519                           	psect	text1
  7520  00100C                     __ptext1:
  7521                           	opt callstack 0
  7522  00100C                     _update_hist_data:
  7523                           	opt callstack 15
  7524                           
  7525                           ;daq.c: 456: _Bool update_hist_data(const _Bool mode, volatile hist_type *hist);daq.c: 4
      +                          57: {;daq.c: 458:  if (hist == ((void*)0))
  7526                           ;stkvar	_hist @ sp[(0)+-3]
  7527                           
  7528                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7529                           ;incstack = 0
  7530  00100C  0EFD               	movlw	-3
  7531  00100E  006F FF8C  F02A    	movff	plusw1,btemp
  7532  001014  0EFE               	movlw	-2
  7533  001016  50E3               	movf	plusw1,w,c
  7534  001018  102A               	iorwf	btemp^0,w,c
  7535  00101A  A4D8               	btfss	status,2,c
  7536  00101C  D002               	goto	l14138
  7537  00101E                     u13340:
  7538                           
  7539                           ;daq.c: 459:   return 0;
  7540  00101E  0E00               	movlw	0
  7541  001020  D01A               	goto	L3
  7542  001022                     l14138:
  7543                           
  7544                           ;daq.c: 461:  if (mode) {
  7545                           ;stkvar	_mode @ sp[(0)+-1]
  7546  001022  0EFF               	movlw	-1
  7547  001024  50E3               	movf	plusw1,w,c
  7548  001026  B4D8               	btfsc	status,2,c
  7549  001028  D018               	goto	l14150
  7550                           
  7551                           ;daq.c: 462:   if (R.hist_save) {
  7552  00102A  0101               	movlb	1	; () banked
  7553  00102C  A197               	btfss	(_R+151)& (0+255),0,b	;volatile
  7554  00102E  D7F7               	goto	u13340
  7555                           
  7556                           ; BSR set to: 1
  7557                           ;daq.c: 463:    *hist = R.H;
  7558  001030  EE20  F136         	lfsr	2,_R+54	;volatile
  7559                           
  7560                           ;stkvar	_hist @ sp[(0)+-3]
  7561  001034  0EFD               	movlw	-3
  7562  001036  006F FF8F FFE9     	movff	plusw1,fsr0l
  7563  00103C  0EFE               	movlw	-2
  7564  00103E  006F FF8F FFEA     	movff	plusw1,fsr0h
  7565  001044  0E60               	movlw	96
  7566  001046                     u13371:
  7567  001046  006F FF6F FFEB     	movff	plusw2,plusw0
  7568  00104C  06E8               	decf	wreg,f,c
  7569  00104E  E2FB               	bc	u13371
  7570                           
  7571                           ; BSR set to: 1
  7572                           ;daq.c: 464:    if (R.hist_update) {
  7573  001050  A397               	btfss	(_R+151)& (0+255),1,b	;volatile
  7574  001052  D7E5               	goto	u13340
  7575                           
  7576                           ; BSR set to: 1
  7577                           ;daq.c: 465:     return 1;
  7578  001054  0E01               	movlw	1
  7579  001056                     L3:
  7580  001056  6E2A               	movwf	btemp^0,c
  7581  001058  D013               	goto	l2096
  7582  00105A                     l14150:
  7583                           
  7584                           ;daq.c: 469:   R.H = *hist;
  7585                           ;stkvar	_hist @ sp[(0)+-3]
  7586  00105A  0EFD               	movlw	-3
  7587  00105C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7588  001062  0EFE               	movlw	-2
  7589  001064  006F FF8F FFDA     	movff	plusw1,fsr2h
  7590  00106A  EE00  F136         	lfsr	0,_R+54	;volatile
  7591  00106E  0E60               	movlw	96
  7592  001070                     u13391:
  7593  001070  006F FF6F FFEB     	movff	plusw2,plusw0
  7594  001076  06E8               	decf	wreg,f,c
  7595  001078  E2FB               	bc	u13391
  7596                           
  7597                           ;daq.c: 470:   R.hist_save = 1;
  7598  00107A  0101               	movlb	1	; () banked
  7599  00107C  8197               	bsf	(_R+151)& (0+255),0,b	;volatile
  7600  00107E  D7CF               	goto	u13340
  7601  001080                     l2096:
  7602                           
  7603                           ; _update_hist_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
  7604  001080  52E5               	movf	postdec1,f,c
  7605  001082  52E5               	movf	postdec1,f,c
  7606  001084  52E5               	movf	postdec1,f,c
  7607  001086  0012               	return		;funcret
  7608  001088                     __end_of_update_hist_data:
  7609                           	opt callstack 0
  7610                           
  7611 ;; *************** function _update_cal_data *****************
  7612 ;; Defined at:
  7613 ;;		line 437 in file "daq.c"
  7614 ;; Parameters:    Size  Location     Type
  7615 ;;		None
  7616 ;; Auto vars:     Size  Location     Type
  7617 ;;		None
  7618 ;; Return value:  Size  Location     Type
  7619 ;;                  1  [STACK] void 
  7620 ;; Registers used:
  7621 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  7622 ;; Tracked objects:
  7623 ;;		On entry : 0/39
  7624 ;;		On exit  : 3F/1
  7625 ;;		Unchanged: 0/0
  7626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7631 ;;Total ram usage:        0 bytes
  7632 ;; Hardware stack levels used:    1
  7633 ;; Hardware stack levels required when called:   15
  7634 ;; This function calls:
  7635 ;;		Nothing
  7636 ;; This function is called by:
  7637 ;;		_main
  7638 ;; This function uses a reentrant model
  7639 ;;
  7640                           
  7641                           	psect	text2
  7642  0017B6                     __ptext2:
  7643                           	opt callstack 0
  7644  0017B6                     _update_cal_data:
  7645                           	opt callstack 15
  7646                           
  7647                           ;daq.c: 439:  R = r_cal;
  7648                           
  7649                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7650                           ;incstack = 0
  7651  0017B6  EE21  F040         	lfsr	2,_r_cal
  7652  0017BA  EE00  F100         	lfsr	0,_R	;volatile
  7653  0017BE  0E9A               	movlw	154
  7654  0017C0                     u13311:
  7655  0017C0  006F FF7B FFEE     	movff	postinc2,postinc0
  7656  0017C6  06E8               	decf	wreg,f,c
  7657  0017C8  E2FB               	bc	u13311
  7658  0017CA  0E9B               	movlw	155
  7659  0017CC  5ED9               	subwf	fsr2l,f,c
  7660  0017CE  5EE9               	subwf	fsr0l,f,c
  7661                           
  7662                           ;daq.c: 440:  if (!R.c_zero_cal) {
  7663  0017D0  0101               	movlb	1	; () banked
  7664  0017D2  B597               	btfsc	(_R+151)& (0+255),2,b	;volatile
  7665  0017D4  D008               	goto	l14128
  7666                           
  7667                           ; BSR set to: 1
  7668                           ;daq.c: 441:   R.n_offset[0] = 3938;
  7669  0017D6  0E0F               	movlw	15
  7670  0017D8  6F27               	movwf	(_R+39)& (0+255),b	;volatile
  7671  0017DA  0E62               	movlw	98
  7672  0017DC  6F26               	movwf	(_R+38)& (0+255),b	;volatile
  7673                           
  7674                           ;daq.c: 442:   R.n_offset[1] = 4004;
  7675  0017DE  0E0F               	movlw	15
  7676  0017E0  6F29               	movwf	(_R+41)& (0+255),b	;volatile
  7677  0017E2  0EA4               	movlw	164
  7678  0017E4  6F28               	movwf	(_R+40)& (0+255),b	;volatile
  7679  0017E6                     l14128:
  7680                           
  7681                           ; BSR set to: 1
  7682                           ;daq.c: 446:  if (!R.c_scale_cal) {
  7683  0017E6  B797               	btfsc	(_R+151)& (0+255),3,b	;volatile
  7684  0017E8  0012               	return	
  7685                           
  7686                           ; BSR set to: 1
  7687                           ;daq.c: 447:   R.n_scalar[0] = 0.0862000;
  7688  0017EA  0EA0               	movlw	160
  7689  0017EC  6F2A               	movwf	(_R+42)& (0+255),b	;volatile
  7690  0017EE  0E89               	movlw	137
  7691  0017F0  6F2B               	movwf	(_R+43)& (0+255),b	;volatile
  7692  0017F2  0EB0               	movlw	176
  7693  0017F4  6F2C               	movwf	(_R+44)& (0+255),b	;volatile
  7694  0017F6  0E3D               	movlw	61
  7695  0017F8  6F2D               	movwf	(_R+45)& (0+255),b	;volatile
  7696                           
  7697                           ;daq.c: 448:   R.n_scalar[1] = 0.0361010;
  7698  0017FA  0EA4               	movlw	164
  7699  0017FC  6F2E               	movwf	(_R+46)& (0+255),b	;volatile
  7700  0017FE  0EDE               	movlw	222
  7701  001800  6F2F               	movwf	(_R+47)& (0+255),b	;volatile
  7702  001802  0E13               	movlw	19
  7703  001804  6F30               	movwf	(_R+48)& (0+255),b	;volatile
  7704  001806  0E3D               	movlw	61
  7705  001808  6F31               	movwf	(_R+49)& (0+255),b	;volatile
  7706                           
  7707                           ; BSR set to: 1
  7708                           ; _update_cal_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  7709  00180A  0012               	return		;funcret
  7710  00180C                     __end_of_update_cal_data:
  7711                           	opt callstack 0
  7712                           
  7713 ;; *************** function _static_soc *****************
  7714 ;; Defined at:
  7715 ;;		line 118 in file "mbmc.c"
  7716 ;; Parameters:    Size  Location     Type
  7717 ;;		None
  7718 ;; Auto vars:     Size  Location     Type
  7719 ;;		None
  7720 ;; Return value:  Size  Location     Type
  7721 ;;                  1  [STACK] void 
  7722 ;; Registers used:
  7723 ;;		wreg, fsr2l, fsr2h
  7724 ;; Tracked objects:
  7725 ;;		On entry : 0/1
  7726 ;;		On exit  : 0/0
  7727 ;;		Unchanged: 0/0
  7728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7733 ;;Total ram usage:        0 bytes
  7734 ;; Hardware stack levels used:    1
  7735 ;; Hardware stack levels required when called:   15
  7736 ;; This function calls:
  7737 ;;		Nothing
  7738 ;; This function is called by:
  7739 ;;		_main
  7740 ;; This function uses a reentrant model
  7741 ;;
  7742                           
  7743                           	psect	text3
  7744  0016A8                     __ptext3:
  7745                           	opt callstack 0
  7746  0016A8                     _static_soc:
  7747                           	opt callstack 15
  7748                           
  7749                           ;mbmc.c: 120:  C.runtime = 120;
  7750                           
  7751                           ; BSR set to: 1
  7752                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7753                           ;incstack = 0
  7754  0016A8  0E78               	movlw	120
  7755  0016AA  006F FFA0  F9B3    	movff	wreg,_C+180	;volatile
  7756  0016B0  0E00               	movlw	0
  7757  0016B2  006F FFA0  F9B4    	movff	wreg,_C+181	;volatile
  7758                           
  7759                           ;mbmc.c: 121:  C.soc = 100;
  7760  0016B8  0E64               	movlw	100
  7761  0016BA  006F FFA0  F9B5    	movff	wreg,_C+182	;volatile
  7762  0016C0  0E00               	movlw	0
  7763  0016C2  006F FFA0  F9B6    	movff	wreg,_C+183	;volatile
  7764                           
  7765                           ;mbmc.c: 122:  C.dynamic_ah = C.bank_ah;
  7766  0016C8  EE22  F18B         	lfsr	2,_C+140	;volatile
  7767  0016CC  006F FF78  F98F    	movff	postinc2,_C+144	;volatile
  7768  0016D2  006F FF78  F990    	movff	postinc2,_C+145	;volatile
  7769  0016D8  006F FF78  F991    	movff	postinc2,_C+146	;volatile
  7770  0016DE  006F FF74  F992    	movff	postdec2,_C+147	;volatile
  7771                           
  7772                           ;mbmc.c: 123:  C.dynamic_ah_adj = C.dynamic_ah;
  7773  0016E4  EE22  F18F         	lfsr	2,_C+144	;volatile
  7774  0016E8  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
  7775  0016EE  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
  7776  0016F4  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
  7777  0016FA  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
  7778                           
  7779                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  7780  001700  0012               	return		;funcret
  7781  001702                     __end_of_static_soc:
  7782                           	opt callstack 0
  7783                           
  7784 ;; *************** function _start_switch_handler *****************
  7785 ;; Defined at:
  7786 ;;		line 125 in file "dio.c"
  7787 ;; Parameters:    Size  Location     Type
  7788 ;;		None
  7789 ;; Auto vars:     Size  Location     Type
  7790 ;;		None
  7791 ;; Return value:  Size  Location     Type
  7792 ;;                  1  [STACK] void 
  7793 ;; Registers used:
  7794 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  7795 ;; Tracked objects:
  7796 ;;		On entry : 0/0
  7797 ;;		On exit  : 3F/39
  7798 ;;		Unchanged: 0/0
  7799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7804 ;;Total ram usage:        0 bytes
  7805 ;; Hardware stack levels used:    1
  7806 ;; Hardware stack levels required when called:   16
  7807 ;; This function calls:
  7808 ;;		_INT1_SetInterruptHandler
  7809 ;; This function is called by:
  7810 ;;		_main
  7811 ;; This function uses a reentrant model
  7812 ;;
  7813                           
  7814                           	psect	text4
  7815  0024CA                     __ptext4:
  7816                           	opt callstack 0
  7817  0024CA                     _start_switch_handler:
  7818                           	opt callstack 14
  7819                           
  7820                           ;dio.c: 127:  (PIE5bits.INT1IE = 0);
  7821                           
  7822                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7823                           ;incstack = 0
  7824  0024CA  0139               	movlb	57	; () banked
  7825  0024CC  9195               	bcf	149,0,b	;volatile
  7826                           
  7827                           ; BSR set to: 57
  7828                           ;dio.c: 128:  INT1_SetInterruptHandler(switch_handler);
  7829  0024CE  0EB6               	movlw	low _switch_handler
  7830  0024D0  6EE6               	movwf	postinc1,c
  7831  0024D2  0EEE               	movlw	high _switch_handler
  7832  0024D4  6EE6               	movwf	postinc1,c
  7833  0024D6  0E01               	movlw	low (_switch_handler shr (0+16))
  7834  0024D8  6EE6               	movwf	postinc1,c
  7835  0024DA  EC39  F011         	call	_INT1_SetInterruptHandler	;wreg free
  7836                           
  7837                           ;dio.c: 129:  S.button[SNULL].sw = SW_INVALID;
  7838  0024DE  0E02               	movlw	2
  7839  0024E0  0101               	movlb	1	; () banked
  7840  0024E2  6FC7               	movwf	(_S+35)& (0+255),b	;volatile
  7841                           
  7842                           ; BSR set to: 1
  7843                           ;dio.c: 130:  (PIE5bits.INT1IE = 1);
  7844  0024E4  0139               	movlb	57	; () banked
  7845  0024E6  8195               	bsf	149,0,b	;volatile
  7846                           
  7847                           ; BSR set to: 57
  7848                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  7849  0024E8  0012               	return		;funcret
  7850  0024EA                     __end_of_start_switch_handler:
  7851                           	opt callstack 0
  7852                           
  7853 ;; *************** function _srand *****************
  7854 ;; Defined at:
  7855 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  7856 ;; Parameters:    Size  Location     Type
  7857 ;;  s               2  [STACK] unsigned int 
  7858 ;; Auto vars:     Size  Location     Type
  7859 ;;		None
  7860 ;; Return value:  Size  Location     Type
  7861 ;;                  1  [STACK] void 
  7862 ;; Registers used:
  7863 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  7864 ;; Tracked objects:
  7865 ;;		On entry : 0/3D
  7866 ;;		On exit  : 3F/2
  7867 ;;		Unchanged: 0/0
  7868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7873 ;;Total ram usage:        0 bytes
  7874 ;; Hardware stack levels used:    1
  7875 ;; Hardware stack levels required when called:   15
  7876 ;; This function calls:
  7877 ;;		Nothing
  7878 ;; This function is called by:
  7879 ;;		_main
  7880 ;; This function uses a reentrant model
  7881 ;;
  7882                           
  7883                           	psect	text5
  7884  001E94                     __ptext5:
  7885                           	opt callstack 0
  7886  001E94                     _srand:
  7887                           	opt callstack 15
  7888                           
  7889                           ;stkvar	_s @ sp[(0)+-2]
  7890                           
  7891                           ; BSR set to: 57
  7892                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7893                           ;incstack = 0
  7894  001E94  0EFE               	movlw	-2
  7895  001E96  50E3               	movf	plusw1,w,c
  7896  001E98  0FFF               	addlw	255
  7897  001E9A  6E34               	movwf	(btemp+10)^0,c
  7898  001E9C  0EFF               	movlw	-1
  7899  001E9E  006F FF8C  F035    	movff	plusw1,btemp+11
  7900  001EA4  0EFF               	movlw	255
  7901  001EA6  2235               	addwfc	(btemp+11)^0,f,c
  7902  001EA8  0060  F0D0  F2DE   	movff	btemp+10,_seed
  7903  001EAE  0060  F0D4  F2DF   	movff	btemp+11,_seed+1
  7904  001EB4  0102               	movlb	2	; () banked
  7905  001EB6  6BE0               	clrf	(_seed+2)& (0+255),b
  7906  001EB8  6BE1               	clrf	(_seed+3)& (0+255),b
  7907  001EBA  6BE2               	clrf	(_seed+4)& (0+255),b
  7908  001EBC  6BE3               	clrf	(_seed+5)& (0+255),b
  7909  001EBE  6BE4               	clrf	(_seed+6)& (0+255),b
  7910  001EC0  6BE5               	clrf	(_seed+7)& (0+255),b
  7911                           
  7912                           ; BSR set to: 2
  7913                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  7914  001EC2  52E5               	movf	postdec1,f,c
  7915  001EC4  52E5               	movf	postdec1,f,c
  7916  001EC6  0012               	return		;funcret
  7917  001EC8                     __end_of_srand:
  7918                           	opt callstack 0
  7919                           
  7920 ;; *************** function _set_time *****************
  7921 ;; Defined at:
  7922 ;;		line 255 in file "mbmc.c"
  7923 ;; Parameters:    Size  Location     Type
  7924 ;;  t               8  [STACK] long long 
  7925 ;; Auto vars:     Size  Location     Type
  7926 ;;		None
  7927 ;; Return value:  Size  Location     Type
  7928 ;;                  1  [STACK] void 
  7929 ;; Registers used:
  7930 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
  7931 ;; Tracked objects:
  7932 ;;		On entry : 3F/39
  7933 ;;		On exit  : 3F/39
  7934 ;;		Unchanged: 0/0
  7935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7940 ;;Total ram usage:        0 bytes
  7941 ;; Hardware stack levels used:    1
  7942 ;; Hardware stack levels required when called:   15
  7943 ;; This function calls:
  7944 ;;		Nothing
  7945 ;; This function is called by:
  7946 ;;		_main
  7947 ;; This function uses a reentrant model
  7948 ;;
  7949                           
  7950                           	psect	text6
  7951  001E28                     __ptext6:
  7952                           	opt callstack 0
  7953  001E28                     _set_time:
  7954                           	opt callstack 15
  7955                           
  7956                           ;mbmc.c: 255: void set_time(time_t t);mbmc.c: 256: {;mbmc.c: 257:  PIE8bits.TMR5IE = 0;
  7957                           
  7958                           ; BSR set to: 2
  7959                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7960                           ;incstack = 0
  7961  001E28  0139               	movlb	57	; () banked
  7962  001E2A  9D98               	bcf	152,6,b	;volatile
  7963                           
  7964                           ; BSR set to: 57
  7965                           ;mbmc.c: 258:  V.ticks=t;
  7966                           ;stkvar	_t @ sp[(0)+-8]
  7967  001E2C  50E1               	movf	fsr1l,w,c
  7968  001E2E  0FF8               	addlw	-8
  7969  001E30  6ED9               	movwf	fsr2l,c
  7970  001E32  50E2               	movf	fsr1h,w,c
  7971  001E34  6EDA               	movwf	fsr2h,c
  7972  001E36  0EFF               	movlw	255
  7973  001E38  22DA               	addwfc	fsr2h,f,c
  7974  001E3A  006F FF78  F288    	movff	postinc2,_V+129	;volatile
  7975  001E40  006F FF78  F289    	movff	postinc2,_V+130	;volatile
  7976  001E46  006F FF78  F28A    	movff	postinc2,_V+131	;volatile
  7977  001E4C  006F FF78  F28B    	movff	postinc2,_V+132	;volatile
  7978                           
  7979                           ; BSR set to: 57
  7980                           ;mbmc.c: 259:  PIE8bits.TMR5IE = 1;
  7981  001E52  8D98               	bsf	152,6,b	;volatile
  7982                           
  7983                           ; BSR set to: 57
  7984                           ; _set_time: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
  7985  001E54  0EF8               	movlw	248
  7986  001E56  26E1               	addwf	fsr1l,f,c
  7987  001E58  0EFF               	movlw	255
  7988  001E5A  22E2               	addwfc	fsr1h,f,c
  7989  001E5C  0012               	return		;funcret
  7990  001E5E                     __end_of_set_time:
  7991                           	opt callstack 0
  7992                           
  7993 ;; *************** function _set_hist_flag *****************
  7994 ;; Defined at:
  7995 ;;		line 475 in file "daq.c"
  7996 ;; Parameters:    Size  Location     Type
  7997 ;;		None
  7998 ;; Auto vars:     Size  Location     Type
  7999 ;;		None
  8000 ;; Return value:  Size  Location     Type
  8001 ;;                  1  [STACK] void 
  8002 ;; Registers used:
  8003 ;;		None
  8004 ;; Tracked objects:
  8005 ;;		On entry : 3F/39
  8006 ;;		On exit  : 3F/1
  8007 ;;		Unchanged: 0/0
  8008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8013 ;;Total ram usage:        0 bytes
  8014 ;; Hardware stack levels used:    1
  8015 ;; Hardware stack levels required when called:   15
  8016 ;; This function calls:
  8017 ;;		Nothing
  8018 ;; This function is called by:
  8019 ;;		_main
  8020 ;; This function uses a reentrant model
  8021 ;;
  8022                           
  8023                           	psect	text7
  8024  00277E                     __ptext7:
  8025                           	opt callstack 0
  8026  00277E                     _set_hist_flag:
  8027                           	opt callstack 15
  8028                           
  8029                           ;daq.c: 477:  R.hist_update = 1;
  8030                           
  8031                           ; BSR set to: 57
  8032                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8033                           ;incstack = 0
  8034  00277E  0101               	movlb	1	; () banked
  8035  002780  8397               	bsf	(_R+151)& (0+255),1,b	;volatile
  8036                           
  8037                           ; BSR set to: 1
  8038                           ; _set_hist_flag: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  8039  002782  0012               	return		;funcret
  8040  002784                     __end_of_set_hist_flag:
  8041                           	opt callstack 0
  8042                           
  8043 ;; *************** function _set_dac_b *****************
  8044 ;; Defined at:
  8045 ;;		line 308 in file "daq.c"
  8046 ;; Parameters:    Size  Location     Type
  8047 ;;  voltage         4  [STACK] const float 
  8048 ;; Auto vars:     Size  Location     Type
  8049 ;;		None
  8050 ;; Return value:  Size  Location     Type
  8051 ;;                  2  [STACK] unsigned short 
  8052 ;; Registers used:
  8053 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  8054 ;; Tracked objects:
  8055 ;;		On entry : 0/3D
  8056 ;;		On exit  : 0/0
  8057 ;;		Unchanged: 0/0
  8058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8063 ;;Total ram usage:        0 bytes
  8064 ;; Hardware stack levels used:    1
  8065 ;; Hardware stack levels required when called:   17
  8066 ;; This function calls:
  8067 ;;		_convert_dac_raw
  8068 ;; This function is called by:
  8069 ;;		_main
  8070 ;; This function uses a reentrant model
  8071 ;;
  8072                           
  8073                           	psect	text8
  8074  001EC8                     __ptext8:
  8075                           	opt callstack 0
  8076  001EC8                     _set_dac_b:
  8077                           	opt callstack 13
  8078                           
  8079                           ;daq.c: 308: uint16_t set_dac_b(const float voltage);daq.c: 309: {;daq.c: 310:  R.raw_da
      +                          c[1] = convert_dac_raw(voltage);
  8080                           ;stkvar	_voltage @ sp[(0)+-4]
  8081                           
  8082                           ; BSR set to: 1
  8083                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8084                           ;incstack = 0
  8085  001EC8  0EFC               	movlw	-4
  8086  001ECA  006F FF8F FFE6     	movff	plusw1,postinc1
  8087  001ED0  006F FF8F FFE6     	movff	plusw1,postinc1
  8088  001ED6  006F FF8F FFE6     	movff	plusw1,postinc1
  8089  001EDC  006F FF8F FFE6     	movff	plusw1,postinc1
  8090  001EE2  EC57  F0FA         	call	_convert_dac_raw	;wreg free
  8091  001EE6  0060  F0A8  F122   	movff	btemp,_R+34	;volatile
  8092  001EEC  0060  F0AC  F123   	movff	btemp+1,_R+35	;volatile
  8093                           
  8094                           ; _set_dac_b: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  8095                           
  8096                           ;daq.c: 311:  return R.raw_dac[1];;	Return value of _set_dac_b is never used
  8097  001EF2  52E5               	movf	postdec1,f,c
  8098  001EF4  52E5               	movf	postdec1,f,c
  8099  001EF6  52E5               	movf	postdec1,f,c
  8100  001EF8  52E5               	movf	postdec1,f,c
  8101  001EFA  0012               	return		;funcret
  8102  001EFC                     __end_of_set_dac_b:
  8103                           	opt callstack 0
  8104                           
  8105 ;; *************** function _set_dac_a *****************
  8106 ;; Defined at:
  8107 ;;		line 299 in file "daq.c"
  8108 ;; Parameters:    Size  Location     Type
  8109 ;;  voltage         4  [STACK] const float 
  8110 ;; Auto vars:     Size  Location     Type
  8111 ;;		None
  8112 ;; Return value:  Size  Location     Type
  8113 ;;                  2  [STACK] unsigned short 
  8114 ;; Registers used:
  8115 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  8116 ;; Tracked objects:
  8117 ;;		On entry : 3F/3D
  8118 ;;		On exit  : 0/0
  8119 ;;		Unchanged: 0/0
  8120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8125 ;;Total ram usage:        0 bytes
  8126 ;; Hardware stack levels used:    1
  8127 ;; Hardware stack levels required when called:   17
  8128 ;; This function calls:
  8129 ;;		_convert_dac_raw
  8130 ;; This function is called by:
  8131 ;;		_main
  8132 ;; This function uses a reentrant model
  8133 ;;
  8134                           
  8135                           	psect	text9
  8136  001EFC                     __ptext9:
  8137                           	opt callstack 0
  8138  001EFC                     _set_dac_a:
  8139                           	opt callstack 13
  8140                           
  8141                           ;daq.c: 299: uint16_t set_dac_a(const float voltage);daq.c: 300: {;daq.c: 301:  R.raw_da
      +                          c[0] = convert_dac_raw(voltage);
  8142                           ;stkvar	_voltage @ sp[(0)+-4]
  8143                           
  8144                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8145                           ;incstack = 0
  8146  001EFC  0EFC               	movlw	-4
  8147  001EFE  006F FF8F FFE6     	movff	plusw1,postinc1
  8148  001F04  006F FF8F FFE6     	movff	plusw1,postinc1
  8149  001F0A  006F FF8F FFE6     	movff	plusw1,postinc1
  8150  001F10  006F FF8F FFE6     	movff	plusw1,postinc1
  8151  001F16  EC57  F0FA         	call	_convert_dac_raw	;wreg free
  8152  001F1A  0060  F0A8  F120   	movff	btemp,_R+32	;volatile
  8153  001F20  0060  F0AC  F121   	movff	btemp+1,_R+33	;volatile
  8154                           
  8155                           ; _set_dac_a: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  8156                           
  8157                           ;daq.c: 302:  return R.raw_dac[0];;	Return value of _set_dac_a is never used
  8158  001F26  52E5               	movf	postdec1,f,c
  8159  001F28  52E5               	movf	postdec1,f,c
  8160  001F2A  52E5               	movf	postdec1,f,c
  8161  001F2C  52E5               	movf	postdec1,f,c
  8162  001F2E  0012               	return		;funcret
  8163  001F30                     __end_of_set_dac_a:
  8164                           	opt callstack 0
  8165                           
  8166 ;; *************** function _convert_dac_raw *****************
  8167 ;; Defined at:
  8168 ;;		line 281 in file "daq.c"
  8169 ;; Parameters:    Size  Location     Type
  8170 ;;  voltage         4  [STACK] float 
  8171 ;; Auto vars:     Size  Location     Type
  8172 ;;		None
  8173 ;; Return value:  Size  Location     Type
  8174 ;;                  2  [STACK] unsigned short 
  8175 ;; Registers used:
  8176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  8177 ;; Tracked objects:
  8178 ;;		On entry : 0/3D
  8179 ;;		On exit  : 0/0
  8180 ;;		Unchanged: 0/0
  8181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8186 ;;Total ram usage:        0 bytes
  8187 ;; Hardware stack levels used:    1
  8188 ;; Hardware stack levels required when called:   16
  8189 ;; This function calls:
  8190 ;;		___fldiv
  8191 ;;		___flge
  8192 ;;		___fltol
  8193 ;; This function is called by:
  8194 ;;		_set_dac_a
  8195 ;;		_set_dac_b
  8196 ;; This function uses a reentrant model
  8197 ;;
  8198                           
  8199                           	psect	text10
  8200  01F4AE                     __ptext10:
  8201                           	opt callstack 0
  8202  01F4AE                     _convert_dac_raw:
  8203                           	opt callstack 13
  8204                           
  8205                           ;daq.c: 281: static uint16_t convert_dac_raw(float voltage);daq.c: 282: {;daq.c: 286:  i
      +                          f (voltage < 0.001)
  8206                           
  8207                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8208                           ;incstack = 0
  8209  01F4AE  0E6F               	movlw	111
  8210  01F4B0  6EE6               	movwf	postinc1,c
  8211  01F4B2  0E12               	movlw	18
  8212  01F4B4  6EE6               	movwf	postinc1,c
  8213  01F4B6  0E83               	movlw	131
  8214  01F4B8  6EE6               	movwf	postinc1,c
  8215  01F4BA  0E3A               	movlw	58
  8216  01F4BC  6EE6               	movwf	postinc1,c
  8217                           
  8218                           ;stkvar	_voltage @ sp[(-4)+-4]
  8219  01F4BE  0EF8               	movlw	-8
  8220  01F4C0  006F FF8F FFE6     	movff	plusw1,postinc1
  8221  01F4C6  006F FF8F FFE6     	movff	plusw1,postinc1
  8222  01F4CC  006F FF8F FFE6     	movff	plusw1,postinc1
  8223  01F4D2  006F FF8F FFE6     	movff	plusw1,postinc1
  8224  01F4D8  EC49  F0F3         	call	___flge	;wreg free
  8225  01F4DC  B02A               	btfsc	btemp& (0+255),0,c
  8226  01F4DE  D018               	goto	l13662
  8227                           
  8228                           ;daq.c: 287:   voltage = 0.001;
  8229  01F4E0  0E6F               	movlw	111
  8230  01F4E2  6E32               	movwf	(btemp+8)^0,c
  8231  01F4E4  0E12               	movlw	18
  8232  01F4E6  6E33               	movwf	(btemp+9)^0,c
  8233  01F4E8  0E83               	movlw	131
  8234  01F4EA  6E34               	movwf	(btemp+10)^0,c
  8235  01F4EC  0E3A               	movlw	58
  8236  01F4EE  6E35               	movwf	(btemp+11)^0,c
  8237                           
  8238                           ;stkvar	_voltage @ sp[(0)+-4]
  8239  01F4F0  0EFC               	movlw	-4
  8240  01F4F2  0060  F0CB  FFE3   	movff	btemp+8,plusw1
  8241  01F4F8  0EFD               	movlw	-3
  8242  01F4FA  0060  F0CF  FFE3   	movff	btemp+9,plusw1
  8243  01F500  0EFE               	movlw	-2
  8244  01F502  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  8245  01F508  0EFF               	movlw	-1
  8246  01F50A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  8247  01F510                     l13662:
  8248                           
  8249                           ;daq.c: 288:  if (voltage > 10.0)
  8250                           ;stkvar	_voltage @ sp[(0)+-4]
  8251  01F510  0EFC               	movlw	-4
  8252  01F512  006F FF8F FFE6     	movff	plusw1,postinc1
  8253  01F518  006F FF8F FFE6     	movff	plusw1,postinc1
  8254  01F51E  006F FF8F FFE6     	movff	plusw1,postinc1
  8255  01F524  006F FF8F FFE6     	movff	plusw1,postinc1
  8256  01F52A  0E00               	movlw	0
  8257  01F52C  6EE6               	movwf	postinc1,c
  8258  01F52E  0E00               	movlw	0
  8259  01F530  6EE6               	movwf	postinc1,c
  8260  01F532  0E20               	movlw	32
  8261  01F534  6EE6               	movwf	postinc1,c
  8262  01F536  0E41               	movlw	65
  8263  01F538  6EE6               	movwf	postinc1,c
  8264  01F53A  EC49  F0F3         	call	___flge	;wreg free
  8265  01F53E  B02A               	btfsc	btemp& (0+255),0,c
  8266  01F540  D018               	goto	l13666
  8267                           
  8268                           ;daq.c: 289:   voltage = 10.0;
  8269  01F542  0E00               	movlw	0
  8270  01F544  6E32               	movwf	(btemp+8)^0,c
  8271  01F546  0E00               	movlw	0
  8272  01F548  6E33               	movwf	(btemp+9)^0,c
  8273  01F54A  0E20               	movlw	32
  8274  01F54C  6E34               	movwf	(btemp+10)^0,c
  8275  01F54E  0E41               	movlw	65
  8276  01F550  6E35               	movwf	(btemp+11)^0,c
  8277                           
  8278                           ;stkvar	_voltage @ sp[(0)+-4]
  8279  01F552  0EFC               	movlw	-4
  8280  01F554  0060  F0CB  FFE3   	movff	btemp+8,plusw1
  8281  01F55A  0EFD               	movlw	-3
  8282  01F55C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
  8283  01F562  0EFE               	movlw	-2
  8284  01F564  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  8285  01F56A  0EFF               	movlw	-1
  8286  01F56C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  8287  01F572                     l13666:
  8288                           
  8289                           ;daq.c: 293:  return(uint16_t) (voltage / 0.002442);
  8290  01F572  0EF6               	movlw	246
  8291  01F574  6EE6               	movwf	postinc1,c
  8292  01F576  0E09               	movlw	9
  8293  01F578  6EE6               	movwf	postinc1,c
  8294  01F57A  0E20               	movlw	32
  8295  01F57C  6EE6               	movwf	postinc1,c
  8296  01F57E  0E3B               	movlw	59
  8297  01F580  6EE6               	movwf	postinc1,c
  8298                           
  8299                           ;stkvar	_voltage @ sp[(-4)+-4]
  8300  01F582  0EF8               	movlw	-8
  8301  01F584  006F FF8F FFE6     	movff	plusw1,postinc1
  8302  01F58A  006F FF8F FFE6     	movff	plusw1,postinc1
  8303  01F590  006F FF8F FFE6     	movff	plusw1,postinc1
  8304  01F596  006F FF8F FFE6     	movff	plusw1,postinc1
  8305  01F59C  ECDE  F0BD         	call	___fldiv	;wreg free
  8306  01F5A0  0060  F0AB  FFE6   	movff	btemp,postinc1
  8307  01F5A6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  8308  01F5AC  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  8309  01F5B2  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  8310  01F5B8  ECDD  F0F1         	call	___fltol	;wreg free
  8311                           
  8312                           ; _convert_dac_raw: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
  8313  01F5BC  52E5               	movf	postdec1,f,c
  8314  01F5BE  52E5               	movf	postdec1,f,c
  8315  01F5C0  52E5               	movf	postdec1,f,c
  8316  01F5C2  52E5               	movf	postdec1,f,c
  8317  01F5C4  0012               	return		;funcret
  8318  01F5C6                     __end_of_convert_dac_raw:
  8319                           	opt callstack 0
  8320                           
  8321 ;; *************** function _set_dac *****************
  8322 ;; Defined at:
  8323 ;;		line 257 in file "daq.c"
  8324 ;; Parameters:    Size  Location     Type
  8325 ;;		None
  8326 ;; Auto vars:     Size  Location     Type
  8327 ;;		None
  8328 ;; Return value:  Size  Location     Type
  8329 ;;                  1  [STACK] void 
  8330 ;; Registers used:
  8331 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  8332 ;; Tracked objects:
  8333 ;;		On entry : 0/3D
  8334 ;;		On exit  : 0/0
  8335 ;;		Unchanged: 0/0
  8336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8341 ;;Total ram usage:        0 bytes
  8342 ;; Hardware stack levels used:    1
  8343 ;; Hardware stack levels required when called:   16
  8344 ;; This function calls:
  8345 ;;		_SPI1_Exchange8bit
  8346 ;;		_dac_spi_control
  8347 ;; This function is called by:
  8348 ;;		_main
  8349 ;; This function uses a reentrant model
  8350 ;;
  8351                           
  8352                           	psect	text11
  8353  00054A                     __ptext11:
  8354                           	opt callstack 0
  8355  00054A                     _set_dac:
  8356                           	opt callstack 14
  8357                           
  8358                           ;daq.c: 259:  while (!SPI1STATUSbits.TXBE);
  8359                           
  8360                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8361                           ;incstack = 0
  8362  00054A  013D               	movlb	61	; () banked
  8363  00054C  AB17               	btfss	23,5,b	;volatile
  8364  00054E  D7FD               	goto	_set_dac
  8365                           
  8366                           ; BSR set to: 61
  8367                           
  8368                           ;daq.c: 260:  do { LATCbits.LATC2 = 1; } while(0);
  8369  000550  84BC               	bsf	188,2,c	;volatile
  8370                           
  8371                           ; BSR set to: 61
  8372                           
  8373                           ;daq.c: 261:  do { LATCbits.LATC0 = 1; } while(0);
  8374  000552  80BC               	bsf	188,0,c	;volatile
  8375                           
  8376                           ; BSR set to: 61
  8377                           ;daq.c: 262:  dac_spi_control(1);
  8378  000554  0E01               	movlw	1
  8379  000556  6EE6               	movwf	postinc1,c
  8380  000558  EC44  F008         	call	_dac_spi_control	;wreg free
  8381                           
  8382                           ;daq.c: 263:  R.max5322_cmd.map.dac0 = R.raw_dac[0]&0xff;
  8383  00055C  C120  F124         	movff	_R+32,_R+36	;volatile
  8384                           
  8385                           ;daq.c: 264:  R.max5322_cmd.map.dac1 = (R.raw_dac[0] >> 8) &0xf;
  8386  000560  EE20  F120         	lfsr	2,_R+32	;volatile
  8387  000564  006F FF78  F034    	movff	postinc2,btemp+10
  8388  00056A  006F FF74  F035    	movff	postdec2,btemp+11
  8389  000570  0060  F0D4  F034   	movff	btemp+11,btemp+10
  8390  000576  6A35               	clrf	(btemp+11)^0,c
  8391  000578  0E0F               	movlw	15
  8392  00057A  1634               	andwf	(btemp+10)^0,f,c
  8393  00057C  0101               	movlb	1	; () banked
  8394  00057E  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8395  000580  1834               	xorwf	(btemp+10)^0,w,c
  8396  000582  0BF0               	andlw	-16
  8397  000584  1834               	xorwf	(btemp+10)^0,w,c
  8398  000586  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  8399                           
  8400                           ; BSR set to: 1
  8401                           ;daq.c: 265:  R.max5322_cmd.map.cont = 0b0100;
  8402  000588  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8403  00058A  0B0F               	andlw	-241
  8404  00058C  0940               	iorlw	64
  8405  00058E  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  8406                           
  8407                           ; BSR set to: 1
  8408  000590  90BF               	bcf	191,0,c	;volatile
  8409                           
  8410                           ; BSR set to: 1
  8411                           ;daq.c: 267:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  8412  000592  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8413  000594  6EE6               	movwf	postinc1,c
  8414  000596  EC85  F012         	call	_SPI1_Exchange8bit	;wreg free
  8415                           
  8416                           ; BSR set to: 57
  8417                           ;daq.c: 268:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  8418  00059A  0101               	movlb	1	; () banked
  8419  00059C  5124               	movf	(_R+36)& (0+255),w,b	;volatile
  8420  00059E  6EE6               	movwf	postinc1,c
  8421  0005A0  EC85  F012         	call	_SPI1_Exchange8bit	;wreg free
  8422                           
  8423                           ; BSR set to: 57
  8424  0005A4  80BF               	bsf	191,0,c	;volatile
  8425                           
  8426                           ; BSR set to: 57
  8427                           ;daq.c: 270:  R.max5322_cmd.map.dac0 = R.raw_dac[1]&0xff;
  8428  0005A6  C122  F124         	movff	_R+34,_R+36	;volatile
  8429                           
  8430                           ; BSR set to: 57
  8431                           ;daq.c: 271:  R.max5322_cmd.map.dac1 = (R.raw_dac[1] >> 8) &0xf;
  8432  0005AA  EE20  F122         	lfsr	2,_R+34	;volatile
  8433  0005AE  006F FF78  F034    	movff	postinc2,btemp+10
  8434  0005B4  006F FF74  F035    	movff	postdec2,btemp+11
  8435  0005BA  0060  F0D4  F034   	movff	btemp+11,btemp+10
  8436  0005C0  6A35               	clrf	(btemp+11)^0,c
  8437  0005C2  0E0F               	movlw	15
  8438  0005C4  1634               	andwf	(btemp+10)^0,f,c
  8439  0005C6  0101               	movlb	1	; () banked
  8440  0005C8  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8441  0005CA  1834               	xorwf	(btemp+10)^0,w,c
  8442  0005CC  0BF0               	andlw	-16
  8443  0005CE  1834               	xorwf	(btemp+10)^0,w,c
  8444  0005D0  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  8445                           
  8446                           ; BSR set to: 1
  8447                           ;daq.c: 272:  R.max5322_cmd.map.cont = 0b0101;
  8448  0005D2  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8449  0005D4  0B0F               	andlw	-241
  8450  0005D6  0950               	iorlw	80
  8451  0005D8  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  8452                           
  8453                           ; BSR set to: 1
  8454  0005DA  90BF               	bcf	191,0,c	;volatile
  8455                           
  8456                           ; BSR set to: 1
  8457                           ;daq.c: 274:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  8458  0005DC  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8459  0005DE  6EE6               	movwf	postinc1,c
  8460  0005E0  EC85  F012         	call	_SPI1_Exchange8bit	;wreg free
  8461                           
  8462                           ; BSR set to: 57
  8463                           ;daq.c: 275:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  8464  0005E4  0101               	movlb	1	; () banked
  8465  0005E6  5124               	movf	(_R+36)& (0+255),w,b	;volatile
  8466  0005E8  6EE6               	movwf	postinc1,c
  8467  0005EA  EC85  F012         	call	_SPI1_Exchange8bit	;wreg free
  8468  0005EE                     l2033:
  8469  0005EE  013D               	movlb	61	; () banked
  8470  0005F0  AB17               	btfss	23,5,b	;volatile
  8471  0005F2  D7FD               	goto	l2033
  8472                           
  8473                           ; BSR set to: 61
  8474                           
  8475                           ;daq.c: 277:  do { LATFbits.LATF0 = 1; } while(0);
  8476  0005F4  80BF               	bsf	191,0,c	;volatile
  8477                           
  8478                           ; BSR set to: 61
  8479                           ;daq.c: 278:  dac_spi_control(0);
  8480  0005F6  0E00               	movlw	0
  8481  0005F8  6EE6               	movwf	postinc1,c
  8482  0005FA  EC44  F008         	call	_dac_spi_control	;wreg free
  8483                           
  8484                           ; _set_dac: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  8485  0005FE  0012               	return		;funcret
  8486  000600                     __end_of_set_dac:
  8487                           	opt callstack 0
  8488                           
  8489 ;; *************** function _dac_spi_control *****************
  8490 ;; Defined at:
  8491 ;;		line 209 in file "daq.c"
  8492 ;; Parameters:    Size  Location     Type
  8493 ;;  set             1  [STACK] _Bool 
  8494 ;; Auto vars:     Size  Location     Type
  8495 ;;		None
  8496 ;; Return value:  Size  Location     Type
  8497 ;;                  1  [STACK] void 
  8498 ;; Registers used:
  8499 ;;		wreg, fsr1l, fsr1h, status,2
  8500 ;; Tracked objects:
  8501 ;;		On entry : 3F/3D
  8502 ;;		On exit  : 0/0
  8503 ;;		Unchanged: 0/0
  8504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8509 ;;Total ram usage:        0 bytes
  8510 ;; Hardware stack levels used:    1
  8511 ;; Hardware stack levels required when called:   15
  8512 ;; This function calls:
  8513 ;;		Nothing
  8514 ;; This function is called by:
  8515 ;;		_set_dac
  8516 ;; This function uses a reentrant model
  8517 ;;
  8518                           
  8519                           	psect	text12
  8520  001088                     __ptext12:
  8521                           	opt callstack 0
  8522  001088                     _dac_spi_control:
  8523                           	opt callstack 14
  8524                           
  8525                           ;daq.c: 209: void dac_spi_control(_Bool set);daq.c: 210: {;daq.c: 211:  static _Bool ini
      +                          t = 0;;daq.c: 212:  static uint8_t S0, S1, S2, SC, SB;;daq.c: 214:  if (set) {
  8526                           ;stkvar	_set @ sp[(0)+-1]
  8527                           
  8528                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8529                           ;incstack = 0
  8530  001088  0EFF               	movlw	-1
  8531  00108A  50E3               	movf	plusw1,w,c
  8532  00108C  B4D8               	btfsc	status,2,c
  8533  00108E  D022               	goto	l13654
  8534                           
  8535                           ;daq.c: 215:   SPI1CON0bits.EN = 0;
  8536  001090  013D               	movlb	61	; () banked
  8537  001092  9F14               	bcf	20,7,b	;volatile
  8538                           
  8539                           ; BSR set to: 61
  8540                           ;daq.c: 216:   if (!init) {
  8541  001094  5052               	movf	dac_spi_control@init^0,w,c
  8542  001096  A4D8               	btfss	status,2,c
  8543  001098  D011               	goto	l13642
  8544                           
  8545                           ; BSR set to: 61
  8546                           ;daq.c: 217:    init = 1;
  8547  00109A  0E01               	movlw	1
  8548  00109C  6E52               	movwf	dac_spi_control@init^0,c
  8549                           
  8550                           ; BSR set to: 61
  8551                           ;daq.c: 218:    S0 = SPI1CON0;
  8552  00109E  006F F450  F0CB    	movff	15636,dac_spi_control@S0	;volatile
  8553                           
  8554                           ; BSR set to: 61
  8555                           ;daq.c: 219:    S1 = SPI1CON1;
  8556  0010A4  006F F454  F0CA    	movff	15637,dac_spi_control@S1	;volatile
  8557                           
  8558                           ; BSR set to: 61
  8559                           ;daq.c: 220:    S2 = SPI1CON2;
  8560  0010AA  006F F458  F0C9    	movff	15638,dac_spi_control@S2	;volatile
  8561                           
  8562                           ; BSR set to: 61
  8563                           ;daq.c: 221:    SC = SPI1CLK;
  8564  0010B0  006F F470  F0C8    	movff	15644,dac_spi_control@SC	;volatile
  8565                           
  8566                           ; BSR set to: 61
  8567                           ;daq.c: 222:    SB = SPI1BAUD;
  8568  0010B6  006F F464  F0C7    	movff	15641,dac_spi_control@SB	;volatile
  8569  0010BC                     l13642:
  8570                           
  8571                           ; BSR set to: 61
  8572                           ;daq.c: 228:   SPI1CON1 = 0x00;
  8573  0010BC  6B15               	clrf	21,b	;volatile
  8574                           
  8575                           ; BSR set to: 61
  8576                           ;daq.c: 229:   SPI1CON1bits.CKE = 1;
  8577  0010BE  8D15               	bsf	21,6,b	;volatile
  8578                           
  8579                           ; BSR set to: 61
  8580                           ;daq.c: 230:   SPI1CON1bits.CKP = 0;
  8581  0010C0  9B15               	bcf	21,5,b	;volatile
  8582                           
  8583                           ; BSR set to: 61
  8584                           ;daq.c: 231:   SPI1CON1bits.SMP = 0;
  8585  0010C2  9F15               	bcf	21,7,b	;volatile
  8586                           
  8587                           ;daq.c: 233:   SPI1CON2 = 0x03;
  8588  0010C4  0E03               	movlw	3
  8589  0010C6  6F16               	movwf	22,b	;volatile
  8590                           
  8591                           ;daq.c: 235:   SPI1BAUD = 0x0f;
  8592  0010C8  0E0F               	movlw	15
  8593  0010CA  6F19               	movwf	25,b	;volatile
  8594                           
  8595                           ; BSR set to: 61
  8596                           ;daq.c: 237:   SPI1CLK = 0x00;
  8597  0010CC  6B1C               	clrf	28,b	;volatile
  8598                           
  8599                           ;daq.c: 239:   SPI1CON0 = 0x83;
  8600  0010CE  0E83               	movlw	131
  8601  0010D0  6F14               	movwf	20,b	;volatile
  8602  0010D2  D014               	goto	L4
  8603  0010D4                     l13654:
  8604                           
  8605                           ;daq.c: 242:   if (init) {
  8606  0010D4  5052               	movf	dac_spi_control@init^0,w,c
  8607  0010D6  B4D8               	btfsc	status,2,c
  8608  0010D8  D012               	goto	l2017
  8609                           
  8610                           ;daq.c: 246:    SPI1CON0bits.EN = 0;
  8611  0010DA  013D               	movlb	61	; () banked
  8612  0010DC  9F14               	bcf	20,7,b	;volatile
  8613                           
  8614                           ;daq.c: 247:    SPI1CON1 = S1;
  8615  0010DE  0060  F32B  FD15   	movff	dac_spi_control@S1,15637	;volatile
  8616                           
  8617                           ;daq.c: 248:    SPI1CON2 = S2;
  8618  0010E4  0060  F327  FD16   	movff	dac_spi_control@S2,15638	;volatile
  8619                           
  8620                           ;daq.c: 249:    SPI1CLK = SC;
  8621  0010EA  0060  F323  FD1C   	movff	dac_spi_control@SC,15644	;volatile
  8622                           
  8623                           ;daq.c: 250:    SPI1BAUD = SB;
  8624  0010F0  0060  F31F  FD19   	movff	dac_spi_control@SB,15641	;volatile
  8625                           
  8626                           ;daq.c: 251:    SPI1CON0 = S0;
  8627  0010F6  0060  F32F  FD14   	movff	dac_spi_control@S0,15636	;volatile
  8628  0010FC                     L4:
  8629                           
  8630                           ;daq.c: 252:    SPI1CON0bits.EN = 1;
  8631  0010FC  8F14               	bsf	20,7,b	;volatile
  8632  0010FE                     l2017:
  8633                           
  8634                           ; _dac_spi_control: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          1, argsize = 1, vargsize = 0
  8635  0010FE  52E5               	movf	postdec1,f,c
  8636  001100  0012               	return		;funcret
  8637  001102                     __end_of_dac_spi_control:
  8638                           	opt callstack 0
  8639                           
  8640 ;; *************** function _read_cal_data *****************
  8641 ;; Defined at:
  8642 ;;		line 370 in file "daq.c"
  8643 ;; Parameters:    Size  Location     Type
  8644 ;;		None
  8645 ;; Auto vars:     Size  Location     Type
  8646 ;;  x               2  [STACK] unsigned short 
  8647 ;;  r_cal_ptr       2  [STACK] PTR unsigned char 
  8648 ;;		 -> r_cal(155), 
  8649 ;;  y               2  [STACK] unsigned short 
  8650 ;;  crcVal_save     1  [STACK] unsigned char 
  8651 ;; Return value:  Size  Location     Type
  8652 ;;                  1  [STACK] _Bool 
  8653 ;; Registers used:
  8654 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
  8655 ;; Tracked objects:
  8656 ;;		On entry : 0/39
  8657 ;;		On exit  : 0/0
  8658 ;;		Unchanged: 0/0
  8659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8664 ;;Total ram usage:        0 bytes
  8665 ;; Hardware stack levels used:    1
  8666 ;; Hardware stack levels required when called:   17
  8667 ;; This function calls:
  8668 ;;		_CRC_8BitDataWrite
  8669 ;;		_CRC_CalculatedResultGet
  8670 ;;		_CRC_Initialize
  8671 ;;		_CRC_IsBusy
  8672 ;;		_CRC_Start
  8673 ;;		_DATAEE_ReadByte
  8674 ;; This function is called by:
  8675 ;;		_main
  8676 ;; This function uses a reentrant model
  8677 ;;
  8678                           
  8679                           	psect	text13
  8680  01D562                     __ptext13:
  8681                           	opt callstack 0
  8682  01D562                     _read_cal_data:
  8683                           	opt callstack 0
  8684                           
  8685                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8686  01D562  0E07               	movlw	7
  8687  01D564  26E1               	addwf	fsr1l,f,c
  8688  01D566  0E00               	movlw	0
  8689  01D568  22E2               	addwfc	fsr1h,f,c
  8690                           
  8691                           ;daq.c: 372:  uint16_t x = 0, y;
  8692                           ;stkvar	_x @ sp[(-7)+0]
  8693                           
  8694                           ;incstack = 0
  8695  01D56A  0EF9               	movlw	-7
  8696  01D56C  6AE3               	clrf	plusw1,c
  8697  01D56E  0EFA               	movlw	-6
  8698  01D570  6AE3               	clrf	plusw1,c
  8699                           
  8700                           ;daq.c: 373:  uint8_t *r_cal_ptr, crcVal_save;;daq.c: 375:  y = sizeof(r_cal);
  8701  01D572  0E9B               	movlw	155
  8702  01D574  6E34               	movwf	(btemp+10)^0,c
  8703  01D576  0E00               	movlw	0
  8704  01D578  6E35               	movwf	(btemp+11)^0,c
  8705                           
  8706                           ;stkvar	_y @ sp[(-7)+4]
  8707  01D57A  0EFD               	movlw	-3
  8708  01D57C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  8709  01D582  0EFE               	movlw	-2
  8710  01D584  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  8711                           
  8712                           ;daq.c: 376:  r_cal_ptr = (uint8_t*) & r_cal;
  8713                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  8714  01D58A  0E04               	movlw	high _r_cal
  8715  01D58C  6E2A               	movwf	btemp^0,c
  8716  01D58E  0EFC               	movlw	-4
  8717  01D590  0060  F0AB  FFE3   	movff	btemp,plusw1
  8718  01D596  0E40               	movlw	low _r_cal
  8719  01D598  6E2A               	movwf	btemp^0,c
  8720  01D59A  0EFB               	movlw	-5
  8721  01D59C  0060  F0AB  FFE3   	movff	btemp,plusw1
  8722                           
  8723                           ;daq.c: 378:  CRC_Initialize();
  8724  01D5A2  ECB5  F006         	call	_CRC_Initialize	;wreg free
  8725                           
  8726                           ; BSR set to: 0
  8727                           ;daq.c: 381:  CRC_Start();
  8728  01D5A6  ECC2  F013         	call	_CRC_Start	;wreg free
  8729  01D5AA                     l14088:
  8730                           
  8731                           ;daq.c: 384:   r_cal_ptr[x] = DATAEE_ReadByte(x);
  8732                           ;stkvar	_x @ sp[(-7)+0]
  8733  01D5AA  0EF9               	movlw	-7
  8734  01D5AC  006F FF8F FFE6     	movff	plusw1,postinc1
  8735  01D5B2  006F FF8F FFE6     	movff	plusw1,postinc1
  8736  01D5B8  ECB2  F00F         	call	_DATAEE_ReadByte	;wreg free
  8737                           
  8738                           ;stkvar	_x @ sp[(-7)+0]
  8739  01D5BC  0EF9               	movlw	-7
  8740  01D5BE  006F FF8C  F034    	movff	plusw1,btemp+10
  8741  01D5C4  0EFA               	movlw	-6
  8742  01D5C6  006F FF8C  F035    	movff	plusw1,btemp+11
  8743                           
  8744                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  8745  01D5CC  0EFB               	movlw	-5
  8746  01D5CE  006F FF8C  F032    	movff	plusw1,btemp+8
  8747  01D5D4  0EFC               	movlw	-4
  8748  01D5D6  006F FF8C  F033    	movff	plusw1,btemp+9
  8749  01D5DC  5034               	movf	(btemp+10)^0,w,c
  8750  01D5DE  2432               	addwf	(btemp+8)^0,w,c
  8751  01D5E0  6ED9               	movwf	fsr2l,c
  8752  01D5E2  5035               	movf	(btemp+11)^0,w,c
  8753  01D5E4  2033               	addwfc	(btemp+9)^0,w,c
  8754  01D5E6  6EDA               	movwf	fsr2h,c
  8755  01D5E8  0060  F0AB  FFDF   	movff	btemp,indf2
  8756                           
  8757                           ;daq.c: 385:  } while (++x < y);
  8758                           ;stkvar	_y @ sp[(-7)+4]
  8759  01D5EE  0EFD               	movlw	-3
  8760  01D5F0  006F FF8C  F034    	movff	plusw1,btemp+10
  8761  01D5F6  0EFE               	movlw	-2
  8762  01D5F8  006F FF8C  F035    	movff	plusw1,btemp+11
  8763                           
  8764                           ;stkvar	_x @ sp[(-7)+0]
  8765  01D5FE  0EF9               	movlw	-7
  8766  01D600  50E3               	movf	plusw1,w,c
  8767  01D602  0F01               	addlw	1
  8768  01D604  6E2A               	movwf	btemp^0,c
  8769  01D606  0EF9               	movlw	-7
  8770  01D608  0060  F0AB  FFE3   	movff	btemp,plusw1
  8771  01D60E  6A2A               	clrf	btemp^0,c
  8772  01D610  0EFA               	movlw	-6
  8773  01D612  50E3               	movf	plusw1,w,c
  8774  01D614  202A               	addwfc	btemp^0,w,c
  8775  01D616  6E2A               	movwf	btemp^0,c
  8776  01D618  0EFA               	movlw	-6
  8777  01D61A  0060  F0AB  FFE3   	movff	btemp,plusw1
  8778  01D620  0EF9               	movlw	-7
  8779  01D622  006F FF8C  F032    	movff	plusw1,btemp+8
  8780  01D628  0EFA               	movlw	-6
  8781  01D62A  006F FF8C  F033    	movff	plusw1,btemp+9
  8782  01D630  5034               	movf	(btemp+10)^0,w,c
  8783  01D632  5C32               	subwf	(btemp+8)^0,w,c
  8784  01D634  5035               	movf	(btemp+11)^0,w,c
  8785  01D636  5833               	subwfb	(btemp+9)^0,w,c
  8786  01D638  A0D8               	btfss	status,0,c
  8787  01D63A  D7B7               	goto	l14088
  8788                           
  8789                           ;daq.c: 386:  crcVal_save = r_cal.crc;
  8790                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  8791  01D63C  0EFF               	movlw	-1
  8792  01D63E  0061  F36B  FFE3   	movff	_r_cal+154,plusw1
  8793                           
  8794                           ;daq.c: 388:  if (r_cal.checkmark == 0x1957) {
  8795  01D644  0E57               	movlw	87
  8796  01D646  0104               	movlb	4	; () banked
  8797  01D648  19D8               	xorwf	(_r_cal+152)& (0+255),w,b
  8798  01D64A  E163               	bnz	l14108
  8799  01D64C  0E19               	movlw	25
  8800  01D64E  19D9               	xorwf	(_r_cal+153)& (0+255),w,b
  8801  01D650  A4D8               	btfss	status,2,c
  8802  01D652  D05F               	goto	u13300
  8803                           
  8804                           ; BSR set to: 4
  8805                           ;daq.c: 389:   r_cal.crc = 0x42;
  8806  01D654  0E42               	movlw	66
  8807  01D656  6FDA               	movwf	(_r_cal+154)& (0+255),b
  8808                           
  8809                           ; BSR set to: 4
  8810                           ;daq.c: 390:   x = 0;
  8811                           ;stkvar	_x @ sp[(-7)+0]
  8812  01D658  0EF9               	movlw	-7
  8813  01D65A  6AE3               	clrf	plusw1,c
  8814  01D65C  0EFA               	movlw	-6
  8815  01D65E  6AE3               	clrf	plusw1,c
  8816  01D660                     l14100:
  8817                           
  8818                           ;daq.c: 393:    CRC_8BitDataWrite(r_cal_ptr[x]);
  8819                           ;stkvar	_x @ sp[(-7)+0]
  8820  01D660  0EF9               	movlw	-7
  8821  01D662  006F FF8C  F034    	movff	plusw1,btemp+10
  8822  01D668  0EFA               	movlw	-6
  8823  01D66A  006F FF8C  F035    	movff	plusw1,btemp+11
  8824                           
  8825                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  8826  01D670  0EFB               	movlw	-5
  8827  01D672  006F FF8C  F032    	movff	plusw1,btemp+8
  8828  01D678  0EFC               	movlw	-4
  8829  01D67A  006F FF8C  F033    	movff	plusw1,btemp+9
  8830  01D680  5034               	movf	(btemp+10)^0,w,c
  8831  01D682  2432               	addwf	(btemp+8)^0,w,c
  8832  01D684  6ED9               	movwf	fsr2l,c
  8833  01D686  5035               	movf	(btemp+11)^0,w,c
  8834  01D688  2033               	addwfc	(btemp+9)^0,w,c
  8835  01D68A  6EDA               	movwf	fsr2h,c
  8836  01D68C  50DF               	movf	indf2,w,c
  8837  01D68E  6EE6               	movwf	postinc1,c
  8838  01D690  EC29  F013         	call	_CRC_8BitDataWrite	;wreg free
  8839  01D694                     l14102:
  8840  01D694  EC4B  F013         	call	_CRC_IsBusy	;wreg free
  8841  01D698  502A               	movf	btemp^0,w,c
  8842  01D69A  A4D8               	btfss	status,2,c
  8843  01D69C  D7FB               	goto	l14102
  8844                           
  8845                           ;daq.c: 395:   } while (++x < y);
  8846                           ;stkvar	_y @ sp[(-7)+4]
  8847  01D69E  0EFD               	movlw	-3
  8848  01D6A0  006F FF8C  F034    	movff	plusw1,btemp+10
  8849  01D6A6  0EFE               	movlw	-2
  8850  01D6A8  006F FF8C  F035    	movff	plusw1,btemp+11
  8851                           
  8852                           ;stkvar	_x @ sp[(-7)+0]
  8853  01D6AE  0EF9               	movlw	-7
  8854  01D6B0  50E3               	movf	plusw1,w,c
  8855  01D6B2  0F01               	addlw	1
  8856  01D6B4  6E2A               	movwf	btemp^0,c
  8857  01D6B6  0EF9               	movlw	-7
  8858  01D6B8  0060  F0AB  FFE3   	movff	btemp,plusw1
  8859  01D6BE  6A2A               	clrf	btemp^0,c
  8860  01D6C0  0EFA               	movlw	-6
  8861  01D6C2  50E3               	movf	plusw1,w,c
  8862  01D6C4  202A               	addwfc	btemp^0,w,c
  8863  01D6C6  6E2A               	movwf	btemp^0,c
  8864  01D6C8  0EFA               	movlw	-6
  8865  01D6CA  0060  F0AB  FFE3   	movff	btemp,plusw1
  8866  01D6D0  0EF9               	movlw	-7
  8867  01D6D2  006F FF8C  F032    	movff	plusw1,btemp+8
  8868  01D6D8  0EFA               	movlw	-6
  8869  01D6DA  006F FF8C  F033    	movff	plusw1,btemp+9
  8870  01D6E0  5034               	movf	(btemp+10)^0,w,c
  8871  01D6E2  5C32               	subwf	(btemp+8)^0,w,c
  8872  01D6E4  5035               	movf	(btemp+11)^0,w,c
  8873  01D6E6  5833               	subwfb	(btemp+9)^0,w,c
  8874  01D6E8  A0D8               	btfss	status,0,c
  8875  01D6EA  D7BA               	goto	l14100
  8876                           
  8877                           ;daq.c: 396:   if (CRC_CalculatedResultGet(0, 0x00) != crcVal_save)
  8878  01D6EC  0E00               	movlw	0
  8879  01D6EE  6EE6               	movwf	postinc1,c
  8880  01D6F0  0E00               	movlw	0
  8881  01D6F2  6EE6               	movwf	postinc1,c
  8882  01D6F4  0E00               	movlw	0
  8883  01D6F6  6EE6               	movwf	postinc1,c
  8884  01D6F8  EC24  F0F1         	call	_CRC_CalculatedResultGet	;wreg free
  8885                           
  8886                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  8887  01D6FC  0EFF               	movlw	-1
  8888  01D6FE  50E3               	movf	plusw1,w,c
  8889  01D700  6E34               	movwf	(btemp+10)^0,c
  8890  01D702  6A35               	clrf	(btemp+11)^0,c
  8891  01D704  5034               	movf	(btemp+10)^0,w,c
  8892  01D706  182A               	xorwf	btemp^0,w,c
  8893  01D708  E104               	bnz	u13300
  8894  01D70A  5035               	movf	(btemp+11)^0,w,c
  8895  01D70C  182B               	xorwf	(btemp+1)^0,w,c
  8896  01D70E  B4D8               	btfsc	status,2,c
  8897  01D710  D002               	goto	l14116
  8898  01D712                     u13300:
  8899  01D712                     l14108:
  8900                           
  8901                           ;daq.c: 397:    return 0;
  8902  01D712  0E00               	movlw	0
  8903  01D714  D005               	goto	L5
  8904  01D716                     l14116:
  8905                           
  8906                           ;daq.c: 401:  r_cal.crc = crcVal_save;
  8907                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  8908  01D716  0EFF               	movlw	-1
  8909  01D718  006F FF8C  F4DA    	movff	plusw1,_r_cal+154
  8910                           
  8911                           ;daq.c: 402:  return 1;
  8912  01D71E  0E01               	movlw	1
  8913  01D720                     L5:
  8914  01D720  6E2A               	movwf	btemp^0,c
  8915                           
  8916                           ; _read_cal_data: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  8917  01D722  0EF9               	movlw	249
  8918  01D724  26E1               	addwf	fsr1l,f,c
  8919  01D726  0EFF               	movlw	255
  8920  01D728  22E2               	addwfc	fsr1h,f,c
  8921  01D72A  0012               	return		;funcret
  8922  01D72C                     __end_of_read_cal_data:
  8923                           	opt callstack 0
  8924                           
  8925 ;; *************** function _DATAEE_ReadByte *****************
  8926 ;; Defined at:
  8927 ;;		line 194 in file "mcc_generated_files/memory.c"
  8928 ;; Parameters:    Size  Location     Type
  8929 ;;  bAdd            2  [STACK] unsigned short 
  8930 ;; Auto vars:     Size  Location     Type
  8931 ;;		None
  8932 ;; Return value:  Size  Location     Type
  8933 ;;                  1  [STACK] unsigned char 
  8934 ;; Registers used:
  8935 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  8936 ;; Tracked objects:
  8937 ;;		On entry : 0/39
  8938 ;;		On exit  : 0/0
  8939 ;;		Unchanged: 0/0
  8940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8945 ;;Total ram usage:        0 bytes
  8946 ;; Hardware stack levels used:    1
  8947 ;; Hardware stack levels required when called:   15
  8948 ;; This function calls:
  8949 ;;		Nothing
  8950 ;; This function is called by:
  8951 ;;		_read_cal_data
  8952 ;; This function uses a reentrant model
  8953 ;;
  8954                           
  8955                           	psect	text14
  8956  001F64                     __ptext14:
  8957                           	opt callstack 0
  8958  001F64                     _DATAEE_ReadByte:
  8959                           	opt callstack 14
  8960                           
  8961                           ;mcc_generated_files/memory.c: 194: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 195: {;mcc_generated_files/memory.c: 196:     NVMADRH = (uint8_t)((bAdd
      +                           >> 8) & 0x03);
  8962                           ;stkvar	_bAdd @ sp[(0)+-2]
  8963                           
  8964                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8965                           ;incstack = 0
  8966  001F64  0EFF               	movlw	255
  8967  001F66  24E1               	addwf	fsr1l,w,c
  8968  001F68  6ED9               	movwf	fsr2l,c
  8969  001F6A  0EFF               	movlw	255
  8970  001F6C  20E2               	addwfc	fsr1h,w,c
  8971  001F6E  6EDA               	movwf	fsr2h,c
  8972  001F70  50DF               	movf	indf2,w,c
  8973  001F72  0B03               	andlw	3
  8974  001F74  0139               	movlb	57	; () banked
  8975  001F76  6FE1               	movwf	225,b	;volatile
  8976                           
  8977                           ; BSR set to: 57
  8978                           ;mcc_generated_files/memory.c: 197:     NVMADRL = (uint8_t)(bAdd & 0xFF);
  8979                           ;stkvar	_bAdd @ sp[(0)+-2]
  8980  001F78  0EFE               	movlw	-2
  8981  001F7A  006F FF8F F9E0     	movff	plusw1,14816	;volatile
  8982                           
  8983                           ; BSR set to: 57
  8984                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.NVMREG = 0;
  8985  001F80  0E3F               	movlw	-193
  8986  001F82  17E5               	andwf	229,f,b	;volsfr
  8987                           
  8988                           ; BSR set to: 57
  8989                           ;mcc_generated_files/memory.c: 199:     NVMCON1bits.RD = 1;
  8990  001F84  81E5               	bsf	229,0,b	;volsfr
  8991                           
  8992                           ; BSR set to: 57
  8993                           ;mcc_generated_files/memory.c: 200:     __nop();
  8994  001F86  F000               	nop	
  8995                           
  8996                           ;mcc_generated_files/memory.c: 201:     __nop();
  8997  001F88  F000               	nop	
  8998                           
  8999                           ;mcc_generated_files/memory.c: 203:     return (NVMDAT);
  9000  001F8A  006E F78C  F02A    	movff	14819,btemp	;volatile
  9001                           
  9002                           ; _DATAEE_ReadByte: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  9003  001F90  52E5               	movf	postdec1,f,c
  9004  001F92  52E5               	movf	postdec1,f,c
  9005  001F94  0012               	return		;funcret
  9006  001F96                     __end_of_DATAEE_ReadByte:
  9007                           	opt callstack 0
  9008                           
  9009 ;; *************** function _load_hist_data *****************
  9010 ;; Defined at:
  9011 ;;		line 224 in file "mbmc.c"
  9012 ;; Parameters:    Size  Location     Type
  9013 ;;		None
  9014 ;; Auto vars:     Size  Location     Type
  9015 ;;  esr_rescale     2  [STACK] short 
  9016 ;; Return value:  Size  Location     Type
  9017 ;;                  1  [STACK] void 
  9018 ;; Registers used:
  9019 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, prodl, prodh
  9020 ;; Tracked objects:
  9021 ;;		On entry : 3F/1
  9022 ;;		On exit  : 3F/39
  9023 ;;		Unchanged: 0/0
  9024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9029 ;;Total ram usage:        0 bytes
  9030 ;; Hardware stack levels used:    1
  9031 ;; Hardware stack levels required when called:   16
  9032 ;; This function calls:
  9033 ;;		___fldiv
  9034 ;;		___flmul
  9035 ;;		___fltol
  9036 ;;		_start_bsoc
  9037 ;;		_stop_bsoc
  9038 ;;		_time
  9039 ;; This function is called by:
  9040 ;;		_main
  9041 ;; This function uses a reentrant model
  9042 ;;
  9043                           
  9044                           	psect	text15
  9045  01C1BC                     __ptext15:
  9046                           	opt callstack 0
  9047  01C1BC                     _load_hist_data:
  9048                           	opt callstack 0
  9049                           
  9050                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9051  01C1BC  52E6               	movf	postinc1,f,c
  9052  01C1BE  52E6               	movf	postinc1,f,c
  9053                           
  9054                           ;mbmc.c: 226:  int16_t esr_rescale;;mbmc.c: 228:  stop_bsoc();
  9055                           
  9056                           ;incstack = 0
  9057  01C1C0  ECCE  F013         	call	_stop_bsoc	;wreg free
  9058                           
  9059                           ; BSR set to: 57
  9060                           ;mbmc.c: 229:  esr_rescale = (int16_t) (C.esr * 1000.0);
  9061  01C1C4  0E00               	movlw	0
  9062  01C1C6  6EE6               	movwf	postinc1,c
  9063  01C1C8  0E00               	movlw	0
  9064  01C1CA  6EE6               	movwf	postinc1,c
  9065  01C1CC  0E7A               	movlw	122
  9066  01C1CE  6EE6               	movwf	postinc1,c
  9067  01C1D0  0E44               	movlw	68
  9068  01C1D2  6EE6               	movwf	postinc1,c
  9069  01C1D4  EE22  F187         	lfsr	2,_C+136	;volatile
  9070  01C1D8  006F FF7B FFE6     	movff	postinc2,postinc1
  9071  01C1DE  006F FF7B FFE6     	movff	postinc2,postinc1
  9072  01C1E4  006F FF7B FFE6     	movff	postinc2,postinc1
  9073  01C1EA  006F FF7B FFE6     	movff	postinc2,postinc1
  9074  01C1F0  EC8D  F0B2         	call	___flmul	;wreg free
  9075  01C1F4  0060  F0AB  FFE6   	movff	btemp,postinc1
  9076  01C1FA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9077  01C200  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9078  01C206  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9079  01C20C  ECDD  F0F1         	call	___fltol	;wreg free
  9080  01C210  0060  F0A8  F034   	movff	btemp,btemp+10
  9081  01C216  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9082                           
  9083                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  9084  01C21C  0EFE               	movlw	-2
  9085  01C21E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  9086  01C224  0EFF               	movlw	-1
  9087  01C226  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  9088                           
  9089                           ;mbmc.c: 230:  C.hist[0].updates++;
  9090  01C22C  EE22  F1D9         	lfsr	2,_C+218	;volatile
  9091  01C230  2ADE               	incf	postinc2,f,c
  9092  01C232  0E00               	movlw	0
  9093  01C234  22DE               	addwfc	postinc2,f,c
  9094  01C236  22DE               	addwfc	postinc2,f,c
  9095  01C238  22DE               	addwfc	postinc2,f,c
  9096                           
  9097                           ;mbmc.c: 231:  C.hist[0].h[12] += (int16_t) (C.pvkw / 10.0);
  9098  01C23A  0E00               	movlw	0
  9099  01C23C  6EE6               	movwf	postinc1,c
  9100  01C23E  0E00               	movlw	0
  9101  01C240  6EE6               	movwf	postinc1,c
  9102  01C242  0E20               	movlw	32
  9103  01C244  6EE6               	movwf	postinc1,c
  9104  01C246  0E41               	movlw	65
  9105  01C248  6EE6               	movwf	postinc1,c
  9106  01C24A  EE22  F1A7         	lfsr	2,_C+168	;volatile
  9107  01C24E  006F FF7B FFE6     	movff	postinc2,postinc1
  9108  01C254  006F FF7B FFE6     	movff	postinc2,postinc1
  9109  01C25A  006F FF7B FFE6     	movff	postinc2,postinc1
  9110  01C260  006F FF7B FFE6     	movff	postinc2,postinc1
  9111  01C266  ECDE  F0BD         	call	___fldiv	;wreg free
  9112  01C26A  0060  F0AB  FFE6   	movff	btemp,postinc1
  9113  01C270  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9114  01C276  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9115  01C27C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9116  01C282  ECDD  F0F1         	call	___fltol	;wreg free
  9117  01C286  0060  F0A8  F034   	movff	btemp,btemp+10
  9118  01C28C  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9119  01C292  EE22  F1F5         	lfsr	2,_C+246	;volatile
  9120  01C296  5034               	movf	(btemp+10)^0,w,c
  9121  01C298  26DE               	addwf	postinc2,f,c
  9122  01C29A  5035               	movf	(btemp+11)^0,w,c
  9123  01C29C  22DD               	addwfc	postdec2,f,c
  9124                           
  9125                           ;mbmc.c: 232:  C.hist[0].h[11]++;
  9126  01C29E  EE22  F1F3         	lfsr	2,_C+244	;volatile
  9127  01C2A2  2ADE               	incf	postinc2,f,c
  9128  01C2A4  0E00               	movlw	0
  9129  01C2A6  22DD               	addwfc	postdec2,f,c
  9130                           
  9131                           ;mbmc.c: 233:  C.hist[10].h[10] = esr_rescale;
  9132                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  9133  01C2A8  50E1               	movf	fsr1l,w,c
  9134  01C2AA  0FFE               	addlw	-2
  9135  01C2AC  6ED9               	movwf	fsr2l,c
  9136  01C2AE  50E2               	movf	fsr1h,w,c
  9137  01C2B0  6EDA               	movwf	fsr2h,c
  9138  01C2B2  0EFF               	movlw	255
  9139  01C2B4  22DA               	addwfc	fsr2h,f,c
  9140  01C2B6  006F FF78  FDBB    	movff	postinc2,_C+1212	;volatile
  9141  01C2BC  006F FF74  FDBC    	movff	postdec2,_C+1213	;volatile
  9142                           
  9143                           ;mbmc.c: 234:  C.hist[10].h[9] = esr_rescale;
  9144                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  9145  01C2C2  50E1               	movf	fsr1l,w,c
  9146  01C2C4  0FFE               	addlw	-2
  9147  01C2C6  6ED9               	movwf	fsr2l,c
  9148  01C2C8  50E2               	movf	fsr1h,w,c
  9149  01C2CA  6EDA               	movwf	fsr2h,c
  9150  01C2CC  0EFF               	movlw	255
  9151  01C2CE  22DA               	addwfc	fsr2h,f,c
  9152  01C2D0  006F FF78  FDB9    	movff	postinc2,_C+1210	;volatile
  9153  01C2D6  006F FF74  FDBA    	movff	postdec2,_C+1211	;volatile
  9154                           
  9155                           ;mbmc.c: 235:  C.hist[0].h[6] = C.dynamic_ah;
  9156  01C2DC  EE22  F18F         	lfsr	2,_C+144	;volatile
  9157  01C2E0  006F FF7B FFE6     	movff	postinc2,postinc1
  9158  01C2E6  006F FF7B FFE6     	movff	postinc2,postinc1
  9159  01C2EC  006F FF7B FFE6     	movff	postinc2,postinc1
  9160  01C2F2  006F FF7B FFE6     	movff	postinc2,postinc1
  9161  01C2F8  ECDD  F0F1         	call	___fltol	;wreg free
  9162  01C2FC  0060  F0A8  F034   	movff	btemp,btemp+10
  9163  01C302  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9164  01C308  0060  F0D0  F9E9   	movff	btemp+10,_C+234	;volatile
  9165  01C30E  0060  F0D4  F9EA   	movff	btemp+11,_C+235	;volatile
  9166                           
  9167                           ;mbmc.c: 236:  C.hist[0].h[0] = C.dynamic_ah_adj;
  9168  01C314  EE22  F19B         	lfsr	2,_C+156	;volatile
  9169  01C318  006F FF7B FFE6     	movff	postinc2,postinc1
  9170  01C31E  006F FF7B FFE6     	movff	postinc2,postinc1
  9171  01C324  006F FF7B FFE6     	movff	postinc2,postinc1
  9172  01C32A  006F FF7B FFE6     	movff	postinc2,postinc1
  9173  01C330  ECDD  F0F1         	call	___fltol	;wreg free
  9174  01C334  0060  F0A8  F034   	movff	btemp,btemp+10
  9175  01C33A  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9176  01C340  0060  F0D0  F9DD   	movff	btemp+10,_C+222	;volatile
  9177  01C346  0060  F0D4  F9DE   	movff	btemp+11,_C+223	;volatile
  9178                           
  9179                           ;mbmc.c: 237:  C.hist[0].pclock = time(((void*)0));
  9180  01C34C  0E00               	movlw	0
  9181  01C34E  6EE6               	movwf	postinc1,c
  9182  01C350  0E00               	movlw	0
  9183  01C352  6EE6               	movwf	postinc1,c
  9184  01C354  EC25  F00B         	call	_time	;wreg free
  9185  01C358  52E5               	movf	postdec1,f,c
  9186  01C35A  006F FF9C  F041    	movff	indf1,btemp+23
  9187  01C360  52E5               	movf	postdec1,f,c
  9188  01C362  006F FF9C  F040    	movff	indf1,btemp+22
  9189  01C368  52E5               	movf	postdec1,f,c
  9190  01C36A  006F FF9C  F03F    	movff	indf1,btemp+21
  9191  01C370  52E5               	movf	postdec1,f,c
  9192  01C372  006F FF9C  F03E    	movff	indf1,btemp+20
  9193  01C378  52E5               	movf	postdec1,f,c
  9194  01C37A  006F FF9C  F03D    	movff	indf1,btemp+19
  9195  01C380  52E5               	movf	postdec1,f,c
  9196  01C382  006F FF9C  F03C    	movff	indf1,btemp+18
  9197  01C388  52E5               	movf	postdec1,f,c
  9198  01C38A  006F FF9C  F03B    	movff	indf1,btemp+17
  9199  01C390  52E5               	movf	postdec1,f,c
  9200  01C392  006F FF9C  F03A    	movff	indf1,btemp+16
  9201  01C398  EE22  F1B9         	lfsr	2,_C+186	;volatile
  9202  01C39C  0060  F0EB  FFDE   	movff	btemp+16,postinc2
  9203  01C3A2  0060  F0EF  FFDE   	movff	btemp+17,postinc2
  9204  01C3A8  0060  F0F3  FFDE   	movff	btemp+18,postinc2
  9205  01C3AE  0060  F0F7  FFDE   	movff	btemp+19,postinc2
  9206  01C3B4  0060  F0FB  FFDE   	movff	btemp+20,postinc2
  9207  01C3BA  0060  F0FF  FFDE   	movff	btemp+21,postinc2
  9208  01C3C0  0060  F103  FFDE   	movff	btemp+22,postinc2
  9209  01C3C6  0060  F107  FFDE   	movff	btemp+23,postinc2
  9210                           
  9211                           ; BSR set to: 57
  9212                           ;mbmc.c: 238:  C.dynamic_ah = 0.0;
  9213  01C3CC  0E00               	movlw	0
  9214  01C3CE  006F FFA0  F98F    	movff	wreg,_C+144	;volatile
  9215  01C3D4  0E00               	movlw	0
  9216  01C3D6  006F FFA0  F990    	movff	wreg,_C+145	;volatile
  9217  01C3DC  0E00               	movlw	0
  9218  01C3DE  006F FFA0  F991    	movff	wreg,_C+146	;volatile
  9219  01C3E4  0E00               	movlw	0
  9220  01C3E6  006F FFA0  F992    	movff	wreg,_C+147	;volatile
  9221                           
  9222                           ; BSR set to: 57
  9223                           ;mbmc.c: 239:  C.dynamic_ah_adj = 0.0;
  9224  01C3EC  0E00               	movlw	0
  9225  01C3EE  006F FFA0  F99B    	movff	wreg,_C+156	;volatile
  9226  01C3F4  0E00               	movlw	0
  9227  01C3F6  006F FFA0  F99C    	movff	wreg,_C+157	;volatile
  9228  01C3FC  0E00               	movlw	0
  9229  01C3FE  006F FFA0  F99D    	movff	wreg,_C+158	;volatile
  9230  01C404  0E00               	movlw	0
  9231  01C406  006F FFA0  F99E    	movff	wreg,_C+159	;volatile
  9232                           
  9233                           ; BSR set to: 57
  9234                           ;mbmc.c: 240:  start_bsoc();
  9235  01C40C  EC43  F012         	call	_start_bsoc	;wreg free
  9236                           
  9237                           ; BSR set to: 57
  9238                           ; _load_hist_data: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9239  01C410  52E5               	movf	postdec1,f,c
  9240  01C412  52E5               	movf	postdec1,f,c
  9241  01C414  0012               	return		;funcret
  9242  01C416                     __end_of_load_hist_data:
  9243                           	opt callstack 0
  9244                           
  9245 ;; *************** function _init_port_dma *****************
  9246 ;; Defined at:
  9247 ;;		line 104 in file "eadog.c"
  9248 ;; Parameters:    Size  Location     Type
  9249 ;;		None
  9250 ;; Auto vars:     Size  Location     Type
  9251 ;;		None
  9252 ;; Return value:  Size  Location     Type
  9253 ;;                  1  [STACK] void 
  9254 ;; Registers used:
  9255 ;;		wreg, status,2
  9256 ;; Tracked objects:
  9257 ;;		On entry : 0/2
  9258 ;;		On exit  : 3F/3B
  9259 ;;		Unchanged: 0/0
  9260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9265 ;;Total ram usage:        0 bytes
  9266 ;; Hardware stack levels used:    1
  9267 ;; Hardware stack levels required when called:   15
  9268 ;; This function calls:
  9269 ;;		Nothing
  9270 ;; This function is called by:
  9271 ;;		_main
  9272 ;; This function uses a reentrant model
  9273 ;;
  9274                           
  9275                           	psect	text16
  9276  001F96                     __ptext16:
  9277                           	opt callstack 0
  9278  001F96                     _init_port_dma:
  9279                           	opt callstack 15
  9280                           
  9281                           ;eadog.c: 106:  DMA2CON1bits.DMODE = 0;
  9282                           
  9283                           ; BSR set to: 57
  9284                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9285                           ;incstack = 0
  9286  001F96  0E3F               	movlw	-193
  9287  001F98  013B               	movlb	59	; () banked
  9288  001F9A  17DD               	andwf	221,f,b	;volatile
  9289                           
  9290                           ; BSR set to: 59
  9291                           ;eadog.c: 107:  DMA2CON1bits.DSTP = 0;
  9292  001F9C  9BDD               	bcf	221,5,b	;volatile
  9293                           
  9294                           ;eadog.c: 108:  DMA2CON1bits.SMODE = 1;
  9295  001F9E  51DD               	movf	221,w,b	;volatile
  9296  001FA0  0BF9               	andlw	-7
  9297  001FA2  0902               	iorlw	2
  9298  001FA4  6FDD               	movwf	221,b	;volatile
  9299                           
  9300                           ;eadog.c: 109:  DMA2CON1bits.SMR = 0;
  9301  001FA6  0EE7               	movlw	-25
  9302  001FA8  17DD               	andwf	221,f,b	;volatile
  9303                           
  9304                           ; BSR set to: 59
  9305                           ;eadog.c: 110:  DMA2CON1bits.SSTP = 1;
  9306  001FAA  81DD               	bsf	221,0,b	;volatile
  9307                           
  9308                           ; BSR set to: 59
  9309                           ;eadog.c: 111:  DMA2CON0bits.SIRQEN = 0;
  9310  001FAC  9DDC               	bcf	220,6,b	;volatile
  9311                           
  9312                           ;eadog.c: 112:  DMA2DSA = 0x3DEA;
  9313  001FAE  0E3D               	movlw	61
  9314  001FB0  6FD1               	movwf	209,b	;volatile
  9315  001FB2  0EEA               	movlw	234
  9316  001FB4  6FD0               	movwf	208,b	;volatile
  9317                           
  9318                           ;eadog.c: 113:  DMA2SSA = (uint32_t) port_data;
  9319  001FB6  0EFF               	movlw	low _port_data
  9320  001FB8  6FD9               	movwf	217,b	;volatile
  9321  001FBA  0E06               	movlw	high _port_data
  9322  001FBC  6FDA               	movwf	218,b	;volatile
  9323  001FBE  0E00               	movlw	low (_port_data shr (0+16))
  9324  001FC0  6FDB               	movwf	219,b	;volatile
  9325                           
  9326                           ; BSR set to: 59
  9327                           ;eadog.c: 114:  DMA2CON0bits.DGO = 0;
  9328  001FC2  9BDC               	bcf	220,5,b	;volatile
  9329                           
  9330                           ; BSR set to: 59
  9331                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  9332  001FC4  0012               	return		;funcret
  9333  001FC6                     __end_of_init_port_dma:
  9334                           	opt callstack 0
  9335                           
  9336 ;; *************** function _init_display *****************
  9337 ;; Defined at:
  9338 ;;		line 38 in file "eadog.c"
  9339 ;; Parameters:    Size  Location     Type
  9340 ;;		None
  9341 ;; Auto vars:     Size  Location     Type
  9342 ;;		None
  9343 ;; Return value:  Size  Location     Type
  9344 ;;                  1  [STACK] void 
  9345 ;; Registers used:
  9346 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9347 ;; Tracked objects:
  9348 ;;		On entry : 3F/3B
  9349 ;;		On exit  : 3F/3D
  9350 ;;		Unchanged: 0/0
  9351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9356 ;;Total ram usage:        0 bytes
  9357 ;; Hardware stack levels used:    1
  9358 ;; Hardware stack levels required when called:   17
  9359 ;; This function calls:
  9360 ;;		_ringBufS_init
  9361 ;;		_send_lcd_cmd
  9362 ;;		_send_lcd_cmd_long
  9363 ;;		_send_lcd_data
  9364 ;;		_wdtdelay
  9365 ;; This function is called by:
  9366 ;;		_main
  9367 ;; This function uses a reentrant model
  9368 ;;
  9369                           
  9370                           	psect	text17
  9371  01FDBE                     __ptext17:
  9372                           	opt callstack 0
  9373  01FDBE                     _init_display:
  9374                           	opt callstack 13
  9375                           
  9376                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  9377                           
  9378                           ; BSR set to: 59
  9379                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9380                           ;incstack = 0
  9381  01FDBE  0E43               	movlw	low _ring_buf1
  9382  01FDC0  0100               	movlb	0	; () banked
  9383  01FDC2  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
  9384  01FDC4  0E05               	movlw	high _ring_buf1
  9385  01FDC6  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
  9386                           
  9387                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  9388  01FDC8  0E00               	movlw	low _ring_buf2
  9389  01FDCA  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
  9390  01FDCC  0E05               	movlw	high _ring_buf2
  9391  01FDCE  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
  9392                           
  9393                           ; BSR set to: 0
  9394                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  9395  01FDD0  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  9396  01FDD6  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  9397  01FDDC  EC99  F010         	call	_ringBufS_init	;wreg free
  9398                           
  9399                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  9400  01FDE0  0060  F193  FFE6   	movff	_spi_link+4,postinc1
  9401  01FDE6  0060  F197  FFE6   	movff	_spi_link+5,postinc1
  9402  01FDEC  EC99  F010         	call	_ringBufS_init	;wreg free
  9403                           
  9404                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  9405  01FDF0  84BE               	bsf	190,2,c	;volatile
  9406                           
  9407                           ;eadog.c: 47:  SPI1CON0bits.EN = 0;
  9408  01FDF2  013D               	movlb	61	; () banked
  9409  01FDF4  9F14               	bcf	20,7,b	;volatile
  9410                           
  9411                           ; BSR set to: 61
  9412                           ;eadog.c: 49:  SPI1CON1 = 0x20;
  9413  01FDF6  0E20               	movlw	32
  9414  01FDF8  6F15               	movwf	21,b	;volatile
  9415                           
  9416                           ; BSR set to: 61
  9417                           ;eadog.c: 51:  SPI1CON2 = 0x03;
  9418  01FDFA  0E03               	movlw	3
  9419  01FDFC  6F16               	movwf	22,b	;volatile
  9420                           
  9421                           ; BSR set to: 61
  9422                           ;eadog.c: 53:  SPI1BAUD = 0x04;
  9423  01FDFE  0E04               	movlw	4
  9424  01FE00  6F19               	movwf	25,b	;volatile
  9425                           
  9426                           ; BSR set to: 61
  9427                           ;eadog.c: 55:  SPI1CLK = 0x02;
  9428  01FE02  0E02               	movlw	2
  9429  01FE04  6F1C               	movwf	28,b	;volatile
  9430                           
  9431                           ; BSR set to: 61
  9432                           ;eadog.c: 57:  SPI1CON0 = 0x83;
  9433  01FE06  0E83               	movlw	131
  9434  01FE08  6F14               	movwf	20,b	;volatile
  9435                           
  9436                           ; BSR set to: 61
  9437                           ;eadog.c: 58:  SPI1CON0bits.EN = 1;
  9438  01FE0A  8F14               	bsf	20,7,b	;volatile
  9439                           
  9440                           ; BSR set to: 61
  9441                           ;eadog.c: 60:  wdtdelay(350000);
  9442  01FE0C  0E30               	movlw	48
  9443  01FE0E  6EE6               	movwf	postinc1,c
  9444  01FE10  0E57               	movlw	87
  9445  01FE12  6EE6               	movwf	postinc1,c
  9446  01FE14  0E05               	movlw	5
  9447  01FE16  6EE6               	movwf	postinc1,c
  9448  01FE18  0E00               	movlw	0
  9449  01FE1A  6EE6               	movwf	postinc1,c
  9450  01FE1C  EC81  F00B         	call	_wdtdelay	;wreg free
  9451                           
  9452                           ; BSR set to: 0
  9453                           ;eadog.c: 61:  send_lcd_cmd_long(0x46);
  9454  01FE20  0E46               	movlw	70
  9455  01FE22  6EE6               	movwf	postinc1,c
  9456  01FE24  ECE2  F00D         	call	_send_lcd_cmd_long	;wreg free
  9457                           
  9458                           ; BSR set to: 0
  9459                           ;eadog.c: 62:  send_lcd_cmd(0x41);
  9460  01FE28  0E41               	movlw	65
  9461  01FE2A  6EE6               	movwf	postinc1,c
  9462  01FE2C  EC02  F00E         	call	_send_lcd_cmd	;wreg free
  9463                           
  9464                           ; BSR set to: 0
  9465                           ;eadog.c: 63:  wdtdelay(80);
  9466  01FE30  0E50               	movlw	80
  9467  01FE32  6EE6               	movwf	postinc1,c
  9468  01FE34  0E00               	movlw	0
  9469  01FE36  6EE6               	movwf	postinc1,c
  9470  01FE38  0E00               	movlw	0
  9471  01FE3A  6EE6               	movwf	postinc1,c
  9472  01FE3C  0E00               	movlw	0
  9473  01FE3E  6EE6               	movwf	postinc1,c
  9474  01FE40  EC81  F00B         	call	_wdtdelay	;wreg free
  9475                           
  9476                           ; BSR set to: 0
  9477                           ;eadog.c: 64:  send_lcd_cmd(0x53);
  9478  01FE44  0E53               	movlw	83
  9479  01FE46  6EE6               	movwf	postinc1,c
  9480  01FE48  EC02  F00E         	call	_send_lcd_cmd	;wreg free
  9481                           
  9482                           ; BSR set to: 0
  9483                           ;eadog.c: 65:  send_lcd_data(2);
  9484  01FE4C  0E02               	movlw	2
  9485  01FE4E  6EE6               	movwf	postinc1,c
  9486  01FE50  ECC6  F011         	call	_send_lcd_data	;wreg free
  9487                           
  9488                           ; BSR set to: 0
  9489                           ;eadog.c: 66:  wdtdelay(80);
  9490  01FE54  0E50               	movlw	80
  9491  01FE56  6EE6               	movwf	postinc1,c
  9492  01FE58  0E00               	movlw	0
  9493  01FE5A  6EE6               	movwf	postinc1,c
  9494  01FE5C  0E00               	movlw	0
  9495  01FE5E  6EE6               	movwf	postinc1,c
  9496  01FE60  0E00               	movlw	0
  9497  01FE62  6EE6               	movwf	postinc1,c
  9498  01FE64  EC81  F00B         	call	_wdtdelay	;wreg free
  9499                           
  9500                           ; BSR set to: 0
  9501                           ;eadog.c: 67:  send_lcd_cmd_long(0x51);
  9502  01FE68  0E51               	movlw	81
  9503  01FE6A  6EE6               	movwf	postinc1,c
  9504  01FE6C  ECE2  F00D         	call	_send_lcd_cmd_long	;wreg free
  9505                           
  9506                           ; BSR set to: 0
  9507                           ;eadog.c: 68:  SPI1CON0bits.EN = 0;
  9508  01FE70  013D               	movlb	61	; () banked
  9509  01FE72  9F14               	bcf	20,7,b	;volatile
  9510                           
  9511                           ; BSR set to: 61
  9512                           ;eadog.c: 69:  SPI1CON2 = 0x02;
  9513  01FE74  0E02               	movlw	2
  9514  01FE76  6F16               	movwf	22,b	;volatile
  9515                           
  9516                           ; BSR set to: 61
  9517                           ;eadog.c: 70:  SPI1CON0bits.EN = 1;
  9518  01FE78  8F14               	bsf	20,7,b	;volatile
  9519                           
  9520                           ; BSR set to: 61
  9521                           ;eadog.c: 89:  SPI1INTFbits.SPI1TXUIF = 0;
  9522  01FE7A  931A               	bcf	26,1,b	;volatile
  9523                           
  9524                           ; BSR set to: 61
  9525                           ;eadog.c: 90:  DMA1CON1bits.DMODE = 0;
  9526  01FE7C  0E3F               	movlw	-193
  9527  01FE7E  013B               	movlb	59	; () banked
  9528  01FE80  17FD               	andwf	253,f,b	;volatile
  9529                           
  9530                           ; BSR set to: 59
  9531                           ;eadog.c: 91:  DMA1CON1bits.DSTP = 0;
  9532  01FE82  9BFD               	bcf	253,5,b	;volatile
  9533                           
  9534                           ; BSR set to: 59
  9535                           ;eadog.c: 92:  DMA1CON1bits.SMODE = 1;
  9536  01FE84  51FD               	movf	253,w,b	;volatile
  9537  01FE86  0BF9               	andlw	-7
  9538  01FE88  0902               	iorlw	2
  9539  01FE8A  6FFD               	movwf	253,b	;volatile
  9540                           
  9541                           ; BSR set to: 59
  9542                           ;eadog.c: 93:  DMA1CON1bits.SMR = 0;
  9543  01FE8C  0EE7               	movlw	-25
  9544  01FE8E  17FD               	andwf	253,f,b	;volatile
  9545                           
  9546                           ; BSR set to: 59
  9547                           ;eadog.c: 94:  DMA1CON1bits.SSTP = 1;
  9548  01FE90  81FD               	bsf	253,0,b	;volatile
  9549                           
  9550                           ; BSR set to: 59
  9551                           ;eadog.c: 95:  DMA1SSA = (uint32_t) & ring_buf1;
  9552  01FE92  0E43               	movlw	low _ring_buf1
  9553  01FE94  6FF9               	movwf	249,b	;volatile
  9554  01FE96  0E05               	movlw	high _ring_buf1
  9555  01FE98  6FFA               	movwf	250,b	;volatile
  9556  01FE9A  0E00               	movlw	low (_ring_buf1 shr (0+16))
  9557  01FE9C  6FFB               	movwf	251,b	;volatile
  9558                           
  9559                           ; BSR set to: 59
  9560                           ;eadog.c: 96:  DMA1CON0bits.DGO = 0;
  9561  01FE9E  9BFC               	bcf	252,5,b	;volatile
  9562                           
  9563                           ; BSR set to: 59
  9564                           ;eadog.c: 97:  SPI1INTFbits.SPI1TXUIF = 1;
  9565  01FEA0  013D               	movlb	61	; () banked
  9566  01FEA2  831A               	bsf	26,1,b	;volatile
  9567                           
  9568                           ; BSR set to: 61
  9569                           ;eadog.c: 98:  LATEbits.LATE2 = 0;
  9570  01FEA4  94BE               	bcf	190,2,c	;volatile
  9571                           
  9572                           ; BSR set to: 61
  9573                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  9574  01FEA6  0012               	return		;funcret
  9575  01FEA8                     __end_of_init_display:
  9576                           	opt callstack 0
  9577                           
  9578 ;; *************** function _send_lcd_data *****************
  9579 ;; Defined at:
  9580 ;;		line 123 in file "eadog.c"
  9581 ;; Parameters:    Size  Location     Type
  9582 ;;  data            1  [STACK] const unsigned char 
  9583 ;; Auto vars:     Size  Location     Type
  9584 ;;		None
  9585 ;; Return value:  Size  Location     Type
  9586 ;;                  1  [STACK] void 
  9587 ;; Registers used:
  9588 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9589 ;; Tracked objects:
  9590 ;;		On entry : 3F/0
  9591 ;;		On exit  : 3F/0
  9592 ;;		Unchanged: 0/0
  9593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9598 ;;Total ram usage:        0 bytes
  9599 ;; Hardware stack levels used:    1
  9600 ;; Hardware stack levels required when called:   16
  9601 ;; This function calls:
  9602 ;;		_SPI1_Exchange8bit
  9603 ;;		_wdtdelay
  9604 ;; This function is called by:
  9605 ;;		_init_display
  9606 ;; This function uses a reentrant model
  9607 ;;
  9608                           
  9609                           	psect	text18
  9610  00238C                     __ptext18:
  9611                           	opt callstack 0
  9612  00238C                     _send_lcd_data:
  9613                           	opt callstack 13
  9614                           
  9615                           ; BSR set to: 61
  9616                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9617                           ;incstack = 0
  9618                           ;eadog.c: 123: static void send_lcd_data(const uint8_t data);eadog.c: 124: {;eadog.c: 12
      +                          5:  do { LATCbits.LATC2 = 0; } while(0);
  9619  00238C  94BC               	bcf	188,2,c	;volatile
  9620                           
  9621                           ;eadog.c: 126:  SPI1_Exchange8bit(data);
  9622                           ;stkvar	_data @ sp[(0)+-1]
  9623  00238E  0EFF               	movlw	-1
  9624  002390  50E3               	movf	plusw1,w,c
  9625  002392  6EE6               	movwf	postinc1,c
  9626  002394  EC85  F012         	call	_SPI1_Exchange8bit	;wreg free
  9627                           
  9628                           ; BSR set to: 57
  9629                           ;eadog.c: 127:  wdtdelay(8);
  9630  002398  0E08               	movlw	8
  9631  00239A  6EE6               	movwf	postinc1,c
  9632  00239C  0E00               	movlw	0
  9633  00239E  6EE6               	movwf	postinc1,c
  9634  0023A0  0E00               	movlw	0
  9635  0023A2  6EE6               	movwf	postinc1,c
  9636  0023A4  0E00               	movlw	0
  9637  0023A6  6EE6               	movwf	postinc1,c
  9638  0023A8  EC81  F00B         	call	_wdtdelay	;wreg free
  9639                           
  9640                           ; BSR set to: 0
  9641                           ; _send_lcd_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  9642  0023AC  52E5               	movf	postdec1,f,c
  9643  0023AE  0012               	return		;funcret
  9644  0023B0                     __end_of_send_lcd_data:
  9645                           	opt callstack 0
  9646                           
  9647 ;; *************** function _send_lcd_cmd_long *****************
  9648 ;; Defined at:
  9649 ;;		line 139 in file "eadog.c"
  9650 ;; Parameters:    Size  Location     Type
  9651 ;;  cmd             1  [STACK] const unsigned char 
  9652 ;; Auto vars:     Size  Location     Type
  9653 ;;		None
  9654 ;; Return value:  Size  Location     Type
  9655 ;;                  1  [STACK] void 
  9656 ;; Registers used:
  9657 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9658 ;; Tracked objects:
  9659 ;;		On entry : 3F/0
  9660 ;;		On exit  : 3F/0
  9661 ;;		Unchanged: 0/0
  9662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9667 ;;Total ram usage:        0 bytes
  9668 ;; Hardware stack levels used:    1
  9669 ;; Hardware stack levels required when called:   16
  9670 ;; This function calls:
  9671 ;;		_SPI1_Exchange8bit
  9672 ;;		_wdtdelay
  9673 ;; This function is called by:
  9674 ;;		_init_display
  9675 ;; This function uses a reentrant model
  9676 ;;
  9677                           
  9678                           	psect	text19
  9679  001BC4                     __ptext19:
  9680                           	opt callstack 0
  9681  001BC4                     _send_lcd_cmd_long:
  9682                           	opt callstack 13
  9683                           
  9684                           ; BSR set to: 0
  9685                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9686                           ;incstack = 0
  9687                           ;eadog.c: 139: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 140: {;eadog.c:
      +                           141:  do { LATCbits.LATC2 = 0; } while(0);
  9688  001BC4  94BC               	bcf	188,2,c	;volatile
  9689                           
  9690                           ;eadog.c: 142:  SPI1_Exchange8bit(0xFE);
  9691  001BC6  0EFE               	movlw	254
  9692  001BC8  6EE6               	movwf	postinc1,c
  9693  001BCA  EC85  F012         	call	_SPI1_Exchange8bit	;wreg free
  9694                           
  9695                           ; BSR set to: 57
  9696                           ;eadog.c: 143:  wdtdelay(8);
  9697  001BCE  0E08               	movlw	8
  9698  001BD0  6EE6               	movwf	postinc1,c
  9699  001BD2  0E00               	movlw	0
  9700  001BD4  6EE6               	movwf	postinc1,c
  9701  001BD6  0E00               	movlw	0
  9702  001BD8  6EE6               	movwf	postinc1,c
  9703  001BDA  0E00               	movlw	0
  9704  001BDC  6EE6               	movwf	postinc1,c
  9705  001BDE  EC81  F00B         	call	_wdtdelay	;wreg free
  9706                           
  9707                           ; BSR set to: 0
  9708                           ;eadog.c: 144:  SPI1_Exchange8bit(cmd);
  9709                           ;stkvar	_cmd @ sp[(0)+-1]
  9710  001BE2  0EFF               	movlw	-1
  9711  001BE4  50E3               	movf	plusw1,w,c
  9712  001BE6  6EE6               	movwf	postinc1,c
  9713  001BE8  EC85  F012         	call	_SPI1_Exchange8bit	;wreg free
  9714                           
  9715                           ;eadog.c: 145:  wdtdelay(800);
  9716  001BEC  0E20               	movlw	32
  9717  001BEE  6EE6               	movwf	postinc1,c
  9718  001BF0  0E03               	movlw	3
  9719  001BF2  6EE6               	movwf	postinc1,c
  9720  001BF4  0E00               	movlw	0
  9721  001BF6  6EE6               	movwf	postinc1,c
  9722  001BF8  0E00               	movlw	0
  9723  001BFA  6EE6               	movwf	postinc1,c
  9724  001BFC  EC81  F00B         	call	_wdtdelay	;wreg free
  9725                           
  9726                           ; BSR set to: 0
  9727                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  9728  001C00  52E5               	movf	postdec1,f,c
  9729  001C02  0012               	return		;funcret
  9730  001C04                     __end_of_send_lcd_cmd_long:
  9731                           	opt callstack 0
  9732                           
  9733 ;; *************** function _send_lcd_cmd *****************
  9734 ;; Defined at:
  9735 ;;		line 130 in file "eadog.c"
  9736 ;; Parameters:    Size  Location     Type
  9737 ;;  cmd             1  [STACK] const unsigned char 
  9738 ;; Auto vars:     Size  Location     Type
  9739 ;;		None
  9740 ;; Return value:  Size  Location     Type
  9741 ;;                  1  [STACK] void 
  9742 ;; Registers used:
  9743 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9744 ;; Tracked objects:
  9745 ;;		On entry : 3F/0
  9746 ;;		On exit  : 3F/0
  9747 ;;		Unchanged: 0/0
  9748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9753 ;;Total ram usage:        0 bytes
  9754 ;; Hardware stack levels used:    1
  9755 ;; Hardware stack levels required when called:   16
  9756 ;; This function calls:
  9757 ;;		_SPI1_Exchange8bit
  9758 ;;		_wdtdelay
  9759 ;; This function is called by:
  9760 ;;		_init_display
  9761 ;; This function uses a reentrant model
  9762 ;;
  9763                           
  9764                           	psect	text20
  9765  001C04                     __ptext20:
  9766                           	opt callstack 0
  9767  001C04                     _send_lcd_cmd:
  9768                           	opt callstack 13
  9769                           
  9770                           ; BSR set to: 0
  9771                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9772                           ;incstack = 0
  9773                           ;eadog.c: 130: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 131: {;eadog.c: 132:
      +                            do { LATCbits.LATC2 = 0; } while(0);
  9774  001C04  94BC               	bcf	188,2,c	;volatile
  9775                           
  9776                           ;eadog.c: 133:  SPI1_Exchange8bit(0xFE);
  9777  001C06  0EFE               	movlw	254
  9778  001C08  6EE6               	movwf	postinc1,c
  9779  001C0A  EC85  F012         	call	_SPI1_Exchange8bit	;wreg free
  9780                           
  9781                           ; BSR set to: 57
  9782                           ;eadog.c: 134:  wdtdelay(8);
  9783  001C0E  0E08               	movlw	8
  9784  001C10  6EE6               	movwf	postinc1,c
  9785  001C12  0E00               	movlw	0
  9786  001C14  6EE6               	movwf	postinc1,c
  9787  001C16  0E00               	movlw	0
  9788  001C18  6EE6               	movwf	postinc1,c
  9789  001C1A  0E00               	movlw	0
  9790  001C1C  6EE6               	movwf	postinc1,c
  9791  001C1E  EC81  F00B         	call	_wdtdelay	;wreg free
  9792                           
  9793                           ; BSR set to: 0
  9794                           ;eadog.c: 135:  SPI1_Exchange8bit(cmd);
  9795                           ;stkvar	_cmd @ sp[(0)+-1]
  9796  001C22  0EFF               	movlw	-1
  9797  001C24  50E3               	movf	plusw1,w,c
  9798  001C26  6EE6               	movwf	postinc1,c
  9799  001C28  EC85  F012         	call	_SPI1_Exchange8bit	;wreg free
  9800                           
  9801                           ;eadog.c: 136:  wdtdelay(8);
  9802  001C2C  0E08               	movlw	8
  9803  001C2E  6EE6               	movwf	postinc1,c
  9804  001C30  0E00               	movlw	0
  9805  001C32  6EE6               	movwf	postinc1,c
  9806  001C34  0E00               	movlw	0
  9807  001C36  6EE6               	movwf	postinc1,c
  9808  001C38  0E00               	movlw	0
  9809  001C3A  6EE6               	movwf	postinc1,c
  9810  001C3C  EC81  F00B         	call	_wdtdelay	;wreg free
  9811                           
  9812                           ; BSR set to: 0
  9813                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  9814  001C40  52E5               	movf	postdec1,f,c
  9815  001C42  0012               	return		;funcret
  9816  001C44                     __end_of_send_lcd_cmd:
  9817                           	opt callstack 0
  9818                           
  9819 ;; *************** function _wdtdelay *****************
  9820 ;; Defined at:
  9821 ;;		line 23 in file "eadog.c"
  9822 ;; Parameters:    Size  Location     Type
  9823 ;;  delay           4  [STACK] const unsigned long 
  9824 ;; Auto vars:     Size  Location     Type
  9825 ;;		None
  9826 ;; Return value:  Size  Location     Type
  9827 ;;                  1  [STACK] void 
  9828 ;; Registers used:
  9829 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9830 ;; Tracked objects:
  9831 ;;		On entry : 2/3D
  9832 ;;		On exit  : 3F/0
  9833 ;;		Unchanged: 0/0
  9834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9839 ;;Total ram usage:        0 bytes
  9840 ;; Hardware stack levels used:    1
  9841 ;; Hardware stack levels required when called:   15
  9842 ;; This function calls:
  9843 ;;		Nothing
  9844 ;; This function is called by:
  9845 ;;		_init_display
  9846 ;;		_send_lcd_data
  9847 ;;		_send_lcd_cmd
  9848 ;;		_send_lcd_cmd_long
  9849 ;; This function uses a reentrant model
  9850 ;;
  9851                           
  9852                           	psect	text21
  9853  001702                     __ptext21:
  9854                           	opt callstack 0
  9855  001702                     _wdtdelay:
  9856                           	opt callstack 14
  9857                           
  9858                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
  9859                           
  9860                           ; BSR set to: 0
  9861                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9862                           ;incstack = 0
  9863  001702  0100               	movlb	0	; () banked
  9864  001704  6B90               	clrf	wdtdelay@dcount& (0+255),b
  9865  001706  6B91               	clrf	(wdtdelay@dcount+1)& (0+255),b
  9866  001708  6B92               	clrf	(wdtdelay@dcount+2)& (0+255),b
  9867  00170A  6B93               	clrf	(wdtdelay@dcount+3)& (0+255),b
  9868  00170C                     l1614:
  9869                           
  9870                           ; BSR set to: 0
  9871                           ;eadog.c: 28:   __nop();
  9872  00170C  F000               	nop	
  9873  00170E  0004               	clrwdt		;# 
  9874                           
  9875                           ;eadog.c: 30:  };
  9876  001710  0E01               	movlw	1
  9877  001712  0100               	movlb	0	; () banked
  9878  001714  2790               	addwf	wdtdelay@dcount& (0+255),f,b
  9879  001716  0E00               	movlw	0
  9880  001718  2391               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  9881  00171A  2392               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  9882  00171C  2393               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  9883                           
  9884                           ; BSR set to: 0
  9885                           ;stkvar	_delay @ sp[(0)+-4]
  9886  00171E  0EFC               	movlw	-4
  9887  001720  006F FF8C  F02A    	movff	plusw1,btemp
  9888  001726  5190               	movf	wdtdelay@dcount& (0+255),w,b
  9889  001728  5C2A               	subwf	btemp^0,w,c
  9890  00172A  0EFD               	movlw	-3
  9891  00172C  006F FF8C  F02A    	movff	plusw1,btemp
  9892  001732  5191               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  9893  001734  582A               	subwfb	btemp^0,w,c
  9894  001736  0EFE               	movlw	-2
  9895  001738  006F FF8C  F02A    	movff	plusw1,btemp
  9896  00173E  5192               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  9897  001740  582A               	subwfb	btemp^0,w,c
  9898  001742  0EFF               	movlw	-1
  9899  001744  006F FF8C  F02A    	movff	plusw1,btemp
  9900  00174A  5193               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  9901  00174C  582A               	subwfb	btemp^0,w,c
  9902  00174E  B0D8               	btfsc	status,0,c
  9903  001750  D7DD               	goto	l1614
  9904                           
  9905                           ; BSR set to: 0
  9906                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  9907  001752  52E5               	movf	postdec1,f,c
  9908  001754  52E5               	movf	postdec1,f,c
  9909  001756  52E5               	movf	postdec1,f,c
  9910  001758  52E5               	movf	postdec1,f,c
  9911  00175A  0012               	return		;funcret
  9912  00175C                     __end_of_wdtdelay:
  9913                           	opt callstack 0
  9914                           
  9915 ;; *************** function _SPI1_Exchange8bit *****************
  9916 ;; Defined at:
  9917 ;;		line 79 in file "mcc_generated_files/spi1.c"
  9918 ;; Parameters:    Size  Location     Type
  9919 ;;  data            1  [STACK] unsigned char 
  9920 ;; Auto vars:     Size  Location     Type
  9921 ;;		None
  9922 ;; Return value:  Size  Location     Type
  9923 ;;                  1  [STACK] unsigned char 
  9924 ;; Registers used:
  9925 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  9926 ;; Tracked objects:
  9927 ;;		On entry : 0/1
  9928 ;;		On exit  : 3F/39
  9929 ;;		Unchanged: 0/0
  9930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9935 ;;Total ram usage:        0 bytes
  9936 ;; Hardware stack levels used:    1
  9937 ;; Hardware stack levels required when called:   15
  9938 ;; This function calls:
  9939 ;;		Nothing
  9940 ;; This function is called by:
  9941 ;;		_send_lcd_data
  9942 ;;		_send_lcd_cmd
  9943 ;;		_send_lcd_cmd_long
  9944 ;;		_set_dac
  9945 ;; This function uses a reentrant model
  9946 ;;
  9947                           
  9948                           	psect	text22
  9949  00250A                     __ptext22:
  9950                           	opt callstack 0
  9951  00250A                     _SPI1_Exchange8bit:
  9952                           	opt callstack 14
  9953                           
  9954                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  9955                           
  9956                           ; BSR set to: 0
  9957                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9958                           ;incstack = 0
  9959  00250A  0E01               	movlw	1
  9960  00250C  013D               	movlb	61	; () banked
  9961  00250E  6F12               	movwf	18,b	;volatile
  9962                           
  9963                           ; BSR set to: 61
  9964                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  9965                           ;stkvar	_data @ sp[(0)+-1]
  9966  002510  0EFF               	movlw	-1
  9967  002512  006F FF8F FD11     	movff	plusw1,15633	;volatile
  9968  002518                     l809:
  9969                           
  9970                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  9971  002518  0139               	movlb	57	; () banked
  9972  00251A  A9A2               	btfss	162,4,b	;volatile
  9973  00251C  D7FD               	goto	l809
  9974                           
  9975                           ; BSR set to: 57
  9976                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  9977  00251E  006F F440  F02A    	movff	15632,btemp	;volatile
  9978                           
  9979                           ; BSR set to: 57
  9980                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  9981  002524  52E5               	movf	postdec1,f,c
  9982  002526  0012               	return		;funcret
  9983  002528                     __end_of_SPI1_Exchange8bit:
  9984                           	opt callstack 0
  9985                           
  9986 ;; *************** function _ringBufS_init *****************
  9987 ;; Defined at:
  9988 ;;		line 22 in file "ringbufs.c"
  9989 ;; Parameters:    Size  Location     Type
  9990 ;;  _this           2  [STACK] PTR volatile struct ring
  9991 ;;		 -> ring_buf2(67), ring_buf1(67), 
  9992 ;; Auto vars:     Size  Location     Type
  9993 ;;		None
  9994 ;; Return value:  Size  Location     Type
  9995 ;;                  1  [STACK] void 
  9996 ;; Registers used:
  9997 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9998 ;; Tracked objects:
  9999 ;;		On entry : 0/0
 10000 ;;		On exit  : 0/0
 10001 ;;		Unchanged: 0/0
 10002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10007 ;;Total ram usage:        0 bytes
 10008 ;; Hardware stack levels used:    1
 10009 ;; Hardware stack levels required when called:   16
 10010 ;; This function calls:
 10011 ;;		_memset
 10012 ;; This function is called by:
 10013 ;;		_init_display
 10014 ;; This function uses a reentrant model
 10015 ;;
 10016                           
 10017                           	psect	text23
 10018  002132                     __ptext23:
 10019                           	opt callstack 0
 10020  002132                     _ringBufS_init:
 10021                           	opt callstack 13
 10022                           
 10023                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
 10024                           
 10025                           ; BSR set to: 57
 10026                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10027                           ;incstack = 0
 10028  002132  0E43               	movlw	67
 10029  002134  6EE6               	movwf	postinc1,c
 10030  002136  0E00               	movlw	0
 10031  002138  6EE6               	movwf	postinc1,c
 10032  00213A  0E00               	movlw	0
 10033  00213C  6EE6               	movwf	postinc1,c
 10034  00213E  0E00               	movlw	0
 10035  002140  6EE6               	movwf	postinc1,c
 10036                           
 10037                           ;stkvar	__this @ sp[(-4)+-2]
 10038  002142  0EFA               	movlw	-6
 10039  002144  006F FF8F FFE6     	movff	plusw1,postinc1
 10040  00214A  006F FF8F FFE6     	movff	plusw1,postinc1
 10041  002150  EC36  F0D6         	call	_memset	;wreg free
 10042                           
 10043                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 10044  002154  52E5               	movf	postdec1,f,c
 10045  002156  52E5               	movf	postdec1,f,c
 10046  002158  0012               	return		;funcret
 10047  00215A                     __end_of_ringBufS_init:
 10048                           	opt callstack 0
 10049                           
 10050 ;; *************** function _init_bsoc *****************
 10051 ;; Defined at:
 10052 ;;		line 110 in file "bsoc.c"
 10053 ;; Parameters:    Size  Location     Type
 10054 ;;		None
 10055 ;; Auto vars:     Size  Location     Type
 10056 ;;		None
 10057 ;; Return value:  Size  Location     Type
 10058 ;;                  1  [STACK] void 
 10059 ;; Registers used:
 10060 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 10061 ;; Tracked objects:
 10062 ;;		On entry : 0/1
 10063 ;;		On exit  : 0/0
 10064 ;;		Unchanged: 0/0
 10065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10070 ;;Total ram usage:        0 bytes
 10071 ;; Hardware stack levels used:    1
 10072 ;; Hardware stack levels required when called:   18
 10073 ;; This function calls:
 10074 ;;		_TMR3_SetInterruptHandler
 10075 ;;		_Volts_to_SOC
 10076 ;;		___fldiv
 10077 ;;		___flmul
 10078 ;;		___fltol
 10079 ;;		___xxtofl
 10080 ;;		_conv_raw_result
 10081 ;; This function is called by:
 10082 ;;		_main
 10083 ;; This function uses a reentrant model
 10084 ;;
 10085                           
 10086                           	psect	text24
 10087  01C416                     __ptext24:
 10088                           	opt callstack 0
 10089  01C416                     _init_bsoc:
 10090                           	opt callstack 12
 10091                           
 10092                           ;bsoc.c: 115:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
 10093                           
 10094                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10095                           ;incstack = 0
 10096  01C416  0E00               	movlw	0
 10097  01C418  6EE6               	movwf	postinc1,c
 10098  01C41A  0E00               	movlw	0
 10099  01C41C  6EE6               	movwf	postinc1,c
 10100  01C41E  0E7A               	movlw	122
 10101  01C420  6EE6               	movwf	postinc1,c
 10102  01C422  0E44               	movlw	68
 10103  01C424  6EE6               	movwf	postinc1,c
 10104  01C426  0E00               	movlw	0
 10105  01C428  6EE6               	movwf	postinc1,c
 10106  01C42A  0E04               	movlw	4
 10107  01C42C  6EE6               	movwf	postinc1,c
 10108  01C42E  EC26  F0C3         	call	_conv_raw_result	;wreg free
 10109  01C432  0060  F0AB  FFE6   	movff	btemp,postinc1
 10110  01C438  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10111  01C43E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10112  01C444  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10113  01C44A  ECDD  F0F1         	call	___fltol	;wreg free
 10114  01C44E  0060  F0AB  FFE6   	movff	btemp,postinc1
 10115  01C454  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10116  01C45A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10117  01C460  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10118  01C466  0E00               	movlw	0
 10119  01C468  6EE6               	movwf	postinc1,c
 10120  01C46A  ECAF  F0E9         	call	___xxtofl	;wreg free
 10121  01C46E  0060  F0AB  FFE6   	movff	btemp,postinc1
 10122  01C474  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10123  01C47A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10124  01C480  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10125  01C486  EC8D  F0B2         	call	___flmul	;wreg free
 10126  01C48A  0060  F0AB  FFE6   	movff	btemp,postinc1
 10127  01C490  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10128  01C496  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10129  01C49C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10130  01C4A2  ECDD  F0F1         	call	___fltol	;wreg free
 10131  01C4A6  0060  F0AB  FFE6   	movff	btemp,postinc1
 10132  01C4AC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10133  01C4B2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10134  01C4B8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10135  01C4BE  ECEC  F001         	call	_Volts_to_SOC	;wreg free
 10136  01C4C2  0060  F0A8  F9B5   	movff	btemp,_C+182	;volatile
 10137  01C4C8  0060  F0AC  F9B6   	movff	btemp+1,_C+183	;volatile
 10138                           
 10139                           ;bsoc.c: 116:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
 10140  01C4CE  EE22  F18B         	lfsr	2,_C+140	;volatile
 10141  01C4D2  006F FF7B FFE6     	movff	postinc2,postinc1
 10142  01C4D8  006F FF7B FFE6     	movff	postinc2,postinc1
 10143  01C4DE  006F FF7B FFE6     	movff	postinc2,postinc1
 10144  01C4E4  006F FF7B FFE6     	movff	postinc2,postinc1
 10145  01C4EA  0E00               	movlw	0
 10146  01C4EC  6EE6               	movwf	postinc1,c
 10147  01C4EE  0E00               	movlw	0
 10148  01C4F0  6EE6               	movwf	postinc1,c
 10149  01C4F2  0EC8               	movlw	200
 10150  01C4F4  6EE6               	movwf	postinc1,c
 10151  01C4F6  0E42               	movlw	66
 10152  01C4F8  6EE6               	movwf	postinc1,c
 10153  01C4FA  0E00               	movlw	0
 10154  01C4FC  6EE6               	movwf	postinc1,c
 10155  01C4FE  0E00               	movlw	0
 10156  01C500  6EE6               	movwf	postinc1,c
 10157  01C502  0E7A               	movlw	122
 10158  01C504  6EE6               	movwf	postinc1,c
 10159  01C506  0E44               	movlw	68
 10160  01C508  6EE6               	movwf	postinc1,c
 10161  01C50A  0E00               	movlw	0
 10162  01C50C  6EE6               	movwf	postinc1,c
 10163  01C50E  0E04               	movlw	4
 10164  01C510  6EE6               	movwf	postinc1,c
 10165  01C512  EC26  F0C3         	call	_conv_raw_result	;wreg free
 10166  01C516  0060  F0AB  FFE6   	movff	btemp,postinc1
 10167  01C51C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10168  01C522  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10169  01C528  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10170  01C52E  ECDD  F0F1         	call	___fltol	;wreg free
 10171  01C532  0060  F0AB  FFE6   	movff	btemp,postinc1
 10172  01C538  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10173  01C53E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10174  01C544  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10175  01C54A  0E00               	movlw	0
 10176  01C54C  6EE6               	movwf	postinc1,c
 10177  01C54E  ECAF  F0E9         	call	___xxtofl	;wreg free
 10178  01C552  0060  F0AB  FFE6   	movff	btemp,postinc1
 10179  01C558  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10180  01C55E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10181  01C564  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10182  01C56A  EC8D  F0B2         	call	___flmul	;wreg free
 10183  01C56E  0060  F0AB  FFE6   	movff	btemp,postinc1
 10184  01C574  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10185  01C57A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10186  01C580  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10187  01C586  ECDD  F0F1         	call	___fltol	;wreg free
 10188  01C58A  0060  F0AB  FFE6   	movff	btemp,postinc1
 10189  01C590  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10190  01C596  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10191  01C59C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10192  01C5A2  ECEC  F001         	call	_Volts_to_SOC	;wreg free
 10193  01C5A6  0060  F0A8  F034   	movff	btemp,btemp+10
 10194  01C5AC  0060  F0AC  F035   	movff	btemp+1,btemp+11
 10195  01C5B2  5034               	movf	(btemp+10)^0,w,c
 10196  01C5B4  6E2E               	movwf	(btemp+4)^0,c
 10197  01C5B6  5035               	movf	(btemp+11)^0,w,c
 10198  01C5B8  6E2F               	movwf	(btemp+5)^0,c
 10199  01C5BA  6A30               	clrf	(btemp+6)^0,c
 10200  01C5BC  6A31               	clrf	(btemp+7)^0,c
 10201  01C5BE  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 10202  01C5C4  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 10203  01C5CA  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 10204  01C5D0  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 10205  01C5D6  0E00               	movlw	0
 10206  01C5D8  6EE6               	movwf	postinc1,c
 10207  01C5DA  ECAF  F0E9         	call	___xxtofl	;wreg free
 10208  01C5DE  0060  F0AB  FFE6   	movff	btemp,postinc1
 10209  01C5E4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10210  01C5EA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10211  01C5F0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10212  01C5F6  ECDE  F0BD         	call	___fldiv	;wreg free
 10213  01C5FA  0060  F0AB  FFE6   	movff	btemp,postinc1
 10214  01C600  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10215  01C606  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10216  01C60C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10217  01C612  EC8D  F0B2         	call	___flmul	;wreg free
 10218  01C616  0060  F0A8  F98F   	movff	btemp,_C+144	;volatile
 10219  01C61C  0060  F0AC  F990   	movff	btemp+1,_C+145	;volatile
 10220  01C622  0060  F0B0  F991   	movff	btemp+2,_C+146	;volatile
 10221  01C628  0060  F0B4  F992   	movff	btemp+3,_C+147	;volatile
 10222                           
 10223                           ;bsoc.c: 117:  C.dynamic_ah_adj = C.dynamic_ah;
 10224  01C62E  EE22  F18F         	lfsr	2,_C+144	;volatile
 10225  01C632  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
 10226  01C638  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
 10227  01C63E  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
 10228  01C644  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
 10229                           
 10230                           ;bsoc.c: 118:  TMR3_SetInterruptHandler(calc_bsoc);
 10231  01C64A  0E98               	movlw	low _calc_bsoc
 10232  01C64C  6EE6               	movwf	postinc1,c
 10233  01C64E  0E48               	movlw	high _calc_bsoc
 10234  01C650  6EE6               	movwf	postinc1,c
 10235  01C652  0E01               	movlw	low (_calc_bsoc shr (0+16))
 10236  01C654  6EE6               	movwf	postinc1,c
 10237  01C656  EC25  F011         	call	_TMR3_SetInterruptHandler	;wreg free
 10238                           
 10239                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 10240  01C65A  0012               	return		;funcret
 10241  01C65C                     __end_of_init_bsoc:
 10242                           	opt callstack 0
 10243                           
 10244 ;; *************** function _Volts_to_SOC *****************
 10245 ;; Defined at:
 10246 ;;		line 175 in file "bsoc.c"
 10247 ;; Parameters:    Size  Location     Type
 10248 ;;  cvoltage        4  [STACK] const unsigned long 
 10249 ;; Auto vars:     Size  Location     Type
 10250 ;;  soc             2  [STACK] unsigned short 
 10251 ;;  slot            1  [STACK] unsigned char 
 10252 ;; Return value:  Size  Location     Type
 10253 ;;                  2  [STACK] unsigned short 
 10254 ;; Registers used:
 10255 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 10256 ;; Tracked objects:
 10257 ;;		On entry : 0/1
 10258 ;;		On exit  : 0/0
 10259 ;;		Unchanged: 0/0
 10260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10265 ;;Total ram usage:        0 bytes
 10266 ;; Hardware stack levels used:    1
 10267 ;; Hardware stack levels required when called:   15
 10268 ;; This function calls:
 10269 ;;		Nothing
 10270 ;; This function is called by:
 10271 ;;		_init_bsoc
 10272 ;; This function uses a reentrant model
 10273 ;;
 10274                           
 10275                           	psect	text25
 10276  0003D8                     __ptext25:
 10277                           	opt callstack 0
 10278  0003D8                     _Volts_to_SOC:
 10279                           	opt callstack 0
 10280                           
 10281                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10282  0003D8  52E6               	movf	postinc1,f,c
 10283  0003DA  52E6               	movf	postinc1,f,c
 10284  0003DC  52E6               	movf	postinc1,f,c
 10285                           
 10286                           ;bsoc.c: 175: uint16_t Volts_to_SOC(const uint32_t cvoltage);bsoc.c: 176: {;bsoc.c: 177:
      +                            uint8_t slot;;bsoc.c: 178:  uint16_t soc = 0;
 10287                           ;stkvar	_soc @ sp[(-3)+0]
 10288                           
 10289                           ;incstack = 0
 10290  0003DE  0EFD               	movlw	-3
 10291  0003E0  6AE3               	clrf	plusw1,c
 10292  0003E2  0EFE               	movlw	-2
 10293  0003E4  6AE3               	clrf	plusw1,c
 10294                           
 10295                           ;bsoc.c: 183:  for (slot = 0; slot < 26; slot++) {
 10296                           ;stkvar	_slot @ sp[(-3)+2]
 10297  0003E6  0EFF               	movlw	-1
 10298  0003E8  6AE3               	clrf	plusw1,c
 10299  0003EA                     l13830:
 10300                           
 10301                           ;bsoc.c: 184:   if (cvoltage > BVSOC_TABLE[slot][0]) {
 10302                           ;stkvar	_cvoltage @ sp[(-3)+-4]
 10303                           ;stkvar	_slot @ sp[(-3)+2]
 10304  0003EA  0EFF               	movlw	-1
 10305  0003EC  50E3               	movf	plusw1,w,c
 10306  0003EE  0D08               	mullw	8
 10307  0003F0  0EAB               	movlw	low _BVSOC_TABLE
 10308  0003F2  24F3               	addwf	243,w,c
 10309  0003F4  6EF6               	movwf	tblptrl,c
 10310  0003F6  0EF7               	movlw	high _BVSOC_TABLE
 10311  0003F8  20F4               	addwfc	244,w,c
 10312  0003FA  6EF7               	movwf	tblptrh,c
 10313  0003FC                     	if	1	;There are 3 active tblptr bytes
 10314  0003FC  6AF8               	clrf	tblptru,c
 10315  0003FE  0E00               	movlw	low (__mediumconst shr (0+16))
 10316  000400  22F8               	addwfc	tblptru,f,c
 10317  000402                     	endif
 10318  000402  0EF9               	movlw	-7
 10319  000404  50E3               	movf	plusw1,w,c
 10320  000406  0009               	tblrd		*+
 10321  000408  5CF5               	subwf	tablat,w,c
 10322  00040A  0EFA               	movlw	-6
 10323  00040C  50E3               	movf	plusw1,w,c
 10324  00040E  0009               	tblrd		*+
 10325  000410  58F5               	subwfb	tablat,w,c
 10326  000412  0EFB               	movlw	-5
 10327  000414  50E3               	movf	plusw1,w,c
 10328  000416  0009               	tblrd		*+
 10329  000418  58F5               	subwfb	tablat,w,c
 10330  00041A  0EFC               	movlw	-4
 10331  00041C  50E3               	movf	plusw1,w,c
 10332  00041E  0009               	tblrd		*+
 10333  000420  58F5               	subwfb	tablat,w,c
 10334  000422  B0D8               	btfsc	status,0,c
 10335  000424  D020               	goto	l13834
 10336                           
 10337                           ;bsoc.c: 185:    soc = BVSOC_TABLE[slot][1];
 10338                           ;stkvar	_slot @ sp[(-3)+2]
 10339  000426  0EFF               	movlw	-1
 10340  000428  50E3               	movf	plusw1,w,c
 10341  00042A  0D08               	mullw	8
 10342  00042C  0E04               	movlw	4
 10343  00042E  26F3               	addwf	243,f,c
 10344  000430  0E00               	movlw	0
 10345  000432  22F4               	addwfc	244,f,c
 10346  000434  0EAB               	movlw	low _BVSOC_TABLE
 10347  000436  24F3               	addwf	243,w,c
 10348  000438  6EF6               	movwf	tblptrl,c
 10349  00043A  0EF7               	movlw	high _BVSOC_TABLE
 10350  00043C  20F4               	addwfc	244,w,c
 10351  00043E  6EF7               	movwf	tblptrh,c
 10352  000440                     	if	1	;There are 3 active tblptr bytes
 10353  000440  6AF8               	clrf	tblptru,c
 10354  000442  0E00               	movlw	low (__mediumconst shr (0+16))
 10355  000444  22F8               	addwfc	tblptru,f,c
 10356  000446                     	endif
 10357  000446  0009               	tblrd		*+
 10358  000448  006F FFD4  F034    	movff	tablat,btemp+10
 10359  00044E  0009               	tblrd		*+
 10360  000450  006F FFD4  F035    	movff	tablat,btemp+11
 10361                           
 10362                           ;stkvar	_soc @ sp[(-3)+0]
 10363  000456  0EFD               	movlw	-3
 10364  000458  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 10365  00045E  0EFE               	movlw	-2
 10366  000460  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 10367  000466                     l13834:
 10368                           
 10369                           ;bsoc.c: 187:  }
 10370                           ;stkvar	_slot @ sp[(-3)+2]
 10371  000466  0EFF               	movlw	-1
 10372  000468  2AE3               	incf	plusw1,f,c
 10373                           
 10374                           ;stkvar	_slot @ sp[(-3)+2]
 10375  00046A  0EFF               	movlw	-1
 10376  00046C  006F FF8C  F02A    	movff	plusw1,btemp
 10377  000472  0E19               	movlw	25
 10378  000474  642A               	cpfsgt	btemp^0,c
 10379  000476  D7B9               	goto	l13830
 10380                           
 10381                           ;bsoc.c: 188:  return soc;
 10382                           ;stkvar	_soc @ sp[(-3)+0]
 10383  000478  0EFD               	movlw	-3
 10384  00047A  006F FF8C  F02A    	movff	plusw1,btemp
 10385  000480  0EFE               	movlw	-2
 10386  000482  006F FF8C  F02B    	movff	plusw1,btemp+1
 10387                           
 10388                           ; _Volts_to_SOC: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
 10389  000488  0EF9               	movlw	249
 10390  00048A  26E1               	addwf	fsr1l,f,c
 10391  00048C  0EFF               	movlw	255
 10392  00048E  22E2               	addwfc	fsr1h,f,c
 10393  000490  0012               	return		;funcret
 10394  000492                     __end_of_Volts_to_SOC:
 10395                           	opt callstack 0
 10396                           
 10397 ;; *************** function _hid_display *****************
 10398 ;; Defined at:
 10399 ;;		line 22 in file "hid.c"
 10400 ;; Parameters:    Size  Location     Type
 10401 ;;  h               2  [STACK] PTR struct H_data
 10402 ;;		 -> H(9), 
 10403 ;; Auto vars:     Size  Location     Type
 10404 ;;		None
 10405 ;; Return value:  Size  Location     Type
 10406 ;;                  2  [STACK] PTR struct H_data
 10407 ;; Registers used:
 10408 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
 10409 ;; Tracked objects:
 10410 ;;		On entry : 0/39
 10411 ;;		On exit  : 0/0
 10412 ;;		Unchanged: 0/0
 10413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10418 ;;Total ram usage:        0 bytes
 10419 ;; Hardware stack levels used:    1
 10420 ;; Hardware stack levels required when called:   17
 10421 ;; This function calls:
 10422 ;;		_hid_input
 10423 ;; This function is called by:
 10424 ;;		_main
 10425 ;; This function uses a reentrant model
 10426 ;;
 10427                           
 10428                           	psect	text26
 10429  01CF30                     __ptext26:
 10430                           	opt callstack 0
 10431  01CF30                     _hid_display:
 10432                           	opt callstack 13
 10433                           
 10434                           ;hid.c: 22: H_data* hid_display(H_data* h);hid.c: 23: {;hid.c: 24:  hid_input(h);
 10435                           ;stkvar	_h @ sp[(0)+-2]
 10436                           
 10437                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10438                           ;incstack = 0
 10439  01CF30  0EFE               	movlw	-2
 10440  01CF32  006F FF8F FFE6     	movff	plusw1,postinc1
 10441  01CF38  006F FF8F FFE6     	movff	plusw1,postinc1
 10442  01CF3E  EC9C  F0F8         	call	_hid_input	;wreg free
 10443                           
 10444                           ;hid.c: 26:  switch (h->h_state) {
 10445  01CF42  D0E6               	goto	l17238
 10446  01CF44                     l17212:
 10447                           
 10448                           ;hid.c: 28:   h->h_state = H_STATE_DISPLAY;
 10449                           ;stkvar	_h @ sp[(0)+-2]
 10450  01CF44  0EFE               	movlw	-2
 10451  01CF46  006F FF8C  F034    	movff	plusw1,btemp+10
 10452  01CF4C  0EFF               	movlw	-1
 10453  01CF4E  006F FF8C  F035    	movff	plusw1,btemp+11
 10454  01CF54  0E01               	movlw	1
 10455  01CF56  2434               	addwf	(btemp+10)^0,w,c
 10456  01CF58  6ED9               	movwf	fsr2l,c
 10457  01CF5A  0E00               	movlw	0
 10458  01CF5C  2035               	addwfc	(btemp+11)^0,w,c
 10459  01CF5E  6EDA               	movwf	fsr2h,c
 10460  01CF60  0E01               	movlw	1
 10461  01CF62  6EDF               	movwf	indf2,c
 10462                           
 10463                           ;hid.c: 29:   h->hid_display = HID_MAIN;
 10464                           ;stkvar	_h @ sp[(0)+-2]
 10465  01CF64  0EFE               	movlw	-2
 10466  01CF66  006F FF8F FFD9     	movff	plusw1,fsr2l
 10467  01CF6C  0EFF               	movlw	-1
 10468  01CF6E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10469  01CF74  0E00               	movlw	0
 10470  01CF76  6EDF               	movwf	indf2,c
 10471                           
 10472                           ;hid.c: 30:   h->wait_enter = 1;
 10473                           ;stkvar	_h @ sp[(0)+-2]
 10474  01CF78  0EFE               	movlw	-2
 10475  01CF7A  006F FF8C  F034    	movff	plusw1,btemp+10
 10476  01CF80  0EFF               	movlw	-1
 10477  01CF82  006F FF8C  F035    	movff	plusw1,btemp+11
 10478  01CF88  0E04               	movlw	4
 10479  01CF8A  2434               	addwf	(btemp+10)^0,w,c
 10480  01CF8C  6ED9               	movwf	fsr2l,c
 10481  01CF8E  0E00               	movlw	0
 10482  01CF90  2035               	addwfc	(btemp+11)^0,w,c
 10483  01CF92  6EDA               	movwf	fsr2h,c
 10484  01CF94  0E01               	movlw	1
 10485  01CF96  6EDF               	movwf	indf2,c
 10486                           
 10487                           ;hid.c: 31:   h->wait_select = 1;
 10488                           ;stkvar	_h @ sp[(0)+-2]
 10489  01CF98  0EFE               	movlw	-2
 10490  01CF9A  006F FF8C  F034    	movff	plusw1,btemp+10
 10491  01CFA0  0EFF               	movlw	-1
 10492  01CFA2  006F FF8C  F035    	movff	plusw1,btemp+11
 10493  01CFA8  0E02               	movlw	2
 10494  01CFAA  2434               	addwf	(btemp+10)^0,w,c
 10495  01CFAC  6ED9               	movwf	fsr2l,c
 10496  01CFAE  0E00               	movlw	0
 10497  01CFB0  2035               	addwfc	(btemp+11)^0,w,c
 10498  01CFB2  6EDA               	movwf	fsr2h,c
 10499  01CFB4  0E01               	movlw	1
 10500  01CFB6  6EDF               	movwf	indf2,c
 10501                           
 10502                           ;hid.c: 32:   h->wait_calib = 1;
 10503                           ;stkvar	_h @ sp[(0)+-2]
 10504  01CFB8  0EFE               	movlw	-2
 10505  01CFBA  006F FF8C  F034    	movff	plusw1,btemp+10
 10506  01CFC0  0EFF               	movlw	-1
 10507  01CFC2  006F FF8C  F035    	movff	plusw1,btemp+11
 10508  01CFC8  0E06               	movlw	6
 10509  01CFCA  2434               	addwf	(btemp+10)^0,w,c
 10510  01CFCC  6ED9               	movwf	fsr2l,c
 10511  01CFCE  0E00               	movlw	0
 10512  01CFD0  2035               	addwfc	(btemp+11)^0,w,c
 10513  01CFD2  6EDA               	movwf	fsr2h,c
 10514  01CFD4  0E01               	movlw	1
 10515  01CFD6  6EDF               	movwf	indf2,c
 10516                           
 10517                           ;hid.c: 33:   h->select_p = SW_OFF;
 10518                           ;stkvar	_h @ sp[(0)+-2]
 10519  01CFD8  0EFE               	movlw	-2
 10520  01CFDA  006F FF8C  F034    	movff	plusw1,btemp+10
 10521  01CFE0  0EFF               	movlw	-1
 10522  01CFE2  006F FF8C  F035    	movff	plusw1,btemp+11
 10523  01CFE8  0E03               	movlw	3
 10524  01CFEA  2434               	addwf	(btemp+10)^0,w,c
 10525  01CFEC  6ED9               	movwf	fsr2l,c
 10526  01CFEE  0E00               	movlw	0
 10527  01CFF0  2035               	addwfc	(btemp+11)^0,w,c
 10528  01CFF2  6EDA               	movwf	fsr2h,c
 10529  01CFF4  0E00               	movlw	0
 10530  01CFF6  6EDF               	movwf	indf2,c
 10531                           
 10532                           ;hid.c: 34:   h->enter_p = SW_OFF;
 10533                           ;stkvar	_h @ sp[(0)+-2]
 10534  01CFF8  0EFE               	movlw	-2
 10535  01CFFA  006F FF8C  F034    	movff	plusw1,btemp+10
 10536  01D000  0EFF               	movlw	-1
 10537  01D002  006F FF8C  F035    	movff	plusw1,btemp+11
 10538  01D008  0E05               	movlw	5
 10539  01D00A  2434               	addwf	(btemp+10)^0,w,c
 10540  01D00C  6ED9               	movwf	fsr2l,c
 10541  01D00E  0E00               	movlw	0
 10542  01D010  2035               	addwfc	(btemp+11)^0,w,c
 10543  01D012  6EDA               	movwf	fsr2h,c
 10544  01D014  0E00               	movlw	0
 10545  01D016  6EDF               	movwf	indf2,c
 10546                           
 10547                           ;hid.c: 35:   h->calib_p = SW_OFF;
 10548                           ;stkvar	_h @ sp[(0)+-2]
 10549  01D018  0EFE               	movlw	-2
 10550  01D01A  006F FF8C  F034    	movff	plusw1,btemp+10
 10551  01D020  0EFF               	movlw	-1
 10552  01D022  006F FF8C  F035    	movff	plusw1,btemp+11
 10553  01D028  0E07               	movlw	7
 10554  01D02A  2434               	addwf	(btemp+10)^0,w,c
 10555  01D02C  6ED9               	movwf	fsr2l,c
 10556  01D02E  0E00               	movlw	0
 10557  01D030  2035               	addwfc	(btemp+11)^0,w,c
 10558  01D032  6EDA               	movwf	fsr2h,c
 10559  01D034  0E00               	movlw	0
 10560  01D036  D06A               	goto	L6
 10561  01D038                     l17228:
 10562                           
 10563                           ;hid.c: 39:   if (!h->wait_select && (h->select_p == SW_OFF)) {
 10564                           ;stkvar	_h @ sp[(0)+-2]
 10565  01D038  0EFE               	movlw	-2
 10566  01D03A  006F FF8C  F034    	movff	plusw1,btemp+10
 10567  01D040  0EFF               	movlw	-1
 10568  01D042  006F FF8C  F035    	movff	plusw1,btemp+11
 10569  01D048  0E02               	movlw	2
 10570  01D04A  2434               	addwf	(btemp+10)^0,w,c
 10571  01D04C  6ED9               	movwf	fsr2l,c
 10572  01D04E  0E00               	movlw	0
 10573  01D050  2035               	addwfc	(btemp+11)^0,w,c
 10574  01D052  6EDA               	movwf	fsr2h,c
 10575  01D054  50DF               	movf	indf2,w,c
 10576  01D056  A4D8               	btfss	status,2,c
 10577  01D058  D076               	goto	l2290
 10578                           
 10579                           ;stkvar	_h @ sp[(0)+-2]
 10580  01D05A  0EFE               	movlw	-2
 10581  01D05C  006F FF8C  F034    	movff	plusw1,btemp+10
 10582  01D062  0EFF               	movlw	-1
 10583  01D064  006F FF8C  F035    	movff	plusw1,btemp+11
 10584  01D06A  0E03               	movlw	3
 10585  01D06C  2434               	addwf	(btemp+10)^0,w,c
 10586  01D06E  6ED9               	movwf	fsr2l,c
 10587  01D070  0E00               	movlw	0
 10588  01D072  2035               	addwfc	(btemp+11)^0,w,c
 10589  01D074  6EDA               	movwf	fsr2h,c
 10590  01D076  50DF               	movf	indf2,w,c
 10591  01D078  A4D8               	btfss	status,2,c
 10592  01D07A  D065               	goto	l2290
 10593                           
 10594                           ;hid.c: 40:    h->sequence = ++h->sequence & 0x3;
 10595                           ;stkvar	_h @ sp[(0)+-2]
 10596  01D07C  0EFE               	movlw	-2
 10597  01D07E  006F FF8C  F034    	movff	plusw1,btemp+10
 10598  01D084  0EFF               	movlw	-1
 10599  01D086  006F FF8C  F035    	movff	plusw1,btemp+11
 10600  01D08C  0E08               	movlw	8
 10601  01D08E  2434               	addwf	(btemp+10)^0,w,c
 10602  01D090  6ED9               	movwf	fsr2l,c
 10603  01D092  0E00               	movlw	0
 10604  01D094  2035               	addwfc	(btemp+11)^0,w,c
 10605  01D096  6EDA               	movwf	fsr2h,c
 10606                           
 10607                           ;stkvar	_h @ sp[(0)+-2]
 10608  01D098  0EFE               	movlw	-2
 10609  01D09A  006F FF8C  F034    	movff	plusw1,btemp+10
 10610  01D0A0  0EFF               	movlw	-1
 10611  01D0A2  006F FF8C  F035    	movff	plusw1,btemp+11
 10612  01D0A8  0E08               	movlw	8
 10613  01D0AA  2434               	addwf	(btemp+10)^0,w,c
 10614  01D0AC  6EE9               	movwf	fsr0l,c
 10615  01D0AE  0E00               	movlw	0
 10616  01D0B0  2035               	addwfc	(btemp+11)^0,w,c
 10617  01D0B2  6EEA               	movwf	fsr0h,c
 10618  01D0B4  2AEF               	incf	indf0,f,c
 10619  01D0B6  50EF               	movf	indf0,w,c
 10620  01D0B8  0B03               	andlw	3
 10621  01D0BA  6EDF               	movwf	indf2,c
 10622                           
 10623                           ;hid.c: 41:    h->hid_display = h->sequence;
 10624                           ;stkvar	_h @ sp[(0)+-2]
 10625  01D0BC  0EFE               	movlw	-2
 10626  01D0BE  006F FF8C  F034    	movff	plusw1,btemp+10
 10627  01D0C4  0EFF               	movlw	-1
 10628  01D0C6  006F FF8C  F035    	movff	plusw1,btemp+11
 10629  01D0CC  0E08               	movlw	8
 10630  01D0CE  2434               	addwf	(btemp+10)^0,w,c
 10631  01D0D0  6ED9               	movwf	fsr2l,c
 10632  01D0D2  0E00               	movlw	0
 10633  01D0D4  2035               	addwfc	(btemp+11)^0,w,c
 10634  01D0D6  6EDA               	movwf	fsr2h,c
 10635                           
 10636                           ;stkvar	_h @ sp[(0)+-2]
 10637  01D0D8  0EFE               	movlw	-2
 10638  01D0DA  006F FF8F FFE9     	movff	plusw1,fsr0l
 10639  01D0E0  0EFF               	movlw	-1
 10640  01D0E2  006F FF8F FFEA     	movff	plusw1,fsr0h
 10641  01D0E8  006F FF7F FFEF     	movff	indf2,indf0
 10642                           
 10643                           ;hid.c: 42:    h->wait_select = 1;
 10644                           ;stkvar	_h @ sp[(0)+-2]
 10645  01D0EE  0EFE               	movlw	-2
 10646  01D0F0  006F FF8C  F034    	movff	plusw1,btemp+10
 10647  01D0F6  0EFF               	movlw	-1
 10648  01D0F8  006F FF8C  F035    	movff	plusw1,btemp+11
 10649  01D0FE  0E02               	movlw	2
 10650  01D100  2434               	addwf	(btemp+10)^0,w,c
 10651  01D102  6ED9               	movwf	fsr2l,c
 10652  01D104  0E00               	movlw	0
 10653  01D106  2035               	addwfc	(btemp+11)^0,w,c
 10654  01D108  6EDA               	movwf	fsr2h,c
 10655  01D10A  0E01               	movlw	1
 10656  01D10C                     L6:
 10657  01D10C  6EDF               	movwf	indf2,c
 10658  01D10E  D01B               	goto	l2290
 10659  01D110                     l17238:
 10660                           
 10661                           ;stkvar	_h @ sp[(0)+-2]
 10662  01D110  0EFE               	movlw	-2
 10663  01D112  006F FF8C  F034    	movff	plusw1,btemp+10
 10664  01D118  0EFF               	movlw	-1
 10665  01D11A  006F FF8C  F035    	movff	plusw1,btemp+11
 10666  01D120  0E01               	movlw	1
 10667  01D122  2434               	addwf	(btemp+10)^0,w,c
 10668  01D124  6ED9               	movwf	fsr2l,c
 10669  01D126  0E00               	movlw	0
 10670  01D128  2035               	addwfc	(btemp+11)^0,w,c
 10671  01D12A  6EDA               	movwf	fsr2h,c
 10672  01D12C  50DF               	movf	indf2,w,c
 10673  01D12E  6E34               	movwf	(btemp+10)^0,c
 10674  01D130  6A35               	clrf	(btemp+11)^0,c
 10675                           
 10676                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10677                           ; Switch size 1, requested type "simple"
 10678                           ; Number of cases is 1, Range of values is 0 to 0
 10679                           ; switch strategies available:
 10680                           ; Name         Instructions Cycles
 10681                           ; simple_byte            4     3 (average)
 10682                           ;	Chosen strategy is simple_byte
 10683  01D132  5035               	movf	(btemp+11)^0,w,c
 10684  01D134  0A00               	xorlw	0	; case 0
 10685  01D136  A4D8               	btfss	status,2,c
 10686  01D138  D77F               	goto	l17228
 10687                           
 10688                           ; Switch size 1, requested type "simple"
 10689                           ; Number of cases is 2, Range of values is 0 to 1
 10690                           ; switch strategies available:
 10691                           ; Name         Instructions Cycles
 10692                           ; simple_byte            7     4 (average)
 10693                           ;	Chosen strategy is simple_byte
 10694  01D13A  5034               	movf	(btemp+10)^0,w,c
 10695  01D13C  0A00               	xorlw	0	; case 0
 10696  01D13E  B4D8               	btfsc	status,2,c
 10697  01D140  D701               	goto	l17212
 10698  01D142  0A01               	xorlw	1	; case 1
 10699  01D144  D779               	goto	l17228
 10700  01D146                     l2290:
 10701                           
 10702                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, a
      +                          rgsize = 2, vargsize = 0
 10703  01D146  52E5               	movf	postdec1,f,c
 10704  01D148  52E5               	movf	postdec1,f,c
 10705  01D14A  0012               	return		;funcret
 10706  01D14C                     __end_of_hid_display:
 10707                           	opt callstack 0
 10708                           
 10709 ;; *************** function _hid_input *****************
 10710 ;; Defined at:
 10711 ;;		line 3 in file "hid.c"
 10712 ;; Parameters:    Size  Location     Type
 10713 ;;  h               2  [STACK] PTR struct H_data
 10714 ;;		 -> H(9), 
 10715 ;; Auto vars:     Size  Location     Type
 10716 ;;		None
 10717 ;; Return value:  Size  Location     Type
 10718 ;;                  2  [STACK] PTR struct H_data
 10719 ;; Registers used:
 10720 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 10721 ;; Tracked objects:
 10722 ;;		On entry : 0/39
 10723 ;;		On exit  : 0/0
 10724 ;;		Unchanged: 0/0
 10725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10730 ;;Total ram usage:        0 bytes
 10731 ;; Hardware stack levels used:    1
 10732 ;; Hardware stack levels required when called:   16
 10733 ;; This function calls:
 10734 ;;		_get_switch
 10735 ;; This function is called by:
 10736 ;;		_hid_display
 10737 ;; This function uses a reentrant model
 10738 ;;
 10739                           
 10740                           	psect	text27
 10741  01F138                     __ptext27:
 10742                           	opt callstack 0
 10743  01F138                     _hid_input:
 10744                           	opt callstack 13
 10745                           
 10746                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
 10747                           
 10748                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10749                           ;incstack = 0
 10750  01F138  0E02               	movlw	2
 10751  01F13A  6EE6               	movwf	postinc1,c
 10752  01F13C  EC42  F010         	call	_get_switch	;wreg free
 10753  01F140  502A               	movf	btemp^0,w,c
 10754  01F142  B4D8               	btfsc	status,2,c
 10755  01F144  D02C               	goto	l16974
 10756                           
 10757                           ;hid.c: 6:   h->wait_select = 0;
 10758                           ;stkvar	_h @ sp[(0)+-2]
 10759  01F146  0EFE               	movlw	-2
 10760  01F148  006F FF8C  F034    	movff	plusw1,btemp+10
 10761  01F14E  0EFF               	movlw	-1
 10762  01F150  006F FF8C  F035    	movff	plusw1,btemp+11
 10763  01F156  0E02               	movlw	2
 10764  01F158  2434               	addwf	(btemp+10)^0,w,c
 10765  01F15A  6ED9               	movwf	fsr2l,c
 10766  01F15C  0E00               	movlw	0
 10767  01F15E  2035               	addwfc	(btemp+11)^0,w,c
 10768  01F160  6EDA               	movwf	fsr2h,c
 10769  01F162  0E00               	movlw	0
 10770  01F164  6EDF               	movwf	indf2,c
 10771                           
 10772                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
 10773  01F166  0E02               	movlw	2
 10774  01F168  6EE6               	movwf	postinc1,c
 10775  01F16A  EC42  F010         	call	_get_switch	;wreg free
 10776  01F16E  502A               	movf	btemp^0,w,c
 10777  01F170  B4D8               	btfsc	status,2,c
 10778  01F172  D003               	goto	u16510
 10779  01F174  6A35               	clrf	(btemp+11)^0,c
 10780  01F176  2A35               	incf	(btemp+11)^0,f,c
 10781  01F178  D001               	goto	u16528
 10782  01F17A                     u16510:
 10783  01F17A  6A35               	clrf	(btemp+11)^0,c
 10784  01F17C                     u16528:
 10785                           
 10786                           ;stkvar	_h @ sp[(0)+-2]
 10787  01F17C  0EFE               	movlw	-2
 10788  01F17E  006F FF8C  F032    	movff	plusw1,btemp+8
 10789  01F184  0EFF               	movlw	-1
 10790  01F186  006F FF8C  F033    	movff	plusw1,btemp+9
 10791  01F18C  0E03               	movlw	3
 10792  01F18E  2432               	addwf	(btemp+8)^0,w,c
 10793  01F190  6ED9               	movwf	fsr2l,c
 10794  01F192  0E00               	movlw	0
 10795  01F194  2033               	addwfc	(btemp+9)^0,w,c
 10796  01F196  6EDA               	movwf	fsr2h,c
 10797  01F198  0060  F0D7  FFDF   	movff	btemp+11,indf2
 10798  01F19E                     l16974:
 10799                           
 10800                           ;hid.c: 10:  if (get_switch(SENTER)) {
 10801  01F19E  0E03               	movlw	3
 10802  01F1A0  6EE6               	movwf	postinc1,c
 10803  01F1A2  EC42  F010         	call	_get_switch	;wreg free
 10804  01F1A6  502A               	movf	btemp^0,w,c
 10805  01F1A8  B4D8               	btfsc	status,2,c
 10806  01F1AA  D02C               	goto	l16980
 10807                           
 10808                           ;hid.c: 11:   h->wait_enter = 0;
 10809                           ;stkvar	_h @ sp[(0)+-2]
 10810  01F1AC  0EFE               	movlw	-2
 10811  01F1AE  006F FF8C  F034    	movff	plusw1,btemp+10
 10812  01F1B4  0EFF               	movlw	-1
 10813  01F1B6  006F FF8C  F035    	movff	plusw1,btemp+11
 10814  01F1BC  0E04               	movlw	4
 10815  01F1BE  2434               	addwf	(btemp+10)^0,w,c
 10816  01F1C0  6ED9               	movwf	fsr2l,c
 10817  01F1C2  0E00               	movlw	0
 10818  01F1C4  2035               	addwfc	(btemp+11)^0,w,c
 10819  01F1C6  6EDA               	movwf	fsr2h,c
 10820  01F1C8  0E00               	movlw	0
 10821  01F1CA  6EDF               	movwf	indf2,c
 10822                           
 10823                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
 10824  01F1CC  0E03               	movlw	3
 10825  01F1CE  6EE6               	movwf	postinc1,c
 10826  01F1D0  EC42  F010         	call	_get_switch	;wreg free
 10827  01F1D4  502A               	movf	btemp^0,w,c
 10828  01F1D6  B4D8               	btfsc	status,2,c
 10829  01F1D8  D003               	goto	u16540
 10830  01F1DA  6A35               	clrf	(btemp+11)^0,c
 10831  01F1DC  2A35               	incf	(btemp+11)^0,f,c
 10832  01F1DE  D001               	goto	u16558
 10833  01F1E0                     u16540:
 10834  01F1E0  6A35               	clrf	(btemp+11)^0,c
 10835  01F1E2                     u16558:
 10836                           
 10837                           ;stkvar	_h @ sp[(0)+-2]
 10838  01F1E2  0EFE               	movlw	-2
 10839  01F1E4  006F FF8C  F032    	movff	plusw1,btemp+8
 10840  01F1EA  0EFF               	movlw	-1
 10841  01F1EC  006F FF8C  F033    	movff	plusw1,btemp+9
 10842  01F1F2  0E05               	movlw	5
 10843  01F1F4  2432               	addwf	(btemp+8)^0,w,c
 10844  01F1F6  6ED9               	movwf	fsr2l,c
 10845  01F1F8  0E00               	movlw	0
 10846  01F1FA  2033               	addwfc	(btemp+9)^0,w,c
 10847  01F1FC  6EDA               	movwf	fsr2h,c
 10848  01F1FE  0060  F0D7  FFDF   	movff	btemp+11,indf2
 10849  01F204                     l16980:
 10850                           
 10851                           ;hid.c: 15:  if (get_switch(SCALIB)) {
 10852  01F204  0E04               	movlw	4
 10853  01F206  6EE6               	movwf	postinc1,c
 10854  01F208  EC42  F010         	call	_get_switch	;wreg free
 10855  01F20C  502A               	movf	btemp^0,w,c
 10856  01F20E  B4D8               	btfsc	status,2,c
 10857  01F210  D02C               	goto	l2281
 10858                           
 10859                           ;hid.c: 16:   h->wait_calib = 0;
 10860                           ;stkvar	_h @ sp[(0)+-2]
 10861  01F212  0EFE               	movlw	-2
 10862  01F214  006F FF8C  F034    	movff	plusw1,btemp+10
 10863  01F21A  0EFF               	movlw	-1
 10864  01F21C  006F FF8C  F035    	movff	plusw1,btemp+11
 10865  01F222  0E06               	movlw	6
 10866  01F224  2434               	addwf	(btemp+10)^0,w,c
 10867  01F226  6ED9               	movwf	fsr2l,c
 10868  01F228  0E00               	movlw	0
 10869  01F22A  2035               	addwfc	(btemp+11)^0,w,c
 10870  01F22C  6EDA               	movwf	fsr2h,c
 10871  01F22E  0E00               	movlw	0
 10872  01F230  6EDF               	movwf	indf2,c
 10873                           
 10874                           ;hid.c: 17:   h->calib_p = get_switch(SCALIB);
 10875  01F232  0E04               	movlw	4
 10876  01F234  6EE6               	movwf	postinc1,c
 10877  01F236  EC42  F010         	call	_get_switch	;wreg free
 10878  01F23A  502A               	movf	btemp^0,w,c
 10879  01F23C  B4D8               	btfsc	status,2,c
 10880  01F23E  D003               	goto	u16570
 10881  01F240  6A35               	clrf	(btemp+11)^0,c
 10882  01F242  2A35               	incf	(btemp+11)^0,f,c
 10883  01F244  D001               	goto	u16588
 10884  01F246                     u16570:
 10885  01F246  6A35               	clrf	(btemp+11)^0,c
 10886  01F248                     u16588:
 10887                           
 10888                           ;stkvar	_h @ sp[(0)+-2]
 10889  01F248  0EFE               	movlw	-2
 10890  01F24A  006F FF8C  F032    	movff	plusw1,btemp+8
 10891  01F250  0EFF               	movlw	-1
 10892  01F252  006F FF8C  F033    	movff	plusw1,btemp+9
 10893  01F258  0E07               	movlw	7
 10894  01F25A  2432               	addwf	(btemp+8)^0,w,c
 10895  01F25C  6ED9               	movwf	fsr2l,c
 10896  01F25E  0E00               	movlw	0
 10897  01F260  2033               	addwfc	(btemp+9)^0,w,c
 10898  01F262  6EDA               	movwf	fsr2h,c
 10899  01F264  0060  F0D7  FFDF   	movff	btemp+11,indf2
 10900  01F26A                     l2281:
 10901                           
 10902                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
 10903  01F26A  52E5               	movf	postdec1,f,c
 10904  01F26C  52E5               	movf	postdec1,f,c
 10905  01F26E  0012               	return		;funcret
 10906  01F270                     __end_of_hid_input:
 10907                           	opt callstack 0
 10908                           
 10909 ;; *************** function _esr_check *****************
 10910 ;; Defined at:
 10911 ;;		line 197 in file "bsoc.c"
 10912 ;; Parameters:    Size  Location     Type
 10913 ;;  fsm             1  [STACK] const unsigned char 
 10914 ;; Auto vars:     Size  Location     Type
 10915 ;;		None
 10916 ;; Return value:  Size  Location     Type
 10917 ;;                  4  [STACK] float 
 10918 ;; Registers used:
 10919 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 10920 ;; Tracked objects:
 10921 ;;		On entry : 0/0
 10922 ;;		On exit  : 0/0
 10923 ;;		Unchanged: 0/0
 10924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10929 ;;Total ram usage:        0 bytes
 10930 ;; Hardware stack levels used:    1
 10931 ;; Hardware stack levels required when called:   18
 10932 ;; This function calls:
 10933 ;;		_StartTimer
 10934 ;;		_TimerDone
 10935 ;;		___fldiv
 10936 ;;		___flsub
 10937 ;;		_conv_raw_result
 10938 ;;		_fabsf
 10939 ;;		_set_load_relay_one
 10940 ;;		_set_load_relay_two
 10941 ;;		_update_adc_result
 10942 ;; This function is called by:
 10943 ;;		_main
 10944 ;; This function uses a reentrant model
 10945 ;;
 10946                           
 10947                           	psect	text28
 10948  01B232                     __ptext28:
 10949                           	opt callstack 0
 10950  01B232                     _esr_check:
 10951                           	opt callstack 12
 10952                           
 10953                           ;bsoc.c: 197: float esr_check(const uint8_t fsm);bsoc.c: 198: {;bsoc.c: 199:  static uin
      +                          t8_t esr_state = 0;;bsoc.c: 201:  if (fsm) {
 10954                           ;stkvar	_fsm @ sp[(0)+-1]
 10955                           
 10956                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10957                           ;incstack = 0
 10958  01B232  0EFF               	movlw	-1
 10959  01B234  50E3               	movf	plusw1,w,c
 10960  01B236  B4D8               	btfsc	status,2,c
 10961  01B238  D149               	goto	l14258
 10962                           
 10963                           ;bsoc.c: 202:   esr_state = 0;
 10964  01B23A  0100               	movlb	0	; () banked
 10965  01B23C  6BC6               	clrf	esr_check@esr_state& (0+255),b
 10966                           
 10967                           ; BSR set to: 0
 10968                           ;bsoc.c: 203:   return -10.0;
 10969  01B23E  0E00               	movlw	0
 10970  01B240  6E2A               	movwf	btemp^0,c
 10971  01B242  0E00               	movlw	0
 10972  01B244  6E2B               	movwf	(btemp+1)^0,c
 10973  01B246  0E20               	movlw	32
 10974  01B248  6E2C               	movwf	(btemp+2)^0,c
 10975  01B24A  0EC1               	movlw	193
 10976  01B24C  D15B               	goto	L7
 10977  01B24E                     l14190:
 10978                           
 10979                           ; BSR set to: 0
 10980                           ;bsoc.c: 208:   StartTimer(TMR_ESR, 10000);
 10981  01B24E  0E10               	movlw	16
 10982  01B250  6EE6               	movwf	postinc1,c
 10983  01B252  0E27               	movlw	39
 10984  01B254  6EE6               	movwf	postinc1,c
 10985  01B256  0E0C               	movlw	12
 10986  01B258  6EE6               	movwf	postinc1,c
 10987  01B25A  EC22  F00E         	call	_StartTimer	;wreg free
 10988  01B25E                     l14192:
 10989                           
 10990                           ;bsoc.c: 209:   esr_state++;
 10991  01B25E  0100               	movlb	0	; () banked
 10992  01B260  2BC6               	incf	esr_check@esr_state& (0+255),f,b
 10993                           
 10994                           ;bsoc.c: 210:   break;
 10995  01B262  D149               	goto	l14260
 10996  01B264                     l14194:
 10997                           
 10998                           ; BSR set to: 0
 10999                           ;bsoc.c: 215:   set_load_relay_one(0);
 11000  01B264  0E00               	movlw	0
 11001  01B266  6EE6               	movwf	postinc1,c
 11002  01B268  EC43  F013         	call	_set_load_relay_one	;wreg free
 11003                           
 11004                           ;bsoc.c: 216:   set_load_relay_two(0);
 11005  01B26C  0E00               	movlw	0
 11006  01B26E  6EE6               	movwf	postinc1,c
 11007  01B270  EC3B  F013         	call	_set_load_relay_two	;wreg free
 11008                           
 11009                           ;bsoc.c: 217:   if (TimerDone(TMR_ESR)) {
 11010  01B274  0E0C               	movlw	12
 11011  01B276  6EE6               	movwf	postinc1,c
 11012  01B278  ECAD  F010         	call	_TimerDone	;wreg free
 11013  01B27C  502A               	movf	btemp^0,w,c
 11014  01B27E  B4D8               	btfsc	status,2,c
 11015  01B280  D009               	goto	l14200
 11016                           
 11017                           ;bsoc.c: 218:    StartTimer(TMR_ESR, 10000);
 11018  01B282  0E10               	movlw	16
 11019  01B284  6EE6               	movwf	postinc1,c
 11020  01B286  0E27               	movlw	39
 11021  01B288  6EE6               	movwf	postinc1,c
 11022  01B28A  0E0C               	movlw	12
 11023  01B28C  6EE6               	movwf	postinc1,c
 11024  01B28E  EC22  F00E         	call	_StartTimer	;wreg free
 11025                           
 11026                           ;bsoc.c: 219:   } else {
 11027  01B292  D006               	goto	l14204
 11028  01B294                     l14200:
 11029                           
 11030                           ;bsoc.c: 220:    return -2.0;
 11031  01B294  0E00               	movlw	0
 11032  01B296  6E2A               	movwf	btemp^0,c
 11033  01B298  0E00               	movlw	0
 11034  01B29A  6E2B               	movwf	(btemp+1)^0,c
 11035  01B29C  0E00               	movlw	0
 11036  01B29E  D066               	goto	L9
 11037  01B2A0                     l14204:
 11038                           
 11039                           ;bsoc.c: 225:   update_adc_result();
 11040  01B2A0  ECBF  F00E         	call	_update_adc_result	;wreg free
 11041                           
 11042                           ;bsoc.c: 226:   C.bv_noload = conv_raw_result(V_BAT, CONV);
 11043  01B2A4  0E00               	movlw	0
 11044  01B2A6  6EE6               	movwf	postinc1,c
 11045  01B2A8  0E04               	movlw	4
 11046  01B2AA  6EE6               	movwf	postinc1,c
 11047  01B2AC  EC26  F0C3         	call	_conv_raw_result	;wreg free
 11048  01B2B0  0060  F0A8  FA21   	movff	btemp,_C+290	;volatile
 11049  01B2B6  0060  F0AC  FA22   	movff	btemp+1,_C+291	;volatile
 11050  01B2BC  0060  F0B0  FA23   	movff	btemp+2,_C+292	;volatile
 11051  01B2C2  0060  F0B4  FA24   	movff	btemp+3,_C+293	;volatile
 11052  01B2C8  D7CA               	goto	l14192
 11053  01B2CA                     l14210:
 11054                           
 11055                           ; BSR set to: 0
 11056                           ;bsoc.c: 230:   set_load_relay_one(1);
 11057  01B2CA  0E01               	movlw	1
 11058  01B2CC  6EE6               	movwf	postinc1,c
 11059  01B2CE  EC43  F013         	call	_set_load_relay_one	;wreg free
 11060                           
 11061                           ;bsoc.c: 231:   if (TimerDone(TMR_ESR)) {
 11062  01B2D2  0E0C               	movlw	12
 11063  01B2D4  6EE6               	movwf	postinc1,c
 11064  01B2D6  ECAD  F010         	call	_TimerDone	;wreg free
 11065  01B2DA  502A               	movf	btemp^0,w,c
 11066  01B2DC  B4D8               	btfsc	status,2,c
 11067  01B2DE  D009               	goto	l14216
 11068                           
 11069                           ;bsoc.c: 232:    StartTimer(TMR_ESR, 10000);
 11070  01B2E0  0E10               	movlw	16
 11071  01B2E2  6EE6               	movwf	postinc1,c
 11072  01B2E4  0E27               	movlw	39
 11073  01B2E6  6EE6               	movwf	postinc1,c
 11074  01B2E8  0E0C               	movlw	12
 11075  01B2EA  6EE6               	movwf	postinc1,c
 11076  01B2EC  EC22  F00E         	call	_StartTimer	;wreg free
 11077                           
 11078                           ;bsoc.c: 233:   } else {
 11079  01B2F0  D006               	goto	l14220
 11080  01B2F2                     l14216:
 11081                           
 11082                           ;bsoc.c: 234:    return -3.0;
 11083  01B2F2  0E00               	movlw	0
 11084  01B2F4  6E2A               	movwf	btemp^0,c
 11085  01B2F6  0E00               	movlw	0
 11086  01B2F8  6E2B               	movwf	(btemp+1)^0,c
 11087  01B2FA  0E40               	movlw	64
 11088  01B2FC  D037               	goto	L9
 11089  01B2FE                     l14220:
 11090                           
 11091                           ;bsoc.c: 237:   update_adc_result();
 11092  01B2FE  ECBF  F00E         	call	_update_adc_result	;wreg free
 11093                           
 11094                           ;bsoc.c: 238:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
 11095  01B302  0E00               	movlw	0
 11096  01B304  6EE6               	movwf	postinc1,c
 11097  01B306  0E04               	movlw	4
 11098  01B308  6EE6               	movwf	postinc1,c
 11099  01B30A  EC26  F0C3         	call	_conv_raw_result	;wreg free
 11100  01B30E  0060  F0A8  FA25   	movff	btemp,_C+294	;volatile
 11101  01B314  0060  F0AC  FA26   	movff	btemp+1,_C+295	;volatile
 11102  01B31A  0060  F0B0  FA27   	movff	btemp+2,_C+296	;volatile
 11103  01B320  0060  F0B4  FA28   	movff	btemp+3,_C+297	;volatile
 11104                           
 11105                           ;bsoc.c: 239:   C.load_i1 = conv_raw_result(C_BATT, CONV);
 11106  01B326  0E00               	movlw	0
 11107  01B328  6EE6               	movwf	postinc1,c
 11108  01B32A  0E00               	movlw	0
 11109  01B32C  6EE6               	movwf	postinc1,c
 11110  01B32E  EC26  F0C3         	call	_conv_raw_result	;wreg free
 11111  01B332  0060  F0A8  FA19   	movff	btemp,_C+282	;volatile
 11112  01B338  0060  F0AC  FA1A   	movff	btemp+1,_C+283	;volatile
 11113  01B33E  0060  F0B0  FA1B   	movff	btemp+2,_C+284	;volatile
 11114  01B344  0060  F0B4  FA1C   	movff	btemp+3,_C+285	;volatile
 11115  01B34A  D789               	goto	l14192
 11116  01B34C                     l14228:
 11117                           
 11118                           ; BSR set to: 0
 11119                           ;bsoc.c: 243:   set_load_relay_two(1);
 11120  01B34C  0E01               	movlw	1
 11121  01B34E  6EE6               	movwf	postinc1,c
 11122  01B350  EC3B  F013         	call	_set_load_relay_two	;wreg free
 11123                           
 11124                           ;bsoc.c: 244:   if (!TimerDone(TMR_ESR))
 11125  01B354  0E0C               	movlw	12
 11126  01B356  6EE6               	movwf	postinc1,c
 11127  01B358  ECAD  F010         	call	_TimerDone	;wreg free
 11128  01B35C  502A               	movf	btemp^0,w,c
 11129  01B35E  A4D8               	btfss	status,2,c
 11130  01B360  D008               	goto	l14236
 11131                           
 11132                           ;bsoc.c: 245:    return -4.0;
 11133  01B362  0E00               	movlw	0
 11134  01B364  6E2A               	movwf	btemp^0,c
 11135  01B366  0E00               	movlw	0
 11136  01B368  6E2B               	movwf	(btemp+1)^0,c
 11137  01B36A  0E80               	movlw	128
 11138  01B36C                     L9:
 11139  01B36C  6E2C               	movwf	(btemp+2)^0,c
 11140  01B36E  0EC0               	movlw	192
 11141  01B370  D0C9               	goto	L7
 11142  01B372                     l14236:
 11143                           
 11144                           ;bsoc.c: 247:   update_adc_result();
 11145  01B372  ECBF  F00E         	call	_update_adc_result	;wreg free
 11146                           
 11147                           ;bsoc.c: 248:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
 11148  01B376  0E00               	movlw	0
 11149  01B378  6EE6               	movwf	postinc1,c
 11150  01B37A  0E04               	movlw	4
 11151  01B37C  6EE6               	movwf	postinc1,c
 11152  01B37E  EC26  F0C3         	call	_conv_raw_result	;wreg free
 11153  01B382  0060  F0A8  FA29   	movff	btemp,_C+298	;volatile
 11154  01B388  0060  F0AC  FA2A   	movff	btemp+1,_C+299	;volatile
 11155  01B38E  0060  F0B0  FA2B   	movff	btemp+2,_C+300	;volatile
 11156  01B394  0060  F0B4  FA2C   	movff	btemp+3,_C+301	;volatile
 11157                           
 11158                           ;bsoc.c: 249:   C.load_i2 = conv_raw_result(C_BATT, CONV);
 11159  01B39A  0E00               	movlw	0
 11160  01B39C  6EE6               	movwf	postinc1,c
 11161  01B39E  0E00               	movlw	0
 11162  01B3A0  6EE6               	movwf	postinc1,c
 11163  01B3A2  EC26  F0C3         	call	_conv_raw_result	;wreg free
 11164  01B3A6  0060  F0A8  FA1D   	movff	btemp,_C+286	;volatile
 11165  01B3AC  0060  F0AC  FA1E   	movff	btemp+1,_C+287	;volatile
 11166  01B3B2  0060  F0B0  FA1F   	movff	btemp+2,_C+288	;volatile
 11167  01B3B8  0060  F0B4  FA20   	movff	btemp+3,_C+289	;volatile
 11168                           
 11169                           ;bsoc.c: 251:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
 11170  01B3BE  EE22  F21D         	lfsr	2,_C+286	;volatile
 11171  01B3C2  006F FF7B FFE6     	movff	postinc2,postinc1
 11172  01B3C8  006F FF7B FFE6     	movff	postinc2,postinc1
 11173  01B3CE  006F FF7B FFE6     	movff	postinc2,postinc1
 11174  01B3D4  006F FF7B FFE6     	movff	postinc2,postinc1
 11175  01B3DA  EE22  F219         	lfsr	2,_C+282	;volatile
 11176  01B3DE  006F FF7B FFE6     	movff	postinc2,postinc1
 11177  01B3E4  006F FF7B FFE6     	movff	postinc2,postinc1
 11178  01B3EA  006F FF7B FFE6     	movff	postinc2,postinc1
 11179  01B3F0  006F FF7B FFE6     	movff	postinc2,postinc1
 11180  01B3F6  EC7C  F00D         	call	___flsub	;wreg free
 11181  01B3FA  0060  F0AB  FFE6   	movff	btemp,postinc1
 11182  01B400  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11183  01B406  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11184  01B40C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11185  01B412  EE22  F229         	lfsr	2,_C+298	;volatile
 11186  01B416  006F FF7B FFE6     	movff	postinc2,postinc1
 11187  01B41C  006F FF7B FFE6     	movff	postinc2,postinc1
 11188  01B422  006F FF7B FFE6     	movff	postinc2,postinc1
 11189  01B428  006F FF7B FFE6     	movff	postinc2,postinc1
 11190  01B42E  EE22  F225         	lfsr	2,_C+294	;volatile
 11191  01B432  006F FF7B FFE6     	movff	postinc2,postinc1
 11192  01B438  006F FF7B FFE6     	movff	postinc2,postinc1
 11193  01B43E  006F FF7B FFE6     	movff	postinc2,postinc1
 11194  01B444  006F FF7B FFE6     	movff	postinc2,postinc1
 11195  01B44A  EC7C  F00D         	call	___flsub	;wreg free
 11196  01B44E  0060  F0AB  FFE6   	movff	btemp,postinc1
 11197  01B454  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11198  01B45A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11199  01B460  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11200  01B466  ECDE  F0BD         	call	___fldiv	;wreg free
 11201  01B46A  0060  F0AB  FFE6   	movff	btemp,postinc1
 11202  01B470  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11203  01B476  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11204  01B47C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11205  01B482  EC00  F003         	call	_fabsf	;wreg free
 11206  01B486  0060  F0A8  F987   	movff	btemp,_C+136	;volatile
 11207  01B48C  0060  F0AC  F988   	movff	btemp+1,_C+137	;volatile
 11208  01B492  0060  F0B0  F989   	movff	btemp+2,_C+138	;volatile
 11209  01B498  0060  F0B4  F98A   	movff	btemp+3,_C+139	;volatile
 11210                           
 11211                           ;bsoc.c: 252:   set_load_relay_one(0);
 11212  01B49E  0E00               	movlw	0
 11213  01B4A0  6EE6               	movwf	postinc1,c
 11214  01B4A2  EC43  F013         	call	_set_load_relay_one	;wreg free
 11215                           
 11216                           ;bsoc.c: 253:   set_load_relay_two(0);
 11217  01B4A6  0E00               	movlw	0
 11218  01B4A8  6EE6               	movwf	postinc1,c
 11219  01B4AA  EC3B  F013         	call	_set_load_relay_two	;wreg free
 11220                           
 11221                           ;bsoc.c: 254:   esr_state = 0;
 11222  01B4AE  0100               	movlb	0	; () banked
 11223  01B4B0  6BC6               	clrf	esr_check@esr_state& (0+255),b
 11224                           
 11225                           ; BSR set to: 0
 11226                           ;bsoc.c: 255:   return C.esr;
 11227  01B4B2  0062  F61C  F02A   	movff	_C+136,btemp	;volatile
 11228  01B4B8  0062  F620  F02B   	movff	_C+137,btemp+1	;volatile
 11229  01B4BE  0062  F624  F02C   	movff	_C+138,btemp+2	;volatile
 11230  01B4C4  0062  F628  F02D   	movff	_C+139,btemp+3	;volatile
 11231  01B4CA  D01D               	goto	l2406
 11232  01B4CC                     l14258:
 11233  01B4CC  0100               	movlb	0	; () banked
 11234  01B4CE  51C6               	movf	esr_check@esr_state& (0+255),w,b
 11235  01B4D0  6E34               	movwf	(btemp+10)^0,c
 11236  01B4D2  6A35               	clrf	(btemp+11)^0,c
 11237                           
 11238                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11239                           ; Switch size 1, requested type "simple"
 11240                           ; Number of cases is 1, Range of values is 0 to 0
 11241                           ; switch strategies available:
 11242                           ; Name         Instructions Cycles
 11243                           ; simple_byte            4     3 (average)
 11244                           ;	Chosen strategy is simple_byte
 11245  01B4D4  5035               	movf	(btemp+11)^0,w,c
 11246  01B4D6  0A00               	xorlw	0	; case 0
 11247  01B4D8  A4D8               	btfss	status,2,c
 11248  01B4DA  D00D               	goto	l14260
 11249                           
 11250                           ; BSR set to: 0
 11251                           ; Switch size 1, requested type "simple"
 11252                           ; Number of cases is 4, Range of values is 0 to 3
 11253                           ; switch strategies available:
 11254                           ; Name         Instructions Cycles
 11255                           ; simple_byte           13     7 (average)
 11256                           ;	Chosen strategy is simple_byte
 11257  01B4DC  5034               	movf	(btemp+10)^0,w,c
 11258  01B4DE  0A00               	xorlw	0	; case 0
 11259  01B4E0  B4D8               	btfsc	status,2,c
 11260  01B4E2  D6B5               	goto	l14190
 11261  01B4E4  0A01               	xorlw	1	; case 1
 11262  01B4E6  B4D8               	btfsc	status,2,c
 11263  01B4E8  D6BD               	goto	l14194
 11264  01B4EA  0A03               	xorlw	3	; case 2
 11265  01B4EC  B4D8               	btfsc	status,2,c
 11266  01B4EE  D6ED               	goto	l14210
 11267  01B4F0  0A01               	xorlw	1	; case 3
 11268  01B4F2  B4D8               	btfsc	status,2,c
 11269  01B4F4  D72B               	goto	l14228
 11270  01B4F6                     l14260:
 11271                           
 11272                           ; BSR set to: 0
 11273                           ;bsoc.c: 260:  return -1.0;
 11274  01B4F6  0E00               	movlw	0
 11275  01B4F8  6E2A               	movwf	btemp^0,c
 11276  01B4FA  0E00               	movlw	0
 11277  01B4FC  6E2B               	movwf	(btemp+1)^0,c
 11278  01B4FE  0E80               	movlw	128
 11279  01B500  6E2C               	movwf	(btemp+2)^0,c
 11280  01B502  0EBF               	movlw	191
 11281  01B504                     L7:
 11282  01B504  6E2D               	movwf	(btemp+3)^0,c
 11283  01B506                     l2406:
 11284                           
 11285                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 11286  01B506  52E5               	movf	postdec1,f,c
 11287  01B508  0012               	return		;funcret
 11288  01B50A                     __end_of_esr_check:
 11289                           	opt callstack 0
 11290                           
 11291 ;; *************** function _update_adc_result *****************
 11292 ;; Defined at:
 11293 ;;		line 111 in file "daq.c"
 11294 ;; Parameters:    Size  Location     Type
 11295 ;;		None
 11296 ;; Auto vars:     Size  Location     Type
 11297 ;;		None
 11298 ;; Return value:  Size  Location     Type
 11299 ;;                  1  [STACK] _Bool 
 11300 ;; Registers used:
 11301 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
 11302 ;; Tracked objects:
 11303 ;;		On entry : 0/0
 11304 ;;		On exit  : 0/0
 11305 ;;		Unchanged: 0/0
 11306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11311 ;;Total ram usage:        0 bytes
 11312 ;; Hardware stack levels used:    1
 11313 ;; Hardware stack levels required when called:   17
 11314 ;; This function calls:
 11315 ;;		_StartTimer
 11316 ;;		_TimerDone
 11317 ;;		_check_adc_scan
 11318 ;;		_clear_adc_scan
 11319 ;;		_start_adc_scan
 11320 ;; This function is called by:
 11321 ;;		_esr_check
 11322 ;; This function uses a reentrant model
 11323 ;;
 11324                           
 11325                           	psect	text29
 11326  001D7E                     __ptext29:
 11327                           	opt callstack 0
 11328  001D7E                     _update_adc_result:
 11329                           	opt callstack 12
 11330                           
 11331                           ;daq.c: 113:  if (R.done) {
 11332                           
 11333                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11334                           ;incstack = 0
 11335  001D7E  0101               	movlb	1	; () banked
 11336  001D80  5135               	movf	(_R+53)& (0+255),w,b	;volatile
 11337  001D82  B4D8               	btfsc	status,2,c
 11338  001D84  0012               	return	
 11339                           
 11340                           ; BSR set to: 1
 11341                           ;daq.c: 114:   clear_adc_scan();
 11342  001D86  ECC5  F013         	call	_clear_adc_scan	;wreg free
 11343                           
 11344                           ; BSR set to: 1
 11345                           ;daq.c: 115:   start_adc_scan();
 11346  001D8A  EC61  F00A         	call	_start_adc_scan	;wreg free
 11347                           
 11348                           ;daq.c: 116:   StartTimer(TMR_ADC, 200);
 11349  001D8E  0EC8               	movlw	200
 11350  001D90  6EE6               	movwf	postinc1,c
 11351  001D92  0E00               	movlw	0
 11352  001D94  6EE6               	movwf	postinc1,c
 11353  001D96  0E01               	movlw	1
 11354  001D98  6EE6               	movwf	postinc1,c
 11355  001D9A  EC22  F00E         	call	_StartTimer	;wreg free
 11356  001D9E                     l13618:
 11357  001D9E  0E01               	movlw	1
 11358  001DA0  6EE6               	movwf	postinc1,c
 11359  001DA2  ECAD  F010         	call	_TimerDone	;wreg free
 11360  001DA6  502A               	movf	btemp^0,w,c
 11361  001DA8  A4D8               	btfss	status,2,c
 11362  001DAA  0012               	return	
 11363  001DAC  ECAB  F013         	call	_check_adc_scan	;wreg free
 11364  001DB0  502A               	movf	btemp^0,w,c
 11365  001DB2  A4D8               	btfss	status,2,c
 11366  001DB4  0012               	return	
 11367  001DB6  D7F3               	goto	l13618
 11368  001DB8                     __end_of_update_adc_result:
 11369                           	opt callstack 0
 11370                           
 11371 ;; *************** function _check_adc_scan *****************
 11372 ;; Defined at:
 11373 ;;		line 95 in file "daq.c"
 11374 ;; Parameters:    Size  Location     Type
 11375 ;;		None
 11376 ;; Auto vars:     Size  Location     Type
 11377 ;;		None
 11378 ;; Return value:  Size  Location     Type
 11379 ;;                  1  [STACK] _Bool 
 11380 ;; Registers used:
 11381 ;;		btemp
 11382 ;; Tracked objects:
 11383 ;;		On entry : 0/2
 11384 ;;		On exit  : 0/0
 11385 ;;		Unchanged: 0/0
 11386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11391 ;;Total ram usage:        0 bytes
 11392 ;; Hardware stack levels used:    1
 11393 ;; Hardware stack levels required when called:   15
 11394 ;; This function calls:
 11395 ;;		Nothing
 11396 ;; This function is called by:
 11397 ;;		_main
 11398 ;;		_update_adc_result
 11399 ;; This function uses a reentrant model
 11400 ;;
 11401                           
 11402                           	psect	text30
 11403  002756                     __ptext30:
 11404                           	opt callstack 0
 11405  002756                     _check_adc_scan:
 11406                           	opt callstack 13
 11407                           
 11408                           ;daq.c: 97:  return R.done;
 11409                           
 11410                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11411                           ;incstack = 0
 11412  002756  0060  F4D4  F02A   	movff	_R+53,btemp	;volatile
 11413                           
 11414                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 11415  00275C  0012               	return		;funcret
 11416  00275E                     __end_of_check_adc_scan:
 11417                           	opt callstack 0
 11418                           
 11419 ;; *************** function _set_load_relay_two *****************
 11420 ;; Defined at:
 11421 ;;		line 131 in file "mbmc.c"
 11422 ;; Parameters:    Size  Location     Type
 11423 ;;  mode            1  [STACK] const _Bool 
 11424 ;; Auto vars:     Size  Location     Type
 11425 ;;		None
 11426 ;; Return value:  Size  Location     Type
 11427 ;;                  1  [STACK] void 
 11428 ;; Registers used:
 11429 ;;		wreg, fsr1l, fsr1h
 11430 ;; Tracked objects:
 11431 ;;		On entry : 0/3D
 11432 ;;		On exit  : 0/0
 11433 ;;		Unchanged: 0/0
 11434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11439 ;;Total ram usage:        0 bytes
 11440 ;; Hardware stack levels used:    1
 11441 ;; Hardware stack levels required when called:   15
 11442 ;; This function calls:
 11443 ;;		Nothing
 11444 ;; This function is called by:
 11445 ;;		_main
 11446 ;;		_esr_check
 11447 ;; This function uses a reentrant model
 11448 ;;
 11449                           
 11450                           	psect	text31
 11451  002676                     __ptext31:
 11452                           	opt callstack 0
 11453  002676                     _set_load_relay_two:
 11454                           	opt callstack 15
 11455                           
 11456                           ;mbmc.c: 131: void set_load_relay_two(const _Bool mode);mbmc.c: 132: {;mbmc.c: 133:  LAT
      +                          Dbits.LATD5 = mode;
 11457                           ;stkvar	_mode @ sp[(0)+-1]
 11458                           
 11459                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11460                           ;incstack = 0
 11461  002676  0EFF               	movlw	-1
 11462  002678  B0E3               	btfsc	plusw1,0,c
 11463  00267A  D002               	bra	u12485
 11464  00267C  9ABD               	bcf	189,5,c	;volatile
 11465  00267E  D001               	bra	u12486
 11466  002680                     u12485:
 11467  002680  8ABD               	bsf	189,5,c	;volatile
 11468  002682                     u12486:
 11469                           
 11470                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 11471  002682  52E5               	movf	postdec1,f,c
 11472  002684  0012               	return		;funcret
 11473  002686                     __end_of_set_load_relay_two:
 11474                           	opt callstack 0
 11475                           
 11476 ;; *************** function _set_load_relay_one *****************
 11477 ;; Defined at:
 11478 ;;		line 126 in file "mbmc.c"
 11479 ;; Parameters:    Size  Location     Type
 11480 ;;  mode            1  [STACK] const _Bool 
 11481 ;; Auto vars:     Size  Location     Type
 11482 ;;		None
 11483 ;; Return value:  Size  Location     Type
 11484 ;;                  1  [STACK] void 
 11485 ;; Registers used:
 11486 ;;		wreg, fsr1l, fsr1h
 11487 ;; Tracked objects:
 11488 ;;		On entry : 0/3D
 11489 ;;		On exit  : 0/0
 11490 ;;		Unchanged: 0/0
 11491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11496 ;;Total ram usage:        0 bytes
 11497 ;; Hardware stack levels used:    1
 11498 ;; Hardware stack levels required when called:   15
 11499 ;; This function calls:
 11500 ;;		Nothing
 11501 ;; This function is called by:
 11502 ;;		_main
 11503 ;;		_esr_check
 11504 ;; This function uses a reentrant model
 11505 ;;
 11506                           
 11507                           	psect	text32
 11508  002686                     __ptext32:
 11509                           	opt callstack 0
 11510  002686                     _set_load_relay_one:
 11511                           	opt callstack 15
 11512                           
 11513                           ;mbmc.c: 126: void set_load_relay_one(const _Bool mode);mbmc.c: 127: {;mbmc.c: 128:  LAT
      +                          Dbits.LATD4 = mode;
 11514                           ;stkvar	_mode @ sp[(0)+-1]
 11515                           
 11516                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11517                           ;incstack = 0
 11518  002686  0EFF               	movlw	-1
 11519  002688  B0E3               	btfsc	plusw1,0,c
 11520  00268A  D002               	bra	u12475
 11521  00268C  98BD               	bcf	189,4,c	;volatile
 11522  00268E  D001               	bra	u12476
 11523  002690                     u12475:
 11524  002690  88BD               	bsf	189,4,c	;volatile
 11525  002692                     u12476:
 11526                           
 11527                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 11528  002692  52E5               	movf	postdec1,f,c
 11529  002694  0012               	return		;funcret
 11530  002696                     __end_of_set_load_relay_one:
 11531                           	opt callstack 0
 11532                           
 11533 ;; *************** function _eaDogM_WriteCommand *****************
 11534 ;; Defined at:
 11535 ;;		line 384 in file "eadog.c"
 11536 ;; Parameters:    Size  Location     Type
 11537 ;;  cmd             1  [STACK] const unsigned char 
 11538 ;; Auto vars:     Size  Location     Type
 11539 ;;		None
 11540 ;; Return value:  Size  Location     Type
 11541 ;;                  1  [STACK] void 
 11542 ;; Registers used:
 11543 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 11544 ;; Tracked objects:
 11545 ;;		On entry : 3F/3D
 11546 ;;		On exit  : 3F/3D
 11547 ;;		Unchanged: 0/0
 11548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11553 ;;Total ram usage:        0 bytes
 11554 ;; Hardware stack levels used:    1
 11555 ;; Hardware stack levels required when called:   19
 11556 ;; This function calls:
 11557 ;;		_send_lcd_cmd_dma
 11558 ;; This function is called by:
 11559 ;;		_main
 11560 ;; This function uses a reentrant model
 11561 ;;
 11562                           
 11563                           	psect	text33
 11564  0026C6                     __ptext33:
 11565                           	opt callstack 0
 11566  0026C6                     _eaDogM_WriteCommand:
 11567                           	opt callstack 11
 11568                           
 11569                           ;eadog.c: 384: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 385: {;eadog.c: 386:
      +                            send_lcd_cmd_dma(cmd);
 11570                           ;stkvar	_cmd @ sp[(0)+-1]
 11571                           
 11572                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11573                           ;incstack = 0
 11574  0026C6  0EFF               	movlw	-1
 11575  0026C8  50E3               	movf	plusw1,w,c
 11576  0026CA  6EE6               	movwf	postinc1,c
 11577  0026CC  EC94  F012         	call	_send_lcd_cmd_dma	;wreg free
 11578                           
 11579                           ; BSR set to: 61
 11580                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
 11581  0026D0  52E5               	movf	postdec1,f,c
 11582  0026D2  0012               	return		;funcret
 11583  0026D4                     __end_of_eaDogM_WriteCommand:
 11584                           	opt callstack 0
 11585                           
 11586 ;; *************** function _display_history *****************
 11587 ;; Defined at:
 11588 ;;		line 619 in file "main.c"
 11589 ;; Parameters:    Size  Location     Type
 11590 ;;		None
 11591 ;; Auto vars:     Size  Location     Type
 11592 ;;		None
 11593 ;; Return value:  Size  Location     Type
 11594 ;;                  1  [STACK] _Bool 
 11595 ;; Registers used:
 11596 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
 11597 ;; Tracked objects:
 11598 ;;		On entry : 0/2
 11599 ;;		On exit  : 0/0
 11600 ;;		Unchanged: 0/0
 11601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11606 ;;Total ram usage:        0 bytes
 11607 ;; Hardware stack levels used:    1
 11608 ;; Hardware stack levels required when called:   27
 11609 ;; This function calls:
 11610 ;;		_WaitMs
 11611 ;;		_asctime
 11612 ;;		_get_switch
 11613 ;;		_get_vterm_ptr
 11614 ;;		_localtime
 11615 ;;		_sprintf
 11616 ;;		_time
 11617 ;;		_update_lcd
 11618 ;; This function is called by:
 11619 ;;		_main
 11620 ;; This function uses a reentrant model
 11621 ;;
 11622                           
 11623                           	psect	text34
 11624  01AF58                     __ptext34:
 11625                           	opt callstack 0
 11626  01AF58                     _display_history:
 11627                           	opt callstack 3
 11628                           
 11629                           ;main.c: 621:  static uint8_t bwait = 0;;main.c: 623:  if (get_switch(SCALIB) && (++bwai
      +                          t > 5)) {
 11630                           
 11631                           ; BSR set to: 61
 11632                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11633                           ;incstack = 0
 11634  01AF58  0E04               	movlw	4
 11635  01AF5A  6EE6               	movwf	postinc1,c
 11636  01AF5C  EC42  F010         	call	_get_switch	;wreg free
 11637  01AF60  502A               	movf	btemp^0,w,c
 11638  01AF62  B4D8               	btfsc	status,2,c
 11639  01AF64  D15E               	goto	l17286
 11640  01AF66  2A53               	incf	display_history@bwait^0,f,c
 11641  01AF68  0E05               	movlw	5
 11642  01AF6A  6453               	cpfsgt	display_history@bwait^0,c
 11643  01AF6C  D15A               	goto	l17286
 11644                           
 11645                           ;main.c: 624:   pclock = time(((void*)0));
 11646  01AF6E  0E00               	movlw	0
 11647  01AF70  6EE6               	movwf	postinc1,c
 11648  01AF72  0E00               	movlw	0
 11649  01AF74  6EE6               	movwf	postinc1,c
 11650  01AF76  EC25  F00B         	call	_time	;wreg free
 11651  01AF7A  52E5               	movf	postdec1,f,c
 11652  01AF7C  006F FF9C  F041    	movff	indf1,btemp+23
 11653  01AF82  52E5               	movf	postdec1,f,c
 11654  01AF84  006F FF9C  F040    	movff	indf1,btemp+22
 11655  01AF8A  52E5               	movf	postdec1,f,c
 11656  01AF8C  006F FF9C  F03F    	movff	indf1,btemp+21
 11657  01AF92  52E5               	movf	postdec1,f,c
 11658  01AF94  006F FF9C  F03E    	movff	indf1,btemp+20
 11659  01AF9A  52E5               	movf	postdec1,f,c
 11660  01AF9C  006F FF9C  F03D    	movff	indf1,btemp+19
 11661  01AFA2  52E5               	movf	postdec1,f,c
 11662  01AFA4  006F FF9C  F03C    	movff	indf1,btemp+18
 11663  01AFAA  52E5               	movf	postdec1,f,c
 11664  01AFAC  006F FF9C  F03B    	movff	indf1,btemp+17
 11665  01AFB2  52E5               	movf	postdec1,f,c
 11666  01AFB4  006F FF9C  F03A    	movff	indf1,btemp+16
 11667  01AFBA  0060  F0E8  F0DA   	movff	btemp+16,_pclock
 11668  01AFC0  0060  F0EC  F0DB   	movff	btemp+17,_pclock+1
 11669  01AFC6  0060  F0F0  F0DC   	movff	btemp+18,_pclock+2
 11670  01AFCC  0060  F0F4  F0DD   	movff	btemp+19,_pclock+3
 11671  01AFD2  0060  F0F8  F0DE   	movff	btemp+20,_pclock+4
 11672  01AFD8  0060  F0FC  F0DF   	movff	btemp+21,_pclock+5
 11673  01AFDE  0060  F100  F0E0   	movff	btemp+22,_pclock+6
 11674  01AFE4  0060  F104  F0E1   	movff	btemp+23,_pclock+7
 11675                           
 11676                           ; BSR set to: 57
 11677                           ;main.c: 625:   t_mbmc = localtime(&pclock);
 11678  01AFEA  0EDA               	movlw	_pclock& (0+255)
 11679  01AFEC  6EE6               	movwf	postinc1,c
 11680  01AFEE  ECF3  F012         	call	_localtime	;wreg free
 11681  01AFF2  0060  F0A8  F0BC   	movff	btemp,_t_mbmc
 11682  01AFF8  0060  F0AC  F0BD   	movff	btemp+1,_t_mbmc+1
 11683                           
 11684                           ;main.c: 626:   sprintf(get_vterm_ptr(0, 0), "%d %d %d %d                ", C.hist[0].h[
      +                          0], C.hist[0].h[1], C.hist[0].h[2], C.hist[0].h[3]);
 11685  01AFFE  EE22  F1E3         	lfsr	2,_C+228	;volatile
 11686  01B002  006F FF78  F034    	movff	postinc2,btemp+10
 11687  01B008  006F FF74  F035    	movff	postdec2,btemp+11
 11688  01B00E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11689  01B014  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11690  01B01A  EE22  F1E1         	lfsr	2,_C+226	;volatile
 11691  01B01E  006F FF78  F034    	movff	postinc2,btemp+10
 11692  01B024  006F FF74  F035    	movff	postdec2,btemp+11
 11693  01B02A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11694  01B030  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11695  01B036  EE22  F1DF         	lfsr	2,_C+224	;volatile
 11696  01B03A  006F FF78  F034    	movff	postinc2,btemp+10
 11697  01B040  006F FF74  F035    	movff	postdec2,btemp+11
 11698  01B046  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11699  01B04C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11700  01B052  EE22  F1DD         	lfsr	2,_C+222	;volatile
 11701  01B056  006F FF78  F034    	movff	postinc2,btemp+10
 11702  01B05C  006F FF74  F035    	movff	postdec2,btemp+11
 11703  01B062  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11704  01B068  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11705  01B06E  0EB9               	movlw	low STR_65
 11706  01B070  6EE6               	movwf	postinc1,c
 11707  01B072  0EFA               	movlw	high STR_65
 11708  01B074  6EE6               	movwf	postinc1,c
 11709  01B076  0E00               	movlw	0
 11710  01B078  6EE6               	movwf	postinc1,c
 11711  01B07A  0E00               	movlw	0
 11712  01B07C  6EE6               	movwf	postinc1,c
 11713  01B07E  EC2B  F010         	call	_get_vterm_ptr	;wreg free
 11714  01B082  0060  F0AB  FFE6   	movff	btemp,postinc1
 11715  01B088  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11716  01B08E  0E0C               	movlw	12
 11717  01B090  6EE6               	movwf	postinc1,c
 11718  01B092  ECF9  F0FB         	call	_sprintf	;wreg free
 11719                           
 11720                           ; BSR set to: 0
 11721                           ;main.c: 627:   sprintf(get_vterm_ptr(1, 0), "%d %d %d %d                ", C.hist[0].h[
      +                          4], C.hist[0].h[5], C.hist[0].h[6], C.hist[0].h[7]);
 11722  01B096  EE22  F1EB         	lfsr	2,_C+236	;volatile
 11723  01B09A  006F FF78  F034    	movff	postinc2,btemp+10
 11724  01B0A0  006F FF74  F035    	movff	postdec2,btemp+11
 11725  01B0A6  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11726  01B0AC  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11727  01B0B2  EE22  F1E9         	lfsr	2,_C+234	;volatile
 11728  01B0B6  006F FF78  F034    	movff	postinc2,btemp+10
 11729  01B0BC  006F FF74  F035    	movff	postdec2,btemp+11
 11730  01B0C2  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11731  01B0C8  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11732  01B0CE  EE22  F1E7         	lfsr	2,_C+232	;volatile
 11733  01B0D2  006F FF78  F034    	movff	postinc2,btemp+10
 11734  01B0D8  006F FF74  F035    	movff	postdec2,btemp+11
 11735  01B0DE  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11736  01B0E4  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11737  01B0EA  EE22  F1E5         	lfsr	2,_C+230	;volatile
 11738  01B0EE  006F FF78  F034    	movff	postinc2,btemp+10
 11739  01B0F4  006F FF74  F035    	movff	postdec2,btemp+11
 11740  01B0FA  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11741  01B100  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11742  01B106  0EB9               	movlw	low STR_65
 11743  01B108  6EE6               	movwf	postinc1,c
 11744  01B10A  0EFA               	movlw	high STR_65
 11745  01B10C  6EE6               	movwf	postinc1,c
 11746  01B10E  0E00               	movlw	0
 11747  01B110  6EE6               	movwf	postinc1,c
 11748  01B112  0E01               	movlw	1
 11749  01B114  6EE6               	movwf	postinc1,c
 11750  01B116  EC2B  F010         	call	_get_vterm_ptr	;wreg free
 11751  01B11A  0060  F0AB  FFE6   	movff	btemp,postinc1
 11752  01B120  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11753  01B126  0E0C               	movlw	12
 11754  01B128  6EE6               	movwf	postinc1,c
 11755  01B12A  ECF9  F0FB         	call	_sprintf	;wreg free
 11756                           
 11757                           ; BSR set to: 0
 11758                           ;main.c: 628:   sprintf(get_vterm_ptr(2, 0), "%d %d %d %d                ", C.hist[0].h[
      +                          8], C.hist[0].h[9], C.hist[0].h[10], C.hist[0].h[12]);
 11759  01B12E  EE22  F1F5         	lfsr	2,_C+246	;volatile
 11760  01B132  006F FF78  F034    	movff	postinc2,btemp+10
 11761  01B138  006F FF74  F035    	movff	postdec2,btemp+11
 11762  01B13E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11763  01B144  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11764  01B14A  EE22  F1F1         	lfsr	2,_C+242	;volatile
 11765  01B14E  006F FF78  F034    	movff	postinc2,btemp+10
 11766  01B154  006F FF74  F035    	movff	postdec2,btemp+11
 11767  01B15A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11768  01B160  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11769  01B166  EE22  F1EF         	lfsr	2,_C+240	;volatile
 11770  01B16A  006F FF78  F034    	movff	postinc2,btemp+10
 11771  01B170  006F FF74  F035    	movff	postdec2,btemp+11
 11772  01B176  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11773  01B17C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11774  01B182  EE22  F1ED         	lfsr	2,_C+238	;volatile
 11775  01B186  006F FF78  F034    	movff	postinc2,btemp+10
 11776  01B18C  006F FF74  F035    	movff	postdec2,btemp+11
 11777  01B192  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11778  01B198  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11779  01B19E  0EB9               	movlw	low STR_65
 11780  01B1A0  6EE6               	movwf	postinc1,c
 11781  01B1A2  0EFA               	movlw	high STR_65
 11782  01B1A4  6EE6               	movwf	postinc1,c
 11783  01B1A6  0E00               	movlw	0
 11784  01B1A8  6EE6               	movwf	postinc1,c
 11785  01B1AA  0E02               	movlw	2
 11786  01B1AC  6EE6               	movwf	postinc1,c
 11787  01B1AE  EC2B  F010         	call	_get_vterm_ptr	;wreg free
 11788  01B1B2  0060  F0AB  FFE6   	movff	btemp,postinc1
 11789  01B1B8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11790  01B1BE  0E0C               	movlw	12
 11791  01B1C0  6EE6               	movwf	postinc1,c
 11792  01B1C2  ECF9  F0FB         	call	_sprintf	;wreg free
 11793                           
 11794                           ; BSR set to: 0
 11795                           ;main.c: 629:   sprintf(get_vterm_ptr(3, 0), "%s           ", asctime(t_mbmc));
 11796  01B1C6  0060  F2F3  FFE6   	movff	_t_mbmc,postinc1
 11797  01B1CC  0060  F2F7  FFE6   	movff	_t_mbmc+1,postinc1
 11798  01B1D2  EC9B  F0C0         	call	_asctime	;wreg free
 11799  01B1D6  0060  F0AB  FFE6   	movff	btemp,postinc1
 11800  01B1DC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11801  01B1E2  0E76               	movlw	low (STR_72+5)
 11802  01B1E4  6EE6               	movwf	postinc1,c
 11803  01B1E6  0EFF               	movlw	high (STR_72+5)
 11804  01B1E8  6EE6               	movwf	postinc1,c
 11805  01B1EA  0E00               	movlw	0
 11806  01B1EC  6EE6               	movwf	postinc1,c
 11807  01B1EE  0E03               	movlw	3
 11808  01B1F0  6EE6               	movwf	postinc1,c
 11809  01B1F2  EC2B  F010         	call	_get_vterm_ptr	;wreg free
 11810  01B1F6  0060  F0AB  FFE6   	movff	btemp,postinc1
 11811  01B1FC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11812  01B202  0E06               	movlw	6
 11813  01B204  6EE6               	movwf	postinc1,c
 11814  01B206  ECF9  F0FB         	call	_sprintf	;wreg free
 11815                           
 11816                           ; BSR set to: 0
 11817                           ;main.c: 630:   update_lcd(0);
 11818  01B20A  0E00               	movlw	0
 11819  01B20C  6EE6               	movwf	postinc1,c
 11820  01B20E  ECAB  F0F4         	call	_update_lcd	;wreg free
 11821                           
 11822                           ;main.c: 631:   WaitMs(2000);
 11823  01B212  0ED0               	movlw	208
 11824  01B214  6EE6               	movwf	postinc1,c
 11825  01B216  0E07               	movlw	7
 11826  01B218  6EE6               	movwf	postinc1,c
 11827  01B21A  EC2F  F00F         	call	_WaitMs	;wreg free
 11828  01B21E                     l17280:
 11829                           
 11830                           ;main.c: 632:   bwait = 0;
 11831  01B21E  6A53               	clrf	display_history@bwait^0,c
 11832  01B220  0012               	return	
 11833  01B222                     l17286:
 11834                           
 11835                           ;main.c: 635:   if (!get_switch(SCALIB))
 11836  01B222  0E04               	movlw	4
 11837  01B224  6EE6               	movwf	postinc1,c
 11838  01B226  EC42  F010         	call	_get_switch	;wreg free
 11839  01B22A  502A               	movf	btemp^0,w,c
 11840  01B22C  A4D8               	btfss	status,2,c
 11841  01B22E  0012               	return	
 11842  01B230  D7F6               	goto	l17280
 11843  01B232                     __end_of_display_history:
 11844                           	opt callstack 0
 11845                           
 11846 ;; *************** function _time *****************
 11847 ;; Defined at:
 11848 ;;		line 243 in file "mbmc.c"
 11849 ;; Parameters:    Size  Location     Type
 11850 ;;  t               2  [STACK] PTR long long 
 11851 ;;		 -> time@current_time(8), NULL(0), 
 11852 ;; Auto vars:     Size  Location     Type
 11853 ;;		None
 11854 ;; Return value:  Size  Location     Type
 11855 ;;                  8  [STACK] long long 
 11856 ;; Registers used:
 11857 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl
 11858 ;; Tracked objects:
 11859 ;;		On entry : 0/1
 11860 ;;		On exit  : 3F/39
 11861 ;;		Unchanged: 0/0
 11862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11867 ;;Total ram usage:        0 bytes
 11868 ;; Hardware stack levels used:    1
 11869 ;; Hardware stack levels required when called:   15
 11870 ;; This function calls:
 11871 ;;		Nothing
 11872 ;; This function is called by:
 11873 ;;		_main
 11874 ;;		_display_history
 11875 ;;		_check_day_time
 11876 ;;		_load_hist_data
 11877 ;; This function uses a reentrant model
 11878 ;;
 11879                           
 11880                           	psect	text35
 11881  00164A                     __ptext35:
 11882                           	opt callstack 0
 11883  00164A                     _time:
 11884                           	opt callstack 0
 11885                           
 11886                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 8 argfudge = 6
 11887  00164A  0E06               	movlw	6
 11888  00164C  26E1               	addwf	fsr1l,f,c
 11889  00164E  0E00               	movlw	0
 11890  001650  22E2               	addwfc	fsr1h,f,c
 11891                           
 11892                           ;mbmc.c: 243: time_t time(time_t * t);mbmc.c: 244: {;mbmc.c: 245:  static time_t current
      +                          _time;;mbmc.c: 246:  PIE8bits.TMR5IE = 0;
 11893                           
 11894                           ;incstack = 0
 11895 ;; hardware stack exceeded
 11896  001652  0139               	movlb	57	; () banked
 11897  001654  9D98               	bcf	152,6,b	;volatile
 11898                           
 11899                           ; BSR set to: 57
 11900                           ;mbmc.c: 247:  current_time = V.ticks;
 11901  001656  0102               	movlb	2	; () banked
 11902  001658  5188               	movf	(_V+129)& (0+255),w,b	;volatile
 11903  00165A  0100               	movlb	0	; () banked
 11904  00165C  6FD2               	movwf	time@current_time& (0+255),b
 11905  00165E  0102               	movlb	2	; () banked
 11906  001660  5189               	movf	(_V+130)& (0+255),w,b	;volatile
 11907  001662  0100               	movlb	0	; () banked
 11908  001664  6FD3               	movwf	(time@current_time+1)& (0+255),b
 11909  001666  0102               	movlb	2	; () banked
 11910  001668  518A               	movf	(_V+131)& (0+255),w,b	;volatile
 11911  00166A  0100               	movlb	0	; () banked
 11912  00166C  6FD4               	movwf	(time@current_time+2)& (0+255),b
 11913  00166E  0102               	movlb	2	; () banked
 11914  001670  518B               	movf	(_V+132)& (0+255),w,b	;volatile
 11915  001672  0100               	movlb	0	; () banked
 11916  001674  6FD5               	movwf	(time@current_time+3)& (0+255),b
 11917  001676  6BD6               	clrf	(time@current_time+4)& (0+255),b
 11918  001678  6BD7               	clrf	(time@current_time+5)& (0+255),b
 11919  00167A  6BD8               	clrf	(time@current_time+6)& (0+255),b
 11920  00167C  6BD9               	clrf	(time@current_time+7)& (0+255),b
 11921                           
 11922                           ; BSR set to: 0
 11923                           ;mbmc.c: 248:  PIE8bits.TMR5IE = 1;
 11924  00167E  0139               	movlb	57	; () banked
 11925  001680  8D98               	bsf	152,6,b	;volatile
 11926                           
 11927                           ; BSR set to: 57
 11928                           ;mbmc.c: 249:  if (t) {
 11929                           ;stkvar	_t @ sp[(0)+-8]
 11930  001682  0EF8               	movlw	-8
 11931  001684  006F FF8C  F02A    	movff	plusw1,btemp
 11932  00168A  0EF9               	movlw	-7
 11933  00168C  50E3               	movf	plusw1,w,c
 11934  00168E  102A               	iorwf	btemp^0,w,c
 11935                           
 11936                           ; BSR set to: 57
 11937                           ;mbmc.c: 252:  return current_time;
 11938                           
 11939                           ; BSR set to: 57
 11940  001690  EE20  F0D2         	lfsr	2,time@current_time
 11941                           
 11942                           ;stkvar	?_time @ sp[(0)+-8]
 11943  001694  0E08               	movlw	8
 11944  001696  6E2A               	movwf	btemp^0,c
 11945  001698  0EF8               	movlw	-8
 11946  00169A                     us1156999:
 11947  00169A  006F FF7B FFE3     	movff	postinc2,plusw1
 11948  0016A0  28E8               	incf	wreg,w,c
 11949  0016A2  2E2A               	decfsz	btemp^0,f,c
 11950  0016A4  D7FA               	bra	us1156999
 11951                           
 11952                           ; BSR set to: 57
 11953                           ; _time: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize 
      +                          = 8, vargsize = 0
 11954  0016A6  0012               	return		;funcret
 11955  0016A8                     __end_of_time:
 11956                           	opt callstack 0
 11957                           
 11958 ;; *************** function _localtime *****************
 11959 ;; Defined at:
 11960 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/localtime.c"
 11961 ;; Parameters:    Size  Location     Type
 11962 ;;  t               1  [STACK] PTR const long long 
 11963 ;;		 -> pclock(8), 
 11964 ;; Auto vars:     Size  Location     Type
 11965 ;;		None
 11966 ;; Return value:  Size  Location     Type
 11967 ;;                  2  [STACK] PTR struct tm
 11968 ;; Registers used:
 11969 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
 11970 ;; Tracked objects:
 11971 ;;		On entry : 3F/39
 11972 ;;		On exit  : 0/0
 11973 ;;		Unchanged: 0/0
 11974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11979 ;;Total ram usage:        0 bytes
 11980 ;; Hardware stack levels used:    1
 11981 ;; Hardware stack levels required when called:   21
 11982 ;; This function calls:
 11983 ;;		___localtime_r
 11984 ;; This function is called by:
 11985 ;;		_main
 11986 ;;		_display_history
 11987 ;; This function uses a reentrant model
 11988 ;;
 11989                           
 11990                           	psect	text36
 11991  0025E6                     __ptext36:
 11992                           	opt callstack 0
 11993  0025E6                     _localtime:
 11994                           	opt callstack 9
 11995                           
 11996                           ; BSR set to: 57
 11997                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11998                           ;incstack = 0
 11999  0025E6  0EDF               	movlw	low localtime@tm
 12000  0025E8  6EE6               	movwf	postinc1,c
 12001  0025EA  0E03               	movlw	high localtime@tm
 12002  0025EC  6EE6               	movwf	postinc1,c
 12003                           
 12004                           ;stkvar	_t @ sp[(-2)+-1]
 12005  0025EE  0EFD               	movlw	-3
 12006  0025F0  50E3               	movf	plusw1,w,c
 12007  0025F2  6EE6               	movwf	postinc1,c
 12008  0025F4  EC2E  F0E3         	call	___localtime_r	;wreg free
 12009                           
 12010                           ; _localtime: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 12011  0025F8  52E5               	movf	postdec1,f,c
 12012  0025FA  0012               	return		;funcret
 12013  0025FC                     __end_of_localtime:
 12014                           	opt callstack 0
 12015                           
 12016 ;; *************** function ___localtime_r *****************
 12017 ;; Defined at:
 12018 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/localtime_r.c"
 12019 ;; Parameters:    Size  Location     Type
 12020 ;;  t               1  [STACK] PTR const long long 
 12021 ;;		 -> pclock(8), 
 12022 ;;  tm              2  [STACK] PTR struct tm
 12023 ;;		 -> localtime@tm(24), 
 12024 ;; Auto vars:     Size  Location     Type
 12025 ;;		None
 12026 ;; Return value:  Size  Location     Type
 12027 ;;                  2  [STACK] PTR struct tm
 12028 ;; Registers used:
 12029 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
 12030 ;; Tracked objects:
 12031 ;;		On entry : 0/39
 12032 ;;		On exit  : 0/0
 12033 ;;		Unchanged: 0/0
 12034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12039 ;;Total ram usage:        0 bytes
 12040 ;; Hardware stack levels used:    1
 12041 ;; Hardware stack levels required when called:   20
 12042 ;; This function calls:
 12043 ;;		___secs_to_tm
 12044 ;;		___secs_to_zone
 12045 ;; This function is called by:
 12046 ;;		_localtime
 12047 ;; This function uses a reentrant model
 12048 ;;
 12049                           
 12050                           	psect	text37
 12051  01C65C                     __ptext37:
 12052                           	opt callstack 0
 12053  01C65C                     ___localtime_r:
 12054                           	opt callstack 9
 12055                           
 12056                           ;stkvar	_t @ sp[(0)+-1]
 12057                           
 12058                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12059                           ;incstack = 0
 12060  01C65C  0EFF               	movlw	-1
 12061  01C65E  50E3               	movf	plusw1,w,c
 12062  01C660  6ED9               	movwf	fsr2l,c
 12063  01C662  6ADA               	clrf	fsr2h,c
 12064  01C664  0E07               	movlw	7
 12065  01C666  AEDB               	btfss	plusw2,7,c
 12066  01C668  D010               	goto	u16420
 12067  01C66A  52DE               	movf	postinc2,f,c
 12068  01C66C  52DE               	movf	postinc2,f,c
 12069  01C66E  0E80               	movlw	128
 12070  01C670  5CDE               	subwf	postinc2,w,c
 12071  01C672  0EBD               	movlw	189
 12072  01C674  58DE               	subwfb	postinc2,w,c
 12073  01C676  0E0E               	movlw	14
 12074  01C678  58DE               	subwfb	postinc2,w,c
 12075  01C67A  0EFF               	movlw	255
 12076  01C67C  58DE               	subwfb	postinc2,w,c
 12077  01C67E  0EFF               	movlw	255
 12078  01C680  58DE               	subwfb	postinc2,w,c
 12079  01C682  0EFF               	movlw	255
 12080  01C684  58DE               	subwfb	postinc2,w,c
 12081  01C686  A0D8               	btfss	status,0,c
 12082  01C688  D01B               	goto	u16430
 12083  01C68A                     u16420:
 12084                           
 12085                           ;stkvar	_t @ sp[(0)+-1]
 12086  01C68A  0EFF               	movlw	-1
 12087  01C68C  50E3               	movf	plusw1,w,c
 12088  01C68E  6ED9               	movwf	fsr2l,c
 12089  01C690  6ADA               	clrf	fsr2h,c
 12090  01C692  0E07               	movlw	7
 12091  01C694  BEDB               	btfsc	plusw2,7,c
 12092  01C696  D019               	goto	l16836
 12093  01C698  0E07               	movlw	7
 12094  01C69A  50DB               	movf	plusw2,w,c
 12095  01C69C  E111               	bnz	u16430
 12096  01C69E  0E06               	movlw	6
 12097  01C6A0  50DB               	movf	plusw2,w,c
 12098  01C6A2  E10E               	bnz	u16430
 12099  01C6A4  0E05               	movlw	5
 12100  01C6A6  50DB               	movf	plusw2,w,c
 12101  01C6A8  E10B               	bnz	u16430
 12102  01C6AA  04DE               	decf	postinc2,w,c
 12103  01C6AC  0E7B               	movlw	123
 12104  01C6AE  58DE               	subwfb	postinc2,w,c
 12105  01C6B0  0E9D               	movlw	157
 12106  01C6B2  58DE               	subwfb	postinc2,w,c
 12107  01C6B4  0E40               	movlw	64
 12108  01C6B6  58DE               	subwfb	postinc2,w,c
 12109  01C6B8  0EF1               	movlw	241
 12110  01C6BA  58DE               	subwfb	postinc2,w,c
 12111  01C6BC  A0D8               	btfss	status,0,c
 12112  01C6BE  D005               	goto	l16836
 12113  01C6C0                     u16430:
 12114  01C6C0  0E00               	movlw	0
 12115  01C6C2  6E2A               	movwf	btemp^0,c
 12116  01C6C4  0E00               	movlw	0
 12117  01C6C6  6E2B               	movwf	(btemp+1)^0,c
 12118  01C6C8  D0E7               	goto	l3515
 12119  01C6CA                     l16836:
 12120                           
 12121                           ;stkvar	_tm @ sp[(0)+-3]
 12122  01C6CA  0EFD               	movlw	-3
 12123  01C6CC  50E3               	movf	plusw1,w,c
 12124  01C6CE  0F16               	addlw	22
 12125  01C6D0  6E34               	movwf	(btemp+10)^0,c
 12126  01C6D2  0EFE               	movlw	-2
 12127  01C6D4  006F FF8C  F035    	movff	plusw1,btemp+11
 12128  01C6DA  0E00               	movlw	0
 12129  01C6DC  2235               	addwfc	(btemp+11)^0,f,c
 12130  01C6DE  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12131  01C6E4  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12132  01C6EA  0E00               	movlw	0
 12133  01C6EC  6EE6               	movwf	postinc1,c
 12134  01C6EE  0E00               	movlw	0
 12135  01C6F0  6EE6               	movwf	postinc1,c
 12136                           
 12137                           ;stkvar	_tm @ sp[(-4)+-3]
 12138  01C6F2  0EF9               	movlw	-7
 12139  01C6F4  50E3               	movf	plusw1,w,c
 12140  01C6F6  0F12               	addlw	18
 12141  01C6F8  6E34               	movwf	(btemp+10)^0,c
 12142  01C6FA  0EFA               	movlw	-6
 12143  01C6FC  006F FF8C  F035    	movff	plusw1,btemp+11
 12144  01C702  0E00               	movlw	0
 12145  01C704  2235               	addwfc	(btemp+11)^0,f,c
 12146  01C706  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12147  01C70C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12148                           
 12149                           ;stkvar	_tm @ sp[(-6)+-3]
 12150  01C712  0EF7               	movlw	-9
 12151  01C714  50E3               	movf	plusw1,w,c
 12152  01C716  0F10               	addlw	16
 12153  01C718  6E34               	movwf	(btemp+10)^0,c
 12154  01C71A  0EF8               	movlw	-8
 12155  01C71C  006F FF8C  F035    	movff	plusw1,btemp+11
 12156  01C722  0E00               	movlw	0
 12157  01C724  2235               	addwfc	(btemp+11)^0,f,c
 12158  01C726  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12159  01C72C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12160  01C732  0E00               	movlw	0
 12161  01C734  6EE6               	movwf	postinc1,c
 12162  01C736  0E00               	movlw	0
 12163  01C738  6EE6               	movwf	postinc1,c
 12164                           
 12165                           ;stkvar	_t @ sp[(-10)+-1]
 12166  01C73A  0EF5               	movlw	-11
 12167  01C73C  50E3               	movf	plusw1,w,c
 12168  01C73E  6ED9               	movwf	fsr2l,c
 12169  01C740  6ADA               	clrf	fsr2h,c
 12170  01C742  006F FF7B FFE6     	movff	postinc2,postinc1
 12171  01C748  006F FF7B FFE6     	movff	postinc2,postinc1
 12172  01C74E  006F FF7B FFE6     	movff	postinc2,postinc1
 12173  01C754  006F FF7B FFE6     	movff	postinc2,postinc1
 12174  01C75A  006F FF7B FFE6     	movff	postinc2,postinc1
 12175  01C760  006F FF7B FFE6     	movff	postinc2,postinc1
 12176  01C766  006F FF7B FFE6     	movff	postinc2,postinc1
 12177  01C76C  006F FF7B FFE6     	movff	postinc2,postinc1
 12178  01C772  EC3C  F0AE         	call	___secs_to_zone	;wreg free
 12179                           
 12180                           ;stkvar	_tm @ sp[(0)+-3]
 12181  01C776  0EFD               	movlw	-3
 12182  01C778  006F FF8F FFE6     	movff	plusw1,postinc1
 12183  01C77E  006F FF8F FFE6     	movff	plusw1,postinc1
 12184                           
 12185                           ;stkvar	_t @ sp[(-2)+-1]
 12186  01C784  0EFD               	movlw	-3
 12187  01C786  50E3               	movf	plusw1,w,c
 12188  01C788  6ED9               	movwf	fsr2l,c
 12189  01C78A  6ADA               	clrf	fsr2h,c
 12190  01C78C  006F FF78  F03A    	movff	postinc2,btemp+16
 12191  01C792  006F FF78  F03B    	movff	postinc2,btemp+17
 12192  01C798  006F FF78  F03C    	movff	postinc2,btemp+18
 12193  01C79E  006F FF78  F03D    	movff	postinc2,btemp+19
 12194  01C7A4  006F FF78  F03E    	movff	postinc2,btemp+20
 12195  01C7AA  006F FF78  F03F    	movff	postinc2,btemp+21
 12196  01C7B0  006F FF78  F040    	movff	postinc2,btemp+22
 12197  01C7B6  006F FF78  F041    	movff	postinc2,btemp+23
 12198                           
 12199                           ;stkvar	_tm @ sp[(-2)+-3]
 12200  01C7BC  0EFB               	movlw	-5
 12201  01C7BE  006F FF8C  F034    	movff	plusw1,btemp+10
 12202  01C7C4  0EFC               	movlw	-4
 12203  01C7C6  006F FF8C  F035    	movff	plusw1,btemp+11
 12204  01C7CC  0E12               	movlw	18
 12205  01C7CE  2434               	addwf	(btemp+10)^0,w,c
 12206  01C7D0  6ED9               	movwf	fsr2l,c
 12207  01C7D2  0E00               	movlw	0
 12208  01C7D4  2035               	addwfc	(btemp+11)^0,w,c
 12209  01C7D6  6EDA               	movwf	fsr2h,c
 12210  01C7D8  006F FF78  F032    	movff	postinc2,btemp+8
 12211  01C7DE  006F FF78  F033    	movff	postinc2,btemp+9
 12212  01C7E4  006F FF78  F034    	movff	postinc2,btemp+10
 12213  01C7EA  006F FF78  F035    	movff	postinc2,btemp+11
 12214  01C7F0  0060  F0C8  F042   	movff	btemp+8,btemp+24
 12215  01C7F6  0060  F0CC  F043   	movff	btemp+9,btemp+25
 12216  01C7FC  0060  F0D0  F044   	movff	btemp+10,btemp+26
 12217  01C802  0060  F0D4  F045   	movff	btemp+11,btemp+27
 12218  01C808  6A46               	clrf	(btemp+28)^0,c
 12219  01C80A  BE45               	btfsc	(btemp+27)^0,7,c
 12220  01C80C  6846               	setf	(btemp+28)^0,c
 12221  01C80E  0060  F118  F047   	movff	btemp+28,btemp+29
 12222  01C814  0060  F118  F048   	movff	btemp+28,btemp+30
 12223  01C81A  0060  F118  F049   	movff	btemp+28,btemp+31
 12224  01C820  503A               	movf	(btemp+16)^0,w,c
 12225  01C822  2442               	addwf	(btemp+24)^0,w,c
 12226  01C824  6E32               	movwf	(btemp+8)^0,c
 12227  01C826  503B               	movf	(btemp+17)^0,w,c
 12228  01C828  2043               	addwfc	(btemp+25)^0,w,c
 12229  01C82A  6E33               	movwf	(btemp+9)^0,c
 12230  01C82C  503C               	movf	(btemp+18)^0,w,c
 12231  01C82E  2044               	addwfc	(btemp+26)^0,w,c
 12232  01C830  6E34               	movwf	(btemp+10)^0,c
 12233  01C832  503D               	movf	(btemp+19)^0,w,c
 12234  01C834  2045               	addwfc	(btemp+27)^0,w,c
 12235  01C836  6E35               	movwf	(btemp+11)^0,c
 12236  01C838  503E               	movf	(btemp+20)^0,w,c
 12237  01C83A  2046               	addwfc	(btemp+28)^0,w,c
 12238  01C83C  6E36               	movwf	(btemp+12)^0,c
 12239  01C83E  503F               	movf	(btemp+21)^0,w,c
 12240  01C840  2047               	addwfc	(btemp+29)^0,w,c
 12241  01C842  6E37               	movwf	(btemp+13)^0,c
 12242  01C844  5040               	movf	(btemp+22)^0,w,c
 12243  01C846  2048               	addwfc	(btemp+30)^0,w,c
 12244  01C848  6E38               	movwf	(btemp+14)^0,c
 12245  01C84A  5041               	movf	(btemp+23)^0,w,c
 12246  01C84C  2049               	addwfc	(btemp+31)^0,w,c
 12247  01C84E  6E39               	movwf	(btemp+15)^0,c
 12248  01C850  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 12249  01C856  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 12250  01C85C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12251  01C862  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12252  01C868  0060  F0DB  FFE6   	movff	btemp+12,postinc1
 12253  01C86E  0060  F0DF  FFE6   	movff	btemp+13,postinc1
 12254  01C874  0060  F0E3  FFE6   	movff	btemp+14,postinc1
 12255  01C87A  0060  F0E7  FFE6   	movff	btemp+15,postinc1
 12256  01C880  EC0D  F094         	call	___secs_to_tm	;wreg free
 12257  01C884  BE2D               	btfsc	(btemp+3)^0,7,c
 12258  01C886  D71C               	goto	u16430
 12259                           
 12260                           ;stkvar	_tm @ sp[(0)+-3]
 12261  01C888  0EFD               	movlw	-3
 12262  01C88A  006F FF8C  F02A    	movff	plusw1,btemp
 12263  01C890  0EFE               	movlw	-2
 12264  01C892  006F FF8C  F02B    	movff	plusw1,btemp+1
 12265  01C898                     l3515:
 12266                           
 12267                           ; ___localtime_r: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3,
      +                           argsize = 3, vargsize = 0
 12268  01C898  52E5               	movf	postdec1,f,c
 12269  01C89A  52E5               	movf	postdec1,f,c
 12270  01C89C  52E5               	movf	postdec1,f,c
 12271  01C89E  0012               	return		;funcret
 12272  01C8A0                     __end_of___localtime_r:
 12273                           	opt callstack 0
 12274                           
 12275 ;; *************** function ___secs_to_zone *****************
 12276 ;; Defined at:
 12277 ;;		line 249 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 12278 ;; Parameters:    Size  Location     Type
 12279 ;;  t               8  [STACK] long long 
 12280 ;;  local           2  [STACK] int 
 12281 ;;  isdst           2  [STACK] PTR int 
 12282 ;;		 -> localtime@tm(24), 
 12283 ;;  offset          2  [STACK] PTR long 
 12284 ;;		 -> localtime@tm(24), 
 12285 ;;  oppoff          2  [STACK] PTR long 
 12286 ;;		 -> NULL(0), 
 12287 ;;  zonename        2  [STACK] PTR PTR const unsigned c
 12288 ;;		 -> localtime@tm(24), 
 12289 ;; Auto vars:     Size  Location     Type
 12290 ;;  alt             2  [STACK] unsigned int 
 12291 ;;  i               2    0        unsigned int 
 12292 ;;  y               8  [STACK] long long 
 12293 ;;  t1              8  [STACK] long long 
 12294 ;;  t0              8  [STACK] long long 
 12295 ;; Return value:  Size  Location     Type
 12296 ;;                  1  [STACK] void 
 12297 ;; Registers used:
 12298 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btem
      +p+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btem
      +p+31, tblptrl, tblptrh, tblptru, prodl, prodh
 12299 ;; Tracked objects:
 12300 ;;		On entry : 0/39
 12301 ;;		On exit  : 0/0
 12302 ;;		Unchanged: 0/0
 12303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12308 ;;Total ram usage:        0 bytes
 12309 ;; Hardware stack levels used:    1
 12310 ;; Hardware stack levels required when called:   19
 12311 ;; This function calls:
 12312 ;;		___aodiv
 12313 ;;		___year_to_secs
 12314 ;;		_do_tzset
 12315 ;;		_rule_to_secs
 12316 ;;		_scan_trans
 12317 ;;		_zi_read32
 12318 ;; This function is called by:
 12319 ;;		___localtime_r
 12320 ;; This function uses a reentrant model
 12321 ;;
 12322                           
 12323                           	psect	text38
 12324  015C78                     __ptext38:
 12325                           	opt callstack 0
 12326  015C78                     ___secs_to_zone:
 12327                           	opt callstack 0
 12328                           
 12329                           ; autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 18, argsize = 18 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 12330  015C78  0E18               	movlw	24
 12331  015C7A  26E1               	addwf	fsr1l,f,c
 12332  015C7C  0E00               	movlw	0
 12333  015C7E  22E2               	addwfc	fsr1h,f,c
 12334                           
 12335                           ;incstack = 0
 12336  015C80  ECE4  F0DB         	call	_do_tzset	;wreg free
 12337  015C84  0100               	movlb	0	; () banked
 12338  015C86  51B8               	movf	___daylight& (0+255),w,b
 12339  015C88  11B9               	iorwf	(___daylight+1)& (0+255),w,b
 12340  015C8A  B4D8               	btfsc	status,2,c
 12341  015C8C  D356               	goto	u16210
 12342                           
 12343                           ; BSR set to: 0
 12344  015C8E  0E58               	movlw	88
 12345  015C90  6EE6               	movwf	postinc1,c
 12346  015C92  0E85               	movlw	133
 12347  015C94  6EE6               	movwf	postinc1,c
 12348  015C96  0EE1               	movlw	225
 12349  015C98  6EE6               	movwf	postinc1,c
 12350  015C9A  0E01               	movlw	1
 12351  015C9C  6EE6               	movwf	postinc1,c
 12352  015C9E  0E00               	movlw	0
 12353  015CA0  6EE6               	movwf	postinc1,c
 12354  015CA2  0E00               	movlw	0
 12355  015CA4  6EE6               	movwf	postinc1,c
 12356  015CA6  0E00               	movlw	0
 12357  015CA8  6EE6               	movwf	postinc1,c
 12358  015CAA  0E00               	movlw	0
 12359  015CAC  6EE6               	movwf	postinc1,c
 12360                           
 12361                           ;stkvar	_t @ sp[(-32)+-8]
 12362  015CAE  50E1               	movf	fsr1l,w,c
 12363  015CB0  0FD8               	addlw	-40
 12364  015CB2  6ED9               	movwf	fsr2l,c
 12365  015CB4  50E2               	movf	fsr1h,w,c
 12366  015CB6  6EDA               	movwf	fsr2h,c
 12367  015CB8  0EFF               	movlw	255
 12368  015CBA  22DA               	addwfc	fsr2h,f,c
 12369  015CBC  006F FF7B FFE6     	movff	postinc2,postinc1
 12370  015CC2  006F FF7B FFE6     	movff	postinc2,postinc1
 12371  015CC8  006F FF7B FFE6     	movff	postinc2,postinc1
 12372  015CCE  006F FF7B FFE6     	movff	postinc2,postinc1
 12373  015CD4  006F FF7B FFE6     	movff	postinc2,postinc1
 12374  015CDA  006F FF7B FFE6     	movff	postinc2,postinc1
 12375  015CE0  006F FF7B FFE6     	movff	postinc2,postinc1
 12376  015CE6  006F FF7B FFE6     	movff	postinc2,postinc1
 12377  015CEC  EC64  F0DE         	call	___aodiv	;wreg free
 12378  015CF0  52E5               	movf	postdec1,f,c
 12379  015CF2  006F FF9C  F041    	movff	indf1,btemp+23
 12380  015CF8  52E5               	movf	postdec1,f,c
 12381  015CFA  006F FF9C  F040    	movff	indf1,btemp+22
 12382  015D00  52E5               	movf	postdec1,f,c
 12383  015D02  006F FF9C  F03F    	movff	indf1,btemp+21
 12384  015D08  52E5               	movf	postdec1,f,c
 12385  015D0A  006F FF9C  F03E    	movff	indf1,btemp+20
 12386  015D10  52E5               	movf	postdec1,f,c
 12387  015D12  006F FF9C  F03D    	movff	indf1,btemp+19
 12388  015D18  52E5               	movf	postdec1,f,c
 12389  015D1A  006F FF9C  F03C    	movff	indf1,btemp+18
 12390  015D20  52E5               	movf	postdec1,f,c
 12391  015D22  006F FF9C  F03B    	movff	indf1,btemp+17
 12392  015D28  52E5               	movf	postdec1,f,c
 12393  015D2A  006F FF9C  F03A    	movff	indf1,btemp+16
 12394  015D30  0EF8               	movlw	248
 12395  015D32  26E1               	addwf	fsr1l,f,c
 12396  015D34  0EFF               	movlw	255
 12397  015D36  22E2               	addwfc	fsr1h,f,c
 12398  015D38  0E46               	movlw	70
 12399  015D3A  243A               	addwf	(btemp+16)^0,w,c
 12400  015D3C  6E42               	movwf	(btemp+24)^0,c
 12401  015D3E  0E00               	movlw	0
 12402  015D40  203B               	addwfc	(btemp+17)^0,w,c
 12403  015D42  6E43               	movwf	(btemp+25)^0,c
 12404  015D44  0E00               	movlw	0
 12405  015D46  203C               	addwfc	(btemp+18)^0,w,c
 12406  015D48  6E44               	movwf	(btemp+26)^0,c
 12407  015D4A  0E00               	movlw	0
 12408  015D4C  203D               	addwfc	(btemp+19)^0,w,c
 12409  015D4E  6E45               	movwf	(btemp+27)^0,c
 12410  015D50  0E00               	movlw	0
 12411  015D52  203E               	addwfc	(btemp+20)^0,w,c
 12412  015D54  6E46               	movwf	(btemp+28)^0,c
 12413  015D56  0E00               	movlw	0
 12414  015D58  203F               	addwfc	(btemp+21)^0,w,c
 12415  015D5A  6E47               	movwf	(btemp+29)^0,c
 12416  015D5C  0E00               	movlw	0
 12417  015D5E  2040               	addwfc	(btemp+22)^0,w,c
 12418  015D60  6E48               	movwf	(btemp+30)^0,c
 12419  015D62  0E00               	movlw	0
 12420  015D64  2041               	addwfc	(btemp+23)^0,w,c
 12421  015D66  6E49               	movwf	(btemp+31)^0,c
 12422                           
 12423                           ;stkvar	_y @ sp[(-24)+0]
 12424  015D68  0EE8               	movlw	-24
 12425  015D6A  0060  F10B  FFE3   	movff	btemp+24,plusw1
 12426  015D70  0EE9               	movlw	-23
 12427  015D72  0060  F10F  FFE3   	movff	btemp+25,plusw1
 12428  015D78  0EEA               	movlw	-22
 12429  015D7A  0060  F113  FFE3   	movff	btemp+26,plusw1
 12430  015D80  0EEB               	movlw	-21
 12431  015D82  0060  F117  FFE3   	movff	btemp+27,plusw1
 12432  015D88  0EEC               	movlw	-20
 12433  015D8A  0060  F11B  FFE3   	movff	btemp+28,plusw1
 12434  015D90  0EED               	movlw	-19
 12435  015D92  0060  F11F  FFE3   	movff	btemp+29,plusw1
 12436  015D98  0EEE               	movlw	-18
 12437  015D9A  0060  F123  FFE3   	movff	btemp+30,plusw1
 12438  015DA0  0EEF               	movlw	-17
 12439  015DA2  0060  F127  FFE3   	movff	btemp+31,plusw1
 12440  015DA8  D010               	goto	l16606
 12441  015DAA                     l16604:
 12442                           
 12443                           ;stkvar	_y @ sp[(-24)+0]
 12444  015DAA  50E1               	movf	fsr1l,w,c
 12445  015DAC  0FE8               	addlw	-24
 12446  015DAE  6ED9               	movwf	fsr2l,c
 12447  015DB0  50E2               	movf	fsr1h,w,c
 12448  015DB2  6EDA               	movwf	fsr2h,c
 12449  015DB4  0EFF               	movlw	255
 12450  015DB6  22DA               	addwfc	fsr2h,f,c
 12451  015DB8  06DE               	decf	postinc2,f,c
 12452  015DBA  0E00               	movlw	0
 12453  015DBC  5ADE               	subwfb	postinc2,f,c
 12454  015DBE  5ADE               	subwfb	postinc2,f,c
 12455  015DC0  5ADE               	subwfb	postinc2,f,c
 12456  015DC2  5ADE               	subwfb	postinc2,f,c
 12457  015DC4  5ADE               	subwfb	postinc2,f,c
 12458  015DC6  5ADE               	subwfb	postinc2,f,c
 12459  015DC8  5ADE               	subwfb	postinc2,f,c
 12460  015DCA                     l16606:
 12461  015DCA  0E00               	movlw	0
 12462  015DCC  6EE6               	movwf	postinc1,c
 12463  015DCE  0E00               	movlw	0
 12464  015DD0  6EE6               	movwf	postinc1,c
 12465                           
 12466                           ;stkvar	_y @ sp[(-26)+0]
 12467  015DD2  50E1               	movf	fsr1l,w,c
 12468  015DD4  0FE6               	addlw	-26
 12469  015DD6  6ED9               	movwf	fsr2l,c
 12470  015DD8  50E2               	movf	fsr1h,w,c
 12471  015DDA  6EDA               	movwf	fsr2h,c
 12472  015DDC  0EFF               	movlw	255
 12473  015DDE  22DA               	addwfc	fsr2h,f,c
 12474  015DE0  006F FF7B FFE6     	movff	postinc2,postinc1
 12475  015DE6  006F FF7B FFE6     	movff	postinc2,postinc1
 12476  015DEC  006F FF7B FFE6     	movff	postinc2,postinc1
 12477  015DF2  006F FF7B FFE6     	movff	postinc2,postinc1
 12478  015DF8  006F FF7B FFE6     	movff	postinc2,postinc1
 12479  015DFE  006F FF7B FFE6     	movff	postinc2,postinc1
 12480  015E04  006F FF7B FFE6     	movff	postinc2,postinc1
 12481  015E0A  006F FF7B FFE6     	movff	postinc2,postinc1
 12482  015E10  EC83  F0A9         	call	___year_to_secs	;wreg free
 12483  015E14  52E5               	movf	postdec1,f,c
 12484  015E16  006F FF9C  F041    	movff	indf1,btemp+23
 12485  015E1C  52E5               	movf	postdec1,f,c
 12486  015E1E  006F FF9C  F040    	movff	indf1,btemp+22
 12487  015E24  52E5               	movf	postdec1,f,c
 12488  015E26  006F FF9C  F03F    	movff	indf1,btemp+21
 12489  015E2C  52E5               	movf	postdec1,f,c
 12490  015E2E  006F FF9C  F03E    	movff	indf1,btemp+20
 12491  015E34  52E5               	movf	postdec1,f,c
 12492  015E36  006F FF9C  F03D    	movff	indf1,btemp+19
 12493  015E3C  52E5               	movf	postdec1,f,c
 12494  015E3E  006F FF9C  F03C    	movff	indf1,btemp+18
 12495  015E44  52E5               	movf	postdec1,f,c
 12496  015E46  006F FF9C  F03B    	movff	indf1,btemp+17
 12497  015E4C  52E5               	movf	postdec1,f,c
 12498  015E4E  006F FF9C  F03A    	movff	indf1,btemp+16
 12499  015E54  52E5               	movf	postdec1,f,c
 12500  015E56  52E5               	movf	postdec1,f,c
 12501                           
 12502                           ;stkvar	_t @ sp[(-24)+-8]
 12503  015E58  0EE0               	movlw	-32
 12504  015E5A  006F FF8C  F02A    	movff	plusw1,btemp
 12505  015E60  503A               	movf	(btemp+16)^0,w,c
 12506  015E62  5C2A               	subwf	btemp^0,w,c
 12507  015E64  0EE1               	movlw	-31
 12508  015E66  006F FF8C  F02A    	movff	plusw1,btemp
 12509  015E6C  503B               	movf	(btemp+17)^0,w,c
 12510  015E6E  582A               	subwfb	btemp^0,w,c
 12511  015E70  0EE2               	movlw	-30
 12512  015E72  006F FF8C  F02A    	movff	plusw1,btemp
 12513  015E78  503C               	movf	(btemp+18)^0,w,c
 12514  015E7A  582A               	subwfb	btemp^0,w,c
 12515  015E7C  0EE3               	movlw	-29
 12516  015E7E  006F FF8C  F02A    	movff	plusw1,btemp
 12517  015E84  503D               	movf	(btemp+19)^0,w,c
 12518  015E86  582A               	subwfb	btemp^0,w,c
 12519  015E88  0EE4               	movlw	-28
 12520  015E8A  006F FF8C  F02A    	movff	plusw1,btemp
 12521  015E90  503E               	movf	(btemp+20)^0,w,c
 12522  015E92  582A               	subwfb	btemp^0,w,c
 12523  015E94  0EE5               	movlw	-27
 12524  015E96  006F FF8C  F02A    	movff	plusw1,btemp
 12525  015E9C  503F               	movf	(btemp+21)^0,w,c
 12526  015E9E  582A               	subwfb	btemp^0,w,c
 12527  015EA0  0EE6               	movlw	-26
 12528  015EA2  006F FF8C  F02A    	movff	plusw1,btemp
 12529  015EA8  5040               	movf	(btemp+22)^0,w,c
 12530  015EAA  582A               	subwfb	btemp^0,w,c
 12531  015EAC  0EE7               	movlw	-25
 12532  015EAE  50E3               	movf	plusw1,w,c
 12533  015EB0  0A80               	xorlw	128
 12534  015EB2  6E2A               	movwf	btemp^0,c
 12535  015EB4  5041               	movf	(btemp+23)^0,w,c
 12536  015EB6  0A80               	xorlw	128
 12537  015EB8  582A               	subwfb	btemp^0,w,c
 12538  015EBA  B0D8               	btfsc	status,0,c
 12539  015EBC  D011               	goto	l16610
 12540  015EBE  D775               	goto	l16604
 12541  015EC0                     l16608:
 12542                           
 12543                           ;stkvar	_y @ sp[(-24)+0]
 12544  015EC0  50E1               	movf	fsr1l,w,c
 12545  015EC2  0FE8               	addlw	-24
 12546  015EC4  6ED9               	movwf	fsr2l,c
 12547  015EC6  50E2               	movf	fsr1h,w,c
 12548  015EC8  6EDA               	movwf	fsr2h,c
 12549  015ECA  0EFF               	movlw	255
 12550  015ECC  22DA               	addwfc	fsr2h,f,c
 12551  015ECE  2ADE               	incf	postinc2,f,c
 12552  015ED0  0E00               	movlw	0
 12553  015ED2  22DE               	addwfc	postinc2,f,c
 12554  015ED4  22DE               	addwfc	postinc2,f,c
 12555  015ED6  22DE               	addwfc	postinc2,f,c
 12556  015ED8  22DE               	addwfc	postinc2,f,c
 12557  015EDA  22DE               	addwfc	postinc2,f,c
 12558  015EDC  22DE               	addwfc	postinc2,f,c
 12559  015EDE  22DE               	addwfc	postinc2,f,c
 12560  015EE0                     l16610:
 12561                           
 12562                           ;stkvar	_t @ sp[(-24)+-8]
 12563  015EE0  0E00               	movlw	0
 12564  015EE2  6EE6               	movwf	postinc1,c
 12565  015EE4  0E00               	movlw	0
 12566  015EE6  6EE6               	movwf	postinc1,c
 12567                           
 12568                           ;stkvar	_y @ sp[(-26)+0]
 12569  015EE8  0EE6               	movlw	-26
 12570  015EEA  50E3               	movf	plusw1,w,c
 12571  015EEC  0F01               	addlw	1
 12572  015EEE  6E3A               	movwf	(btemp+16)^0,c
 12573  015EF0  0EE7               	movlw	-25
 12574  015EF2  006F FF8C  F03B    	movff	plusw1,btemp+17
 12575  015EF8  0E00               	movlw	0
 12576  015EFA  223B               	addwfc	(btemp+17)^0,f,c
 12577  015EFC  0EE8               	movlw	-24
 12578  015EFE  006F FF8C  F03C    	movff	plusw1,btemp+18
 12579  015F04  0E00               	movlw	0
 12580  015F06  223C               	addwfc	(btemp+18)^0,f,c
 12581  015F08  0EE9               	movlw	-23
 12582  015F0A  006F FF8C  F03D    	movff	plusw1,btemp+19
 12583  015F10  0E00               	movlw	0
 12584  015F12  223D               	addwfc	(btemp+19)^0,f,c
 12585  015F14  0EEA               	movlw	-22
 12586  015F16  006F FF8C  F03E    	movff	plusw1,btemp+20
 12587  015F1C  0E00               	movlw	0
 12588  015F1E  223E               	addwfc	(btemp+20)^0,f,c
 12589  015F20  0EEB               	movlw	-21
 12590  015F22  006F FF8C  F03F    	movff	plusw1,btemp+21
 12591  015F28  0E00               	movlw	0
 12592  015F2A  223F               	addwfc	(btemp+21)^0,f,c
 12593  015F2C  0EEC               	movlw	-20
 12594  015F2E  006F FF8C  F040    	movff	plusw1,btemp+22
 12595  015F34  0E00               	movlw	0
 12596  015F36  2240               	addwfc	(btemp+22)^0,f,c
 12597  015F38  0EED               	movlw	-19
 12598  015F3A  006F FF8C  F041    	movff	plusw1,btemp+23
 12599  015F40  0E00               	movlw	0
 12600  015F42  2241               	addwfc	(btemp+23)^0,f,c
 12601  015F44  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 12602  015F4A  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 12603  015F50  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 12604  015F56  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 12605  015F5C  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 12606  015F62  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 12607  015F68  0060  F103  FFE6   	movff	btemp+22,postinc1
 12608  015F6E  0060  F107  FFE6   	movff	btemp+23,postinc1
 12609  015F74  EC83  F0A9         	call	___year_to_secs	;wreg free
 12610  015F78  52E5               	movf	postdec1,f,c
 12611  015F7A  006F FF9C  F041    	movff	indf1,btemp+23
 12612  015F80  52E5               	movf	postdec1,f,c
 12613  015F82  006F FF9C  F040    	movff	indf1,btemp+22
 12614  015F88  52E5               	movf	postdec1,f,c
 12615  015F8A  006F FF9C  F03F    	movff	indf1,btemp+21
 12616  015F90  52E5               	movf	postdec1,f,c
 12617  015F92  006F FF9C  F03E    	movff	indf1,btemp+20
 12618  015F98  52E5               	movf	postdec1,f,c
 12619  015F9A  006F FF9C  F03D    	movff	indf1,btemp+19
 12620  015FA0  52E5               	movf	postdec1,f,c
 12621  015FA2  006F FF9C  F03C    	movff	indf1,btemp+18
 12622  015FA8  52E5               	movf	postdec1,f,c
 12623  015FAA  006F FF9C  F03B    	movff	indf1,btemp+17
 12624  015FB0  52E5               	movf	postdec1,f,c
 12625  015FB2  006F FF9C  F03A    	movff	indf1,btemp+16
 12626  015FB8  52E5               	movf	postdec1,f,c
 12627  015FBA  52E5               	movf	postdec1,f,c
 12628  015FBC  0EE0               	movlw	-32
 12629  015FBE  50E3               	movf	plusw1,w,c
 12630  015FC0  5C3A               	subwf	(btemp+16)^0,w,c
 12631  015FC2  0EE1               	movlw	-31
 12632  015FC4  50E3               	movf	plusw1,w,c
 12633  015FC6  583B               	subwfb	(btemp+17)^0,w,c
 12634  015FC8  0EE2               	movlw	-30
 12635  015FCA  50E3               	movf	plusw1,w,c
 12636  015FCC  583C               	subwfb	(btemp+18)^0,w,c
 12637  015FCE  0EE3               	movlw	-29
 12638  015FD0  50E3               	movf	plusw1,w,c
 12639  015FD2  583D               	subwfb	(btemp+19)^0,w,c
 12640  015FD4  0EE4               	movlw	-28
 12641  015FD6  50E3               	movf	plusw1,w,c
 12642  015FD8  583E               	subwfb	(btemp+20)^0,w,c
 12643  015FDA  0EE5               	movlw	-27
 12644  015FDC  50E3               	movf	plusw1,w,c
 12645  015FDE  583F               	subwfb	(btemp+21)^0,w,c
 12646  015FE0  0EE6               	movlw	-26
 12647  015FE2  50E3               	movf	plusw1,w,c
 12648  015FE4  5840               	subwfb	(btemp+22)^0,w,c
 12649  015FE6  5041               	movf	(btemp+23)^0,w,c
 12650  015FE8  0A80               	xorlw	128
 12651  015FEA  6E2A               	movwf	btemp^0,c
 12652  015FEC  0EE7               	movlw	-25
 12653  015FEE  50E3               	movf	plusw1,w,c
 12654  015FF0  0A80               	xorlw	128
 12655  015FF2  582A               	subwfb	btemp^0,w,c
 12656  015FF4  A0D8               	btfss	status,0,c
 12657  015FF6  D764               	goto	l16608
 12658                           
 12659                           ;stkvar	_y @ sp[(-24)+0]
 12660  015FF8  0EE8               	movlw	-24
 12661  015FFA  006F FF8F FFE6     	movff	plusw1,postinc1
 12662  016000  006F FF8F FFE6     	movff	plusw1,postinc1
 12663  016006  0EE5               	movlw	low _r0
 12664  016008  6EE6               	movwf	postinc1,c
 12665  01600A  0E01               	movlw	high _r0
 12666  01600C  6EE6               	movwf	postinc1,c
 12667  01600E  EC80  F0BA         	call	_rule_to_secs	;wreg free
 12668  016012  52E5               	movf	postdec1,f,c
 12669  016014  006F FF9C  F041    	movff	indf1,btemp+23
 12670  01601A  52E5               	movf	postdec1,f,c
 12671  01601C  006F FF9C  F040    	movff	indf1,btemp+22
 12672  016022  52E5               	movf	postdec1,f,c
 12673  016024  006F FF9C  F03F    	movff	indf1,btemp+21
 12674  01602A  52E5               	movf	postdec1,f,c
 12675  01602C  006F FF9C  F03E    	movff	indf1,btemp+20
 12676  016032  52E5               	movf	postdec1,f,c
 12677  016034  006F FF9C  F03D    	movff	indf1,btemp+19
 12678  01603A  52E5               	movf	postdec1,f,c
 12679  01603C  006F FF9C  F03C    	movff	indf1,btemp+18
 12680  016042  52E5               	movf	postdec1,f,c
 12681  016044  006F FF9C  F03B    	movff	indf1,btemp+17
 12682  01604A  52E5               	movf	postdec1,f,c
 12683  01604C  006F FF9C  F03A    	movff	indf1,btemp+16
 12684                           
 12685                           ;stkvar	_t0 @ sp[(-24)+16]
 12686  016052  0EF8               	movlw	-8
 12687  016054  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 12688  01605A  0EF9               	movlw	-7
 12689  01605C  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 12690  016062  0EFA               	movlw	-6
 12691  016064  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 12692  01606A  0EFB               	movlw	-5
 12693  01606C  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 12694  016072  0EFC               	movlw	-4
 12695  016074  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 12696  01607A  0EFD               	movlw	-3
 12697  01607C  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 12698  016082  0EFE               	movlw	-2
 12699  016084  0060  F103  FFE3   	movff	btemp+22,plusw1
 12700  01608A  0EFF               	movlw	-1
 12701  01608C  0060  F107  FFE3   	movff	btemp+23,plusw1
 12702                           
 12703                           ;stkvar	_y @ sp[(-24)+0]
 12704  016092  0EE8               	movlw	-24
 12705  016094  006F FF8F FFE6     	movff	plusw1,postinc1
 12706  01609A  006F FF8F FFE6     	movff	plusw1,postinc1
 12707  0160A0  0EDB               	movlw	low _r1
 12708  0160A2  6EE6               	movwf	postinc1,c
 12709  0160A4  0E01               	movlw	high _r1
 12710  0160A6  6EE6               	movwf	postinc1,c
 12711  0160A8  EC80  F0BA         	call	_rule_to_secs	;wreg free
 12712  0160AC  52E5               	movf	postdec1,f,c
 12713  0160AE  006F FF9C  F041    	movff	indf1,btemp+23
 12714  0160B4  52E5               	movf	postdec1,f,c
 12715  0160B6  006F FF9C  F040    	movff	indf1,btemp+22
 12716  0160BC  52E5               	movf	postdec1,f,c
 12717  0160BE  006F FF9C  F03F    	movff	indf1,btemp+21
 12718  0160C4  52E5               	movf	postdec1,f,c
 12719  0160C6  006F FF9C  F03E    	movff	indf1,btemp+20
 12720  0160CC  52E5               	movf	postdec1,f,c
 12721  0160CE  006F FF9C  F03D    	movff	indf1,btemp+19
 12722  0160D4  52E5               	movf	postdec1,f,c
 12723  0160D6  006F FF9C  F03C    	movff	indf1,btemp+18
 12724  0160DC  52E5               	movf	postdec1,f,c
 12725  0160DE  006F FF9C  F03B    	movff	indf1,btemp+17
 12726  0160E4  52E5               	movf	postdec1,f,c
 12727  0160E6  006F FF9C  F03A    	movff	indf1,btemp+16
 12728                           
 12729                           ;stkvar	_t1 @ sp[(-24)+8]
 12730  0160EC  0EF0               	movlw	-16
 12731  0160EE  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 12732  0160F4  0EF1               	movlw	-15
 12733  0160F6  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 12734  0160FC  0EF2               	movlw	-14
 12735  0160FE  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 12736  016104  0EF3               	movlw	-13
 12737  016106  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 12738  01610C  0EF4               	movlw	-12
 12739  01610E  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 12740  016114  0EF5               	movlw	-11
 12741  016116  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 12742  01611C  0EF6               	movlw	-10
 12743  01611E  0060  F103  FFE3   	movff	btemp+22,plusw1
 12744  016124  0EF7               	movlw	-9
 12745  016126  0060  F107  FFE3   	movff	btemp+23,plusw1
 12746                           
 12747                           ;stkvar	_local @ sp[(-24)+-10]
 12748  01612C  0EDE               	movlw	-34
 12749  01612E  006F FF8C  F02A    	movff	plusw1,btemp
 12750  016134  0EDF               	movlw	-33
 12751  016136  50E3               	movf	plusw1,w,c
 12752  016138  102A               	iorwf	btemp^0,w,c
 12753  01613A  A4D8               	btfss	status,2,c
 12754  01613C  D044               	goto	l16620
 12755  01613E  0060  F1C0  F03A   	movff	___timezone,btemp+16
 12756  016144  0060  F1C4  F03B   	movff	___timezone+1,btemp+17
 12757  01614A  0060  F1C8  F03C   	movff	___timezone+2,btemp+18
 12758  016150  0060  F1CC  F03D   	movff	___timezone+3,btemp+19
 12759  016156  6A3E               	clrf	(btemp+20)^0,c
 12760  016158  BE3D               	btfsc	(btemp+19)^0,7,c
 12761  01615A  683E               	setf	(btemp+20)^0,c
 12762  01615C  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 12763  016162  0060  F0F8  F040   	movff	btemp+20,btemp+22
 12764  016168  0060  F0F8  F041   	movff	btemp+20,btemp+23
 12765                           
 12766                           ;stkvar	_t0 @ sp[(-24)+16]
 12767  01616E  50E1               	movf	fsr1l,w,c
 12768  016170  0FF8               	addlw	-8
 12769  016172  6ED9               	movwf	fsr2l,c
 12770  016174  50E2               	movf	fsr1h,w,c
 12771  016176  6EDA               	movwf	fsr2h,c
 12772  016178  0EFF               	movlw	255
 12773  01617A  22DA               	addwfc	fsr2h,f,c
 12774  01617C  503A               	movf	(btemp+16)^0,w,c
 12775  01617E  26DE               	addwf	postinc2,f,c
 12776  016180  503B               	movf	(btemp+17)^0,w,c
 12777  016182  22DE               	addwfc	postinc2,f,c
 12778  016184  503C               	movf	(btemp+18)^0,w,c
 12779  016186  22DE               	addwfc	postinc2,f,c
 12780  016188  503D               	movf	(btemp+19)^0,w,c
 12781  01618A  22DE               	addwfc	postinc2,f,c
 12782  01618C  503E               	movf	(btemp+20)^0,w,c
 12783  01618E  22DE               	addwfc	postinc2,f,c
 12784  016190  503F               	movf	(btemp+21)^0,w,c
 12785  016192  22DE               	addwfc	postinc2,f,c
 12786  016194  5040               	movf	(btemp+22)^0,w,c
 12787  016196  22DE               	addwfc	postinc2,f,c
 12788  016198  5041               	movf	(btemp+23)^0,w,c
 12789  01619A  22DE               	addwfc	postinc2,f,c
 12790                           
 12791                           ;stkvar	_t1 @ sp[(-24)+8]
 12792  01619C  50E1               	movf	fsr1l,w,c
 12793  01619E  0FF0               	addlw	-16
 12794  0161A0  6ED9               	movwf	fsr2l,c
 12795  0161A2  50E2               	movf	fsr1h,w,c
 12796  0161A4  6EDA               	movwf	fsr2h,c
 12797  0161A6  0EFF               	movlw	255
 12798  0161A8  22DA               	addwfc	fsr2h,f,c
 12799  0161AA  0100               	movlb	0	; () banked
 12800  0161AC  51B6               	movf	_dst_off& (0+255),w,b
 12801  0161AE  26DE               	addwf	postinc2,f,c
 12802  0161B0  51B7               	movf	(_dst_off+1)& (0+255),w,b
 12803  0161B2  22DE               	addwfc	postinc2,f,c
 12804  0161B4  0E00               	movlw	0
 12805  0161B6  BFB7               	btfsc	(_dst_off+1)& (0+255),7,b
 12806  0161B8  0EFF               	movlw	255
 12807  0161BA  22DE               	addwfc	postinc2,f,c
 12808  0161BC  22DE               	addwfc	postinc2,f,c
 12809  0161BE  22DE               	addwfc	postinc2,f,c
 12810  0161C0  22DE               	addwfc	postinc2,f,c
 12811  0161C2  22DE               	addwfc	postinc2,f,c
 12812  0161C4  22DE               	addwfc	postinc2,f,c
 12813  0161C6                     l16620:
 12814                           
 12815                           ;stkvar	_t1 @ sp[(-24)+8]
 12816                           ;stkvar	_t0 @ sp[(-24)+16]
 12817  0161C6  50E1               	movf	fsr1l,w,c
 12818  0161C8  0FF8               	addlw	-8
 12819  0161CA  6ED9               	movwf	fsr2l,c
 12820  0161CC  50E2               	movf	fsr1h,w,c
 12821  0161CE  6EDA               	movwf	fsr2h,c
 12822  0161D0  0EFF               	movlw	255
 12823  0161D2  22DA               	addwfc	fsr2h,f,c
 12824  0161D4  0EF0               	movlw	-16
 12825  0161D6  50E3               	movf	plusw1,w,c
 12826  0161D8  5CDE               	subwf	postinc2,w,c
 12827  0161DA  0EF1               	movlw	-15
 12828  0161DC  50E3               	movf	plusw1,w,c
 12829  0161DE  58DE               	subwfb	postinc2,w,c
 12830  0161E0  0EF2               	movlw	-14
 12831  0161E2  50E3               	movf	plusw1,w,c
 12832  0161E4  58DE               	subwfb	postinc2,w,c
 12833  0161E6  0EF3               	movlw	-13
 12834  0161E8  50E3               	movf	plusw1,w,c
 12835  0161EA  58DE               	subwfb	postinc2,w,c
 12836  0161EC  0EF4               	movlw	-12
 12837  0161EE  50E3               	movf	plusw1,w,c
 12838  0161F0  58DE               	subwfb	postinc2,w,c
 12839  0161F2  0EF5               	movlw	-11
 12840  0161F4  50E3               	movf	plusw1,w,c
 12841  0161F6  58DE               	subwfb	postinc2,w,c
 12842  0161F8  0EF6               	movlw	-10
 12843  0161FA  50E3               	movf	plusw1,w,c
 12844  0161FC  58DE               	subwfb	postinc2,w,c
 12845  0161FE  50DE               	movf	postinc2,w,c
 12846  016200  0A80               	xorlw	128
 12847  016202  6E2A               	movwf	btemp^0,c
 12848  016204  0EF7               	movlw	-9
 12849  016206  50E3               	movf	plusw1,w,c
 12850  016208  0A80               	xorlw	128
 12851  01620A  582A               	subwfb	btemp^0,w,c
 12852  01620C  B0D8               	btfsc	status,0,c
 12853  01620E  D04B               	goto	l16630
 12854                           
 12855                           ;stkvar	_t0 @ sp[(-24)+16]
 12856                           ;stkvar	_t @ sp[(-24)+-8]
 12857  016210  50E1               	movf	fsr1l,w,c
 12858  016212  0FE0               	addlw	-32
 12859  016214  6ED9               	movwf	fsr2l,c
 12860  016216  50E2               	movf	fsr1h,w,c
 12861  016218  6EDA               	movwf	fsr2h,c
 12862  01621A  0EFF               	movlw	255
 12863  01621C  22DA               	addwfc	fsr2h,f,c
 12864  01621E  0EF8               	movlw	-8
 12865  016220  50E3               	movf	plusw1,w,c
 12866  016222  5CDE               	subwf	postinc2,w,c
 12867  016224  0EF9               	movlw	-7
 12868  016226  50E3               	movf	plusw1,w,c
 12869  016228  58DE               	subwfb	postinc2,w,c
 12870  01622A  0EFA               	movlw	-6
 12871  01622C  50E3               	movf	plusw1,w,c
 12872  01622E  58DE               	subwfb	postinc2,w,c
 12873  016230  0EFB               	movlw	-5
 12874  016232  50E3               	movf	plusw1,w,c
 12875  016234  58DE               	subwfb	postinc2,w,c
 12876  016236  0EFC               	movlw	-4
 12877  016238  50E3               	movf	plusw1,w,c
 12878  01623A  58DE               	subwfb	postinc2,w,c
 12879  01623C  0EFD               	movlw	-3
 12880  01623E  50E3               	movf	plusw1,w,c
 12881  016240  58DE               	subwfb	postinc2,w,c
 12882  016242  0EFE               	movlw	-2
 12883  016244  50E3               	movf	plusw1,w,c
 12884  016246  58DE               	subwfb	postinc2,w,c
 12885  016248  50DE               	movf	postinc2,w,c
 12886  01624A  0A80               	xorlw	128
 12887  01624C  6E2A               	movwf	btemp^0,c
 12888  01624E  0EFF               	movlw	-1
 12889  016250  50E3               	movf	plusw1,w,c
 12890  016252  0A80               	xorlw	128
 12891  016254  582A               	subwfb	btemp^0,w,c
 12892  016256  A0D8               	btfss	status,0,c
 12893  016258  D070               	goto	u16210
 12894                           
 12895                           ;stkvar	_t1 @ sp[(-24)+8]
 12896                           ;stkvar	_t @ sp[(-24)+-8]
 12897  01625A  50E1               	movf	fsr1l,w,c
 12898  01625C  0FE0               	addlw	-32
 12899  01625E  6ED9               	movwf	fsr2l,c
 12900  016260  50E2               	movf	fsr1h,w,c
 12901  016262  6EDA               	movwf	fsr2h,c
 12902  016264  0EFF               	movlw	255
 12903  016266  22DA               	addwfc	fsr2h,f,c
 12904  016268  0EF0               	movlw	-16
 12905  01626A  50E3               	movf	plusw1,w,c
 12906  01626C  5CDE               	subwf	postinc2,w,c
 12907  01626E  0EF1               	movlw	-15
 12908  016270  50E3               	movf	plusw1,w,c
 12909  016272  58DE               	subwfb	postinc2,w,c
 12910  016274  0EF2               	movlw	-14
 12911  016276  50E3               	movf	plusw1,w,c
 12912  016278  58DE               	subwfb	postinc2,w,c
 12913  01627A  0EF3               	movlw	-13
 12914  01627C  50E3               	movf	plusw1,w,c
 12915  01627E  58DE               	subwfb	postinc2,w,c
 12916  016280  0EF4               	movlw	-12
 12917  016282  50E3               	movf	plusw1,w,c
 12918  016284  58DE               	subwfb	postinc2,w,c
 12919  016286  0EF5               	movlw	-11
 12920  016288  50E3               	movf	plusw1,w,c
 12921  01628A  58DE               	subwfb	postinc2,w,c
 12922  01628C  0EF6               	movlw	-10
 12923  01628E  50E3               	movf	plusw1,w,c
 12924  016290  58DE               	subwfb	postinc2,w,c
 12925  016292  50DE               	movf	postinc2,w,c
 12926  016294  0A80               	xorlw	128
 12927  016296  6E2A               	movwf	btemp^0,c
 12928  016298  0EF7               	movlw	-9
 12929  01629A  50E3               	movf	plusw1,w,c
 12930  01629C  0A80               	xorlw	128
 12931  01629E  582A               	subwfb	btemp^0,w,c
 12932  0162A0  A0D8               	btfss	status,0,c
 12933  0162A2  D0C1               	goto	l16648
 12934  0162A4  D04A               	goto	u16210
 12935  0162A6                     l16630:
 12936                           
 12937                           ;stkvar	_t1 @ sp[(-24)+8]
 12938                           ;stkvar	_t @ sp[(-24)+-8]
 12939  0162A6  50E1               	movf	fsr1l,w,c
 12940  0162A8  0FE0               	addlw	-32
 12941  0162AA  6ED9               	movwf	fsr2l,c
 12942  0162AC  50E2               	movf	fsr1h,w,c
 12943  0162AE  6EDA               	movwf	fsr2h,c
 12944  0162B0  0EFF               	movlw	255
 12945  0162B2  22DA               	addwfc	fsr2h,f,c
 12946  0162B4  0EF0               	movlw	-16
 12947  0162B6  50E3               	movf	plusw1,w,c
 12948  0162B8  5CDE               	subwf	postinc2,w,c
 12949  0162BA  0EF1               	movlw	-15
 12950  0162BC  50E3               	movf	plusw1,w,c
 12951  0162BE  58DE               	subwfb	postinc2,w,c
 12952  0162C0  0EF2               	movlw	-14
 12953  0162C2  50E3               	movf	plusw1,w,c
 12954  0162C4  58DE               	subwfb	postinc2,w,c
 12955  0162C6  0EF3               	movlw	-13
 12956  0162C8  50E3               	movf	plusw1,w,c
 12957  0162CA  58DE               	subwfb	postinc2,w,c
 12958  0162CC  0EF4               	movlw	-12
 12959  0162CE  50E3               	movf	plusw1,w,c
 12960  0162D0  58DE               	subwfb	postinc2,w,c
 12961  0162D2  0EF5               	movlw	-11
 12962  0162D4  50E3               	movf	plusw1,w,c
 12963  0162D6  58DE               	subwfb	postinc2,w,c
 12964  0162D8  0EF6               	movlw	-10
 12965  0162DA  50E3               	movf	plusw1,w,c
 12966  0162DC  58DE               	subwfb	postinc2,w,c
 12967  0162DE  50DE               	movf	postinc2,w,c
 12968  0162E0  0A80               	xorlw	128
 12969  0162E2  6E2A               	movwf	btemp^0,c
 12970  0162E4  0EF7               	movlw	-9
 12971  0162E6  50E3               	movf	plusw1,w,c
 12972  0162E8  0A80               	xorlw	128
 12973  0162EA  582A               	subwfb	btemp^0,w,c
 12974  0162EC  A0D8               	btfss	status,0,c
 12975  0162EE  D09B               	goto	l16648
 12976                           
 12977                           ;stkvar	_t0 @ sp[(-24)+16]
 12978                           ;stkvar	_t @ sp[(-24)+-8]
 12979  0162F0  50E1               	movf	fsr1l,w,c
 12980  0162F2  0FE0               	addlw	-32
 12981  0162F4  6ED9               	movwf	fsr2l,c
 12982  0162F6  50E2               	movf	fsr1h,w,c
 12983  0162F8  6EDA               	movwf	fsr2h,c
 12984  0162FA  0EFF               	movlw	255
 12985  0162FC  22DA               	addwfc	fsr2h,f,c
 12986  0162FE  0EF8               	movlw	-8
 12987  016300  50E3               	movf	plusw1,w,c
 12988  016302  5CDE               	subwf	postinc2,w,c
 12989  016304  0EF9               	movlw	-7
 12990  016306  50E3               	movf	plusw1,w,c
 12991  016308  58DE               	subwfb	postinc2,w,c
 12992  01630A  0EFA               	movlw	-6
 12993  01630C  50E3               	movf	plusw1,w,c
 12994  01630E  58DE               	subwfb	postinc2,w,c
 12995  016310  0EFB               	movlw	-5
 12996  016312  50E3               	movf	plusw1,w,c
 12997  016314  58DE               	subwfb	postinc2,w,c
 12998  016316  0EFC               	movlw	-4
 12999  016318  50E3               	movf	plusw1,w,c
 13000  01631A  58DE               	subwfb	postinc2,w,c
 13001  01631C  0EFD               	movlw	-3
 13002  01631E  50E3               	movf	plusw1,w,c
 13003  016320  58DE               	subwfb	postinc2,w,c
 13004  016322  0EFE               	movlw	-2
 13005  016324  50E3               	movf	plusw1,w,c
 13006  016326  58DE               	subwfb	postinc2,w,c
 13007  016328  50DE               	movf	postinc2,w,c
 13008  01632A  0A80               	xorlw	128
 13009  01632C  6E2A               	movwf	btemp^0,c
 13010  01632E  0EFF               	movlw	-1
 13011  016330  50E3               	movf	plusw1,w,c
 13012  016332  0A80               	xorlw	128
 13013  016334  582A               	subwfb	btemp^0,w,c
 13014  016336  B0D8               	btfsc	status,0,c
 13015  016338  D076               	goto	l16648
 13016  01633A                     u16210:
 13017                           
 13018                           ;stkvar	_isdst @ sp[(-24)+-12]
 13019  01633A  0EDC               	movlw	-36
 13020  01633C  006F FF8F FFD9     	movff	plusw1,fsr2l
 13021  016342  0EDD               	movlw	-35
 13022  016344  006F FF8F FFDA     	movff	plusw1,fsr2h
 13023  01634A  0E00               	movlw	0
 13024  01634C  6EDE               	movwf	postinc2,c
 13025  01634E  0E00               	movlw	0
 13026  016350  6EDD               	movwf	postdec2,c
 13027  016352  0060  F1C0  F032   	movff	___timezone,btemp+8
 13028  016358  0060  F1C4  F033   	movff	___timezone+1,btemp+9
 13029  01635E  0060  F1C8  F034   	movff	___timezone+2,btemp+10
 13030  016364  0060  F1CC  F035   	movff	___timezone+3,btemp+11
 13031  01636A  1E32               	comf	(btemp+8)^0,f,c
 13032  01636C  1E33               	comf	(btemp+9)^0,f,c
 13033  01636E  1E34               	comf	(btemp+10)^0,f,c
 13034  016370  1E35               	comf	(btemp+11)^0,f,c
 13035  016372  2A32               	incf	(btemp+8)^0,f,c
 13036  016374  0E00               	movlw	0
 13037  016376  2233               	addwfc	(btemp+9)^0,f,c
 13038  016378  2234               	addwfc	(btemp+10)^0,f,c
 13039  01637A  2235               	addwfc	(btemp+11)^0,f,c
 13040                           
 13041                           ;stkvar	_offset @ sp[(-24)+-14]
 13042  01637C  0EDA               	movlw	-38
 13043  01637E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13044  016384  0EDB               	movlw	-37
 13045  016386  006F FF8F FFDA     	movff	plusw1,fsr2h
 13046  01638C  0060  F0CB  FFDE   	movff	btemp+8,postinc2
 13047  016392  0060  F0CF  FFDE   	movff	btemp+9,postinc2
 13048  016398  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 13049  01639E  0060  F0D7  FFDE   	movff	btemp+11,postinc2
 13050                           
 13051                           ;stkvar	_oppoff @ sp[(-24)+-16]
 13052  0163A4  0ED8               	movlw	-40
 13053  0163A6  006F FF8C  F02A    	movff	plusw1,btemp
 13054  0163AC  0ED9               	movlw	-39
 13055  0163AE  50E3               	movf	plusw1,w,c
 13056  0163B0  102A               	iorwf	btemp^0,w,c
 13057  0163B2  B4D8               	btfsc	status,2,c
 13058  0163B4  D029               	goto	l16644
 13059  0163B6  0060  F2D8  F034   	movff	_dst_off,btemp+10
 13060  0163BC  0060  F2DC  F035   	movff	_dst_off+1,btemp+11
 13061  0163C2  1E34               	comf	(btemp+10)^0,f,c
 13062  0163C4  1E35               	comf	(btemp+11)^0,f,c
 13063  0163C6  4A34               	infsnz	(btemp+10)^0,f,c
 13064  0163C8  2A35               	incf	(btemp+11)^0,f,c
 13065  0163CA  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 13066  0163D0  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 13067  0163D6  0E00               	movlw	0
 13068  0163D8  BE2F               	btfsc	(btemp+5)^0,7,c
 13069  0163DA  0EFF               	movlw	255
 13070  0163DC  6E30               	movwf	(btemp+6)^0,c
 13071  0163DE  6E31               	movwf	(btemp+7)^0,c
 13072                           
 13073                           ;stkvar	_oppoff @ sp[(-24)+-16]
 13074  0163E0  0ED8               	movlw	-40
 13075  0163E2  006F FF8F FFD9     	movff	plusw1,fsr2l
 13076  0163E8  0ED9               	movlw	-39
 13077  0163EA  006F FF8F FFDA     	movff	plusw1,fsr2h
 13078  0163F0  0060  F0BB  FFDE   	movff	btemp+4,postinc2
 13079  0163F6  0060  F0BF  FFDE   	movff	btemp+5,postinc2
 13080  0163FC  0060  F0C3  FFDE   	movff	btemp+6,postinc2
 13081  016402  0060  F0C7  FFDE   	movff	btemp+7,postinc2
 13082  016408                     l16644:
 13083                           
 13084                           ;stkvar	_zonename @ sp[(-24)+-18]
 13085  016408  0ED6               	movlw	-42
 13086  01640A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13087  016410  0ED7               	movlw	-41
 13088  016412  006F FF8F FFDA     	movff	plusw1,fsr2h
 13089  016418  0060  F1B3  FFDE   	movff	___tzname,postinc2
 13090  01641E  0060  F1B7  FFDD   	movff	___tzname+1,postdec2
 13091  016424  D075               	goto	l4027
 13092  016426                     l16648:
 13093                           
 13094                           ;stkvar	_isdst @ sp[(-24)+-12]
 13095  016426  0EDC               	movlw	-36
 13096  016428  006F FF8F FFD9     	movff	plusw1,fsr2l
 13097  01642E  0EDD               	movlw	-35
 13098  016430  006F FF8F FFDA     	movff	plusw1,fsr2h
 13099  016436  0E01               	movlw	1
 13100  016438  6EDE               	movwf	postinc2,c
 13101  01643A  0E00               	movlw	0
 13102  01643C  6EDD               	movwf	postdec2,c
 13103  01643E  0060  F2D8  F034   	movff	_dst_off,btemp+10
 13104  016444  0060  F2DC  F035   	movff	_dst_off+1,btemp+11
 13105  01644A  1E34               	comf	(btemp+10)^0,f,c
 13106  01644C  1E35               	comf	(btemp+11)^0,f,c
 13107  01644E  4A34               	infsnz	(btemp+10)^0,f,c
 13108  016450  2A35               	incf	(btemp+11)^0,f,c
 13109  016452  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 13110  016458  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 13111  01645E  0E00               	movlw	0
 13112  016460  BE2F               	btfsc	(btemp+5)^0,7,c
 13113  016462  0EFF               	movlw	255
 13114  016464  6E30               	movwf	(btemp+6)^0,c
 13115  016466  6E31               	movwf	(btemp+7)^0,c
 13116                           
 13117                           ;stkvar	_offset @ sp[(-24)+-14]
 13118  016468  0EDA               	movlw	-38
 13119  01646A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13120  016470  0EDB               	movlw	-37
 13121  016472  006F FF8F FFDA     	movff	plusw1,fsr2h
 13122  016478  0060  F0BB  FFDE   	movff	btemp+4,postinc2
 13123  01647E  0060  F0BF  FFDE   	movff	btemp+5,postinc2
 13124  016484  0060  F0C3  FFDE   	movff	btemp+6,postinc2
 13125  01648A  0060  F0C7  FFDE   	movff	btemp+7,postinc2
 13126                           
 13127                           ;stkvar	_oppoff @ sp[(-24)+-16]
 13128  016490  0ED8               	movlw	-40
 13129  016492  006F FF8C  F02A    	movff	plusw1,btemp
 13130  016498  0ED9               	movlw	-39
 13131  01649A  50E3               	movf	plusw1,w,c
 13132  01649C  102A               	iorwf	btemp^0,w,c
 13133  01649E  B4D8               	btfsc	status,2,c
 13134  0164A0  D029               	goto	l16656
 13135  0164A2  0060  F1C0  F032   	movff	___timezone,btemp+8
 13136  0164A8  0060  F1C4  F033   	movff	___timezone+1,btemp+9
 13137  0164AE  0060  F1C8  F034   	movff	___timezone+2,btemp+10
 13138  0164B4  0060  F1CC  F035   	movff	___timezone+3,btemp+11
 13139  0164BA  1E32               	comf	(btemp+8)^0,f,c
 13140  0164BC  1E33               	comf	(btemp+9)^0,f,c
 13141  0164BE  1E34               	comf	(btemp+10)^0,f,c
 13142  0164C0  1E35               	comf	(btemp+11)^0,f,c
 13143  0164C2  2A32               	incf	(btemp+8)^0,f,c
 13144  0164C4  0E00               	movlw	0
 13145  0164C6  2233               	addwfc	(btemp+9)^0,f,c
 13146  0164C8  2234               	addwfc	(btemp+10)^0,f,c
 13147  0164CA  2235               	addwfc	(btemp+11)^0,f,c
 13148                           
 13149                           ;stkvar	_oppoff @ sp[(-24)+-16]
 13150  0164CC  0ED8               	movlw	-40
 13151  0164CE  006F FF8F FFD9     	movff	plusw1,fsr2l
 13152  0164D4  0ED9               	movlw	-39
 13153  0164D6  006F FF8F FFDA     	movff	plusw1,fsr2h
 13154  0164DC  0060  F0CB  FFDE   	movff	btemp+8,postinc2
 13155  0164E2  0060  F0CF  FFDE   	movff	btemp+9,postinc2
 13156  0164E8  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 13157  0164EE  0060  F0D7  FFDE   	movff	btemp+11,postinc2
 13158  0164F4                     l16656:
 13159                           
 13160                           ;stkvar	_zonename @ sp[(-24)+-18]
 13161  0164F4  0ED6               	movlw	-42
 13162  0164F6  006F FF8F FFD9     	movff	plusw1,fsr2l
 13163  0164FC  0ED7               	movlw	-41
 13164  0164FE  006F FF8F FFDA     	movff	plusw1,fsr2h
 13165  016504  0060  F1BB  FFDE   	movff	___tzname+2,postinc2
 13166  01650A  0060  F1BF  FFDD   	movff	___tzname+3,postdec2
 13167  016510                     l4027:
 13168                           
 13169                           ; ___secs_to_zone: autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          18, argsize = 18, vargsize = 0
 13170  016510  0ED6               	movlw	214
 13171  016512  26E1               	addwf	fsr1l,f,c
 13172  016514  0EFF               	movlw	255
 13173  016516  22E2               	addwfc	fsr1h,f,c
 13174  016518  0012               	return		;funcret
 13175  01651A                     __end_of___secs_to_zone:
 13176                           	opt callstack 0
 13177                           
 13178 ;; *************** function _scan_trans *****************
 13179 ;; Defined at:
 13180 ;;		line 145 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 13181 ;; Parameters:    Size  Location     Type
 13182 ;;  t               8  [STACK] long long 
 13183 ;;  local           2  [STACK] int 
 13184 ;;  alt             2  [STACK] PTR unsigned int 
 13185 ;;		 -> alt(2), 
 13186 ;; Auto vars:     Size  Location     Type
 13187 ;;  x               8    0        unsigned long long 
 13188 ;;  a               2    0        unsigned int 
 13189 ;;  scale           2    0        int 
 13190 ;;  n               2    0        unsigned int 
 13191 ;;  m               2    0        unsigned int 
 13192 ;;  off             2    0        int 
 13193 ;; Return value:  Size  Location     Type
 13194 ;;                  2  [STACK] unsigned int 
 13195 ;; Registers used:
 13196 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 13197 ;; Tracked objects:
 13198 ;;		On entry : 0/0
 13199 ;;		On exit  : 0/0
 13200 ;;		Unchanged: 0/0
 13201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13206 ;;Total ram usage:        0 bytes
 13207 ;; Hardware stack levels used:    1
 13208 ;; Hardware stack levels required when called:   16
 13209 ;; This function calls:
 13210 ;;		_zi_read32
 13211 ;; This function is called by:
 13212 ;;		___secs_to_zone
 13213 ;; This function uses a reentrant model
 13214 ;;
 13215                           
 13216                           	psect	text39
 13217  001D42                     __ptext39:
 13218                           	opt callstack 0
 13219  001D42                     _scan_trans:
 13220                           	opt callstack 11
 13221                           
 13222                           ;stkvar	_alt @ sp[(0)+-12]
 13223                           
 13224                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 12 v
      +                          argsize = 0, retsize = 0 argfudge = 0
 13225                           ;incstack = 0
 13226  001D42  0EF4               	movlw	-12
 13227  001D44  006F FF8C  F02A    	movff	plusw1,btemp
 13228  001D4A  0EF5               	movlw	-11
 13229  001D4C  50E3               	movf	plusw1,w,c
 13230  001D4E  102A               	iorwf	btemp^0,w,c
 13231  001D50  B4D8               	btfsc	status,2,c
 13232  001D52  D00C               	goto	l16384
 13233                           
 13234                           ;stkvar	_alt @ sp[(0)+-12]
 13235  001D54  0EF4               	movlw	-12
 13236  001D56  006F FF8F FFD9     	movff	plusw1,fsr2l
 13237  001D5C  0EF5               	movlw	-11
 13238  001D5E  006F FF8F FFDA     	movff	plusw1,fsr2h
 13239  001D64  0E00               	movlw	0
 13240  001D66  6EDE               	movwf	postinc2,c
 13241  001D68  0E00               	movlw	0
 13242  001D6A  6EDD               	movwf	postdec2,c
 13243  001D6C                     l16384:
 13244  001D6C  0E00               	movlw	0
 13245  001D6E  6E2A               	movwf	btemp^0,c
 13246  001D70  0E00               	movlw	0
 13247  001D72  6E2B               	movwf	(btemp+1)^0,c
 13248                           
 13249                           ; _scan_trans: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, a
      +                          rgsize = 12, vargsize = 0
 13250  001D74  0EF4               	movlw	244
 13251  001D76  26E1               	addwf	fsr1l,f,c
 13252  001D78  0EFF               	movlw	255
 13253  001D7A  22E2               	addwfc	fsr1h,f,c
 13254  001D7C  0012               	return		;funcret
 13255  001D7E                     __end_of_scan_trans:
 13256                           	opt callstack 0
 13257                           
 13258 ;; *************** function _zi_read32 *****************
 13259 ;; Defined at:
 13260 ;;		line 100 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 13261 ;; Parameters:    Size  Location     Type
 13262 ;;  z               2  [STACK] PTR const unsigned char 
 13263 ;;		 -> NULL(0), 
 13264 ;; Auto vars:     Size  Location     Type
 13265 ;;		None
 13266 ;; Return value:  Size  Location     Type
 13267 ;;                  4  [STACK] unsigned long 
 13268 ;; Registers used:
 13269 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13270 ;; Tracked objects:
 13271 ;;		On entry : 0/0
 13272 ;;		On exit  : 0/0
 13273 ;;		Unchanged: 0/0
 13274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13279 ;;Total ram usage:        0 bytes
 13280 ;; Hardware stack levels used:    1
 13281 ;; Hardware stack levels required when called:   15
 13282 ;; This function calls:
 13283 ;;		Nothing
 13284 ;; This function is called by:
 13285 ;;		_scan_trans
 13286 ;;		___secs_to_zone
 13287 ;; This function uses a reentrant model
 13288 ;;
 13289                           
 13290                           	psect	text40
 13291  01F9F4                     __ptext40:
 13292                           	opt callstack 0
 13293  01F9F4                     _zi_read32:
 13294                           	opt callstack 12
 13295                           
 13296                           ;stkvar	_z @ sp[(0)+-2]
 13297                           
 13298                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13299                           ;incstack = 0
 13300  01F9F4  0EFE               	movlw	-2
 13301  01F9F6  006F FF8C  F034    	movff	plusw1,btemp+10
 13302  01F9FC  0EFF               	movlw	-1
 13303  01F9FE  006F FF8C  F035    	movff	plusw1,btemp+11
 13304  01FA04  0E02               	movlw	2
 13305  01FA06  2434               	addwf	(btemp+10)^0,w,c
 13306  01FA08  6ED9               	movwf	fsr2l,c
 13307  01FA0A  0E00               	movlw	0
 13308  01FA0C  2035               	addwfc	(btemp+11)^0,w,c
 13309  01FA0E  6EDA               	movwf	fsr2h,c
 13310  01FA10  50DF               	movf	indf2,w,c
 13311  01FA12  6E35               	movwf	(btemp+11)^0,c
 13312  01FA14  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 13313  01FA1A  6A2F               	clrf	(btemp+5)^0,c
 13314  01FA1C  6A30               	clrf	(btemp+6)^0,c
 13315  01FA1E  6A31               	clrf	(btemp+7)^0,c
 13316  01FA20  0060  F0C0  F031   	movff	btemp+6,btemp+7
 13317  01FA26  0060  F0BC  F030   	movff	btemp+5,btemp+6
 13318  01FA2C  0060  F0B8  F02F   	movff	btemp+4,btemp+5
 13319  01FA32  6A2E               	clrf	(btemp+4)^0,c
 13320                           
 13321                           ;stkvar	_z @ sp[(0)+-2]
 13322  01FA34  0EFE               	movlw	-2
 13323  01FA36  006F FF8C  F034    	movff	plusw1,btemp+10
 13324  01FA3C  0EFF               	movlw	-1
 13325  01FA3E  006F FF8C  F035    	movff	plusw1,btemp+11
 13326  01FA44  0E01               	movlw	1
 13327  01FA46  2434               	addwf	(btemp+10)^0,w,c
 13328  01FA48  6ED9               	movwf	fsr2l,c
 13329  01FA4A  0E00               	movlw	0
 13330  01FA4C  2035               	addwfc	(btemp+11)^0,w,c
 13331  01FA4E  6EDA               	movwf	fsr2h,c
 13332  01FA50  50DF               	movf	indf2,w,c
 13333  01FA52  6E35               	movwf	(btemp+11)^0,c
 13334  01FA54  0060  F0D4  F02A   	movff	btemp+11,btemp
 13335  01FA5A  6A2B               	clrf	(btemp+1)^0,c
 13336  01FA5C  6A2C               	clrf	(btemp+2)^0,c
 13337  01FA5E  6A2D               	clrf	(btemp+3)^0,c
 13338  01FA60  0060  F0AC  F02D   	movff	btemp+1,btemp+3
 13339  01FA66  0060  F0A8  F02C   	movff	btemp,btemp+2
 13340  01FA6C  6A2B               	clrf	(btemp+1)^0,c
 13341  01FA6E  6A2A               	clrf	btemp^0,c
 13342                           
 13343                           ;stkvar	_z @ sp[(0)+-2]
 13344  01FA70  0EFE               	movlw	-2
 13345  01FA72  006F FF8F FFD9     	movff	plusw1,fsr2l
 13346  01FA78  0EFF               	movlw	-1
 13347  01FA7A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13348  01FA80  50DF               	movf	indf2,w,c
 13349  01FA82  6E32               	movwf	(btemp+8)^0,c
 13350  01FA84  6A33               	clrf	(btemp+9)^0,c
 13351  01FA86  6A34               	clrf	(btemp+10)^0,c
 13352  01FA88  6A35               	clrf	(btemp+11)^0,c
 13353  01FA8A  0060  F0C8  F035   	movff	btemp+8,btemp+11
 13354  01FA90  6A34               	clrf	(btemp+10)^0,c
 13355  01FA92  6A33               	clrf	(btemp+9)^0,c
 13356  01FA94  6A32               	clrf	(btemp+8)^0,c
 13357  01FA96  502A               	movf	btemp^0,w,c
 13358  01FA98  1232               	iorwf	(btemp+8)^0,f,c
 13359  01FA9A  502B               	movf	(btemp+1)^0,w,c
 13360  01FA9C  1233               	iorwf	(btemp+9)^0,f,c
 13361  01FA9E  502C               	movf	(btemp+2)^0,w,c
 13362  01FAA0  1234               	iorwf	(btemp+10)^0,f,c
 13363  01FAA2  502D               	movf	(btemp+3)^0,w,c
 13364  01FAA4  1235               	iorwf	(btemp+11)^0,f,c
 13365  01FAA6  502E               	movf	(btemp+4)^0,w,c
 13366  01FAA8  1232               	iorwf	(btemp+8)^0,f,c
 13367  01FAAA  502F               	movf	(btemp+5)^0,w,c
 13368  01FAAC  1233               	iorwf	(btemp+9)^0,f,c
 13369  01FAAE  5030               	movf	(btemp+6)^0,w,c
 13370  01FAB0  1234               	iorwf	(btemp+10)^0,f,c
 13371  01FAB2  5031               	movf	(btemp+7)^0,w,c
 13372  01FAB4  1235               	iorwf	(btemp+11)^0,f,c
 13373                           
 13374                           ;stkvar	_z @ sp[(0)+-2]
 13375  01FAB6  0EFE               	movlw	-2
 13376  01FAB8  006F FF8C  F030    	movff	plusw1,btemp+6
 13377  01FABE  0EFF               	movlw	-1
 13378  01FAC0  006F FF8C  F031    	movff	plusw1,btemp+7
 13379  01FAC6  0E03               	movlw	3
 13380  01FAC8  2430               	addwf	(btemp+6)^0,w,c
 13381  01FACA  6ED9               	movwf	fsr2l,c
 13382  01FACC  0E00               	movlw	0
 13383  01FACE  2031               	addwfc	(btemp+7)^0,w,c
 13384  01FAD0  6EDA               	movwf	fsr2h,c
 13385  01FAD2  50DF               	movf	indf2,w,c
 13386  01FAD4  1032               	iorwf	(btemp+8)^0,w,c
 13387  01FAD6  6E2A               	movwf	btemp^0,c
 13388  01FAD8  5033               	movf	(btemp+9)^0,w,c
 13389  01FADA  6E2B               	movwf	(btemp+1)^0,c
 13390  01FADC  5034               	movf	(btemp+10)^0,w,c
 13391  01FADE  6E2C               	movwf	(btemp+2)^0,c
 13392  01FAE0  5035               	movf	(btemp+11)^0,w,c
 13393  01FAE2  6E2D               	movwf	(btemp+3)^0,c
 13394                           
 13395                           ; _zi_read32: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
 13396  01FAE4  52E5               	movf	postdec1,f,c
 13397  01FAE6  52E5               	movf	postdec1,f,c
 13398  01FAE8  0012               	return		;funcret
 13399  01FAEA                     __end_of_zi_read32:
 13400                           	opt callstack 0
 13401                           
 13402 ;; *************** function _rule_to_secs *****************
 13403 ;; Defined at:
 13404 ;;		line 218 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 13405 ;; Parameters:    Size  Location     Type
 13406 ;;  rule            2  [STACK] PTR const int 
 13407 ;;		 -> r1(10), r0(10), 
 13408 ;;  year            2  [STACK] int 
 13409 ;; Auto vars:     Size  Location     Type
 13410 ;;  days            2  [STACK] int 
 13411 ;;  wday            2  [STACK] int 
 13412 ;;  t               8  [STACK] long long 
 13413 ;;  is_leap         2  [STACK] int 
 13414 ;;  n               2  [STACK] int 
 13415 ;;  x               2  [STACK] int 
 13416 ;;  m               2  [STACK] int 
 13417 ;;  d               2  [STACK] int 
 13418 ;; Return value:  Size  Location     Type
 13419 ;;                  8  [STACK] long long 
 13420 ;; Registers used:
 13421 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btem
      +p+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btem
      +p+31, tblptrl, tblptrh, tblptru, prodl, prodh
 13422 ;; Tracked objects:
 13423 ;;		On entry : 0/0
 13424 ;;		On exit  : 0/0
 13425 ;;		Unchanged: 0/0
 13426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13431 ;;Total ram usage:        0 bytes
 13432 ;; Hardware stack levels used:    1
 13433 ;; Hardware stack levels required when called:   17
 13434 ;; This function calls:
 13435 ;;		___aldiv
 13436 ;;		___aomod
 13437 ;;		___lmul
 13438 ;;		___month_to_secs
 13439 ;;		___year_to_secs
 13440 ;;		_days_in_month
 13441 ;; This function is called by:
 13442 ;;		___secs_to_zone
 13443 ;; This function uses a reentrant model
 13444 ;;
 13445                           
 13446                           	psect	text41
 13447  017500                     __ptext41:
 13448                           	opt callstack 0
 13449  017500                     _rule_to_secs:
 13450                           	opt callstack 0
 13451                           
 13452                           ; autosize = 22, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 8 argfudge = 4
 13453  017500  0E1A               	movlw	26
 13454  017502  26E1               	addwf	fsr1l,f,c
 13455  017504  0E00               	movlw	0
 13456  017506  22E2               	addwfc	fsr1h,f,c
 13457                           
 13458                           ;stkvar	_is_leap @ sp[(-22)+12]
 13459                           
 13460                           ;incstack = 0
 13461  017508  0EF6               	movlw	246
 13462  01750A  24E1               	addwf	fsr1l,w,c
 13463  01750C  6E2A               	movwf	btemp^0,c
 13464  01750E  0EFF               	movlw	255
 13465  017510  20E2               	addwfc	fsr1h,w,c
 13466  017512  6E2B               	movwf	(btemp+1)^0,c
 13467  017514  0060  F0AB  FFE6   	movff	btemp,postinc1
 13468  01751A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 13469                           
 13470                           ;stkvar	_year @ sp[(-24)+-8]
 13471  017520  0EE0               	movlw	-32
 13472  017522  006F FF8C  F03A    	movff	plusw1,btemp+16
 13473  017528  0EE1               	movlw	-31
 13474  01752A  006F FF8C  F03B    	movff	plusw1,btemp+17
 13475  017530  6A3C               	clrf	(btemp+18)^0,c
 13476  017532  BE3B               	btfsc	(btemp+17)^0,7,c
 13477  017534  683C               	setf	(btemp+18)^0,c
 13478  017536  0060  F0F0  F03D   	movff	btemp+18,btemp+19
 13479  01753C  0060  F0F0  F03E   	movff	btemp+18,btemp+20
 13480  017542  0060  F0F0  F03F   	movff	btemp+18,btemp+21
 13481  017548  0060  F0F0  F040   	movff	btemp+18,btemp+22
 13482  01754E  0060  F0F0  F041   	movff	btemp+18,btemp+23
 13483  017554  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 13484  01755A  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 13485  017560  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 13486  017566  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 13487  01756C  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 13488  017572  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 13489  017578  0060  F103  FFE6   	movff	btemp+22,postinc1
 13490  01757E  0060  F107  FFE6   	movff	btemp+23,postinc1
 13491  017584  EC83  F0A9         	call	___year_to_secs	;wreg free
 13492  017588  52E5               	movf	postdec1,f,c
 13493  01758A  006F FF9C  F041    	movff	indf1,btemp+23
 13494  017590  52E5               	movf	postdec1,f,c
 13495  017592  006F FF9C  F040    	movff	indf1,btemp+22
 13496  017598  52E5               	movf	postdec1,f,c
 13497  01759A  006F FF9C  F03F    	movff	indf1,btemp+21
 13498  0175A0  52E5               	movf	postdec1,f,c
 13499  0175A2  006F FF9C  F03E    	movff	indf1,btemp+20
 13500  0175A8  52E5               	movf	postdec1,f,c
 13501  0175AA  006F FF9C  F03D    	movff	indf1,btemp+19
 13502  0175B0  52E5               	movf	postdec1,f,c
 13503  0175B2  006F FF9C  F03C    	movff	indf1,btemp+18
 13504  0175B8  52E5               	movf	postdec1,f,c
 13505  0175BA  006F FF9C  F03B    	movff	indf1,btemp+17
 13506  0175C0  52E5               	movf	postdec1,f,c
 13507  0175C2  006F FF9C  F03A    	movff	indf1,btemp+16
 13508  0175C8  52E5               	movf	postdec1,f,c
 13509  0175CA  52E5               	movf	postdec1,f,c
 13510                           
 13511                           ;stkvar	_t @ sp[(-22)+4]
 13512  0175CC  0EEE               	movlw	-18
 13513  0175CE  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 13514  0175D4  0EEF               	movlw	-17
 13515  0175D6  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 13516  0175DC  0EF0               	movlw	-16
 13517  0175DE  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 13518  0175E4  0EF1               	movlw	-15
 13519  0175E6  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 13520  0175EC  0EF2               	movlw	-14
 13521  0175EE  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 13522  0175F4  0EF3               	movlw	-13
 13523  0175F6  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 13524  0175FC  0EF4               	movlw	-12
 13525  0175FE  0060  F103  FFE3   	movff	btemp+22,plusw1
 13526  017604  0EF5               	movlw	-11
 13527  017606  0060  F107  FFE3   	movff	btemp+23,plusw1
 13528                           
 13529                           ;stkvar	_rule @ sp[(-22)+-6]
 13530  01760C  0EE4               	movlw	-28
 13531  01760E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13532  017614  0EE5               	movlw	-27
 13533  017616  006F FF8F FFDA     	movff	plusw1,fsr2h
 13534  01761C  0E4D               	movlw	77
 13535  01761E  18DE               	xorwf	postinc2,w,c
 13536  017620  10DE               	iorwf	postinc2,w,c
 13537  017622  B4D8               	btfsc	status,2,c
 13538  017624  D074               	goto	l16500
 13539                           
 13540                           ;stkvar	_rule @ sp[(-22)+-6]
 13541  017626  0EE4               	movlw	-28
 13542  017628  006F FF8C  F034    	movff	plusw1,btemp+10
 13543  01762E  0EE5               	movlw	-27
 13544  017630  006F FF8C  F035    	movff	plusw1,btemp+11
 13545  017636  0E02               	movlw	2
 13546  017638  2434               	addwf	(btemp+10)^0,w,c
 13547  01763A  6ED9               	movwf	fsr2l,c
 13548  01763C  0E00               	movlw	0
 13549  01763E  2035               	addwfc	(btemp+11)^0,w,c
 13550  017640  6EDA               	movwf	fsr2h,c
 13551  017642  006F FF78  F034    	movff	postinc2,btemp+10
 13552  017648  006F FF74  F035    	movff	postdec2,btemp+11
 13553                           
 13554                           ;stkvar	_x @ sp[(-22)+16]
 13555  01764E  0EFA               	movlw	-6
 13556  017650  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13557  017656  0EFB               	movlw	-5
 13558  017658  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13559                           
 13560                           ;stkvar	_rule @ sp[(-22)+-6]
 13561  01765E  0EE4               	movlw	-28
 13562  017660  006F FF8F FFD9     	movff	plusw1,fsr2l
 13563  017666  0EE5               	movlw	-27
 13564  017668  006F FF8F FFDA     	movff	plusw1,fsr2h
 13565  01766E  0E4A               	movlw	74
 13566  017670  18DE               	xorwf	postinc2,w,c
 13567  017672  10DE               	iorwf	postinc2,w,c
 13568  017674  A4D8               	btfss	status,2,c
 13569  017676  D021               	goto	l16498
 13570                           
 13571                           ;stkvar	_x @ sp[(-22)+16]
 13572  017678  0EFB               	movlw	-5
 13573  01767A  BEE3               	btfsc	plusw1,7,c
 13574  01767C  D014               	goto	u16040
 13575  01767E  0EFB               	movlw	-5
 13576  017680  50E3               	movf	plusw1,w,c
 13577  017682  E108               	bnz	u16030
 13578  017684  0EFA               	movlw	-6
 13579  017686  006F FF8C  F02A    	movff	plusw1,btemp
 13580  01768C  0E3C               	movlw	60
 13581  01768E  5E2A               	subwf	btemp^0,f,c
 13582  017690  A0D8               	btfss	status,0,c
 13583  017692  D009               	goto	u16040
 13584  017694                     u16030:
 13585                           
 13586                           ;stkvar	_is_leap @ sp[(-22)+12]
 13587  017694  0EF6               	movlw	-10
 13588  017696  006F FF8C  F02A    	movff	plusw1,btemp
 13589  01769C  0EF7               	movlw	-9
 13590  01769E  50E3               	movf	plusw1,w,c
 13591  0176A0  102A               	iorwf	btemp^0,w,c
 13592  0176A2  A4D8               	btfss	status,2,c
 13593  0176A4  D00A               	goto	l16498
 13594  0176A6                     u16040:
 13595                           
 13596                           ;stkvar	_x @ sp[(-22)+16]
 13597  0176A6  50E1               	movf	fsr1l,w,c
 13598  0176A8  0FFA               	addlw	-6
 13599  0176AA  6ED9               	movwf	fsr2l,c
 13600  0176AC  50E2               	movf	fsr1h,w,c
 13601  0176AE  6EDA               	movwf	fsr2h,c
 13602  0176B0  0EFF               	movlw	255
 13603  0176B2  22DA               	addwfc	fsr2h,f,c
 13604  0176B4  06DE               	decf	postinc2,f,c
 13605  0176B6  0E00               	movlw	0
 13606  0176B8  5ADD               	subwfb	postdec2,f,c
 13607  0176BA                     l16498:
 13608  0176BA  0E80               	movlw	128
 13609  0176BC  6EE6               	movwf	postinc1,c
 13610  0176BE  0E51               	movlw	81
 13611  0176C0  6EE6               	movwf	postinc1,c
 13612  0176C2  0E01               	movlw	1
 13613  0176C4  6EE6               	movwf	postinc1,c
 13614  0176C6  0E00               	movlw	0
 13615  0176C8  6EE6               	movwf	postinc1,c
 13616                           
 13617                           ;stkvar	_x @ sp[(-26)+16]
 13618  0176CA  0EF6               	movlw	-10
 13619  0176CC  006F FF8C  F034    	movff	plusw1,btemp+10
 13620  0176D2  0EF7               	movlw	-9
 13621  0176D4  006F FF8C  F035    	movff	plusw1,btemp+11
 13622  0176DA  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 13623  0176E0  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 13624  0176E6  0E00               	movlw	0
 13625  0176E8  BE2F               	btfsc	(btemp+5)^0,7,c
 13626  0176EA  0EFF               	movlw	255
 13627  0176EC  6E30               	movwf	(btemp+6)^0,c
 13628  0176EE  6E31               	movwf	(btemp+7)^0,c
 13629  0176F0  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 13630  0176F6  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 13631  0176FC  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 13632  017702  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 13633  017708  EC54  F0FF         	call	___lmul	;wreg free
 13634  01770C  D1EC               	goto	L10
 13635  01770E                     l16500:
 13636                           
 13637                           ;stkvar	_rule @ sp[(-22)+-6]
 13638  01770E  0EE4               	movlw	-28
 13639  017710  006F FF8C  F034    	movff	plusw1,btemp+10
 13640  017716  0EE5               	movlw	-27
 13641  017718  006F FF8C  F035    	movff	plusw1,btemp+11
 13642  01771E  0E02               	movlw	2
 13643  017720  2434               	addwf	(btemp+10)^0,w,c
 13644  017722  6ED9               	movwf	fsr2l,c
 13645  017724  0E00               	movlw	0
 13646  017726  2035               	addwfc	(btemp+11)^0,w,c
 13647  017728  6EDA               	movwf	fsr2h,c
 13648  01772A  006F FF78  F034    	movff	postinc2,btemp+10
 13649  017730  006F FF74  F035    	movff	postdec2,btemp+11
 13650                           
 13651                           ;stkvar	_m @ sp[(-22)+18]
 13652  017736  0EFC               	movlw	-4
 13653  017738  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13654  01773E  0EFD               	movlw	-3
 13655  017740  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13656                           
 13657                           ;stkvar	_rule @ sp[(-22)+-6]
 13658  017746  0EE4               	movlw	-28
 13659  017748  006F FF8C  F034    	movff	plusw1,btemp+10
 13660  01774E  0EE5               	movlw	-27
 13661  017750  006F FF8C  F035    	movff	plusw1,btemp+11
 13662  017756  0E04               	movlw	4
 13663  017758  2434               	addwf	(btemp+10)^0,w,c
 13664  01775A  6ED9               	movwf	fsr2l,c
 13665  01775C  0E00               	movlw	0
 13666  01775E  2035               	addwfc	(btemp+11)^0,w,c
 13667  017760  6EDA               	movwf	fsr2h,c
 13668  017762  006F FF78  F034    	movff	postinc2,btemp+10
 13669  017768  006F FF74  F035    	movff	postdec2,btemp+11
 13670                           
 13671                           ;stkvar	_n @ sp[(-22)+14]
 13672  01776E  0EF8               	movlw	-8
 13673  017770  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13674  017776  0EF9               	movlw	-7
 13675  017778  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13676                           
 13677                           ;stkvar	_rule @ sp[(-22)+-6]
 13678  01777E  0EE4               	movlw	-28
 13679  017780  006F FF8C  F034    	movff	plusw1,btemp+10
 13680  017786  0EE5               	movlw	-27
 13681  017788  006F FF8C  F035    	movff	plusw1,btemp+11
 13682  01778E  0E06               	movlw	6
 13683  017790  2434               	addwf	(btemp+10)^0,w,c
 13684  017792  6ED9               	movwf	fsr2l,c
 13685  017794  0E00               	movlw	0
 13686  017796  2035               	addwfc	(btemp+11)^0,w,c
 13687  017798  6EDA               	movwf	fsr2h,c
 13688  01779A  006F FF78  F034    	movff	postinc2,btemp+10
 13689  0177A0  006F FF74  F035    	movff	postdec2,btemp+11
 13690                           
 13691                           ;stkvar	_d @ sp[(-22)+20]
 13692  0177A6  0EFE               	movlw	-2
 13693  0177A8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13694  0177AE  0EFF               	movlw	-1
 13695  0177B0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13696                           
 13697                           ;stkvar	_is_leap @ sp[(-22)+12]
 13698  0177B6  0EF6               	movlw	-10
 13699  0177B8  006F FF8F FFE6     	movff	plusw1,postinc1
 13700  0177BE  006F FF8F FFE6     	movff	plusw1,postinc1
 13701                           
 13702                           ;stkvar	_m @ sp[(-24)+18]
 13703  0177C4  0EFA               	movlw	-6
 13704  0177C6  50E3               	movf	plusw1,w,c
 13705  0177C8  0FFF               	addlw	255
 13706  0177CA  6E34               	movwf	(btemp+10)^0,c
 13707  0177CC  0EFB               	movlw	-5
 13708  0177CE  006F FF8C  F035    	movff	plusw1,btemp+11
 13709  0177D4  0EFF               	movlw	255
 13710  0177D6  2235               	addwfc	(btemp+11)^0,f,c
 13711  0177D8  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 13712  0177DE  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 13713  0177E4  EC69  F0FE         	call	___month_to_secs	;wreg free
 13714  0177E8  0060  F0A8  F03A   	movff	btemp,btemp+16
 13715  0177EE  0060  F0AC  F03B   	movff	btemp+1,btemp+17
 13716  0177F4  0060  F0B0  F03C   	movff	btemp+2,btemp+18
 13717  0177FA  0060  F0B4  F03D   	movff	btemp+3,btemp+19
 13718  017800  6A3E               	clrf	(btemp+20)^0,c
 13719  017802  BE3D               	btfsc	(btemp+19)^0,7,c
 13720  017804  683E               	setf	(btemp+20)^0,c
 13721  017806  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 13722  01780C  0060  F0F8  F040   	movff	btemp+20,btemp+22
 13723  017812  0060  F0F8  F041   	movff	btemp+20,btemp+23
 13724                           
 13725                           ;stkvar	_t @ sp[(-22)+4]
 13726  017818  50E1               	movf	fsr1l,w,c
 13727  01781A  0FEE               	addlw	-18
 13728  01781C  6ED9               	movwf	fsr2l,c
 13729  01781E  50E2               	movf	fsr1h,w,c
 13730  017820  6EDA               	movwf	fsr2h,c
 13731  017822  0EFF               	movlw	255
 13732  017824  22DA               	addwfc	fsr2h,f,c
 13733  017826  503A               	movf	(btemp+16)^0,w,c
 13734  017828  26DE               	addwf	postinc2,f,c
 13735  01782A  503B               	movf	(btemp+17)^0,w,c
 13736  01782C  22DE               	addwfc	postinc2,f,c
 13737  01782E  503C               	movf	(btemp+18)^0,w,c
 13738  017830  22DE               	addwfc	postinc2,f,c
 13739  017832  503D               	movf	(btemp+19)^0,w,c
 13740  017834  22DE               	addwfc	postinc2,f,c
 13741  017836  503E               	movf	(btemp+20)^0,w,c
 13742  017838  22DE               	addwfc	postinc2,f,c
 13743  01783A  503F               	movf	(btemp+21)^0,w,c
 13744  01783C  22DE               	addwfc	postinc2,f,c
 13745  01783E  5040               	movf	(btemp+22)^0,w,c
 13746  017840  22DE               	addwfc	postinc2,f,c
 13747  017842  5041               	movf	(btemp+23)^0,w,c
 13748  017844  22DE               	addwfc	postinc2,f,c
 13749  017846  0E80               	movlw	128
 13750  017848  6EE6               	movwf	postinc1,c
 13751  01784A  0E51               	movlw	81
 13752  01784C  6EE6               	movwf	postinc1,c
 13753  01784E  0E01               	movlw	1
 13754  017850  6EE6               	movwf	postinc1,c
 13755  017852  0E00               	movlw	0
 13756  017854  6EE6               	movwf	postinc1,c
 13757  017856  0E80               	movlw	128
 13758  017858  6EE6               	movwf	postinc1,c
 13759  01785A  0E3A               	movlw	58
 13760  01785C  6EE6               	movwf	postinc1,c
 13761  01785E  0E09               	movlw	9
 13762  017860  6EE6               	movwf	postinc1,c
 13763  017862  0E00               	movlw	0
 13764  017864  6EE6               	movwf	postinc1,c
 13765  017866  0E00               	movlw	0
 13766  017868  6EE6               	movwf	postinc1,c
 13767  01786A  0E00               	movlw	0
 13768  01786C  6EE6               	movwf	postinc1,c
 13769  01786E  0E00               	movlw	0
 13770  017870  6EE6               	movwf	postinc1,c
 13771  017872  0E00               	movlw	0
 13772  017874  6EE6               	movwf	postinc1,c
 13773                           
 13774                           ;stkvar	_t @ sp[(-34)+4]
 13775  017876  0EE2               	movlw	-30
 13776  017878  50E3               	movf	plusw1,w,c
 13777  01787A  0F00               	addlw	0
 13778  01787C  6E3A               	movwf	(btemp+16)^0,c
 13779  01787E  0EE3               	movlw	-29
 13780  017880  006F FF8C  F03B    	movff	plusw1,btemp+17
 13781  017886  0E46               	movlw	70
 13782  017888  223B               	addwfc	(btemp+17)^0,f,c
 13783  01788A  0EE4               	movlw	-28
 13784  01788C  006F FF8C  F03C    	movff	plusw1,btemp+18
 13785  017892  0E05               	movlw	5
 13786  017894  223C               	addwfc	(btemp+18)^0,f,c
 13787  017896  0EE5               	movlw	-27
 13788  017898  006F FF8C  F03D    	movff	plusw1,btemp+19
 13789  01789E  0E00               	movlw	0
 13790  0178A0  223D               	addwfc	(btemp+19)^0,f,c
 13791  0178A2  0EE6               	movlw	-26
 13792  0178A4  006F FF8C  F03E    	movff	plusw1,btemp+20
 13793  0178AA  0E00               	movlw	0
 13794  0178AC  223E               	addwfc	(btemp+20)^0,f,c
 13795  0178AE  0EE7               	movlw	-25
 13796  0178B0  006F FF8C  F03F    	movff	plusw1,btemp+21
 13797  0178B6  0E00               	movlw	0
 13798  0178B8  223F               	addwfc	(btemp+21)^0,f,c
 13799  0178BA  0EE8               	movlw	-24
 13800  0178BC  006F FF8C  F040    	movff	plusw1,btemp+22
 13801  0178C2  0E00               	movlw	0
 13802  0178C4  2240               	addwfc	(btemp+22)^0,f,c
 13803  0178C6  0EE9               	movlw	-23
 13804  0178C8  006F FF8C  F041    	movff	plusw1,btemp+23
 13805  0178CE  0E00               	movlw	0
 13806  0178D0  2241               	addwfc	(btemp+23)^0,f,c
 13807  0178D2  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 13808  0178D8  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 13809  0178DE  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 13810  0178E4  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 13811  0178EA  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 13812  0178F0  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 13813  0178F6  0060  F103  FFE6   	movff	btemp+22,postinc1
 13814  0178FC  0060  F107  FFE6   	movff	btemp+23,postinc1
 13815  017902  EC50  F0E4         	call	___aomod	;wreg free
 13816  017906  52E5               	movf	postdec1,f,c
 13817  017908  006F FF9C  F041    	movff	indf1,btemp+23
 13818  01790E  52E5               	movf	postdec1,f,c
 13819  017910  006F FF9C  F040    	movff	indf1,btemp+22
 13820  017916  52E5               	movf	postdec1,f,c
 13821  017918  006F FF9C  F03F    	movff	indf1,btemp+21
 13822  01791E  52E5               	movf	postdec1,f,c
 13823  017920  006F FF9C  F03E    	movff	indf1,btemp+20
 13824  017926  52E5               	movf	postdec1,f,c
 13825  017928  006F FF9C  F03D    	movff	indf1,btemp+19
 13826  01792E  52E5               	movf	postdec1,f,c
 13827  017930  006F FF9C  F03C    	movff	indf1,btemp+18
 13828  017936  52E5               	movf	postdec1,f,c
 13829  017938  006F FF9C  F03B    	movff	indf1,btemp+17
 13830  01793E  52E5               	movf	postdec1,f,c
 13831  017940  006F FF9C  F03A    	movff	indf1,btemp+16
 13832  017946  0EF8               	movlw	248
 13833  017948  26E1               	addwf	fsr1l,f,c
 13834  01794A  0EFF               	movlw	255
 13835  01794C  22E2               	addwfc	fsr1h,f,c
 13836  01794E  0060  F0E8  F034   	movff	btemp+16,btemp+10
 13837  017954  0060  F0EC  F035   	movff	btemp+17,btemp+11
 13838  01795A  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 13839  017960  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 13840  017966  0E00               	movlw	0
 13841  017968  BE2F               	btfsc	(btemp+5)^0,7,c
 13842  01796A  0EFF               	movlw	255
 13843  01796C  6E30               	movwf	(btemp+6)^0,c
 13844  01796E  6E31               	movwf	(btemp+7)^0,c
 13845  017970  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 13846  017976  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 13847  01797C  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 13848  017982  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 13849  017988  EC10  F0EE         	call	___aldiv	;wreg free
 13850  01798C  0060  F0A8  F034   	movff	btemp,btemp+10
 13851  017992  0060  F0AC  F035   	movff	btemp+1,btemp+11
 13852                           
 13853                           ;stkvar	_wday @ sp[(-22)+2]
 13854  017998  0EEC               	movlw	-20
 13855  01799A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13856  0179A0  0EED               	movlw	-19
 13857  0179A2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13858                           
 13859                           ;stkvar	_wday @ sp[(-22)+2]
 13860                           ;stkvar	_d @ sp[(-22)+20]
 13861  0179A8  0EFE               	movlw	-2
 13862  0179AA  006F FF8C  F034    	movff	plusw1,btemp+10
 13863  0179B0  0EFF               	movlw	-1
 13864  0179B2  006F FF8C  F035    	movff	plusw1,btemp+11
 13865  0179B8  0EEC               	movlw	-20
 13866  0179BA  50E3               	movf	plusw1,w,c
 13867  0179BC  5E34               	subwf	(btemp+10)^0,f,c
 13868  0179BE  0EED               	movlw	-19
 13869  0179C0  50E3               	movf	plusw1,w,c
 13870  0179C2  5A35               	subwfb	(btemp+11)^0,f,c
 13871                           
 13872                           ;stkvar	_days @ sp[(-22)+0]
 13873  0179C4  0EEA               	movlw	-22
 13874  0179C6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13875  0179CC  0EEB               	movlw	-21
 13876  0179CE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13877                           
 13878                           ;stkvar	_days @ sp[(-22)+0]
 13879  0179D4  0EEB               	movlw	-21
 13880  0179D6  AEE3               	btfss	plusw1,7,c
 13881  0179D8  D011               	goto	l4019
 13882                           
 13883                           ;stkvar	_days @ sp[(-22)+0]
 13884  0179DA  0EEA               	movlw	-22
 13885  0179DC  50E3               	movf	plusw1,w,c
 13886  0179DE  0F07               	addlw	7
 13887  0179E0  6E2A               	movwf	btemp^0,c
 13888  0179E2  0EEA               	movlw	-22
 13889  0179E4  0060  F0AB  FFE3   	movff	btemp,plusw1
 13890  0179EA  6A2A               	clrf	btemp^0,c
 13891  0179EC  0EEB               	movlw	-21
 13892  0179EE  50E3               	movf	plusw1,w,c
 13893  0179F0  202A               	addwfc	btemp^0,w,c
 13894  0179F2  6E2A               	movwf	btemp^0,c
 13895  0179F4  0EEB               	movlw	-21
 13896  0179F6  0060  F0AB  FFE3   	movff	btemp,plusw1
 13897  0179FC                     l4019:
 13898                           
 13899                           ;stkvar	_n @ sp[(-22)+14]
 13900  0179FC  0EF8               	movlw	-8
 13901  0179FE  006F FF8C  F02A    	movff	plusw1,btemp
 13902  017A04  0E05               	movlw	5
 13903  017A06  182A               	xorwf	btemp^0,w,c
 13904  017A08  E134               	bnz	l16516
 13905  017A0A  0EF9               	movlw	-7
 13906  017A0C  50E3               	movf	plusw1,w,c
 13907  017A0E  A4D8               	btfss	status,2,c
 13908  017A10  D030               	goto	l16516
 13909                           
 13910                           ;stkvar	_is_leap @ sp[(-22)+12]
 13911  017A12  0EF6               	movlw	-10
 13912  017A14  006F FF8F FFE6     	movff	plusw1,postinc1
 13913  017A1A  006F FF8F FFE6     	movff	plusw1,postinc1
 13914                           
 13915                           ;stkvar	_m @ sp[(-24)+18]
 13916  017A20  0EFA               	movlw	-6
 13917  017A22  006F FF8F FFE6     	movff	plusw1,postinc1
 13918  017A28  006F FF8F FFE6     	movff	plusw1,postinc1
 13919  017A2E  EC2F  F00A         	call	_days_in_month	;wreg free
 13920                           
 13921                           ;stkvar	_days @ sp[(-22)+0]
 13922  017A32  0EEA               	movlw	-22
 13923  017A34  50E3               	movf	plusw1,w,c
 13924  017A36  0F1C               	addlw	28
 13925  017A38  6E34               	movwf	(btemp+10)^0,c
 13926  017A3A  0EEB               	movlw	-21
 13927  017A3C  006F FF8C  F035    	movff	plusw1,btemp+11
 13928  017A42  0E00               	movlw	0
 13929  017A44  2235               	addwfc	(btemp+11)^0,f,c
 13930  017A46  502A               	movf	btemp^0,w,c
 13931  017A48  5C34               	subwf	(btemp+10)^0,w,c
 13932  017A4A  5035               	movf	(btemp+11)^0,w,c
 13933  017A4C  0A80               	xorlw	128
 13934  017A4E  6E2C               	movwf	(btemp+2)^0,c
 13935  017A50  502B               	movf	(btemp+1)^0,w,c
 13936  017A52  0A80               	xorlw	128
 13937  017A54  582C               	subwfb	(btemp+2)^0,w,c
 13938  017A56  A0D8               	btfss	status,0,c
 13939  017A58  D00C               	goto	l16516
 13940  017A5A  0E04               	movlw	4
 13941  017A5C  6E34               	movwf	(btemp+10)^0,c
 13942  017A5E  0E00               	movlw	0
 13943  017A60  6E35               	movwf	(btemp+11)^0,c
 13944                           
 13945                           ;stkvar	_n @ sp[(-22)+14]
 13946  017A62  0EF8               	movlw	-8
 13947  017A64  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13948  017A6A  0EF9               	movlw	-7
 13949  017A6C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13950  017A72                     l16516:
 13951  017A72  0E80               	movlw	128
 13952  017A74  6EE6               	movwf	postinc1,c
 13953  017A76  0E51               	movlw	81
 13954  017A78  6EE6               	movwf	postinc1,c
 13955  017A7A  0E01               	movlw	1
 13956  017A7C  6EE6               	movwf	postinc1,c
 13957  017A7E  0E00               	movlw	0
 13958  017A80  6EE6               	movwf	postinc1,c
 13959                           
 13960                           ;stkvar	_days @ sp[(-26)+0]
 13961                           ;stkvar	_n @ sp[(-26)+14]
 13962  017A82  0EF4               	movlw	-12
 13963  017A84  006F FF8C  F034    	movff	plusw1,btemp+10
 13964  017A8A  0EF5               	movlw	-11
 13965  017A8C  006F FF8C  F035    	movff	plusw1,btemp+11
 13966  017A92  0E07               	movlw	7
 13967  017A94  0234               	mulwf	(btemp+10)^0,c
 13968  017A96  006F FFCC  F032    	movff	prodl,btemp+8
 13969  017A9C  006F FFD0  F033    	movff	prodh,btemp+9
 13970  017AA2  0235               	mulwf	(btemp+11)^0,c
 13971  017AA4  50F3               	movf	prodl,w,c
 13972  017AA6  2633               	addwf	(btemp+9)^0,f,c
 13973  017AA8  0EE6               	movlw	-26
 13974  017AAA  50E3               	movf	plusw1,w,c
 13975  017AAC  2632               	addwf	(btemp+8)^0,f,c
 13976  017AAE  0EE7               	movlw	-25
 13977  017AB0  50E3               	movf	plusw1,w,c
 13978  017AB2  2233               	addwfc	(btemp+9)^0,f,c
 13979  017AB4  0EF9               	movlw	249
 13980  017AB6  2432               	addwf	(btemp+8)^0,w,c
 13981  017AB8  6E2E               	movwf	(btemp+4)^0,c
 13982  017ABA  0EFF               	movlw	255
 13983  017ABC  2033               	addwfc	(btemp+9)^0,w,c
 13984  017ABE  6E2F               	movwf	(btemp+5)^0,c
 13985  017AC0  6A30               	clrf	(btemp+6)^0,c
 13986  017AC2  BE2F               	btfsc	(btemp+5)^0,7,c
 13987  017AC4  0630               	decf	(btemp+6)^0,f,c
 13988  017AC6  5030               	movf	(btemp+6)^0,w,c
 13989  017AC8  6E31               	movwf	(btemp+7)^0,c
 13990  017ACA  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 13991  017AD0  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 13992  017AD6  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 13993  017ADC  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 13994  017AE2  EC54  F0FF         	call	___lmul	;wreg free
 13995  017AE6                     L10:
 13996  017AE6  0060  F0A8  F03A   	movff	btemp,btemp+16
 13997  017AEC  0060  F0AC  F03B   	movff	btemp+1,btemp+17
 13998  017AF2  0060  F0B0  F03C   	movff	btemp+2,btemp+18
 13999  017AF8  0060  F0B4  F03D   	movff	btemp+3,btemp+19
 14000  017AFE  6A3E               	clrf	(btemp+20)^0,c
 14001  017B00  BE3D               	btfsc	(btemp+19)^0,7,c
 14002  017B02  683E               	setf	(btemp+20)^0,c
 14003  017B04  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 14004  017B0A  0060  F0F8  F040   	movff	btemp+20,btemp+22
 14005  017B10  0060  F0F8  F041   	movff	btemp+20,btemp+23
 14006                           
 14007                           ;stkvar	_t @ sp[(-22)+4]
 14008  017B16  50E1               	movf	fsr1l,w,c
 14009  017B18  0FEE               	addlw	-18
 14010  017B1A  6ED9               	movwf	fsr2l,c
 14011  017B1C  50E2               	movf	fsr1h,w,c
 14012  017B1E  6EDA               	movwf	fsr2h,c
 14013  017B20  0EFF               	movlw	255
 14014  017B22  22DA               	addwfc	fsr2h,f,c
 14015  017B24  503A               	movf	(btemp+16)^0,w,c
 14016  017B26  26DE               	addwf	postinc2,f,c
 14017  017B28  503B               	movf	(btemp+17)^0,w,c
 14018  017B2A  22DE               	addwfc	postinc2,f,c
 14019  017B2C  503C               	movf	(btemp+18)^0,w,c
 14020  017B2E  22DE               	addwfc	postinc2,f,c
 14021  017B30  503D               	movf	(btemp+19)^0,w,c
 14022  017B32  22DE               	addwfc	postinc2,f,c
 14023  017B34  503E               	movf	(btemp+20)^0,w,c
 14024  017B36  22DE               	addwfc	postinc2,f,c
 14025  017B38  503F               	movf	(btemp+21)^0,w,c
 14026  017B3A  22DE               	addwfc	postinc2,f,c
 14027  017B3C  5040               	movf	(btemp+22)^0,w,c
 14028  017B3E  22DE               	addwfc	postinc2,f,c
 14029  017B40  5041               	movf	(btemp+23)^0,w,c
 14030  017B42  22DE               	addwfc	postinc2,f,c
 14031                           
 14032                           ;stkvar	_rule @ sp[(-22)+-6]
 14033  017B44  0EE4               	movlw	-28
 14034  017B46  006F FF8C  F034    	movff	plusw1,btemp+10
 14035  017B4C  0EE5               	movlw	-27
 14036  017B4E  006F FF8C  F035    	movff	plusw1,btemp+11
 14037  017B54  0E08               	movlw	8
 14038  017B56  2434               	addwf	(btemp+10)^0,w,c
 14039  017B58  6ED9               	movwf	fsr2l,c
 14040  017B5A  0E00               	movlw	0
 14041  017B5C  2035               	addwfc	(btemp+11)^0,w,c
 14042  017B5E  6EDA               	movwf	fsr2h,c
 14043  017B60  006F FF78  F034    	movff	postinc2,btemp+10
 14044  017B66  006F FF74  F035    	movff	postdec2,btemp+11
 14045                           
 14046                           ;stkvar	_t @ sp[(-22)+4]
 14047  017B6C  50E1               	movf	fsr1l,w,c
 14048  017B6E  0FEE               	addlw	-18
 14049  017B70  6ED9               	movwf	fsr2l,c
 14050  017B72  50E2               	movf	fsr1h,w,c
 14051  017B74  6EDA               	movwf	fsr2h,c
 14052  017B76  0EFF               	movlw	255
 14053  017B78  22DA               	addwfc	fsr2h,f,c
 14054  017B7A  5034               	movf	(btemp+10)^0,w,c
 14055  017B7C  26DE               	addwf	postinc2,f,c
 14056  017B7E  5035               	movf	(btemp+11)^0,w,c
 14057  017B80  22DE               	addwfc	postinc2,f,c
 14058  017B82  0E00               	movlw	0
 14059  017B84  BE35               	btfsc	(btemp+11)^0,7,c
 14060  017B86  0EFF               	movlw	255
 14061  017B88  22DE               	addwfc	postinc2,f,c
 14062  017B8A  22DE               	addwfc	postinc2,f,c
 14063  017B8C  22DE               	addwfc	postinc2,f,c
 14064  017B8E  22DE               	addwfc	postinc2,f,c
 14065  017B90  22DE               	addwfc	postinc2,f,c
 14066  017B92  22DE               	addwfc	postinc2,f,c
 14067                           
 14068                           ;stkvar	_t @ sp[(-22)+4]
 14069  017B94  0EEE               	movlw	238
 14070  017B96  24E1               	addwf	fsr1l,w,c
 14071  017B98  6ED9               	movwf	fsr2l,c
 14072  017B9A  0EFF               	movlw	255
 14073  017B9C  20E2               	addwfc	fsr1h,w,c
 14074  017B9E  6EDA               	movwf	fsr2h,c
 14075                           
 14076                           ;stkvar	?_rule_to_secs @ sp[(-22)+-8]
 14077  017BA0  0E08               	movlw	8
 14078  017BA2  6E2A               	movwf	btemp^0,c
 14079  017BA4  0EE2               	movlw	-30
 14080  017BA6                     us1608999:
 14081  017BA6  006F FF7B FFE3     	movff	postinc2,plusw1
 14082  017BAC  28E8               	incf	wreg,w,c
 14083  017BAE  2E2A               	decfsz	btemp^0,f,c
 14084  017BB0  D7FA               	bra	us1608999
 14085                           
 14086                           ; _rule_to_secs: autosize = 22, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8,
      +                           argsize = 8, vargsize = 0
 14087  017BB2  0EEA               	movlw	234
 14088  017BB4  26E1               	addwf	fsr1l,f,c
 14089  017BB6  0EFF               	movlw	255
 14090  017BB8  22E2               	addwfc	fsr1h,f,c
 14091  017BBA  0012               	return		;funcret
 14092  017BBC                     __end_of_rule_to_secs:
 14093                           	opt callstack 0
 14094                           
 14095 ;; *************** function _days_in_month *****************
 14096 ;; Defined at:
 14097 ;;		line 210 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 14098 ;; Parameters:    Size  Location     Type
 14099 ;;  m               2  [STACK] int 
 14100 ;;  is_leap         2  [STACK] int 
 14101 ;; Auto vars:     Size  Location     Type
 14102 ;;		None
 14103 ;; Return value:  Size  Location     Type
 14104 ;;                  2  [STACK] int 
 14105 ;; Registers used:
 14106 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 14107 ;; Tracked objects:
 14108 ;;		On entry : 0/0
 14109 ;;		On exit  : 0/0
 14110 ;;		Unchanged: 0/0
 14111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14116 ;;Total ram usage:        0 bytes
 14117 ;; Hardware stack levels used:    1
 14118 ;; Hardware stack levels required when called:   15
 14119 ;; This function calls:
 14120 ;;		Nothing
 14121 ;; This function is called by:
 14122 ;;		_rule_to_secs
 14123 ;; This function uses a reentrant model
 14124 ;;
 14125                           
 14126                           	psect	text42
 14127  00145E                     __ptext42:
 14128                           	opt callstack 0
 14129  00145E                     _days_in_month:
 14130                           	opt callstack 11
 14131                           
 14132                           ;stkvar	_m @ sp[(0)+-2]
 14133                           
 14134                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14135                           ;incstack = 0
 14136  00145E  0EFE               	movlw	-2
 14137  001460  006F FF8C  F02A    	movff	plusw1,btemp
 14138  001466  0E02               	movlw	2
 14139  001468  182A               	xorwf	btemp^0,w,c
 14140  00146A  E10D               	bnz	l11602
 14141  00146C  0EFF               	movlw	-1
 14142  00146E  50E3               	movf	plusw1,w,c
 14143  001470  A4D8               	btfss	status,2,c
 14144  001472  D009               	goto	l11602
 14145                           
 14146                           ;stkvar	_is_leap @ sp[(0)+-4]
 14147  001474  0EFC               	movlw	-4
 14148  001476  50E3               	movf	plusw1,w,c
 14149  001478  0F1C               	addlw	28
 14150  00147A  6E2A               	movwf	btemp^0,c
 14151  00147C  0EFD               	movlw	-3
 14152  00147E  006F FF8C  F02B    	movff	plusw1,btemp+1
 14153  001484  D017               	goto	L11
 14154  001486                     l11602:
 14155  001486  0EFF               	movlw	255
 14156  001488  6E35               	movwf	(btemp+11)^0,c
 14157                           
 14158                           ;stkvar	_m @ sp[(0)+-2]
 14159  00148A  0EFE               	movlw	-2
 14160  00148C  50E3               	movf	plusw1,w,c
 14161  00148E  2435               	addwf	(btemp+11)^0,w,c
 14162  001490  6E34               	movwf	(btemp+10)^0,c
 14163  001492  0ED5               	movlw	213
 14164  001494  6E2A               	movwf	btemp^0,c
 14165  001496  0E0A               	movlw	10
 14166  001498  6E2B               	movwf	(btemp+1)^0,c
 14167  00149A  2A34               	incf	(btemp+10)^0,f,c
 14168  00149C  D003               	goto	u10684
 14169  00149E                     u10685:
 14170  00149E  342B               	rlcf	(btemp+1)^0,w,c
 14171  0014A0  322B               	rrcf	(btemp+1)^0,f,c
 14172  0014A2  322A               	rrcf	btemp^0,f,c
 14173  0014A4                     u10684:
 14174  0014A4  2E34               	decfsz	(btemp+10)^0,f,c
 14175  0014A6  D7FB               	goto	u10685
 14176  0014A8  0E01               	movlw	1
 14177  0014AA  162A               	andwf	btemp^0,f,c
 14178  0014AC  0E00               	movlw	0
 14179  0014AE  162B               	andwf	(btemp+1)^0,f,c
 14180  0014B0  0E1E               	movlw	30
 14181  0014B2  262A               	addwf	btemp^0,f,c
 14182  0014B4                     L11:
 14183  0014B4  0E00               	movlw	0
 14184  0014B6  222B               	addwfc	(btemp+1)^0,f,c
 14185                           
 14186                           ; _days_in_month: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 14187  0014B8  52E5               	movf	postdec1,f,c
 14188  0014BA  52E5               	movf	postdec1,f,c
 14189  0014BC  52E5               	movf	postdec1,f,c
 14190  0014BE  52E5               	movf	postdec1,f,c
 14191  0014C0  0012               	return		;funcret
 14192  0014C2                     __end_of_days_in_month:
 14193                           	opt callstack 0
 14194                           
 14195 ;; *************** function ___year_to_secs *****************
 14196 ;; Defined at:
 14197 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__year_to_secs.c"
 14198 ;; Parameters:    Size  Location     Type
 14199 ;;  year            8  [STACK] long long 
 14200 ;;  is_leap         2  [STACK] PTR int 
 14201 ;;		 -> F5(2), is_leap(2), NULL(0), 
 14202 ;; Auto vars:     Size  Location     Type
 14203 ;;  y               2  [STACK] int 
 14204 ;;  leaps           2  [STACK] int 
 14205 ;;  rem             2  [STACK] int 
 14206 ;;  5               2  [STACK] int 
 14207 ;;  centuries       2  [STACK] int 
 14208 ;;  leaps           2  [STACK] int 
 14209 ;;  cycles          2  [STACK] int 
 14210 ;; Return value:  Size  Location     Type
 14211 ;;                  8  [STACK] long long 
 14212 ;; Registers used:
 14213 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btem
      +p+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btem
      +p+31, prodl, prodh
 14214 ;; Tracked objects:
 14215 ;;		On entry : 0/0
 14216 ;;		On exit  : 0/0
 14217 ;;		Unchanged: 0/0
 14218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14223 ;;Total ram usage:        0 bytes
 14224 ;; Hardware stack levels used:    1
 14225 ;; Hardware stack levels required when called:   16
 14226 ;; This function calls:
 14227 ;;		___aodiv
 14228 ;;		___aomod
 14229 ;;		___lmul
 14230 ;;		___omul
 14231 ;; This function is called by:
 14232 ;;		_rule_to_secs
 14233 ;;		___secs_to_zone
 14234 ;; This function uses a reentrant model
 14235 ;;
 14236                           
 14237                           	psect	text43
 14238  015306                     __ptext43:
 14239                           	opt callstack 0
 14240  015306                     ___year_to_secs:
 14241                           	opt callstack 0
 14242                           
 14243                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 14244  015306  0E0E               	movlw	14
 14245  015308  26E1               	addwf	fsr1l,f,c
 14246  01530A  0E00               	movlw	0
 14247  01530C  22E2               	addwfc	fsr1h,f,c
 14248                           
 14249                           ;stkvar	_year @ sp[(-14)+-8]
 14250                           
 14251                           ;incstack = 0
 14252  01530E  0EEA               	movlw	-22
 14253  015310  50E3               	movf	plusw1,w,c
 14254  015312  0FFE               	addlw	254
 14255  015314  6E3A               	movwf	(btemp+16)^0,c
 14256  015316  0EEB               	movlw	-21
 14257  015318  006F FF8C  F03B    	movff	plusw1,btemp+17
 14258  01531E  0EFF               	movlw	255
 14259  015320  223B               	addwfc	(btemp+17)^0,f,c
 14260  015322  0EEC               	movlw	-20
 14261  015324  006F FF8C  F03C    	movff	plusw1,btemp+18
 14262  01532A  0EFF               	movlw	255
 14263  01532C  223C               	addwfc	(btemp+18)^0,f,c
 14264  01532E  0EED               	movlw	-19
 14265  015330  006F FF8C  F03D    	movff	plusw1,btemp+19
 14266  015336  0EFF               	movlw	255
 14267  015338  223D               	addwfc	(btemp+19)^0,f,c
 14268  01533A  0EEE               	movlw	-18
 14269  01533C  006F FF8C  F03E    	movff	plusw1,btemp+20
 14270  015342  0EFF               	movlw	255
 14271  015344  223E               	addwfc	(btemp+20)^0,f,c
 14272  015346  0EEF               	movlw	-17
 14273  015348  006F FF8C  F03F    	movff	plusw1,btemp+21
 14274  01534E  0EFF               	movlw	255
 14275  015350  223F               	addwfc	(btemp+21)^0,f,c
 14276  015352  0EF0               	movlw	-16
 14277  015354  006F FF8C  F040    	movff	plusw1,btemp+22
 14278  01535A  0EFF               	movlw	255
 14279  01535C  2240               	addwfc	(btemp+22)^0,f,c
 14280  01535E  0EF1               	movlw	-15
 14281  015360  006F FF8C  F041    	movff	plusw1,btemp+23
 14282  015366  0EFF               	movlw	255
 14283  015368  2241               	addwfc	(btemp+23)^0,f,c
 14284  01536A  5041               	movf	(btemp+23)^0,w,c
 14285  01536C  1040               	iorwf	(btemp+22)^0,w,c
 14286  01536E  103F               	iorwf	(btemp+21)^0,w,c
 14287  015370  103E               	iorwf	(btemp+20)^0,w,c
 14288  015372  103D               	iorwf	(btemp+19)^0,w,c
 14289  015374  103C               	iorwf	(btemp+18)^0,w,c
 14290  015376  103B               	iorwf	(btemp+17)^0,w,c
 14291  015378  E103               	bnz	u10691
 14292  01537A  0E89               	movlw	137
 14293  01537C  5C3A               	subwf	(btemp+16)^0,w,c
 14294  01537E  B0D8               	btfsc	status,0,c
 14295  015380                     u10691:
 14296  015380  D0E7               	goto	l11628
 14297                           
 14298                           ;stkvar	_year @ sp[(-14)+-8]
 14299                           ;stkvar	_y @ sp[(-14)+0]
 14300  015382  0EEA               	movlw	-22
 14301  015384  006F FF8C  F02A    	movff	plusw1,btemp
 14302  01538A  0EF2               	movlw	-14
 14303  01538C  0060  F0AB  FFE3   	movff	btemp,plusw1
 14304  015392  0EEB               	movlw	-21
 14305  015394  006F FF8C  F02A    	movff	plusw1,btemp
 14306  01539A  0EF3               	movlw	-13
 14307  01539C  0060  F0AB  FFE3   	movff	btemp,plusw1
 14308                           
 14309                           ;stkvar	_y @ sp[(-14)+0]
 14310  0153A2  0EF2               	movlw	-14
 14311  0153A4  50E3               	movf	plusw1,w,c
 14312  0153A6  0FBC               	addlw	188
 14313  0153A8  6E34               	movwf	(btemp+10)^0,c
 14314  0153AA  0EF3               	movlw	-13
 14315  0153AC  006F FF8C  F035    	movff	plusw1,btemp+11
 14316  0153B2  0EFF               	movlw	255
 14317  0153B4  2235               	addwfc	(btemp+11)^0,f,c
 14318  0153B6  3435               	rlcf	(btemp+11)^0,w,c
 14319  0153B8  3235               	rrcf	(btemp+11)^0,f,c
 14320  0153BA  3234               	rrcf	(btemp+10)^0,f,c
 14321  0153BC  3435               	rlcf	(btemp+11)^0,w,c
 14322  0153BE  3235               	rrcf	(btemp+11)^0,f,c
 14323  0153C0  3234               	rrcf	(btemp+10)^0,f,c
 14324                           
 14325                           ;stkvar	_leaps @ sp[(-14)+2]
 14326  0153C2  0EF4               	movlw	-12
 14327  0153C4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14328  0153CA  0EF5               	movlw	-11
 14329  0153CC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14330  0153D2  0EBC               	movlw	188
 14331  0153D4  6E35               	movwf	(btemp+11)^0,c
 14332                           
 14333                           ;stkvar	_y @ sp[(-14)+0]
 14334  0153D6  0EF2               	movlw	-14
 14335  0153D8  50E3               	movf	plusw1,w,c
 14336  0153DA  2435               	addwf	(btemp+11)^0,w,c
 14337  0153DC  6E34               	movwf	(btemp+10)^0,c
 14338  0153DE  0E03               	movlw	3
 14339  0153E0  1634               	andwf	(btemp+10)^0,f,c
 14340  0153E2  A4D8               	btfss	status,2,c
 14341  0153E4  D01D               	goto	l11620
 14342                           
 14343                           ;stkvar	_leaps @ sp[(-14)+2]
 14344  0153E6  50E1               	movf	fsr1l,w,c
 14345  0153E8  0FF4               	addlw	-12
 14346  0153EA  6ED9               	movwf	fsr2l,c
 14347  0153EC  50E2               	movf	fsr1h,w,c
 14348  0153EE  6EDA               	movwf	fsr2h,c
 14349  0153F0  0EFF               	movlw	255
 14350  0153F2  22DA               	addwfc	fsr2h,f,c
 14351  0153F4  06DE               	decf	postinc2,f,c
 14352  0153F6  0E00               	movlw	0
 14353  0153F8  5ADD               	subwfb	postdec2,f,c
 14354                           
 14355                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14356  0153FA  0EE8               	movlw	-24
 14357  0153FC  006F FF8C  F02A    	movff	plusw1,btemp
 14358  015402  0EE9               	movlw	-23
 14359  015404  50E3               	movf	plusw1,w,c
 14360  015406  102A               	iorwf	btemp^0,w,c
 14361  015408  B4D8               	btfsc	status,2,c
 14362  01540A  D01F               	goto	l11624
 14363                           
 14364                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14365  01540C  0EE8               	movlw	-24
 14366  01540E  006F FF8F FFD9     	movff	plusw1,fsr2l
 14367  015414  0EE9               	movlw	-23
 14368  015416  006F FF8F FFDA     	movff	plusw1,fsr2h
 14369  01541C  0E01               	movlw	1
 14370  01541E  D012               	goto	L12
 14371  015420                     l11620:
 14372                           
 14373                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14374  015420  0EE8               	movlw	-24
 14375  015422  006F FF8C  F02A    	movff	plusw1,btemp
 14376  015428  0EE9               	movlw	-23
 14377  01542A  50E3               	movf	plusw1,w,c
 14378  01542C  102A               	iorwf	btemp^0,w,c
 14379  01542E  B4D8               	btfsc	status,2,c
 14380  015430  D00C               	goto	l11624
 14381                           
 14382                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14383  015432  0EE8               	movlw	-24
 14384  015434  006F FF8F FFD9     	movff	plusw1,fsr2l
 14385  01543A  0EE9               	movlw	-23
 14386  01543C  006F FF8F FFDA     	movff	plusw1,fsr2h
 14387  015442  0E00               	movlw	0
 14388  015444                     L12:
 14389  015444  6EDE               	movwf	postinc2,c
 14390  015446  0E00               	movlw	0
 14391  015448  6EDD               	movwf	postdec2,c
 14392  01544A                     l11624:
 14393  01544A  0E80               	movlw	128
 14394  01544C  6EE6               	movwf	postinc1,c
 14395  01544E  0E33               	movlw	51
 14396  015450  6EE6               	movwf	postinc1,c
 14397  015452  0EE1               	movlw	225
 14398  015454  6EE6               	movwf	postinc1,c
 14399  015456  0E01               	movlw	1
 14400  015458  6EE6               	movwf	postinc1,c
 14401                           
 14402                           ;stkvar	_y @ sp[(-18)+0]
 14403  01545A  0EEE               	movlw	-18
 14404  01545C  006F FF8C  F034    	movff	plusw1,btemp+10
 14405  015462  0EEF               	movlw	-17
 14406  015464  006F FF8C  F035    	movff	plusw1,btemp+11
 14407  01546A  0EBA               	movlw	186
 14408  01546C  2434               	addwf	(btemp+10)^0,w,c
 14409  01546E  6E2E               	movwf	(btemp+4)^0,c
 14410  015470  0EFF               	movlw	255
 14411  015472  2035               	addwfc	(btemp+11)^0,w,c
 14412  015474  6E2F               	movwf	(btemp+5)^0,c
 14413  015476  6A30               	clrf	(btemp+6)^0,c
 14414  015478  BE2F               	btfsc	(btemp+5)^0,7,c
 14415  01547A  0630               	decf	(btemp+6)^0,f,c
 14416  01547C  5030               	movf	(btemp+6)^0,w,c
 14417  01547E  6E31               	movwf	(btemp+7)^0,c
 14418  015480  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 14419  015486  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 14420  01548C  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 14421  015492  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 14422  015498  EC54  F0FF         	call	___lmul	;wreg free
 14423  01549C  0060  F0A8  F032   	movff	btemp,btemp+8
 14424  0154A2  0060  F0AC  F033   	movff	btemp+1,btemp+9
 14425  0154A8  0060  F0B0  F034   	movff	btemp+2,btemp+10
 14426  0154AE  0060  F0B4  F035   	movff	btemp+3,btemp+11
 14427  0154B4  0E80               	movlw	128
 14428  0154B6  6EE6               	movwf	postinc1,c
 14429  0154B8  0E51               	movlw	81
 14430  0154BA  6EE6               	movwf	postinc1,c
 14431  0154BC  0E01               	movlw	1
 14432  0154BE  6EE6               	movwf	postinc1,c
 14433  0154C0  0E00               	movlw	0
 14434  0154C2  6EE6               	movwf	postinc1,c
 14435                           
 14436                           ;stkvar	_leaps @ sp[(-18)+2]
 14437  0154C4  0EF0               	movlw	-16
 14438  0154C6  006F FF8C  F030    	movff	plusw1,btemp+6
 14439  0154CC  0EF1               	movlw	-15
 14440  0154CE  006F FF8C  F031    	movff	plusw1,btemp+7
 14441  0154D4  0060  F0C0  F02A   	movff	btemp+6,btemp
 14442  0154DA  0060  F0C4  F02B   	movff	btemp+7,btemp+1
 14443  0154E0  0E00               	movlw	0
 14444  0154E2  BE2B               	btfsc	(btemp+1)^0,7,c
 14445  0154E4  0EFF               	movlw	255
 14446  0154E6  6E2C               	movwf	(btemp+2)^0,c
 14447  0154E8  6E2D               	movwf	(btemp+3)^0,c
 14448  0154EA  0060  F0AB  FFE6   	movff	btemp,postinc1
 14449  0154F0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 14450  0154F6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 14451  0154FC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 14452  015502  EC54  F0FF         	call	___lmul	;wreg free
 14453  015506  502A               	movf	btemp^0,w,c
 14454  015508  2432               	addwf	(btemp+8)^0,w,c
 14455  01550A  6E2E               	movwf	(btemp+4)^0,c
 14456  01550C  502B               	movf	(btemp+1)^0,w,c
 14457  01550E  2033               	addwfc	(btemp+9)^0,w,c
 14458  015510  6E2F               	movwf	(btemp+5)^0,c
 14459  015512  502C               	movf	(btemp+2)^0,w,c
 14460  015514  2034               	addwfc	(btemp+10)^0,w,c
 14461  015516  6E30               	movwf	(btemp+6)^0,c
 14462  015518  502D               	movf	(btemp+3)^0,w,c
 14463  01551A  2035               	addwfc	(btemp+11)^0,w,c
 14464  01551C  6E31               	movwf	(btemp+7)^0,c
 14465  01551E  0060  F0B8  F03A   	movff	btemp+4,btemp+16
 14466  015524  0060  F0BC  F03B   	movff	btemp+5,btemp+17
 14467  01552A  0060  F0C0  F03C   	movff	btemp+6,btemp+18
 14468  015530  0060  F0C4  F03D   	movff	btemp+7,btemp+19
 14469  015536  6A3E               	clrf	(btemp+20)^0,c
 14470  015538  BE3D               	btfsc	(btemp+19)^0,7,c
 14471  01553A  683E               	setf	(btemp+20)^0,c
 14472  01553C  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 14473  015542  0060  F0F8  F040   	movff	btemp+20,btemp+22
 14474  015548  0060  F0F8  F041   	movff	btemp+20,btemp+23
 14475  01554E  D36F               	goto	L13
 14476  015550                     l11628:
 14477                           
 14478                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14479  015550  0EE8               	movlw	-24
 14480  015552  006F FF8C  F02A    	movff	plusw1,btemp
 14481  015558  0EE9               	movlw	-23
 14482  01555A  50E3               	movf	plusw1,w,c
 14483  01555C  102A               	iorwf	btemp^0,w,c
 14484  01555E  A4D8               	btfss	status,2,c
 14485  015560  D012               	goto	l11634
 14486                           
 14487                           ;stkvar	F5 @ sp[(-14)+6]
 14488  015562  0EF8               	movlw	-8
 14489  015564  6AE3               	clrf	plusw1,c
 14490  015566  0EF9               	movlw	-7
 14491  015568  6AE3               	clrf	plusw1,c
 14492                           
 14493                           ;stkvar	F5 @ sp[(-14)+6]
 14494  01556A  0EF8               	movlw	248
 14495  01556C  24E1               	addwf	fsr1l,w,c
 14496  01556E  6E34               	movwf	(btemp+10)^0,c
 14497  015570  0EFF               	movlw	255
 14498  015572  20E2               	addwfc	fsr1h,w,c
 14499  015574  6E35               	movwf	(btemp+11)^0,c
 14500                           
 14501                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14502  015576  0EE9               	movlw	-23
 14503  015578  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14504  01557E  0EE8               	movlw	-24
 14505  015580  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14506  015586                     l11634:
 14507  015586  0E90               	movlw	144
 14508  015588  6EE6               	movwf	postinc1,c
 14509  01558A  0E01               	movlw	1
 14510  01558C  6EE6               	movwf	postinc1,c
 14511  01558E  0E00               	movlw	0
 14512  015590  6EE6               	movwf	postinc1,c
 14513  015592  0E00               	movlw	0
 14514  015594  6EE6               	movwf	postinc1,c
 14515  015596  0E00               	movlw	0
 14516  015598  6EE6               	movwf	postinc1,c
 14517  01559A  0E00               	movlw	0
 14518  01559C  6EE6               	movwf	postinc1,c
 14519  01559E  0E00               	movlw	0
 14520  0155A0  6EE6               	movwf	postinc1,c
 14521  0155A2  0E00               	movlw	0
 14522  0155A4  6EE6               	movwf	postinc1,c
 14523                           
 14524                           ;stkvar	_year @ sp[(-22)+-8]
 14525  0155A6  0EE2               	movlw	-30
 14526  0155A8  50E3               	movf	plusw1,w,c
 14527  0155AA  0F9C               	addlw	156
 14528  0155AC  6E3A               	movwf	(btemp+16)^0,c
 14529  0155AE  0EE3               	movlw	-29
 14530  0155B0  006F FF8C  F03B    	movff	plusw1,btemp+17
 14531  0155B6  0EFF               	movlw	255
 14532  0155B8  223B               	addwfc	(btemp+17)^0,f,c
 14533  0155BA  0EE4               	movlw	-28
 14534  0155BC  006F FF8C  F03C    	movff	plusw1,btemp+18
 14535  0155C2  0EFF               	movlw	255
 14536  0155C4  223C               	addwfc	(btemp+18)^0,f,c
 14537  0155C6  0EE5               	movlw	-27
 14538  0155C8  006F FF8C  F03D    	movff	plusw1,btemp+19
 14539  0155CE  0EFF               	movlw	255
 14540  0155D0  223D               	addwfc	(btemp+19)^0,f,c
 14541  0155D2  0EE6               	movlw	-26
 14542  0155D4  006F FF8C  F03E    	movff	plusw1,btemp+20
 14543  0155DA  0EFF               	movlw	255
 14544  0155DC  223E               	addwfc	(btemp+20)^0,f,c
 14545  0155DE  0EE7               	movlw	-25
 14546  0155E0  006F FF8C  F03F    	movff	plusw1,btemp+21
 14547  0155E6  0EFF               	movlw	255
 14548  0155E8  223F               	addwfc	(btemp+21)^0,f,c
 14549  0155EA  0EE8               	movlw	-24
 14550  0155EC  006F FF8C  F040    	movff	plusw1,btemp+22
 14551  0155F2  0EFF               	movlw	255
 14552  0155F4  2240               	addwfc	(btemp+22)^0,f,c
 14553  0155F6  0EE9               	movlw	-23
 14554  0155F8  006F FF8C  F041    	movff	plusw1,btemp+23
 14555  0155FE  0EFF               	movlw	255
 14556  015600  2241               	addwfc	(btemp+23)^0,f,c
 14557  015602  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 14558  015608  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 14559  01560E  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 14560  015614  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 14561  01561A  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 14562  015620  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 14563  015626  0060  F103  FFE6   	movff	btemp+22,postinc1
 14564  01562C  0060  F107  FFE6   	movff	btemp+23,postinc1
 14565  015632  EC64  F0DE         	call	___aodiv	;wreg free
 14566  015636  52E5               	movf	postdec1,f,c
 14567  015638  006F FF9C  F041    	movff	indf1,btemp+23
 14568  01563E  52E5               	movf	postdec1,f,c
 14569  015640  006F FF9C  F040    	movff	indf1,btemp+22
 14570  015646  52E5               	movf	postdec1,f,c
 14571  015648  006F FF9C  F03F    	movff	indf1,btemp+21
 14572  01564E  52E5               	movf	postdec1,f,c
 14573  015650  006F FF9C  F03E    	movff	indf1,btemp+20
 14574  015656  52E5               	movf	postdec1,f,c
 14575  015658  006F FF9C  F03D    	movff	indf1,btemp+19
 14576  01565E  52E5               	movf	postdec1,f,c
 14577  015660  006F FF9C  F03C    	movff	indf1,btemp+18
 14578  015666  52E5               	movf	postdec1,f,c
 14579  015668  006F FF9C  F03B    	movff	indf1,btemp+17
 14580  01566E  52E5               	movf	postdec1,f,c
 14581  015670  006F FF9C  F03A    	movff	indf1,btemp+16
 14582  015676  0EF8               	movlw	248
 14583  015678  26E1               	addwf	fsr1l,f,c
 14584  01567A  0EFF               	movlw	255
 14585  01567C  22E2               	addwfc	fsr1h,f,c
 14586  01567E  0060  F0E8  F034   	movff	btemp+16,btemp+10
 14587  015684  0060  F0EC  F035   	movff	btemp+17,btemp+11
 14588                           
 14589                           ;stkvar	_cycles @ sp[(-14)+12]
 14590  01568A  0EFE               	movlw	-2
 14591  01568C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14592  015692  0EFF               	movlw	-1
 14593  015694  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14594  01569A  0E90               	movlw	144
 14595  01569C  6EE6               	movwf	postinc1,c
 14596  01569E  0E01               	movlw	1
 14597  0156A0  6EE6               	movwf	postinc1,c
 14598  0156A2  0E00               	movlw	0
 14599  0156A4  6EE6               	movwf	postinc1,c
 14600  0156A6  0E00               	movlw	0
 14601  0156A8  6EE6               	movwf	postinc1,c
 14602  0156AA  0E00               	movlw	0
 14603  0156AC  6EE6               	movwf	postinc1,c
 14604  0156AE  0E00               	movlw	0
 14605  0156B0  6EE6               	movwf	postinc1,c
 14606  0156B2  0E00               	movlw	0
 14607  0156B4  6EE6               	movwf	postinc1,c
 14608  0156B6  0E00               	movlw	0
 14609  0156B8  6EE6               	movwf	postinc1,c
 14610                           
 14611                           ;stkvar	_year @ sp[(-22)+-8]
 14612  0156BA  0EE2               	movlw	-30
 14613  0156BC  50E3               	movf	plusw1,w,c
 14614  0156BE  0F9C               	addlw	156
 14615  0156C0  6E3A               	movwf	(btemp+16)^0,c
 14616  0156C2  0EE3               	movlw	-29
 14617  0156C4  006F FF8C  F03B    	movff	plusw1,btemp+17
 14618  0156CA  0EFF               	movlw	255
 14619  0156CC  223B               	addwfc	(btemp+17)^0,f,c
 14620  0156CE  0EE4               	movlw	-28
 14621  0156D0  006F FF8C  F03C    	movff	plusw1,btemp+18
 14622  0156D6  0EFF               	movlw	255
 14623  0156D8  223C               	addwfc	(btemp+18)^0,f,c
 14624  0156DA  0EE5               	movlw	-27
 14625  0156DC  006F FF8C  F03D    	movff	plusw1,btemp+19
 14626  0156E2  0EFF               	movlw	255
 14627  0156E4  223D               	addwfc	(btemp+19)^0,f,c
 14628  0156E6  0EE6               	movlw	-26
 14629  0156E8  006F FF8C  F03E    	movff	plusw1,btemp+20
 14630  0156EE  0EFF               	movlw	255
 14631  0156F0  223E               	addwfc	(btemp+20)^0,f,c
 14632  0156F2  0EE7               	movlw	-25
 14633  0156F4  006F FF8C  F03F    	movff	plusw1,btemp+21
 14634  0156FA  0EFF               	movlw	255
 14635  0156FC  223F               	addwfc	(btemp+21)^0,f,c
 14636  0156FE  0EE8               	movlw	-24
 14637  015700  006F FF8C  F040    	movff	plusw1,btemp+22
 14638  015706  0EFF               	movlw	255
 14639  015708  2240               	addwfc	(btemp+22)^0,f,c
 14640  01570A  0EE9               	movlw	-23
 14641  01570C  006F FF8C  F041    	movff	plusw1,btemp+23
 14642  015712  0EFF               	movlw	255
 14643  015714  2241               	addwfc	(btemp+23)^0,f,c
 14644  015716  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 14645  01571C  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 14646  015722  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 14647  015728  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 14648  01572E  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 14649  015734  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 14650  01573A  0060  F103  FFE6   	movff	btemp+22,postinc1
 14651  015740  0060  F107  FFE6   	movff	btemp+23,postinc1
 14652  015746  EC50  F0E4         	call	___aomod	;wreg free
 14653  01574A  52E5               	movf	postdec1,f,c
 14654  01574C  006F FF9C  F041    	movff	indf1,btemp+23
 14655  015752  52E5               	movf	postdec1,f,c
 14656  015754  006F FF9C  F040    	movff	indf1,btemp+22
 14657  01575A  52E5               	movf	postdec1,f,c
 14658  01575C  006F FF9C  F03F    	movff	indf1,btemp+21
 14659  015762  52E5               	movf	postdec1,f,c
 14660  015764  006F FF9C  F03E    	movff	indf1,btemp+20
 14661  01576A  52E5               	movf	postdec1,f,c
 14662  01576C  006F FF9C  F03D    	movff	indf1,btemp+19
 14663  015772  52E5               	movf	postdec1,f,c
 14664  015774  006F FF9C  F03C    	movff	indf1,btemp+18
 14665  01577A  52E5               	movf	postdec1,f,c
 14666  01577C  006F FF9C  F03B    	movff	indf1,btemp+17
 14667  015782  52E5               	movf	postdec1,f,c
 14668  015784  006F FF9C  F03A    	movff	indf1,btemp+16
 14669  01578A  0EF8               	movlw	248
 14670  01578C  26E1               	addwf	fsr1l,f,c
 14671  01578E  0EFF               	movlw	255
 14672  015790  22E2               	addwfc	fsr1h,f,c
 14673  015792  0060  F0E8  F034   	movff	btemp+16,btemp+10
 14674  015798  0060  F0EC  F035   	movff	btemp+17,btemp+11
 14675                           
 14676                           ;stkvar	_rem @ sp[(-14)+4]
 14677  01579E  0EF6               	movlw	-10
 14678  0157A0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14679  0157A6  0EF7               	movlw	-9
 14680  0157A8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14681                           
 14682                           ;stkvar	_rem @ sp[(-14)+4]
 14683  0157AE  0EF7               	movlw	-9
 14684  0157B0  AEE3               	btfss	plusw1,7,c
 14685  0157B2  D015               	goto	l11644
 14686                           
 14687                           ;stkvar	_cycles @ sp[(-14)+12]
 14688  0157B4  50E1               	movf	fsr1l,w,c
 14689  0157B6  0FFE               	addlw	-2
 14690  0157B8  6ED9               	movwf	fsr2l,c
 14691  0157BA  50E2               	movf	fsr1h,w,c
 14692  0157BC  6EDA               	movwf	fsr2h,c
 14693  0157BE  0EFF               	movlw	255
 14694  0157C0  22DA               	addwfc	fsr2h,f,c
 14695  0157C2  06DE               	decf	postinc2,f,c
 14696  0157C4  0E00               	movlw	0
 14697  0157C6  5ADD               	subwfb	postdec2,f,c
 14698                           
 14699                           ;stkvar	_rem @ sp[(-14)+4]
 14700  0157C8  50E1               	movf	fsr1l,w,c
 14701  0157CA  0FF6               	addlw	-10
 14702  0157CC  6ED9               	movwf	fsr2l,c
 14703  0157CE  50E2               	movf	fsr1h,w,c
 14704  0157D0  6EDA               	movwf	fsr2h,c
 14705  0157D2  0EFF               	movlw	255
 14706  0157D4  22DA               	addwfc	fsr2h,f,c
 14707  0157D6  0E90               	movlw	144
 14708  0157D8  26DE               	addwf	postinc2,f,c
 14709  0157DA  0E01               	movlw	1
 14710  0157DC  22DD               	addwfc	postdec2,f,c
 14711  0157DE                     l11644:
 14712                           
 14713                           ;stkvar	_rem @ sp[(-14)+4]
 14714  0157DE  0EF6               	movlw	-10
 14715  0157E0  006F FF8C  F02A    	movff	plusw1,btemp
 14716  0157E6  0EF7               	movlw	-9
 14717  0157E8  50E3               	movf	plusw1,w,c
 14718  0157EA  102A               	iorwf	btemp^0,w,c
 14719  0157EC  A4D8               	btfss	status,2,c
 14720  0157EE  D015               	goto	l11652
 14721                           
 14722                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14723  0157F0  0EE8               	movlw	-24
 14724  0157F2  006F FF8F FFD9     	movff	plusw1,fsr2l
 14725  0157F8  0EE9               	movlw	-23
 14726  0157FA  006F FF8F FFDA     	movff	plusw1,fsr2h
 14727  015800  0E01               	movlw	1
 14728  015802  6EDE               	movwf	postinc2,c
 14729  015804  0E00               	movlw	0
 14730  015806  6EDD               	movwf	postdec2,c
 14731                           
 14732                           ;stkvar	_centuries @ sp[(-14)+8]
 14733  015808  0EFA               	movlw	-6
 14734  01580A  6AE3               	clrf	plusw1,c
 14735  01580C  0EFB               	movlw	-5
 14736  01580E  6AE3               	clrf	plusw1,c
 14737  015810                     l11650:
 14738                           
 14739                           ;stkvar	_leaps @ sp[(-14)+10]
 14740  015810  0EFC               	movlw	-4
 14741  015812  6AE3               	clrf	plusw1,c
 14742  015814  0EFD               	movlw	-3
 14743  015816  6AE3               	clrf	plusw1,c
 14744  015818  D0D6               	goto	l11684
 14745  01581A                     l11652:
 14746                           
 14747                           ;stkvar	_rem @ sp[(-14)+4]
 14748  01581A  0EF7               	movlw	-9
 14749  01581C  BEE3               	btfsc	plusw1,7,c
 14750  01581E  D04A               	goto	l11664
 14751  015820  0EF7               	movlw	-9
 14752  015822  50E3               	movf	plusw1,w,c
 14753  015824  E108               	bnz	u10760
 14754  015826  0EF6               	movlw	-10
 14755  015828  006F FF8C  F02A    	movff	plusw1,btemp
 14756  01582E  0EC8               	movlw	200
 14757  015830  5E2A               	subwf	btemp^0,f,c
 14758  015832  A0D8               	btfss	status,0,c
 14759  015834  D03F               	goto	l11664
 14760  015836                     u10760:
 14761                           
 14762                           ;stkvar	_rem @ sp[(-14)+4]
 14763  015836  0EF7               	movlw	-9
 14764  015838  BEE3               	btfsc	plusw1,7,c
 14765  01583A  D025               	goto	l11660
 14766  01583C  0EF6               	movlw	-10
 14767  01583E  006F FF8C  F02A    	movff	plusw1,btemp
 14768  015844  0E2C               	movlw	44
 14769  015846  5E2A               	subwf	btemp^0,f,c
 14770  015848  0EF7               	movlw	-9
 14771  01584A  006F FF8C  F02A    	movff	plusw1,btemp
 14772  015850  0E01               	movlw	1
 14773  015852  5A2A               	subwfb	btemp^0,f,c
 14774  015854  A0D8               	btfss	status,0,c
 14775  015856  D017               	goto	l11660
 14776  015858  0E03               	movlw	3
 14777  01585A  6E34               	movwf	(btemp+10)^0,c
 14778  01585C  0E00               	movlw	0
 14779  01585E  6E35               	movwf	(btemp+11)^0,c
 14780                           
 14781                           ;stkvar	_centuries @ sp[(-14)+8]
 14782  015860  0EFA               	movlw	-6
 14783  015862  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14784  015868  0EFB               	movlw	-5
 14785  01586A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14786                           
 14787                           ;stkvar	_rem @ sp[(-14)+4]
 14788  015870  50E1               	movf	fsr1l,w,c
 14789  015872  0FF6               	addlw	-10
 14790  015874  6ED9               	movwf	fsr2l,c
 14791  015876  50E2               	movf	fsr1h,w,c
 14792  015878  6EDA               	movwf	fsr2h,c
 14793  01587A  0EFF               	movlw	255
 14794  01587C  22DA               	addwfc	fsr2h,f,c
 14795  01587E  0ED4               	movlw	212
 14796  015880  26DE               	addwf	postinc2,f,c
 14797  015882  0EFE               	movlw	254
 14798  015884  D015               	goto	L14
 14799  015886                     l11660:
 14800  015886  0E02               	movlw	2
 14801  015888  6E34               	movwf	(btemp+10)^0,c
 14802  01588A  0E00               	movlw	0
 14803  01588C  6E35               	movwf	(btemp+11)^0,c
 14804                           
 14805                           ;stkvar	_centuries @ sp[(-14)+8]
 14806  01588E  0EFA               	movlw	-6
 14807  015890  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14808  015896  0EFB               	movlw	-5
 14809  015898  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14810                           
 14811                           ;stkvar	_rem @ sp[(-14)+4]
 14812  01589E  50E1               	movf	fsr1l,w,c
 14813  0158A0  0FF6               	addlw	-10
 14814  0158A2  6ED9               	movwf	fsr2l,c
 14815  0158A4  50E2               	movf	fsr1h,w,c
 14816  0158A6  6EDA               	movwf	fsr2h,c
 14817  0158A8  0EFF               	movlw	255
 14818  0158AA  22DA               	addwfc	fsr2h,f,c
 14819  0158AC  0E38               	movlw	56
 14820  0158AE  D024               	goto	L15
 14821  0158B0                     L14:
 14822  0158B0  22DD               	addwfc	postdec2,f,c
 14823  0158B2  D029               	goto	l11672
 14824  0158B4                     l11664:
 14825                           
 14826                           ;stkvar	_rem @ sp[(-14)+4]
 14827  0158B4  0EF7               	movlw	-9
 14828  0158B6  BEE3               	btfsc	plusw1,7,c
 14829  0158B8  D022               	goto	l11670
 14830  0158BA  0EF7               	movlw	-9
 14831  0158BC  50E3               	movf	plusw1,w,c
 14832  0158BE  E108               	bnz	u10780
 14833  0158C0  0EF6               	movlw	-10
 14834  0158C2  006F FF8C  F02A    	movff	plusw1,btemp
 14835  0158C8  0E64               	movlw	100
 14836  0158CA  5E2A               	subwf	btemp^0,f,c
 14837  0158CC  A0D8               	btfss	status,0,c
 14838  0158CE  D017               	goto	l11670
 14839  0158D0                     u10780:
 14840  0158D0  0E01               	movlw	1
 14841  0158D2  6E34               	movwf	(btemp+10)^0,c
 14842  0158D4  0E00               	movlw	0
 14843  0158D6  6E35               	movwf	(btemp+11)^0,c
 14844                           
 14845                           ;stkvar	_centuries @ sp[(-14)+8]
 14846  0158D8  0EFA               	movlw	-6
 14847  0158DA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14848  0158E0  0EFB               	movlw	-5
 14849  0158E2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14850                           
 14851                           ;stkvar	_rem @ sp[(-14)+4]
 14852  0158E8  50E1               	movf	fsr1l,w,c
 14853  0158EA  0FF6               	addlw	-10
 14854  0158EC  6ED9               	movwf	fsr2l,c
 14855  0158EE  50E2               	movf	fsr1h,w,c
 14856  0158F0  6EDA               	movwf	fsr2h,c
 14857  0158F2  0EFF               	movlw	255
 14858  0158F4  22DA               	addwfc	fsr2h,f,c
 14859  0158F6  0E9C               	movlw	156
 14860  0158F8                     L15:
 14861  0158F8  26DE               	addwf	postinc2,f,c
 14862  0158FA  0EFF               	movlw	255
 14863  0158FC  D7D9               	goto	L14
 14864  0158FE                     l11670:
 14865                           
 14866                           ;stkvar	_centuries @ sp[(-14)+8]
 14867  0158FE  0EFA               	movlw	-6
 14868  015900  6AE3               	clrf	plusw1,c
 14869  015902  0EFB               	movlw	-5
 14870  015904  6AE3               	clrf	plusw1,c
 14871  015906                     l11672:
 14872                           
 14873                           ;stkvar	_rem @ sp[(-14)+4]
 14874  015906  0EF6               	movlw	-10
 14875  015908  006F FF8C  F02A    	movff	plusw1,btemp
 14876  01590E  0EF7               	movlw	-9
 14877  015910  50E3               	movf	plusw1,w,c
 14878  015912  102A               	iorwf	btemp^0,w,c
 14879  015914  A4D8               	btfss	status,2,c
 14880  015916  D00D               	goto	l11678
 14881                           
 14882                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14883  015918  0EE8               	movlw	-24
 14884  01591A  006F FF8F FFD9     	movff	plusw1,fsr2l
 14885  015920  0EE9               	movlw	-23
 14886  015922  006F FF8F FFDA     	movff	plusw1,fsr2h
 14887  015928  0E00               	movlw	0
 14888  01592A  6EDE               	movwf	postinc2,c
 14889  01592C  0E00               	movlw	0
 14890  01592E  6EDD               	movwf	postdec2,c
 14891  015930  D76F               	goto	l11650
 14892  015932                     l11678:
 14893                           
 14894                           ;stkvar	_rem @ sp[(-14)+4]
 14895  015932  0EF6               	movlw	-10
 14896  015934  006F FF8C  F034    	movff	plusw1,btemp+10
 14897  01593A  0EF7               	movlw	-9
 14898  01593C  006F FF8C  F035    	movff	plusw1,btemp+11
 14899  015942  90D8               	bcf	status,0,c
 14900  015944  3235               	rrcf	(btemp+11)^0,f,c
 14901  015946  3234               	rrcf	(btemp+10)^0,f,c
 14902  015948  90D8               	bcf	status,0,c
 14903  01594A  3235               	rrcf	(btemp+11)^0,f,c
 14904  01594C  3234               	rrcf	(btemp+10)^0,f,c
 14905                           
 14906                           ;stkvar	_leaps @ sp[(-14)+10]
 14907  01594E  0EFC               	movlw	-4
 14908  015950  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14909  015956  0EFD               	movlw	-3
 14910  015958  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14911  01595E  0E03               	movlw	3
 14912  015960  6E34               	movwf	(btemp+10)^0,c
 14913  015962  0E00               	movlw	0
 14914  015964  6E35               	movwf	(btemp+11)^0,c
 14915                           
 14916                           ;stkvar	_rem @ sp[(-14)+4]
 14917  015966  0EF6               	movlw	-10
 14918  015968  006F FF8C  F02A    	movff	plusw1,btemp
 14919  01596E  5034               	movf	(btemp+10)^0,w,c
 14920  015970  162A               	andwf	btemp^0,f,c
 14921  015972  0EF6               	movlw	-10
 14922  015974  0060  F0AB  FFE3   	movff	btemp,plusw1
 14923  01597A  0EF7               	movlw	-9
 14924  01597C  006F FF8C  F02A    	movff	plusw1,btemp
 14925  015982  5035               	movf	(btemp+11)^0,w,c
 14926  015984  162A               	andwf	btemp^0,f,c
 14927  015986  0EF7               	movlw	-9
 14928  015988  0060  F0AB  FFE3   	movff	btemp,plusw1
 14929                           
 14930                           ;stkvar	_rem @ sp[(-14)+4]
 14931  01598E  0EF6               	movlw	-10
 14932  015990  006F FF8C  F02A    	movff	plusw1,btemp
 14933  015996  0EF7               	movlw	-9
 14934  015998  50E3               	movf	plusw1,w,c
 14935  01599A  102A               	iorwf	btemp^0,w,c
 14936  01599C  A4D8               	btfss	status,2,c
 14937  01599E  D002               	goto	u10800
 14938  0159A0  0E01               	movlw	1
 14939  0159A2  D001               	goto	u10810
 14940  0159A4                     u10800:
 14941  0159A4  0E00               	movlw	0
 14942  0159A6                     u10810:
 14943  0159A6  6E34               	movwf	(btemp+10)^0,c
 14944  0159A8  6A35               	clrf	(btemp+11)^0,c
 14945                           
 14946                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14947  0159AA  0EE8               	movlw	-24
 14948  0159AC  006F FF8F FFD9     	movff	plusw1,fsr2l
 14949  0159B2  0EE9               	movlw	-23
 14950  0159B4  006F FF8F FFDA     	movff	plusw1,fsr2h
 14951  0159BA  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 14952  0159C0  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 14953  0159C6                     l11684:
 14954                           
 14955                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14956  0159C6  0EE8               	movlw	-24
 14957  0159C8  006F FF8F FFD9     	movff	plusw1,fsr2l
 14958  0159CE  0EE9               	movlw	-23
 14959  0159D0  006F FF8F FFDA     	movff	plusw1,fsr2h
 14960  0159D6  006F FF78  F034    	movff	postinc2,btemp+10
 14961  0159DC  006F FF74  F035    	movff	postdec2,btemp+11
 14962                           
 14963                           ;stkvar	_centuries @ sp[(-14)+8]
 14964  0159E2  0EFA               	movlw	-6
 14965  0159E4  006F FF8C  F032    	movff	plusw1,btemp+8
 14966  0159EA  0EFB               	movlw	-5
 14967  0159EC  006F FF8C  F033    	movff	plusw1,btemp+9
 14968  0159F2  0E18               	movlw	24
 14969  0159F4  0232               	mulwf	(btemp+8)^0,c
 14970  0159F6  006F FFCC  F030    	movff	prodl,btemp+6
 14971  0159FC  006F FFD0  F031    	movff	prodh,btemp+7
 14972  015A02  0233               	mulwf	(btemp+9)^0,c
 14973  015A04  50F3               	movf	prodl,w,c
 14974  015A06  2631               	addwf	(btemp+7)^0,f,c
 14975                           
 14976                           ;stkvar	_cycles @ sp[(-14)+12]
 14977  015A08  0EFE               	movlw	-2
 14978  015A0A  006F FF8C  F032    	movff	plusw1,btemp+8
 14979  015A10  0EFF               	movlw	-1
 14980  015A12  006F FF8C  F033    	movff	plusw1,btemp+9
 14981  015A18  0E61               	movlw	97
 14982  015A1A  0232               	mulwf	(btemp+8)^0,c
 14983  015A1C  006F FFCC  F02E    	movff	prodl,btemp+4
 14984  015A22  006F FFD0  F02F    	movff	prodh,btemp+5
 14985  015A28  0233               	mulwf	(btemp+9)^0,c
 14986  015A2A  50F3               	movf	prodl,w,c
 14987  015A2C  262F               	addwf	(btemp+5)^0,f,c
 14988  015A2E  5030               	movf	(btemp+6)^0,w,c
 14989  015A30  262E               	addwf	(btemp+4)^0,f,c
 14990  015A32  5031               	movf	(btemp+7)^0,w,c
 14991  015A34  222F               	addwfc	(btemp+5)^0,f,c
 14992  015A36  5034               	movf	(btemp+10)^0,w,c
 14993  015A38  5E2E               	subwf	(btemp+4)^0,f,c
 14994  015A3A  5035               	movf	(btemp+11)^0,w,c
 14995  015A3C  5A2F               	subwfb	(btemp+5)^0,f,c
 14996                           
 14997                           ;stkvar	_leaps @ sp[(-14)+10]
 14998  015A3E  50E1               	movf	fsr1l,w,c
 14999  015A40  0FFC               	addlw	-4
 15000  015A42  6ED9               	movwf	fsr2l,c
 15001  015A44  50E2               	movf	fsr1h,w,c
 15002  015A46  6EDA               	movwf	fsr2h,c
 15003  015A48  0EFF               	movlw	255
 15004  015A4A  22DA               	addwfc	fsr2h,f,c
 15005  015A4C  502E               	movf	(btemp+4)^0,w,c
 15006  015A4E  26DE               	addwf	postinc2,f,c
 15007  015A50  502F               	movf	(btemp+5)^0,w,c
 15008  015A52  22DD               	addwfc	postdec2,f,c
 15009  015A54  0E80               	movlw	128
 15010  015A56  6EE6               	movwf	postinc1,c
 15011  015A58  0E51               	movlw	81
 15012  015A5A  6EE6               	movwf	postinc1,c
 15013  015A5C  0E01               	movlw	1
 15014  015A5E  6EE6               	movwf	postinc1,c
 15015  015A60  0E00               	movlw	0
 15016  015A62  6EE6               	movwf	postinc1,c
 15017  015A64  0E00               	movlw	0
 15018  015A66  6EE6               	movwf	postinc1,c
 15019  015A68  0E00               	movlw	0
 15020  015A6A  6EE6               	movwf	postinc1,c
 15021  015A6C  0E00               	movlw	0
 15022  015A6E  6EE6               	movwf	postinc1,c
 15023  015A70  0E00               	movlw	0
 15024  015A72  6EE6               	movwf	postinc1,c
 15025                           
 15026                           ;stkvar	_leaps @ sp[(-22)+10]
 15027  015A74  0EF4               	movlw	-12
 15028  015A76  006F FF8C  F03A    	movff	plusw1,btemp+16
 15029  015A7C  0EF5               	movlw	-11
 15030  015A7E  006F FF8C  F03B    	movff	plusw1,btemp+17
 15031  015A84  6A3C               	clrf	(btemp+18)^0,c
 15032  015A86  BE3B               	btfsc	(btemp+17)^0,7,c
 15033  015A88  683C               	setf	(btemp+18)^0,c
 15034  015A8A  0060  F0F0  F03D   	movff	btemp+18,btemp+19
 15035  015A90  0060  F0F0  F03E   	movff	btemp+18,btemp+20
 15036  015A96  0060  F0F0  F03F   	movff	btemp+18,btemp+21
 15037  015A9C  0060  F0F0  F040   	movff	btemp+18,btemp+22
 15038  015AA2  0060  F0F0  F041   	movff	btemp+18,btemp+23
 15039  015AA8  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 15040  015AAE  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 15041  015AB4  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 15042  015ABA  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 15043  015AC0  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 15044  015AC6  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 15045  015ACC  0060  F103  FFE6   	movff	btemp+22,postinc1
 15046  015AD2  0060  F107  FFE6   	movff	btemp+23,postinc1
 15047  015AD8  EC5B  F0F5         	call	___omul	;wreg free
 15048  015ADC  52E5               	movf	postdec1,f,c
 15049  015ADE  006F FF9C  F041    	movff	indf1,btemp+23
 15050  015AE4  52E5               	movf	postdec1,f,c
 15051  015AE6  006F FF9C  F040    	movff	indf1,btemp+22
 15052  015AEC  52E5               	movf	postdec1,f,c
 15053  015AEE  006F FF9C  F03F    	movff	indf1,btemp+21
 15054  015AF4  52E5               	movf	postdec1,f,c
 15055  015AF6  006F FF9C  F03E    	movff	indf1,btemp+20
 15056  015AFC  52E5               	movf	postdec1,f,c
 15057  015AFE  006F FF9C  F03D    	movff	indf1,btemp+19
 15058  015B04  52E5               	movf	postdec1,f,c
 15059  015B06  006F FF9C  F03C    	movff	indf1,btemp+18
 15060  015B0C  52E5               	movf	postdec1,f,c
 15061  015B0E  006F FF9C  F03B    	movff	indf1,btemp+17
 15062  015B14  52E5               	movf	postdec1,f,c
 15063  015B16  006F FF9C  F03A    	movff	indf1,btemp+16
 15064  015B1C  0EF8               	movlw	248
 15065  015B1E  26E1               	addwf	fsr1l,f,c
 15066  015B20  0EFF               	movlw	255
 15067  015B22  22E2               	addwfc	fsr1h,f,c
 15068  015B24  0E80               	movlw	128
 15069  015B26  6EE6               	movwf	postinc1,c
 15070  015B28  0E33               	movlw	51
 15071  015B2A  6EE6               	movwf	postinc1,c
 15072  015B2C  0EE1               	movlw	225
 15073  015B2E  6EE6               	movwf	postinc1,c
 15074  015B30  0E01               	movlw	1
 15075  015B32  6EE6               	movwf	postinc1,c
 15076  015B34  0E00               	movlw	0
 15077  015B36  6EE6               	movwf	postinc1,c
 15078  015B38  0E00               	movlw	0
 15079  015B3A  6EE6               	movwf	postinc1,c
 15080  015B3C  0E00               	movlw	0
 15081  015B3E  6EE6               	movwf	postinc1,c
 15082  015B40  0E00               	movlw	0
 15083  015B42  6EE6               	movwf	postinc1,c
 15084                           
 15085                           ;stkvar	_year @ sp[(-22)+-8]
 15086  015B44  50E1               	movf	fsr1l,w,c
 15087  015B46  0FE2               	addlw	-30
 15088  015B48  6ED9               	movwf	fsr2l,c
 15089  015B4A  50E2               	movf	fsr1h,w,c
 15090  015B4C  6EDA               	movwf	fsr2h,c
 15091  015B4E  0EFF               	movlw	255
 15092  015B50  22DA               	addwfc	fsr2h,f,c
 15093  015B52  006F FF7B FFE6     	movff	postinc2,postinc1
 15094  015B58  006F FF7B FFE6     	movff	postinc2,postinc1
 15095  015B5E  006F FF7B FFE6     	movff	postinc2,postinc1
 15096  015B64  006F FF7B FFE6     	movff	postinc2,postinc1
 15097  015B6A  006F FF7B FFE6     	movff	postinc2,postinc1
 15098  015B70  006F FF7B FFE6     	movff	postinc2,postinc1
 15099  015B76  006F FF7B FFE6     	movff	postinc2,postinc1
 15100  015B7C  006F FF7B FFE6     	movff	postinc2,postinc1
 15101  015B82  EC5B  F0F5         	call	___omul	;wreg free
 15102  015B86  52E5               	movf	postdec1,f,c
 15103  015B88  006F FF9C  F049    	movff	indf1,btemp+31
 15104  015B8E  52E5               	movf	postdec1,f,c
 15105  015B90  006F FF9C  F048    	movff	indf1,btemp+30
 15106  015B96  52E5               	movf	postdec1,f,c
 15107  015B98  006F FF9C  F047    	movff	indf1,btemp+29
 15108  015B9E  52E5               	movf	postdec1,f,c
 15109  015BA0  006F FF9C  F046    	movff	indf1,btemp+28
 15110  015BA6  52E5               	movf	postdec1,f,c
 15111  015BA8  006F FF9C  F045    	movff	indf1,btemp+27
 15112  015BAE  52E5               	movf	postdec1,f,c
 15113  015BB0  006F FF9C  F044    	movff	indf1,btemp+26
 15114  015BB6  52E5               	movf	postdec1,f,c
 15115  015BB8  006F FF9C  F043    	movff	indf1,btemp+25
 15116  015BBE  52E5               	movf	postdec1,f,c
 15117  015BC0  006F FF9C  F042    	movff	indf1,btemp+24
 15118  015BC6  0EF8               	movlw	248
 15119  015BC8  26E1               	addwf	fsr1l,f,c
 15120  015BCA  0EFF               	movlw	255
 15121  015BCC  22E2               	addwfc	fsr1h,f,c
 15122  015BCE  503A               	movf	(btemp+16)^0,w,c
 15123  015BD0  2442               	addwf	(btemp+24)^0,w,c
 15124  015BD2  6E32               	movwf	(btemp+8)^0,c
 15125  015BD4  503B               	movf	(btemp+17)^0,w,c
 15126  015BD6  2043               	addwfc	(btemp+25)^0,w,c
 15127  015BD8  6E33               	movwf	(btemp+9)^0,c
 15128  015BDA  503C               	movf	(btemp+18)^0,w,c
 15129  015BDC  2044               	addwfc	(btemp+26)^0,w,c
 15130  015BDE  6E34               	movwf	(btemp+10)^0,c
 15131  015BE0  503D               	movf	(btemp+19)^0,w,c
 15132  015BE2  2045               	addwfc	(btemp+27)^0,w,c
 15133  015BE4  6E35               	movwf	(btemp+11)^0,c
 15134  015BE6  503E               	movf	(btemp+20)^0,w,c
 15135  015BE8  2046               	addwfc	(btemp+28)^0,w,c
 15136  015BEA  6E36               	movwf	(btemp+12)^0,c
 15137  015BEC  503F               	movf	(btemp+21)^0,w,c
 15138  015BEE  2047               	addwfc	(btemp+29)^0,w,c
 15139  015BF0  6E37               	movwf	(btemp+13)^0,c
 15140  015BF2  5040               	movf	(btemp+22)^0,w,c
 15141  015BF4  2048               	addwfc	(btemp+30)^0,w,c
 15142  015BF6  6E38               	movwf	(btemp+14)^0,c
 15143  015BF8  5041               	movf	(btemp+23)^0,w,c
 15144  015BFA  2049               	addwfc	(btemp+31)^0,w,c
 15145  015BFC  6E39               	movwf	(btemp+15)^0,c
 15146  015BFE  0E00               	movlw	0
 15147  015C00  2432               	addwf	(btemp+8)^0,w,c
 15148  015C02  6E3A               	movwf	(btemp+16)^0,c
 15149  015C04  0E77               	movlw	119
 15150  015C06  2033               	addwfc	(btemp+9)^0,w,c
 15151  015C08  6E3B               	movwf	(btemp+17)^0,c
 15152  015C0A  0E76               	movlw	118
 15153  015C0C  2034               	addwfc	(btemp+10)^0,w,c
 15154  015C0E  6E3C               	movwf	(btemp+18)^0,c
 15155  015C10  0E7C               	movlw	124
 15156  015C12  2035               	addwfc	(btemp+11)^0,w,c
 15157  015C14  6E3D               	movwf	(btemp+19)^0,c
 15158  015C16  0EFF               	movlw	255
 15159  015C18  2036               	addwfc	(btemp+12)^0,w,c
 15160  015C1A  6E3E               	movwf	(btemp+20)^0,c
 15161  015C1C  0EFF               	movlw	255
 15162  015C1E  2037               	addwfc	(btemp+13)^0,w,c
 15163  015C20  6E3F               	movwf	(btemp+21)^0,c
 15164  015C22  0EFF               	movlw	255
 15165  015C24  2038               	addwfc	(btemp+14)^0,w,c
 15166  015C26  6E40               	movwf	(btemp+22)^0,c
 15167  015C28  0EFF               	movlw	255
 15168  015C2A  2039               	addwfc	(btemp+15)^0,w,c
 15169  015C2C  6E41               	movwf	(btemp+23)^0,c
 15170  015C2E                     L13:
 15171                           
 15172                           ;stkvar	?___year_to_secs @ sp[(-14)+-8]
 15173  015C2E  0EEA               	movlw	-22
 15174  015C30  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 15175  015C36  0EEB               	movlw	-21
 15176  015C38  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 15177  015C3E  0EEC               	movlw	-20
 15178  015C40  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 15179  015C46  0EED               	movlw	-19
 15180  015C48  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 15181  015C4E  0EEE               	movlw	-18
 15182  015C50  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 15183  015C56  0EEF               	movlw	-17
 15184  015C58  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 15185  015C5E  0EF0               	movlw	-16
 15186  015C60  0060  F103  FFE3   	movff	btemp+22,plusw1
 15187  015C66  0EF1               	movlw	-15
 15188  015C68  0060  F107  FFE3   	movff	btemp+23,plusw1
 15189                           
 15190                           ; ___year_to_secs: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          10, argsize = 10, vargsize = 0
 15191  015C6E  0EF2               	movlw	242
 15192  015C70  26E1               	addwf	fsr1l,f,c
 15193  015C72  0EFF               	movlw	255
 15194  015C74  22E2               	addwfc	fsr1h,f,c
 15195  015C76  0012               	return		;funcret
 15196  015C78                     __end_of___year_to_secs:
 15197                           	opt callstack 0
 15198                           
 15199 ;; *************** function ___month_to_secs *****************
 15200 ;; Defined at:
 15201 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__month_to_secs.c"
 15202 ;; Parameters:    Size  Location     Type
 15203 ;;  month           2  [STACK] int 
 15204 ;;  is_leap         2  [STACK] int 
 15205 ;; Auto vars:     Size  Location     Type
 15206 ;;  t               4  [STACK] long 
 15207 ;; Return value:  Size  Location     Type
 15208 ;;                  4  [STACK] long 
 15209 ;; Registers used:
 15210 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl
 15211 ;; Tracked objects:
 15212 ;;		On entry : 0/0
 15213 ;;		On exit  : 0/0
 15214 ;;		Unchanged: 0/0
 15215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15220 ;;Total ram usage:        0 bytes
 15221 ;; Hardware stack levels used:    1
 15222 ;; Hardware stack levels required when called:   15
 15223 ;; This function calls:
 15224 ;;		Nothing
 15225 ;; This function is called by:
 15226 ;;		_rule_to_secs
 15227 ;; This function uses a reentrant model
 15228 ;;
 15229                           
 15230                           	psect	text44
 15231  01FCD2                     __ptext44:
 15232                           	opt callstack 0
 15233  01FCD2                     ___month_to_secs:
 15234                           	opt callstack 0
 15235                           
 15236                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15237  01FCD2  52E6               	movf	postinc1,f,c
 15238  01FCD4  52E6               	movf	postinc1,f,c
 15239  01FCD6  52E6               	movf	postinc1,f,c
 15240  01FCD8  52E6               	movf	postinc1,f,c
 15241                           
 15242                           ;stkvar	_month @ sp[(-4)+-2]
 15243                           
 15244                           ;incstack = 0
 15245  01FCDA  0EFA               	movlw	-6
 15246  01FCDC  006F FF8C  F034    	movff	plusw1,btemp+10
 15247  01FCE2  0EFB               	movlw	-5
 15248  01FCE4  006F FF8C  F035    	movff	plusw1,btemp+11
 15249  01FCEA  90D8               	bcf	status,0,c
 15250  01FCEC  3634               	rlcf	(btemp+10)^0,f,c
 15251  01FCEE  3635               	rlcf	(btemp+11)^0,f,c
 15252  01FCF0  90D8               	bcf	status,0,c
 15253  01FCF2  3634               	rlcf	(btemp+10)^0,f,c
 15254  01FCF4  3635               	rlcf	(btemp+11)^0,f,c
 15255  01FCF6  0E7B               	movlw	low ___month_to_secs@secs_through_month
 15256  01FCF8  2434               	addwf	(btemp+10)^0,w,c
 15257  01FCFA  6EF6               	movwf	tblptrl,c
 15258  01FCFC  0EF8               	movlw	high ___month_to_secs@secs_through_month
 15259  01FCFE  2035               	addwfc	(btemp+11)^0,w,c
 15260  01FD00  6EF7               	movwf	tblptrh,c
 15261  01FD02                     	if	1	;There are 3 active tblptr bytes
 15262  01FD02  6AF8               	clrf	tblptru,c
 15263  01FD04  0E00               	movlw	low (__mediumconst shr (0+16))
 15264  01FD06  22F8               	addwfc	tblptru,f,c
 15265  01FD08                     	endif
 15266  01FD08  0009               	tblrd		*+
 15267  01FD0A  006F FFD4  F032    	movff	tablat,btemp+8
 15268  01FD10  0009               	tblrd		*+
 15269  01FD12  006F FFD4  F033    	movff	tablat,btemp+9
 15270  01FD18  0009               	tblrd		*+
 15271  01FD1A  006F FFD4  F034    	movff	tablat,btemp+10
 15272  01FD20  0009               	tblrd		*+
 15273  01FD22  006F FFD4  F035    	movff	tablat,btemp+11
 15274                           
 15275                           ;stkvar	_t @ sp[(-4)+0]
 15276  01FD28  0EFC               	movlw	-4
 15277  01FD2A  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 15278  01FD30  0EFD               	movlw	-3
 15279  01FD32  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 15280  01FD38  0EFE               	movlw	-2
 15281  01FD3A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15282  01FD40  0EFF               	movlw	-1
 15283  01FD42  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15284                           
 15285                           ;stkvar	_is_leap @ sp[(-4)+-4]
 15286  01FD48  0EF8               	movlw	-8
 15287  01FD4A  006F FF8C  F02A    	movff	plusw1,btemp
 15288  01FD50  0EF9               	movlw	-7
 15289  01FD52  50E3               	movf	plusw1,w,c
 15290  01FD54  102A               	iorwf	btemp^0,w,c
 15291  01FD56  B4D8               	btfsc	status,2,c
 15292  01FD58  D01D               	goto	l11698
 15293                           
 15294                           ;stkvar	_month @ sp[(-4)+-2]
 15295  01FD5A  0EFB               	movlw	-5
 15296  01FD5C  BEE3               	btfsc	plusw1,7,c
 15297  01FD5E  D01A               	goto	l11698
 15298  01FD60  0EFB               	movlw	-5
 15299  01FD62  50E3               	movf	plusw1,w,c
 15300  01FD64  E108               	bnz	u10830
 15301  01FD66  0EFA               	movlw	-6
 15302  01FD68  006F FF8C  F02A    	movff	plusw1,btemp
 15303  01FD6E  0E02               	movlw	2
 15304  01FD70  5E2A               	subwf	btemp^0,f,c
 15305  01FD72  A0D8               	btfss	status,0,c
 15306  01FD74  D00F               	goto	l11698
 15307  01FD76                     u10830:
 15308                           
 15309                           ;stkvar	_t @ sp[(-4)+0]
 15310  01FD76  50E1               	movf	fsr1l,w,c
 15311  01FD78  0FFC               	addlw	-4
 15312  01FD7A  6ED9               	movwf	fsr2l,c
 15313  01FD7C  50E2               	movf	fsr1h,w,c
 15314  01FD7E  6EDA               	movwf	fsr2h,c
 15315  01FD80  0EFF               	movlw	255
 15316  01FD82  22DA               	addwfc	fsr2h,f,c
 15317  01FD84  0E80               	movlw	128
 15318  01FD86  26DE               	addwf	postinc2,f,c
 15319  01FD88  0E51               	movlw	81
 15320  01FD8A  22DE               	addwfc	postinc2,f,c
 15321  01FD8C  0E01               	movlw	1
 15322  01FD8E  22DE               	addwfc	postinc2,f,c
 15323  01FD90  0E00               	movlw	0
 15324  01FD92  22DE               	addwfc	postinc2,f,c
 15325  01FD94                     l11698:
 15326                           
 15327                           ;stkvar	_t @ sp[(-4)+0]
 15328  01FD94  0EFC               	movlw	-4
 15329  01FD96  006F FF8C  F02A    	movff	plusw1,btemp
 15330  01FD9C  0EFD               	movlw	-3
 15331  01FD9E  006F FF8C  F02B    	movff	plusw1,btemp+1
 15332  01FDA4  0EFE               	movlw	-2
 15333  01FDA6  006F FF8C  F02C    	movff	plusw1,btemp+2
 15334  01FDAC  0EFF               	movlw	-1
 15335  01FDAE  006F FF8C  F02D    	movff	plusw1,btemp+3
 15336                           
 15337                           ; ___month_to_secs: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
 15338  01FDB4  0EF8               	movlw	248
 15339  01FDB6  26E1               	addwf	fsr1l,f,c
 15340  01FDB8  0EFF               	movlw	255
 15341  01FDBA  22E2               	addwfc	fsr1h,f,c
 15342  01FDBC  0012               	return		;funcret
 15343  01FDBE                     __end_of___month_to_secs:
 15344                           	opt callstack 0
 15345                           
 15346 ;; *************** function _do_tzset *****************
 15347 ;; Defined at:
 15348 ;;		line 118 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 15349 ;; Parameters:    Size  Location     Type
 15350 ;;		None
 15351 ;; Auto vars:     Size  Location     Type
 15352 ;;  s               2  [STACK] PTR const unsigned char 
 15353 ;;		 -> __gmt(4), 
 15354 ;; Return value:  Size  Location     Type
 15355 ;;                  1  [STACK] void 
 15356 ;; Registers used:
 15357 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15358 ;; Tracked objects:
 15359 ;;		On entry : 0/39
 15360 ;;		On exit  : 0/0
 15361 ;;		Unchanged: 0/0
 15362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15367 ;;Total ram usage:        0 bytes
 15368 ;; Hardware stack levels used:    1
 15369 ;; Hardware stack levels required when called:   18
 15370 ;; This function calls:
 15371 ;;		_getname
 15372 ;;		_getoff
 15373 ;;		_getrule
 15374 ;; This function is called by:
 15375 ;;		___secs_to_zone
 15376 ;; This function uses a reentrant model
 15377 ;;
 15378                           
 15379                           	psect	text45
 15380  01B7C8                     __ptext45:
 15381                           	opt callstack 0
 15382  01B7C8                     _do_tzset:
 15383                           	opt callstack 0
 15384                           
 15385                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15386  01B7C8  52E6               	movf	postinc1,f,c
 15387  01B7CA  52E6               	movf	postinc1,f,c
 15388                           
 15389                           ;stkvar	_s @ sp[(-2)+0]
 15390                           
 15391                           ;incstack = 0
 15392  01B7CC  0EF9               	movlw	high ___gmt
 15393  01B7CE  6E2A               	movwf	btemp^0,c
 15394  01B7D0  0EFF               	movlw	-1
 15395  01B7D2  0060  F0AB  FFE3   	movff	btemp,plusw1
 15396  01B7D8  0EE7               	movlw	low ___gmt
 15397  01B7DA  6E2A               	movwf	btemp^0,c
 15398  01B7DC  0EFE               	movlw	-2
 15399  01B7DE  0060  F0AB  FFE3   	movff	btemp,plusw1
 15400                           
 15401                           ;stkvar	_s @ sp[(-2)+0]
 15402  01B7E4  0EFE               	movlw	254
 15403  01B7E6  24E1               	addwf	fsr1l,w,c
 15404  01B7E8  6E2A               	movwf	btemp^0,c
 15405  01B7EA  0EFF               	movlw	255
 15406  01B7EC  20E2               	addwfc	fsr1h,w,c
 15407  01B7EE  6E2B               	movwf	(btemp+1)^0,c
 15408  01B7F0  0060  F0AB  FFE6   	movff	btemp,postinc1
 15409  01B7F6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15410  01B7FC  0EF6               	movlw	low _std_name
 15411  01B7FE  6EE6               	movwf	postinc1,c
 15412  01B800  0E01               	movlw	high _std_name
 15413  01B802  6EE6               	movwf	postinc1,c
 15414  01B804  ECB8  F0D4         	call	_getname	;wreg free
 15415  01B808  0EF6               	movlw	low _std_name
 15416  01B80A  0100               	movlb	0	; () banked
 15417  01B80C  6F6C               	movwf	___tzname& (0+255),b
 15418  01B80E  0E01               	movlw	high _std_name
 15419  01B810  6F6D               	movwf	(___tzname+1)& (0+255),b
 15420                           
 15421                           ; BSR set to: 0
 15422                           ;stkvar	_s @ sp[(-2)+0]
 15423  01B812  0EFE               	movlw	254
 15424  01B814  24E1               	addwf	fsr1l,w,c
 15425  01B816  6E2A               	movwf	btemp^0,c
 15426  01B818  0EFF               	movlw	255
 15427  01B81A  20E2               	addwfc	fsr1h,w,c
 15428  01B81C  6E2B               	movwf	(btemp+1)^0,c
 15429  01B81E  0060  F0AB  FFE6   	movff	btemp,postinc1
 15430  01B824  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15431  01B82A  EC70  F0E5         	call	_getoff	;wreg free
 15432  01B82E  0060  F0A8  F070   	movff	btemp,___timezone
 15433  01B834  0060  F0AC  F071   	movff	btemp+1,___timezone+1
 15434  01B83A  0100               	movlb	0	; () banked
 15435  01B83C  0E00               	movlw	0
 15436  01B83E  BF71               	btfsc	(___timezone+1)& (0+255),7,b
 15437  01B840  0EFF               	movlw	-1
 15438  01B842  6F72               	movwf	(___timezone+2)& (0+255),b
 15439  01B844  6F73               	movwf	(___timezone+3)& (0+255),b
 15440                           
 15441                           ; BSR set to: 0
 15442                           ;stkvar	_s @ sp[(-2)+0]
 15443  01B846  0EFE               	movlw	254
 15444  01B848  24E1               	addwf	fsr1l,w,c
 15445  01B84A  6E2A               	movwf	btemp^0,c
 15446  01B84C  0EFF               	movlw	255
 15447  01B84E  20E2               	addwfc	fsr1h,w,c
 15448  01B850  6E2B               	movwf	(btemp+1)^0,c
 15449  01B852  0060  F0AB  FFE6   	movff	btemp,postinc1
 15450  01B858  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15451  01B85E  0EEF               	movlw	low _dst_name
 15452  01B860  6EE6               	movwf	postinc1,c
 15453  01B862  0E01               	movlw	high _dst_name
 15454  01B864  6EE6               	movwf	postinc1,c
 15455  01B866  ECB8  F0D4         	call	_getname	;wreg free
 15456  01B86A  0EEF               	movlw	low _dst_name
 15457  01B86C  0100               	movlb	0	; () banked
 15458  01B86E  6F6E               	movwf	(___tzname+2)& (0+255),b
 15459  01B870  0E01               	movlw	high _dst_name
 15460  01B872  6F6F               	movwf	(___tzname+3)& (0+255),b
 15461                           
 15462                           ; BSR set to: 0
 15463  01B874  0101               	movlb	1	; () banked
 15464  01B876  51EF               	movf	_dst_name& (0+255),w,b
 15465  01B878  B4D8               	btfsc	status,2,c
 15466  01B87A  D070               	goto	l3967
 15467                           
 15468                           ; BSR set to: 1
 15469  01B87C  0E00               	movlw	0
 15470  01B87E  0100               	movlb	0	; () banked
 15471  01B880  6FB9               	movwf	(___daylight+1)& (0+255),b
 15472  01B882  0E01               	movlw	1
 15473  01B884  6FB8               	movwf	___daylight& (0+255),b
 15474                           
 15475                           ; BSR set to: 0
 15476                           ;stkvar	_s @ sp[(-2)+0]
 15477  01B886  50E1               	movf	fsr1l,w,c
 15478  01B888  0FFE               	addlw	-2
 15479  01B88A  6ED9               	movwf	fsr2l,c
 15480  01B88C  50E2               	movf	fsr1h,w,c
 15481  01B88E  6EDA               	movwf	fsr2h,c
 15482  01B890  0EFF               	movlw	255
 15483  01B892  22DA               	addwfc	fsr2h,f,c
 15484  01B894  006F FF7B FFF6     	movff	postinc2,tblptrl
 15485  01B89A  006F FF77 FFF7     	movff	postdec2,tblptrh
 15486  01B8A0                     	if	0	;tblptru may be non-zero
 15487  01B8A0                     	endif
 15488  01B8A0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15489  01B8A0  0E00               	movlw	low (__mediumconst shr (0+16))
 15490  01B8A2  6EF8               	movwf	tblptru,c
 15491  01B8A4                     	endif
 15492  01B8A4  0008               	tblrd		*
 15493  01B8A6  50F5               	movf	tablat,w,c
 15494  01B8A8  0A2B               	xorlw	43
 15495  01B8AA  B4D8               	btfsc	status,2,c
 15496  01B8AC  D035               	goto	u15970
 15497                           
 15498                           ; BSR set to: 0
 15499                           ;stkvar	_s @ sp[(-2)+0]
 15500  01B8AE  50E1               	movf	fsr1l,w,c
 15501  01B8B0  0FFE               	addlw	-2
 15502  01B8B2  6ED9               	movwf	fsr2l,c
 15503  01B8B4  50E2               	movf	fsr1h,w,c
 15504  01B8B6  6EDA               	movwf	fsr2h,c
 15505  01B8B8  0EFF               	movlw	255
 15506  01B8BA  22DA               	addwfc	fsr2h,f,c
 15507  01B8BC  006F FF7B FFF6     	movff	postinc2,tblptrl
 15508  01B8C2  006F FF77 FFF7     	movff	postdec2,tblptrh
 15509  01B8C8                     	if	0	;tblptru may be non-zero
 15510  01B8C8                     	endif
 15511  01B8C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15512  01B8C8  0E00               	movlw	low (__mediumconst shr (0+16))
 15513  01B8CA  6EF8               	movwf	tblptru,c
 15514  01B8CC                     	endif
 15515  01B8CC  0008               	tblrd		*
 15516  01B8CE  50F5               	movf	tablat,w,c
 15517  01B8D0  0A2D               	xorlw	45
 15518  01B8D2  B4D8               	btfsc	status,2,c
 15519  01B8D4  D021               	goto	u15970
 15520                           
 15521                           ; BSR set to: 0
 15522  01B8D6  0ED0               	movlw	208
 15523  01B8D8  6E34               	movwf	(btemp+10)^0,c
 15524  01B8DA  0EFF               	movlw	255
 15525  01B8DC  6E35               	movwf	(btemp+11)^0,c
 15526                           
 15527                           ;stkvar	_s @ sp[(-2)+0]
 15528  01B8DE  50E1               	movf	fsr1l,w,c
 15529  01B8E0  0FFE               	addlw	-2
 15530  01B8E2  6ED9               	movwf	fsr2l,c
 15531  01B8E4  50E2               	movf	fsr1h,w,c
 15532  01B8E6  6EDA               	movwf	fsr2h,c
 15533  01B8E8  0EFF               	movlw	255
 15534  01B8EA  22DA               	addwfc	fsr2h,f,c
 15535  01B8EC  006F FF7B FFF6     	movff	postinc2,tblptrl
 15536  01B8F2  006F FF77 FFF7     	movff	postdec2,tblptrh
 15537  01B8F8                     	if	0	;tblptru may be non-zero
 15538  01B8F8                     	endif
 15539  01B8F8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15540  01B8F8  0E00               	movlw	low (__mediumconst shr (0+16))
 15541  01B8FA  6EF8               	movwf	tblptru,c
 15542  01B8FC                     	endif
 15543  01B8FC  0008               	tblrd		*
 15544  01B8FE  50F5               	movf	tablat,w,c
 15545  01B900  6E32               	movwf	(btemp+8)^0,c
 15546  01B902  6A33               	clrf	(btemp+9)^0,c
 15547  01B904  5034               	movf	(btemp+10)^0,w,c
 15548  01B906  2632               	addwf	(btemp+8)^0,f,c
 15549  01B908  5035               	movf	(btemp+11)^0,w,c
 15550  01B90A  2233               	addwfc	(btemp+9)^0,f,c
 15551  01B90C  5033               	movf	(btemp+9)^0,w,c
 15552  01B90E  E119               	bnz	l16356
 15553  01B910  0E0A               	movlw	10
 15554  01B912  5C32               	subwf	(btemp+8)^0,w,c
 15555  01B914  B0D8               	btfsc	status,0,c
 15556  01B916  D015               	goto	l16356
 15557  01B918                     u15970:
 15558                           
 15559                           ; BSR set to: 0
 15560                           ;stkvar	_s @ sp[(-2)+0]
 15561  01B918  0EFE               	movlw	254
 15562  01B91A  24E1               	addwf	fsr1l,w,c
 15563  01B91C  6E2A               	movwf	btemp^0,c
 15564  01B91E  0EFF               	movlw	255
 15565  01B920  20E2               	addwfc	fsr1h,w,c
 15566  01B922  6E2B               	movwf	(btemp+1)^0,c
 15567  01B924  0060  F0AB  FFE6   	movff	btemp,postinc1
 15568  01B92A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15569  01B930  EC70  F0E5         	call	_getoff	;wreg free
 15570  01B934  0060  F0A8  F0B6   	movff	btemp,_dst_off
 15571  01B93A  0060  F0AC  F0B7   	movff	btemp+1,_dst_off+1
 15572  01B940  D012               	goto	l16358
 15573  01B942                     l16356:
 15574                           
 15575                           ; BSR set to: 0
 15576  01B942  0060  F1C0  F034   	movff	___timezone,btemp+10
 15577  01B948  0060  F1C4  F035   	movff	___timezone+1,btemp+11
 15578  01B94E  0EF0               	movlw	240
 15579  01B950  2434               	addwf	(btemp+10)^0,w,c
 15580  01B952  6FB6               	movwf	_dst_off& (0+255),b
 15581  01B954  0EF1               	movlw	241
 15582  01B956  2035               	addwfc	(btemp+11)^0,w,c
 15583  01B958  6FB7               	movwf	(_dst_off+1)& (0+255),b
 15584  01B95A  D005               	goto	l16358
 15585  01B95C                     l3967:
 15586                           
 15587                           ; BSR set to: 1
 15588  01B95C  0100               	movlb	0	; () banked
 15589  01B95E  6BB8               	clrf	___daylight& (0+255),b
 15590  01B960  6BB9               	clrf	(___daylight+1)& (0+255),b
 15591  01B962  6BB6               	clrf	_dst_off& (0+255),b
 15592  01B964  6BB7               	clrf	(_dst_off+1)& (0+255),b
 15593  01B966                     l16358:
 15594                           
 15595                           ;stkvar	_s @ sp[(-2)+0]
 15596  01B966  50E1               	movf	fsr1l,w,c
 15597  01B968  0FFE               	addlw	-2
 15598  01B96A  6ED9               	movwf	fsr2l,c
 15599  01B96C  50E2               	movf	fsr1h,w,c
 15600  01B96E  6EDA               	movwf	fsr2h,c
 15601  01B970  0EFF               	movlw	255
 15602  01B972  22DA               	addwfc	fsr2h,f,c
 15603  01B974  006F FF7B FFF6     	movff	postinc2,tblptrl
 15604  01B97A  006F FF77 FFF7     	movff	postdec2,tblptrh
 15605  01B980                     	if	0	;tblptru may be non-zero
 15606  01B980                     	endif
 15607  01B980                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15608  01B980  0E00               	movlw	low (__mediumconst shr (0+16))
 15609  01B982  6EF8               	movwf	tblptru,c
 15610  01B984                     	endif
 15611  01B984  0008               	tblrd		*
 15612  01B986  50F5               	movf	tablat,w,c
 15613  01B988  0A2C               	xorlw	44
 15614  01B98A  A4D8               	btfss	status,2,c
 15615  01B98C  D023               	goto	l16364
 15616                           
 15617                           ;stkvar	_s @ sp[(-2)+0]
 15618  01B98E  0EFE               	movlw	-2
 15619  01B990  50E3               	movf	plusw1,w,c
 15620  01B992  0F01               	addlw	1
 15621  01B994  6E2A               	movwf	btemp^0,c
 15622  01B996  0EFE               	movlw	-2
 15623  01B998  0060  F0AB  FFE3   	movff	btemp,plusw1
 15624  01B99E  6A2A               	clrf	btemp^0,c
 15625  01B9A0  0EFF               	movlw	-1
 15626  01B9A2  50E3               	movf	plusw1,w,c
 15627  01B9A4  202A               	addwfc	btemp^0,w,c
 15628  01B9A6  6E2A               	movwf	btemp^0,c
 15629  01B9A8  0EFF               	movlw	-1
 15630  01B9AA  0060  F0AB  FFE3   	movff	btemp,plusw1
 15631  01B9B0  0EE5               	movlw	low _r0
 15632  01B9B2  6EE6               	movwf	postinc1,c
 15633  01B9B4  0E01               	movlw	high _r0
 15634  01B9B6  6EE6               	movwf	postinc1,c
 15635                           
 15636                           ;stkvar	_s @ sp[(-4)+0]
 15637  01B9B8  0EFC               	movlw	252
 15638  01B9BA  24E1               	addwf	fsr1l,w,c
 15639  01B9BC  6E2A               	movwf	btemp^0,c
 15640  01B9BE  0EFF               	movlw	255
 15641  01B9C0  20E2               	addwfc	fsr1h,w,c
 15642  01B9C2  6E2B               	movwf	(btemp+1)^0,c
 15643  01B9C4  0060  F0AB  FFE6   	movff	btemp,postinc1
 15644  01B9CA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15645  01B9D0  EC24  F0DD         	call	_getrule	;wreg free
 15646  01B9D4                     l16364:
 15647                           
 15648                           ;stkvar	_s @ sp[(-2)+0]
 15649  01B9D4  50E1               	movf	fsr1l,w,c
 15650  01B9D6  0FFE               	addlw	-2
 15651  01B9D8  6ED9               	movwf	fsr2l,c
 15652  01B9DA  50E2               	movf	fsr1h,w,c
 15653  01B9DC  6EDA               	movwf	fsr2h,c
 15654  01B9DE  0EFF               	movlw	255
 15655  01B9E0  22DA               	addwfc	fsr2h,f,c
 15656  01B9E2  006F FF7B FFF6     	movff	postinc2,tblptrl
 15657  01B9E8  006F FF77 FFF7     	movff	postdec2,tblptrh
 15658  01B9EE                     	if	0	;tblptru may be non-zero
 15659  01B9EE                     	endif
 15660  01B9EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15661  01B9EE  0E00               	movlw	low (__mediumconst shr (0+16))
 15662  01B9F0  6EF8               	movwf	tblptru,c
 15663  01B9F2                     	endif
 15664  01B9F2  0008               	tblrd		*
 15665  01B9F4  50F5               	movf	tablat,w,c
 15666  01B9F6  0A2C               	xorlw	44
 15667  01B9F8  A4D8               	btfss	status,2,c
 15668  01B9FA  D023               	goto	l3975
 15669                           
 15670                           ;stkvar	_s @ sp[(-2)+0]
 15671  01B9FC  0EFE               	movlw	-2
 15672  01B9FE  50E3               	movf	plusw1,w,c
 15673  01BA00  0F01               	addlw	1
 15674  01BA02  6E2A               	movwf	btemp^0,c
 15675  01BA04  0EFE               	movlw	-2
 15676  01BA06  0060  F0AB  FFE3   	movff	btemp,plusw1
 15677  01BA0C  6A2A               	clrf	btemp^0,c
 15678  01BA0E  0EFF               	movlw	-1
 15679  01BA10  50E3               	movf	plusw1,w,c
 15680  01BA12  202A               	addwfc	btemp^0,w,c
 15681  01BA14  6E2A               	movwf	btemp^0,c
 15682  01BA16  0EFF               	movlw	-1
 15683  01BA18  0060  F0AB  FFE3   	movff	btemp,plusw1
 15684  01BA1E  0EDB               	movlw	low _r1
 15685  01BA20  6EE6               	movwf	postinc1,c
 15686  01BA22  0E01               	movlw	high _r1
 15687  01BA24  6EE6               	movwf	postinc1,c
 15688                           
 15689                           ;stkvar	_s @ sp[(-4)+0]
 15690  01BA26  0EFC               	movlw	252
 15691  01BA28  24E1               	addwf	fsr1l,w,c
 15692  01BA2A  6E2A               	movwf	btemp^0,c
 15693  01BA2C  0EFF               	movlw	255
 15694  01BA2E  20E2               	addwfc	fsr1h,w,c
 15695  01BA30  6E2B               	movwf	(btemp+1)^0,c
 15696  01BA32  0060  F0AB  FFE6   	movff	btemp,postinc1
 15697  01BA38  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15698  01BA3E  EC24  F0DD         	call	_getrule	;wreg free
 15699  01BA42                     l3975:
 15700                           
 15701                           ; _do_tzset: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
 15702  01BA42  52E5               	movf	postdec1,f,c
 15703  01BA44  52E5               	movf	postdec1,f,c
 15704  01BA46  0012               	return		;funcret
 15705  01BA48                     __end_of_do_tzset:
 15706                           	opt callstack 0
 15707                           
 15708 ;; *************** function _getrule *****************
 15709 ;; Defined at:
 15710 ;;		line 60 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 15711 ;; Parameters:    Size  Location     Type
 15712 ;;  p               2  [STACK] PTR PTR const unsigned c
 15713 ;;		 -> s(2), 
 15714 ;;  rule            2  [STACK] PTR int 
 15715 ;;		 -> r1(10), r0(10), 
 15716 ;; Auto vars:     Size  Location     Type
 15717 ;;  r               2  [STACK] int 
 15718 ;; Return value:  Size  Location     Type
 15719 ;;                  1  [STACK] void 
 15720 ;; Registers used:
 15721 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15722 ;; Tracked objects:
 15723 ;;		On entry : 0/0
 15724 ;;		On exit  : 0/0
 15725 ;;		Unchanged: 0/0
 15726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15731 ;;Total ram usage:        0 bytes
 15732 ;; Hardware stack levels used:    1
 15733 ;; Hardware stack levels required when called:   17
 15734 ;; This function calls:
 15735 ;;		_getint
 15736 ;;		_getoff
 15737 ;; This function is called by:
 15738 ;;		_do_tzset
 15739 ;; This function uses a reentrant model
 15740 ;;
 15741                           
 15742                           	psect	text46
 15743  01BA48                     __ptext46:
 15744                           	opt callstack 0
 15745  01BA48                     _getrule:
 15746                           	opt callstack 0
 15747                           
 15748                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15749  01BA48  52E6               	movf	postinc1,f,c
 15750  01BA4A  52E6               	movf	postinc1,f,c
 15751                           
 15752                           ;stkvar	_p @ sp[(-2)+-2]
 15753                           
 15754                           ;incstack = 0
 15755  01BA4C  0EFC               	movlw	-4
 15756  01BA4E  006F FF8F FFD9     	movff	plusw1,fsr2l
 15757  01BA54  0EFD               	movlw	-3
 15758  01BA56  006F FF8F FFDA     	movff	plusw1,fsr2h
 15759  01BA5C  006F FF7B FFF6     	movff	postinc2,tblptrl
 15760  01BA62  006F FF77 FFF7     	movff	postdec2,tblptrh
 15761  01BA68                     	if	0	;tblptru may be non-zero
 15762  01BA68                     	endif
 15763  01BA68                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15764  01BA68  0E00               	movlw	low (__mediumconst shr (0+16))
 15765  01BA6A  6EF8               	movwf	tblptru,c
 15766  01BA6C                     	endif
 15767  01BA6C  0008               	tblrd		*
 15768  01BA6E  50F5               	movf	tablat,w,c
 15769  01BA70  6E34               	movwf	(btemp+10)^0,c
 15770  01BA72  6A35               	clrf	(btemp+11)^0,c
 15771                           
 15772                           ;stkvar	_rule @ sp[(-2)+-4]
 15773  01BA74  0EFA               	movlw	-6
 15774  01BA76  006F FF8F FFD9     	movff	plusw1,fsr2l
 15775  01BA7C  0EFB               	movlw	-5
 15776  01BA7E  006F FF8F FFDA     	movff	plusw1,fsr2h
 15777  01BA84  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 15778  01BA8A  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 15779  01BA90  006F FF78  F034    	movff	postinc2,btemp+10
 15780  01BA96  006F FF74  F035    	movff	postdec2,btemp+11
 15781                           
 15782                           ;stkvar	_r @ sp[(-2)+0]
 15783  01BA9C  0EFE               	movlw	-2
 15784  01BA9E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15785  01BAA4  0EFF               	movlw	-1
 15786  01BAA6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15787                           
 15788                           ;stkvar	_r @ sp[(-2)+0]
 15789  01BAAC  0EFE               	movlw	-2
 15790  01BAAE  006F FF8C  F02A    	movff	plusw1,btemp
 15791  01BAB4  0E4D               	movlw	77
 15792  01BAB6  182A               	xorwf	btemp^0,w,c
 15793  01BAB8  E104               	bnz	u15550
 15794  01BABA  0EFF               	movlw	-1
 15795  01BABC  50E3               	movf	plusw1,w,c
 15796  01BABE  B4D8               	btfsc	status,2,c
 15797  01BAC0  D036               	goto	l16054
 15798  01BAC2                     u15550:
 15799                           
 15800                           ;stkvar	_r @ sp[(-2)+0]
 15801  01BAC2  0EFE               	movlw	-2
 15802  01BAC4  006F FF8C  F02A    	movff	plusw1,btemp
 15803  01BACA  0E4A               	movlw	74
 15804  01BACC  182A               	xorwf	btemp^0,w,c
 15805  01BACE  E110               	bnz	l16050
 15806  01BAD0  0EFF               	movlw	-1
 15807  01BAD2  50E3               	movf	plusw1,w,c
 15808  01BAD4  A4D8               	btfss	status,2,c
 15809  01BAD6  D00C               	goto	l16050
 15810                           
 15811                           ;stkvar	_p @ sp[(-2)+-2]
 15812  01BAD8  0EFC               	movlw	-4
 15813  01BADA  006F FF8F FFD9     	movff	plusw1,fsr2l
 15814  01BAE0  0EFD               	movlw	-3
 15815  01BAE2  006F FF8F FFDA     	movff	plusw1,fsr2h
 15816  01BAE8  2ADE               	incf	postinc2,f,c
 15817  01BAEA  0E00               	movlw	0
 15818  01BAEC  22DD               	addwfc	postdec2,f,c
 15819  01BAEE  D00C               	goto	l16052
 15820  01BAF0                     l16050:
 15821                           
 15822                           ;stkvar	_rule @ sp[(-2)+-4]
 15823  01BAF0  0EFA               	movlw	-6
 15824  01BAF2  006F FF8F FFD9     	movff	plusw1,fsr2l
 15825  01BAF8  0EFB               	movlw	-5
 15826  01BAFA  006F FF8F FFDA     	movff	plusw1,fsr2h
 15827  01BB00  0E00               	movlw	0
 15828  01BB02  6EDE               	movwf	postinc2,c
 15829  01BB04  0E00               	movlw	0
 15830  01BB06  6EDD               	movwf	postdec2,c
 15831  01BB08                     l16052:
 15832                           
 15833                           ;stkvar	_p @ sp[(-2)+-2]
 15834  01BB08  0EFC               	movlw	-4
 15835  01BB0A  006F FF8F FFE6     	movff	plusw1,postinc1
 15836  01BB10  006F FF8F FFE6     	movff	plusw1,postinc1
 15837  01BB16  ECF0  F0FD         	call	_getint	;wreg free
 15838                           
 15839                           ;stkvar	_rule @ sp[(-2)+-4]
 15840  01BB1A  0EFA               	movlw	-6
 15841  01BB1C  006F FF8C  F034    	movff	plusw1,btemp+10
 15842  01BB22  0EFB               	movlw	-5
 15843  01BB24  006F FF8C  F035    	movff	plusw1,btemp+11
 15844  01BB2A  0E02               	movlw	2
 15845  01BB2C  D06D               	goto	L16
 15846  01BB2E                     l16054:
 15847                           
 15848                           ;stkvar	_p @ sp[(-2)+-2]
 15849  01BB2E  0EFC               	movlw	-4
 15850  01BB30  006F FF8F FFD9     	movff	plusw1,fsr2l
 15851  01BB36  0EFD               	movlw	-3
 15852  01BB38  006F FF8F FFDA     	movff	plusw1,fsr2h
 15853  01BB3E  2ADE               	incf	postinc2,f,c
 15854  01BB40  0E00               	movlw	0
 15855  01BB42  22DD               	addwfc	postdec2,f,c
 15856                           
 15857                           ;stkvar	_p @ sp[(-2)+-2]
 15858  01BB44  0EFC               	movlw	-4
 15859  01BB46  006F FF8F FFE6     	movff	plusw1,postinc1
 15860  01BB4C  006F FF8F FFE6     	movff	plusw1,postinc1
 15861  01BB52  ECF0  F0FD         	call	_getint	;wreg free
 15862                           
 15863                           ;stkvar	_rule @ sp[(-2)+-4]
 15864  01BB56  0EFA               	movlw	-6
 15865  01BB58  006F FF8C  F034    	movff	plusw1,btemp+10
 15866  01BB5E  0EFB               	movlw	-5
 15867  01BB60  006F FF8C  F035    	movff	plusw1,btemp+11
 15868  01BB66  0E02               	movlw	2
 15869  01BB68  2434               	addwf	(btemp+10)^0,w,c
 15870  01BB6A  6ED9               	movwf	fsr2l,c
 15871  01BB6C  0E00               	movlw	0
 15872  01BB6E  2035               	addwfc	(btemp+11)^0,w,c
 15873  01BB70  6EDA               	movwf	fsr2h,c
 15874  01BB72  0060  F0AB  FFDE   	movff	btemp,postinc2
 15875  01BB78  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 15876                           
 15877                           ;stkvar	_p @ sp[(-2)+-2]
 15878  01BB7E  0EFC               	movlw	-4
 15879  01BB80  006F FF8F FFD9     	movff	plusw1,fsr2l
 15880  01BB86  0EFD               	movlw	-3
 15881  01BB88  006F FF8F FFDA     	movff	plusw1,fsr2h
 15882  01BB8E  2ADE               	incf	postinc2,f,c
 15883  01BB90  0E00               	movlw	0
 15884  01BB92  22DD               	addwfc	postdec2,f,c
 15885                           
 15886                           ;stkvar	_p @ sp[(-2)+-2]
 15887  01BB94  0EFC               	movlw	-4
 15888  01BB96  006F FF8F FFE6     	movff	plusw1,postinc1
 15889  01BB9C  006F FF8F FFE6     	movff	plusw1,postinc1
 15890  01BBA2  ECF0  F0FD         	call	_getint	;wreg free
 15891                           
 15892                           ;stkvar	_rule @ sp[(-2)+-4]
 15893  01BBA6  0EFA               	movlw	-6
 15894  01BBA8  006F FF8C  F034    	movff	plusw1,btemp+10
 15895  01BBAE  0EFB               	movlw	-5
 15896  01BBB0  006F FF8C  F035    	movff	plusw1,btemp+11
 15897  01BBB6  0E04               	movlw	4
 15898  01BBB8  2434               	addwf	(btemp+10)^0,w,c
 15899  01BBBA  6ED9               	movwf	fsr2l,c
 15900  01BBBC  0E00               	movlw	0
 15901  01BBBE  2035               	addwfc	(btemp+11)^0,w,c
 15902  01BBC0  6EDA               	movwf	fsr2h,c
 15903  01BBC2  0060  F0AB  FFDE   	movff	btemp,postinc2
 15904  01BBC8  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 15905                           
 15906                           ;stkvar	_p @ sp[(-2)+-2]
 15907  01BBCE  0EFC               	movlw	-4
 15908  01BBD0  006F FF8F FFD9     	movff	plusw1,fsr2l
 15909  01BBD6  0EFD               	movlw	-3
 15910  01BBD8  006F FF8F FFDA     	movff	plusw1,fsr2h
 15911  01BBDE  2ADE               	incf	postinc2,f,c
 15912  01BBE0  0E00               	movlw	0
 15913  01BBE2  22DD               	addwfc	postdec2,f,c
 15914                           
 15915                           ;stkvar	_p @ sp[(-2)+-2]
 15916  01BBE4  0EFC               	movlw	-4
 15917  01BBE6  006F FF8F FFE6     	movff	plusw1,postinc1
 15918  01BBEC  006F FF8F FFE6     	movff	plusw1,postinc1
 15919  01BBF2  ECF0  F0FD         	call	_getint	;wreg free
 15920                           
 15921                           ;stkvar	_rule @ sp[(-2)+-4]
 15922  01BBF6  0EFA               	movlw	-6
 15923  01BBF8  006F FF8C  F034    	movff	plusw1,btemp+10
 15924  01BBFE  0EFB               	movlw	-5
 15925  01BC00  006F FF8C  F035    	movff	plusw1,btemp+11
 15926  01BC06  0E06               	movlw	6
 15927  01BC08                     L16:
 15928  01BC08  2434               	addwf	(btemp+10)^0,w,c
 15929  01BC0A  6ED9               	movwf	fsr2l,c
 15930  01BC0C  0E00               	movlw	0
 15931  01BC0E  2035               	addwfc	(btemp+11)^0,w,c
 15932  01BC10  6EDA               	movwf	fsr2h,c
 15933  01BC12  0060  F0AB  FFDE   	movff	btemp,postinc2
 15934  01BC18  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 15935                           
 15936                           ;stkvar	_p @ sp[(-2)+-2]
 15937  01BC1E  0EFC               	movlw	-4
 15938  01BC20  006F FF8F FFD9     	movff	plusw1,fsr2l
 15939  01BC26  0EFD               	movlw	-3
 15940  01BC28  006F FF8F FFDA     	movff	plusw1,fsr2h
 15941  01BC2E  006F FF7B FFF6     	movff	postinc2,tblptrl
 15942  01BC34  006F FF77 FFF7     	movff	postdec2,tblptrh
 15943  01BC3A                     	if	0	;tblptru may be non-zero
 15944  01BC3A                     	endif
 15945  01BC3A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15946  01BC3A  0E00               	movlw	low (__mediumconst shr (0+16))
 15947  01BC3C  6EF8               	movwf	tblptru,c
 15948  01BC3E                     	endif
 15949  01BC3E  0008               	tblrd		*
 15950  01BC40  50F5               	movf	tablat,w,c
 15951  01BC42  0A2F               	xorlw	47
 15952  01BC44  A4D8               	btfss	status,2,c
 15953  01BC46  D029               	goto	l16070
 15954                           
 15955                           ;stkvar	_p @ sp[(-2)+-2]
 15956  01BC48  0EFC               	movlw	-4
 15957  01BC4A  006F FF8F FFD9     	movff	plusw1,fsr2l
 15958  01BC50  0EFD               	movlw	-3
 15959  01BC52  006F FF8F FFDA     	movff	plusw1,fsr2h
 15960  01BC58  2ADE               	incf	postinc2,f,c
 15961  01BC5A  0E00               	movlw	0
 15962  01BC5C  22DD               	addwfc	postdec2,f,c
 15963                           
 15964                           ;stkvar	_p @ sp[(-2)+-2]
 15965  01BC5E  0EFC               	movlw	-4
 15966  01BC60  006F FF8F FFE6     	movff	plusw1,postinc1
 15967  01BC66  006F FF8F FFE6     	movff	plusw1,postinc1
 15968  01BC6C  EC70  F0E5         	call	_getoff	;wreg free
 15969                           
 15970                           ;stkvar	_rule @ sp[(-2)+-4]
 15971  01BC70  0EFA               	movlw	-6
 15972  01BC72  006F FF8C  F034    	movff	plusw1,btemp+10
 15973  01BC78  0EFB               	movlw	-5
 15974  01BC7A  006F FF8C  F035    	movff	plusw1,btemp+11
 15975  01BC80  0E08               	movlw	8
 15976  01BC82  2434               	addwf	(btemp+10)^0,w,c
 15977  01BC84  6ED9               	movwf	fsr2l,c
 15978  01BC86  0E00               	movlw	0
 15979  01BC88  2035               	addwfc	(btemp+11)^0,w,c
 15980  01BC8A  6EDA               	movwf	fsr2h,c
 15981  01BC8C  0060  F0AB  FFDE   	movff	btemp,postinc2
 15982  01BC92  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 15983  01BC98  D012               	goto	l3940
 15984  01BC9A                     l16070:
 15985                           
 15986                           ;stkvar	_rule @ sp[(-2)+-4]
 15987  01BC9A  0EFA               	movlw	-6
 15988  01BC9C  006F FF8C  F034    	movff	plusw1,btemp+10
 15989  01BCA2  0EFB               	movlw	-5
 15990  01BCA4  006F FF8C  F035    	movff	plusw1,btemp+11
 15991  01BCAA  0E08               	movlw	8
 15992  01BCAC  2434               	addwf	(btemp+10)^0,w,c
 15993  01BCAE  6ED9               	movwf	fsr2l,c
 15994  01BCB0  0E00               	movlw	0
 15995  01BCB2  2035               	addwfc	(btemp+11)^0,w,c
 15996  01BCB4  6EDA               	movwf	fsr2h,c
 15997  01BCB6  0E20               	movlw	32
 15998  01BCB8  6EDE               	movwf	postinc2,c
 15999  01BCBA  0E1C               	movlw	28
 16000  01BCBC  6EDD               	movwf	postdec2,c
 16001  01BCBE                     l3940:
 16002                           
 16003                           ; _getrule: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16004  01BCBE  0EFA               	movlw	250
 16005  01BCC0  26E1               	addwf	fsr1l,f,c
 16006  01BCC2  0EFF               	movlw	255
 16007  01BCC4  22E2               	addwfc	fsr1h,f,c
 16008  01BCC6  0012               	return		;funcret
 16009  01BCC8                     __end_of_getrule:
 16010                           	opt callstack 0
 16011                           
 16012 ;; *************** function _getoff *****************
 16013 ;; Defined at:
 16014 ;;		line 39 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 16015 ;; Parameters:    Size  Location     Type
 16016 ;;  p               2  [STACK] PTR PTR const unsigned c
 16017 ;;		 -> s(2), 
 16018 ;; Auto vars:     Size  Location     Type
 16019 ;;  off             2  [STACK] int 
 16020 ;;  neg             2  [STACK] int 
 16021 ;; Return value:  Size  Location     Type
 16022 ;;                  2  [STACK] int 
 16023 ;; Registers used:
 16024 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 16025 ;; Tracked objects:
 16026 ;;		On entry : 0/0
 16027 ;;		On exit  : 0/0
 16028 ;;		Unchanged: 0/0
 16029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16034 ;;Total ram usage:        0 bytes
 16035 ;; Hardware stack levels used:    1
 16036 ;; Hardware stack levels required when called:   16
 16037 ;; This function calls:
 16038 ;;		_getint
 16039 ;; This function is called by:
 16040 ;;		_getrule
 16041 ;;		_do_tzset
 16042 ;; This function uses a reentrant model
 16043 ;;
 16044                           
 16045                           	psect	text47
 16046  01CAE0                     __ptext47:
 16047                           	opt callstack 0
 16048  01CAE0                     _getoff:
 16049                           	opt callstack 0
 16050                           
 16051                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16052  01CAE0  52E6               	movf	postinc1,f,c
 16053  01CAE2  52E6               	movf	postinc1,f,c
 16054  01CAE4  52E6               	movf	postinc1,f,c
 16055  01CAE6  52E6               	movf	postinc1,f,c
 16056                           
 16057                           ;stkvar	_neg @ sp[(-4)+2]
 16058                           
 16059                           ;incstack = 0
 16060  01CAE8  0EFE               	movlw	-2
 16061  01CAEA  6AE3               	clrf	plusw1,c
 16062  01CAEC  0EFF               	movlw	-1
 16063  01CAEE  6AE3               	clrf	plusw1,c
 16064                           
 16065                           ;stkvar	_p @ sp[(-4)+-2]
 16066  01CAF0  0EFA               	movlw	-6
 16067  01CAF2  006F FF8F FFD9     	movff	plusw1,fsr2l
 16068  01CAF8  0EFB               	movlw	-5
 16069  01CAFA  006F FF8F FFDA     	movff	plusw1,fsr2h
 16070  01CB00  006F FF7B FFF6     	movff	postinc2,tblptrl
 16071  01CB06  006F FF77 FFF7     	movff	postdec2,tblptrh
 16072  01CB0C                     	if	0	;tblptru may be non-zero
 16073  01CB0C                     	endif
 16074  01CB0C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16075  01CB0C  0E00               	movlw	low (__mediumconst shr (0+16))
 16076  01CB0E  6EF8               	movwf	tblptru,c
 16077  01CB10                     	endif
 16078  01CB10  0008               	tblrd		*
 16079  01CB12  50F5               	movf	tablat,w,c
 16080  01CB14  0A2D               	xorlw	45
 16081  01CB16  A4D8               	btfss	status,2,c
 16082  01CB18  D018               	goto	l10834
 16083                           
 16084                           ;stkvar	_p @ sp[(-4)+-2]
 16085  01CB1A  0EFA               	movlw	-6
 16086  01CB1C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16087  01CB22  0EFB               	movlw	-5
 16088  01CB24  006F FF8F FFDA     	movff	plusw1,fsr2h
 16089  01CB2A  2ADE               	incf	postinc2,f,c
 16090  01CB2C  0E00               	movlw	0
 16091  01CB2E  22DD               	addwfc	postdec2,f,c
 16092  01CB30  0E01               	movlw	1
 16093  01CB32  6E34               	movwf	(btemp+10)^0,c
 16094  01CB34  0E00               	movlw	0
 16095  01CB36  6E35               	movwf	(btemp+11)^0,c
 16096                           
 16097                           ;stkvar	_neg @ sp[(-4)+2]
 16098  01CB38  0EFE               	movlw	-2
 16099  01CB3A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 16100  01CB40  0EFF               	movlw	-1
 16101  01CB42  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 16102  01CB48  D020               	goto	l10838
 16103  01CB4A                     l10834:
 16104                           
 16105                           ;stkvar	_p @ sp[(-4)+-2]
 16106  01CB4A  0EFA               	movlw	-6
 16107  01CB4C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16108  01CB52  0EFB               	movlw	-5
 16109  01CB54  006F FF8F FFDA     	movff	plusw1,fsr2h
 16110  01CB5A  006F FF7B FFF6     	movff	postinc2,tblptrl
 16111  01CB60  006F FF77 FFF7     	movff	postdec2,tblptrh
 16112  01CB66                     	if	0	;tblptru may be non-zero
 16113  01CB66                     	endif
 16114  01CB66                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16115  01CB66  0E00               	movlw	low (__mediumconst shr (0+16))
 16116  01CB68  6EF8               	movwf	tblptru,c
 16117  01CB6A                     	endif
 16118  01CB6A  0008               	tblrd		*
 16119  01CB6C  50F5               	movf	tablat,w,c
 16120  01CB6E  0A2B               	xorlw	43
 16121  01CB70  A4D8               	btfss	status,2,c
 16122  01CB72  D00B               	goto	l10838
 16123                           
 16124                           ;stkvar	_p @ sp[(-4)+-2]
 16125  01CB74  0EFA               	movlw	-6
 16126  01CB76  006F FF8F FFD9     	movff	plusw1,fsr2l
 16127  01CB7C  0EFB               	movlw	-5
 16128  01CB7E  006F FF8F FFDA     	movff	plusw1,fsr2h
 16129  01CB84  2ADE               	incf	postinc2,f,c
 16130  01CB86  0E00               	movlw	0
 16131  01CB88  22DD               	addwfc	postdec2,f,c
 16132  01CB8A                     l10838:
 16133                           
 16134                           ;stkvar	_p @ sp[(-4)+-2]
 16135  01CB8A  0EFA               	movlw	-6
 16136  01CB8C  006F FF8F FFE6     	movff	plusw1,postinc1
 16137  01CB92  006F FF8F FFE6     	movff	plusw1,postinc1
 16138  01CB98  ECF0  F0FD         	call	_getint	;wreg free
 16139  01CB9C  0060  F0A8  F034   	movff	btemp,btemp+10
 16140  01CBA2  0060  F0AC  F035   	movff	btemp+1,btemp+11
 16141  01CBA8  0E10               	movlw	16
 16142  01CBAA  0234               	mulwf	(btemp+10)^0,c
 16143  01CBAC  006F FFCC  F032    	movff	prodl,btemp+8
 16144  01CBB2  006F FFD0  F033    	movff	prodh,btemp+9
 16145  01CBB8  0235               	mulwf	(btemp+11)^0,c
 16146  01CBBA  50F3               	movf	prodl,w,c
 16147  01CBBC  2633               	addwf	(btemp+9)^0,f,c
 16148  01CBBE  0E0E               	movlw	14
 16149  01CBC0  0234               	mulwf	(btemp+10)^0,c
 16150  01CBC2  50F3               	movf	prodl,w,c
 16151  01CBC4  2633               	addwf	(btemp+9)^0,f,c
 16152                           
 16153                           ;stkvar	_off @ sp[(-4)+0]
 16154  01CBC6  0EFC               	movlw	-4
 16155  01CBC8  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 16156  01CBCE  0EFD               	movlw	-3
 16157  01CBD0  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 16158                           
 16159                           ;stkvar	_p @ sp[(-4)+-2]
 16160  01CBD6  0EFA               	movlw	-6
 16161  01CBD8  006F FF8F FFD9     	movff	plusw1,fsr2l
 16162  01CBDE  0EFB               	movlw	-5
 16163  01CBE0  006F FF8F FFDA     	movff	plusw1,fsr2h
 16164  01CBE6  006F FF7B FFF6     	movff	postinc2,tblptrl
 16165  01CBEC  006F FF77 FFF7     	movff	postdec2,tblptrh
 16166  01CBF2                     	if	0	;tblptru may be non-zero
 16167  01CBF2                     	endif
 16168  01CBF2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16169  01CBF2  0E00               	movlw	low (__mediumconst shr (0+16))
 16170  01CBF4  6EF8               	movwf	tblptru,c
 16171  01CBF6                     	endif
 16172  01CBF6  0008               	tblrd		*
 16173  01CBF8  50F5               	movf	tablat,w,c
 16174  01CBFA  0A3A               	xorlw	58
 16175  01CBFC  A4D8               	btfss	status,2,c
 16176  01CBFE  D064               	goto	l10852
 16177                           
 16178                           ;stkvar	_p @ sp[(-4)+-2]
 16179  01CC00  0EFA               	movlw	-6
 16180  01CC02  006F FF8F FFD9     	movff	plusw1,fsr2l
 16181  01CC08  0EFB               	movlw	-5
 16182  01CC0A  006F FF8F FFDA     	movff	plusw1,fsr2h
 16183  01CC10  2ADE               	incf	postinc2,f,c
 16184  01CC12  0E00               	movlw	0
 16185  01CC14  22DD               	addwfc	postdec2,f,c
 16186                           
 16187                           ;stkvar	_p @ sp[(-4)+-2]
 16188  01CC16  0EFA               	movlw	-6
 16189  01CC18  006F FF8F FFE6     	movff	plusw1,postinc1
 16190  01CC1E  006F FF8F FFE6     	movff	plusw1,postinc1
 16191  01CC24  ECF0  F0FD         	call	_getint	;wreg free
 16192  01CC28  0060  F0A8  F034   	movff	btemp,btemp+10
 16193  01CC2E  0060  F0AC  F035   	movff	btemp+1,btemp+11
 16194  01CC34  0E3C               	movlw	60
 16195  01CC36  0234               	mulwf	(btemp+10)^0,c
 16196  01CC38  006F FFCC  F032    	movff	prodl,btemp+8
 16197  01CC3E  006F FFD0  F033    	movff	prodh,btemp+9
 16198  01CC44  0235               	mulwf	(btemp+11)^0,c
 16199  01CC46  50F3               	movf	prodl,w,c
 16200  01CC48  2633               	addwf	(btemp+9)^0,f,c
 16201                           
 16202                           ;stkvar	_off @ sp[(-4)+0]
 16203  01CC4A  50E1               	movf	fsr1l,w,c
 16204  01CC4C  0FFC               	addlw	-4
 16205  01CC4E  6ED9               	movwf	fsr2l,c
 16206  01CC50  50E2               	movf	fsr1h,w,c
 16207  01CC52  6EDA               	movwf	fsr2h,c
 16208  01CC54  0EFF               	movlw	255
 16209  01CC56  22DA               	addwfc	fsr2h,f,c
 16210  01CC58  5032               	movf	(btemp+8)^0,w,c
 16211  01CC5A  26DE               	addwf	postinc2,f,c
 16212  01CC5C  5033               	movf	(btemp+9)^0,w,c
 16213  01CC5E  22DD               	addwfc	postdec2,f,c
 16214                           
 16215                           ;stkvar	_p @ sp[(-4)+-2]
 16216  01CC60  0EFA               	movlw	-6
 16217  01CC62  006F FF8F FFD9     	movff	plusw1,fsr2l
 16218  01CC68  0EFB               	movlw	-5
 16219  01CC6A  006F FF8F FFDA     	movff	plusw1,fsr2h
 16220  01CC70  006F FF7B FFF6     	movff	postinc2,tblptrl
 16221  01CC76  006F FF77 FFF7     	movff	postdec2,tblptrh
 16222  01CC7C                     	if	0	;tblptru may be non-zero
 16223  01CC7C                     	endif
 16224  01CC7C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16225  01CC7C  0E00               	movlw	low (__mediumconst shr (0+16))
 16226  01CC7E  6EF8               	movwf	tblptru,c
 16227  01CC80                     	endif
 16228  01CC80  0008               	tblrd		*
 16229  01CC82  50F5               	movf	tablat,w,c
 16230  01CC84  0A3A               	xorlw	58
 16231  01CC86  A4D8               	btfss	status,2,c
 16232  01CC88  D01F               	goto	l10852
 16233                           
 16234                           ;stkvar	_p @ sp[(-4)+-2]
 16235  01CC8A  0EFA               	movlw	-6
 16236  01CC8C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16237  01CC92  0EFB               	movlw	-5
 16238  01CC94  006F FF8F FFDA     	movff	plusw1,fsr2h
 16239  01CC9A  2ADE               	incf	postinc2,f,c
 16240  01CC9C  0E00               	movlw	0
 16241  01CC9E  22DD               	addwfc	postdec2,f,c
 16242                           
 16243                           ;stkvar	_p @ sp[(-4)+-2]
 16244  01CCA0  0EFA               	movlw	-6
 16245  01CCA2  006F FF8F FFE6     	movff	plusw1,postinc1
 16246  01CCA8  006F FF8F FFE6     	movff	plusw1,postinc1
 16247  01CCAE  ECF0  F0FD         	call	_getint	;wreg free
 16248                           
 16249                           ;stkvar	_off @ sp[(-4)+0]
 16250  01CCB2  50E1               	movf	fsr1l,w,c
 16251  01CCB4  0FFC               	addlw	-4
 16252  01CCB6  6ED9               	movwf	fsr2l,c
 16253  01CCB8  50E2               	movf	fsr1h,w,c
 16254  01CCBA  6EDA               	movwf	fsr2h,c
 16255  01CCBC  0EFF               	movlw	255
 16256  01CCBE  22DA               	addwfc	fsr2h,f,c
 16257  01CCC0  502A               	movf	btemp^0,w,c
 16258  01CCC2  26DE               	addwf	postinc2,f,c
 16259  01CCC4  502B               	movf	(btemp+1)^0,w,c
 16260  01CCC6  22DD               	addwfc	postdec2,f,c
 16261  01CCC8                     l10852:
 16262                           
 16263                           ;stkvar	_neg @ sp[(-4)+2]
 16264  01CCC8  0EFE               	movlw	-2
 16265  01CCCA  006F FF8C  F02A    	movff	plusw1,btemp
 16266  01CCD0  0EFF               	movlw	-1
 16267  01CCD2  50E3               	movf	plusw1,w,c
 16268  01CCD4  102A               	iorwf	btemp^0,w,c
 16269  01CCD6  A4D8               	btfss	status,2,c
 16270  01CCD8  D009               	goto	l10856
 16271                           
 16272                           ;stkvar	_off @ sp[(-4)+0]
 16273  01CCDA  0EFC               	movlw	-4
 16274  01CCDC  006F FF8C  F02A    	movff	plusw1,btemp
 16275  01CCE2  0EFD               	movlw	-3
 16276  01CCE4  006F FF8C  F02B    	movff	plusw1,btemp+1
 16277  01CCEA  D00D               	goto	l3931
 16278  01CCEC                     l10856:
 16279                           
 16280                           ;stkvar	_off @ sp[(-4)+0]
 16281  01CCEC  0EFC               	movlw	-4
 16282  01CCEE  006F FF8C  F02A    	movff	plusw1,btemp
 16283  01CCF4  1E2A               	comf	btemp^0,f,c
 16284  01CCF6  0EFD               	movlw	-3
 16285  01CCF8  006F FF8C  F02B    	movff	plusw1,btemp+1
 16286  01CCFE  1E2B               	comf	(btemp+1)^0,f,c
 16287  01CD00  2A2A               	incf	btemp^0,f,c
 16288  01CD02  B4D8               	btfsc	status,2,c
 16289  01CD04  2A2B               	incf	(btemp+1)^0,f,c
 16290  01CD06                     l3931:
 16291                           
 16292                           ; _getoff: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 16293  01CD06  0EFA               	movlw	250
 16294  01CD08  26E1               	addwf	fsr1l,f,c
 16295  01CD0A  0EFF               	movlw	255
 16296  01CD0C  22E2               	addwfc	fsr1h,f,c
 16297  01CD0E  0012               	return		;funcret
 16298  01CD10                     __end_of_getoff:
 16299                           	opt callstack 0
 16300                           
 16301 ;; *************** function _getint *****************
 16302 ;; Defined at:
 16303 ;;		line 32 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 16304 ;; Parameters:    Size  Location     Type
 16305 ;;  p               2  [STACK] PTR PTR const unsigned c
 16306 ;;		 -> s(2), 
 16307 ;; Auto vars:     Size  Location     Type
 16308 ;;  x               2  [STACK] unsigned int 
 16309 ;; Return value:  Size  Location     Type
 16310 ;;                  2  [STACK] int 
 16311 ;; Registers used:
 16312 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 16313 ;; Tracked objects:
 16314 ;;		On entry : 0/0
 16315 ;;		On exit  : 0/0
 16316 ;;		Unchanged: 0/0
 16317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16322 ;;Total ram usage:        0 bytes
 16323 ;; Hardware stack levels used:    1
 16324 ;; Hardware stack levels required when called:   15
 16325 ;; This function calls:
 16326 ;;		Nothing
 16327 ;; This function is called by:
 16328 ;;		_getoff
 16329 ;;		_getrule
 16330 ;; This function uses a reentrant model
 16331 ;;
 16332                           
 16333                           	psect	text48
 16334  01FBE0                     __ptext48:
 16335                           	opt callstack 0
 16336  01FBE0                     _getint:
 16337                           	opt callstack 0
 16338                           
 16339                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16340  01FBE0  52E6               	movf	postinc1,f,c
 16341  01FBE2  52E6               	movf	postinc1,f,c
 16342                           
 16343                           ;stkvar	_x @ sp[(-2)+0]
 16344                           
 16345                           ;incstack = 0
 16346  01FBE4  0EFE               	movlw	-2
 16347  01FBE6  6AE3               	clrf	plusw1,c
 16348  01FBE8  0EFF               	movlw	-1
 16349  01FBEA  6AE3               	clrf	plusw1,c
 16350  01FBEC  D043               	goto	l9990
 16351  01FBEE                     l9986:
 16352  01FBEE  0ED0               	movlw	208
 16353  01FBF0  6E34               	movwf	(btemp+10)^0,c
 16354  01FBF2  0EFF               	movlw	255
 16355  01FBF4  6E35               	movwf	(btemp+11)^0,c
 16356                           
 16357                           ;stkvar	_x @ sp[(-2)+0]
 16358  01FBF6  0EFE               	movlw	-2
 16359  01FBF8  006F FF8C  F032    	movff	plusw1,btemp+8
 16360  01FBFE  0EFF               	movlw	-1
 16361  01FC00  006F FF8C  F033    	movff	plusw1,btemp+9
 16362  01FC06  0E0A               	movlw	10
 16363  01FC08  0232               	mulwf	(btemp+8)^0,c
 16364  01FC0A  006F FFCC  F030    	movff	prodl,btemp+6
 16365  01FC10  006F FFD0  F031    	movff	prodh,btemp+7
 16366  01FC16  0233               	mulwf	(btemp+9)^0,c
 16367  01FC18  50F3               	movf	prodl,w,c
 16368  01FC1A  2631               	addwf	(btemp+7)^0,f,c
 16369                           
 16370                           ;stkvar	_p @ sp[(-2)+-2]
 16371  01FC1C  0EFC               	movlw	-4
 16372  01FC1E  006F FF8F FFD9     	movff	plusw1,fsr2l
 16373  01FC24  0EFD               	movlw	-3
 16374  01FC26  006F FF8F FFDA     	movff	plusw1,fsr2h
 16375  01FC2C  006F FF7B FFF6     	movff	postinc2,tblptrl
 16376  01FC32  006F FF77 FFF7     	movff	postdec2,tblptrh
 16377  01FC38                     	if	0	;tblptru may be non-zero
 16378  01FC38                     	endif
 16379  01FC38                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16380  01FC38  0E00               	movlw	low (__mediumconst shr (0+16))
 16381  01FC3A  6EF8               	movwf	tblptru,c
 16382  01FC3C                     	endif
 16383  01FC3C  0008               	tblrd		*
 16384  01FC3E  50F5               	movf	tablat,w,c
 16385  01FC40  2630               	addwf	(btemp+6)^0,f,c
 16386  01FC42  0E00               	movlw	0
 16387  01FC44  2231               	addwfc	(btemp+7)^0,f,c
 16388  01FC46  5034               	movf	(btemp+10)^0,w,c
 16389  01FC48  2630               	addwf	(btemp+6)^0,f,c
 16390  01FC4A  5035               	movf	(btemp+11)^0,w,c
 16391  01FC4C  2231               	addwfc	(btemp+7)^0,f,c
 16392                           
 16393                           ;stkvar	_x @ sp[(-2)+0]
 16394  01FC4E  0EFE               	movlw	-2
 16395  01FC50  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 16396  01FC56  0EFF               	movlw	-1
 16397  01FC58  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 16398                           
 16399                           ;stkvar	_p @ sp[(-2)+-2]
 16400  01FC5E  0EFC               	movlw	-4
 16401  01FC60  006F FF8F FFD9     	movff	plusw1,fsr2l
 16402  01FC66  0EFD               	movlw	-3
 16403  01FC68  006F FF8F FFDA     	movff	plusw1,fsr2h
 16404  01FC6E  2ADE               	incf	postinc2,f,c
 16405  01FC70  0E00               	movlw	0
 16406  01FC72  22DD               	addwfc	postdec2,f,c
 16407  01FC74                     l9990:
 16408  01FC74  0ED0               	movlw	208
 16409  01FC76  6E34               	movwf	(btemp+10)^0,c
 16410  01FC78  0EFF               	movlw	255
 16411  01FC7A  6E35               	movwf	(btemp+11)^0,c
 16412                           
 16413                           ;stkvar	_p @ sp[(-2)+-2]
 16414  01FC7C  0EFC               	movlw	-4
 16415  01FC7E  006F FF8F FFD9     	movff	plusw1,fsr2l
 16416  01FC84  0EFD               	movlw	-3
 16417  01FC86  006F FF8F FFDA     	movff	plusw1,fsr2h
 16418  01FC8C  006F FF7B FFF6     	movff	postinc2,tblptrl
 16419  01FC92  006F FF77 FFF7     	movff	postdec2,tblptrh
 16420  01FC98                     	if	0	;tblptru may be non-zero
 16421  01FC98                     	endif
 16422  01FC98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16423  01FC98  0E00               	movlw	low (__mediumconst shr (0+16))
 16424  01FC9A  6EF8               	movwf	tblptru,c
 16425  01FC9C                     	endif
 16426  01FC9C  0008               	tblrd		*
 16427  01FC9E  50F5               	movf	tablat,w,c
 16428  01FCA0  6E32               	movwf	(btemp+8)^0,c
 16429  01FCA2  6A33               	clrf	(btemp+9)^0,c
 16430  01FCA4  5034               	movf	(btemp+10)^0,w,c
 16431  01FCA6  2632               	addwf	(btemp+8)^0,f,c
 16432  01FCA8  5035               	movf	(btemp+11)^0,w,c
 16433  01FCAA  2233               	addwfc	(btemp+9)^0,f,c
 16434  01FCAC  5033               	movf	(btemp+9)^0,w,c
 16435  01FCAE  E104               	bnz	u7620
 16436  01FCB0  0E0A               	movlw	10
 16437  01FCB2  5C32               	subwf	(btemp+8)^0,w,c
 16438  01FCB4  A0D8               	btfss	status,0,c
 16439  01FCB6  D79B               	goto	l9986
 16440  01FCB8                     u7620:
 16441                           
 16442                           ;stkvar	_x @ sp[(-2)+0]
 16443  01FCB8  0EFE               	movlw	-2
 16444  01FCBA  006F FF8C  F02A    	movff	plusw1,btemp
 16445  01FCC0  0EFF               	movlw	-1
 16446  01FCC2  006F FF8C  F02B    	movff	plusw1,btemp+1
 16447                           
 16448                           ; _getint: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 16449  01FCC8  52E5               	movf	postdec1,f,c
 16450  01FCCA  52E5               	movf	postdec1,f,c
 16451  01FCCC  52E5               	movf	postdec1,f,c
 16452  01FCCE  52E5               	movf	postdec1,f,c
 16453  01FCD0  0012               	return		;funcret
 16454  01FCD2                     __end_of_getint:
 16455                           	opt callstack 0
 16456                           
 16457 ;; *************** function _getname *****************
 16458 ;; Defined at:
 16459 ;;		line 82 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 16460 ;; Parameters:    Size  Location     Type
 16461 ;;  d               2  [STACK] PTR unsigned char 
 16462 ;;		 -> dst_name(7), std_name(7), 
 16463 ;;  p               2  [STACK] PTR PTR const unsigned c
 16464 ;;		 -> s(2), 
 16465 ;; Auto vars:     Size  Location     Type
 16466 ;;  i               2  [STACK] int 
 16467 ;; Return value:  Size  Location     Type
 16468 ;;                  1  [STACK] void 
 16469 ;; Registers used:
 16470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11,
      + tblptrl, tblptrh, tblptru
 16471 ;; Tracked objects:
 16472 ;;		On entry : 0/39
 16473 ;;		On exit  : 0/0
 16474 ;;		Unchanged: 0/0
 16475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16480 ;;Total ram usage:        0 bytes
 16481 ;; Hardware stack levels used:    1
 16482 ;; Hardware stack levels required when called:   15
 16483 ;; This function calls:
 16484 ;;		Nothing
 16485 ;; This function is called by:
 16486 ;;		_do_tzset
 16487 ;; This function uses a reentrant model
 16488 ;;
 16489                           
 16490                           	psect	text49
 16491  01A970                     __ptext49:
 16492                           	opt callstack 0
 16493  01A970                     _getname:
 16494                           	opt callstack 0
 16495                           
 16496                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16497  01A970  52E6               	movf	postinc1,f,c
 16498  01A972  52E6               	movf	postinc1,f,c
 16499                           
 16500                           ;stkvar	_p @ sp[(-2)+-4]
 16501                           
 16502                           ;incstack = 0
 16503  01A974  0EFA               	movlw	-6
 16504  01A976  006F FF8F FFD9     	movff	plusw1,fsr2l
 16505  01A97C  0EFB               	movlw	-5
 16506  01A97E  006F FF8F FFDA     	movff	plusw1,fsr2h
 16507  01A984  006F FF7B FFF6     	movff	postinc2,tblptrl
 16508  01A98A  006F FF77 FFF7     	movff	postdec2,tblptrh
 16509  01A990                     	if	0	;tblptru may be non-zero
 16510  01A990                     	endif
 16511  01A990                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16512  01A990  0E00               	movlw	low (__mediumconst shr (0+16))
 16513  01A992  6EF8               	movwf	tblptru,c
 16514  01A994                     	endif
 16515  01A994  0008               	tblrd		*
 16516  01A996  50F5               	movf	tablat,w,c
 16517  01A998  0A3C               	xorlw	60
 16518  01A99A  A4D8               	btfss	status,2,c
 16519  01A99C  D09E               	goto	l16088
 16520                           
 16521                           ;stkvar	_p @ sp[(-2)+-4]
 16522  01A99E  0EFA               	movlw	-6
 16523  01A9A0  006F FF8F FFD9     	movff	plusw1,fsr2l
 16524  01A9A6  0EFB               	movlw	-5
 16525  01A9A8  006F FF8F FFDA     	movff	plusw1,fsr2h
 16526  01A9AE  2ADE               	incf	postinc2,f,c
 16527  01A9B0  0E00               	movlw	0
 16528  01A9B2  22DD               	addwfc	postdec2,f,c
 16529                           
 16530                           ;stkvar	_i @ sp[(-2)+0]
 16531  01A9B4  0EFE               	movlw	-2
 16532  01A9B6  6AE3               	clrf	plusw1,c
 16533  01A9B8  0EFF               	movlw	-1
 16534  01A9BA  6AE3               	clrf	plusw1,c
 16535  01A9BC  D04D               	goto	l16082
 16536  01A9BE                     l16078:
 16537                           
 16538                           ;stkvar	_i @ sp[(-2)+0]
 16539  01A9BE  0EFE               	movlw	-2
 16540  01A9C0  006F FF8C  F034    	movff	plusw1,btemp+10
 16541  01A9C6  0EFF               	movlw	-1
 16542  01A9C8  006F FF8C  F035    	movff	plusw1,btemp+11
 16543                           
 16544                           ;stkvar	_p @ sp[(-2)+-4]
 16545  01A9CE  0EFA               	movlw	-6
 16546  01A9D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 16547  01A9D6  0EFB               	movlw	-5
 16548  01A9D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 16549  01A9DE  006F FF78  F032    	movff	postinc2,btemp+8
 16550  01A9E4  006F FF74  F033    	movff	postdec2,btemp+9
 16551  01A9EA  5034               	movf	(btemp+10)^0,w,c
 16552  01A9EC  2632               	addwf	(btemp+8)^0,f,c
 16553  01A9EE  5035               	movf	(btemp+11)^0,w,c
 16554  01A9F0  2233               	addwfc	(btemp+9)^0,f,c
 16555  01A9F2  0060  F0CB  FFF6   	movff	btemp+8,tblptrl
 16556  01A9F8  0060  F0CF  FFF7   	movff	btemp+9,tblptrh
 16557  01A9FE                     	if	0	;tblptru may be non-zero
 16558  01A9FE                     	endif
 16559  01A9FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16560  01A9FE  0E00               	movlw	low (__mediumconst shr (0+16))
 16561  01AA00  6EF8               	movwf	tblptru,c
 16562  01AA02                     	endif
 16563                           
 16564                           ;stkvar	_i @ sp[(-2)+0]
 16565  01AA02  0EFE               	movlw	-2
 16566  01AA04  006F FF8C  F034    	movff	plusw1,btemp+10
 16567  01AA0A  0EFF               	movlw	-1
 16568  01AA0C  006F FF8C  F035    	movff	plusw1,btemp+11
 16569                           
 16570                           ;stkvar	_d @ sp[(-2)+-2]
 16571  01AA12  0EFC               	movlw	-4
 16572  01AA14  006F FF8C  F032    	movff	plusw1,btemp+8
 16573  01AA1A  0EFD               	movlw	-3
 16574  01AA1C  006F FF8C  F033    	movff	plusw1,btemp+9
 16575  01AA22  5034               	movf	(btemp+10)^0,w,c
 16576  01AA24  2432               	addwf	(btemp+8)^0,w,c
 16577  01AA26  6ED9               	movwf	fsr2l,c
 16578  01AA28  5035               	movf	(btemp+11)^0,w,c
 16579  01AA2A  2033               	addwfc	(btemp+9)^0,w,c
 16580  01AA2C  6EDA               	movwf	fsr2h,c
 16581  01AA2E  0008               	tblrd		*
 16582  01AA30  006F FFD7 FFDF     	movff	tablat,indf2
 16583                           
 16584                           ;stkvar	_i @ sp[(-2)+0]
 16585  01AA36  0EFE               	movlw	-2
 16586  01AA38  50E3               	movf	plusw1,w,c
 16587  01AA3A  0F01               	addlw	1
 16588  01AA3C  6E2A               	movwf	btemp^0,c
 16589  01AA3E  0EFE               	movlw	-2
 16590  01AA40  0060  F0AB  FFE3   	movff	btemp,plusw1
 16591  01AA46  6A2A               	clrf	btemp^0,c
 16592  01AA48  0EFF               	movlw	-1
 16593  01AA4A  50E3               	movf	plusw1,w,c
 16594  01AA4C  202A               	addwfc	btemp^0,w,c
 16595  01AA4E  6E2A               	movwf	btemp^0,c
 16596  01AA50  0EFF               	movlw	-1
 16597  01AA52  0060  F0AB  FFE3   	movff	btemp,plusw1
 16598  01AA58                     l16082:
 16599                           
 16600                           ;stkvar	_i @ sp[(-2)+0]
 16601  01AA58  0EFE               	movlw	-2
 16602  01AA5A  006F FF8C  F034    	movff	plusw1,btemp+10
 16603  01AA60  0EFF               	movlw	-1
 16604  01AA62  006F FF8C  F035    	movff	plusw1,btemp+11
 16605                           
 16606                           ;stkvar	_p @ sp[(-2)+-4]
 16607  01AA68  0EFA               	movlw	-6
 16608  01AA6A  006F FF8F FFD9     	movff	plusw1,fsr2l
 16609  01AA70  0EFB               	movlw	-5
 16610  01AA72  006F FF8F FFDA     	movff	plusw1,fsr2h
 16611  01AA78  006F FF78  F032    	movff	postinc2,btemp+8
 16612  01AA7E  006F FF74  F033    	movff	postdec2,btemp+9
 16613  01AA84  5034               	movf	(btemp+10)^0,w,c
 16614  01AA86  2632               	addwf	(btemp+8)^0,f,c
 16615  01AA88  5035               	movf	(btemp+11)^0,w,c
 16616  01AA8A  2233               	addwfc	(btemp+9)^0,f,c
 16617  01AA8C  0060  F0CB  FFF6   	movff	btemp+8,tblptrl
 16618  01AA92  0060  F0CF  FFF7   	movff	btemp+9,tblptrh
 16619  01AA98                     	if	0	;tblptru may be non-zero
 16620  01AA98                     	endif
 16621  01AA98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16622  01AA98  0E00               	movlw	low (__mediumconst shr (0+16))
 16623  01AA9A  6EF8               	movwf	tblptru,c
 16624  01AA9C                     	endif
 16625  01AA9C  0008               	tblrd		*
 16626  01AA9E  50F5               	movf	tablat,w,c
 16627  01AAA0  0A3E               	xorlw	62
 16628  01AAA2  B4D8               	btfsc	status,2,c
 16629  01AAA4  D00E               	goto	u15600
 16630                           
 16631                           ;stkvar	_i @ sp[(-2)+0]
 16632  01AAA6  0EFF               	movlw	-1
 16633  01AAA8  BEE3               	btfsc	plusw1,7,c
 16634  01AAAA  D789               	goto	l16078
 16635  01AAAC  0EFF               	movlw	-1
 16636  01AAAE  50E3               	movf	plusw1,w,c
 16637  01AAB0  E108               	bnz	u15600
 16638  01AAB2  0EFE               	movlw	-2
 16639  01AAB4  006F FF8C  F02A    	movff	plusw1,btemp
 16640  01AABA  0E06               	movlw	6
 16641  01AABC  5E2A               	subwf	btemp^0,f,c
 16642  01AABE  A0D8               	btfss	status,0,c
 16643  01AAC0  D77E               	goto	l16078
 16644  01AAC2                     u15600:
 16645                           
 16646                           ;stkvar	_p @ sp[(-2)+-4]
 16647  01AAC2  0EFA               	movlw	-6
 16648  01AAC4  006F FF8F FFD9     	movff	plusw1,fsr2l
 16649  01AACA  0EFB               	movlw	-5
 16650  01AACC  006F FF8F FFDA     	movff	plusw1,fsr2h
 16651  01AAD2  2ADE               	incf	postinc2,f,c
 16652  01AAD4  0E00               	movlw	0
 16653  01AAD6  22DD               	addwfc	postdec2,f,c
 16654  01AAD8  D098               	goto	u15620
 16655  01AADA                     l16088:
 16656                           
 16657                           ;stkvar	_i @ sp[(-2)+0]
 16658  01AADA  0EFE               	movlw	-2
 16659  01AADC  6AE3               	clrf	plusw1,c
 16660  01AADE  0EFF               	movlw	-1
 16661  01AAE0  6AE3               	clrf	plusw1,c
 16662  01AAE2  D04D               	goto	l16094
 16663  01AAE4                     l16090:
 16664                           
 16665                           ;stkvar	_i @ sp[(-2)+0]
 16666  01AAE4  0EFE               	movlw	-2
 16667  01AAE6  006F FF8C  F034    	movff	plusw1,btemp+10
 16668  01AAEC  0EFF               	movlw	-1
 16669  01AAEE  006F FF8C  F035    	movff	plusw1,btemp+11
 16670                           
 16671                           ;stkvar	_p @ sp[(-2)+-4]
 16672  01AAF4  0EFA               	movlw	-6
 16673  01AAF6  006F FF8F FFD9     	movff	plusw1,fsr2l
 16674  01AAFC  0EFB               	movlw	-5
 16675  01AAFE  006F FF8F FFDA     	movff	plusw1,fsr2h
 16676  01AB04  006F FF78  F032    	movff	postinc2,btemp+8
 16677  01AB0A  006F FF74  F033    	movff	postdec2,btemp+9
 16678  01AB10  5034               	movf	(btemp+10)^0,w,c
 16679  01AB12  2632               	addwf	(btemp+8)^0,f,c
 16680  01AB14  5035               	movf	(btemp+11)^0,w,c
 16681  01AB16  2233               	addwfc	(btemp+9)^0,f,c
 16682  01AB18  0060  F0CB  FFF6   	movff	btemp+8,tblptrl
 16683  01AB1E  0060  F0CF  FFF7   	movff	btemp+9,tblptrh
 16684  01AB24                     	if	0	;tblptru may be non-zero
 16685  01AB24                     	endif
 16686  01AB24                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16687  01AB24  0E00               	movlw	low (__mediumconst shr (0+16))
 16688  01AB26  6EF8               	movwf	tblptru,c
 16689  01AB28                     	endif
 16690                           
 16691                           ;stkvar	_i @ sp[(-2)+0]
 16692  01AB28  0EFE               	movlw	-2
 16693  01AB2A  006F FF8C  F034    	movff	plusw1,btemp+10
 16694  01AB30  0EFF               	movlw	-1
 16695  01AB32  006F FF8C  F035    	movff	plusw1,btemp+11
 16696                           
 16697                           ;stkvar	_d @ sp[(-2)+-2]
 16698  01AB38  0EFC               	movlw	-4
 16699  01AB3A  006F FF8C  F032    	movff	plusw1,btemp+8
 16700  01AB40  0EFD               	movlw	-3
 16701  01AB42  006F FF8C  F033    	movff	plusw1,btemp+9
 16702  01AB48  5034               	movf	(btemp+10)^0,w,c
 16703  01AB4A  2432               	addwf	(btemp+8)^0,w,c
 16704  01AB4C  6ED9               	movwf	fsr2l,c
 16705  01AB4E  5035               	movf	(btemp+11)^0,w,c
 16706  01AB50  2033               	addwfc	(btemp+9)^0,w,c
 16707  01AB52  6EDA               	movwf	fsr2h,c
 16708  01AB54  0008               	tblrd		*
 16709  01AB56  006F FFD7 FFDF     	movff	tablat,indf2
 16710                           
 16711                           ;stkvar	_i @ sp[(-2)+0]
 16712  01AB5C  0EFE               	movlw	-2
 16713  01AB5E  50E3               	movf	plusw1,w,c
 16714  01AB60  0F01               	addlw	1
 16715  01AB62  6E2A               	movwf	btemp^0,c
 16716  01AB64  0EFE               	movlw	-2
 16717  01AB66  0060  F0AB  FFE3   	movff	btemp,plusw1
 16718  01AB6C  6A2A               	clrf	btemp^0,c
 16719  01AB6E  0EFF               	movlw	-1
 16720  01AB70  50E3               	movf	plusw1,w,c
 16721  01AB72  202A               	addwfc	btemp^0,w,c
 16722  01AB74  6E2A               	movwf	btemp^0,c
 16723  01AB76  0EFF               	movlw	-1
 16724  01AB78  0060  F0AB  FFE3   	movff	btemp,plusw1
 16725  01AB7E                     l16094:
 16726  01AB7E  0E9F               	movlw	159
 16727  01AB80  6E34               	movwf	(btemp+10)^0,c
 16728  01AB82  0EFF               	movlw	255
 16729  01AB84  6E35               	movwf	(btemp+11)^0,c
 16730                           
 16731                           ;stkvar	_i @ sp[(-2)+0]
 16732  01AB86  0EFE               	movlw	-2
 16733  01AB88  006F FF8C  F032    	movff	plusw1,btemp+8
 16734  01AB8E  0EFF               	movlw	-1
 16735  01AB90  006F FF8C  F033    	movff	plusw1,btemp+9
 16736                           
 16737                           ;stkvar	_p @ sp[(-2)+-4]
 16738  01AB96  0EFA               	movlw	-6
 16739  01AB98  006F FF8F FFD9     	movff	plusw1,fsr2l
 16740  01AB9E  0EFB               	movlw	-5
 16741  01ABA0  006F FF8F FFDA     	movff	plusw1,fsr2h
 16742  01ABA6  006F FF78  F030    	movff	postinc2,btemp+6
 16743  01ABAC  006F FF74  F031    	movff	postdec2,btemp+7
 16744  01ABB2  5032               	movf	(btemp+8)^0,w,c
 16745  01ABB4  2630               	addwf	(btemp+6)^0,f,c
 16746  01ABB6  5033               	movf	(btemp+9)^0,w,c
 16747  01ABB8  2231               	addwfc	(btemp+7)^0,f,c
 16748  01ABBA  0060  F0C3  FFF6   	movff	btemp+6,tblptrl
 16749  01ABC0  0060  F0C7  FFF7   	movff	btemp+7,tblptrh
 16750  01ABC6                     	if	0	;tblptru may be non-zero
 16751  01ABC6                     	endif
 16752  01ABC6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16753  01ABC6  0E00               	movlw	low (__mediumconst shr (0+16))
 16754  01ABC8  6EF8               	movwf	tblptru,c
 16755  01ABCA                     	endif
 16756  01ABCA  0008               	tblrd		*
 16757  01ABCC  50F5               	movf	tablat,w,c
 16758  01ABCE  6E32               	movwf	(btemp+8)^0,c
 16759  01ABD0  6A33               	clrf	(btemp+9)^0,c
 16760  01ABD2  0E20               	movlw	32
 16761  01ABD4  1232               	iorwf	(btemp+8)^0,f,c
 16762  01ABD6  0E00               	movlw	0
 16763  01ABD8  1233               	iorwf	(btemp+9)^0,f,c
 16764  01ABDA  5034               	movf	(btemp+10)^0,w,c
 16765  01ABDC  2632               	addwf	(btemp+8)^0,f,c
 16766  01ABDE  5035               	movf	(btemp+11)^0,w,c
 16767  01ABE0  2233               	addwfc	(btemp+9)^0,f,c
 16768  01ABE2  5033               	movf	(btemp+9)^0,w,c
 16769  01ABE4  E112               	bnz	l16098
 16770  01ABE6  0E1A               	movlw	26
 16771  01ABE8  5C32               	subwf	(btemp+8)^0,w,c
 16772  01ABEA  B0D8               	btfsc	status,0,c
 16773  01ABEC  D00E               	goto	u15620
 16774                           
 16775                           ;stkvar	_i @ sp[(-2)+0]
 16776  01ABEE  0EFF               	movlw	-1
 16777  01ABF0  BEE3               	btfsc	plusw1,7,c
 16778  01ABF2  D778               	goto	l16090
 16779  01ABF4  0EFF               	movlw	-1
 16780  01ABF6  50E3               	movf	plusw1,w,c
 16781  01ABF8  E108               	bnz	u15620
 16782  01ABFA  0EFE               	movlw	-2
 16783  01ABFC  006F FF8C  F02A    	movff	plusw1,btemp
 16784  01AC02  0E06               	movlw	6
 16785  01AC04  5E2A               	subwf	btemp^0,f,c
 16786  01AC06  A0D8               	btfss	status,0,c
 16787  01AC08  D76D               	goto	l16090
 16788  01AC0A                     u15620:
 16789  01AC0A                     l16098:
 16790                           
 16791                           ;stkvar	_i @ sp[(-2)+0]
 16792  01AC0A  0EFE               	movlw	-2
 16793  01AC0C  006F FF8C  F034    	movff	plusw1,btemp+10
 16794  01AC12  0EFF               	movlw	-1
 16795  01AC14  006F FF8C  F035    	movff	plusw1,btemp+11
 16796                           
 16797                           ;stkvar	_p @ sp[(-2)+-4]
 16798  01AC1A  0EFA               	movlw	-6
 16799  01AC1C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16800  01AC22  0EFB               	movlw	-5
 16801  01AC24  006F FF8F FFDA     	movff	plusw1,fsr2h
 16802  01AC2A  5034               	movf	(btemp+10)^0,w,c
 16803  01AC2C  26DE               	addwf	postinc2,f,c
 16804  01AC2E  5035               	movf	(btemp+11)^0,w,c
 16805  01AC30  22DD               	addwfc	postdec2,f,c
 16806                           
 16807                           ;stkvar	_i @ sp[(-2)+0]
 16808  01AC32  0EFE               	movlw	-2
 16809  01AC34  006F FF8C  F034    	movff	plusw1,btemp+10
 16810  01AC3A  0EFF               	movlw	-1
 16811  01AC3C  006F FF8C  F035    	movff	plusw1,btemp+11
 16812                           
 16813                           ;stkvar	_d @ sp[(-2)+-2]
 16814  01AC42  0EFC               	movlw	-4
 16815  01AC44  006F FF8C  F032    	movff	plusw1,btemp+8
 16816  01AC4A  0EFD               	movlw	-3
 16817  01AC4C  006F FF8C  F033    	movff	plusw1,btemp+9
 16818  01AC52  5034               	movf	(btemp+10)^0,w,c
 16819  01AC54  2432               	addwf	(btemp+8)^0,w,c
 16820  01AC56  6ED9               	movwf	fsr2l,c
 16821  01AC58  5035               	movf	(btemp+11)^0,w,c
 16822  01AC5A  2033               	addwfc	(btemp+9)^0,w,c
 16823  01AC5C  6EDA               	movwf	fsr2h,c
 16824  01AC5E  0E00               	movlw	0
 16825  01AC60  6EDF               	movwf	indf2,c
 16826                           
 16827                           ; _getname: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16828  01AC62  0EFA               	movlw	250
 16829  01AC64  26E1               	addwf	fsr1l,f,c
 16830  01AC66  0EFF               	movlw	255
 16831  01AC68  22E2               	addwfc	fsr1h,f,c
 16832  01AC6A  0012               	return		;funcret
 16833  01AC6C                     __end_of_getname:
 16834                           	opt callstack 0
 16835                           
 16836 ;; *************** function ___secs_to_tm *****************
 16837 ;; Defined at:
 16838 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__secs_to_tm.c"
 16839 ;; Parameters:    Size  Location     Type
 16840 ;;  t               8  [STACK] long long 
 16841 ;;  tm              2  [STACK] PTR struct tm
 16842 ;;		 -> localtime@tm(24), 
 16843 ;; Auto vars:     Size  Location     Type
 16844 ;;  years           8  [STACK] long long 
 16845 ;;  days            8  [STACK] long long 
 16846 ;;  secs            8  [STACK] long long 
 16847 ;;  remdays         4  [STACK] long 
 16848 ;;  q_cycles        4  [STACK] long 
 16849 ;;  c_cycles        4  [STACK] long 
 16850 ;;  remyears        4  [STACK] long 
 16851 ;;  remsecs         4  [STACK] long 
 16852 ;;  qc_cycles       4  [STACK] long 
 16853 ;;  months          2  [STACK] int 
 16854 ;;  leap            2  [STACK] int 
 16855 ;;  yday            2  [STACK] int 
 16856 ;;  wday            2  [STACK] int 
 16857 ;; Return value:  Size  Location     Type
 16858 ;;                  4  [STACK] long 
 16859 ;; Registers used:
 16860 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru
 16861 ;; Tracked objects:
 16862 ;;		On entry : 0/39
 16863 ;;		On exit  : 0/0
 16864 ;;		Unchanged: 0/0
 16865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16870 ;;Total ram usage:        0 bytes
 16871 ;; Hardware stack levels used:    1
 16872 ;; Hardware stack levels required when called:   16
 16873 ;; This function calls:
 16874 ;;		___aldiv
 16875 ;;		___almod
 16876 ;;		___aodiv
 16877 ;;		___aomod
 16878 ;;		___lmul
 16879 ;;		___omul
 16880 ;; This function is called by:
 16881 ;;		___localtime_r
 16882 ;; This function uses a reentrant model
 16883 ;;
 16884                           
 16885                           	psect	text50
 16886  01281A                     __ptext50:
 16887                           	opt callstack 0
 16888  01281A                     ___secs_to_tm:
 16889                           	opt callstack 0
 16890                           
 16891                           ; autosize = 57, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 16892  01281A  0E39               	movlw	57
 16893  01281C  26E1               	addwf	fsr1l,f,c
 16894  01281E  0E00               	movlw	0
 16895  012820  22E2               	addwfc	fsr1h,f,c
 16896                           
 16897                           ;stkvar	_t @ sp[(-57)+-8]
 16898                           
 16899                           ;incstack = 0
 16900  012822  0EC6               	movlw	-58
 16901  012824  AEE3               	btfss	plusw1,7,c
 16902  012826  D026               	goto	u16240
 16903  012828  0EC1               	movlw	-63
 16904  01282A  006F FF8C  F02A    	movff	plusw1,btemp
 16905  012830  0E80               	movlw	128
 16906  012832  5E2A               	subwf	btemp^0,f,c
 16907  012834  0EC2               	movlw	-62
 16908  012836  006F FF8C  F02A    	movff	plusw1,btemp
 16909  01283C  0EBD               	movlw	189
 16910  01283E  5A2A               	subwfb	btemp^0,f,c
 16911  012840  0EC3               	movlw	-61
 16912  012842  006F FF8C  F02A    	movff	plusw1,btemp
 16913  012848  0E0E               	movlw	14
 16914  01284A  5A2A               	subwfb	btemp^0,f,c
 16915  01284C  0EC4               	movlw	-60
 16916  01284E  006F FF8C  F02A    	movff	plusw1,btemp
 16917  012854  0EFF               	movlw	255
 16918  012856  5A2A               	subwfb	btemp^0,f,c
 16919  012858  0EC5               	movlw	-59
 16920  01285A  006F FF8C  F02A    	movff	plusw1,btemp
 16921  012860  0EFF               	movlw	255
 16922  012862  5A2A               	subwfb	btemp^0,f,c
 16923  012864  0EC6               	movlw	-58
 16924  012866  006F FF8C  F02A    	movff	plusw1,btemp
 16925  01286C  0EFF               	movlw	255
 16926  01286E  5A2A               	subwfb	btemp^0,f,c
 16927  012870  A0D8               	btfss	status,0,c
 16928  012872  D028               	goto	u16250
 16929  012874                     u16240:
 16930                           
 16931                           ;stkvar	_t @ sp[(-57)+-8]
 16932  012874  0EC6               	movlw	-58
 16933  012876  BEE3               	btfsc	plusw1,7,c
 16934  012878  D02F               	goto	l16666
 16935  01287A  0EC6               	movlw	-58
 16936  01287C  50E3               	movf	plusw1,w,c
 16937  01287E  E122               	bnz	u16250
 16938  012880  0EC5               	movlw	-59
 16939  012882  50E3               	movf	plusw1,w,c
 16940  012884  E11F               	bnz	u16250
 16941  012886  0EC4               	movlw	-60
 16942  012888  50E3               	movf	plusw1,w,c
 16943  01288A  E11C               	bnz	u16250
 16944  01288C  0EBF               	movlw	-65
 16945  01288E  04E3               	decf	plusw1,w,c
 16946  012890  0EC0               	movlw	-64
 16947  012892  006F FF8C  F02A    	movff	plusw1,btemp
 16948  012898  0E7B               	movlw	123
 16949  01289A  5A2A               	subwfb	btemp^0,f,c
 16950  01289C  0EC1               	movlw	-63
 16951  01289E  006F FF8C  F02A    	movff	plusw1,btemp
 16952  0128A4  0E9D               	movlw	157
 16953  0128A6  5A2A               	subwfb	btemp^0,f,c
 16954  0128A8  0EC2               	movlw	-62
 16955  0128AA  006F FF8C  F02A    	movff	plusw1,btemp
 16956  0128B0  0E40               	movlw	64
 16957  0128B2  5A2A               	subwfb	btemp^0,f,c
 16958  0128B4  0EC3               	movlw	-61
 16959  0128B6  006F FF8C  F02A    	movff	plusw1,btemp
 16960  0128BC  0EF1               	movlw	241
 16961  0128BE  5A2A               	subwfb	btemp^0,f,c
 16962  0128C0  A0D8               	btfss	status,0,c
 16963  0128C2  D00A               	goto	l16666
 16964  0128C4                     u16250:
 16965  0128C4  0EFF               	movlw	255
 16966  0128C6  6E2A               	movwf	btemp^0,c
 16967  0128C8  0EFF               	movlw	255
 16968  0128CA  6E2B               	movwf	(btemp+1)^0,c
 16969  0128CC  0EFF               	movlw	255
 16970  0128CE  6E2C               	movwf	(btemp+2)^0,c
 16971  0128D0  0EFF               	movlw	255
 16972  0128D2  6E2D               	movwf	(btemp+3)^0,c
 16973  0128D4  EF71  F09C         	goto	l3847
 16974  0128D8                     l16666:
 16975                           
 16976                           ;stkvar	_t @ sp[(-57)+-8]
 16977  0128D8  0EBF               	movlw	-65
 16978  0128DA  50E3               	movf	plusw1,w,c
 16979  0128DC  0F80               	addlw	128
 16980  0128DE  6E3A               	movwf	(btemp+16)^0,c
 16981  0128E0  0EC0               	movlw	-64
 16982  0128E2  006F FF8C  F03B    	movff	plusw1,btemp+17
 16983  0128E8  0EA2               	movlw	162
 16984  0128EA  223B               	addwfc	(btemp+17)^0,f,c
 16985  0128EC  0EC1               	movlw	-63
 16986  0128EE  006F FF8C  F03C    	movff	plusw1,btemp+18
 16987  0128F4  0E43               	movlw	67
 16988  0128F6  223C               	addwfc	(btemp+18)^0,f,c
 16989  0128F8  0EC2               	movlw	-62
 16990  0128FA  006F FF8C  F03D    	movff	plusw1,btemp+19
 16991  012900  0EC7               	movlw	199
 16992  012902  223D               	addwfc	(btemp+19)^0,f,c
 16993  012904  0EC3               	movlw	-61
 16994  012906  006F FF8C  F03E    	movff	plusw1,btemp+20
 16995  01290C  0EFF               	movlw	255
 16996  01290E  223E               	addwfc	(btemp+20)^0,f,c
 16997  012910  0EC4               	movlw	-60
 16998  012912  006F FF8C  F03F    	movff	plusw1,btemp+21
 16999  012918  0EFF               	movlw	255
 17000  01291A  223F               	addwfc	(btemp+21)^0,f,c
 17001  01291C  0EC5               	movlw	-59
 17002  01291E  006F FF8C  F040    	movff	plusw1,btemp+22
 17003  012924  0EFF               	movlw	255
 17004  012926  2240               	addwfc	(btemp+22)^0,f,c
 17005  012928  0EC6               	movlw	-58
 17006  01292A  006F FF8C  F041    	movff	plusw1,btemp+23
 17007  012930  0EFF               	movlw	255
 17008  012932  2241               	addwfc	(btemp+23)^0,f,c
 17009                           
 17010                           ;stkvar	_secs @ sp[(-57)+17]
 17011  012934  0ED8               	movlw	-40
 17012  012936  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 17013  01293C  0ED9               	movlw	-39
 17014  01293E  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 17015  012944  0EDA               	movlw	-38
 17016  012946  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 17017  01294C  0EDB               	movlw	-37
 17018  01294E  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 17019  012954  0EDC               	movlw	-36
 17020  012956  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 17021  01295C  0EDD               	movlw	-35
 17022  01295E  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 17023  012964  0EDE               	movlw	-34
 17024  012966  0060  F103  FFE3   	movff	btemp+22,plusw1
 17025  01296C  0EDF               	movlw	-33
 17026  01296E  0060  F107  FFE3   	movff	btemp+23,plusw1
 17027  012974  0E80               	movlw	128
 17028  012976  6EE6               	movwf	postinc1,c
 17029  012978  0E51               	movlw	81
 17030  01297A  6EE6               	movwf	postinc1,c
 17031  01297C  0E01               	movlw	1
 17032  01297E  6EE6               	movwf	postinc1,c
 17033  012980  0E00               	movlw	0
 17034  012982  6EE6               	movwf	postinc1,c
 17035  012984  0E00               	movlw	0
 17036  012986  6EE6               	movwf	postinc1,c
 17037  012988  0E00               	movlw	0
 17038  01298A  6EE6               	movwf	postinc1,c
 17039  01298C  0E00               	movlw	0
 17040  01298E  6EE6               	movwf	postinc1,c
 17041  012990  0E00               	movlw	0
 17042  012992  6EE6               	movwf	postinc1,c
 17043                           
 17044                           ;stkvar	_secs @ sp[(-65)+17]
 17045  012994  50E1               	movf	fsr1l,w,c
 17046  012996  0FD0               	addlw	-48
 17047  012998  6ED9               	movwf	fsr2l,c
 17048  01299A  50E2               	movf	fsr1h,w,c
 17049  01299C  6EDA               	movwf	fsr2h,c
 17050  01299E  0EFF               	movlw	255
 17051  0129A0  22DA               	addwfc	fsr2h,f,c
 17052  0129A2  006F FF7B FFE6     	movff	postinc2,postinc1
 17053  0129A8  006F FF7B FFE6     	movff	postinc2,postinc1
 17054  0129AE  006F FF7B FFE6     	movff	postinc2,postinc1
 17055  0129B4  006F FF7B FFE6     	movff	postinc2,postinc1
 17056  0129BA  006F FF7B FFE6     	movff	postinc2,postinc1
 17057  0129C0  006F FF7B FFE6     	movff	postinc2,postinc1
 17058  0129C6  006F FF7B FFE6     	movff	postinc2,postinc1
 17059  0129CC  006F FF7B FFE6     	movff	postinc2,postinc1
 17060  0129D2  EC64  F0DE         	call	___aodiv	;wreg free
 17061  0129D6  52E5               	movf	postdec1,f,c
 17062  0129D8  006F FF9C  F041    	movff	indf1,btemp+23
 17063  0129DE  52E5               	movf	postdec1,f,c
 17064  0129E0  006F FF9C  F040    	movff	indf1,btemp+22
 17065  0129E6  52E5               	movf	postdec1,f,c
 17066  0129E8  006F FF9C  F03F    	movff	indf1,btemp+21
 17067  0129EE  52E5               	movf	postdec1,f,c
 17068  0129F0  006F FF9C  F03E    	movff	indf1,btemp+20
 17069  0129F6  52E5               	movf	postdec1,f,c
 17070  0129F8  006F FF9C  F03D    	movff	indf1,btemp+19
 17071  0129FE  52E5               	movf	postdec1,f,c
 17072  012A00  006F FF9C  F03C    	movff	indf1,btemp+18
 17073  012A06  52E5               	movf	postdec1,f,c
 17074  012A08  006F FF9C  F03B    	movff	indf1,btemp+17
 17075  012A0E  52E5               	movf	postdec1,f,c
 17076  012A10  006F FF9C  F03A    	movff	indf1,btemp+16
 17077  012A16  0EF8               	movlw	248
 17078  012A18  26E1               	addwf	fsr1l,f,c
 17079  012A1A  0EFF               	movlw	255
 17080  012A1C  22E2               	addwfc	fsr1h,f,c
 17081                           
 17082                           ;stkvar	_days @ sp[(-57)+9]
 17083  012A1E  0ED0               	movlw	-48
 17084  012A20  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 17085  012A26  0ED1               	movlw	-47
 17086  012A28  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 17087  012A2E  0ED2               	movlw	-46
 17088  012A30  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 17089  012A36  0ED3               	movlw	-45
 17090  012A38  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 17091  012A3E  0ED4               	movlw	-44
 17092  012A40  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 17093  012A46  0ED5               	movlw	-43
 17094  012A48  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 17095  012A4E  0ED6               	movlw	-42
 17096  012A50  0060  F103  FFE3   	movff	btemp+22,plusw1
 17097  012A56  0ED7               	movlw	-41
 17098  012A58  0060  F107  FFE3   	movff	btemp+23,plusw1
 17099  012A5E  0E80               	movlw	128
 17100  012A60  6EE6               	movwf	postinc1,c
 17101  012A62  0E51               	movlw	81
 17102  012A64  6EE6               	movwf	postinc1,c
 17103  012A66  0E01               	movlw	1
 17104  012A68  6EE6               	movwf	postinc1,c
 17105  012A6A  0E00               	movlw	0
 17106  012A6C  6EE6               	movwf	postinc1,c
 17107  012A6E  0E00               	movlw	0
 17108  012A70  6EE6               	movwf	postinc1,c
 17109  012A72  0E00               	movlw	0
 17110  012A74  6EE6               	movwf	postinc1,c
 17111  012A76  0E00               	movlw	0
 17112  012A78  6EE6               	movwf	postinc1,c
 17113  012A7A  0E00               	movlw	0
 17114  012A7C  6EE6               	movwf	postinc1,c
 17115                           
 17116                           ;stkvar	_secs @ sp[(-65)+17]
 17117  012A7E  50E1               	movf	fsr1l,w,c
 17118  012A80  0FD0               	addlw	-48
 17119  012A82  6ED9               	movwf	fsr2l,c
 17120  012A84  50E2               	movf	fsr1h,w,c
 17121  012A86  6EDA               	movwf	fsr2h,c
 17122  012A88  0EFF               	movlw	255
 17123  012A8A  22DA               	addwfc	fsr2h,f,c
 17124  012A8C  006F FF7B FFE6     	movff	postinc2,postinc1
 17125  012A92  006F FF7B FFE6     	movff	postinc2,postinc1
 17126  012A98  006F FF7B FFE6     	movff	postinc2,postinc1
 17127  012A9E  006F FF7B FFE6     	movff	postinc2,postinc1
 17128  012AA4  006F FF7B FFE6     	movff	postinc2,postinc1
 17129  012AAA  006F FF7B FFE6     	movff	postinc2,postinc1
 17130  012AB0  006F FF7B FFE6     	movff	postinc2,postinc1
 17131  012AB6  006F FF7B FFE6     	movff	postinc2,postinc1
 17132  012ABC  EC50  F0E4         	call	___aomod	;wreg free
 17133  012AC0  52E5               	movf	postdec1,f,c
 17134  012AC2  006F FF9C  F041    	movff	indf1,btemp+23
 17135  012AC8  52E5               	movf	postdec1,f,c
 17136  012ACA  006F FF9C  F040    	movff	indf1,btemp+22
 17137  012AD0  52E5               	movf	postdec1,f,c
 17138  012AD2  006F FF9C  F03F    	movff	indf1,btemp+21
 17139  012AD8  52E5               	movf	postdec1,f,c
 17140  012ADA  006F FF9C  F03E    	movff	indf1,btemp+20
 17141  012AE0  52E5               	movf	postdec1,f,c
 17142  012AE2  006F FF9C  F03D    	movff	indf1,btemp+19
 17143  012AE8  52E5               	movf	postdec1,f,c
 17144  012AEA  006F FF9C  F03C    	movff	indf1,btemp+18
 17145  012AF0  52E5               	movf	postdec1,f,c
 17146  012AF2  006F FF9C  F03B    	movff	indf1,btemp+17
 17147  012AF8  52E5               	movf	postdec1,f,c
 17148  012AFA  006F FF9C  F03A    	movff	indf1,btemp+16
 17149  012B00  0EF8               	movlw	248
 17150  012B02  26E1               	addwf	fsr1l,f,c
 17151  012B04  0EFF               	movlw	255
 17152  012B06  22E2               	addwfc	fsr1h,f,c
 17153  012B08  0060  F0E8  F032   	movff	btemp+16,btemp+8
 17154  012B0E  0060  F0EC  F033   	movff	btemp+17,btemp+9
 17155  012B14  0060  F0F0  F034   	movff	btemp+18,btemp+10
 17156  012B1A  0060  F0F4  F035   	movff	btemp+19,btemp+11
 17157                           
 17158                           ;stkvar	_remsecs @ sp[(-57)+41]
 17159  012B20  0EF0               	movlw	-16
 17160  012B22  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 17161  012B28  0EF1               	movlw	-15
 17162  012B2A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 17163  012B30  0EF2               	movlw	-14
 17164  012B32  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17165  012B38  0EF3               	movlw	-13
 17166  012B3A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17167                           
 17168                           ;stkvar	_remsecs @ sp[(-57)+41]
 17169  012B40  0EF3               	movlw	-13
 17170  012B42  AEE3               	btfss	plusw1,7,c
 17171  012B44  D01F               	goto	l16678
 17172                           
 17173                           ;stkvar	_remsecs @ sp[(-57)+41]
 17174  012B46  50E1               	movf	fsr1l,w,c
 17175  012B48  0FF0               	addlw	-16
 17176  012B4A  6ED9               	movwf	fsr2l,c
 17177  012B4C  50E2               	movf	fsr1h,w,c
 17178  012B4E  6EDA               	movwf	fsr2h,c
 17179  012B50  0EFF               	movlw	255
 17180  012B52  22DA               	addwfc	fsr2h,f,c
 17181  012B54  0E80               	movlw	128
 17182  012B56  26DE               	addwf	postinc2,f,c
 17183  012B58  0E51               	movlw	81
 17184  012B5A  22DE               	addwfc	postinc2,f,c
 17185  012B5C  0E01               	movlw	1
 17186  012B5E  22DE               	addwfc	postinc2,f,c
 17187  012B60  0E00               	movlw	0
 17188  012B62  22DE               	addwfc	postinc2,f,c
 17189                           
 17190                           ;stkvar	_days @ sp[(-57)+9]
 17191  012B64  50E1               	movf	fsr1l,w,c
 17192  012B66  0FD0               	addlw	-48
 17193  012B68  6ED9               	movwf	fsr2l,c
 17194  012B6A  50E2               	movf	fsr1h,w,c
 17195  012B6C  6EDA               	movwf	fsr2h,c
 17196  012B6E  0EFF               	movlw	255
 17197  012B70  22DA               	addwfc	fsr2h,f,c
 17198  012B72  06DE               	decf	postinc2,f,c
 17199  012B74  0E00               	movlw	0
 17200  012B76  5ADE               	subwfb	postinc2,f,c
 17201  012B78  5ADE               	subwfb	postinc2,f,c
 17202  012B7A  5ADE               	subwfb	postinc2,f,c
 17203  012B7C  5ADE               	subwfb	postinc2,f,c
 17204  012B7E  5ADE               	subwfb	postinc2,f,c
 17205  012B80  5ADE               	subwfb	postinc2,f,c
 17206  012B82  5ADE               	subwfb	postinc2,f,c
 17207  012B84                     l16678:
 17208  012B84  0E07               	movlw	7
 17209  012B86  6EE6               	movwf	postinc1,c
 17210  012B88  0E00               	movlw	0
 17211  012B8A  6EE6               	movwf	postinc1,c
 17212  012B8C  0E00               	movlw	0
 17213  012B8E  6EE6               	movwf	postinc1,c
 17214  012B90  0E00               	movlw	0
 17215  012B92  6EE6               	movwf	postinc1,c
 17216  012B94  0E00               	movlw	0
 17217  012B96  6EE6               	movwf	postinc1,c
 17218  012B98  0E00               	movlw	0
 17219  012B9A  6EE6               	movwf	postinc1,c
 17220  012B9C  0E00               	movlw	0
 17221  012B9E  6EE6               	movwf	postinc1,c
 17222  012BA0  0E00               	movlw	0
 17223  012BA2  6EE6               	movwf	postinc1,c
 17224                           
 17225                           ;stkvar	_days @ sp[(-65)+9]
 17226  012BA4  0EC8               	movlw	-56
 17227  012BA6  50E3               	movf	plusw1,w,c
 17228  012BA8  0F03               	addlw	3
 17229  012BAA  6E3A               	movwf	(btemp+16)^0,c
 17230  012BAC  0EC9               	movlw	-55
 17231  012BAE  006F FF8C  F03B    	movff	plusw1,btemp+17
 17232  012BB4  0E00               	movlw	0
 17233  012BB6  223B               	addwfc	(btemp+17)^0,f,c
 17234  012BB8  0ECA               	movlw	-54
 17235  012BBA  006F FF8C  F03C    	movff	plusw1,btemp+18
 17236  012BC0  0E00               	movlw	0
 17237  012BC2  223C               	addwfc	(btemp+18)^0,f,c
 17238  012BC4  0ECB               	movlw	-53
 17239  012BC6  006F FF8C  F03D    	movff	plusw1,btemp+19
 17240  012BCC  0E00               	movlw	0
 17241  012BCE  223D               	addwfc	(btemp+19)^0,f,c
 17242  012BD0  0ECC               	movlw	-52
 17243  012BD2  006F FF8C  F03E    	movff	plusw1,btemp+20
 17244  012BD8  0E00               	movlw	0
 17245  012BDA  223E               	addwfc	(btemp+20)^0,f,c
 17246  012BDC  0ECD               	movlw	-51
 17247  012BDE  006F FF8C  F03F    	movff	plusw1,btemp+21
 17248  012BE4  0E00               	movlw	0
 17249  012BE6  223F               	addwfc	(btemp+21)^0,f,c
 17250  012BE8  0ECE               	movlw	-50
 17251  012BEA  006F FF8C  F040    	movff	plusw1,btemp+22
 17252  012BF0  0E00               	movlw	0
 17253  012BF2  2240               	addwfc	(btemp+22)^0,f,c
 17254  012BF4  0ECF               	movlw	-49
 17255  012BF6  006F FF8C  F041    	movff	plusw1,btemp+23
 17256  012BFC  0E00               	movlw	0
 17257  012BFE  2241               	addwfc	(btemp+23)^0,f,c
 17258  012C00  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 17259  012C06  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 17260  012C0C  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 17261  012C12  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 17262  012C18  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 17263  012C1E  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 17264  012C24  0060  F103  FFE6   	movff	btemp+22,postinc1
 17265  012C2A  0060  F107  FFE6   	movff	btemp+23,postinc1
 17266  012C30  EC50  F0E4         	call	___aomod	;wreg free
 17267  012C34  52E5               	movf	postdec1,f,c
 17268  012C36  006F FF9C  F041    	movff	indf1,btemp+23
 17269  012C3C  52E5               	movf	postdec1,f,c
 17270  012C3E  006F FF9C  F040    	movff	indf1,btemp+22
 17271  012C44  52E5               	movf	postdec1,f,c
 17272  012C46  006F FF9C  F03F    	movff	indf1,btemp+21
 17273  012C4C  52E5               	movf	postdec1,f,c
 17274  012C4E  006F FF9C  F03E    	movff	indf1,btemp+20
 17275  012C54  52E5               	movf	postdec1,f,c
 17276  012C56  006F FF9C  F03D    	movff	indf1,btemp+19
 17277  012C5C  52E5               	movf	postdec1,f,c
 17278  012C5E  006F FF9C  F03C    	movff	indf1,btemp+18
 17279  012C64  52E5               	movf	postdec1,f,c
 17280  012C66  006F FF9C  F03B    	movff	indf1,btemp+17
 17281  012C6C  52E5               	movf	postdec1,f,c
 17282  012C6E  006F FF9C  F03A    	movff	indf1,btemp+16
 17283  012C74  0EF8               	movlw	248
 17284  012C76  26E1               	addwf	fsr1l,f,c
 17285  012C78  0EFF               	movlw	255
 17286  012C7A  22E2               	addwfc	fsr1h,f,c
 17287  012C7C  0060  F0E8  F034   	movff	btemp+16,btemp+10
 17288  012C82  0060  F0EC  F035   	movff	btemp+17,btemp+11
 17289                           
 17290                           ;stkvar	_wday @ sp[(-57)+55]
 17291  012C88  0EFE               	movlw	-2
 17292  012C8A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17293  012C90  0EFF               	movlw	-1
 17294  012C92  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17295                           
 17296                           ;stkvar	_wday @ sp[(-57)+55]
 17297  012C98  0EFF               	movlw	-1
 17298  012C9A  AEE3               	btfss	plusw1,7,c
 17299  012C9C  D011               	goto	l16684
 17300                           
 17301                           ;stkvar	_wday @ sp[(-57)+55]
 17302  012C9E  0EFE               	movlw	-2
 17303  012CA0  50E3               	movf	plusw1,w,c
 17304  012CA2  0F07               	addlw	7
 17305  012CA4  6E2A               	movwf	btemp^0,c
 17306  012CA6  0EFE               	movlw	-2
 17307  012CA8  0060  F0AB  FFE3   	movff	btemp,plusw1
 17308  012CAE  6A2A               	clrf	btemp^0,c
 17309  012CB0  0EFF               	movlw	-1
 17310  012CB2  50E3               	movf	plusw1,w,c
 17311  012CB4  202A               	addwfc	btemp^0,w,c
 17312  012CB6  6E2A               	movwf	btemp^0,c
 17313  012CB8  0EFF               	movlw	-1
 17314  012CBA  0060  F0AB  FFE3   	movff	btemp,plusw1
 17315  012CC0                     l16684:
 17316  012CC0  0EB1               	movlw	177
 17317  012CC2  6EE6               	movwf	postinc1,c
 17318  012CC4  0E3A               	movlw	58
 17319  012CC6  6EE6               	movwf	postinc1,c
 17320  012CC8  0E02               	movlw	2
 17321  012CCA  6EE6               	movwf	postinc1,c
 17322  012CCC  0E00               	movlw	0
 17323  012CCE  6EE6               	movwf	postinc1,c
 17324  012CD0  0E00               	movlw	0
 17325  012CD2  6EE6               	movwf	postinc1,c
 17326  012CD4  0E00               	movlw	0
 17327  012CD6  6EE6               	movwf	postinc1,c
 17328  012CD8  0E00               	movlw	0
 17329  012CDA  6EE6               	movwf	postinc1,c
 17330  012CDC  0E00               	movlw	0
 17331  012CDE  6EE6               	movwf	postinc1,c
 17332                           
 17333                           ;stkvar	_days @ sp[(-65)+9]
 17334  012CE0  50E1               	movf	fsr1l,w,c
 17335  012CE2  0FC8               	addlw	-56
 17336  012CE4  6ED9               	movwf	fsr2l,c
 17337  012CE6  50E2               	movf	fsr1h,w,c
 17338  012CE8  6EDA               	movwf	fsr2h,c
 17339  012CEA  0EFF               	movlw	255
 17340  012CEC  22DA               	addwfc	fsr2h,f,c
 17341  012CEE  006F FF7B FFE6     	movff	postinc2,postinc1
 17342  012CF4  006F FF7B FFE6     	movff	postinc2,postinc1
 17343  012CFA  006F FF7B FFE6     	movff	postinc2,postinc1
 17344  012D00  006F FF7B FFE6     	movff	postinc2,postinc1
 17345  012D06  006F FF7B FFE6     	movff	postinc2,postinc1
 17346  012D0C  006F FF7B FFE6     	movff	postinc2,postinc1
 17347  012D12  006F FF7B FFE6     	movff	postinc2,postinc1
 17348  012D18  006F FF7B FFE6     	movff	postinc2,postinc1
 17349  012D1E  EC64  F0DE         	call	___aodiv	;wreg free
 17350  012D22  52E5               	movf	postdec1,f,c
 17351  012D24  006F FF9C  F041    	movff	indf1,btemp+23
 17352  012D2A  52E5               	movf	postdec1,f,c
 17353  012D2C  006F FF9C  F040    	movff	indf1,btemp+22
 17354  012D32  52E5               	movf	postdec1,f,c
 17355  012D34  006F FF9C  F03F    	movff	indf1,btemp+21
 17356  012D3A  52E5               	movf	postdec1,f,c
 17357  012D3C  006F FF9C  F03E    	movff	indf1,btemp+20
 17358  012D42  52E5               	movf	postdec1,f,c
 17359  012D44  006F FF9C  F03D    	movff	indf1,btemp+19
 17360  012D4A  52E5               	movf	postdec1,f,c
 17361  012D4C  006F FF9C  F03C    	movff	indf1,btemp+18
 17362  012D52  52E5               	movf	postdec1,f,c
 17363  012D54  006F FF9C  F03B    	movff	indf1,btemp+17
 17364  012D5A  52E5               	movf	postdec1,f,c
 17365  012D5C  006F FF9C  F03A    	movff	indf1,btemp+16
 17366  012D62  0EF8               	movlw	248
 17367  012D64  26E1               	addwf	fsr1l,f,c
 17368  012D66  0EFF               	movlw	255
 17369  012D68  22E2               	addwfc	fsr1h,f,c
 17370  012D6A  0060  F0E8  F032   	movff	btemp+16,btemp+8
 17371  012D70  0060  F0EC  F033   	movff	btemp+17,btemp+9
 17372  012D76  0060  F0F0  F034   	movff	btemp+18,btemp+10
 17373  012D7C  0060  F0F4  F035   	movff	btemp+19,btemp+11
 17374                           
 17375                           ;stkvar	_qc_cycles @ sp[(-57)+45]
 17376  012D82  0EF4               	movlw	-12
 17377  012D84  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 17378  012D8A  0EF5               	movlw	-11
 17379  012D8C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 17380  012D92  0EF6               	movlw	-10
 17381  012D94  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17382  012D9A  0EF7               	movlw	-9
 17383  012D9C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17384  012DA2  0EB1               	movlw	177
 17385  012DA4  6EE6               	movwf	postinc1,c
 17386  012DA6  0E3A               	movlw	58
 17387  012DA8  6EE6               	movwf	postinc1,c
 17388  012DAA  0E02               	movlw	2
 17389  012DAC  6EE6               	movwf	postinc1,c
 17390  012DAE  0E00               	movlw	0
 17391  012DB0  6EE6               	movwf	postinc1,c
 17392  012DB2  0E00               	movlw	0
 17393  012DB4  6EE6               	movwf	postinc1,c
 17394  012DB6  0E00               	movlw	0
 17395  012DB8  6EE6               	movwf	postinc1,c
 17396  012DBA  0E00               	movlw	0
 17397  012DBC  6EE6               	movwf	postinc1,c
 17398  012DBE  0E00               	movlw	0
 17399  012DC0  6EE6               	movwf	postinc1,c
 17400                           
 17401                           ;stkvar	_days @ sp[(-65)+9]
 17402  012DC2  50E1               	movf	fsr1l,w,c
 17403  012DC4  0FC8               	addlw	-56
 17404  012DC6  6ED9               	movwf	fsr2l,c
 17405  012DC8  50E2               	movf	fsr1h,w,c
 17406  012DCA  6EDA               	movwf	fsr2h,c
 17407  012DCC  0EFF               	movlw	255
 17408  012DCE  22DA               	addwfc	fsr2h,f,c
 17409  012DD0  006F FF7B FFE6     	movff	postinc2,postinc1
 17410  012DD6  006F FF7B FFE6     	movff	postinc2,postinc1
 17411  012DDC  006F FF7B FFE6     	movff	postinc2,postinc1
 17412  012DE2  006F FF7B FFE6     	movff	postinc2,postinc1
 17413  012DE8  006F FF7B FFE6     	movff	postinc2,postinc1
 17414  012DEE  006F FF7B FFE6     	movff	postinc2,postinc1
 17415  012DF4  006F FF7B FFE6     	movff	postinc2,postinc1
 17416  012DFA  006F FF7B FFE6     	movff	postinc2,postinc1
 17417  012E00  EC50  F0E4         	call	___aomod	;wreg free
 17418  012E04  52E5               	movf	postdec1,f,c
 17419  012E06  006F FF9C  F041    	movff	indf1,btemp+23
 17420  012E0C  52E5               	movf	postdec1,f,c
 17421  012E0E  006F FF9C  F040    	movff	indf1,btemp+22
 17422  012E14  52E5               	movf	postdec1,f,c
 17423  012E16  006F FF9C  F03F    	movff	indf1,btemp+21
 17424  012E1C  52E5               	movf	postdec1,f,c
 17425  012E1E  006F FF9C  F03E    	movff	indf1,btemp+20
 17426  012E24  52E5               	movf	postdec1,f,c
 17427  012E26  006F FF9C  F03D    	movff	indf1,btemp+19
 17428  012E2C  52E5               	movf	postdec1,f,c
 17429  012E2E  006F FF9C  F03C    	movff	indf1,btemp+18
 17430  012E34  52E5               	movf	postdec1,f,c
 17431  012E36  006F FF9C  F03B    	movff	indf1,btemp+17
 17432  012E3C  52E5               	movf	postdec1,f,c
 17433  012E3E  006F FF9C  F03A    	movff	indf1,btemp+16
 17434  012E44  0EF8               	movlw	248
 17435  012E46  26E1               	addwf	fsr1l,f,c
 17436  012E48  0EFF               	movlw	255
 17437  012E4A  22E2               	addwfc	fsr1h,f,c
 17438  012E4C  0060  F0E8  F032   	movff	btemp+16,btemp+8
 17439  012E52  0060  F0EC  F033   	movff	btemp+17,btemp+9
 17440  012E58  0060  F0F0  F034   	movff	btemp+18,btemp+10
 17441  012E5E  0060  F0F4  F035   	movff	btemp+19,btemp+11
 17442                           
 17443                           ;stkvar	_remdays @ sp[(-57)+25]
 17444  012E64  0EE0               	movlw	-32
 17445  012E66  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 17446  012E6C  0EE1               	movlw	-31
 17447  012E6E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 17448  012E74  0EE2               	movlw	-30
 17449  012E76  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17450  012E7C  0EE3               	movlw	-29
 17451  012E7E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17452                           
 17453                           ;stkvar	_remdays @ sp[(-57)+25]
 17454  012E84  0EE3               	movlw	-29
 17455  012E86  AEE3               	btfss	plusw1,7,c
 17456  012E88  D01B               	goto	l16692
 17457                           
 17458                           ;stkvar	_remdays @ sp[(-57)+25]
 17459  012E8A  50E1               	movf	fsr1l,w,c
 17460  012E8C  0FE0               	addlw	-32
 17461  012E8E  6ED9               	movwf	fsr2l,c
 17462  012E90  50E2               	movf	fsr1h,w,c
 17463  012E92  6EDA               	movwf	fsr2h,c
 17464  012E94  0EFF               	movlw	255
 17465  012E96  22DA               	addwfc	fsr2h,f,c
 17466  012E98  0EB1               	movlw	177
 17467  012E9A  26DE               	addwf	postinc2,f,c
 17468  012E9C  0E3A               	movlw	58
 17469  012E9E  22DE               	addwfc	postinc2,f,c
 17470  012EA0  0E02               	movlw	2
 17471  012EA2  22DE               	addwfc	postinc2,f,c
 17472  012EA4  0E00               	movlw	0
 17473  012EA6  22DE               	addwfc	postinc2,f,c
 17474                           
 17475                           ;stkvar	_qc_cycles @ sp[(-57)+45]
 17476  012EA8  50E1               	movf	fsr1l,w,c
 17477  012EAA  0FF4               	addlw	-12
 17478  012EAC  6ED9               	movwf	fsr2l,c
 17479  012EAE  50E2               	movf	fsr1h,w,c
 17480  012EB0  6EDA               	movwf	fsr2h,c
 17481  012EB2  0EFF               	movlw	255
 17482  012EB4  22DA               	addwfc	fsr2h,f,c
 17483  012EB6  06DE               	decf	postinc2,f,c
 17484  012EB8  0E00               	movlw	0
 17485  012EBA  5ADE               	subwfb	postinc2,f,c
 17486  012EBC  5ADE               	subwfb	postinc2,f,c
 17487  012EBE  5ADE               	subwfb	postinc2,f,c
 17488  012EC0                     l16692:
 17489  012EC0  0EAC               	movlw	172
 17490  012EC2  6EE6               	movwf	postinc1,c
 17491  012EC4  0E8E               	movlw	142
 17492  012EC6  6EE6               	movwf	postinc1,c
 17493  012EC8  0E00               	movlw	0
 17494  012ECA  6EE6               	movwf	postinc1,c
 17495  012ECC  0E00               	movlw	0
 17496  012ECE  6EE6               	movwf	postinc1,c
 17497                           
 17498                           ;stkvar	_remdays @ sp[(-61)+25]
 17499  012ED0  0EDC               	movlw	-36
 17500  012ED2  006F FF8F FFE6     	movff	plusw1,postinc1
 17501  012ED8  006F FF8F FFE6     	movff	plusw1,postinc1
 17502  012EDE  006F FF8F FFE6     	movff	plusw1,postinc1
 17503  012EE4  006F FF8F FFE6     	movff	plusw1,postinc1
 17504  012EEA  EC10  F0EE         	call	___aldiv	;wreg free
 17505                           
 17506                           ;stkvar	_c_cycles @ sp[(-57)+33]
 17507  012EEE  0EE8               	movlw	-24
 17508  012EF0  0060  F0AB  FFE3   	movff	btemp,plusw1
 17509  012EF6  0EE9               	movlw	-23
 17510  012EF8  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 17511  012EFE  0EEA               	movlw	-22
 17512  012F00  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 17513  012F06  0EEB               	movlw	-21
 17514  012F08  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 17515                           
 17516                           ;stkvar	_c_cycles @ sp[(-57)+33]
 17517  012F0E  0EE8               	movlw	-24
 17518  012F10  006F FF8C  F02A    	movff	plusw1,btemp
 17519  012F16  0E04               	movlw	4
 17520  012F18  182A               	xorwf	btemp^0,w,c
 17521  012F1A  E116               	bnz	l16698
 17522  012F1C  0EE9               	movlw	-23
 17523  012F1E  50E3               	movf	plusw1,w,c
 17524  012F20  E113               	bnz	l16698
 17525  012F22  0EEA               	movlw	-22
 17526  012F24  50E3               	movf	plusw1,w,c
 17527  012F26  E110               	bnz	l16698
 17528  012F28  0EEB               	movlw	-21
 17529  012F2A  50E3               	movf	plusw1,w,c
 17530  012F2C  A4D8               	btfss	status,2,c
 17531  012F2E  D00C               	goto	l16698
 17532                           
 17533                           ;stkvar	_c_cycles @ sp[(-57)+33]
 17534  012F30  50E1               	movf	fsr1l,w,c
 17535  012F32  0FE8               	addlw	-24
 17536  012F34  6ED9               	movwf	fsr2l,c
 17537  012F36  50E2               	movf	fsr1h,w,c
 17538  012F38  6EDA               	movwf	fsr2h,c
 17539  012F3A  0EFF               	movlw	255
 17540  012F3C  22DA               	addwfc	fsr2h,f,c
 17541  012F3E  06DE               	decf	postinc2,f,c
 17542  012F40  0E00               	movlw	0
 17543  012F42  5ADE               	subwfb	postinc2,f,c
 17544  012F44  5ADE               	subwfb	postinc2,f,c
 17545  012F46  5ADE               	subwfb	postinc2,f,c
 17546  012F48                     l16698:
 17547  012F48  0EAC               	movlw	172
 17548  012F4A  6EE6               	movwf	postinc1,c
 17549  012F4C  0E8E               	movlw	142
 17550  012F4E  6EE6               	movwf	postinc1,c
 17551  012F50  0E00               	movlw	0
 17552  012F52  6EE6               	movwf	postinc1,c
 17553  012F54  0E00               	movlw	0
 17554  012F56  6EE6               	movwf	postinc1,c
 17555                           
 17556                           ;stkvar	_c_cycles @ sp[(-61)+33]
 17557  012F58  0EE4               	movlw	-28
 17558  012F5A  006F FF8F FFE6     	movff	plusw1,postinc1
 17559  012F60  006F FF8F FFE6     	movff	plusw1,postinc1
 17560  012F66  006F FF8F FFE6     	movff	plusw1,postinc1
 17561  012F6C  006F FF8F FFE6     	movff	plusw1,postinc1
 17562  012F72  EC54  F0FF         	call	___lmul	;wreg free
 17563                           
 17564                           ;stkvar	_remdays @ sp[(-57)+25]
 17565  012F76  50E1               	movf	fsr1l,w,c
 17566  012F78  0FE0               	addlw	-32
 17567  012F7A  6ED9               	movwf	fsr2l,c
 17568  012F7C  50E2               	movf	fsr1h,w,c
 17569  012F7E  6EDA               	movwf	fsr2h,c
 17570  012F80  0EFF               	movlw	255
 17571  012F82  22DA               	addwfc	fsr2h,f,c
 17572  012F84  502A               	movf	btemp^0,w,c
 17573  012F86  5EDE               	subwf	postinc2,f,c
 17574  012F88  502B               	movf	(btemp+1)^0,w,c
 17575  012F8A  5ADE               	subwfb	postinc2,f,c
 17576  012F8C  502C               	movf	(btemp+2)^0,w,c
 17577  012F8E  5ADE               	subwfb	postinc2,f,c
 17578  012F90  502D               	movf	(btemp+3)^0,w,c
 17579  012F92  5ADE               	subwfb	postinc2,f,c
 17580  012F94  0EB5               	movlw	181
 17581  012F96  6EE6               	movwf	postinc1,c
 17582  012F98  0E05               	movlw	5
 17583  012F9A  6EE6               	movwf	postinc1,c
 17584  012F9C  0E00               	movlw	0
 17585  012F9E  6EE6               	movwf	postinc1,c
 17586  012FA0  0E00               	movlw	0
 17587  012FA2  6EE6               	movwf	postinc1,c
 17588                           
 17589                           ;stkvar	_remdays @ sp[(-61)+25]
 17590  012FA4  0EDC               	movlw	-36
 17591  012FA6  006F FF8F FFE6     	movff	plusw1,postinc1
 17592  012FAC  006F FF8F FFE6     	movff	plusw1,postinc1
 17593  012FB2  006F FF8F FFE6     	movff	plusw1,postinc1
 17594  012FB8  006F FF8F FFE6     	movff	plusw1,postinc1
 17595  012FBE  EC10  F0EE         	call	___aldiv	;wreg free
 17596                           
 17597                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17598  012FC2  0EE4               	movlw	-28
 17599  012FC4  0060  F0AB  FFE3   	movff	btemp,plusw1
 17600  012FCA  0EE5               	movlw	-27
 17601  012FCC  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 17602  012FD2  0EE6               	movlw	-26
 17603  012FD4  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 17604  012FDA  0EE7               	movlw	-25
 17605  012FDC  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 17606                           
 17607                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17608  012FE2  0EE4               	movlw	-28
 17609  012FE4  006F FF8C  F02A    	movff	plusw1,btemp
 17610  012FEA  0E19               	movlw	25
 17611  012FEC  182A               	xorwf	btemp^0,w,c
 17612  012FEE  E116               	bnz	l16706
 17613  012FF0  0EE5               	movlw	-27
 17614  012FF2  50E3               	movf	plusw1,w,c
 17615  012FF4  E113               	bnz	l16706
 17616  012FF6  0EE6               	movlw	-26
 17617  012FF8  50E3               	movf	plusw1,w,c
 17618  012FFA  E110               	bnz	l16706
 17619  012FFC  0EE7               	movlw	-25
 17620  012FFE  50E3               	movf	plusw1,w,c
 17621  013000  A4D8               	btfss	status,2,c
 17622  013002  D00C               	goto	l16706
 17623                           
 17624                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17625  013004  50E1               	movf	fsr1l,w,c
 17626  013006  0FE4               	addlw	-28
 17627  013008  6ED9               	movwf	fsr2l,c
 17628  01300A  50E2               	movf	fsr1h,w,c
 17629  01300C  6EDA               	movwf	fsr2h,c
 17630  01300E  0EFF               	movlw	255
 17631  013010  22DA               	addwfc	fsr2h,f,c
 17632  013012  06DE               	decf	postinc2,f,c
 17633  013014  0E00               	movlw	0
 17634  013016  5ADE               	subwfb	postinc2,f,c
 17635  013018  5ADE               	subwfb	postinc2,f,c
 17636  01301A  5ADE               	subwfb	postinc2,f,c
 17637  01301C                     l16706:
 17638  01301C  0EB5               	movlw	181
 17639  01301E  6EE6               	movwf	postinc1,c
 17640  013020  0E05               	movlw	5
 17641  013022  6EE6               	movwf	postinc1,c
 17642  013024  0E00               	movlw	0
 17643  013026  6EE6               	movwf	postinc1,c
 17644  013028  0E00               	movlw	0
 17645  01302A  6EE6               	movwf	postinc1,c
 17646                           
 17647                           ;stkvar	_q_cycles @ sp[(-61)+29]
 17648  01302C  0EE0               	movlw	-32
 17649  01302E  006F FF8F FFE6     	movff	plusw1,postinc1
 17650  013034  006F FF8F FFE6     	movff	plusw1,postinc1
 17651  01303A  006F FF8F FFE6     	movff	plusw1,postinc1
 17652  013040  006F FF8F FFE6     	movff	plusw1,postinc1
 17653  013046  EC54  F0FF         	call	___lmul	;wreg free
 17654                           
 17655                           ;stkvar	_remdays @ sp[(-57)+25]
 17656  01304A  50E1               	movf	fsr1l,w,c
 17657  01304C  0FE0               	addlw	-32
 17658  01304E  6ED9               	movwf	fsr2l,c
 17659  013050  50E2               	movf	fsr1h,w,c
 17660  013052  6EDA               	movwf	fsr2h,c
 17661  013054  0EFF               	movlw	255
 17662  013056  22DA               	addwfc	fsr2h,f,c
 17663  013058  502A               	movf	btemp^0,w,c
 17664  01305A  5EDE               	subwf	postinc2,f,c
 17665  01305C  502B               	movf	(btemp+1)^0,w,c
 17666  01305E  5ADE               	subwfb	postinc2,f,c
 17667  013060  502C               	movf	(btemp+2)^0,w,c
 17668  013062  5ADE               	subwfb	postinc2,f,c
 17669  013064  502D               	movf	(btemp+3)^0,w,c
 17670  013066  5ADE               	subwfb	postinc2,f,c
 17671  013068  0E6D               	movlw	109
 17672  01306A  6EE6               	movwf	postinc1,c
 17673  01306C  0E01               	movlw	1
 17674  01306E  6EE6               	movwf	postinc1,c
 17675  013070  0E00               	movlw	0
 17676  013072  6EE6               	movwf	postinc1,c
 17677  013074  0E00               	movlw	0
 17678  013076  6EE6               	movwf	postinc1,c
 17679                           
 17680                           ;stkvar	_remdays @ sp[(-61)+25]
 17681  013078  0EDC               	movlw	-36
 17682  01307A  006F FF8F FFE6     	movff	plusw1,postinc1
 17683  013080  006F FF8F FFE6     	movff	plusw1,postinc1
 17684  013086  006F FF8F FFE6     	movff	plusw1,postinc1
 17685  01308C  006F FF8F FFE6     	movff	plusw1,postinc1
 17686  013092  EC10  F0EE         	call	___aldiv	;wreg free
 17687                           
 17688                           ;stkvar	_remyears @ sp[(-57)+37]
 17689  013096  0EEC               	movlw	-20
 17690  013098  0060  F0AB  FFE3   	movff	btemp,plusw1
 17691  01309E  0EED               	movlw	-19
 17692  0130A0  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 17693  0130A6  0EEE               	movlw	-18
 17694  0130A8  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 17695  0130AE  0EEF               	movlw	-17
 17696  0130B0  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 17697                           
 17698                           ;stkvar	_remyears @ sp[(-57)+37]
 17699  0130B6  0EEC               	movlw	-20
 17700  0130B8  006F FF8C  F02A    	movff	plusw1,btemp
 17701  0130BE  0E04               	movlw	4
 17702  0130C0  182A               	xorwf	btemp^0,w,c
 17703  0130C2  E116               	bnz	l16714
 17704  0130C4  0EED               	movlw	-19
 17705  0130C6  50E3               	movf	plusw1,w,c
 17706  0130C8  E113               	bnz	l16714
 17707  0130CA  0EEE               	movlw	-18
 17708  0130CC  50E3               	movf	plusw1,w,c
 17709  0130CE  E110               	bnz	l16714
 17710  0130D0  0EEF               	movlw	-17
 17711  0130D2  50E3               	movf	plusw1,w,c
 17712  0130D4  A4D8               	btfss	status,2,c
 17713  0130D6  D00C               	goto	l16714
 17714                           
 17715                           ;stkvar	_remyears @ sp[(-57)+37]
 17716  0130D8  50E1               	movf	fsr1l,w,c
 17717  0130DA  0FEC               	addlw	-20
 17718  0130DC  6ED9               	movwf	fsr2l,c
 17719  0130DE  50E2               	movf	fsr1h,w,c
 17720  0130E0  6EDA               	movwf	fsr2h,c
 17721  0130E2  0EFF               	movlw	255
 17722  0130E4  22DA               	addwfc	fsr2h,f,c
 17723  0130E6  06DE               	decf	postinc2,f,c
 17724  0130E8  0E00               	movlw	0
 17725  0130EA  5ADE               	subwfb	postinc2,f,c
 17726  0130EC  5ADE               	subwfb	postinc2,f,c
 17727  0130EE  5ADE               	subwfb	postinc2,f,c
 17728  0130F0                     l16714:
 17729  0130F0  0E6D               	movlw	109
 17730  0130F2  6EE6               	movwf	postinc1,c
 17731  0130F4  0E01               	movlw	1
 17732  0130F6  6EE6               	movwf	postinc1,c
 17733  0130F8  0E00               	movlw	0
 17734  0130FA  6EE6               	movwf	postinc1,c
 17735  0130FC  0E00               	movlw	0
 17736  0130FE  6EE6               	movwf	postinc1,c
 17737                           
 17738                           ;stkvar	_remyears @ sp[(-61)+37]
 17739  013100  0EE8               	movlw	-24
 17740  013102  006F FF8F FFE6     	movff	plusw1,postinc1
 17741  013108  006F FF8F FFE6     	movff	plusw1,postinc1
 17742  01310E  006F FF8F FFE6     	movff	plusw1,postinc1
 17743  013114  006F FF8F FFE6     	movff	plusw1,postinc1
 17744  01311A  EC54  F0FF         	call	___lmul	;wreg free
 17745                           
 17746                           ;stkvar	_remdays @ sp[(-57)+25]
 17747  01311E  50E1               	movf	fsr1l,w,c
 17748  013120  0FE0               	addlw	-32
 17749  013122  6ED9               	movwf	fsr2l,c
 17750  013124  50E2               	movf	fsr1h,w,c
 17751  013126  6EDA               	movwf	fsr2h,c
 17752  013128  0EFF               	movlw	255
 17753  01312A  22DA               	addwfc	fsr2h,f,c
 17754  01312C  502A               	movf	btemp^0,w,c
 17755  01312E  5EDE               	subwf	postinc2,f,c
 17756  013130  502B               	movf	(btemp+1)^0,w,c
 17757  013132  5ADE               	subwfb	postinc2,f,c
 17758  013134  502C               	movf	(btemp+2)^0,w,c
 17759  013136  5ADE               	subwfb	postinc2,f,c
 17760  013138  502D               	movf	(btemp+3)^0,w,c
 17761  01313A  5ADE               	subwfb	postinc2,f,c
 17762                           
 17763                           ;stkvar	___secs_to_tm$7621 @ sp[(-57)+0]
 17764  01313C  0EC7               	movlw	-57
 17765  01313E  6AE3               	clrf	plusw1,c
 17766                           
 17767                           ;stkvar	_remyears @ sp[(-57)+37]
 17768  013140  0EEC               	movlw	-20
 17769  013142  50E3               	movf	plusw1,w,c
 17770  013144  E127               	bnz	l16726
 17771  013146  0EED               	movlw	-19
 17772  013148  50E3               	movf	plusw1,w,c
 17773  01314A  E124               	bnz	l16726
 17774  01314C  0EEE               	movlw	-18
 17775  01314E  50E3               	movf	plusw1,w,c
 17776  013150  E121               	bnz	l16726
 17777  013152  0EEF               	movlw	-17
 17778  013154  50E3               	movf	plusw1,w,c
 17779  013156  A4D8               	btfss	status,2,c
 17780  013158  D01D               	goto	l16726
 17781                           
 17782                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17783  01315A  0EE4               	movlw	-28
 17784  01315C  50E3               	movf	plusw1,w,c
 17785  01315E  E117               	bnz	l16724
 17786  013160  0EE5               	movlw	-27
 17787  013162  50E3               	movf	plusw1,w,c
 17788  013164  E114               	bnz	l16724
 17789  013166  0EE6               	movlw	-26
 17790  013168  50E3               	movf	plusw1,w,c
 17791  01316A  E111               	bnz	l16724
 17792  01316C  0EE7               	movlw	-25
 17793  01316E  50E3               	movf	plusw1,w,c
 17794  013170  A4D8               	btfss	status,2,c
 17795  013172  D00D               	goto	u16340
 17796                           
 17797                           ;stkvar	_c_cycles @ sp[(-57)+33]
 17798  013174  0EE8               	movlw	-24
 17799  013176  50E3               	movf	plusw1,w,c
 17800  013178  E10D               	bnz	l16726
 17801  01317A  0EE9               	movlw	-23
 17802  01317C  50E3               	movf	plusw1,w,c
 17803  01317E  E10A               	bnz	l16726
 17804  013180  0EEA               	movlw	-22
 17805  013182  50E3               	movf	plusw1,w,c
 17806  013184  E107               	bnz	l16726
 17807  013186  0EEB               	movlw	-21
 17808  013188  50E3               	movf	plusw1,w,c
 17809  01318A  A4D8               	btfss	status,2,c
 17810  01318C  D003               	goto	l16726
 17811  01318E                     u16340:
 17812  01318E                     l16724:
 17813                           
 17814                           ;stkvar	___secs_to_tm$7621 @ sp[(-57)+0]
 17815  01318E  0EC7               	movlw	-57
 17816  013190  6AE3               	clrf	plusw1,c
 17817  013192  2AE3               	incf	plusw1,f,c
 17818  013194                     l16726:
 17819                           
 17820                           ;stkvar	___secs_to_tm$7621 @ sp[(-57)+0]
 17821  013194  0EC7               	movlw	-57
 17822  013196  50E3               	movf	plusw1,w,c
 17823  013198  6E34               	movwf	(btemp+10)^0,c
 17824  01319A  6A35               	clrf	(btemp+11)^0,c
 17825                           
 17826                           ;stkvar	_leap @ sp[(-57)+51]
 17827  01319C  0EFA               	movlw	-6
 17828  01319E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17829  0131A4  0EFB               	movlw	-5
 17830  0131A6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17831                           
 17832                           ;stkvar	_remdays @ sp[(-57)+25]
 17833                           ;stkvar	_leap @ sp[(-57)+51]
 17834  0131AC  0EFA               	movlw	-6
 17835  0131AE  006F FF8C  F034    	movff	plusw1,btemp+10
 17836  0131B4  0EFB               	movlw	-5
 17837  0131B6  006F FF8C  F035    	movff	plusw1,btemp+11
 17838  0131BC  0EE0               	movlw	-32
 17839  0131BE  50E3               	movf	plusw1,w,c
 17840  0131C0  2634               	addwf	(btemp+10)^0,f,c
 17841  0131C2  0EE1               	movlw	-31
 17842  0131C4  50E3               	movf	plusw1,w,c
 17843  0131C6  2235               	addwfc	(btemp+11)^0,f,c
 17844  0131C8  0E3B               	movlw	59
 17845  0131CA  2634               	addwf	(btemp+10)^0,f,c
 17846  0131CC  0E00               	movlw	0
 17847  0131CE  2235               	addwfc	(btemp+11)^0,f,c
 17848                           
 17849                           ;stkvar	_yday @ sp[(-57)+53]
 17850  0131D0  0EFC               	movlw	-4
 17851  0131D2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17852  0131D8  0EFD               	movlw	-3
 17853  0131DA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17854                           
 17855                           ;stkvar	_leap @ sp[(-57)+51]
 17856  0131E0  0EFA               	movlw	-6
 17857  0131E2  50E3               	movf	plusw1,w,c
 17858  0131E4  0F6D               	addlw	109
 17859  0131E6  6E34               	movwf	(btemp+10)^0,c
 17860  0131E8  0EFB               	movlw	-5
 17861  0131EA  006F FF8C  F035    	movff	plusw1,btemp+11
 17862  0131F0  0E01               	movlw	1
 17863  0131F2  2235               	addwfc	(btemp+11)^0,f,c
 17864                           
 17865                           ;stkvar	_yday @ sp[(-57)+53]
 17866  0131F4  0EFC               	movlw	-4
 17867  0131F6  006F FF8C  F02A    	movff	plusw1,btemp
 17868  0131FC  5034               	movf	(btemp+10)^0,w,c
 17869  0131FE  5C2A               	subwf	btemp^0,w,c
 17870  013200  0EFD               	movlw	-3
 17871  013202  50E3               	movf	plusw1,w,c
 17872  013204  0A80               	xorlw	128
 17873  013206  6E2A               	movwf	btemp^0,c
 17874  013208  5035               	movf	(btemp+11)^0,w,c
 17875  01320A  0A80               	xorlw	128
 17876  01320C  582A               	subwfb	btemp^0,w,c
 17877  01320E  A0D8               	btfss	status,0,c
 17878  013210  D01E               	goto	l16734
 17879                           
 17880                           ;stkvar	_leap @ sp[(-57)+51]
 17881  013212  0EFA               	movlw	-6
 17882  013214  50E3               	movf	plusw1,w,c
 17883  013216  0F6D               	addlw	109
 17884  013218  6E34               	movwf	(btemp+10)^0,c
 17885  01321A  0EFB               	movlw	-5
 17886  01321C  006F FF8C  F035    	movff	plusw1,btemp+11
 17887  013222  0E01               	movlw	1
 17888  013224  2235               	addwfc	(btemp+11)^0,f,c
 17889                           
 17890                           ;stkvar	_yday @ sp[(-57)+53]
 17891  013226  0EFC               	movlw	-4
 17892  013228  006F FF8C  F02A    	movff	plusw1,btemp
 17893  01322E  5034               	movf	(btemp+10)^0,w,c
 17894  013230  5E2A               	subwf	btemp^0,f,c
 17895  013232  0EFC               	movlw	-4
 17896  013234  0060  F0AB  FFE3   	movff	btemp,plusw1
 17897  01323A  0EFD               	movlw	-3
 17898  01323C  006F FF8C  F02A    	movff	plusw1,btemp
 17899  013242  5035               	movf	(btemp+11)^0,w,c
 17900  013244  5A2A               	subwfb	btemp^0,f,c
 17901  013246  0EFD               	movlw	-3
 17902  013248  0060  F0AB  FFE3   	movff	btemp,plusw1
 17903  01324E                     l16734:
 17904                           
 17905                           ;stkvar	_remyears @ sp[(-57)+37]
 17906                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17907  01324E  0EE4               	movlw	-28
 17908  013250  006F FF8C  F032    	movff	plusw1,btemp+8
 17909  013256  0EE5               	movlw	-27
 17910  013258  006F FF8C  F033    	movff	plusw1,btemp+9
 17911  01325E  0EE6               	movlw	-26
 17912  013260  006F FF8C  F034    	movff	plusw1,btemp+10
 17913  013266  0EE7               	movlw	-25
 17914  013268  006F FF8C  F035    	movff	plusw1,btemp+11
 17915  01326E  0E02               	movlw	2
 17916  013270                     u16365:
 17917  013270  90D8               	bcf	status,0,c
 17918  013272  3632               	rlcf	(btemp+8)^0,f,c
 17919  013274  3633               	rlcf	(btemp+9)^0,f,c
 17920  013276  3634               	rlcf	(btemp+10)^0,f,c
 17921  013278  3635               	rlcf	(btemp+11)^0,f,c
 17922  01327A  2EE8               	decfsz	wreg,f,c
 17923  01327C  D7F9               	goto	u16365
 17924  01327E  0E64               	movlw	100
 17925  013280  6EE6               	movwf	postinc1,c
 17926  013282  0E00               	movlw	0
 17927  013284  6EE6               	movwf	postinc1,c
 17928  013286  0E00               	movlw	0
 17929  013288  6EE6               	movwf	postinc1,c
 17930  01328A  0E00               	movlw	0
 17931  01328C  6EE6               	movwf	postinc1,c
 17932                           
 17933                           ;stkvar	_c_cycles @ sp[(-61)+33]
 17934  01328E  0EE4               	movlw	-28
 17935  013290  006F FF8F FFE6     	movff	plusw1,postinc1
 17936  013296  006F FF8F FFE6     	movff	plusw1,postinc1
 17937  01329C  006F FF8F FFE6     	movff	plusw1,postinc1
 17938  0132A2  006F FF8F FFE6     	movff	plusw1,postinc1
 17939  0132A8  EC54  F0FF         	call	___lmul	;wreg free
 17940  0132AC  5032               	movf	(btemp+8)^0,w,c
 17941  0132AE  242A               	addwf	btemp^0,w,c
 17942  0132B0  6E2E               	movwf	(btemp+4)^0,c
 17943  0132B2  5033               	movf	(btemp+9)^0,w,c
 17944  0132B4  202B               	addwfc	(btemp+1)^0,w,c
 17945  0132B6  6E2F               	movwf	(btemp+5)^0,c
 17946  0132B8  5034               	movf	(btemp+10)^0,w,c
 17947  0132BA  202C               	addwfc	(btemp+2)^0,w,c
 17948  0132BC  6E30               	movwf	(btemp+6)^0,c
 17949  0132BE  5035               	movf	(btemp+11)^0,w,c
 17950  0132C0  202D               	addwfc	(btemp+3)^0,w,c
 17951  0132C2  6E31               	movwf	(btemp+7)^0,c
 17952  0132C4  0EEC               	movlw	-20
 17953  0132C6  50E3               	movf	plusw1,w,c
 17954  0132C8  262E               	addwf	(btemp+4)^0,f,c
 17955  0132CA  0EED               	movlw	-19
 17956  0132CC  50E3               	movf	plusw1,w,c
 17957  0132CE  222F               	addwfc	(btemp+5)^0,f,c
 17958  0132D0  0EEE               	movlw	-18
 17959  0132D2  50E3               	movf	plusw1,w,c
 17960  0132D4  2230               	addwfc	(btemp+6)^0,f,c
 17961  0132D6  0EEF               	movlw	-17
 17962  0132D8  50E3               	movf	plusw1,w,c
 17963  0132DA  2231               	addwfc	(btemp+7)^0,f,c
 17964  0132DC  0060  F0B8  F03A   	movff	btemp+4,btemp+16
 17965  0132E2  0060  F0BC  F03B   	movff	btemp+5,btemp+17
 17966  0132E8  0060  F0C0  F03C   	movff	btemp+6,btemp+18
 17967  0132EE  0060  F0C4  F03D   	movff	btemp+7,btemp+19
 17968  0132F4  6A3E               	clrf	(btemp+20)^0,c
 17969  0132F6  BE3D               	btfsc	(btemp+19)^0,7,c
 17970  0132F8  683E               	setf	(btemp+20)^0,c
 17971  0132FA  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 17972  013300  0060  F0F8  F040   	movff	btemp+20,btemp+22
 17973  013306  0060  F0F8  F041   	movff	btemp+20,btemp+23
 17974  01330C  0E90               	movlw	144
 17975  01330E  6EE6               	movwf	postinc1,c
 17976  013310  0E01               	movlw	1
 17977  013312  6EE6               	movwf	postinc1,c
 17978  013314  0E00               	movlw	0
 17979  013316  6EE6               	movwf	postinc1,c
 17980  013318  0E00               	movlw	0
 17981  01331A  6EE6               	movwf	postinc1,c
 17982  01331C  0E00               	movlw	0
 17983  01331E  6EE6               	movwf	postinc1,c
 17984  013320  0E00               	movlw	0
 17985  013322  6EE6               	movwf	postinc1,c
 17986  013324  0E00               	movlw	0
 17987  013326  6EE6               	movwf	postinc1,c
 17988  013328  0E00               	movlw	0
 17989  01332A  6EE6               	movwf	postinc1,c
 17990                           
 17991                           ;stkvar	_qc_cycles @ sp[(-65)+45]
 17992  01332C  0EEC               	movlw	-20
 17993  01332E  006F FF8C  F042    	movff	plusw1,btemp+24
 17994  013334  0EED               	movlw	-19
 17995  013336  006F FF8C  F043    	movff	plusw1,btemp+25
 17996  01333C  0EEE               	movlw	-18
 17997  01333E  006F FF8C  F044    	movff	plusw1,btemp+26
 17998  013344  0EEF               	movlw	-17
 17999  013346  006F FF8C  F045    	movff	plusw1,btemp+27
 18000  01334C  6A46               	clrf	(btemp+28)^0,c
 18001  01334E  BE45               	btfsc	(btemp+27)^0,7,c
 18002  013350  6846               	setf	(btemp+28)^0,c
 18003  013352  0060  F118  F047   	movff	btemp+28,btemp+29
 18004  013358  0060  F118  F048   	movff	btemp+28,btemp+30
 18005  01335E  0060  F118  F049   	movff	btemp+28,btemp+31
 18006  013364  0060  F10B  FFE6   	movff	btemp+24,postinc1
 18007  01336A  0060  F10F  FFE6   	movff	btemp+25,postinc1
 18008  013370  0060  F113  FFE6   	movff	btemp+26,postinc1
 18009  013376  0060  F117  FFE6   	movff	btemp+27,postinc1
 18010  01337C  0060  F11B  FFE6   	movff	btemp+28,postinc1
 18011  013382  0060  F11F  FFE6   	movff	btemp+29,postinc1
 18012  013388  0060  F123  FFE6   	movff	btemp+30,postinc1
 18013  01338E  0060  F127  FFE6   	movff	btemp+31,postinc1
 18014  013394  EC5B  F0F5         	call	___omul	;wreg free
 18015  013398  52E5               	movf	postdec1,f,c
 18016  01339A  006F FF9C  F049    	movff	indf1,btemp+31
 18017  0133A0  52E5               	movf	postdec1,f,c
 18018  0133A2  006F FF9C  F048    	movff	indf1,btemp+30
 18019  0133A8  52E5               	movf	postdec1,f,c
 18020  0133AA  006F FF9C  F047    	movff	indf1,btemp+29
 18021  0133B0  52E5               	movf	postdec1,f,c
 18022  0133B2  006F FF9C  F046    	movff	indf1,btemp+28
 18023  0133B8  52E5               	movf	postdec1,f,c
 18024  0133BA  006F FF9C  F045    	movff	indf1,btemp+27
 18025  0133C0  52E5               	movf	postdec1,f,c
 18026  0133C2  006F FF9C  F044    	movff	indf1,btemp+26
 18027  0133C8  52E5               	movf	postdec1,f,c
 18028  0133CA  006F FF9C  F043    	movff	indf1,btemp+25
 18029  0133D0  52E5               	movf	postdec1,f,c
 18030  0133D2  006F FF9C  F042    	movff	indf1,btemp+24
 18031  0133D8  0EF8               	movlw	248
 18032  0133DA  26E1               	addwf	fsr1l,f,c
 18033  0133DC  0EFF               	movlw	255
 18034  0133DE  22E2               	addwfc	fsr1h,f,c
 18035  0133E0  503A               	movf	(btemp+16)^0,w,c
 18036  0133E2  2442               	addwf	(btemp+24)^0,w,c
 18037  0133E4  6E32               	movwf	(btemp+8)^0,c
 18038  0133E6  503B               	movf	(btemp+17)^0,w,c
 18039  0133E8  2043               	addwfc	(btemp+25)^0,w,c
 18040  0133EA  6E33               	movwf	(btemp+9)^0,c
 18041  0133EC  503C               	movf	(btemp+18)^0,w,c
 18042  0133EE  2044               	addwfc	(btemp+26)^0,w,c
 18043  0133F0  6E34               	movwf	(btemp+10)^0,c
 18044  0133F2  503D               	movf	(btemp+19)^0,w,c
 18045  0133F4  2045               	addwfc	(btemp+27)^0,w,c
 18046  0133F6  6E35               	movwf	(btemp+11)^0,c
 18047  0133F8  503E               	movf	(btemp+20)^0,w,c
 18048  0133FA  2046               	addwfc	(btemp+28)^0,w,c
 18049  0133FC  6E36               	movwf	(btemp+12)^0,c
 18050  0133FE  503F               	movf	(btemp+21)^0,w,c
 18051  013400  2047               	addwfc	(btemp+29)^0,w,c
 18052  013402  6E37               	movwf	(btemp+13)^0,c
 18053  013404  5040               	movf	(btemp+22)^0,w,c
 18054  013406  2048               	addwfc	(btemp+30)^0,w,c
 18055  013408  6E38               	movwf	(btemp+14)^0,c
 18056  01340A  5041               	movf	(btemp+23)^0,w,c
 18057  01340C  2049               	addwfc	(btemp+31)^0,w,c
 18058  01340E  6E39               	movwf	(btemp+15)^0,c
 18059                           
 18060                           ;stkvar	_years @ sp[(-57)+1]
 18061  013410  0EC8               	movlw	-56
 18062  013412  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 18063  013418  0EC9               	movlw	-55
 18064  01341A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 18065  013420  0ECA               	movlw	-54
 18066  013422  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 18067  013428  0ECB               	movlw	-53
 18068  01342A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 18069  013430  0ECC               	movlw	-52
 18070  013432  0060  F0DB  FFE3   	movff	btemp+12,plusw1
 18071  013438  0ECD               	movlw	-51
 18072  01343A  0060  F0DF  FFE3   	movff	btemp+13,plusw1
 18073  013440  0ECE               	movlw	-50
 18074  013442  0060  F0E3  FFE3   	movff	btemp+14,plusw1
 18075  013448  0ECF               	movlw	-49
 18076  01344A  0060  F0E7  FFE3   	movff	btemp+15,plusw1
 18077                           
 18078                           ;stkvar	_months @ sp[(-57)+49]
 18079  013450  0EF8               	movlw	-8
 18080  013452  6AE3               	clrf	plusw1,c
 18081  013454  0EF9               	movlw	-7
 18082  013456  6AE3               	clrf	plusw1,c
 18083  013458  D030               	goto	l16742
 18084  01345A                     l16738:
 18085                           
 18086                           ;stkvar	_remdays @ sp[(-57)+25]
 18087  01345A  50E1               	movf	fsr1l,w,c
 18088  01345C  0FE0               	addlw	-32
 18089  01345E  6ED9               	movwf	fsr2l,c
 18090  013460  50E2               	movf	fsr1h,w,c
 18091  013462  6EDA               	movwf	fsr2h,c
 18092  013464  0EFF               	movlw	255
 18093  013466  22DA               	addwfc	fsr2h,f,c
 18094                           
 18095                           ;stkvar	_months @ sp[(-57)+49]
 18096  013468  0EF8               	movlw	-8
 18097  01346A  006F FF8C  F034    	movff	plusw1,btemp+10
 18098  013470  0EF9               	movlw	-7
 18099  013472  006F FF8C  F035    	movff	plusw1,btemp+11
 18100  013478  0EAB               	movlw	low ___secs_to_tm@days_in_month
 18101  01347A  2434               	addwf	(btemp+10)^0,w,c
 18102  01347C  6EF6               	movwf	tblptrl,c
 18103  01347E  0EF8               	movlw	high ___secs_to_tm@days_in_month
 18104  013480  2035               	addwfc	(btemp+11)^0,w,c
 18105  013482  6EF7               	movwf	tblptrh,c
 18106  013484                     	if	1	;There are 3 active tblptr bytes
 18107  013484  6AF8               	clrf	tblptru,c
 18108  013486  0E00               	movlw	low (__mediumconst shr (0+16))
 18109  013488  22F8               	addwfc	tblptru,f,c
 18110  01348A                     	endif
 18111  01348A  0008               	tblrd		*
 18112  01348C  50F5               	movf	tablat,w,c
 18113  01348E  5EDE               	subwf	postinc2,f,c
 18114  013490  0E00               	movlw	0
 18115  013492  5ADE               	subwfb	postinc2,f,c
 18116  013494  5ADE               	subwfb	postinc2,f,c
 18117  013496  5ADE               	subwfb	postinc2,f,c
 18118                           
 18119                           ;stkvar	_months @ sp[(-57)+49]
 18120  013498  0EF8               	movlw	-8
 18121  01349A  50E3               	movf	plusw1,w,c
 18122  01349C  0F01               	addlw	1
 18123  01349E  6E2A               	movwf	btemp^0,c
 18124  0134A0  0EF8               	movlw	-8
 18125  0134A2  0060  F0AB  FFE3   	movff	btemp,plusw1
 18126  0134A8  6A2A               	clrf	btemp^0,c
 18127  0134AA  0EF9               	movlw	-7
 18128  0134AC  50E3               	movf	plusw1,w,c
 18129  0134AE  202A               	addwfc	btemp^0,w,c
 18130  0134B0  6E2A               	movwf	btemp^0,c
 18131  0134B2  0EF9               	movlw	-7
 18132  0134B4  0060  F0AB  FFE3   	movff	btemp,plusw1
 18133  0134BA                     l16742:
 18134                           
 18135                           ;stkvar	_months @ sp[(-57)+49]
 18136  0134BA  0EF8               	movlw	-8
 18137  0134BC  006F FF8C  F034    	movff	plusw1,btemp+10
 18138  0134C2  0EF9               	movlw	-7
 18139  0134C4  006F FF8C  F035    	movff	plusw1,btemp+11
 18140  0134CA  0EAB               	movlw	low ___secs_to_tm@days_in_month
 18141  0134CC  2434               	addwf	(btemp+10)^0,w,c
 18142  0134CE  6EF6               	movwf	tblptrl,c
 18143  0134D0  0EF8               	movlw	high ___secs_to_tm@days_in_month
 18144  0134D2  2035               	addwfc	(btemp+11)^0,w,c
 18145  0134D4  6EF7               	movwf	tblptrh,c
 18146  0134D6                     	if	1	;There are 3 active tblptr bytes
 18147  0134D6  6AF8               	clrf	tblptru,c
 18148  0134D8  0E00               	movlw	low (__mediumconst shr (0+16))
 18149  0134DA  22F8               	addwfc	tblptru,f,c
 18150  0134DC                     	endif
 18151  0134DC  0008               	tblrd		*
 18152  0134DE  006F FFD4  F035    	movff	tablat,btemp+11
 18153  0134E4  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 18154  0134EA  6A2F               	clrf	(btemp+5)^0,c
 18155  0134EC  6A30               	clrf	(btemp+6)^0,c
 18156  0134EE  6A31               	clrf	(btemp+7)^0,c
 18157                           
 18158                           ;stkvar	_remdays @ sp[(-57)+25]
 18159  0134F0  0EE0               	movlw	-32
 18160  0134F2  006F FF8C  F02A    	movff	plusw1,btemp
 18161  0134F8  502E               	movf	(btemp+4)^0,w,c
 18162  0134FA  5C2A               	subwf	btemp^0,w,c
 18163  0134FC  0EE1               	movlw	-31
 18164  0134FE  006F FF8C  F02A    	movff	plusw1,btemp
 18165  013504  502F               	movf	(btemp+5)^0,w,c
 18166  013506  582A               	subwfb	btemp^0,w,c
 18167  013508  0EE2               	movlw	-30
 18168  01350A  006F FF8C  F02A    	movff	plusw1,btemp
 18169  013510  5030               	movf	(btemp+6)^0,w,c
 18170  013512  582A               	subwfb	btemp^0,w,c
 18171  013514  0EE3               	movlw	-29
 18172  013516  50E3               	movf	plusw1,w,c
 18173  013518  0A80               	xorlw	128
 18174  01351A  6E2A               	movwf	btemp^0,c
 18175  01351C  5031               	movf	(btemp+7)^0,w,c
 18176  01351E  0A80               	xorlw	128
 18177  013520  582A               	subwfb	btemp^0,w,c
 18178  013522  B0D8               	btfsc	status,0,c
 18179  013524  D79A               	goto	l16738
 18180                           
 18181                           ;stkvar	_months @ sp[(-57)+49]
 18182  013526  0EF9               	movlw	-7
 18183  013528  BEE3               	btfsc	plusw1,7,c
 18184  01352A  D026               	goto	l16750
 18185  01352C  0EF9               	movlw	-7
 18186  01352E  50E3               	movf	plusw1,w,c
 18187  013530  E108               	bnz	u16380
 18188  013532  0EF8               	movlw	-8
 18189  013534  006F FF8C  F02A    	movff	plusw1,btemp
 18190  01353A  0E0A               	movlw	10
 18191  01353C  5E2A               	subwf	btemp^0,f,c
 18192  01353E  A0D8               	btfss	status,0,c
 18193  013540  D01B               	goto	l16750
 18194  013542                     u16380:
 18195                           
 18196                           ;stkvar	_months @ sp[(-57)+49]
 18197  013542  50E1               	movf	fsr1l,w,c
 18198  013544  0FF8               	addlw	-8
 18199  013546  6ED9               	movwf	fsr2l,c
 18200  013548  50E2               	movf	fsr1h,w,c
 18201  01354A  6EDA               	movwf	fsr2h,c
 18202  01354C  0EFF               	movlw	255
 18203  01354E  22DA               	addwfc	fsr2h,f,c
 18204  013550  0EF4               	movlw	244
 18205  013552  26DE               	addwf	postinc2,f,c
 18206  013554  0EFF               	movlw	255
 18207  013556  22DD               	addwfc	postdec2,f,c
 18208                           
 18209                           ;stkvar	_years @ sp[(-57)+1]
 18210  013558  50E1               	movf	fsr1l,w,c
 18211  01355A  0FC8               	addlw	-56
 18212  01355C  6ED9               	movwf	fsr2l,c
 18213  01355E  50E2               	movf	fsr1h,w,c
 18214  013560  6EDA               	movwf	fsr2h,c
 18215  013562  0EFF               	movlw	255
 18216  013564  22DA               	addwfc	fsr2h,f,c
 18217  013566  2ADE               	incf	postinc2,f,c
 18218  013568  0E00               	movlw	0
 18219  01356A  22DE               	addwfc	postinc2,f,c
 18220  01356C  22DE               	addwfc	postinc2,f,c
 18221  01356E  22DE               	addwfc	postinc2,f,c
 18222  013570  22DE               	addwfc	postinc2,f,c
 18223  013572  22DE               	addwfc	postinc2,f,c
 18224  013574  22DE               	addwfc	postinc2,f,c
 18225  013576  22DE               	addwfc	postinc2,f,c
 18226  013578                     l16750:
 18227                           
 18228                           ;stkvar	_years @ sp[(-57)+1]
 18229  013578  0EC8               	movlw	-56
 18230  01357A  50E3               	movf	plusw1,w,c
 18231  01357C  0F64               	addlw	100
 18232  01357E  6E3A               	movwf	(btemp+16)^0,c
 18233  013580  0EC9               	movlw	-55
 18234  013582  006F FF8C  F03B    	movff	plusw1,btemp+17
 18235  013588  0E00               	movlw	0
 18236  01358A  223B               	addwfc	(btemp+17)^0,f,c
 18237  01358C  0ECA               	movlw	-54
 18238  01358E  006F FF8C  F03C    	movff	plusw1,btemp+18
 18239  013594  0E00               	movlw	0
 18240  013596  223C               	addwfc	(btemp+18)^0,f,c
 18241  013598  0ECB               	movlw	-53
 18242  01359A  006F FF8C  F03D    	movff	plusw1,btemp+19
 18243  0135A0  0E00               	movlw	0
 18244  0135A2  223D               	addwfc	(btemp+19)^0,f,c
 18245  0135A4  0ECC               	movlw	-52
 18246  0135A6  006F FF8C  F03E    	movff	plusw1,btemp+20
 18247  0135AC  0E00               	movlw	0
 18248  0135AE  223E               	addwfc	(btemp+20)^0,f,c
 18249  0135B0  0ECD               	movlw	-51
 18250  0135B2  006F FF8C  F03F    	movff	plusw1,btemp+21
 18251  0135B8  0E00               	movlw	0
 18252  0135BA  223F               	addwfc	(btemp+21)^0,f,c
 18253  0135BC  0ECE               	movlw	-50
 18254  0135BE  006F FF8C  F040    	movff	plusw1,btemp+22
 18255  0135C4  0E00               	movlw	0
 18256  0135C6  2240               	addwfc	(btemp+22)^0,f,c
 18257  0135C8  0ECF               	movlw	-49
 18258  0135CA  006F FF8C  F041    	movff	plusw1,btemp+23
 18259  0135D0  0E00               	movlw	0
 18260  0135D2  2241               	addwfc	(btemp+23)^0,f,c
 18261  0135D4  BE41               	btfsc	(btemp+23)^0,7,c
 18262  0135D6  D00C               	goto	u16390
 18263  0135D8  5041               	movf	(btemp+23)^0,w,c
 18264  0135DA  1040               	iorwf	(btemp+22)^0,w,c
 18265  0135DC  103F               	iorwf	(btemp+21)^0,w,c
 18266  0135DE  103E               	iorwf	(btemp+20)^0,w,c
 18267  0135E0  103D               	iorwf	(btemp+19)^0,w,c
 18268  0135E2  103C               	iorwf	(btemp+18)^0,w,c
 18269  0135E4  E103               	bnz	u16391
 18270  0135E6  0E80               	movlw	128
 18271  0135E8  5C3B               	subwf	(btemp+17)^0,w,c
 18272  0135EA  B0D8               	btfsc	status,0,c
 18273  0135EC                     u16391:
 18274  0135EC  EF62  F094         	goto	u16250
 18275  0135F0                     u16390:
 18276                           
 18277                           ;stkvar	_years @ sp[(-57)+1]
 18278  0135F0  0EC8               	movlw	-56
 18279  0135F2  50E3               	movf	plusw1,w,c
 18280  0135F4  0F64               	addlw	100
 18281  0135F6  6E3A               	movwf	(btemp+16)^0,c
 18282  0135F8  0EC9               	movlw	-55
 18283  0135FA  006F FF8C  F03B    	movff	plusw1,btemp+17
 18284  013600  0E00               	movlw	0
 18285  013602  223B               	addwfc	(btemp+17)^0,f,c
 18286  013604  0ECA               	movlw	-54
 18287  013606  006F FF8C  F03C    	movff	plusw1,btemp+18
 18288  01360C  0E00               	movlw	0
 18289  01360E  223C               	addwfc	(btemp+18)^0,f,c
 18290  013610  0ECB               	movlw	-53
 18291  013612  006F FF8C  F03D    	movff	plusw1,btemp+19
 18292  013618  0E00               	movlw	0
 18293  01361A  223D               	addwfc	(btemp+19)^0,f,c
 18294  01361C  0ECC               	movlw	-52
 18295  01361E  006F FF8C  F03E    	movff	plusw1,btemp+20
 18296  013624  0E00               	movlw	0
 18297  013626  223E               	addwfc	(btemp+20)^0,f,c
 18298  013628  0ECD               	movlw	-51
 18299  01362A  006F FF8C  F03F    	movff	plusw1,btemp+21
 18300  013630  0E00               	movlw	0
 18301  013632  223F               	addwfc	(btemp+21)^0,f,c
 18302  013634  0ECE               	movlw	-50
 18303  013636  006F FF8C  F040    	movff	plusw1,btemp+22
 18304  01363C  0E00               	movlw	0
 18305  01363E  2240               	addwfc	(btemp+22)^0,f,c
 18306  013640  0ECF               	movlw	-49
 18307  013642  006F FF8C  F041    	movff	plusw1,btemp+23
 18308  013648  0E00               	movlw	0
 18309  01364A  2241               	addwfc	(btemp+23)^0,f,c
 18310  01364C  AE41               	btfss	(btemp+23)^0,7,c
 18311  01364E  D011               	goto	l16758
 18312  013650  0E80               	movlw	128
 18313  013652  5C3B               	subwf	(btemp+17)^0,w,c
 18314  013654  0EFF               	movlw	255
 18315  013656  583C               	subwfb	(btemp+18)^0,w,c
 18316  013658  0EFF               	movlw	255
 18317  01365A  583D               	subwfb	(btemp+19)^0,w,c
 18318  01365C  0EFF               	movlw	255
 18319  01365E  583E               	subwfb	(btemp+20)^0,w,c
 18320  013660  0EFF               	movlw	255
 18321  013662  583F               	subwfb	(btemp+21)^0,w,c
 18322  013664  0EFF               	movlw	255
 18323  013666  5840               	subwfb	(btemp+22)^0,w,c
 18324  013668  0EFF               	movlw	255
 18325  01366A  5841               	subwfb	(btemp+23)^0,w,c
 18326  01366C  A0D8               	btfss	status,0,c
 18327  01366E  EF62  F094         	goto	u16250
 18328  013672                     l16758:
 18329                           
 18330                           ;stkvar	_years @ sp[(-57)+1]
 18331  013672  0EC8               	movlw	-56
 18332  013674  50E3               	movf	plusw1,w,c
 18333  013676  0F64               	addlw	100
 18334  013678  6E34               	movwf	(btemp+10)^0,c
 18335  01367A  0EC9               	movlw	-55
 18336  01367C  006F FF8C  F035    	movff	plusw1,btemp+11
 18337  013682  0E00               	movlw	0
 18338  013684  2235               	addwfc	(btemp+11)^0,f,c
 18339                           
 18340                           ;stkvar	_tm @ sp[(-57)+-10]
 18341  013686  0EBD               	movlw	-67
 18342  013688  006F FF8C  F032    	movff	plusw1,btemp+8
 18343  01368E  0EBE               	movlw	-66
 18344  013690  006F FF8C  F033    	movff	plusw1,btemp+9
 18345  013696  0E0A               	movlw	10
 18346  013698  2432               	addwf	(btemp+8)^0,w,c
 18347  01369A  6ED9               	movwf	fsr2l,c
 18348  01369C  0E00               	movlw	0
 18349  01369E  2033               	addwfc	(btemp+9)^0,w,c
 18350  0136A0  6EDA               	movwf	fsr2h,c
 18351  0136A2  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18352  0136A8  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18353                           
 18354                           ;stkvar	_months @ sp[(-57)+49]
 18355  0136AE  0EF8               	movlw	-8
 18356  0136B0  50E3               	movf	plusw1,w,c
 18357  0136B2  0F02               	addlw	2
 18358  0136B4  6E34               	movwf	(btemp+10)^0,c
 18359  0136B6  0EF9               	movlw	-7
 18360  0136B8  006F FF8C  F035    	movff	plusw1,btemp+11
 18361  0136BE  0E00               	movlw	0
 18362  0136C0  2235               	addwfc	(btemp+11)^0,f,c
 18363                           
 18364                           ;stkvar	_tm @ sp[(-57)+-10]
 18365  0136C2  0EBD               	movlw	-67
 18366  0136C4  006F FF8C  F032    	movff	plusw1,btemp+8
 18367  0136CA  0EBE               	movlw	-66
 18368  0136CC  006F FF8C  F033    	movff	plusw1,btemp+9
 18369  0136D2  0E08               	movlw	8
 18370  0136D4  2432               	addwf	(btemp+8)^0,w,c
 18371  0136D6  6ED9               	movwf	fsr2l,c
 18372  0136D8  0E00               	movlw	0
 18373  0136DA  2033               	addwfc	(btemp+9)^0,w,c
 18374  0136DC  6EDA               	movwf	fsr2h,c
 18375  0136DE  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18376  0136E4  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18377                           
 18378                           ;stkvar	_remdays @ sp[(-57)+25]
 18379  0136EA  0EE0               	movlw	-32
 18380  0136EC  50E3               	movf	plusw1,w,c
 18381  0136EE  0F01               	addlw	1
 18382  0136F0  6E34               	movwf	(btemp+10)^0,c
 18383  0136F2  0EE1               	movlw	-31
 18384  0136F4  006F FF8C  F035    	movff	plusw1,btemp+11
 18385  0136FA  0E00               	movlw	0
 18386  0136FC  2235               	addwfc	(btemp+11)^0,f,c
 18387                           
 18388                           ;stkvar	_tm @ sp[(-57)+-10]
 18389  0136FE  0EBD               	movlw	-67
 18390  013700  006F FF8C  F032    	movff	plusw1,btemp+8
 18391  013706  0EBE               	movlw	-66
 18392  013708  006F FF8C  F033    	movff	plusw1,btemp+9
 18393  01370E  0E06               	movlw	6
 18394  013710  2432               	addwf	(btemp+8)^0,w,c
 18395  013712  6ED9               	movwf	fsr2l,c
 18396  013714  0E00               	movlw	0
 18397  013716  2033               	addwfc	(btemp+9)^0,w,c
 18398  013718  6EDA               	movwf	fsr2h,c
 18399  01371A  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18400  013720  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18401                           
 18402                           ;stkvar	_wday @ sp[(-57)+55]
 18403  013726  50E1               	movf	fsr1l,w,c
 18404  013728  0FFE               	addlw	-2
 18405  01372A  6ED9               	movwf	fsr2l,c
 18406  01372C  50E2               	movf	fsr1h,w,c
 18407  01372E  6EDA               	movwf	fsr2h,c
 18408  013730  0EFF               	movlw	255
 18409  013732  22DA               	addwfc	fsr2h,f,c
 18410                           
 18411                           ;stkvar	_tm @ sp[(-57)+-10]
 18412  013734  0EBD               	movlw	-67
 18413  013736  006F FF8C  F034    	movff	plusw1,btemp+10
 18414  01373C  0EBE               	movlw	-66
 18415  01373E  006F FF8C  F035    	movff	plusw1,btemp+11
 18416  013744  0E0C               	movlw	12
 18417  013746  2434               	addwf	(btemp+10)^0,w,c
 18418  013748  6EE9               	movwf	fsr0l,c
 18419  01374A  0E00               	movlw	0
 18420  01374C  2035               	addwfc	(btemp+11)^0,w,c
 18421  01374E  6EEA               	movwf	fsr0h,c
 18422  013750  006F FF7B FFEE     	movff	postinc2,postinc0
 18423  013756  006F FF77 FFED     	movff	postdec2,postdec0
 18424                           
 18425                           ;stkvar	_yday @ sp[(-57)+53]
 18426  01375C  50E1               	movf	fsr1l,w,c
 18427  01375E  0FFC               	addlw	-4
 18428  013760  6ED9               	movwf	fsr2l,c
 18429  013762  50E2               	movf	fsr1h,w,c
 18430  013764  6EDA               	movwf	fsr2h,c
 18431  013766  0EFF               	movlw	255
 18432  013768  22DA               	addwfc	fsr2h,f,c
 18433                           
 18434                           ;stkvar	_tm @ sp[(-57)+-10]
 18435  01376A  0EBD               	movlw	-67
 18436  01376C  006F FF8C  F034    	movff	plusw1,btemp+10
 18437  013772  0EBE               	movlw	-66
 18438  013774  006F FF8C  F035    	movff	plusw1,btemp+11
 18439  01377A  0E0E               	movlw	14
 18440  01377C  2434               	addwf	(btemp+10)^0,w,c
 18441  01377E  6EE9               	movwf	fsr0l,c
 18442  013780  0E00               	movlw	0
 18443  013782  2035               	addwfc	(btemp+11)^0,w,c
 18444  013784  6EEA               	movwf	fsr0h,c
 18445  013786  006F FF7B FFEE     	movff	postinc2,postinc0
 18446  01378C  006F FF77 FFED     	movff	postdec2,postdec0
 18447  013792  0E10               	movlw	16
 18448  013794  6EE6               	movwf	postinc1,c
 18449  013796  0E0E               	movlw	14
 18450  013798  6EE6               	movwf	postinc1,c
 18451  01379A  0E00               	movlw	0
 18452  01379C  6EE6               	movwf	postinc1,c
 18453  01379E  0E00               	movlw	0
 18454  0137A0  6EE6               	movwf	postinc1,c
 18455                           
 18456                           ;stkvar	_remsecs @ sp[(-61)+41]
 18457  0137A2  0EEC               	movlw	-20
 18458  0137A4  006F FF8F FFE6     	movff	plusw1,postinc1
 18459  0137AA  006F FF8F FFE6     	movff	plusw1,postinc1
 18460  0137B0  006F FF8F FFE6     	movff	plusw1,postinc1
 18461  0137B6  006F FF8F FFE6     	movff	plusw1,postinc1
 18462  0137BC  EC10  F0EE         	call	___aldiv	;wreg free
 18463  0137C0  0060  F0A8  F034   	movff	btemp,btemp+10
 18464  0137C6  0060  F0AC  F035   	movff	btemp+1,btemp+11
 18465                           
 18466                           ;stkvar	_tm @ sp[(-57)+-10]
 18467  0137CC  0EBD               	movlw	-67
 18468  0137CE  006F FF8C  F032    	movff	plusw1,btemp+8
 18469  0137D4  0EBE               	movlw	-66
 18470  0137D6  006F FF8C  F033    	movff	plusw1,btemp+9
 18471  0137DC  0E04               	movlw	4
 18472  0137DE  2432               	addwf	(btemp+8)^0,w,c
 18473  0137E0  6ED9               	movwf	fsr2l,c
 18474  0137E2  0E00               	movlw	0
 18475  0137E4  2033               	addwfc	(btemp+9)^0,w,c
 18476  0137E6  6EDA               	movwf	fsr2h,c
 18477  0137E8  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18478  0137EE  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18479  0137F4  0E3C               	movlw	60
 18480  0137F6  6EE6               	movwf	postinc1,c
 18481  0137F8  0E00               	movlw	0
 18482  0137FA  6EE6               	movwf	postinc1,c
 18483  0137FC  0E00               	movlw	0
 18484  0137FE  6EE6               	movwf	postinc1,c
 18485  013800  0E00               	movlw	0
 18486  013802  6EE6               	movwf	postinc1,c
 18487  013804  0E3C               	movlw	60
 18488  013806  6EE6               	movwf	postinc1,c
 18489  013808  0E00               	movlw	0
 18490  01380A  6EE6               	movwf	postinc1,c
 18491  01380C  0E00               	movlw	0
 18492  01380E  6EE6               	movwf	postinc1,c
 18493  013810  0E00               	movlw	0
 18494  013812  6EE6               	movwf	postinc1,c
 18495                           
 18496                           ;stkvar	_remsecs @ sp[(-65)+41]
 18497  013814  0EE8               	movlw	-24
 18498  013816  006F FF8F FFE6     	movff	plusw1,postinc1
 18499  01381C  006F FF8F FFE6     	movff	plusw1,postinc1
 18500  013822  006F FF8F FFE6     	movff	plusw1,postinc1
 18501  013828  006F FF8F FFE6     	movff	plusw1,postinc1
 18502  01382E  EC10  F0EE         	call	___aldiv	;wreg free
 18503  013832  0060  F0AB  FFE6   	movff	btemp,postinc1
 18504  013838  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 18505  01383E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 18506  013844  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 18507  01384A  EC96  F0F2         	call	___almod	;wreg free
 18508  01384E  0060  F0A8  F034   	movff	btemp,btemp+10
 18509  013854  0060  F0AC  F035   	movff	btemp+1,btemp+11
 18510                           
 18511                           ;stkvar	_tm @ sp[(-57)+-10]
 18512  01385A  0EBD               	movlw	-67
 18513  01385C  006F FF8C  F032    	movff	plusw1,btemp+8
 18514  013862  0EBE               	movlw	-66
 18515  013864  006F FF8C  F033    	movff	plusw1,btemp+9
 18516  01386A  0E02               	movlw	2
 18517  01386C  2432               	addwf	(btemp+8)^0,w,c
 18518  01386E  6ED9               	movwf	fsr2l,c
 18519  013870  0E00               	movlw	0
 18520  013872  2033               	addwfc	(btemp+9)^0,w,c
 18521  013874  6EDA               	movwf	fsr2h,c
 18522  013876  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18523  01387C  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18524  013882  0E3C               	movlw	60
 18525  013884  6EE6               	movwf	postinc1,c
 18526  013886  0E00               	movlw	0
 18527  013888  6EE6               	movwf	postinc1,c
 18528  01388A  0E00               	movlw	0
 18529  01388C  6EE6               	movwf	postinc1,c
 18530  01388E  0E00               	movlw	0
 18531  013890  6EE6               	movwf	postinc1,c
 18532                           
 18533                           ;stkvar	_remsecs @ sp[(-61)+41]
 18534  013892  0EEC               	movlw	-20
 18535  013894  006F FF8F FFE6     	movff	plusw1,postinc1
 18536  01389A  006F FF8F FFE6     	movff	plusw1,postinc1
 18537  0138A0  006F FF8F FFE6     	movff	plusw1,postinc1
 18538  0138A6  006F FF8F FFE6     	movff	plusw1,postinc1
 18539  0138AC  EC96  F0F2         	call	___almod	;wreg free
 18540  0138B0  0060  F0A8  F034   	movff	btemp,btemp+10
 18541  0138B6  0060  F0AC  F035   	movff	btemp+1,btemp+11
 18542                           
 18543                           ;stkvar	_tm @ sp[(-57)+-10]
 18544  0138BC  0EBD               	movlw	-67
 18545  0138BE  006F FF8F FFD9     	movff	plusw1,fsr2l
 18546  0138C4  0EBE               	movlw	-66
 18547  0138C6  006F FF8F FFDA     	movff	plusw1,fsr2h
 18548  0138CC  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18549  0138D2  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18550  0138D8  0E00               	movlw	0
 18551  0138DA  6E2A               	movwf	btemp^0,c
 18552  0138DC  6A2B               	clrf	(btemp+1)^0,c
 18553  0138DE  6A2C               	clrf	(btemp+2)^0,c
 18554  0138E0  6A2D               	clrf	(btemp+3)^0,c
 18555  0138E2                     l3847:
 18556                           
 18557                           ; ___secs_to_tm: autosize = 57, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10
      +                          , argsize = 10, vargsize = 0
 18558  0138E2  0EBD               	movlw	189
 18559  0138E4  26E1               	addwf	fsr1l,f,c
 18560  0138E6  0EFF               	movlw	255
 18561  0138E8  22E2               	addwfc	fsr1h,f,c
 18562  0138EA  0012               	return		;funcret
 18563  0138EC                     __end_of___secs_to_tm:
 18564                           	opt callstack 0
 18565                           
 18566 ;; *************** function ___omul *****************
 18567 ;; Defined at:
 18568 ;;		line 91 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul64.c"
 18569 ;; Parameters:    Size  Location     Type
 18570 ;;  multiplier      8  [STACK] unsigned long long 
 18571 ;;  multiplicand    8  [STACK] unsigned long long 
 18572 ;; Auto vars:     Size  Location     Type
 18573 ;;  product         8  [STACK] unsigned long long 
 18574 ;; Return value:  Size  Location     Type
 18575 ;;                  8  [STACK] unsigned long long 
 18576 ;; Registers used:
 18577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18578 ;; Tracked objects:
 18579 ;;		On entry : 0/0
 18580 ;;		On exit  : 0/0
 18581 ;;		Unchanged: 0/0
 18582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18587 ;;Total ram usage:        0 bytes
 18588 ;; Hardware stack levels used:    1
 18589 ;; Hardware stack levels required when called:   15
 18590 ;; This function calls:
 18591 ;;		Nothing
 18592 ;; This function is called by:
 18593 ;;		___secs_to_tm
 18594 ;;		___year_to_secs
 18595 ;; This function uses a reentrant model
 18596 ;;
 18597                           
 18598                           	psect	text51
 18599  01EAB6                     __ptext51:
 18600                           	opt callstack 0
 18601  01EAB6                     ___omul:
 18602                           	opt callstack 0
 18603                           
 18604                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 18605  01EAB6  0E08               	movlw	8
 18606  01EAB8  26E1               	addwf	fsr1l,f,c
 18607  01EABA  0E00               	movlw	0
 18608  01EABC  22E2               	addwfc	fsr1h,f,c
 18609                           
 18610                           ;stkvar	_product @ sp[(-8)+0]
 18611                           
 18612                           ;incstack = 0
 18613  01EABE  0E07               	movlw	7
 18614  01EAC0  6E2A               	movwf	btemp^0,c
 18615  01EAC2  0EF8               	movlw	-8
 18616  01EAC4                     u8041:
 18617  01EAC4  6AE3               	clrf	plusw1,c
 18618  01EAC6  2AE8               	incf	wreg,f,c
 18619  01EAC8  062A               	decf	btemp^0,f,c
 18620  01EACA  E2FC               	bc	u8041
 18621  01EACC                     l10184:
 18622                           
 18623                           ;stkvar	_multiplier @ sp[(-8)+-8]
 18624  01EACC  0EF0               	movlw	-16
 18625  01EACE  A0E3               	btfss	plusw1,0,c
 18626  01EAD0  D050               	goto	l10188
 18627                           
 18628                           ;stkvar	_multiplicand @ sp[(-8)+-16]
 18629                           ;stkvar	_product @ sp[(-8)+0]
 18630  01EAD2  0EF8               	movlw	-8
 18631  01EAD4  50E3               	movf	plusw1,w,c
 18632  01EAD6  6E2A               	movwf	btemp^0,c
 18633  01EAD8  0EE8               	movlw	-24
 18634  01EADA  50E3               	movf	plusw1,w,c
 18635  01EADC  262A               	addwf	btemp^0,f,c
 18636  01EADE  0EF8               	movlw	-8
 18637  01EAE0  0060  F0AB  FFE3   	movff	btemp,plusw1
 18638  01EAE6  0EF9               	movlw	-7
 18639  01EAE8  50E3               	movf	plusw1,w,c
 18640  01EAEA  6E2A               	movwf	btemp^0,c
 18641  01EAEC  0EE9               	movlw	-23
 18642  01EAEE  50E3               	movf	plusw1,w,c
 18643  01EAF0  222A               	addwfc	btemp^0,f,c
 18644  01EAF2  0EF9               	movlw	-7
 18645  01EAF4  0060  F0AB  FFE3   	movff	btemp,plusw1
 18646  01EAFA  0EFA               	movlw	-6
 18647  01EAFC  50E3               	movf	plusw1,w,c
 18648  01EAFE  6E2A               	movwf	btemp^0,c
 18649  01EB00  0EEA               	movlw	-22
 18650  01EB02  50E3               	movf	plusw1,w,c
 18651  01EB04  222A               	addwfc	btemp^0,f,c
 18652  01EB06  0EFA               	movlw	-6
 18653  01EB08  0060  F0AB  FFE3   	movff	btemp,plusw1
 18654  01EB0E  0EFB               	movlw	-5
 18655  01EB10  50E3               	movf	plusw1,w,c
 18656  01EB12  6E2A               	movwf	btemp^0,c
 18657  01EB14  0EEB               	movlw	-21
 18658  01EB16  50E3               	movf	plusw1,w,c
 18659  01EB18  222A               	addwfc	btemp^0,f,c
 18660  01EB1A  0EFB               	movlw	-5
 18661  01EB1C  0060  F0AB  FFE3   	movff	btemp,plusw1
 18662  01EB22  0EFC               	movlw	-4
 18663  01EB24  50E3               	movf	plusw1,w,c
 18664  01EB26  6E2A               	movwf	btemp^0,c
 18665  01EB28  0EEC               	movlw	-20
 18666  01EB2A  50E3               	movf	plusw1,w,c
 18667  01EB2C  222A               	addwfc	btemp^0,f,c
 18668  01EB2E  0EFC               	movlw	-4
 18669  01EB30  0060  F0AB  FFE3   	movff	btemp,plusw1
 18670  01EB36  0EFD               	movlw	-3
 18671  01EB38  50E3               	movf	plusw1,w,c
 18672  01EB3A  6E2A               	movwf	btemp^0,c
 18673  01EB3C  0EED               	movlw	-19
 18674  01EB3E  50E3               	movf	plusw1,w,c
 18675  01EB40  222A               	addwfc	btemp^0,f,c
 18676  01EB42  0EFD               	movlw	-3
 18677  01EB44  0060  F0AB  FFE3   	movff	btemp,plusw1
 18678  01EB4A  0EFE               	movlw	-2
 18679  01EB4C  50E3               	movf	plusw1,w,c
 18680  01EB4E  6E2A               	movwf	btemp^0,c
 18681  01EB50  0EEE               	movlw	-18
 18682  01EB52  50E3               	movf	plusw1,w,c
 18683  01EB54  222A               	addwfc	btemp^0,f,c
 18684  01EB56  0EFE               	movlw	-2
 18685  01EB58  0060  F0AB  FFE3   	movff	btemp,plusw1
 18686  01EB5E  0EFF               	movlw	-1
 18687  01EB60  50E3               	movf	plusw1,w,c
 18688  01EB62  6E2A               	movwf	btemp^0,c
 18689  01EB64  0EEF               	movlw	-17
 18690  01EB66  50E3               	movf	plusw1,w,c
 18691  01EB68  222A               	addwfc	btemp^0,f,c
 18692  01EB6A  0EFF               	movlw	-1
 18693  01EB6C  0060  F0AB  FFE3   	movff	btemp,plusw1
 18694  01EB72                     l10188:
 18695                           
 18696                           ;stkvar	_multiplicand @ sp[(-8)+-16]
 18697  01EB72  90D8               	bcf	status,0,c
 18698  01EB74  0EE8               	movlw	-24
 18699  01EB76  36E3               	rlcf	plusw1,f,c
 18700  01EB78  0EE9               	movlw	-23
 18701  01EB7A  36E3               	rlcf	plusw1,f,c
 18702  01EB7C  0EEA               	movlw	-22
 18703  01EB7E  36E3               	rlcf	plusw1,f,c
 18704  01EB80  0EEB               	movlw	-21
 18705  01EB82  36E3               	rlcf	plusw1,f,c
 18706  01EB84  0EEC               	movlw	-20
 18707  01EB86  36E3               	rlcf	plusw1,f,c
 18708  01EB88  0EED               	movlw	-19
 18709  01EB8A  36E3               	rlcf	plusw1,f,c
 18710  01EB8C  0EEE               	movlw	-18
 18711  01EB8E  36E3               	rlcf	plusw1,f,c
 18712  01EB90  0EEF               	movlw	-17
 18713  01EB92  36E3               	rlcf	plusw1,f,c
 18714                           
 18715                           ;stkvar	_multiplier @ sp[(-8)+-8]
 18716  01EB94  90D8               	bcf	status,0,c
 18717  01EB96  0EF7               	movlw	-9
 18718  01EB98  32E3               	rrcf	plusw1,f,c
 18719  01EB9A  0EF6               	movlw	-10
 18720  01EB9C  32E3               	rrcf	plusw1,f,c
 18721  01EB9E  0EF5               	movlw	-11
 18722  01EBA0  32E3               	rrcf	plusw1,f,c
 18723  01EBA2  0EF4               	movlw	-12
 18724  01EBA4  32E3               	rrcf	plusw1,f,c
 18725  01EBA6  0EF3               	movlw	-13
 18726  01EBA8  32E3               	rrcf	plusw1,f,c
 18727  01EBAA  0EF2               	movlw	-14
 18728  01EBAC  32E3               	rrcf	plusw1,f,c
 18729  01EBAE  0EF1               	movlw	-15
 18730  01EBB0  32E3               	rrcf	plusw1,f,c
 18731  01EBB2  0EF0               	movlw	-16
 18732  01EBB4  32E3               	rrcf	plusw1,f,c
 18733                           
 18734                           ;stkvar	_multiplier @ sp[(-8)+-8]
 18735  01EBB6  0EF0               	movlw	-16
 18736  01EBB8  50E3               	movf	plusw1,w,c
 18737  01EBBA  E188               	bnz	l10184
 18738  01EBBC  0EF1               	movlw	-15
 18739  01EBBE  50E3               	movf	plusw1,w,c
 18740  01EBC0  E185               	bnz	l10184
 18741  01EBC2  0EF2               	movlw	-14
 18742  01EBC4  50E3               	movf	plusw1,w,c
 18743  01EBC6  E182               	bnz	l10184
 18744  01EBC8  0EF3               	movlw	-13
 18745  01EBCA  50E3               	movf	plusw1,w,c
 18746  01EBCC  E10C               	bnz	u8061
 18747  01EBCE  0EF4               	movlw	-12
 18748  01EBD0  50E3               	movf	plusw1,w,c
 18749  01EBD2  E109               	bnz	u8061
 18750  01EBD4  0EF5               	movlw	-11
 18751  01EBD6  50E3               	movf	plusw1,w,c
 18752  01EBD8  E106               	bnz	u8061
 18753  01EBDA  0EF6               	movlw	-10
 18754  01EBDC  50E3               	movf	plusw1,w,c
 18755  01EBDE  E103               	bnz	u8061
 18756  01EBE0  0EF7               	movlw	-9
 18757  01EBE2  50E3               	movf	plusw1,w,c
 18758  01EBE4  A4D8               	btfss	status,2,c
 18759  01EBE6                     u8061:
 18760  01EBE6  D772               	goto	l10184
 18761                           
 18762                           ;stkvar	_product @ sp[(-8)+0]
 18763  01EBE8  0EF8               	movlw	248
 18764  01EBEA  24E1               	addwf	fsr1l,w,c
 18765  01EBEC  6ED9               	movwf	fsr2l,c
 18766  01EBEE  0EFF               	movlw	255
 18767  01EBF0  20E2               	addwfc	fsr1h,w,c
 18768  01EBF2  6EDA               	movwf	fsr2h,c
 18769                           
 18770                           ;stkvar	?___omul @ sp[(-8)+-8]
 18771  01EBF4  0E08               	movlw	8
 18772  01EBF6  6E2A               	movwf	btemp^0,c
 18773  01EBF8  0EF0               	movlw	-16
 18774  01EBFA                     us807999:
 18775  01EBFA  006F FF7B FFE3     	movff	postinc2,plusw1
 18776  01EC00  28E8               	incf	wreg,w,c
 18777  01EC02  2E2A               	decfsz	btemp^0,f,c
 18778  01EC04  D7FA               	bra	us807999
 18779                           
 18780                           ; ___omul: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsi
      +                          ze = 16, vargsize = 0
 18781  01EC06  0EF8               	movlw	248
 18782  01EC08  26E1               	addwf	fsr1l,f,c
 18783  01EC0A  0EFF               	movlw	255
 18784  01EC0C  22E2               	addwfc	fsr1h,f,c
 18785  01EC0E  0012               	return		;funcret
 18786  01EC10                     __end_of___omul:
 18787                           	opt callstack 0
 18788                           
 18789 ;; *************** function ___lmul *****************
 18790 ;; Defined at:
 18791 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul32.c"
 18792 ;; Parameters:    Size  Location     Type
 18793 ;;  multiplier      4  [STACK] unsigned long 
 18794 ;;  multiplicand    4  [STACK] unsigned long 
 18795 ;; Auto vars:     Size  Location     Type
 18796 ;;  product         4  [STACK] unsigned long 
 18797 ;; Return value:  Size  Location     Type
 18798 ;;                  4  [STACK] unsigned long 
 18799 ;; Registers used:
 18800 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 18801 ;; Tracked objects:
 18802 ;;		On entry : 0/0
 18803 ;;		On exit  : 0/0
 18804 ;;		Unchanged: 0/0
 18805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18810 ;;Total ram usage:        0 bytes
 18811 ;; Hardware stack levels used:    1
 18812 ;; Hardware stack levels required when called:   15
 18813 ;; This function calls:
 18814 ;;		Nothing
 18815 ;; This function is called by:
 18816 ;;		___secs_to_tm
 18817 ;;		_rule_to_secs
 18818 ;;		___year_to_secs
 18819 ;; This function uses a reentrant model
 18820 ;;
 18821                           
 18822                           	psect	text52
 18823  01FEA8                     __ptext52:
 18824                           	opt callstack 0
 18825  01FEA8                     ___lmul:
 18826                           	opt callstack 0
 18827                           
 18828                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18829  01FEA8  52E6               	movf	postinc1,f,c
 18830  01FEAA  52E6               	movf	postinc1,f,c
 18831  01FEAC  52E6               	movf	postinc1,f,c
 18832  01FEAE  52E6               	movf	postinc1,f,c
 18833                           
 18834                           ;stkvar	_product @ sp[(-4)+0]
 18835                           
 18836                           ;incstack = 0
 18837  01FEB0  0EFC               	movlw	-4
 18838  01FEB2  6AE3               	clrf	plusw1,c
 18839  01FEB4  0EFD               	movlw	-3
 18840  01FEB6  6AE3               	clrf	plusw1,c
 18841  01FEB8  0EFE               	movlw	-2
 18842  01FEBA  6AE3               	clrf	plusw1,c
 18843  01FEBC  0EFF               	movlw	-1
 18844  01FEBE  6AE3               	clrf	plusw1,c
 18845  01FEC0                     l2731:
 18846                           
 18847                           ;stkvar	_multiplier @ sp[(-4)+-4]
 18848  01FEC0  0EF8               	movlw	-8
 18849  01FEC2  A0E3               	btfss	plusw1,0,c
 18850  01FEC4  D028               	goto	l10174
 18851                           
 18852                           ;stkvar	_multiplicand @ sp[(-4)+-8]
 18853                           ;stkvar	_product @ sp[(-4)+0]
 18854  01FEC6  0EFC               	movlw	-4
 18855  01FEC8  50E3               	movf	plusw1,w,c
 18856  01FECA  6E2A               	movwf	btemp^0,c
 18857  01FECC  0EF4               	movlw	-12
 18858  01FECE  50E3               	movf	plusw1,w,c
 18859  01FED0  262A               	addwf	btemp^0,f,c
 18860  01FED2  0EFC               	movlw	-4
 18861  01FED4  0060  F0AB  FFE3   	movff	btemp,plusw1
 18862  01FEDA  0EFD               	movlw	-3
 18863  01FEDC  50E3               	movf	plusw1,w,c
 18864  01FEDE  6E2A               	movwf	btemp^0,c
 18865  01FEE0  0EF5               	movlw	-11
 18866  01FEE2  50E3               	movf	plusw1,w,c
 18867  01FEE4  222A               	addwfc	btemp^0,f,c
 18868  01FEE6  0EFD               	movlw	-3
 18869  01FEE8  0060  F0AB  FFE3   	movff	btemp,plusw1
 18870  01FEEE  0EFE               	movlw	-2
 18871  01FEF0  50E3               	movf	plusw1,w,c
 18872  01FEF2  6E2A               	movwf	btemp^0,c
 18873  01FEF4  0EF6               	movlw	-10
 18874  01FEF6  50E3               	movf	plusw1,w,c
 18875  01FEF8  222A               	addwfc	btemp^0,f,c
 18876  01FEFA  0EFE               	movlw	-2
 18877  01FEFC  0060  F0AB  FFE3   	movff	btemp,plusw1
 18878  01FF02  0EFF               	movlw	-1
 18879  01FF04  50E3               	movf	plusw1,w,c
 18880  01FF06  6E2A               	movwf	btemp^0,c
 18881  01FF08  0EF7               	movlw	-9
 18882  01FF0A  50E3               	movf	plusw1,w,c
 18883  01FF0C  222A               	addwfc	btemp^0,f,c
 18884  01FF0E  0EFF               	movlw	-1
 18885  01FF10  0060  F0AB  FFE3   	movff	btemp,plusw1
 18886  01FF16                     l10174:
 18887                           
 18888                           ;stkvar	_multiplicand @ sp[(-4)+-8]
 18889  01FF16  90D8               	bcf	status,0,c
 18890  01FF18  0EF4               	movlw	-12
 18891  01FF1A  36E3               	rlcf	plusw1,f,c
 18892  01FF1C  0EF5               	movlw	-11
 18893  01FF1E  36E3               	rlcf	plusw1,f,c
 18894  01FF20  0EF6               	movlw	-10
 18895  01FF22  36E3               	rlcf	plusw1,f,c
 18896  01FF24  0EF7               	movlw	-9
 18897  01FF26  36E3               	rlcf	plusw1,f,c
 18898                           
 18899                           ;stkvar	_multiplier @ sp[(-4)+-4]
 18900  01FF28  90D8               	bcf	status,0,c
 18901  01FF2A  0EFB               	movlw	-5
 18902  01FF2C  32E3               	rrcf	plusw1,f,c
 18903  01FF2E  0EFA               	movlw	-6
 18904  01FF30  32E3               	rrcf	plusw1,f,c
 18905  01FF32  0EF9               	movlw	-7
 18906  01FF34  32E3               	rrcf	plusw1,f,c
 18907  01FF36  0EF8               	movlw	-8
 18908  01FF38  32E3               	rrcf	plusw1,f,c
 18909                           
 18910                           ;stkvar	_multiplier @ sp[(-4)+-4]
 18911  01FF3A  0EF8               	movlw	-8
 18912  01FF3C  50E3               	movf	plusw1,w,c
 18913  01FF3E  E1C0               	bnz	l2731
 18914  01FF40  0EF9               	movlw	-7
 18915  01FF42  50E3               	movf	plusw1,w,c
 18916  01FF44  E1BD               	bnz	l2731
 18917  01FF46  0EFA               	movlw	-6
 18918  01FF48  50E3               	movf	plusw1,w,c
 18919  01FF4A  E1BA               	bnz	l2731
 18920  01FF4C  0EFB               	movlw	-5
 18921  01FF4E  50E3               	movf	plusw1,w,c
 18922  01FF50  A4D8               	btfss	status,2,c
 18923  01FF52  D7B6               	goto	l2731
 18924                           
 18925                           ;stkvar	_product @ sp[(-4)+0]
 18926  01FF54  0EFC               	movlw	-4
 18927  01FF56  006F FF8C  F02A    	movff	plusw1,btemp
 18928  01FF5C  0EFD               	movlw	-3
 18929  01FF5E  006F FF8C  F02B    	movff	plusw1,btemp+1
 18930  01FF64  0EFE               	movlw	-2
 18931  01FF66  006F FF8C  F02C    	movff	plusw1,btemp+2
 18932  01FF6C  0EFF               	movlw	-1
 18933  01FF6E  006F FF8C  F02D    	movff	plusw1,btemp+3
 18934                           
 18935                           ; ___lmul: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 18936  01FF74  0EF4               	movlw	244
 18937  01FF76  26E1               	addwf	fsr1l,f,c
 18938  01FF78  0EFF               	movlw	255
 18939  01FF7A  22E2               	addwfc	fsr1h,f,c
 18940  01FF7C  0012               	return		;funcret
 18941  01FF7E                     __end_of___lmul:
 18942                           	opt callstack 0
 18943                           
 18944 ;; *************** function ___almod *****************
 18945 ;; Defined at:
 18946 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/almod.c"
 18947 ;; Parameters:    Size  Location     Type
 18948 ;;  dividend        4  [STACK] long 
 18949 ;;  divisor         4  [STACK] long 
 18950 ;; Auto vars:     Size  Location     Type
 18951 ;;  sign            1  [STACK] unsigned char 
 18952 ;;  counter         1  [STACK] unsigned char 
 18953 ;; Return value:  Size  Location     Type
 18954 ;;                  4  [STACK] long 
 18955 ;; Registers used:
 18956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 18957 ;; Tracked objects:
 18958 ;;		On entry : 0/39
 18959 ;;		On exit  : 0/0
 18960 ;;		Unchanged: 0/0
 18961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18966 ;;Total ram usage:        0 bytes
 18967 ;; Hardware stack levels used:    1
 18968 ;; Hardware stack levels required when called:   15
 18969 ;; This function calls:
 18970 ;;		Nothing
 18971 ;; This function is called by:
 18972 ;;		___secs_to_tm
 18973 ;; This function uses a reentrant model
 18974 ;;
 18975                           
 18976                           	psect	text53
 18977  01E52C                     __ptext53:
 18978                           	opt callstack 0
 18979  01E52C                     ___almod:
 18980                           	opt callstack 0
 18981                           
 18982                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18983  01E52C  52E6               	movf	postinc1,f,c
 18984  01E52E  52E6               	movf	postinc1,f,c
 18985                           
 18986                           ;stkvar	_sign @ sp[(-2)+0]
 18987                           
 18988                           ;incstack = 0
 18989  01E530  0EFE               	movlw	-2
 18990  01E532  6AE3               	clrf	plusw1,c
 18991                           
 18992                           ;stkvar	_dividend @ sp[(-2)+-4]
 18993  01E534  0EFD               	movlw	-3
 18994  01E536  AEE3               	btfss	plusw1,7,c
 18995  01E538  D014               	goto	l11952
 18996                           
 18997                           ;stkvar	_dividend @ sp[(-2)+-4]
 18998                           ;stkvar	_dividend @ sp[(-2)+-4]
 18999  01E53A  0EFA               	movlw	-6
 19000  01E53C  6CE3               	negf	plusw1,c
 19001  01E53E  0EFB               	movlw	-5
 19002  01E540  1EE3               	comf	plusw1,f,c
 19003  01E542  0EFC               	movlw	-4
 19004  01E544  1EE3               	comf	plusw1,f,c
 19005  01E546  0EFD               	movlw	-3
 19006  01E548  1EE3               	comf	plusw1,f,c
 19007  01E54A  E308               	bnc	u11180
 19008  01E54C  0EFB               	movlw	-5
 19009  01E54E  2AE3               	incf	plusw1,f,c
 19010  01E550  E305               	bnc	u11180
 19011  01E552  0EFC               	movlw	-4
 19012  01E554  2AE3               	incf	plusw1,f,c
 19013  01E556  E302               	bnc	u11180
 19014  01E558  0EFD               	movlw	-3
 19015  01E55A  2AE3               	incf	plusw1,f,c
 19016  01E55C                     u11180:
 19017                           
 19018                           ;stkvar	_sign @ sp[(-2)+0]
 19019  01E55C  0EFE               	movlw	-2
 19020  01E55E  6AE3               	clrf	plusw1,c
 19021  01E560  2AE3               	incf	plusw1,f,c
 19022  01E562                     l11952:
 19023                           
 19024                           ;stkvar	_divisor @ sp[(-2)+-8]
 19025  01E562  0EF9               	movlw	-7
 19026  01E564  AEE3               	btfss	plusw1,7,c
 19027  01E566  D011               	goto	u11200
 19028                           
 19029                           ;stkvar	_divisor @ sp[(-2)+-8]
 19030                           ;stkvar	_divisor @ sp[(-2)+-8]
 19031  01E568  0EF6               	movlw	-10
 19032  01E56A  6CE3               	negf	plusw1,c
 19033  01E56C  0EF7               	movlw	-9
 19034  01E56E  1EE3               	comf	plusw1,f,c
 19035  01E570  0EF8               	movlw	-8
 19036  01E572  1EE3               	comf	plusw1,f,c
 19037  01E574  0EF9               	movlw	-7
 19038  01E576  1EE3               	comf	plusw1,f,c
 19039  01E578  E308               	bnc	u11200
 19040  01E57A  0EF7               	movlw	-9
 19041  01E57C  2AE3               	incf	plusw1,f,c
 19042  01E57E  E305               	bnc	u11200
 19043  01E580  0EF8               	movlw	-8
 19044  01E582  2AE3               	incf	plusw1,f,c
 19045  01E584  E302               	bnc	u11200
 19046  01E586  0EF9               	movlw	-7
 19047  01E588  2AE3               	incf	plusw1,f,c
 19048  01E58A                     u11200:
 19049                           
 19050                           ;stkvar	_divisor @ sp[(-2)+-8]
 19051  01E58A  0EF6               	movlw	-10
 19052  01E58C  50E3               	movf	plusw1,w,c
 19053  01E58E  E10A               	bnz	u11210
 19054  01E590  0EF7               	movlw	-9
 19055  01E592  50E3               	movf	plusw1,w,c
 19056  01E594  E107               	bnz	u11210
 19057  01E596  0EF8               	movlw	-8
 19058  01E598  50E3               	movf	plusw1,w,c
 19059  01E59A  E104               	bnz	u11210
 19060  01E59C  0EF9               	movlw	-7
 19061  01E59E  50E3               	movf	plusw1,w,c
 19062  01E5A0  B4D8               	btfsc	status,2,c
 19063  01E5A2  D04D               	goto	u11240
 19064  01E5A4                     u11210:
 19065                           
 19066                           ;stkvar	_counter @ sp[(-2)+1]
 19067  01E5A4  0EFF               	movlw	-1
 19068  01E5A6  6AE3               	clrf	plusw1,c
 19069  01E5A8  D00A               	goto	L17
 19070  01E5AA                     l11960:
 19071                           
 19072                           ;stkvar	_divisor @ sp[(-2)+-8]
 19073  01E5AA  90D8               	bcf	status,0,c
 19074  01E5AC  0EF6               	movlw	-10
 19075  01E5AE  36E3               	rlcf	plusw1,f,c
 19076  01E5B0  0EF7               	movlw	-9
 19077  01E5B2  36E3               	rlcf	plusw1,f,c
 19078  01E5B4  0EF8               	movlw	-8
 19079  01E5B6  36E3               	rlcf	plusw1,f,c
 19080  01E5B8  0EF9               	movlw	-7
 19081  01E5BA  36E3               	rlcf	plusw1,f,c
 19082                           
 19083                           ;stkvar	_counter @ sp[(-2)+1]
 19084  01E5BC  0EFF               	movlw	-1
 19085  01E5BE                     L17:
 19086  01E5BE  2AE3               	incf	plusw1,f,c
 19087                           
 19088                           ;stkvar	_divisor @ sp[(-2)+-8]
 19089  01E5C0  0EF9               	movlw	-7
 19090  01E5C2  AEE3               	btfss	plusw1,7,c
 19091  01E5C4  D7F2               	goto	l11960
 19092  01E5C6                     u11220:
 19093                           
 19094                           ;stkvar	_divisor @ sp[(-2)+-8]
 19095                           ;stkvar	_dividend @ sp[(-2)+-4]
 19096  01E5C6  50E1               	movf	fsr1l,w,c
 19097  01E5C8  0FFA               	addlw	-6
 19098  01E5CA  6ED9               	movwf	fsr2l,c
 19099  01E5CC  50E2               	movf	fsr1h,w,c
 19100  01E5CE  6EDA               	movwf	fsr2h,c
 19101  01E5D0  0EFF               	movlw	255
 19102  01E5D2  22DA               	addwfc	fsr2h,f,c
 19103  01E5D4  0EF6               	movlw	-10
 19104  01E5D6  50E3               	movf	plusw1,w,c
 19105  01E5D8  5CDE               	subwf	postinc2,w,c
 19106  01E5DA  0EF7               	movlw	-9
 19107  01E5DC  50E3               	movf	plusw1,w,c
 19108  01E5DE  58DE               	subwfb	postinc2,w,c
 19109  01E5E0  0EF8               	movlw	-8
 19110  01E5E2  50E3               	movf	plusw1,w,c
 19111  01E5E4  58DE               	subwfb	postinc2,w,c
 19112  01E5E6  0EF9               	movlw	-7
 19113  01E5E8  50E3               	movf	plusw1,w,c
 19114  01E5EA  58DE               	subwfb	postinc2,w,c
 19115  01E5EC  A0D8               	btfss	status,0,c
 19116  01E5EE  D013               	goto	l11968
 19117                           
 19118                           ;stkvar	_divisor @ sp[(-2)+-8]
 19119                           ;stkvar	_dividend @ sp[(-2)+-4]
 19120  01E5F0  50E1               	movf	fsr1l,w,c
 19121  01E5F2  0FFA               	addlw	-6
 19122  01E5F4  6ED9               	movwf	fsr2l,c
 19123  01E5F6  50E2               	movf	fsr1h,w,c
 19124  01E5F8  6EDA               	movwf	fsr2h,c
 19125  01E5FA  0EFF               	movlw	255
 19126  01E5FC  22DA               	addwfc	fsr2h,f,c
 19127  01E5FE  0EF6               	movlw	-10
 19128  01E600  50E3               	movf	plusw1,w,c
 19129  01E602  5EDE               	subwf	postinc2,f,c
 19130  01E604  0EF7               	movlw	-9
 19131  01E606  50E3               	movf	plusw1,w,c
 19132  01E608  5ADE               	subwfb	postinc2,f,c
 19133  01E60A  0EF8               	movlw	-8
 19134  01E60C  50E3               	movf	plusw1,w,c
 19135  01E60E  5ADE               	subwfb	postinc2,f,c
 19136  01E610  0EF9               	movlw	-7
 19137  01E612  50E3               	movf	plusw1,w,c
 19138  01E614  5ADE               	subwfb	postinc2,f,c
 19139  01E616                     l11968:
 19140                           
 19141                           ;stkvar	_divisor @ sp[(-2)+-8]
 19142  01E616  90D8               	bcf	status,0,c
 19143  01E618  0EF9               	movlw	-7
 19144  01E61A  32E3               	rrcf	plusw1,f,c
 19145  01E61C  0EF8               	movlw	-8
 19146  01E61E  32E3               	rrcf	plusw1,f,c
 19147  01E620  0EF7               	movlw	-9
 19148  01E622  32E3               	rrcf	plusw1,f,c
 19149  01E624  0EF6               	movlw	-10
 19150  01E626  32E3               	rrcf	plusw1,f,c
 19151                           
 19152                           ;stkvar	_counter @ sp[(-2)+1]
 19153  01E628  0EFF               	movlw	-1
 19154  01E62A  50E3               	movf	plusw1,w,c
 19155  01E62C  6E2A               	movwf	btemp^0,c
 19156  01E62E  0E01               	movlw	1
 19157  01E630  5E2A               	subwf	btemp^0,f,c
 19158  01E632  0EFF               	movlw	-1
 19159  01E634  0060  F0AB  FFE3   	movff	btemp,plusw1
 19160  01E63A  A4D8               	btfss	status,2,c
 19161  01E63C  D7C4               	goto	u11220
 19162  01E63E                     u11240:
 19163                           
 19164                           ;stkvar	_sign @ sp[(-2)+0]
 19165  01E63E  0EFE               	movlw	-2
 19166  01E640  50E3               	movf	plusw1,w,c
 19167  01E642  B4D8               	btfsc	status,2,c
 19168  01E644  D011               	goto	u11260
 19169                           
 19170                           ;stkvar	_dividend @ sp[(-2)+-4]
 19171                           ;stkvar	_dividend @ sp[(-2)+-4]
 19172  01E646  0EFA               	movlw	-6
 19173  01E648  6CE3               	negf	plusw1,c
 19174  01E64A  0EFB               	movlw	-5
 19175  01E64C  1EE3               	comf	plusw1,f,c
 19176  01E64E  0EFC               	movlw	-4
 19177  01E650  1EE3               	comf	plusw1,f,c
 19178  01E652  0EFD               	movlw	-3
 19179  01E654  1EE3               	comf	plusw1,f,c
 19180  01E656  E308               	bnc	u11260
 19181  01E658  0EFB               	movlw	-5
 19182  01E65A  2AE3               	incf	plusw1,f,c
 19183  01E65C  E305               	bnc	u11260
 19184  01E65E  0EFC               	movlw	-4
 19185  01E660  2AE3               	incf	plusw1,f,c
 19186  01E662  E302               	bnc	u11260
 19187  01E664  0EFD               	movlw	-3
 19188  01E666  2AE3               	incf	plusw1,f,c
 19189  01E668                     u11260:
 19190                           
 19191                           ;stkvar	_dividend @ sp[(-2)+-4]
 19192  01E668  0EFA               	movlw	-6
 19193  01E66A  006F FF8C  F02A    	movff	plusw1,btemp
 19194  01E670  0EFB               	movlw	-5
 19195  01E672  006F FF8C  F02B    	movff	plusw1,btemp+1
 19196  01E678  0EFC               	movlw	-4
 19197  01E67A  006F FF8C  F02C    	movff	plusw1,btemp+2
 19198  01E680  0EFD               	movlw	-3
 19199  01E682  006F FF8C  F02D    	movff	plusw1,btemp+3
 19200                           
 19201                           ; ___almod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 19202  01E688  0EF6               	movlw	246
 19203  01E68A  26E1               	addwf	fsr1l,f,c
 19204  01E68C  0EFF               	movlw	255
 19205  01E68E  22E2               	addwfc	fsr1h,f,c
 19206  01E690  0012               	return		;funcret
 19207  01E692                     __end_of___almod:
 19208                           	opt callstack 0
 19209                           
 19210 ;; *************** function ___aldiv *****************
 19211 ;; Defined at:
 19212 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aldiv.c"
 19213 ;; Parameters:    Size  Location     Type
 19214 ;;  dividend        4  [STACK] long 
 19215 ;;  divisor         4  [STACK] long 
 19216 ;; Auto vars:     Size  Location     Type
 19217 ;;  quotient        4  [STACK] long 
 19218 ;;  sign            1  [STACK] unsigned char 
 19219 ;;  counter         1  [STACK] unsigned char 
 19220 ;; Return value:  Size  Location     Type
 19221 ;;                  4  [STACK] long 
 19222 ;; Registers used:
 19223 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 19224 ;; Tracked objects:
 19225 ;;		On entry : 0/0
 19226 ;;		On exit  : 0/0
 19227 ;;		Unchanged: 0/0
 19228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19233 ;;Total ram usage:        0 bytes
 19234 ;; Hardware stack levels used:    1
 19235 ;; Hardware stack levels required when called:   15
 19236 ;; This function calls:
 19237 ;;		Nothing
 19238 ;; This function is called by:
 19239 ;;		___secs_to_tm
 19240 ;;		_rule_to_secs
 19241 ;; This function uses a reentrant model
 19242 ;;
 19243                           
 19244                           	psect	text54
 19245  01DC20                     __ptext54:
 19246                           	opt callstack 0
 19247  01DC20                     ___aldiv:
 19248                           	opt callstack 0
 19249                           
 19250                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19251  01DC20  0E06               	movlw	6
 19252  01DC22  26E1               	addwf	fsr1l,f,c
 19253  01DC24  0E00               	movlw	0
 19254  01DC26  22E2               	addwfc	fsr1h,f,c
 19255                           
 19256                           ;stkvar	_sign @ sp[(-6)+4]
 19257                           
 19258                           ;incstack = 0
 19259  01DC28  0EFE               	movlw	-2
 19260  01DC2A  6AE3               	clrf	plusw1,c
 19261                           
 19262                           ;stkvar	_divisor @ sp[(-6)+-8]
 19263  01DC2C  0EF5               	movlw	-11
 19264  01DC2E  AEE3               	btfss	plusw1,7,c
 19265  01DC30  D014               	goto	l11494
 19266                           
 19267                           ;stkvar	_divisor @ sp[(-6)+-8]
 19268                           ;stkvar	_divisor @ sp[(-6)+-8]
 19269  01DC32  0EF2               	movlw	-14
 19270  01DC34  6CE3               	negf	plusw1,c
 19271  01DC36  0EF3               	movlw	-13
 19272  01DC38  1EE3               	comf	plusw1,f,c
 19273  01DC3A  0EF4               	movlw	-12
 19274  01DC3C  1EE3               	comf	plusw1,f,c
 19275  01DC3E  0EF5               	movlw	-11
 19276  01DC40  1EE3               	comf	plusw1,f,c
 19277  01DC42  E308               	bnc	u10500
 19278  01DC44  0EF3               	movlw	-13
 19279  01DC46  2AE3               	incf	plusw1,f,c
 19280  01DC48  E305               	bnc	u10500
 19281  01DC4A  0EF4               	movlw	-12
 19282  01DC4C  2AE3               	incf	plusw1,f,c
 19283  01DC4E  E302               	bnc	u10500
 19284  01DC50  0EF5               	movlw	-11
 19285  01DC52  2AE3               	incf	plusw1,f,c
 19286  01DC54                     u10500:
 19287                           
 19288                           ;stkvar	_sign @ sp[(-6)+4]
 19289  01DC54  0EFE               	movlw	-2
 19290  01DC56  6AE3               	clrf	plusw1,c
 19291  01DC58  2AE3               	incf	plusw1,f,c
 19292  01DC5A                     l11494:
 19293                           
 19294                           ;stkvar	_dividend @ sp[(-6)+-4]
 19295  01DC5A  0EF9               	movlw	-7
 19296  01DC5C  AEE3               	btfss	plusw1,7,c
 19297  01DC5E  D013               	goto	l11500
 19298                           
 19299                           ;stkvar	_dividend @ sp[(-6)+-4]
 19300                           ;stkvar	_dividend @ sp[(-6)+-4]
 19301  01DC60  0EF6               	movlw	-10
 19302  01DC62  6CE3               	negf	plusw1,c
 19303  01DC64  0EF7               	movlw	-9
 19304  01DC66  1EE3               	comf	plusw1,f,c
 19305  01DC68  0EF8               	movlw	-8
 19306  01DC6A  1EE3               	comf	plusw1,f,c
 19307  01DC6C  0EF9               	movlw	-7
 19308  01DC6E  1EE3               	comf	plusw1,f,c
 19309  01DC70  E308               	bnc	u10520
 19310  01DC72  0EF7               	movlw	-9
 19311  01DC74  2AE3               	incf	plusw1,f,c
 19312  01DC76  E305               	bnc	u10520
 19313  01DC78  0EF8               	movlw	-8
 19314  01DC7A  2AE3               	incf	plusw1,f,c
 19315  01DC7C  E302               	bnc	u10520
 19316  01DC7E  0EF9               	movlw	-7
 19317  01DC80  2AE3               	incf	plusw1,f,c
 19318  01DC82                     u10520:
 19319                           
 19320                           ;stkvar	_sign @ sp[(-6)+4]
 19321  01DC82  0EFE               	movlw	-2
 19322  01DC84  70E3               	btg	plusw1,0,c
 19323  01DC86                     l11500:
 19324                           
 19325                           ;stkvar	_quotient @ sp[(-6)+0]
 19326  01DC86  0EFA               	movlw	-6
 19327  01DC88  6AE3               	clrf	plusw1,c
 19328  01DC8A  0EFB               	movlw	-5
 19329  01DC8C  6AE3               	clrf	plusw1,c
 19330  01DC8E  0EFC               	movlw	-4
 19331  01DC90  6AE3               	clrf	plusw1,c
 19332  01DC92  0EFD               	movlw	-3
 19333  01DC94  6AE3               	clrf	plusw1,c
 19334                           
 19335                           ;stkvar	_divisor @ sp[(-6)+-8]
 19336  01DC96  0EF2               	movlw	-14
 19337  01DC98  50E3               	movf	plusw1,w,c
 19338  01DC9A  E10A               	bnz	u10530
 19339  01DC9C  0EF3               	movlw	-13
 19340  01DC9E  50E3               	movf	plusw1,w,c
 19341  01DCA0  E107               	bnz	u10530
 19342  01DCA2  0EF4               	movlw	-12
 19343  01DCA4  50E3               	movf	plusw1,w,c
 19344  01DCA6  E104               	bnz	u10530
 19345  01DCA8  0EF5               	movlw	-11
 19346  01DCAA  50E3               	movf	plusw1,w,c
 19347  01DCAC  B4D8               	btfsc	status,2,c
 19348  01DCAE  D058               	goto	u10560
 19349  01DCB0                     u10530:
 19350                           
 19351                           ;stkvar	_counter @ sp[(-6)+5]
 19352  01DCB0  0EFF               	movlw	-1
 19353  01DCB2  6AE3               	clrf	plusw1,c
 19354  01DCB4  D00A               	goto	L18
 19355  01DCB6                     l11506:
 19356                           
 19357                           ;stkvar	_divisor @ sp[(-6)+-8]
 19358  01DCB6  90D8               	bcf	status,0,c
 19359  01DCB8  0EF2               	movlw	-14
 19360  01DCBA  36E3               	rlcf	plusw1,f,c
 19361  01DCBC  0EF3               	movlw	-13
 19362  01DCBE  36E3               	rlcf	plusw1,f,c
 19363  01DCC0  0EF4               	movlw	-12
 19364  01DCC2  36E3               	rlcf	plusw1,f,c
 19365  01DCC4  0EF5               	movlw	-11
 19366  01DCC6  36E3               	rlcf	plusw1,f,c
 19367                           
 19368                           ;stkvar	_counter @ sp[(-6)+5]
 19369  01DCC8  0EFF               	movlw	-1
 19370  01DCCA                     L18:
 19371  01DCCA  2AE3               	incf	plusw1,f,c
 19372                           
 19373                           ;stkvar	_divisor @ sp[(-6)+-8]
 19374  01DCCC  0EF5               	movlw	-11
 19375  01DCCE  AEE3               	btfss	plusw1,7,c
 19376  01DCD0  D7F2               	goto	l11506
 19377  01DCD2                     u10540:
 19378                           
 19379                           ;stkvar	_quotient @ sp[(-6)+0]
 19380  01DCD2  90D8               	bcf	status,0,c
 19381  01DCD4  0EFA               	movlw	-6
 19382  01DCD6  36E3               	rlcf	plusw1,f,c
 19383  01DCD8  0EFB               	movlw	-5
 19384  01DCDA  36E3               	rlcf	plusw1,f,c
 19385  01DCDC  0EFC               	movlw	-4
 19386  01DCDE  36E3               	rlcf	plusw1,f,c
 19387  01DCE0  0EFD               	movlw	-3
 19388  01DCE2  36E3               	rlcf	plusw1,f,c
 19389                           
 19390                           ;stkvar	_divisor @ sp[(-6)+-8]
 19391                           ;stkvar	_dividend @ sp[(-6)+-4]
 19392  01DCE4  50E1               	movf	fsr1l,w,c
 19393  01DCE6  0FF6               	addlw	-10
 19394  01DCE8  6ED9               	movwf	fsr2l,c
 19395  01DCEA  50E2               	movf	fsr1h,w,c
 19396  01DCEC  6EDA               	movwf	fsr2h,c
 19397  01DCEE  0EFF               	movlw	255
 19398  01DCF0  22DA               	addwfc	fsr2h,f,c
 19399  01DCF2  0EF2               	movlw	-14
 19400  01DCF4  50E3               	movf	plusw1,w,c
 19401  01DCF6  5CDE               	subwf	postinc2,w,c
 19402  01DCF8  0EF3               	movlw	-13
 19403  01DCFA  50E3               	movf	plusw1,w,c
 19404  01DCFC  58DE               	subwfb	postinc2,w,c
 19405  01DCFE  0EF4               	movlw	-12
 19406  01DD00  50E3               	movf	plusw1,w,c
 19407  01DD02  58DE               	subwfb	postinc2,w,c
 19408  01DD04  0EF5               	movlw	-11
 19409  01DD06  50E3               	movf	plusw1,w,c
 19410  01DD08  58DE               	subwfb	postinc2,w,c
 19411  01DD0A  A0D8               	btfss	status,0,c
 19412  01DD0C  D015               	goto	l11518
 19413                           
 19414                           ;stkvar	_divisor @ sp[(-6)+-8]
 19415                           ;stkvar	_dividend @ sp[(-6)+-4]
 19416  01DD0E  50E1               	movf	fsr1l,w,c
 19417  01DD10  0FF6               	addlw	-10
 19418  01DD12  6ED9               	movwf	fsr2l,c
 19419  01DD14  50E2               	movf	fsr1h,w,c
 19420  01DD16  6EDA               	movwf	fsr2h,c
 19421  01DD18  0EFF               	movlw	255
 19422  01DD1A  22DA               	addwfc	fsr2h,f,c
 19423  01DD1C  0EF2               	movlw	-14
 19424  01DD1E  50E3               	movf	plusw1,w,c
 19425  01DD20  5EDE               	subwf	postinc2,f,c
 19426  01DD22  0EF3               	movlw	-13
 19427  01DD24  50E3               	movf	plusw1,w,c
 19428  01DD26  5ADE               	subwfb	postinc2,f,c
 19429  01DD28  0EF4               	movlw	-12
 19430  01DD2A  50E3               	movf	plusw1,w,c
 19431  01DD2C  5ADE               	subwfb	postinc2,f,c
 19432  01DD2E  0EF5               	movlw	-11
 19433  01DD30  50E3               	movf	plusw1,w,c
 19434  01DD32  5ADE               	subwfb	postinc2,f,c
 19435                           
 19436                           ;stkvar	_quotient @ sp[(-6)+0]
 19437  01DD34  0EFA               	movlw	-6
 19438  01DD36  80E3               	bsf	plusw1,0,c
 19439  01DD38                     l11518:
 19440                           
 19441                           ;stkvar	_divisor @ sp[(-6)+-8]
 19442  01DD38  90D8               	bcf	status,0,c
 19443  01DD3A  0EF5               	movlw	-11
 19444  01DD3C  32E3               	rrcf	plusw1,f,c
 19445  01DD3E  0EF4               	movlw	-12
 19446  01DD40  32E3               	rrcf	plusw1,f,c
 19447  01DD42  0EF3               	movlw	-13
 19448  01DD44  32E3               	rrcf	plusw1,f,c
 19449  01DD46  0EF2               	movlw	-14
 19450  01DD48  32E3               	rrcf	plusw1,f,c
 19451                           
 19452                           ;stkvar	_counter @ sp[(-6)+5]
 19453  01DD4A  0EFF               	movlw	-1
 19454  01DD4C  50E3               	movf	plusw1,w,c
 19455  01DD4E  6E2A               	movwf	btemp^0,c
 19456  01DD50  0E01               	movlw	1
 19457  01DD52  5E2A               	subwf	btemp^0,f,c
 19458  01DD54  0EFF               	movlw	-1
 19459  01DD56  0060  F0AB  FFE3   	movff	btemp,plusw1
 19460  01DD5C  A4D8               	btfss	status,2,c
 19461  01DD5E  D7B9               	goto	u10540
 19462  01DD60                     u10560:
 19463                           
 19464                           ;stkvar	_sign @ sp[(-6)+4]
 19465  01DD60  0EFE               	movlw	-2
 19466  01DD62  50E3               	movf	plusw1,w,c
 19467  01DD64  B4D8               	btfsc	status,2,c
 19468  01DD66  D011               	goto	u10580
 19469                           
 19470                           ;stkvar	_quotient @ sp[(-6)+0]
 19471                           ;stkvar	_quotient @ sp[(-6)+0]
 19472  01DD68  0EFA               	movlw	-6
 19473  01DD6A  6CE3               	negf	plusw1,c
 19474  01DD6C  0EFB               	movlw	-5
 19475  01DD6E  1EE3               	comf	plusw1,f,c
 19476  01DD70  0EFC               	movlw	-4
 19477  01DD72  1EE3               	comf	plusw1,f,c
 19478  01DD74  0EFD               	movlw	-3
 19479  01DD76  1EE3               	comf	plusw1,f,c
 19480  01DD78  E308               	bnc	u10580
 19481  01DD7A  0EFB               	movlw	-5
 19482  01DD7C  2AE3               	incf	plusw1,f,c
 19483  01DD7E  E305               	bnc	u10580
 19484  01DD80  0EFC               	movlw	-4
 19485  01DD82  2AE3               	incf	plusw1,f,c
 19486  01DD84  E302               	bnc	u10580
 19487  01DD86  0EFD               	movlw	-3
 19488  01DD88  2AE3               	incf	plusw1,f,c
 19489  01DD8A                     u10580:
 19490                           
 19491                           ;stkvar	_quotient @ sp[(-6)+0]
 19492  01DD8A  0EFA               	movlw	-6
 19493  01DD8C  006F FF8C  F02A    	movff	plusw1,btemp
 19494  01DD92  0EFB               	movlw	-5
 19495  01DD94  006F FF8C  F02B    	movff	plusw1,btemp+1
 19496  01DD9A  0EFC               	movlw	-4
 19497  01DD9C  006F FF8C  F02C    	movff	plusw1,btemp+2
 19498  01DDA2  0EFD               	movlw	-3
 19499  01DDA4  006F FF8C  F02D    	movff	plusw1,btemp+3
 19500                           
 19501                           ; ___aldiv: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 19502  01DDAA  0EF2               	movlw	242
 19503  01DDAC  26E1               	addwf	fsr1l,f,c
 19504  01DDAE  0EFF               	movlw	255
 19505  01DDB0  22E2               	addwfc	fsr1h,f,c
 19506  01DDB2  0012               	return		;funcret
 19507  01DDB4                     __end_of___aldiv:
 19508                           	opt callstack 0
 19509                           
 19510 ;; *************** function _asctime *****************
 19511 ;; Defined at:
 19512 ;;		line 19 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/asctime.c"
 19513 ;; Parameters:    Size  Location     Type
 19514 ;;  tim             2  [STACK] PTR const struct tm
 19515 ;;		 -> localtime@tm(24), NULL(0), 
 19516 ;; Auto vars:     Size  Location     Type
 19517 ;;  cp              2  [STACK] PTR unsigned char 
 19518 ;;		 -> asctime@buf(27), 
 19519 ;;  s               2  [STACK] PTR const unsigned char 
 19520 ;;		 -> STR_128(37), STR_127(22), 
 19521 ;; Return value:  Size  Location     Type
 19522 ;;                  2  [STACK] PTR unsigned char 
 19523 ;; Registers used:
 19524 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 19525 ;; Tracked objects:
 19526 ;;		On entry : 0/39
 19527 ;;		On exit  : 0/0
 19528 ;;		Unchanged: 0/0
 19529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19534 ;;Total ram usage:        0 bytes
 19535 ;; Hardware stack levels used:    1
 19536 ;; Hardware stack levels required when called:   17
 19537 ;; This function calls:
 19538 ;;		___awdiv
 19539 ;;		___awmod
 19540 ;;		_put2d
 19541 ;; This function is called by:
 19542 ;;		_main
 19543 ;;		_display_history
 19544 ;; This function uses a reentrant model
 19545 ;;
 19546                           
 19547                           	psect	text55
 19548  018136                     __ptext55:
 19549                           	opt callstack 0
 19550  018136                     _asctime:
 19551                           	opt callstack 0
 19552                           
 19553                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19554  018136  52E6               	movf	postinc1,f,c
 19555  018138  52E6               	movf	postinc1,f,c
 19556  01813A  52E6               	movf	postinc1,f,c
 19557  01813C  52E6               	movf	postinc1,f,c
 19558                           
 19559                           ;stkvar	_tim @ sp[(-4)+-2]
 19560                           
 19561                           ;incstack = 0
 19562  01813E  0EFA               	movlw	-6
 19563  018140  006F FF8C  F034    	movff	plusw1,btemp+10
 19564  018146  0EFB               	movlw	-5
 19565  018148  006F FF8C  F035    	movff	plusw1,btemp+11
 19566  01814E  0E0C               	movlw	12
 19567  018150  2434               	addwf	(btemp+10)^0,w,c
 19568  018152  6ED9               	movwf	fsr2l,c
 19569  018154  0E00               	movlw	0
 19570  018156  2035               	addwfc	(btemp+11)^0,w,c
 19571  018158  6EDA               	movwf	fsr2h,c
 19572  01815A  006F FF78  F034    	movff	postinc2,btemp+10
 19573  018160  006F FF74  F035    	movff	postdec2,btemp+11
 19574  018166  0E03               	movlw	3
 19575  018168  0234               	mulwf	(btemp+10)^0,c
 19576  01816A  006F FFCC  F032    	movff	prodl,btemp+8
 19577  018170  006F FFD0  F033    	movff	prodh,btemp+9
 19578  018176  0235               	mulwf	(btemp+11)^0,c
 19579  018178  50F3               	movf	prodl,w,c
 19580  01817A  2633               	addwf	(btemp+9)^0,f,c
 19581  01817C  0E27               	movlw	low STR_127
 19582  01817E  6E34               	movwf	(btemp+10)^0,c
 19583  018180  0EFD               	movlw	high STR_127
 19584  018182  6E35               	movwf	(btemp+11)^0,c
 19585  018184  5032               	movf	(btemp+8)^0,w,c
 19586  018186  2634               	addwf	(btemp+10)^0,f,c
 19587  018188  5033               	movf	(btemp+9)^0,w,c
 19588  01818A  2235               	addwfc	(btemp+11)^0,f,c
 19589                           
 19590                           ;stkvar	_s @ sp[(-4)+2]
 19591  01818C  0EFF               	movlw	-1
 19592  01818E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 19593  018194  0EFE               	movlw	-2
 19594  018196  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 19595                           
 19596                           ;stkvar	_cp @ sp[(-4)+0]
 19597  01819C  0E03               	movlw	high asctime@buf
 19598  01819E  6E2A               	movwf	btemp^0,c
 19599  0181A0  0EFD               	movlw	-3
 19600  0181A2  0060  F0AB  FFE3   	movff	btemp,plusw1
 19601  0181A8  0EC4               	movlw	low asctime@buf
 19602  0181AA  6E2A               	movwf	btemp^0,c
 19603  0181AC  0EFC               	movlw	-4
 19604  0181AE  0060  F0AB  FFE3   	movff	btemp,plusw1
 19605                           
 19606                           ;stkvar	_s @ sp[(-4)+2]
 19607  0181B4  50E1               	movf	fsr1l,w,c
 19608  0181B6  0FFE               	addlw	-2
 19609  0181B8  6ED9               	movwf	fsr2l,c
 19610  0181BA  50E2               	movf	fsr1h,w,c
 19611  0181BC  6EDA               	movwf	fsr2h,c
 19612  0181BE  0EFF               	movlw	255
 19613  0181C0  22DA               	addwfc	fsr2h,f,c
 19614  0181C2  006F FF7B FFF6     	movff	postinc2,tblptrl
 19615  0181C8  006F FF77 FFF7     	movff	postdec2,tblptrh
 19616  0181CE                     	if	0	;tblptru may be non-zero
 19617  0181CE                     	endif
 19618  0181CE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19619  0181CE  0E00               	movlw	low (__mediumconst shr (0+16))
 19620  0181D0  6EF8               	movwf	tblptru,c
 19621  0181D2                     	endif
 19622                           
 19623                           ;stkvar	_cp @ sp[(-4)+0]
 19624  0181D2  0EFC               	movlw	-4
 19625  0181D4  006F FF8F FFD9     	movff	plusw1,fsr2l
 19626  0181DA  0EFD               	movlw	-3
 19627  0181DC  006F FF8F FFDA     	movff	plusw1,fsr2h
 19628  0181E2  0008               	tblrd		*
 19629  0181E4  006F FFD7 FFDF     	movff	tablat,indf2
 19630                           
 19631                           ;stkvar	_s @ sp[(-4)+2]
 19632  0181EA  0EFE               	movlw	-2
 19633  0181EC  50E3               	movf	plusw1,w,c
 19634  0181EE  0F01               	addlw	1
 19635  0181F0  6E2A               	movwf	btemp^0,c
 19636  0181F2  0EFE               	movlw	-2
 19637  0181F4  0060  F0AB  FFE3   	movff	btemp,plusw1
 19638  0181FA  6A2A               	clrf	btemp^0,c
 19639  0181FC  0EFF               	movlw	-1
 19640  0181FE  50E3               	movf	plusw1,w,c
 19641  018200  202A               	addwfc	btemp^0,w,c
 19642  018202  6E2A               	movwf	btemp^0,c
 19643  018204  0EFF               	movlw	-1
 19644  018206  0060  F0AB  FFE3   	movff	btemp,plusw1
 19645                           
 19646                           ;stkvar	_cp @ sp[(-4)+0]
 19647  01820C  0EFC               	movlw	-4
 19648  01820E  50E3               	movf	plusw1,w,c
 19649  018210  0F01               	addlw	1
 19650  018212  6E2A               	movwf	btemp^0,c
 19651  018214  0EFC               	movlw	-4
 19652  018216  0060  F0AB  FFE3   	movff	btemp,plusw1
 19653  01821C  6A2A               	clrf	btemp^0,c
 19654  01821E  0EFD               	movlw	-3
 19655  018220  50E3               	movf	plusw1,w,c
 19656  018222  202A               	addwfc	btemp^0,w,c
 19657  018224  6E2A               	movwf	btemp^0,c
 19658  018226  0EFD               	movlw	-3
 19659  018228  0060  F0AB  FFE3   	movff	btemp,plusw1
 19660                           
 19661                           ;stkvar	_s @ sp[(-4)+2]
 19662  01822E  50E1               	movf	fsr1l,w,c
 19663  018230  0FFE               	addlw	-2
 19664  018232  6ED9               	movwf	fsr2l,c
 19665  018234  50E2               	movf	fsr1h,w,c
 19666  018236  6EDA               	movwf	fsr2h,c
 19667  018238  0EFF               	movlw	255
 19668  01823A  22DA               	addwfc	fsr2h,f,c
 19669  01823C  006F FF7B FFF6     	movff	postinc2,tblptrl
 19670  018242  006F FF77 FFF7     	movff	postdec2,tblptrh
 19671  018248                     	if	0	;tblptru may be non-zero
 19672  018248                     	endif
 19673  018248                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19674  018248  0E00               	movlw	low (__mediumconst shr (0+16))
 19675  01824A  6EF8               	movwf	tblptru,c
 19676  01824C                     	endif
 19677                           
 19678                           ;stkvar	_cp @ sp[(-4)+0]
 19679  01824C  0EFC               	movlw	-4
 19680  01824E  006F FF8F FFD9     	movff	plusw1,fsr2l
 19681  018254  0EFD               	movlw	-3
 19682  018256  006F FF8F FFDA     	movff	plusw1,fsr2h
 19683  01825C  0008               	tblrd		*
 19684  01825E  006F FFD7 FFDF     	movff	tablat,indf2
 19685                           
 19686                           ;stkvar	_s @ sp[(-4)+2]
 19687  018264  0EFE               	movlw	-2
 19688  018266  50E3               	movf	plusw1,w,c
 19689  018268  0F01               	addlw	1
 19690  01826A  6E2A               	movwf	btemp^0,c
 19691  01826C  0EFE               	movlw	-2
 19692  01826E  0060  F0AB  FFE3   	movff	btemp,plusw1
 19693  018274  6A2A               	clrf	btemp^0,c
 19694  018276  0EFF               	movlw	-1
 19695  018278  50E3               	movf	plusw1,w,c
 19696  01827A  202A               	addwfc	btemp^0,w,c
 19697  01827C  6E2A               	movwf	btemp^0,c
 19698  01827E  0EFF               	movlw	-1
 19699  018280  0060  F0AB  FFE3   	movff	btemp,plusw1
 19700                           
 19701                           ;stkvar	_cp @ sp[(-4)+0]
 19702  018286  0EFC               	movlw	-4
 19703  018288  50E3               	movf	plusw1,w,c
 19704  01828A  0F01               	addlw	1
 19705  01828C  6E2A               	movwf	btemp^0,c
 19706  01828E  0EFC               	movlw	-4
 19707  018290  0060  F0AB  FFE3   	movff	btemp,plusw1
 19708  018296  6A2A               	clrf	btemp^0,c
 19709  018298  0EFD               	movlw	-3
 19710  01829A  50E3               	movf	plusw1,w,c
 19711  01829C  202A               	addwfc	btemp^0,w,c
 19712  01829E  6E2A               	movwf	btemp^0,c
 19713  0182A0  0EFD               	movlw	-3
 19714  0182A2  0060  F0AB  FFE3   	movff	btemp,plusw1
 19715                           
 19716                           ;stkvar	_s @ sp[(-4)+2]
 19717  0182A8  50E1               	movf	fsr1l,w,c
 19718  0182AA  0FFE               	addlw	-2
 19719  0182AC  6ED9               	movwf	fsr2l,c
 19720  0182AE  50E2               	movf	fsr1h,w,c
 19721  0182B0  6EDA               	movwf	fsr2h,c
 19722  0182B2  0EFF               	movlw	255
 19723  0182B4  22DA               	addwfc	fsr2h,f,c
 19724  0182B6  006F FF7B FFF6     	movff	postinc2,tblptrl
 19725  0182BC  006F FF77 FFF7     	movff	postdec2,tblptrh
 19726  0182C2                     	if	0	;tblptru may be non-zero
 19727  0182C2                     	endif
 19728  0182C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19729  0182C2  0E00               	movlw	low (__mediumconst shr (0+16))
 19730  0182C4  6EF8               	movwf	tblptru,c
 19731  0182C6                     	endif
 19732                           
 19733                           ;stkvar	_cp @ sp[(-4)+0]
 19734  0182C6  0EFC               	movlw	-4
 19735  0182C8  006F FF8F FFD9     	movff	plusw1,fsr2l
 19736  0182CE  0EFD               	movlw	-3
 19737  0182D0  006F FF8F FFDA     	movff	plusw1,fsr2h
 19738  0182D6  0008               	tblrd		*
 19739  0182D8  006F FFD7 FFDF     	movff	tablat,indf2
 19740                           
 19741                           ;stkvar	_cp @ sp[(-4)+0]
 19742  0182DE  0EFC               	movlw	-4
 19743  0182E0  50E3               	movf	plusw1,w,c
 19744  0182E2  0F01               	addlw	1
 19745  0182E4  6E2A               	movwf	btemp^0,c
 19746  0182E6  0EFC               	movlw	-4
 19747  0182E8  0060  F0AB  FFE3   	movff	btemp,plusw1
 19748  0182EE  6A2A               	clrf	btemp^0,c
 19749  0182F0  0EFD               	movlw	-3
 19750  0182F2  50E3               	movf	plusw1,w,c
 19751  0182F4  202A               	addwfc	btemp^0,w,c
 19752  0182F6  6E2A               	movwf	btemp^0,c
 19753  0182F8  0EFD               	movlw	-3
 19754  0182FA  0060  F0AB  FFE3   	movff	btemp,plusw1
 19755                           
 19756                           ;stkvar	_cp @ sp[(-4)+0]
 19757  018300  0EFC               	movlw	-4
 19758  018302  006F FF8F FFD9     	movff	plusw1,fsr2l
 19759  018308  0EFD               	movlw	-3
 19760  01830A  006F FF8F FFDA     	movff	plusw1,fsr2h
 19761  018310  0E20               	movlw	32
 19762  018312  6EDF               	movwf	indf2,c
 19763                           
 19764                           ;stkvar	_cp @ sp[(-4)+0]
 19765  018314  0EFC               	movlw	-4
 19766  018316  50E3               	movf	plusw1,w,c
 19767  018318  0F01               	addlw	1
 19768  01831A  6E2A               	movwf	btemp^0,c
 19769  01831C  0EFC               	movlw	-4
 19770  01831E  0060  F0AB  FFE3   	movff	btemp,plusw1
 19771  018324  6A2A               	clrf	btemp^0,c
 19772  018326  0EFD               	movlw	-3
 19773  018328  50E3               	movf	plusw1,w,c
 19774  01832A  202A               	addwfc	btemp^0,w,c
 19775  01832C  6E2A               	movwf	btemp^0,c
 19776  01832E  0EFD               	movlw	-3
 19777  018330  0060  F0AB  FFE3   	movff	btemp,plusw1
 19778                           
 19779                           ;stkvar	_tim @ sp[(-4)+-2]
 19780  018336  0EFA               	movlw	-6
 19781  018338  006F FF8C  F034    	movff	plusw1,btemp+10
 19782  01833E  0EFB               	movlw	-5
 19783  018340  006F FF8C  F035    	movff	plusw1,btemp+11
 19784  018346  0E08               	movlw	8
 19785  018348  2434               	addwf	(btemp+10)^0,w,c
 19786  01834A  6ED9               	movwf	fsr2l,c
 19787  01834C  0E00               	movlw	0
 19788  01834E  2035               	addwfc	(btemp+11)^0,w,c
 19789  018350  6EDA               	movwf	fsr2h,c
 19790  018352  006F FF78  F034    	movff	postinc2,btemp+10
 19791  018358  006F FF74  F035    	movff	postdec2,btemp+11
 19792  01835E  0E03               	movlw	3
 19793  018360  0234               	mulwf	(btemp+10)^0,c
 19794  018362  006F FFCC  F032    	movff	prodl,btemp+8
 19795  018368  006F FFD0  F033    	movff	prodh,btemp+9
 19796  01836E  0235               	mulwf	(btemp+11)^0,c
 19797  018370  50F3               	movf	prodl,w,c
 19798  018372  2633               	addwf	(btemp+9)^0,f,c
 19799  018374  0E76               	movlw	low STR_128
 19800  018376  6E34               	movwf	(btemp+10)^0,c
 19801  018378  0EFA               	movlw	high STR_128
 19802  01837A  6E35               	movwf	(btemp+11)^0,c
 19803  01837C  5032               	movf	(btemp+8)^0,w,c
 19804  01837E  2634               	addwf	(btemp+10)^0,f,c
 19805  018380  5033               	movf	(btemp+9)^0,w,c
 19806  018382  2235               	addwfc	(btemp+11)^0,f,c
 19807                           
 19808                           ;stkvar	_s @ sp[(-4)+2]
 19809  018384  0EFF               	movlw	-1
 19810  018386  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 19811  01838C  0EFE               	movlw	-2
 19812  01838E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 19813                           
 19814                           ;stkvar	_s @ sp[(-4)+2]
 19815  018394  50E1               	movf	fsr1l,w,c
 19816  018396  0FFE               	addlw	-2
 19817  018398  6ED9               	movwf	fsr2l,c
 19818  01839A  50E2               	movf	fsr1h,w,c
 19819  01839C  6EDA               	movwf	fsr2h,c
 19820  01839E  0EFF               	movlw	255
 19821  0183A0  22DA               	addwfc	fsr2h,f,c
 19822  0183A2  006F FF7B FFF6     	movff	postinc2,tblptrl
 19823  0183A8  006F FF77 FFF7     	movff	postdec2,tblptrh
 19824  0183AE                     	if	0	;tblptru may be non-zero
 19825  0183AE                     	endif
 19826  0183AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19827  0183AE  0E00               	movlw	low (__mediumconst shr (0+16))
 19828  0183B0  6EF8               	movwf	tblptru,c
 19829  0183B2                     	endif
 19830                           
 19831                           ;stkvar	_cp @ sp[(-4)+0]
 19832  0183B2  0EFC               	movlw	-4
 19833  0183B4  006F FF8F FFD9     	movff	plusw1,fsr2l
 19834  0183BA  0EFD               	movlw	-3
 19835  0183BC  006F FF8F FFDA     	movff	plusw1,fsr2h
 19836  0183C2  0008               	tblrd		*
 19837  0183C4  006F FFD7 FFDF     	movff	tablat,indf2
 19838                           
 19839                           ;stkvar	_s @ sp[(-4)+2]
 19840  0183CA  0EFE               	movlw	-2
 19841  0183CC  50E3               	movf	plusw1,w,c
 19842  0183CE  0F01               	addlw	1
 19843  0183D0  6E2A               	movwf	btemp^0,c
 19844  0183D2  0EFE               	movlw	-2
 19845  0183D4  0060  F0AB  FFE3   	movff	btemp,plusw1
 19846  0183DA  6A2A               	clrf	btemp^0,c
 19847  0183DC  0EFF               	movlw	-1
 19848  0183DE  50E3               	movf	plusw1,w,c
 19849  0183E0  202A               	addwfc	btemp^0,w,c
 19850  0183E2  6E2A               	movwf	btemp^0,c
 19851  0183E4  0EFF               	movlw	-1
 19852  0183E6  0060  F0AB  FFE3   	movff	btemp,plusw1
 19853                           
 19854                           ;stkvar	_cp @ sp[(-4)+0]
 19855  0183EC  0EFC               	movlw	-4
 19856  0183EE  50E3               	movf	plusw1,w,c
 19857  0183F0  0F01               	addlw	1
 19858  0183F2  6E2A               	movwf	btemp^0,c
 19859  0183F4  0EFC               	movlw	-4
 19860  0183F6  0060  F0AB  FFE3   	movff	btemp,plusw1
 19861  0183FC  6A2A               	clrf	btemp^0,c
 19862  0183FE  0EFD               	movlw	-3
 19863  018400  50E3               	movf	plusw1,w,c
 19864  018402  202A               	addwfc	btemp^0,w,c
 19865  018404  6E2A               	movwf	btemp^0,c
 19866  018406  0EFD               	movlw	-3
 19867  018408  0060  F0AB  FFE3   	movff	btemp,plusw1
 19868                           
 19869                           ;stkvar	_s @ sp[(-4)+2]
 19870  01840E  50E1               	movf	fsr1l,w,c
 19871  018410  0FFE               	addlw	-2
 19872  018412  6ED9               	movwf	fsr2l,c
 19873  018414  50E2               	movf	fsr1h,w,c
 19874  018416  6EDA               	movwf	fsr2h,c
 19875  018418  0EFF               	movlw	255
 19876  01841A  22DA               	addwfc	fsr2h,f,c
 19877  01841C  006F FF7B FFF6     	movff	postinc2,tblptrl
 19878  018422  006F FF77 FFF7     	movff	postdec2,tblptrh
 19879  018428                     	if	0	;tblptru may be non-zero
 19880  018428                     	endif
 19881  018428                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19882  018428  0E00               	movlw	low (__mediumconst shr (0+16))
 19883  01842A  6EF8               	movwf	tblptru,c
 19884  01842C                     	endif
 19885                           
 19886                           ;stkvar	_cp @ sp[(-4)+0]
 19887  01842C  0EFC               	movlw	-4
 19888  01842E  006F FF8F FFD9     	movff	plusw1,fsr2l
 19889  018434  0EFD               	movlw	-3
 19890  018436  006F FF8F FFDA     	movff	plusw1,fsr2h
 19891  01843C  0008               	tblrd		*
 19892  01843E  006F FFD7 FFDF     	movff	tablat,indf2
 19893                           
 19894                           ;stkvar	_s @ sp[(-4)+2]
 19895  018444  0EFE               	movlw	-2
 19896  018446  50E3               	movf	plusw1,w,c
 19897  018448  0F01               	addlw	1
 19898  01844A  6E2A               	movwf	btemp^0,c
 19899  01844C  0EFE               	movlw	-2
 19900  01844E  0060  F0AB  FFE3   	movff	btemp,plusw1
 19901  018454  6A2A               	clrf	btemp^0,c
 19902  018456  0EFF               	movlw	-1
 19903  018458  50E3               	movf	plusw1,w,c
 19904  01845A  202A               	addwfc	btemp^0,w,c
 19905  01845C  6E2A               	movwf	btemp^0,c
 19906  01845E  0EFF               	movlw	-1
 19907  018460  0060  F0AB  FFE3   	movff	btemp,plusw1
 19908                           
 19909                           ;stkvar	_cp @ sp[(-4)+0]
 19910  018466  0EFC               	movlw	-4
 19911  018468  50E3               	movf	plusw1,w,c
 19912  01846A  0F01               	addlw	1
 19913  01846C  6E2A               	movwf	btemp^0,c
 19914  01846E  0EFC               	movlw	-4
 19915  018470  0060  F0AB  FFE3   	movff	btemp,plusw1
 19916  018476  6A2A               	clrf	btemp^0,c
 19917  018478  0EFD               	movlw	-3
 19918  01847A  50E3               	movf	plusw1,w,c
 19919  01847C  202A               	addwfc	btemp^0,w,c
 19920  01847E  6E2A               	movwf	btemp^0,c
 19921  018480  0EFD               	movlw	-3
 19922  018482  0060  F0AB  FFE3   	movff	btemp,plusw1
 19923                           
 19924                           ;stkvar	_s @ sp[(-4)+2]
 19925  018488  50E1               	movf	fsr1l,w,c
 19926  01848A  0FFE               	addlw	-2
 19927  01848C  6ED9               	movwf	fsr2l,c
 19928  01848E  50E2               	movf	fsr1h,w,c
 19929  018490  6EDA               	movwf	fsr2h,c
 19930  018492  0EFF               	movlw	255
 19931  018494  22DA               	addwfc	fsr2h,f,c
 19932  018496  006F FF7B FFF6     	movff	postinc2,tblptrl
 19933  01849C  006F FF77 FFF7     	movff	postdec2,tblptrh
 19934  0184A2                     	if	0	;tblptru may be non-zero
 19935  0184A2                     	endif
 19936  0184A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19937  0184A2  0E00               	movlw	low (__mediumconst shr (0+16))
 19938  0184A4  6EF8               	movwf	tblptru,c
 19939  0184A6                     	endif
 19940                           
 19941                           ;stkvar	_cp @ sp[(-4)+0]
 19942  0184A6  0EFC               	movlw	-4
 19943  0184A8  006F FF8F FFD9     	movff	plusw1,fsr2l
 19944  0184AE  0EFD               	movlw	-3
 19945  0184B0  006F FF8F FFDA     	movff	plusw1,fsr2h
 19946  0184B6  0008               	tblrd		*
 19947  0184B8  006F FFD7 FFDF     	movff	tablat,indf2
 19948  0184BE  0E20               	movlw	32
 19949  0184C0  0103               	movlb	3	; () banked
 19950  0184C2  6FCB               	movwf	(asctime@buf+7)& (0+255),b
 19951                           
 19952                           ; BSR set to: 3
 19953  0184C4  0E20               	movlw	32
 19954  0184C6  6EE6               	movwf	postinc1,c
 19955  0184C8  0E20               	movlw	32
 19956  0184CA  6EE6               	movwf	postinc1,c
 19957                           
 19958                           ;stkvar	_tim @ sp[(-6)+-2]
 19959  0184CC  0EF8               	movlw	-8
 19960  0184CE  006F FF8C  F034    	movff	plusw1,btemp+10
 19961  0184D4  0EF9               	movlw	-7
 19962  0184D6  006F FF8C  F035    	movff	plusw1,btemp+11
 19963  0184DC  0E06               	movlw	6
 19964  0184DE  2434               	addwf	(btemp+10)^0,w,c
 19965  0184E0  6ED9               	movwf	fsr2l,c
 19966  0184E2  0E00               	movlw	0
 19967  0184E4  2035               	addwfc	(btemp+11)^0,w,c
 19968  0184E6  6EDA               	movwf	fsr2h,c
 19969  0184E8  50DF               	movf	indf2,w,c
 19970  0184EA  6EE6               	movwf	postinc1,c
 19971  0184EC  0ECE               	movlw	low (asctime@buf+10)
 19972  0184EE  6EE6               	movwf	postinc1,c
 19973  0184F0  0E03               	movlw	high (asctime@buf+10)
 19974  0184F2  6EE6               	movwf	postinc1,c
 19975  0184F4  ECCA  F0F9         	call	_put2d	;wreg free
 19976  0184F8  0E3A               	movlw	58
 19977  0184FA  6EE6               	movwf	postinc1,c
 19978  0184FC  0E30               	movlw	48
 19979  0184FE  6EE6               	movwf	postinc1,c
 19980                           
 19981                           ;stkvar	_tim @ sp[(-6)+-2]
 19982  018500  0EF8               	movlw	-8
 19983  018502  006F FF8C  F034    	movff	plusw1,btemp+10
 19984  018508  0EF9               	movlw	-7
 19985  01850A  006F FF8C  F035    	movff	plusw1,btemp+11
 19986  018510  0E04               	movlw	4
 19987  018512  2434               	addwf	(btemp+10)^0,w,c
 19988  018514  6ED9               	movwf	fsr2l,c
 19989  018516  0E00               	movlw	0
 19990  018518  2035               	addwfc	(btemp+11)^0,w,c
 19991  01851A  6EDA               	movwf	fsr2h,c
 19992  01851C  50DF               	movf	indf2,w,c
 19993  01851E  6EE6               	movwf	postinc1,c
 19994  018520  0ED1               	movlw	low (asctime@buf+13)
 19995  018522  6EE6               	movwf	postinc1,c
 19996  018524  0E03               	movlw	high (asctime@buf+13)
 19997  018526  6EE6               	movwf	postinc1,c
 19998  018528  ECCA  F0F9         	call	_put2d	;wreg free
 19999  01852C  0E3A               	movlw	58
 20000  01852E  6EE6               	movwf	postinc1,c
 20001  018530  0E30               	movlw	48
 20002  018532  6EE6               	movwf	postinc1,c
 20003                           
 20004                           ;stkvar	_tim @ sp[(-6)+-2]
 20005  018534  0EF8               	movlw	-8
 20006  018536  006F FF8C  F034    	movff	plusw1,btemp+10
 20007  01853C  0EF9               	movlw	-7
 20008  01853E  006F FF8C  F035    	movff	plusw1,btemp+11
 20009  018544  0E02               	movlw	2
 20010  018546  2434               	addwf	(btemp+10)^0,w,c
 20011  018548  6ED9               	movwf	fsr2l,c
 20012  01854A  0E00               	movlw	0
 20013  01854C  2035               	addwfc	(btemp+11)^0,w,c
 20014  01854E  6EDA               	movwf	fsr2h,c
 20015  018550  50DF               	movf	indf2,w,c
 20016  018552  6EE6               	movwf	postinc1,c
 20017  018554  0ED4               	movlw	low (asctime@buf+16)
 20018  018556  6EE6               	movwf	postinc1,c
 20019  018558  0E03               	movlw	high (asctime@buf+16)
 20020  01855A  6EE6               	movwf	postinc1,c
 20021  01855C  ECCA  F0F9         	call	_put2d	;wreg free
 20022  018560  0E20               	movlw	32
 20023  018562  6EE6               	movwf	postinc1,c
 20024  018564  0E30               	movlw	48
 20025  018566  6EE6               	movwf	postinc1,c
 20026                           
 20027                           ;stkvar	_tim @ sp[(-6)+-2]
 20028  018568  0EF8               	movlw	-8
 20029  01856A  006F FF8F FFD9     	movff	plusw1,fsr2l
 20030  018570  0EF9               	movlw	-7
 20031  018572  006F FF8F FFDA     	movff	plusw1,fsr2h
 20032  018578  50DF               	movf	indf2,w,c
 20033  01857A  6EE6               	movwf	postinc1,c
 20034  01857C  0ED7               	movlw	low (asctime@buf+19)
 20035  01857E  6EE6               	movwf	postinc1,c
 20036  018580  0E03               	movlw	high (asctime@buf+19)
 20037  018582  6EE6               	movwf	postinc1,c
 20038  018584  ECCA  F0F9         	call	_put2d	;wreg free
 20039  018588  0E00               	movlw	0
 20040  01858A  6EE6               	movwf	postinc1,c
 20041  01858C  0E20               	movlw	32
 20042  01858E  6EE6               	movwf	postinc1,c
 20043  018590  0E64               	movlw	100
 20044  018592  6EE6               	movwf	postinc1,c
 20045  018594  0E00               	movlw	0
 20046  018596  6EE6               	movwf	postinc1,c
 20047                           
 20048                           ;stkvar	_tim @ sp[(-8)+-2]
 20049  018598  0EF6               	movlw	-10
 20050  01859A  006F FF8C  F034    	movff	plusw1,btemp+10
 20051  0185A0  0EF7               	movlw	-9
 20052  0185A2  006F FF8C  F035    	movff	plusw1,btemp+11
 20053  0185A8  0E0A               	movlw	10
 20054  0185AA  2434               	addwf	(btemp+10)^0,w,c
 20055  0185AC  6ED9               	movwf	fsr2l,c
 20056  0185AE  0E00               	movlw	0
 20057  0185B0  2035               	addwfc	(btemp+11)^0,w,c
 20058  0185B2  6EDA               	movwf	fsr2h,c
 20059  0185B4  006F FF78  F034    	movff	postinc2,btemp+10
 20060  0185BA  006F FF74  F035    	movff	postdec2,btemp+11
 20061  0185C0  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 20062  0185C6  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 20063  0185CC  ECB4  F0F6         	call	___awdiv	;wreg free
 20064  0185D0  502A               	movf	btemp^0,w,c
 20065  0185D2  0F13               	addlw	19
 20066  0185D4  6EE6               	movwf	postinc1,c
 20067  0185D6  0EDA               	movlw	low (asctime@buf+22)
 20068  0185D8  6EE6               	movwf	postinc1,c
 20069  0185DA  0E03               	movlw	high (asctime@buf+22)
 20070  0185DC  6EE6               	movwf	postinc1,c
 20071  0185DE  ECCA  F0F9         	call	_put2d	;wreg free
 20072  0185E2  0E0A               	movlw	10
 20073  0185E4  6EE6               	movwf	postinc1,c
 20074  0185E6  0E30               	movlw	48
 20075  0185E8  6EE6               	movwf	postinc1,c
 20076  0185EA  0E64               	movlw	100
 20077  0185EC  6EE6               	movwf	postinc1,c
 20078  0185EE  0E00               	movlw	0
 20079  0185F0  6EE6               	movwf	postinc1,c
 20080                           
 20081                           ;stkvar	_tim @ sp[(-8)+-2]
 20082  0185F2  0EF6               	movlw	-10
 20083  0185F4  006F FF8C  F034    	movff	plusw1,btemp+10
 20084  0185FA  0EF7               	movlw	-9
 20085  0185FC  006F FF8C  F035    	movff	plusw1,btemp+11
 20086  018602  0E0A               	movlw	10
 20087  018604  2434               	addwf	(btemp+10)^0,w,c
 20088  018606  6ED9               	movwf	fsr2l,c
 20089  018608  0E00               	movlw	0
 20090  01860A  2035               	addwfc	(btemp+11)^0,w,c
 20091  01860C  6EDA               	movwf	fsr2h,c
 20092  01860E  006F FF78  F034    	movff	postinc2,btemp+10
 20093  018614  006F FF74  F035    	movff	postdec2,btemp+11
 20094  01861A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 20095  018620  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 20096  018626  ECE3  F0FA         	call	___awmod	;wreg free
 20097  01862A  502A               	movf	btemp^0,w,c
 20098  01862C  6EE6               	movwf	postinc1,c
 20099  01862E  0EDC               	movlw	low (asctime@buf+24)
 20100  018630  6EE6               	movwf	postinc1,c
 20101  018632  0E03               	movlw	high (asctime@buf+24)
 20102  018634  6EE6               	movwf	postinc1,c
 20103  018636  ECCA  F0F9         	call	_put2d	;wreg free
 20104  01863A  0EC4               	movlw	low asctime@buf
 20105  01863C  6E2A               	movwf	btemp^0,c
 20106  01863E  0E03               	movlw	high asctime@buf
 20107  018640  6E2B               	movwf	(btemp+1)^0,c
 20108                           
 20109                           ; _asctime: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20110  018642  0EFA               	movlw	250
 20111  018644  26E1               	addwf	fsr1l,f,c
 20112  018646  0EFF               	movlw	255
 20113  018648  22E2               	addwfc	fsr1h,f,c
 20114  01864A  0012               	return		;funcret
 20115  01864C                     __end_of_asctime:
 20116                           	opt callstack 0
 20117                           
 20118 ;; *************** function _put2d *****************
 20119 ;; Defined at:
 20120 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/asctime.c"
 20121 ;; Parameters:    Size  Location     Type
 20122 ;;  cp              2  [STACK] PTR unsigned char 
 20123 ;;		 -> asctime@buf(27), 
 20124 ;;  i               1  [STACK] unsigned char 
 20125 ;;  cl              1  [STACK] unsigned char 
 20126 ;;  ct              1  [STACK] unsigned char 
 20127 ;; Auto vars:     Size  Location     Type
 20128 ;;		None
 20129 ;; Return value:  Size  Location     Type
 20130 ;;                  1  [STACK] void 
 20131 ;; Registers used:
 20132 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 20133 ;; Tracked objects:
 20134 ;;		On entry : 0/3
 20135 ;;		On exit  : 0/0
 20136 ;;		Unchanged: 0/0
 20137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20142 ;;Total ram usage:        0 bytes
 20143 ;; Hardware stack levels used:    1
 20144 ;; Hardware stack levels required when called:   16
 20145 ;; This function calls:
 20146 ;;		___awdiv
 20147 ;;		___lbmod
 20148 ;; This function is called by:
 20149 ;;		_asctime
 20150 ;; This function uses a reentrant model
 20151 ;;
 20152                           
 20153                           	psect	text56
 20154  01F394                     __ptext56:
 20155                           	opt callstack 0
 20156  01F394                     _put2d:
 20157                           	opt callstack 12
 20158                           
 20159                           ;stkvar	_ct @ sp[(0)+-5]
 20160                           ;stkvar	_cp @ sp[(0)+-2]
 20161                           
 20162                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20163                           ;incstack = 0
 20164  01F394  0EFE               	movlw	-2
 20165  01F396  006F FF8F FFD9     	movff	plusw1,fsr2l
 20166  01F39C  0EFF               	movlw	-1
 20167  01F39E  006F FF8F FFDA     	movff	plusw1,fsr2h
 20168  01F3A4  0EFB               	movlw	-5
 20169  01F3A6  006F FF8F FFDF     	movff	plusw1,indf2
 20170  01F3AC  0E0A               	movlw	10
 20171  01F3AE  6EE6               	movwf	postinc1,c
 20172                           
 20173                           ;stkvar	_i @ sp[(-1)+-3]
 20174  01F3B0  0EFC               	movlw	-4
 20175  01F3B2  50E3               	movf	plusw1,w,c
 20176  01F3B4  6EE6               	movwf	postinc1,c
 20177  01F3B6  ECF8  F004         	call	___lbmod	;wreg free
 20178  01F3BA  0E30               	movlw	48
 20179  01F3BC  262A               	addwf	btemp^0,f,c
 20180                           
 20181                           ;stkvar	_cp @ sp[(0)+-2]
 20182  01F3BE  0EFE               	movlw	-2
 20183  01F3C0  006F FF8C  F02B    	movff	plusw1,btemp+1
 20184  01F3C6  0E01               	movlw	1
 20185  01F3C8  5E2B               	subwf	(btemp+1)^0,f,c
 20186  01F3CA  0EFE               	movlw	-2
 20187  01F3CC  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 20188  01F3D2  0EFF               	movlw	-1
 20189  01F3D4  006F FF8C  F02B    	movff	plusw1,btemp+1
 20190  01F3DA  0E00               	movlw	0
 20191  01F3DC  5A2B               	subwfb	(btemp+1)^0,f,c
 20192  01F3DE  0EFF               	movlw	-1
 20193  01F3E0  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 20194  01F3E6  0EFE               	movlw	-2
 20195  01F3E8  006F FF8F FFD9     	movff	plusw1,fsr2l
 20196  01F3EE  0EFF               	movlw	-1
 20197  01F3F0  006F FF8F FFDA     	movff	plusw1,fsr2h
 20198  01F3F6  0060  F0AB  FFDF   	movff	btemp,indf2
 20199  01F3FC  0E0A               	movlw	10
 20200  01F3FE  6EE6               	movwf	postinc1,c
 20201  01F400  0E00               	movlw	0
 20202  01F402  6EE6               	movwf	postinc1,c
 20203                           
 20204                           ;stkvar	_i @ sp[(-2)+-3]
 20205  01F404  0EFB               	movlw	-5
 20206  01F406  50E3               	movf	plusw1,w,c
 20207  01F408  6EE6               	movwf	postinc1,c
 20208  01F40A  0E00               	movlw	0
 20209  01F40C  6EE6               	movwf	postinc1,c
 20210  01F40E  ECB4  F0F6         	call	___awdiv	;wreg free
 20211                           
 20212                           ;stkvar	_i @ sp[(0)+-3]
 20213  01F412  0EFD               	movlw	-3
 20214  01F414  0060  F0AB  FFE3   	movff	btemp,plusw1
 20215  01F41A  0EFD               	movlw	-3
 20216  01F41C  50E3               	movf	plusw1,w,c
 20217  01F41E  B4D8               	btfsc	status,2,c
 20218  01F420  D021               	goto	l16826
 20219                           
 20220                           ;stkvar	_cp @ sp[(0)+-2]
 20221  01F422  0EFE               	movlw	-2
 20222  01F424  006F FF8C  F02A    	movff	plusw1,btemp
 20223  01F42A  0E01               	movlw	1
 20224  01F42C  5E2A               	subwf	btemp^0,f,c
 20225  01F42E  0EFE               	movlw	-2
 20226  01F430  0060  F0AB  FFE3   	movff	btemp,plusw1
 20227  01F436  0EFF               	movlw	-1
 20228  01F438  006F FF8C  F02A    	movff	plusw1,btemp
 20229  01F43E  0E00               	movlw	0
 20230  01F440  5A2A               	subwfb	btemp^0,f,c
 20231  01F442  0EFF               	movlw	-1
 20232  01F444  0060  F0AB  FFE3   	movff	btemp,plusw1
 20233  01F44A  0EFE               	movlw	-2
 20234  01F44C  006F FF8F FFD9     	movff	plusw1,fsr2l
 20235  01F452  0EFF               	movlw	-1
 20236  01F454  006F FF8F FFDA     	movff	plusw1,fsr2h
 20237                           
 20238                           ;stkvar	_i @ sp[(0)+-3]
 20239  01F45A  0EFD               	movlw	-3
 20240  01F45C  50E3               	movf	plusw1,w,c
 20241  01F45E  0F30               	addlw	48
 20242  01F460  6EDF               	movwf	indf2,c
 20243  01F462  D020               	goto	l3416
 20244  01F464                     l16826:
 20245                           
 20246                           ;stkvar	_cl @ sp[(0)+-4]
 20247                           ;stkvar	_cp @ sp[(0)+-2]
 20248  01F464  0EFE               	movlw	-2
 20249  01F466  006F FF8C  F02A    	movff	plusw1,btemp
 20250  01F46C  0E01               	movlw	1
 20251  01F46E  5E2A               	subwf	btemp^0,f,c
 20252  01F470  0EFE               	movlw	-2
 20253  01F472  0060  F0AB  FFE3   	movff	btemp,plusw1
 20254  01F478  0EFF               	movlw	-1
 20255  01F47A  006F FF8C  F02A    	movff	plusw1,btemp
 20256  01F480  0E00               	movlw	0
 20257  01F482  5A2A               	subwfb	btemp^0,f,c
 20258  01F484  0EFF               	movlw	-1
 20259  01F486  0060  F0AB  FFE3   	movff	btemp,plusw1
 20260  01F48C  0EFE               	movlw	-2
 20261  01F48E  006F FF8F FFD9     	movff	plusw1,fsr2l
 20262  01F494  0EFF               	movlw	-1
 20263  01F496  006F FF8F FFDA     	movff	plusw1,fsr2h
 20264  01F49C  0EFC               	movlw	-4
 20265  01F49E  006F FF8F FFDF     	movff	plusw1,indf2
 20266  01F4A4                     l3416:
 20267                           
 20268                           ; _put2d: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize
      +                           = 5, vargsize = 0
 20269  01F4A4  0EFB               	movlw	251
 20270  01F4A6  26E1               	addwf	fsr1l,f,c
 20271  01F4A8  0EFF               	movlw	255
 20272  01F4AA  22E2               	addwfc	fsr1h,f,c
 20273  01F4AC  0012               	return		;funcret
 20274  01F4AE                     __end_of_put2d:
 20275                           	opt callstack 0
 20276                           
 20277 ;; *************** function ___lbmod *****************
 20278 ;; Defined at:
 20279 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lbmod.c"
 20280 ;; Parameters:    Size  Location     Type
 20281 ;;  dividend        1  [STACK] unsigned char 
 20282 ;;  divisor         1  [STACK] unsigned char 
 20283 ;; Auto vars:     Size  Location     Type
 20284 ;;  rem             1  [STACK] unsigned char 
 20285 ;;  counter         1  [STACK] unsigned char 
 20286 ;; Return value:  Size  Location     Type
 20287 ;;                  1  [STACK] unsigned char 
 20288 ;; Registers used:
 20289 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 20290 ;; Tracked objects:
 20291 ;;		On entry : 0/3
 20292 ;;		On exit  : 0/0
 20293 ;;		Unchanged: 0/0
 20294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20299 ;;Total ram usage:        0 bytes
 20300 ;; Hardware stack levels used:    1
 20301 ;; Hardware stack levels required when called:   15
 20302 ;; This function calls:
 20303 ;;		Nothing
 20304 ;; This function is called by:
 20305 ;;		_put2d
 20306 ;; This function uses a reentrant model
 20307 ;;
 20308                           
 20309                           	psect	text57
 20310  0009F0                     __ptext57:
 20311                           	opt callstack 0
 20312  0009F0                     ___lbmod:
 20313                           	opt callstack 0
 20314                           
 20315                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20316  0009F0  52E6               	movf	postinc1,f,c
 20317  0009F2  52E6               	movf	postinc1,f,c
 20318                           
 20319                           ;stkvar	_counter @ sp[(-2)+1]
 20320                           
 20321                           ;incstack = 0
 20322  0009F4  0EFF               	movlw	-1
 20323  0009F6  6AE3               	clrf	plusw1,c
 20324  0009F8  86E3               	bsf	plusw1,3,c
 20325                           
 20326                           ;stkvar	_rem @ sp[(-2)+0]
 20327  0009FA  0EFE               	movlw	-2
 20328  0009FC  6AE3               	clrf	plusw1,c
 20329  0009FE                     l16566:
 20330                           
 20331                           ;stkvar	_dividend @ sp[(-2)+-1]
 20332  0009FE  0EFD               	movlw	-3
 20333  000A00  006F FF8C  F035    	movff	plusw1,btemp+11
 20334                           
 20335                           ;stkvar	_rem @ sp[(-2)+0]
 20336  000A06  0EFE               	movlw	-2
 20337  000A08  006F FF8C  F034    	movff	plusw1,btemp+10
 20338  000A0E  90D8               	bcf	status,0,c
 20339  000A10  3435               	rlcf	(btemp+11)^0,w,c
 20340  000A12  3434               	rlcf	(btemp+10)^0,w,c
 20341  000A14  6E35               	movwf	(btemp+11)^0,c
 20342                           
 20343                           ;stkvar	_rem @ sp[(-2)+0]
 20344  000A16  0EFE               	movlw	-2
 20345  000A18  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 20346                           
 20347                           ;stkvar	_dividend @ sp[(-2)+-1]
 20348  000A1E  50E1               	movf	fsr1l,w,c
 20349  000A20  0FFD               	addlw	-3
 20350  000A22  6ED9               	movwf	fsr2l,c
 20351  000A24  50E2               	movf	fsr1h,w,c
 20352  000A26  6EDA               	movwf	fsr2h,c
 20353  000A28  0EFF               	movlw	255
 20354  000A2A  22DA               	addwfc	fsr2h,f,c
 20355  000A2C  90D8               	bcf	status,0,c
 20356  000A2E  36DF               	rlcf	indf2,f,c
 20357                           
 20358                           ;stkvar	_divisor @ sp[(-2)+-2]
 20359                           ;stkvar	_rem @ sp[(-2)+0]
 20360  000A30  50E1               	movf	fsr1l,w,c
 20361  000A32  0FFE               	addlw	-2
 20362  000A34  6ED9               	movwf	fsr2l,c
 20363  000A36  50E2               	movf	fsr1h,w,c
 20364  000A38  6EDA               	movwf	fsr2h,c
 20365  000A3A  0EFF               	movlw	255
 20366  000A3C  22DA               	addwfc	fsr2h,f,c
 20367  000A3E  0EFC               	movlw	-4
 20368  000A40  50E3               	movf	plusw1,w,c
 20369  000A42  5CDE               	subwf	postinc2,w,c
 20370  000A44  A0D8               	btfss	status,0,c
 20371  000A46  D00D               	goto	l16574
 20372                           
 20373                           ;stkvar	_divisor @ sp[(-2)+-2]
 20374  000A48  0EFC               	movlw	-4
 20375  000A4A  006F FF8C  F035    	movff	plusw1,btemp+11
 20376                           
 20377                           ;stkvar	_rem @ sp[(-2)+0]
 20378  000A50  50E1               	movf	fsr1l,w,c
 20379  000A52  0FFE               	addlw	-2
 20380  000A54  6ED9               	movwf	fsr2l,c
 20381  000A56  50E2               	movf	fsr1h,w,c
 20382  000A58  6EDA               	movwf	fsr2h,c
 20383  000A5A  0EFF               	movlw	255
 20384  000A5C  22DA               	addwfc	fsr2h,f,c
 20385  000A5E  5035               	movf	(btemp+11)^0,w,c
 20386  000A60  5EDF               	subwf	indf2,f,c
 20387  000A62                     l16574:
 20388                           
 20389                           ;stkvar	_counter @ sp[(-2)+1]
 20390  000A62  0EFF               	movlw	-1
 20391  000A64  50E3               	movf	plusw1,w,c
 20392  000A66  6E2A               	movwf	btemp^0,c
 20393  000A68  0E01               	movlw	1
 20394  000A6A  5E2A               	subwf	btemp^0,f,c
 20395  000A6C  0EFF               	movlw	-1
 20396  000A6E  0060  F0AB  FFE3   	movff	btemp,plusw1
 20397  000A74  A4D8               	btfss	status,2,c
 20398  000A76  D7C3               	goto	l16566
 20399                           
 20400                           ;stkvar	_rem @ sp[(-2)+0]
 20401  000A78  0EFE               	movlw	-2
 20402  000A7A  006F FF8C  F02A    	movff	plusw1,btemp
 20403                           
 20404                           ; ___lbmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20405  000A80  52E5               	movf	postdec1,f,c
 20406  000A82  52E5               	movf	postdec1,f,c
 20407  000A84  52E5               	movf	postdec1,f,c
 20408  000A86  52E5               	movf	postdec1,f,c
 20409  000A88  0012               	return		;funcret
 20410  000A8A                     __end_of___lbmod:
 20411                           	opt callstack 0
 20412                           
 20413 ;; *************** function _current_sensor_cal *****************
 20414 ;; Defined at:
 20415 ;;		line 510 in file "main.c"
 20416 ;; Parameters:    Size  Location     Type
 20417 ;;		None
 20418 ;; Auto vars:     Size  Location     Type
 20419 ;;  cp              4  [STACK] unsigned long 
 20420 ;;  cb              4  [STACK] unsigned long 
 20421 ;;  x               1  [STACK] unsigned char 
 20422 ;; Return value:  Size  Location     Type
 20423 ;;                  1  [STACK] _Bool 
 20424 ;; Registers used:
 20425 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 20426 ;; Tracked objects:
 20427 ;;		On entry : 0/2
 20428 ;;		On exit  : 0/0
 20429 ;;		Unchanged: 0/0
 20430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20435 ;;Total ram usage:        0 bytes
 20436 ;; Hardware stack levels used:    1
 20437 ;; Hardware stack levels required when called:   27
 20438 ;; This function calls:
 20439 ;;		_WaitMs
 20440 ;;		_cal_current_zero
 20441 ;;		_clear_adc_scan
 20442 ;;		_get_raw_result
 20443 ;;		_get_switch
 20444 ;;		_get_vterm_ptr
 20445 ;;		_spinners
 20446 ;;		_sprintf
 20447 ;;		_start_adc_scan
 20448 ;;		_update_lcd
 20449 ;;		_write_cal_data
 20450 ;; This function is called by:
 20451 ;;		_main
 20452 ;; This function uses a reentrant model
 20453 ;;
 20454                           
 20455                           	psect	text58
 20456  018F88                     __ptext58:
 20457                           	opt callstack 0
 20458  018F88                     _current_sensor_cal:
 20459                           	opt callstack 0
 20460                           
 20461                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20462  018F88  0E09               	movlw	9
 20463  018F8A  26E1               	addwf	fsr1l,f,c
 20464  018F8C  0E00               	movlw	0
 20465  018F8E  22E2               	addwfc	fsr1h,f,c
 20466                           
 20467                           ;main.c: 512:  uint8_t x = 0;
 20468                           ;stkvar	_x @ sp[(-9)+8]
 20469                           
 20470                           ;incstack = 0
 20471  018F90  0EFF               	movlw	-1
 20472  018F92  6AE3               	clrf	plusw1,c
 20473                           
 20474                           ;main.c: 513:  uint32_t cb = 0, cp = 0;
 20475                           ;stkvar	_cb @ sp[(-9)+4]
 20476  018F94  0EFB               	movlw	-5
 20477  018F96  6AE3               	clrf	plusw1,c
 20478  018F98  0EFC               	movlw	-4
 20479  018F9A  6AE3               	clrf	plusw1,c
 20480  018F9C  0EFD               	movlw	-3
 20481  018F9E  6AE3               	clrf	plusw1,c
 20482  018FA0  0EFE               	movlw	-2
 20483  018FA2  6AE3               	clrf	plusw1,c
 20484                           
 20485                           ;stkvar	_cp @ sp[(-9)+0]
 20486  018FA4  0EF7               	movlw	-9
 20487  018FA6  6AE3               	clrf	plusw1,c
 20488  018FA8  0EF8               	movlw	-8
 20489  018FAA  6AE3               	clrf	plusw1,c
 20490  018FAC  0EF9               	movlw	-7
 20491  018FAE  6AE3               	clrf	plusw1,c
 20492  018FB0  0EFA               	movlw	-6
 20493  018FB2  6AE3               	clrf	plusw1,c
 20494                           
 20495                           ;main.c: 515:  sprintf(get_vterm_ptr(0, 0), "Battery and PV       ");
 20496  018FB4  0E03               	movlw	low STR_52
 20497  018FB6  6EE6               	movwf	postinc1,c
 20498  018FB8  0EFE               	movlw	high STR_52
 20499  018FBA  6EE6               	movwf	postinc1,c
 20500  018FBC  0E00               	movlw	0
 20501  018FBE  6EE6               	movwf	postinc1,c
 20502  018FC0  0E00               	movlw	0
 20503  018FC2  6EE6               	movwf	postinc1,c
 20504  018FC4  EC2B  F010         	call	_get_vterm_ptr	;wreg free
 20505  018FC8  0060  F0AB  FFE6   	movff	btemp,postinc1
 20506  018FCE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20507  018FD4  0E04               	movlw	4
 20508  018FD6  6EE6               	movwf	postinc1,c
 20509  018FD8  ECF9  F0FB         	call	_sprintf	;wreg free
 20510                           
 20511                           ; BSR set to: 0
 20512                           ;main.c: 516:  sprintf(get_vterm_ptr(1, 0), "Sensor Zero          ");
 20513  018FDC  0ED7               	movlw	low STR_53
 20514  018FDE  6EE6               	movwf	postinc1,c
 20515  018FE0  0EFD               	movlw	high STR_53
 20516  018FE2  6EE6               	movwf	postinc1,c
 20517  018FE4  0E00               	movlw	0
 20518  018FE6  6EE6               	movwf	postinc1,c
 20519  018FE8  0E01               	movlw	1
 20520  018FEA  6EE6               	movwf	postinc1,c
 20521  018FEC  EC2B  F010         	call	_get_vterm_ptr	;wreg free
 20522  018FF0  0060  F0AB  FFE6   	movff	btemp,postinc1
 20523  018FF6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20524  018FFC  0E04               	movlw	4
 20525  018FFE  6EE6               	movwf	postinc1,c
 20526  019000  ECF9  F0FB         	call	_sprintf	;wreg free
 20527                           
 20528                           ; BSR set to: 0
 20529                           ;main.c: 517:  sprintf(get_vterm_ptr(2, 0), "Calibration          ");
 20530  019004  0EC1               	movlw	low STR_54
 20531  019006  6EE6               	movwf	postinc1,c
 20532  019008  0EFD               	movlw	high STR_54
 20533  01900A  6EE6               	movwf	postinc1,c
 20534  01900C  0E00               	movlw	0
 20535  01900E  6EE6               	movwf	postinc1,c
 20536  019010  0E02               	movlw	2
 20537  019012  6EE6               	movwf	postinc1,c
 20538  019014  EC2B  F010         	call	_get_vterm_ptr	;wreg free
 20539  019018  0060  F0AB  FFE6   	movff	btemp,postinc1
 20540  01901E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20541  019024  0E04               	movlw	4
 20542  019026  6EE6               	movwf	postinc1,c
 20543  019028  ECF9  F0FB         	call	_sprintf	;wreg free
 20544                           
 20545                           ; BSR set to: 0
 20546                           ;main.c: 518:  update_lcd(0);
 20547  01902C  0E00               	movlw	0
 20548  01902E  6EE6               	movwf	postinc1,c
 20549  019030  ECAB  F0F4         	call	_update_lcd	;wreg free
 20550                           
 20551                           ;main.c: 519:  WaitMs(2000);
 20552  019034  0ED0               	movlw	208
 20553  019036  6EE6               	movwf	postinc1,c
 20554  019038  0E07               	movlw	7
 20555  01903A  6EE6               	movwf	postinc1,c
 20556  01903C  EC2F  F00F         	call	_WaitMs	;wreg free
 20557  019040                     l17154:
 20558                           
 20559                           ;main.c: 521:   if (++x > 64)
 20560                           ;stkvar	_x @ sp[(-9)+8]
 20561  019040  0EFF               	movlw	-1
 20562  019042  2AE3               	incf	plusw1,f,c
 20563  019044  0EFF               	movlw	-1
 20564  019046  006F FF8C  F02A    	movff	plusw1,btemp
 20565  01904C  0E40               	movlw	64
 20566  01904E  642A               	cpfsgt	btemp^0,c
 20567  019050  D001               	goto	l17158
 20568  019052  D1CF               	goto	l1520
 20569  019054                     l17158:
 20570                           
 20571                           ;main.c: 523:   sprintf(get_vterm_ptr(2, 0), "Release button %c   ", spinners(4, 0));
 20572  019054  0E00               	movlw	0
 20573  019056  6EE6               	movwf	postinc1,c
 20574  019058  0E04               	movlw	4
 20575  01905A  6EE6               	movwf	postinc1,c
 20576  01905C  EC75  F0FD         	call	_spinners	;wreg free
 20577  019060  502A               	movf	btemp^0,w,c
 20578  019062  6EE6               	movwf	postinc1,c
 20579  019064  0E00               	movlw	0
 20580  019066  6EE6               	movwf	postinc1,c
 20581  019068  0E47               	movlw	low STR_55
 20582  01906A  6EE6               	movwf	postinc1,c
 20583  01906C  0EFF               	movlw	high STR_55
 20584  01906E  6EE6               	movwf	postinc1,c
 20585  019070  0E00               	movlw	0
 20586  019072  6EE6               	movwf	postinc1,c
 20587  019074  0E02               	movlw	2
 20588  019076  6EE6               	movwf	postinc1,c
 20589  019078  EC2B  F010         	call	_get_vterm_ptr	;wreg free
 20590  01907C  0060  F0AB  FFE6   	movff	btemp,postinc1
 20591  019082  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20592  019088  0E06               	movlw	6
 20593  01908A  6EE6               	movwf	postinc1,c
 20594  01908C  ECF9  F0FB         	call	_sprintf	;wreg free
 20595                           
 20596                           ;main.c: 524:   update_lcd(0);
 20597  019090  0E00               	movlw	0
 20598  019092  6EE6               	movwf	postinc1,c
 20599  019094  ECAB  F0F4         	call	_update_lcd	;wreg free
 20600                           
 20601                           ;main.c: 525:   WaitMs(100);
 20602  019098  0E64               	movlw	100
 20603  01909A  6EE6               	movwf	postinc1,c
 20604  01909C  0E00               	movlw	0
 20605  01909E  6EE6               	movwf	postinc1,c
 20606  0190A0  EC2F  F00F         	call	_WaitMs	;wreg free
 20607                           
 20608                           ;main.c: 526:  } while (get_switch(SCALIB));
 20609  0190A4  0E04               	movlw	4
 20610  0190A6  6EE6               	movwf	postinc1,c
 20611  0190A8  EC42  F010         	call	_get_switch	;wreg free
 20612  0190AC  502A               	movf	btemp^0,w,c
 20613  0190AE  A4D8               	btfss	status,2,c
 20614  0190B0  D7C7               	goto	l17154
 20615                           
 20616                           ;main.c: 528:  x = 0;
 20617                           ;stkvar	_x @ sp[(-9)+8]
 20618  0190B2  0EFF               	movlw	-1
 20619  0190B4  6AE3               	clrf	plusw1,c
 20620  0190B6                     l17166:
 20621                           
 20622                           ;main.c: 530:   cb += get_raw_result(C_BATT);
 20623  0190B6  0E00               	movlw	0
 20624  0190B8  6EE6               	movwf	postinc1,c
 20625  0190BA  EC32  F012         	call	_get_raw_result	;wreg free
 20626                           
 20627                           ;stkvar	_cb @ sp[(-9)+4]
 20628  0190BE  50E1               	movf	fsr1l,w,c
 20629  0190C0  0FFB               	addlw	-5
 20630  0190C2  6ED9               	movwf	fsr2l,c
 20631  0190C4  50E2               	movf	fsr1h,w,c
 20632  0190C6  6EDA               	movwf	fsr2h,c
 20633  0190C8  0EFF               	movlw	255
 20634  0190CA  22DA               	addwfc	fsr2h,f,c
 20635  0190CC  502A               	movf	btemp^0,w,c
 20636  0190CE  26DE               	addwf	postinc2,f,c
 20637  0190D0  502B               	movf	(btemp+1)^0,w,c
 20638  0190D2  22DE               	addwfc	postinc2,f,c
 20639  0190D4  0E00               	movlw	0
 20640  0190D6  22DE               	addwfc	postinc2,f,c
 20641  0190D8  22DE               	addwfc	postinc2,f,c
 20642                           
 20643                           ;main.c: 531:   cp += get_raw_result(C_PV);
 20644  0190DA  0E01               	movlw	1
 20645  0190DC  6EE6               	movwf	postinc1,c
 20646  0190DE  EC32  F012         	call	_get_raw_result	;wreg free
 20647                           
 20648                           ;stkvar	_cp @ sp[(-9)+0]
 20649  0190E2  50E1               	movf	fsr1l,w,c
 20650  0190E4  0FF7               	addlw	-9
 20651  0190E6  6ED9               	movwf	fsr2l,c
 20652  0190E8  50E2               	movf	fsr1h,w,c
 20653  0190EA  6EDA               	movwf	fsr2h,c
 20654  0190EC  0EFF               	movlw	255
 20655  0190EE  22DA               	addwfc	fsr2h,f,c
 20656  0190F0  502A               	movf	btemp^0,w,c
 20657  0190F2  26DE               	addwf	postinc2,f,c
 20658  0190F4  502B               	movf	(btemp+1)^0,w,c
 20659  0190F6  22DE               	addwfc	postinc2,f,c
 20660  0190F8  0E00               	movlw	0
 20661  0190FA  22DE               	addwfc	postinc2,f,c
 20662  0190FC  22DE               	addwfc	postinc2,f,c
 20663                           
 20664                           ;main.c: 532:   sprintf(get_vterm_ptr(0, 0), "Sensor Readings      ");
 20665  0190FE  0E45               	movlw	low STR_56
 20666  019100  6EE6               	movwf	postinc1,c
 20667  019102  0EFE               	movlw	high STR_56
 20668  019104  6EE6               	movwf	postinc1,c
 20669  019106  0E00               	movlw	0
 20670  019108  6EE6               	movwf	postinc1,c
 20671  01910A  0E00               	movlw	0
 20672  01910C  6EE6               	movwf	postinc1,c
 20673  01910E  EC2B  F010         	call	_get_vterm_ptr	;wreg free
 20674  019112  0060  F0AB  FFE6   	movff	btemp,postinc1
 20675  019118  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20676  01911E  0E04               	movlw	4
 20677  019120  6EE6               	movwf	postinc1,c
 20678  019122  ECF9  F0FB         	call	_sprintf	;wreg free
 20679                           
 20680                           ; BSR set to: 0
 20681                           ;main.c: 533:   sprintf(get_vterm_ptr(1, 0), " %d %d               ", get_raw_result(C_B
      +                          ATT), get_raw_result(C_PV));
 20682  019126  0E01               	movlw	1
 20683  019128  6EE6               	movwf	postinc1,c
 20684  01912A  EC32  F012         	call	_get_raw_result	;wreg free
 20685  01912E  0060  F0AB  FFE6   	movff	btemp,postinc1
 20686  019134  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20687  01913A  0E00               	movlw	0
 20688  01913C  6EE6               	movwf	postinc1,c
 20689  01913E  EC32  F012         	call	_get_raw_result	;wreg free
 20690  019142  0060  F0AB  FFE6   	movff	btemp,postinc1
 20691  019148  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20692  01914E  0E3D               	movlw	low STR_57
 20693  019150  6EE6               	movwf	postinc1,c
 20694  019152  0EFD               	movlw	high STR_57
 20695  019154  6EE6               	movwf	postinc1,c
 20696  019156  0E00               	movlw	0
 20697  019158  6EE6               	movwf	postinc1,c
 20698  01915A  0E01               	movlw	1
 20699  01915C  6EE6               	movwf	postinc1,c
 20700  01915E  EC2B  F010         	call	_get_vterm_ptr	;wreg free
 20701  019162  0060  F0AB  FFE6   	movff	btemp,postinc1
 20702  019168  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20703  01916E  0E08               	movlw	8
 20704  019170  6EE6               	movwf	postinc1,c
 20705  019172  ECF9  F0FB         	call	_sprintf	;wreg free
 20706                           
 20707                           ; BSR set to: 0
 20708                           ;main.c: 534:   sprintf(get_vterm_ptr(2, 0), "Stability clock %d   ", x);
 20709                           ;stkvar	_x @ sp[(-9)+8]
 20710  019176  0EFF               	movlw	-1
 20711  019178  50E3               	movf	plusw1,w,c
 20712  01917A  6EE6               	movwf	postinc1,c
 20713  01917C  0E00               	movlw	0
 20714  01917E  6EE6               	movwf	postinc1,c
 20715  019180  0E9D               	movlw	low STR_58
 20716  019182  6EE6               	movwf	postinc1,c
 20717  019184  0EFE               	movlw	high STR_58
 20718  019186  6EE6               	movwf	postinc1,c
 20719  019188  0E00               	movlw	0
 20720  01918A  6EE6               	movwf	postinc1,c
 20721  01918C  0E02               	movlw	2
 20722  01918E  6EE6               	movwf	postinc1,c
 20723  019190  EC2B  F010         	call	_get_vterm_ptr	;wreg free
 20724  019194  0060  F0AB  FFE6   	movff	btemp,postinc1
 20725  01919A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20726  0191A0  0E06               	movlw	6
 20727  0191A2  6EE6               	movwf	postinc1,c
 20728  0191A4  ECF9  F0FB         	call	_sprintf	;wreg free
 20729                           
 20730                           ; BSR set to: 0
 20731                           ;main.c: 535:   update_lcd(0);
 20732  0191A8  0E00               	movlw	0
 20733  0191AA  6EE6               	movwf	postinc1,c
 20734  0191AC  ECAB  F0F4         	call	_update_lcd	;wreg free
 20735                           
 20736                           ;main.c: 536:   clear_adc_scan();
 20737  0191B0  ECC5  F013         	call	_clear_adc_scan	;wreg free
 20738                           
 20739                           ; BSR set to: 1
 20740                           ;main.c: 537:   start_adc_scan();
 20741  0191B4  EC61  F00A         	call	_start_adc_scan	;wreg free
 20742                           
 20743                           ;main.c: 538:   WaitMs(100);
 20744  0191B8  0E64               	movlw	100
 20745  0191BA  6EE6               	movwf	postinc1,c
 20746  0191BC  0E00               	movlw	0
 20747  0191BE  6EE6               	movwf	postinc1,c
 20748  0191C0  EC2F  F00F         	call	_WaitMs	;wreg free
 20749                           
 20750                           ;main.c: 539:  } while (++x < 64);
 20751                           ;stkvar	_x @ sp[(-9)+8]
 20752  0191C4  0EFF               	movlw	-1
 20753  0191C6  2AE3               	incf	plusw1,f,c
 20754  0191C8  0EFF               	movlw	-1
 20755  0191CA  006F FF8C  F02A    	movff	plusw1,btemp
 20756  0191D0  0E3F               	movlw	63
 20757  0191D2  642A               	cpfsgt	btemp^0,c
 20758  0191D4  D770               	goto	l17166
 20759                           
 20760                           ;main.c: 540:  cb = cb >> 6;
 20761  0191D6  0E06               	movlw	6
 20762  0191D8  6E35               	movwf	(btemp+11)^0,c
 20763                           
 20764                           ;stkvar	_cb @ sp[(-9)+4]
 20765  0191DA  50E1               	movf	fsr1l,w,c
 20766  0191DC  0FFB               	addlw	-5
 20767  0191DE  6ED9               	movwf	fsr2l,c
 20768  0191E0  50E2               	movf	fsr1h,w,c
 20769  0191E2  6EDA               	movwf	fsr2h,c
 20770  0191E4  0EFF               	movlw	255
 20771  0191E6  22DA               	addwfc	fsr2h,f,c
 20772  0191E8  2835               	incf	(btemp+11)^0,w,c
 20773  0191EA  52DE               	movf	postinc2,f,c
 20774  0191EC  D007               	goto	u16780
 20775  0191EE                     u16785:
 20776  0191EE  52DE               	movf	postinc2,f,c
 20777  0191F0  52DE               	movf	postinc2,f,c
 20778  0191F2  90D8               	bcf	status,0,c
 20779  0191F4  32DD               	rrcf	postdec2,f,c
 20780  0191F6  32DD               	rrcf	postdec2,f,c
 20781  0191F8  32DD               	rrcf	postdec2,f,c
 20782  0191FA  32DE               	rrcf	postinc2,f,c
 20783  0191FC                     u16780:
 20784  0191FC  2EE8               	decfsz	wreg,f,c
 20785  0191FE  D7F7               	goto	u16785
 20786                           
 20787                           ;main.c: 541:  cp = cp >> 6;
 20788  019200  0E06               	movlw	6
 20789  019202  6E35               	movwf	(btemp+11)^0,c
 20790                           
 20791                           ;stkvar	_cp @ sp[(-9)+0]
 20792  019204  50E1               	movf	fsr1l,w,c
 20793  019206  0FF7               	addlw	-9
 20794  019208  6ED9               	movwf	fsr2l,c
 20795  01920A  50E2               	movf	fsr1h,w,c
 20796  01920C  6EDA               	movwf	fsr2h,c
 20797  01920E  0EFF               	movlw	255
 20798  019210  22DA               	addwfc	fsr2h,f,c
 20799  019212  2835               	incf	(btemp+11)^0,w,c
 20800  019214  52DE               	movf	postinc2,f,c
 20801  019216  D007               	goto	u16790
 20802  019218                     u16795:
 20803  019218  52DE               	movf	postinc2,f,c
 20804  01921A  52DE               	movf	postinc2,f,c
 20805  01921C  90D8               	bcf	status,0,c
 20806  01921E  32DD               	rrcf	postdec2,f,c
 20807  019220  32DD               	rrcf	postdec2,f,c
 20808  019222  32DD               	rrcf	postdec2,f,c
 20809  019224  32DE               	rrcf	postinc2,f,c
 20810  019226                     u16790:
 20811  019226  2EE8               	decfsz	wreg,f,c
 20812  019228  D7F7               	goto	u16795
 20813                           
 20814                           ;main.c: 543:  if (cal_current_zero(0, cb, cp)) {
 20815                           ;stkvar	_cp @ sp[(-9)+0]
 20816  01922A  0EF7               	movlw	-9
 20817  01922C  006F FF8F FFE6     	movff	plusw1,postinc1
 20818  019232  006F FF8F FFE6     	movff	plusw1,postinc1
 20819                           
 20820                           ;stkvar	_cb @ sp[(-11)+4]
 20821  019238  0EF9               	movlw	-7
 20822  01923A  006F FF8F FFE6     	movff	plusw1,postinc1
 20823  019240  006F FF8F FFE6     	movff	plusw1,postinc1
 20824  019246  0E00               	movlw	0
 20825  019248  6EE6               	movwf	postinc1,c
 20826  01924A  EC91  F005         	call	_cal_current_zero	;wreg free
 20827  01924E  502A               	movf	btemp^0,w,c
 20828  019250  B4D8               	btfsc	status,2,c
 20829  019252  D075               	goto	l17204
 20830                           
 20831                           ;main.c: 544:   cal_current_zero(1, cb, cp);
 20832                           ;stkvar	_cp @ sp[(-9)+0]
 20833  019254  0EF7               	movlw	-9
 20834  019256  006F FF8F FFE6     	movff	plusw1,postinc1
 20835  01925C  006F FF8F FFE6     	movff	plusw1,postinc1
 20836                           
 20837                           ;stkvar	_cb @ sp[(-11)+4]
 20838  019262  0EF9               	movlw	-7
 20839  019264  006F FF8F FFE6     	movff	plusw1,postinc1
 20840  01926A  006F FF8F FFE6     	movff	plusw1,postinc1
 20841  019270  0E01               	movlw	1
 20842  019272  6EE6               	movwf	postinc1,c
 20843  019274  EC91  F005         	call	_cal_current_zero	;wreg free
 20844                           
 20845                           ;main.c: 545:   sprintf(get_vterm_ptr(0, 0), "Battery and PV       ");
 20846  019278  0E03               	movlw	low STR_52
 20847  01927A  6EE6               	movwf	postinc1,c
 20848  01927C  0EFE               	movlw	high STR_52
 20849  01927E  6EE6               	movwf	postinc1,c
 20850  019280  0E00               	movlw	0
 20851  019282  6EE6               	movwf	postinc1,c
 20852  019284  0E00               	movlw	0
 20853  019286  6EE6               	movwf	postinc1,c
 20854  019288  EC2B  F010         	call	_get_vterm_ptr	;wreg free
 20855  01928C  0060  F0AB  FFE6   	movff	btemp,postinc1
 20856  019292  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20857  019298  0E04               	movlw	4
 20858  01929A  6EE6               	movwf	postinc1,c
 20859  01929C  ECF9  F0FB         	call	_sprintf	;wreg free
 20860                           
 20861                           ; BSR set to: 0
 20862                           ;main.c: 546:   sprintf(get_vterm_ptr(1, 0), " %ld %ld             ", cb, cp);
 20863                           ;stkvar	_cp @ sp[(-9)+0]
 20864  0192A0  0EF7               	movlw	-9
 20865  0192A2  006F FF8F FFE6     	movff	plusw1,postinc1
 20866  0192A8  006F FF8F FFE6     	movff	plusw1,postinc1
 20867  0192AE  006F FF8F FFE6     	movff	plusw1,postinc1
 20868  0192B4  006F FF8F FFE6     	movff	plusw1,postinc1
 20869                           
 20870                           ;stkvar	_cb @ sp[(-13)+4]
 20871  0192BA  0EF7               	movlw	-9
 20872  0192BC  006F FF8F FFE6     	movff	plusw1,postinc1
 20873  0192C2  006F FF8F FFE6     	movff	plusw1,postinc1
 20874  0192C8  006F FF8F FFE6     	movff	plusw1,postinc1
 20875  0192CE  006F FF8F FFE6     	movff	plusw1,postinc1
 20876  0192D4  0E53               	movlw	low STR_60
 20877  0192D6  6EE6               	movwf	postinc1,c
 20878  0192D8  0EFD               	movlw	high STR_60
 20879  0192DA  6EE6               	movwf	postinc1,c
 20880  0192DC  0E00               	movlw	0
 20881  0192DE  6EE6               	movwf	postinc1,c
 20882  0192E0  0E01               	movlw	1
 20883  0192E2  6EE6               	movwf	postinc1,c
 20884  0192E4  EC2B  F010         	call	_get_vterm_ptr	;wreg free
 20885  0192E8  0060  F0AB  FFE6   	movff	btemp,postinc1
 20886  0192EE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20887  0192F4  0E0C               	movlw	12
 20888  0192F6  6EE6               	movwf	postinc1,c
 20889  0192F8  ECF9  F0FB         	call	_sprintf	;wreg free
 20890                           
 20891                           ; BSR set to: 0
 20892                           ;main.c: 547:   sprintf(get_vterm_ptr(2, 0), "Zero Cal Set         ");
 20893  0192FC  0EED               	movlw	low STR_61
 20894  0192FE  6EE6               	movwf	postinc1,c
 20895  019300  0EFD               	movlw	high STR_61
 20896  019302  6EE6               	movwf	postinc1,c
 20897  019304  0E00               	movlw	0
 20898  019306  6EE6               	movwf	postinc1,c
 20899  019308  0E02               	movlw	2
 20900  01930A  6EE6               	movwf	postinc1,c
 20901  01930C  EC2B  F010         	call	_get_vterm_ptr	;wreg free
 20902  019310  0060  F0AB  FFE6   	movff	btemp,postinc1
 20903  019316  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20904  01931C  0E04               	movlw	4
 20905  01931E  6EE6               	movwf	postinc1,c
 20906  019320  ECF9  F0FB         	call	_sprintf	;wreg free
 20907                           
 20908                           ; BSR set to: 0
 20909                           ;main.c: 548:   update_lcd(0);
 20910  019324  0E00               	movlw	0
 20911  019326  6EE6               	movwf	postinc1,c
 20912  019328  ECAB  F0F4         	call	_update_lcd	;wreg free
 20913                           
 20914                           ;main.c: 549:   WaitMs(2000);
 20915  01932C  0ED0               	movlw	208
 20916  01932E  6EE6               	movwf	postinc1,c
 20917  019330  0E07               	movlw	7
 20918  019332  6EE6               	movwf	postinc1,c
 20919  019334  EC2F  F00F         	call	_WaitMs	;wreg free
 20920                           
 20921                           ;main.c: 550:   write_cal_data();
 20922  019338  EC08  F0F6         	call	_write_cal_data	;wreg free
 20923                           
 20924                           ;main.c: 551:  } else {
 20925  01933C  D05A               	goto	l1520
 20926  01933E                     l17204:
 20927                           
 20928                           ;main.c: 552:   sprintf(get_vterm_ptr(0, 0), "Battery and PV       ");
 20929  01933E  0E03               	movlw	low STR_52
 20930  019340  6EE6               	movwf	postinc1,c
 20931  019342  0EFE               	movlw	high STR_52
 20932  019344  6EE6               	movwf	postinc1,c
 20933  019346  0E00               	movlw	0
 20934  019348  6EE6               	movwf	postinc1,c
 20935  01934A  0E00               	movlw	0
 20936  01934C  6EE6               	movwf	postinc1,c
 20937  01934E  EC2B  F010         	call	_get_vterm_ptr	;wreg free
 20938  019352  0060  F0AB  FFE6   	movff	btemp,postinc1
 20939  019358  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20940  01935E  0E04               	movlw	4
 20941  019360  6EE6               	movwf	postinc1,c
 20942  019362  ECF9  F0FB         	call	_sprintf	;wreg free
 20943                           
 20944                           ;main.c: 553:   sprintf(get_vterm_ptr(1, 0), " %ld %ld             ", get_raw_result(C_B
      +                          ATT), get_raw_result(C_PV));
 20945  019366  0E01               	movlw	1
 20946  019368  6EE6               	movwf	postinc1,c
 20947  01936A  EC32  F012         	call	_get_raw_result	;wreg free
 20948  01936E  0060  F0AB  FFE6   	movff	btemp,postinc1
 20949  019374  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20950  01937A  0E00               	movlw	0
 20951  01937C  6EE6               	movwf	postinc1,c
 20952  01937E  EC32  F012         	call	_get_raw_result	;wreg free
 20953  019382  0060  F0AB  FFE6   	movff	btemp,postinc1
 20954  019388  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20955  01938E  0E53               	movlw	low STR_60
 20956  019390  6EE6               	movwf	postinc1,c
 20957  019392  0EFD               	movlw	high STR_60
 20958  019394  6EE6               	movwf	postinc1,c
 20959  019396  0E00               	movlw	0
 20960  019398  6EE6               	movwf	postinc1,c
 20961  01939A  0E01               	movlw	1
 20962  01939C  6EE6               	movwf	postinc1,c
 20963  01939E  EC2B  F010         	call	_get_vterm_ptr	;wreg free
 20964  0193A2  0060  F0AB  FFE6   	movff	btemp,postinc1
 20965  0193A8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20966  0193AE  0E08               	movlw	8
 20967  0193B0  6EE6               	movwf	postinc1,c
 20968  0193B2  ECF9  F0FB         	call	_sprintf	;wreg free
 20969                           
 20970                           ;main.c: 554:   sprintf(get_vterm_ptr(2, 0), "Zero Out Of Range    ");
 20971  0193B6  0E71               	movlw	low STR_64
 20972  0193B8  6EE6               	movwf	postinc1,c
 20973  0193BA  0EFE               	movlw	high STR_64
 20974  0193BC  6EE6               	movwf	postinc1,c
 20975  0193BE  0E00               	movlw	0
 20976  0193C0  6EE6               	movwf	postinc1,c
 20977  0193C2  0E02               	movlw	2
 20978  0193C4  6EE6               	movwf	postinc1,c
 20979  0193C6  EC2B  F010         	call	_get_vterm_ptr	;wreg free
 20980  0193CA  0060  F0AB  FFE6   	movff	btemp,postinc1
 20981  0193D0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20982  0193D6  0E04               	movlw	4
 20983  0193D8  6EE6               	movwf	postinc1,c
 20984  0193DA  ECF9  F0FB         	call	_sprintf	;wreg free
 20985                           
 20986                           ;main.c: 555:   update_lcd(0);
 20987  0193DE  0E00               	movlw	0
 20988  0193E0  6EE6               	movwf	postinc1,c
 20989  0193E2  ECAB  F0F4         	call	_update_lcd	;wreg free
 20990                           
 20991                           ;main.c: 556:   WaitMs(2000);
 20992  0193E6  0ED0               	movlw	208
 20993  0193E8  6EE6               	movwf	postinc1,c
 20994  0193EA  0E07               	movlw	7
 20995  0193EC  6EE6               	movwf	postinc1,c
 20996  0193EE  EC2F  F00F         	call	_WaitMs	;wreg free
 20997  0193F2                     l1520:
 20998                           
 20999                           ; _current_sensor_cal: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 21000  0193F2  0EF7               	movlw	247
 21001  0193F4  26E1               	addwf	fsr1l,f,c
 21002  0193F6  0EFF               	movlw	255
 21003  0193F8  22E2               	addwfc	fsr1h,f,c
 21004  0193FA  0012               	return		;funcret
 21005  0193FC                     __end_of_current_sensor_cal:
 21006                           	opt callstack 0
 21007                           
 21008 ;; *************** function _write_cal_data *****************
 21009 ;; Defined at:
 21010 ;;		line 408 in file "daq.c"
 21011 ;; Parameters:    Size  Location     Type
 21012 ;;		None
 21013 ;; Auto vars:     Size  Location     Type
 21014 ;;  x               2  [STACK] unsigned short 
 21015 ;;  r_cal_ptr       2  [STACK] PTR unsigned char 
 21016 ;;		 -> R(155), 
 21017 ;;  y               2  [STACK] unsigned short 
 21018 ;;  crcVal          1  [STACK] unsigned char 
 21019 ;; Return value:  Size  Location     Type
 21020 ;;                  1  [STACK] void 
 21021 ;; Registers used:
 21022 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
 21023 ;; Tracked objects:
 21024 ;;		On entry : 0/39
 21025 ;;		On exit  : 0/0
 21026 ;;		Unchanged: 0/0
 21027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21032 ;;Total ram usage:        0 bytes
 21033 ;; Hardware stack levels used:    1
 21034 ;; Hardware stack levels required when called:   17
 21035 ;; This function calls:
 21036 ;;		_CRC_8BitDataWrite
 21037 ;;		_CRC_CalculatedResultGet
 21038 ;;		_CRC_Initialize
 21039 ;;		_CRC_IsBusy
 21040 ;;		_CRC_Start
 21041 ;;		_DATAEE_WriteByte
 21042 ;; This function is called by:
 21043 ;;		_main
 21044 ;;		_current_sensor_cal
 21045 ;; This function uses a reentrant model
 21046 ;;
 21047                           
 21048                           	psect	text59
 21049  01EC10                     __ptext59:
 21050                           	opt callstack 0
 21051  01EC10                     _write_cal_data:
 21052                           	opt callstack 0
 21053                           
 21054                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21055  01EC10  0E07               	movlw	7
 21056  01EC12  26E1               	addwf	fsr1l,f,c
 21057  01EC14  0E00               	movlw	0
 21058  01EC16  22E2               	addwfc	fsr1h,f,c
 21059                           
 21060                           ;daq.c: 410:  uint16_t x = 0, y;
 21061                           ;stkvar	_x @ sp[(-7)+0]
 21062                           
 21063                           ;incstack = 0
 21064  01EC18  0EF9               	movlw	-7
 21065  01EC1A  6AE3               	clrf	plusw1,c
 21066  01EC1C  0EFA               	movlw	-6
 21067  01EC1E  6AE3               	clrf	plusw1,c
 21068                           
 21069                           ;daq.c: 411:  uint8_t *r_cal_ptr, crcVal;;daq.c: 413:  y = sizeof(R);
 21070  01EC20  0E9B               	movlw	155
 21071  01EC22  6E34               	movwf	(btemp+10)^0,c
 21072  01EC24  0E00               	movlw	0
 21073  01EC26  6E35               	movwf	(btemp+11)^0,c
 21074                           
 21075                           ;stkvar	_y @ sp[(-7)+4]
 21076  01EC28  0EFD               	movlw	-3
 21077  01EC2A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 21078  01EC30  0EFE               	movlw	-2
 21079  01EC32  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 21080                           
 21081                           ;daq.c: 414:  R.crc = 0x42;
 21082  01EC38  0E42               	movlw	66
 21083  01EC3A  0101               	movlb	1	; () banked
 21084  01EC3C  6F9A               	movwf	(_R+154)& (0+255),b	;volatile
 21085                           
 21086                           ; BSR set to: 1
 21087                           ;daq.c: 415:  r_cal_ptr = (uint8_t*) & R;
 21088                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 21089  01EC3E  0E01               	movlw	high _R
 21090  01EC40  6E2A               	movwf	btemp^0,c
 21091  01EC42  0EFC               	movlw	-4
 21092  01EC44  0060  F0AB  FFE3   	movff	btemp,plusw1
 21093  01EC4A  0E00               	movlw	low _R
 21094  01EC4C  6E2A               	movwf	btemp^0,c
 21095  01EC4E  0EFB               	movlw	-5
 21096  01EC50  0060  F0AB  FFE3   	movff	btemp,plusw1
 21097                           
 21098                           ; BSR set to: 1
 21099                           ;daq.c: 416:  R.checkmark = 0x1957;
 21100  01EC56  0E19               	movlw	25
 21101  01EC58  6F99               	movwf	(_R+153)& (0+255),b	;volatile
 21102  01EC5A  0E57               	movlw	87
 21103  01EC5C  6F98               	movwf	(_R+152)& (0+255),b	;volatile
 21104                           
 21105                           ; BSR set to: 1
 21106                           ;daq.c: 418:  CRC_Initialize();
 21107  01EC5E  ECB5  F006         	call	_CRC_Initialize	;wreg free
 21108                           
 21109                           ; BSR set to: 0
 21110                           ;daq.c: 421:  CRC_Start();
 21111  01EC62  ECC2  F013         	call	_CRC_Start	;wreg free
 21112  01EC66                     l13486:
 21113                           
 21114                           ;daq.c: 424:   DATAEE_WriteByte(x, r_cal_ptr[x]);
 21115                           ;stkvar	_x @ sp[(-7)+0]
 21116  01EC66  0EF9               	movlw	-7
 21117  01EC68  006F FF8C  F034    	movff	plusw1,btemp+10
 21118  01EC6E  0EFA               	movlw	-6
 21119  01EC70  006F FF8C  F035    	movff	plusw1,btemp+11
 21120                           
 21121                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 21122  01EC76  0EFB               	movlw	-5
 21123  01EC78  006F FF8C  F032    	movff	plusw1,btemp+8
 21124  01EC7E  0EFC               	movlw	-4
 21125  01EC80  006F FF8C  F033    	movff	plusw1,btemp+9
 21126  01EC86  5034               	movf	(btemp+10)^0,w,c
 21127  01EC88  2432               	addwf	(btemp+8)^0,w,c
 21128  01EC8A  6ED9               	movwf	fsr2l,c
 21129  01EC8C  5035               	movf	(btemp+11)^0,w,c
 21130  01EC8E  2033               	addwfc	(btemp+9)^0,w,c
 21131  01EC90  6EDA               	movwf	fsr2h,c
 21132  01EC92  50DF               	movf	indf2,w,c
 21133  01EC94  6EE6               	movwf	postinc1,c
 21134                           
 21135                           ;stkvar	_x @ sp[(-8)+0]
 21136  01EC96  0EF8               	movlw	-8
 21137  01EC98  006F FF8F FFE6     	movff	plusw1,postinc1
 21138  01EC9E  006F FF8F FFE6     	movff	plusw1,postinc1
 21139  01ECA4  EC95  F009         	call	_DATAEE_WriteByte	;wreg free
 21140                           
 21141                           ;daq.c: 425:   CRC_8BitDataWrite(r_cal_ptr[x]);
 21142                           ;stkvar	_x @ sp[(-7)+0]
 21143  01ECA8  0EF9               	movlw	-7
 21144  01ECAA  006F FF8C  F034    	movff	plusw1,btemp+10
 21145  01ECB0  0EFA               	movlw	-6
 21146  01ECB2  006F FF8C  F035    	movff	plusw1,btemp+11
 21147                           
 21148                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 21149  01ECB8  0EFB               	movlw	-5
 21150  01ECBA  006F FF8C  F032    	movff	plusw1,btemp+8
 21151  01ECC0  0EFC               	movlw	-4
 21152  01ECC2  006F FF8C  F033    	movff	plusw1,btemp+9
 21153  01ECC8  5034               	movf	(btemp+10)^0,w,c
 21154  01ECCA  2432               	addwf	(btemp+8)^0,w,c
 21155  01ECCC  6ED9               	movwf	fsr2l,c
 21156  01ECCE  5035               	movf	(btemp+11)^0,w,c
 21157  01ECD0  2033               	addwfc	(btemp+9)^0,w,c
 21158  01ECD2  6EDA               	movwf	fsr2h,c
 21159  01ECD4  50DF               	movf	indf2,w,c
 21160  01ECD6  6EE6               	movwf	postinc1,c
 21161  01ECD8  EC29  F013         	call	_CRC_8BitDataWrite	;wreg free
 21162  01ECDC                     l13490:
 21163  01ECDC  EC4B  F013         	call	_CRC_IsBusy	;wreg free
 21164  01ECE0  502A               	movf	btemp^0,w,c
 21165  01ECE2  A4D8               	btfss	status,2,c
 21166  01ECE4  D7FB               	goto	l13490
 21167                           
 21168                           ;daq.c: 427:  } while (++x < y);
 21169                           ;stkvar	_y @ sp[(-7)+4]
 21170  01ECE6  0EFD               	movlw	-3
 21171  01ECE8  006F FF8C  F034    	movff	plusw1,btemp+10
 21172  01ECEE  0EFE               	movlw	-2
 21173  01ECF0  006F FF8C  F035    	movff	plusw1,btemp+11
 21174                           
 21175                           ;stkvar	_x @ sp[(-7)+0]
 21176  01ECF6  0EF9               	movlw	-7
 21177  01ECF8  50E3               	movf	plusw1,w,c
 21178  01ECFA  0F01               	addlw	1
 21179  01ECFC  6E2A               	movwf	btemp^0,c
 21180  01ECFE  0EF9               	movlw	-7
 21181  01ED00  0060  F0AB  FFE3   	movff	btemp,plusw1
 21182  01ED06  6A2A               	clrf	btemp^0,c
 21183  01ED08  0EFA               	movlw	-6
 21184  01ED0A  50E3               	movf	plusw1,w,c
 21185  01ED0C  202A               	addwfc	btemp^0,w,c
 21186  01ED0E  6E2A               	movwf	btemp^0,c
 21187  01ED10  0EFA               	movlw	-6
 21188  01ED12  0060  F0AB  FFE3   	movff	btemp,plusw1
 21189  01ED18  0EF9               	movlw	-7
 21190  01ED1A  006F FF8C  F032    	movff	plusw1,btemp+8
 21191  01ED20  0EFA               	movlw	-6
 21192  01ED22  006F FF8C  F033    	movff	plusw1,btemp+9
 21193  01ED28  5034               	movf	(btemp+10)^0,w,c
 21194  01ED2A  5C32               	subwf	(btemp+8)^0,w,c
 21195  01ED2C  5035               	movf	(btemp+11)^0,w,c
 21196  01ED2E  5833               	subwfb	(btemp+9)^0,w,c
 21197  01ED30  A0D8               	btfss	status,0,c
 21198  01ED32  D799               	goto	l13486
 21199                           
 21200                           ;daq.c: 429:  crcVal = CRC_CalculatedResultGet(0, 0x00);
 21201  01ED34  0E00               	movlw	0
 21202  01ED36  6EE6               	movwf	postinc1,c
 21203  01ED38  0E00               	movlw	0
 21204  01ED3A  6EE6               	movwf	postinc1,c
 21205  01ED3C  0E00               	movlw	0
 21206  01ED3E  6EE6               	movwf	postinc1,c
 21207  01ED40  EC24  F0F1         	call	_CRC_CalculatedResultGet	;wreg free
 21208                           
 21209                           ;stkvar	_crcVal @ sp[(-7)+6]
 21210  01ED44  0EFF               	movlw	-1
 21211  01ED46  0060  F0AB  FFE3   	movff	btemp,plusw1
 21212                           
 21213                           ;daq.c: 431:  DATAEE_WriteByte(sizeof(R) - 1, crcVal);
 21214                           ;stkvar	_crcVal @ sp[(-7)+6]
 21215  01ED4C  0EFF               	movlw	-1
 21216  01ED4E  50E3               	movf	plusw1,w,c
 21217  01ED50  6EE6               	movwf	postinc1,c
 21218  01ED52  0E9A               	movlw	154
 21219  01ED54  6EE6               	movwf	postinc1,c
 21220  01ED56  0E00               	movlw	0
 21221  01ED58  6EE6               	movwf	postinc1,c
 21222  01ED5A  EC95  F009         	call	_DATAEE_WriteByte	;wreg free
 21223                           
 21224                           ; _write_cal_data: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 21225  01ED5E  0EF9               	movlw	249
 21226  01ED60  26E1               	addwf	fsr1l,f,c
 21227  01ED62  0EFF               	movlw	255
 21228  01ED64  22E2               	addwfc	fsr1h,f,c
 21229  01ED66  0012               	return		;funcret
 21230  01ED68                     __end_of_write_cal_data:
 21231                           	opt callstack 0
 21232                           
 21233 ;; *************** function _DATAEE_WriteByte *****************
 21234 ;; Defined at:
 21235 ;;		line 172 in file "mcc_generated_files/memory.c"
 21236 ;; Parameters:    Size  Location     Type
 21237 ;;  bAdd            2  [STACK] unsigned short 
 21238 ;;  bData           1  [STACK] unsigned char 
 21239 ;; Auto vars:     Size  Location     Type
 21240 ;;  GIEBitValue     1  [STACK] unsigned char 
 21241 ;; Return value:  Size  Location     Type
 21242 ;;                  1  [STACK] void 
 21243 ;; Registers used:
 21244 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 21245 ;; Tracked objects:
 21246 ;;		On entry : 0/39
 21247 ;;		On exit  : 0/0
 21248 ;;		Unchanged: 0/0
 21249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21254 ;;Total ram usage:        0 bytes
 21255 ;; Hardware stack levels used:    1
 21256 ;; Hardware stack levels required when called:   15
 21257 ;; This function calls:
 21258 ;;		Nothing
 21259 ;; This function is called by:
 21260 ;;		_write_cal_data
 21261 ;; This function uses a reentrant model
 21262 ;;
 21263                           
 21264                           	psect	text60
 21265  00132A                     __ptext60:
 21266                           	opt callstack 0
 21267  00132A                     _DATAEE_WriteByte:
 21268                           	opt callstack 0
 21269                           
 21270                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21271  00132A  52E6               	movf	postinc1,f,c
 21272                           
 21273                           ;mcc_generated_files/memory.c: 172: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 173: {;mcc_generated_files/memory.c: 174:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
 21274                           
 21275                           ;incstack = 0
 21276  00132C  AED2               	btfss	210,7,c	;volatile
 21277  00132E  D003               	goto	u12040
 21278  001330  6A35               	clrf	(btemp+11)^0,c
 21279  001332  2A35               	incf	(btemp+11)^0,f,c
 21280  001334  D001               	goto	u12048
 21281  001336                     u12040:
 21282  001336  6A35               	clrf	(btemp+11)^0,c
 21283  001338                     u12048:
 21284                           
 21285                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 21286  001338  0EFF               	movlw	-1
 21287  00133A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 21288                           
 21289                           ;mcc_generated_files/memory.c: 176:     NVMADRH = (uint8_t)((bAdd >> 8) & 0x03);
 21290                           ;stkvar	_bAdd @ sp[(-1)+-2]
 21291  001340  0EFE               	movlw	254
 21292  001342  24E1               	addwf	fsr1l,w,c
 21293  001344  6ED9               	movwf	fsr2l,c
 21294  001346  0EFF               	movlw	255
 21295  001348  20E2               	addwfc	fsr1h,w,c
 21296  00134A  6EDA               	movwf	fsr2h,c
 21297  00134C  50DF               	movf	indf2,w,c
 21298  00134E  0B03               	andlw	3
 21299  001350  0139               	movlb	57	; () banked
 21300  001352  6FE1               	movwf	225,b	;volatile
 21301                           
 21302                           ; BSR set to: 57
 21303                           ;mcc_generated_files/memory.c: 177:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 21304                           ;stkvar	_bAdd @ sp[(-1)+-2]
 21305  001354  0EFD               	movlw	-3
 21306  001356  006F FF8F F9E0     	movff	plusw1,14816	;volatile
 21307                           
 21308                           ; BSR set to: 57
 21309                           ;mcc_generated_files/memory.c: 178:     NVMDAT = bData;
 21310                           ;stkvar	_bData @ sp[(-1)+-3]
 21311  00135C  0EFC               	movlw	-4
 21312  00135E  006F FF8F F9E3     	movff	plusw1,14819	;volatile
 21313                           
 21314                           ; BSR set to: 57
 21315                           ;mcc_generated_files/memory.c: 179:     NVMCON1bits.NVMREG = 0;
 21316  001364  0E3F               	movlw	-193
 21317  001366  17E5               	andwf	229,f,b	;volsfr
 21318                           
 21319                           ; BSR set to: 57
 21320                           ;mcc_generated_files/memory.c: 180:     NVMCON1bits.WREN = 1;
 21321  001368  85E5               	bsf	229,2,b	;volsfr
 21322                           
 21323                           ; BSR set to: 57
 21324                           ;mcc_generated_files/memory.c: 181:     INTCON0bits.GIE = 0;
 21325  00136A  9ED2               	bcf	210,7,c	;volatile
 21326                           
 21327                           ; BSR set to: 57
 21328                           ;mcc_generated_files/memory.c: 182:     NVMCON2 = 0x55;
 21329  00136C  0E55               	movlw	85
 21330  00136E  6FE6               	movwf	230,b	;volsfr
 21331                           
 21332                           ; BSR set to: 57
 21333                           ;mcc_generated_files/memory.c: 183:     NVMCON2 = 0xAA;
 21334  001370  0EAA               	movlw	170
 21335  001372  6FE6               	movwf	230,b	;volsfr
 21336                           
 21337                           ; BSR set to: 57
 21338                           ;mcc_generated_files/memory.c: 184:     NVMCON1bits.WR = 1;
 21339  001374  83E5               	bsf	229,1,b	;volsfr
 21340  001376                     l942:
 21341                           
 21342                           ; BSR set to: 57
 21343                           ;mcc_generated_files/memory.c: 186:     while (NVMCON1bits.WR)
 21344  001376  B3E5               	btfsc	229,1,b	;volsfr
 21345  001378  D7FE               	goto	l942
 21346                           
 21347                           ; BSR set to: 57
 21348                           ;mcc_generated_files/memory.c: 190:     NVMCON1bits.WREN = 0;
 21349  00137A  95E5               	bcf	229,2,b	;volsfr
 21350                           
 21351                           ; BSR set to: 57
 21352                           ;mcc_generated_files/memory.c: 191:     INTCON0bits.GIE = GIEBitValue;
 21353                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 21354  00137C  0EFF               	movlw	-1
 21355  00137E  B0E3               	btfsc	plusw1,0,c
 21356  001380  D002               	bra	u12065
 21357  001382  9ED2               	bcf	210,7,c	;volatile
 21358  001384  D001               	bra	u12066
 21359  001386                     u12065:
 21360  001386  8ED2               	bsf	210,7,c	;volatile
 21361  001388                     u12066:
 21362                           
 21363                           ; _DATAEE_WriteByte: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 21364  001388  52E5               	movf	postdec1,f,c
 21365  00138A  52E5               	movf	postdec1,f,c
 21366  00138C  52E5               	movf	postdec1,f,c
 21367  00138E  52E5               	movf	postdec1,f,c
 21368  001390  0012               	return		;funcret
 21369  001392                     __end_of_DATAEE_WriteByte:
 21370                           	opt callstack 0
 21371                           
 21372 ;; *************** function _CRC_Start *****************
 21373 ;; Defined at:
 21374 ;;		line 119 in file "mcc_generated_files/crc.c"
 21375 ;; Parameters:    Size  Location     Type
 21376 ;;		None
 21377 ;; Auto vars:     Size  Location     Type
 21378 ;;		None
 21379 ;; Return value:  Size  Location     Type
 21380 ;;                  1  [STACK] void 
 21381 ;; Registers used:
 21382 ;;		None
 21383 ;; Tracked objects:
 21384 ;;		On entry : 3F/0
 21385 ;;		On exit  : 3F/39
 21386 ;;		Unchanged: 0/0
 21387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21392 ;;Total ram usage:        0 bytes
 21393 ;; Hardware stack levels used:    1
 21394 ;; Hardware stack levels required when called:   15
 21395 ;; This function calls:
 21396 ;;		Nothing
 21397 ;; This function is called by:
 21398 ;;		_read_cal_data
 21399 ;;		_write_cal_data
 21400 ;; This function uses a reentrant model
 21401 ;;
 21402                           
 21403                           	psect	text61
 21404  002784                     __ptext61:
 21405                           	opt callstack 0
 21406  002784                     _CRC_Start:
 21407                           	opt callstack 14
 21408                           
 21409                           ;mcc_generated_files/crc.c: 122:     CRCCON0bits.CRCGO = 1;
 21410                           
 21411                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21412                           ;incstack = 0
 21413  002784  0139               	movlb	57	; () banked
 21414  002786  8D68               	bsf	104,6,b	;volatile
 21415                           
 21416                           ; BSR set to: 57
 21417                           ; _CRC_Start: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 21418  002788  0012               	return		;funcret
 21419  00278A                     __end_of_CRC_Start:
 21420                           	opt callstack 0
 21421                           
 21422 ;; *************** function _CRC_IsBusy *****************
 21423 ;; Defined at:
 21424 ;;		line 201 in file "mcc_generated_files/crc.c"
 21425 ;; Parameters:    Size  Location     Type
 21426 ;;		None
 21427 ;; Auto vars:     Size  Location     Type
 21428 ;;		None
 21429 ;; Return value:  Size  Location     Type
 21430 ;;                  1  [STACK] _Bool 
 21431 ;; Registers used:
 21432 ;;		btemp
 21433 ;; Tracked objects:
 21434 ;;		On entry : 0/39
 21435 ;;		On exit  : 0/0
 21436 ;;		Unchanged: 0/0
 21437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21442 ;;Total ram usage:        0 bytes
 21443 ;; Hardware stack levels used:    1
 21444 ;; Hardware stack levels required when called:   15
 21445 ;; This function calls:
 21446 ;;		Nothing
 21447 ;; This function is called by:
 21448 ;;		_read_cal_data
 21449 ;;		_write_cal_data
 21450 ;; This function uses a reentrant model
 21451 ;;
 21452                           
 21453                           	psect	text62
 21454  002696                     __ptext62:
 21455                           	opt callstack 0
 21456  002696                     _CRC_IsBusy:
 21457                           	opt callstack 14
 21458                           
 21459                           ;mcc_generated_files/crc.c: 204:     return(CRCCON0bits.BUSY);
 21460                           
 21461                           ; BSR set to: 57
 21462                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21463                           ;incstack = 0
 21464  002696  0139               	movlb	57	; () banked
 21465  002698  AB68               	btfss	104,5,b	;volatile
 21466  00269A  D003               	goto	u12270
 21467  00269C  6A2A               	clrf	btemp^0,c
 21468  00269E  2A2A               	incf	btemp^0,f,c
 21469  0026A0  0012               	return	
 21470  0026A2                     u12270:
 21471  0026A2  6A2A               	clrf	btemp^0,c
 21472                           
 21473                           ; _CRC_IsBusy: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 21474  0026A4  0012               	return		;funcret
 21475  0026A6                     __end_of_CRC_IsBusy:
 21476                           	opt callstack 0
 21477                           
 21478 ;; *************** function _CRC_CalculatedResultGet *****************
 21479 ;; Defined at:
 21480 ;;		line 159 in file "mcc_generated_files/crc.c"
 21481 ;; Parameters:    Size  Location     Type
 21482 ;;  reverse         1  [STACK] _Bool 
 21483 ;;  xorValue        2  [STACK] unsigned short 
 21484 ;; Auto vars:     Size  Location     Type
 21485 ;;  result          2  [STACK] unsigned short 
 21486 ;;  mask            2  [STACK] unsigned short 
 21487 ;; Return value:  Size  Location     Type
 21488 ;;                  2  [STACK] unsigned short 
 21489 ;; Registers used:
 21490 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+9, btemp+10, btemp+11,
      + prodl
 21491 ;; Tracked objects:
 21492 ;;		On entry : 0/39
 21493 ;;		On exit  : 0/0
 21494 ;;		Unchanged: 0/0
 21495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21500 ;;Total ram usage:        0 bytes
 21501 ;; Hardware stack levels used:    1
 21502 ;; Hardware stack levels required when called:   16
 21503 ;; This function calls:
 21504 ;;		_CRC_ReverseValue
 21505 ;; This function is called by:
 21506 ;;		_read_cal_data
 21507 ;;		_write_cal_data
 21508 ;; This function uses a reentrant model
 21509 ;;
 21510                           
 21511                           	psect	text63
 21512  01E248                     __ptext63:
 21513                           	opt callstack 0
 21514  01E248                     _CRC_CalculatedResultGet:
 21515                           	opt callstack 0
 21516                           
 21517                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21518  01E248  52E6               	movf	postinc1,f,c
 21519  01E24A  52E6               	movf	postinc1,f,c
 21520  01E24C  52E6               	movf	postinc1,f,c
 21521  01E24E  52E6               	movf	postinc1,f,c
 21522                           
 21523                           ;mcc_generated_files/crc.c: 159: uint16_t CRC_CalculatedResultGet(_Bool reverse, uint16_
      +                          t xorValue);mcc_generated_files/crc.c: 160: {;mcc_generated_files/crc.c: 161:     uint16
      +                          _t result,mask;;mcc_generated_files/crc.c: 164:      CRCCON0bits.CRCGO = 0;
 21524                           
 21525                           ;incstack = 0
 21526  01E250  0139               	movlb	57	; () banked
 21527  01E252  9D68               	bcf	104,6,b	;volatile
 21528                           
 21529                           ;mcc_generated_files/crc.c: 165:      PIR0bits.CRCIF = 0;
 21530  01E254  9DA0               	bcf	160,6,b	;volatile
 21531                           
 21532                           ; BSR set to: 57
 21533                           ;mcc_generated_files/crc.c: 166:      CRCCON1bits.DLEN= CRCCON1bits.PLEN;
 21534  01E256  5169               	movf	105,w,b	;volatile
 21535  01E258  0B0F               	andlw	15
 21536  01E25A  6E35               	movwf	(btemp+11)^0,c
 21537  01E25C  3A35               	swapf	(btemp+11)^0,f,c
 21538  01E25E  5169               	movf	105,w,b	;volatile
 21539  01E260  1835               	xorwf	(btemp+11)^0,w,c
 21540  01E262  0B0F               	andlw	-241
 21541  01E264  1835               	xorwf	(btemp+11)^0,w,c
 21542  01E266  6F69               	movwf	105,b	;volatile
 21543                           
 21544                           ; BSR set to: 57
 21545                           ;mcc_generated_files/crc.c: 168:      if(crcObj.polyWidth > 8)
 21546  01E268  0E08               	movlw	8
 21547  01E26A  0100               	movlb	0	; () banked
 21548  01E26C  65E3               	cpfsgt	(_crcObj+1)& (0+255),b
 21549  01E26E  D003               	goto	l1282
 21550                           
 21551                           ; BSR set to: 0
 21552                           ;mcc_generated_files/crc.c: 169:      {;mcc_generated_files/crc.c: 170:          CRCDATH
      +                           = 0;
 21553  01E270  0139               	movlb	57	; () banked
 21554  01E272  6B61               	clrf	97,b	;volatile
 21555  01E274  D001               	goto	L19
 21556  01E276                     l1282:
 21557                           
 21558                           ; BSR set to: 0
 21559                           ;mcc_generated_files/crc.c: 174:      {;mcc_generated_files/crc.c: 175:          CRCDATL
      +                           = 0;
 21560  01E276  0139               	movlb	57	; () banked
 21561  01E278                     L19:
 21562  01E278  6B60               	clrf	96,b	;volatile
 21563                           
 21564                           ; BSR set to: 57
 21565                           ;mcc_generated_files/crc.c: 178:      CRCCON0bits.CRCGO = 1;
 21566                           
 21567                           ;mcc_generated_files/crc.c: 176:      }
 21568  01E27A  8D68               	bsf	104,6,b	;volatile
 21569  01E27C                     l1284:
 21570                           
 21571                           ; BSR set to: 57
 21572  01E27C  ADA0               	btfss	160,6,b	;volatile
 21573  01E27E  D7FE               	goto	l1284
 21574                           
 21575                           ; BSR set to: 57
 21576                           ;mcc_generated_files/crc.c: 180:      PIR0bits.CRCIF = 0;
 21577  01E280  9DA0               	bcf	160,6,b	;volatile
 21578                           
 21579                           ;mcc_generated_files/crc.c: 182:      CRCCON0bits.CRCGO = 0;
 21580  01E282  9D68               	bcf	104,6,b	;volatile
 21581                           
 21582                           ; BSR set to: 57
 21583                           ;mcc_generated_files/crc.c: 183:      CRCCON1bits.DLEN = (uint8_t)(crcObj.dataWidth - 1)
      +                          ;
 21584  01E284  0060  F388  F035   	movff	_crcObj,btemp+11
 21585  01E28A  0EFF               	movlw	255
 21586  01E28C  2635               	addwf	(btemp+11)^0,f,c
 21587  01E28E  3A35               	swapf	(btemp+11)^0,f,c
 21588  01E290  5169               	movf	105,w,b	;volatile
 21589  01E292  1835               	xorwf	(btemp+11)^0,w,c
 21590  01E294  0B0F               	andlw	-241
 21591  01E296  1835               	xorwf	(btemp+11)^0,w,c
 21592  01E298  6F69               	movwf	105,b	;volatile
 21593                           
 21594                           ; BSR set to: 57
 21595                           ;mcc_generated_files/crc.c: 185:      result = ((uint16_t)CRCACCH << 8)|CRCACCL;
 21596  01E29A  5162               	movf	98,w,b	;volatile
 21597  01E29C  006E F58C  F02A    	movff	14691,btemp	;volatile
 21598  01E2A2  6A2B               	clrf	(btemp+1)^0,c
 21599  01E2A4  0060  F0A8  F02B   	movff	btemp,btemp+1
 21600  01E2AA  6A2A               	clrf	btemp^0,c
 21601  01E2AC  122A               	iorwf	btemp^0,f,c
 21602  01E2AE  0E00               	movlw	0
 21603  01E2B0  122B               	iorwf	(btemp+1)^0,f,c
 21604                           
 21605                           ;stkvar	_result @ sp[(-4)+0]
 21606  01E2B2  0EFC               	movlw	-4
 21607  01E2B4  0060  F0AB  FFE3   	movff	btemp,plusw1
 21608  01E2BA  0EFD               	movlw	-3
 21609  01E2BC  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 21610                           
 21611                           ; BSR set to: 57
 21612                           ;mcc_generated_files/crc.c: 186:      if(crcObj.polyWidth < 16)
 21613  01E2C2  0E10               	movlw	16
 21614  01E2C4  0100               	movlb	0	; () banked
 21615  01E2C6  61E3               	cpfslt	(_crcObj+1)& (0+255),b
 21616  01E2C8  D03A               	goto	l12758
 21617                           
 21618                           ; BSR set to: 0
 21619                           ;mcc_generated_files/crc.c: 187:      {;mcc_generated_files/crc.c: 189:         mask = (
      +                          uint16_t)((1 << crcObj.polyWidth) - 1);
 21620  01E2CA  0EFF               	movlw	255
 21621  01E2CC  6E34               	movwf	(btemp+10)^0,c
 21622  01E2CE  0EFF               	movlw	255
 21623  01E2D0  6E35               	movwf	(btemp+11)^0,c
 21624  01E2D2  0060  F38C  F033   	movff	_crcObj+1,btemp+9
 21625  01E2D8  0E01               	movlw	1
 21626  01E2DA  6E30               	movwf	(btemp+6)^0,c
 21627  01E2DC  0E00               	movlw	0
 21628  01E2DE  6E31               	movwf	(btemp+7)^0,c
 21629  01E2E0  2A33               	incf	(btemp+9)^0,f,c
 21630  01E2E2  D003               	goto	u12254
 21631  01E2E4                     u12255:
 21632  01E2E4  90D8               	bcf	status,0,c
 21633  01E2E6  3630               	rlcf	(btemp+6)^0,f,c
 21634  01E2E8  3631               	rlcf	(btemp+7)^0,f,c
 21635  01E2EA                     u12254:
 21636  01E2EA  2E33               	decfsz	(btemp+9)^0,f,c
 21637  01E2EC  D7FB               	goto	u12255
 21638  01E2EE  5034               	movf	(btemp+10)^0,w,c
 21639  01E2F0  2630               	addwf	(btemp+6)^0,f,c
 21640  01E2F2  5035               	movf	(btemp+11)^0,w,c
 21641  01E2F4  2231               	addwfc	(btemp+7)^0,f,c
 21642                           
 21643                           ;stkvar	_mask @ sp[(-4)+2]
 21644  01E2F6  0EFE               	movlw	-2
 21645  01E2F8  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 21646  01E2FE  0EFF               	movlw	-1
 21647  01E300  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 21648                           
 21649                           ;mcc_generated_files/crc.c: 190:         result &= mask;
 21650                           ;stkvar	_mask @ sp[(-4)+2]
 21651  01E306  0EFE               	movlw	-2
 21652  01E308  006F FF8C  F034    	movff	plusw1,btemp+10
 21653  01E30E  0EFF               	movlw	-1
 21654  01E310  006F FF8C  F035    	movff	plusw1,btemp+11
 21655                           
 21656                           ;stkvar	_result @ sp[(-4)+0]
 21657  01E316  0EFC               	movlw	-4
 21658  01E318  006F FF8C  F02A    	movff	plusw1,btemp
 21659  01E31E  5034               	movf	(btemp+10)^0,w,c
 21660  01E320  162A               	andwf	btemp^0,f,c
 21661  01E322  0EFC               	movlw	-4
 21662  01E324  0060  F0AB  FFE3   	movff	btemp,plusw1
 21663  01E32A  0EFD               	movlw	-3
 21664  01E32C  006F FF8C  F02A    	movff	plusw1,btemp
 21665  01E332  5035               	movf	(btemp+11)^0,w,c
 21666  01E334  162A               	andwf	btemp^0,f,c
 21667  01E336  0EFD               	movlw	-3
 21668  01E338  0060  F0AB  FFE3   	movff	btemp,plusw1
 21669  01E33E                     l12758:
 21670                           
 21671                           ;mcc_generated_files/crc.c: 193:     if(reverse)
 21672                           ;stkvar	_reverse @ sp[(-4)+-1]
 21673  01E33E  0EFB               	movlw	-5
 21674  01E340  50E3               	movf	plusw1,w,c
 21675  01E342  B4D8               	btfsc	status,2,c
 21676  01E344  D011               	goto	l12762
 21677                           
 21678                           ;mcc_generated_files/crc.c: 194:         result = CRC_ReverseValue(result);
 21679                           ;stkvar	_result @ sp[(-4)+0]
 21680  01E346  0EFC               	movlw	-4
 21681  01E348  006F FF8F FFE6     	movff	plusw1,postinc1
 21682  01E34E  006F FF8F FFE6     	movff	plusw1,postinc1
 21683  01E354  ECC5  F000         	call	_CRC_ReverseValue	;wreg free
 21684                           
 21685                           ;stkvar	_result @ sp[(-4)+0]
 21686  01E358  0EFC               	movlw	-4
 21687  01E35A  0060  F0AB  FFE3   	movff	btemp,plusw1
 21688  01E360  0EFD               	movlw	-3
 21689  01E362  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 21690  01E368                     l12762:
 21691                           
 21692                           ;mcc_generated_files/crc.c: 196:     result ^= xorValue;
 21693                           ;stkvar	_xorValue @ sp[(-4)+-3]
 21694  01E368  0EF9               	movlw	-7
 21695  01E36A  006F FF8C  F034    	movff	plusw1,btemp+10
 21696  01E370  0EFA               	movlw	-6
 21697  01E372  006F FF8C  F035    	movff	plusw1,btemp+11
 21698                           
 21699                           ;stkvar	_result @ sp[(-4)+0]
 21700  01E378  0EFC               	movlw	-4
 21701  01E37A  006F FF8C  F02A    	movff	plusw1,btemp
 21702  01E380  5034               	movf	(btemp+10)^0,w,c
 21703  01E382  1A2A               	xorwf	btemp^0,f,c
 21704  01E384  0EFC               	movlw	-4
 21705  01E386  0060  F0AB  FFE3   	movff	btemp,plusw1
 21706  01E38C  0EFD               	movlw	-3
 21707  01E38E  006F FF8C  F02A    	movff	plusw1,btemp
 21708  01E394  5035               	movf	(btemp+11)^0,w,c
 21709  01E396  1A2A               	xorwf	btemp^0,f,c
 21710  01E398  0EFD               	movlw	-3
 21711  01E39A  0060  F0AB  FFE3   	movff	btemp,plusw1
 21712                           
 21713                           ;mcc_generated_files/crc.c: 198:     return result;
 21714                           ;stkvar	_result @ sp[(-4)+0]
 21715  01E3A0  0EFC               	movlw	-4
 21716  01E3A2  006F FF8C  F02A    	movff	plusw1,btemp
 21717  01E3A8  0EFD               	movlw	-3
 21718  01E3AA  006F FF8C  F02B    	movff	plusw1,btemp+1
 21719                           
 21720                           ; _CRC_CalculatedResultGet: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
 21721  01E3B0  0EF9               	movlw	249
 21722  01E3B2  26E1               	addwf	fsr1l,f,c
 21723  01E3B4  0EFF               	movlw	255
 21724  01E3B6  22E2               	addwfc	fsr1h,f,c
 21725  01E3B8  0012               	return		;funcret
 21726  01E3BA                     __end_of_CRC_CalculatedResultGet:
 21727                           	opt callstack 0
 21728                           
 21729 ;; *************** function _CRC_ReverseValue *****************
 21730 ;; Defined at:
 21731 ;;		line 138 in file "mcc_generated_files/crc.c"
 21732 ;; Parameters:    Size  Location     Type
 21733 ;;  crc             2  [STACK] unsigned short 
 21734 ;; Auto vars:     Size  Location     Type
 21735 ;;  mask            2  [STACK] unsigned short 
 21736 ;;  reverse         2  [STACK] unsigned short 
 21737 ;; Return value:  Size  Location     Type
 21738 ;;                  2  [STACK] unsigned short 
 21739 ;; Registers used:
 21740 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 21741 ;; Tracked objects:
 21742 ;;		On entry : 0/0
 21743 ;;		On exit  : 0/0
 21744 ;;		Unchanged: 0/0
 21745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21750 ;;Total ram usage:        0 bytes
 21751 ;; Hardware stack levels used:    1
 21752 ;; Hardware stack levels required when called:   15
 21753 ;; This function calls:
 21754 ;;		Nothing
 21755 ;; This function is called by:
 21756 ;;		_CRC_CalculatedResultGet
 21757 ;; This function uses a reentrant model
 21758 ;;
 21759                           
 21760                           	psect	text64
 21761  00018A                     __ptext64:
 21762                           	opt callstack 0
 21763  00018A                     _CRC_ReverseValue:
 21764                           	opt callstack 0
 21765                           
 21766                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21767  00018A  52E6               	movf	postinc1,f,c
 21768  00018C  52E6               	movf	postinc1,f,c
 21769  00018E  52E6               	movf	postinc1,f,c
 21770  000190  52E6               	movf	postinc1,f,c
 21771                           
 21772                           ;mcc_generated_files/crc.c: 138: static uint16_t CRC_ReverseValue(uint16_t crc);mcc_gene
      +                          rated_files/crc.c: 139: {;mcc_generated_files/crc.c: 140:     uint16_t mask;;mcc_generat
      +                          ed_files/crc.c: 141:     uint16_t reverse;;mcc_generated_files/crc.c: 143:     mask = 1;
 21773                           
 21774                           ;incstack = 0
 21775  000192  0E01               	movlw	1
 21776  000194  6E34               	movwf	(btemp+10)^0,c
 21777  000196  0E00               	movlw	0
 21778  000198  6E35               	movwf	(btemp+11)^0,c
 21779                           
 21780                           ;stkvar	_mask @ sp[(-4)+0]
 21781  00019A  0EFC               	movlw	-4
 21782  00019C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 21783  0001A2  0EFD               	movlw	-3
 21784  0001A4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 21785                           
 21786                           ;mcc_generated_files/crc.c: 144:     mask <<= crcObj.polyWidth - 1;
 21787  0001AA  0060  F38C  F035   	movff	_crcObj+1,btemp+11
 21788  0001B0  0EFF               	movlw	255
 21789  0001B2  2635               	addwf	(btemp+11)^0,f,c
 21790                           
 21791                           ;stkvar	_mask @ sp[(-4)+0]
 21792  0001B4  50E1               	movf	fsr1l,w,c
 21793  0001B6  0FFC               	addlw	-4
 21794  0001B8  6ED9               	movwf	fsr2l,c
 21795  0001BA  50E2               	movf	fsr1h,w,c
 21796  0001BC  6EDA               	movwf	fsr2h,c
 21797  0001BE  0EFF               	movlw	255
 21798  0001C0  22DA               	addwfc	fsr2h,f,c
 21799  0001C2  2835               	incf	(btemp+11)^0,w,c
 21800  0001C4  D003               	goto	u11520
 21801  0001C6                     u11525:
 21802  0001C6  90D8               	bcf	status,0,c
 21803  0001C8  36DE               	rlcf	postinc2,f,c
 21804  0001CA  36DD               	rlcf	postdec2,f,c
 21805  0001CC                     u11520:
 21806  0001CC  2EE8               	decfsz	wreg,f,c
 21807  0001CE  D7FB               	goto	u11525
 21808                           
 21809                           ;mcc_generated_files/crc.c: 145:     reverse = 0;
 21810                           ;stkvar	_reverse @ sp[(-4)+2]
 21811  0001D0  0EFE               	movlw	-2
 21812  0001D2  6AE3               	clrf	plusw1,c
 21813  0001D4  0EFF               	movlw	-1
 21814  0001D6  6AE3               	clrf	plusw1,c
 21815                           
 21816                           ;mcc_generated_files/crc.c: 147:     while(crc)
 21817  0001D8  D029               	goto	l12242
 21818  0001DA                     l12234:
 21819                           
 21820                           ;mcc_generated_files/crc.c: 148:     {;mcc_generated_files/crc.c: 149:         if(crc & 
      +                          0x01)
 21821                           ;stkvar	_crc @ sp[(-4)+-2]
 21822  0001DA  0EFA               	movlw	-6
 21823  0001DC  A0E3               	btfss	plusw1,0,c
 21824  0001DE  D01C               	goto	l12238
 21825                           
 21826                           ;mcc_generated_files/crc.c: 150:         {;mcc_generated_files/crc.c: 151:             r
      +                          everse |= mask;
 21827                           ;stkvar	_mask @ sp[(-4)+0]
 21828  0001E0  0EFC               	movlw	-4
 21829  0001E2  006F FF8C  F034    	movff	plusw1,btemp+10
 21830  0001E8  0EFD               	movlw	-3
 21831  0001EA  006F FF8C  F035    	movff	plusw1,btemp+11
 21832                           
 21833                           ;stkvar	_reverse @ sp[(-4)+2]
 21834  0001F0  0EFE               	movlw	-2
 21835  0001F2  006F FF8C  F02A    	movff	plusw1,btemp
 21836  0001F8  5034               	movf	(btemp+10)^0,w,c
 21837  0001FA  122A               	iorwf	btemp^0,f,c
 21838  0001FC  0EFE               	movlw	-2
 21839  0001FE  0060  F0AB  FFE3   	movff	btemp,plusw1
 21840  000204  0EFF               	movlw	-1
 21841  000206  006F FF8C  F02A    	movff	plusw1,btemp
 21842  00020C  5035               	movf	(btemp+11)^0,w,c
 21843  00020E  122A               	iorwf	btemp^0,f,c
 21844  000210  0EFF               	movlw	-1
 21845  000212  0060  F0AB  FFE3   	movff	btemp,plusw1
 21846  000218                     l12238:
 21847                           
 21848                           ;mcc_generated_files/crc.c: 153:         mask >>= 1;
 21849                           ;stkvar	_mask @ sp[(-4)+0]
 21850  000218  90D8               	bcf	status,0,c
 21851  00021A  0EFD               	movlw	-3
 21852  00021C  32E3               	rrcf	plusw1,f,c
 21853  00021E  0EFC               	movlw	-4
 21854  000220  32E3               	rrcf	plusw1,f,c
 21855                           
 21856                           ;mcc_generated_files/crc.c: 154:         crc >>= 1;
 21857                           ;stkvar	_crc @ sp[(-4)+-2]
 21858  000222  90D8               	bcf	status,0,c
 21859  000224  0EFB               	movlw	-5
 21860  000226  32E3               	rrcf	plusw1,f,c
 21861  000228  0EFA               	movlw	-6
 21862  00022A  32E3               	rrcf	plusw1,f,c
 21863  00022C                     l12242:
 21864                           
 21865                           ;mcc_generated_files/crc.c: 147:     while(crc)
 21866                           ;stkvar	_crc @ sp[(-4)+-2]
 21867  00022C  0EFA               	movlw	-6
 21868  00022E  006F FF8C  F02A    	movff	plusw1,btemp
 21869  000234  0EFB               	movlw	-5
 21870  000236  50E3               	movf	plusw1,w,c
 21871  000238  102A               	iorwf	btemp^0,w,c
 21872  00023A  A4D8               	btfss	status,2,c
 21873  00023C  D7CE               	goto	l12234
 21874                           
 21875                           ;mcc_generated_files/crc.c: 156:     return reverse;
 21876                           ;stkvar	_reverse @ sp[(-4)+2]
 21877  00023E  0EFE               	movlw	-2
 21878  000240  006F FF8C  F02A    	movff	plusw1,btemp
 21879  000246  0EFF               	movlw	-1
 21880  000248  006F FF8C  F02B    	movff	plusw1,btemp+1
 21881                           
 21882                           ; _CRC_ReverseValue: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 21883  00024E  0EFA               	movlw	250
 21884  000250  26E1               	addwf	fsr1l,f,c
 21885  000252  0EFF               	movlw	255
 21886  000254  22E2               	addwfc	fsr1h,f,c
 21887  000256  0012               	return		;funcret
 21888  000258                     __end_of_CRC_ReverseValue:
 21889                           	opt callstack 0
 21890                           
 21891 ;; *************** function _CRC_8BitDataWrite *****************
 21892 ;; Defined at:
 21893 ;;		line 125 in file "mcc_generated_files/crc.c"
 21894 ;; Parameters:    Size  Location     Type
 21895 ;;  data            1  [STACK] unsigned char 
 21896 ;; Auto vars:     Size  Location     Type
 21897 ;;		None
 21898 ;; Return value:  Size  Location     Type
 21899 ;;                  1  [STACK] _Bool 
 21900 ;; Registers used:
 21901 ;;		fsr1l, fsr1h
 21902 ;; Tracked objects:
 21903 ;;		On entry : 0/4
 21904 ;;		On exit  : 3F/39
 21905 ;;		Unchanged: 0/0
 21906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21911 ;;Total ram usage:        0 bytes
 21912 ;; Hardware stack levels used:    1
 21913 ;; Hardware stack levels required when called:   15
 21914 ;; This function calls:
 21915 ;;		Nothing
 21916 ;; This function is called by:
 21917 ;;		_read_cal_data
 21918 ;;		_write_cal_data
 21919 ;; This function uses a reentrant model
 21920 ;;
 21921                           
 21922                           	psect	text65
 21923  002652                     __ptext65:
 21924                           	opt callstack 0
 21925  002652                     _CRC_8BitDataWrite:
 21926                           	opt callstack 14
 21927                           
 21928                           ;mcc_generated_files/crc.c: 125: _Bool CRC_8BitDataWrite(uint8_t data);mcc_generated_fil
      +                          es/crc.c: 126: {;mcc_generated_files/crc.c: 127:     if(!CRCCON0bits.FULL)
 21929                           
 21930                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21931                           ;incstack = 0
 21932  002652  0139               	movlb	57	; () banked
 21933  002654  B168               	btfsc	104,0,b	;volatile
 21934  002656  D004               	goto	l1271
 21935                           
 21936                           ; BSR set to: 57
 21937                           ;mcc_generated_files/crc.c: 128:     {;mcc_generated_files/crc.c: 129:         CRCDATL =
      +                           data;
 21938                           ;stkvar	_data @ sp[(0)+-1]
 21939  002658  0EFF               	movlw	-1
 21940  00265A  006F FF8F F960     	movff	plusw1,14688	;volatile
 21941  002660                     l1271:
 21942                           
 21943                           ; BSR set to: 57
 21944                           ; _CRC_8BitDataWrite: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 21945  002660  52E5               	movf	postdec1,f,c
 21946  002662  0012               	return		;funcret
 21947  002664                     __end_of_CRC_8BitDataWrite:
 21948                           	opt callstack 0
 21949                           
 21950 ;; *************** function _start_adc_scan *****************
 21951 ;; Defined at:
 21952 ;;		line 72 in file "daq.c"
 21953 ;; Parameters:    Size  Location     Type
 21954 ;;		None
 21955 ;; Auto vars:     Size  Location     Type
 21956 ;;		None
 21957 ;; Return value:  Size  Location     Type
 21958 ;;                  1  [STACK] _Bool 
 21959 ;; Registers used:
 21960 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 21961 ;; Tracked objects:
 21962 ;;		On entry : 0/0
 21963 ;;		On exit  : 0/0
 21964 ;;		Unchanged: 0/0
 21965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21970 ;;Total ram usage:        0 bytes
 21971 ;; Hardware stack levels used:    1
 21972 ;; Hardware stack levels required when called:   16
 21973 ;; This function calls:
 21974 ;;		_ADCC_DischargeSampleCapacitor
 21975 ;;		_ADCC_SetADIInterruptHandler
 21976 ;;		_ADCC_SetADTIInterruptHandler
 21977 ;;		_ADCC_StartConversion
 21978 ;; This function is called by:
 21979 ;;		_main
 21980 ;;		_current_sensor_cal
 21981 ;;		_update_adc_result
 21982 ;; This function uses a reentrant model
 21983 ;;
 21984                           
 21985                           	psect	text66
 21986  0014C2                     __ptext66:
 21987                           	opt callstack 0
 21988  0014C2                     _start_adc_scan:
 21989                           	opt callstack 14
 21990                           
 21991                           ;daq.c: 74:  if (R.done)
 21992                           
 21993                           ; BSR set to: 57
 21994                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21995                           ;incstack = 0
 21996  0014C2  0101               	movlb	1	; () banked
 21997  0014C4  5135               	movf	(_R+53)& (0+255),w,b	;volatile
 21998  0014C6  A4D8               	btfss	status,2,c
 21999  0014C8  0012               	return	
 22000                           
 22001                           ; BSR set to: 1
 22002                           ;daq.c: 77:  R.scan_index = 0;
 22003  0014CA  6B32               	clrf	(_R+50)& (0+255),b	;volatile
 22004                           
 22005                           ; BSR set to: 1
 22006                           ;daq.c: 78:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
 22007  0014CC  013A               	movlb	58	; () banked
 22008  0014CE  5140               	movf	64,w,b	;volatile
 22009  0014D0  006E F940  F02A    	movff	14928,btemp	;volatile
 22010  0014D6  6A2B               	clrf	(btemp+1)^0,c
 22011  0014D8  0060  F0A8  F02B   	movff	btemp,btemp+1
 22012  0014DE  6A2A               	clrf	btemp^0,c
 22013  0014E0  262A               	addwf	btemp^0,f,c
 22014  0014E2  0E00               	movlw	0
 22015  0014E4  222B               	addwfc	(btemp+1)^0,f,c
 22016  0014E6  0E77               	movlw	119
 22017  0014E8  142A               	andwf	btemp^0,w,c
 22018  0014EA  0101               	movlb	1	; () banked
 22019  0014EC  6F33               	movwf	(_R+51)& (0+255),b	;volatile
 22020  0014EE  0E3C               	movlw	60
 22021  0014F0  142B               	andwf	(btemp+1)^0,w,c
 22022  0014F2  6F34               	movwf	(_R+52)& (0+255),b	;volatile
 22023                           
 22024                           ; BSR set to: 1
 22025                           ;daq.c: 79:  ADCC_SetADIInterruptHandler(adc_int_handler);
 22026  0014F4  0EB2               	movlw	low _adc_int_handler
 22027  0014F6  6EE6               	movwf	postinc1,c
 22028  0014F8  0E27               	movlw	high _adc_int_handler
 22029  0014FA  6EE6               	movwf	postinc1,c
 22030  0014FC  0E00               	movlw	low (_adc_int_handler shr (0+16))
 22031  0014FE  6EE6               	movwf	postinc1,c
 22032  001500  EC75  F011         	call	_ADCC_SetADIInterruptHandler	;wreg free
 22033                           
 22034                           ;daq.c: 80:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
 22035  001504  0E7E               	movlw	low _adc_int_t_handler
 22036  001506  6EE6               	movwf	postinc1,c
 22037  001508  0EFF               	movlw	high _adc_int_t_handler
 22038  00150A  6EE6               	movwf	postinc1,c
 22039  00150C  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
 22040  00150E  6EE6               	movwf	postinc1,c
 22041  001510  EC61  F011         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 22042                           
 22043                           ;daq.c: 81:  ADCC_DischargeSampleCapacitor();
 22044  001514  ECAF  F013         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 22045                           
 22046                           ; BSR set to: 62
 22047                           ;daq.c: 82:  ADCC_StartConversion(R.scan_index & 0xf);
 22048  001518  0101               	movlb	1	; () banked
 22049  00151A  5132               	movf	(_R+50)& (0+255),w,b	;volatile
 22050  00151C  0B0F               	andlw	15
 22051  00151E  6EE6               	movwf	postinc1,c
 22052  001520  EC32  F013         	call	_ADCC_StartConversion	;wreg free
 22053                           
 22054                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22055  001524  0012               	return		;funcret
 22056  001526                     __end_of_start_adc_scan:
 22057                           	opt callstack 0
 22058                           
 22059 ;; *************** function _ADCC_StartConversion *****************
 22060 ;; Defined at:
 22061 ;;		line 128 in file "mcc_generated_files/adcc.c"
 22062 ;; Parameters:    Size  Location     Type
 22063 ;;  channel         1  [STACK] enum E16136
 22064 ;; Auto vars:     Size  Location     Type
 22065 ;;		None
 22066 ;; Return value:  Size  Location     Type
 22067 ;;                  1  [STACK] void 
 22068 ;; Registers used:
 22069 ;;		fsr1l, fsr1h
 22070 ;; Tracked objects:
 22071 ;;		On entry : 3F/1
 22072 ;;		On exit  : 3F/3E
 22073 ;;		Unchanged: 0/0
 22074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22079 ;;Total ram usage:        0 bytes
 22080 ;; Hardware stack levels used:    1
 22081 ;; Hardware stack levels required when called:   15
 22082 ;; This function calls:
 22083 ;;		Nothing
 22084 ;; This function is called by:
 22085 ;;		_start_adc_scan
 22086 ;;		_adc_int_t_handler
 22087 ;; This function uses a reentrant model
 22088 ;;
 22089                           
 22090                           	psect	text67
 22091  002664                     __ptext67:
 22092                           	opt callstack 0
 22093  002664                     _ADCC_StartConversion:
 22094                           	opt callstack 0
 22095                           
 22096                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
 22097                           ;stkvar	_channel @ sp[(0)+-1]
 22098                           
 22099                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22100                           ;incstack = 0
 22101 ;; hardware stack exceeded
 22102  002664  0EFF               	movlw	-1
 22103  002666  006F FF8F FEF1     	movff	plusw1,16113	;volatile
 22104                           
 22105                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
 22106  00266C  013E               	movlb	62	; () banked
 22107  00266E  8FF8               	bsf	248,7,b	;volatile
 22108                           
 22109                           ; BSR set to: 62
 22110                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
 22111  002670  81F8               	bsf	248,0,b	;volatile
 22112                           
 22113                           ; BSR set to: 62
 22114                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 22115  002672  52E5               	movf	postdec1,f,c
 22116  002674  0012               	return		;funcret
 22117  002676                     __end_of_ADCC_StartConversion:
 22118                           	opt callstack 0
 22119                           
 22120 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 22121 ;; Defined at:
 22122 ;;		line 189 in file "mcc_generated_files/adcc.c"
 22123 ;; Parameters:    Size  Location     Type
 22124 ;;		None
 22125 ;; Auto vars:     Size  Location     Type
 22126 ;;		None
 22127 ;; Return value:  Size  Location     Type
 22128 ;;                  1  [STACK] void 
 22129 ;; Registers used:
 22130 ;;		wreg, status,2
 22131 ;; Tracked objects:
 22132 ;;		On entry : 0/1
 22133 ;;		On exit  : 3F/3E
 22134 ;;		Unchanged: 0/0
 22135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22140 ;;Total ram usage:        0 bytes
 22141 ;; Hardware stack levels used:    1
 22142 ;; Hardware stack levels required when called:   15
 22143 ;; This function calls:
 22144 ;;		Nothing
 22145 ;; This function is called by:
 22146 ;;		_start_adc_scan
 22147 ;;		_adc_int_t_handler
 22148 ;; This function uses a reentrant model
 22149 ;;
 22150                           
 22151                           	psect	text68
 22152  00275E                     __ptext68:
 22153                           	opt callstack 0
 22154  00275E                     _ADCC_DischargeSampleCapacitor:
 22155                           	opt callstack 0
 22156                           
 22157                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
 22158                           
 22159                           ; BSR set to: 62
 22160                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22161                           ;incstack = 0
 22162 ;; hardware stack exceeded
 22163  00275E  0E3B               	movlw	59
 22164  002760  013E               	movlb	62	; () banked
 22165  002762  6FF1               	movwf	241,b	;volatile
 22166                           
 22167                           ; BSR set to: 62
 22168                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
 22169  002764  0012               	return		;funcret
 22170  002766                     __end_of_ADCC_DischargeSampleCapacitor:
 22171                           	opt callstack 0
 22172                           
 22173 ;; *************** function _spinners *****************
 22174 ;; Defined at:
 22175 ;;		line 147 in file "mbmc.c"
 22176 ;; Parameters:    Size  Location     Type
 22177 ;;  shape           1  [STACK] unsigned char 
 22178 ;;  reset           1  [STACK] const unsigned char 
 22179 ;; Auto vars:     Size  Location     Type
 22180 ;;  c               1  [STACK] unsigned char 
 22181 ;; Return value:  Size  Location     Type
 22182 ;;                  1  [STACK] unsigned char 
 22183 ;; Registers used:
 22184 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh
 22185 ;; Tracked objects:
 22186 ;;		On entry : 0/0
 22187 ;;		On exit  : 0/0
 22188 ;;		Unchanged: 0/0
 22189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22194 ;;Total ram usage:        0 bytes
 22195 ;; Hardware stack levels used:    1
 22196 ;; Hardware stack levels required when called:   16
 22197 ;; This function calls:
 22198 ;;		_strlen
 22199 ;; This function is called by:
 22200 ;;		_main
 22201 ;;		_current_sensor_cal
 22202 ;; This function uses a reentrant model
 22203 ;;
 22204                           
 22205                           	psect	text69
 22206  01FAEA                     __ptext69:
 22207                           	opt callstack 0
 22208  01FAEA                     _spinners:
 22209                           	opt callstack 0
 22210                           
 22211                           ; BSR set to: 62
 22212                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22213  01FAEA  52E6               	movf	postinc1,f,c
 22214                           
 22215                           ;mbmc.c: 147: char spinners(uint8_t shape, const uint8_t reset);mbmc.c: 148: {;mbmc.c: 1
      +                          49:  static uint8_t s[6];;mbmc.c: 150:  char c;;mbmc.c: 152:  if (shape > (6 - 1))
 22216                           ;stkvar	_shape @ sp[(-1)+-1]
 22217                           
 22218                           ;incstack = 0
 22219  01FAEC  0EFE               	movlw	-2
 22220  01FAEE  006F FF8C  F02A    	movff	plusw1,btemp
 22221  01FAF4  0E05               	movlw	5
 22222  01FAF6  642A               	cpfsgt	btemp^0,c
 22223  01FAF8  D002               	goto	l2184
 22224                           
 22225                           ;mbmc.c: 153:   shape = 0;
 22226                           ;stkvar	_shape @ sp[(-1)+-1]
 22227  01FAFA  0EFE               	movlw	-2
 22228  01FAFC  6AE3               	clrf	plusw1,c
 22229  01FAFE                     l2184:
 22230                           
 22231                           ;mbmc.c: 154:  if (reset)
 22232                           ;stkvar	_reset @ sp[(-1)+-2]
 22233  01FAFE  0EFD               	movlw	-3
 22234  01FB00  50E3               	movf	plusw1,w,c
 22235  01FB02  B4D8               	btfsc	status,2,c
 22236  01FB04  D00C               	goto	l16882
 22237                           
 22238                           ;mbmc.c: 155:   s[shape] = 0;
 22239                           ;stkvar	_shape @ sp[(-1)+-1]
 22240  01FB06  0EFE               	movlw	-2
 22241  01FB08  50E3               	movf	plusw1,w,c
 22242  01FB0A  6E34               	movwf	(btemp+10)^0,c
 22243  01FB0C  6A35               	clrf	(btemp+11)^0,c
 22244  01FB0E  0ECD               	movlw	low spinners@s
 22245  01FB10  2434               	addwf	(btemp+10)^0,w,c
 22246  01FB12  6ED9               	movwf	fsr2l,c
 22247  01FB14  0E01               	movlw	high spinners@s
 22248  01FB16  2035               	addwfc	(btemp+11)^0,w,c
 22249  01FB18  6EDA               	movwf	fsr2h,c
 22250  01FB1A  0E00               	movlw	0
 22251  01FB1C  6EDF               	movwf	indf2,c
 22252  01FB1E                     l16882:
 22253                           
 22254                           ;mbmc.c: 156:  c = spin[shape][s[shape]];
 22255                           ;stkvar	_shape @ sp[(-1)+-1]
 22256  01FB1E  0EFE               	movlw	-2
 22257  01FB20  50E3               	movf	plusw1,w,c
 22258  01FB22  0D14               	mullw	20
 22259  01FB24  0E67               	movlw	low _spin
 22260  01FB26  6E34               	movwf	(btemp+10)^0,c
 22261  01FB28  0EF9               	movlw	high _spin
 22262  01FB2A  6E35               	movwf	(btemp+11)^0,c
 22263  01FB2C  50F3               	movf	243,w,c
 22264  01FB2E  2634               	addwf	(btemp+10)^0,f,c
 22265  01FB30  50F4               	movf	244,w,c
 22266  01FB32  2235               	addwfc	(btemp+11)^0,f,c
 22267                           
 22268                           ;stkvar	_shape @ sp[(-1)+-1]
 22269  01FB34  0EFE               	movlw	-2
 22270  01FB36  50E3               	movf	plusw1,w,c
 22271  01FB38  6E32               	movwf	(btemp+8)^0,c
 22272  01FB3A  6A33               	clrf	(btemp+9)^0,c
 22273  01FB3C  0ECD               	movlw	low spinners@s
 22274  01FB3E  2432               	addwf	(btemp+8)^0,w,c
 22275  01FB40  6ED9               	movwf	fsr2l,c
 22276  01FB42  0E01               	movlw	high spinners@s
 22277  01FB44  2033               	addwfc	(btemp+9)^0,w,c
 22278  01FB46  6EDA               	movwf	fsr2h,c
 22279  01FB48  50DF               	movf	indf2,w,c
 22280  01FB4A  2634               	addwf	(btemp+10)^0,f,c
 22281  01FB4C  0E00               	movlw	0
 22282  01FB4E  2235               	addwfc	(btemp+11)^0,f,c
 22283  01FB50  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 22284  01FB56  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 22285  01FB5C                     	if	0	;tblptru may be non-zero
 22286  01FB5C                     	endif
 22287  01FB5C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22288  01FB5C  0E00               	movlw	low (__mediumconst shr (0+16))
 22289  01FB5E  6EF8               	movwf	tblptru,c
 22290  01FB60                     	endif
 22291                           
 22292                           ;stkvar	_c @ sp[(-1)+0]
 22293  01FB60  0008               	tblrd		*
 22294  01FB62  0EFF               	movlw	-1
 22295  01FB64  006F FFD7 FFE3     	movff	tablat,plusw1
 22296                           
 22297                           ;mbmc.c: 157:  if (++s[shape] >= strlen(spin[shape]))
 22298                           ;stkvar	_shape @ sp[(-1)+-1]
 22299  01FB6A  0EFE               	movlw	-2
 22300  01FB6C  50E3               	movf	plusw1,w,c
 22301  01FB6E  0D14               	mullw	20
 22302  01FB70  0E67               	movlw	low _spin
 22303  01FB72  6E34               	movwf	(btemp+10)^0,c
 22304  01FB74  0EF9               	movlw	high _spin
 22305  01FB76  6E35               	movwf	(btemp+11)^0,c
 22306  01FB78  50F3               	movf	243,w,c
 22307  01FB7A  2634               	addwf	(btemp+10)^0,f,c
 22308  01FB7C  50F4               	movf	244,w,c
 22309  01FB7E  2235               	addwfc	(btemp+11)^0,f,c
 22310  01FB80  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 22311  01FB86  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 22312  01FB8C  ECA7  F004         	call	_strlen	;wreg free
 22313                           
 22314                           ;stkvar	_shape @ sp[(-1)+-1]
 22315  01FB90  0EFE               	movlw	-2
 22316  01FB92  50E3               	movf	plusw1,w,c
 22317  01FB94  6E34               	movwf	(btemp+10)^0,c
 22318  01FB96  6A35               	clrf	(btemp+11)^0,c
 22319  01FB98  0ECD               	movlw	low spinners@s
 22320  01FB9A  2434               	addwf	(btemp+10)^0,w,c
 22321  01FB9C  6ED9               	movwf	fsr2l,c
 22322  01FB9E  0E01               	movlw	high spinners@s
 22323  01FBA0  2035               	addwfc	(btemp+11)^0,w,c
 22324  01FBA2  6EDA               	movwf	fsr2h,c
 22325  01FBA4  2ADF               	incf	indf2,f,c
 22326  01FBA6  50DF               	movf	indf2,w,c
 22327  01FBA8  6E34               	movwf	(btemp+10)^0,c
 22328  01FBAA  6A35               	clrf	(btemp+11)^0,c
 22329  01FBAC  502A               	movf	btemp^0,w,c
 22330  01FBAE  5C34               	subwf	(btemp+10)^0,w,c
 22331  01FBB0  502B               	movf	(btemp+1)^0,w,c
 22332  01FBB2  5835               	subwfb	(btemp+11)^0,w,c
 22333  01FBB4  A0D8               	btfss	status,0,c
 22334  01FBB6  D00C               	goto	l16888
 22335                           
 22336                           ;mbmc.c: 158:   s[shape] = 0;
 22337                           ;stkvar	_shape @ sp[(-1)+-1]
 22338  01FBB8  0EFE               	movlw	-2
 22339  01FBBA  50E3               	movf	plusw1,w,c
 22340  01FBBC  6E34               	movwf	(btemp+10)^0,c
 22341  01FBBE  6A35               	clrf	(btemp+11)^0,c
 22342  01FBC0  0ECD               	movlw	low spinners@s
 22343  01FBC2  2434               	addwf	(btemp+10)^0,w,c
 22344  01FBC4  6ED9               	movwf	fsr2l,c
 22345  01FBC6  0E01               	movlw	high spinners@s
 22346  01FBC8  2035               	addwfc	(btemp+11)^0,w,c
 22347  01FBCA  6EDA               	movwf	fsr2h,c
 22348  01FBCC  0E00               	movlw	0
 22349  01FBCE  6EDF               	movwf	indf2,c
 22350  01FBD0                     l16888:
 22351                           
 22352                           ;mbmc.c: 159:  return c;
 22353                           ;stkvar	_c @ sp[(-1)+0]
 22354  01FBD0  0EFF               	movlw	-1
 22355  01FBD2  006F FF8C  F02A    	movff	plusw1,btemp
 22356                           
 22357                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
 22358  01FBD8  52E5               	movf	postdec1,f,c
 22359  01FBDA  52E5               	movf	postdec1,f,c
 22360  01FBDC  52E5               	movf	postdec1,f,c
 22361  01FBDE  0012               	return		;funcret
 22362  01FBE0                     __end_of_spinners:
 22363                           	opt callstack 0
 22364                           
 22365 ;; *************** function _get_switch *****************
 22366 ;; Defined at:
 22367 ;;		line 18 in file "dio.c"
 22368 ;; Parameters:    Size  Location     Type
 22369 ;;  i               1  [STACK] const unsigned char 
 22370 ;; Auto vars:     Size  Location     Type
 22371 ;;		None
 22372 ;; Return value:  Size  Location     Type
 22373 ;;                  1  [STACK] enum E17187
 22374 ;; Registers used:
 22375 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22376 ;; Tracked objects:
 22377 ;;		On entry : 0/0
 22378 ;;		On exit  : 0/0
 22379 ;;		Unchanged: 0/0
 22380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22385 ;;Total ram usage:        0 bytes
 22386 ;; Hardware stack levels used:    1
 22387 ;; Hardware stack levels required when called:   15
 22388 ;; This function calls:
 22389 ;;		Nothing
 22390 ;; This function is called by:
 22391 ;;		_main
 22392 ;;		_current_sensor_cal
 22393 ;;		_display_history
 22394 ;;		_hid_input
 22395 ;; This function uses a reentrant model
 22396 ;;
 22397                           
 22398                           	psect	text70
 22399  002084                     __ptext70:
 22400                           	opt callstack 0
 22401  002084                     _get_switch:
 22402                           	opt callstack 13
 22403                           
 22404                           ;dio.c: 18: SW_STATES get_switch(const uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 6)
 22405                           ;stkvar	_i @ sp[(0)+-1]
 22406                           
 22407                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22408                           ;incstack = 0
 22409  002084  0EFF               	movlw	-1
 22410  002086  006F FF8C  F02A    	movff	plusw1,btemp
 22411  00208C  0E05               	movlw	5
 22412  00208E  642A               	cpfsgt	btemp^0,c
 22413  002090  D002               	goto	l12828
 22414                           
 22415                           ;dio.c: 21:   return SW_OFF;
 22416  002092  0E00               	movlw	0
 22417  002094  D00A               	goto	L20
 22418  002096                     l12828:
 22419                           
 22420                           ;dio.c: 23:  return S.button[i].sw;
 22421                           ;stkvar	_i @ sp[(0)+-1]
 22422  002096  0EFF               	movlw	-1
 22423  002098  50E3               	movf	plusw1,w,c
 22424  00209A  0D05               	mullw	5
 22425  00209C  0EA4               	movlw	low _S
 22426  00209E  24F3               	addwf	243,w,c
 22427  0020A0  6ED9               	movwf	fsr2l,c
 22428  0020A2  0E01               	movlw	high _S
 22429  0020A4  20F4               	addwfc	prodh,w,c
 22430  0020A6  6EDA               	movwf	fsr2h,c
 22431  0020A8  50DF               	movf	indf2,w,c
 22432  0020AA                     L20:
 22433  0020AA  6E2A               	movwf	btemp^0,c
 22434                           
 22435                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 22436  0020AC  52E5               	movf	postdec1,f,c
 22437  0020AE  0012               	return		;funcret
 22438  0020B0                     __end_of_get_switch:
 22439                           	opt callstack 0
 22440                           
 22441 ;; *************** function _clear_adc_scan *****************
 22442 ;; Defined at:
 22443 ;;		line 103 in file "daq.c"
 22444 ;; Parameters:    Size  Location     Type
 22445 ;;		None
 22446 ;; Auto vars:     Size  Location     Type
 22447 ;;		None
 22448 ;; Return value:  Size  Location     Type
 22449 ;;                  1  [STACK] void 
 22450 ;; Registers used:
 22451 ;;		None
 22452 ;; Tracked objects:
 22453 ;;		On entry : 0/0
 22454 ;;		On exit  : 3F/1
 22455 ;;		Unchanged: 0/0
 22456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22461 ;;Total ram usage:        0 bytes
 22462 ;; Hardware stack levels used:    1
 22463 ;; Hardware stack levels required when called:   15
 22464 ;; This function calls:
 22465 ;;		Nothing
 22466 ;; This function is called by:
 22467 ;;		_main
 22468 ;;		_current_sensor_cal
 22469 ;;		_update_adc_result
 22470 ;; This function uses a reentrant model
 22471 ;;
 22472                           
 22473                           	psect	text71
 22474  00278A                     __ptext71:
 22475                           	opt callstack 0
 22476  00278A                     _clear_adc_scan:
 22477                           	opt callstack 13
 22478                           
 22479                           ;daq.c: 105:  R.done = 0;
 22480                           
 22481                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22482                           ;incstack = 0
 22483  00278A  0101               	movlb	1	; () banked
 22484  00278C  6B35               	clrf	(_R+53)& (0+255),b	;volatile
 22485                           
 22486                           ; BSR set to: 1
 22487                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22488  00278E  0012               	return		;funcret
 22489  002790                     __end_of_clear_adc_scan:
 22490                           	opt callstack 0
 22491                           
 22492 ;; *************** function _cal_current_zero *****************
 22493 ;; Defined at:
 22494 ;;		line 329 in file "daq.c"
 22495 ;; Parameters:    Size  Location     Type
 22496 ;;  mode            1  [STACK] const _Bool 
 22497 ;;  cb              2  [STACK] const short 
 22498 ;;  cp              2  [STACK] const short 
 22499 ;; Auto vars:     Size  Location     Type
 22500 ;;		None
 22501 ;; Return value:  Size  Location     Type
 22502 ;;                  1  [STACK] _Bool 
 22503 ;; Registers used:
 22504 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22505 ;; Tracked objects:
 22506 ;;		On entry : 0/1
 22507 ;;		On exit  : 0/0
 22508 ;;		Unchanged: 0/0
 22509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22514 ;;Total ram usage:        0 bytes
 22515 ;; Hardware stack levels used:    1
 22516 ;; Hardware stack levels required when called:   16
 22517 ;; This function calls:
 22518 ;;		_check_range
 22519 ;; This function is called by:
 22520 ;;		_current_sensor_cal
 22521 ;; This function uses a reentrant model
 22522 ;;
 22523                           
 22524                           	psect	text72
 22525  000B22                     __ptext72:
 22526                           	opt callstack 0
 22527  000B22                     _cal_current_zero:
 22528                           	opt callstack 13
 22529                           
 22530                           ;daq.c: 329: _Bool cal_current_zero(const _Bool mode, const int16_t cb, const int16_t cp
      +                          );daq.c: 330: {;daq.c: 332:  if (!check_range(cb, 100, 4000))
 22531                           
 22532                           ; BSR set to: 1
 22533                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22534                           ;incstack = 0
 22535  000B22  0EA0               	movlw	160
 22536  000B24  6EE6               	movwf	postinc1,c
 22537  000B26  0E0F               	movlw	15
 22538  000B28  6EE6               	movwf	postinc1,c
 22539  000B2A  0E64               	movlw	100
 22540  000B2C  6EE6               	movwf	postinc1,c
 22541  000B2E  0E00               	movlw	0
 22542  000B30  6EE6               	movwf	postinc1,c
 22543                           
 22544                           ;stkvar	_cb @ sp[(-4)+-3]
 22545  000B32  0EF9               	movlw	-7
 22546  000B34  006F FF8F FFE6     	movff	plusw1,postinc1
 22547  000B3A  006F FF8F FFE6     	movff	plusw1,postinc1
 22548  000B40  ECC6  F007         	call	_check_range	;wreg free
 22549  000B44  502A               	movf	btemp^0,w,c
 22550  000B46  A4D8               	btfss	status,2,c
 22551  000B48  D002               	goto	l13528
 22552  000B4A                     u12600:
 22553                           
 22554                           ;daq.c: 333:   return 0;
 22555  000B4A  0E00               	movlw	0
 22556  000B4C  D019               	goto	L21
 22557  000B4E                     l13528:
 22558                           
 22559                           ;daq.c: 335:  if (!check_range(cp, 100, 4000))
 22560  000B4E  0EA0               	movlw	160
 22561  000B50  6EE6               	movwf	postinc1,c
 22562  000B52  0E0F               	movlw	15
 22563  000B54  6EE6               	movwf	postinc1,c
 22564  000B56  0E64               	movlw	100
 22565  000B58  6EE6               	movwf	postinc1,c
 22566  000B5A  0E00               	movlw	0
 22567  000B5C  6EE6               	movwf	postinc1,c
 22568                           
 22569                           ;stkvar	_cp @ sp[(-4)+-5]
 22570  000B5E  0EF7               	movlw	-9
 22571  000B60  006F FF8F FFE6     	movff	plusw1,postinc1
 22572  000B66  006F FF8F FFE6     	movff	plusw1,postinc1
 22573  000B6C  ECC6  F007         	call	_check_range	;wreg free
 22574  000B70  502A               	movf	btemp^0,w,c
 22575  000B72  B4D8               	btfsc	status,2,c
 22576  000B74  D7EA               	goto	u12600
 22577                           
 22578                           ;daq.c: 338:  if (!mode)
 22579                           ;stkvar	_mode @ sp[(0)+-1]
 22580  000B76  0EFF               	movlw	-1
 22581  000B78  50E3               	movf	plusw1,w,c
 22582  000B7A  A4D8               	btfss	status,2,c
 22583  000B7C  D003               	goto	l13540
 22584  000B7E                     u12620:
 22585                           
 22586                           ;daq.c: 339:   return 1;
 22587  000B7E  0E01               	movlw	1
 22588  000B80                     L21:
 22589  000B80  6E2A               	movwf	btemp^0,c
 22590  000B82  D013               	goto	l2058
 22591  000B84                     l13540:
 22592                           
 22593                           ;daq.c: 341:  R.n_offset[0] = cb;
 22594                           ;stkvar	_cb @ sp[(0)+-3]
 22595  000B84  0EFD               	movlw	-3
 22596  000B86  006F FF8C  F126    	movff	plusw1,_R+38	;volatile
 22597  000B8C  0EFE               	movlw	-2
 22598  000B8E  006F FF8C  F127    	movff	plusw1,_R+39	;volatile
 22599                           
 22600                           ;daq.c: 342:  R.n_offset[1] = cp;
 22601                           ;stkvar	_cp @ sp[(0)+-5]
 22602  000B94  0EFB               	movlw	-5
 22603  000B96  006F FF8C  F128    	movff	plusw1,_R+40	;volatile
 22604  000B9C  0EFC               	movlw	-4
 22605  000B9E  006F FF8C  F129    	movff	plusw1,_R+41	;volatile
 22606                           
 22607                           ;daq.c: 343:  R.c_zero_cal = 1;
 22608  000BA4  0101               	movlb	1	; () banked
 22609  000BA6  8597               	bsf	(_R+151)& (0+255),2,b	;volatile
 22610  000BA8  D7EA               	goto	u12620
 22611  000BAA                     l2058:
 22612                           
 22613                           ; _cal_current_zero: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           5, argsize = 5, vargsize = 0
 22614  000BAA  0EFB               	movlw	251
 22615  000BAC  26E1               	addwf	fsr1l,f,c
 22616  000BAE  0EFF               	movlw	255
 22617  000BB0  22E2               	addwfc	fsr1h,f,c
 22618  000BB2  0012               	return		;funcret
 22619  000BB4                     __end_of_cal_current_zero:
 22620                           	opt callstack 0
 22621                           
 22622 ;; *************** function _check_range *****************
 22623 ;; Defined at:
 22624 ;;		line 317 in file "daq.c"
 22625 ;; Parameters:    Size  Location     Type
 22626 ;;  value           2  [STACK] const short 
 22627 ;;  window          2  [STACK] const short 
 22628 ;;  standard        2  [STACK] const short 
 22629 ;; Auto vars:     Size  Location     Type
 22630 ;;		None
 22631 ;; Return value:  Size  Location     Type
 22632 ;;                  1  [STACK] _Bool 
 22633 ;; Registers used:
 22634 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22635 ;; Tracked objects:
 22636 ;;		On entry : 0/1
 22637 ;;		On exit  : 0/0
 22638 ;;		Unchanged: 0/0
 22639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22644 ;;Total ram usage:        0 bytes
 22645 ;; Hardware stack levels used:    1
 22646 ;; Hardware stack levels required when called:   15
 22647 ;; This function calls:
 22648 ;;		Nothing
 22649 ;; This function is called by:
 22650 ;;		_cal_current_zero
 22651 ;; This function uses a reentrant model
 22652 ;;
 22653                           
 22654                           	psect	text73
 22655  000F8C                     __ptext73:
 22656                           	opt callstack 0
 22657  000F8C                     _check_range:
 22658                           	opt callstack 13
 22659                           
 22660                           ;daq.c: 317: static _Bool check_range(const int16_t value, const int16_t window, const i
      +                          nt16_t standard);daq.c: 318: {;daq.c: 319:  if (value > (standard + window))
 22661                           ;stkvar	_value @ sp[(0)+-2]
 22662                           ;stkvar	_window @ sp[(0)+-4]
 22663                           ;stkvar	_standard @ sp[(0)+-6]
 22664                           
 22665                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22666                           ;incstack = 0
 22667  000F8C  0EFA               	movlw	-6
 22668  000F8E  006F FF8C  F034    	movff	plusw1,btemp+10
 22669  000F94  0EFB               	movlw	-5
 22670  000F96  006F FF8C  F035    	movff	plusw1,btemp+11
 22671  000F9C  0EFC               	movlw	-4
 22672  000F9E  50E3               	movf	plusw1,w,c
 22673  000FA0  2634               	addwf	(btemp+10)^0,f,c
 22674  000FA2  0EFD               	movlw	-3
 22675  000FA4  50E3               	movf	plusw1,w,c
 22676  000FA6  2235               	addwfc	(btemp+11)^0,f,c
 22677  000FA8  0EFE               	movlw	-2
 22678  000FAA  50E3               	movf	plusw1,w,c
 22679  000FAC  5C34               	subwf	(btemp+10)^0,w,c
 22680  000FAE  5035               	movf	(btemp+11)^0,w,c
 22681  000FB0  0A80               	xorlw	128
 22682  000FB2  6E2A               	movwf	btemp^0,c
 22683  000FB4  0EFF               	movlw	-1
 22684  000FB6  50E3               	movf	plusw1,w,c
 22685  000FB8  0A80               	xorlw	128
 22686  000FBA  582A               	subwfb	btemp^0,w,c
 22687  000FBC  B0D8               	btfsc	status,0,c
 22688  000FBE  D002               	goto	l12900
 22689  000FC0                     u12330:
 22690                           
 22691                           ;daq.c: 320:   return 0;
 22692  000FC0  0E00               	movlw	0
 22693  000FC2  D01E               	goto	L22
 22694  000FC4                     l12900:
 22695                           
 22696                           ;daq.c: 321:  if (value < (standard - window))
 22697                           ;stkvar	_window @ sp[(0)+-4]
 22698                           ;stkvar	_standard @ sp[(0)+-6]
 22699  000FC4  0EFA               	movlw	-6
 22700  000FC6  006F FF8C  F034    	movff	plusw1,btemp+10
 22701  000FCC  0EFB               	movlw	-5
 22702  000FCE  006F FF8C  F035    	movff	plusw1,btemp+11
 22703  000FD4  0EFC               	movlw	-4
 22704  000FD6  50E3               	movf	plusw1,w,c
 22705  000FD8  5E34               	subwf	(btemp+10)^0,f,c
 22706  000FDA  0EFD               	movlw	-3
 22707  000FDC  50E3               	movf	plusw1,w,c
 22708  000FDE  5A35               	subwfb	(btemp+11)^0,f,c
 22709                           
 22710                           ;stkvar	_value @ sp[(0)+-2]
 22711  000FE0  0EFE               	movlw	-2
 22712  000FE2  006F FF8C  F02A    	movff	plusw1,btemp
 22713  000FE8  5034               	movf	(btemp+10)^0,w,c
 22714  000FEA  5C2A               	subwf	btemp^0,w,c
 22715  000FEC  0EFF               	movlw	-1
 22716  000FEE  50E3               	movf	plusw1,w,c
 22717  000FF0  0A80               	xorlw	128
 22718  000FF2  6E2A               	movwf	btemp^0,c
 22719  000FF4  5035               	movf	(btemp+11)^0,w,c
 22720  000FF6  0A80               	xorlw	128
 22721  000FF8  582A               	subwfb	btemp^0,w,c
 22722  000FFA  A0D8               	btfss	status,0,c
 22723  000FFC  D7E1               	goto	u12330
 22724                           
 22725                           ;daq.c: 323:  return 1;
 22726  000FFE  0E01               	movlw	1
 22727  001000                     L22:
 22728  001000  6E2A               	movwf	btemp^0,c
 22729                           
 22730                           ; _check_range: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
 22731  001002  0EFA               	movlw	250
 22732  001004  26E1               	addwf	fsr1l,f,c
 22733  001006  0EFF               	movlw	255
 22734  001008  22E2               	addwfc	fsr1h,f,c
 22735  00100A  0012               	return		;funcret
 22736  00100C                     __end_of_check_range:
 22737                           	opt callstack 0
 22738                           
 22739 ;; *************** function _convert_adc_data *****************
 22740 ;; Defined at:
 22741 ;;		line 51 in file "mbmc.c"
 22742 ;; Parameters:    Size  Location     Type
 22743 ;;		None
 22744 ;; Auto vars:     Size  Location     Type
 22745 ;;  i               1  [STACK] unsigned char 
 22746 ;; Return value:  Size  Location     Type
 22747 ;;                  1  [STACK] void 
 22748 ;; Registers used:
 22749 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22750 ;; Tracked objects:
 22751 ;;		On entry : 0/2
 22752 ;;		On exit  : 0/0
 22753 ;;		Unchanged: 0/0
 22754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22759 ;;Total ram usage:        0 bytes
 22760 ;; Hardware stack levels used:    1
 22761 ;; Hardware stack levels required when called:   18
 22762 ;; This function calls:
 22763 ;;		_conv_raw_result
 22764 ;;		_lp_filter
 22765 ;; This function is called by:
 22766 ;;		_main
 22767 ;; This function uses a reentrant model
 22768 ;;
 22769                           
 22770                           	psect	text74
 22771  000492                     __ptext74:
 22772                           	opt callstack 0
 22773  000492                     _convert_adc_data:
 22774                           	opt callstack 0
 22775                           
 22776                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22777  000492  52E6               	movf	postinc1,f,c
 22778                           
 22779                           ;mbmc.c: 53:  uint8_t i = 0;
 22780                           ;stkvar	_i @ sp[(-1)+0]
 22781                           
 22782                           ;incstack = 0
 22783  000494  0EFF               	movlw	-1
 22784  000496  6AE3               	clrf	plusw1,c
 22785  000498                     l14342:
 22786                           
 22787                           ;mbmc.c: 56:   if (V.calib) {
 22788  000498  0102               	movlb	2	; () banked
 22789  00049A  51B0               	movf	(_V+169)& (0+255),w,b	;volatile
 22790  00049C  B4D8               	btfsc	status,2,c
 22791  00049E  D01B               	goto	l14346
 22792                           
 22793                           ; BSR set to: 2
 22794                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
 22795  0004A0  0E01               	movlw	1
 22796  0004A2  6EE6               	movwf	postinc1,c
 22797                           
 22798                           ;stkvar	_i @ sp[(-2)+0]
 22799  0004A4  0EFE               	movlw	-2
 22800  0004A6  50E3               	movf	plusw1,w,c
 22801  0004A8  6EE6               	movwf	postinc1,c
 22802  0004AA  0E01               	movlw	1
 22803  0004AC  6EE6               	movwf	postinc1,c
 22804                           
 22805                           ;stkvar	_i @ sp[(-4)+0]
 22806  0004AE  0EFC               	movlw	-4
 22807  0004B0  50E3               	movf	plusw1,w,c
 22808  0004B2  6EE6               	movwf	postinc1,c
 22809  0004B4  EC26  F0C3         	call	_conv_raw_result	;wreg free
 22810  0004B8  0060  F0AB  FFE6   	movff	btemp,postinc1
 22811  0004BE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 22812  0004C4  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 22813  0004CA  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 22814  0004D0  EC96  F0EB         	call	_lp_filter	;wreg free
 22815  0004D4  D01A               	goto	L23
 22816  0004D6                     l14346:
 22817                           
 22818                           ; BSR set to: 2
 22819                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
 22820  0004D6  0E00               	movlw	0
 22821  0004D8  6EE6               	movwf	postinc1,c
 22822                           
 22823                           ;stkvar	_i @ sp[(-2)+0]
 22824  0004DA  0EFE               	movlw	-2
 22825  0004DC  50E3               	movf	plusw1,w,c
 22826  0004DE  6EE6               	movwf	postinc1,c
 22827  0004E0  0E00               	movlw	0
 22828  0004E2  6EE6               	movwf	postinc1,c
 22829                           
 22830                           ;stkvar	_i @ sp[(-4)+0]
 22831  0004E4  0EFC               	movlw	-4
 22832  0004E6  50E3               	movf	plusw1,w,c
 22833  0004E8  6EE6               	movwf	postinc1,c
 22834  0004EA  EC26  F0C3         	call	_conv_raw_result	;wreg free
 22835  0004EE  0060  F0AB  FFE6   	movff	btemp,postinc1
 22836  0004F4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 22837  0004FA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 22838  000500  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 22839  000506  EC96  F0EB         	call	_lp_filter	;wreg free
 22840  00050A                     L23:
 22841                           
 22842                           ;stkvar	_i @ sp[(-1)+0]
 22843  00050A  0EFF               	movlw	-1
 22844  00050C  50E3               	movf	plusw1,w,c
 22845  00050E  0D04               	mullw	4
 22846  000510  0EFF               	movlw	low _C
 22847  000512  24F3               	addwf	243,w,c
 22848  000514  6ED9               	movwf	fsr2l,c
 22849  000516  0E08               	movlw	high _C
 22850  000518  20F4               	addwfc	prodh,w,c
 22851  00051A  6EDA               	movwf	fsr2h,c
 22852  00051C  0060  F0AB  FFDE   	movff	btemp,postinc2
 22853  000522  0060  F0AF  FFDE   	movff	btemp+1,postinc2
 22854  000528  0060  F0B3  FFDE   	movff	btemp+2,postinc2
 22855  00052E  0060  F0B7  FFDE   	movff	btemp+3,postinc2
 22856                           
 22857                           ;mbmc.c: 61:  } while (++i < 16);
 22858                           ;stkvar	_i @ sp[(-1)+0]
 22859  000534  0EFF               	movlw	-1
 22860  000536  2AE3               	incf	plusw1,f,c
 22861  000538  0EFF               	movlw	-1
 22862  00053A  006F FF8C  F02A    	movff	plusw1,btemp
 22863  000540  0E0F               	movlw	15
 22864  000542  642A               	cpfsgt	btemp^0,c
 22865  000544  D7A9               	goto	l14342
 22866                           
 22867                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22868  000546  52E5               	movf	postdec1,f,c
 22869  000548  0012               	return		;funcret
 22870  00054A                     __end_of_convert_adc_data:
 22871                           	opt callstack 0
 22872                           
 22873 ;; *************** function _clear_hid_pflags *****************
 22874 ;; Defined at:
 22875 ;;		line 67 in file "hid.c"
 22876 ;; Parameters:    Size  Location     Type
 22877 ;;  h               2  [STACK] PTR struct H_data
 22878 ;;		 -> H(9), 
 22879 ;; Auto vars:     Size  Location     Type
 22880 ;;		None
 22881 ;; Return value:  Size  Location     Type
 22882 ;;                  1  [STACK] void 
 22883 ;; Registers used:
 22884 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 22885 ;; Tracked objects:
 22886 ;;		On entry : 3E/0
 22887 ;;		On exit  : 0/0
 22888 ;;		Unchanged: 0/0
 22889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22894 ;;Total ram usage:        0 bytes
 22895 ;; Hardware stack levels used:    1
 22896 ;; Hardware stack levels required when called:   15
 22897 ;; This function calls:
 22898 ;;		Nothing
 22899 ;; This function is called by:
 22900 ;;		_main
 22901 ;; This function uses a reentrant model
 22902 ;;
 22903                           
 22904                           	psect	text75
 22905  001392                     __ptext75:
 22906                           	opt callstack 0
 22907  001392                     _clear_hid_pflags:
 22908                           	opt callstack 15
 22909                           
 22910                           ;hid.c: 67: void clear_hid_pflags(H_data* h);hid.c: 68: {;hid.c: 69:  h->select_p = SW_O
      +                          FF;
 22911                           ;stkvar	_h @ sp[(0)+-2]
 22912                           
 22913                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22914                           ;incstack = 0
 22915  001392  0EFE               	movlw	-2
 22916  001394  006F FF8C  F034    	movff	plusw1,btemp+10
 22917  00139A  0EFF               	movlw	-1
 22918  00139C  006F FF8C  F035    	movff	plusw1,btemp+11
 22919  0013A2  0E03               	movlw	3
 22920  0013A4  2434               	addwf	(btemp+10)^0,w,c
 22921  0013A6  6ED9               	movwf	fsr2l,c
 22922  0013A8  0E00               	movlw	0
 22923  0013AA  2035               	addwfc	(btemp+11)^0,w,c
 22924  0013AC  6EDA               	movwf	fsr2h,c
 22925  0013AE  0E00               	movlw	0
 22926  0013B0  6EDF               	movwf	indf2,c
 22927                           
 22928                           ;hid.c: 70:  h->enter_p = SW_OFF;
 22929                           ;stkvar	_h @ sp[(0)+-2]
 22930  0013B2  0EFE               	movlw	-2
 22931  0013B4  006F FF8C  F034    	movff	plusw1,btemp+10
 22932  0013BA  0EFF               	movlw	-1
 22933  0013BC  006F FF8C  F035    	movff	plusw1,btemp+11
 22934  0013C2  0E05               	movlw	5
 22935  0013C4  2434               	addwf	(btemp+10)^0,w,c
 22936  0013C6  6ED9               	movwf	fsr2l,c
 22937  0013C8  0E00               	movlw	0
 22938  0013CA  2035               	addwfc	(btemp+11)^0,w,c
 22939  0013CC  6EDA               	movwf	fsr2h,c
 22940  0013CE  0E00               	movlw	0
 22941  0013D0  6EDF               	movwf	indf2,c
 22942                           
 22943                           ;hid.c: 71:  h->calib_p = SW_OFF;
 22944                           ;stkvar	_h @ sp[(0)+-2]
 22945  0013D2  0EFE               	movlw	-2
 22946  0013D4  006F FF8C  F034    	movff	plusw1,btemp+10
 22947  0013DA  0EFF               	movlw	-1
 22948  0013DC  006F FF8C  F035    	movff	plusw1,btemp+11
 22949  0013E2  0E07               	movlw	7
 22950  0013E4  2434               	addwf	(btemp+10)^0,w,c
 22951  0013E6  6ED9               	movwf	fsr2l,c
 22952  0013E8  0E00               	movlw	0
 22953  0013EA  2035               	addwfc	(btemp+11)^0,w,c
 22954  0013EC  6EDA               	movwf	fsr2h,c
 22955  0013EE  0E00               	movlw	0
 22956  0013F0  6EDF               	movwf	indf2,c
 22957                           
 22958                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 22959  0013F2  52E5               	movf	postdec1,f,c
 22960  0013F4  52E5               	movf	postdec1,f,c
 22961  0013F6  0012               	return		;funcret
 22962  0013F8                     __end_of_clear_hid_pflags:
 22963                           	opt callstack 0
 22964                           
 22965 ;; *************** function _check_help *****************
 22966 ;; Defined at:
 22967 ;;		line 40 in file "mconfig.c"
 22968 ;; Parameters:    Size  Location     Type
 22969 ;;  flipper         1  [STACK] const _Bool 
 22970 ;; Auto vars:     Size  Location     Type
 22971 ;;  estatus         1    0        _Bool 
 22972 ;; Return value:  Size  Location     Type
 22973 ;;                  1  [STACK] _Bool 
 22974 ;; Registers used:
 22975 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 22976 ;; Tracked objects:
 22977 ;;		On entry : 3F/2
 22978 ;;		On exit  : 0/0
 22979 ;;		Unchanged: 0/0
 22980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22985 ;;Total ram usage:        0 bytes
 22986 ;; Hardware stack levels used:    1
 22987 ;; Hardware stack levels required when called:   27
 22988 ;; This function calls:
 22989 ;;		_StartTimer
 22990 ;;		_TimerDone
 22991 ;;		_display_help
 22992 ;;		_display_info
 22993 ;;		_get_vterm_ptr
 22994 ;;		_help_button
 22995 ;;		_mode_lamp_bright
 22996 ;;		_mode_lamp_dim
 22997 ;;		_set_display_info
 22998 ;;		_set_temp_display_help
 22999 ;;		_set_vterm
 23000 ;;		_sprintf
 23001 ;;		_update_lcd
 23002 ;;		_vterm_dump
 23003 ;; This function is called by:
 23004 ;;		_main
 23005 ;; This function uses a reentrant model
 23006 ;;
 23007                           
 23008                           	psect	text76
 23009  01D14C                     __ptext76:
 23010                           	opt callstack 0
 23011  01D14C                     _check_help:
 23012                           	opt callstack 3
 23013                           
 23014                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
 23015                           
 23016                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23017                           ;incstack = 0
 23018  01D14C  ECDC  F00E         	call	_help_button	;wreg free
 23019  01D150  502A               	movf	btemp^0,w,c
 23020  01D152  B4D8               	btfsc	status,2,c
 23021  01D154  D0D0               	goto	l17326
 23022  01D156  ECB3  F013         	call	_display_info	;wreg free
 23023  01D15A  042A               	decf	btemp^0,w,c
 23024  01D15C  B4D8               	btfsc	status,2,c
 23025  01D15E  D0CB               	goto	l17326
 23026                           
 23027                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
 23028  01D160  0EDC               	movlw	220
 23029  01D162  6EE6               	movwf	postinc1,c
 23030  01D164  0E05               	movlw	5
 23031  01D166  6EE6               	movwf	postinc1,c
 23032  01D168  0E0B               	movlw	11
 23033  01D16A  6EE6               	movwf	postinc1,c
 23034  01D16C  EC22  F00E         	call	_StartTimer	;wreg free
 23035                           
 23036                           ;mconfig.c: 48:   if (V.debug)
 23037  01D170  0102               	movlb	2	; () banked
 23038  01D172  B39F               	btfsc	(_V+152)& (0+255),1,b	;volatile
 23039                           
 23040                           ; BSR set to: 2
 23041                           ;mconfig.c: 49:    vterm_dump();
 23042  01D174  ECDA  F0EE         	call	_vterm_dump	;wreg free
 23043                           
 23044                           ;mconfig.c: 51:   set_vterm(1);
 23045  01D178  0E01               	movlw	1
 23046  01D17A  6EE6               	movwf	postinc1,c
 23047  01D17C  ECA3  F012         	call	_set_vterm	;wreg free
 23048                           
 23049                           ;mconfig.c: 52:   set_temp_display_help(display_info());
 23050  01D180  ECB3  F013         	call	_display_info	;wreg free
 23051  01D184  502A               	movf	btemp^0,w,c
 23052  01D186  6EE6               	movwf	postinc1,c
 23053  01D188  EC53  F013         	call	_set_temp_display_help	;wreg free
 23054                           
 23055                           ; BSR set to: 2
 23056                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
 23057  01D18C  0E01               	movlw	1
 23058  01D18E  6EE6               	movwf	postinc1,c
 23059  01D190  ECB2  F012         	call	_set_display_info	;wreg free
 23060                           
 23061                           ;mconfig.c: 54:   if (flipper) {
 23062                           ;stkvar	_flipper @ sp[(0)+-1]
 23063  01D194  0EFF               	movlw	-1
 23064  01D196  50E3               	movf	plusw1,w,c
 23065  01D198  B4D8               	btfsc	status,2,c
 23066  01D19A  D019               	goto	l17312
 23067                           
 23068                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
 23069  01D19C  0EB6               	movlw	low STR_70
 23070  01D19E  6EE6               	movwf	postinc1,c
 23071  01D1A0  0EFF               	movlw	high STR_70
 23072  01D1A2  6EE6               	movwf	postinc1,c
 23073  01D1A4  0E71               	movlw	low STR_72
 23074  01D1A6  6EE6               	movwf	postinc1,c
 23075  01D1A8  0EFF               	movlw	high STR_72
 23076  01D1AA  6EE6               	movwf	postinc1,c
 23077  01D1AC  0E01               	movlw	1
 23078  01D1AE  6EE6               	movwf	postinc1,c
 23079  01D1B0  0E00               	movlw	0
 23080  01D1B2  6EE6               	movwf	postinc1,c
 23081  01D1B4  EC2B  F010         	call	_get_vterm_ptr	;wreg free
 23082  01D1B8  0060  F0AB  FFE6   	movff	btemp,postinc1
 23083  01D1BE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23084  01D1C4  0E06               	movlw	6
 23085  01D1C6  6EE6               	movwf	postinc1,c
 23086  01D1C8  ECF9  F0FB         	call	_sprintf	;wreg free
 23087                           
 23088                           ;mconfig.c: 56:   } else {
 23089  01D1CC  D018               	goto	l1829
 23090  01D1CE                     l17312:
 23091                           
 23092                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
 23093  01D1CE  0ECC               	movlw	low STR_71
 23094  01D1D0  6EE6               	movwf	postinc1,c
 23095  01D1D2  0EFF               	movlw	high STR_71
 23096  01D1D4  6EE6               	movwf	postinc1,c
 23097  01D1D6  0E71               	movlw	low STR_72
 23098  01D1D8  6EE6               	movwf	postinc1,c
 23099  01D1DA  0EFF               	movlw	high STR_72
 23100  01D1DC  6EE6               	movwf	postinc1,c
 23101  01D1DE  0E01               	movlw	1
 23102  01D1E0  6EE6               	movwf	postinc1,c
 23103  01D1E2  0E00               	movlw	0
 23104  01D1E4  6EE6               	movwf	postinc1,c
 23105  01D1E6  EC2B  F010         	call	_get_vterm_ptr	;wreg free
 23106  01D1EA  0060  F0AB  FFE6   	movff	btemp,postinc1
 23107  01D1F0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23108  01D1F6  0E06               	movlw	6
 23109  01D1F8  6EE6               	movwf	postinc1,c
 23110  01D1FA  ECF9  F0FB         	call	_sprintf	;wreg free
 23111  01D1FE                     l1829:
 23112                           
 23113                           ; BSR set to: 0
 23114                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
 23115  01D1FE  0102               	movlb	2	; () banked
 23116  01D200  399F               	swapf	(_V+152)& (0+255),w,b	;volatile
 23117  01D202  32E8               	rrcf	wreg,f,c
 23118  01D204  32E8               	rrcf	wreg,f,c
 23119  01D206  0B03               	andlw	3
 23120  01D208  0D2C               	mullw	44
 23121  01D20A  0E16               	movlw	22
 23122  01D20C  26F3               	addwf	243,f,c
 23123  01D20E  0E00               	movlw	0
 23124  01D210  22F4               	addwfc	244,f,c
 23125  01D212  0EB7               	movlw	low _T
 23126  01D214  6E34               	movwf	(btemp+10)^0,c
 23127  01D216  0EF8               	movlw	high _T
 23128  01D218  6E35               	movwf	(btemp+11)^0,c
 23129  01D21A  50F3               	movf	243,w,c
 23130  01D21C  2634               	addwf	(btemp+10)^0,f,c
 23131  01D21E  50F4               	movf	244,w,c
 23132  01D220  2235               	addwfc	(btemp+11)^0,f,c
 23133  01D222  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 23134  01D228  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 23135  01D22E  0EC2               	movlw	low STR_74
 23136  01D230  6EE6               	movwf	postinc1,c
 23137  01D232  0EFF               	movlw	high STR_74
 23138  01D234  6EE6               	movwf	postinc1,c
 23139  01D236  0E01               	movlw	1
 23140  01D238  6EE6               	movwf	postinc1,c
 23141  01D23A  0E01               	movlw	1
 23142  01D23C  6EE6               	movwf	postinc1,c
 23143  01D23E  EC2B  F010         	call	_get_vterm_ptr	;wreg free
 23144  01D242  0060  F0AB  FFE6   	movff	btemp,postinc1
 23145  01D248  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23146  01D24E  0E06               	movlw	6
 23147  01D250  6EE6               	movwf	postinc1,c
 23148  01D252  ECF9  F0FB         	call	_sprintf	;wreg free
 23149                           
 23150                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
 23151  01D256  0102               	movlb	2	; () banked
 23152  01D258  399F               	swapf	(_V+152)& (0+255),w,b	;volatile
 23153  01D25A  32E8               	rrcf	wreg,f,c
 23154  01D25C  32E8               	rrcf	wreg,f,c
 23155  01D25E  0B03               	andlw	3
 23156  01D260  0D2C               	mullw	44
 23157  01D262  0EB7               	movlw	low _T
 23158  01D264  6E34               	movwf	(btemp+10)^0,c
 23159  01D266  0EF8               	movlw	high _T
 23160  01D268  6E35               	movwf	(btemp+11)^0,c
 23161  01D26A  50F3               	movf	243,w,c
 23162  01D26C  2634               	addwf	(btemp+10)^0,f,c
 23163  01D26E  50F4               	movf	244,w,c
 23164  01D270  2235               	addwfc	(btemp+11)^0,f,c
 23165  01D272  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 23166  01D278  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 23167  01D27E  0EC2               	movlw	low STR_74
 23168  01D280  6EE6               	movwf	postinc1,c
 23169  01D282  0EFF               	movlw	high STR_74
 23170  01D284  6EE6               	movwf	postinc1,c
 23171  01D286  0E01               	movlw	1
 23172  01D288  6EE6               	movwf	postinc1,c
 23173  01D28A  0E02               	movlw	2
 23174  01D28C  6EE6               	movwf	postinc1,c
 23175  01D28E  EC2B  F010         	call	_get_vterm_ptr	;wreg free
 23176  01D292  0060  F0AB  FFE6   	movff	btemp,postinc1
 23177  01D298  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23178  01D29E  0E06               	movlw	6
 23179  01D2A0  6EE6               	movwf	postinc1,c
 23180  01D2A2  ECF9  F0FB         	call	_sprintf	;wreg free
 23181                           
 23182                           ; BSR set to: 0
 23183                           ;mconfig.c: 61:   V.help_id++;
 23184  01D2A6  EE20  F29F         	lfsr	2,_V+152	;volatile
 23185  01D2AA  38DF               	swapf	223,w,c
 23186  01D2AC  6E35               	movwf	(btemp+11)^0,c
 23187  01D2AE  3235               	rrcf	(btemp+11)^0,f,c
 23188  01D2B0  3035               	rrcf	(btemp+11)^0,w,c
 23189  01D2B2  0B03               	andlw	3
 23190  01D2B4  6E35               	movwf	(btemp+11)^0,c
 23191  01D2B6  2A35               	incf	(btemp+11)^0,f,c
 23192  01D2B8  3A35               	swapf	(btemp+11)^0,f,c
 23193  01D2BA  3635               	rlcf	(btemp+11)^0,f,c
 23194  01D2BC  3635               	rlcf	(btemp+11)^0,f,c
 23195  01D2BE  50DF               	movf	223,w,c
 23196  01D2C0  1835               	xorwf	(btemp+11)^0,w,c
 23197  01D2C2  0B3F               	andlw	-193
 23198  01D2C4  1835               	xorwf	(btemp+11)^0,w,c
 23199  01D2C6  6EDF               	movwf	223,c
 23200                           
 23201                           ; BSR set to: 0
 23202                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
 23203  01D2C8  0EB8               	movlw	184
 23204  01D2CA  6EE6               	movwf	postinc1,c
 23205  01D2CC  0E0B               	movlw	11
 23206  01D2CE  6EE6               	movwf	postinc1,c
 23207  01D2D0  0E09               	movlw	9
 23208  01D2D2  6EE6               	movwf	postinc1,c
 23209  01D2D4  EC22  F00E         	call	_StartTimer	;wreg free
 23210                           
 23211                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
 23212  01D2D8  0EB8               	movlw	184
 23213  01D2DA  6EE6               	movwf	postinc1,c
 23214  01D2DC  0E0B               	movlw	11
 23215  01D2DE  6EE6               	movwf	postinc1,c
 23216  01D2E0  0E07               	movlw	7
 23217  01D2E2  6EE6               	movwf	postinc1,c
 23218  01D2E4  EC22  F00E         	call	_StartTimer	;wreg free
 23219                           
 23220                           ;mconfig.c: 64:   mode_lamp_bright();
 23221  01D2E8  EC71  F013         	call	_mode_lamp_bright	;wreg free
 23222                           
 23223                           ;mconfig.c: 65:   update_lcd(1);
 23224  01D2EC  0E01               	movlw	1
 23225  01D2EE  6EE6               	movwf	postinc1,c
 23226  01D2F0  ECAB  F0F4         	call	_update_lcd	;wreg free
 23227                           
 23228                           ;mconfig.c: 67:  } else {
 23229  01D2F4  D032               	goto	l1830
 23230  01D2F6                     l17326:
 23231                           
 23232                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
 23233  01D2F6  0E09               	movlw	9
 23234  01D2F8  6EE6               	movwf	postinc1,c
 23235  01D2FA  ECAD  F010         	call	_TimerDone	;wreg free
 23236  01D2FE  502A               	movf	btemp^0,w,c
 23237  01D300  B4D8               	btfsc	status,2,c
 23238  01D302  D02B               	goto	l1830
 23239                           
 23240                           ;mconfig.c: 69:    set_vterm(0);
 23241  01D304  0E00               	movlw	0
 23242  01D306  6EE6               	movwf	postinc1,c
 23243  01D308  ECA3  F012         	call	_set_vterm	;wreg free
 23244                           
 23245                           ;mconfig.c: 70:    V.help = 0;
 23246  01D30C  0102               	movlb	2	; () banked
 23247  01D30E  959F               	bcf	(_V+152)& (0+255),2,b	;volatile
 23248                           
 23249                           ; BSR set to: 2
 23250                           ;mconfig.c: 71:    set_display_info(display_help());
 23251  01D310  ECB7  F013         	call	_display_help	;wreg free
 23252  01D314  502A               	movf	btemp^0,w,c
 23253  01D316  6EE6               	movwf	postinc1,c
 23254  01D318  ECB2  F012         	call	_set_display_info	;wreg free
 23255                           
 23256                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
 23257  01D31C  0060  FA67  FFE6   	movff	_V+146,postinc1
 23258  01D322  0060  FA6B  FFE6   	movff	_V+147,postinc1
 23259  01D328  ECDB  F012         	call	_mode_lamp_dim	;wreg free
 23260                           
 23261                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
 23262  01D32C  0E0B               	movlw	11
 23263  01D32E  6EE6               	movwf	postinc1,c
 23264  01D330  ECAD  F010         	call	_TimerDone	;wreg free
 23265  01D334  502A               	movf	btemp^0,w,c
 23266  01D336  B4D8               	btfsc	status,2,c
 23267  01D338  D010               	goto	l1830
 23268                           
 23269                           ;mconfig.c: 74:     V.flipper = !V.flipper;
 23270  01D33A  0102               	movlb	2	; () banked
 23271  01D33C  51AF               	movf	(_V+168)& (0+255),w,b	;volatile
 23272  01D33E  A4D8               	btfss	status,2,c
 23273  01D340  D002               	goto	u16940
 23274  01D342  0E01               	movlw	1
 23275  01D344  D001               	goto	u16950
 23276  01D346                     u16940:
 23277  01D346  0E00               	movlw	0
 23278  01D348                     u16950:
 23279  01D348  6FAF               	movwf	(_V+168)& (0+255),b	;volatile
 23280                           
 23281                           ; BSR set to: 2
 23282                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
 23283  01D34A  0EDC               	movlw	220
 23284  01D34C  6EE6               	movwf	postinc1,c
 23285  01D34E  0E05               	movlw	5
 23286  01D350  6EE6               	movwf	postinc1,c
 23287  01D352  0E0B               	movlw	11
 23288  01D354  6EE6               	movwf	postinc1,c
 23289  01D356  EC22  F00E         	call	_StartTimer	;wreg free
 23290  01D35A                     l1830:
 23291                           
 23292                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 23293  01D35A  52E5               	movf	postdec1,f,c
 23294  01D35C  0012               	return		;funcret
 23295  01D35E                     __end_of_check_help:
 23296                           	opt callstack 0
 23297                           
 23298 ;; *************** function _vterm_dump *****************
 23299 ;; Defined at:
 23300 ;;		line 124 in file "mconfig.c"
 23301 ;; Parameters:    Size  Location     Type
 23302 ;;		None
 23303 ;; Auto vars:     Size  Location     Type
 23304 ;;		None
 23305 ;; Return value:  Size  Location     Type
 23306 ;;                  1  [STACK] void 
 23307 ;; Registers used:
 23308 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 23309 ;; Tracked objects:
 23310 ;;		On entry : 3F/2
 23311 ;;		On exit  : 0/0
 23312 ;;		Unchanged: 0/0
 23313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23318 ;;Total ram usage:        0 bytes
 23319 ;; Hardware stack levels used:    1
 23320 ;; Hardware stack levels required when called:   26
 23321 ;; This function calls:
 23322 ;;		_WaitMs
 23323 ;;		_eaDogM_WriteStringAtPos
 23324 ;;		_get_vterm_ptr
 23325 ;;		_sprintf
 23326 ;;		_wait_lcd_done
 23327 ;; This function is called by:
 23328 ;;		_check_help
 23329 ;; This function uses a reentrant model
 23330 ;;
 23331                           
 23332                           	psect	text77
 23333  01DDB4                     __ptext77:
 23334                           	opt callstack 0
 23335  01DDB4                     _vterm_dump:
 23336                           	opt callstack 3
 23337                           
 23338                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
 23339                           
 23340                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23341                           ;incstack = 0
 23342  01DDB4  0E01               	movlw	1
 23343  01DDB6  6EE6               	movwf	postinc1,c
 23344  01DDB8  0E00               	movlw	0
 23345  01DDBA  6EE6               	movwf	postinc1,c
 23346  01DDBC  EC2B  F010         	call	_get_vterm_ptr	;wreg free
 23347  01DDC0  0060  F0AB  FFE6   	movff	btemp,postinc1
 23348  01DDC6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23349  01DDCC  0E00               	movlw	0
 23350  01DDCE  6EE6               	movwf	postinc1,c
 23351  01DDD0  0E00               	movlw	0
 23352  01DDD2  6EE6               	movwf	postinc1,c
 23353  01DDD4  EC2B  F010         	call	_get_vterm_ptr	;wreg free
 23354  01DDD8  0060  F0AB  FFE6   	movff	btemp,postinc1
 23355  01DDDE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23356  01DDE4  0EA7               	movlw	low STR_76
 23357  01DDE6  6EE6               	movwf	postinc1,c
 23358  01DDE8  0EFF               	movlw	high STR_76
 23359  01DDEA  6EE6               	movwf	postinc1,c
 23360  01DDEC  0E08               	movlw	low (_V+1)
 23361  01DDEE  6EE6               	movwf	postinc1,c
 23362  01DDF0  0E02               	movlw	high (_V+1)
 23363  01DDF2  6EE6               	movwf	postinc1,c
 23364  01DDF4  0E08               	movlw	8
 23365  01DDF6  6EE6               	movwf	postinc1,c
 23366  01DDF8  ECF9  F0FB         	call	_sprintf	;wreg free
 23367                           
 23368                           ; BSR set to: 0
 23369                           ;mconfig.c: 127:  wait_lcd_done();
 23370  01DDFC  EC6A  F013         	call	_wait_lcd_done	;wreg free
 23371                           
 23372                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(0, 0, V.buf);
 23373  01DE00  0E08               	movlw	low (_V+1)
 23374  01DE02  6EE6               	movwf	postinc1,c
 23375  01DE04  0E02               	movlw	high (_V+1)
 23376  01DE06  6EE6               	movwf	postinc1,c
 23377  01DE08  0E00               	movlw	0
 23378  01DE0A  6EE6               	movwf	postinc1,c
 23379  01DE0C  0E00               	movlw	0
 23380  01DE0E  6EE6               	movwf	postinc1,c
 23381  01DE10  ECDA  F005         	call	_eaDogM_WriteStringAtPos	;wreg free
 23382                           
 23383                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
 23384  01DE14  0E01               	movlw	1
 23385  01DE16  6EE6               	movwf	postinc1,c
 23386  01DE18  0E01               	movlw	1
 23387  01DE1A  6EE6               	movwf	postinc1,c
 23388  01DE1C  EC2B  F010         	call	_get_vterm_ptr	;wreg free
 23389  01DE20  0060  F0AB  FFE6   	movff	btemp,postinc1
 23390  01DE26  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23391  01DE2C  0E00               	movlw	0
 23392  01DE2E  6EE6               	movwf	postinc1,c
 23393  01DE30  0E01               	movlw	1
 23394  01DE32  6EE6               	movwf	postinc1,c
 23395  01DE34  EC2B  F010         	call	_get_vterm_ptr	;wreg free
 23396  01DE38  0060  F0AB  FFE6   	movff	btemp,postinc1
 23397  01DE3E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23398  01DE44  0EA7               	movlw	low STR_76
 23399  01DE46  6EE6               	movwf	postinc1,c
 23400  01DE48  0EFF               	movlw	high STR_76
 23401  01DE4A  6EE6               	movwf	postinc1,c
 23402  01DE4C  0E08               	movlw	low (_V+1)
 23403  01DE4E  6EE6               	movwf	postinc1,c
 23404  01DE50  0E02               	movlw	high (_V+1)
 23405  01DE52  6EE6               	movwf	postinc1,c
 23406  01DE54  0E08               	movlw	8
 23407  01DE56  6EE6               	movwf	postinc1,c
 23408  01DE58  ECF9  F0FB         	call	_sprintf	;wreg free
 23409                           
 23410                           ; BSR set to: 0
 23411                           ;mconfig.c: 130:  wait_lcd_done();
 23412  01DE5C  EC6A  F013         	call	_wait_lcd_done	;wreg free
 23413                           
 23414                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(1, 0, V.buf);
 23415  01DE60  0E08               	movlw	low (_V+1)
 23416  01DE62  6EE6               	movwf	postinc1,c
 23417  01DE64  0E02               	movlw	high (_V+1)
 23418  01DE66  6EE6               	movwf	postinc1,c
 23419  01DE68  0E00               	movlw	0
 23420  01DE6A  6EE6               	movwf	postinc1,c
 23421  01DE6C  0E01               	movlw	1
 23422  01DE6E  6EE6               	movwf	postinc1,c
 23423  01DE70  ECDA  F005         	call	_eaDogM_WriteStringAtPos	;wreg free
 23424                           
 23425                           ;mconfig.c: 132:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
 23426  01DE74  0E01               	movlw	1
 23427  01DE76  6EE6               	movwf	postinc1,c
 23428  01DE78  0E02               	movlw	2
 23429  01DE7A  6EE6               	movwf	postinc1,c
 23430  01DE7C  EC2B  F010         	call	_get_vterm_ptr	;wreg free
 23431  01DE80  0060  F0AB  FFE6   	movff	btemp,postinc1
 23432  01DE86  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23433  01DE8C  0E00               	movlw	0
 23434  01DE8E  6EE6               	movwf	postinc1,c
 23435  01DE90  0E02               	movlw	2
 23436  01DE92  6EE6               	movwf	postinc1,c
 23437  01DE94  EC2B  F010         	call	_get_vterm_ptr	;wreg free
 23438  01DE98  0060  F0AB  FFE6   	movff	btemp,postinc1
 23439  01DE9E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23440  01DEA4  0EA7               	movlw	low STR_76
 23441  01DEA6  6EE6               	movwf	postinc1,c
 23442  01DEA8  0EFF               	movlw	high STR_76
 23443  01DEAA  6EE6               	movwf	postinc1,c
 23444  01DEAC  0E08               	movlw	low (_V+1)
 23445  01DEAE  6EE6               	movwf	postinc1,c
 23446  01DEB0  0E02               	movlw	high (_V+1)
 23447  01DEB2  6EE6               	movwf	postinc1,c
 23448  01DEB4  0E08               	movlw	8
 23449  01DEB6  6EE6               	movwf	postinc1,c
 23450  01DEB8  ECF9  F0FB         	call	_sprintf	;wreg free
 23451                           
 23452                           ; BSR set to: 0
 23453                           ;mconfig.c: 133:  wait_lcd_done();
 23454  01DEBC  EC6A  F013         	call	_wait_lcd_done	;wreg free
 23455                           
 23456                           ;mconfig.c: 134:  eaDogM_WriteStringAtPos(2, 0, V.buf);
 23457  01DEC0  0E08               	movlw	low (_V+1)
 23458  01DEC2  6EE6               	movwf	postinc1,c
 23459  01DEC4  0E02               	movlw	high (_V+1)
 23460  01DEC6  6EE6               	movwf	postinc1,c
 23461  01DEC8  0E00               	movlw	0
 23462  01DECA  6EE6               	movwf	postinc1,c
 23463  01DECC  0E02               	movlw	2
 23464  01DECE  6EE6               	movwf	postinc1,c
 23465  01DED0  ECDA  F005         	call	_eaDogM_WriteStringAtPos	;wreg free
 23466                           
 23467                           ;mconfig.c: 135:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(3, 0), get_vterm_ptr(3,
      +                           1));
 23468  01DED4  0E01               	movlw	1
 23469  01DED6  6EE6               	movwf	postinc1,c
 23470  01DED8  0E03               	movlw	3
 23471  01DEDA  6EE6               	movwf	postinc1,c
 23472  01DEDC  EC2B  F010         	call	_get_vterm_ptr	;wreg free
 23473  01DEE0  0060  F0AB  FFE6   	movff	btemp,postinc1
 23474  01DEE6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23475  01DEEC  0E00               	movlw	0
 23476  01DEEE  6EE6               	movwf	postinc1,c
 23477  01DEF0  0E03               	movlw	3
 23478  01DEF2  6EE6               	movwf	postinc1,c
 23479  01DEF4  EC2B  F010         	call	_get_vterm_ptr	;wreg free
 23480  01DEF8  0060  F0AB  FFE6   	movff	btemp,postinc1
 23481  01DEFE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23482  01DF04  0EA7               	movlw	low STR_76
 23483  01DF06  6EE6               	movwf	postinc1,c
 23484  01DF08  0EFF               	movlw	high STR_76
 23485  01DF0A  6EE6               	movwf	postinc1,c
 23486  01DF0C  0E08               	movlw	low (_V+1)
 23487  01DF0E  6EE6               	movwf	postinc1,c
 23488  01DF10  0E02               	movlw	high (_V+1)
 23489  01DF12  6EE6               	movwf	postinc1,c
 23490  01DF14  0E08               	movlw	8
 23491  01DF16  6EE6               	movwf	postinc1,c
 23492  01DF18  ECF9  F0FB         	call	_sprintf	;wreg free
 23493                           
 23494                           ; BSR set to: 0
 23495                           ;mconfig.c: 136:  wait_lcd_done();
 23496  01DF1C  EC6A  F013         	call	_wait_lcd_done	;wreg free
 23497                           
 23498                           ;mconfig.c: 137:  eaDogM_WriteStringAtPos(3, 0, V.buf);
 23499  01DF20  0E08               	movlw	low (_V+1)
 23500  01DF22  6EE6               	movwf	postinc1,c
 23501  01DF24  0E02               	movlw	high (_V+1)
 23502  01DF26  6EE6               	movwf	postinc1,c
 23503  01DF28  0E00               	movlw	0
 23504  01DF2A  6EE6               	movwf	postinc1,c
 23505  01DF2C  0E03               	movlw	3
 23506  01DF2E  6EE6               	movwf	postinc1,c
 23507  01DF30  ECDA  F005         	call	_eaDogM_WriteStringAtPos	;wreg free
 23508                           
 23509                           ; BSR set to: 59
 23510                           ;mconfig.c: 138:  WaitMs(3000);
 23511  01DF34  0EB8               	movlw	184
 23512  01DF36  6EE6               	movwf	postinc1,c
 23513  01DF38  0E0B               	movlw	11
 23514  01DF3A  6EE6               	movwf	postinc1,c
 23515  01DF3C  EC2F  F00F         	call	_WaitMs	;wreg free
 23516                           
 23517                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 23518  01DF40  0012               	return		;funcret
 23519  01DF42                     __end_of_vterm_dump:
 23520                           	opt callstack 0
 23521                           
 23522 ;; *************** function _sprintf *****************
 23523 ;; Defined at:
 23524 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 23525 ;; Parameters:    Size  Location     Type
 23526 ;;  s               2  [STACK] PTR unsigned char 
 23527 ;;		 -> D.lcd(640), D(642), port_data(512), V(181), 
 23528 ;;  fmt             2  [STACK] PTR const unsigned char 
 23529 ;;		 -> STR_90(127), STR_88(3), STR_87(3), STR_86(21), 
 23530 ;;		 -> STR_85(21), STR_84(21), STR_83(21), STR_82(21), 
 23531 ;;		 -> STR_81(21), STR_80(26), STR_79(15), STR_78(15), 
 23532 ;;		 -> STR_77(15), STR_76(15), STR_75(10), STR_74(10), 
 23533 ;;		 -> STR_73(19), STR_72(19), STR_68(14), STR_67(28), 
 23534 ;;		 -> STR_66(28), STR_65(28), STR_64(22), STR_63(22), 
 23535 ;;		 -> STR_62(22), STR_61(22), STR_60(22), STR_59(22), 
 23536 ;;		 -> STR_58(22), STR_57(22), STR_56(22), STR_55(21), 
 23537 ;;		 -> STR_54(22), STR_53(22), STR_52(22), STR_51(22), 
 23538 ;;		 -> STR_50(22), STR_49(22), STR_48(24), STR_47(24), 
 23539 ;;		 -> STR_46(24), STR_45(30), STR_44(24), STR_43(24), 
 23540 ;;		 -> STR_42(23), STR_41(23), STR_40(23), STR_39(23), 
 23541 ;;		 -> STR_38(23), STR_37(23), STR_36(23), STR_35(23), 
 23542 ;;		 -> STR_34(23), STR_33(23), STR_32(23), STR_31(23), 
 23543 ;;		 -> STR_30(18), STR_29(17), STR_28(17), STR_27(22), 
 23544 ;;		 -> STR_26(22), STR_25(22), STR_24(14), STR_23(27), 
 23545 ;;		 -> STR_22(27), STR_21(23), STR_20(22), STR_19(22), 
 23546 ;;		 -> STR_18(22), STR_17(22), STR_16(23), STR_15(23), 
 23547 ;;		 -> STR_14(23), STR_13(26), STR_12(22), STR_11(21), 
 23548 ;;		 -> STR_10(21), STR_9(21), STR_8(21), STR_7(21), 
 23549 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 23550 ;;		 -> STR_1(21), 
 23551 ;; Auto vars:     Size  Location     Type
 23552 ;;  f               6  [STACK] struct _IO_FILE
 23553 ;;  ap              2  [STACK] PTR void [1]
 23554 ;;		 -> ?_printf(2), ?_sprintf(2), 
 23555 ;;  ret             2    0        int 
 23556 ;; Return value:  Size  Location     Type
 23557 ;;                  2  [STACK] int 
 23558 ;; Registers used:
 23559 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 23560 ;; Tracked objects:
 23561 ;;		On entry : 0/2
 23562 ;;		On exit  : 3F/0
 23563 ;;		Unchanged: 0/0
 23564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23569 ;;Total ram usage:        0 bytes
 23570 ;; Hardware stack levels used:    1
 23571 ;; Hardware stack levels required when called:   23
 23572 ;; This function calls:
 23573 ;;		_vfprintf
 23574 ;; This function is called by:
 23575 ;;		_main
 23576 ;;		_current_sensor_cal
 23577 ;;		_display_history
 23578 ;;		_check_help
 23579 ;;		_vterm_dump
 23580 ;;		_calc_bsoc
 23581 ;; This function uses a reentrant model
 23582 ;;
 23583                           
 23584                           	psect	text78
 23585  01F7F2                     __ptext78:
 23586                           	opt callstack 0
 23587  01F7F2                     _sprintf:
 23588                           	opt callstack 0
 23589                           
 23590                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 23591  01F7F2  0E08               	movlw	8
 23592  01F7F4  26E1               	addwf	fsr1l,f,c
 23593  01F7F6  0E00               	movlw	0
 23594  01F7F8  22E2               	addwfc	fsr1h,f,c
 23595                           
 23596                           ;incstack = 0
 23597 ;; hardware stack exceeded
 23598  01F7FA  0EFE               	movlw	254
 23599  01F7FC  6E34               	movwf	(btemp+10)^0,c
 23600  01F7FE  0EFF               	movlw	255
 23601  01F800  6E35               	movwf	(btemp+11)^0,c
 23602                           
 23603                           ;stkvar	?_sprintf @ sp[(-8)+-3]
 23604  01F802  0EF5               	movlw	245
 23605  01F804  24E1               	addwf	fsr1l,w,c
 23606  01F806  6E32               	movwf	(btemp+8)^0,c
 23607  01F808  0EFF               	movlw	255
 23608  01F80A  20E2               	addwfc	fsr1h,w,c
 23609  01F80C  6E33               	movwf	(btemp+9)^0,c
 23610  01F80E  5034               	movf	(btemp+10)^0,w,c
 23611  01F810  2632               	addwf	(btemp+8)^0,f,c
 23612  01F812  5035               	movf	(btemp+11)^0,w,c
 23613  01F814  2233               	addwfc	(btemp+9)^0,f,c
 23614                           
 23615                           ;stkvar	_ap @ sp[(-8)+6]
 23616  01F816  0EFF               	movlw	-1
 23617  01F818  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 23618  01F81E  0EFE               	movlw	-2
 23619  01F820  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 23620                           
 23621                           ;stkvar	_s @ sp[(-8)+-3]
 23622  01F826  0EF5               	movlw	-11
 23623  01F828  006F FF8C  F034    	movff	plusw1,btemp+10
 23624  01F82E  0EF6               	movlw	-10
 23625  01F830  006F FF8C  F035    	movff	plusw1,btemp+11
 23626                           
 23627                           ;stkvar	_f @ sp[(-8)+0]
 23628  01F836  0EF9               	movlw	-7
 23629  01F838  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 23630  01F83E  0EF8               	movlw	-8
 23631  01F840  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 23632                           
 23633                           ;stkvar	_f @ sp[(-8)+0]
 23634  01F846  0EFA               	movlw	250
 23635  01F848  24E1               	addwf	fsr1l,w,c
 23636  01F84A  6ED9               	movwf	fsr2l,c
 23637  01F84C  0EFF               	movlw	255
 23638  01F84E  20E2               	addwfc	fsr1h,w,c
 23639  01F850  6EDA               	movwf	fsr2h,c
 23640  01F852  0E00               	movlw	0
 23641  01F854  6EDE               	movwf	postinc2,c
 23642  01F856  0E00               	movlw	0
 23643  01F858  6EDD               	movwf	postdec2,c
 23644                           
 23645                           ;stkvar	_f @ sp[(-8)+0]
 23646  01F85A  0EFC               	movlw	252
 23647  01F85C  24E1               	addwf	fsr1l,w,c
 23648  01F85E  6ED9               	movwf	fsr2l,c
 23649  01F860  0EFF               	movlw	255
 23650  01F862  20E2               	addwfc	fsr1h,w,c
 23651  01F864  6EDA               	movwf	fsr2h,c
 23652  01F866  0E00               	movlw	0
 23653  01F868  6EDE               	movwf	postinc2,c
 23654  01F86A  0E00               	movlw	0
 23655  01F86C  6EDD               	movwf	postdec2,c
 23656                           
 23657                           ;stkvar	_ap @ sp[(-8)+6]
 23658  01F86E  0EFE               	movlw	254
 23659  01F870  24E1               	addwf	fsr1l,w,c
 23660  01F872  6E2A               	movwf	btemp^0,c
 23661  01F874  0EFF               	movlw	255
 23662  01F876  20E2               	addwfc	fsr1h,w,c
 23663  01F878  6E2B               	movwf	(btemp+1)^0,c
 23664  01F87A  0060  F0AB  FFE6   	movff	btemp,postinc1
 23665  01F880  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23666                           
 23667                           ;stkvar	_fmt @ sp[(-10)+-5]
 23668  01F886  0EF1               	movlw	-15
 23669  01F888  006F FF8F FFE6     	movff	plusw1,postinc1
 23670  01F88E  006F FF8F FFE6     	movff	plusw1,postinc1
 23671                           
 23672                           ;stkvar	_f @ sp[(-12)+0]
 23673  01F894  0EF4               	movlw	244
 23674  01F896  24E1               	addwf	fsr1l,w,c
 23675  01F898  6E2A               	movwf	btemp^0,c
 23676  01F89A  0EFF               	movlw	255
 23677  01F89C  20E2               	addwfc	fsr1h,w,c
 23678  01F89E  6E2B               	movwf	(btemp+1)^0,c
 23679  01F8A0  0060  F0AB  FFE6   	movff	btemp,postinc1
 23680  01F8A6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23681  01F8AC  EC57  F003         	call	_vfprintf	;wreg free
 23682                           
 23683                           ; BSR set to: 0
 23684                           ;stkvar	_f @ sp[(-8)+0]
 23685  01F8B0  0EFA               	movlw	250
 23686  01F8B2  24E1               	addwf	fsr1l,w,c
 23687  01F8B4  6ED9               	movwf	fsr2l,c
 23688  01F8B6  0EFF               	movlw	255
 23689  01F8B8  20E2               	addwfc	fsr1h,w,c
 23690  01F8BA  6EDA               	movwf	fsr2h,c
 23691  01F8BC  006F FF78  F034    	movff	postinc2,btemp+10
 23692  01F8C2  006F FF74  F035    	movff	postdec2,btemp+11
 23693                           
 23694                           ;stkvar	_s @ sp[(-8)+-3]
 23695  01F8C8  0EF5               	movlw	-11
 23696  01F8CA  006F FF8C  F032    	movff	plusw1,btemp+8
 23697  01F8D0  0EF6               	movlw	-10
 23698  01F8D2  006F FF8C  F033    	movff	plusw1,btemp+9
 23699  01F8D8  5034               	movf	(btemp+10)^0,w,c
 23700  01F8DA  2432               	addwf	(btemp+8)^0,w,c
 23701  01F8DC  6ED9               	movwf	fsr2l,c
 23702  01F8DE  5035               	movf	(btemp+11)^0,w,c
 23703  01F8E0  2033               	addwfc	(btemp+9)^0,w,c
 23704  01F8E2  6EDA               	movwf	fsr2h,c
 23705  01F8E4  0E00               	movlw	0
 23706  01F8E6  6EDF               	movwf	indf2,c
 23707                           
 23708                           ; BSR set to: 0
 23709                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, args
      +                          ize = 4, vargsize = 0
 23710  01F8E8  0EF8               	movlw	248
 23711  01F8EA  26E1               	addwf	fsr1l,f,c
 23712  01F8EC  0EFF               	movlw	255
 23713  01F8EE  22E2               	addwfc	fsr1h,f,c
 23714  01F8F0  52E5               	movf	postdec1,f,c
 23715  01F8F2  50E7               	movf	indf1,w,c
 23716  01F8F4  5EE1               	subwf	fsr1l,f,c
 23717  01F8F6  0E00               	movlw	0
 23718  01F8F8  5AE2               	subwfb	fsr1h,f,c
 23719  01F8FA  0012               	return		;funcret
 23720  01F8FC                     __end_of_sprintf:
 23721                           	opt callstack 0
 23722                           
 23723 ;; *************** function _get_vterm_ptr *****************
 23724 ;; Defined at:
 23725 ;;		line 119 in file "mconfig.c"
 23726 ;; Parameters:    Size  Location     Type
 23727 ;;  line            1  [STACK] const unsigned char 
 23728 ;;  vterm           1  [STACK] const unsigned char 
 23729 ;; Auto vars:     Size  Location     Type
 23730 ;;		None
 23731 ;; Return value:  Size  Location     Type
 23732 ;;                  2  [STACK] PTR unsigned char 
 23733 ;; Registers used:
 23734 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
 23735 ;; Tracked objects:
 23736 ;;		On entry : 0/2
 23737 ;;		On exit  : 0/0
 23738 ;;		Unchanged: 0/0
 23739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23744 ;;Total ram usage:        0 bytes
 23745 ;; Hardware stack levels used:    1
 23746 ;; Hardware stack levels required when called:   15
 23747 ;; This function calls:
 23748 ;;		Nothing
 23749 ;; This function is called by:
 23750 ;;		_main
 23751 ;;		_current_sensor_cal
 23752 ;;		_display_history
 23753 ;;		_check_help
 23754 ;;		_vterm_dump
 23755 ;; This function uses a reentrant model
 23756 ;;
 23757                           
 23758                           	psect	text79
 23759  002056                     __ptext79:
 23760                           	opt callstack 0
 23761  002056                     _get_vterm_ptr:
 23762                           	opt callstack 15
 23763                           
 23764                           ;mconfig.c: 119: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 120: {;mconfig.c: 121:  return D.lcd[vterm & 0x03][line & 0x03];
 23765                           ;stkvar	_vterm @ sp[(0)+-2]
 23766                           
 23767                           ; BSR set to: 0
 23768                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23769                           ;incstack = 0
 23770  002056  0EFE               	movlw	-2
 23771  002058  50E3               	movf	plusw1,w,c
 23772  00205A  0B03               	andlw	3
 23773  00205C  0DA0               	mullw	160
 23774  00205E  0E3F               	movlw	low _D
 23775  002060  6E2A               	movwf	btemp^0,c
 23776  002062  0E0A               	movlw	high _D
 23777  002064  6E2B               	movwf	(btemp+1)^0,c
 23778  002066  50F3               	movf	243,w,c
 23779  002068  262A               	addwf	btemp^0,f,c
 23780  00206A  50F4               	movf	244,w,c
 23781  00206C  222B               	addwfc	(btemp+1)^0,f,c
 23782                           
 23783                           ;stkvar	_line @ sp[(0)+-1]
 23784  00206E  0EFF               	movlw	-1
 23785  002070  50E3               	movf	plusw1,w,c
 23786  002072  0B03               	andlw	3
 23787  002074  0D28               	mullw	40
 23788  002076  50F3               	movf	243,w,c
 23789  002078  262A               	addwf	btemp^0,f,c
 23790  00207A  50F4               	movf	244,w,c
 23791  00207C  222B               	addwfc	(btemp+1)^0,f,c
 23792                           
 23793                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 23794  00207E  52E5               	movf	postdec1,f,c
 23795  002080  52E5               	movf	postdec1,f,c
 23796  002082  0012               	return		;funcret
 23797  002084                     __end_of_get_vterm_ptr:
 23798                           	opt callstack 0
 23799                           
 23800 ;; *************** function _WaitMs *****************
 23801 ;; Defined at:
 23802 ;;		line 32 in file "timers.c"
 23803 ;; Parameters:    Size  Location     Type
 23804 ;;  numMilliseco    2  [STACK] const unsigned short 
 23805 ;; Auto vars:     Size  Location     Type
 23806 ;;		None
 23807 ;; Return value:  Size  Location     Type
 23808 ;;                  1  [STACK] void 
 23809 ;; Registers used:
 23810 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23811 ;; Tracked objects:
 23812 ;;		On entry : 0/2
 23813 ;;		On exit  : 0/0
 23814 ;;		Unchanged: 0/0
 23815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23820 ;;Total ram usage:        0 bytes
 23821 ;; Hardware stack levels used:    1
 23822 ;; Hardware stack levels required when called:   16
 23823 ;; This function calls:
 23824 ;;		_StartTimer
 23825 ;;		_TimerDone
 23826 ;; This function is called by:
 23827 ;;		_main
 23828 ;;		_current_sensor_cal
 23829 ;;		_display_history
 23830 ;;		_vterm_dump
 23831 ;; This function uses a reentrant model
 23832 ;;
 23833                           
 23834                           	psect	text80
 23835  001E5E                     __ptext80:
 23836                           	opt callstack 0
 23837  001E5E                     _WaitMs:
 23838                           	opt callstack 13
 23839                           
 23840                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 23841                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
 23842                           
 23843                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23844                           ;incstack = 0
 23845  001E5E  0EFE               	movlw	-2
 23846  001E60  006F FF8F FFE6     	movff	plusw1,postinc1
 23847  001E66  006F FF8F FFE6     	movff	plusw1,postinc1
 23848  001E6C  0E00               	movlw	0
 23849  001E6E  6EE6               	movwf	postinc1,c
 23850  001E70  EC22  F00E         	call	_StartTimer	;wreg free
 23851                           
 23852                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 23853  001E74  D005               	goto	l12774
 23854  001E76                     l1761:
 23855                           
 23856                           ;timers.c: 36:   __nop();
 23857  001E76  F000               	nop	
 23858                           
 23859                           ;timers.c: 37:   __nop();
 23860  001E78  F000               	nop	
 23861                           
 23862                           ;timers.c: 38:   __nop();
 23863  001E7A  F000               	nop	
 23864                           
 23865                           ;timers.c: 39:   __nop();
 23866  001E7C  F000               	nop	
 23867  001E7E  0004               	clrwdt		;# 
 23868  001E80                     l12774:
 23869                           
 23870                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 23871  001E80  0E00               	movlw	0
 23872  001E82  6EE6               	movwf	postinc1,c
 23873  001E84  ECAD  F010         	call	_TimerDone	;wreg free
 23874  001E88  502A               	movf	btemp^0,w,c
 23875  001E8A  B4D8               	btfsc	status,2,c
 23876  001E8C  D7F4               	goto	l1761
 23877                           
 23878                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 23879  001E8E  52E5               	movf	postdec1,f,c
 23880  001E90  52E5               	movf	postdec1,f,c
 23881  001E92  0012               	return		;funcret
 23882  001E94                     __end_of_WaitMs:
 23883                           	opt callstack 0
 23884                           
 23885 ;; *************** function _update_lcd *****************
 23886 ;; Defined at:
 23887 ;;		line 85 in file "mconfig.c"
 23888 ;; Parameters:    Size  Location     Type
 23889 ;;  vterm           1  [STACK] unsigned char 
 23890 ;; Auto vars:     Size  Location     Type
 23891 ;;		None
 23892 ;; Return value:  Size  Location     Type
 23893 ;;                  1  [STACK] unsigned char 
 23894 ;; Registers used:
 23895 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 23896 ;; Tracked objects:
 23897 ;;		On entry : 0/0
 23898 ;;		On exit  : 0/0
 23899 ;;		Unchanged: 0/0
 23900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23905 ;;Total ram usage:        0 bytes
 23906 ;; Hardware stack levels used:    1
 23907 ;; Hardware stack levels required when called:   26
 23908 ;; This function calls:
 23909 ;;		_eaDogM_WriteStringAtPos
 23910 ;;		_wait_lcd_done
 23911 ;; This function is called by:
 23912 ;;		_main
 23913 ;;		_current_sensor_cal
 23914 ;;		_display_history
 23915 ;;		_check_help
 23916 ;; This function uses a reentrant model
 23917 ;;
 23918                           
 23919                           	psect	text81
 23920  01E956                     __ptext81:
 23921                           	opt callstack 0
 23922  01E956                     _update_lcd:
 23923                           	opt callstack 4
 23924                           
 23925                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
 23926                           ;stkvar	_vterm @ sp[(0)+-1]
 23927                           
 23928                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23929                           ;incstack = 0
 23930  01E956  0EFF               	movlw	-1
 23931  01E958  006F FF8C  F02A    	movff	plusw1,btemp
 23932  01E95E  0E03               	movlw	3
 23933  01E960  162A               	andwf	btemp^0,f,c
 23934  01E962  0EFF               	movlw	-1
 23935  01E964  0060  F0AB  FFE3   	movff	btemp,plusw1
 23936                           
 23937                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
 23938  01E96A  EE23  F0BF         	lfsr	2,_D+640
 23939  01E96E  A0DF               	btfss	indf2,0,c
 23940  01E970  D004               	goto	l16856
 23941                           
 23942                           ;stkvar	_vterm @ sp[(0)+-1]
 23943  01E972  0EFF               	movlw	-1
 23944  01E974  50E3               	movf	plusw1,w,c
 23945  01E976  B4D8               	btfsc	status,2,c
 23946  01E978  D09C               	goto	l1837
 23947  01E97A                     l16856:
 23948                           
 23949                           ;mconfig.c: 92:  D.lcd[vterm][0][20] = 0;
 23950                           ;stkvar	_vterm @ sp[(0)+-1]
 23951  01E97A  0EFF               	movlw	-1
 23952  01E97C  50E3               	movf	plusw1,w,c
 23953  01E97E  0DA0               	mullw	160
 23954  01E980  0E53               	movlw	low (_D+20)
 23955  01E982  24F3               	addwf	243,w,c
 23956  01E984  6ED9               	movwf	fsr2l,c
 23957  01E986  0E0A               	movlw	high (_D+20)
 23958  01E988  20F4               	addwfc	prodh,w,c
 23959  01E98A  6EDA               	movwf	fsr2h,c
 23960  01E98C  0E00               	movlw	0
 23961  01E98E  6EDF               	movwf	indf2,c
 23962                           
 23963                           ;mconfig.c: 93:  D.lcd[vterm][1][20] = 0;
 23964                           ;stkvar	_vterm @ sp[(0)+-1]
 23965  01E990  0EFF               	movlw	-1
 23966  01E992  50E3               	movf	plusw1,w,c
 23967  01E994  0DA0               	mullw	160
 23968  01E996  0E7B               	movlw	low (_D+60)
 23969  01E998  24F3               	addwf	243,w,c
 23970  01E99A  6ED9               	movwf	fsr2l,c
 23971  01E99C  0E0A               	movlw	high (_D+60)
 23972  01E99E  20F4               	addwfc	prodh,w,c
 23973  01E9A0  6EDA               	movwf	fsr2h,c
 23974  01E9A2  0E00               	movlw	0
 23975  01E9A4  6EDF               	movwf	indf2,c
 23976                           
 23977                           ;mconfig.c: 94:  D.lcd[vterm][2][20] = 0;
 23978                           ;stkvar	_vterm @ sp[(0)+-1]
 23979  01E9A6  0EFF               	movlw	-1
 23980  01E9A8  50E3               	movf	plusw1,w,c
 23981  01E9AA  0DA0               	mullw	160
 23982  01E9AC  0EA3               	movlw	low (_D+100)
 23983  01E9AE  24F3               	addwf	243,w,c
 23984  01E9B0  6ED9               	movwf	fsr2l,c
 23985  01E9B2  0E0A               	movlw	high (_D+100)
 23986  01E9B4  20F4               	addwfc	prodh,w,c
 23987  01E9B6  6EDA               	movwf	fsr2h,c
 23988  01E9B8  0E00               	movlw	0
 23989  01E9BA  6EDF               	movwf	indf2,c
 23990                           
 23991                           ;mconfig.c: 95:  D.lcd[vterm][3][20] = 0;
 23992                           ;stkvar	_vterm @ sp[(0)+-1]
 23993  01E9BC  0EFF               	movlw	-1
 23994  01E9BE  50E3               	movf	plusw1,w,c
 23995  01E9C0  0DA0               	mullw	160
 23996  01E9C2  0ECB               	movlw	low (_D+140)
 23997  01E9C4  24F3               	addwf	243,w,c
 23998  01E9C6  6ED9               	movwf	fsr2l,c
 23999  01E9C8  0E0A               	movlw	high (_D+140)
 24000  01E9CA  20F4               	addwfc	prodh,w,c
 24001  01E9CC  6EDA               	movwf	fsr2h,c
 24002  01E9CE  0E00               	movlw	0
 24003  01E9D0  6EDF               	movwf	indf2,c
 24004                           
 24005                           ;mconfig.c: 96:  wait_lcd_done();
 24006  01E9D2  EC6A  F013         	call	_wait_lcd_done	;wreg free
 24007                           
 24008                           ; BSR set to: 61
 24009                           ;mconfig.c: 97:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 24010                           ;stkvar	_vterm @ sp[(0)+-1]
 24011  01E9D6  0EFF               	movlw	-1
 24012  01E9D8  50E3               	movf	plusw1,w,c
 24013  01E9DA  0DA0               	mullw	160
 24014  01E9DC  0E3F               	movlw	low _D
 24015  01E9DE  6E34               	movwf	(btemp+10)^0,c
 24016  01E9E0  0E0A               	movlw	high _D
 24017  01E9E2  6E35               	movwf	(btemp+11)^0,c
 24018  01E9E4  50F3               	movf	243,w,c
 24019  01E9E6  2634               	addwf	(btemp+10)^0,f,c
 24020  01E9E8  50F4               	movf	244,w,c
 24021  01E9EA  2235               	addwfc	(btemp+11)^0,f,c
 24022  01E9EC  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 24023  01E9F2  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 24024  01E9F8  0E00               	movlw	0
 24025  01E9FA  6EE6               	movwf	postinc1,c
 24026  01E9FC  0E00               	movlw	0
 24027  01E9FE  6EE6               	movwf	postinc1,c
 24028  01EA00  ECDA  F005         	call	_eaDogM_WriteStringAtPos	;wreg free
 24029                           
 24030                           ; BSR set to: 59
 24031                           ;mconfig.c: 98:  wait_lcd_done();
 24032  01EA04  EC6A  F013         	call	_wait_lcd_done	;wreg free
 24033                           
 24034                           ; BSR set to: 61
 24035                           ;mconfig.c: 99:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 24036                           ;stkvar	_vterm @ sp[(0)+-1]
 24037  01EA08  0EFF               	movlw	-1
 24038  01EA0A  50E3               	movf	plusw1,w,c
 24039  01EA0C  0DA0               	mullw	160
 24040  01EA0E  0E3F               	movlw	low _D
 24041  01EA10  6E34               	movwf	(btemp+10)^0,c
 24042  01EA12  0E0A               	movlw	high _D
 24043  01EA14  6E35               	movwf	(btemp+11)^0,c
 24044  01EA16  0E28               	movlw	40
 24045  01EA18  2634               	addwf	(btemp+10)^0,f,c
 24046  01EA1A  0E00               	movlw	0
 24047  01EA1C  2235               	addwfc	(btemp+11)^0,f,c
 24048  01EA1E  50F3               	movf	243,w,c
 24049  01EA20  2634               	addwf	(btemp+10)^0,f,c
 24050  01EA22  50F4               	movf	244,w,c
 24051  01EA24  2235               	addwfc	(btemp+11)^0,f,c
 24052  01EA26  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 24053  01EA2C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 24054  01EA32  0E00               	movlw	0
 24055  01EA34  6EE6               	movwf	postinc1,c
 24056  01EA36  0E01               	movlw	1
 24057  01EA38  6EE6               	movwf	postinc1,c
 24058  01EA3A  ECDA  F005         	call	_eaDogM_WriteStringAtPos	;wreg free
 24059                           
 24060                           ; BSR set to: 59
 24061                           ;mconfig.c: 100:  wait_lcd_done();
 24062  01EA3E  EC6A  F013         	call	_wait_lcd_done	;wreg free
 24063                           
 24064                           ; BSR set to: 61
 24065                           ;mconfig.c: 101:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 24066                           ;stkvar	_vterm @ sp[(0)+-1]
 24067  01EA42  0EFF               	movlw	-1
 24068  01EA44  50E3               	movf	plusw1,w,c
 24069  01EA46  0DA0               	mullw	160
 24070  01EA48  0E3F               	movlw	low _D
 24071  01EA4A  6E34               	movwf	(btemp+10)^0,c
 24072  01EA4C  0E0A               	movlw	high _D
 24073  01EA4E  6E35               	movwf	(btemp+11)^0,c
 24074  01EA50  0E50               	movlw	80
 24075  01EA52  2634               	addwf	(btemp+10)^0,f,c
 24076  01EA54  0E00               	movlw	0
 24077  01EA56  2235               	addwfc	(btemp+11)^0,f,c
 24078  01EA58  50F3               	movf	243,w,c
 24079  01EA5A  2634               	addwf	(btemp+10)^0,f,c
 24080  01EA5C  50F4               	movf	244,w,c
 24081  01EA5E  2235               	addwfc	(btemp+11)^0,f,c
 24082  01EA60  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 24083  01EA66  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 24084  01EA6C  0E00               	movlw	0
 24085  01EA6E  6EE6               	movwf	postinc1,c
 24086  01EA70  0E02               	movlw	2
 24087  01EA72  6EE6               	movwf	postinc1,c
 24088  01EA74  ECDA  F005         	call	_eaDogM_WriteStringAtPos	;wreg free
 24089                           
 24090                           ; BSR set to: 59
 24091                           ;mconfig.c: 102:  wait_lcd_done();
 24092  01EA78  EC6A  F013         	call	_wait_lcd_done	;wreg free
 24093                           
 24094                           ; BSR set to: 61
 24095                           ;mconfig.c: 103:  eaDogM_WriteStringAtPos(3, 0, D.lcd[vterm][3]);
 24096                           ;stkvar	_vterm @ sp[(0)+-1]
 24097  01EA7C  0EFF               	movlw	-1
 24098  01EA7E  50E3               	movf	plusw1,w,c
 24099  01EA80  0DA0               	mullw	160
 24100  01EA82  0E3F               	movlw	low _D
 24101  01EA84  6E34               	movwf	(btemp+10)^0,c
 24102  01EA86  0E0A               	movlw	high _D
 24103  01EA88  6E35               	movwf	(btemp+11)^0,c
 24104  01EA8A  0E78               	movlw	120
 24105  01EA8C  2634               	addwf	(btemp+10)^0,f,c
 24106  01EA8E  0E00               	movlw	0
 24107  01EA90  2235               	addwfc	(btemp+11)^0,f,c
 24108  01EA92  50F3               	movf	243,w,c
 24109  01EA94  2634               	addwf	(btemp+10)^0,f,c
 24110  01EA96  50F4               	movf	244,w,c
 24111  01EA98  2235               	addwfc	(btemp+11)^0,f,c
 24112  01EA9A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 24113  01EAA0  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 24114  01EAA6  0E00               	movlw	0
 24115  01EAA8  6EE6               	movwf	postinc1,c
 24116  01EAAA  0E03               	movlw	3
 24117  01EAAC  6EE6               	movwf	postinc1,c
 24118  01EAAE  ECDA  F005         	call	_eaDogM_WriteStringAtPos	;wreg free
 24119  01EAB2                     l1837:
 24120                           
 24121                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 24122  01EAB2  52E5               	movf	postdec1,f,c
 24123  01EAB4  0012               	return		;funcret
 24124  01EAB6                     __end_of_update_lcd:
 24125                           	opt callstack 0
 24126                           
 24127 ;; *************** function _eaDogM_WriteStringAtPos *****************
 24128 ;; Defined at:
 24129 ;;		line 195 in file "eadog.c"
 24130 ;; Parameters:    Size  Location     Type
 24131 ;;  r               1  [STACK] const unsigned char 
 24132 ;;  c               1  [STACK] const unsigned char 
 24133 ;;  strPtr          2  [STACK] PTR unsigned char 
 24134 ;;		 -> D.lcd(640), D(642), V(181), 
 24135 ;; Auto vars:     Size  Location     Type
 24136 ;;  row             1  [STACK] unsigned char 
 24137 ;; Return value:  Size  Location     Type
 24138 ;;                  1  [STACK] void 
 24139 ;; Registers used:
 24140 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 24141 ;; Tracked objects:
 24142 ;;		On entry : 3F/3D
 24143 ;;		On exit  : 3F/3B
 24144 ;;		Unchanged: 0/0
 24145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24150 ;;Total ram usage:        0 bytes
 24151 ;; Hardware stack levels used:    1
 24152 ;; Hardware stack levels required when called:   25
 24153 ;; This function calls:
 24154 ;;		_eaDogM_WriteString
 24155 ;;		_send_lcd_cmd_dma
 24156 ;;		_send_lcd_data_dma
 24157 ;;		_wait_lcd_done
 24158 ;; This function is called by:
 24159 ;;		_update_lcd
 24160 ;;		_vterm_dump
 24161 ;; This function uses a reentrant model
 24162 ;;
 24163                           
 24164                           	psect	text82
 24165  000BB4                     __ptext82:
 24166                           	opt callstack 0
 24167  000BB4                     _eaDogM_WriteStringAtPos:
 24168                           	opt callstack 0
 24169                           
 24170                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24171  000BB4  52E6               	movf	postinc1,f,c
 24172                           
 24173                           ;eadog.c: 195: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 196: {;eadog.c: 197:  uint8_t row;;eadog.c: 199:  switch (r) {
 24174                           
 24175                           ;incstack = 0
 24176  000BB6  D013               	goto	l16802
 24177  000BB8                     l16790:
 24178                           
 24179                           ;eadog.c: 201:   row = 0x40;
 24180                           ;stkvar	_row @ sp[(-1)+0]
 24181  000BB8  0EFF               	movlw	-1
 24182  000BBA  6AE3               	clrf	plusw1,c
 24183  000BBC  8CE3               	bsf	plusw1,6,c
 24184                           
 24185                           ;eadog.c: 202:   break;
 24186  000BBE  D025               	goto	l16804
 24187  000BC0                     l16792:
 24188                           
 24189                           ;eadog.c: 204:   row = 0x14;
 24190                           ;stkvar	_row @ sp[(-1)+0]
 24191  000BC0  0EFF               	movlw	-1
 24192  000BC2  6AE3               	clrf	plusw1,c
 24193  000BC4  84E3               	bsf	plusw1,2,c
 24194  000BC6  88E3               	bsf	plusw1,4,c	;indir
 24195                           
 24196                           ;eadog.c: 205:   break;
 24197  000BC8  D020               	goto	l16804
 24198  000BCA                     l16794:
 24199                           
 24200                           ;eadog.c: 207:   row = 0x54;
 24201  000BCA  0E54               	movlw	84
 24202  000BCC  6E35               	movwf	(btemp+11)^0,c
 24203                           
 24204                           ;stkvar	_row @ sp[(-1)+0]
 24205  000BCE  0EFF               	movlw	-1
 24206  000BD0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 24207                           
 24208                           ;eadog.c: 208:   break;
 24209  000BD6  D019               	goto	l16804
 24210  000BD8                     l16796:
 24211                           
 24212                           ;eadog.c: 210:   row = 0x00;
 24213                           ;stkvar	_row @ sp[(-1)+0]
 24214  000BD8  0EFF               	movlw	-1
 24215  000BDA  6AE3               	clrf	plusw1,c
 24216                           
 24217                           ;eadog.c: 211:   break;
 24218  000BDC  D016               	goto	l16804
 24219  000BDE                     l16802:
 24220                           
 24221                           ;stkvar	_r @ sp[(-1)+-1]
 24222  000BDE  0EFE               	movlw	-2
 24223  000BE0  50E3               	movf	plusw1,w,c
 24224  000BE2  6E34               	movwf	(btemp+10)^0,c
 24225  000BE4  6A35               	clrf	(btemp+11)^0,c
 24226                           
 24227                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24228                           ; Switch size 1, requested type "simple"
 24229                           ; Number of cases is 1, Range of values is 0 to 0
 24230                           ; switch strategies available:
 24231                           ; Name         Instructions Cycles
 24232                           ; simple_byte            4     3 (average)
 24233                           ;	Chosen strategy is simple_byte
 24234  000BE6  5035               	movf	(btemp+11)^0,w,c
 24235  000BE8  0A00               	xorlw	0	; case 0
 24236  000BEA  A4D8               	btfss	status,2,c
 24237  000BEC  D7E5               	goto	l16790
 24238                           
 24239                           ; Switch size 1, requested type "simple"
 24240                           ; Number of cases is 4, Range of values is 0 to 3
 24241                           ; switch strategies available:
 24242                           ; Name         Instructions Cycles
 24243                           ; simple_byte           13     7 (average)
 24244                           ;	Chosen strategy is simple_byte
 24245  000BEE  5034               	movf	(btemp+10)^0,w,c
 24246  000BF0  0A00               	xorlw	0	; case 0
 24247  000BF2  B4D8               	btfsc	status,2,c
 24248  000BF4  D7E1               	goto	l16790
 24249  000BF6  0A01               	xorlw	1	; case 1
 24250  000BF8  B4D8               	btfsc	status,2,c
 24251  000BFA  D7E2               	goto	l16792
 24252  000BFC  0A03               	xorlw	3	; case 2
 24253  000BFE  B4D8               	btfsc	status,2,c
 24254  000C00  D7E4               	goto	l16794
 24255  000C02  0A01               	xorlw	1	; case 3
 24256  000C04  B4D8               	btfsc	status,2,c
 24257  000C06  D7E8               	goto	l16796
 24258  000C08  D7D7               	goto	l16790
 24259  000C0A                     l16804:
 24260                           
 24261                           ;eadog.c: 216:  send_lcd_cmd_dma(0x45);
 24262  000C0A  0E45               	movlw	69
 24263  000C0C  6EE6               	movwf	postinc1,c
 24264  000C0E  EC94  F012         	call	_send_lcd_cmd_dma	;wreg free
 24265                           
 24266                           ;eadog.c: 217:  send_lcd_data_dma(row + c);
 24267                           ;stkvar	_c @ sp[(-1)+-2]
 24268  000C12  0EFD               	movlw	-3
 24269  000C14  006F FF8C  F035    	movff	plusw1,btemp+11
 24270                           
 24271                           ;stkvar	_row @ sp[(-1)+0]
 24272  000C1A  0EFF               	movlw	-1
 24273  000C1C  50E3               	movf	plusw1,w,c
 24274  000C1E  2435               	addwf	(btemp+11)^0,w,c
 24275  000C20  6EE6               	movwf	postinc1,c
 24276  000C22  EC36  F00D         	call	_send_lcd_data_dma	;wreg free
 24277                           
 24278                           ; BSR set to: 59
 24279                           ;eadog.c: 218:  wait_lcd_done();
 24280  000C26  EC6A  F013         	call	_wait_lcd_done	;wreg free
 24281                           
 24282                           ; BSR set to: 61
 24283                           ;eadog.c: 219:  eaDogM_WriteString(strPtr);
 24284                           ;stkvar	_strPtr @ sp[(-1)+-4]
 24285  000C2A  0EFB               	movlw	-5
 24286  000C2C  006F FF8F FFE6     	movff	plusw1,postinc1
 24287  000C32  006F FF8F FFE6     	movff	plusw1,postinc1
 24288  000C38  EC02  F004         	call	_eaDogM_WriteString	;wreg free
 24289                           
 24290                           ; BSR set to: 59
 24291                           ; _eaDogM_WriteStringAtPos: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 24292  000C3C  0EFB               	movlw	251
 24293  000C3E  26E1               	addwf	fsr1l,f,c
 24294  000C40  0EFF               	movlw	255
 24295  000C42  22E2               	addwfc	fsr1h,f,c
 24296  000C44  0012               	return		;funcret
 24297  000C46                     __end_of_eaDogM_WriteStringAtPos:
 24298                           	opt callstack 0
 24299                           
 24300 ;; *************** function _send_lcd_cmd_dma *****************
 24301 ;; Defined at:
 24302 ;;		line 171 in file "eadog.c"
 24303 ;; Parameters:    Size  Location     Type
 24304 ;;  strPtr          1  [STACK] const unsigned char 
 24305 ;; Auto vars:     Size  Location     Type
 24306 ;;		None
 24307 ;; Return value:  Size  Location     Type
 24308 ;;                  1  [STACK] void 
 24309 ;; Registers used:
 24310 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 24311 ;; Tracked objects:
 24312 ;;		On entry : 0/3D
 24313 ;;		On exit  : 3F/3D
 24314 ;;		Unchanged: 0/0
 24315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24320 ;;Total ram usage:        0 bytes
 24321 ;; Hardware stack levels used:    1
 24322 ;; Hardware stack levels required when called:   18
 24323 ;; This function calls:
 24324 ;;		_send_lcd_data_dma
 24325 ;;		_wait_lcd_done
 24326 ;; This function is called by:
 24327 ;;		_eaDogM_WriteStringAtPos
 24328 ;;		_eaDogM_WriteCommand
 24329 ;; This function uses a reentrant model
 24330 ;;
 24331                           
 24332                           	psect	text83
 24333  002528                     __ptext83:
 24334                           	opt callstack 0
 24335  002528                     _send_lcd_cmd_dma:
 24336                           	opt callstack 10
 24337                           
 24338                           ;eadog.c: 171: void send_lcd_cmd_dma(const uint8_t strPtr);eadog.c: 172: {;eadog.c: 173:
      +                            send_lcd_data_dma(0xFE);
 24339                           
 24340                           ; BSR set to: 59
 24341                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24342                           ;incstack = 0
 24343  002528  0EFE               	movlw	254
 24344  00252A  6EE6               	movwf	postinc1,c
 24345  00252C  EC36  F00D         	call	_send_lcd_data_dma	;wreg free
 24346                           
 24347                           ; BSR set to: 59
 24348                           ;eadog.c: 174:  wait_lcd_done();
 24349  002530  EC6A  F013         	call	_wait_lcd_done	;wreg free
 24350                           
 24351                           ;eadog.c: 175:  send_lcd_data_dma(strPtr);
 24352                           ;stkvar	_strPtr @ sp[(0)+-1]
 24353  002534  0EFF               	movlw	-1
 24354  002536  50E3               	movf	plusw1,w,c
 24355  002538  6EE6               	movwf	postinc1,c
 24356  00253A  EC36  F00D         	call	_send_lcd_data_dma	;wreg free
 24357                           
 24358                           ; BSR set to: 59
 24359                           ;eadog.c: 176:  wait_lcd_done();
 24360  00253E  EC6A  F013         	call	_wait_lcd_done	;wreg free
 24361                           
 24362                           ; BSR set to: 61
 24363                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 24364  002542  52E5               	movf	postdec1,f,c
 24365  002544  0012               	return		;funcret
 24366  002546                     __end_of_send_lcd_cmd_dma:
 24367                           	opt callstack 0
 24368                           
 24369 ;; *************** function _wait_lcd_done *****************
 24370 ;; Defined at:
 24371 ;;		line 443 in file "eadog.c"
 24372 ;; Parameters:    Size  Location     Type
 24373 ;;		None
 24374 ;; Auto vars:     Size  Location     Type
 24375 ;;		None
 24376 ;; Return value:  Size  Location     Type
 24377 ;;                  1  [STACK] void 
 24378 ;; Registers used:
 24379 ;;		None
 24380 ;; Tracked objects:
 24381 ;;		On entry : 0/2
 24382 ;;		On exit  : 3F/3D
 24383 ;;		Unchanged: 0/0
 24384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24389 ;;Total ram usage:        0 bytes
 24390 ;; Hardware stack levels used:    1
 24391 ;; Hardware stack levels required when called:   15
 24392 ;; This function calls:
 24393 ;;		Nothing
 24394 ;; This function is called by:
 24395 ;;		_main
 24396 ;;		_send_lcd_cmd_dma
 24397 ;;		_eaDogM_WriteStringAtPos
 24398 ;;		_update_lcd
 24399 ;;		_vterm_dump
 24400 ;; This function uses a reentrant model
 24401 ;;
 24402                           
 24403                           	psect	text84
 24404  0026D4                     __ptext84:
 24405                           	opt callstack 0
 24406  0026D4                     _wait_lcd_done:
 24407                           	opt callstack 15
 24408                           
 24409                           ;eadog.c: 445:  while (spi_link.LCD_DATA);
 24410                           
 24411                           ; BSR set to: 61
 24412                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24413                           ;incstack = 0
 24414  0026D4  0100               	movlb	0	; () banked
 24415  0026D6  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
 24416  0026D8  D7FD               	goto	_wait_lcd_done
 24417  0026DA                     u10840:
 24418  0026DA  013D               	movlb	61	; () banked
 24419  0026DC  BB17               	btfsc	23,5,b	;volatile
 24420  0026DE  0012               	return	
 24421  0026E0  D7FC               	goto	u10840
 24422  0026E2                     __end_of_wait_lcd_done:
 24423                           	opt callstack 0
 24424                           
 24425 ;; *************** function _send_lcd_data_dma *****************
 24426 ;; Defined at:
 24427 ;;		line 182 in file "eadog.c"
 24428 ;; Parameters:    Size  Location     Type
 24429 ;;  strPtr          1  [STACK] const unsigned char 
 24430 ;; Auto vars:     Size  Location     Type
 24431 ;;		None
 24432 ;; Return value:  Size  Location     Type
 24433 ;;                  1  [STACK] void 
 24434 ;; Registers used:
 24435 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 24436 ;; Tracked objects:
 24437 ;;		On entry : 0/3D
 24438 ;;		On exit  : 3F/3B
 24439 ;;		Unchanged: 0/0
 24440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24445 ;;Total ram usage:        0 bytes
 24446 ;; Hardware stack levels used:    1
 24447 ;; Hardware stack levels required when called:   17
 24448 ;; This function calls:
 24449 ;;		_ringBufS_flush
 24450 ;;		_ringBufS_put_dma
 24451 ;;		_start_lcd
 24452 ;;		_wait_lcd_set
 24453 ;; This function is called by:
 24454 ;;		_send_lcd_cmd_dma
 24455 ;;		_eaDogM_WriteStringAtPos
 24456 ;; This function uses a reentrant model
 24457 ;;
 24458                           
 24459                           	psect	text85
 24460  001A6C                     __ptext85:
 24461                           	opt callstack 0
 24462  001A6C                     _send_lcd_data_dma:
 24463                           	opt callstack 11
 24464                           
 24465                           ;eadog.c: 182: void send_lcd_data_dma(const uint8_t strPtr);eadog.c: 183: {;eadog.c: 184
      +                          :  wait_lcd_set();
 24466                           
 24467                           ; BSR set to: 61
 24468                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24469                           ;incstack = 0
 24470  001A6C  ECC8  F013         	call	_wait_lcd_set	;wreg free
 24471                           
 24472                           ; BSR set to: 0
 24473                           ;eadog.c: 186:  ringBufS_flush(spi_link.tx1a, 0);
 24474  001A70  0E00               	movlw	0
 24475  001A72  6EE6               	movwf	postinc1,c
 24476  001A74  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 24477  001A7A  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 24478  001A80  EC23  F006         	call	_ringBufS_flush	;wreg free
 24479  001A84  94BC               	bcf	188,2,c	;volatile
 24480                           
 24481                           ;eadog.c: 188:  DMA1CON0bits.EN = 0;
 24482  001A86  013B               	movlb	59	; () banked
 24483  001A88  9FFC               	bcf	252,7,b	;volatile
 24484                           
 24485                           ; BSR set to: 59
 24486                           ;eadog.c: 189:  DMA1SSZ = 1;
 24487  001A8A  0E00               	movlw	0
 24488  001A8C  6FF8               	movwf	248,b	;volatile
 24489  001A8E  0E01               	movlw	1
 24490  001A90  6FF7               	movwf	247,b	;volatile
 24491                           
 24492                           ; BSR set to: 59
 24493                           ;eadog.c: 190:  DMA1CON0bits.EN = 1;
 24494  001A92  8FFC               	bsf	252,7,b	;volatile
 24495                           
 24496                           ; BSR set to: 59
 24497                           ;eadog.c: 191:  ringBufS_put_dma(spi_link.tx1a, strPtr);
 24498                           ;stkvar	_strPtr @ sp[(0)+-1]
 24499  001A94  0EFF               	movlw	-1
 24500  001A96  50E3               	movf	plusw1,w,c
 24501  001A98  6EE6               	movwf	postinc1,c
 24502  001A9A  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 24503  001AA0  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 24504  001AA6  ECAD  F003         	call	_ringBufS_put_dma	;wreg free
 24505                           
 24506                           ;eadog.c: 192:  start_lcd();
 24507  001AAA  ECCB  F013         	call	_start_lcd	;wreg free
 24508                           
 24509                           ; BSR set to: 59
 24510                           ; _send_lcd_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 24511  001AAE  52E5               	movf	postdec1,f,c
 24512  001AB0  0012               	return		;funcret
 24513  001AB2                     __end_of_send_lcd_data_dma:
 24514                           	opt callstack 0
 24515                           
 24516 ;; *************** function _eaDogM_WriteString *****************
 24517 ;; Defined at:
 24518 ;;		line 151 in file "eadog.c"
 24519 ;; Parameters:    Size  Location     Type
 24520 ;;  strPtr          2  [STACK] PTR unsigned char 
 24521 ;;		 -> D.lcd(640), D(642), V(181), 
 24522 ;; Auto vars:     Size  Location     Type
 24523 ;;		None
 24524 ;; Return value:  Size  Location     Type
 24525 ;;                  1  [STACK] void 
 24526 ;; Registers used:
 24527 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 24528 ;; Tracked objects:
 24529 ;;		On entry : 3F/3D
 24530 ;;		On exit  : 3F/3B
 24531 ;;		Unchanged: 0/0
 24532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24537 ;;Total ram usage:        0 bytes
 24538 ;; Hardware stack levels used:    1
 24539 ;; Hardware stack levels required when called:   24
 24540 ;; This function calls:
 24541 ;;		_printf
 24542 ;;		_ringBufS_flush
 24543 ;;		_start_lcd
 24544 ;;		_strlen
 24545 ;;		_wait_lcd_set
 24546 ;; This function is called by:
 24547 ;;		_eaDogM_WriteStringAtPos
 24548 ;; This function uses a reentrant model
 24549 ;;
 24550                           
 24551                           	psect	text86
 24552  000804                     __ptext86:
 24553                           	opt callstack 0
 24554  000804                     _eaDogM_WriteString:
 24555                           	opt callstack 4
 24556                           
 24557                           ;eadog.c: 151: void eaDogM_WriteString(char *strPtr);eadog.c: 152: {;eadog.c: 153:  wait
      +                          _lcd_set();
 24558                           
 24559                           ; BSR set to: 59
 24560                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24561                           ;incstack = 0
 24562  000804  ECC8  F013         	call	_wait_lcd_set	;wreg free
 24563                           
 24564                           ; BSR set to: 0
 24565                           ;eadog.c: 155:  ringBufS_flush(spi_link.tx1a, 0);
 24566  000808  0E00               	movlw	0
 24567  00080A  6EE6               	movwf	postinc1,c
 24568  00080C  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 24569  000812  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 24570  000818  EC23  F006         	call	_ringBufS_flush	;wreg free
 24571  00081C  94BC               	bcf	188,2,c	;volatile
 24572                           
 24573                           ;eadog.c: 157:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 24574                           ;stkvar	_strPtr @ sp[(0)+-2]
 24575  00081E  0EFE               	movlw	-2
 24576  000820  006F FF8F FFE6     	movff	plusw1,postinc1
 24577  000826  006F FF8F FFE6     	movff	plusw1,postinc1
 24578  00082C  ECA7  F004         	call	_strlen	;wreg free
 24579  000830  502B               	movf	(btemp+1)^0,w,c
 24580  000832  E104               	bnz	u16090
 24581  000834  0E41               	movlw	65
 24582  000836  5C2A               	subwf	btemp^0,w,c
 24583  000838  A0D8               	btfss	status,0,c
 24584  00083A  D010               	goto	l16534
 24585  00083C                     u16090:
 24586                           
 24587                           ;stkvar	_strPtr @ sp[(0)+-2]
 24588  00083C  0EFE               	movlw	-2
 24589  00083E  006F FF8C  F034    	movff	plusw1,btemp+10
 24590  000844  0EFF               	movlw	-1
 24591  000846  006F FF8C  F035    	movff	plusw1,btemp+11
 24592  00084C  0E40               	movlw	64
 24593  00084E  2434               	addwf	(btemp+10)^0,w,c
 24594  000850  6ED9               	movwf	fsr2l,c
 24595  000852  0E00               	movlw	0
 24596  000854  2035               	addwfc	(btemp+11)^0,w,c
 24597  000856  6EDA               	movwf	fsr2h,c
 24598  000858  0E00               	movlw	0
 24599  00085A  6EDF               	movwf	indf2,c
 24600  00085C                     l16534:
 24601                           
 24602                           ;eadog.c: 158:  DMA1CON0bits.EN = 0;
 24603  00085C  013B               	movlb	59	; () banked
 24604  00085E  9FFC               	bcf	252,7,b	;volatile
 24605                           
 24606                           ; BSR set to: 59
 24607                           ;eadog.c: 159:  DMA1SSZ = strlen(strPtr);
 24608                           ;stkvar	_strPtr @ sp[(0)+-2]
 24609  000860  0EFE               	movlw	-2
 24610  000862  006F FF8F FFE6     	movff	plusw1,postinc1
 24611  000868  006F FF8F FFE6     	movff	plusw1,postinc1
 24612  00086E  ECA7  F004         	call	_strlen	;wreg free
 24613  000872  0060  F0AB  FBF7   	movff	btemp,15351	;volatile
 24614  000878  0060  F0AF  FBF8   	movff	btemp+1,15352	;volatile
 24615                           
 24616                           ;eadog.c: 160:  DMA1CON0bits.EN = 1;
 24617  00087E  013B               	movlb	59	; () banked
 24618  000880  8FFC               	bsf	252,7,b	;volatile
 24619                           
 24620                           ; BSR set to: 59
 24621                           ;eadog.c: 161:  printf("%s", strPtr);
 24622                           ;stkvar	_strPtr @ sp[(0)+-2]
 24623  000882  0EFE               	movlw	-2
 24624  000884  006F FF8F FFE6     	movff	plusw1,postinc1
 24625  00088A  006F FF8F FFE6     	movff	plusw1,postinc1
 24626  000890  0EFC               	movlw	low STR_69
 24627  000892  6EE6               	movwf	postinc1,c
 24628  000894  0EFF               	movlw	high STR_69
 24629  000896  6EE6               	movwf	postinc1,c
 24630  000898  0E04               	movlw	4
 24631  00089A  6EE6               	movwf	postinc1,c
 24632  00089C  EC93  F00A         	call	_printf	;wreg free
 24633                           
 24634                           ; BSR set to: 0
 24635                           ;eadog.c: 162:  start_lcd();
 24636  0008A0  ECCB  F013         	call	_start_lcd	;wreg free
 24637                           
 24638                           ; BSR set to: 59
 24639                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 24640  0008A4  52E5               	movf	postdec1,f,c
 24641  0008A6  52E5               	movf	postdec1,f,c
 24642  0008A8  0012               	return		;funcret
 24643  0008AA                     __end_of_eaDogM_WriteString:
 24644                           	opt callstack 0
 24645                           
 24646 ;; *************** function _wait_lcd_set *****************
 24647 ;; Defined at:
 24648 ;;		line 433 in file "eadog.c"
 24649 ;; Parameters:    Size  Location     Type
 24650 ;;		None
 24651 ;; Auto vars:     Size  Location     Type
 24652 ;;		None
 24653 ;; Return value:  Size  Location     Type
 24654 ;;                  1  [STACK] void 
 24655 ;; Registers used:
 24656 ;;		None
 24657 ;; Tracked objects:
 24658 ;;		On entry : 0/3D
 24659 ;;		On exit  : 3F/0
 24660 ;;		Unchanged: 0/0
 24661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24666 ;;Total ram usage:        0 bytes
 24667 ;; Hardware stack levels used:    1
 24668 ;; Hardware stack levels required when called:   15
 24669 ;; This function calls:
 24670 ;;		Nothing
 24671 ;; This function is called by:
 24672 ;;		_eaDogM_WriteString
 24673 ;;		_send_lcd_data_dma
 24674 ;; This function uses a reentrant model
 24675 ;;
 24676                           
 24677                           	psect	text87
 24678  002790                     __ptext87:
 24679                           	opt callstack 0
 24680  002790                     _wait_lcd_set:
 24681                           	opt callstack 12
 24682                           
 24683                           ;eadog.c: 435:  spi_link.LCD_DATA = 1;
 24684                           
 24685                           ; BSR set to: 59
 24686                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24687                           ;incstack = 0
 24688  002790  0100               	movlb	0	; () banked
 24689  002792  8760               	bsf	_spi_link& (0+255),3,b	;volatile
 24690                           
 24691                           ; BSR set to: 0
 24692                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 24693  002794  0012               	return		;funcret
 24694  002796                     __end_of_wait_lcd_set:
 24695                           	opt callstack 0
 24696                           
 24697 ;; *************** function _start_lcd *****************
 24698 ;; Defined at:
 24699 ;;		line 428 in file "eadog.c"
 24700 ;; Parameters:    Size  Location     Type
 24701 ;;		None
 24702 ;; Auto vars:     Size  Location     Type
 24703 ;;		None
 24704 ;; Return value:  Size  Location     Type
 24705 ;;                  1  [STACK] void 
 24706 ;; Registers used:
 24707 ;;		None
 24708 ;; Tracked objects:
 24709 ;;		On entry : 0/3B
 24710 ;;		On exit  : 3F/3B
 24711 ;;		Unchanged: 0/0
 24712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24717 ;;Total ram usage:        0 bytes
 24718 ;; Hardware stack levels used:    1
 24719 ;; Hardware stack levels required when called:   15
 24720 ;; This function calls:
 24721 ;;		Nothing
 24722 ;; This function is called by:
 24723 ;;		_eaDogM_WriteString
 24724 ;;		_send_lcd_data_dma
 24725 ;; This function uses a reentrant model
 24726 ;;
 24727                           
 24728                           	psect	text88
 24729  002796                     __ptext88:
 24730                           	opt callstack 0
 24731  002796                     _start_lcd:
 24732                           	opt callstack 12
 24733                           
 24734                           ;eadog.c: 430:  DMA1CON0bits.DMA1SIRQEN = 1;
 24735                           
 24736                           ; BSR set to: 0
 24737                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24738                           ;incstack = 0
 24739  002796  013B               	movlb	59	; () banked
 24740  002798  8DFC               	bsf	252,6,b	;volatile
 24741                           
 24742                           ; BSR set to: 59
 24743                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 24744  00279A  0012               	return		;funcret
 24745  00279C                     __end_of_start_lcd:
 24746                           	opt callstack 0
 24747                           
 24748 ;; *************** function _ringBufS_flush *****************
 24749 ;; Defined at:
 24750 ;;		line 76 in file "ringbufs.c"
 24751 ;; Parameters:    Size  Location     Type
 24752 ;;  _this           2  [STACK] PTR struct ringBufS_t
 24753 ;;		 -> ring_buf1(67), 
 24754 ;;  clearBuffer     1  [STACK] const char 
 24755 ;; Auto vars:     Size  Location     Type
 24756 ;;		None
 24757 ;; Return value:  Size  Location     Type
 24758 ;;                  1  [STACK] void 
 24759 ;; Registers used:
 24760 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 24761 ;; Tracked objects:
 24762 ;;		On entry : 3F/0
 24763 ;;		On exit  : 0/0
 24764 ;;		Unchanged: 0/0
 24765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24770 ;;Total ram usage:        0 bytes
 24771 ;; Hardware stack levels used:    1
 24772 ;; Hardware stack levels required when called:   16
 24773 ;; This function calls:
 24774 ;;		_memset
 24775 ;; This function is called by:
 24776 ;;		_eaDogM_WriteString
 24777 ;;		_send_lcd_data_dma
 24778 ;; This function uses a reentrant model
 24779 ;;
 24780                           
 24781                           	psect	text89
 24782  000C46                     __ptext89:
 24783                           	opt callstack 0
 24784  000C46                     _ringBufS_flush:
 24785                           	opt callstack 11
 24786                           
 24787                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 24788                           ;stkvar	__this @ sp[(0)+-2]
 24789                           
 24790                           ; BSR set to: 59
 24791                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24792                           ;incstack = 0
 24793  000C46  0EFE               	movlw	-2
 24794  000C48  006F FF8C  F034    	movff	plusw1,btemp+10
 24795  000C4E  0EFF               	movlw	-1
 24796  000C50  006F FF8C  F035    	movff	plusw1,btemp+11
 24797  000C56  0E42               	movlw	66
 24798  000C58  2434               	addwf	(btemp+10)^0,w,c
 24799  000C5A  6ED9               	movwf	fsr2l,c
 24800  000C5C  0E00               	movlw	0
 24801  000C5E  2035               	addwfc	(btemp+11)^0,w,c
 24802  000C60  6EDA               	movwf	fsr2h,c
 24803  000C62  0E00               	movlw	0
 24804  000C64  6EDF               	movwf	indf2,c
 24805                           
 24806                           ;ringbufs.c: 79:  _this->head = 0;
 24807                           ;stkvar	__this @ sp[(0)+-2]
 24808  000C66  0EFE               	movlw	-2
 24809  000C68  006F FF8C  F034    	movff	plusw1,btemp+10
 24810  000C6E  0EFF               	movlw	-1
 24811  000C70  006F FF8C  F035    	movff	plusw1,btemp+11
 24812  000C76  0E40               	movlw	64
 24813  000C78  2434               	addwf	(btemp+10)^0,w,c
 24814  000C7A  6ED9               	movwf	fsr2l,c
 24815  000C7C  0E00               	movlw	0
 24816  000C7E  2035               	addwfc	(btemp+11)^0,w,c
 24817  000C80  6EDA               	movwf	fsr2h,c
 24818  000C82  0E00               	movlw	0
 24819  000C84  6EDF               	movwf	indf2,c
 24820                           
 24821                           ;ringbufs.c: 80:  _this->tail = 0;
 24822                           ;stkvar	__this @ sp[(0)+-2]
 24823  000C86  0EFE               	movlw	-2
 24824  000C88  006F FF8C  F034    	movff	plusw1,btemp+10
 24825  000C8E  0EFF               	movlw	-1
 24826  000C90  006F FF8C  F035    	movff	plusw1,btemp+11
 24827  000C96  0E41               	movlw	65
 24828  000C98  2434               	addwf	(btemp+10)^0,w,c
 24829  000C9A  6ED9               	movwf	fsr2l,c
 24830  000C9C  0E00               	movlw	0
 24831  000C9E  2035               	addwfc	(btemp+11)^0,w,c
 24832  000CA0  6EDA               	movwf	fsr2h,c
 24833  000CA2  0E00               	movlw	0
 24834  000CA4  6EDF               	movwf	indf2,c
 24835                           
 24836                           ;ringbufs.c: 81:  if (clearBuffer) {
 24837                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 24838  000CA6  0EFD               	movlw	-3
 24839  000CA8  50E3               	movf	plusw1,w,c
 24840  000CAA  B4D8               	btfsc	status,2,c
 24841  000CAC  D011               	goto	l1746
 24842                           
 24843                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 24844  000CAE  0E40               	movlw	64
 24845  000CB0  6EE6               	movwf	postinc1,c
 24846  000CB2  0E00               	movlw	0
 24847  000CB4  6EE6               	movwf	postinc1,c
 24848  000CB6  0E00               	movlw	0
 24849  000CB8  6EE6               	movwf	postinc1,c
 24850  000CBA  0E00               	movlw	0
 24851  000CBC  6EE6               	movwf	postinc1,c
 24852                           
 24853                           ;stkvar	__this @ sp[(-4)+-2]
 24854  000CBE  0EFA               	movlw	-6
 24855  000CC0  006F FF8F FFE6     	movff	plusw1,postinc1
 24856  000CC6  006F FF8F FFE6     	movff	plusw1,postinc1
 24857  000CCC  EC36  F0D6         	call	_memset	;wreg free
 24858  000CD0                     l1746:
 24859                           
 24860                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 24861  000CD0  52E5               	movf	postdec1,f,c
 24862  000CD2  52E5               	movf	postdec1,f,c
 24863  000CD4  52E5               	movf	postdec1,f,c
 24864  000CD6  0012               	return		;funcret
 24865  000CD8                     __end_of_ringBufS_flush:
 24866                           	opt callstack 0
 24867                           
 24868 ;; *************** function _memset *****************
 24869 ;; Defined at:
 24870 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 24871 ;; Parameters:    Size  Location     Type
 24872 ;;  dest            2  [STACK] PTR void 
 24873 ;;		 -> ring_buf2(67), ring_buf1(67), 
 24874 ;;  c               2  [STACK] int 
 24875 ;;  n               2  [STACK] unsigned int 
 24876 ;; Auto vars:     Size  Location     Type
 24877 ;;  s               2  [STACK] PTR unsigned char 
 24878 ;;		 -> ring_buf2(67), ring_buf1(67), 
 24879 ;;  k               2  [STACK] unsigned int 
 24880 ;; Return value:  Size  Location     Type
 24881 ;;                  2  [STACK] PTR void 
 24882 ;; Registers used:
 24883 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 24884 ;; Tracked objects:
 24885 ;;		On entry : 0/0
 24886 ;;		On exit  : 0/0
 24887 ;;		Unchanged: 0/0
 24888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24893 ;;Total ram usage:        0 bytes
 24894 ;; Hardware stack levels used:    1
 24895 ;; Hardware stack levels required when called:   15
 24896 ;; This function calls:
 24897 ;;		Nothing
 24898 ;; This function is called by:
 24899 ;;		_ringBufS_init
 24900 ;;		_ringBufS_flush
 24901 ;; This function uses a reentrant model
 24902 ;;
 24903                           
 24904                           	psect	text90
 24905  01AC6C                     __ptext90:
 24906                           	opt callstack 0
 24907  01AC6C                     _memset:
 24908                           	opt callstack 0
 24909                           
 24910                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24911  01AC6C  52E6               	movf	postinc1,f,c
 24912  01AC6E  52E6               	movf	postinc1,f,c
 24913  01AC70  52E6               	movf	postinc1,f,c
 24914  01AC72  52E6               	movf	postinc1,f,c
 24915                           
 24916                           ;stkvar	_dest @ sp[(-4)+-2]
 24917                           
 24918                           ;incstack = 0
 24919  01AC74  0EFA               	movlw	-6
 24920  01AC76  006F FF8C  F034    	movff	plusw1,btemp+10
 24921  01AC7C  0EFB               	movlw	-5
 24922  01AC7E  006F FF8C  F035    	movff	plusw1,btemp+11
 24923                           
 24924                           ;stkvar	_s @ sp[(-4)+0]
 24925  01AC84  0EFD               	movlw	-3
 24926  01AC86  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 24927  01AC8C  0EFC               	movlw	-4
 24928  01AC8E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 24929                           
 24930                           ;stkvar	_n @ sp[(-4)+-6]
 24931  01AC94  0EF6               	movlw	-10
 24932  01AC96  006F FF8C  F02A    	movff	plusw1,btemp
 24933  01AC9C  0EF7               	movlw	-9
 24934  01AC9E  50E3               	movf	plusw1,w,c
 24935  01ACA0  102A               	iorwf	btemp^0,w,c
 24936  01ACA2  B4D8               	btfsc	status,2,c
 24937  01ACA4  D154               	goto	u14270
 24938                           
 24939                           ;stkvar	_c @ sp[(-4)+-4]
 24940                           ;stkvar	_s @ sp[(-4)+0]
 24941  01ACA6  0EFC               	movlw	-4
 24942  01ACA8  006F FF8F FFD9     	movff	plusw1,fsr2l
 24943  01ACAE  0EFD               	movlw	-3
 24944  01ACB0  006F FF8F FFDA     	movff	plusw1,fsr2h
 24945  01ACB6  0EF8               	movlw	-8
 24946  01ACB8  006F FF8F FFDF     	movff	plusw1,indf2
 24947                           
 24948                           ;stkvar	_c @ sp[(-4)+-4]
 24949                           ;stkvar	_n @ sp[(-4)+-6]
 24950                           ;stkvar	_s @ sp[(-4)+0]
 24951  01ACBE  0EFC               	movlw	-4
 24952  01ACC0  006F FF8C  F034    	movff	plusw1,btemp+10
 24953  01ACC6  0EFD               	movlw	-3
 24954  01ACC8  006F FF8C  F035    	movff	plusw1,btemp+11
 24955  01ACCE  0EF6               	movlw	-10
 24956  01ACD0  50E3               	movf	plusw1,w,c
 24957  01ACD2  2634               	addwf	(btemp+10)^0,f,c
 24958  01ACD4  0EF7               	movlw	-9
 24959  01ACD6  50E3               	movf	plusw1,w,c
 24960  01ACD8  2235               	addwfc	(btemp+11)^0,f,c
 24961  01ACDA  0EFF               	movlw	255
 24962  01ACDC  2434               	addwf	(btemp+10)^0,w,c
 24963  01ACDE  6ED9               	movwf	fsr2l,c
 24964  01ACE0  0EFF               	movlw	255
 24965  01ACE2  2035               	addwfc	(btemp+11)^0,w,c
 24966  01ACE4  6EDA               	movwf	fsr2h,c
 24967  01ACE6  0EF8               	movlw	-8
 24968  01ACE8  006F FF8F FFDF     	movff	plusw1,indf2
 24969                           
 24970                           ;stkvar	_n @ sp[(-4)+-6]
 24971  01ACEE  0EF7               	movlw	-9
 24972  01ACF0  50E3               	movf	plusw1,w,c
 24973  01ACF2  E108               	bnz	l15350
 24974  01ACF4  0EF6               	movlw	-10
 24975  01ACF6  006F FF8C  F02A    	movff	plusw1,btemp
 24976  01ACFC  0E03               	movlw	3
 24977  01ACFE  5E2A               	subwf	btemp^0,f,c
 24978  01AD00  A0D8               	btfss	status,0,c
 24979  01AD02  D125               	goto	u14270
 24980  01AD04                     l15350:
 24981                           
 24982                           ;stkvar	_c @ sp[(-4)+-4]
 24983                           ;stkvar	_s @ sp[(-4)+0]
 24984  01AD04  0EFC               	movlw	-4
 24985  01AD06  006F FF8C  F034    	movff	plusw1,btemp+10
 24986  01AD0C  0EFD               	movlw	-3
 24987  01AD0E  006F FF8C  F035    	movff	plusw1,btemp+11
 24988  01AD14  0E01               	movlw	1
 24989  01AD16  2434               	addwf	(btemp+10)^0,w,c
 24990  01AD18  6ED9               	movwf	fsr2l,c
 24991  01AD1A  0E00               	movlw	0
 24992  01AD1C  2035               	addwfc	(btemp+11)^0,w,c
 24993  01AD1E  6EDA               	movwf	fsr2h,c
 24994  01AD20  0EF8               	movlw	-8
 24995  01AD22  006F FF8F FFDF     	movff	plusw1,indf2
 24996                           
 24997                           ;stkvar	_c @ sp[(-4)+-4]
 24998                           ;stkvar	_s @ sp[(-4)+0]
 24999  01AD28  0EFC               	movlw	-4
 25000  01AD2A  006F FF8C  F034    	movff	plusw1,btemp+10
 25001  01AD30  0EFD               	movlw	-3
 25002  01AD32  006F FF8C  F035    	movff	plusw1,btemp+11
 25003  01AD38  0E02               	movlw	2
 25004  01AD3A  2434               	addwf	(btemp+10)^0,w,c
 25005  01AD3C  6ED9               	movwf	fsr2l,c
 25006  01AD3E  0E00               	movlw	0
 25007  01AD40  2035               	addwfc	(btemp+11)^0,w,c
 25008  01AD42  6EDA               	movwf	fsr2h,c
 25009  01AD44  0EF8               	movlw	-8
 25010  01AD46  006F FF8F FFDF     	movff	plusw1,indf2
 25011                           
 25012                           ;stkvar	_c @ sp[(-4)+-4]
 25013                           ;stkvar	_n @ sp[(-4)+-6]
 25014                           ;stkvar	_s @ sp[(-4)+0]
 25015  01AD4C  0EFC               	movlw	-4
 25016  01AD4E  006F FF8C  F034    	movff	plusw1,btemp+10
 25017  01AD54  0EFD               	movlw	-3
 25018  01AD56  006F FF8C  F035    	movff	plusw1,btemp+11
 25019  01AD5C  0EF6               	movlw	-10
 25020  01AD5E  50E3               	movf	plusw1,w,c
 25021  01AD60  2634               	addwf	(btemp+10)^0,f,c
 25022  01AD62  0EF7               	movlw	-9
 25023  01AD64  50E3               	movf	plusw1,w,c
 25024  01AD66  2235               	addwfc	(btemp+11)^0,f,c
 25025  01AD68  0EFE               	movlw	254
 25026  01AD6A  2434               	addwf	(btemp+10)^0,w,c
 25027  01AD6C  6ED9               	movwf	fsr2l,c
 25028  01AD6E  0EFF               	movlw	255
 25029  01AD70  2035               	addwfc	(btemp+11)^0,w,c
 25030  01AD72  6EDA               	movwf	fsr2h,c
 25031  01AD74  0EF8               	movlw	-8
 25032  01AD76  006F FF8F FFDF     	movff	plusw1,indf2
 25033                           
 25034                           ;stkvar	_c @ sp[(-4)+-4]
 25035                           ;stkvar	_n @ sp[(-4)+-6]
 25036                           ;stkvar	_s @ sp[(-4)+0]
 25037  01AD7C  0EFC               	movlw	-4
 25038  01AD7E  006F FF8C  F034    	movff	plusw1,btemp+10
 25039  01AD84  0EFD               	movlw	-3
 25040  01AD86  006F FF8C  F035    	movff	plusw1,btemp+11
 25041  01AD8C  0EF6               	movlw	-10
 25042  01AD8E  50E3               	movf	plusw1,w,c
 25043  01AD90  2634               	addwf	(btemp+10)^0,f,c
 25044  01AD92  0EF7               	movlw	-9
 25045  01AD94  50E3               	movf	plusw1,w,c
 25046  01AD96  2235               	addwfc	(btemp+11)^0,f,c
 25047  01AD98  0EFD               	movlw	253
 25048  01AD9A  2434               	addwf	(btemp+10)^0,w,c
 25049  01AD9C  6ED9               	movwf	fsr2l,c
 25050  01AD9E  0EFF               	movlw	255
 25051  01ADA0  2035               	addwfc	(btemp+11)^0,w,c
 25052  01ADA2  6EDA               	movwf	fsr2h,c
 25053  01ADA4  0EF8               	movlw	-8
 25054  01ADA6  006F FF8F FFDF     	movff	plusw1,indf2
 25055                           
 25056                           ;stkvar	_n @ sp[(-4)+-6]
 25057  01ADAC  0EF7               	movlw	-9
 25058  01ADAE  50E3               	movf	plusw1,w,c
 25059  01ADB0  E108               	bnz	l15356
 25060  01ADB2  0EF6               	movlw	-10
 25061  01ADB4  006F FF8C  F02A    	movff	plusw1,btemp
 25062  01ADBA  0E07               	movlw	7
 25063  01ADBC  5E2A               	subwf	btemp^0,f,c
 25064  01ADBE  A0D8               	btfss	status,0,c
 25065  01ADC0  D0C6               	goto	u14270
 25066  01ADC2                     l15356:
 25067                           
 25068                           ;stkvar	_c @ sp[(-4)+-4]
 25069                           ;stkvar	_s @ sp[(-4)+0]
 25070  01ADC2  0EFC               	movlw	-4
 25071  01ADC4  006F FF8C  F034    	movff	plusw1,btemp+10
 25072  01ADCA  0EFD               	movlw	-3
 25073  01ADCC  006F FF8C  F035    	movff	plusw1,btemp+11
 25074  01ADD2  0E03               	movlw	3
 25075  01ADD4  2434               	addwf	(btemp+10)^0,w,c
 25076  01ADD6  6ED9               	movwf	fsr2l,c
 25077  01ADD8  0E00               	movlw	0
 25078  01ADDA  2035               	addwfc	(btemp+11)^0,w,c
 25079  01ADDC  6EDA               	movwf	fsr2h,c
 25080  01ADDE  0EF8               	movlw	-8
 25081  01ADE0  006F FF8F FFDF     	movff	plusw1,indf2
 25082                           
 25083                           ;stkvar	_c @ sp[(-4)+-4]
 25084                           ;stkvar	_n @ sp[(-4)+-6]
 25085                           ;stkvar	_s @ sp[(-4)+0]
 25086  01ADE6  0EFC               	movlw	-4
 25087  01ADE8  006F FF8C  F034    	movff	plusw1,btemp+10
 25088  01ADEE  0EFD               	movlw	-3
 25089  01ADF0  006F FF8C  F035    	movff	plusw1,btemp+11
 25090  01ADF6  0EF6               	movlw	-10
 25091  01ADF8  50E3               	movf	plusw1,w,c
 25092  01ADFA  2634               	addwf	(btemp+10)^0,f,c
 25093  01ADFC  0EF7               	movlw	-9
 25094  01ADFE  50E3               	movf	plusw1,w,c
 25095  01AE00  2235               	addwfc	(btemp+11)^0,f,c
 25096  01AE02  0EFC               	movlw	252
 25097  01AE04  2434               	addwf	(btemp+10)^0,w,c
 25098  01AE06  6ED9               	movwf	fsr2l,c
 25099  01AE08  0EFF               	movlw	255
 25100  01AE0A  2035               	addwfc	(btemp+11)^0,w,c
 25101  01AE0C  6EDA               	movwf	fsr2h,c
 25102  01AE0E  0EF8               	movlw	-8
 25103  01AE10  006F FF8F FFDF     	movff	plusw1,indf2
 25104                           
 25105                           ;stkvar	_n @ sp[(-4)+-6]
 25106  01AE16  0EF7               	movlw	-9
 25107  01AE18  50E3               	movf	plusw1,w,c
 25108  01AE1A  E108               	bnz	l15362
 25109  01AE1C  0EF6               	movlw	-10
 25110  01AE1E  006F FF8C  F02A    	movff	plusw1,btemp
 25111  01AE24  0E09               	movlw	9
 25112  01AE26  5E2A               	subwf	btemp^0,f,c
 25113  01AE28  A0D8               	btfss	status,0,c
 25114  01AE2A  D091               	goto	u14270
 25115  01AE2C                     l15362:
 25116                           
 25117                           ;stkvar	_s @ sp[(-4)+0]
 25118  01AE2C  0EFC               	movlw	-4
 25119  01AE2E  006F FF8C  F034    	movff	plusw1,btemp+10
 25120  01AE34  1E34               	comf	(btemp+10)^0,f,c
 25121  01AE36  0EFD               	movlw	-3
 25122  01AE38  006F FF8C  F035    	movff	plusw1,btemp+11
 25123  01AE3E  1E35               	comf	(btemp+11)^0,f,c
 25124  01AE40  2A34               	incf	(btemp+10)^0,f,c
 25125  01AE42  B4D8               	btfsc	status,2,c
 25126  01AE44  2A35               	incf	(btemp+11)^0,f,c
 25127  01AE46  0E03               	movlw	3
 25128  01AE48  1634               	andwf	(btemp+10)^0,f,c
 25129  01AE4A  0E00               	movlw	0
 25130  01AE4C  1635               	andwf	(btemp+11)^0,f,c
 25131                           
 25132                           ;stkvar	_k @ sp[(-4)+2]
 25133  01AE4E  0EFE               	movlw	-2
 25134  01AE50  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 25135  01AE56  0EFF               	movlw	-1
 25136  01AE58  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 25137                           
 25138                           ;stkvar	_k @ sp[(-4)+2]
 25139                           ;stkvar	_s @ sp[(-4)+0]
 25140  01AE5E  0EFC               	movlw	-4
 25141  01AE60  50E3               	movf	plusw1,w,c
 25142  01AE62  6E2A               	movwf	btemp^0,c
 25143  01AE64  0EFE               	movlw	-2
 25144  01AE66  50E3               	movf	plusw1,w,c
 25145  01AE68  262A               	addwf	btemp^0,f,c
 25146  01AE6A  0EFC               	movlw	-4
 25147  01AE6C  0060  F0AB  FFE3   	movff	btemp,plusw1
 25148  01AE72  0EFD               	movlw	-3
 25149  01AE74  50E3               	movf	plusw1,w,c
 25150  01AE76  6E2A               	movwf	btemp^0,c
 25151  01AE78  0EFF               	movlw	-1
 25152  01AE7A  50E3               	movf	plusw1,w,c
 25153  01AE7C  222A               	addwfc	btemp^0,f,c
 25154  01AE7E  0EFD               	movlw	-3
 25155  01AE80  0060  F0AB  FFE3   	movff	btemp,plusw1
 25156                           
 25157                           ;stkvar	_k @ sp[(-4)+2]
 25158                           ;stkvar	_n @ sp[(-4)+-6]
 25159  01AE86  0EF6               	movlw	-10
 25160  01AE88  50E3               	movf	plusw1,w,c
 25161  01AE8A  6E2A               	movwf	btemp^0,c
 25162  01AE8C  0EFE               	movlw	-2
 25163  01AE8E  50E3               	movf	plusw1,w,c
 25164  01AE90  5E2A               	subwf	btemp^0,f,c
 25165  01AE92  0EF6               	movlw	-10
 25166  01AE94  0060  F0AB  FFE3   	movff	btemp,plusw1
 25167  01AE9A  0EF7               	movlw	-9
 25168  01AE9C  50E3               	movf	plusw1,w,c
 25169  01AE9E  6E2A               	movwf	btemp^0,c
 25170  01AEA0  0EFF               	movlw	-1
 25171  01AEA2  50E3               	movf	plusw1,w,c
 25172  01AEA4  5A2A               	subwfb	btemp^0,f,c
 25173  01AEA6  0EF7               	movlw	-9
 25174  01AEA8  0060  F0AB  FFE3   	movff	btemp,plusw1
 25175  01AEAE  0EFC               	movlw	252
 25176  01AEB0  6E34               	movwf	(btemp+10)^0,c
 25177  01AEB2  0EFF               	movlw	255
 25178  01AEB4  6E35               	movwf	(btemp+11)^0,c
 25179                           
 25180                           ;stkvar	_n @ sp[(-4)+-6]
 25181  01AEB6  0EF6               	movlw	-10
 25182  01AEB8  006F FF8C  F02A    	movff	plusw1,btemp
 25183  01AEBE  5034               	movf	(btemp+10)^0,w,c
 25184  01AEC0  162A               	andwf	btemp^0,f,c
 25185  01AEC2  0EF6               	movlw	-10
 25186  01AEC4  0060  F0AB  FFE3   	movff	btemp,plusw1
 25187  01AECA  0EF7               	movlw	-9
 25188  01AECC  006F FF8C  F02A    	movff	plusw1,btemp
 25189  01AED2  5035               	movf	(btemp+11)^0,w,c
 25190  01AED4  162A               	andwf	btemp^0,f,c
 25191  01AED6  0EF7               	movlw	-9
 25192  01AED8  D02E               	goto	L24
 25193  01AEDA                     l15370:
 25194                           
 25195                           ;stkvar	_c @ sp[(-4)+-4]
 25196                           ;stkvar	_s @ sp[(-4)+0]
 25197  01AEDA  0EFC               	movlw	-4
 25198  01AEDC  006F FF8F FFD9     	movff	plusw1,fsr2l
 25199  01AEE2  0EFD               	movlw	-3
 25200  01AEE4  006F FF8F FFDA     	movff	plusw1,fsr2h
 25201  01AEEA  0EF8               	movlw	-8
 25202  01AEEC  006F FF8F FFDF     	movff	plusw1,indf2
 25203                           
 25204                           ;stkvar	_n @ sp[(-4)+-6]
 25205  01AEF2  0EF6               	movlw	-10
 25206  01AEF4  006F FF8C  F02A    	movff	plusw1,btemp
 25207  01AEFA  0E01               	movlw	1
 25208  01AEFC  5E2A               	subwf	btemp^0,f,c
 25209  01AEFE  0EF6               	movlw	-10
 25210  01AF00  0060  F0AB  FFE3   	movff	btemp,plusw1
 25211  01AF06  0EF7               	movlw	-9
 25212  01AF08  006F FF8C  F02A    	movff	plusw1,btemp
 25213  01AF0E  0E00               	movlw	0
 25214  01AF10  5A2A               	subwfb	btemp^0,f,c
 25215  01AF12  0EF7               	movlw	-9
 25216  01AF14  0060  F0AB  FFE3   	movff	btemp,plusw1
 25217                           
 25218                           ;stkvar	_s @ sp[(-4)+0]
 25219  01AF1A  0EFC               	movlw	-4
 25220  01AF1C  50E3               	movf	plusw1,w,c
 25221  01AF1E  0F01               	addlw	1
 25222  01AF20  6E2A               	movwf	btemp^0,c
 25223  01AF22  0EFC               	movlw	-4
 25224  01AF24  0060  F0AB  FFE3   	movff	btemp,plusw1
 25225  01AF2A  6A2A               	clrf	btemp^0,c
 25226  01AF2C  0EFD               	movlw	-3
 25227  01AF2E  50E3               	movf	plusw1,w,c
 25228  01AF30  202A               	addwfc	btemp^0,w,c
 25229  01AF32  6E2A               	movwf	btemp^0,c
 25230  01AF34  0EFD               	movlw	-3
 25231  01AF36                     L24:
 25232  01AF36  0060  F0AB  FFE3   	movff	btemp,plusw1
 25233                           
 25234                           ;stkvar	_n @ sp[(-4)+-6]
 25235  01AF3C  0EF6               	movlw	-10
 25236  01AF3E  006F FF8C  F02A    	movff	plusw1,btemp
 25237  01AF44  0EF7               	movlw	-9
 25238  01AF46  50E3               	movf	plusw1,w,c
 25239  01AF48  102A               	iorwf	btemp^0,w,c
 25240  01AF4A  A4D8               	btfss	status,2,c
 25241  01AF4C  D7C6               	goto	l15370
 25242  01AF4E                     u14270:
 25243                           
 25244                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 25245  01AF4E  0EF6               	movlw	246
 25246  01AF50  26E1               	addwf	fsr1l,f,c
 25247  01AF52  0EFF               	movlw	255
 25248  01AF54  22E2               	addwfc	fsr1h,f,c
 25249  01AF56  0012               	return		;funcret
 25250  01AF58                     __end_of_memset:
 25251                           	opt callstack 0
 25252                           
 25253 ;; *************** function _printf *****************
 25254 ;; Defined at:
 25255 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 25256 ;; Parameters:    Size  Location     Type
 25257 ;;  fmt             2  [STACK] PTR const unsigned char 
 25258 ;;		 -> STR_69(3), 
 25259 ;; Auto vars:     Size  Location     Type
 25260 ;;  ap              2  [STACK] PTR void [1]
 25261 ;;		 -> ?_printf(2), ?_sprintf(2), 
 25262 ;;  ret             2    0        int 
 25263 ;; Return value:  Size  Location     Type
 25264 ;;                  2  [STACK] int 
 25265 ;; Registers used:
 25266 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 25267 ;; Tracked objects:
 25268 ;;		On entry : 3F/3B
 25269 ;;		On exit  : 3F/0
 25270 ;;		Unchanged: 0/0
 25271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25276 ;;Total ram usage:        0 bytes
 25277 ;; Hardware stack levels used:    1
 25278 ;; Hardware stack levels required when called:   23
 25279 ;; This function calls:
 25280 ;;		_vfprintf
 25281 ;; This function is called by:
 25282 ;;		_eaDogM_WriteString
 25283 ;; This function uses a reentrant model
 25284 ;;
 25285                           
 25286                           	psect	text91
 25287  001526                     __ptext91:
 25288                           	opt callstack 0
 25289  001526                     _printf:
 25290                           	opt callstack 0
 25291                           
 25292                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25293  001526  52E6               	movf	postinc1,f,c
 25294  001528  52E6               	movf	postinc1,f,c
 25295                           
 25296                           ;stkvar	?_printf @ sp[(-2)+-3]
 25297                           
 25298                           ;incstack = 0
 25299  00152A  0EFB               	movlw	251
 25300  00152C  24E1               	addwf	fsr1l,w,c
 25301  00152E  6E34               	movwf	(btemp+10)^0,c
 25302  001530  0EFF               	movlw	255
 25303  001532  20E2               	addwfc	fsr1h,w,c
 25304  001534  6E35               	movwf	(btemp+11)^0,c
 25305                           
 25306                           ;stkvar	_ap @ sp[(-2)+0]
 25307  001536  0EFF               	movlw	-1
 25308  001538  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 25309  00153E  0EFE               	movlw	-2
 25310  001540  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 25311                           
 25312                           ;stkvar	_ap @ sp[(-2)+0]
 25313  001546  0EFE               	movlw	254
 25314  001548  24E1               	addwf	fsr1l,w,c
 25315  00154A  6E2A               	movwf	btemp^0,c
 25316  00154C  0EFF               	movlw	255
 25317  00154E  20E2               	addwfc	fsr1h,w,c
 25318  001550  6E2B               	movwf	(btemp+1)^0,c
 25319  001552  0060  F0AB  FFE6   	movff	btemp,postinc1
 25320  001558  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 25321                           
 25322                           ;stkvar	_fmt @ sp[(-4)+-3]
 25323  00155E  0EF9               	movlw	-7
 25324  001560  006F FF8F FFE6     	movff	plusw1,postinc1
 25325  001566  006F FF8F FFE6     	movff	plusw1,postinc1
 25326  00156C  0E00               	movlw	0
 25327  00156E  6EE6               	movwf	postinc1,c
 25328  001570  0E00               	movlw	0
 25329  001572  6EE6               	movwf	postinc1,c
 25330  001574  EC57  F003         	call	_vfprintf	;wreg free
 25331                           
 25332                           ; BSR set to: 0
 25333                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 25334  001578  52E5               	movf	postdec1,f,c
 25335  00157A  52E5               	movf	postdec1,f,c
 25336  00157C  52E5               	movf	postdec1,f,c
 25337  00157E  50E7               	movf	indf1,w,c
 25338  001580  5EE1               	subwf	fsr1l,f,c
 25339  001582  0E00               	movlw	0
 25340  001584  5AE2               	subwfb	fsr1h,f,c
 25341  001586  0012               	return		;funcret
 25342  001588                     __end_of_printf:
 25343                           	opt callstack 0
 25344                           
 25345 ;; *************** function _vfprintf *****************
 25346 ;; Defined at:
 25347 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 25348 ;; Parameters:    Size  Location     Type
 25349 ;;  fp              2  [STACK] PTR struct _IO_FILE
 25350 ;;		 -> f(6), NULL(0), 
 25351 ;;  fmt             2  [STACK] PTR const unsigned char 
 25352 ;;		 -> STR_90(127), STR_88(3), STR_87(3), STR_86(21), 
 25353 ;;		 -> STR_85(21), STR_84(21), STR_83(21), STR_82(21), 
 25354 ;;		 -> STR_81(21), STR_80(26), STR_79(15), STR_78(15), 
 25355 ;;		 -> STR_77(15), STR_76(15), STR_75(10), STR_74(10), 
 25356 ;;		 -> STR_73(19), STR_72(19), STR_69(3), STR_68(14), 
 25357 ;;		 -> STR_67(28), STR_66(28), STR_65(28), STR_64(22), 
 25358 ;;		 -> STR_63(22), STR_62(22), STR_61(22), STR_60(22), 
 25359 ;;		 -> STR_59(22), STR_58(22), STR_57(22), STR_56(22), 
 25360 ;;		 -> STR_55(21), STR_54(22), STR_53(22), STR_52(22), 
 25361 ;;		 -> STR_51(22), STR_50(22), STR_49(22), STR_48(24), 
 25362 ;;		 -> STR_47(24), STR_46(24), STR_45(30), STR_44(24), 
 25363 ;;		 -> STR_43(24), STR_42(23), STR_41(23), STR_40(23), 
 25364 ;;		 -> STR_39(23), STR_38(23), STR_37(23), STR_36(23), 
 25365 ;;		 -> STR_35(23), STR_34(23), STR_33(23), STR_32(23), 
 25366 ;;		 -> STR_31(23), STR_30(18), STR_29(17), STR_28(17), 
 25367 ;;		 -> STR_27(22), STR_26(22), STR_25(22), STR_24(14), 
 25368 ;;		 -> STR_23(27), STR_22(27), STR_21(23), STR_20(22), 
 25369 ;;		 -> STR_19(22), STR_18(22), STR_17(22), STR_16(23), 
 25370 ;;		 -> STR_15(23), STR_14(23), STR_13(26), STR_12(22), 
 25371 ;;		 -> STR_11(21), STR_10(21), STR_9(21), STR_8(21), 
 25372 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 25373 ;;		 -> STR_2(21), STR_1(21), 
 25374 ;;  ap              2  [STACK] PTR PTR void 
 25375 ;;		 -> ap(2), ap(2), 
 25376 ;; Auto vars:     Size  Location     Type
 25377 ;;  cfmt            2  [STACK] PTR unsigned char 
 25378 ;;		 -> STR_90(127), STR_88(3), STR_87(3), STR_86(21), 
 25379 ;;		 -> STR_85(21), STR_84(21), STR_83(21), STR_82(21), 
 25380 ;;		 -> STR_81(21), STR_80(26), STR_79(15), STR_78(15), 
 25381 ;;		 -> STR_77(15), STR_76(15), STR_75(10), STR_74(10), 
 25382 ;;		 -> STR_73(19), STR_72(19), STR_69(3), STR_68(14), 
 25383 ;;		 -> STR_67(28), STR_66(28), STR_65(28), STR_64(22), 
 25384 ;;		 -> STR_63(22), STR_62(22), STR_61(22), STR_60(22), 
 25385 ;;		 -> STR_59(22), STR_58(22), STR_57(22), STR_56(22), 
 25386 ;;		 -> STR_55(21), STR_54(22), STR_53(22), STR_52(22), 
 25387 ;;		 -> STR_51(22), STR_50(22), STR_49(22), STR_48(24), 
 25388 ;;		 -> STR_47(24), STR_46(24), STR_45(30), STR_44(24), 
 25389 ;;		 -> STR_43(24), STR_42(23), STR_41(23), STR_40(23), 
 25390 ;;		 -> STR_39(23), STR_38(23), STR_37(23), STR_36(23), 
 25391 ;;		 -> STR_35(23), STR_34(23), STR_33(23), STR_32(23), 
 25392 ;;		 -> STR_31(23), STR_30(18), STR_29(17), STR_28(17), 
 25393 ;;		 -> STR_27(22), STR_26(22), STR_25(22), STR_24(14), 
 25394 ;;		 -> STR_23(27), STR_22(27), STR_21(23), STR_20(22), 
 25395 ;;		 -> STR_19(22), STR_18(22), STR_17(22), STR_16(23), 
 25396 ;;		 -> STR_15(23), STR_14(23), STR_13(26), STR_12(22), 
 25397 ;;		 -> STR_11(21), STR_10(21), STR_9(21), STR_8(21), 
 25398 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 25399 ;;		 -> STR_2(21), STR_1(21), 
 25400 ;; Return value:  Size  Location     Type
 25401 ;;                  2  [STACK] int 
 25402 ;; Registers used:
 25403 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 25404 ;; Tracked objects:
 25405 ;;		On entry : 0/2
 25406 ;;		On exit  : 3F/0
 25407 ;;		Unchanged: 0/0
 25408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25413 ;;Total ram usage:        0 bytes
 25414 ;; Hardware stack levels used:    1
 25415 ;; Hardware stack levels required when called:   22
 25416 ;; This function calls:
 25417 ;;		_vfpfcnvrt
 25418 ;; This function is called by:
 25419 ;;		_sprintf
 25420 ;;		_printf
 25421 ;; This function uses a reentrant model
 25422 ;;
 25423                           
 25424                           	psect	text92
 25425  0006AE                     __ptext92:
 25426                           	opt callstack 0
 25427  0006AE                     _vfprintf:
 25428                           	opt callstack 0
 25429                           
 25430                           ; BSR set to: 0
 25431                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25432  0006AE  52E6               	movf	postinc1,f,c
 25433  0006B0  52E6               	movf	postinc1,f,c
 25434                           
 25435                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 25436                           ;stkvar	_fmt @ sp[(-2)+-4]
 25437                           
 25438                           ;incstack = 0
 25439 ;; hardware stack exceeded
 25440  0006B2  0EFA               	movlw	-6
 25441  0006B4  006F FF8C  F034    	movff	plusw1,btemp+10
 25442  0006BA  0EFB               	movlw	-5
 25443  0006BC  006F FF8C  F035    	movff	plusw1,btemp+11
 25444                           
 25445                           ;stkvar	_cfmt @ sp[(-2)+0]
 25446  0006C2  0EFF               	movlw	-1
 25447  0006C4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 25448  0006CA  0EFE               	movlw	-2
 25449  0006CC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 25450                           
 25451                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 25452  0006D2  0100               	movlb	0	; () banked
 25453  0006D4  6BBA               	clrf	_nout& (0+255),b
 25454  0006D6  6BBB               	clrf	(_nout+1)& (0+255),b
 25455                           
 25456                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 25457  0006D8  D021               	goto	l16556
 25458  0006DA                     l16554:
 25459                           
 25460                           ; BSR set to: 0
 25461                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 25462                           ;stkvar	_ap @ sp[(-2)+-6]
 25463  0006DA  0EF8               	movlw	-8
 25464  0006DC  006F FF8F FFE6     	movff	plusw1,postinc1
 25465  0006E2  006F FF8F FFE6     	movff	plusw1,postinc1
 25466                           
 25467                           ;stkvar	_cfmt @ sp[(-4)+0]
 25468  0006E8  0EFC               	movlw	252
 25469  0006EA  24E1               	addwf	fsr1l,w,c
 25470  0006EC  6E2A               	movwf	btemp^0,c
 25471  0006EE  0EFF               	movlw	255
 25472  0006F0  20E2               	addwfc	fsr1h,w,c
 25473  0006F2  6E2B               	movwf	(btemp+1)^0,c
 25474  0006F4  0060  F0AB  FFE6   	movff	btemp,postinc1
 25475  0006FA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 25476                           
 25477                           ;stkvar	_fp @ sp[(-6)+-2]
 25478  000700  0EF8               	movlw	-8
 25479  000702  006F FF8F FFE6     	movff	plusw1,postinc1
 25480  000708  006F FF8F FFE6     	movff	plusw1,postinc1
 25481  00070E  EC76  F09C         	call	_vfpfcnvrt	;wreg free
 25482  000712  502A               	movf	btemp^0,w,c
 25483  000714  0100               	movlb	0	; () banked
 25484  000716  27BA               	addwf	_nout& (0+255),f,b
 25485  000718  502B               	movf	(btemp+1)^0,w,c
 25486  00071A  23BB               	addwfc	(_nout+1)& (0+255),f,b
 25487  00071C                     l16556:
 25488                           
 25489                           ; BSR set to: 0
 25490                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 25491                           ;stkvar	_cfmt @ sp[(-2)+0]
 25492  00071C  50E1               	movf	fsr1l,w,c
 25493  00071E  0FFE               	addlw	-2
 25494  000720  6ED9               	movwf	fsr2l,c
 25495  000722  50E2               	movf	fsr1h,w,c
 25496  000724  6EDA               	movwf	fsr2h,c
 25497  000726  0EFF               	movlw	255
 25498  000728  22DA               	addwfc	fsr2h,f,c
 25499  00072A  006F FF7B FFF6     	movff	postinc2,tblptrl
 25500  000730  006F FF77 FFF7     	movff	postdec2,tblptrh
 25501  000736                     	if	0	;tblptru may be non-zero
 25502  000736                     	endif
 25503  000736                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25504  000736  0E00               	movlw	low (__mediumconst shr (0+16))
 25505  000738  6EF8               	movwf	tblptru,c
 25506  00073A                     	endif
 25507  00073A  0008               	tblrd		*
 25508  00073C  50F5               	movf	tablat,w,c
 25509  00073E  0900               	iorlw	0
 25510  000740  A4D8               	btfss	status,2,c
 25511  000742  D7CB               	goto	l16554
 25512                           
 25513                           ; BSR set to: 0
 25514                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 25515  000744  0060  F2E8  F02A   	movff	_nout,btemp
 25516  00074A  0060  F2EC  F02B   	movff	_nout+1,btemp+1
 25517                           
 25518                           ; BSR set to: 0
 25519                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 25520  000750  0EF8               	movlw	248
 25521  000752  26E1               	addwf	fsr1l,f,c
 25522  000754  0EFF               	movlw	255
 25523  000756  22E2               	addwfc	fsr1h,f,c
 25524  000758  0012               	return		;funcret
 25525  00075A                     __end_of_vfprintf:
 25526                           	opt callstack 0
 25527                           
 25528 ;; *************** function _vfpfcnvrt *****************
 25529 ;; Defined at:
 25530 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 25531 ;; Parameters:    Size  Location     Type
 25532 ;;  fp              2  [STACK] PTR struct _IO_FILE
 25533 ;;		 -> f(6), NULL(0), 
 25534 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 25535 ;;		 -> cfmt(2), 
 25536 ;;  ap              2  [STACK] PTR PTR void 
 25537 ;;		 -> ap(2), ap(2), 
 25538 ;; Auto vars:     Size  Location     Type
 25539 ;;  llu             8  [STACK] unsigned long long 
 25540 ;;  ll              8  [STACK] long long 
 25541 ;;  f               4  [STACK] long long 
 25542 ;;  ct              3  [STACK] unsigned char [3]
 25543 ;;  vp              3    0        PTR void 
 25544 ;;  cp              2  [STACK] PTR unsigned char 
 25545 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), STR_71(9), 
 25546 ;;		 -> STR_70(12), D.lcd(640), D(642), T(176), 
 25547 ;;		 -> STR_3(5), V(181), 
 25548 ;;  i               2    0        int 
 25549 ;;  done            2    0        int 
 25550 ;;  c               1  [STACK] unsigned char 
 25551 ;; Return value:  Size  Location     Type
 25552 ;;                  2  [STACK] int 
 25553 ;; Registers used:
 25554 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 25555 ;; Tracked objects:
 25556 ;;		On entry : 0/0
 25557 ;;		On exit  : 0/0
 25558 ;;		Unchanged: 0/0
 25559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25564 ;;Total ram usage:        0 bytes
 25565 ;; Hardware stack levels used:    1
 25566 ;; Hardware stack levels required when called:   21
 25567 ;; This function calls:
 25568 ;;		_atoi
 25569 ;;		_ctoa
 25570 ;;		_dtoa
 25571 ;;		_efgtoa
 25572 ;;		_fputc
 25573 ;;		_isdigit
 25574 ;;		_isupper
 25575 ;;		_stoa
 25576 ;;		_strncmp
 25577 ;;		_tolower
 25578 ;;		_utoa
 25579 ;;		_xtoa
 25580 ;; This function is called by:
 25581 ;;		_vfprintf
 25582 ;; This function uses a reentrant model
 25583 ;;
 25584                           
 25585                           	psect	text93
 25586  0138EC                     __ptext93:
 25587                           	opt callstack 0
 25588  0138EC                     _vfpfcnvrt:
 25589                           	opt callstack 0
 25590                           
 25591                           ; BSR set to: 0
 25592                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 25593  0138EC  0E20               	movlw	32
 25594  0138EE  26E1               	addwf	fsr1l,f,c
 25595  0138F0  0E00               	movlw	0
 25596  0138F2  22E2               	addwfc	fsr1h,f,c
 25597                           
 25598                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 25599                           ;stkvar	_fmt @ sp[(-32)+-4]
 25600                           
 25601                           ;incstack = 0
 25602 ;; hardware stack exceeded
 25603  0138F4  0EDC               	movlw	-36
 25604  0138F6  006F FF8F FFD9     	movff	plusw1,fsr2l
 25605  0138FC  0EDD               	movlw	-35
 25606  0138FE  006F FF8F FFDA     	movff	plusw1,fsr2h
 25607  013904  006F FF7B FFF6     	movff	postinc2,tblptrl
 25608  01390A  006F FF77 FFF7     	movff	postdec2,tblptrh
 25609  013910                     	if	0	;tblptru may be non-zero
 25610  013910                     	endif
 25611  013910                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25612  013910  0E00               	movlw	low (__mediumconst shr (0+16))
 25613  013912  6EF8               	movwf	tblptru,c
 25614  013914                     	endif
 25615  013914  0008               	tblrd		*
 25616  013916  50F5               	movf	tablat,w,c
 25617  013918  0A25               	xorlw	37
 25618  01391A  A4D8               	btfss	status,2,c
 25619  01391C  EF1D  F0A4         	goto	l16324
 25620                           
 25621                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 25622                           ;stkvar	_fmt @ sp[(-32)+-4]
 25623  013920  0EDC               	movlw	-36
 25624  013922  006F FF8F FFD9     	movff	plusw1,fsr2l
 25625  013928  0EDD               	movlw	-35
 25626  01392A  006F FF8F FFDA     	movff	plusw1,fsr2h
 25627  013930  2ADE               	incf	postinc2,f,c
 25628  013932  0E00               	movlw	0
 25629  013934  22DD               	addwfc	postdec2,f,c
 25630                           
 25631                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 25632  013936  6A4A               	clrf	_width^0,c
 25633  013938  6A4B               	clrf	(_width+1)^0,c
 25634  01393A  6A4E               	clrf	_flags^0,c
 25635  01393C  6A4F               	clrf	(_flags+1)^0,c
 25636                           
 25637                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 25638  01393E  684C               	setf	_prec^0,c
 25639  013940  684D               	setf	(_prec+1)^0,c
 25640                           
 25641                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 25642                           ;stkvar	_fmt @ sp[(-32)+-4]
 25643  013942  0EDC               	movlw	-36
 25644  013944  006F FF8F FFD9     	movff	plusw1,fsr2l
 25645  01394A  0EDD               	movlw	-35
 25646  01394C  006F FF8F FFDA     	movff	plusw1,fsr2h
 25647  013952  006F FF7B FFF6     	movff	postinc2,tblptrl
 25648  013958  006F FF77 FFF7     	movff	postdec2,tblptrh
 25649  01395E                     	if	0	;tblptru may be non-zero
 25650  01395E                     	endif
 25651  01395E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25652  01395E  0E00               	movlw	low (__mediumconst shr (0+16))
 25653  013960  6EF8               	movwf	tblptru,c
 25654  013962                     	endif
 25655  013962  0008               	tblrd		*
 25656  013964  50F5               	movf	tablat,w,c
 25657  013966  0A2A               	xorlw	42
 25658  013968  A4D8               	btfss	status,2,c
 25659  01396A  D031               	goto	l16142
 25660                           
 25661                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 25662                           ;stkvar	_fmt @ sp[(-32)+-4]
 25663  01396C  0EDC               	movlw	-36
 25664  01396E  006F FF8F FFD9     	movff	plusw1,fsr2l
 25665  013974  0EDD               	movlw	-35
 25666  013976  006F FF8F FFDA     	movff	plusw1,fsr2h
 25667  01397C  2ADE               	incf	postinc2,f,c
 25668  01397E  0E00               	movlw	0
 25669  013980  22DD               	addwfc	postdec2,f,c
 25670                           
 25671                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 25672                           ;stkvar	_ap @ sp[(-32)+-6]
 25673  013982  0EDA               	movlw	-38
 25674  013984  006F FF8F FFD9     	movff	plusw1,fsr2l
 25675  01398A  0EDB               	movlw	-37
 25676  01398C  006F FF8F FFDA     	movff	plusw1,fsr2h
 25677  013992  0E02               	movlw	2
 25678  013994  5EDE               	subwf	postinc2,f,c
 25679  013996  0E00               	movlw	0
 25680  013998  5ADD               	subwfb	postdec2,f,c
 25681  01399A  006F FF78  F034    	movff	postinc2,btemp+10
 25682  0139A0  006F FF74  F035    	movff	postdec2,btemp+11
 25683  0139A6  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 25684  0139AC  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 25685  0139B2  006F FF78  F04A    	movff	postinc2,_width
 25686  0139B8  006F FF74  F04B    	movff	postdec2,_width+1
 25687                           
 25688                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 25689  0139BE  AE4B               	btfss	(_width+1)^0,7,c
 25690  0139C0  D066               	goto	u15680
 25691                           
 25692                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 25693  0139C2  804E               	bsf	_flags^0,0,c
 25694                           
 25695                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 25696  0139C4  6C4A               	negf	_width^0,c
 25697  0139C6  1E4B               	comf	(_width+1)^0,f,c
 25698  0139C8  B0D8               	btfsc	status,0,c
 25699  0139CA  2A4B               	incf	(_width+1)^0,f,c
 25700  0139CC  D060               	goto	u15680
 25701  0139CE                     l16142:
 25702                           
 25703                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 25704                           ;stkvar	_fmt @ sp[(-32)+-4]
 25705  0139CE  0EDC               	movlw	-36
 25706  0139D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 25707  0139D6  0EDD               	movlw	-35
 25708  0139D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 25709  0139DE  006F FF78  F034    	movff	postinc2,btemp+10
 25710  0139E4  006F FF74  F035    	movff	postdec2,btemp+11
 25711  0139EA  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 25712  0139F0  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 25713  0139F6  ECA4  F0DF         	call	_atoi	;wreg free
 25714  0139FA  0060  F0A8  F04A   	movff	btemp,_width
 25715  013A00  0060  F0AC  F04B   	movff	btemp+1,_width+1
 25716                           
 25717                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 25718  013A06  D00B               	goto	l16146
 25719  013A08                     l16144:
 25720                           
 25721                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 25722                           ;stkvar	_fmt @ sp[(-32)+-4]
 25723  013A08  0EDC               	movlw	-36
 25724  013A0A  006F FF8F FFD9     	movff	plusw1,fsr2l
 25725  013A10  0EDD               	movlw	-35
 25726  013A12  006F FF8F FFDA     	movff	plusw1,fsr2h
 25727  013A18  2ADE               	incf	postinc2,f,c
 25728  013A1A  0E00               	movlw	0
 25729  013A1C  22DD               	addwfc	postdec2,f,c
 25730  013A1E                     l16146:
 25731  013A1E  0ED0               	movlw	208
 25732  013A20  6E34               	movwf	(btemp+10)^0,c
 25733  013A22  0EFF               	movlw	255
 25734  013A24  6E35               	movwf	(btemp+11)^0,c
 25735                           
 25736                           ;stkvar	_fmt @ sp[(-32)+-4]
 25737  013A26  0EDC               	movlw	-36
 25738  013A28  006F FF8F FFD9     	movff	plusw1,fsr2l
 25739  013A2E  0EDD               	movlw	-35
 25740  013A30  006F FF8F FFDA     	movff	plusw1,fsr2h
 25741  013A36  006F FF7B FFF6     	movff	postinc2,tblptrl
 25742  013A3C  006F FF77 FFF7     	movff	postdec2,tblptrh
 25743  013A42                     	if	0	;tblptru may be non-zero
 25744  013A42                     	endif
 25745  013A42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25746  013A42  0E00               	movlw	low (__mediumconst shr (0+16))
 25747  013A44  6EF8               	movwf	tblptru,c
 25748  013A46                     	endif
 25749  013A46  0008               	tblrd		*
 25750  013A48  50F5               	movf	tablat,w,c
 25751  013A4A  6E32               	movwf	(btemp+8)^0,c
 25752  013A4C  6A33               	clrf	(btemp+9)^0,c
 25753  013A4E  5034               	movf	(btemp+10)^0,w,c
 25754  013A50  2632               	addwf	(btemp+8)^0,f,c
 25755  013A52  5035               	movf	(btemp+11)^0,w,c
 25756  013A54  2233               	addwfc	(btemp+9)^0,f,c
 25757  013A56  5033               	movf	(btemp+9)^0,w,c
 25758  013A58  E106               	bnz	u15660
 25759  013A5A  0E0A               	movlw	10
 25760  013A5C  5C32               	subwf	(btemp+8)^0,w,c
 25761  013A5E  B0D8               	btfsc	status,0,c
 25762  013A60  D002               	goto	u15660
 25763  013A62  0E01               	movlw	1
 25764  013A64  D001               	goto	u15670
 25765  013A66                     u15660:
 25766  013A66  0E00               	movlw	0
 25767  013A68                     u15670:
 25768  013A68  6E34               	movwf	(btemp+10)^0,c
 25769  013A6A  6A35               	clrf	(btemp+11)^0,c
 25770                           
 25771                           ;stkvar	_vfpfcnvrt$6661 @ sp[(-32)+4]
 25772  013A6C  0EE4               	movlw	-28
 25773  013A6E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 25774  013A74  0EE5               	movlw	-27
 25775  013A76  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 25776                           
 25777                           ;stkvar	_vfpfcnvrt$6661 @ sp[(-32)+4]
 25778  013A7C  0EE4               	movlw	-28
 25779  013A7E  006F FF8C  F02A    	movff	plusw1,btemp
 25780  013A84  0EE5               	movlw	-27
 25781  013A86  50E3               	movf	plusw1,w,c
 25782  013A88  102A               	iorwf	btemp^0,w,c
 25783  013A8A  A4D8               	btfss	status,2,c
 25784  013A8C  D7BD               	goto	l16144
 25785  013A8E                     u15680:
 25786                           
 25787                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 25788                           ;stkvar	_fmt @ sp[(-32)+-4]
 25789  013A8E  0EDC               	movlw	-36
 25790  013A90  006F FF8F FFD9     	movff	plusw1,fsr2l
 25791  013A96  0EDD               	movlw	-35
 25792  013A98  006F FF8F FFDA     	movff	plusw1,fsr2h
 25793  013A9E  006F FF7B FFF6     	movff	postinc2,tblptrl
 25794  013AA4  006F FF77 FFF7     	movff	postdec2,tblptrh
 25795  013AAA                     	if	0	;tblptru may be non-zero
 25796  013AAA                     	endif
 25797  013AAA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25798  013AAA  0E00               	movlw	low (__mediumconst shr (0+16))
 25799  013AAC  6EF8               	movwf	tblptru,c
 25800  013AAE                     	endif
 25801  013AAE  0008               	tblrd		*
 25802  013AB0  50F5               	movf	tablat,w,c
 25803  013AB2  0A2E               	xorlw	46
 25804  013AB4  A4D8               	btfss	status,2,c
 25805  013AB6  D0AC               	goto	u15730
 25806                           
 25807                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 25808  013AB8  6A4C               	clrf	_prec^0,c
 25809  013ABA  6A4D               	clrf	(_prec+1)^0,c
 25810                           
 25811                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 25812                           ;stkvar	_fmt @ sp[(-32)+-4]
 25813  013ABC  0EDC               	movlw	-36
 25814  013ABE  006F FF8F FFD9     	movff	plusw1,fsr2l
 25815  013AC4  0EDD               	movlw	-35
 25816  013AC6  006F FF8F FFDA     	movff	plusw1,fsr2h
 25817  013ACC  2ADE               	incf	postinc2,f,c
 25818  013ACE  0E00               	movlw	0
 25819  013AD0  22DD               	addwfc	postdec2,f,c
 25820                           
 25821                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 25822                           ;stkvar	_fmt @ sp[(-32)+-4]
 25823  013AD2  0EDC               	movlw	-36
 25824  013AD4  006F FF8F FFD9     	movff	plusw1,fsr2l
 25825  013ADA  0EDD               	movlw	-35
 25826  013ADC  006F FF8F FFDA     	movff	plusw1,fsr2h
 25827  013AE2  006F FF7B FFF6     	movff	postinc2,tblptrl
 25828  013AE8  006F FF77 FFF7     	movff	postdec2,tblptrh
 25829  013AEE                     	if	0	;tblptru may be non-zero
 25830  013AEE                     	endif
 25831  013AEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25832  013AEE  0E00               	movlw	low (__mediumconst shr (0+16))
 25833  013AF0  6EF8               	movwf	tblptru,c
 25834  013AF2                     	endif
 25835  013AF2  0008               	tblrd		*
 25836  013AF4  50F5               	movf	tablat,w,c
 25837  013AF6  0A2A               	xorlw	42
 25838  013AF8  A4D8               	btfss	status,2,c
 25839  013AFA  D02A               	goto	l16164
 25840                           
 25841                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 25842                           ;stkvar	_fmt @ sp[(-32)+-4]
 25843  013AFC  0EDC               	movlw	-36
 25844  013AFE  006F FF8F FFD9     	movff	plusw1,fsr2l
 25845  013B04  0EDD               	movlw	-35
 25846  013B06  006F FF8F FFDA     	movff	plusw1,fsr2h
 25847  013B0C  2ADE               	incf	postinc2,f,c
 25848  013B0E  0E00               	movlw	0
 25849  013B10  22DD               	addwfc	postdec2,f,c
 25850                           
 25851                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 25852                           ;stkvar	_ap @ sp[(-32)+-6]
 25853  013B12  0EDA               	movlw	-38
 25854  013B14  006F FF8F FFD9     	movff	plusw1,fsr2l
 25855  013B1A  0EDB               	movlw	-37
 25856  013B1C  006F FF8F FFDA     	movff	plusw1,fsr2h
 25857  013B22  0E02               	movlw	2
 25858  013B24  5EDE               	subwf	postinc2,f,c
 25859  013B26  0E00               	movlw	0
 25860  013B28  5ADD               	subwfb	postdec2,f,c
 25861  013B2A  006F FF78  F034    	movff	postinc2,btemp+10
 25862  013B30  006F FF74  F035    	movff	postdec2,btemp+11
 25863  013B36  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 25864  013B3C  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 25865  013B42  006F FF78  F04C    	movff	postinc2,_prec
 25866  013B48  006F FF74  F04D    	movff	postdec2,_prec+1
 25867                           
 25868                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 25869  013B4E  D060               	goto	u15730
 25870  013B50                     l16164:
 25871                           
 25872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 25873                           ;stkvar	_fmt @ sp[(-32)+-4]
 25874  013B50  0EDC               	movlw	-36
 25875  013B52  006F FF8F FFD9     	movff	plusw1,fsr2l
 25876  013B58  0EDD               	movlw	-35
 25877  013B5A  006F FF8F FFDA     	movff	plusw1,fsr2h
 25878  013B60  006F FF78  F034    	movff	postinc2,btemp+10
 25879  013B66  006F FF74  F035    	movff	postdec2,btemp+11
 25880  013B6C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 25881  013B72  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 25882  013B78  ECA4  F0DF         	call	_atoi	;wreg free
 25883  013B7C  0060  F0A8  F04C   	movff	btemp,_prec
 25884  013B82  0060  F0AC  F04D   	movff	btemp+1,_prec+1
 25885                           
 25886                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 25887  013B88  D00B               	goto	l16168
 25888  013B8A                     l16166:
 25889                           
 25890                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 25891                           ;stkvar	_fmt @ sp[(-32)+-4]
 25892  013B8A  0EDC               	movlw	-36
 25893  013B8C  006F FF8F FFD9     	movff	plusw1,fsr2l
 25894  013B92  0EDD               	movlw	-35
 25895  013B94  006F FF8F FFDA     	movff	plusw1,fsr2h
 25896  013B9A  2ADE               	incf	postinc2,f,c
 25897  013B9C  0E00               	movlw	0
 25898  013B9E  22DD               	addwfc	postdec2,f,c
 25899  013BA0                     l16168:
 25900  013BA0  0ED0               	movlw	208
 25901  013BA2  6E34               	movwf	(btemp+10)^0,c
 25902  013BA4  0EFF               	movlw	255
 25903  013BA6  6E35               	movwf	(btemp+11)^0,c
 25904                           
 25905                           ;stkvar	_fmt @ sp[(-32)+-4]
 25906  013BA8  0EDC               	movlw	-36
 25907  013BAA  006F FF8F FFD9     	movff	plusw1,fsr2l
 25908  013BB0  0EDD               	movlw	-35
 25909  013BB2  006F FF8F FFDA     	movff	plusw1,fsr2h
 25910  013BB8  006F FF7B FFF6     	movff	postinc2,tblptrl
 25911  013BBE  006F FF77 FFF7     	movff	postdec2,tblptrh
 25912  013BC4                     	if	0	;tblptru may be non-zero
 25913  013BC4                     	endif
 25914  013BC4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25915  013BC4  0E00               	movlw	low (__mediumconst shr (0+16))
 25916  013BC6  6EF8               	movwf	tblptru,c
 25917  013BC8                     	endif
 25918  013BC8  0008               	tblrd		*
 25919  013BCA  50F5               	movf	tablat,w,c
 25920  013BCC  6E32               	movwf	(btemp+8)^0,c
 25921  013BCE  6A33               	clrf	(btemp+9)^0,c
 25922  013BD0  5034               	movf	(btemp+10)^0,w,c
 25923  013BD2  2632               	addwf	(btemp+8)^0,f,c
 25924  013BD4  5035               	movf	(btemp+11)^0,w,c
 25925  013BD6  2233               	addwfc	(btemp+9)^0,f,c
 25926  013BD8  5033               	movf	(btemp+9)^0,w,c
 25927  013BDA  E106               	bnz	u15710
 25928  013BDC  0E0A               	movlw	10
 25929  013BDE  5C32               	subwf	(btemp+8)^0,w,c
 25930  013BE0  B0D8               	btfsc	status,0,c
 25931  013BE2  D002               	goto	u15710
 25932  013BE4  0E01               	movlw	1
 25933  013BE6  D001               	goto	u15720
 25934  013BE8                     u15710:
 25935  013BE8  0E00               	movlw	0
 25936  013BEA                     u15720:
 25937  013BEA  6E34               	movwf	(btemp+10)^0,c
 25938  013BEC  6A35               	clrf	(btemp+11)^0,c
 25939                           
 25940                           ;stkvar	_vfpfcnvrt$6662 @ sp[(-32)+0]
 25941  013BEE  0EE0               	movlw	-32
 25942  013BF0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 25943  013BF6  0EE1               	movlw	-31
 25944  013BF8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 25945                           
 25946                           ;stkvar	_vfpfcnvrt$6662 @ sp[(-32)+0]
 25947  013BFE  0EE0               	movlw	-32
 25948  013C00  006F FF8C  F02A    	movff	plusw1,btemp
 25949  013C06  0EE1               	movlw	-31
 25950  013C08  50E3               	movf	plusw1,w,c
 25951  013C0A  102A               	iorwf	btemp^0,w,c
 25952  013C0C  A4D8               	btfss	status,2,c
 25953  013C0E  D7BD               	goto	l16166
 25954  013C10                     u15730:
 25955                           
 25956                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 25957                           ;stkvar	_fmt @ sp[(-32)+-4]
 25958  013C10  0EDC               	movlw	-36
 25959  013C12  006F FF8F FFD9     	movff	plusw1,fsr2l
 25960  013C18  0EDD               	movlw	-35
 25961  013C1A  006F FF8F FFDA     	movff	plusw1,fsr2h
 25962  013C20  006F FF7B FFF6     	movff	postinc2,tblptrl
 25963  013C26  006F FF77 FFF7     	movff	postdec2,tblptrh
 25964  013C2C                     	if	0	;tblptru may be non-zero
 25965  013C2C                     	endif
 25966  013C2C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25967  013C2C  0E00               	movlw	low (__mediumconst shr (0+16))
 25968  013C2E  6EF8               	movwf	tblptru,c
 25969  013C30                     	endif
 25970  013C30  0008               	tblrd		*
 25971  013C32  50F5               	movf	tablat,w,c
 25972  013C34  6EE6               	movwf	postinc1,c
 25973  013C36  0E00               	movlw	0
 25974  013C38  6EE6               	movwf	postinc1,c
 25975  013C3A  EC84  F007         	call	_tolower	;wreg free
 25976                           
 25977                           ;stkvar	_ct @ sp[(-32)+26]
 25978  013C3E  0EFA               	movlw	-6
 25979  013C40  0060  F0AB  FFE3   	movff	btemp,plusw1
 25980                           
 25981                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 25982                           ;stkvar	_ct @ sp[(-32)+26]
 25983  013C46  0EFA               	movlw	-6
 25984  013C48  50E3               	movf	plusw1,w,c
 25985  013C4A  B4D8               	btfsc	status,2,c
 25986  013C4C  D05B               	goto	l16184
 25987                           
 25988                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 25989                           ;stkvar	_ct @ sp[(-32)+26]
 25990  013C4E  0EFB               	movlw	251
 25991  013C50  24E1               	addwf	fsr1l,w,c
 25992  013C52  6ED9               	movwf	fsr2l,c
 25993  013C54  0EFF               	movlw	255
 25994  013C56  20E2               	addwfc	fsr1h,w,c
 25995  013C58  6EDA               	movwf	fsr2h,c
 25996                           
 25997                           ;stkvar	_fmt @ sp[(-32)+-4]
 25998  013C5A  0EDC               	movlw	-36
 25999  013C5C  006F FF8F FFE9     	movff	plusw1,fsr0l
 26000  013C62  0EDD               	movlw	-35
 26001  013C64  006F FF8F FFEA     	movff	plusw1,fsr0h
 26002  013C6A  006F FFB8  F034    	movff	postinc0,btemp+10
 26003  013C70  006F FFB4  F035    	movff	postdec0,btemp+11
 26004  013C76  0E01               	movlw	1
 26005  013C78  2634               	addwf	(btemp+10)^0,f,c
 26006  013C7A  0E00               	movlw	0
 26007  013C7C  2235               	addwfc	(btemp+11)^0,f,c
 26008  013C7E  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 26009  013C84  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 26010  013C8A                     	if	0	;tblptru may be non-zero
 26011  013C8A                     	endif
 26012  013C8A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26013  013C8A  0E00               	movlw	low (__mediumconst shr (0+16))
 26014  013C8C  6EF8               	movwf	tblptru,c
 26015  013C8E                     	endif
 26016  013C8E  0008               	tblrd		*
 26017  013C90  50F5               	movf	tablat,w,c
 26018  013C92  6EE6               	movwf	postinc1,c
 26019  013C94  0E00               	movlw	0
 26020  013C96  6EE6               	movwf	postinc1,c
 26021  013C98  EC84  F007         	call	_tolower	;wreg free
 26022  013C9C  502A               	movf	btemp^0,w,c
 26023  013C9E  6EDF               	movwf	indf2,c
 26024                           
 26025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 26026                           ;stkvar	_ct @ sp[(-32)+26]
 26027  013CA0  0EFB               	movlw	251
 26028  013CA2  24E1               	addwf	fsr1l,w,c
 26029  013CA4  6ED9               	movwf	fsr2l,c
 26030  013CA6  0EFF               	movlw	255
 26031  013CA8  20E2               	addwfc	fsr1h,w,c
 26032  013CAA  6EDA               	movwf	fsr2h,c
 26033  013CAC  50DF               	movf	indf2,w,c
 26034  013CAE  B4D8               	btfsc	status,2,c
 26035  013CB0  D029               	goto	l16184
 26036                           
 26037                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 26038                           ;stkvar	_ct @ sp[(-32)+26]
 26039  013CB2  0EFC               	movlw	252
 26040  013CB4  24E1               	addwf	fsr1l,w,c
 26041  013CB6  6ED9               	movwf	fsr2l,c
 26042  013CB8  0EFF               	movlw	255
 26043  013CBA  20E2               	addwfc	fsr1h,w,c
 26044  013CBC  6EDA               	movwf	fsr2h,c
 26045                           
 26046                           ;stkvar	_fmt @ sp[(-32)+-4]
 26047  013CBE  0EDC               	movlw	-36
 26048  013CC0  006F FF8F FFE9     	movff	plusw1,fsr0l
 26049  013CC6  0EDD               	movlw	-35
 26050  013CC8  006F FF8F FFEA     	movff	plusw1,fsr0h
 26051  013CCE  006F FFB8  F034    	movff	postinc0,btemp+10
 26052  013CD4  006F FFB4  F035    	movff	postdec0,btemp+11
 26053  013CDA  0E02               	movlw	2
 26054  013CDC  2634               	addwf	(btemp+10)^0,f,c
 26055  013CDE  0E00               	movlw	0
 26056  013CE0  2235               	addwfc	(btemp+11)^0,f,c
 26057  013CE2  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 26058  013CE8  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 26059  013CEE                     	if	0	;tblptru may be non-zero
 26060  013CEE                     	endif
 26061  013CEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26062  013CEE  0E00               	movlw	low (__mediumconst shr (0+16))
 26063  013CF0  6EF8               	movwf	tblptru,c
 26064  013CF2                     	endif
 26065  013CF2  0008               	tblrd		*
 26066  013CF4  50F5               	movf	tablat,w,c
 26067  013CF6  6EE6               	movwf	postinc1,c
 26068  013CF8  0E00               	movlw	0
 26069  013CFA  6EE6               	movwf	postinc1,c
 26070  013CFC  EC84  F007         	call	_tolower	;wreg free
 26071  013D00  502A               	movf	btemp^0,w,c
 26072  013D02  6EDF               	movwf	indf2,c
 26073  013D04                     l16184:
 26074                           
 26075                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 26076                           ;stkvar	_fmt @ sp[(-32)+-4]
 26077  013D04  0EDC               	movlw	-36
 26078  013D06  006F FF8F FFD9     	movff	plusw1,fsr2l
 26079  013D0C  0EDD               	movlw	-35
 26080  013D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
 26081  013D14  006F FF7B FFF6     	movff	postinc2,tblptrl
 26082  013D1A  006F FF77 FFF7     	movff	postdec2,tblptrh
 26083  013D20                     	if	0	;tblptru may be non-zero
 26084  013D20                     	endif
 26085  013D20                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26086  013D20  0E00               	movlw	low (__mediumconst shr (0+16))
 26087  013D22  6EF8               	movwf	tblptru,c
 26088  013D24                     	endif
 26089  013D24  0008               	tblrd		*
 26090  013D26  50F5               	movf	tablat,w,c
 26091  013D28  0A63               	xorlw	99
 26092  013D2A  A4D8               	btfss	status,2,c
 26093  013D2C  D037               	goto	l16194
 26094                           
 26095                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 26096                           ;stkvar	_fmt @ sp[(-32)+-4]
 26097  013D2E  0EDC               	movlw	-36
 26098  013D30  006F FF8F FFD9     	movff	plusw1,fsr2l
 26099  013D36  0EDD               	movlw	-35
 26100  013D38  006F FF8F FFDA     	movff	plusw1,fsr2h
 26101  013D3E  2ADE               	incf	postinc2,f,c
 26102  013D40  0E00               	movlw	0
 26103  013D42  22DD               	addwfc	postdec2,f,c
 26104                           
 26105                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 26106                           ;stkvar	_ap @ sp[(-32)+-6]
 26107  013D44  0EDA               	movlw	-38
 26108  013D46  006F FF8F FFD9     	movff	plusw1,fsr2l
 26109  013D4C  0EDB               	movlw	-37
 26110  013D4E  006F FF8F FFDA     	movff	plusw1,fsr2h
 26111  013D54  0E02               	movlw	2
 26112  013D56  5EDE               	subwf	postinc2,f,c
 26113  013D58  0E00               	movlw	0
 26114  013D5A  5ADD               	subwfb	postdec2,f,c
 26115  013D5C  006F FF78  F034    	movff	postinc2,btemp+10
 26116  013D62  006F FF74  F035    	movff	postdec2,btemp+11
 26117  013D68  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26118  013D6E  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26119  013D74  50DF               	movf	indf2,w,c
 26120  013D76  6E35               	movwf	(btemp+11)^0,c
 26121                           
 26122                           ;stkvar	_c @ sp[(-32)+31]
 26123  013D78  0EFF               	movlw	-1
 26124  013D7A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26125                           
 26126                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 26127                           ;stkvar	_c @ sp[(-32)+31]
 26128  013D80  0EFF               	movlw	-1
 26129  013D82  50E3               	movf	plusw1,w,c
 26130  013D84  6EE6               	movwf	postinc1,c
 26131                           
 26132                           ;stkvar	_fp @ sp[(-33)+-2]
 26133  013D86  0EDD               	movlw	-35
 26134  013D88  006F FF8F FFE6     	movff	plusw1,postinc1
 26135  013D8E  006F FF8F FFE6     	movff	plusw1,postinc1
 26136  013D94  ECFE  F006         	call	_ctoa	;wreg free
 26137  013D98  EF47  F0A4         	goto	l2689
 26138  013D9C                     l16194:
 26139                           
 26140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 26141                           ;stkvar	_fmt @ sp[(-32)+-4]
 26142  013D9C  0EDC               	movlw	-36
 26143  013D9E  006F FF8F FFD9     	movff	plusw1,fsr2l
 26144  013DA4  0EDD               	movlw	-35
 26145  013DA6  006F FF8F FFDA     	movff	plusw1,fsr2h
 26146  013DAC  006F FF7B FFF6     	movff	postinc2,tblptrl
 26147  013DB2  006F FF77 FFF7     	movff	postdec2,tblptrh
 26148  013DB8                     	if	0	;tblptru may be non-zero
 26149  013DB8                     	endif
 26150  013DB8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26151  013DB8  0E00               	movlw	low (__mediumconst shr (0+16))
 26152  013DBA  6EF8               	movwf	tblptru,c
 26153  013DBC                     	endif
 26154  013DBC  0008               	tblrd		*
 26155  013DBE  50F5               	movf	tablat,w,c
 26156  013DC0  0A64               	xorlw	100
 26157  013DC2  B4D8               	btfsc	status,2,c
 26158  013DC4  D015               	goto	u15780
 26159                           
 26160                           ;stkvar	_fmt @ sp[(-32)+-4]
 26161  013DC6  0EDC               	movlw	-36
 26162  013DC8  006F FF8F FFD9     	movff	plusw1,fsr2l
 26163  013DCE  0EDD               	movlw	-35
 26164  013DD0  006F FF8F FFDA     	movff	plusw1,fsr2h
 26165  013DD6  006F FF7B FFF6     	movff	postinc2,tblptrl
 26166  013DDC  006F FF77 FFF7     	movff	postdec2,tblptrh
 26167  013DE2                     	if	0	;tblptru may be non-zero
 26168  013DE2                     	endif
 26169  013DE2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26170  013DE2  0E00               	movlw	low (__mediumconst shr (0+16))
 26171  013DE4  6EF8               	movwf	tblptru,c
 26172  013DE6                     	endif
 26173  013DE6  0008               	tblrd		*
 26174  013DE8  50F5               	movf	tablat,w,c
 26175  013DEA  0A69               	xorlw	105
 26176  013DEC  A4D8               	btfss	status,2,c
 26177  013DEE  D076               	goto	l16206
 26178  013DF0                     u15780:
 26179                           
 26180                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 26181                           ;stkvar	_fmt @ sp[(-32)+-4]
 26182  013DF0  0EDC               	movlw	-36
 26183  013DF2  006F FF8F FFD9     	movff	plusw1,fsr2l
 26184  013DF8  0EDD               	movlw	-35
 26185  013DFA  006F FF8F FFDA     	movff	plusw1,fsr2h
 26186  013E00  2ADE               	incf	postinc2,f,c
 26187  013E02  0E00               	movlw	0
 26188  013E04  22DD               	addwfc	postdec2,f,c
 26189                           
 26190                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 26191                           ;stkvar	_ap @ sp[(-32)+-6]
 26192  013E06  0EDA               	movlw	-38
 26193  013E08  006F FF8F FFD9     	movff	plusw1,fsr2l
 26194  013E0E  0EDB               	movlw	-37
 26195  013E10  006F FF8F FFDA     	movff	plusw1,fsr2h
 26196  013E16  0E02               	movlw	2
 26197  013E18  5EDE               	subwf	postinc2,f,c
 26198  013E1A  0E00               	movlw	0
 26199  013E1C  5ADD               	subwfb	postdec2,f,c
 26200  013E1E  006F FF78  F034    	movff	postinc2,btemp+10
 26201  013E24  006F FF74  F035    	movff	postdec2,btemp+11
 26202  013E2A  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26203  013E30  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26204  013E36  006F FF78  F034    	movff	postinc2,btemp+10
 26205  013E3C  006F FF74  F035    	movff	postdec2,btemp+11
 26206                           
 26207                           ;stkvar	_ll @ sp[(-32)+14]
 26208  013E42  0EEE               	movlw	-18
 26209  013E44  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26210  013E4A  0EEF               	movlw	-17
 26211  013E4C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26212  013E52  6A2A               	clrf	btemp^0,c
 26213  013E54  BEE3               	btfsc	plusw1,7,c
 26214  013E56  682A               	setf	btemp^0,c
 26215  013E58  0EF0               	movlw	-16
 26216  013E5A  0060  F0AB  FFE3   	movff	btemp,plusw1
 26217  013E60  0EF1               	movlw	-15
 26218  013E62  0060  F0AB  FFE3   	movff	btemp,plusw1
 26219  013E68  0EF2               	movlw	-14
 26220  013E6A  0060  F0AB  FFE3   	movff	btemp,plusw1
 26221  013E70  0EF3               	movlw	-13
 26222  013E72  0060  F0AB  FFE3   	movff	btemp,plusw1
 26223  013E78  0EF4               	movlw	-12
 26224  013E7A  0060  F0AB  FFE3   	movff	btemp,plusw1
 26225  013E80  0EF5               	movlw	-11
 26226  013E82  0060  F0AB  FFE3   	movff	btemp,plusw1
 26227  013E88                     l16202:
 26228                           
 26229                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 26230                           ;stkvar	_ll @ sp[(-32)+14]
 26231  013E88  50E1               	movf	fsr1l,w,c
 26232  013E8A  0FEE               	addlw	-18
 26233  013E8C  6ED9               	movwf	fsr2l,c
 26234  013E8E  50E2               	movf	fsr1h,w,c
 26235  013E90  6EDA               	movwf	fsr2h,c
 26236  013E92  0EFF               	movlw	255
 26237  013E94  22DA               	addwfc	fsr2h,f,c
 26238  013E96  006F FF7B FFE6     	movff	postinc2,postinc1
 26239  013E9C  006F FF7B FFE6     	movff	postinc2,postinc1
 26240  013EA2  006F FF7B FFE6     	movff	postinc2,postinc1
 26241  013EA8  006F FF7B FFE6     	movff	postinc2,postinc1
 26242  013EAE  006F FF7B FFE6     	movff	postinc2,postinc1
 26243  013EB4  006F FF7B FFE6     	movff	postinc2,postinc1
 26244  013EBA  006F FF7B FFE6     	movff	postinc2,postinc1
 26245  013EC0  006F FF7B FFE6     	movff	postinc2,postinc1
 26246                           
 26247                           ;stkvar	_fp @ sp[(-40)+-2]
 26248  013EC6  0ED6               	movlw	-42
 26249  013EC8  006F FF8F FFE6     	movff	plusw1,postinc1
 26250  013ECE  006F FF8F FFE6     	movff	plusw1,postinc1
 26251  013ED4  EC84  F0C5         	call	_dtoa	;wreg free
 26252  013ED8  EF47  F0A4         	goto	l2689
 26253  013EDC                     l16206:
 26254                           
 26255                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 26256  013EDC  0E02               	movlw	2
 26257  013EDE  6EE6               	movwf	postinc1,c
 26258  013EE0  0E00               	movlw	0
 26259  013EE2  6EE6               	movwf	postinc1,c
 26260  013EE4  0EED               	movlw	low STR_99
 26261  013EE6  6EE6               	movwf	postinc1,c
 26262  013EE8  0EFF               	movlw	high STR_99
 26263  013EEA  6EE6               	movwf	postinc1,c
 26264                           
 26265                           ;stkvar	_fmt @ sp[(-36)+-4]
 26266  013EEC  0ED8               	movlw	-40
 26267  013EEE  006F FF8F FFD9     	movff	plusw1,fsr2l
 26268  013EF4  0ED9               	movlw	-39
 26269  013EF6  006F FF8F FFDA     	movff	plusw1,fsr2h
 26270  013EFC  006F FF78  F034    	movff	postinc2,btemp+10
 26271  013F02  006F FF74  F035    	movff	postdec2,btemp+11
 26272  013F08  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 26273  013F0E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 26274  013F14  EC88  F0E6         	call	_strncmp	;wreg free
 26275  013F18  502A               	movf	btemp^0,w,c
 26276  013F1A  102B               	iorwf	(btemp+1)^0,w,c
 26277  013F1C  B4D8               	btfsc	status,2,c
 26278  013F1E  D022               	goto	u15800
 26279  013F20  0E02               	movlw	2
 26280  013F22  6EE6               	movwf	postinc1,c
 26281  013F24  0E00               	movlw	0
 26282  013F26  6EE6               	movwf	postinc1,c
 26283  013F28  0EF3               	movlw	low STR_103
 26284  013F2A  6EE6               	movwf	postinc1,c
 26285  013F2C  0EFF               	movlw	high STR_103
 26286  013F2E  6EE6               	movwf	postinc1,c
 26287                           
 26288                           ;stkvar	_fmt @ sp[(-36)+-4]
 26289  013F30  0ED8               	movlw	-40
 26290  013F32  006F FF8F FFD9     	movff	plusw1,fsr2l
 26291  013F38  0ED9               	movlw	-39
 26292  013F3A  006F FF8F FFDA     	movff	plusw1,fsr2h
 26293  013F40  006F FF78  F034    	movff	postinc2,btemp+10
 26294  013F46  006F FF74  F035    	movff	postdec2,btemp+11
 26295  013F4C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 26296  013F52  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 26297  013F58  EC88  F0E6         	call	_strncmp	;wreg free
 26298  013F5C  502A               	movf	btemp^0,w,c
 26299  013F5E  102B               	iorwf	(btemp+1)^0,w,c
 26300  013F60  A4D8               	btfss	status,2,c
 26301  013F62  D069               	goto	l16218
 26302  013F64                     u15800:
 26303                           
 26304                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 26305                           ;stkvar	_fmt @ sp[(-32)+-4]
 26306  013F64  0EDC               	movlw	-36
 26307  013F66  006F FF8F FFD9     	movff	plusw1,fsr2l
 26308  013F6C  0EDD               	movlw	-35
 26309  013F6E  006F FF8F FFDA     	movff	plusw1,fsr2h
 26310  013F74  0E02               	movlw	2
 26311  013F76  26DE               	addwf	postinc2,f,c
 26312  013F78  0E00               	movlw	0
 26313  013F7A  22DD               	addwfc	postdec2,f,c
 26314                           
 26315                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 26316                           ;stkvar	_ap @ sp[(-32)+-6]
 26317  013F7C  0EDA               	movlw	-38
 26318  013F7E  006F FF8F FFD9     	movff	plusw1,fsr2l
 26319  013F84  0EDB               	movlw	-37
 26320  013F86  006F FF8F FFDA     	movff	plusw1,fsr2h
 26321  013F8C  0E04               	movlw	4
 26322  013F8E  5EDE               	subwf	postinc2,f,c
 26323  013F90  0E00               	movlw	0
 26324  013F92  5ADD               	subwfb	postdec2,f,c
 26325  013F94  006F FF78  F034    	movff	postinc2,btemp+10
 26326  013F9A  006F FF74  F035    	movff	postdec2,btemp+11
 26327  013FA0  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26328  013FA6  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26329  013FAC  006F FF78  F032    	movff	postinc2,btemp+8
 26330  013FB2  006F FF78  F033    	movff	postinc2,btemp+9
 26331  013FB8  006F FF78  F034    	movff	postinc2,btemp+10
 26332  013FBE  006F FF78  F035    	movff	postinc2,btemp+11
 26333  013FC4  0060  F0C8  F03A   	movff	btemp+8,btemp+16
 26334  013FCA  0060  F0CC  F03B   	movff	btemp+9,btemp+17
 26335  013FD0  0060  F0D0  F03C   	movff	btemp+10,btemp+18
 26336  013FD6  0060  F0D4  F03D   	movff	btemp+11,btemp+19
 26337  013FDC  6A3E               	clrf	(btemp+20)^0,c
 26338  013FDE  BE3D               	btfsc	(btemp+19)^0,7,c
 26339  013FE0  683E               	setf	(btemp+20)^0,c
 26340  013FE2  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 26341  013FE8  0060  F0F8  F040   	movff	btemp+20,btemp+22
 26342  013FEE  0060  F0F8  F041   	movff	btemp+20,btemp+23
 26343                           
 26344                           ;stkvar	_ll @ sp[(-32)+14]
 26345  013FF4  0EEE               	movlw	-18
 26346  013FF6  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 26347  013FFC  0EEF               	movlw	-17
 26348  013FFE  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 26349  014004  0EF0               	movlw	-16
 26350  014006  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 26351  01400C  0EF1               	movlw	-15
 26352  01400E  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 26353  014014  0EF2               	movlw	-14
 26354  014016  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 26355  01401C  0EF3               	movlw	-13
 26356  01401E  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 26357  014024  0EF4               	movlw	-12
 26358  014026  0060  F103  FFE3   	movff	btemp+22,plusw1
 26359  01402C  0EF5               	movlw	-11
 26360  01402E  0060  F107  FFE3   	movff	btemp+23,plusw1
 26361  014034  D729               	goto	l16202
 26362  014036                     l16218:
 26363                           
 26364                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 26365                           ;stkvar	_ct @ sp[(-32)+26]
 26366  014036  0EFA               	movlw	-6
 26367  014038  006F FF8C  F02A    	movff	plusw1,btemp
 26368  01403E  0E66               	movlw	102
 26369  014040  182A               	xorwf	btemp^0,w,c
 26370  014042  A4D8               	btfss	status,2,c
 26371  014044  D06E               	goto	l16230
 26372                           
 26373                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 26374                           ;stkvar	_fmt @ sp[(-32)+-4]
 26375  014046  0EDC               	movlw	-36
 26376  014048  006F FF8F FFD9     	movff	plusw1,fsr2l
 26377  01404E  0EDD               	movlw	-35
 26378  014050  006F FF8F FFDA     	movff	plusw1,fsr2h
 26379  014056  006F FF7B FFF6     	movff	postinc2,tblptrl
 26380  01405C  006F FF77 FFF7     	movff	postdec2,tblptrh
 26381  014062                     	if	0	;tblptru may be non-zero
 26382  014062                     	endif
 26383  014062                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26384  014062  0E00               	movlw	low (__mediumconst shr (0+16))
 26385  014064  6EF8               	movwf	tblptru,c
 26386  014066                     	endif
 26387                           
 26388                           ;stkvar	_c @ sp[(-32)+31]
 26389  014066  0008               	tblrd		*
 26390  014068  0EFF               	movlw	-1
 26391  01406A  006F FFD7 FFE3     	movff	tablat,plusw1
 26392                           
 26393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 26394                           ;stkvar	_fmt @ sp[(-32)+-4]
 26395  014070  0EDC               	movlw	-36
 26396  014072  006F FF8F FFD9     	movff	plusw1,fsr2l
 26397  014078  0EDD               	movlw	-35
 26398  01407A  006F FF8F FFDA     	movff	plusw1,fsr2h
 26399  014080  2ADE               	incf	postinc2,f,c
 26400  014082  0E00               	movlw	0
 26401  014084  22DD               	addwfc	postdec2,f,c
 26402                           
 26403                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 26404                           ;stkvar	_ap @ sp[(-32)+-6]
 26405  014086  0EDA               	movlw	-38
 26406  014088  006F FF8F FFD9     	movff	plusw1,fsr2l
 26407  01408E  0EDB               	movlw	-37
 26408  014090  006F FF8F FFDA     	movff	plusw1,fsr2h
 26409  014096  0E04               	movlw	4
 26410  014098  5EDE               	subwf	postinc2,f,c
 26411  01409A  0E00               	movlw	0
 26412  01409C  5ADD               	subwfb	postdec2,f,c
 26413  01409E  006F FF78  F034    	movff	postinc2,btemp+10
 26414  0140A4  006F FF74  F035    	movff	postdec2,btemp+11
 26415  0140AA  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26416  0140B0  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26417  0140B6  006F FF78  F032    	movff	postinc2,btemp+8
 26418  0140BC  006F FF78  F033    	movff	postinc2,btemp+9
 26419  0140C2  006F FF78  F034    	movff	postinc2,btemp+10
 26420  0140C8  006F FF78  F035    	movff	postinc2,btemp+11
 26421                           
 26422                           ;stkvar	_f @ sp[(-32)+22]
 26423  0140CE  0EF6               	movlw	-10
 26424  0140D0  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 26425  0140D6  0EF7               	movlw	-9
 26426  0140D8  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 26427  0140DE  0EF8               	movlw	-8
 26428  0140E0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26429  0140E6  0EF9               	movlw	-7
 26430  0140E8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26431  0140EE                     l16226:
 26432                           
 26433                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 26434                           ;stkvar	_c @ sp[(-32)+31]
 26435  0140EE  0EFF               	movlw	-1
 26436  0140F0  50E3               	movf	plusw1,w,c
 26437  0140F2  6EE6               	movwf	postinc1,c
 26438                           
 26439                           ;stkvar	_f @ sp[(-33)+22]
 26440  0140F4  0EF5               	movlw	-11
 26441  0140F6  006F FF8F FFE6     	movff	plusw1,postinc1
 26442  0140FC  006F FF8F FFE6     	movff	plusw1,postinc1
 26443  014102  006F FF8F FFE6     	movff	plusw1,postinc1
 26444  014108  006F FF8F FFE6     	movff	plusw1,postinc1
 26445                           
 26446                           ;stkvar	_fp @ sp[(-37)+-2]
 26447  01410E  0ED9               	movlw	-39
 26448  014110  006F FF8F FFE6     	movff	plusw1,postinc1
 26449  014116  006F FF8F FFE6     	movff	plusw1,postinc1
 26450  01411C  ECEB  F08A         	call	_efgtoa	;wreg free
 26451  014120  D3B6               	goto	l2689
 26452  014122                     l16230:
 26453                           
 26454                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 26455  014122  0E02               	movlw	2
 26456  014124  6EE6               	movwf	postinc1,c
 26457  014126  0E00               	movlw	0
 26458  014128  6EE6               	movwf	postinc1,c
 26459  01412A  0EF0               	movlw	low STR_108
 26460  01412C  6EE6               	movwf	postinc1,c
 26461  01412E  0EFF               	movlw	high STR_108
 26462  014130  6EE6               	movwf	postinc1,c
 26463                           
 26464                           ;stkvar	_ct @ sp[(-36)+26]
 26465  014132  0EF6               	movlw	246
 26466  014134  24E1               	addwf	fsr1l,w,c
 26467  014136  6E2A               	movwf	btemp^0,c
 26468  014138  0EFF               	movlw	255
 26469  01413A  20E2               	addwfc	fsr1h,w,c
 26470  01413C  6E2B               	movwf	(btemp+1)^0,c
 26471  01413E  0060  F0AB  FFE6   	movff	btemp,postinc1
 26472  014144  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 26473  01414A  EC88  F0E6         	call	_strncmp	;wreg free
 26474  01414E  502A               	movf	btemp^0,w,c
 26475  014150  102B               	iorwf	(btemp+1)^0,w,c
 26476  014152  A4D8               	btfss	status,2,c
 26477  014154  D096               	goto	l16250
 26478                           
 26479                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 26480                           ;stkvar	_fmt @ sp[(-32)+-4]
 26481  014156  0EDC               	movlw	-36
 26482  014158  006F FF8F FFD9     	movff	plusw1,fsr2l
 26483  01415E  0EDD               	movlw	-35
 26484  014160  006F FF8F FFDA     	movff	plusw1,fsr2h
 26485  014166  006F FF78  F034    	movff	postinc2,btemp+10
 26486  01416C  006F FF74  F035    	movff	postdec2,btemp+11
 26487  014172  0E01               	movlw	1
 26488  014174  2634               	addwf	(btemp+10)^0,f,c
 26489  014176  0E00               	movlw	0
 26490  014178  2235               	addwfc	(btemp+11)^0,f,c
 26491  01417A  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 26492  014180  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 26493  014186                     	if	0	;tblptru may be non-zero
 26494  014186                     	endif
 26495  014186                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26496  014186  0E00               	movlw	low (__mediumconst shr (0+16))
 26497  014188  6EF8               	movwf	tblptru,c
 26498  01418A                     	endif
 26499                           
 26500                           ;stkvar	_c @ sp[(-32)+31]
 26501  01418A  0008               	tblrd		*
 26502  01418C  0EFF               	movlw	-1
 26503  01418E  006F FFD7 FFE3     	movff	tablat,plusw1
 26504  014194  0EBF               	movlw	191
 26505  014196  6E34               	movwf	(btemp+10)^0,c
 26506  014198  0EFF               	movlw	255
 26507  01419A  6E35               	movwf	(btemp+11)^0,c
 26508                           
 26509                           ;stkvar	_fmt @ sp[(-32)+-4]
 26510  01419C  0EDC               	movlw	-36
 26511  01419E  006F FF8F FFD9     	movff	plusw1,fsr2l
 26512  0141A4  0EDD               	movlw	-35
 26513  0141A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 26514  0141AC  006F FF7B FFF6     	movff	postinc2,tblptrl
 26515  0141B2  006F FF77 FFF7     	movff	postdec2,tblptrh
 26516  0141B8                     	if	0	;tblptru may be non-zero
 26517  0141B8                     	endif
 26518  0141B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26519  0141B8  0E00               	movlw	low (__mediumconst shr (0+16))
 26520  0141BA  6EF8               	movwf	tblptru,c
 26521  0141BC                     	endif
 26522  0141BC  0008               	tblrd		*
 26523  0141BE  50F5               	movf	tablat,w,c
 26524  0141C0  6E32               	movwf	(btemp+8)^0,c
 26525  0141C2  6A33               	clrf	(btemp+9)^0,c
 26526  0141C4  5034               	movf	(btemp+10)^0,w,c
 26527  0141C6  2632               	addwf	(btemp+8)^0,f,c
 26528  0141C8  5035               	movf	(btemp+11)^0,w,c
 26529  0141CA  2233               	addwfc	(btemp+9)^0,f,c
 26530  0141CC  5033               	movf	(btemp+9)^0,w,c
 26531  0141CE  E106               	bnz	u15830
 26532  0141D0  0E1A               	movlw	26
 26533  0141D2  5C32               	subwf	(btemp+8)^0,w,c
 26534  0141D4  B0D8               	btfsc	status,0,c
 26535  0141D6  D002               	goto	u15830
 26536  0141D8  0E01               	movlw	1
 26537  0141DA  D001               	goto	u15840
 26538  0141DC                     u15830:
 26539  0141DC  0E00               	movlw	0
 26540  0141DE                     u15840:
 26541  0141DE  6E34               	movwf	(btemp+10)^0,c
 26542  0141E0  6A35               	clrf	(btemp+11)^0,c
 26543                           
 26544                           ;stkvar	_vfpfcnvrt$6673 @ sp[(-32)+2]
 26545  0141E2  0EE2               	movlw	-30
 26546  0141E4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26547  0141EA  0EE3               	movlw	-29
 26548  0141EC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26549                           
 26550                           ;stkvar	_vfpfcnvrt$6673 @ sp[(-32)+2]
 26551  0141F2  0EE2               	movlw	-30
 26552  0141F4  006F FF8C  F02A    	movff	plusw1,btemp
 26553  0141FA  0EE3               	movlw	-29
 26554  0141FC  50E3               	movf	plusw1,w,c
 26555  0141FE  102A               	iorwf	btemp^0,w,c
 26556                           
 26557                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 26558                           ;stkvar	_ap @ sp[(-32)+-6]
 26559                           
 26560                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 26561                           
 26562                           ;stkvar	_f @ sp[(-32)+22]
 26563                           
 26564                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 26565                           ;stkvar	_ap @ sp[(-32)+-6]
 26566  014200  0EDA               	movlw	-38
 26567  014202  006F FF8F FFD9     	movff	plusw1,fsr2l
 26568  014208  0EDB               	movlw	-37
 26569  01420A  006F FF8F FFDA     	movff	plusw1,fsr2h
 26570  014210  0E04               	movlw	4
 26571  014212  5EDE               	subwf	postinc2,f,c
 26572  014214  0E00               	movlw	0
 26573  014216  5ADD               	subwfb	postdec2,f,c
 26574  014218  006F FF78  F034    	movff	postinc2,btemp+10
 26575  01421E  006F FF74  F035    	movff	postdec2,btemp+11
 26576  014224  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26577  01422A  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26578  014230  006F FF78  F032    	movff	postinc2,btemp+8
 26579  014236  006F FF78  F033    	movff	postinc2,btemp+9
 26580  01423C  006F FF78  F034    	movff	postinc2,btemp+10
 26581  014242  006F FF78  F035    	movff	postinc2,btemp+11
 26582                           
 26583                           ;stkvar	_f @ sp[(-32)+22]
 26584  014248  0EF6               	movlw	-10
 26585  01424A  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 26586  014250  0EF7               	movlw	-9
 26587  014252  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 26588  014258  0EF8               	movlw	-8
 26589  01425A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26590  014260  0EF9               	movlw	-7
 26591  014262  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26592                           
 26593                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 26594                           ;stkvar	_fmt @ sp[(-32)+-4]
 26595  014268  0EDC               	movlw	-36
 26596  01426A  006F FF8F FFD9     	movff	plusw1,fsr2l
 26597  014270  0EDD               	movlw	-35
 26598  014272  006F FF8F FFDA     	movff	plusw1,fsr2h
 26599  014278  0E02               	movlw	2
 26600  01427A  26DE               	addwf	postinc2,f,c
 26601  01427C  0E00               	movlw	0
 26602  01427E  22DD               	addwfc	postdec2,f,c
 26603  014280  D736               	goto	l16226
 26604  014282                     l16250:
 26605                           
 26606                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 26607                           ;stkvar	_fmt @ sp[(-32)+-4]
 26608  014282  0EDC               	movlw	-36
 26609  014284  006F FF8F FFD9     	movff	plusw1,fsr2l
 26610  01428A  0EDD               	movlw	-35
 26611  01428C  006F FF8F FFDA     	movff	plusw1,fsr2h
 26612  014292  006F FF7B FFF6     	movff	postinc2,tblptrl
 26613  014298  006F FF77 FFF7     	movff	postdec2,tblptrh
 26614  01429E                     	if	0	;tblptru may be non-zero
 26615  01429E                     	endif
 26616  01429E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26617  01429E  0E00               	movlw	low (__mediumconst shr (0+16))
 26618  0142A0  6EF8               	movwf	tblptru,c
 26619  0142A2                     	endif
 26620  0142A2  0008               	tblrd		*
 26621  0142A4  50F5               	movf	tablat,w,c
 26622  0142A6  0A73               	xorlw	115
 26623  0142A8  A4D8               	btfss	status,2,c
 26624  0142AA  D042               	goto	l16260
 26625                           
 26626                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 26627                           ;stkvar	_fmt @ sp[(-32)+-4]
 26628  0142AC  0EDC               	movlw	-36
 26629  0142AE  006F FF8F FFD9     	movff	plusw1,fsr2l
 26630  0142B4  0EDD               	movlw	-35
 26631  0142B6  006F FF8F FFDA     	movff	plusw1,fsr2h
 26632  0142BC  2ADE               	incf	postinc2,f,c
 26633  0142BE  0E00               	movlw	0
 26634  0142C0  22DD               	addwfc	postdec2,f,c
 26635                           
 26636                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 26637                           ;stkvar	_ap @ sp[(-32)+-6]
 26638  0142C2  0EDA               	movlw	-38
 26639  0142C4  006F FF8F FFD9     	movff	plusw1,fsr2l
 26640  0142CA  0EDB               	movlw	-37
 26641  0142CC  006F FF8F FFDA     	movff	plusw1,fsr2h
 26642  0142D2  0E02               	movlw	2
 26643  0142D4  5EDE               	subwf	postinc2,f,c
 26644  0142D6  0E00               	movlw	0
 26645  0142D8  5ADD               	subwfb	postdec2,f,c
 26646  0142DA  006F FF78  F034    	movff	postinc2,btemp+10
 26647  0142E0  006F FF74  F035    	movff	postdec2,btemp+11
 26648  0142E6  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26649  0142EC  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26650  0142F2  006F FF78  F034    	movff	postinc2,btemp+10
 26651  0142F8  006F FF74  F035    	movff	postdec2,btemp+11
 26652                           
 26653                           ;stkvar	_cp @ sp[(-32)+29]
 26654  0142FE  0EFE               	movlw	-2
 26655  014300  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26656  014306  0EFD               	movlw	-3
 26657  014308  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26658                           
 26659                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 26660                           ;stkvar	_cp @ sp[(-32)+29]
 26661  01430E  0EFD               	movlw	-3
 26662  014310  006F FF8F FFE6     	movff	plusw1,postinc1
 26663  014316  006F FF8F FFE6     	movff	plusw1,postinc1
 26664                           
 26665                           ;stkvar	_fp @ sp[(-34)+-2]
 26666  01431C  0EDC               	movlw	-36
 26667  01431E  006F FF8F FFE6     	movff	plusw1,postinc1
 26668  014324  006F FF8F FFE6     	movff	plusw1,postinc1
 26669  01432A  EC85  F0DA         	call	_stoa	;wreg free
 26670  01432E  D2AF               	goto	l2689
 26671  014330                     l16260:
 26672                           
 26673                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 26674                           ;stkvar	_fmt @ sp[(-32)+-4]
 26675  014330  0EDC               	movlw	-36
 26676  014332  006F FF8F FFD9     	movff	plusw1,fsr2l
 26677  014338  0EDD               	movlw	-35
 26678  01433A  006F FF8F FFDA     	movff	plusw1,fsr2h
 26679  014340  006F FF7B FFF6     	movff	postinc2,tblptrl
 26680  014346  006F FF77 FFF7     	movff	postdec2,tblptrh
 26681  01434C                     	if	0	;tblptru may be non-zero
 26682  01434C                     	endif
 26683  01434C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26684  01434C  0E00               	movlw	low (__mediumconst shr (0+16))
 26685  01434E  6EF8               	movwf	tblptru,c
 26686  014350                     	endif
 26687  014350  0008               	tblrd		*
 26688  014352  50F5               	movf	tablat,w,c
 26689  014354  0A75               	xorlw	117
 26690  014356  A4D8               	btfss	status,2,c
 26691  014358  D07C               	goto	l16270
 26692                           
 26693                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 26694                           ;stkvar	_fmt @ sp[(-32)+-4]
 26695  01435A  0EDC               	movlw	-36
 26696  01435C  006F FF8F FFD9     	movff	plusw1,fsr2l
 26697  014362  0EDD               	movlw	-35
 26698  014364  006F FF8F FFDA     	movff	plusw1,fsr2h
 26699  01436A  2ADE               	incf	postinc2,f,c
 26700  01436C  0E00               	movlw	0
 26701  01436E  22DD               	addwfc	postdec2,f,c
 26702                           
 26703                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 26704                           ;stkvar	_ap @ sp[(-32)+-6]
 26705  014370  0EDA               	movlw	-38
 26706  014372  006F FF8F FFD9     	movff	plusw1,fsr2l
 26707  014378  0EDB               	movlw	-37
 26708  01437A  006F FF8F FFDA     	movff	plusw1,fsr2h
 26709  014380  0E02               	movlw	2
 26710  014382  5EDE               	subwf	postinc2,f,c
 26711  014384  0E00               	movlw	0
 26712  014386  5ADD               	subwfb	postdec2,f,c
 26713  014388  006F FF78  F034    	movff	postinc2,btemp+10
 26714  01438E  006F FF74  F035    	movff	postdec2,btemp+11
 26715  014394  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26716  01439A  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26717  0143A0  006F FF78  F034    	movff	postinc2,btemp+10
 26718  0143A6  006F FF74  F035    	movff	postdec2,btemp+11
 26719  0143AC  5034               	movf	(btemp+10)^0,w,c
 26720  0143AE  6E3A               	movwf	(btemp+16)^0,c
 26721  0143B0  5035               	movf	(btemp+11)^0,w,c
 26722  0143B2  6E3B               	movwf	(btemp+17)^0,c
 26723  0143B4  6A3C               	clrf	(btemp+18)^0,c
 26724  0143B6  6A3D               	clrf	(btemp+19)^0,c
 26725  0143B8  6A3E               	clrf	(btemp+20)^0,c
 26726  0143BA  6A3F               	clrf	(btemp+21)^0,c
 26727  0143BC  6A40               	clrf	(btemp+22)^0,c
 26728  0143BE  6A41               	clrf	(btemp+23)^0,c
 26729                           
 26730                           ;stkvar	_llu @ sp[(-32)+6]
 26731  0143C0  0EE6               	movlw	-26
 26732  0143C2  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 26733  0143C8  0EE7               	movlw	-25
 26734  0143CA  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 26735  0143D0  0EE8               	movlw	-24
 26736  0143D2  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 26737  0143D8  0EE9               	movlw	-23
 26738  0143DA  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 26739  0143E0  0EEA               	movlw	-22
 26740  0143E2  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 26741  0143E8  0EEB               	movlw	-21
 26742  0143EA  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 26743  0143F0  0EEC               	movlw	-20
 26744  0143F2  0060  F103  FFE3   	movff	btemp+22,plusw1
 26745  0143F8  0EED               	movlw	-19
 26746  0143FA  0060  F107  FFE3   	movff	btemp+23,plusw1
 26747                           
 26748                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 26749                           ;stkvar	_llu @ sp[(-32)+6]
 26750  014400  50E1               	movf	fsr1l,w,c
 26751  014402  0FE6               	addlw	-26
 26752  014404  6ED9               	movwf	fsr2l,c
 26753  014406  50E2               	movf	fsr1h,w,c
 26754  014408  6EDA               	movwf	fsr2h,c
 26755  01440A  0EFF               	movlw	255
 26756  01440C  22DA               	addwfc	fsr2h,f,c
 26757  01440E  006F FF7B FFE6     	movff	postinc2,postinc1
 26758  014414  006F FF7B FFE6     	movff	postinc2,postinc1
 26759  01441A  006F FF7B FFE6     	movff	postinc2,postinc1
 26760  014420  006F FF7B FFE6     	movff	postinc2,postinc1
 26761  014426  006F FF7B FFE6     	movff	postinc2,postinc1
 26762  01442C  006F FF7B FFE6     	movff	postinc2,postinc1
 26763  014432  006F FF7B FFE6     	movff	postinc2,postinc1
 26764  014438  006F FF7B FFE6     	movff	postinc2,postinc1
 26765                           
 26766                           ;stkvar	_fp @ sp[(-40)+-2]
 26767  01443E  0ED6               	movlw	-42
 26768  014440  006F FF8F FFE6     	movff	plusw1,postinc1
 26769  014446  006F FF8F FFE6     	movff	plusw1,postinc1
 26770  01444C  EC18  F0D3         	call	_utoa	;wreg free
 26771  014450  D21E               	goto	l2689
 26772  014452                     l16270:
 26773                           
 26774                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 26775  014452  0E02               	movlw	2
 26776  014454  6EE6               	movwf	postinc1,c
 26777  014456  0E00               	movlw	0
 26778  014458  6EE6               	movwf	postinc1,c
 26779  01445A  0EF6               	movlw	low STR_113
 26780  01445C  6EE6               	movwf	postinc1,c
 26781  01445E  0EFF               	movlw	high STR_113
 26782  014460  6EE6               	movwf	postinc1,c
 26783                           
 26784                           ;stkvar	_fmt @ sp[(-36)+-4]
 26785  014462  0ED8               	movlw	-40
 26786  014464  006F FF8F FFD9     	movff	plusw1,fsr2l
 26787  01446A  0ED9               	movlw	-39
 26788  01446C  006F FF8F FFDA     	movff	plusw1,fsr2h
 26789  014472  006F FF78  F034    	movff	postinc2,btemp+10
 26790  014478  006F FF74  F035    	movff	postdec2,btemp+11
 26791  01447E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 26792  014484  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 26793  01448A  EC88  F0E6         	call	_strncmp	;wreg free
 26794  01448E  502A               	movf	btemp^0,w,c
 26795  014490  102B               	iorwf	(btemp+1)^0,w,c
 26796  014492  A4D8               	btfss	status,2,c
 26797  014494  D039               	goto	l16280
 26798                           
 26799                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 26800                           ;stkvar	_fmt @ sp[(-32)+-4]
 26801  014496  0EDC               	movlw	-36
 26802  014498  006F FF8F FFD9     	movff	plusw1,fsr2l
 26803  01449E  0EDD               	movlw	-35
 26804  0144A0  006F FF8F FFDA     	movff	plusw1,fsr2h
 26805  0144A6  0E02               	movlw	2
 26806  0144A8  26DE               	addwf	postinc2,f,c
 26807  0144AA  0E00               	movlw	0
 26808  0144AC  22DD               	addwfc	postdec2,f,c
 26809                           
 26810                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 26811                           ;stkvar	_ap @ sp[(-32)+-6]
 26812  0144AE  0EDA               	movlw	-38
 26813  0144B0  006F FF8F FFD9     	movff	plusw1,fsr2l
 26814  0144B6  0EDB               	movlw	-37
 26815  0144B8  006F FF8F FFDA     	movff	plusw1,fsr2h
 26816  0144BE  0E04               	movlw	4
 26817  0144C0  5EDE               	subwf	postinc2,f,c
 26818  0144C2  0E00               	movlw	0
 26819  0144C4  5ADD               	subwfb	postdec2,f,c
 26820  0144C6  006F FF78  F034    	movff	postinc2,btemp+10
 26821  0144CC  006F FF74  F035    	movff	postdec2,btemp+11
 26822  0144D2  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26823  0144D8  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26824  0144DE  006F FF78  F032    	movff	postinc2,btemp+8
 26825  0144E4  006F FF78  F033    	movff	postinc2,btemp+9
 26826  0144EA  006F FF78  F034    	movff	postinc2,btemp+10
 26827  0144F0  006F FF78  F035    	movff	postinc2,btemp+11
 26828  0144F6  5032               	movf	(btemp+8)^0,w,c
 26829  0144F8  6E3A               	movwf	(btemp+16)^0,c
 26830  0144FA  5033               	movf	(btemp+9)^0,w,c
 26831  0144FC  6E3B               	movwf	(btemp+17)^0,c
 26832  0144FE  5034               	movf	(btemp+10)^0,w,c
 26833  014500  6E3C               	movwf	(btemp+18)^0,c
 26834  014502  5035               	movf	(btemp+11)^0,w,c
 26835  014504  6E3D               	movwf	(btemp+19)^0,c
 26836  014506  D758               	goto	L25
 26837  014508                     l16280:
 26838                           
 26839                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 26840                           ;stkvar	_fmt @ sp[(-32)+-4]
 26841  014508  0EDC               	movlw	-36
 26842  01450A  006F FF8F FFD9     	movff	plusw1,fsr2l
 26843  014510  0EDD               	movlw	-35
 26844  014512  006F FF8F FFDA     	movff	plusw1,fsr2h
 26845  014518  006F FF7B FFF6     	movff	postinc2,tblptrl
 26846  01451E  006F FF77 FFF7     	movff	postdec2,tblptrh
 26847  014524                     	if	0	;tblptru may be non-zero
 26848  014524                     	endif
 26849  014524                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26850  014524  0E00               	movlw	low (__mediumconst shr (0+16))
 26851  014526  6EF8               	movwf	tblptru,c
 26852  014528                     	endif
 26853  014528  0008               	tblrd		*
 26854  01452A  50F5               	movf	tablat,w,c
 26855  01452C  0A78               	xorlw	120
 26856  01452E  B4D8               	btfsc	status,2,c
 26857  014530  D015               	goto	u15900
 26858                           
 26859                           ;stkvar	_fmt @ sp[(-32)+-4]
 26860  014532  0EDC               	movlw	-36
 26861  014534  006F FF8F FFD9     	movff	plusw1,fsr2l
 26862  01453A  0EDD               	movlw	-35
 26863  01453C  006F FF8F FFDA     	movff	plusw1,fsr2h
 26864  014542  006F FF7B FFF6     	movff	postinc2,tblptrl
 26865  014548  006F FF77 FFF7     	movff	postdec2,tblptrh
 26866  01454E                     	if	0	;tblptru may be non-zero
 26867  01454E                     	endif
 26868  01454E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26869  01454E  0E00               	movlw	low (__mediumconst shr (0+16))
 26870  014550  6EF8               	movwf	tblptru,c
 26871  014552                     	endif
 26872  014552  0008               	tblrd		*
 26873  014554  50F5               	movf	tablat,w,c
 26874  014556  0A58               	xorlw	88
 26875  014558  A4D8               	btfss	status,2,c
 26876  01455A  D094               	goto	l16294
 26877  01455C                     u15900:
 26878                           
 26879                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 26880                           ;stkvar	_fmt @ sp[(-32)+-4]
 26881  01455C  0EDC               	movlw	-36
 26882  01455E  006F FF8F FFD9     	movff	plusw1,fsr2l
 26883  014564  0EDD               	movlw	-35
 26884  014566  006F FF8F FFDA     	movff	plusw1,fsr2h
 26885  01456C  006F FF7B FFF6     	movff	postinc2,tblptrl
 26886  014572  006F FF77 FFF7     	movff	postdec2,tblptrh
 26887  014578                     	if	0	;tblptru may be non-zero
 26888  014578                     	endif
 26889  014578                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26890  014578  0E00               	movlw	low (__mediumconst shr (0+16))
 26891  01457A  6EF8               	movwf	tblptru,c
 26892  01457C                     	endif
 26893                           
 26894                           ;stkvar	_c @ sp[(-32)+31]
 26895  01457C  0008               	tblrd		*
 26896  01457E  0EFF               	movlw	-1
 26897  014580  006F FFD7 FFE3     	movff	tablat,plusw1
 26898                           
 26899                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 26900                           ;stkvar	_fmt @ sp[(-32)+-4]
 26901  014586  0EDC               	movlw	-36
 26902  014588  006F FF8F FFD9     	movff	plusw1,fsr2l
 26903  01458E  0EDD               	movlw	-35
 26904  014590  006F FF8F FFDA     	movff	plusw1,fsr2h
 26905  014596  2ADE               	incf	postinc2,f,c
 26906  014598  0E00               	movlw	0
 26907  01459A  22DD               	addwfc	postdec2,f,c
 26908                           
 26909                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 26910                           ;stkvar	_ap @ sp[(-32)+-6]
 26911  01459C  0EDA               	movlw	-38
 26912  01459E  006F FF8F FFD9     	movff	plusw1,fsr2l
 26913  0145A4  0EDB               	movlw	-37
 26914  0145A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 26915  0145AC  0E02               	movlw	2
 26916  0145AE  5EDE               	subwf	postinc2,f,c
 26917  0145B0  0E00               	movlw	0
 26918  0145B2  5ADD               	subwfb	postdec2,f,c
 26919  0145B4  006F FF78  F034    	movff	postinc2,btemp+10
 26920  0145BA  006F FF74  F035    	movff	postdec2,btemp+11
 26921  0145C0  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26922  0145C6  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26923  0145CC  006F FF78  F034    	movff	postinc2,btemp+10
 26924  0145D2  006F FF74  F035    	movff	postdec2,btemp+11
 26925  0145D8  5034               	movf	(btemp+10)^0,w,c
 26926  0145DA  6E3A               	movwf	(btemp+16)^0,c
 26927  0145DC  5035               	movf	(btemp+11)^0,w,c
 26928  0145DE  6E3B               	movwf	(btemp+17)^0,c
 26929  0145E0  6A3C               	clrf	(btemp+18)^0,c
 26930  0145E2  6A3D               	clrf	(btemp+19)^0,c
 26931  0145E4  6A3E               	clrf	(btemp+20)^0,c
 26932  0145E6  6A3F               	clrf	(btemp+21)^0,c
 26933  0145E8  6A40               	clrf	(btemp+22)^0,c
 26934  0145EA  6A41               	clrf	(btemp+23)^0,c
 26935                           
 26936                           ;stkvar	_llu @ sp[(-32)+6]
 26937  0145EC  0EE6               	movlw	-26
 26938  0145EE  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 26939  0145F4  0EE7               	movlw	-25
 26940  0145F6  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 26941  0145FC  0EE8               	movlw	-24
 26942  0145FE  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 26943  014604  0EE9               	movlw	-23
 26944  014606  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 26945  01460C  0EEA               	movlw	-22
 26946  01460E  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 26947  014614  0EEB               	movlw	-21
 26948  014616  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 26949  01461C  0EEC               	movlw	-20
 26950  01461E  0060  F103  FFE3   	movff	btemp+22,plusw1
 26951  014624  0EED               	movlw	-19
 26952  014626  0060  F107  FFE3   	movff	btemp+23,plusw1
 26953                           
 26954                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 26955                           ;stkvar	_c @ sp[(-32)+31]
 26956  01462C  0EFF               	movlw	-1
 26957  01462E  50E3               	movf	plusw1,w,c
 26958  014630  6EE6               	movwf	postinc1,c
 26959                           
 26960                           ;stkvar	_llu @ sp[(-33)+6]
 26961  014632  50E1               	movf	fsr1l,w,c
 26962  014634  0FE5               	addlw	-27
 26963  014636  6ED9               	movwf	fsr2l,c
 26964  014638  50E2               	movf	fsr1h,w,c
 26965  01463A  6EDA               	movwf	fsr2h,c
 26966  01463C  0EFF               	movlw	255
 26967  01463E  22DA               	addwfc	fsr2h,f,c
 26968  014640  006F FF7B FFE6     	movff	postinc2,postinc1
 26969  014646  006F FF7B FFE6     	movff	postinc2,postinc1
 26970  01464C  006F FF7B FFE6     	movff	postinc2,postinc1
 26971  014652  006F FF7B FFE6     	movff	postinc2,postinc1
 26972  014658  006F FF7B FFE6     	movff	postinc2,postinc1
 26973  01465E  006F FF7B FFE6     	movff	postinc2,postinc1
 26974  014664  006F FF7B FFE6     	movff	postinc2,postinc1
 26975  01466A  006F FF7B FFE6     	movff	postinc2,postinc1
 26976                           
 26977                           ;stkvar	_fp @ sp[(-41)+-2]
 26978  014670  0ED5               	movlw	-43
 26979  014672  006F FF8F FFE6     	movff	plusw1,postinc1
 26980  014678  006F FF8F FFE6     	movff	plusw1,postinc1
 26981  01467E  EC2B  F0CC         	call	_xtoa	;wreg free
 26982  014682  D105               	goto	l2689
 26983  014684                     l16294:
 26984                           
 26985                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 26986  014684  0E02               	movlw	2
 26987  014686  6EE6               	movwf	postinc1,c
 26988  014688  0E00               	movlw	0
 26989  01468A  6EE6               	movwf	postinc1,c
 26990  01468C  0EF9               	movlw	low STR_118
 26991  01468E  6EE6               	movwf	postinc1,c
 26992  014690  0EFF               	movlw	high STR_118
 26993  014692  6EE6               	movwf	postinc1,c
 26994                           
 26995                           ;stkvar	_fmt @ sp[(-36)+-4]
 26996  014694  0ED8               	movlw	-40
 26997  014696  006F FF8F FFD9     	movff	plusw1,fsr2l
 26998  01469C  0ED9               	movlw	-39
 26999  01469E  006F FF8F FFDA     	movff	plusw1,fsr2h
 27000  0146A4  006F FF78  F034    	movff	postinc2,btemp+10
 27001  0146AA  006F FF74  F035    	movff	postdec2,btemp+11
 27002  0146B0  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 27003  0146B6  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 27004  0146BC  EC88  F0E6         	call	_strncmp	;wreg free
 27005  0146C0  502A               	movf	btemp^0,w,c
 27006  0146C2  102B               	iorwf	(btemp+1)^0,w,c
 27007  0146C4  B4D8               	btfsc	status,2,c
 27008  0146C6  D022               	goto	u15920
 27009  0146C8  0E02               	movlw	2
 27010  0146CA  6EE6               	movwf	postinc1,c
 27011  0146CC  0E00               	movlw	0
 27012  0146CE  6EE6               	movwf	postinc1,c
 27013  0146D0  0EEA               	movlw	low STR_122
 27014  0146D2  6EE6               	movwf	postinc1,c
 27015  0146D4  0EFF               	movlw	high STR_122
 27016  0146D6  6EE6               	movwf	postinc1,c
 27017                           
 27018                           ;stkvar	_fmt @ sp[(-36)+-4]
 27019  0146D8  0ED8               	movlw	-40
 27020  0146DA  006F FF8F FFD9     	movff	plusw1,fsr2l
 27021  0146E0  0ED9               	movlw	-39
 27022  0146E2  006F FF8F FFDA     	movff	plusw1,fsr2h
 27023  0146E8  006F FF78  F034    	movff	postinc2,btemp+10
 27024  0146EE  006F FF74  F035    	movff	postdec2,btemp+11
 27025  0146F4  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 27026  0146FA  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 27027  014700  EC88  F0E6         	call	_strncmp	;wreg free
 27028  014704  502A               	movf	btemp^0,w,c
 27029  014706  102B               	iorwf	(btemp+1)^0,w,c
 27030  014708  A4D8               	btfss	status,2,c
 27031  01470A  D058               	goto	l16308
 27032  01470C                     u15920:
 27033                           
 27034                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 27035                           ;stkvar	_fmt @ sp[(-32)+-4]
 27036  01470C  0EDC               	movlw	-36
 27037  01470E  006F FF8F FFD9     	movff	plusw1,fsr2l
 27038  014714  0EDD               	movlw	-35
 27039  014716  006F FF8F FFDA     	movff	plusw1,fsr2h
 27040  01471C  006F FF78  F034    	movff	postinc2,btemp+10
 27041  014722  006F FF74  F035    	movff	postdec2,btemp+11
 27042  014728  0E01               	movlw	1
 27043  01472A  2634               	addwf	(btemp+10)^0,f,c
 27044  01472C  0E00               	movlw	0
 27045  01472E  2235               	addwfc	(btemp+11)^0,f,c
 27046  014730  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 27047  014736  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 27048  01473C                     	if	0	;tblptru may be non-zero
 27049  01473C                     	endif
 27050  01473C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27051  01473C  0E00               	movlw	low (__mediumconst shr (0+16))
 27052  01473E  6EF8               	movwf	tblptru,c
 27053  014740                     	endif
 27054                           
 27055                           ;stkvar	_c @ sp[(-32)+31]
 27056  014740  0008               	tblrd		*
 27057  014742  0EFF               	movlw	-1
 27058  014744  006F FFD7 FFE3     	movff	tablat,plusw1
 27059                           
 27060                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 27061                           ;stkvar	_fmt @ sp[(-32)+-4]
 27062  01474A  0EDC               	movlw	-36
 27063  01474C  006F FF8F FFD9     	movff	plusw1,fsr2l
 27064  014752  0EDD               	movlw	-35
 27065  014754  006F FF8F FFDA     	movff	plusw1,fsr2h
 27066  01475A  0E02               	movlw	2
 27067  01475C  26DE               	addwf	postinc2,f,c
 27068  01475E  0E00               	movlw	0
 27069  014760  22DD               	addwfc	postdec2,f,c
 27070                           
 27071                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 27072                           ;stkvar	_ap @ sp[(-32)+-6]
 27073  014762  0EDA               	movlw	-38
 27074  014764  006F FF8F FFD9     	movff	plusw1,fsr2l
 27075  01476A  0EDB               	movlw	-37
 27076  01476C  006F FF8F FFDA     	movff	plusw1,fsr2h
 27077  014772  0E04               	movlw	4
 27078  014774  5EDE               	subwf	postinc2,f,c
 27079  014776  0E00               	movlw	0
 27080  014778  5ADD               	subwfb	postdec2,f,c
 27081  01477A  006F FF78  F034    	movff	postinc2,btemp+10
 27082  014780  006F FF74  F035    	movff	postdec2,btemp+11
 27083  014786  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27084  01478C  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27085  014792  006F FF78  F032    	movff	postinc2,btemp+8
 27086  014798  006F FF78  F033    	movff	postinc2,btemp+9
 27087  01479E  006F FF78  F034    	movff	postinc2,btemp+10
 27088  0147A4  006F FF78  F035    	movff	postinc2,btemp+11
 27089  0147AA  5032               	movf	(btemp+8)^0,w,c
 27090  0147AC  6E3A               	movwf	(btemp+16)^0,c
 27091  0147AE  5033               	movf	(btemp+9)^0,w,c
 27092  0147B0  6E3B               	movwf	(btemp+17)^0,c
 27093  0147B2  5034               	movf	(btemp+10)^0,w,c
 27094  0147B4  6E3C               	movwf	(btemp+18)^0,c
 27095  0147B6  5035               	movf	(btemp+11)^0,w,c
 27096  0147B8  6E3D               	movwf	(btemp+19)^0,c
 27097  0147BA  D714               	goto	L26
 27098  0147BC                     l16308:
 27099                           
 27100                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 27101                           ;stkvar	_fmt @ sp[(-32)+-4]
 27102  0147BC  0EDC               	movlw	-36
 27103  0147BE  006F FF8F FFD9     	movff	plusw1,fsr2l
 27104  0147C4  0EDD               	movlw	-35
 27105  0147C6  006F FF8F FFDA     	movff	plusw1,fsr2h
 27106  0147CC  006F FF7B FFF6     	movff	postinc2,tblptrl
 27107  0147D2  006F FF77 FFF7     	movff	postdec2,tblptrh
 27108  0147D8                     	if	0	;tblptru may be non-zero
 27109  0147D8                     	endif
 27110  0147D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27111  0147D8  0E00               	movlw	low (__mediumconst shr (0+16))
 27112  0147DA  6EF8               	movwf	tblptru,c
 27113  0147DC                     	endif
 27114  0147DC  0008               	tblrd		*
 27115  0147DE  50F5               	movf	tablat,w,c
 27116  0147E0  0A25               	xorlw	37
 27117  0147E2  A4D8               	btfss	status,2,c
 27118  0147E4  D01A               	goto	l16318
 27119                           
 27120                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 27121                           ;stkvar	_fmt @ sp[(-32)+-4]
 27122  0147E6  0EDC               	movlw	-36
 27123  0147E8  006F FF8F FFD9     	movff	plusw1,fsr2l
 27124  0147EE  0EDD               	movlw	-35
 27125  0147F0  006F FF8F FFDA     	movff	plusw1,fsr2h
 27126  0147F6  2ADE               	incf	postinc2,f,c
 27127  0147F8  0E00               	movlw	0
 27128  0147FA  22DD               	addwfc	postdec2,f,c
 27129                           
 27130                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 27131                           ;stkvar	_fp @ sp[(-32)+-2]
 27132  0147FC  0EDE               	movlw	-34
 27133  0147FE  006F FF8F FFE6     	movff	plusw1,postinc1
 27134  014804  006F FF8F FFE6     	movff	plusw1,postinc1
 27135  01480A  0E25               	movlw	37
 27136  01480C  6EE6               	movwf	postinc1,c
 27137  01480E  0E00               	movlw	0
 27138  014810  6EE6               	movwf	postinc1,c
 27139  014812  EC38  F0F9         	call	_fputc	;wreg free
 27140  014816                     l16314:
 27141                           
 27142                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 27143  014816  0E01               	movlw	1
 27144  014818  D00C               	goto	L27
 27145  01481A                     l16318:
 27146                           
 27147                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 27148                           ;stkvar	_fmt @ sp[(-32)+-4]
 27149  01481A  0EDC               	movlw	-36
 27150  01481C  006F FF8F FFD9     	movff	plusw1,fsr2l
 27151  014822  0EDD               	movlw	-35
 27152  014824  006F FF8F FFDA     	movff	plusw1,fsr2h
 27153  01482A  2ADE               	incf	postinc2,f,c
 27154  01482C  0E00               	movlw	0
 27155  01482E  22DD               	addwfc	postdec2,f,c
 27156                           
 27157                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 27158  014830  0E00               	movlw	0
 27159  014832                     L27:
 27160  014832  6E2A               	movwf	btemp^0,c
 27161  014834  0E00               	movlw	0
 27162  014836  6E2B               	movwf	(btemp+1)^0,c
 27163  014838  D02A               	goto	l2689
 27164  01483A                     l16324:
 27165                           
 27166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 27167                           ;stkvar	_fp @ sp[(-32)+-2]
 27168  01483A  0EDE               	movlw	-34
 27169  01483C  006F FF8F FFE6     	movff	plusw1,postinc1
 27170  014842  006F FF8F FFE6     	movff	plusw1,postinc1
 27171                           
 27172                           ;stkvar	_fmt @ sp[(-34)+-4]
 27173  014848  0EDA               	movlw	-38
 27174  01484A  006F FF8F FFD9     	movff	plusw1,fsr2l
 27175  014850  0EDB               	movlw	-37
 27176  014852  006F FF8F FFDA     	movff	plusw1,fsr2h
 27177  014858  006F FF7B FFF6     	movff	postinc2,tblptrl
 27178  01485E  006F FF77 FFF7     	movff	postdec2,tblptrh
 27179  014864                     	if	0	;tblptru may be non-zero
 27180  014864                     	endif
 27181  014864                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27182  014864  0E00               	movlw	low (__mediumconst shr (0+16))
 27183  014866  6EF8               	movwf	tblptru,c
 27184  014868                     	endif
 27185  014868  0008               	tblrd		*
 27186  01486A  50F5               	movf	tablat,w,c
 27187  01486C  6EE6               	movwf	postinc1,c
 27188  01486E  0E00               	movlw	0
 27189  014870  6EE6               	movwf	postinc1,c
 27190  014872  EC38  F0F9         	call	_fputc	;wreg free
 27191                           
 27192                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 27193                           ;stkvar	_fmt @ sp[(-32)+-4]
 27194  014876  0EDC               	movlw	-36
 27195  014878  006F FF8F FFD9     	movff	plusw1,fsr2l
 27196  01487E  0EDD               	movlw	-35
 27197  014880  006F FF8F FFDA     	movff	plusw1,fsr2h
 27198  014886  2ADE               	incf	postinc2,f,c
 27199  014888  0E00               	movlw	0
 27200  01488A  22DD               	addwfc	postdec2,f,c
 27201  01488C  D7C4               	goto	l16314
 27202  01488E                     l2689:
 27203                           
 27204                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 27205  01488E  0EDA               	movlw	218
 27206  014890  26E1               	addwf	fsr1l,f,c
 27207  014892  0EFF               	movlw	255
 27208  014894  22E2               	addwfc	fsr1h,f,c
 27209  014896  0012               	return		;funcret
 27210  014898                     __end_of_vfpfcnvrt:
 27211                           	opt callstack 0
 27212                           
 27213 ;; *************** function _xtoa *****************
 27214 ;; Defined at:
 27215 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 27216 ;; Parameters:    Size  Location     Type
 27217 ;;  fp              2  [STACK] PTR struct _IO_FILE
 27218 ;;		 -> f(6), NULL(0), 
 27219 ;;  d               8  [STACK] unsigned long long 
 27220 ;;  x               1  [STACK] unsigned char 
 27221 ;; Auto vars:     Size  Location     Type
 27222 ;;  n               8  [STACK] unsigned long long 
 27223 ;;  c               2  [STACK] int 
 27224 ;;  i               2  [STACK] int 
 27225 ;;  w               2  [STACK] int 
 27226 ;;  p               2  [STACK] int 
 27227 ;; Return value:  Size  Location     Type
 27228 ;;                  2  [STACK] int 
 27229 ;; Registers used:
 27230 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 27231 ;; Tracked objects:
 27232 ;;		On entry : 0/0
 27233 ;;		On exit  : 0/0
 27234 ;;		Unchanged: 0/0
 27235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27240 ;;Total ram usage:        0 bytes
 27241 ;; Hardware stack levels used:    1
 27242 ;; Hardware stack levels required when called:   20
 27243 ;; This function calls:
 27244 ;;		_isalpha
 27245 ;;		_isupper
 27246 ;;		_pad
 27247 ;;		_toupper
 27248 ;; This function is called by:
 27249 ;;		_vfpfcnvrt
 27250 ;; This function uses a reentrant model
 27251 ;;
 27252                           
 27253                           	psect	text94
 27254  019856                     __ptext94:
 27255                           	opt callstack 0
 27256  019856                     _xtoa:
 27257                           	opt callstack 0
 27258                           
 27259                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 27260  019856  0E14               	movlw	20
 27261  019858  26E1               	addwf	fsr1l,f,c
 27262  01985A  0E00               	movlw	0
 27263  01985C  22E2               	addwfc	fsr1h,f,c
 27264                           
 27265                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 27266                           
 27267                           ;incstack = 0
 27268 ;; hardware stack exceeded
 27269  01985E  AE4D               	btfss	(_prec+1)^0,7,c
 27270                           
 27271                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 27272  019860  924E               	bcf	_flags^0,1,c
 27273                           
 27274                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 27275  019862  BE4D               	btfsc	(_prec+1)^0,7,c
 27276  019864  D005               	goto	u15380
 27277  019866  504D               	movf	(_prec+1)^0,w,c
 27278  019868  E110               	bnz	l15978
 27279  01986A  044C               	decf	_prec^0,w,c
 27280  01986C  B0D8               	btfsc	status,0,c
 27281  01986E  D00D               	goto	l15978
 27282  019870                     u15380:
 27283  019870  0E01               	movlw	1
 27284  019872  6E34               	movwf	(btemp+10)^0,c
 27285  019874  0E00               	movlw	0
 27286  019876  6E35               	movwf	(btemp+11)^0,c
 27287                           
 27288                           ;stkvar	_p @ sp[(-20)+18]
 27289  019878  0EFE               	movlw	-2
 27290  01987A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27291  019880  0EFF               	movlw	-1
 27292  019882  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27293  019888  D008               	goto	l2639
 27294  01988A                     l15978:
 27295                           
 27296                           ;stkvar	_p @ sp[(-20)+18]
 27297  01988A  0EFE               	movlw	-2
 27298  01988C  0060  F133  FFE3   	movff	_prec,plusw1
 27299  019892  0EFF               	movlw	-1
 27300  019894  0060  F137  FFE3   	movff	_prec+1,plusw1
 27301  01989A                     l2639:
 27302                           
 27303                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 27304                           ;stkvar	_w @ sp[(-20)+16]
 27305  01989A  0EFC               	movlw	-4
 27306  01989C  0060  F12B  FFE3   	movff	_width,plusw1
 27307  0198A2  0EFD               	movlw	-3
 27308  0198A4  0060  F12F  FFE3   	movff	_width+1,plusw1
 27309                           
 27310                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 27311  0198AA  A84E               	btfss	_flags^0,4,c
 27312  0198AC  D00B               	goto	l15984
 27313                           
 27314                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 27315                           ;stkvar	_w @ sp[(-20)+16]
 27316  0198AE  50E1               	movf	fsr1l,w,c
 27317  0198B0  0FFC               	addlw	-4
 27318  0198B2  6ED9               	movwf	fsr2l,c
 27319  0198B4  50E2               	movf	fsr1h,w,c
 27320  0198B6  6EDA               	movwf	fsr2h,c
 27321  0198B8  0EFF               	movlw	255
 27322  0198BA  22DA               	addwfc	fsr2h,f,c
 27323  0198BC  0EFE               	movlw	254
 27324  0198BE  26DE               	addwf	postinc2,f,c
 27325  0198C0  0EFF               	movlw	255
 27326  0198C2  22DD               	addwfc	postdec2,f,c
 27327  0198C4                     l15984:
 27328                           
 27329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 27330                           ;stkvar	_d @ sp[(-20)+-10]
 27331  0198C4  0EE2               	movlw	226
 27332  0198C6  24E1               	addwf	fsr1l,w,c
 27333  0198C8  6ED9               	movwf	fsr2l,c
 27334  0198CA  0EFF               	movlw	255
 27335  0198CC  20E2               	addwfc	fsr1h,w,c
 27336  0198CE  6EDA               	movwf	fsr2h,c
 27337                           
 27338                           ;stkvar	_n @ sp[(-20)+4]
 27339  0198D0  0E08               	movlw	8
 27340  0198D2  6E2A               	movwf	btemp^0,c
 27341  0198D4  0EF0               	movlw	-16
 27342  0198D6                     us1540999:
 27343  0198D6  006F FF7B FFE3     	movff	postinc2,plusw1
 27344  0198DC  28E8               	incf	wreg,w,c
 27345  0198DE  2E2A               	decfsz	btemp^0,f,c
 27346  0198E0  D7FA               	bra	us1540999
 27347                           
 27348                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 27349  0198E2  0E4F               	movlw	79
 27350  0198E4  6E34               	movwf	(btemp+10)^0,c
 27351  0198E6  0E00               	movlw	0
 27352  0198E8  6E35               	movwf	(btemp+11)^0,c
 27353                           
 27354                           ;stkvar	_i @ sp[(-20)+14]
 27355  0198EA  0EFA               	movlw	-6
 27356  0198EC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27357  0198F2  0EFB               	movlw	-5
 27358  0198F4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27359                           
 27360                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 27361  0198FA  0103               	movlb	3	; () banked
 27362  0198FC  6BA3               	clrf	(_dbuf+79)& (0+255),b
 27363                           
 27364                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 27365  0198FE  D0EE               	goto	l16022
 27366  019900                     l15990:
 27367                           
 27368                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 27369                           ;stkvar	_i @ sp[(-20)+14]
 27370  019900  50E1               	movf	fsr1l,w,c
 27371  019902  0FFA               	addlw	-6
 27372  019904  6ED9               	movwf	fsr2l,c
 27373  019906  50E2               	movf	fsr1h,w,c
 27374  019908  6EDA               	movwf	fsr2h,c
 27375  01990A  0EFF               	movlw	255
 27376  01990C  22DA               	addwfc	fsr2h,f,c
 27377  01990E  06DE               	decf	postinc2,f,c
 27378  019910  0E00               	movlw	0
 27379  019912  5ADD               	subwfb	postdec2,f,c
 27380                           
 27381                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 27382                           ;stkvar	_n @ sp[(-20)+4]
 27383  019914  0EF0               	movlw	-16
 27384  019916  006F FF8C  F034    	movff	plusw1,btemp+10
 27385  01991C  0EF1               	movlw	-15
 27386  01991E  006F FF8C  F035    	movff	plusw1,btemp+11
 27387  019924  0E0F               	movlw	15
 27388  019926  1634               	andwf	(btemp+10)^0,f,c
 27389  019928  0E00               	movlw	0
 27390  01992A  1635               	andwf	(btemp+11)^0,f,c
 27391                           
 27392                           ;stkvar	_c @ sp[(-20)+12]
 27393  01992C  0EF8               	movlw	-8
 27394  01992E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27395  019934  0EF9               	movlw	-7
 27396  019936  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27397                           
 27398                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 27399                           ;stkvar	_c @ sp[(-20)+12]
 27400  01993C  0EF9               	movlw	-7
 27401  01993E  BEE3               	btfsc	plusw1,7,c
 27402  019940  D00F               	goto	l15998
 27403  019942  0EF9               	movlw	-7
 27404  019944  50E3               	movf	plusw1,w,c
 27405  019946  E108               	bnz	u15410
 27406  019948  0EF8               	movlw	-8
 27407  01994A  006F FF8C  F02A    	movff	plusw1,btemp
 27408  019950  0E0A               	movlw	10
 27409  019952  5E2A               	subwf	btemp^0,f,c
 27410  019954  A0D8               	btfss	status,0,c
 27411  019956  D004               	goto	l15998
 27412  019958                     u15410:
 27413                           
 27414                           ;stkvar	_c @ sp[(-20)+12]
 27415  019958  0EF8               	movlw	-8
 27416  01995A  50E3               	movf	plusw1,w,c
 27417  01995C  0F57               	addlw	87
 27418  01995E  D003               	goto	L28
 27419  019960                     l15998:
 27420                           
 27421                           ;stkvar	_c @ sp[(-20)+12]
 27422  019960  0EF8               	movlw	-8
 27423  019962  50E3               	movf	plusw1,w,c
 27424  019964  0F30               	addlw	48
 27425  019966                     L28:
 27426  019966  6E34               	movwf	(btemp+10)^0,c
 27427  019968  0EF9               	movlw	-7
 27428  01996A  006F FF8C  F035    	movff	plusw1,btemp+11
 27429  019970  0E00               	movlw	0
 27430  019972  2235               	addwfc	(btemp+11)^0,f,c
 27431                           
 27432                           ;stkvar	_c @ sp[(-20)+12]
 27433  019974  0EF8               	movlw	-8
 27434  019976  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27435  01997C  0EF9               	movlw	-7
 27436  01997E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27437  019984  0EBF               	movlw	191
 27438  019986  6E34               	movwf	(btemp+10)^0,c
 27439  019988  0EFF               	movlw	255
 27440  01998A  6E35               	movwf	(btemp+11)^0,c
 27441                           
 27442                           ;stkvar	_x @ sp[(-20)+-11]
 27443  01998C  0EE1               	movlw	-31
 27444  01998E  50E3               	movf	plusw1,w,c
 27445  019990  6E32               	movwf	(btemp+8)^0,c
 27446  019992  6A33               	clrf	(btemp+9)^0,c
 27447  019994  5034               	movf	(btemp+10)^0,w,c
 27448  019996  2632               	addwf	(btemp+8)^0,f,c
 27449  019998  5035               	movf	(btemp+11)^0,w,c
 27450  01999A  2233               	addwfc	(btemp+9)^0,f,c
 27451  01999C  5033               	movf	(btemp+9)^0,w,c
 27452  01999E  E106               	bnz	u15420
 27453  0199A0  0E1A               	movlw	26
 27454  0199A2  5C32               	subwf	(btemp+8)^0,w,c
 27455  0199A4  B0D8               	btfsc	status,0,c
 27456  0199A6  D002               	goto	u15420
 27457  0199A8  0E01               	movlw	1
 27458  0199AA  D001               	goto	u15430
 27459  0199AC                     u15420:
 27460  0199AC  0E00               	movlw	0
 27461  0199AE                     u15430:
 27462  0199AE  6E34               	movwf	(btemp+10)^0,c
 27463  0199B0  6A35               	clrf	(btemp+11)^0,c
 27464                           
 27465                           ;stkvar	_xtoa$6646 @ sp[(-20)+2]
 27466  0199B2  0EEE               	movlw	-18
 27467  0199B4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27468  0199BA  0EEF               	movlw	-17
 27469  0199BC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27470                           
 27471                           ;stkvar	_xtoa$6646 @ sp[(-20)+2]
 27472  0199C2  0EEE               	movlw	-18
 27473  0199C4  006F FF8C  F02A    	movff	plusw1,btemp
 27474  0199CA  0EEF               	movlw	-17
 27475  0199CC  50E3               	movf	plusw1,w,c
 27476  0199CE  102A               	iorwf	btemp^0,w,c
 27477  0199D0  B4D8               	btfsc	status,2,c
 27478  0199D2  D041               	goto	l16014
 27479  0199D4  0E9F               	movlw	159
 27480  0199D6  6E34               	movwf	(btemp+10)^0,c
 27481  0199D8  0EFF               	movlw	255
 27482  0199DA  6E35               	movwf	(btemp+11)^0,c
 27483                           
 27484                           ;stkvar	_c @ sp[(-20)+12]
 27485  0199DC  0EF8               	movlw	-8
 27486  0199DE  006F FF8C  F032    	movff	plusw1,btemp+8
 27487  0199E4  0EF9               	movlw	-7
 27488  0199E6  006F FF8C  F033    	movff	plusw1,btemp+9
 27489  0199EC  0E20               	movlw	32
 27490  0199EE  1232               	iorwf	(btemp+8)^0,f,c
 27491  0199F0  0E00               	movlw	0
 27492  0199F2  1233               	iorwf	(btemp+9)^0,f,c
 27493  0199F4  5034               	movf	(btemp+10)^0,w,c
 27494  0199F6  2632               	addwf	(btemp+8)^0,f,c
 27495  0199F8  5035               	movf	(btemp+11)^0,w,c
 27496  0199FA  2233               	addwfc	(btemp+9)^0,f,c
 27497  0199FC  5033               	movf	(btemp+9)^0,w,c
 27498  0199FE  E106               	bnz	u15450
 27499  019A00  0E1A               	movlw	26
 27500  019A02  5C32               	subwf	(btemp+8)^0,w,c
 27501  019A04  B0D8               	btfsc	status,0,c
 27502  019A06  D002               	goto	u15450
 27503  019A08  0E01               	movlw	1
 27504  019A0A  D001               	goto	u15460
 27505  019A0C                     u15450:
 27506  019A0C  0E00               	movlw	0
 27507  019A0E                     u15460:
 27508  019A0E  6E34               	movwf	(btemp+10)^0,c
 27509  019A10  6A35               	clrf	(btemp+11)^0,c
 27510                           
 27511                           ;stkvar	_xtoa$6647 @ sp[(-20)+0]
 27512  019A12  0EEC               	movlw	-20
 27513  019A14  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27514  019A1A  0EED               	movlw	-19
 27515  019A1C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27516                           
 27517                           ;stkvar	_xtoa$6647 @ sp[(-20)+0]
 27518  019A22  0EEC               	movlw	-20
 27519  019A24  006F FF8C  F02A    	movff	plusw1,btemp
 27520  019A2A  0EED               	movlw	-19
 27521  019A2C  50E3               	movf	plusw1,w,c
 27522  019A2E  102A               	iorwf	btemp^0,w,c
 27523  019A30  B4D8               	btfsc	status,2,c
 27524  019A32  D011               	goto	l16014
 27525                           
 27526                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 27527                           ;stkvar	_c @ sp[(-20)+12]
 27528  019A34  0EF8               	movlw	-8
 27529  019A36  006F FF8F FFE6     	movff	plusw1,postinc1
 27530  019A3C  006F FF8F FFE6     	movff	plusw1,postinc1
 27531  019A42  EC42  F007         	call	_toupper	;wreg free
 27532                           
 27533                           ;stkvar	_c @ sp[(-20)+12]
 27534  019A46  0EF8               	movlw	-8
 27535  019A48  0060  F0AB  FFE3   	movff	btemp,plusw1
 27536  019A4E  0EF9               	movlw	-7
 27537  019A50  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 27538  019A56                     l16014:
 27539                           
 27540                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 27541                           ;stkvar	_c @ sp[(-20)+12]
 27542                           ;stkvar	_i @ sp[(-20)+14]
 27543  019A56  0EFA               	movlw	-6
 27544  019A58  006F FF8C  F034    	movff	plusw1,btemp+10
 27545  019A5E  0EFB               	movlw	-5
 27546  019A60  006F FF8C  F035    	movff	plusw1,btemp+11
 27547  019A66  0E54               	movlw	low _dbuf
 27548  019A68  2434               	addwf	(btemp+10)^0,w,c
 27549  019A6A  6ED9               	movwf	fsr2l,c
 27550  019A6C  0E03               	movlw	high _dbuf
 27551  019A6E  2035               	addwfc	(btemp+11)^0,w,c
 27552  019A70  6EDA               	movwf	fsr2h,c
 27553  019A72  0EF8               	movlw	-8
 27554  019A74  006F FF8F FFDF     	movff	plusw1,indf2
 27555                           
 27556                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 27557                           ;stkvar	_p @ sp[(-20)+18]
 27558  019A7A  50E1               	movf	fsr1l,w,c
 27559  019A7C  0FFE               	addlw	-2
 27560  019A7E  6ED9               	movwf	fsr2l,c
 27561  019A80  50E2               	movf	fsr1h,w,c
 27562  019A82  6EDA               	movwf	fsr2h,c
 27563  019A84  0EFF               	movlw	255
 27564  019A86  22DA               	addwfc	fsr2h,f,c
 27565  019A88  06DE               	decf	postinc2,f,c
 27566  019A8A  0E00               	movlw	0
 27567  019A8C  5ADD               	subwfb	postdec2,f,c
 27568                           
 27569                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 27570                           ;stkvar	_w @ sp[(-20)+16]
 27571  019A8E  50E1               	movf	fsr1l,w,c
 27572  019A90  0FFC               	addlw	-4
 27573  019A92  6ED9               	movwf	fsr2l,c
 27574  019A94  50E2               	movf	fsr1h,w,c
 27575  019A96  6EDA               	movwf	fsr2h,c
 27576  019A98  0EFF               	movlw	255
 27577  019A9A  22DA               	addwfc	fsr2h,f,c
 27578  019A9C  06DE               	decf	postinc2,f,c
 27579  019A9E  0E00               	movlw	0
 27580  019AA0  5ADD               	subwfb	postdec2,f,c
 27581                           
 27582                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 27583  019AA2  0E04               	movlw	4
 27584  019AA4  6E35               	movwf	(btemp+11)^0,c
 27585                           
 27586                           ;stkvar	_n @ sp[(-20)+4]
 27587  019AA6  50E1               	movf	fsr1l,w,c
 27588  019AA8  0FF0               	addlw	-16
 27589  019AAA  6ED9               	movwf	fsr2l,c
 27590  019AAC  50E2               	movf	fsr1h,w,c
 27591  019AAE  6EDA               	movwf	fsr2h,c
 27592  019AB0  0EFF               	movlw	255
 27593  019AB2  22DA               	addwfc	fsr2h,f,c
 27594  019AB4  2835               	incf	(btemp+11)^0,w,c
 27595  019AB6  52DE               	movf	postinc2,f,c
 27596  019AB8  D00F               	goto	u15480
 27597  019ABA                     u15485:
 27598  019ABA  52DE               	movf	postinc2,f,c
 27599  019ABC  52DE               	movf	postinc2,f,c
 27600  019ABE  52DE               	movf	postinc2,f,c
 27601  019AC0  52DE               	movf	postinc2,f,c
 27602  019AC2  52DE               	movf	postinc2,f,c
 27603  019AC4  52DE               	movf	postinc2,f,c
 27604  019AC6  90D8               	bcf	status,0,c
 27605  019AC8  32DD               	rrcf	postdec2,f,c
 27606  019ACA  32DD               	rrcf	postdec2,f,c
 27607  019ACC  32DD               	rrcf	postdec2,f,c
 27608  019ACE  32DD               	rrcf	postdec2,f,c
 27609  019AD0  32DD               	rrcf	postdec2,f,c
 27610  019AD2  32DD               	rrcf	postdec2,f,c
 27611  019AD4  32DD               	rrcf	postdec2,f,c
 27612  019AD6  32DE               	rrcf	postinc2,f,c
 27613  019AD8                     u15480:
 27614  019AD8  2EE8               	decfsz	wreg,f,c
 27615  019ADA  D7EF               	goto	u15485
 27616  019ADC                     l16022:
 27617                           
 27618                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 27619                           ;stkvar	_i @ sp[(-20)+14]
 27620  019ADC  0EFB               	movlw	-5
 27621  019ADE  BEE3               	btfsc	plusw1,7,c
 27622  019AE0  D03A               	goto	u15530
 27623  019AE2  0EFB               	movlw	-5
 27624  019AE4  50E3               	movf	plusw1,w,c
 27625  019AE6  E108               	bnz	u15490
 27626  019AE8  0EFA               	movlw	-6
 27627  019AEA  006F FF8C  F02A    	movff	plusw1,btemp
 27628  019AF0  0E02               	movlw	2
 27629  019AF2  5E2A               	subwf	btemp^0,f,c
 27630  019AF4  A0D8               	btfss	status,0,c
 27631  019AF6  D02F               	goto	u15530
 27632  019AF8                     u15490:
 27633                           
 27634                           ;stkvar	_n @ sp[(-20)+4]
 27635  019AF8  0EF0               	movlw	-16
 27636  019AFA  50E3               	movf	plusw1,w,c
 27637  019AFC  E115               	bnz	u15501
 27638  019AFE  0EF1               	movlw	-15
 27639  019B00  50E3               	movf	plusw1,w,c
 27640  019B02  E112               	bnz	u15501
 27641  019B04  0EF2               	movlw	-14
 27642  019B06  50E3               	movf	plusw1,w,c
 27643  019B08  E10F               	bnz	u15501
 27644  019B0A  0EF3               	movlw	-13
 27645  019B0C  50E3               	movf	plusw1,w,c
 27646  019B0E  E10C               	bnz	u15501
 27647  019B10  0EF4               	movlw	-12
 27648  019B12  50E3               	movf	plusw1,w,c
 27649  019B14  E109               	bnz	u15501
 27650  019B16  0EF5               	movlw	-11
 27651  019B18  50E3               	movf	plusw1,w,c
 27652  019B1A  E106               	bnz	u15501
 27653  019B1C  0EF6               	movlw	-10
 27654  019B1E  50E3               	movf	plusw1,w,c
 27655  019B20  E103               	bnz	u15501
 27656  019B22  0EF7               	movlw	-9
 27657  019B24  50E3               	movf	plusw1,w,c
 27658  019B26  A4D8               	btfss	status,2,c
 27659  019B28                     u15501:
 27660  019B28  D6EB               	goto	l15990
 27661                           
 27662                           ;stkvar	_p @ sp[(-20)+18]
 27663  019B2A  0EFF               	movlw	-1
 27664  019B2C  BEE3               	btfsc	plusw1,7,c
 27665  019B2E  D007               	goto	u15510
 27666  019B30  0EFF               	movlw	-1
 27667  019B32  50E3               	movf	plusw1,w,c
 27668  019B34  E103               	bnz	u15511
 27669  019B36  0EFE               	movlw	-2
 27670  019B38  04E3               	decf	plusw1,w,c
 27671  019B3A  B0D8               	btfsc	status,0,c
 27672  019B3C                     u15511:
 27673  019B3C  D6E1               	goto	l15990
 27674  019B3E                     u15510:
 27675                           
 27676                           ;stkvar	_w @ sp[(-20)+16]
 27677  019B3E  0EFD               	movlw	-3
 27678  019B40  BEE3               	btfsc	plusw1,7,c
 27679  019B42  D009               	goto	u15530
 27680  019B44  0EFD               	movlw	-3
 27681  019B46  50E3               	movf	plusw1,w,c
 27682  019B48  E104               	bnz	u15520
 27683  019B4A  0EFC               	movlw	-4
 27684  019B4C  04E3               	decf	plusw1,w,c
 27685  019B4E  A0D8               	btfss	status,0,c
 27686  019B50  D002               	goto	u15530
 27687  019B52                     u15520:
 27688  019B52  B24E               	btfsc	_flags^0,1,c
 27689  019B54  D6D5               	goto	l15990
 27690  019B56                     u15530:
 27691                           
 27692                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 27693  019B56  A84E               	btfss	_flags^0,4,c
 27694  019B58  D036               	goto	l16038
 27695                           
 27696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 27697                           ;stkvar	_i @ sp[(-20)+14]
 27698  019B5A  50E1               	movf	fsr1l,w,c
 27699  019B5C  0FFA               	addlw	-6
 27700  019B5E  6ED9               	movwf	fsr2l,c
 27701  019B60  50E2               	movf	fsr1h,w,c
 27702  019B62  6EDA               	movwf	fsr2h,c
 27703  019B64  0EFF               	movlw	255
 27704  019B66  22DA               	addwfc	fsr2h,f,c
 27705  019B68  06DE               	decf	postinc2,f,c
 27706  019B6A  0E00               	movlw	0
 27707  019B6C  5ADD               	subwfb	postdec2,f,c
 27708                           
 27709                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 27710                           ;stkvar	_x @ sp[(-20)+-11]
 27711                           ;stkvar	_i @ sp[(-20)+14]
 27712  019B6E  0EFA               	movlw	-6
 27713  019B70  006F FF8C  F034    	movff	plusw1,btemp+10
 27714  019B76  0EFB               	movlw	-5
 27715  019B78  006F FF8C  F035    	movff	plusw1,btemp+11
 27716  019B7E  0E54               	movlw	low _dbuf
 27717  019B80  2434               	addwf	(btemp+10)^0,w,c
 27718  019B82  6ED9               	movwf	fsr2l,c
 27719  019B84  0E03               	movlw	high _dbuf
 27720  019B86  2035               	addwfc	(btemp+11)^0,w,c
 27721  019B88  6EDA               	movwf	fsr2h,c
 27722  019B8A  0EE1               	movlw	-31
 27723  019B8C  006F FF8F FFDF     	movff	plusw1,indf2
 27724                           
 27725                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 27726                           ;stkvar	_i @ sp[(-20)+14]
 27727  019B92  50E1               	movf	fsr1l,w,c
 27728  019B94  0FFA               	addlw	-6
 27729  019B96  6ED9               	movwf	fsr2l,c
 27730  019B98  50E2               	movf	fsr1h,w,c
 27731  019B9A  6EDA               	movwf	fsr2h,c
 27732  019B9C  0EFF               	movlw	255
 27733  019B9E  22DA               	addwfc	fsr2h,f,c
 27734  019BA0  06DE               	decf	postinc2,f,c
 27735  019BA2  0E00               	movlw	0
 27736  019BA4  5ADD               	subwfb	postdec2,f,c
 27737                           
 27738                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 27739                           ;stkvar	_i @ sp[(-20)+14]
 27740  019BA6  0EFA               	movlw	-6
 27741  019BA8  006F FF8C  F034    	movff	plusw1,btemp+10
 27742  019BAE  0EFB               	movlw	-5
 27743  019BB0  006F FF8C  F035    	movff	plusw1,btemp+11
 27744  019BB6  0E54               	movlw	low _dbuf
 27745  019BB8  2434               	addwf	(btemp+10)^0,w,c
 27746  019BBA  6ED9               	movwf	fsr2l,c
 27747  019BBC  0E03               	movlw	high _dbuf
 27748  019BBE  2035               	addwfc	(btemp+11)^0,w,c
 27749  019BC0  6EDA               	movwf	fsr2h,c
 27750  019BC2  0E30               	movlw	48
 27751  019BC4  6EDF               	movwf	indf2,c
 27752  019BC6                     l16038:
 27753                           
 27754                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 27755                           ;stkvar	_w @ sp[(-20)+16]
 27756  019BC6  0EFC               	movlw	-4
 27757  019BC8  006F FF8F FFE6     	movff	plusw1,postinc1
 27758  019BCE  006F FF8F FFE6     	movff	plusw1,postinc1
 27759                           
 27760                           ;stkvar	_i @ sp[(-22)+14]
 27761  019BD4  0E54               	movlw	low _dbuf
 27762  019BD6  6E34               	movwf	(btemp+10)^0,c
 27763  019BD8  0E03               	movlw	high _dbuf
 27764  019BDA  6E35               	movwf	(btemp+11)^0,c
 27765  019BDC  0EF8               	movlw	-8
 27766  019BDE  50E3               	movf	plusw1,w,c
 27767  019BE0  2634               	addwf	(btemp+10)^0,f,c
 27768  019BE2  0EF9               	movlw	-7
 27769  019BE4  50E3               	movf	plusw1,w,c
 27770  019BE6  2235               	addwfc	(btemp+11)^0,f,c
 27771  019BE8  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 27772  019BEE  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 27773                           
 27774                           ;stkvar	_fp @ sp[(-24)+-2]
 27775  019BF4  0EE6               	movlw	-26
 27776  019BF6  006F FF8F FFE6     	movff	plusw1,postinc1
 27777  019BFC  006F FF8F FFE6     	movff	plusw1,postinc1
 27778  019C02  EC6F  F0FB         	call	_pad	;wreg free
 27779                           
 27780                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 27781  019C06  0EE1               	movlw	225
 27782  019C08  26E1               	addwf	fsr1l,f,c
 27783  019C0A  0EFF               	movlw	255
 27784  019C0C  22E2               	addwfc	fsr1h,f,c
 27785  019C0E  0012               	return		;funcret
 27786  019C10                     __end_of_xtoa:
 27787                           	opt callstack 0
 27788                           
 27789 ;; *************** function _toupper *****************
 27790 ;; Defined at:
 27791 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 27792 ;; Parameters:    Size  Location     Type
 27793 ;;  c               2  [STACK] int 
 27794 ;; Auto vars:     Size  Location     Type
 27795 ;;		None
 27796 ;; Return value:  Size  Location     Type
 27797 ;;                  2  [STACK] int 
 27798 ;; Registers used:
 27799 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 27800 ;; Tracked objects:
 27801 ;;		On entry : 0/3
 27802 ;;		On exit  : 0/0
 27803 ;;		Unchanged: 0/0
 27804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27809 ;;Total ram usage:        0 bytes
 27810 ;; Hardware stack levels used:    1
 27811 ;; Hardware stack levels required when called:   16
 27812 ;; This function calls:
 27813 ;;		_islower
 27814 ;; This function is called by:
 27815 ;;		_xtoa
 27816 ;; This function uses a reentrant model
 27817 ;;
 27818                           
 27819                           	psect	text95
 27820  000E84                     __ptext95:
 27821                           	opt callstack 0
 27822  000E84                     _toupper:
 27823                           	opt callstack 0
 27824                           
 27825                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27826  000E84  52E6               	movf	postinc1,f,c
 27827  000E86  52E6               	movf	postinc1,f,c
 27828                           
 27829                           ;stkvar	_c @ sp[(-2)+-2]
 27830                           
 27831                           ;incstack = 0
 27832 ;; hardware stack exceeded
 27833  000E88  0EFC               	movlw	-4
 27834  000E8A  50E3               	movf	plusw1,w,c
 27835  000E8C  0F9F               	addlw	159
 27836  000E8E  6E34               	movwf	(btemp+10)^0,c
 27837  000E90  0EFD               	movlw	-3
 27838  000E92  006F FF8C  F035    	movff	plusw1,btemp+11
 27839  000E98  0EFF               	movlw	255
 27840  000E9A  2235               	addwfc	(btemp+11)^0,f,c
 27841  000E9C  5035               	movf	(btemp+11)^0,w,c
 27842  000E9E  E106               	bnz	u7970
 27843  000EA0  0E1A               	movlw	26
 27844  000EA2  5C34               	subwf	(btemp+10)^0,w,c
 27845  000EA4  B0D8               	btfsc	status,0,c
 27846  000EA6  D002               	goto	u7970
 27847  000EA8  0E01               	movlw	1
 27848  000EAA  D001               	goto	u7980
 27849  000EAC                     u7970:
 27850  000EAC  0E00               	movlw	0
 27851  000EAE                     u7980:
 27852  000EAE  6E34               	movwf	(btemp+10)^0,c
 27853  000EB0  6A35               	clrf	(btemp+11)^0,c
 27854                           
 27855                           ;stkvar	_toupper$7588 @ sp[(-2)+0]
 27856  000EB2  0EFE               	movlw	-2
 27857  000EB4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27858  000EBA  0EFF               	movlw	-1
 27859  000EBC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27860                           
 27861                           ;stkvar	_toupper$7588 @ sp[(-2)+0]
 27862  000EC2  0EFE               	movlw	-2
 27863  000EC4  006F FF8C  F02A    	movff	plusw1,btemp
 27864  000ECA  0EFF               	movlw	-1
 27865  000ECC  50E3               	movf	plusw1,w,c
 27866  000ECE  102A               	iorwf	btemp^0,w,c
 27867  000ED0  B4D8               	btfsc	status,2,c
 27868  000ED2  D00D               	goto	l10162
 27869                           
 27870                           ;stkvar	_c @ sp[(-2)+-2]
 27871  000ED4  0EFC               	movlw	-4
 27872  000ED6  006F FF8C  F02A    	movff	plusw1,btemp
 27873  000EDC  0EFD               	movlw	-3
 27874  000EDE  006F FF8C  F02B    	movff	plusw1,btemp+1
 27875  000EE4  0E5F               	movlw	95
 27876  000EE6  162A               	andwf	btemp^0,f,c
 27877  000EE8  0E00               	movlw	0
 27878  000EEA  162B               	andwf	(btemp+1)^0,f,c
 27879  000EEC  D008               	goto	l3836
 27880  000EEE                     l10162:
 27881                           
 27882                           ;stkvar	_c @ sp[(-2)+-2]
 27883  000EEE  0EFC               	movlw	-4
 27884  000EF0  006F FF8C  F02A    	movff	plusw1,btemp
 27885  000EF6  0EFD               	movlw	-3
 27886  000EF8  006F FF8C  F02B    	movff	plusw1,btemp+1
 27887  000EFE                     l3836:
 27888                           
 27889                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 27890  000EFE  52E5               	movf	postdec1,f,c
 27891  000F00  52E5               	movf	postdec1,f,c
 27892  000F02  52E5               	movf	postdec1,f,c
 27893  000F04  52E5               	movf	postdec1,f,c
 27894  000F06  0012               	return		;funcret
 27895  000F08                     __end_of_toupper:
 27896                           	opt callstack 0
 27897                           
 27898 ;; *************** function _islower *****************
 27899 ;; Defined at:
 27900 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 27901 ;; Parameters:    Size  Location     Type
 27902 ;;  c               2  [STACK] int 
 27903 ;; Auto vars:     Size  Location     Type
 27904 ;;		None
 27905 ;; Return value:  Size  Location     Type
 27906 ;;                  2  [STACK] int 
 27907 ;; Registers used:
 27908 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 27909 ;; Tracked objects:
 27910 ;;		On entry : 0/0
 27911 ;;		On exit  : 0/0
 27912 ;;		Unchanged: 0/0
 27913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27918 ;;Total ram usage:        0 bytes
 27919 ;; Hardware stack levels used:    1
 27920 ;; Hardware stack levels required when called:   15
 27921 ;; This function calls:
 27922 ;;		Nothing
 27923 ;; This function is called by:
 27924 ;;		_toupper
 27925 ;; This function uses a reentrant model
 27926 ;;
 27927                           
 27928                           	psect	text96
 27929  001FC6                     __ptext96:
 27930                           	opt callstack 0
 27931  001FC6                     _islower:
 27932                           	opt callstack 0
 27933                           
 27934                           ;stkvar	_c @ sp[(0)+-2]
 27935                           
 27936                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27937                           ;incstack = 0
 27938 ;; hardware stack exceeded
 27939  001FC6  0EFE               	movlw	-2
 27940  001FC8  50E3               	movf	plusw1,w,c
 27941  001FCA  0F9F               	addlw	159
 27942  001FCC  6E34               	movwf	(btemp+10)^0,c
 27943  001FCE  0EFF               	movlw	-1
 27944  001FD0  006F FF8C  F035    	movff	plusw1,btemp+11
 27945  001FD6  0EFF               	movlw	255
 27946  001FD8  2235               	addwfc	(btemp+11)^0,f,c
 27947  001FDA  5035               	movf	(btemp+11)^0,w,c
 27948  001FDC  E106               	bnz	u7600
 27949  001FDE  0E1A               	movlw	26
 27950  001FE0  5C34               	subwf	(btemp+10)^0,w,c
 27951  001FE2  B0D8               	btfsc	status,0,c
 27952  001FE4  D002               	goto	u7600
 27953  001FE6  0E01               	movlw	1
 27954  001FE8  D001               	goto	u7610
 27955  001FEA                     u7600:
 27956  001FEA  0E00               	movlw	0
 27957  001FEC                     u7610:
 27958  001FEC  6E2A               	movwf	btemp^0,c
 27959  001FEE  6A2B               	clrf	(btemp+1)^0,c
 27960                           
 27961                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 27962  001FF0  52E5               	movf	postdec1,f,c
 27963  001FF2  52E5               	movf	postdec1,f,c
 27964  001FF4  0012               	return		;funcret
 27965  001FF6                     __end_of_islower:
 27966                           	opt callstack 0
 27967                           
 27968 ;; *************** function _isalpha *****************
 27969 ;; Defined at:
 27970 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 27971 ;; Parameters:    Size  Location     Type
 27972 ;;  c               2  [STACK] int 
 27973 ;; Auto vars:     Size  Location     Type
 27974 ;;		None
 27975 ;; Return value:  Size  Location     Type
 27976 ;;                  2  [STACK] int 
 27977 ;; Registers used:
 27978 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 27979 ;; Tracked objects:
 27980 ;;		On entry : 0/0
 27981 ;;		On exit  : 0/0
 27982 ;;		Unchanged: 0/0
 27983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27988 ;;Total ram usage:        0 bytes
 27989 ;; Hardware stack levels used:    1
 27990 ;; Hardware stack levels required when called:   15
 27991 ;; This function calls:
 27992 ;;		Nothing
 27993 ;; This function is called by:
 27994 ;;		_xtoa
 27995 ;; This function uses a reentrant model
 27996 ;;
 27997                           
 27998                           	psect	text97
 27999  001B3E                     __ptext97:
 28000                           	opt callstack 0
 28001  001B3E                     _isalpha:
 28002                           	opt callstack 0
 28003                           
 28004                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28005                           ;incstack = 0
 28006 ;; hardware stack exceeded
 28007  001B3E  0E9F               	movlw	159
 28008  001B40  6E34               	movwf	(btemp+10)^0,c
 28009  001B42  0EFF               	movlw	255
 28010  001B44  6E35               	movwf	(btemp+11)^0,c
 28011                           
 28012                           ;stkvar	_c @ sp[(0)+-2]
 28013  001B46  0EFE               	movlw	-2
 28014  001B48  006F FF8C  F032    	movff	plusw1,btemp+8
 28015  001B4E  0EFF               	movlw	-1
 28016  001B50  006F FF8C  F033    	movff	plusw1,btemp+9
 28017  001B56  0E20               	movlw	32
 28018  001B58  1232               	iorwf	(btemp+8)^0,f,c
 28019  001B5A  0E00               	movlw	0
 28020  001B5C  1233               	iorwf	(btemp+9)^0,f,c
 28021  001B5E  5034               	movf	(btemp+10)^0,w,c
 28022  001B60  2632               	addwf	(btemp+8)^0,f,c
 28023  001B62  5035               	movf	(btemp+11)^0,w,c
 28024  001B64  2233               	addwfc	(btemp+9)^0,f,c
 28025  001B66  5033               	movf	(btemp+9)^0,w,c
 28026  001B68  E106               	bnz	u7950
 28027  001B6A  0E1A               	movlw	26
 28028  001B6C  5C32               	subwf	(btemp+8)^0,w,c
 28029  001B6E  B0D8               	btfsc	status,0,c
 28030  001B70  D002               	goto	u7950
 28031  001B72  0E01               	movlw	1
 28032  001B74  D001               	goto	u7960
 28033  001B76                     u7950:
 28034  001B76  0E00               	movlw	0
 28035  001B78                     u7960:
 28036  001B78  6E2A               	movwf	btemp^0,c
 28037  001B7A  6A2B               	clrf	(btemp+1)^0,c
 28038                           
 28039                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 28040  001B7C  52E5               	movf	postdec1,f,c
 28041  001B7E  52E5               	movf	postdec1,f,c
 28042  001B80  0012               	return		;funcret
 28043  001B82                     __end_of_isalpha:
 28044                           	opt callstack 0
 28045                           
 28046 ;; *************** function _utoa *****************
 28047 ;; Defined at:
 28048 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 28049 ;; Parameters:    Size  Location     Type
 28050 ;;  fp              2  [STACK] PTR struct _IO_FILE
 28051 ;;		 -> f(6), NULL(0), 
 28052 ;;  d               8  [STACK] unsigned long long 
 28053 ;; Auto vars:     Size  Location     Type
 28054 ;;  n               8  [STACK] unsigned long long 
 28055 ;;  i               2  [STACK] int 
 28056 ;;  w               2  [STACK] int 
 28057 ;;  p               2  [STACK] int 
 28058 ;; Return value:  Size  Location     Type
 28059 ;;                  2  [STACK] int 
 28060 ;; Registers used:
 28061 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 28062 ;; Tracked objects:
 28063 ;;		On entry : 0/0
 28064 ;;		On exit  : 0/0
 28065 ;;		Unchanged: 0/0
 28066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28071 ;;Total ram usage:        0 bytes
 28072 ;; Hardware stack levels used:    1
 28073 ;; Hardware stack levels required when called:   20
 28074 ;; This function calls:
 28075 ;;		___lodiv
 28076 ;;		___lomod
 28077 ;;		_pad
 28078 ;; This function is called by:
 28079 ;;		_vfpfcnvrt
 28080 ;; This function uses a reentrant model
 28081 ;;
 28082                           
 28083                           	psect	text98
 28084  01A630                     __ptext98:
 28085                           	opt callstack 0
 28086  01A630                     _utoa:
 28087                           	opt callstack 0
 28088                           
 28089                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 28090  01A630  0E0E               	movlw	14
 28091  01A632  26E1               	addwf	fsr1l,f,c
 28092  01A634  0E00               	movlw	0
 28093  01A636  22E2               	addwfc	fsr1h,f,c
 28094                           
 28095                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 28096                           
 28097                           ;incstack = 0
 28098 ;; hardware stack exceeded
 28099  01A638  AE4D               	btfss	(_prec+1)^0,7,c
 28100                           
 28101                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 28102  01A63A  924E               	bcf	_flags^0,1,c
 28103                           
 28104                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 28105  01A63C  BE4D               	btfsc	(_prec+1)^0,7,c
 28106  01A63E  D005               	goto	u15300
 28107  01A640  504D               	movf	(_prec+1)^0,w,c
 28108  01A642  E110               	bnz	l15938
 28109  01A644  044C               	decf	_prec^0,w,c
 28110  01A646  B0D8               	btfsc	status,0,c
 28111  01A648  D00D               	goto	l15938
 28112  01A64A                     u15300:
 28113  01A64A  0E01               	movlw	1
 28114  01A64C  6E34               	movwf	(btemp+10)^0,c
 28115  01A64E  0E00               	movlw	0
 28116  01A650  6E35               	movwf	(btemp+11)^0,c
 28117                           
 28118                           ;stkvar	_p @ sp[(-14)+12]
 28119  01A652  0EFE               	movlw	-2
 28120  01A654  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28121  01A65A  0EFF               	movlw	-1
 28122  01A65C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28123  01A662  D008               	goto	l2624
 28124  01A664                     l15938:
 28125                           
 28126                           ;stkvar	_p @ sp[(-14)+12]
 28127  01A664  0EFE               	movlw	-2
 28128  01A666  0060  F133  FFE3   	movff	_prec,plusw1
 28129  01A66C  0EFF               	movlw	-1
 28130  01A66E  0060  F137  FFE3   	movff	_prec+1,plusw1
 28131  01A674                     l2624:
 28132                           
 28133                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 28134                           ;stkvar	_w @ sp[(-14)+10]
 28135  01A674  0EFC               	movlw	-4
 28136  01A676  0060  F12B  FFE3   	movff	_width,plusw1
 28137  01A67C  0EFD               	movlw	-3
 28138  01A67E  0060  F12F  FFE3   	movff	_width+1,plusw1
 28139                           
 28140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 28141                           ;stkvar	_d @ sp[(-14)+-10]
 28142  01A684  0EE8               	movlw	232
 28143  01A686  24E1               	addwf	fsr1l,w,c
 28144  01A688  6ED9               	movwf	fsr2l,c
 28145  01A68A  0EFF               	movlw	255
 28146  01A68C  20E2               	addwfc	fsr1h,w,c
 28147  01A68E  6EDA               	movwf	fsr2h,c
 28148                           
 28149                           ;stkvar	_n @ sp[(-14)+0]
 28150  01A690  0E08               	movlw	8
 28151  01A692  6E2A               	movwf	btemp^0,c
 28152  01A694  0EF2               	movlw	-14
 28153  01A696                     us1531999:
 28154  01A696  006F FF7B FFE3     	movff	postinc2,plusw1
 28155  01A69C  28E8               	incf	wreg,w,c
 28156  01A69E  2E2A               	decfsz	btemp^0,f,c
 28157  01A6A0  D7FA               	bra	us1531999
 28158                           
 28159                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 28160  01A6A2  0E4F               	movlw	79
 28161  01A6A4  6E34               	movwf	(btemp+10)^0,c
 28162  01A6A6  0E00               	movlw	0
 28163  01A6A8  6E35               	movwf	(btemp+11)^0,c
 28164                           
 28165                           ;stkvar	_i @ sp[(-14)+8]
 28166  01A6AA  0EFA               	movlw	-6
 28167  01A6AC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28168  01A6B2  0EFB               	movlw	-5
 28169  01A6B4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28170                           
 28171                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 28172  01A6BA  0103               	movlb	3	; () banked
 28173  01A6BC  6BA3               	clrf	(_dbuf+79)& (0+255),b
 28174                           
 28175                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 28176  01A6BE  D0FB               	goto	l15956
 28177  01A6C0                     l15946:
 28178                           
 28179                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 28180                           ;stkvar	_i @ sp[(-14)+8]
 28181  01A6C0  50E1               	movf	fsr1l,w,c
 28182  01A6C2  0FFA               	addlw	-6
 28183  01A6C4  6ED9               	movwf	fsr2l,c
 28184  01A6C6  50E2               	movf	fsr1h,w,c
 28185  01A6C8  6EDA               	movwf	fsr2h,c
 28186  01A6CA  0EFF               	movlw	255
 28187  01A6CC  22DA               	addwfc	fsr2h,f,c
 28188  01A6CE  06DE               	decf	postinc2,f,c
 28189  01A6D0  0E00               	movlw	0
 28190  01A6D2  5ADD               	subwfb	postdec2,f,c
 28191                           
 28192                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 28193  01A6D4  0E0A               	movlw	10
 28194  01A6D6  6EE6               	movwf	postinc1,c
 28195  01A6D8  0E00               	movlw	0
 28196  01A6DA  6EE6               	movwf	postinc1,c
 28197  01A6DC  0E00               	movlw	0
 28198  01A6DE  6EE6               	movwf	postinc1,c
 28199  01A6E0  0E00               	movlw	0
 28200  01A6E2  6EE6               	movwf	postinc1,c
 28201  01A6E4  0E00               	movlw	0
 28202  01A6E6  6EE6               	movwf	postinc1,c
 28203  01A6E8  0E00               	movlw	0
 28204  01A6EA  6EE6               	movwf	postinc1,c
 28205  01A6EC  0E00               	movlw	0
 28206  01A6EE  6EE6               	movwf	postinc1,c
 28207  01A6F0  0E00               	movlw	0
 28208  01A6F2  6EE6               	movwf	postinc1,c
 28209                           
 28210                           ;stkvar	_n @ sp[(-22)+0]
 28211  01A6F4  50E1               	movf	fsr1l,w,c
 28212  01A6F6  0FEA               	addlw	-22
 28213  01A6F8  6ED9               	movwf	fsr2l,c
 28214  01A6FA  50E2               	movf	fsr1h,w,c
 28215  01A6FC  6EDA               	movwf	fsr2h,c
 28216  01A6FE  0EFF               	movlw	255
 28217  01A700  22DA               	addwfc	fsr2h,f,c
 28218  01A702  006F FF7B FFE6     	movff	postinc2,postinc1
 28219  01A708  006F FF7B FFE6     	movff	postinc2,postinc1
 28220  01A70E  006F FF7B FFE6     	movff	postinc2,postinc1
 28221  01A714  006F FF7B FFE6     	movff	postinc2,postinc1
 28222  01A71A  006F FF7B FFE6     	movff	postinc2,postinc1
 28223  01A720  006F FF7B FFE6     	movff	postinc2,postinc1
 28224  01A726  006F FF7B FFE6     	movff	postinc2,postinc1
 28225  01A72C  006F FF7B FFE6     	movff	postinc2,postinc1
 28226  01A732  ECFC  F0F7         	call	___lomod	;wreg free
 28227  01A736  52E5               	movf	postdec1,f,c
 28228  01A738  006F FF9C  F041    	movff	indf1,btemp+23
 28229  01A73E  52E5               	movf	postdec1,f,c
 28230  01A740  006F FF9C  F040    	movff	indf1,btemp+22
 28231  01A746  52E5               	movf	postdec1,f,c
 28232  01A748  006F FF9C  F03F    	movff	indf1,btemp+21
 28233  01A74E  52E5               	movf	postdec1,f,c
 28234  01A750  006F FF9C  F03E    	movff	indf1,btemp+20
 28235  01A756  52E5               	movf	postdec1,f,c
 28236  01A758  006F FF9C  F03D    	movff	indf1,btemp+19
 28237  01A75E  52E5               	movf	postdec1,f,c
 28238  01A760  006F FF9C  F03C    	movff	indf1,btemp+18
 28239  01A766  52E5               	movf	postdec1,f,c
 28240  01A768  006F FF9C  F03B    	movff	indf1,btemp+17
 28241  01A76E  52E5               	movf	postdec1,f,c
 28242  01A770  006F FF9C  F03A    	movff	indf1,btemp+16
 28243  01A776  0EF8               	movlw	248
 28244  01A778  26E1               	addwf	fsr1l,f,c
 28245  01A77A  0EFF               	movlw	255
 28246  01A77C  22E2               	addwfc	fsr1h,f,c
 28247  01A77E  0E30               	movlw	48
 28248  01A780  263A               	addwf	(btemp+16)^0,f,c
 28249                           
 28250                           ;stkvar	_i @ sp[(-14)+8]
 28251  01A782  0EFA               	movlw	-6
 28252  01A784  006F FF8C  F034    	movff	plusw1,btemp+10
 28253  01A78A  0EFB               	movlw	-5
 28254  01A78C  006F FF8C  F035    	movff	plusw1,btemp+11
 28255  01A792  0E54               	movlw	low _dbuf
 28256  01A794  2434               	addwf	(btemp+10)^0,w,c
 28257  01A796  6ED9               	movwf	fsr2l,c
 28258  01A798  0E03               	movlw	high _dbuf
 28259  01A79A  2035               	addwfc	(btemp+11)^0,w,c
 28260  01A79C  6EDA               	movwf	fsr2h,c
 28261  01A79E  0060  F0EB  FFDF   	movff	btemp+16,indf2
 28262                           
 28263                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 28264                           ;stkvar	_p @ sp[(-14)+12]
 28265  01A7A4  50E1               	movf	fsr1l,w,c
 28266  01A7A6  0FFE               	addlw	-2
 28267  01A7A8  6ED9               	movwf	fsr2l,c
 28268  01A7AA  50E2               	movf	fsr1h,w,c
 28269  01A7AC  6EDA               	movwf	fsr2h,c
 28270  01A7AE  0EFF               	movlw	255
 28271  01A7B0  22DA               	addwfc	fsr2h,f,c
 28272  01A7B2  06DE               	decf	postinc2,f,c
 28273  01A7B4  0E00               	movlw	0
 28274  01A7B6  5ADD               	subwfb	postdec2,f,c
 28275                           
 28276                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 28277                           ;stkvar	_w @ sp[(-14)+10]
 28278  01A7B8  50E1               	movf	fsr1l,w,c
 28279  01A7BA  0FFC               	addlw	-4
 28280  01A7BC  6ED9               	movwf	fsr2l,c
 28281  01A7BE  50E2               	movf	fsr1h,w,c
 28282  01A7C0  6EDA               	movwf	fsr2h,c
 28283  01A7C2  0EFF               	movlw	255
 28284  01A7C4  22DA               	addwfc	fsr2h,f,c
 28285  01A7C6  06DE               	decf	postinc2,f,c
 28286  01A7C8  0E00               	movlw	0
 28287  01A7CA  5ADD               	subwfb	postdec2,f,c
 28288                           
 28289                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 28290  01A7CC  0E0A               	movlw	10
 28291  01A7CE  6EE6               	movwf	postinc1,c
 28292  01A7D0  0E00               	movlw	0
 28293  01A7D2  6EE6               	movwf	postinc1,c
 28294  01A7D4  0E00               	movlw	0
 28295  01A7D6  6EE6               	movwf	postinc1,c
 28296  01A7D8  0E00               	movlw	0
 28297  01A7DA  6EE6               	movwf	postinc1,c
 28298  01A7DC  0E00               	movlw	0
 28299  01A7DE  6EE6               	movwf	postinc1,c
 28300  01A7E0  0E00               	movlw	0
 28301  01A7E2  6EE6               	movwf	postinc1,c
 28302  01A7E4  0E00               	movlw	0
 28303  01A7E6  6EE6               	movwf	postinc1,c
 28304  01A7E8  0E00               	movlw	0
 28305  01A7EA  6EE6               	movwf	postinc1,c
 28306                           
 28307                           ;stkvar	_n @ sp[(-22)+0]
 28308  01A7EC  50E1               	movf	fsr1l,w,c
 28309  01A7EE  0FEA               	addlw	-22
 28310  01A7F0  6ED9               	movwf	fsr2l,c
 28311  01A7F2  50E2               	movf	fsr1h,w,c
 28312  01A7F4  6EDA               	movwf	fsr2h,c
 28313  01A7F6  0EFF               	movlw	255
 28314  01A7F8  22DA               	addwfc	fsr2h,f,c
 28315  01A7FA  006F FF7B FFE6     	movff	postinc2,postinc1
 28316  01A800  006F FF7B FFE6     	movff	postinc2,postinc1
 28317  01A806  006F FF7B FFE6     	movff	postinc2,postinc1
 28318  01A80C  006F FF7B FFE6     	movff	postinc2,postinc1
 28319  01A812  006F FF7B FFE6     	movff	postinc2,postinc1
 28320  01A818  006F FF7B FFE6     	movff	postinc2,postinc1
 28321  01A81E  006F FF7B FFE6     	movff	postinc2,postinc1
 28322  01A824  006F FF7B FFE6     	movff	postinc2,postinc1
 28323  01A82A  EC64  F0F0         	call	___lodiv	;wreg free
 28324  01A82E  52E5               	movf	postdec1,f,c
 28325  01A830  006F FF9C  F041    	movff	indf1,btemp+23
 28326  01A836  52E5               	movf	postdec1,f,c
 28327  01A838  006F FF9C  F040    	movff	indf1,btemp+22
 28328  01A83E  52E5               	movf	postdec1,f,c
 28329  01A840  006F FF9C  F03F    	movff	indf1,btemp+21
 28330  01A846  52E5               	movf	postdec1,f,c
 28331  01A848  006F FF9C  F03E    	movff	indf1,btemp+20
 28332  01A84E  52E5               	movf	postdec1,f,c
 28333  01A850  006F FF9C  F03D    	movff	indf1,btemp+19
 28334  01A856  52E5               	movf	postdec1,f,c
 28335  01A858  006F FF9C  F03C    	movff	indf1,btemp+18
 28336  01A85E  52E5               	movf	postdec1,f,c
 28337  01A860  006F FF9C  F03B    	movff	indf1,btemp+17
 28338  01A866  52E5               	movf	postdec1,f,c
 28339  01A868  006F FF9C  F03A    	movff	indf1,btemp+16
 28340  01A86E  0EF8               	movlw	248
 28341  01A870  26E1               	addwf	fsr1l,f,c
 28342  01A872  0EFF               	movlw	255
 28343  01A874  22E2               	addwfc	fsr1h,f,c
 28344                           
 28345                           ;stkvar	_n @ sp[(-14)+0]
 28346  01A876  0EF2               	movlw	-14
 28347  01A878  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 28348  01A87E  0EF3               	movlw	-13
 28349  01A880  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 28350  01A886  0EF4               	movlw	-12
 28351  01A888  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 28352  01A88E  0EF5               	movlw	-11
 28353  01A890  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 28354  01A896  0EF6               	movlw	-10
 28355  01A898  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 28356  01A89E  0EF7               	movlw	-9
 28357  01A8A0  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 28358  01A8A6  0EF8               	movlw	-8
 28359  01A8A8  0060  F103  FFE3   	movff	btemp+22,plusw1
 28360  01A8AE  0EF9               	movlw	-7
 28361  01A8B0  0060  F107  FFE3   	movff	btemp+23,plusw1
 28362  01A8B6                     l15956:
 28363                           
 28364                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 28365                           ;stkvar	_i @ sp[(-14)+8]
 28366  01A8B6  0EFA               	movlw	-6
 28367  01A8B8  006F FF8C  F02A    	movff	plusw1,btemp
 28368  01A8BE  0EFB               	movlw	-5
 28369  01A8C0  50E3               	movf	plusw1,w,c
 28370  01A8C2  102A               	iorwf	btemp^0,w,c
 28371  01A8C4  B4D8               	btfsc	status,2,c
 28372  01A8C6  D02F               	goto	u15360
 28373                           
 28374                           ;stkvar	_n @ sp[(-14)+0]
 28375  01A8C8  0EF2               	movlw	-14
 28376  01A8CA  50E3               	movf	plusw1,w,c
 28377  01A8CC  E115               	bnz	u15331
 28378  01A8CE  0EF3               	movlw	-13
 28379  01A8D0  50E3               	movf	plusw1,w,c
 28380  01A8D2  E112               	bnz	u15331
 28381  01A8D4  0EF4               	movlw	-12
 28382  01A8D6  50E3               	movf	plusw1,w,c
 28383  01A8D8  E10F               	bnz	u15331
 28384  01A8DA  0EF5               	movlw	-11
 28385  01A8DC  50E3               	movf	plusw1,w,c
 28386  01A8DE  E10C               	bnz	u15331
 28387  01A8E0  0EF6               	movlw	-10
 28388  01A8E2  50E3               	movf	plusw1,w,c
 28389  01A8E4  E109               	bnz	u15331
 28390  01A8E6  0EF7               	movlw	-9
 28391  01A8E8  50E3               	movf	plusw1,w,c
 28392  01A8EA  E106               	bnz	u15331
 28393  01A8EC  0EF8               	movlw	-8
 28394  01A8EE  50E3               	movf	plusw1,w,c
 28395  01A8F0  E103               	bnz	u15331
 28396  01A8F2  0EF9               	movlw	-7
 28397  01A8F4  50E3               	movf	plusw1,w,c
 28398  01A8F6  A4D8               	btfss	status,2,c
 28399  01A8F8                     u15331:
 28400  01A8F8  D6E3               	goto	l15946
 28401                           
 28402                           ;stkvar	_p @ sp[(-14)+12]
 28403  01A8FA  0EFF               	movlw	-1
 28404  01A8FC  BEE3               	btfsc	plusw1,7,c
 28405  01A8FE  D007               	goto	u15340
 28406  01A900  0EFF               	movlw	-1
 28407  01A902  50E3               	movf	plusw1,w,c
 28408  01A904  E103               	bnz	u15341
 28409  01A906  0EFE               	movlw	-2
 28410  01A908  04E3               	decf	plusw1,w,c
 28411  01A90A  B0D8               	btfsc	status,0,c
 28412  01A90C                     u15341:
 28413  01A90C  D6D9               	goto	l15946
 28414  01A90E                     u15340:
 28415                           
 28416                           ;stkvar	_w @ sp[(-14)+10]
 28417  01A90E  0EFD               	movlw	-3
 28418  01A910  BEE3               	btfsc	plusw1,7,c
 28419  01A912  D009               	goto	u15360
 28420  01A914  0EFD               	movlw	-3
 28421  01A916  50E3               	movf	plusw1,w,c
 28422  01A918  E104               	bnz	u15350
 28423  01A91A  0EFC               	movlw	-4
 28424  01A91C  04E3               	decf	plusw1,w,c
 28425  01A91E  A0D8               	btfss	status,0,c
 28426  01A920  D002               	goto	u15360
 28427  01A922                     u15350:
 28428  01A922  B24E               	btfsc	_flags^0,1,c
 28429  01A924  D6CD               	goto	l15946
 28430  01A926                     u15360:
 28431                           
 28432                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 28433                           ;stkvar	_w @ sp[(-14)+10]
 28434  01A926  0EFC               	movlw	-4
 28435  01A928  006F FF8F FFE6     	movff	plusw1,postinc1
 28436  01A92E  006F FF8F FFE6     	movff	plusw1,postinc1
 28437                           
 28438                           ;stkvar	_i @ sp[(-16)+8]
 28439  01A934  0E54               	movlw	low _dbuf
 28440  01A936  6E34               	movwf	(btemp+10)^0,c
 28441  01A938  0E03               	movlw	high _dbuf
 28442  01A93A  6E35               	movwf	(btemp+11)^0,c
 28443  01A93C  0EF8               	movlw	-8
 28444  01A93E  50E3               	movf	plusw1,w,c
 28445  01A940  2634               	addwf	(btemp+10)^0,f,c
 28446  01A942  0EF9               	movlw	-7
 28447  01A944  50E3               	movf	plusw1,w,c
 28448  01A946  2235               	addwfc	(btemp+11)^0,f,c
 28449  01A948  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 28450  01A94E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 28451                           
 28452                           ;stkvar	_fp @ sp[(-18)+-2]
 28453  01A954  0EEC               	movlw	-20
 28454  01A956  006F FF8F FFE6     	movff	plusw1,postinc1
 28455  01A95C  006F FF8F FFE6     	movff	plusw1,postinc1
 28456  01A962  EC6F  F0FB         	call	_pad	;wreg free
 28457                           
 28458                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 28459  01A966  0EE8               	movlw	232
 28460  01A968  26E1               	addwf	fsr1l,f,c
 28461  01A96A  0EFF               	movlw	255
 28462  01A96C  22E2               	addwfc	fsr1h,f,c
 28463  01A96E  0012               	return		;funcret
 28464  01A970                     __end_of_utoa:
 28465                           	opt callstack 0
 28466                           
 28467 ;; *************** function ___lomod *****************
 28468 ;; Defined at:
 28469 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 28470 ;; Parameters:    Size  Location     Type
 28471 ;;  dividend        8  [STACK] unsigned long long 
 28472 ;;  divisor         8  [STACK] unsigned long long 
 28473 ;; Auto vars:     Size  Location     Type
 28474 ;;  counter         1  [STACK] unsigned char 
 28475 ;; Return value:  Size  Location     Type
 28476 ;;                  8  [STACK] unsigned long long 
 28477 ;; Registers used:
 28478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 28479 ;; Tracked objects:
 28480 ;;		On entry : 0/3
 28481 ;;		On exit  : 0/0
 28482 ;;		Unchanged: 0/0
 28483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28488 ;;Total ram usage:        0 bytes
 28489 ;; Hardware stack levels used:    1
 28490 ;; Hardware stack levels required when called:   15
 28491 ;; This function calls:
 28492 ;;		Nothing
 28493 ;; This function is called by:
 28494 ;;		_utoa
 28495 ;; This function uses a reentrant model
 28496 ;;
 28497                           
 28498                           	psect	text99
 28499  01EFF8                     __ptext99:
 28500                           	opt callstack 0
 28501  01EFF8                     ___lomod:
 28502                           	opt callstack 0
 28503                           
 28504                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 28505  01EFF8  52E6               	movf	postinc1,f,c
 28506                           
 28507                           ;stkvar	_divisor @ sp[(-1)+-16]
 28508                           
 28509                           ;incstack = 0
 28510 ;; hardware stack exceeded
 28511  01EFFA  0EEF               	movlw	-17
 28512  01EFFC  50E3               	movf	plusw1,w,c
 28513  01EFFE  E116               	bnz	u9160
 28514  01F000  0EF0               	movlw	-16
 28515  01F002  50E3               	movf	plusw1,w,c
 28516  01F004  E113               	bnz	u9160
 28517  01F006  0EF1               	movlw	-15
 28518  01F008  50E3               	movf	plusw1,w,c
 28519  01F00A  E110               	bnz	u9160
 28520  01F00C  0EF2               	movlw	-14
 28521  01F00E  50E3               	movf	plusw1,w,c
 28522  01F010  E10D               	bnz	u9160
 28523  01F012  0EF3               	movlw	-13
 28524  01F014  50E3               	movf	plusw1,w,c
 28525  01F016  E10A               	bnz	u9160
 28526  01F018  0EF4               	movlw	-12
 28527  01F01A  50E3               	movf	plusw1,w,c
 28528  01F01C  E107               	bnz	u9160
 28529  01F01E  0EF5               	movlw	-11
 28530  01F020  50E3               	movf	plusw1,w,c
 28531  01F022  E104               	bnz	u9160
 28532  01F024  0EF6               	movlw	-10
 28533  01F026  50E3               	movf	plusw1,w,c
 28534  01F028  B4D8               	btfsc	status,2,c
 28535  01F02A  D075               	goto	u9190
 28536  01F02C                     u9160:
 28537                           
 28538                           ;stkvar	_counter @ sp[(-1)+0]
 28539  01F02C  0EFF               	movlw	-1
 28540  01F02E  6AE3               	clrf	plusw1,c
 28541  01F030  D012               	goto	L29
 28542  01F032                     l10798:
 28543                           
 28544                           ;stkvar	_divisor @ sp[(-1)+-16]
 28545  01F032  90D8               	bcf	status,0,c
 28546  01F034  0EEF               	movlw	-17
 28547  01F036  36E3               	rlcf	plusw1,f,c
 28548  01F038  0EF0               	movlw	-16
 28549  01F03A  36E3               	rlcf	plusw1,f,c
 28550  01F03C  0EF1               	movlw	-15
 28551  01F03E  36E3               	rlcf	plusw1,f,c
 28552  01F040  0EF2               	movlw	-14
 28553  01F042  36E3               	rlcf	plusw1,f,c
 28554  01F044  0EF3               	movlw	-13
 28555  01F046  36E3               	rlcf	plusw1,f,c
 28556  01F048  0EF4               	movlw	-12
 28557  01F04A  36E3               	rlcf	plusw1,f,c
 28558  01F04C  0EF5               	movlw	-11
 28559  01F04E  36E3               	rlcf	plusw1,f,c
 28560  01F050  0EF6               	movlw	-10
 28561  01F052  36E3               	rlcf	plusw1,f,c
 28562                           
 28563                           ;stkvar	_counter @ sp[(-1)+0]
 28564  01F054  0EFF               	movlw	-1
 28565  01F056                     L29:
 28566  01F056  2AE3               	incf	plusw1,f,c
 28567                           
 28568                           ;stkvar	_divisor @ sp[(-1)+-16]
 28569  01F058  0EF6               	movlw	-10
 28570  01F05A  AEE3               	btfss	plusw1,7,c
 28571  01F05C  D7EA               	goto	l10798
 28572  01F05E                     u9170:
 28573                           
 28574                           ;stkvar	_divisor @ sp[(-1)+-16]
 28575                           ;stkvar	_dividend @ sp[(-1)+-8]
 28576  01F05E  50E1               	movf	fsr1l,w,c
 28577  01F060  0FF7               	addlw	-9
 28578  01F062  6ED9               	movwf	fsr2l,c
 28579  01F064  50E2               	movf	fsr1h,w,c
 28580  01F066  6EDA               	movwf	fsr2h,c
 28581  01F068  0EFF               	movlw	255
 28582  01F06A  22DA               	addwfc	fsr2h,f,c
 28583  01F06C  0EEF               	movlw	-17
 28584  01F06E  50E3               	movf	plusw1,w,c
 28585  01F070  5CDE               	subwf	postinc2,w,c
 28586  01F072  0EF0               	movlw	-16
 28587  01F074  50E3               	movf	plusw1,w,c
 28588  01F076  58DE               	subwfb	postinc2,w,c
 28589  01F078  0EF1               	movlw	-15
 28590  01F07A  50E3               	movf	plusw1,w,c
 28591  01F07C  58DE               	subwfb	postinc2,w,c
 28592  01F07E  0EF2               	movlw	-14
 28593  01F080  50E3               	movf	plusw1,w,c
 28594  01F082  58DE               	subwfb	postinc2,w,c
 28595  01F084  0EF3               	movlw	-13
 28596  01F086  50E3               	movf	plusw1,w,c
 28597  01F088  58DE               	subwfb	postinc2,w,c
 28598  01F08A  0EF4               	movlw	-12
 28599  01F08C  50E3               	movf	plusw1,w,c
 28600  01F08E  58DE               	subwfb	postinc2,w,c
 28601  01F090  0EF5               	movlw	-11
 28602  01F092  50E3               	movf	plusw1,w,c
 28603  01F094  58DE               	subwfb	postinc2,w,c
 28604  01F096  0EF6               	movlw	-10
 28605  01F098  50E3               	movf	plusw1,w,c
 28606  01F09A  58DE               	subwfb	postinc2,w,c
 28607  01F09C  A0D8               	btfss	status,0,c
 28608  01F09E  D01F               	goto	l10806
 28609                           
 28610                           ;stkvar	_divisor @ sp[(-1)+-16]
 28611                           ;stkvar	_dividend @ sp[(-1)+-8]
 28612  01F0A0  50E1               	movf	fsr1l,w,c
 28613  01F0A2  0FF7               	addlw	-9
 28614  01F0A4  6ED9               	movwf	fsr2l,c
 28615  01F0A6  50E2               	movf	fsr1h,w,c
 28616  01F0A8  6EDA               	movwf	fsr2h,c
 28617  01F0AA  0EFF               	movlw	255
 28618  01F0AC  22DA               	addwfc	fsr2h,f,c
 28619  01F0AE  0EEF               	movlw	-17
 28620  01F0B0  50E3               	movf	plusw1,w,c
 28621  01F0B2  5EDE               	subwf	postinc2,f,c
 28622  01F0B4  0EF0               	movlw	-16
 28623  01F0B6  50E3               	movf	plusw1,w,c
 28624  01F0B8  5ADE               	subwfb	postinc2,f,c
 28625  01F0BA  0EF1               	movlw	-15
 28626  01F0BC  50E3               	movf	plusw1,w,c
 28627  01F0BE  5ADE               	subwfb	postinc2,f,c
 28628  01F0C0  0EF2               	movlw	-14
 28629  01F0C2  50E3               	movf	plusw1,w,c
 28630  01F0C4  5ADE               	subwfb	postinc2,f,c
 28631  01F0C6  0EF3               	movlw	-13
 28632  01F0C8  50E3               	movf	plusw1,w,c
 28633  01F0CA  5ADE               	subwfb	postinc2,f,c
 28634  01F0CC  0EF4               	movlw	-12
 28635  01F0CE  50E3               	movf	plusw1,w,c
 28636  01F0D0  5ADE               	subwfb	postinc2,f,c
 28637  01F0D2  0EF5               	movlw	-11
 28638  01F0D4  50E3               	movf	plusw1,w,c
 28639  01F0D6  5ADE               	subwfb	postinc2,f,c
 28640  01F0D8  0EF6               	movlw	-10
 28641  01F0DA  50E3               	movf	plusw1,w,c
 28642  01F0DC  5ADE               	subwfb	postinc2,f,c
 28643  01F0DE                     l10806:
 28644                           
 28645                           ;stkvar	_divisor @ sp[(-1)+-16]
 28646  01F0DE  90D8               	bcf	status,0,c
 28647  01F0E0  0EF6               	movlw	-10
 28648  01F0E2  32E3               	rrcf	plusw1,f,c
 28649  01F0E4  0EF5               	movlw	-11
 28650  01F0E6  32E3               	rrcf	plusw1,f,c
 28651  01F0E8  0EF4               	movlw	-12
 28652  01F0EA  32E3               	rrcf	plusw1,f,c
 28653  01F0EC  0EF3               	movlw	-13
 28654  01F0EE  32E3               	rrcf	plusw1,f,c
 28655  01F0F0  0EF2               	movlw	-14
 28656  01F0F2  32E3               	rrcf	plusw1,f,c
 28657  01F0F4  0EF1               	movlw	-15
 28658  01F0F6  32E3               	rrcf	plusw1,f,c
 28659  01F0F8  0EF0               	movlw	-16
 28660  01F0FA  32E3               	rrcf	plusw1,f,c
 28661  01F0FC  0EEF               	movlw	-17
 28662  01F0FE  32E3               	rrcf	plusw1,f,c
 28663                           
 28664                           ;stkvar	_counter @ sp[(-1)+0]
 28665  01F100  0EFF               	movlw	-1
 28666  01F102  50E3               	movf	plusw1,w,c
 28667  01F104  6E2A               	movwf	btemp^0,c
 28668  01F106  0E01               	movlw	1
 28669  01F108  5E2A               	subwf	btemp^0,f,c
 28670  01F10A  0EFF               	movlw	-1
 28671  01F10C  0060  F0AB  FFE3   	movff	btemp,plusw1
 28672  01F112  A4D8               	btfss	status,2,c
 28673  01F114  D7A4               	goto	u9170
 28674  01F116                     u9190:
 28675                           
 28676                           ;stkvar	_dividend @ sp[(-1)+-8]
 28677  01F116  0EF7               	movlw	247
 28678  01F118  24E1               	addwf	fsr1l,w,c
 28679  01F11A  6ED9               	movwf	fsr2l,c
 28680  01F11C  0EFF               	movlw	255
 28681  01F11E  20E2               	addwfc	fsr1h,w,c
 28682  01F120  6EDA               	movwf	fsr2h,c
 28683                           
 28684                           ;stkvar	?___lomod @ sp[(-1)+-8]
 28685  01F122  0E08               	movlw	8
 28686  01F124  6E2A               	movwf	btemp^0,c
 28687  01F126  0EF7               	movlw	-9
 28688  01F128                     us920999:
 28689  01F128  006F FF7B FFE3     	movff	postinc2,plusw1
 28690  01F12E  28E8               	incf	wreg,w,c
 28691  01F130  2E2A               	decfsz	btemp^0,f,c
 28692  01F132  D7FA               	bra	us920999
 28693                           
 28694                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 28695  01F134  52E5               	movf	postdec1,f,c
 28696  01F136  0012               	return		;funcret
 28697  01F138                     __end_of___lomod:
 28698                           	opt callstack 0
 28699                           
 28700 ;; *************** function ___lodiv *****************
 28701 ;; Defined at:
 28702 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 28703 ;; Parameters:    Size  Location     Type
 28704 ;;  dividend        8  [STACK] unsigned long long 
 28705 ;;  divisor         8  [STACK] unsigned long long 
 28706 ;; Auto vars:     Size  Location     Type
 28707 ;;  quotient        8  [STACK] unsigned long long 
 28708 ;;  counter         1  [STACK] unsigned char 
 28709 ;; Return value:  Size  Location     Type
 28710 ;;                  8  [STACK] unsigned long long 
 28711 ;; Registers used:
 28712 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 28713 ;; Tracked objects:
 28714 ;;		On entry : 0/3
 28715 ;;		On exit  : 0/0
 28716 ;;		Unchanged: 0/0
 28717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28722 ;;Total ram usage:        0 bytes
 28723 ;; Hardware stack levels used:    1
 28724 ;; Hardware stack levels required when called:   15
 28725 ;; This function calls:
 28726 ;;		Nothing
 28727 ;; This function is called by:
 28728 ;;		_utoa
 28729 ;; This function uses a reentrant model
 28730 ;;
 28731                           
 28732                           	psect	text100
 28733  01E0C8                     __ptext100:
 28734                           	opt callstack 0
 28735  01E0C8                     ___lodiv:
 28736                           	opt callstack 0
 28737                           
 28738                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 28739  01E0C8  0E09               	movlw	9
 28740  01E0CA  26E1               	addwf	fsr1l,f,c
 28741  01E0CC  0E00               	movlw	0
 28742  01E0CE  22E2               	addwfc	fsr1h,f,c
 28743                           
 28744                           ;stkvar	_quotient @ sp[(-9)+0]
 28745                           
 28746                           ;incstack = 0
 28747 ;; hardware stack exceeded
 28748  01E0D0  0E07               	movlw	7
 28749  01E0D2  6E2A               	movwf	btemp^0,c
 28750  01E0D4  0EF7               	movlw	-9
 28751  01E0D6                     u9101:
 28752  01E0D6  6AE3               	clrf	plusw1,c
 28753  01E0D8  2AE8               	incf	wreg,f,c
 28754  01E0DA  062A               	decf	btemp^0,f,c
 28755  01E0DC  E2FC               	bc	u9101
 28756                           
 28757                           ;stkvar	_divisor @ sp[(-9)+-16]
 28758  01E0DE  0EE7               	movlw	-25
 28759  01E0E0  50E3               	movf	plusw1,w,c
 28760  01E0E2  E116               	bnz	u9110
 28761  01E0E4  0EE8               	movlw	-24
 28762  01E0E6  50E3               	movf	plusw1,w,c
 28763  01E0E8  E113               	bnz	u9110
 28764  01E0EA  0EE9               	movlw	-23
 28765  01E0EC  50E3               	movf	plusw1,w,c
 28766  01E0EE  E110               	bnz	u9110
 28767  01E0F0  0EEA               	movlw	-22
 28768  01E0F2  50E3               	movf	plusw1,w,c
 28769  01E0F4  E10D               	bnz	u9110
 28770  01E0F6  0EEB               	movlw	-21
 28771  01E0F8  50E3               	movf	plusw1,w,c
 28772  01E0FA  E10A               	bnz	u9110
 28773  01E0FC  0EEC               	movlw	-20
 28774  01E0FE  50E3               	movf	plusw1,w,c
 28775  01E100  E107               	bnz	u9110
 28776  01E102  0EED               	movlw	-19
 28777  01E104  50E3               	movf	plusw1,w,c
 28778  01E106  E104               	bnz	u9110
 28779  01E108  0EEE               	movlw	-18
 28780  01E10A  50E3               	movf	plusw1,w,c
 28781  01E10C  B4D8               	btfsc	status,2,c
 28782  01E10E  D088               	goto	u9140
 28783  01E110                     u9110:
 28784                           
 28785                           ;stkvar	_counter @ sp[(-9)+8]
 28786  01E110  0EFF               	movlw	-1
 28787  01E112  6AE3               	clrf	plusw1,c
 28788  01E114  D012               	goto	L30
 28789  01E116                     l10774:
 28790                           
 28791                           ;stkvar	_divisor @ sp[(-9)+-16]
 28792  01E116  90D8               	bcf	status,0,c
 28793  01E118  0EE7               	movlw	-25
 28794  01E11A  36E3               	rlcf	plusw1,f,c
 28795  01E11C  0EE8               	movlw	-24
 28796  01E11E  36E3               	rlcf	plusw1,f,c
 28797  01E120  0EE9               	movlw	-23
 28798  01E122  36E3               	rlcf	plusw1,f,c
 28799  01E124  0EEA               	movlw	-22
 28800  01E126  36E3               	rlcf	plusw1,f,c
 28801  01E128  0EEB               	movlw	-21
 28802  01E12A  36E3               	rlcf	plusw1,f,c
 28803  01E12C  0EEC               	movlw	-20
 28804  01E12E  36E3               	rlcf	plusw1,f,c
 28805  01E130  0EED               	movlw	-19
 28806  01E132  36E3               	rlcf	plusw1,f,c
 28807  01E134  0EEE               	movlw	-18
 28808  01E136  36E3               	rlcf	plusw1,f,c
 28809                           
 28810                           ;stkvar	_counter @ sp[(-9)+8]
 28811  01E138  0EFF               	movlw	-1
 28812  01E13A                     L30:
 28813  01E13A  2AE3               	incf	plusw1,f,c
 28814                           
 28815                           ;stkvar	_divisor @ sp[(-9)+-16]
 28816  01E13C  0EEE               	movlw	-18
 28817  01E13E  AEE3               	btfss	plusw1,7,c
 28818  01E140  D7EA               	goto	l10774
 28819  01E142                     u9120:
 28820                           
 28821                           ;stkvar	_quotient @ sp[(-9)+0]
 28822  01E142  90D8               	bcf	status,0,c
 28823  01E144  0EF7               	movlw	-9
 28824  01E146  36E3               	rlcf	plusw1,f,c
 28825  01E148  0EF8               	movlw	-8
 28826  01E14A  36E3               	rlcf	plusw1,f,c
 28827  01E14C  0EF9               	movlw	-7
 28828  01E14E  36E3               	rlcf	plusw1,f,c
 28829  01E150  0EFA               	movlw	-6
 28830  01E152  36E3               	rlcf	plusw1,f,c
 28831  01E154  0EFB               	movlw	-5
 28832  01E156  36E3               	rlcf	plusw1,f,c
 28833  01E158  0EFC               	movlw	-4
 28834  01E15A  36E3               	rlcf	plusw1,f,c
 28835  01E15C  0EFD               	movlw	-3
 28836  01E15E  36E3               	rlcf	plusw1,f,c
 28837  01E160  0EFE               	movlw	-2
 28838  01E162  36E3               	rlcf	plusw1,f,c
 28839                           
 28840                           ;stkvar	_divisor @ sp[(-9)+-16]
 28841                           ;stkvar	_dividend @ sp[(-9)+-8]
 28842  01E164  50E1               	movf	fsr1l,w,c
 28843  01E166  0FEF               	addlw	-17
 28844  01E168  6ED9               	movwf	fsr2l,c
 28845  01E16A  50E2               	movf	fsr1h,w,c
 28846  01E16C  6EDA               	movwf	fsr2h,c
 28847  01E16E  0EFF               	movlw	255
 28848  01E170  22DA               	addwfc	fsr2h,f,c
 28849  01E172  0EE7               	movlw	-25
 28850  01E174  50E3               	movf	plusw1,w,c
 28851  01E176  5CDE               	subwf	postinc2,w,c
 28852  01E178  0EE8               	movlw	-24
 28853  01E17A  50E3               	movf	plusw1,w,c
 28854  01E17C  58DE               	subwfb	postinc2,w,c
 28855  01E17E  0EE9               	movlw	-23
 28856  01E180  50E3               	movf	plusw1,w,c
 28857  01E182  58DE               	subwfb	postinc2,w,c
 28858  01E184  0EEA               	movlw	-22
 28859  01E186  50E3               	movf	plusw1,w,c
 28860  01E188  58DE               	subwfb	postinc2,w,c
 28861  01E18A  0EEB               	movlw	-21
 28862  01E18C  50E3               	movf	plusw1,w,c
 28863  01E18E  58DE               	subwfb	postinc2,w,c
 28864  01E190  0EEC               	movlw	-20
 28865  01E192  50E3               	movf	plusw1,w,c
 28866  01E194  58DE               	subwfb	postinc2,w,c
 28867  01E196  0EED               	movlw	-19
 28868  01E198  50E3               	movf	plusw1,w,c
 28869  01E19A  58DE               	subwfb	postinc2,w,c
 28870  01E19C  0EEE               	movlw	-18
 28871  01E19E  50E3               	movf	plusw1,w,c
 28872  01E1A0  58DE               	subwfb	postinc2,w,c
 28873  01E1A2  A0D8               	btfss	status,0,c
 28874  01E1A4  D021               	goto	l10786
 28875                           
 28876                           ;stkvar	_divisor @ sp[(-9)+-16]
 28877                           ;stkvar	_dividend @ sp[(-9)+-8]
 28878  01E1A6  50E1               	movf	fsr1l,w,c
 28879  01E1A8  0FEF               	addlw	-17
 28880  01E1AA  6ED9               	movwf	fsr2l,c
 28881  01E1AC  50E2               	movf	fsr1h,w,c
 28882  01E1AE  6EDA               	movwf	fsr2h,c
 28883  01E1B0  0EFF               	movlw	255
 28884  01E1B2  22DA               	addwfc	fsr2h,f,c
 28885  01E1B4  0EE7               	movlw	-25
 28886  01E1B6  50E3               	movf	plusw1,w,c
 28887  01E1B8  5EDE               	subwf	postinc2,f,c
 28888  01E1BA  0EE8               	movlw	-24
 28889  01E1BC  50E3               	movf	plusw1,w,c
 28890  01E1BE  5ADE               	subwfb	postinc2,f,c
 28891  01E1C0  0EE9               	movlw	-23
 28892  01E1C2  50E3               	movf	plusw1,w,c
 28893  01E1C4  5ADE               	subwfb	postinc2,f,c
 28894  01E1C6  0EEA               	movlw	-22
 28895  01E1C8  50E3               	movf	plusw1,w,c
 28896  01E1CA  5ADE               	subwfb	postinc2,f,c
 28897  01E1CC  0EEB               	movlw	-21
 28898  01E1CE  50E3               	movf	plusw1,w,c
 28899  01E1D0  5ADE               	subwfb	postinc2,f,c
 28900  01E1D2  0EEC               	movlw	-20
 28901  01E1D4  50E3               	movf	plusw1,w,c
 28902  01E1D6  5ADE               	subwfb	postinc2,f,c
 28903  01E1D8  0EED               	movlw	-19
 28904  01E1DA  50E3               	movf	plusw1,w,c
 28905  01E1DC  5ADE               	subwfb	postinc2,f,c
 28906  01E1DE  0EEE               	movlw	-18
 28907  01E1E0  50E3               	movf	plusw1,w,c
 28908  01E1E2  5ADE               	subwfb	postinc2,f,c
 28909                           
 28910                           ;stkvar	_quotient @ sp[(-9)+0]
 28911  01E1E4  0EF7               	movlw	-9
 28912  01E1E6  80E3               	bsf	plusw1,0,c
 28913  01E1E8                     l10786:
 28914                           
 28915                           ;stkvar	_divisor @ sp[(-9)+-16]
 28916  01E1E8  90D8               	bcf	status,0,c
 28917  01E1EA  0EEE               	movlw	-18
 28918  01E1EC  32E3               	rrcf	plusw1,f,c
 28919  01E1EE  0EED               	movlw	-19
 28920  01E1F0  32E3               	rrcf	plusw1,f,c
 28921  01E1F2  0EEC               	movlw	-20
 28922  01E1F4  32E3               	rrcf	plusw1,f,c
 28923  01E1F6  0EEB               	movlw	-21
 28924  01E1F8  32E3               	rrcf	plusw1,f,c
 28925  01E1FA  0EEA               	movlw	-22
 28926  01E1FC  32E3               	rrcf	plusw1,f,c
 28927  01E1FE  0EE9               	movlw	-23
 28928  01E200  32E3               	rrcf	plusw1,f,c
 28929  01E202  0EE8               	movlw	-24
 28930  01E204  32E3               	rrcf	plusw1,f,c
 28931  01E206  0EE7               	movlw	-25
 28932  01E208  32E3               	rrcf	plusw1,f,c
 28933                           
 28934                           ;stkvar	_counter @ sp[(-9)+8]
 28935  01E20A  0EFF               	movlw	-1
 28936  01E20C  50E3               	movf	plusw1,w,c
 28937  01E20E  6E2A               	movwf	btemp^0,c
 28938  01E210  0E01               	movlw	1
 28939  01E212  5E2A               	subwf	btemp^0,f,c
 28940  01E214  0EFF               	movlw	-1
 28941  01E216  0060  F0AB  FFE3   	movff	btemp,plusw1
 28942  01E21C  A4D8               	btfss	status,2,c
 28943  01E21E  D791               	goto	u9120
 28944  01E220                     u9140:
 28945                           
 28946                           ;stkvar	_quotient @ sp[(-9)+0]
 28947  01E220  0EF7               	movlw	247
 28948  01E222  24E1               	addwf	fsr1l,w,c
 28949  01E224  6ED9               	movwf	fsr2l,c
 28950  01E226  0EFF               	movlw	255
 28951  01E228  20E2               	addwfc	fsr1h,w,c
 28952  01E22A  6EDA               	movwf	fsr2h,c
 28953                           
 28954                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 28955  01E22C  0E08               	movlw	8
 28956  01E22E  6E2A               	movwf	btemp^0,c
 28957  01E230  0EEF               	movlw	-17
 28958  01E232                     us915999:
 28959  01E232  006F FF7B FFE3     	movff	postinc2,plusw1
 28960  01E238  28E8               	incf	wreg,w,c
 28961  01E23A  2E2A               	decfsz	btemp^0,f,c
 28962  01E23C  D7FA               	bra	us915999
 28963                           
 28964                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 28965  01E23E  0EF7               	movlw	247
 28966  01E240  26E1               	addwf	fsr1l,f,c
 28967  01E242  0EFF               	movlw	255
 28968  01E244  22E2               	addwfc	fsr1h,f,c
 28969  01E246  0012               	return		;funcret
 28970  01E248                     __end_of___lodiv:
 28971                           	opt callstack 0
 28972                           
 28973 ;; *************** function _strncmp *****************
 28974 ;; Defined at:
 28975 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 28976 ;; Parameters:    Size  Location     Type
 28977 ;;  _l              2  [STACK] PTR const unsigned char 
 28978 ;;		 -> ct(3), STR_90(127), STR_88(3), STR_87(3), 
 28979 ;;		 -> STR_86(21), STR_85(21), STR_84(21), STR_83(21), 
 28980 ;;		 -> STR_82(21), STR_81(21), STR_80(26), STR_79(15), 
 28981 ;;		 -> STR_78(15), STR_77(15), STR_76(15), STR_75(10), 
 28982 ;;		 -> STR_74(10), STR_73(19), STR_72(19), STR_69(3), 
 28983 ;;		 -> STR_68(14), STR_67(28), STR_66(28), STR_65(28), 
 28984 ;;		 -> STR_64(22), STR_63(22), STR_62(22), STR_61(22), 
 28985 ;;		 -> STR_60(22), STR_59(22), STR_58(22), STR_57(22), 
 28986 ;;		 -> STR_56(22), STR_55(21), STR_54(22), STR_53(22), 
 28987 ;;		 -> STR_52(22), STR_51(22), STR_50(22), STR_49(22), 
 28988 ;;		 -> STR_48(24), STR_47(24), STR_46(24), STR_45(30), 
 28989 ;;		 -> STR_44(24), STR_43(24), STR_42(23), STR_41(23), 
 28990 ;;		 -> STR_40(23), STR_39(23), STR_38(23), STR_37(23), 
 28991 ;;		 -> STR_36(23), STR_35(23), STR_34(23), STR_33(23), 
 28992 ;;		 -> STR_32(23), STR_31(23), STR_30(18), STR_29(17), 
 28993 ;;		 -> STR_28(17), STR_27(22), STR_26(22), STR_25(22), 
 28994 ;;		 -> STR_24(14), STR_23(27), STR_22(27), STR_21(23), 
 28995 ;;		 -> STR_20(22), STR_19(22), STR_18(22), STR_17(22), 
 28996 ;;		 -> STR_16(23), STR_15(23), STR_14(23), STR_13(26), 
 28997 ;;		 -> STR_12(22), STR_11(21), STR_10(21), STR_9(21), 
 28998 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 28999 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 29000 ;;  _r              2  [STACK] PTR const unsigned char 
 29001 ;;		 -> STR_124(3), STR_120(3), STR_115(3), STR_110(3), 
 29002 ;;		 -> STR_105(3), STR_101(3), 
 29003 ;;  n               2  [STACK] unsigned int 
 29004 ;; Auto vars:     Size  Location     Type
 29005 ;;  r               2  [STACK] PTR const unsigned char 
 29006 ;;		 -> STR_124(3), STR_120(3), STR_115(3), STR_110(3), 
 29007 ;;		 -> STR_105(3), STR_101(3), 
 29008 ;;  l               2  [STACK] PTR const unsigned char 
 29009 ;;		 -> ct(3), STR_90(127), STR_88(3), STR_87(3), 
 29010 ;;		 -> STR_86(21), STR_85(21), STR_84(21), STR_83(21), 
 29011 ;;		 -> STR_82(21), STR_81(21), STR_80(26), STR_79(15), 
 29012 ;;		 -> STR_78(15), STR_77(15), STR_76(15), STR_75(10), 
 29013 ;;		 -> STR_74(10), STR_73(19), STR_72(19), STR_69(3), 
 29014 ;;		 -> STR_68(14), STR_67(28), STR_66(28), STR_65(28), 
 29015 ;;		 -> STR_64(22), STR_63(22), STR_62(22), STR_61(22), 
 29016 ;;		 -> STR_60(22), STR_59(22), STR_58(22), STR_57(22), 
 29017 ;;		 -> STR_56(22), STR_55(21), STR_54(22), STR_53(22), 
 29018 ;;		 -> STR_52(22), STR_51(22), STR_50(22), STR_49(22), 
 29019 ;;		 -> STR_48(24), STR_47(24), STR_46(24), STR_45(30), 
 29020 ;;		 -> STR_44(24), STR_43(24), STR_42(23), STR_41(23), 
 29021 ;;		 -> STR_40(23), STR_39(23), STR_38(23), STR_37(23), 
 29022 ;;		 -> STR_36(23), STR_35(23), STR_34(23), STR_33(23), 
 29023 ;;		 -> STR_32(23), STR_31(23), STR_30(18), STR_29(17), 
 29024 ;;		 -> STR_28(17), STR_27(22), STR_26(22), STR_25(22), 
 29025 ;;		 -> STR_24(14), STR_23(27), STR_22(27), STR_21(23), 
 29026 ;;		 -> STR_20(22), STR_19(22), STR_18(22), STR_17(22), 
 29027 ;;		 -> STR_16(23), STR_15(23), STR_14(23), STR_13(26), 
 29028 ;;		 -> STR_12(22), STR_11(21), STR_10(21), STR_9(21), 
 29029 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 29030 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 29031 ;; Return value:  Size  Location     Type
 29032 ;;                  2  [STACK] int 
 29033 ;; Registers used:
 29034 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 29035 ;; Tracked objects:
 29036 ;;		On entry : 0/0
 29037 ;;		On exit  : 0/0
 29038 ;;		Unchanged: 0/0
 29039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29044 ;;Total ram usage:        0 bytes
 29045 ;; Hardware stack levels used:    1
 29046 ;; Hardware stack levels required when called:   15
 29047 ;; This function calls:
 29048 ;;		Nothing
 29049 ;; This function is called by:
 29050 ;;		_vfpfcnvrt
 29051 ;; This function uses a reentrant model
 29052 ;;
 29053                           
 29054                           	psect	text101
 29055  01CD10                     __ptext101:
 29056                           	opt callstack 0
 29057  01CD10                     _strncmp:
 29058                           	opt callstack 0
 29059                           
 29060                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29061  01CD10  52E6               	movf	postinc1,f,c
 29062  01CD12  52E6               	movf	postinc1,f,c
 29063  01CD14  52E6               	movf	postinc1,f,c
 29064  01CD16  52E6               	movf	postinc1,f,c
 29065                           
 29066                           ;stkvar	__l @ sp[(-4)+-2]
 29067                           
 29068                           ;incstack = 0
 29069 ;; hardware stack exceeded
 29070  01CD18  0EFA               	movlw	-6
 29071  01CD1A  006F FF8C  F034    	movff	plusw1,btemp+10
 29072  01CD20  0EFB               	movlw	-5
 29073  01CD22  006F FF8C  F035    	movff	plusw1,btemp+11
 29074                           
 29075                           ;stkvar	_l @ sp[(-4)+2]
 29076  01CD28  0EFF               	movlw	-1
 29077  01CD2A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29078  01CD30  0EFE               	movlw	-2
 29079  01CD32  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29080                           
 29081                           ;stkvar	__r @ sp[(-4)+-4]
 29082  01CD38  0EF8               	movlw	-8
 29083  01CD3A  006F FF8C  F034    	movff	plusw1,btemp+10
 29084  01CD40  0EF9               	movlw	-7
 29085  01CD42  006F FF8C  F035    	movff	plusw1,btemp+11
 29086                           
 29087                           ;stkvar	_r @ sp[(-4)+0]
 29088  01CD48  0EFD               	movlw	-3
 29089  01CD4A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29090  01CD50  0EFC               	movlw	-4
 29091  01CD52  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29092                           
 29093                           ;stkvar	_n @ sp[(-4)+-6]
 29094  01CD58  0EF6               	movlw	-10
 29095  01CD5A  006F FF8C  F02A    	movff	plusw1,btemp
 29096  01CD60  0E01               	movlw	1
 29097  01CD62  5E2A               	subwf	btemp^0,f,c
 29098  01CD64  0EF6               	movlw	-10
 29099  01CD66  0060  F0AB  FFE3   	movff	btemp,plusw1
 29100  01CD6C  0EF7               	movlw	-9
 29101  01CD6E  006F FF8C  F02A    	movff	plusw1,btemp
 29102  01CD74  0E00               	movlw	0
 29103  01CD76  5A2A               	subwfb	btemp^0,f,c
 29104  01CD78  0EF7               	movlw	-9
 29105  01CD7A  0060  F0AB  FFE3   	movff	btemp,plusw1
 29106  01CD80  0EF6               	movlw	-10
 29107  01CD82  28E3               	incf	plusw1,w,c
 29108  01CD84  E13F               	bnz	l11474
 29109  01CD86  0EF7               	movlw	-9
 29110  01CD88  28E3               	incf	plusw1,w,c
 29111  01CD8A  A4D8               	btfss	status,2,c
 29112  01CD8C  D03B               	goto	l11474
 29113  01CD8E  0E00               	movlw	0
 29114  01CD90  6E2A               	movwf	btemp^0,c
 29115  01CD92  0E00               	movlw	0
 29116  01CD94  6E2B               	movwf	(btemp+1)^0,c
 29117  01CD96  D0C7               	goto	l3808
 29118  01CD98                     l11472:
 29119                           
 29120                           ;stkvar	_l @ sp[(-4)+2]
 29121  01CD98  0EFE               	movlw	-2
 29122  01CD9A  50E3               	movf	plusw1,w,c
 29123  01CD9C  0F01               	addlw	1
 29124  01CD9E  6E2A               	movwf	btemp^0,c
 29125  01CDA0  0EFE               	movlw	-2
 29126  01CDA2  0060  F0AB  FFE3   	movff	btemp,plusw1
 29127  01CDA8  6A2A               	clrf	btemp^0,c
 29128  01CDAA  0EFF               	movlw	-1
 29129  01CDAC  50E3               	movf	plusw1,w,c
 29130  01CDAE  202A               	addwfc	btemp^0,w,c
 29131  01CDB0  6E2A               	movwf	btemp^0,c
 29132  01CDB2  0EFF               	movlw	-1
 29133  01CDB4  0060  F0AB  FFE3   	movff	btemp,plusw1
 29134                           
 29135                           ;stkvar	_r @ sp[(-4)+0]
 29136  01CDBA  0EFC               	movlw	-4
 29137  01CDBC  50E3               	movf	plusw1,w,c
 29138  01CDBE  0F01               	addlw	1
 29139  01CDC0  6E2A               	movwf	btemp^0,c
 29140  01CDC2  0EFC               	movlw	-4
 29141  01CDC4  0060  F0AB  FFE3   	movff	btemp,plusw1
 29142  01CDCA  6A2A               	clrf	btemp^0,c
 29143  01CDCC  0EFD               	movlw	-3
 29144  01CDCE  50E3               	movf	plusw1,w,c
 29145  01CDD0  202A               	addwfc	btemp^0,w,c
 29146  01CDD2  6E2A               	movwf	btemp^0,c
 29147  01CDD4  0EFD               	movlw	-3
 29148  01CDD6  0060  F0AB  FFE3   	movff	btemp,plusw1
 29149                           
 29150                           ;stkvar	_n @ sp[(-4)+-6]
 29151  01CDDC  0EF6               	movlw	-10
 29152  01CDDE  006F FF8C  F02A    	movff	plusw1,btemp
 29153  01CDE4  0E01               	movlw	1
 29154  01CDE6  5E2A               	subwf	btemp^0,f,c
 29155  01CDE8  0EF6               	movlw	-10
 29156  01CDEA  0060  F0AB  FFE3   	movff	btemp,plusw1
 29157  01CDF0  0EF7               	movlw	-9
 29158  01CDF2  006F FF8C  F02A    	movff	plusw1,btemp
 29159  01CDF8  0E00               	movlw	0
 29160  01CDFA  5A2A               	subwfb	btemp^0,f,c
 29161  01CDFC  0EF7               	movlw	-9
 29162  01CDFE  0060  F0AB  FFE3   	movff	btemp,plusw1
 29163  01CE04                     l11474:
 29164                           
 29165                           ;stkvar	_l @ sp[(-4)+2]
 29166  01CE04  0EFE               	movlw	-2
 29167  01CE06  006F FF8F FFF6     	movff	plusw1,tblptrl
 29168  01CE0C  0EFF               	movlw	-1
 29169  01CE0E  006F FF8F FFF7     	movff	plusw1,tblptrh
 29170  01CE14  0E00               	movlw	low (__mediumconst shr (0+16))
 29171  01CE16  6EF8               	movwf	tblptru,c
 29172  01CE18  0E1F               	movlw	(high __ramtop+-1)
 29173  01CE1A  64F7               	cpfsgt	tblptrh,c
 29174  01CE1C  D003               	bra	u10437
 29175  01CE1E  0008               	tblrd		*
 29176  01CE20  50F5               	movf	tablat,w,c
 29177  01CE22  D007               	bra	u10430
 29178  01CE24                     u10437:
 29179  01CE24  006F FFDB FFE9     	movff	tblptrl,fsr0l
 29180  01CE2A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 29181  01CE30  50EF               	movf	indf0,w,c
 29182  01CE32                     u10430:
 29183  01CE32  0900               	iorlw	0
 29184  01CE34  B4D8               	btfsc	status,2,c
 29185  01CE36  D04A               	goto	u10470
 29186                           
 29187                           ;stkvar	_r @ sp[(-4)+0]
 29188  01CE38  50E1               	movf	fsr1l,w,c
 29189  01CE3A  0FFC               	addlw	-4
 29190  01CE3C  6ED9               	movwf	fsr2l,c
 29191  01CE3E  50E2               	movf	fsr1h,w,c
 29192  01CE40  6EDA               	movwf	fsr2h,c
 29193  01CE42  0EFF               	movlw	255
 29194  01CE44  22DA               	addwfc	fsr2h,f,c
 29195  01CE46  006F FF7B FFF6     	movff	postinc2,tblptrl
 29196  01CE4C  006F FF77 FFF7     	movff	postdec2,tblptrh
 29197  01CE52                     	if	0	;tblptru may be non-zero
 29198  01CE52                     	endif
 29199  01CE52                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 29200  01CE52  0E00               	movlw	low (__mediumconst shr (0+16))
 29201  01CE54  6EF8               	movwf	tblptru,c
 29202  01CE56                     	endif
 29203  01CE56  0008               	tblrd		*
 29204  01CE58  50F5               	movf	tablat,w,c
 29205  01CE5A  0900               	iorlw	0
 29206  01CE5C  B4D8               	btfsc	status,2,c
 29207  01CE5E  D036               	goto	u10470
 29208                           
 29209                           ;stkvar	_n @ sp[(-4)+-6]
 29210  01CE60  0EF6               	movlw	-10
 29211  01CE62  006F FF8C  F02A    	movff	plusw1,btemp
 29212  01CE68  0EF7               	movlw	-9
 29213  01CE6A  50E3               	movf	plusw1,w,c
 29214  01CE6C  102A               	iorwf	btemp^0,w,c
 29215  01CE6E  B4D8               	btfsc	status,2,c
 29216  01CE70  D02D               	goto	u10470
 29217                           
 29218                           ;stkvar	_r @ sp[(-4)+0]
 29219  01CE72  50E1               	movf	fsr1l,w,c
 29220  01CE74  0FFC               	addlw	-4
 29221  01CE76  6ED9               	movwf	fsr2l,c
 29222  01CE78  50E2               	movf	fsr1h,w,c
 29223  01CE7A  6EDA               	movwf	fsr2h,c
 29224  01CE7C  0EFF               	movlw	255
 29225  01CE7E  22DA               	addwfc	fsr2h,f,c
 29226  01CE80  006F FF7B FFF6     	movff	postinc2,tblptrl
 29227  01CE86  006F FF77 FFF7     	movff	postdec2,tblptrh
 29228  01CE8C                     	if	0	;tblptru may be non-zero
 29229  01CE8C                     	endif
 29230  01CE8C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 29231  01CE8C  0E00               	movlw	low (__mediumconst shr (0+16))
 29232  01CE8E  6EF8               	movwf	tblptru,c
 29233  01CE90                     	endif
 29234  01CE90  0008               	tblrd		*
 29235  01CE92  006F FFD4  F035    	movff	tablat,btemp+11
 29236                           
 29237                           ;stkvar	_l @ sp[(-4)+2]
 29238  01CE98  0EFE               	movlw	-2
 29239  01CE9A  006F FF8F FFF6     	movff	plusw1,tblptrl
 29240  01CEA0  0EFF               	movlw	-1
 29241  01CEA2  006F FF8F FFF7     	movff	plusw1,tblptrh
 29242  01CEA8  0E00               	movlw	low (__mediumconst shr (0+16))
 29243  01CEAA  6EF8               	movwf	tblptru,c
 29244  01CEAC  0E1F               	movlw	(high __ramtop+-1)
 29245  01CEAE  64F7               	cpfsgt	tblptrh,c
 29246  01CEB0  D003               	bra	u10477
 29247  01CEB2  0008               	tblrd		*
 29248  01CEB4  50F5               	movf	tablat,w,c
 29249  01CEB6  D007               	bra	u10475
 29250  01CEB8                     u10477:
 29251  01CEB8  006F FFDB FFE9     	movff	tblptrl,fsr0l
 29252  01CEBE  006F FFDF FFEA     	movff	tblptrh,fsr0h
 29253  01CEC4  50EF               	movf	indf0,w,c
 29254  01CEC6                     u10475:
 29255  01CEC6  1835               	xorwf	(btemp+11)^0,w,c
 29256  01CEC8  B4D8               	btfsc	status,2,c
 29257  01CECA  D766               	goto	l11472
 29258  01CECC                     u10470:
 29259                           
 29260                           ;stkvar	_l @ sp[(-4)+2]
 29261  01CECC  0EFE               	movlw	-2
 29262  01CECE  006F FF8F FFF6     	movff	plusw1,tblptrl
 29263  01CED4  0EFF               	movlw	-1
 29264  01CED6  006F FF8F FFF7     	movff	plusw1,tblptrh
 29265  01CEDC  0E00               	movlw	low (__mediumconst shr (0+16))
 29266  01CEDE  6EF8               	movwf	tblptru,c
 29267  01CEE0  0E1F               	movlw	(high __ramtop+-1)
 29268  01CEE2  64F7               	cpfsgt	tblptrh,c
 29269  01CEE4  D003               	bra	u10487
 29270  01CEE6  0008               	tblrd		*
 29271  01CEE8  50F5               	movf	tablat,w,c
 29272  01CEEA  D007               	bra	u10480
 29273  01CEEC                     u10487:
 29274  01CEEC  006F FFDB FFE9     	movff	tblptrl,fsr0l
 29275  01CEF2  006F FFDF FFEA     	movff	tblptrh,fsr0h
 29276  01CEF8  50EF               	movf	indf0,w,c
 29277  01CEFA                     u10480:
 29278  01CEFA  6E2A               	movwf	btemp^0,c
 29279  01CEFC  6A2B               	clrf	(btemp+1)^0,c
 29280                           
 29281                           ;stkvar	_r @ sp[(-4)+0]
 29282  01CEFE  50E1               	movf	fsr1l,w,c
 29283  01CF00  0FFC               	addlw	-4
 29284  01CF02  6ED9               	movwf	fsr2l,c
 29285  01CF04  50E2               	movf	fsr1h,w,c
 29286  01CF06  6EDA               	movwf	fsr2h,c
 29287  01CF08  0EFF               	movlw	255
 29288  01CF0A  22DA               	addwfc	fsr2h,f,c
 29289  01CF0C  006F FF7B FFF6     	movff	postinc2,tblptrl
 29290  01CF12  006F FF77 FFF7     	movff	postdec2,tblptrh
 29291  01CF18                     	if	0	;tblptru may be non-zero
 29292  01CF18                     	endif
 29293  01CF18                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 29294  01CF18  0E00               	movlw	low (__mediumconst shr (0+16))
 29295  01CF1A  6EF8               	movwf	tblptru,c
 29296  01CF1C                     	endif
 29297  01CF1C  0008               	tblrd		*
 29298  01CF1E  50F5               	movf	tablat,w,c
 29299  01CF20  5E2A               	subwf	btemp^0,f,c
 29300  01CF22  0E00               	movlw	0
 29301  01CF24  5A2B               	subwfb	(btemp+1)^0,f,c
 29302  01CF26                     l3808:
 29303                           
 29304                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 29305  01CF26  0EF6               	movlw	246
 29306  01CF28  26E1               	addwf	fsr1l,f,c
 29307  01CF2A  0EFF               	movlw	255
 29308  01CF2C  22E2               	addwfc	fsr1h,f,c
 29309  01CF2E  0012               	return		;funcret
 29310  01CF30                     __end_of_strncmp:
 29311                           	opt callstack 0
 29312                           
 29313 ;; *************** function _stoa *****************
 29314 ;; Defined at:
 29315 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 29316 ;; Parameters:    Size  Location     Type
 29317 ;;  fp              2  [STACK] PTR struct _IO_FILE
 29318 ;;		 -> f(6), NULL(0), 
 29319 ;;  s               2  [STACK] PTR unsigned char 
 29320 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), STR_71(9), 
 29321 ;;		 -> STR_70(12), D.lcd(640), D(642), T(176), 
 29322 ;;		 -> STR_3(5), V(181), 
 29323 ;; Auto vars:     Size  Location     Type
 29324 ;;  nuls            7  [STACK] unsigned char [7]
 29325 ;;  l               2  [STACK] int 
 29326 ;;  p               2  [STACK] int 
 29327 ;;  cp              2  [STACK] PTR unsigned char 
 29328 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), nuls(7), 
 29329 ;;		 -> STR_71(9), STR_70(12), D.lcd(640), D(642), 
 29330 ;;		 -> T(176), STR_3(5), V(181), 
 29331 ;;  w               2  [STACK] int 
 29332 ;;  i               2  [STACK] int 
 29333 ;; Return value:  Size  Location     Type
 29334 ;;                  2  [STACK] int 
 29335 ;; Registers used:
 29336 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 29337 ;; Tracked objects:
 29338 ;;		On entry : 0/0
 29339 ;;		On exit  : 0/0
 29340 ;;		Unchanged: 0/0
 29341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29346 ;;Total ram usage:        0 bytes
 29347 ;; Hardware stack levels used:    1
 29348 ;; Hardware stack levels required when called:   18
 29349 ;; This function calls:
 29350 ;;		_fputc
 29351 ;;		_strlen
 29352 ;; This function is called by:
 29353 ;;		_vfpfcnvrt
 29354 ;; This function uses a reentrant model
 29355 ;;
 29356                           
 29357                           	psect	text102
 29358  01B50A                     __ptext102:
 29359                           	opt callstack 0
 29360  01B50A                     _stoa:
 29361                           	opt callstack 0
 29362                           
 29363                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 29364  01B50A  0E11               	movlw	17
 29365  01B50C  26E1               	addwf	fsr1l,f,c
 29366  01B50E  0E00               	movlw	0
 29367  01B510  22E2               	addwfc	fsr1h,f,c
 29368                           
 29369                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 29370                           
 29371                           ;incstack = 0
 29372 ;; hardware stack exceeded
 29373  01B512  EE20  F200         	lfsr	2,stoa@F1166
 29374                           
 29375                           ;stkvar	_nuls @ sp[(-17)+0]
 29376  01B516  0E07               	movlw	7
 29377  01B518  6E2A               	movwf	btemp^0,c
 29378  01B51A  0EEF               	movlw	-17
 29379  01B51C                     us1519999:
 29380  01B51C  006F FF7B FFE3     	movff	postinc2,plusw1
 29381  01B522  28E8               	incf	wreg,w,c
 29382  01B524  2E2A               	decfsz	btemp^0,f,c
 29383  01B526  D7FA               	bra	us1519999
 29384                           
 29385                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 29386                           ;stkvar	_s @ sp[(-17)+-4]
 29387  01B528  0EEB               	movlw	-21
 29388  01B52A  006F FF8C  F034    	movff	plusw1,btemp+10
 29389  01B530  0EEC               	movlw	-20
 29390  01B532  006F FF8C  F035    	movff	plusw1,btemp+11
 29391                           
 29392                           ;stkvar	_cp @ sp[(-17)+11]
 29393  01B538  0EFB               	movlw	-5
 29394  01B53A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29395  01B540  0EFA               	movlw	-6
 29396  01B542  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29397                           
 29398                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 29399                           ;stkvar	_cp @ sp[(-17)+11]
 29400  01B548  0EFA               	movlw	-6
 29401  01B54A  006F FF8C  F02A    	movff	plusw1,btemp
 29402  01B550  0EFB               	movlw	-5
 29403  01B552  50E3               	movf	plusw1,w,c
 29404  01B554  102A               	iorwf	btemp^0,w,c
 29405  01B556  A4D8               	btfss	status,2,c
 29406  01B558  D00E               	goto	l15886
 29407                           
 29408                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 29409                           ;stkvar	_nuls @ sp[(-17)+0]
 29410  01B55A  0EEF               	movlw	239
 29411  01B55C  24E1               	addwf	fsr1l,w,c
 29412  01B55E  6E34               	movwf	(btemp+10)^0,c
 29413  01B560  0EFF               	movlw	255
 29414  01B562  20E2               	addwfc	fsr1h,w,c
 29415  01B564  6E35               	movwf	(btemp+11)^0,c
 29416                           
 29417                           ;stkvar	_cp @ sp[(-17)+11]
 29418  01B566  0EFB               	movlw	-5
 29419  01B568  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29420  01B56E  0EFA               	movlw	-6
 29421  01B570  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29422  01B576                     l15886:
 29423                           
 29424                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 29425                           ;stkvar	_cp @ sp[(-17)+11]
 29426  01B576  0EFA               	movlw	-6
 29427  01B578  006F FF8F FFE6     	movff	plusw1,postinc1
 29428  01B57E  006F FF8F FFE6     	movff	plusw1,postinc1
 29429  01B584  ECA7  F004         	call	_strlen	;wreg free
 29430                           
 29431                           ;stkvar	_l @ sp[(-17)+7]
 29432  01B588  0EF6               	movlw	-10
 29433  01B58A  0060  F0AB  FFE3   	movff	btemp,plusw1
 29434  01B590  0EF7               	movlw	-9
 29435  01B592  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 29436                           
 29437                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 29438                           ;stkvar	_p @ sp[(-17)+9]
 29439  01B598  0EF8               	movlw	-8
 29440  01B59A  0060  F133  FFE3   	movff	_prec,plusw1
 29441  01B5A0  0EF9               	movlw	-7
 29442  01B5A2  0060  F137  FFE3   	movff	_prec+1,plusw1
 29443                           
 29444                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 29445                           ;stkvar	_p @ sp[(-17)+9]
 29446  01B5A8  0EF9               	movlw	-7
 29447  01B5AA  BEE3               	btfsc	plusw1,7,c
 29448  01B5AC  D023               	goto	l2603
 29449                           
 29450                           ;stkvar	_l @ sp[(-17)+7]
 29451                           ;stkvar	_p @ sp[(-17)+9]
 29452  01B5AE  50E1               	movf	fsr1l,w,c
 29453  01B5B0  0FF8               	addlw	-8
 29454  01B5B2  6ED9               	movwf	fsr2l,c
 29455  01B5B4  50E2               	movf	fsr1h,w,c
 29456  01B5B6  6EDA               	movwf	fsr2h,c
 29457  01B5B8  0EFF               	movlw	255
 29458  01B5BA  22DA               	addwfc	fsr2h,f,c
 29459  01B5BC  0EF6               	movlw	-10
 29460  01B5BE  50E3               	movf	plusw1,w,c
 29461  01B5C0  5CDE               	subwf	postinc2,w,c
 29462  01B5C2  50DE               	movf	postinc2,w,c
 29463  01B5C4  0A80               	xorlw	128
 29464  01B5C6  6E2A               	movwf	btemp^0,c
 29465  01B5C8  0EF7               	movlw	-9
 29466  01B5CA  50E3               	movf	plusw1,w,c
 29467  01B5CC  0A80               	xorlw	128
 29468  01B5CE  582A               	subwfb	btemp^0,w,c
 29469  01B5D0  B0D8               	btfsc	status,0,c
 29470  01B5D2  D010               	goto	l2603
 29471                           
 29472                           ;stkvar	_p @ sp[(-17)+9]
 29473                           ;stkvar	_l @ sp[(-17)+7]
 29474  01B5D4  0EF8               	movlw	-8
 29475  01B5D6  006F FF8C  F02A    	movff	plusw1,btemp
 29476  01B5DC  0EF6               	movlw	-10
 29477  01B5DE  0060  F0AB  FFE3   	movff	btemp,plusw1
 29478  01B5E4  0EF9               	movlw	-7
 29479  01B5E6  006F FF8C  F02A    	movff	plusw1,btemp
 29480  01B5EC  0EF7               	movlw	-9
 29481  01B5EE  0060  F0AB  FFE3   	movff	btemp,plusw1
 29482  01B5F4                     l2603:
 29483                           
 29484                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 29485                           ;stkvar	_l @ sp[(-17)+7]
 29486                           ;stkvar	_p @ sp[(-17)+9]
 29487  01B5F4  0EF6               	movlw	-10
 29488  01B5F6  006F FF8C  F02A    	movff	plusw1,btemp
 29489  01B5FC  0EF8               	movlw	-8
 29490  01B5FE  0060  F0AB  FFE3   	movff	btemp,plusw1
 29491  01B604  0EF7               	movlw	-9
 29492  01B606  006F FF8C  F02A    	movff	plusw1,btemp
 29493  01B60C  0EF9               	movlw	-7
 29494  01B60E  0060  F0AB  FFE3   	movff	btemp,plusw1
 29495                           
 29496                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 29497                           ;stkvar	_w @ sp[(-17)+13]
 29498  01B614  0EFC               	movlw	-4
 29499  01B616  0060  F12B  FFE3   	movff	_width,plusw1
 29500  01B61C  0EFD               	movlw	-3
 29501  01B61E  0060  F12F  FFE3   	movff	_width+1,plusw1
 29502                           
 29503                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 29504  01B624  A04E               	btfss	_flags^0,0,c
 29505  01B626  D01F               	goto	l15906
 29506  01B628  D031               	goto	u15240
 29507  01B62A                     l15902:
 29508                           
 29509                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 29510                           ;stkvar	_fp @ sp[(-17)+-2]
 29511  01B62A  0EED               	movlw	-19
 29512  01B62C  006F FF8F FFE6     	movff	plusw1,postinc1
 29513  01B632  006F FF8F FFE6     	movff	plusw1,postinc1
 29514  01B638  0E20               	movlw	32
 29515  01B63A  6EE6               	movwf	postinc1,c
 29516  01B63C  0E00               	movlw	0
 29517  01B63E  6EE6               	movwf	postinc1,c
 29518  01B640  EC38  F0F9         	call	_fputc	;wreg free
 29519                           
 29520                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 29521                           ;stkvar	_l @ sp[(-17)+7]
 29522  01B644  0EF6               	movlw	-10
 29523  01B646  50E3               	movf	plusw1,w,c
 29524  01B648  0F01               	addlw	1
 29525  01B64A  6E2A               	movwf	btemp^0,c
 29526  01B64C  0EF6               	movlw	-10
 29527  01B64E  0060  F0AB  FFE3   	movff	btemp,plusw1
 29528  01B654  6A2A               	clrf	btemp^0,c
 29529  01B656  0EF7               	movlw	-9
 29530  01B658  50E3               	movf	plusw1,w,c
 29531  01B65A  202A               	addwfc	btemp^0,w,c
 29532  01B65C  6E2A               	movwf	btemp^0,c
 29533  01B65E  0EF7               	movlw	-9
 29534  01B660  0060  F0AB  FFE3   	movff	btemp,plusw1
 29535  01B666                     l15906:
 29536                           
 29537                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 29538                           ;stkvar	_w @ sp[(-17)+13]
 29539                           ;stkvar	_l @ sp[(-17)+7]
 29540  01B666  50E1               	movf	fsr1l,w,c
 29541  01B668  0FF6               	addlw	-10
 29542  01B66A  6ED9               	movwf	fsr2l,c
 29543  01B66C  50E2               	movf	fsr1h,w,c
 29544  01B66E  6EDA               	movwf	fsr2h,c
 29545  01B670  0EFF               	movlw	255
 29546  01B672  22DA               	addwfc	fsr2h,f,c
 29547  01B674  0EFC               	movlw	-4
 29548  01B676  50E3               	movf	plusw1,w,c
 29549  01B678  5CDE               	subwf	postinc2,w,c
 29550  01B67A  50DE               	movf	postinc2,w,c
 29551  01B67C  0A80               	xorlw	128
 29552  01B67E  6E2A               	movwf	btemp^0,c
 29553  01B680  0EFD               	movlw	-3
 29554  01B682  50E3               	movf	plusw1,w,c
 29555  01B684  0A80               	xorlw	128
 29556  01B686  582A               	subwfb	btemp^0,w,c
 29557  01B688  A0D8               	btfss	status,0,c
 29558  01B68A  D7CF               	goto	l15902
 29559  01B68C                     u15240:
 29560                           
 29561                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 29562                           ;stkvar	_i @ sp[(-17)+15]
 29563  01B68C  0EFE               	movlw	-2
 29564  01B68E  6AE3               	clrf	plusw1,c
 29565  01B690  0EFF               	movlw	-1
 29566  01B692  6AE3               	clrf	plusw1,c
 29567                           
 29568                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 29569  01B694  D045               	goto	l15916
 29570  01B696                     l15910:
 29571                           
 29572                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 29573                           ;stkvar	_fp @ sp[(-17)+-2]
 29574  01B696  0EED               	movlw	-19
 29575  01B698  006F FF8F FFE6     	movff	plusw1,postinc1
 29576  01B69E  006F FF8F FFE6     	movff	plusw1,postinc1
 29577                           
 29578                           ;stkvar	_cp @ sp[(-19)+11]
 29579  01B6A4  0EF8               	movlw	-8
 29580  01B6A6  006F FF8F FFF6     	movff	plusw1,tblptrl
 29581  01B6AC  0EF9               	movlw	-7
 29582  01B6AE  006F FF8F FFF7     	movff	plusw1,tblptrh
 29583  01B6B4  0E00               	movlw	low (__mediumconst shr (0+16))
 29584  01B6B6  6EF8               	movwf	tblptru,c
 29585  01B6B8  0E1F               	movlw	(high __ramtop+-1)
 29586  01B6BA  64F7               	cpfsgt	tblptrh,c
 29587  01B6BC  D003               	bra	u15257
 29588  01B6BE  0008               	tblrd		*
 29589  01B6C0  50F5               	movf	tablat,w,c
 29590  01B6C2  D007               	bra	u15250
 29591  01B6C4                     u15257:
 29592  01B6C4  006F FFDB FFE9     	movff	tblptrl,fsr0l
 29593  01B6CA  006F FFDF FFEA     	movff	tblptrh,fsr0h
 29594  01B6D0  50EF               	movf	indf0,w,c
 29595  01B6D2                     u15250:
 29596  01B6D2  6EE6               	movwf	postinc1,c
 29597  01B6D4  0E00               	movlw	0
 29598  01B6D6  6EE6               	movwf	postinc1,c
 29599  01B6D8  EC38  F0F9         	call	_fputc	;wreg free
 29600                           
 29601                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 29602                           ;stkvar	_cp @ sp[(-17)+11]
 29603  01B6DC  0EFA               	movlw	-6
 29604  01B6DE  50E3               	movf	plusw1,w,c
 29605  01B6E0  0F01               	addlw	1
 29606  01B6E2  6E2A               	movwf	btemp^0,c
 29607  01B6E4  0EFA               	movlw	-6
 29608  01B6E6  0060  F0AB  FFE3   	movff	btemp,plusw1
 29609  01B6EC  6A2A               	clrf	btemp^0,c
 29610  01B6EE  0EFB               	movlw	-5
 29611  01B6F0  50E3               	movf	plusw1,w,c
 29612  01B6F2  202A               	addwfc	btemp^0,w,c
 29613  01B6F4  6E2A               	movwf	btemp^0,c
 29614  01B6F6  0EFB               	movlw	-5
 29615  01B6F8  0060  F0AB  FFE3   	movff	btemp,plusw1
 29616                           
 29617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 29618                           ;stkvar	_i @ sp[(-17)+15]
 29619  01B6FE  0EFE               	movlw	-2
 29620  01B700  50E3               	movf	plusw1,w,c
 29621  01B702  0F01               	addlw	1
 29622  01B704  6E2A               	movwf	btemp^0,c
 29623  01B706  0EFE               	movlw	-2
 29624  01B708  0060  F0AB  FFE3   	movff	btemp,plusw1
 29625  01B70E  6A2A               	clrf	btemp^0,c
 29626  01B710  0EFF               	movlw	-1
 29627  01B712  50E3               	movf	plusw1,w,c
 29628  01B714  202A               	addwfc	btemp^0,w,c
 29629  01B716  6E2A               	movwf	btemp^0,c
 29630  01B718  0EFF               	movlw	-1
 29631  01B71A  0060  F0AB  FFE3   	movff	btemp,plusw1
 29632  01B720                     l15916:
 29633                           
 29634                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 29635                           ;stkvar	_p @ sp[(-17)+9]
 29636                           ;stkvar	_i @ sp[(-17)+15]
 29637  01B720  50E1               	movf	fsr1l,w,c
 29638  01B722  0FFE               	addlw	-2
 29639  01B724  6ED9               	movwf	fsr2l,c
 29640  01B726  50E2               	movf	fsr1h,w,c
 29641  01B728  6EDA               	movwf	fsr2h,c
 29642  01B72A  0EFF               	movlw	255
 29643  01B72C  22DA               	addwfc	fsr2h,f,c
 29644  01B72E  0EF8               	movlw	-8
 29645  01B730  50E3               	movf	plusw1,w,c
 29646  01B732  5CDE               	subwf	postinc2,w,c
 29647  01B734  50DE               	movf	postinc2,w,c
 29648  01B736  0A80               	xorlw	128
 29649  01B738  6E2A               	movwf	btemp^0,c
 29650  01B73A  0EF9               	movlw	-7
 29651  01B73C  50E3               	movf	plusw1,w,c
 29652  01B73E  0A80               	xorlw	128
 29653  01B740  582A               	subwfb	btemp^0,w,c
 29654  01B742  A0D8               	btfss	status,0,c
 29655  01B744  D7A8               	goto	l15910
 29656                           
 29657                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 29658  01B746  B04E               	btfsc	_flags^0,0,c
 29659  01B748  D01F               	goto	l15924
 29660  01B74A  D031               	goto	u15280
 29661  01B74C                     l15920:
 29662                           
 29663                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 29664                           ;stkvar	_fp @ sp[(-17)+-2]
 29665  01B74C  0EED               	movlw	-19
 29666  01B74E  006F FF8F FFE6     	movff	plusw1,postinc1
 29667  01B754  006F FF8F FFE6     	movff	plusw1,postinc1
 29668  01B75A  0E20               	movlw	32
 29669  01B75C  6EE6               	movwf	postinc1,c
 29670  01B75E  0E00               	movlw	0
 29671  01B760  6EE6               	movwf	postinc1,c
 29672  01B762  EC38  F0F9         	call	_fputc	;wreg free
 29673                           
 29674                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 29675                           ;stkvar	_l @ sp[(-17)+7]
 29676  01B766  0EF6               	movlw	-10
 29677  01B768  50E3               	movf	plusw1,w,c
 29678  01B76A  0F01               	addlw	1
 29679  01B76C  6E2A               	movwf	btemp^0,c
 29680  01B76E  0EF6               	movlw	-10
 29681  01B770  0060  F0AB  FFE3   	movff	btemp,plusw1
 29682  01B776  6A2A               	clrf	btemp^0,c
 29683  01B778  0EF7               	movlw	-9
 29684  01B77A  50E3               	movf	plusw1,w,c
 29685  01B77C  202A               	addwfc	btemp^0,w,c
 29686  01B77E  6E2A               	movwf	btemp^0,c
 29687  01B780  0EF7               	movlw	-9
 29688  01B782  0060  F0AB  FFE3   	movff	btemp,plusw1
 29689  01B788                     l15924:
 29690                           
 29691                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 29692                           ;stkvar	_w @ sp[(-17)+13]
 29693                           ;stkvar	_l @ sp[(-17)+7]
 29694  01B788  50E1               	movf	fsr1l,w,c
 29695  01B78A  0FF6               	addlw	-10
 29696  01B78C  6ED9               	movwf	fsr2l,c
 29697  01B78E  50E2               	movf	fsr1h,w,c
 29698  01B790  6EDA               	movwf	fsr2h,c
 29699  01B792  0EFF               	movlw	255
 29700  01B794  22DA               	addwfc	fsr2h,f,c
 29701  01B796  0EFC               	movlw	-4
 29702  01B798  50E3               	movf	plusw1,w,c
 29703  01B79A  5CDE               	subwf	postinc2,w,c
 29704  01B79C  50DE               	movf	postinc2,w,c
 29705  01B79E  0A80               	xorlw	128
 29706  01B7A0  6E2A               	movwf	btemp^0,c
 29707  01B7A2  0EFD               	movlw	-3
 29708  01B7A4  50E3               	movf	plusw1,w,c
 29709  01B7A6  0A80               	xorlw	128
 29710  01B7A8  582A               	subwfb	btemp^0,w,c
 29711  01B7AA  A0D8               	btfss	status,0,c
 29712  01B7AC  D7CF               	goto	l15920
 29713  01B7AE                     u15280:
 29714                           
 29715                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 29716                           ;stkvar	_l @ sp[(-17)+7]
 29717  01B7AE  0EF6               	movlw	-10
 29718  01B7B0  006F FF8C  F02A    	movff	plusw1,btemp
 29719  01B7B6  0EF7               	movlw	-9
 29720  01B7B8  006F FF8C  F02B    	movff	plusw1,btemp+1
 29721                           
 29722                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 29723  01B7BE  0EEB               	movlw	235
 29724  01B7C0  26E1               	addwf	fsr1l,f,c
 29725  01B7C2  0EFF               	movlw	255
 29726  01B7C4  22E2               	addwfc	fsr1h,f,c
 29727  01B7C6  0012               	return		;funcret
 29728  01B7C8                     __end_of_stoa:
 29729                           	opt callstack 0
 29730                           
 29731 ;; *************** function _efgtoa *****************
 29732 ;; Defined at:
 29733 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 29734 ;; Parameters:    Size  Location     Type
 29735 ;;  fp              2  [STACK] PTR struct _IO_FILE
 29736 ;;		 -> f(6), NULL(0), 
 29737 ;;  f               4  [STACK] PTR struct _IO_FILE
 29738 ;;  c               1  [STACK] unsigned char 
 29739 ;; Auto vars:     Size  Location     Type
 29740 ;;  u               4  [STACK] unsigned char 
 29741 ;;  g               4  [STACK] unsigned char 
 29742 ;;  l               4  [STACK] unsigned char 
 29743 ;;  h               4  [STACK] unsigned char 
 29744 ;;  ou              4  [STACK] unsigned char 
 29745 ;;  n               2  [STACK] int 
 29746 ;;  e               2  [STACK] int 
 29747 ;;  i               2  [STACK] int 
 29748 ;;  w               2  [STACK] int 
 29749 ;;  p               2  [STACK] int 
 29750 ;;  sign            2  [STACK] int 
 29751 ;;  d               2  [STACK] int 
 29752 ;;  ne              2  [STACK] int 
 29753 ;;  m               2  [STACK] int 
 29754 ;;  pp              2  [STACK] int 
 29755 ;;  t               2  [STACK] int 
 29756 ;;  mode            1  [STACK] unsigned char 
 29757 ;;  nmode           1  [STACK] unsigned char 
 29758 ;; Return value:  Size  Location     Type
 29759 ;;                  2  [STACK] int 
 29760 ;; Registers used:
 29761 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 29762 ;; Tracked objects:
 29763 ;;		On entry : 0/0
 29764 ;;		On exit  : 0/0
 29765 ;;		Unchanged: 0/0
 29766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29771 ;;Total ram usage:        0 bytes
 29772 ;; Hardware stack levels used:    1
 29773 ;; Hardware stack levels required when called:   20
 29774 ;; This function calls:
 29775 ;;		___awdiv
 29776 ;;		___awmod
 29777 ;;		___fladd
 29778 ;;		___fldiv
 29779 ;;		___fleq
 29780 ;;		___flge
 29781 ;;		___flmul
 29782 ;;		___flneg
 29783 ;;		___flsub
 29784 ;;		___fltol
 29785 ;;		___fpclassifyf
 29786 ;;		_floorf
 29787 ;;		_isupper
 29788 ;;		_pad
 29789 ;;		_strcpy
 29790 ;;		_tolower
 29791 ;; This function is called by:
 29792 ;;		_vfpfcnvrt
 29793 ;; This function uses a reentrant model
 29794 ;;
 29795                           
 29796                           	psect	text103
 29797  0115D6                     __ptext103:
 29798                           	opt callstack 0
 29799  0115D6                     _efgtoa:
 29800                           	opt callstack 0
 29801                           
 29802                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 29803  0115D6  0E38               	movlw	56
 29804  0115D8  26E1               	addwf	fsr1l,f,c
 29805  0115DA  0E00               	movlw	0
 29806  0115DC  22E2               	addwfc	fsr1h,f,c
 29807                           
 29808                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 29809                           ;stkvar	_sign @ sp[(-56)+42]
 29810                           
 29811                           ;incstack = 0
 29812 ;; hardware stack exceeded
 29813  0115DE  0EF2               	movlw	-14
 29814  0115E0  6AE3               	clrf	plusw1,c
 29815  0115E2  0EF3               	movlw	-13
 29816  0115E4  6AE3               	clrf	plusw1,c
 29817                           
 29818                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 29819                           ;stkvar	_f @ sp[(-56)+-6]
 29820  0115E6  0EC2               	movlw	-62
 29821  0115E8  006F FF8C  F032    	movff	plusw1,btemp+8
 29822  0115EE  0EC3               	movlw	-61
 29823  0115F0  006F FF8C  F033    	movff	plusw1,btemp+9
 29824  0115F6  0EC4               	movlw	-60
 29825  0115F8  006F FF8C  F034    	movff	plusw1,btemp+10
 29826  0115FE  0EC5               	movlw	-59
 29827  011600  006F FF8C  F035    	movff	plusw1,btemp+11
 29828                           
 29829                           ;stkvar	_g @ sp[(-56)+16]
 29830  011606  0ED8               	movlw	-40
 29831  011608  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 29832  01160E  0ED9               	movlw	-39
 29833  011610  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 29834  011616  0EDA               	movlw	-38
 29835  011618  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29836  01161E  0EDB               	movlw	-37
 29837  011620  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29838                           
 29839                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 29840                           ;stkvar	_g @ sp[(-56)+16]
 29841  011626  0EDB               	movlw	-37
 29842  011628  AEE3               	btfss	plusw1,7,c
 29843  01162A  D02B               	goto	l15584
 29844                           
 29845                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 29846  01162C  0E01               	movlw	1
 29847  01162E  6E34               	movwf	(btemp+10)^0,c
 29848  011630  0E00               	movlw	0
 29849  011632  6E35               	movwf	(btemp+11)^0,c
 29850                           
 29851                           ;stkvar	_sign @ sp[(-56)+42]
 29852  011634  0EF2               	movlw	-14
 29853  011636  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29854  01163C  0EF3               	movlw	-13
 29855  01163E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29856                           
 29857                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 29858                           ;stkvar	_g @ sp[(-56)+16]
 29859  011644  0ED8               	movlw	-40
 29860  011646  006F FF8F FFE6     	movff	plusw1,postinc1
 29861  01164C  006F FF8F FFE6     	movff	plusw1,postinc1
 29862  011652  006F FF8F FFE6     	movff	plusw1,postinc1
 29863  011658  006F FF8F FFE6     	movff	plusw1,postinc1
 29864  01165E  ECA6  F00C         	call	___flneg	;wreg free
 29865                           
 29866                           ;stkvar	_g @ sp[(-56)+16]
 29867  011662  0ED8               	movlw	-40
 29868  011664  0060  F0AB  FFE3   	movff	btemp,plusw1
 29869  01166A  0ED9               	movlw	-39
 29870  01166C  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 29871  011672  0EDA               	movlw	-38
 29872  011674  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 29873  01167A  0EDB               	movlw	-37
 29874  01167C  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 29875  011682                     l15584:
 29876                           
 29877                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 29878                           ;stkvar	_n @ sp[(-56)+32]
 29879  011682  0EE8               	movlw	-24
 29880  011684  6AE3               	clrf	plusw1,c
 29881  011686  0EE9               	movlw	-23
 29882  011688  6AE3               	clrf	plusw1,c
 29883                           
 29884                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 29885                           ;stkvar	_w @ sp[(-56)+38]
 29886  01168A  0EEE               	movlw	-18
 29887  01168C  0060  F12B  FFE3   	movff	_width,plusw1
 29888  011692  0EEF               	movlw	-17
 29889  011694  0060  F12F  FFE3   	movff	_width+1,plusw1
 29890                           
 29891                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 29892                           ;stkvar	_sign @ sp[(-56)+42]
 29893  01169A  0EF2               	movlw	-14
 29894  01169C  006F FF8C  F02A    	movff	plusw1,btemp
 29895  0116A2  0EF3               	movlw	-13
 29896  0116A4  50E3               	movf	plusw1,w,c
 29897  0116A6  102A               	iorwf	btemp^0,w,c
 29898  0116A8  A4D8               	btfss	status,2,c
 29899  0116AA  D002               	goto	u14690
 29900  0116AC  A44E               	btfss	_flags^0,2,c
 29901  0116AE  D036               	goto	l15604
 29902  0116B0                     u14690:
 29903                           
 29904                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 29905                           ;stkvar	_sign @ sp[(-56)+42]
 29906  0116B0  0EF2               	movlw	-14
 29907  0116B2  006F FF8C  F02A    	movff	plusw1,btemp
 29908  0116B8  0EF3               	movlw	-13
 29909  0116BA  50E3               	movf	plusw1,w,c
 29910  0116BC  102A               	iorwf	btemp^0,w,c
 29911  0116BE  A4D8               	btfss	status,2,c
 29912  0116C0  D002               	goto	l15596
 29913  0116C2  0E2B               	movlw	43
 29914  0116C4  D001               	goto	L31
 29915  0116C6                     l15596:
 29916  0116C6  0E2D               	movlw	45
 29917  0116C8                     L31:
 29918  0116C8  6E34               	movwf	(btemp+10)^0,c
 29919  0116CA  0E00               	movlw	0
 29920  0116CC  6E35               	movwf	(btemp+11)^0,c
 29921                           
 29922                           ;stkvar	_efgtoa$6608 @ sp[(-56)+10]
 29923  0116CE  0ED2               	movlw	-46
 29924  0116D0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29925  0116D6  0ED3               	movlw	-45
 29926  0116D8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29927                           
 29928                           ;stkvar	_efgtoa$6608 @ sp[(-56)+10]
 29929  0116DE  0ED2               	movlw	-46
 29930  0116E0  006F FF8C  F354    	movff	plusw1,_dbuf
 29931                           
 29932                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 29933                           ;stkvar	_n @ sp[(-56)+32]
 29934  0116E6  0EE8               	movlw	-24
 29935  0116E8  50E3               	movf	plusw1,w,c
 29936  0116EA  0F01               	addlw	1
 29937  0116EC  6E2A               	movwf	btemp^0,c
 29938  0116EE  0EE8               	movlw	-24
 29939  0116F0  0060  F0AB  FFE3   	movff	btemp,plusw1
 29940  0116F6  6A2A               	clrf	btemp^0,c
 29941  0116F8  0EE9               	movlw	-23
 29942  0116FA  50E3               	movf	plusw1,w,c
 29943  0116FC  202A               	addwfc	btemp^0,w,c
 29944  0116FE  6E2A               	movwf	btemp^0,c
 29945  011700  0EE9               	movlw	-23
 29946  011702  0060  F0AB  FFE3   	movff	btemp,plusw1
 29947                           
 29948                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 29949                           ;stkvar	_w @ sp[(-56)+38]
 29950  011708  50E1               	movf	fsr1l,w,c
 29951  01170A  0FEE               	addlw	-18
 29952  01170C  6ED9               	movwf	fsr2l,c
 29953  01170E  50E2               	movf	fsr1h,w,c
 29954  011710  6EDA               	movwf	fsr2h,c
 29955  011712  0EFF               	movlw	255
 29956  011714  22DA               	addwfc	fsr2h,f,c
 29957  011716  06DE               	decf	postinc2,f,c
 29958  011718  0E00               	movlw	0
 29959  01171A  5ADD               	subwfb	postdec2,f,c
 29960  01171C                     l15604:
 29961                           
 29962                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 29963                           ;stkvar	_g @ sp[(-56)+16]
 29964  01171C  0ED8               	movlw	-40
 29965  01171E  006F FF8F FFE6     	movff	plusw1,postinc1
 29966  011724  006F FF8F FFE6     	movff	plusw1,postinc1
 29967  01172A  006F FF8F FFE6     	movff	plusw1,postinc1
 29968  011730  006F FF8F FFE6     	movff	plusw1,postinc1
 29969  011736  EC45  F0ED         	call	___fpclassifyf	;wreg free
 29970  01173A  042A               	decf	btemp^0,w,c
 29971  01173C  102B               	iorwf	(btemp+1)^0,w,c
 29972  01173E  A4D8               	btfss	status,2,c
 29973  011740  D076               	goto	l15622
 29974  011742  0EBF               	movlw	191
 29975  011744  6E34               	movwf	(btemp+10)^0,c
 29976  011746  0EFF               	movlw	255
 29977  011748  6E35               	movwf	(btemp+11)^0,c
 29978                           
 29979                           ;stkvar	_c @ sp[(-56)+-7]
 29980  01174A  0EC1               	movlw	-63
 29981  01174C  50E3               	movf	plusw1,w,c
 29982  01174E  6E32               	movwf	(btemp+8)^0,c
 29983  011750  6A33               	clrf	(btemp+9)^0,c
 29984  011752  5034               	movf	(btemp+10)^0,w,c
 29985  011754  2632               	addwf	(btemp+8)^0,f,c
 29986  011756  5035               	movf	(btemp+11)^0,w,c
 29987  011758  2233               	addwfc	(btemp+9)^0,f,c
 29988  01175A  5033               	movf	(btemp+9)^0,w,c
 29989  01175C  E106               	bnz	u14720
 29990  01175E  0E1A               	movlw	26
 29991  011760  5C32               	subwf	(btemp+8)^0,w,c
 29992  011762  B0D8               	btfsc	status,0,c
 29993  011764  D002               	goto	u14720
 29994  011766  0E01               	movlw	1
 29995  011768  D001               	goto	u14730
 29996  01176A                     u14720:
 29997  01176A  0E00               	movlw	0
 29998  01176C                     u14730:
 29999  01176C  6E34               	movwf	(btemp+10)^0,c
 30000  01176E  6A35               	clrf	(btemp+11)^0,c
 30001                           
 30002                           ;stkvar	_efgtoa$6609 @ sp[(-56)+8]
 30003  011770  0ED0               	movlw	-48
 30004  011772  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30005  011778  0ED1               	movlw	-47
 30006  01177A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30007                           
 30008                           ;stkvar	_efgtoa$6609 @ sp[(-56)+8]
 30009  011780  0ED0               	movlw	-48
 30010  011782  006F FF8C  F02A    	movff	plusw1,btemp
 30011  011788  0ED1               	movlw	-47
 30012  01178A  50E3               	movf	plusw1,w,c
 30013  01178C  102A               	iorwf	btemp^0,w,c
 30014  01178E  B4D8               	btfsc	status,2,c
 30015  011790  D017               	goto	l15614
 30016                           
 30017                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 30018  011792  0EDA               	movlw	low STR_91
 30019  011794  6EE6               	movwf	postinc1,c
 30020  011796  0EFF               	movlw	high STR_91
 30021  011798  6EE6               	movwf	postinc1,c
 30022                           
 30023                           ;stkvar	_n @ sp[(-58)+32]
 30024  01179A  0E54               	movlw	low _dbuf
 30025  01179C  6E34               	movwf	(btemp+10)^0,c
 30026  01179E  0E03               	movlw	high _dbuf
 30027  0117A0  6E35               	movwf	(btemp+11)^0,c
 30028  0117A2  0EE6               	movlw	-26
 30029  0117A4  50E3               	movf	plusw1,w,c
 30030  0117A6  2634               	addwf	(btemp+10)^0,f,c
 30031  0117A8  0EE7               	movlw	-25
 30032  0117AA  50E3               	movf	plusw1,w,c
 30033  0117AC  2235               	addwfc	(btemp+11)^0,f,c
 30034  0117AE  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 30035  0117B4  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 30036  0117BA  EC5B  F000         	call	_strcpy	;wreg free
 30037                           
 30038                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 30039  0117BE  D016               	goto	l15616
 30040  0117C0                     l15614:
 30041                           
 30042                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 30043  0117C0  0EE2               	movlw	low STR_92
 30044  0117C2  6EE6               	movwf	postinc1,c
 30045  0117C4  0EFF               	movlw	high STR_92
 30046  0117C6  6EE6               	movwf	postinc1,c
 30047                           
 30048                           ;stkvar	_n @ sp[(-58)+32]
 30049  0117C8  0E54               	movlw	low _dbuf
 30050  0117CA  6E34               	movwf	(btemp+10)^0,c
 30051  0117CC  0E03               	movlw	high _dbuf
 30052  0117CE  6E35               	movwf	(btemp+11)^0,c
 30053  0117D0  0EE6               	movlw	-26
 30054  0117D2  50E3               	movf	plusw1,w,c
 30055  0117D4  2634               	addwf	(btemp+10)^0,f,c
 30056  0117D6  0EE7               	movlw	-25
 30057  0117D8  50E3               	movf	plusw1,w,c
 30058  0117DA  2235               	addwfc	(btemp+11)^0,f,c
 30059  0117DC  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 30060  0117E2  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 30061  0117E8  EC5B  F000         	call	_strcpy	;wreg free
 30062  0117EC                     l15616:
 30063                           
 30064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 30065                           ;stkvar	_w @ sp[(-56)+38]
 30066  0117EC  50E1               	movf	fsr1l,w,c
 30067  0117EE  0FEE               	addlw	-18
 30068  0117F0  6ED9               	movwf	fsr2l,c
 30069  0117F2  50E2               	movf	fsr1h,w,c
 30070  0117F4  6EDA               	movwf	fsr2h,c
 30071  0117F6  0EFF               	movlw	255
 30072  0117F8  22DA               	addwfc	fsr2h,f,c
 30073  0117FA  0EFD               	movlw	253
 30074  0117FC  26DE               	addwf	postinc2,f,c
 30075  0117FE  0EFF               	movlw	255
 30076  011800  22DD               	addwfc	postdec2,f,c
 30077  011802                     l15618:
 30078                           
 30079                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 30080                           ;stkvar	_w @ sp[(-56)+38]
 30081  011802  0EEE               	movlw	-18
 30082  011804  006F FF8F FFE6     	movff	plusw1,postinc1
 30083  01180A  006F FF8F FFE6     	movff	plusw1,postinc1
 30084  011810  0E54               	movlw	low _dbuf
 30085  011812  6EE6               	movwf	postinc1,c
 30086  011814  0E03               	movlw	high _dbuf
 30087  011816  6EE6               	movwf	postinc1,c
 30088                           
 30089                           ;stkvar	_fp @ sp[(-60)+-2]
 30090  011818  0EC2               	movlw	-62
 30091  01181A  006F FF8F FFE6     	movff	plusw1,postinc1
 30092  011820  006F FF8F FFE6     	movff	plusw1,postinc1
 30093  011826  EC6F  F0FB         	call	_pad	;wreg free
 30094  01182A  EF08  F094         	goto	l2521
 30095  01182E                     l15622:
 30096                           
 30097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 30098                           ;stkvar	_g @ sp[(-56)+16]
 30099  01182E  0ED8               	movlw	-40
 30100  011830  006F FF8F FFE6     	movff	plusw1,postinc1
 30101  011836  006F FF8F FFE6     	movff	plusw1,postinc1
 30102  01183C  006F FF8F FFE6     	movff	plusw1,postinc1
 30103  011842  006F FF8F FFE6     	movff	plusw1,postinc1
 30104  011848  EC45  F0ED         	call	___fpclassifyf	;wreg free
 30105  01184C  502A               	movf	btemp^0,w,c
 30106  01184E  102B               	iorwf	(btemp+1)^0,w,c
 30107  011850  A4D8               	btfss	status,2,c
 30108  011852  D056               	goto	l15640
 30109  011854  0EBF               	movlw	191
 30110  011856  6E34               	movwf	(btemp+10)^0,c
 30111  011858  0EFF               	movlw	255
 30112  01185A  6E35               	movwf	(btemp+11)^0,c
 30113                           
 30114                           ;stkvar	_c @ sp[(-56)+-7]
 30115  01185C  0EC1               	movlw	-63
 30116  01185E  50E3               	movf	plusw1,w,c
 30117  011860  6E32               	movwf	(btemp+8)^0,c
 30118  011862  6A33               	clrf	(btemp+9)^0,c
 30119  011864  5034               	movf	(btemp+10)^0,w,c
 30120  011866  2632               	addwf	(btemp+8)^0,f,c
 30121  011868  5035               	movf	(btemp+11)^0,w,c
 30122  01186A  2233               	addwfc	(btemp+9)^0,f,c
 30123  01186C  5033               	movf	(btemp+9)^0,w,c
 30124  01186E  E106               	bnz	u14760
 30125  011870  0E1A               	movlw	26
 30126  011872  5C32               	subwf	(btemp+8)^0,w,c
 30127  011874  B0D8               	btfsc	status,0,c
 30128  011876  D002               	goto	u14760
 30129  011878  0E01               	movlw	1
 30130  01187A  D001               	goto	u14770
 30131  01187C                     u14760:
 30132  01187C  0E00               	movlw	0
 30133  01187E                     u14770:
 30134  01187E  6E34               	movwf	(btemp+10)^0,c
 30135  011880  6A35               	clrf	(btemp+11)^0,c
 30136                           
 30137                           ;stkvar	_efgtoa$6613 @ sp[(-56)+6]
 30138  011882  0ECE               	movlw	-50
 30139  011884  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30140  01188A  0ECF               	movlw	-49
 30141  01188C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30142                           
 30143                           ;stkvar	_efgtoa$6613 @ sp[(-56)+6]
 30144  011892  0ECE               	movlw	-50
 30145  011894  006F FF8C  F02A    	movff	plusw1,btemp
 30146  01189A  0ECF               	movlw	-49
 30147  01189C  50E3               	movf	plusw1,w,c
 30148  01189E  102A               	iorwf	btemp^0,w,c
 30149  0118A0  B4D8               	btfsc	status,2,c
 30150  0118A2  D017               	goto	l15632
 30151                           
 30152                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 30153  0118A4  0EDE               	movlw	low STR_95
 30154  0118A6  6EE6               	movwf	postinc1,c
 30155  0118A8  0EFF               	movlw	high STR_95
 30156  0118AA  6EE6               	movwf	postinc1,c
 30157                           
 30158                           ;stkvar	_n @ sp[(-58)+32]
 30159  0118AC  0E54               	movlw	low _dbuf
 30160  0118AE  6E34               	movwf	(btemp+10)^0,c
 30161  0118B0  0E03               	movlw	high _dbuf
 30162  0118B2  6E35               	movwf	(btemp+11)^0,c
 30163  0118B4  0EE6               	movlw	-26
 30164  0118B6  50E3               	movf	plusw1,w,c
 30165  0118B8  2634               	addwf	(btemp+10)^0,f,c
 30166  0118BA  0EE7               	movlw	-25
 30167  0118BC  50E3               	movf	plusw1,w,c
 30168  0118BE  2235               	addwfc	(btemp+11)^0,f,c
 30169  0118C0  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 30170  0118C6  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 30171  0118CC  EC5B  F000         	call	_strcpy	;wreg free
 30172                           
 30173                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 30174  0118D0  D78D               	goto	l15616
 30175  0118D2                     l15632:
 30176                           
 30177                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 30178  0118D2  0EE6               	movlw	low STR_96
 30179  0118D4  6EE6               	movwf	postinc1,c
 30180  0118D6  0EFF               	movlw	high STR_96
 30181  0118D8  6EE6               	movwf	postinc1,c
 30182                           
 30183                           ;stkvar	_n @ sp[(-58)+32]
 30184  0118DA  0E54               	movlw	low _dbuf
 30185  0118DC  6E34               	movwf	(btemp+10)^0,c
 30186  0118DE  0E03               	movlw	high _dbuf
 30187  0118E0  6E35               	movwf	(btemp+11)^0,c
 30188  0118E2  0EE6               	movlw	-26
 30189  0118E4  50E3               	movf	plusw1,w,c
 30190  0118E6  2634               	addwf	(btemp+10)^0,f,c
 30191  0118E8  0EE7               	movlw	-25
 30192  0118EA  50E3               	movf	plusw1,w,c
 30193  0118EC  2235               	addwfc	(btemp+11)^0,f,c
 30194  0118EE  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 30195  0118F4  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 30196  0118FA  EC5B  F000         	call	_strcpy	;wreg free
 30197  0118FE  D776               	goto	l15616
 30198  011900                     l15640:
 30199                           
 30200                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 30201  011900  0E00               	movlw	0
 30202  011902  6E32               	movwf	(btemp+8)^0,c
 30203  011904  0E00               	movlw	0
 30204  011906  6E33               	movwf	(btemp+9)^0,c
 30205  011908  0E80               	movlw	128
 30206  01190A  6E34               	movwf	(btemp+10)^0,c
 30207  01190C  0E3F               	movlw	63
 30208  01190E  6E35               	movwf	(btemp+11)^0,c
 30209                           
 30210                           ;stkvar	_u @ sp[(-56)+12]
 30211  011910  0ED4               	movlw	-44
 30212  011912  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 30213  011918  0ED5               	movlw	-43
 30214  01191A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 30215  011920  0ED6               	movlw	-42
 30216  011922  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30217  011928  0ED7               	movlw	-41
 30218  01192A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30219                           
 30220                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 30221                           ;stkvar	_e @ sp[(-56)+34]
 30222  011930  0EEA               	movlw	-22
 30223  011932  6AE3               	clrf	plusw1,c
 30224  011934  0EEB               	movlw	-21
 30225  011936  6AE3               	clrf	plusw1,c
 30226                           
 30227                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 30228  011938  0E00               	movlw	0
 30229  01193A  6EE6               	movwf	postinc1,c
 30230  01193C  0E00               	movlw	0
 30231  01193E  6EE6               	movwf	postinc1,c
 30232  011940  0E00               	movlw	0
 30233  011942  6EE6               	movwf	postinc1,c
 30234  011944  0E00               	movlw	0
 30235  011946  6EE6               	movwf	postinc1,c
 30236                           
 30237                           ;stkvar	_g @ sp[(-60)+16]
 30238  011948  0ED4               	movlw	-44
 30239  01194A  006F FF8F FFE6     	movff	plusw1,postinc1
 30240  011950  006F FF8F FFE6     	movff	plusw1,postinc1
 30241  011956  006F FF8F FFE6     	movff	plusw1,postinc1
 30242  01195C  006F FF8F FFE6     	movff	plusw1,postinc1
 30243  011962  EC2C  F001         	call	___fleq	;wreg free
 30244  011966  A02A               	btfss	btemp& (0+255),0,c
 30245  011968  D039               	goto	l15652
 30246  01196A  D0BC               	goto	u14810
 30247  01196C                     l15648:
 30248                           
 30249                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 30250  01196C  0E00               	movlw	0
 30251  01196E  6EE6               	movwf	postinc1,c
 30252  011970  0E00               	movlw	0
 30253  011972  6EE6               	movwf	postinc1,c
 30254  011974  0E20               	movlw	32
 30255  011976  6EE6               	movwf	postinc1,c
 30256  011978  0E41               	movlw	65
 30257  01197A  6EE6               	movwf	postinc1,c
 30258                           
 30259                           ;stkvar	_u @ sp[(-60)+12]
 30260  01197C  0ED0               	movlw	-48
 30261  01197E  006F FF8F FFE6     	movff	plusw1,postinc1
 30262  011984  006F FF8F FFE6     	movff	plusw1,postinc1
 30263  01198A  006F FF8F FFE6     	movff	plusw1,postinc1
 30264  011990  006F FF8F FFE6     	movff	plusw1,postinc1
 30265  011996  EC8D  F0B2         	call	___flmul	;wreg free
 30266                           
 30267                           ;stkvar	_u @ sp[(-56)+12]
 30268  01199A  0ED4               	movlw	-44
 30269  01199C  0060  F0AB  FFE3   	movff	btemp,plusw1
 30270  0119A2  0ED5               	movlw	-43
 30271  0119A4  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30272  0119AA  0ED6               	movlw	-42
 30273  0119AC  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 30274  0119B2  0ED7               	movlw	-41
 30275  0119B4  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 30276                           
 30277                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 30278                           ;stkvar	_e @ sp[(-56)+34]
 30279  0119BA  0EEA               	movlw	-22
 30280  0119BC  50E3               	movf	plusw1,w,c
 30281  0119BE  0F01               	addlw	1
 30282  0119C0  6E2A               	movwf	btemp^0,c
 30283  0119C2  0EEA               	movlw	-22
 30284  0119C4  0060  F0AB  FFE3   	movff	btemp,plusw1
 30285  0119CA  6A2A               	clrf	btemp^0,c
 30286  0119CC  0EEB               	movlw	-21
 30287  0119CE  50E3               	movf	plusw1,w,c
 30288  0119D0  202A               	addwfc	btemp^0,w,c
 30289  0119D2  6E2A               	movwf	btemp^0,c
 30290  0119D4  0EEB               	movlw	-21
 30291  0119D6  0060  F0AB  FFE3   	movff	btemp,plusw1
 30292  0119DC                     l15652:
 30293                           
 30294                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 30295  0119DC  0E00               	movlw	0
 30296  0119DE  6EE6               	movwf	postinc1,c
 30297  0119E0  0E00               	movlw	0
 30298  0119E2  6EE6               	movwf	postinc1,c
 30299  0119E4  0E20               	movlw	32
 30300  0119E6  6EE6               	movwf	postinc1,c
 30301  0119E8  0E41               	movlw	65
 30302  0119EA  6EE6               	movwf	postinc1,c
 30303                           
 30304                           ;stkvar	_u @ sp[(-60)+12]
 30305  0119EC  0ED0               	movlw	-48
 30306  0119EE  006F FF8F FFE6     	movff	plusw1,postinc1
 30307  0119F4  006F FF8F FFE6     	movff	plusw1,postinc1
 30308  0119FA  006F FF8F FFE6     	movff	plusw1,postinc1
 30309  011A00  006F FF8F FFE6     	movff	plusw1,postinc1
 30310  011A06  EC8D  F0B2         	call	___flmul	;wreg free
 30311  011A0A  0060  F0AB  FFE6   	movff	btemp,postinc1
 30312  011A10  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 30313  011A16  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 30314  011A1C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 30315                           
 30316                           ;stkvar	_g @ sp[(-60)+16]
 30317  011A22  0ED4               	movlw	-44
 30318  011A24  006F FF8F FFE6     	movff	plusw1,postinc1
 30319  011A2A  006F FF8F FFE6     	movff	plusw1,postinc1
 30320  011A30  006F FF8F FFE6     	movff	plusw1,postinc1
 30321  011A36  006F FF8F FFE6     	movff	plusw1,postinc1
 30322  011A3C  EC49  F0F3         	call	___flge	;wreg free
 30323  011A40  A02A               	btfss	btemp& (0+255),0,c
 30324  011A42  D032               	goto	l15658
 30325  011A44  D793               	goto	l15648
 30326  011A46                     l15654:
 30327                           
 30328                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 30329  011A46  0E00               	movlw	0
 30330  011A48  6EE6               	movwf	postinc1,c
 30331  011A4A  0E00               	movlw	0
 30332  011A4C  6EE6               	movwf	postinc1,c
 30333  011A4E  0E20               	movlw	32
 30334  011A50  6EE6               	movwf	postinc1,c
 30335  011A52  0E41               	movlw	65
 30336  011A54  6EE6               	movwf	postinc1,c
 30337                           
 30338                           ;stkvar	_u @ sp[(-60)+12]
 30339  011A56  0ED0               	movlw	-48
 30340  011A58  006F FF8F FFE6     	movff	plusw1,postinc1
 30341  011A5E  006F FF8F FFE6     	movff	plusw1,postinc1
 30342  011A64  006F FF8F FFE6     	movff	plusw1,postinc1
 30343  011A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 30344  011A70  ECDE  F0BD         	call	___fldiv	;wreg free
 30345                           
 30346                           ;stkvar	_u @ sp[(-56)+12]
 30347  011A74  0ED4               	movlw	-44
 30348  011A76  0060  F0AB  FFE3   	movff	btemp,plusw1
 30349  011A7C  0ED5               	movlw	-43
 30350  011A7E  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30351  011A84  0ED6               	movlw	-42
 30352  011A86  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 30353  011A8C  0ED7               	movlw	-41
 30354  011A8E  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 30355                           
 30356                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 30357                           ;stkvar	_e @ sp[(-56)+34]
 30358  011A94  50E1               	movf	fsr1l,w,c
 30359  011A96  0FEA               	addlw	-22
 30360  011A98  6ED9               	movwf	fsr2l,c
 30361  011A9A  50E2               	movf	fsr1h,w,c
 30362  011A9C  6EDA               	movwf	fsr2h,c
 30363  011A9E  0EFF               	movlw	255
 30364  011AA0  22DA               	addwfc	fsr2h,f,c
 30365  011AA2  06DE               	decf	postinc2,f,c
 30366  011AA4  0E00               	movlw	0
 30367  011AA6  5ADD               	subwfb	postdec2,f,c
 30368  011AA8                     l15658:
 30369                           
 30370                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 30371                           ;stkvar	_u @ sp[(-56)+12]
 30372  011AA8  0ED4               	movlw	-44
 30373  011AAA  006F FF8F FFE6     	movff	plusw1,postinc1
 30374  011AB0  006F FF8F FFE6     	movff	plusw1,postinc1
 30375  011AB6  006F FF8F FFE6     	movff	plusw1,postinc1
 30376  011ABC  006F FF8F FFE6     	movff	plusw1,postinc1
 30377                           
 30378                           ;stkvar	_g @ sp[(-60)+16]
 30379  011AC2  0ED4               	movlw	-44
 30380  011AC4  006F FF8F FFE6     	movff	plusw1,postinc1
 30381  011ACA  006F FF8F FFE6     	movff	plusw1,postinc1
 30382  011AD0  006F FF8F FFE6     	movff	plusw1,postinc1
 30383  011AD6  006F FF8F FFE6     	movff	plusw1,postinc1
 30384  011ADC  EC49  F0F3         	call	___flge	;wreg free
 30385  011AE0  A02A               	btfss	btemp& (0+255),0,c
 30386  011AE2  D7B1               	goto	l15654
 30387  011AE4                     u14810:
 30388                           
 30389                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 30390                           ;stkvar	_c @ sp[(-56)+-7]
 30391  011AE4  0EC1               	movlw	-63
 30392  011AE6  50E3               	movf	plusw1,w,c
 30393  011AE8  6EE6               	movwf	postinc1,c
 30394  011AEA  0E00               	movlw	0
 30395  011AEC  6EE6               	movwf	postinc1,c
 30396  011AEE  EC84  F007         	call	_tolower	;wreg free
 30397                           
 30398                           ;stkvar	_mode @ sp[(-56)+54]
 30399  011AF2  0EFE               	movlw	-2
 30400  011AF4  0060  F0AB  FFE3   	movff	btemp,plusw1
 30401                           
 30402                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 30403                           ;stkvar	_mode @ sp[(-56)+54]
 30404                           ;stkvar	_nmode @ sp[(-56)+55]
 30405  011AFA  0EFE               	movlw	-2
 30406  011AFC  006F FF8C  F02A    	movff	plusw1,btemp
 30407  011B02  0EFF               	movlw	-1
 30408  011B04  0060  F0AB  FFE3   	movff	btemp,plusw1
 30409                           
 30410                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 30411                           ;stkvar	_mode @ sp[(-56)+54]
 30412  011B0A  0EFE               	movlw	-2
 30413  011B0C  006F FF8C  F02A    	movff	plusw1,btemp
 30414  011B12  0E67               	movlw	103
 30415  011B14  182A               	xorwf	btemp^0,w,c
 30416  011B16  A4D8               	btfss	status,2,c
 30417  011B18  D025               	goto	l15676
 30418                           
 30419                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 30420  011B1A  504C               	movf	_prec^0,w,c
 30421  011B1C  104D               	iorwf	(_prec+1)^0,w,c
 30422  011B1E  A4D8               	btfss	status,2,c
 30423  011B20  D004               	goto	l15670
 30424                           
 30425                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 30426  011B22  0E00               	movlw	0
 30427  011B24  6E4D               	movwf	(_prec+1)^0,c
 30428  011B26  0E01               	movlw	1
 30429  011B28  6E4C               	movwf	_prec^0,c
 30430  011B2A                     l15670:
 30431                           
 30432                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 30433  011B2A  BE4D               	btfsc	(_prec+1)^0,7,c
 30434  011B2C  D005               	goto	u14840
 30435  011B2E  504D               	movf	(_prec+1)^0,w,c
 30436  011B30  E110               	bnz	l15674
 30437  011B32  044C               	decf	_prec^0,w,c
 30438  011B34  B0D8               	btfsc	status,0,c
 30439  011B36  D00D               	goto	l15674
 30440  011B38                     u14840:
 30441  011B38  0E06               	movlw	6
 30442  011B3A  6E34               	movwf	(btemp+10)^0,c
 30443  011B3C  0E00               	movlw	0
 30444  011B3E  6E35               	movwf	(btemp+11)^0,c
 30445                           
 30446                           ;stkvar	_p @ sp[(-56)+40]
 30447  011B40  0EF0               	movlw	-16
 30448  011B42  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30449  011B48  0EF1               	movlw	-15
 30450  011B4A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30451  011B50  D00C               	goto	l15682
 30452  011B52                     l15674:
 30453                           
 30454                           ;stkvar	_p @ sp[(-56)+40]
 30455  011B52  0EF0               	movlw	-16
 30456  011B54  0060  F133  FFE3   	movff	_prec,plusw1
 30457  011B5A  0EF1               	movlw	-15
 30458  011B5C  0060  F137  FFE3   	movff	_prec+1,plusw1
 30459  011B62  D003               	goto	l15682
 30460  011B64                     l15676:
 30461                           
 30462                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 30463  011B64  AE4D               	btfss	(_prec+1)^0,7,c
 30464  011B66  D7F5               	goto	l15674
 30465  011B68  D7E7               	goto	u14840
 30466  011B6A                     l15682:
 30467                           
 30468                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 30469                           ;stkvar	_mode @ sp[(-56)+54]
 30470  011B6A  0EFE               	movlw	-2
 30471  011B6C  006F FF8C  F02A    	movff	plusw1,btemp
 30472  011B72  0E67               	movlw	103
 30473  011B74  182A               	xorwf	btemp^0,w,c
 30474  011B76  A4D8               	btfss	status,2,c
 30475  011B78  D02F               	goto	l15692
 30476                           
 30477                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 30478                           ;stkvar	_e @ sp[(-56)+34]
 30479  011B7A  0EEB               	movlw	-21
 30480  011B7C  AEE3               	btfss	plusw1,7,c
 30481  011B7E  D00E               	goto	u14870
 30482  011B80  0EEA               	movlw	-22
 30483  011B82  006F FF8C  F02A    	movff	plusw1,btemp
 30484  011B88  0EFC               	movlw	252
 30485  011B8A  5E2A               	subwf	btemp^0,f,c
 30486  011B8C  0EEB               	movlw	-21
 30487  011B8E  006F FF8C  F02A    	movff	plusw1,btemp
 30488  011B94  0EFF               	movlw	255
 30489  011B96  5A2A               	subwfb	btemp^0,f,c
 30490  011B98  A0D8               	btfss	status,0,c
 30491  011B9A  D018               	goto	l15690
 30492  011B9C                     u14870:
 30493                           
 30494                           ;stkvar	_e @ sp[(-56)+34]
 30495                           ;stkvar	_p @ sp[(-56)+40]
 30496  011B9C  0EF0               	movlw	-16
 30497  011B9E  50E3               	movf	plusw1,w,c
 30498  011BA0  0FFF               	addlw	255
 30499  011BA2  6E34               	movwf	(btemp+10)^0,c
 30500  011BA4  0EF1               	movlw	-15
 30501  011BA6  006F FF8C  F035    	movff	plusw1,btemp+11
 30502  011BAC  0EFF               	movlw	255
 30503  011BAE  2235               	addwfc	(btemp+11)^0,f,c
 30504  011BB0  0EEA               	movlw	-22
 30505  011BB2  50E3               	movf	plusw1,w,c
 30506  011BB4  5C34               	subwf	(btemp+10)^0,w,c
 30507  011BB6  5035               	movf	(btemp+11)^0,w,c
 30508  011BB8  0A80               	xorlw	128
 30509  011BBA  6E2A               	movwf	btemp^0,c
 30510  011BBC  0EEB               	movlw	-21
 30511  011BBE  50E3               	movf	plusw1,w,c
 30512  011BC0  0A80               	xorlw	128
 30513  011BC2  582A               	subwfb	btemp^0,w,c
 30514  011BC4  A0D8               	btfss	status,0,c
 30515  011BC6  D002               	goto	l15690
 30516                           
 30517                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 30518  011BC8  0E66               	movlw	102
 30519  011BCA  D001               	goto	L32
 30520  011BCC                     l15690:
 30521                           
 30522                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 30523  011BCC  0E65               	movlw	101
 30524  011BCE                     L32:
 30525  011BCE  6E35               	movwf	(btemp+11)^0,c
 30526                           
 30527                           ;stkvar	_nmode @ sp[(-56)+55]
 30528  011BD0  0EFF               	movlw	-1
 30529  011BD2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30530  011BD8                     l15692:
 30531                           
 30532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 30533                           ;stkvar	_p @ sp[(-56)+40]
 30534                           ;stkvar	_m @ sp[(-56)+48]
 30535  011BD8  0EF0               	movlw	-16
 30536  011BDA  006F FF8C  F02A    	movff	plusw1,btemp
 30537  011BE0  0EF8               	movlw	-8
 30538  011BE2  0060  F0AB  FFE3   	movff	btemp,plusw1
 30539  011BE8  0EF1               	movlw	-15
 30540  011BEA  006F FF8C  F02A    	movff	plusw1,btemp
 30541  011BF0  0EF9               	movlw	-7
 30542  011BF2  0060  F0AB  FFE3   	movff	btemp,plusw1
 30543                           
 30544                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 30545                           ;stkvar	_mode @ sp[(-56)+54]
 30546  011BF8  0EFE               	movlw	-2
 30547  011BFA  006F FF8C  F02A    	movff	plusw1,btemp
 30548  011C00  0E67               	movlw	103
 30549  011C02  182A               	xorwf	btemp^0,w,c
 30550  011C04  A4D8               	btfss	status,2,c
 30551  011C06  D00B               	goto	u14910
 30552                           
 30553                           ;stkvar	_nmode @ sp[(-56)+55]
 30554  011C08  0EFF               	movlw	-1
 30555  011C0A  006F FF8C  F02A    	movff	plusw1,btemp
 30556  011C10  0E66               	movlw	102
 30557  011C12  182A               	xorwf	btemp^0,w,c
 30558  011C14  A4D8               	btfss	status,2,c
 30559  011C16  D014               	goto	l2550
 30560                           
 30561                           ;stkvar	_e @ sp[(-56)+34]
 30562  011C18  0EEB               	movlw	-21
 30563  011C1A  AEE3               	btfss	plusw1,7,c
 30564  011C1C  D011               	goto	l2550
 30565  011C1E                     u14910:
 30566                           
 30567                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 30568                           ;stkvar	_m @ sp[(-56)+48]
 30569  011C1E  0EF8               	movlw	-8
 30570  011C20  50E3               	movf	plusw1,w,c
 30571  011C22  0F01               	addlw	1
 30572  011C24  6E2A               	movwf	btemp^0,c
 30573  011C26  0EF8               	movlw	-8
 30574  011C28  0060  F0AB  FFE3   	movff	btemp,plusw1
 30575  011C2E  6A2A               	clrf	btemp^0,c
 30576  011C30  0EF9               	movlw	-7
 30577  011C32  50E3               	movf	plusw1,w,c
 30578  011C34  202A               	addwfc	btemp^0,w,c
 30579  011C36  6E2A               	movwf	btemp^0,c
 30580  011C38  0EF9               	movlw	-7
 30581  011C3A  0060  F0AB  FFE3   	movff	btemp,plusw1
 30582  011C40                     l2550:
 30583                           
 30584                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 30585                           ;stkvar	_nmode @ sp[(-56)+55]
 30586  011C40  0EFF               	movlw	-1
 30587  011C42  006F FF8C  F02A    	movff	plusw1,btemp
 30588  011C48  0E66               	movlw	102
 30589  011C4A  182A               	xorwf	btemp^0,w,c
 30590  011C4C  A4D8               	btfss	status,2,c
 30591  011C4E  D03B               	goto	l15712
 30592                           
 30593                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 30594                           ;stkvar	_e @ sp[(-56)+34]
 30595  011C50  0EEB               	movlw	-21
 30596  011C52  AEE3               	btfss	plusw1,7,c
 30597  011C54  D01C               	goto	l15708
 30598                           
 30599                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 30600  011C56  0E00               	movlw	0
 30601  011C58  6E32               	movwf	(btemp+8)^0,c
 30602  011C5A  0E00               	movlw	0
 30603  011C5C  6E33               	movwf	(btemp+9)^0,c
 30604  011C5E  0E80               	movlw	128
 30605  011C60  6E34               	movwf	(btemp+10)^0,c
 30606  011C62  0E3F               	movlw	63
 30607  011C64  6E35               	movwf	(btemp+11)^0,c
 30608                           
 30609                           ;stkvar	_u @ sp[(-56)+12]
 30610  011C66  0ED4               	movlw	-44
 30611  011C68  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 30612  011C6E  0ED5               	movlw	-43
 30613  011C70  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 30614  011C76  0ED6               	movlw	-42
 30615  011C78  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30616  011C7E  0ED7               	movlw	-41
 30617  011C80  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30618                           
 30619                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 30620                           ;stkvar	_e @ sp[(-56)+34]
 30621  011C86  0EEA               	movlw	-22
 30622  011C88  6AE3               	clrf	plusw1,c
 30623  011C8A  0EEB               	movlw	-21
 30624  011C8C  6AE3               	clrf	plusw1,c
 30625  011C8E                     l15708:
 30626                           
 30627                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 30628                           ;stkvar	_mode @ sp[(-56)+54]
 30629  011C8E  0EFE               	movlw	-2
 30630  011C90  006F FF8C  F02A    	movff	plusw1,btemp
 30631  011C96  0E67               	movlw	103
 30632  011C98  182A               	xorwf	btemp^0,w,c
 30633  011C9A  B4D8               	btfsc	status,2,c
 30634  011C9C  D014               	goto	l15712
 30635                           
 30636                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 30637                           ;stkvar	_e @ sp[(-56)+34]
 30638                           ;stkvar	_m @ sp[(-56)+48]
 30639  011C9E  0EF8               	movlw	-8
 30640  011CA0  50E3               	movf	plusw1,w,c
 30641  011CA2  6E2A               	movwf	btemp^0,c
 30642  011CA4  0EEA               	movlw	-22
 30643  011CA6  50E3               	movf	plusw1,w,c
 30644  011CA8  262A               	addwf	btemp^0,f,c
 30645  011CAA  0EF8               	movlw	-8
 30646  011CAC  0060  F0AB  FFE3   	movff	btemp,plusw1
 30647  011CB2  0EF9               	movlw	-7
 30648  011CB4  50E3               	movf	plusw1,w,c
 30649  011CB6  6E2A               	movwf	btemp^0,c
 30650  011CB8  0EEB               	movlw	-21
 30651  011CBA  50E3               	movf	plusw1,w,c
 30652  011CBC  222A               	addwfc	btemp^0,f,c
 30653  011CBE  0EF9               	movlw	-7
 30654  011CC0  0060  F0AB  FFE3   	movff	btemp,plusw1
 30655  011CC6                     l15712:
 30656                           
 30657                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 30658                           ;stkvar	_i @ sp[(-56)+36]
 30659  011CC6  0EEC               	movlw	-20
 30660  011CC8  6AE3               	clrf	plusw1,c
 30661  011CCA  0EED               	movlw	-19
 30662  011CCC  6AE3               	clrf	plusw1,c
 30663                           
 30664                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 30665                           ;stkvar	_g @ sp[(-56)+16]
 30666  011CCE  0ED8               	movlw	-40
 30667  011CD0  006F FF8C  F032    	movff	plusw1,btemp+8
 30668  011CD6  0ED9               	movlw	-39
 30669  011CD8  006F FF8C  F033    	movff	plusw1,btemp+9
 30670  011CDE  0EDA               	movlw	-38
 30671  011CE0  006F FF8C  F034    	movff	plusw1,btemp+10
 30672  011CE6  0EDB               	movlw	-37
 30673  011CE8  006F FF8C  F035    	movff	plusw1,btemp+11
 30674                           
 30675                           ;stkvar	_h @ sp[(-56)+24]
 30676  011CEE  0EE0               	movlw	-32
 30677  011CF0  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 30678  011CF6  0EE1               	movlw	-31
 30679  011CF8  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 30680  011CFE  0EE2               	movlw	-30
 30681  011D00  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30682  011D06  0EE3               	movlw	-29
 30683  011D08  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30684                           
 30685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 30686                           ;stkvar	_u @ sp[(-56)+12]
 30687  011D0E  0ED4               	movlw	-44
 30688  011D10  006F FF8C  F032    	movff	plusw1,btemp+8
 30689  011D16  0ED5               	movlw	-43
 30690  011D18  006F FF8C  F033    	movff	plusw1,btemp+9
 30691  011D1E  0ED6               	movlw	-42
 30692  011D20  006F FF8C  F034    	movff	plusw1,btemp+10
 30693  011D26  0ED7               	movlw	-41
 30694  011D28  006F FF8C  F035    	movff	plusw1,btemp+11
 30695                           
 30696                           ;stkvar	_ou @ sp[(-56)+28]
 30697  011D2E  0EE4               	movlw	-28
 30698  011D30  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 30699  011D36  0EE5               	movlw	-27
 30700  011D38  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 30701  011D3E  0EE6               	movlw	-26
 30702  011D40  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30703  011D46  0EE7               	movlw	-25
 30704  011D48  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30705                           
 30706                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 30707  011D4E  D0D6               	goto	l15728
 30708  011D50                     l15718:
 30709                           
 30710                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 30711                           ;stkvar	_u @ sp[(-56)+12]
 30712  011D50  0ED4               	movlw	-44
 30713  011D52  006F FF8F FFE6     	movff	plusw1,postinc1
 30714  011D58  006F FF8F FFE6     	movff	plusw1,postinc1
 30715  011D5E  006F FF8F FFE6     	movff	plusw1,postinc1
 30716  011D64  006F FF8F FFE6     	movff	plusw1,postinc1
 30717                           
 30718                           ;stkvar	_h @ sp[(-60)+24]
 30719  011D6A  0EDC               	movlw	-36
 30720  011D6C  006F FF8F FFE6     	movff	plusw1,postinc1
 30721  011D72  006F FF8F FFE6     	movff	plusw1,postinc1
 30722  011D78  006F FF8F FFE6     	movff	plusw1,postinc1
 30723  011D7E  006F FF8F FFE6     	movff	plusw1,postinc1
 30724  011D84  ECDE  F0BD         	call	___fldiv	;wreg free
 30725  011D88  0060  F0AB  FFE6   	movff	btemp,postinc1
 30726  011D8E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 30727  011D94  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 30728  011D9A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 30729  011DA0  ECC2  F0CF         	call	_floorf	;wreg free
 30730                           
 30731                           ;stkvar	_l @ sp[(-56)+20]
 30732  011DA4  0EDC               	movlw	-36
 30733  011DA6  0060  F0AB  FFE3   	movff	btemp,plusw1
 30734  011DAC  0EDD               	movlw	-35
 30735  011DAE  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30736  011DB4  0EDE               	movlw	-34
 30737  011DB6  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 30738  011DBC  0EDF               	movlw	-33
 30739  011DBE  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 30740                           
 30741                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 30742                           ;stkvar	_l @ sp[(-56)+20]
 30743  011DC4  0EDC               	movlw	-36
 30744  011DC6  006F FF8F FFE6     	movff	plusw1,postinc1
 30745  011DCC  006F FF8F FFE6     	movff	plusw1,postinc1
 30746  011DD2  006F FF8F FFE6     	movff	plusw1,postinc1
 30747  011DD8  006F FF8F FFE6     	movff	plusw1,postinc1
 30748  011DDE  ECDD  F0F1         	call	___fltol	;wreg free
 30749  011DE2  0060  F0A8  F034   	movff	btemp,btemp+10
 30750  011DE8  0060  F0AC  F035   	movff	btemp+1,btemp+11
 30751                           
 30752                           ;stkvar	_d @ sp[(-56)+44]
 30753  011DEE  0EF4               	movlw	-12
 30754  011DF0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30755  011DF6  0EF5               	movlw	-11
 30756  011DF8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30757                           
 30758                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 30759                           ;stkvar	_u @ sp[(-56)+12]
 30760  011DFE  0ED4               	movlw	-44
 30761  011E00  006F FF8F FFE6     	movff	plusw1,postinc1
 30762  011E06  006F FF8F FFE6     	movff	plusw1,postinc1
 30763  011E0C  006F FF8F FFE6     	movff	plusw1,postinc1
 30764  011E12  006F FF8F FFE6     	movff	plusw1,postinc1
 30765                           
 30766                           ;stkvar	_l @ sp[(-60)+20]
 30767  011E18  0ED8               	movlw	-40
 30768  011E1A  006F FF8F FFE6     	movff	plusw1,postinc1
 30769  011E20  006F FF8F FFE6     	movff	plusw1,postinc1
 30770  011E26  006F FF8F FFE6     	movff	plusw1,postinc1
 30771  011E2C  006F FF8F FFE6     	movff	plusw1,postinc1
 30772  011E32  EC8D  F0B2         	call	___flmul	;wreg free
 30773  011E36  0060  F0AB  FFE6   	movff	btemp,postinc1
 30774  011E3C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 30775  011E42  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 30776  011E48  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 30777                           
 30778                           ;stkvar	_h @ sp[(-60)+24]
 30779  011E4E  0EDC               	movlw	-36
 30780  011E50  006F FF8F FFE6     	movff	plusw1,postinc1
 30781  011E56  006F FF8F FFE6     	movff	plusw1,postinc1
 30782  011E5C  006F FF8F FFE6     	movff	plusw1,postinc1
 30783  011E62  006F FF8F FFE6     	movff	plusw1,postinc1
 30784  011E68  EC7C  F00D         	call	___flsub	;wreg free
 30785                           
 30786                           ;stkvar	_h @ sp[(-56)+24]
 30787  011E6C  0EE0               	movlw	-32
 30788  011E6E  0060  F0AB  FFE3   	movff	btemp,plusw1
 30789  011E74  0EE1               	movlw	-31
 30790  011E76  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30791  011E7C  0EE2               	movlw	-30
 30792  011E7E  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 30793  011E84  0EE3               	movlw	-29
 30794  011E86  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 30795                           
 30796                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 30797  011E8C  0E00               	movlw	0
 30798  011E8E  6EE6               	movwf	postinc1,c
 30799  011E90  0E00               	movlw	0
 30800  011E92  6EE6               	movwf	postinc1,c
 30801  011E94  0E20               	movlw	32
 30802  011E96  6EE6               	movwf	postinc1,c
 30803  011E98  0E41               	movlw	65
 30804  011E9A  6EE6               	movwf	postinc1,c
 30805                           
 30806                           ;stkvar	_u @ sp[(-60)+12]
 30807  011E9C  0ED0               	movlw	-48
 30808  011E9E  006F FF8F FFE6     	movff	plusw1,postinc1
 30809  011EA4  006F FF8F FFE6     	movff	plusw1,postinc1
 30810  011EAA  006F FF8F FFE6     	movff	plusw1,postinc1
 30811  011EB0  006F FF8F FFE6     	movff	plusw1,postinc1
 30812  011EB6  ECDE  F0BD         	call	___fldiv	;wreg free
 30813                           
 30814                           ;stkvar	_u @ sp[(-56)+12]
 30815  011EBA  0ED4               	movlw	-44
 30816  011EBC  0060  F0AB  FFE3   	movff	btemp,plusw1
 30817  011EC2  0ED5               	movlw	-43
 30818  011EC4  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30819  011ECA  0ED6               	movlw	-42
 30820  011ECC  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 30821  011ED2  0ED7               	movlw	-41
 30822  011ED4  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 30823                           
 30824                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 30825                           ;stkvar	_i @ sp[(-56)+36]
 30826  011EDA  0EEC               	movlw	-20
 30827  011EDC  50E3               	movf	plusw1,w,c
 30828  011EDE  0F01               	addlw	1
 30829  011EE0  6E2A               	movwf	btemp^0,c
 30830  011EE2  0EEC               	movlw	-20
 30831  011EE4  0060  F0AB  FFE3   	movff	btemp,plusw1
 30832  011EEA  6A2A               	clrf	btemp^0,c
 30833  011EEC  0EED               	movlw	-19
 30834  011EEE  50E3               	movf	plusw1,w,c
 30835  011EF0  202A               	addwfc	btemp^0,w,c
 30836  011EF2  6E2A               	movwf	btemp^0,c
 30837  011EF4  0EED               	movlw	-19
 30838  011EF6  0060  F0AB  FFE3   	movff	btemp,plusw1
 30839  011EFC                     l15728:
 30840                           
 30841                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 30842                           ;stkvar	_m @ sp[(-56)+48]
 30843                           ;stkvar	_i @ sp[(-56)+36]
 30844  011EFC  50E1               	movf	fsr1l,w,c
 30845  011EFE  0FEC               	addlw	-20
 30846  011F00  6ED9               	movwf	fsr2l,c
 30847  011F02  50E2               	movf	fsr1h,w,c
 30848  011F04  6EDA               	movwf	fsr2h,c
 30849  011F06  0EFF               	movlw	255
 30850  011F08  22DA               	addwfc	fsr2h,f,c
 30851  011F0A  0EF8               	movlw	-8
 30852  011F0C  50E3               	movf	plusw1,w,c
 30853  011F0E  5CDE               	subwf	postinc2,w,c
 30854  011F10  50DE               	movf	postinc2,w,c
 30855  011F12  0A80               	xorlw	128
 30856  011F14  6E2A               	movwf	btemp^0,c
 30857  011F16  0EF9               	movlw	-7
 30858  011F18  50E3               	movf	plusw1,w,c
 30859  011F1A  0A80               	xorlw	128
 30860  011F1C  582A               	subwfb	btemp^0,w,c
 30861  011F1E  A0D8               	btfss	status,0,c
 30862  011F20  D717               	goto	l15718
 30863                           
 30864                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 30865  011F22  0E00               	movlw	0
 30866  011F24  6EE6               	movwf	postinc1,c
 30867  011F26  0E00               	movlw	0
 30868  011F28  6EE6               	movwf	postinc1,c
 30869  011F2A  0EA0               	movlw	160
 30870  011F2C  6EE6               	movwf	postinc1,c
 30871  011F2E  0E40               	movlw	64
 30872  011F30  6EE6               	movwf	postinc1,c
 30873                           
 30874                           ;stkvar	_u @ sp[(-60)+12]
 30875  011F32  0ED0               	movlw	-48
 30876  011F34  006F FF8F FFE6     	movff	plusw1,postinc1
 30877  011F3A  006F FF8F FFE6     	movff	plusw1,postinc1
 30878  011F40  006F FF8F FFE6     	movff	plusw1,postinc1
 30879  011F46  006F FF8F FFE6     	movff	plusw1,postinc1
 30880  011F4C  EC8D  F0B2         	call	___flmul	;wreg free
 30881                           
 30882                           ;stkvar	_l @ sp[(-56)+20]
 30883  011F50  0EDC               	movlw	-36
 30884  011F52  0060  F0AB  FFE3   	movff	btemp,plusw1
 30885  011F58  0EDD               	movlw	-35
 30886  011F5A  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30887  011F60  0EDE               	movlw	-34
 30888  011F62  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 30889  011F68  0EDF               	movlw	-33
 30890  011F6A  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 30891                           
 30892                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 30893                           ;stkvar	_l @ sp[(-56)+20]
 30894  011F70  0EDC               	movlw	-36
 30895  011F72  006F FF8F FFE6     	movff	plusw1,postinc1
 30896  011F78  006F FF8F FFE6     	movff	plusw1,postinc1
 30897  011F7E  006F FF8F FFE6     	movff	plusw1,postinc1
 30898  011F84  006F FF8F FFE6     	movff	plusw1,postinc1
 30899                           
 30900                           ;stkvar	_h @ sp[(-60)+24]
 30901  011F8A  0EDC               	movlw	-36
 30902  011F8C  006F FF8F FFE6     	movff	plusw1,postinc1
 30903  011F92  006F FF8F FFE6     	movff	plusw1,postinc1
 30904  011F98  006F FF8F FFE6     	movff	plusw1,postinc1
 30905  011F9E  006F FF8F FFE6     	movff	plusw1,postinc1
 30906  011FA4  EC49  F0F3         	call	___flge	;wreg free
 30907  011FA8  A02A               	btfss	btemp& (0+255),0,c
 30908  011FAA  D021               	goto	u14980
 30909                           
 30910                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 30911                           ;stkvar	_l @ sp[(-56)+20]
 30912                           
 30913                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 30914                           
 30915                           ;stkvar	_l @ sp[(-56)+20]
 30916                           
 30917                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 30918  011FAC  0EDC               	movlw	-36
 30919  011FAE  006F FF8F FFE6     	movff	plusw1,postinc1
 30920  011FB4  006F FF8F FFE6     	movff	plusw1,postinc1
 30921  011FBA  006F FF8F FFE6     	movff	plusw1,postinc1
 30922  011FC0  006F FF8F FFE6     	movff	plusw1,postinc1
 30923                           
 30924                           ;stkvar	_h @ sp[(-60)+24]
 30925  011FC6  0EDC               	movlw	-36
 30926  011FC8  006F FF8F FFE6     	movff	plusw1,postinc1
 30927  011FCE  006F FF8F FFE6     	movff	plusw1,postinc1
 30928  011FD4  006F FF8F FFE6     	movff	plusw1,postinc1
 30929  011FDA  006F FF8F FFE6     	movff	plusw1,postinc1
 30930  011FE0  EC2C  F001         	call	___fleq	;wreg free
 30931  011FE4  A02A               	btfss	btemp& (0+255),0,c
 30932  011FE6  D01B               	goto	l15742
 30933                           
 30934                           ;stkvar	_d @ sp[(-56)+44]
 30935  011FE8  0EF4               	movlw	-12
 30936  011FEA  B0E3               	btfsc	plusw1,0,c
 30937  011FEC  D018               	goto	l15742
 30938  011FEE                     u14980:
 30939                           
 30940                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 30941  011FEE  0E00               	movlw	0
 30942  011FF0  6E32               	movwf	(btemp+8)^0,c
 30943  011FF2  0E00               	movlw	0
 30944  011FF4  6E33               	movwf	(btemp+9)^0,c
 30945  011FF6  0E00               	movlw	0
 30946  011FF8  6E34               	movwf	(btemp+10)^0,c
 30947  011FFA  0E00               	movlw	0
 30948  011FFC  6E35               	movwf	(btemp+11)^0,c
 30949                           
 30950                           ;stkvar	_l @ sp[(-56)+20]
 30951  011FFE  0EDC               	movlw	-36
 30952  012000  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 30953  012006  0EDD               	movlw	-35
 30954  012008  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 30955  01200E  0EDE               	movlw	-34
 30956  012010  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30957  012016  0EDF               	movlw	-33
 30958  012018  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30959  01201E                     l15742:
 30960                           
 30961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 30962                           ;stkvar	_l @ sp[(-56)+20]
 30963  01201E  0EDC               	movlw	-36
 30964  012020  006F FF8F FFE6     	movff	plusw1,postinc1
 30965  012026  006F FF8F FFE6     	movff	plusw1,postinc1
 30966  01202C  006F FF8F FFE6     	movff	plusw1,postinc1
 30967  012032  006F FF8F FFE6     	movff	plusw1,postinc1
 30968                           
 30969                           ;stkvar	_g @ sp[(-60)+16]
 30970  012038  0ED4               	movlw	-44
 30971  01203A  006F FF8F FFE6     	movff	plusw1,postinc1
 30972  012040  006F FF8F FFE6     	movff	plusw1,postinc1
 30973  012046  006F FF8F FFE6     	movff	plusw1,postinc1
 30974  01204C  006F FF8F FFE6     	movff	plusw1,postinc1
 30975  012052  ECA2  F0B6         	call	___fladd	;wreg free
 30976                           
 30977                           ;stkvar	_h @ sp[(-56)+24]
 30978  012056  0EE0               	movlw	-32
 30979  012058  0060  F0AB  FFE3   	movff	btemp,plusw1
 30980  01205E  0EE1               	movlw	-31
 30981  012060  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30982  012066  0EE2               	movlw	-30
 30983  012068  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 30984  01206E  0EE3               	movlw	-29
 30985  012070  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 30986                           
 30987                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 30988                           ;stkvar	_ou @ sp[(-56)+28]
 30989  012076  0EE4               	movlw	-28
 30990  012078  006F FF8C  F032    	movff	plusw1,btemp+8
 30991  01207E  0EE5               	movlw	-27
 30992  012080  006F FF8C  F033    	movff	plusw1,btemp+9
 30993  012086  0EE6               	movlw	-26
 30994  012088  006F FF8C  F034    	movff	plusw1,btemp+10
 30995  01208E  0EE7               	movlw	-25
 30996  012090  006F FF8C  F035    	movff	plusw1,btemp+11
 30997                           
 30998                           ;stkvar	_u @ sp[(-56)+12]
 30999  012096  0ED4               	movlw	-44
 31000  012098  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 31001  01209E  0ED5               	movlw	-43
 31002  0120A0  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 31003  0120A6  0ED6               	movlw	-42
 31004  0120A8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31005  0120AE  0ED7               	movlw	-41
 31006  0120B0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31007                           
 31008                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 31009                           ;stkvar	_nmode @ sp[(-56)+55]
 31010  0120B6  0EFF               	movlw	-1
 31011  0120B8  006F FF8C  F02A    	movff	plusw1,btemp
 31012  0120BE  0E65               	movlw	101
 31013  0120C0  182A               	xorwf	btemp^0,w,c
 31014  0120C2  B4D8               	btfsc	status,2,c
 31015  0120C4  D011               	goto	l15750
 31016                           
 31017                           ;stkvar	_e @ sp[(-56)+34]
 31018                           ;stkvar	_ne @ sp[(-56)+46]
 31019  0120C6  0EEA               	movlw	-22
 31020  0120C8  006F FF8C  F02A    	movff	plusw1,btemp
 31021  0120CE  0EF6               	movlw	-10
 31022  0120D0  0060  F0AB  FFE3   	movff	btemp,plusw1
 31023  0120D6  0EEB               	movlw	-21
 31024  0120D8  006F FF8C  F02A    	movff	plusw1,btemp
 31025  0120DE  0EF7               	movlw	-9
 31026  0120E0  0060  F0AB  FFE3   	movff	btemp,plusw1
 31027  0120E6  D004               	goto	l2565
 31028  0120E8                     l15750:
 31029                           
 31030                           ;stkvar	_ne @ sp[(-56)+46]
 31031  0120E8  0EF6               	movlw	-10
 31032  0120EA  6AE3               	clrf	plusw1,c
 31033  0120EC  0EF7               	movlw	-9
 31034  0120EE  6AE3               	clrf	plusw1,c
 31035  0120F0                     l2565:
 31036                           
 31037                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 31038                           ;stkvar	_pp @ sp[(-56)+50]
 31039  0120F0  0EFA               	movlw	-6
 31040  0120F2  6AE3               	clrf	plusw1,c
 31041  0120F4  0EFB               	movlw	-5
 31042  0120F6  6AE3               	clrf	plusw1,c
 31043                           
 31044                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 31045                           ;stkvar	_t @ sp[(-56)+52]
 31046  0120F8  0EFC               	movlw	-4
 31047  0120FA  6AE3               	clrf	plusw1,c
 31048  0120FC  0EFD               	movlw	-3
 31049  0120FE  6AE3               	clrf	plusw1,c
 31050                           
 31051                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 31052                           ;stkvar	_i @ sp[(-56)+36]
 31053  012100  0EEC               	movlw	-20
 31054  012102  6AE3               	clrf	plusw1,c
 31055  012104  0EED               	movlw	-19
 31056  012106  6AE3               	clrf	plusw1,c
 31057                           
 31058                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 31059  012108  D1B7               	goto	l15802
 31060  01210A                     l15752:
 31061                           
 31062                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 31063                           ;stkvar	_u @ sp[(-56)+12]
 31064  01210A  0ED4               	movlw	-44
 31065  01210C  006F FF8F FFE6     	movff	plusw1,postinc1
 31066  012112  006F FF8F FFE6     	movff	plusw1,postinc1
 31067  012118  006F FF8F FFE6     	movff	plusw1,postinc1
 31068  01211E  006F FF8F FFE6     	movff	plusw1,postinc1
 31069                           
 31070                           ;stkvar	_h @ sp[(-60)+24]
 31071  012124  0EDC               	movlw	-36
 31072  012126  006F FF8F FFE6     	movff	plusw1,postinc1
 31073  01212C  006F FF8F FFE6     	movff	plusw1,postinc1
 31074  012132  006F FF8F FFE6     	movff	plusw1,postinc1
 31075  012138  006F FF8F FFE6     	movff	plusw1,postinc1
 31076  01213E  ECDE  F0BD         	call	___fldiv	;wreg free
 31077  012142  0060  F0AB  FFE6   	movff	btemp,postinc1
 31078  012148  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 31079  01214E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 31080  012154  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 31081  01215A  ECC2  F0CF         	call	_floorf	;wreg free
 31082                           
 31083                           ;stkvar	_l @ sp[(-56)+20]
 31084  01215E  0EDC               	movlw	-36
 31085  012160  0060  F0AB  FFE3   	movff	btemp,plusw1
 31086  012166  0EDD               	movlw	-35
 31087  012168  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31088  01216E  0EDE               	movlw	-34
 31089  012170  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31090  012176  0EDF               	movlw	-33
 31091  012178  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31092                           
 31093                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 31094                           ;stkvar	_l @ sp[(-56)+20]
 31095  01217E  0EDC               	movlw	-36
 31096  012180  006F FF8F FFE6     	movff	plusw1,postinc1
 31097  012186  006F FF8F FFE6     	movff	plusw1,postinc1
 31098  01218C  006F FF8F FFE6     	movff	plusw1,postinc1
 31099  012192  006F FF8F FFE6     	movff	plusw1,postinc1
 31100  012198  ECDD  F0F1         	call	___fltol	;wreg free
 31101  01219C  0060  F0A8  F034   	movff	btemp,btemp+10
 31102  0121A2  0060  F0AC  F035   	movff	btemp+1,btemp+11
 31103                           
 31104                           ;stkvar	_d @ sp[(-56)+44]
 31105  0121A8  0EF4               	movlw	-12
 31106  0121AA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31107  0121B0  0EF5               	movlw	-11
 31108  0121B2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31109                           
 31110                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 31111  0121B8  B84E               	btfsc	_flags^0,4,c
 31112  0121BA  D026               	goto	l15766
 31113                           
 31114                           ;stkvar	_d @ sp[(-56)+44]
 31115  0121BC  0EF4               	movlw	-12
 31116  0121BE  006F FF8C  F02A    	movff	plusw1,btemp
 31117  0121C4  0EF5               	movlw	-11
 31118  0121C6  50E3               	movf	plusw1,w,c
 31119  0121C8  102A               	iorwf	btemp^0,w,c
 31120  0121CA  A4D8               	btfss	status,2,c
 31121  0121CC  D01D               	goto	l15766
 31122                           
 31123                           ;stkvar	_mode @ sp[(-56)+54]
 31124  0121CE  0EFE               	movlw	-2
 31125  0121D0  006F FF8C  F02A    	movff	plusw1,btemp
 31126  0121D6  0E67               	movlw	103
 31127  0121D8  182A               	xorwf	btemp^0,w,c
 31128  0121DA  A4D8               	btfss	status,2,c
 31129  0121DC  D015               	goto	l15766
 31130                           
 31131                           ;stkvar	_ne @ sp[(-56)+46]
 31132  0121DE  0EF7               	movlw	-9
 31133  0121E0  AEE3               	btfss	plusw1,7,c
 31134  0121E2  D012               	goto	l15766
 31135                           
 31136                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 31137                           ;stkvar	_t @ sp[(-56)+52]
 31138  0121E4  0EFC               	movlw	-4
 31139  0121E6  50E3               	movf	plusw1,w,c
 31140  0121E8  0F01               	addlw	1
 31141  0121EA  6E2A               	movwf	btemp^0,c
 31142  0121EC  0EFC               	movlw	-4
 31143  0121EE  0060  F0AB  FFE3   	movff	btemp,plusw1
 31144  0121F4  6A2A               	clrf	btemp^0,c
 31145  0121F6  0EFD               	movlw	-3
 31146  0121F8  50E3               	movf	plusw1,w,c
 31147  0121FA  202A               	addwfc	btemp^0,w,c
 31148  0121FC  6E2A               	movwf	btemp^0,c
 31149  0121FE  0EFD               	movlw	-3
 31150  012200  0060  F0AB  FFE3   	movff	btemp,plusw1
 31151                           
 31152                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 31153  012206  D0AF               	goto	l15794
 31154  012208                     l15766:
 31155                           
 31156                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 31157                           ;stkvar	_pp @ sp[(-56)+50]
 31158  012208  0EFA               	movlw	-6
 31159  01220A  006F FF8C  F02A    	movff	plusw1,btemp
 31160  012210  0EFB               	movlw	-5
 31161  012212  50E3               	movf	plusw1,w,c
 31162  012214  102A               	iorwf	btemp^0,w,c
 31163  012216  A4D8               	btfss	status,2,c
 31164  012218  D070               	goto	l15786
 31165                           
 31166                           ;stkvar	_ne @ sp[(-56)+46]
 31167  01221A  0EF7               	movlw	-9
 31168  01221C  AEE3               	btfss	plusw1,7,c
 31169  01221E  D06D               	goto	l15786
 31170                           
 31171                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 31172                           ;stkvar	_n @ sp[(-56)+32]
 31173  012220  0EE8               	movlw	-24
 31174  012222  006F FF8C  F034    	movff	plusw1,btemp+10
 31175  012228  0EE9               	movlw	-23
 31176  01222A  006F FF8C  F035    	movff	plusw1,btemp+11
 31177  012230  0E54               	movlw	low _dbuf
 31178  012232  2434               	addwf	(btemp+10)^0,w,c
 31179  012234  6ED9               	movwf	fsr2l,c
 31180  012236  0E03               	movlw	high _dbuf
 31181  012238  2035               	addwfc	(btemp+11)^0,w,c
 31182  01223A  6EDA               	movwf	fsr2h,c
 31183  01223C  0E2E               	movlw	46
 31184  01223E  6EDF               	movwf	indf2,c
 31185                           
 31186                           ;stkvar	_n @ sp[(-56)+32]
 31187  012240  0EE8               	movlw	-24
 31188  012242  50E3               	movf	plusw1,w,c
 31189  012244  0F01               	addlw	1
 31190  012246  6E2A               	movwf	btemp^0,c
 31191  012248  0EE8               	movlw	-24
 31192  01224A  0060  F0AB  FFE3   	movff	btemp,plusw1
 31193  012250  6A2A               	clrf	btemp^0,c
 31194  012252  0EE9               	movlw	-23
 31195  012254  50E3               	movf	plusw1,w,c
 31196  012256  202A               	addwfc	btemp^0,w,c
 31197  012258  6E2A               	movwf	btemp^0,c
 31198  01225A  0EE9               	movlw	-23
 31199  01225C  0060  F0AB  FFE3   	movff	btemp,plusw1
 31200                           
 31201                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 31202                           ;stkvar	_w @ sp[(-56)+38]
 31203  012262  50E1               	movf	fsr1l,w,c
 31204  012264  0FEE               	addlw	-18
 31205  012266  6ED9               	movwf	fsr2l,c
 31206  012268  50E2               	movf	fsr1h,w,c
 31207  01226A  6EDA               	movwf	fsr2h,c
 31208  01226C  0EFF               	movlw	255
 31209  01226E  22DA               	addwfc	fsr2h,f,c
 31210  012270  06DE               	decf	postinc2,f,c
 31211  012272  0E00               	movlw	0
 31212  012274  5ADD               	subwfb	postdec2,f,c
 31213                           
 31214                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 31215  012276  0E01               	movlw	1
 31216  012278  6E34               	movwf	(btemp+10)^0,c
 31217  01227A  0E00               	movlw	0
 31218  01227C  6E35               	movwf	(btemp+11)^0,c
 31219                           
 31220                           ;stkvar	_pp @ sp[(-56)+50]
 31221  01227E  0EFA               	movlw	-6
 31222  012280  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31223  012286  0EFB               	movlw	-5
 31224  012288  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31225  01228E  D035               	goto	l15786
 31226  012290                     l15778:
 31227                           
 31228                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 31229                           ;stkvar	_n @ sp[(-56)+32]
 31230  012290  0EE8               	movlw	-24
 31231  012292  006F FF8C  F034    	movff	plusw1,btemp+10
 31232  012298  0EE9               	movlw	-23
 31233  01229A  006F FF8C  F035    	movff	plusw1,btemp+11
 31234  0122A0  0E54               	movlw	low _dbuf
 31235  0122A2  2434               	addwf	(btemp+10)^0,w,c
 31236  0122A4  6ED9               	movwf	fsr2l,c
 31237  0122A6  0E03               	movlw	high _dbuf
 31238  0122A8  2035               	addwfc	(btemp+11)^0,w,c
 31239  0122AA  6EDA               	movwf	fsr2h,c
 31240  0122AC  0E30               	movlw	48
 31241  0122AE  6EDF               	movwf	indf2,c
 31242                           
 31243                           ;stkvar	_n @ sp[(-56)+32]
 31244  0122B0  0EE8               	movlw	-24
 31245  0122B2  50E3               	movf	plusw1,w,c
 31246  0122B4  0F01               	addlw	1
 31247  0122B6  6E2A               	movwf	btemp^0,c
 31248  0122B8  0EE8               	movlw	-24
 31249  0122BA  0060  F0AB  FFE3   	movff	btemp,plusw1
 31250  0122C0  6A2A               	clrf	btemp^0,c
 31251  0122C2  0EE9               	movlw	-23
 31252  0122C4  50E3               	movf	plusw1,w,c
 31253  0122C6  202A               	addwfc	btemp^0,w,c
 31254  0122C8  6E2A               	movwf	btemp^0,c
 31255  0122CA  0EE9               	movlw	-23
 31256  0122CC  0060  F0AB  FFE3   	movff	btemp,plusw1
 31257                           
 31258                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 31259                           ;stkvar	_w @ sp[(-56)+38]
 31260  0122D2  50E1               	movf	fsr1l,w,c
 31261  0122D4  0FEE               	addlw	-18
 31262  0122D6  6ED9               	movwf	fsr2l,c
 31263  0122D8  50E2               	movf	fsr1h,w,c
 31264  0122DA  6EDA               	movwf	fsr2h,c
 31265  0122DC  0EFF               	movlw	255
 31266  0122DE  22DA               	addwfc	fsr2h,f,c
 31267  0122E0  06DE               	decf	postinc2,f,c
 31268  0122E2  0E00               	movlw	0
 31269  0122E4  5ADD               	subwfb	postdec2,f,c
 31270                           
 31271                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 31272                           ;stkvar	_t @ sp[(-56)+52]
 31273  0122E6  50E1               	movf	fsr1l,w,c
 31274  0122E8  0FFC               	addlw	-4
 31275  0122EA  6ED9               	movwf	fsr2l,c
 31276  0122EC  50E2               	movf	fsr1h,w,c
 31277  0122EE  6EDA               	movwf	fsr2h,c
 31278  0122F0  0EFF               	movlw	255
 31279  0122F2  22DA               	addwfc	fsr2h,f,c
 31280  0122F4  06DE               	decf	postinc2,f,c
 31281  0122F6  0E00               	movlw	0
 31282  0122F8  5ADD               	subwfb	postdec2,f,c
 31283  0122FA                     l15786:
 31284                           
 31285                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 31286                           ;stkvar	_t @ sp[(-56)+52]
 31287  0122FA  0EFC               	movlw	-4
 31288  0122FC  006F FF8C  F02A    	movff	plusw1,btemp
 31289  012302  0EFD               	movlw	-3
 31290  012304  50E3               	movf	plusw1,w,c
 31291  012306  102A               	iorwf	btemp^0,w,c
 31292  012308  A4D8               	btfss	status,2,c
 31293  01230A  D7C2               	goto	l15778
 31294                           
 31295                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 31296                           ;stkvar	_n @ sp[(-56)+32]
 31297  01230C  0EE8               	movlw	-24
 31298  01230E  006F FF8C  F034    	movff	plusw1,btemp+10
 31299  012314  0EE9               	movlw	-23
 31300  012316  006F FF8C  F035    	movff	plusw1,btemp+11
 31301  01231C  0E54               	movlw	low _dbuf
 31302  01231E  2434               	addwf	(btemp+10)^0,w,c
 31303  012320  6ED9               	movwf	fsr2l,c
 31304  012322  0E03               	movlw	high _dbuf
 31305  012324  2035               	addwfc	(btemp+11)^0,w,c
 31306  012326  6EDA               	movwf	fsr2h,c
 31307                           
 31308                           ;stkvar	_d @ sp[(-56)+44]
 31309  012328  0EF4               	movlw	-12
 31310  01232A  50E3               	movf	plusw1,w,c
 31311  01232C  0F30               	addlw	48
 31312  01232E  6EDF               	movwf	indf2,c
 31313                           
 31314                           ;stkvar	_n @ sp[(-56)+32]
 31315  012330  0EE8               	movlw	-24
 31316  012332  50E3               	movf	plusw1,w,c
 31317  012334  0F01               	addlw	1
 31318  012336  6E2A               	movwf	btemp^0,c
 31319  012338  0EE8               	movlw	-24
 31320  01233A  0060  F0AB  FFE3   	movff	btemp,plusw1
 31321  012340  6A2A               	clrf	btemp^0,c
 31322  012342  0EE9               	movlw	-23
 31323  012344  50E3               	movf	plusw1,w,c
 31324  012346  202A               	addwfc	btemp^0,w,c
 31325  012348  6E2A               	movwf	btemp^0,c
 31326  01234A  0EE9               	movlw	-23
 31327  01234C  0060  F0AB  FFE3   	movff	btemp,plusw1
 31328                           
 31329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 31330                           ;stkvar	_w @ sp[(-56)+38]
 31331  012352  50E1               	movf	fsr1l,w,c
 31332  012354  0FEE               	addlw	-18
 31333  012356  6ED9               	movwf	fsr2l,c
 31334  012358  50E2               	movf	fsr1h,w,c
 31335  01235A  6EDA               	movwf	fsr2h,c
 31336  01235C  0EFF               	movlw	255
 31337  01235E  22DA               	addwfc	fsr2h,f,c
 31338  012360  06DE               	decf	postinc2,f,c
 31339  012362  0E00               	movlw	0
 31340  012364  5ADD               	subwfb	postdec2,f,c
 31341  012366                     l15794:
 31342                           
 31343                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 31344                           ;stkvar	_u @ sp[(-56)+12]
 31345  012366  0ED4               	movlw	-44
 31346  012368  006F FF8F FFE6     	movff	plusw1,postinc1
 31347  01236E  006F FF8F FFE6     	movff	plusw1,postinc1
 31348  012374  006F FF8F FFE6     	movff	plusw1,postinc1
 31349  01237A  006F FF8F FFE6     	movff	plusw1,postinc1
 31350                           
 31351                           ;stkvar	_l @ sp[(-60)+20]
 31352  012380  0ED8               	movlw	-40
 31353  012382  006F FF8F FFE6     	movff	plusw1,postinc1
 31354  012388  006F FF8F FFE6     	movff	plusw1,postinc1
 31355  01238E  006F FF8F FFE6     	movff	plusw1,postinc1
 31356  012394  006F FF8F FFE6     	movff	plusw1,postinc1
 31357  01239A  EC8D  F0B2         	call	___flmul	;wreg free
 31358  01239E  0060  F0AB  FFE6   	movff	btemp,postinc1
 31359  0123A4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 31360  0123AA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 31361  0123B0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 31362                           
 31363                           ;stkvar	_h @ sp[(-60)+24]
 31364  0123B6  0EDC               	movlw	-36
 31365  0123B8  006F FF8F FFE6     	movff	plusw1,postinc1
 31366  0123BE  006F FF8F FFE6     	movff	plusw1,postinc1
 31367  0123C4  006F FF8F FFE6     	movff	plusw1,postinc1
 31368  0123CA  006F FF8F FFE6     	movff	plusw1,postinc1
 31369  0123D0  EC7C  F00D         	call	___flsub	;wreg free
 31370                           
 31371                           ;stkvar	_h @ sp[(-56)+24]
 31372  0123D4  0EE0               	movlw	-32
 31373  0123D6  0060  F0AB  FFE3   	movff	btemp,plusw1
 31374  0123DC  0EE1               	movlw	-31
 31375  0123DE  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31376  0123E4  0EE2               	movlw	-30
 31377  0123E6  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31378  0123EC  0EE3               	movlw	-29
 31379  0123EE  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31380                           
 31381                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 31382  0123F4  0E00               	movlw	0
 31383  0123F6  6EE6               	movwf	postinc1,c
 31384  0123F8  0E00               	movlw	0
 31385  0123FA  6EE6               	movwf	postinc1,c
 31386  0123FC  0E20               	movlw	32
 31387  0123FE  6EE6               	movwf	postinc1,c
 31388  012400  0E41               	movlw	65
 31389  012402  6EE6               	movwf	postinc1,c
 31390                           
 31391                           ;stkvar	_u @ sp[(-60)+12]
 31392  012404  0ED0               	movlw	-48
 31393  012406  006F FF8F FFE6     	movff	plusw1,postinc1
 31394  01240C  006F FF8F FFE6     	movff	plusw1,postinc1
 31395  012412  006F FF8F FFE6     	movff	plusw1,postinc1
 31396  012418  006F FF8F FFE6     	movff	plusw1,postinc1
 31397  01241E  ECDE  F0BD         	call	___fldiv	;wreg free
 31398                           
 31399                           ;stkvar	_u @ sp[(-56)+12]
 31400  012422  0ED4               	movlw	-44
 31401  012424  0060  F0AB  FFE3   	movff	btemp,plusw1
 31402  01242A  0ED5               	movlw	-43
 31403  01242C  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31404  012432  0ED6               	movlw	-42
 31405  012434  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31406  01243A  0ED7               	movlw	-41
 31407  01243C  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31408                           
 31409                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 31410                           ;stkvar	_ne @ sp[(-56)+46]
 31411  012442  50E1               	movf	fsr1l,w,c
 31412  012444  0FF6               	addlw	-10
 31413  012446  6ED9               	movwf	fsr2l,c
 31414  012448  50E2               	movf	fsr1h,w,c
 31415  01244A  6EDA               	movwf	fsr2h,c
 31416  01244C  0EFF               	movlw	255
 31417  01244E  22DA               	addwfc	fsr2h,f,c
 31418  012450  06DE               	decf	postinc2,f,c
 31419  012452  0E00               	movlw	0
 31420  012454  5ADD               	subwfb	postdec2,f,c
 31421                           
 31422                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 31423                           ;stkvar	_i @ sp[(-56)+36]
 31424  012456  0EEC               	movlw	-20
 31425  012458  50E3               	movf	plusw1,w,c
 31426  01245A  0F01               	addlw	1
 31427  01245C  6E2A               	movwf	btemp^0,c
 31428  01245E  0EEC               	movlw	-20
 31429  012460  0060  F0AB  FFE3   	movff	btemp,plusw1
 31430  012466  6A2A               	clrf	btemp^0,c
 31431  012468  0EED               	movlw	-19
 31432  01246A  50E3               	movf	plusw1,w,c
 31433  01246C  202A               	addwfc	btemp^0,w,c
 31434  01246E  6E2A               	movwf	btemp^0,c
 31435  012470  0EED               	movlw	-19
 31436  012472  0060  F0AB  FFE3   	movff	btemp,plusw1
 31437  012478                     l15802:
 31438                           
 31439                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 31440                           ;stkvar	_m @ sp[(-56)+48]
 31441                           ;stkvar	_i @ sp[(-56)+36]
 31442  012478  50E1               	movf	fsr1l,w,c
 31443  01247A  0FEC               	addlw	-20
 31444  01247C  6ED9               	movwf	fsr2l,c
 31445  01247E  50E2               	movf	fsr1h,w,c
 31446  012480  6EDA               	movwf	fsr2h,c
 31447  012482  0EFF               	movlw	255
 31448  012484  22DA               	addwfc	fsr2h,f,c
 31449  012486  0EF8               	movlw	-8
 31450  012488  50E3               	movf	plusw1,w,c
 31451  01248A  5CDE               	subwf	postinc2,w,c
 31452  01248C  50DE               	movf	postinc2,w,c
 31453  01248E  0A80               	xorlw	128
 31454  012490  6E2A               	movwf	btemp^0,c
 31455  012492  0EF9               	movlw	-7
 31456  012494  50E3               	movf	plusw1,w,c
 31457  012496  0A80               	xorlw	128
 31458  012498  582A               	subwfb	btemp^0,w,c
 31459  01249A  B0D8               	btfsc	status,0,c
 31460  01249C  D00E               	goto	u15080
 31461                           
 31462                           ;stkvar	_n @ sp[(-56)+32]
 31463  01249E  0EE9               	movlw	-23
 31464  0124A0  BEE3               	btfsc	plusw1,7,c
 31465  0124A2  D633               	goto	l15752
 31466  0124A4  0EE9               	movlw	-23
 31467  0124A6  50E3               	movf	plusw1,w,c
 31468  0124A8  E108               	bnz	u15080
 31469  0124AA  0EE8               	movlw	-24
 31470  0124AC  006F FF8C  F02A    	movff	plusw1,btemp
 31471  0124B2  0E4B               	movlw	75
 31472  0124B4  5E2A               	subwf	btemp^0,f,c
 31473  0124B6  A0D8               	btfss	status,0,c
 31474  0124B8  D628               	goto	l15752
 31475  0124BA                     u15080:
 31476                           
 31477                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 31478                           ;stkvar	_pp @ sp[(-56)+50]
 31479  0124BA  0EFA               	movlw	-6
 31480  0124BC  006F FF8C  F02A    	movff	plusw1,btemp
 31481  0124C2  0EFB               	movlw	-5
 31482  0124C4  50E3               	movf	plusw1,w,c
 31483  0124C6  102A               	iorwf	btemp^0,w,c
 31484  0124C8  B4D8               	btfsc	status,2,c
 31485  0124CA  A84E               	btfss	_flags^0,4,c
 31486  0124CC  D021               	goto	l15814
 31487                           
 31488                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 31489                           ;stkvar	_n @ sp[(-56)+32]
 31490  0124CE  0EE8               	movlw	-24
 31491  0124D0  006F FF8C  F034    	movff	plusw1,btemp+10
 31492  0124D6  0EE9               	movlw	-23
 31493  0124D8  006F FF8C  F035    	movff	plusw1,btemp+11
 31494  0124DE  0E54               	movlw	low _dbuf
 31495  0124E0  2434               	addwf	(btemp+10)^0,w,c
 31496  0124E2  6ED9               	movwf	fsr2l,c
 31497  0124E4  0E03               	movlw	high _dbuf
 31498  0124E6  2035               	addwfc	(btemp+11)^0,w,c
 31499  0124E8  6EDA               	movwf	fsr2h,c
 31500  0124EA  0E2E               	movlw	46
 31501  0124EC  6EDF               	movwf	indf2,c
 31502                           
 31503                           ;stkvar	_n @ sp[(-56)+32]
 31504  0124EE  0EE8               	movlw	-24
 31505  0124F0  50E3               	movf	plusw1,w,c
 31506  0124F2  0F01               	addlw	1
 31507  0124F4  6E2A               	movwf	btemp^0,c
 31508  0124F6  0EE8               	movlw	-24
 31509  0124F8  0060  F0AB  FFE3   	movff	btemp,plusw1
 31510  0124FE  6A2A               	clrf	btemp^0,c
 31511  012500  0EE9               	movlw	-23
 31512  012502  50E3               	movf	plusw1,w,c
 31513  012504  202A               	addwfc	btemp^0,w,c
 31514  012506  6E2A               	movwf	btemp^0,c
 31515  012508  0EE9               	movlw	-23
 31516  01250A  0060  F0AB  FFE3   	movff	btemp,plusw1
 31517  012510                     l15814:
 31518                           
 31519                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 31520                           ;stkvar	_n @ sp[(-56)+32]
 31521  012510  0EE8               	movlw	-24
 31522  012512  006F FF8C  F034    	movff	plusw1,btemp+10
 31523  012518  0EE9               	movlw	-23
 31524  01251A  006F FF8C  F035    	movff	plusw1,btemp+11
 31525  012520  0E54               	movlw	low _dbuf
 31526  012522  2434               	addwf	(btemp+10)^0,w,c
 31527  012524  6ED9               	movwf	fsr2l,c
 31528  012526  0E03               	movlw	high _dbuf
 31529  012528  2035               	addwfc	(btemp+11)^0,w,c
 31530  01252A  6EDA               	movwf	fsr2h,c
 31531  01252C  0E00               	movlw	0
 31532  01252E  6EDF               	movwf	indf2,c
 31533                           
 31534                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 31535                           ;stkvar	_nmode @ sp[(-56)+55]
 31536  012530  0EFF               	movlw	-1
 31537  012532  006F FF8C  F02A    	movff	plusw1,btemp
 31538  012538  0E65               	movlw	101
 31539  01253A  182A               	xorwf	btemp^0,w,c
 31540  01253C  A4D8               	btfss	status,2,c
 31541  01253E  EF01  F08C         	goto	l15618
 31542                           
 31543                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 31544  012542  0E4F               	movlw	79
 31545  012544  6E34               	movwf	(btemp+10)^0,c
 31546  012546  0E00               	movlw	0
 31547  012548  6E35               	movwf	(btemp+11)^0,c
 31548                           
 31549                           ;stkvar	_i @ sp[(-56)+36]
 31550  01254A  0EEC               	movlw	-20
 31551  01254C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31552  012552  0EED               	movlw	-19
 31553  012554  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31554                           
 31555                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 31556                           ;stkvar	_i @ sp[(-56)+36]
 31557  01255A  0EEC               	movlw	-20
 31558  01255C  006F FF8C  F034    	movff	plusw1,btemp+10
 31559  012562  0EED               	movlw	-19
 31560  012564  006F FF8C  F035    	movff	plusw1,btemp+11
 31561  01256A  0E54               	movlw	low _dbuf
 31562  01256C  2434               	addwf	(btemp+10)^0,w,c
 31563  01256E  6ED9               	movwf	fsr2l,c
 31564  012570  0E03               	movlw	high _dbuf
 31565  012572  2035               	addwfc	(btemp+11)^0,w,c
 31566  012574  6EDA               	movwf	fsr2h,c
 31567  012576  0E00               	movlw	0
 31568  012578  6EDF               	movwf	indf2,c
 31569                           
 31570                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 31571                           ;stkvar	_sign @ sp[(-56)+42]
 31572  01257A  0EF2               	movlw	-14
 31573  01257C  6AE3               	clrf	plusw1,c
 31574  01257E  0EF3               	movlw	-13
 31575  012580  6AE3               	clrf	plusw1,c
 31576                           
 31577                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 31578                           ;stkvar	_e @ sp[(-56)+34]
 31579  012582  0EEB               	movlw	-21
 31580  012584  AEE3               	btfss	plusw1,7,c
 31581  012586  D012               	goto	l15828
 31582                           
 31583                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 31584  012588  0E01               	movlw	1
 31585  01258A  6E34               	movwf	(btemp+10)^0,c
 31586  01258C  0E00               	movlw	0
 31587  01258E  6E35               	movwf	(btemp+11)^0,c
 31588                           
 31589                           ;stkvar	_sign @ sp[(-56)+42]
 31590  012590  0EF2               	movlw	-14
 31591  012592  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31592  012598  0EF3               	movlw	-13
 31593  01259A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31594                           
 31595                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 31596                           ;stkvar	_e @ sp[(-56)+34]
 31597                           ;stkvar	_e @ sp[(-56)+34]
 31598  0125A0  0EEA               	movlw	-22
 31599  0125A2  6CE3               	negf	plusw1,c
 31600  0125A4  0EEB               	movlw	-21
 31601  0125A6  1EE3               	comf	plusw1,f,c
 31602  0125A8  B0D8               	btfsc	status,0,c
 31603  0125AA  2AE3               	incf	plusw1,f,c
 31604  0125AC                     l15828:
 31605                           
 31606                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 31607  0125AC  0E02               	movlw	2
 31608  0125AE  6E34               	movwf	(btemp+10)^0,c
 31609  0125B0  0E00               	movlw	0
 31610  0125B2  6E35               	movwf	(btemp+11)^0,c
 31611                           
 31612                           ;stkvar	_p @ sp[(-56)+40]
 31613  0125B4  0EF0               	movlw	-16
 31614  0125B6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31615  0125BC  0EF1               	movlw	-15
 31616  0125BE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31617                           
 31618                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 31619  0125C4  D051               	goto	l15840
 31620  0125C6                     l15830:
 31621                           
 31622                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 31623                           ;stkvar	_i @ sp[(-56)+36]
 31624  0125C6  50E1               	movf	fsr1l,w,c
 31625  0125C8  0FEC               	addlw	-20
 31626  0125CA  6ED9               	movwf	fsr2l,c
 31627  0125CC  50E2               	movf	fsr1h,w,c
 31628  0125CE  6EDA               	movwf	fsr2h,c
 31629  0125D0  0EFF               	movlw	255
 31630  0125D2  22DA               	addwfc	fsr2h,f,c
 31631  0125D4  06DE               	decf	postinc2,f,c
 31632  0125D6  0E00               	movlw	0
 31633  0125D8  5ADD               	subwfb	postdec2,f,c
 31634                           
 31635                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 31636                           ;stkvar	_i @ sp[(-56)+36]
 31637  0125DA  0EEC               	movlw	-20
 31638  0125DC  006F FF8C  F034    	movff	plusw1,btemp+10
 31639  0125E2  0EED               	movlw	-19
 31640  0125E4  006F FF8C  F035    	movff	plusw1,btemp+11
 31641  0125EA  0E54               	movlw	low _dbuf
 31642  0125EC  2434               	addwf	(btemp+10)^0,w,c
 31643  0125EE  6ED9               	movwf	fsr2l,c
 31644  0125F0  0E03               	movlw	high _dbuf
 31645  0125F2  2035               	addwfc	(btemp+11)^0,w,c
 31646  0125F4  6EDA               	movwf	fsr2h,c
 31647  0125F6  0E0A               	movlw	10
 31648  0125F8  6EE6               	movwf	postinc1,c
 31649  0125FA  0E00               	movlw	0
 31650  0125FC  6EE6               	movwf	postinc1,c
 31651                           
 31652                           ;stkvar	_e @ sp[(-58)+34]
 31653  0125FE  0EE8               	movlw	-24
 31654  012600  006F FF8F FFE6     	movff	plusw1,postinc1
 31655  012606  006F FF8F FFE6     	movff	plusw1,postinc1
 31656  01260C  ECE3  F0FA         	call	___awmod	;wreg free
 31657  012610  502A               	movf	btemp^0,w,c
 31658  012612  0F30               	addlw	48
 31659  012614  6EDF               	movwf	indf2,c
 31660                           
 31661                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 31662  012616  0E0A               	movlw	10
 31663  012618  6EE6               	movwf	postinc1,c
 31664  01261A  0E00               	movlw	0
 31665  01261C  6EE6               	movwf	postinc1,c
 31666                           
 31667                           ;stkvar	_e @ sp[(-58)+34]
 31668  01261E  0EE8               	movlw	-24
 31669  012620  006F FF8F FFE6     	movff	plusw1,postinc1
 31670  012626  006F FF8F FFE6     	movff	plusw1,postinc1
 31671  01262C  ECB4  F0F6         	call	___awdiv	;wreg free
 31672                           
 31673                           ;stkvar	_e @ sp[(-56)+34]
 31674  012630  0EEA               	movlw	-22
 31675  012632  0060  F0AB  FFE3   	movff	btemp,plusw1
 31676  012638  0EEB               	movlw	-21
 31677  01263A  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31678                           
 31679                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 31680                           ;stkvar	_p @ sp[(-56)+40]
 31681  012640  50E1               	movf	fsr1l,w,c
 31682  012642  0FF0               	addlw	-16
 31683  012644  6ED9               	movwf	fsr2l,c
 31684  012646  50E2               	movf	fsr1h,w,c
 31685  012648  6EDA               	movwf	fsr2h,c
 31686  01264A  0EFF               	movlw	255
 31687  01264C  22DA               	addwfc	fsr2h,f,c
 31688  01264E  06DE               	decf	postinc2,f,c
 31689  012650  0E00               	movlw	0
 31690  012652  5ADD               	subwfb	postdec2,f,c
 31691                           
 31692                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 31693                           ;stkvar	_w @ sp[(-56)+38]
 31694  012654  50E1               	movf	fsr1l,w,c
 31695  012656  0FEE               	addlw	-18
 31696  012658  6ED9               	movwf	fsr2l,c
 31697  01265A  50E2               	movf	fsr1h,w,c
 31698  01265C  6EDA               	movwf	fsr2h,c
 31699  01265E  0EFF               	movlw	255
 31700  012660  22DA               	addwfc	fsr2h,f,c
 31701  012662  06DE               	decf	postinc2,f,c
 31702  012664  0E00               	movlw	0
 31703  012666  5ADD               	subwfb	postdec2,f,c
 31704  012668                     l15840:
 31705                           
 31706                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 31707                           ;stkvar	_e @ sp[(-56)+34]
 31708  012668  0EEA               	movlw	-22
 31709  01266A  006F FF8C  F02A    	movff	plusw1,btemp
 31710  012670  0EEB               	movlw	-21
 31711  012672  50E3               	movf	plusw1,w,c
 31712  012674  102A               	iorwf	btemp^0,w,c
 31713  012676  A4D8               	btfss	status,2,c
 31714  012678  D7A6               	goto	l15830
 31715                           
 31716                           ;stkvar	_p @ sp[(-56)+40]
 31717  01267A  0EF1               	movlw	-15
 31718  01267C  BEE3               	btfsc	plusw1,7,c
 31719  01267E  D007               	goto	u15140
 31720  012680  0EF1               	movlw	-15
 31721  012682  50E3               	movf	plusw1,w,c
 31722  012684  E1A0               	bnz	l15830
 31723  012686  0EF0               	movlw	-16
 31724  012688  04E3               	decf	plusw1,w,c
 31725  01268A  B0D8               	btfsc	status,0,c
 31726  01268C  D79C               	goto	l15830
 31727  01268E                     u15140:
 31728                           
 31729                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 31730                           ;stkvar	_i @ sp[(-56)+36]
 31731  01268E  50E1               	movf	fsr1l,w,c
 31732  012690  0FEC               	addlw	-20
 31733  012692  6ED9               	movwf	fsr2l,c
 31734  012694  50E2               	movf	fsr1h,w,c
 31735  012696  6EDA               	movwf	fsr2h,c
 31736  012698  0EFF               	movlw	255
 31737  01269A  22DA               	addwfc	fsr2h,f,c
 31738  01269C  06DE               	decf	postinc2,f,c
 31739  01269E  0E00               	movlw	0
 31740  0126A0  5ADD               	subwfb	postdec2,f,c
 31741                           
 31742                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 31743                           ;stkvar	_sign @ sp[(-56)+42]
 31744  0126A2  0EF2               	movlw	-14
 31745  0126A4  006F FF8C  F02A    	movff	plusw1,btemp
 31746  0126AA  0EF3               	movlw	-13
 31747  0126AC  50E3               	movf	plusw1,w,c
 31748  0126AE  102A               	iorwf	btemp^0,w,c
 31749  0126B0  A4D8               	btfss	status,2,c
 31750  0126B2  D002               	goto	l15850
 31751  0126B4  0E2B               	movlw	43
 31752  0126B6  D001               	goto	L33
 31753  0126B8                     l15850:
 31754  0126B8  0E2D               	movlw	45
 31755  0126BA                     L33:
 31756  0126BA  6E34               	movwf	(btemp+10)^0,c
 31757  0126BC  0E00               	movlw	0
 31758  0126BE  6E35               	movwf	(btemp+11)^0,c
 31759                           
 31760                           ;stkvar	_efgtoa$6617 @ sp[(-56)+4]
 31761  0126C0  0ECC               	movlw	-52
 31762  0126C2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31763  0126C8  0ECD               	movlw	-51
 31764  0126CA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31765                           
 31766                           ;stkvar	_efgtoa$6617 @ sp[(-56)+4]
 31767                           ;stkvar	_i @ sp[(-56)+36]
 31768  0126D0  0EEC               	movlw	-20
 31769  0126D2  006F FF8C  F034    	movff	plusw1,btemp+10
 31770  0126D8  0EED               	movlw	-19
 31771  0126DA  006F FF8C  F035    	movff	plusw1,btemp+11
 31772  0126E0  0E54               	movlw	low _dbuf
 31773  0126E2  2434               	addwf	(btemp+10)^0,w,c
 31774  0126E4  6ED9               	movwf	fsr2l,c
 31775  0126E6  0E03               	movlw	high _dbuf
 31776  0126E8  2035               	addwfc	(btemp+11)^0,w,c
 31777  0126EA  6EDA               	movwf	fsr2h,c
 31778  0126EC  0ECC               	movlw	-52
 31779  0126EE  006F FF8F FFDF     	movff	plusw1,indf2
 31780                           
 31781                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 31782                           ;stkvar	_w @ sp[(-56)+38]
 31783  0126F4  50E1               	movf	fsr1l,w,c
 31784  0126F6  0FEE               	addlw	-18
 31785  0126F8  6ED9               	movwf	fsr2l,c
 31786  0126FA  50E2               	movf	fsr1h,w,c
 31787  0126FC  6EDA               	movwf	fsr2h,c
 31788  0126FE  0EFF               	movlw	255
 31789  012700  22DA               	addwfc	fsr2h,f,c
 31790  012702  06DE               	decf	postinc2,f,c
 31791  012704  0E00               	movlw	0
 31792  012706  5ADD               	subwfb	postdec2,f,c
 31793                           
 31794                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 31795                           ;stkvar	_i @ sp[(-56)+36]
 31796  012708  50E1               	movf	fsr1l,w,c
 31797  01270A  0FEC               	addlw	-20
 31798  01270C  6ED9               	movwf	fsr2l,c
 31799  01270E  50E2               	movf	fsr1h,w,c
 31800  012710  6EDA               	movwf	fsr2h,c
 31801  012712  0EFF               	movlw	255
 31802  012714  22DA               	addwfc	fsr2h,f,c
 31803  012716  06DE               	decf	postinc2,f,c
 31804  012718  0E00               	movlw	0
 31805  01271A  5ADD               	subwfb	postdec2,f,c
 31806  01271C  0EBF               	movlw	191
 31807  01271E  6E34               	movwf	(btemp+10)^0,c
 31808  012720  0EFF               	movlw	255
 31809  012722  6E35               	movwf	(btemp+11)^0,c
 31810                           
 31811                           ;stkvar	_c @ sp[(-56)+-7]
 31812  012724  0EC1               	movlw	-63
 31813  012726  50E3               	movf	plusw1,w,c
 31814  012728  6E32               	movwf	(btemp+8)^0,c
 31815  01272A  6A33               	clrf	(btemp+9)^0,c
 31816  01272C  5034               	movf	(btemp+10)^0,w,c
 31817  01272E  2632               	addwf	(btemp+8)^0,f,c
 31818  012730  5035               	movf	(btemp+11)^0,w,c
 31819  012732  2233               	addwfc	(btemp+9)^0,f,c
 31820  012734  5033               	movf	(btemp+9)^0,w,c
 31821  012736  E106               	bnz	u15160
 31822  012738  0E1A               	movlw	26
 31823  01273A  5C32               	subwf	(btemp+8)^0,w,c
 31824  01273C  B0D8               	btfsc	status,0,c
 31825  01273E  D002               	goto	u15160
 31826  012740  0E01               	movlw	1
 31827  012742  D001               	goto	u15170
 31828  012744                     u15160:
 31829  012744  0E00               	movlw	0
 31830  012746                     u15170:
 31831  012746  6E34               	movwf	(btemp+10)^0,c
 31832  012748  6A35               	clrf	(btemp+11)^0,c
 31833                           
 31834                           ;stkvar	_efgtoa$6619 @ sp[(-56)+0]
 31835  01274A  0EC8               	movlw	-56
 31836  01274C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31837  012752  0EC9               	movlw	-55
 31838  012754  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31839                           
 31840                           ;stkvar	_efgtoa$6619 @ sp[(-56)+0]
 31841  01275A  0EC8               	movlw	-56
 31842  01275C  006F FF8C  F02A    	movff	plusw1,btemp
 31843  012762  0EC9               	movlw	-55
 31844  012764  50E3               	movf	plusw1,w,c
 31845  012766  102A               	iorwf	btemp^0,w,c
 31846  012768  A4D8               	btfss	status,2,c
 31847  01276A  D002               	goto	l15866
 31848  01276C  0E65               	movlw	101
 31849  01276E  D001               	goto	L34
 31850  012770                     l15866:
 31851  012770  0E45               	movlw	69
 31852  012772                     L34:
 31853  012772  6E34               	movwf	(btemp+10)^0,c
 31854  012774  0E00               	movlw	0
 31855  012776  6E35               	movwf	(btemp+11)^0,c
 31856                           
 31857                           ;stkvar	_efgtoa$6618 @ sp[(-56)+2]
 31858  012778  0ECA               	movlw	-54
 31859  01277A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31860  012780  0ECB               	movlw	-53
 31861  012782  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31862                           
 31863                           ;stkvar	_efgtoa$6618 @ sp[(-56)+2]
 31864                           ;stkvar	_i @ sp[(-56)+36]
 31865  012788  0EEC               	movlw	-20
 31866  01278A  006F FF8C  F034    	movff	plusw1,btemp+10
 31867  012790  0EED               	movlw	-19
 31868  012792  006F FF8C  F035    	movff	plusw1,btemp+11
 31869  012798  0E54               	movlw	low _dbuf
 31870  01279A  2434               	addwf	(btemp+10)^0,w,c
 31871  01279C  6ED9               	movwf	fsr2l,c
 31872  01279E  0E03               	movlw	high _dbuf
 31873  0127A0  2035               	addwfc	(btemp+11)^0,w,c
 31874  0127A2  6EDA               	movwf	fsr2h,c
 31875  0127A4  0ECA               	movlw	-54
 31876  0127A6  006F FF8F FFDF     	movff	plusw1,indf2
 31877                           
 31878                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 31879                           ;stkvar	_w @ sp[(-56)+38]
 31880  0127AC  50E1               	movf	fsr1l,w,c
 31881  0127AE  0FEE               	addlw	-18
 31882  0127B0  6ED9               	movwf	fsr2l,c
 31883  0127B2  50E2               	movf	fsr1h,w,c
 31884  0127B4  6EDA               	movwf	fsr2h,c
 31885  0127B6  0EFF               	movlw	255
 31886  0127B8  22DA               	addwfc	fsr2h,f,c
 31887  0127BA  06DE               	decf	postinc2,f,c
 31888  0127BC  0E00               	movlw	0
 31889  0127BE  5ADD               	subwfb	postdec2,f,c
 31890                           
 31891                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 31892                           ;stkvar	_i @ sp[(-56)+36]
 31893  0127C0  0EEC               	movlw	-20
 31894  0127C2  006F FF8C  F034    	movff	plusw1,btemp+10
 31895  0127C8  0EED               	movlw	-19
 31896  0127CA  006F FF8C  F035    	movff	plusw1,btemp+11
 31897  0127D0  0E54               	movlw	low _dbuf
 31898  0127D2  2434               	addwf	(btemp+10)^0,w,c
 31899  0127D4  6E32               	movwf	(btemp+8)^0,c
 31900  0127D6  0E03               	movlw	high _dbuf
 31901  0127D8  2035               	addwfc	(btemp+11)^0,w,c
 31902  0127DA  6E33               	movwf	(btemp+9)^0,c
 31903  0127DC  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 31904  0127E2  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 31905                           
 31906                           ;stkvar	_n @ sp[(-58)+32]
 31907  0127E8  0E54               	movlw	low _dbuf
 31908  0127EA  6E34               	movwf	(btemp+10)^0,c
 31909  0127EC  0E03               	movlw	high _dbuf
 31910  0127EE  6E35               	movwf	(btemp+11)^0,c
 31911  0127F0  0EE6               	movlw	-26
 31912  0127F2  50E3               	movf	plusw1,w,c
 31913  0127F4  2634               	addwf	(btemp+10)^0,f,c
 31914  0127F6  0EE7               	movlw	-25
 31915  0127F8  50E3               	movf	plusw1,w,c
 31916  0127FA  2235               	addwfc	(btemp+11)^0,f,c
 31917  0127FC  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 31918  012802  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 31919  012808  EC5B  F000         	call	_strcpy	;wreg free
 31920  01280C  EF01  F08C         	goto	l15618
 31921  012810                     l2521:
 31922                           
 31923                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 31924  012810  0EC1               	movlw	193
 31925  012812  26E1               	addwf	fsr1l,f,c
 31926  012814  0EFF               	movlw	255
 31927  012816  22E2               	addwfc	fsr1h,f,c
 31928  012818  0012               	return		;funcret
 31929  01281A                     __end_of_efgtoa:
 31930                           	opt callstack 0
 31931                           
 31932 ;; *************** function _tolower *****************
 31933 ;; Defined at:
 31934 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 31935 ;; Parameters:    Size  Location     Type
 31936 ;;  c               2  [STACK] int 
 31937 ;; Auto vars:     Size  Location     Type
 31938 ;;		None
 31939 ;; Return value:  Size  Location     Type
 31940 ;;                  2  [STACK] int 
 31941 ;; Registers used:
 31942 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 31943 ;; Tracked objects:
 31944 ;;		On entry : 0/0
 31945 ;;		On exit  : 0/0
 31946 ;;		Unchanged: 0/0
 31947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31952 ;;Total ram usage:        0 bytes
 31953 ;; Hardware stack levels used:    1
 31954 ;; Hardware stack levels required when called:   16
 31955 ;; This function calls:
 31956 ;;		_isupper
 31957 ;; This function is called by:
 31958 ;;		_efgtoa
 31959 ;;		_vfpfcnvrt
 31960 ;; This function uses a reentrant model
 31961 ;;
 31962                           
 31963                           	psect	text104
 31964  000F08                     __ptext104:
 31965                           	opt callstack 0
 31966  000F08                     _tolower:
 31967                           	opt callstack 0
 31968                           
 31969                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31970  000F08  52E6               	movf	postinc1,f,c
 31971  000F0A  52E6               	movf	postinc1,f,c
 31972                           
 31973                           ;stkvar	_c @ sp[(-2)+-2]
 31974                           
 31975                           ;incstack = 0
 31976 ;; hardware stack exceeded
 31977  000F0C  0EFC               	movlw	-4
 31978  000F0E  50E3               	movf	plusw1,w,c
 31979  000F10  0FBF               	addlw	191
 31980  000F12  6E34               	movwf	(btemp+10)^0,c
 31981  000F14  0EFD               	movlw	-3
 31982  000F16  006F FF8C  F035    	movff	plusw1,btemp+11
 31983  000F1C  0EFF               	movlw	255
 31984  000F1E  2235               	addwfc	(btemp+11)^0,f,c
 31985  000F20  5035               	movf	(btemp+11)^0,w,c
 31986  000F22  E106               	bnz	u7820
 31987  000F24  0E1A               	movlw	26
 31988  000F26  5C34               	subwf	(btemp+10)^0,w,c
 31989  000F28  B0D8               	btfsc	status,0,c
 31990  000F2A  D002               	goto	u7820
 31991  000F2C  0E01               	movlw	1
 31992  000F2E  D001               	goto	u7830
 31993  000F30                     u7820:
 31994  000F30  0E00               	movlw	0
 31995  000F32                     u7830:
 31996  000F32  6E34               	movwf	(btemp+10)^0,c
 31997  000F34  6A35               	clrf	(btemp+11)^0,c
 31998                           
 31999                           ;stkvar	_tolower$7573 @ sp[(-2)+0]
 32000  000F36  0EFE               	movlw	-2
 32001  000F38  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32002  000F3E  0EFF               	movlw	-1
 32003  000F40  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32004                           
 32005                           ;stkvar	_tolower$7573 @ sp[(-2)+0]
 32006  000F46  0EFE               	movlw	-2
 32007  000F48  006F FF8C  F02A    	movff	plusw1,btemp
 32008  000F4E  0EFF               	movlw	-1
 32009  000F50  50E3               	movf	plusw1,w,c
 32010  000F52  102A               	iorwf	btemp^0,w,c
 32011  000F54  B4D8               	btfsc	status,2,c
 32012  000F56  D00D               	goto	l10106
 32013                           
 32014                           ;stkvar	_c @ sp[(-2)+-2]
 32015  000F58  0EFC               	movlw	-4
 32016  000F5A  006F FF8C  F02A    	movff	plusw1,btemp
 32017  000F60  0EFD               	movlw	-3
 32018  000F62  006F FF8C  F02B    	movff	plusw1,btemp+1
 32019  000F68  0E20               	movlw	32
 32020  000F6A  122A               	iorwf	btemp^0,f,c
 32021  000F6C  0E00               	movlw	0
 32022  000F6E  122B               	iorwf	(btemp+1)^0,f,c
 32023  000F70  D008               	goto	l3823
 32024  000F72                     l10106:
 32025                           
 32026                           ;stkvar	_c @ sp[(-2)+-2]
 32027  000F72  0EFC               	movlw	-4
 32028  000F74  006F FF8C  F02A    	movff	plusw1,btemp
 32029  000F7A  0EFD               	movlw	-3
 32030  000F7C  006F FF8C  F02B    	movff	plusw1,btemp+1
 32031  000F82                     l3823:
 32032                           
 32033                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 32034  000F82  52E5               	movf	postdec1,f,c
 32035  000F84  52E5               	movf	postdec1,f,c
 32036  000F86  52E5               	movf	postdec1,f,c
 32037  000F88  52E5               	movf	postdec1,f,c
 32038  000F8A  0012               	return		;funcret
 32039  000F8C                     __end_of_tolower:
 32040                           	opt callstack 0
 32041                           
 32042 ;; *************** function _isupper *****************
 32043 ;; Defined at:
 32044 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 32045 ;; Parameters:    Size  Location     Type
 32046 ;;  c               2  [STACK] int 
 32047 ;; Auto vars:     Size  Location     Type
 32048 ;;		None
 32049 ;; Return value:  Size  Location     Type
 32050 ;;                  2  [STACK] int 
 32051 ;; Registers used:
 32052 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 32053 ;; Tracked objects:
 32054 ;;		On entry : 0/0
 32055 ;;		On exit  : 0/0
 32056 ;;		Unchanged: 0/0
 32057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32062 ;;Total ram usage:        0 bytes
 32063 ;; Hardware stack levels used:    1
 32064 ;; Hardware stack levels required when called:   15
 32065 ;; This function calls:
 32066 ;;		Nothing
 32067 ;; This function is called by:
 32068 ;;		_efgtoa
 32069 ;;		_xtoa
 32070 ;;		_vfpfcnvrt
 32071 ;;		_tolower
 32072 ;; This function uses a reentrant model
 32073 ;;
 32074                           
 32075                           	psect	text105
 32076  001FF6                     __ptext105:
 32077                           	opt callstack 0
 32078  001FF6                     _isupper:
 32079                           	opt callstack 0
 32080                           
 32081                           ;stkvar	_c @ sp[(0)+-2]
 32082                           
 32083                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32084                           ;incstack = 0
 32085 ;; hardware stack exceeded
 32086  001FF6  0EFE               	movlw	-2
 32087  001FF8  50E3               	movf	plusw1,w,c
 32088  001FFA  0FBF               	addlw	191
 32089  001FFC  6E34               	movwf	(btemp+10)^0,c
 32090  001FFE  0EFF               	movlw	-1
 32091  002000  006F FF8C  F035    	movff	plusw1,btemp+11
 32092  002006  0EFF               	movlw	255
 32093  002008  2235               	addwfc	(btemp+11)^0,f,c
 32094  00200A  5035               	movf	(btemp+11)^0,w,c
 32095  00200C  E106               	bnz	u7160
 32096  00200E  0E1A               	movlw	26
 32097  002010  5C34               	subwf	(btemp+10)^0,w,c
 32098  002012  B0D8               	btfsc	status,0,c
 32099  002014  D002               	goto	u7160
 32100  002016  0E01               	movlw	1
 32101  002018  D001               	goto	u7170
 32102  00201A                     u7160:
 32103  00201A  0E00               	movlw	0
 32104  00201C                     u7170:
 32105  00201C  6E2A               	movwf	btemp^0,c
 32106  00201E  6A2B               	clrf	(btemp+1)^0,c
 32107                           
 32108                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 32109  002020  52E5               	movf	postdec1,f,c
 32110  002022  52E5               	movf	postdec1,f,c
 32111  002024  0012               	return		;funcret
 32112  002026                     __end_of_isupper:
 32113                           	opt callstack 0
 32114                           
 32115 ;; *************** function _strcpy *****************
 32116 ;; Defined at:
 32117 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 32118 ;; Parameters:    Size  Location     Type
 32119 ;;  dest            2  [STACK] PTR unsigned char 
 32120 ;;		 -> dbuf(80), 
 32121 ;;  src             2  [STACK] PTR const unsigned char 
 32122 ;;		 -> STR_96(4), STR_95(4), STR_92(4), STR_91(4), 
 32123 ;;		 -> dbuf(80), 
 32124 ;; Auto vars:     Size  Location     Type
 32125 ;;  d               2  [STACK] PTR unsigned char 
 32126 ;;		 -> dbuf(80), 
 32127 ;;  s               2  [STACK] PTR const unsigned char 
 32128 ;;		 -> STR_96(4), STR_95(4), STR_92(4), STR_91(4), 
 32129 ;;		 -> dbuf(80), 
 32130 ;; Return value:  Size  Location     Type
 32131 ;;                  2  [STACK] PTR unsigned char 
 32132 ;; Registers used:
 32133 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 32134 ;; Tracked objects:
 32135 ;;		On entry : 0/0
 32136 ;;		On exit  : 0/0
 32137 ;;		Unchanged: 0/0
 32138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32143 ;;Total ram usage:        0 bytes
 32144 ;; Hardware stack levels used:    1
 32145 ;; Hardware stack levels required when called:   15
 32146 ;; This function calls:
 32147 ;;		Nothing
 32148 ;; This function is called by:
 32149 ;;		_efgtoa
 32150 ;; This function uses a reentrant model
 32151 ;;
 32152                           
 32153                           	psect	text106
 32154  0000B6                     __ptext106:
 32155                           	opt callstack 0
 32156  0000B6                     _strcpy:
 32157                           	opt callstack 0
 32158                           
 32159                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32160  0000B6  52E6               	movf	postinc1,f,c
 32161  0000B8  52E6               	movf	postinc1,f,c
 32162  0000BA  52E6               	movf	postinc1,f,c
 32163  0000BC  52E6               	movf	postinc1,f,c
 32164                           
 32165                           ;stkvar	_src @ sp[(-4)+-4]
 32166                           
 32167                           ;incstack = 0
 32168 ;; hardware stack exceeded
 32169  0000BE  0EF8               	movlw	-8
 32170  0000C0  006F FF8C  F034    	movff	plusw1,btemp+10
 32171  0000C6  0EF9               	movlw	-7
 32172  0000C8  006F FF8C  F035    	movff	plusw1,btemp+11
 32173                           
 32174                           ;stkvar	_s @ sp[(-4)+2]
 32175  0000CE  0EFF               	movlw	-1
 32176  0000D0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32177  0000D6  0EFE               	movlw	-2
 32178  0000D8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32179                           
 32180                           ;stkvar	_dest @ sp[(-4)+-2]
 32181  0000DE  0EFA               	movlw	-6
 32182  0000E0  006F FF8C  F034    	movff	plusw1,btemp+10
 32183  0000E6  0EFB               	movlw	-5
 32184  0000E8  006F FF8C  F035    	movff	plusw1,btemp+11
 32185                           
 32186                           ;stkvar	_d @ sp[(-4)+0]
 32187  0000EE  0EFD               	movlw	-3
 32188  0000F0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32189  0000F6  0EFC               	movlw	-4
 32190  0000F8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32191  0000FE                     l15402:
 32192                           
 32193                           ;stkvar	_s @ sp[(-4)+2]
 32194  0000FE  50E1               	movf	fsr1l,w,c
 32195  000100  0FFE               	addlw	-2
 32196  000102  6ED9               	movwf	fsr2l,c
 32197  000104  50E2               	movf	fsr1h,w,c
 32198  000106  6EDA               	movwf	fsr2h,c
 32199  000108  0EFF               	movlw	255
 32200  00010A  22DA               	addwfc	fsr2h,f,c
 32201  00010C  006F FF7C  F034    	movff	indf2,btemp+10
 32202  000112  0E01               	movlw	1
 32203  000114  26DE               	addwf	postinc2,f,c
 32204  000116  006F FF7C  F035    	movff	indf2,btemp+11
 32205  00011C  0E00               	movlw	0
 32206  00011E  22DD               	addwfc	postdec2,f,c
 32207  000120  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 32208  000126  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 32209  00012C  0E00               	movlw	low (__mediumconst shr (0+16))
 32210  00012E  6EF8               	movwf	tblptru,c
 32211                           
 32212                           ;stkvar	_d @ sp[(-4)+0]
 32213  000130  50E1               	movf	fsr1l,w,c
 32214  000132  0FFC               	addlw	-4
 32215  000134  6ED9               	movwf	fsr2l,c
 32216  000136  50E2               	movf	fsr1h,w,c
 32217  000138  6EDA               	movwf	fsr2h,c
 32218  00013A  0EFF               	movlw	255
 32219  00013C  22DA               	addwfc	fsr2h,f,c
 32220  00013E  006F FF7C  F034    	movff	indf2,btemp+10
 32221  000144  0E01               	movlw	1
 32222  000146  26DE               	addwf	postinc2,f,c
 32223  000148  006F FF7C  F035    	movff	indf2,btemp+11
 32224  00014E  0E00               	movlw	0
 32225  000150  22DD               	addwfc	postdec2,f,c
 32226  000152  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 32227  000158  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 32228  00015E  0E1F               	movlw	(high __ramtop+-1)
 32229  000160  64F7               	cpfsgt	tblptrh,c
 32230  000162  D003               	bra	u14327
 32231  000164  0008               	tblrd		*
 32232  000166  50F5               	movf	tablat,w,c
 32233  000168  D007               	bra	u14320
 32234  00016A                     u14327:
 32235  00016A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 32236  000170  006F FFDF FFEA     	movff	tblptrh,fsr0h
 32237  000176  50EF               	movf	indf0,w,c
 32238  000178                     u14320:
 32239  000178  6EDF               	movwf	indf2,c
 32240  00017A  50DF               	movf	indf2,w,c
 32241  00017C  A4D8               	btfss	status,2,c
 32242  00017E  D7BF               	goto	l15402
 32243                           
 32244                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 32245  000180  0EF8               	movlw	248
 32246  000182  26E1               	addwf	fsr1l,f,c
 32247  000184  0EFF               	movlw	255
 32248  000186  22E2               	addwfc	fsr1h,f,c
 32249  000188  0012               	return		;funcret
 32250  00018A                     __end_of_strcpy:
 32251                           	opt callstack 0
 32252                           
 32253 ;; *************** function _floorf *****************
 32254 ;; Defined at:
 32255 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 32256 ;; Parameters:    Size  Location     Type
 32257 ;;  x               4  [STACK] float 
 32258 ;; Auto vars:     Size  Location     Type
 32259 ;;  u               4  [STACK] struct .
 32260 ;;  m               4  [STACK] unsigned long 
 32261 ;;  e               2  [STACK] int 
 32262 ;; Return value:  Size  Location     Type
 32263 ;;                  4  [STACK] float 
 32264 ;; Registers used:
 32265 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 32266 ;; Tracked objects:
 32267 ;;		On entry : 0/0
 32268 ;;		On exit  : 0/0
 32269 ;;		Unchanged: 0/0
 32270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32275 ;;Total ram usage:        0 bytes
 32276 ;; Hardware stack levels used:    1
 32277 ;; Hardware stack levels required when called:   15
 32278 ;; This function calls:
 32279 ;;		Nothing
 32280 ;; This function is called by:
 32281 ;;		_efgtoa
 32282 ;; This function uses a reentrant model
 32283 ;;
 32284                           
 32285                           	psect	text107
 32286  019F84                     __ptext107:
 32287                           	opt callstack 0
 32288  019F84                     _floorf:
 32289                           	opt callstack 0
 32290                           
 32291                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 32292  019F84  0E0A               	movlw	10
 32293  019F86  26E1               	addwf	fsr1l,f,c
 32294  019F88  0E00               	movlw	0
 32295  019F8A  22E2               	addwfc	fsr1h,f,c
 32296                           
 32297                           ;incstack = 0
 32298 ;; hardware stack exceeded
 32299  019F8C  0060  F1D0  F032   	movff	floorf@F524,btemp+8
 32300  019F92  0060  F1D4  F033   	movff	floorf@F524+1,btemp+9
 32301  019F98  0060  F1D8  F034   	movff	floorf@F524+2,btemp+10
 32302  019F9E  0060  F1DC  F035   	movff	floorf@F524+3,btemp+11
 32303                           
 32304                           ;stkvar	_u @ sp[(-10)+0]
 32305  019FA4  0EF6               	movlw	-10
 32306  019FA6  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32307  019FAC  0EF7               	movlw	-9
 32308  019FAE  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 32309  019FB4  0EF8               	movlw	-8
 32310  019FB6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32311  019FBC  0EF9               	movlw	-7
 32312  019FBE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32313                           
 32314                           ;stkvar	_x @ sp[(-10)+-4]
 32315  019FC4  0EF2               	movlw	-14
 32316  019FC6  006F FF8C  F032    	movff	plusw1,btemp+8
 32317  019FCC  0EF3               	movlw	-13
 32318  019FCE  006F FF8C  F033    	movff	plusw1,btemp+9
 32319  019FD4  0EF4               	movlw	-12
 32320  019FD6  006F FF8C  F034    	movff	plusw1,btemp+10
 32321  019FDC  0EF5               	movlw	-11
 32322  019FDE  006F FF8C  F035    	movff	plusw1,btemp+11
 32323                           
 32324                           ;stkvar	_u @ sp[(-10)+0]
 32325  019FE4  0EF6               	movlw	-10
 32326  019FE6  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32327  019FEC  0EF7               	movlw	-9
 32328  019FEE  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 32329  019FF4  0EF8               	movlw	-8
 32330  019FF6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32331  019FFC  0EF9               	movlw	-7
 32332  019FFE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32333  01A004  0E81               	movlw	129
 32334  01A006  6E34               	movwf	(btemp+10)^0,c
 32335  01A008  0EFF               	movlw	255
 32336  01A00A  6E35               	movwf	(btemp+11)^0,c
 32337                           
 32338                           ;stkvar	_u @ sp[(-10)+0]
 32339  01A00C  0EF6               	movlw	-10
 32340  01A00E  006F FF8C  F02E    	movff	plusw1,btemp+4
 32341  01A014  0EF7               	movlw	-9
 32342  01A016  006F FF8C  F02F    	movff	plusw1,btemp+5
 32343  01A01C  0EF8               	movlw	-8
 32344  01A01E  006F FF8C  F030    	movff	plusw1,btemp+6
 32345  01A024  0EF9               	movlw	-7
 32346  01A026  006F FF8C  F031    	movff	plusw1,btemp+7
 32347  01A02C  0E18               	movlw	24
 32348  01A02E  D005               	goto	u7850
 32349  01A030                     u7855:
 32350  01A030  90D8               	bcf	status,0,c
 32351  01A032  3231               	rrcf	(btemp+7)^0,f,c
 32352  01A034  3230               	rrcf	(btemp+6)^0,f,c
 32353  01A036  322F               	rrcf	(btemp+5)^0,f,c
 32354  01A038  322E               	rrcf	(btemp+4)^0,f,c
 32355  01A03A                     u7850:
 32356  01A03A  2EE8               	decfsz	wreg,f,c
 32357  01A03C  D7F9               	goto	u7855
 32358  01A03E  0060  F0B8  F032   	movff	btemp+4,btemp+8
 32359  01A044  0060  F0BC  F033   	movff	btemp+5,btemp+9
 32360  01A04A  0EFF               	movlw	255
 32361  01A04C  1632               	andwf	(btemp+8)^0,f,c
 32362  01A04E  0E00               	movlw	0
 32363  01A050  1633               	andwf	(btemp+9)^0,f,c
 32364  01A052  5034               	movf	(btemp+10)^0,w,c
 32365  01A054  2632               	addwf	(btemp+8)^0,f,c
 32366  01A056  5035               	movf	(btemp+11)^0,w,c
 32367  01A058  2233               	addwfc	(btemp+9)^0,f,c
 32368                           
 32369                           ;stkvar	_e @ sp[(-10)+8]
 32370  01A05A  0EFE               	movlw	-2
 32371  01A05C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32372  01A062  0EFF               	movlw	-1
 32373  01A064  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 32374                           
 32375                           ;stkvar	_e @ sp[(-10)+8]
 32376  01A06A  0EFF               	movlw	-1
 32377  01A06C  BEE3               	btfsc	plusw1,7,c
 32378  01A06E  D019               	goto	l10120
 32379  01A070  0EFF               	movlw	-1
 32380  01A072  50E3               	movf	plusw1,w,c
 32381  01A074  E108               	bnz	u7860
 32382  01A076  0EFE               	movlw	-2
 32383  01A078  006F FF8C  F02A    	movff	plusw1,btemp
 32384  01A07E  0E17               	movlw	23
 32385  01A080  5E2A               	subwf	btemp^0,f,c
 32386  01A082  A0D8               	btfss	status,0,c
 32387  01A084  D00E               	goto	l10120
 32388  01A086                     u7860:
 32389                           
 32390                           ;stkvar	_x @ sp[(-10)+-4]
 32391  01A086  0EF2               	movlw	-14
 32392  01A088  006F FF8C  F02A    	movff	plusw1,btemp
 32393  01A08E  0EF3               	movlw	-13
 32394  01A090  006F FF8C  F02B    	movff	plusw1,btemp+1
 32395  01A096  0EF4               	movlw	-12
 32396  01A098  006F FF8C  F02C    	movff	plusw1,btemp+2
 32397  01A09E  0EF5               	movlw	-11
 32398  01A0A0  D11F               	goto	L35
 32399  01A0A2                     l10120:
 32400                           
 32401                           ;stkvar	_e @ sp[(-10)+8]
 32402  01A0A2  0EFF               	movlw	-1
 32403  01A0A4  BEE3               	btfsc	plusw1,7,c
 32404  01A0A6  D0B4               	goto	l10136
 32405                           
 32406                           ;stkvar	_e @ sp[(-10)+8]
 32407  01A0A8  0EFE               	movlw	-2
 32408  01A0AA  006F FF8C  F035    	movff	plusw1,btemp+11
 32409  01A0B0  0EFF               	movlw	255
 32410  01A0B2  6E2E               	movwf	(btemp+4)^0,c
 32411  01A0B4  0EFF               	movlw	255
 32412  01A0B6  6E2F               	movwf	(btemp+5)^0,c
 32413  01A0B8  0E7F               	movlw	127
 32414  01A0BA  6E30               	movwf	(btemp+6)^0,c
 32415  01A0BC  0E00               	movlw	0
 32416  01A0BE  6E31               	movwf	(btemp+7)^0,c
 32417  01A0C0                     u7885:
 32418  01A0C0  6635               	tstfsz	(btemp+11)^0,c
 32419  01A0C2  D001               	goto	u7886
 32420  01A0C4  D007               	goto	u7887
 32421  01A0C6                     u7886:
 32422  01A0C6  3431               	rlcf	(btemp+7)^0,w,c
 32423  01A0C8  3231               	rrcf	(btemp+7)^0,f,c
 32424  01A0CA  3230               	rrcf	(btemp+6)^0,f,c
 32425  01A0CC  322F               	rrcf	(btemp+5)^0,f,c
 32426  01A0CE  322E               	rrcf	(btemp+4)^0,f,c
 32427  01A0D0  2E35               	decfsz	(btemp+11)^0,f,c
 32428  01A0D2  D7F6               	goto	u7885
 32429  01A0D4                     u7887:
 32430                           
 32431                           ;stkvar	_m @ sp[(-10)+4]
 32432  01A0D4  0EFA               	movlw	-6
 32433  01A0D6  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 32434  01A0DC  0EFB               	movlw	-5
 32435  01A0DE  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 32436  01A0E4  0EFC               	movlw	-4
 32437  01A0E6  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 32438  01A0EC  0EFD               	movlw	-3
 32439  01A0EE  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 32440                           
 32441                           ;stkvar	_m @ sp[(-10)+4]
 32442                           ;stkvar	_u @ sp[(-10)+0]
 32443  01A0F4  0EF6               	movlw	-10
 32444  01A0F6  006F FF8C  F032    	movff	plusw1,btemp+8
 32445  01A0FC  0EF7               	movlw	-9
 32446  01A0FE  006F FF8C  F033    	movff	plusw1,btemp+9
 32447  01A104  0EF8               	movlw	-8
 32448  01A106  006F FF8C  F034    	movff	plusw1,btemp+10
 32449  01A10C  0EF9               	movlw	-7
 32450  01A10E  006F FF8C  F035    	movff	plusw1,btemp+11
 32451  01A114  0EFA               	movlw	-6
 32452  01A116  50E3               	movf	plusw1,w,c
 32453  01A118  1632               	andwf	(btemp+8)^0,f,c
 32454  01A11A  0EFB               	movlw	-5
 32455  01A11C  50E3               	movf	plusw1,w,c
 32456  01A11E  1633               	andwf	(btemp+9)^0,f,c
 32457  01A120  0EFC               	movlw	-4
 32458  01A122  50E3               	movf	plusw1,w,c
 32459  01A124  1634               	andwf	(btemp+10)^0,f,c
 32460  01A126  0EFD               	movlw	-3
 32461  01A128  50E3               	movf	plusw1,w,c
 32462  01A12A  1635               	andwf	(btemp+11)^0,f,c
 32463  01A12C  5032               	movf	(btemp+8)^0,w,c
 32464  01A12E  1033               	iorwf	(btemp+9)^0,w,c
 32465  01A130  1034               	iorwf	(btemp+10)^0,w,c
 32466  01A132  1035               	iorwf	(btemp+11)^0,w,c
 32467  01A134  B4D8               	btfsc	status,2,c
 32468  01A136  D7A7               	goto	u7860
 32469                           
 32470                           ;stkvar	_u @ sp[(-10)+0]
 32471  01A138  0EF6               	movlw	-10
 32472  01A13A  006F FF8C  F032    	movff	plusw1,btemp+8
 32473  01A140  0EF7               	movlw	-9
 32474  01A142  006F FF8C  F033    	movff	plusw1,btemp+9
 32475  01A148  0EF8               	movlw	-8
 32476  01A14A  006F FF8C  F034    	movff	plusw1,btemp+10
 32477  01A150  0EF9               	movlw	-7
 32478  01A152  006F FF8C  F035    	movff	plusw1,btemp+11
 32479  01A158  0E20               	movlw	32
 32480  01A15A  D005               	goto	u7900
 32481  01A15C                     u7905:
 32482  01A15C  90D8               	bcf	status,0,c
 32483  01A15E  3235               	rrcf	(btemp+11)^0,f,c
 32484  01A160  3234               	rrcf	(btemp+10)^0,f,c
 32485  01A162  3233               	rrcf	(btemp+9)^0,f,c
 32486  01A164  3232               	rrcf	(btemp+8)^0,f,c
 32487  01A166                     u7900:
 32488  01A166  2EE8               	decfsz	wreg,f,c
 32489  01A168  D7F9               	goto	u7905
 32490  01A16A  5032               	movf	(btemp+8)^0,w,c
 32491  01A16C  B4D8               	btfsc	status,2,c
 32492  01A16E  D028               	goto	l10134
 32493                           
 32494                           ;stkvar	_m @ sp[(-10)+4]
 32495                           ;stkvar	_u @ sp[(-10)+0]
 32496  01A170  0EF6               	movlw	-10
 32497  01A172  50E3               	movf	plusw1,w,c
 32498  01A174  6E2A               	movwf	btemp^0,c
 32499  01A176  0EFA               	movlw	-6
 32500  01A178  50E3               	movf	plusw1,w,c
 32501  01A17A  262A               	addwf	btemp^0,f,c
 32502  01A17C  0EF6               	movlw	-10
 32503  01A17E  0060  F0AB  FFE3   	movff	btemp,plusw1
 32504  01A184  0EF7               	movlw	-9
 32505  01A186  50E3               	movf	plusw1,w,c
 32506  01A188  6E2A               	movwf	btemp^0,c
 32507  01A18A  0EFB               	movlw	-5
 32508  01A18C  50E3               	movf	plusw1,w,c
 32509  01A18E  222A               	addwfc	btemp^0,f,c
 32510  01A190  0EF7               	movlw	-9
 32511  01A192  0060  F0AB  FFE3   	movff	btemp,plusw1
 32512  01A198  0EF8               	movlw	-8
 32513  01A19A  50E3               	movf	plusw1,w,c
 32514  01A19C  6E2A               	movwf	btemp^0,c
 32515  01A19E  0EFC               	movlw	-4
 32516  01A1A0  50E3               	movf	plusw1,w,c
 32517  01A1A2  222A               	addwfc	btemp^0,f,c
 32518  01A1A4  0EF8               	movlw	-8
 32519  01A1A6  0060  F0AB  FFE3   	movff	btemp,plusw1
 32520  01A1AC  0EF9               	movlw	-7
 32521  01A1AE  50E3               	movf	plusw1,w,c
 32522  01A1B0  6E2A               	movwf	btemp^0,c
 32523  01A1B2  0EFD               	movlw	-3
 32524  01A1B4  50E3               	movf	plusw1,w,c
 32525  01A1B6  222A               	addwfc	btemp^0,f,c
 32526  01A1B8  0EF9               	movlw	-7
 32527  01A1BA  0060  F0AB  FFE3   	movff	btemp,plusw1
 32528  01A1C0                     l10134:
 32529                           
 32530                           ;stkvar	_m @ sp[(-10)+4]
 32531  01A1C0  0EFA               	movlw	-6
 32532  01A1C2  006F FF8C  F032    	movff	plusw1,btemp+8
 32533  01A1C8  0EFB               	movlw	-5
 32534  01A1CA  006F FF8C  F033    	movff	plusw1,btemp+9
 32535  01A1D0  0EFC               	movlw	-4
 32536  01A1D2  006F FF8C  F034    	movff	plusw1,btemp+10
 32537  01A1D8  0EFD               	movlw	-3
 32538  01A1DA  006F FF8C  F035    	movff	plusw1,btemp+11
 32539  01A1E0  1C32               	comf	(btemp+8)^0,w,c
 32540  01A1E2  6E2E               	movwf	(btemp+4)^0,c
 32541  01A1E4  1C33               	comf	(btemp+9)^0,w,c
 32542  01A1E6  6E2F               	movwf	(btemp+5)^0,c
 32543  01A1E8  1C34               	comf	(btemp+10)^0,w,c
 32544  01A1EA  6E30               	movwf	(btemp+6)^0,c
 32545  01A1EC  1C35               	comf	(btemp+11)^0,w,c
 32546  01A1EE  6E31               	movwf	(btemp+7)^0,c
 32547                           
 32548                           ;stkvar	_u @ sp[(-10)+0]
 32549  01A1F0  50E1               	movf	fsr1l,w,c
 32550  01A1F2  0FF6               	addlw	-10
 32551  01A1F4  6ED9               	movwf	fsr2l,c
 32552  01A1F6  50E2               	movf	fsr1h,w,c
 32553  01A1F8  6EDA               	movwf	fsr2h,c
 32554  01A1FA  0EFF               	movlw	255
 32555  01A1FC  22DA               	addwfc	fsr2h,f,c
 32556  01A1FE  502E               	movf	(btemp+4)^0,w,c
 32557  01A200  16DE               	andwf	postinc2,f,c
 32558  01A202  502F               	movf	(btemp+5)^0,w,c
 32559  01A204  16DE               	andwf	postinc2,f,c
 32560  01A206  5030               	movf	(btemp+6)^0,w,c
 32561  01A208  16DE               	andwf	postinc2,f,c
 32562  01A20A  5031               	movf	(btemp+7)^0,w,c
 32563  01A20C  16DE               	andwf	postinc2,f,c
 32564  01A20E  D05B               	goto	l10144
 32565  01A210                     l10136:
 32566                           
 32567                           ;stkvar	_u @ sp[(-10)+0]
 32568  01A210  0EF6               	movlw	-10
 32569  01A212  006F FF8C  F032    	movff	plusw1,btemp+8
 32570  01A218  0EF7               	movlw	-9
 32571  01A21A  006F FF8C  F033    	movff	plusw1,btemp+9
 32572  01A220  0EF8               	movlw	-8
 32573  01A222  006F FF8C  F034    	movff	plusw1,btemp+10
 32574  01A228  0EF9               	movlw	-7
 32575  01A22A  006F FF8C  F035    	movff	plusw1,btemp+11
 32576  01A230  0E20               	movlw	32
 32577  01A232  D005               	goto	u7920
 32578  01A234                     u7925:
 32579  01A234  90D8               	bcf	status,0,c
 32580  01A236  3235               	rrcf	(btemp+11)^0,f,c
 32581  01A238  3234               	rrcf	(btemp+10)^0,f,c
 32582  01A23A  3233               	rrcf	(btemp+9)^0,f,c
 32583  01A23C  3232               	rrcf	(btemp+8)^0,f,c
 32584  01A23E                     u7920:
 32585  01A23E  2EE8               	decfsz	wreg,f,c
 32586  01A240  D7F9               	goto	u7925
 32587  01A242  6632               	tstfsz	(btemp+8)^0,c
 32588  01A244  D009               	goto	l10140
 32589                           
 32590                           ;stkvar	_u @ sp[(-10)+0]
 32591  01A246  0EF6               	movlw	-10
 32592  01A248  6AE3               	clrf	plusw1,c
 32593  01A24A  0EF7               	movlw	-9
 32594  01A24C  6AE3               	clrf	plusw1,c
 32595  01A24E  0EF8               	movlw	-8
 32596  01A250  6AE3               	clrf	plusw1,c
 32597  01A252  0EF9               	movlw	-7
 32598  01A254  6AE3               	clrf	plusw1,c
 32599  01A256  D037               	goto	l10144
 32600  01A258                     l10140:
 32601                           
 32602                           ;stkvar	_u @ sp[(-10)+0]
 32603  01A258  0EF6               	movlw	-10
 32604  01A25A  006F FF8C  F032    	movff	plusw1,btemp+8
 32605  01A260  0EF7               	movlw	-9
 32606  01A262  006F FF8C  F033    	movff	plusw1,btemp+9
 32607  01A268  0EF8               	movlw	-8
 32608  01A26A  006F FF8C  F034    	movff	plusw1,btemp+10
 32609  01A270  0EF9               	movlw	-7
 32610  01A272  006F FF8C  F035    	movff	plusw1,btemp+11
 32611  01A278  90D8               	bcf	status,0,c
 32612  01A27A  3432               	rlcf	(btemp+8)^0,w,c
 32613  01A27C  6E2E               	movwf	(btemp+4)^0,c
 32614  01A27E  3433               	rlcf	(btemp+9)^0,w,c
 32615  01A280  6E2F               	movwf	(btemp+5)^0,c
 32616  01A282  3434               	rlcf	(btemp+10)^0,w,c
 32617  01A284  6E30               	movwf	(btemp+6)^0,c
 32618  01A286  3435               	rlcf	(btemp+11)^0,w,c
 32619  01A288  6E31               	movwf	(btemp+7)^0,c
 32620  01A28A  502E               	movf	(btemp+4)^0,w,c
 32621  01A28C  102F               	iorwf	(btemp+5)^0,w,c
 32622  01A28E  1030               	iorwf	(btemp+6)^0,w,c
 32623  01A290  1031               	iorwf	(btemp+7)^0,w,c
 32624  01A292  B4D8               	btfsc	status,2,c
 32625  01A294  D018               	goto	l10144
 32626  01A296  0E00               	movlw	0
 32627  01A298  6E32               	movwf	(btemp+8)^0,c
 32628  01A29A  0E00               	movlw	0
 32629  01A29C  6E33               	movwf	(btemp+9)^0,c
 32630  01A29E  0E80               	movlw	128
 32631  01A2A0  6E34               	movwf	(btemp+10)^0,c
 32632  01A2A2  0EBF               	movlw	191
 32633  01A2A4  6E35               	movwf	(btemp+11)^0,c
 32634                           
 32635                           ;stkvar	_u @ sp[(-10)+0]
 32636  01A2A6  0EF6               	movlw	-10
 32637  01A2A8  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32638  01A2AE  0EF7               	movlw	-9
 32639  01A2B0  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 32640  01A2B6  0EF8               	movlw	-8
 32641  01A2B8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32642  01A2BE  0EF9               	movlw	-7
 32643  01A2C0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32644  01A2C6                     l10144:
 32645                           
 32646                           ;stkvar	_u @ sp[(-10)+0]
 32647  01A2C6  0EF6               	movlw	-10
 32648  01A2C8  006F FF8C  F02A    	movff	plusw1,btemp
 32649  01A2CE  0EF7               	movlw	-9
 32650  01A2D0  006F FF8C  F02B    	movff	plusw1,btemp+1
 32651  01A2D6  0EF8               	movlw	-8
 32652  01A2D8  006F FF8C  F02C    	movff	plusw1,btemp+2
 32653  01A2DE  0EF9               	movlw	-7
 32654  01A2E0                     L35:
 32655  01A2E0  006F FF8C  F02D    	movff	plusw1,btemp+3
 32656                           
 32657                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 32658  01A2E6  0EF2               	movlw	242
 32659  01A2E8  26E1               	addwf	fsr1l,f,c
 32660  01A2EA  0EFF               	movlw	255
 32661  01A2EC  22E2               	addwfc	fsr1h,f,c
 32662  01A2EE  0012               	return		;funcret
 32663  01A2F0                     __end_of_floorf:
 32664                           	opt callstack 0
 32665                           
 32666 ;; *************** function ___fpclassifyf *****************
 32667 ;; Defined at:
 32668 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 32669 ;; Parameters:    Size  Location     Type
 32670 ;;  x               4  [STACK] float 
 32671 ;; Auto vars:     Size  Location     Type
 32672 ;;  u               4  [STACK] struct .
 32673 ;;  e               2  [STACK] int 
 32674 ;; Return value:  Size  Location     Type
 32675 ;;                  2  [STACK] int 
 32676 ;; Registers used:
 32677 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 32678 ;; Tracked objects:
 32679 ;;		On entry : 0/0
 32680 ;;		On exit  : 0/0
 32681 ;;		Unchanged: 0/0
 32682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32687 ;;Total ram usage:        0 bytes
 32688 ;; Hardware stack levels used:    1
 32689 ;; Hardware stack levels required when called:   15
 32690 ;; This function calls:
 32691 ;;		Nothing
 32692 ;; This function is called by:
 32693 ;;		_efgtoa
 32694 ;; This function uses a reentrant model
 32695 ;;
 32696                           
 32697                           	psect	text108
 32698  01DA8A                     __ptext108:
 32699                           	opt callstack 0
 32700  01DA8A                     ___fpclassifyf:
 32701                           	opt callstack 0
 32702                           
 32703                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32704  01DA8A  0E06               	movlw	6
 32705  01DA8C  26E1               	addwf	fsr1l,f,c
 32706  01DA8E  0E00               	movlw	0
 32707  01DA90  22E2               	addwfc	fsr1h,f,c
 32708                           
 32709                           ;incstack = 0
 32710 ;; hardware stack exceeded
 32711  01DA92  0060  F1F0  F032   	movff	___fpclassifyf@F463,btemp+8
 32712  01DA98  0060  F1F4  F033   	movff	___fpclassifyf@F463+1,btemp+9
 32713  01DA9E  0060  F1F8  F034   	movff	___fpclassifyf@F463+2,btemp+10
 32714  01DAA4  0060  F1FC  F035   	movff	___fpclassifyf@F463+3,btemp+11
 32715                           
 32716                           ;stkvar	_u @ sp[(-6)+0]
 32717  01DAAA  0EFA               	movlw	-6
 32718  01DAAC  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32719  01DAB2  0EFB               	movlw	-5
 32720  01DAB4  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 32721  01DABA  0EFC               	movlw	-4
 32722  01DABC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32723  01DAC2  0EFD               	movlw	-3
 32724  01DAC4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32725                           
 32726                           ;stkvar	_x @ sp[(-6)+-4]
 32727  01DACA  0EF6               	movlw	-10
 32728  01DACC  006F FF8C  F032    	movff	plusw1,btemp+8
 32729  01DAD2  0EF7               	movlw	-9
 32730  01DAD4  006F FF8C  F033    	movff	plusw1,btemp+9
 32731  01DADA  0EF8               	movlw	-8
 32732  01DADC  006F FF8C  F034    	movff	plusw1,btemp+10
 32733  01DAE2  0EF9               	movlw	-7
 32734  01DAE4  006F FF8C  F035    	movff	plusw1,btemp+11
 32735                           
 32736                           ;stkvar	_u @ sp[(-6)+0]
 32737  01DAEA  0EFA               	movlw	-6
 32738  01DAEC  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32739  01DAF2  0EFB               	movlw	-5
 32740  01DAF4  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 32741  01DAFA  0EFC               	movlw	-4
 32742  01DAFC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32743  01DB02  0EFD               	movlw	-3
 32744  01DB04  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32745                           
 32746                           ;stkvar	_u @ sp[(-6)+0]
 32747  01DB0A  0EFA               	movlw	-6
 32748  01DB0C  006F FF8C  F032    	movff	plusw1,btemp+8
 32749  01DB12  0EFB               	movlw	-5
 32750  01DB14  006F FF8C  F033    	movff	plusw1,btemp+9
 32751  01DB1A  0EFC               	movlw	-4
 32752  01DB1C  006F FF8C  F034    	movff	plusw1,btemp+10
 32753  01DB22  0EFD               	movlw	-3
 32754  01DB24  006F FF8C  F035    	movff	plusw1,btemp+11
 32755  01DB2A  0E18               	movlw	24
 32756  01DB2C  D005               	goto	u7730
 32757  01DB2E                     u7735:
 32758  01DB2E  90D8               	bcf	status,0,c
 32759  01DB30  3235               	rrcf	(btemp+11)^0,f,c
 32760  01DB32  3234               	rrcf	(btemp+10)^0,f,c
 32761  01DB34  3233               	rrcf	(btemp+9)^0,f,c
 32762  01DB36  3232               	rrcf	(btemp+8)^0,f,c
 32763  01DB38                     u7730:
 32764  01DB38  2EE8               	decfsz	wreg,f,c
 32765  01DB3A  D7F9               	goto	u7735
 32766  01DB3C  0060  F0C8  F030   	movff	btemp+8,btemp+6
 32767  01DB42  0060  F0CC  F031   	movff	btemp+9,btemp+7
 32768  01DB48  0EFF               	movlw	255
 32769  01DB4A  1630               	andwf	(btemp+6)^0,f,c
 32770  01DB4C  0E00               	movlw	0
 32771  01DB4E  1631               	andwf	(btemp+7)^0,f,c
 32772                           
 32773                           ;stkvar	_e @ sp[(-6)+4]
 32774  01DB50  0EFE               	movlw	-2
 32775  01DB52  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 32776  01DB58  0EFF               	movlw	-1
 32777  01DB5A  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 32778                           
 32779                           ;stkvar	_e @ sp[(-6)+4]
 32780  01DB60  0EFE               	movlw	-2
 32781  01DB62  006F FF8C  F02A    	movff	plusw1,btemp
 32782  01DB68  0EFF               	movlw	-1
 32783  01DB6A  50E3               	movf	plusw1,w,c
 32784  01DB6C  102A               	iorwf	btemp^0,w,c
 32785  01DB6E  A4D8               	btfss	status,2,c
 32786  01DB70  D023               	goto	l10082
 32787                           
 32788                           ;stkvar	_u @ sp[(-6)+0]
 32789  01DB72  0EFA               	movlw	-6
 32790  01DB74  006F FF8C  F032    	movff	plusw1,btemp+8
 32791  01DB7A  0EFB               	movlw	-5
 32792  01DB7C  006F FF8C  F033    	movff	plusw1,btemp+9
 32793  01DB82  0EFC               	movlw	-4
 32794  01DB84  006F FF8C  F034    	movff	plusw1,btemp+10
 32795  01DB8A  0EFD               	movlw	-3
 32796  01DB8C  006F FF8C  F035    	movff	plusw1,btemp+11
 32797  01DB92  90D8               	bcf	status,0,c
 32798  01DB94  3432               	rlcf	(btemp+8)^0,w,c
 32799  01DB96  6E2E               	movwf	(btemp+4)^0,c
 32800  01DB98  3433               	rlcf	(btemp+9)^0,w,c
 32801  01DB9A  6E2F               	movwf	(btemp+5)^0,c
 32802  01DB9C  3434               	rlcf	(btemp+10)^0,w,c
 32803  01DB9E  6E30               	movwf	(btemp+6)^0,c
 32804  01DBA0  3435               	rlcf	(btemp+11)^0,w,c
 32805  01DBA2  6E31               	movwf	(btemp+7)^0,c
 32806  01DBA4  502E               	movf	(btemp+4)^0,w,c
 32807  01DBA6  102F               	iorwf	(btemp+5)^0,w,c
 32808  01DBA8  1030               	iorwf	(btemp+6)^0,w,c
 32809  01DBAA  1031               	iorwf	(btemp+7)^0,w,c
 32810  01DBAC  A4D8               	btfss	status,2,c
 32811  01DBAE  D002               	goto	l10078
 32812  01DBB0  0E02               	movlw	2
 32813  01DBB2  D02E               	goto	L36
 32814  01DBB4                     l10078:
 32815  01DBB4  0E03               	movlw	3
 32816  01DBB6  D02C               	goto	L36
 32817  01DBB8                     l10082:
 32818                           
 32819                           ;stkvar	_e @ sp[(-6)+4]
 32820  01DBB8  0EFE               	movlw	-2
 32821  01DBBA  28E3               	incf	plusw1,w,c
 32822  01DBBC  E128               	bnz	l10088
 32823  01DBBE  0EFF               	movlw	-1
 32824  01DBC0  50E3               	movf	plusw1,w,c
 32825  01DBC2  A4D8               	btfss	status,2,c
 32826  01DBC4  D024               	goto	l10088
 32827                           
 32828                           ;stkvar	_u @ sp[(-6)+0]
 32829  01DBC6  0EFA               	movlw	-6
 32830  01DBC8  006F FF8C  F032    	movff	plusw1,btemp+8
 32831  01DBCE  0EFB               	movlw	-5
 32832  01DBD0  006F FF8C  F033    	movff	plusw1,btemp+9
 32833  01DBD6  0EFC               	movlw	-4
 32834  01DBD8  006F FF8C  F034    	movff	plusw1,btemp+10
 32835  01DBDE  0EFD               	movlw	-3
 32836  01DBE0  006F FF8C  F035    	movff	plusw1,btemp+11
 32837  01DBE6  0E09               	movlw	9
 32838  01DBE8                     u7775:
 32839  01DBE8  90D8               	bcf	status,0,c
 32840  01DBEA  3632               	rlcf	(btemp+8)^0,f,c
 32841  01DBEC  3633               	rlcf	(btemp+9)^0,f,c
 32842  01DBEE  3634               	rlcf	(btemp+10)^0,f,c
 32843  01DBF0  3635               	rlcf	(btemp+11)^0,f,c
 32844  01DBF2  2EE8               	decfsz	wreg,f,c
 32845  01DBF4  D7F9               	goto	u7775
 32846  01DBF6  5032               	movf	(btemp+8)^0,w,c
 32847  01DBF8  1033               	iorwf	(btemp+9)^0,w,c
 32848  01DBFA  1034               	iorwf	(btemp+10)^0,w,c
 32849  01DBFC  1035               	iorwf	(btemp+11)^0,w,c
 32850  01DBFE  A4D8               	btfss	status,2,c
 32851  01DC00  D002               	goto	u7780
 32852  01DC02  0E01               	movlw	1
 32853  01DC04  D001               	goto	u7790
 32854  01DC06                     u7780:
 32855  01DC06  0E00               	movlw	0
 32856  01DC08                     u7790:
 32857  01DC08  6E2A               	movwf	btemp^0,c
 32858  01DC0A  6A2B               	clrf	(btemp+1)^0,c
 32859  01DC0C  D004               	goto	l3403
 32860  01DC0E                     l10088:
 32861  01DC0E  0E04               	movlw	4
 32862  01DC10                     L36:
 32863  01DC10  6E2A               	movwf	btemp^0,c
 32864  01DC12  0E00               	movlw	0
 32865  01DC14  6E2B               	movwf	(btemp+1)^0,c
 32866  01DC16                     l3403:
 32867                           
 32868                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 32869  01DC16  0EF6               	movlw	246
 32870  01DC18  26E1               	addwf	fsr1l,f,c
 32871  01DC1A  0EFF               	movlw	255
 32872  01DC1C  22E2               	addwfc	fsr1h,f,c
 32873  01DC1E  0012               	return		;funcret
 32874  01DC20                     __end_of___fpclassifyf:
 32875                           	opt callstack 0
 32876                           
 32877 ;; *************** function ___fltol *****************
 32878 ;; Defined at:
 32879 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 32880 ;; Parameters:    Size  Location     Type
 32881 ;;  f1              4  [STACK] int 
 32882 ;; Auto vars:     Size  Location     Type
 32883 ;;  exp1            1  [STACK] unsigned char 
 32884 ;;  sign1           1  [STACK] unsigned char 
 32885 ;; Return value:  Size  Location     Type
 32886 ;;                  4  [STACK] long 
 32887 ;; Registers used:
 32888 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 32889 ;; Tracked objects:
 32890 ;;		On entry : 0/0
 32891 ;;		On exit  : 0/0
 32892 ;;		Unchanged: 0/0
 32893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32898 ;;Total ram usage:        0 bytes
 32899 ;; Hardware stack levels used:    1
 32900 ;; Hardware stack levels required when called:   15
 32901 ;; This function calls:
 32902 ;;		Nothing
 32903 ;; This function is called by:
 32904 ;;		_main
 32905 ;;		_convert_dac_raw
 32906 ;;		_load_hist_data
 32907 ;;		_calc_bsoc
 32908 ;;		_init_bsoc
 32909 ;;		_efgtoa
 32910 ;; This function uses a reentrant model
 32911 ;;
 32912                           
 32913                           	psect	text109
 32914  01E3BA                     __ptext109:
 32915                           	opt callstack 0
 32916  01E3BA                     ___fltol:
 32917                           	opt callstack 0
 32918                           
 32919                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32920  01E3BA  52E6               	movf	postinc1,f,c
 32921  01E3BC  52E6               	movf	postinc1,f,c
 32922                           
 32923                           ;stkvar	_f1 @ sp[(-2)+-4]
 32924                           
 32925                           ;incstack = 0
 32926 ;; hardware stack exceeded
 32927  01E3BE  0EFA               	movlw	-6
 32928  01E3C0  006F FF8C  F032    	movff	plusw1,btemp+8
 32929  01E3C6  0EFB               	movlw	-5
 32930  01E3C8  006F FF8C  F033    	movff	plusw1,btemp+9
 32931  01E3CE  0EFC               	movlw	-4
 32932  01E3D0  006F FF8C  F034    	movff	plusw1,btemp+10
 32933  01E3D6  0EFD               	movlw	-3
 32934  01E3D8  006F FF8C  F035    	movff	plusw1,btemp+11
 32935  01E3DE  0E18               	movlw	24
 32936  01E3E0  D005               	goto	u9000
 32937  01E3E2                     u9005:
 32938  01E3E2  90D8               	bcf	status,0,c
 32939  01E3E4  3235               	rrcf	(btemp+11)^0,f,c
 32940  01E3E6  3234               	rrcf	(btemp+10)^0,f,c
 32941  01E3E8  3233               	rrcf	(btemp+9)^0,f,c
 32942  01E3EA  3232               	rrcf	(btemp+8)^0,f,c
 32943  01E3EC                     u9000:
 32944  01E3EC  2EE8               	decfsz	wreg,f,c
 32945  01E3EE  D7F9               	goto	u9005
 32946                           
 32947                           ;stkvar	_exp1 @ sp[(-2)+0]
 32948  01E3F0  0EFE               	movlw	-2
 32949  01E3F2  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32950  01E3F8  0EFE               	movlw	-2
 32951  01E3FA  50E3               	movf	plusw1,w,c
 32952  01E3FC  A4D8               	btfss	status,2,c
 32953  01E3FE  D006               	goto	l10734
 32954  01E400                     u9010:
 32955  01E400  0E00               	movlw	0
 32956  01E402  6E2A               	movwf	btemp^0,c
 32957  01E404  6A2B               	clrf	(btemp+1)^0,c
 32958  01E406  6A2C               	clrf	(btemp+2)^0,c
 32959  01E408  6A2D               	clrf	(btemp+3)^0,c
 32960  01E40A  D08B               	goto	l3019
 32961  01E40C                     l10734:
 32962                           
 32963                           ;stkvar	_f1 @ sp[(-2)+-4]
 32964  01E40C  0EFA               	movlw	-6
 32965  01E40E  006F FF8C  F032    	movff	plusw1,btemp+8
 32966  01E414  0EFB               	movlw	-5
 32967  01E416  006F FF8C  F033    	movff	plusw1,btemp+9
 32968  01E41C  0EFC               	movlw	-4
 32969  01E41E  006F FF8C  F034    	movff	plusw1,btemp+10
 32970  01E424  0EFD               	movlw	-3
 32971  01E426  006F FF8C  F035    	movff	plusw1,btemp+11
 32972  01E42C  0E20               	movlw	32
 32973  01E42E  D005               	goto	u9020
 32974  01E430                     u9025:
 32975  01E430  90D8               	bcf	status,0,c
 32976  01E432  3235               	rrcf	(btemp+11)^0,f,c
 32977  01E434  3234               	rrcf	(btemp+10)^0,f,c
 32978  01E436  3233               	rrcf	(btemp+9)^0,f,c
 32979  01E438  3232               	rrcf	(btemp+8)^0,f,c
 32980  01E43A                     u9020:
 32981  01E43A  2EE8               	decfsz	wreg,f,c
 32982  01E43C  D7F9               	goto	u9025
 32983                           
 32984                           ;stkvar	_sign1 @ sp[(-2)+1]
 32985  01E43E  0EFF               	movlw	-1
 32986  01E440  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32987                           
 32988                           ;stkvar	_f1 @ sp[(-2)+-4]
 32989  01E446  0EFC               	movlw	-4
 32990  01E448  8EE3               	bsf	plusw1,7,c
 32991                           
 32992                           ;stkvar	_f1 @ sp[(-2)+-4]
 32993  01E44A  50E1               	movf	fsr1l,w,c
 32994  01E44C  0FFA               	addlw	-6
 32995  01E44E  6ED9               	movwf	fsr2l,c
 32996  01E450  50E2               	movf	fsr1h,w,c
 32997  01E452  6EDA               	movwf	fsr2h,c
 32998  01E454  0EFF               	movlw	255
 32999  01E456  22DA               	addwfc	fsr2h,f,c
 33000  01E458  0EFF               	movlw	255
 33001  01E45A  16DE               	andwf	postinc2,f,c
 33002  01E45C  0EFF               	movlw	255
 33003  01E45E  16DE               	andwf	postinc2,f,c
 33004  01E460  0EFF               	movlw	255
 33005  01E462  16DE               	andwf	postinc2,f,c
 33006  01E464  0E00               	movlw	0
 33007  01E466  16DE               	andwf	postinc2,f,c
 33008                           
 33009                           ;stkvar	_exp1 @ sp[(-2)+0]
 33010  01E468  0EFE               	movlw	-2
 33011  01E46A  006F FF8C  F02A    	movff	plusw1,btemp
 33012  01E470  0E96               	movlw	150
 33013  01E472  5E2A               	subwf	btemp^0,f,c
 33014  01E474  0EFE               	movlw	-2
 33015  01E476  0060  F0AB  FFE3   	movff	btemp,plusw1
 33016                           
 33017                           ;stkvar	_exp1 @ sp[(-2)+0]
 33018  01E47C  0EFE               	movlw	-2
 33019  01E47E  AEE3               	btfss	plusw1,7,c
 33020  01E480  D014               	goto	l10752
 33021                           
 33022                           ;stkvar	_exp1 @ sp[(-2)+0]
 33023  01E482  0EFE               	movlw	-2
 33024  01E484  50E3               	movf	plusw1,w,c
 33025  01E486  0A80               	xorlw	128
 33026  01E488  0F97               	addlw	151
 33027  01E48A  A0D8               	btfss	status,0,c
 33028  01E48C  D7B9               	goto	u9010
 33029  01E48E                     l10750:
 33030                           
 33031                           ;stkvar	_f1 @ sp[(-2)+-4]
 33032  01E48E  90D8               	bcf	status,0,c
 33033  01E490  0EFD               	movlw	-3
 33034  01E492  32E3               	rrcf	plusw1,f,c
 33035  01E494  0EFC               	movlw	-4
 33036  01E496  32E3               	rrcf	plusw1,f,c
 33037  01E498  0EFB               	movlw	-5
 33038  01E49A  32E3               	rrcf	plusw1,f,c
 33039  01E49C  0EFA               	movlw	-6
 33040  01E49E  32E3               	rrcf	plusw1,f,c
 33041                           
 33042                           ;stkvar	_exp1 @ sp[(-2)+0]
 33043  01E4A0  0EFE               	movlw	-2
 33044  01E4A2  2AE3               	incf	plusw1,f,c
 33045  01E4A4  B4D8               	btfsc	status,2,c
 33046  01E4A6  D018               	goto	u9070
 33047  01E4A8  D7F2               	goto	l10750
 33048  01E4AA                     l10752:
 33049                           
 33050                           ;stkvar	_exp1 @ sp[(-2)+0]
 33051  01E4AA  0EFE               	movlw	-2
 33052  01E4AC  006F FF8C  F02A    	movff	plusw1,btemp
 33053  01E4B2  0E1F               	movlw	31
 33054  01E4B4  642A               	cpfsgt	btemp^0,c
 33055  01E4B6  D00C               	goto	l10760
 33056  01E4B8  D7A3               	goto	u9010
 33057  01E4BA                     l10758:
 33058                           
 33059                           ;stkvar	_f1 @ sp[(-2)+-4]
 33060  01E4BA  90D8               	bcf	status,0,c
 33061  01E4BC  0EFA               	movlw	-6
 33062  01E4BE  36E3               	rlcf	plusw1,f,c
 33063  01E4C0  0EFB               	movlw	-5
 33064  01E4C2  36E3               	rlcf	plusw1,f,c
 33065  01E4C4  0EFC               	movlw	-4
 33066  01E4C6  36E3               	rlcf	plusw1,f,c
 33067  01E4C8  0EFD               	movlw	-3
 33068  01E4CA  36E3               	rlcf	plusw1,f,c
 33069                           
 33070                           ;stkvar	_exp1 @ sp[(-2)+0]
 33071  01E4CC  0EFE               	movlw	-2
 33072  01E4CE  06E3               	decf	plusw1,f,c
 33073  01E4D0                     l10760:
 33074                           
 33075                           ;stkvar	_exp1 @ sp[(-2)+0]
 33076  01E4D0  0EFE               	movlw	-2
 33077  01E4D2  50E3               	movf	plusw1,w,c
 33078  01E4D4  A4D8               	btfss	status,2,c
 33079  01E4D6  D7F1               	goto	l10758
 33080  01E4D8                     u9070:
 33081                           
 33082                           ;stkvar	_sign1 @ sp[(-2)+1]
 33083  01E4D8  0EFF               	movlw	-1
 33084  01E4DA  50E3               	movf	plusw1,w,c
 33085  01E4DC  B4D8               	btfsc	status,2,c
 33086  01E4DE  D011               	goto	u9090
 33087                           
 33088                           ;stkvar	_f1 @ sp[(-2)+-4]
 33089                           ;stkvar	_f1 @ sp[(-2)+-4]
 33090  01E4E0  0EFA               	movlw	-6
 33091  01E4E2  6CE3               	negf	plusw1,c
 33092  01E4E4  0EFB               	movlw	-5
 33093  01E4E6  1EE3               	comf	plusw1,f,c
 33094  01E4E8  0EFC               	movlw	-4
 33095  01E4EA  1EE3               	comf	plusw1,f,c
 33096  01E4EC  0EFD               	movlw	-3
 33097  01E4EE  1EE3               	comf	plusw1,f,c
 33098  01E4F0  E308               	bnc	u9090
 33099  01E4F2  0EFB               	movlw	-5
 33100  01E4F4  2AE3               	incf	plusw1,f,c
 33101  01E4F6  E305               	bnc	u9090
 33102  01E4F8  0EFC               	movlw	-4
 33103  01E4FA  2AE3               	incf	plusw1,f,c
 33104  01E4FC  E302               	bnc	u9090
 33105  01E4FE  0EFD               	movlw	-3
 33106  01E500  2AE3               	incf	plusw1,f,c
 33107  01E502                     u9090:
 33108                           
 33109                           ;stkvar	_f1 @ sp[(-2)+-4]
 33110  01E502  0EFA               	movlw	-6
 33111  01E504  006F FF8C  F02A    	movff	plusw1,btemp
 33112  01E50A  0EFB               	movlw	-5
 33113  01E50C  006F FF8C  F02B    	movff	plusw1,btemp+1
 33114  01E512  0EFC               	movlw	-4
 33115  01E514  006F FF8C  F02C    	movff	plusw1,btemp+2
 33116  01E51A  0EFD               	movlw	-3
 33117  01E51C  006F FF8C  F02D    	movff	plusw1,btemp+3
 33118  01E522                     l3019:
 33119                           
 33120                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 33121  01E522  0EFA               	movlw	250
 33122  01E524  26E1               	addwf	fsr1l,f,c
 33123  01E526  0EFF               	movlw	255
 33124  01E528  22E2               	addwfc	fsr1h,f,c
 33125  01E52A  0012               	return		;funcret
 33126  01E52C                     __end_of___fltol:
 33127                           	opt callstack 0
 33128                           
 33129 ;; *************** function ___flneg *****************
 33130 ;; Defined at:
 33131 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 33132 ;; Parameters:    Size  Location     Type
 33133 ;;  f1              4  [STACK] long 
 33134 ;; Auto vars:     Size  Location     Type
 33135 ;;		None
 33136 ;; Return value:  Size  Location     Type
 33137 ;;                  4  [STACK] long 
 33138 ;; Registers used:
 33139 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 33140 ;; Tracked objects:
 33141 ;;		On entry : 0/0
 33142 ;;		On exit  : 0/0
 33143 ;;		Unchanged: 0/0
 33144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33149 ;;Total ram usage:        0 bytes
 33150 ;; Hardware stack levels used:    1
 33151 ;; Hardware stack levels required when called:   15
 33152 ;; This function calls:
 33153 ;;		Nothing
 33154 ;; This function is called by:
 33155 ;;		_calc_bsoc
 33156 ;;		_efgtoa
 33157 ;; This function uses a reentrant model
 33158 ;;
 33159                           
 33160                           	psect	text110
 33161  00194C                     __ptext110:
 33162                           	opt callstack 0
 33163  00194C                     ___flneg:
 33164                           	opt callstack 0
 33165                           
 33166                           ;stkvar	_f1 @ sp[(0)+-4]
 33167                           
 33168                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33169                           ;incstack = 0
 33170 ;; hardware stack exceeded
 33171  00194C  0EFC               	movlw	-4
 33172  00194E  50E3               	movf	plusw1,w,c
 33173  001950  E10A               	bnz	u8990
 33174  001952  0EFD               	movlw	-3
 33175  001954  50E3               	movf	plusw1,w,c
 33176  001956  E107               	bnz	u8990
 33177  001958  0EFE               	movlw	-2
 33178  00195A  50E3               	movf	plusw1,w,c
 33179  00195C  E104               	bnz	u8990
 33180  00195E  0EFF               	movlw	-1
 33181  001960  50E3               	movf	plusw1,w,c
 33182  001962  B4D8               	btfsc	status,2,c
 33183  001964  D002               	goto	l10724
 33184  001966                     u8990:
 33185                           
 33186                           ;stkvar	_f1 @ sp[(0)+-4]
 33187  001966  0EFF               	movlw	-1
 33188  001968  7EE3               	btg	plusw1,7,c
 33189  00196A                     l10724:
 33190                           
 33191                           ;stkvar	_f1 @ sp[(0)+-4]
 33192  00196A  0EFC               	movlw	-4
 33193  00196C  006F FF8C  F02A    	movff	plusw1,btemp
 33194  001972  0EFD               	movlw	-3
 33195  001974  006F FF8C  F02B    	movff	plusw1,btemp+1
 33196  00197A  0EFE               	movlw	-2
 33197  00197C  006F FF8C  F02C    	movff	plusw1,btemp+2
 33198  001982  0EFF               	movlw	-1
 33199  001984  006F FF8C  F02D    	movff	plusw1,btemp+3
 33200                           
 33201                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 33202  00198A  52E5               	movf	postdec1,f,c
 33203  00198C  52E5               	movf	postdec1,f,c
 33204  00198E  52E5               	movf	postdec1,f,c
 33205  001990  52E5               	movf	postdec1,f,c
 33206  001992  0012               	return		;funcret
 33207  001994                     __end_of___flneg:
 33208                           	opt callstack 0
 33209                           
 33210 ;; *************** function ___fleq *****************
 33211 ;; Defined at:
 33212 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 33213 ;; Parameters:    Size  Location     Type
 33214 ;;  ff1             4  [STACK] long 
 33215 ;;  ff2             4  [STACK] long 
 33216 ;; Auto vars:     Size  Location     Type
 33217 ;;		None
 33218 ;; Return value:  Size  Location     Type
 33219 ;;		None               void
 33220 ;; Registers used:
 33221 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 33222 ;; Tracked objects:
 33223 ;;		On entry : 0/0
 33224 ;;		On exit  : 0/0
 33225 ;;		Unchanged: 0/0
 33226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33231 ;;Total ram usage:        0 bytes
 33232 ;; Hardware stack levels used:    1
 33233 ;; Hardware stack levels required when called:   15
 33234 ;; This function calls:
 33235 ;;		Nothing
 33236 ;; This function is called by:
 33237 ;;		_efgtoa
 33238 ;; This function uses a reentrant model
 33239 ;;
 33240                           
 33241                           	psect	text111
 33242  000258                     __ptext111:
 33243                           	opt callstack 0
 33244  000258                     ___fleq:
 33245                           	opt callstack 0
 33246                           
 33247                           ;stkvar	_ff1 @ sp[(0)+-4]
 33248                           
 33249                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33250                           ;incstack = 0
 33251 ;; hardware stack exceeded
 33252  000258  50E1               	movf	fsr1l,w,c
 33253  00025A  0FFC               	addlw	-4
 33254  00025C  6ED9               	movwf	fsr2l,c
 33255  00025E  50E2               	movf	fsr1h,w,c
 33256  000260  6EDA               	movwf	fsr2h,c
 33257  000262  0EFF               	movlw	255
 33258  000264  22DA               	addwfc	fsr2h,f,c
 33259  000266  0E00               	movlw	0
 33260  000268  14DE               	andwf	postinc2,w,c
 33261  00026A  6E32               	movwf	(btemp+8)^0,c
 33262  00026C  0E00               	movlw	0
 33263  00026E  14DE               	andwf	postinc2,w,c
 33264  000270  6E33               	movwf	(btemp+9)^0,c
 33265  000272  0E80               	movlw	128
 33266  000274  14DE               	andwf	postinc2,w,c
 33267  000276  6E34               	movwf	(btemp+10)^0,c
 33268  000278  0E7F               	movlw	127
 33269  00027A  14DE               	andwf	postinc2,w,c
 33270  00027C  6E35               	movwf	(btemp+11)^0,c
 33271  00027E  5032               	movf	(btemp+8)^0,w,c
 33272  000280  1033               	iorwf	(btemp+9)^0,w,c
 33273  000282  1034               	iorwf	(btemp+10)^0,w,c
 33274  000284  1035               	iorwf	(btemp+11)^0,w,c
 33275  000286  A4D8               	btfss	status,2,c
 33276  000288  D008               	goto	l10682
 33277                           
 33278                           ;stkvar	_ff1 @ sp[(0)+-4]
 33279  00028A  0EFC               	movlw	-4
 33280  00028C  6AE3               	clrf	plusw1,c
 33281  00028E  0EFD               	movlw	-3
 33282  000290  6AE3               	clrf	plusw1,c
 33283  000292  0EFE               	movlw	-2
 33284  000294  6AE3               	clrf	plusw1,c
 33285  000296  0EFF               	movlw	-1
 33286  000298  6AE3               	clrf	plusw1,c
 33287  00029A                     l10682:
 33288                           
 33289                           ;stkvar	_ff2 @ sp[(0)+-8]
 33290  00029A  50E1               	movf	fsr1l,w,c
 33291  00029C  0FF8               	addlw	-8
 33292  00029E  6ED9               	movwf	fsr2l,c
 33293  0002A0  50E2               	movf	fsr1h,w,c
 33294  0002A2  6EDA               	movwf	fsr2h,c
 33295  0002A4  0EFF               	movlw	255
 33296  0002A6  22DA               	addwfc	fsr2h,f,c
 33297  0002A8  0E00               	movlw	0
 33298  0002AA  14DE               	andwf	postinc2,w,c
 33299  0002AC  6E32               	movwf	(btemp+8)^0,c
 33300  0002AE  0E00               	movlw	0
 33301  0002B0  14DE               	andwf	postinc2,w,c
 33302  0002B2  6E33               	movwf	(btemp+9)^0,c
 33303  0002B4  0E80               	movlw	128
 33304  0002B6  14DE               	andwf	postinc2,w,c
 33305  0002B8  6E34               	movwf	(btemp+10)^0,c
 33306  0002BA  0E7F               	movlw	127
 33307  0002BC  14DE               	andwf	postinc2,w,c
 33308  0002BE  6E35               	movwf	(btemp+11)^0,c
 33309  0002C0  5032               	movf	(btemp+8)^0,w,c
 33310  0002C2  1033               	iorwf	(btemp+9)^0,w,c
 33311  0002C4  1034               	iorwf	(btemp+10)^0,w,c
 33312  0002C6  1035               	iorwf	(btemp+11)^0,w,c
 33313  0002C8  A4D8               	btfss	status,2,c
 33314  0002CA  D008               	goto	l10686
 33315                           
 33316                           ;stkvar	_ff2 @ sp[(0)+-8]
 33317  0002CC  0EF8               	movlw	-8
 33318  0002CE  6AE3               	clrf	plusw1,c
 33319  0002D0  0EF9               	movlw	-7
 33320  0002D2  6AE3               	clrf	plusw1,c
 33321  0002D4  0EFA               	movlw	-6
 33322  0002D6  6AE3               	clrf	plusw1,c
 33323  0002D8  0EFB               	movlw	-5
 33324  0002DA  6AE3               	clrf	plusw1,c
 33325  0002DC                     l10686:
 33326                           
 33327                           ;stkvar	_ff2 @ sp[(0)+-8]
 33328                           ;stkvar	_ff1 @ sp[(0)+-4]
 33329  0002DC  50E1               	movf	fsr1l,w,c
 33330  0002DE  0FFC               	addlw	-4
 33331  0002E0  6ED9               	movwf	fsr2l,c
 33332  0002E2  50E2               	movf	fsr1h,w,c
 33333  0002E4  6EDA               	movwf	fsr2h,c
 33334  0002E6  0EFF               	movlw	255
 33335  0002E8  22DA               	addwfc	fsr2h,f,c
 33336  0002EA  0EF8               	movlw	-8
 33337  0002EC  50E3               	movf	plusw1,w,c
 33338  0002EE  18DE               	xorwf	postinc2,w,c
 33339  0002F0  E10D               	bnz	u8930
 33340  0002F2  0EF9               	movlw	-7
 33341  0002F4  50E3               	movf	plusw1,w,c
 33342  0002F6  18DE               	xorwf	postinc2,w,c
 33343  0002F8  E109               	bnz	u8930
 33344  0002FA  0EFA               	movlw	-6
 33345  0002FC  50E3               	movf	plusw1,w,c
 33346  0002FE  18DE               	xorwf	postinc2,w,c
 33347  000300  E105               	bnz	u8930
 33348  000302  0EFB               	movlw	-5
 33349  000304  50E3               	movf	plusw1,w,c
 33350  000306  18DE               	xorwf	postinc2,w,c
 33351  000308  B4D8               	btfsc	status,2,c
 33352  00030A  D002               	goto	l10690
 33353  00030C                     u8930:
 33354  00030C  902A               	bcf	btemp& (0+255),0,c
 33355  00030E  D001               	goto	l2981
 33356  000310                     l10690:
 33357  000310  802A               	bsf	btemp& (0+255),0,c
 33358  000312                     l2981:
 33359                           
 33360                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 33361  000312  0EF8               	movlw	248
 33362  000314  26E1               	addwf	fsr1l,f,c
 33363  000316  0EFF               	movlw	255
 33364  000318  22E2               	addwfc	fsr1h,f,c
 33365  00031A  0012               	return		;funcret
 33366  00031C                     __end_of___fleq:
 33367                           	opt callstack 0
 33368                           
 33369 ;; *************** function ___awmod *****************
 33370 ;; Defined at:
 33371 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 33372 ;; Parameters:    Size  Location     Type
 33373 ;;  dividend        2  [STACK] int 
 33374 ;;  divisor         2  [STACK] int 
 33375 ;; Auto vars:     Size  Location     Type
 33376 ;;  sign            1  [STACK] unsigned char 
 33377 ;;  counter         1  [STACK] unsigned char 
 33378 ;; Return value:  Size  Location     Type
 33379 ;;                  2  [STACK] int 
 33380 ;; Registers used:
 33381 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 33382 ;; Tracked objects:
 33383 ;;		On entry : 0/3
 33384 ;;		On exit  : 0/0
 33385 ;;		Unchanged: 0/0
 33386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33391 ;;Total ram usage:        0 bytes
 33392 ;; Hardware stack levels used:    1
 33393 ;; Hardware stack levels required when called:   15
 33394 ;; This function calls:
 33395 ;;		Nothing
 33396 ;; This function is called by:
 33397 ;;		_efgtoa
 33398 ;;		_asctime
 33399 ;; This function uses a reentrant model
 33400 ;;
 33401                           
 33402                           	psect	text112
 33403  01F5C6                     __ptext112:
 33404                           	opt callstack 0
 33405  01F5C6                     ___awmod:
 33406                           	opt callstack 0
 33407                           
 33408                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33409  01F5C6  52E6               	movf	postinc1,f,c
 33410  01F5C8  52E6               	movf	postinc1,f,c
 33411                           
 33412                           ;stkvar	_sign @ sp[(-2)+0]
 33413                           
 33414                           ;incstack = 0
 33415 ;; hardware stack exceeded
 33416  01F5CA  0EFE               	movlw	-2
 33417  01F5CC  6AE3               	clrf	plusw1,c
 33418                           
 33419                           ;stkvar	_dividend @ sp[(-2)+-2]
 33420  01F5CE  0EFD               	movlw	-3
 33421  01F5D0  AEE3               	btfss	plusw1,7,c
 33422  01F5D2  D009               	goto	l15458
 33423                           
 33424                           ;stkvar	_dividend @ sp[(-2)+-2]
 33425                           ;stkvar	_dividend @ sp[(-2)+-2]
 33426  01F5D4  0EFC               	movlw	-4
 33427  01F5D6  6CE3               	negf	plusw1,c
 33428  01F5D8  0EFD               	movlw	-3
 33429  01F5DA  1EE3               	comf	plusw1,f,c
 33430  01F5DC  B0D8               	btfsc	status,0,c
 33431  01F5DE  2AE3               	incf	plusw1,f,c
 33432                           
 33433                           ;stkvar	_sign @ sp[(-2)+0]
 33434  01F5E0  0EFE               	movlw	-2
 33435  01F5E2  6AE3               	clrf	plusw1,c
 33436  01F5E4  2AE3               	incf	plusw1,f,c
 33437  01F5E6                     l15458:
 33438                           
 33439                           ;stkvar	_divisor @ sp[(-2)+-4]
 33440  01F5E6  0EFB               	movlw	-5
 33441  01F5E8  AEE3               	btfss	plusw1,7,c
 33442  01F5EA  D006               	goto	l15462
 33443                           
 33444                           ;stkvar	_divisor @ sp[(-2)+-4]
 33445                           ;stkvar	_divisor @ sp[(-2)+-4]
 33446  01F5EC  0EFA               	movlw	-6
 33447  01F5EE  6CE3               	negf	plusw1,c
 33448  01F5F0  0EFB               	movlw	-5
 33449  01F5F2  1EE3               	comf	plusw1,f,c
 33450  01F5F4  B0D8               	btfsc	status,0,c
 33451  01F5F6  2AE3               	incf	plusw1,f,c
 33452  01F5F8                     l15462:
 33453                           
 33454                           ;stkvar	_divisor @ sp[(-2)+-4]
 33455  01F5F8  0EFA               	movlw	-6
 33456  01F5FA  006F FF8C  F02A    	movff	plusw1,btemp
 33457  01F600  0EFB               	movlw	-5
 33458  01F602  50E3               	movf	plusw1,w,c
 33459  01F604  102A               	iorwf	btemp^0,w,c
 33460  01F606  B4D8               	btfsc	status,2,c
 33461  01F608  D053               	goto	u14460
 33462                           
 33463                           ;stkvar	_counter @ sp[(-2)+1]
 33464  01F60A  0EFF               	movlw	-1
 33465  01F60C  6AE3               	clrf	plusw1,c
 33466  01F60E  D012               	goto	L37
 33467  01F610                     l15466:
 33468                           
 33469                           ;stkvar	_divisor @ sp[(-2)+-4]
 33470  01F610  0EFA               	movlw	-6
 33471  01F612  50E3               	movf	plusw1,w,c
 33472  01F614  90D8               	bcf	status,0,c
 33473  01F616  34E8               	rlcf	wreg,w,c
 33474  01F618  6E2A               	movwf	btemp^0,c
 33475  01F61A  0EFA               	movlw	-6
 33476  01F61C  0060  F0AB  FFE3   	movff	btemp,plusw1
 33477  01F622  0EFB               	movlw	-5
 33478  01F624  50E3               	movf	plusw1,w,c
 33479  01F626  34E8               	rlcf	wreg,w,c
 33480  01F628  6E2A               	movwf	btemp^0,c
 33481  01F62A  0EFB               	movlw	-5
 33482  01F62C  0060  F0AB  FFE3   	movff	btemp,plusw1
 33483                           
 33484                           ;stkvar	_counter @ sp[(-2)+1]
 33485  01F632  0EFF               	movlw	-1
 33486  01F634                     L37:
 33487  01F634  2AE3               	incf	plusw1,f,c
 33488                           
 33489                           ;stkvar	_divisor @ sp[(-2)+-4]
 33490  01F636  0EFB               	movlw	-5
 33491  01F638  AEE3               	btfss	plusw1,7,c
 33492  01F63A  D7EA               	goto	l15466
 33493  01F63C                     u14440:
 33494                           
 33495                           ;stkvar	_divisor @ sp[(-2)+-4]
 33496  01F63C  0EFA               	movlw	-6
 33497  01F63E  006F FF8C  F034    	movff	plusw1,btemp+10
 33498  01F644  0EFB               	movlw	-5
 33499  01F646  006F FF8C  F035    	movff	plusw1,btemp+11
 33500                           
 33501                           ;stkvar	_dividend @ sp[(-2)+-2]
 33502  01F64C  0EFC               	movlw	-4
 33503  01F64E  006F FF8C  F032    	movff	plusw1,btemp+8
 33504  01F654  0EFD               	movlw	-3
 33505  01F656  006F FF8C  F033    	movff	plusw1,btemp+9
 33506  01F65C  5034               	movf	(btemp+10)^0,w,c
 33507  01F65E  5C32               	subwf	(btemp+8)^0,w,c
 33508  01F660  5035               	movf	(btemp+11)^0,w,c
 33509  01F662  5833               	subwfb	(btemp+9)^0,w,c
 33510  01F664  A0D8               	btfss	status,0,c
 33511  01F666  D014               	goto	l15476
 33512                           
 33513                           ;stkvar	_divisor @ sp[(-2)+-4]
 33514                           ;stkvar	_dividend @ sp[(-2)+-2]
 33515  01F668  0EFC               	movlw	-4
 33516  01F66A  50E3               	movf	plusw1,w,c
 33517  01F66C  6E2A               	movwf	btemp^0,c
 33518  01F66E  0EFA               	movlw	-6
 33519  01F670  50E3               	movf	plusw1,w,c
 33520  01F672  5E2A               	subwf	btemp^0,f,c
 33521  01F674  0EFC               	movlw	-4
 33522  01F676  0060  F0AB  FFE3   	movff	btemp,plusw1
 33523  01F67C  0EFD               	movlw	-3
 33524  01F67E  50E3               	movf	plusw1,w,c
 33525  01F680  6E2A               	movwf	btemp^0,c
 33526  01F682  0EFB               	movlw	-5
 33527  01F684  50E3               	movf	plusw1,w,c
 33528  01F686  5A2A               	subwfb	btemp^0,f,c
 33529  01F688  0EFD               	movlw	-3
 33530  01F68A  0060  F0AB  FFE3   	movff	btemp,plusw1
 33531  01F690                     l15476:
 33532                           
 33533                           ;stkvar	_divisor @ sp[(-2)+-4]
 33534  01F690  90D8               	bcf	status,0,c
 33535  01F692  0EFB               	movlw	-5
 33536  01F694  32E3               	rrcf	plusw1,f,c
 33537  01F696  0EFA               	movlw	-6
 33538  01F698  32E3               	rrcf	plusw1,f,c
 33539                           
 33540                           ;stkvar	_counter @ sp[(-2)+1]
 33541  01F69A  0EFF               	movlw	-1
 33542  01F69C  50E3               	movf	plusw1,w,c
 33543  01F69E  6E2A               	movwf	btemp^0,c
 33544  01F6A0  0E01               	movlw	1
 33545  01F6A2  5E2A               	subwf	btemp^0,f,c
 33546  01F6A4  0EFF               	movlw	-1
 33547  01F6A6  0060  F0AB  FFE3   	movff	btemp,plusw1
 33548  01F6AC  A4D8               	btfss	status,2,c
 33549  01F6AE  D7C6               	goto	u14440
 33550  01F6B0                     u14460:
 33551                           
 33552                           ;stkvar	_sign @ sp[(-2)+0]
 33553  01F6B0  0EFE               	movlw	-2
 33554  01F6B2  50E3               	movf	plusw1,w,c
 33555  01F6B4  B4D8               	btfsc	status,2,c
 33556  01F6B6  D006               	goto	l15484
 33557                           
 33558                           ;stkvar	_dividend @ sp[(-2)+-2]
 33559                           ;stkvar	_dividend @ sp[(-2)+-2]
 33560  01F6B8  0EFC               	movlw	-4
 33561  01F6BA  6CE3               	negf	plusw1,c
 33562  01F6BC  0EFD               	movlw	-3
 33563  01F6BE  1EE3               	comf	plusw1,f,c
 33564  01F6C0  B0D8               	btfsc	status,0,c
 33565  01F6C2  2AE3               	incf	plusw1,f,c
 33566  01F6C4                     l15484:
 33567                           
 33568                           ;stkvar	_dividend @ sp[(-2)+-2]
 33569  01F6C4  0EFC               	movlw	-4
 33570  01F6C6  006F FF8C  F02A    	movff	plusw1,btemp
 33571  01F6CC  0EFD               	movlw	-3
 33572  01F6CE  006F FF8C  F02B    	movff	plusw1,btemp+1
 33573                           
 33574                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 33575  01F6D4  0EFA               	movlw	250
 33576  01F6D6  26E1               	addwf	fsr1l,f,c
 33577  01F6D8  0EFF               	movlw	255
 33578  01F6DA  22E2               	addwfc	fsr1h,f,c
 33579  01F6DC  0012               	return		;funcret
 33580  01F6DE                     __end_of___awmod:
 33581                           	opt callstack 0
 33582                           
 33583 ;; *************** function ___awdiv *****************
 33584 ;; Defined at:
 33585 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 33586 ;; Parameters:    Size  Location     Type
 33587 ;;  dividend        2  [STACK] int 
 33588 ;;  divisor         2  [STACK] int 
 33589 ;; Auto vars:     Size  Location     Type
 33590 ;;  quotient        2  [STACK] int 
 33591 ;;  sign            1  [STACK] unsigned char 
 33592 ;;  counter         1  [STACK] unsigned char 
 33593 ;; Return value:  Size  Location     Type
 33594 ;;                  2  [STACK] int 
 33595 ;; Registers used:
 33596 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 33597 ;; Tracked objects:
 33598 ;;		On entry : 0/3
 33599 ;;		On exit  : 0/0
 33600 ;;		Unchanged: 0/0
 33601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33606 ;;Total ram usage:        0 bytes
 33607 ;; Hardware stack levels used:    1
 33608 ;; Hardware stack levels required when called:   15
 33609 ;; This function calls:
 33610 ;;		Nothing
 33611 ;; This function is called by:
 33612 ;;		_efgtoa
 33613 ;;		_put2d
 33614 ;;		_asctime
 33615 ;;		_scan_trans
 33616 ;; This function uses a reentrant model
 33617 ;;
 33618                           
 33619                           	psect	text113
 33620  01ED68                     __ptext113:
 33621                           	opt callstack 0
 33622  01ED68                     ___awdiv:
 33623                           	opt callstack 0
 33624                           
 33625                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33626  01ED68  52E6               	movf	postinc1,f,c
 33627  01ED6A  52E6               	movf	postinc1,f,c
 33628  01ED6C  52E6               	movf	postinc1,f,c
 33629  01ED6E  52E6               	movf	postinc1,f,c
 33630                           
 33631                           ;stkvar	_sign @ sp[(-4)+2]
 33632                           
 33633                           ;incstack = 0
 33634 ;; hardware stack exceeded
 33635  01ED70  0EFE               	movlw	-2
 33636  01ED72  6AE3               	clrf	plusw1,c
 33637                           
 33638                           ;stkvar	_divisor @ sp[(-4)+-4]
 33639  01ED74  0EF9               	movlw	-7
 33640  01ED76  AEE3               	btfss	plusw1,7,c
 33641  01ED78  D009               	goto	l15412
 33642                           
 33643                           ;stkvar	_divisor @ sp[(-4)+-4]
 33644                           ;stkvar	_divisor @ sp[(-4)+-4]
 33645  01ED7A  0EF8               	movlw	-8
 33646  01ED7C  6CE3               	negf	plusw1,c
 33647  01ED7E  0EF9               	movlw	-7
 33648  01ED80  1EE3               	comf	plusw1,f,c
 33649  01ED82  B0D8               	btfsc	status,0,c
 33650  01ED84  2AE3               	incf	plusw1,f,c
 33651                           
 33652                           ;stkvar	_sign @ sp[(-4)+2]
 33653  01ED86  0EFE               	movlw	-2
 33654  01ED88  6AE3               	clrf	plusw1,c
 33655  01ED8A  2AE3               	incf	plusw1,f,c
 33656  01ED8C                     l15412:
 33657                           
 33658                           ;stkvar	_dividend @ sp[(-4)+-2]
 33659  01ED8C  0EFB               	movlw	-5
 33660  01ED8E  AEE3               	btfss	plusw1,7,c
 33661  01ED90  D008               	goto	l15418
 33662                           
 33663                           ;stkvar	_dividend @ sp[(-4)+-2]
 33664                           ;stkvar	_dividend @ sp[(-4)+-2]
 33665  01ED92  0EFA               	movlw	-6
 33666  01ED94  6CE3               	negf	plusw1,c
 33667  01ED96  0EFB               	movlw	-5
 33668  01ED98  1EE3               	comf	plusw1,f,c
 33669  01ED9A  B0D8               	btfsc	status,0,c
 33670  01ED9C  2AE3               	incf	plusw1,f,c
 33671                           
 33672                           ;stkvar	_sign @ sp[(-4)+2]
 33673  01ED9E  0EFE               	movlw	-2
 33674  01EDA0  70E3               	btg	plusw1,0,c
 33675  01EDA2                     l15418:
 33676                           
 33677                           ;stkvar	_quotient @ sp[(-4)+0]
 33678  01EDA2  0EFC               	movlw	-4
 33679  01EDA4  6AE3               	clrf	plusw1,c
 33680  01EDA6  0EFD               	movlw	-3
 33681  01EDA8  6AE3               	clrf	plusw1,c
 33682                           
 33683                           ;stkvar	_divisor @ sp[(-4)+-4]
 33684  01EDAA  0EF8               	movlw	-8
 33685  01EDAC  006F FF8C  F02A    	movff	plusw1,btemp
 33686  01EDB2  0EF9               	movlw	-7
 33687  01EDB4  50E3               	movf	plusw1,w,c
 33688  01EDB6  102A               	iorwf	btemp^0,w,c
 33689  01EDB8  B4D8               	btfsc	status,2,c
 33690  01EDBA  D066               	goto	u14390
 33691                           
 33692                           ;stkvar	_counter @ sp[(-4)+3]
 33693  01EDBC  0EFF               	movlw	-1
 33694  01EDBE  6AE3               	clrf	plusw1,c
 33695  01EDC0  D012               	goto	L38
 33696  01EDC2                     l15424:
 33697                           
 33698                           ;stkvar	_divisor @ sp[(-4)+-4]
 33699  01EDC2  0EF8               	movlw	-8
 33700  01EDC4  50E3               	movf	plusw1,w,c
 33701  01EDC6  90D8               	bcf	status,0,c
 33702  01EDC8  34E8               	rlcf	wreg,w,c
 33703  01EDCA  6E2A               	movwf	btemp^0,c
 33704  01EDCC  0EF8               	movlw	-8
 33705  01EDCE  0060  F0AB  FFE3   	movff	btemp,plusw1
 33706  01EDD4  0EF9               	movlw	-7
 33707  01EDD6  50E3               	movf	plusw1,w,c
 33708  01EDD8  34E8               	rlcf	wreg,w,c
 33709  01EDDA  6E2A               	movwf	btemp^0,c
 33710  01EDDC  0EF9               	movlw	-7
 33711  01EDDE  0060  F0AB  FFE3   	movff	btemp,plusw1
 33712                           
 33713                           ;stkvar	_counter @ sp[(-4)+3]
 33714  01EDE4  0EFF               	movlw	-1
 33715  01EDE6                     L38:
 33716  01EDE6  2AE3               	incf	plusw1,f,c
 33717                           
 33718                           ;stkvar	_divisor @ sp[(-4)+-4]
 33719  01EDE8  0EF9               	movlw	-7
 33720  01EDEA  AEE3               	btfss	plusw1,7,c
 33721  01EDEC  D7EA               	goto	l15424
 33722  01EDEE                     u14370:
 33723                           
 33724                           ;stkvar	_quotient @ sp[(-4)+0]
 33725  01EDEE  0EFC               	movlw	-4
 33726  01EDF0  50E3               	movf	plusw1,w,c
 33727  01EDF2  90D8               	bcf	status,0,c
 33728  01EDF4  34E8               	rlcf	wreg,w,c
 33729  01EDF6  6E2A               	movwf	btemp^0,c
 33730  01EDF8  0EFC               	movlw	-4
 33731  01EDFA  0060  F0AB  FFE3   	movff	btemp,plusw1
 33732  01EE00  0EFD               	movlw	-3
 33733  01EE02  50E3               	movf	plusw1,w,c
 33734  01EE04  34E8               	rlcf	wreg,w,c
 33735  01EE06  6E2A               	movwf	btemp^0,c
 33736  01EE08  0EFD               	movlw	-3
 33737  01EE0A  0060  F0AB  FFE3   	movff	btemp,plusw1
 33738                           
 33739                           ;stkvar	_divisor @ sp[(-4)+-4]
 33740  01EE10  0EF8               	movlw	-8
 33741  01EE12  006F FF8C  F034    	movff	plusw1,btemp+10
 33742  01EE18  0EF9               	movlw	-7
 33743  01EE1A  006F FF8C  F035    	movff	plusw1,btemp+11
 33744                           
 33745                           ;stkvar	_dividend @ sp[(-4)+-2]
 33746  01EE20  0EFA               	movlw	-6
 33747  01EE22  006F FF8C  F032    	movff	plusw1,btemp+8
 33748  01EE28  0EFB               	movlw	-5
 33749  01EE2A  006F FF8C  F033    	movff	plusw1,btemp+9
 33750  01EE30  5034               	movf	(btemp+10)^0,w,c
 33751  01EE32  5C32               	subwf	(btemp+8)^0,w,c
 33752  01EE34  5035               	movf	(btemp+11)^0,w,c
 33753  01EE36  5833               	subwfb	(btemp+9)^0,w,c
 33754  01EE38  A0D8               	btfss	status,0,c
 33755  01EE3A  D016               	goto	l15438
 33756                           
 33757                           ;stkvar	_divisor @ sp[(-4)+-4]
 33758                           ;stkvar	_dividend @ sp[(-4)+-2]
 33759  01EE3C  0EFA               	movlw	-6
 33760  01EE3E  50E3               	movf	plusw1,w,c
 33761  01EE40  6E2A               	movwf	btemp^0,c
 33762  01EE42  0EF8               	movlw	-8
 33763  01EE44  50E3               	movf	plusw1,w,c
 33764  01EE46  5E2A               	subwf	btemp^0,f,c
 33765  01EE48  0EFA               	movlw	-6
 33766  01EE4A  0060  F0AB  FFE3   	movff	btemp,plusw1
 33767  01EE50  0EFB               	movlw	-5
 33768  01EE52  50E3               	movf	plusw1,w,c
 33769  01EE54  6E2A               	movwf	btemp^0,c
 33770  01EE56  0EF9               	movlw	-7
 33771  01EE58  50E3               	movf	plusw1,w,c
 33772  01EE5A  5A2A               	subwfb	btemp^0,f,c
 33773  01EE5C  0EFB               	movlw	-5
 33774  01EE5E  0060  F0AB  FFE3   	movff	btemp,plusw1
 33775                           
 33776                           ;stkvar	_quotient @ sp[(-4)+0]
 33777  01EE64  0EFC               	movlw	-4
 33778  01EE66  80E3               	bsf	plusw1,0,c
 33779  01EE68                     l15438:
 33780                           
 33781                           ;stkvar	_divisor @ sp[(-4)+-4]
 33782  01EE68  90D8               	bcf	status,0,c
 33783  01EE6A  0EF9               	movlw	-7
 33784  01EE6C  32E3               	rrcf	plusw1,f,c
 33785  01EE6E  0EF8               	movlw	-8
 33786  01EE70  32E3               	rrcf	plusw1,f,c
 33787                           
 33788                           ;stkvar	_counter @ sp[(-4)+3]
 33789  01EE72  0EFF               	movlw	-1
 33790  01EE74  50E3               	movf	plusw1,w,c
 33791  01EE76  6E2A               	movwf	btemp^0,c
 33792  01EE78  0E01               	movlw	1
 33793  01EE7A  5E2A               	subwf	btemp^0,f,c
 33794  01EE7C  0EFF               	movlw	-1
 33795  01EE7E  0060  F0AB  FFE3   	movff	btemp,plusw1
 33796  01EE84  A4D8               	btfss	status,2,c
 33797  01EE86  D7B3               	goto	u14370
 33798  01EE88                     u14390:
 33799                           
 33800                           ;stkvar	_sign @ sp[(-4)+2]
 33801  01EE88  0EFE               	movlw	-2
 33802  01EE8A  50E3               	movf	plusw1,w,c
 33803  01EE8C  B4D8               	btfsc	status,2,c
 33804  01EE8E  D006               	goto	l15446
 33805                           
 33806                           ;stkvar	_quotient @ sp[(-4)+0]
 33807                           ;stkvar	_quotient @ sp[(-4)+0]
 33808  01EE90  0EFC               	movlw	-4
 33809  01EE92  6CE3               	negf	plusw1,c
 33810  01EE94  0EFD               	movlw	-3
 33811  01EE96  1EE3               	comf	plusw1,f,c
 33812  01EE98  B0D8               	btfsc	status,0,c
 33813  01EE9A  2AE3               	incf	plusw1,f,c
 33814  01EE9C                     l15446:
 33815                           
 33816                           ;stkvar	_quotient @ sp[(-4)+0]
 33817  01EE9C  0EFC               	movlw	-4
 33818  01EE9E  006F FF8C  F02A    	movff	plusw1,btemp
 33819  01EEA4  0EFD               	movlw	-3
 33820  01EEA6  006F FF8C  F02B    	movff	plusw1,btemp+1
 33821                           
 33822                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 33823  01EEAC  0EF8               	movlw	248
 33824  01EEAE  26E1               	addwf	fsr1l,f,c
 33825  01EEB0  0EFF               	movlw	255
 33826  01EEB2  22E2               	addwfc	fsr1h,f,c
 33827  01EEB4  0012               	return		;funcret
 33828  01EEB6                     __end_of___awdiv:
 33829                           	opt callstack 0
 33830                           
 33831 ;; *************** function _dtoa *****************
 33832 ;; Defined at:
 33833 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 33834 ;; Parameters:    Size  Location     Type
 33835 ;;  fp              2  [STACK] PTR struct _IO_FILE
 33836 ;;		 -> f(6), NULL(0), 
 33837 ;;  d               8  [STACK] long long 
 33838 ;; Auto vars:     Size  Location     Type
 33839 ;;  n               8  [STACK] long long 
 33840 ;;  i               2  [STACK] int 
 33841 ;;  s               2  [STACK] int 
 33842 ;;  w               2  [STACK] int 
 33843 ;;  p               2  [STACK] int 
 33844 ;; Return value:  Size  Location     Type
 33845 ;;                  2  [STACK] int 
 33846 ;; Registers used:
 33847 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 33848 ;; Tracked objects:
 33849 ;;		On entry : 0/0
 33850 ;;		On exit  : 0/0
 33851 ;;		Unchanged: 0/0
 33852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33857 ;;Total ram usage:        0 bytes
 33858 ;; Hardware stack levels used:    1
 33859 ;; Hardware stack levels required when called:   20
 33860 ;; This function calls:
 33861 ;;		___aodiv
 33862 ;;		___aomod
 33863 ;;		_abs
 33864 ;;		_pad
 33865 ;; This function is called by:
 33866 ;;		_vfpfcnvrt
 33867 ;; This function uses a reentrant model
 33868 ;;
 33869                           
 33870                           	psect	text114
 33871  018B08                     __ptext114:
 33872                           	opt callstack 0
 33873  018B08                     _dtoa:
 33874                           	opt callstack 0
 33875                           
 33876                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 33877  018B08  0E12               	movlw	18
 33878  018B0A  26E1               	addwf	fsr1l,f,c
 33879  018B0C  0E00               	movlw	0
 33880  018B0E  22E2               	addwfc	fsr1h,f,c
 33881                           
 33882                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 33883                           ;stkvar	_d @ sp[(-18)+-10]
 33884                           
 33885                           ;incstack = 0
 33886 ;; hardware stack exceeded
 33887  018B10  0EE4               	movlw	228
 33888  018B12  24E1               	addwf	fsr1l,w,c
 33889  018B14  6ED9               	movwf	fsr2l,c
 33890  018B16  0EFF               	movlw	255
 33891  018B18  20E2               	addwfc	fsr1h,w,c
 33892  018B1A  6EDA               	movwf	fsr2h,c
 33893                           
 33894                           ;stkvar	_n @ sp[(-18)+2]
 33895  018B1C  0E08               	movlw	8
 33896  018B1E  6E2A               	movwf	btemp^0,c
 33897  018B20  0EF0               	movlw	-16
 33898  018B22                     us1450999:
 33899  018B22  006F FF7B FFE3     	movff	postinc2,plusw1
 33900  018B28  28E8               	incf	wreg,w,c
 33901  018B2A  2E2A               	decfsz	btemp^0,f,c
 33902  018B2C  D7FA               	bra	us1450999
 33903                           
 33904                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 33905                           ;stkvar	_n @ sp[(-18)+2]
 33906  018B2E  0EF7               	movlw	-9
 33907  018B30  AEE3               	btfss	plusw1,7,c
 33908  018B32  D002               	goto	u14510
 33909  018B34  0E01               	movlw	1
 33910  018B36  D001               	goto	u14520
 33911  018B38                     u14510:
 33912  018B38  0E00               	movlw	0
 33913  018B3A                     u14520:
 33914  018B3A  6E34               	movwf	(btemp+10)^0,c
 33915  018B3C  6A35               	clrf	(btemp+11)^0,c
 33916                           
 33917                           ;stkvar	_s @ sp[(-18)+12]
 33918  018B3E  0EFA               	movlw	-6
 33919  018B40  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33920  018B46  0EFB               	movlw	-5
 33921  018B48  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33922                           
 33923                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 33924                           ;stkvar	_s @ sp[(-18)+12]
 33925  018B4E  0EFA               	movlw	-6
 33926  018B50  006F FF8C  F02A    	movff	plusw1,btemp
 33927  018B56  0EFB               	movlw	-5
 33928  018B58  50E3               	movf	plusw1,w,c
 33929  018B5A  102A               	iorwf	btemp^0,w,c
 33930  018B5C  B4D8               	btfsc	status,2,c
 33931  018B5E  D025               	goto	u14540
 33932                           
 33933                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 33934                           ;stkvar	_n @ sp[(-18)+2]
 33935                           ;stkvar	_n @ sp[(-18)+2]
 33936  018B60  0EF0               	movlw	-16
 33937  018B62  6CE3               	negf	plusw1,c
 33938  018B64  0EF1               	movlw	-15
 33939  018B66  1EE3               	comf	plusw1,f,c
 33940  018B68  0EF2               	movlw	-14
 33941  018B6A  1EE3               	comf	plusw1,f,c
 33942  018B6C  0EF3               	movlw	-13
 33943  018B6E  1EE3               	comf	plusw1,f,c
 33944  018B70  0EF4               	movlw	-12
 33945  018B72  1EE3               	comf	plusw1,f,c
 33946  018B74  0EF5               	movlw	-11
 33947  018B76  1EE3               	comf	plusw1,f,c
 33948  018B78  0EF6               	movlw	-10
 33949  018B7A  1EE3               	comf	plusw1,f,c
 33950  018B7C  0EF7               	movlw	-9
 33951  018B7E  1EE3               	comf	plusw1,f,c
 33952  018B80  E314               	bnc	u14540
 33953  018B82  0EF1               	movlw	-15
 33954  018B84  2AE3               	incf	plusw1,f,c
 33955  018B86  E311               	bnc	u14540
 33956  018B88  0EF2               	movlw	-14
 33957  018B8A  2AE3               	incf	plusw1,f,c
 33958  018B8C  E30E               	bnc	u14540
 33959  018B8E  0EF3               	movlw	-13
 33960  018B90  2AE3               	incf	plusw1,f,c
 33961  018B92  E30B               	bnc	u14540
 33962  018B94  0EF4               	movlw	-12
 33963  018B96  2AE3               	incf	plusw1,f,c
 33964  018B98  E308               	bnc	u14540
 33965  018B9A  0EF5               	movlw	-11
 33966  018B9C  2AE3               	incf	plusw1,f,c
 33967  018B9E  E305               	bnc	u14540
 33968  018BA0  0EF6               	movlw	-10
 33969  018BA2  2AE3               	incf	plusw1,f,c
 33970  018BA4  E302               	bnc	u14540
 33971  018BA6  0EF7               	movlw	-9
 33972  018BA8  2AE3               	incf	plusw1,f,c
 33973  018BAA                     u14540:
 33974                           
 33975                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 33976  018BAA  AE4D               	btfss	(_prec+1)^0,7,c
 33977                           
 33978                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 33979  018BAC  924E               	bcf	_flags^0,1,c
 33980                           
 33981                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 33982  018BAE  BE4D               	btfsc	(_prec+1)^0,7,c
 33983  018BB0  D005               	goto	u14560
 33984  018BB2  504D               	movf	(_prec+1)^0,w,c
 33985  018BB4  E110               	bnz	l15524
 33986  018BB6  044C               	decf	_prec^0,w,c
 33987  018BB8  B0D8               	btfsc	status,0,c
 33988  018BBA  D00D               	goto	l15524
 33989  018BBC                     u14560:
 33990  018BBC  0E01               	movlw	1
 33991  018BBE  6E34               	movwf	(btemp+10)^0,c
 33992  018BC0  0E00               	movlw	0
 33993  018BC2  6E35               	movwf	(btemp+11)^0,c
 33994                           
 33995                           ;stkvar	_p @ sp[(-18)+16]
 33996  018BC4  0EFE               	movlw	-2
 33997  018BC6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33998  018BCC  0EFF               	movlw	-1
 33999  018BCE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 34000  018BD4  D008               	goto	l2485
 34001  018BD6                     l15524:
 34002                           
 34003                           ;stkvar	_p @ sp[(-18)+16]
 34004  018BD6  0EFE               	movlw	-2
 34005  018BD8  0060  F133  FFE3   	movff	_prec,plusw1
 34006  018BDE  0EFF               	movlw	-1
 34007  018BE0  0060  F137  FFE3   	movff	_prec+1,plusw1
 34008  018BE6                     l2485:
 34009                           
 34010                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 34011                           ;stkvar	_w @ sp[(-18)+14]
 34012  018BE6  0EFC               	movlw	-4
 34013  018BE8  0060  F12B  FFE3   	movff	_width,plusw1
 34014  018BEE  0EFD               	movlw	-3
 34015  018BF0  0060  F12F  FFE3   	movff	_width+1,plusw1
 34016                           
 34017                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 34018                           ;stkvar	_s @ sp[(-18)+12]
 34019  018BF6  0EFA               	movlw	-6
 34020  018BF8  006F FF8C  F02A    	movff	plusw1,btemp
 34021  018BFE  0EFB               	movlw	-5
 34022  018C00  50E3               	movf	plusw1,w,c
 34023  018C02  102A               	iorwf	btemp^0,w,c
 34024  018C04  A4D8               	btfss	status,2,c
 34025  018C06  D002               	goto	u14580
 34026  018C08  A44E               	btfss	_flags^0,2,c
 34027  018C0A  D00A               	goto	l15532
 34028  018C0C                     u14580:
 34029                           
 34030                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 34031                           ;stkvar	_w @ sp[(-18)+14]
 34032  018C0C  50E1               	movf	fsr1l,w,c
 34033  018C0E  0FFC               	addlw	-4
 34034  018C10  6ED9               	movwf	fsr2l,c
 34035  018C12  50E2               	movf	fsr1h,w,c
 34036  018C14  6EDA               	movwf	fsr2h,c
 34037  018C16  0EFF               	movlw	255
 34038  018C18  22DA               	addwfc	fsr2h,f,c
 34039  018C1A  06DE               	decf	postinc2,f,c
 34040  018C1C  0E00               	movlw	0
 34041  018C1E  5ADD               	subwfb	postdec2,f,c
 34042  018C20                     l15532:
 34043                           
 34044                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 34045  018C20  0E4F               	movlw	79
 34046  018C22  6E34               	movwf	(btemp+10)^0,c
 34047  018C24  0E00               	movlw	0
 34048  018C26  6E35               	movwf	(btemp+11)^0,c
 34049                           
 34050                           ;stkvar	_i @ sp[(-18)+10]
 34051  018C28  0EF8               	movlw	-8
 34052  018C2A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 34053  018C30  0EF9               	movlw	-7
 34054  018C32  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 34055                           
 34056                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 34057  018C38  0103               	movlb	3	; () banked
 34058  018C3A  6BA3               	clrf	(_dbuf+79)& (0+255),b
 34059                           
 34060                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 34061  018C3C  D109               	goto	l15546
 34062  018C3E                     l15536:
 34063                           
 34064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 34065                           ;stkvar	_i @ sp[(-18)+10]
 34066  018C3E  50E1               	movf	fsr1l,w,c
 34067  018C40  0FF8               	addlw	-8
 34068  018C42  6ED9               	movwf	fsr2l,c
 34069  018C44  50E2               	movf	fsr1h,w,c
 34070  018C46  6EDA               	movwf	fsr2h,c
 34071  018C48  0EFF               	movlw	255
 34072  018C4A  22DA               	addwfc	fsr2h,f,c
 34073  018C4C  06DE               	decf	postinc2,f,c
 34074  018C4E  0E00               	movlw	0
 34075  018C50  5ADD               	subwfb	postdec2,f,c
 34076                           
 34077                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 34078  018C52  0E0A               	movlw	10
 34079  018C54  6EE6               	movwf	postinc1,c
 34080  018C56  0E00               	movlw	0
 34081  018C58  6EE6               	movwf	postinc1,c
 34082  018C5A  0E00               	movlw	0
 34083  018C5C  6EE6               	movwf	postinc1,c
 34084  018C5E  0E00               	movlw	0
 34085  018C60  6EE6               	movwf	postinc1,c
 34086  018C62  0E00               	movlw	0
 34087  018C64  6EE6               	movwf	postinc1,c
 34088  018C66  0E00               	movlw	0
 34089  018C68  6EE6               	movwf	postinc1,c
 34090  018C6A  0E00               	movlw	0
 34091  018C6C  6EE6               	movwf	postinc1,c
 34092  018C6E  0E00               	movlw	0
 34093  018C70  6EE6               	movwf	postinc1,c
 34094                           
 34095                           ;stkvar	_n @ sp[(-26)+2]
 34096  018C72  50E1               	movf	fsr1l,w,c
 34097  018C74  0FE8               	addlw	-24
 34098  018C76  6ED9               	movwf	fsr2l,c
 34099  018C78  50E2               	movf	fsr1h,w,c
 34100  018C7A  6EDA               	movwf	fsr2h,c
 34101  018C7C  0EFF               	movlw	255
 34102  018C7E  22DA               	addwfc	fsr2h,f,c
 34103  018C80  006F FF7B FFE6     	movff	postinc2,postinc1
 34104  018C86  006F FF7B FFE6     	movff	postinc2,postinc1
 34105  018C8C  006F FF7B FFE6     	movff	postinc2,postinc1
 34106  018C92  006F FF7B FFE6     	movff	postinc2,postinc1
 34107  018C98  006F FF7B FFE6     	movff	postinc2,postinc1
 34108  018C9E  006F FF7B FFE6     	movff	postinc2,postinc1
 34109  018CA4  006F FF7B FFE6     	movff	postinc2,postinc1
 34110  018CAA  006F FF7B FFE6     	movff	postinc2,postinc1
 34111  018CB0  EC50  F0E4         	call	___aomod	;wreg free
 34112  018CB4  52E5               	movf	postdec1,f,c
 34113  018CB6  006F FF9C  F041    	movff	indf1,btemp+23
 34114  018CBC  52E5               	movf	postdec1,f,c
 34115  018CBE  006F FF9C  F040    	movff	indf1,btemp+22
 34116  018CC4  52E5               	movf	postdec1,f,c
 34117  018CC6  006F FF9C  F03F    	movff	indf1,btemp+21
 34118  018CCC  52E5               	movf	postdec1,f,c
 34119  018CCE  006F FF9C  F03E    	movff	indf1,btemp+20
 34120  018CD4  52E5               	movf	postdec1,f,c
 34121  018CD6  006F FF9C  F03D    	movff	indf1,btemp+19
 34122  018CDC  52E5               	movf	postdec1,f,c
 34123  018CDE  006F FF9C  F03C    	movff	indf1,btemp+18
 34124  018CE4  52E5               	movf	postdec1,f,c
 34125  018CE6  006F FF9C  F03B    	movff	indf1,btemp+17
 34126  018CEC  52E5               	movf	postdec1,f,c
 34127  018CEE  006F FF9C  F03A    	movff	indf1,btemp+16
 34128  018CF4  0EF8               	movlw	248
 34129  018CF6  26E1               	addwf	fsr1l,f,c
 34130  018CF8  0EFF               	movlw	255
 34131  018CFA  22E2               	addwfc	fsr1h,f,c
 34132  018CFC  0060  F0E8  F034   	movff	btemp+16,btemp+10
 34133  018D02  0060  F0EC  F035   	movff	btemp+17,btemp+11
 34134  018D08  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 34135  018D0E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 34136  018D14  EC59  F00D         	call	_abs	;wreg free
 34137  018D18  0E30               	movlw	48
 34138  018D1A  262A               	addwf	btemp^0,f,c
 34139                           
 34140                           ;stkvar	_i @ sp[(-18)+10]
 34141  018D1C  0EF8               	movlw	-8
 34142  018D1E  006F FF8C  F034    	movff	plusw1,btemp+10
 34143  018D24  0EF9               	movlw	-7
 34144  018D26  006F FF8C  F035    	movff	plusw1,btemp+11
 34145  018D2C  0E54               	movlw	low _dbuf
 34146  018D2E  2434               	addwf	(btemp+10)^0,w,c
 34147  018D30  6ED9               	movwf	fsr2l,c
 34148  018D32  0E03               	movlw	high _dbuf
 34149  018D34  2035               	addwfc	(btemp+11)^0,w,c
 34150  018D36  6EDA               	movwf	fsr2h,c
 34151  018D38  0060  F0AB  FFDF   	movff	btemp,indf2
 34152                           
 34153                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 34154                           ;stkvar	_p @ sp[(-18)+16]
 34155  018D3E  50E1               	movf	fsr1l,w,c
 34156  018D40  0FFE               	addlw	-2
 34157  018D42  6ED9               	movwf	fsr2l,c
 34158  018D44  50E2               	movf	fsr1h,w,c
 34159  018D46  6EDA               	movwf	fsr2h,c
 34160  018D48  0EFF               	movlw	255
 34161  018D4A  22DA               	addwfc	fsr2h,f,c
 34162  018D4C  06DE               	decf	postinc2,f,c
 34163  018D4E  0E00               	movlw	0
 34164  018D50  5ADD               	subwfb	postdec2,f,c
 34165                           
 34166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 34167                           ;stkvar	_w @ sp[(-18)+14]
 34168  018D52  50E1               	movf	fsr1l,w,c
 34169  018D54  0FFC               	addlw	-4
 34170  018D56  6ED9               	movwf	fsr2l,c
 34171  018D58  50E2               	movf	fsr1h,w,c
 34172  018D5A  6EDA               	movwf	fsr2h,c
 34173  018D5C  0EFF               	movlw	255
 34174  018D5E  22DA               	addwfc	fsr2h,f,c
 34175  018D60  06DE               	decf	postinc2,f,c
 34176  018D62  0E00               	movlw	0
 34177  018D64  5ADD               	subwfb	postdec2,f,c
 34178                           
 34179                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 34180  018D66  0E0A               	movlw	10
 34181  018D68  6EE6               	movwf	postinc1,c
 34182  018D6A  0E00               	movlw	0
 34183  018D6C  6EE6               	movwf	postinc1,c
 34184  018D6E  0E00               	movlw	0
 34185  018D70  6EE6               	movwf	postinc1,c
 34186  018D72  0E00               	movlw	0
 34187  018D74  6EE6               	movwf	postinc1,c
 34188  018D76  0E00               	movlw	0
 34189  018D78  6EE6               	movwf	postinc1,c
 34190  018D7A  0E00               	movlw	0
 34191  018D7C  6EE6               	movwf	postinc1,c
 34192  018D7E  0E00               	movlw	0
 34193  018D80  6EE6               	movwf	postinc1,c
 34194  018D82  0E00               	movlw	0
 34195  018D84  6EE6               	movwf	postinc1,c
 34196                           
 34197                           ;stkvar	_n @ sp[(-26)+2]
 34198  018D86  50E1               	movf	fsr1l,w,c
 34199  018D88  0FE8               	addlw	-24
 34200  018D8A  6ED9               	movwf	fsr2l,c
 34201  018D8C  50E2               	movf	fsr1h,w,c
 34202  018D8E  6EDA               	movwf	fsr2h,c
 34203  018D90  0EFF               	movlw	255
 34204  018D92  22DA               	addwfc	fsr2h,f,c
 34205  018D94  006F FF7B FFE6     	movff	postinc2,postinc1
 34206  018D9A  006F FF7B FFE6     	movff	postinc2,postinc1
 34207  018DA0  006F FF7B FFE6     	movff	postinc2,postinc1
 34208  018DA6  006F FF7B FFE6     	movff	postinc2,postinc1
 34209  018DAC  006F FF7B FFE6     	movff	postinc2,postinc1
 34210  018DB2  006F FF7B FFE6     	movff	postinc2,postinc1
 34211  018DB8  006F FF7B FFE6     	movff	postinc2,postinc1
 34212  018DBE  006F FF7B FFE6     	movff	postinc2,postinc1
 34213  018DC4  EC64  F0DE         	call	___aodiv	;wreg free
 34214  018DC8  52E5               	movf	postdec1,f,c
 34215  018DCA  006F FF9C  F041    	movff	indf1,btemp+23
 34216  018DD0  52E5               	movf	postdec1,f,c
 34217  018DD2  006F FF9C  F040    	movff	indf1,btemp+22
 34218  018DD8  52E5               	movf	postdec1,f,c
 34219  018DDA  006F FF9C  F03F    	movff	indf1,btemp+21
 34220  018DE0  52E5               	movf	postdec1,f,c
 34221  018DE2  006F FF9C  F03E    	movff	indf1,btemp+20
 34222  018DE8  52E5               	movf	postdec1,f,c
 34223  018DEA  006F FF9C  F03D    	movff	indf1,btemp+19
 34224  018DF0  52E5               	movf	postdec1,f,c
 34225  018DF2  006F FF9C  F03C    	movff	indf1,btemp+18
 34226  018DF8  52E5               	movf	postdec1,f,c
 34227  018DFA  006F FF9C  F03B    	movff	indf1,btemp+17
 34228  018E00  52E5               	movf	postdec1,f,c
 34229  018E02  006F FF9C  F03A    	movff	indf1,btemp+16
 34230  018E08  0EF8               	movlw	248
 34231  018E0A  26E1               	addwf	fsr1l,f,c
 34232  018E0C  0EFF               	movlw	255
 34233  018E0E  22E2               	addwfc	fsr1h,f,c
 34234                           
 34235                           ;stkvar	_n @ sp[(-18)+2]
 34236  018E10  0EF0               	movlw	-16
 34237  018E12  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 34238  018E18  0EF1               	movlw	-15
 34239  018E1A  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 34240  018E20  0EF2               	movlw	-14
 34241  018E22  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 34242  018E28  0EF3               	movlw	-13
 34243  018E2A  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 34244  018E30  0EF4               	movlw	-12
 34245  018E32  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 34246  018E38  0EF5               	movlw	-11
 34247  018E3A  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 34248  018E40  0EF6               	movlw	-10
 34249  018E42  0060  F103  FFE3   	movff	btemp+22,plusw1
 34250  018E48  0EF7               	movlw	-9
 34251  018E4A  0060  F107  FFE3   	movff	btemp+23,plusw1
 34252  018E50                     l15546:
 34253                           
 34254                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 34255                           ;stkvar	_i @ sp[(-18)+10]
 34256  018E50  0EF9               	movlw	-7
 34257  018E52  BEE3               	btfsc	plusw1,7,c
 34258  018E54  D036               	goto	u14630
 34259  018E56  0EF9               	movlw	-7
 34260  018E58  50E3               	movf	plusw1,w,c
 34261  018E5A  E104               	bnz	u14590
 34262  018E5C  0EF8               	movlw	-8
 34263  018E5E  04E3               	decf	plusw1,w,c
 34264  018E60  A0D8               	btfss	status,0,c
 34265  018E62  D02F               	goto	u14630
 34266  018E64                     u14590:
 34267                           
 34268                           ;stkvar	_n @ sp[(-18)+2]
 34269  018E64  0EF0               	movlw	-16
 34270  018E66  50E3               	movf	plusw1,w,c
 34271  018E68  E115               	bnz	u14601
 34272  018E6A  0EF1               	movlw	-15
 34273  018E6C  50E3               	movf	plusw1,w,c
 34274  018E6E  E112               	bnz	u14601
 34275  018E70  0EF2               	movlw	-14
 34276  018E72  50E3               	movf	plusw1,w,c
 34277  018E74  E10F               	bnz	u14601
 34278  018E76  0EF3               	movlw	-13
 34279  018E78  50E3               	movf	plusw1,w,c
 34280  018E7A  E10C               	bnz	u14601
 34281  018E7C  0EF4               	movlw	-12
 34282  018E7E  50E3               	movf	plusw1,w,c
 34283  018E80  E109               	bnz	u14601
 34284  018E82  0EF5               	movlw	-11
 34285  018E84  50E3               	movf	plusw1,w,c
 34286  018E86  E106               	bnz	u14601
 34287  018E88  0EF6               	movlw	-10
 34288  018E8A  50E3               	movf	plusw1,w,c
 34289  018E8C  E103               	bnz	u14601
 34290  018E8E  0EF7               	movlw	-9
 34291  018E90  50E3               	movf	plusw1,w,c
 34292  018E92  A4D8               	btfss	status,2,c
 34293  018E94                     u14601:
 34294  018E94  D6D4               	goto	l15536
 34295                           
 34296                           ;stkvar	_p @ sp[(-18)+16]
 34297  018E96  0EFF               	movlw	-1
 34298  018E98  BEE3               	btfsc	plusw1,7,c
 34299  018E9A  D007               	goto	u14610
 34300  018E9C  0EFF               	movlw	-1
 34301  018E9E  50E3               	movf	plusw1,w,c
 34302  018EA0  E103               	bnz	u14611
 34303  018EA2  0EFE               	movlw	-2
 34304  018EA4  04E3               	decf	plusw1,w,c
 34305  018EA6  B0D8               	btfsc	status,0,c
 34306  018EA8                     u14611:
 34307  018EA8  D6CA               	goto	l15536
 34308  018EAA                     u14610:
 34309                           
 34310                           ;stkvar	_w @ sp[(-18)+14]
 34311  018EAA  0EFD               	movlw	-3
 34312  018EAC  BEE3               	btfsc	plusw1,7,c
 34313  018EAE  D009               	goto	u14630
 34314  018EB0  0EFD               	movlw	-3
 34315  018EB2  50E3               	movf	plusw1,w,c
 34316  018EB4  E104               	bnz	u14620
 34317  018EB6  0EFC               	movlw	-4
 34318  018EB8  04E3               	decf	plusw1,w,c
 34319  018EBA  A0D8               	btfss	status,0,c
 34320  018EBC  D002               	goto	u14630
 34321  018EBE                     u14620:
 34322  018EBE  B24E               	btfsc	_flags^0,1,c
 34323  018EC0  D6BE               	goto	l15536
 34324  018EC2                     u14630:
 34325                           
 34326                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 34327                           ;stkvar	_s @ sp[(-18)+12]
 34328  018EC2  0EFA               	movlw	-6
 34329  018EC4  006F FF8C  F02A    	movff	plusw1,btemp
 34330  018ECA  0EFB               	movlw	-5
 34331  018ECC  50E3               	movf	plusw1,w,c
 34332  018ECE  102A               	iorwf	btemp^0,w,c
 34333  018ED0  A4D8               	btfss	status,2,c
 34334  018ED2  D002               	goto	u14650
 34335  018ED4  A44E               	btfss	_flags^0,2,c
 34336  018ED6  D033               	goto	l15570
 34337  018ED8                     u14650:
 34338                           
 34339                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 34340                           ;stkvar	_i @ sp[(-18)+10]
 34341  018ED8  50E1               	movf	fsr1l,w,c
 34342  018EDA  0FF8               	addlw	-8
 34343  018EDC  6ED9               	movwf	fsr2l,c
 34344  018EDE  50E2               	movf	fsr1h,w,c
 34345  018EE0  6EDA               	movwf	fsr2h,c
 34346  018EE2  0EFF               	movlw	255
 34347  018EE4  22DA               	addwfc	fsr2h,f,c
 34348  018EE6  06DE               	decf	postinc2,f,c
 34349  018EE8  0E00               	movlw	0
 34350  018EEA  5ADD               	subwfb	postdec2,f,c
 34351                           
 34352                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 34353                           ;stkvar	_s @ sp[(-18)+12]
 34354  018EEC  0EFA               	movlw	-6
 34355  018EEE  006F FF8C  F02A    	movff	plusw1,btemp
 34356  018EF4  0EFB               	movlw	-5
 34357  018EF6  50E3               	movf	plusw1,w,c
 34358  018EF8  102A               	iorwf	btemp^0,w,c
 34359  018EFA  A4D8               	btfss	status,2,c
 34360  018EFC  D002               	goto	l15566
 34361  018EFE  0E2B               	movlw	43
 34362  018F00  D001               	goto	L39
 34363  018F02                     l15566:
 34364  018F02  0E2D               	movlw	45
 34365  018F04                     L39:
 34366  018F04  6E34               	movwf	(btemp+10)^0,c
 34367  018F06  0E00               	movlw	0
 34368  018F08  6E35               	movwf	(btemp+11)^0,c
 34369                           
 34370                           ;stkvar	_dtoa$6585 @ sp[(-18)+0]
 34371  018F0A  0EEE               	movlw	-18
 34372  018F0C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 34373  018F12  0EEF               	movlw	-17
 34374  018F14  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 34375                           
 34376                           ;stkvar	_dtoa$6585 @ sp[(-18)+0]
 34377                           ;stkvar	_i @ sp[(-18)+10]
 34378  018F1A  0EF8               	movlw	-8
 34379  018F1C  006F FF8C  F034    	movff	plusw1,btemp+10
 34380  018F22  0EF9               	movlw	-7
 34381  018F24  006F FF8C  F035    	movff	plusw1,btemp+11
 34382  018F2A  0E54               	movlw	low _dbuf
 34383  018F2C  2434               	addwf	(btemp+10)^0,w,c
 34384  018F2E  6ED9               	movwf	fsr2l,c
 34385  018F30  0E03               	movlw	high _dbuf
 34386  018F32  2035               	addwfc	(btemp+11)^0,w,c
 34387  018F34  6EDA               	movwf	fsr2h,c
 34388  018F36  0EEE               	movlw	-18
 34389  018F38  006F FF8F FFDF     	movff	plusw1,indf2
 34390  018F3E                     l15570:
 34391                           
 34392                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 34393                           ;stkvar	_w @ sp[(-18)+14]
 34394  018F3E  0EFC               	movlw	-4
 34395  018F40  006F FF8F FFE6     	movff	plusw1,postinc1
 34396  018F46  006F FF8F FFE6     	movff	plusw1,postinc1
 34397                           
 34398                           ;stkvar	_i @ sp[(-20)+10]
 34399  018F4C  0E54               	movlw	low _dbuf
 34400  018F4E  6E34               	movwf	(btemp+10)^0,c
 34401  018F50  0E03               	movlw	high _dbuf
 34402  018F52  6E35               	movwf	(btemp+11)^0,c
 34403  018F54  0EF6               	movlw	-10
 34404  018F56  50E3               	movf	plusw1,w,c
 34405  018F58  2634               	addwf	(btemp+10)^0,f,c
 34406  018F5A  0EF7               	movlw	-9
 34407  018F5C  50E3               	movf	plusw1,w,c
 34408  018F5E  2235               	addwfc	(btemp+11)^0,f,c
 34409  018F60  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 34410  018F66  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 34411                           
 34412                           ;stkvar	_fp @ sp[(-22)+-2]
 34413  018F6C  0EE8               	movlw	-24
 34414  018F6E  006F FF8F FFE6     	movff	plusw1,postinc1
 34415  018F74  006F FF8F FFE6     	movff	plusw1,postinc1
 34416  018F7A  EC6F  F0FB         	call	_pad	;wreg free
 34417                           
 34418                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 34419  018F7E  0EE4               	movlw	228
 34420  018F80  26E1               	addwf	fsr1l,f,c
 34421  018F82  0EFF               	movlw	255
 34422  018F84  22E2               	addwfc	fsr1h,f,c
 34423  018F86  0012               	return		;funcret
 34424  018F88                     __end_of_dtoa:
 34425                           	opt callstack 0
 34426                           
 34427 ;; *************** function _abs *****************
 34428 ;; Defined at:
 34429 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 34430 ;; Parameters:    Size  Location     Type
 34431 ;;  a               2  [STACK] int 
 34432 ;; Auto vars:     Size  Location     Type
 34433 ;;		None
 34434 ;; Return value:  Size  Location     Type
 34435 ;;                  2  [STACK] int 
 34436 ;; Registers used:
 34437 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 34438 ;; Tracked objects:
 34439 ;;		On entry : 0/3
 34440 ;;		On exit  : 0/0
 34441 ;;		Unchanged: 0/0
 34442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34447 ;;Total ram usage:        0 bytes
 34448 ;; Hardware stack levels used:    1
 34449 ;; Hardware stack levels required when called:   15
 34450 ;; This function calls:
 34451 ;;		Nothing
 34452 ;; This function is called by:
 34453 ;;		_dtoa
 34454 ;; This function uses a reentrant model
 34455 ;;
 34456                           
 34457                           	psect	text115
 34458  001AB2                     __ptext115:
 34459                           	opt callstack 0
 34460  001AB2                     _abs:
 34461                           	opt callstack 0
 34462                           
 34463                           ;stkvar	_a @ sp[(0)+-2]
 34464                           
 34465                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34466                           ;incstack = 0
 34467 ;; hardware stack exceeded
 34468  001AB2  0EFF               	movlw	-1
 34469  001AB4  BEE3               	btfsc	plusw1,7,c
 34470  001AB6  D007               	goto	u7720
 34471  001AB8  0EFF               	movlw	-1
 34472  001ABA  50E3               	movf	plusw1,w,c
 34473  001ABC  E112               	bnz	l10064
 34474  001ABE  0EFE               	movlw	-2
 34475  001AC0  04E3               	decf	plusw1,w,c
 34476  001AC2  B0D8               	btfsc	status,0,c
 34477  001AC4  D00E               	goto	l10064
 34478  001AC6                     u7720:
 34479                           
 34480                           ;stkvar	_a @ sp[(0)+-2]
 34481  001AC6  0EFE               	movlw	-2
 34482  001AC8  006F FF8C  F02A    	movff	plusw1,btemp
 34483  001ACE  1E2A               	comf	btemp^0,f,c
 34484  001AD0  0EFF               	movlw	-1
 34485  001AD2  006F FF8C  F02B    	movff	plusw1,btemp+1
 34486  001AD8  1E2B               	comf	(btemp+1)^0,f,c
 34487  001ADA  2A2A               	incf	btemp^0,f,c
 34488  001ADC  B4D8               	btfsc	status,2,c
 34489  001ADE  2A2B               	incf	(btemp+1)^0,f,c
 34490  001AE0  D008               	goto	l3411
 34491  001AE2                     l10064:
 34492                           
 34493                           ;stkvar	_a @ sp[(0)+-2]
 34494  001AE2  0EFE               	movlw	-2
 34495  001AE4  006F FF8C  F02A    	movff	plusw1,btemp
 34496  001AEA  0EFF               	movlw	-1
 34497  001AEC  006F FF8C  F02B    	movff	plusw1,btemp+1
 34498  001AF2                     l3411:
 34499                           
 34500                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 34501  001AF2  52E5               	movf	postdec1,f,c
 34502  001AF4  52E5               	movf	postdec1,f,c
 34503  001AF6  0012               	return		;funcret
 34504  001AF8                     __end_of_abs:
 34505                           	opt callstack 0
 34506                           
 34507 ;; *************** function ___aomod *****************
 34508 ;; Defined at:
 34509 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 34510 ;; Parameters:    Size  Location     Type
 34511 ;;  dividend        8  [STACK] long long 
 34512 ;;  divisor         8  [STACK] long long 
 34513 ;; Auto vars:     Size  Location     Type
 34514 ;;  sign            1  [STACK] unsigned char 
 34515 ;;  counter         1  [STACK] unsigned char 
 34516 ;; Return value:  Size  Location     Type
 34517 ;;                  8  [STACK] long long 
 34518 ;; Registers used:
 34519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 34520 ;; Tracked objects:
 34521 ;;		On entry : 0/0
 34522 ;;		On exit  : 0/0
 34523 ;;		Unchanged: 0/0
 34524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34529 ;;Total ram usage:        0 bytes
 34530 ;; Hardware stack levels used:    1
 34531 ;; Hardware stack levels required when called:   15
 34532 ;; This function calls:
 34533 ;;		Nothing
 34534 ;; This function is called by:
 34535 ;;		_dtoa
 34536 ;;		___secs_to_tm
 34537 ;;		_rule_to_secs
 34538 ;;		___year_to_secs
 34539 ;; This function uses a reentrant model
 34540 ;;
 34541                           
 34542                           	psect	text116
 34543  01C8A0                     __ptext116:
 34544                           	opt callstack 0
 34545  01C8A0                     ___aomod:
 34546                           	opt callstack 0
 34547                           
 34548                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 34549  01C8A0  52E6               	movf	postinc1,f,c
 34550  01C8A2  52E6               	movf	postinc1,f,c
 34551                           
 34552                           ;stkvar	_sign @ sp[(-2)+0]
 34553                           
 34554                           ;incstack = 0
 34555 ;; hardware stack exceeded
 34556  01C8A4  0EFE               	movlw	-2
 34557  01C8A6  6AE3               	clrf	plusw1,c
 34558                           
 34559                           ;stkvar	_dividend @ sp[(-2)+-8]
 34560  01C8A8  0EFD               	movlw	-3
 34561  01C8AA  AEE3               	btfss	plusw1,7,c
 34562  01C8AC  D028               	goto	l10248
 34563                           
 34564                           ;stkvar	_dividend @ sp[(-2)+-8]
 34565                           ;stkvar	_dividend @ sp[(-2)+-8]
 34566  01C8AE  0EF6               	movlw	-10
 34567  01C8B0  6CE3               	negf	plusw1,c
 34568  01C8B2  0EF7               	movlw	-9
 34569  01C8B4  1EE3               	comf	plusw1,f,c
 34570  01C8B6  0EF8               	movlw	-8
 34571  01C8B8  1EE3               	comf	plusw1,f,c
 34572  01C8BA  0EF9               	movlw	-7
 34573  01C8BC  1EE3               	comf	plusw1,f,c
 34574  01C8BE  0EFA               	movlw	-6
 34575  01C8C0  1EE3               	comf	plusw1,f,c
 34576  01C8C2  0EFB               	movlw	-5
 34577  01C8C4  1EE3               	comf	plusw1,f,c
 34578  01C8C6  0EFC               	movlw	-4
 34579  01C8C8  1EE3               	comf	plusw1,f,c
 34580  01C8CA  0EFD               	movlw	-3
 34581  01C8CC  1EE3               	comf	plusw1,f,c
 34582  01C8CE  E314               	bnc	u8210
 34583  01C8D0  0EF7               	movlw	-9
 34584  01C8D2  2AE3               	incf	plusw1,f,c
 34585  01C8D4  E311               	bnc	u8210
 34586  01C8D6  0EF8               	movlw	-8
 34587  01C8D8  2AE3               	incf	plusw1,f,c
 34588  01C8DA  E30E               	bnc	u8210
 34589  01C8DC  0EF9               	movlw	-7
 34590  01C8DE  2AE3               	incf	plusw1,f,c
 34591  01C8E0  E30B               	bnc	u8210
 34592  01C8E2  0EFA               	movlw	-6
 34593  01C8E4  2AE3               	incf	plusw1,f,c
 34594  01C8E6  E308               	bnc	u8210
 34595  01C8E8  0EFB               	movlw	-5
 34596  01C8EA  2AE3               	incf	plusw1,f,c
 34597  01C8EC  E305               	bnc	u8210
 34598  01C8EE  0EFC               	movlw	-4
 34599  01C8F0  2AE3               	incf	plusw1,f,c
 34600  01C8F2  E302               	bnc	u8210
 34601  01C8F4  0EFD               	movlw	-3
 34602  01C8F6  2AE3               	incf	plusw1,f,c
 34603  01C8F8                     u8210:
 34604                           
 34605                           ;stkvar	_sign @ sp[(-2)+0]
 34606  01C8F8  0EFE               	movlw	-2
 34607  01C8FA  6AE3               	clrf	plusw1,c
 34608  01C8FC  2AE3               	incf	plusw1,f,c
 34609  01C8FE                     l10248:
 34610                           
 34611                           ;stkvar	_divisor @ sp[(-2)+-16]
 34612  01C8FE  0EF5               	movlw	-11
 34613  01C900  AEE3               	btfss	plusw1,7,c
 34614  01C902  D025               	goto	u8230
 34615                           
 34616                           ;stkvar	_divisor @ sp[(-2)+-16]
 34617                           ;stkvar	_divisor @ sp[(-2)+-16]
 34618  01C904  0EEE               	movlw	-18
 34619  01C906  6CE3               	negf	plusw1,c
 34620  01C908  0EEF               	movlw	-17
 34621  01C90A  1EE3               	comf	plusw1,f,c
 34622  01C90C  0EF0               	movlw	-16
 34623  01C90E  1EE3               	comf	plusw1,f,c
 34624  01C910  0EF1               	movlw	-15
 34625  01C912  1EE3               	comf	plusw1,f,c
 34626  01C914  0EF2               	movlw	-14
 34627  01C916  1EE3               	comf	plusw1,f,c
 34628  01C918  0EF3               	movlw	-13
 34629  01C91A  1EE3               	comf	plusw1,f,c
 34630  01C91C  0EF4               	movlw	-12
 34631  01C91E  1EE3               	comf	plusw1,f,c
 34632  01C920  0EF5               	movlw	-11
 34633  01C922  1EE3               	comf	plusw1,f,c
 34634  01C924  E314               	bnc	u8230
 34635  01C926  0EEF               	movlw	-17
 34636  01C928  2AE3               	incf	plusw1,f,c
 34637  01C92A  E311               	bnc	u8230
 34638  01C92C  0EF0               	movlw	-16
 34639  01C92E  2AE3               	incf	plusw1,f,c
 34640  01C930  E30E               	bnc	u8230
 34641  01C932  0EF1               	movlw	-15
 34642  01C934  2AE3               	incf	plusw1,f,c
 34643  01C936  E30B               	bnc	u8230
 34644  01C938  0EF2               	movlw	-14
 34645  01C93A  2AE3               	incf	plusw1,f,c
 34646  01C93C  E308               	bnc	u8230
 34647  01C93E  0EF3               	movlw	-13
 34648  01C940  2AE3               	incf	plusw1,f,c
 34649  01C942  E305               	bnc	u8230
 34650  01C944  0EF4               	movlw	-12
 34651  01C946  2AE3               	incf	plusw1,f,c
 34652  01C948  E302               	bnc	u8230
 34653  01C94A  0EF5               	movlw	-11
 34654  01C94C  2AE3               	incf	plusw1,f,c
 34655  01C94E                     u8230:
 34656                           
 34657                           ;stkvar	_divisor @ sp[(-2)+-16]
 34658  01C94E  0EEE               	movlw	-18
 34659  01C950  50E3               	movf	plusw1,w,c
 34660  01C952  E116               	bnz	u8240
 34661  01C954  0EEF               	movlw	-17
 34662  01C956  50E3               	movf	plusw1,w,c
 34663  01C958  E113               	bnz	u8240
 34664  01C95A  0EF0               	movlw	-16
 34665  01C95C  50E3               	movf	plusw1,w,c
 34666  01C95E  E110               	bnz	u8240
 34667  01C960  0EF1               	movlw	-15
 34668  01C962  50E3               	movf	plusw1,w,c
 34669  01C964  E10D               	bnz	u8240
 34670  01C966  0EF2               	movlw	-14
 34671  01C968  50E3               	movf	plusw1,w,c
 34672  01C96A  E10A               	bnz	u8240
 34673  01C96C  0EF3               	movlw	-13
 34674  01C96E  50E3               	movf	plusw1,w,c
 34675  01C970  E107               	bnz	u8240
 34676  01C972  0EF4               	movlw	-12
 34677  01C974  50E3               	movf	plusw1,w,c
 34678  01C976  E104               	bnz	u8240
 34679  01C978  0EF5               	movlw	-11
 34680  01C97A  50E3               	movf	plusw1,w,c
 34681  01C97C  B4D8               	btfsc	status,2,c
 34682  01C97E  D075               	goto	u8270
 34683  01C980                     u8240:
 34684                           
 34685                           ;stkvar	_counter @ sp[(-2)+1]
 34686  01C980  0EFF               	movlw	-1
 34687  01C982  6AE3               	clrf	plusw1,c
 34688  01C984  D012               	goto	L40
 34689  01C986                     l10256:
 34690                           
 34691                           ;stkvar	_divisor @ sp[(-2)+-16]
 34692  01C986  90D8               	bcf	status,0,c
 34693  01C988  0EEE               	movlw	-18
 34694  01C98A  36E3               	rlcf	plusw1,f,c
 34695  01C98C  0EEF               	movlw	-17
 34696  01C98E  36E3               	rlcf	plusw1,f,c
 34697  01C990  0EF0               	movlw	-16
 34698  01C992  36E3               	rlcf	plusw1,f,c
 34699  01C994  0EF1               	movlw	-15
 34700  01C996  36E3               	rlcf	plusw1,f,c
 34701  01C998  0EF2               	movlw	-14
 34702  01C99A  36E3               	rlcf	plusw1,f,c
 34703  01C99C  0EF3               	movlw	-13
 34704  01C99E  36E3               	rlcf	plusw1,f,c
 34705  01C9A0  0EF4               	movlw	-12
 34706  01C9A2  36E3               	rlcf	plusw1,f,c
 34707  01C9A4  0EF5               	movlw	-11
 34708  01C9A6  36E3               	rlcf	plusw1,f,c
 34709                           
 34710                           ;stkvar	_counter @ sp[(-2)+1]
 34711  01C9A8  0EFF               	movlw	-1
 34712  01C9AA                     L40:
 34713  01C9AA  2AE3               	incf	plusw1,f,c
 34714                           
 34715                           ;stkvar	_divisor @ sp[(-2)+-16]
 34716  01C9AC  0EF5               	movlw	-11
 34717  01C9AE  AEE3               	btfss	plusw1,7,c
 34718  01C9B0  D7EA               	goto	l10256
 34719  01C9B2                     u8250:
 34720                           
 34721                           ;stkvar	_divisor @ sp[(-2)+-16]
 34722                           ;stkvar	_dividend @ sp[(-2)+-8]
 34723  01C9B2  50E1               	movf	fsr1l,w,c
 34724  01C9B4  0FF6               	addlw	-10
 34725  01C9B6  6ED9               	movwf	fsr2l,c
 34726  01C9B8  50E2               	movf	fsr1h,w,c
 34727  01C9BA  6EDA               	movwf	fsr2h,c
 34728  01C9BC  0EFF               	movlw	255
 34729  01C9BE  22DA               	addwfc	fsr2h,f,c
 34730  01C9C0  0EEE               	movlw	-18
 34731  01C9C2  50E3               	movf	plusw1,w,c
 34732  01C9C4  5CDE               	subwf	postinc2,w,c
 34733  01C9C6  0EEF               	movlw	-17
 34734  01C9C8  50E3               	movf	plusw1,w,c
 34735  01C9CA  58DE               	subwfb	postinc2,w,c
 34736  01C9CC  0EF0               	movlw	-16
 34737  01C9CE  50E3               	movf	plusw1,w,c
 34738  01C9D0  58DE               	subwfb	postinc2,w,c
 34739  01C9D2  0EF1               	movlw	-15
 34740  01C9D4  50E3               	movf	plusw1,w,c
 34741  01C9D6  58DE               	subwfb	postinc2,w,c
 34742  01C9D8  0EF2               	movlw	-14
 34743  01C9DA  50E3               	movf	plusw1,w,c
 34744  01C9DC  58DE               	subwfb	postinc2,w,c
 34745  01C9DE  0EF3               	movlw	-13
 34746  01C9E0  50E3               	movf	plusw1,w,c
 34747  01C9E2  58DE               	subwfb	postinc2,w,c
 34748  01C9E4  0EF4               	movlw	-12
 34749  01C9E6  50E3               	movf	plusw1,w,c
 34750  01C9E8  58DE               	subwfb	postinc2,w,c
 34751  01C9EA  0EF5               	movlw	-11
 34752  01C9EC  50E3               	movf	plusw1,w,c
 34753  01C9EE  58DE               	subwfb	postinc2,w,c
 34754  01C9F0  A0D8               	btfss	status,0,c
 34755  01C9F2  D01F               	goto	l10264
 34756                           
 34757                           ;stkvar	_divisor @ sp[(-2)+-16]
 34758                           ;stkvar	_dividend @ sp[(-2)+-8]
 34759  01C9F4  50E1               	movf	fsr1l,w,c
 34760  01C9F6  0FF6               	addlw	-10
 34761  01C9F8  6ED9               	movwf	fsr2l,c
 34762  01C9FA  50E2               	movf	fsr1h,w,c
 34763  01C9FC  6EDA               	movwf	fsr2h,c
 34764  01C9FE  0EFF               	movlw	255
 34765  01CA00  22DA               	addwfc	fsr2h,f,c
 34766  01CA02  0EEE               	movlw	-18
 34767  01CA04  50E3               	movf	plusw1,w,c
 34768  01CA06  5EDE               	subwf	postinc2,f,c
 34769  01CA08  0EEF               	movlw	-17
 34770  01CA0A  50E3               	movf	plusw1,w,c
 34771  01CA0C  5ADE               	subwfb	postinc2,f,c
 34772  01CA0E  0EF0               	movlw	-16
 34773  01CA10  50E3               	movf	plusw1,w,c
 34774  01CA12  5ADE               	subwfb	postinc2,f,c
 34775  01CA14  0EF1               	movlw	-15
 34776  01CA16  50E3               	movf	plusw1,w,c
 34777  01CA18  5ADE               	subwfb	postinc2,f,c
 34778  01CA1A  0EF2               	movlw	-14
 34779  01CA1C  50E3               	movf	plusw1,w,c
 34780  01CA1E  5ADE               	subwfb	postinc2,f,c
 34781  01CA20  0EF3               	movlw	-13
 34782  01CA22  50E3               	movf	plusw1,w,c
 34783  01CA24  5ADE               	subwfb	postinc2,f,c
 34784  01CA26  0EF4               	movlw	-12
 34785  01CA28  50E3               	movf	plusw1,w,c
 34786  01CA2A  5ADE               	subwfb	postinc2,f,c
 34787  01CA2C  0EF5               	movlw	-11
 34788  01CA2E  50E3               	movf	plusw1,w,c
 34789  01CA30  5ADE               	subwfb	postinc2,f,c
 34790  01CA32                     l10264:
 34791                           
 34792                           ;stkvar	_divisor @ sp[(-2)+-16]
 34793  01CA32  90D8               	bcf	status,0,c
 34794  01CA34  0EF5               	movlw	-11
 34795  01CA36  32E3               	rrcf	plusw1,f,c
 34796  01CA38  0EF4               	movlw	-12
 34797  01CA3A  32E3               	rrcf	plusw1,f,c
 34798  01CA3C  0EF3               	movlw	-13
 34799  01CA3E  32E3               	rrcf	plusw1,f,c
 34800  01CA40  0EF2               	movlw	-14
 34801  01CA42  32E3               	rrcf	plusw1,f,c
 34802  01CA44  0EF1               	movlw	-15
 34803  01CA46  32E3               	rrcf	plusw1,f,c
 34804  01CA48  0EF0               	movlw	-16
 34805  01CA4A  32E3               	rrcf	plusw1,f,c
 34806  01CA4C  0EEF               	movlw	-17
 34807  01CA4E  32E3               	rrcf	plusw1,f,c
 34808  01CA50  0EEE               	movlw	-18
 34809  01CA52  32E3               	rrcf	plusw1,f,c
 34810                           
 34811                           ;stkvar	_counter @ sp[(-2)+1]
 34812  01CA54  0EFF               	movlw	-1
 34813  01CA56  50E3               	movf	plusw1,w,c
 34814  01CA58  6E2A               	movwf	btemp^0,c
 34815  01CA5A  0E01               	movlw	1
 34816  01CA5C  5E2A               	subwf	btemp^0,f,c
 34817  01CA5E  0EFF               	movlw	-1
 34818  01CA60  0060  F0AB  FFE3   	movff	btemp,plusw1
 34819  01CA66  A4D8               	btfss	status,2,c
 34820  01CA68  D7A4               	goto	u8250
 34821  01CA6A                     u8270:
 34822                           
 34823                           ;stkvar	_sign @ sp[(-2)+0]
 34824  01CA6A  0EFE               	movlw	-2
 34825  01CA6C  50E3               	movf	plusw1,w,c
 34826  01CA6E  B4D8               	btfsc	status,2,c
 34827  01CA70  D025               	goto	u8290
 34828                           
 34829                           ;stkvar	_dividend @ sp[(-2)+-8]
 34830                           ;stkvar	_dividend @ sp[(-2)+-8]
 34831  01CA72  0EF6               	movlw	-10
 34832  01CA74  6CE3               	negf	plusw1,c
 34833  01CA76  0EF7               	movlw	-9
 34834  01CA78  1EE3               	comf	plusw1,f,c
 34835  01CA7A  0EF8               	movlw	-8
 34836  01CA7C  1EE3               	comf	plusw1,f,c
 34837  01CA7E  0EF9               	movlw	-7
 34838  01CA80  1EE3               	comf	plusw1,f,c
 34839  01CA82  0EFA               	movlw	-6
 34840  01CA84  1EE3               	comf	plusw1,f,c
 34841  01CA86  0EFB               	movlw	-5
 34842  01CA88  1EE3               	comf	plusw1,f,c
 34843  01CA8A  0EFC               	movlw	-4
 34844  01CA8C  1EE3               	comf	plusw1,f,c
 34845  01CA8E  0EFD               	movlw	-3
 34846  01CA90  1EE3               	comf	plusw1,f,c
 34847  01CA92  E314               	bnc	u8290
 34848  01CA94  0EF7               	movlw	-9
 34849  01CA96  2AE3               	incf	plusw1,f,c
 34850  01CA98  E311               	bnc	u8290
 34851  01CA9A  0EF8               	movlw	-8
 34852  01CA9C  2AE3               	incf	plusw1,f,c
 34853  01CA9E  E30E               	bnc	u8290
 34854  01CAA0  0EF9               	movlw	-7
 34855  01CAA2  2AE3               	incf	plusw1,f,c
 34856  01CAA4  E30B               	bnc	u8290
 34857  01CAA6  0EFA               	movlw	-6
 34858  01CAA8  2AE3               	incf	plusw1,f,c
 34859  01CAAA  E308               	bnc	u8290
 34860  01CAAC  0EFB               	movlw	-5
 34861  01CAAE  2AE3               	incf	plusw1,f,c
 34862  01CAB0  E305               	bnc	u8290
 34863  01CAB2  0EFC               	movlw	-4
 34864  01CAB4  2AE3               	incf	plusw1,f,c
 34865  01CAB6  E302               	bnc	u8290
 34866  01CAB8  0EFD               	movlw	-3
 34867  01CABA  2AE3               	incf	plusw1,f,c
 34868  01CABC                     u8290:
 34869                           
 34870                           ;stkvar	_dividend @ sp[(-2)+-8]
 34871  01CABC  0EF6               	movlw	246
 34872  01CABE  24E1               	addwf	fsr1l,w,c
 34873  01CAC0  6ED9               	movwf	fsr2l,c
 34874  01CAC2  0EFF               	movlw	255
 34875  01CAC4  20E2               	addwfc	fsr1h,w,c
 34876  01CAC6  6EDA               	movwf	fsr2h,c
 34877                           
 34878                           ;stkvar	?___aomod @ sp[(-2)+-8]
 34879  01CAC8  0E08               	movlw	8
 34880  01CACA  6E2A               	movwf	btemp^0,c
 34881  01CACC  0EF6               	movlw	-10
 34882  01CACE                     us830999:
 34883  01CACE  006F FF7B FFE3     	movff	postinc2,plusw1
 34884  01CAD4  28E8               	incf	wreg,w,c
 34885  01CAD6  2E2A               	decfsz	btemp^0,f,c
 34886  01CAD8  D7FA               	bra	us830999
 34887                           
 34888                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 34889  01CADA  52E5               	movf	postdec1,f,c
 34890  01CADC  52E5               	movf	postdec1,f,c
 34891  01CADE  0012               	return		;funcret
 34892  01CAE0                     __end_of___aomod:
 34893                           	opt callstack 0
 34894                           
 34895 ;; *************** function ___aodiv *****************
 34896 ;; Defined at:
 34897 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 34898 ;; Parameters:    Size  Location     Type
 34899 ;;  dividend        8  [STACK] long long 
 34900 ;;  divisor         8  [STACK] long long 
 34901 ;; Auto vars:     Size  Location     Type
 34902 ;;  quotient        8  [STACK] long long 
 34903 ;;  sign            1  [STACK] unsigned char 
 34904 ;;  counter         1  [STACK] unsigned char 
 34905 ;; Return value:  Size  Location     Type
 34906 ;;                  8  [STACK] long long 
 34907 ;; Registers used:
 34908 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 34909 ;; Tracked objects:
 34910 ;;		On entry : 0/0
 34911 ;;		On exit  : 0/0
 34912 ;;		Unchanged: 0/0
 34913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34918 ;;Total ram usage:        0 bytes
 34919 ;; Hardware stack levels used:    1
 34920 ;; Hardware stack levels required when called:   15
 34921 ;; This function calls:
 34922 ;;		Nothing
 34923 ;; This function is called by:
 34924 ;;		_dtoa
 34925 ;;		___secs_to_tm
 34926 ;;		___secs_to_zone
 34927 ;;		___year_to_secs
 34928 ;; This function uses a reentrant model
 34929 ;;
 34930                           
 34931                           	psect	text117
 34932  01BCC8                     __ptext117:
 34933                           	opt callstack 0
 34934  01BCC8                     ___aodiv:
 34935                           	opt callstack 0
 34936                           
 34937                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 34938  01BCC8  0E0A               	movlw	10
 34939  01BCCA  26E1               	addwf	fsr1l,f,c
 34940  01BCCC  0E00               	movlw	0
 34941  01BCCE  22E2               	addwfc	fsr1h,f,c
 34942                           
 34943                           ;stkvar	_sign @ sp[(-10)+8]
 34944                           
 34945                           ;incstack = 0
 34946 ;; hardware stack exceeded
 34947  01BCD0  0EFE               	movlw	-2
 34948  01BCD2  6AE3               	clrf	plusw1,c
 34949                           
 34950                           ;stkvar	_divisor @ sp[(-10)+-16]
 34951  01BCD4  0EED               	movlw	-19
 34952  01BCD6  AEE3               	btfss	plusw1,7,c
 34953  01BCD8  D028               	goto	l10204
 34954                           
 34955                           ;stkvar	_divisor @ sp[(-10)+-16]
 34956                           ;stkvar	_divisor @ sp[(-10)+-16]
 34957  01BCDA  0EE6               	movlw	-26
 34958  01BCDC  6CE3               	negf	plusw1,c
 34959  01BCDE  0EE7               	movlw	-25
 34960  01BCE0  1EE3               	comf	plusw1,f,c
 34961  01BCE2  0EE8               	movlw	-24
 34962  01BCE4  1EE3               	comf	plusw1,f,c
 34963  01BCE6  0EE9               	movlw	-23
 34964  01BCE8  1EE3               	comf	plusw1,f,c
 34965  01BCEA  0EEA               	movlw	-22
 34966  01BCEC  1EE3               	comf	plusw1,f,c
 34967  01BCEE  0EEB               	movlw	-21
 34968  01BCF0  1EE3               	comf	plusw1,f,c
 34969  01BCF2  0EEC               	movlw	-20
 34970  01BCF4  1EE3               	comf	plusw1,f,c
 34971  01BCF6  0EED               	movlw	-19
 34972  01BCF8  1EE3               	comf	plusw1,f,c
 34973  01BCFA  E314               	bnc	u8090
 34974  01BCFC  0EE7               	movlw	-25
 34975  01BCFE  2AE3               	incf	plusw1,f,c
 34976  01BD00  E311               	bnc	u8090
 34977  01BD02  0EE8               	movlw	-24
 34978  01BD04  2AE3               	incf	plusw1,f,c
 34979  01BD06  E30E               	bnc	u8090
 34980  01BD08  0EE9               	movlw	-23
 34981  01BD0A  2AE3               	incf	plusw1,f,c
 34982  01BD0C  E30B               	bnc	u8090
 34983  01BD0E  0EEA               	movlw	-22
 34984  01BD10  2AE3               	incf	plusw1,f,c
 34985  01BD12  E308               	bnc	u8090
 34986  01BD14  0EEB               	movlw	-21
 34987  01BD16  2AE3               	incf	plusw1,f,c
 34988  01BD18  E305               	bnc	u8090
 34989  01BD1A  0EEC               	movlw	-20
 34990  01BD1C  2AE3               	incf	plusw1,f,c
 34991  01BD1E  E302               	bnc	u8090
 34992  01BD20  0EED               	movlw	-19
 34993  01BD22  2AE3               	incf	plusw1,f,c
 34994  01BD24                     u8090:
 34995                           
 34996                           ;stkvar	_sign @ sp[(-10)+8]
 34997  01BD24  0EFE               	movlw	-2
 34998  01BD26  6AE3               	clrf	plusw1,c
 34999  01BD28  2AE3               	incf	plusw1,f,c
 35000  01BD2A                     l10204:
 35001                           
 35002                           ;stkvar	_dividend @ sp[(-10)+-8]
 35003  01BD2A  0EF5               	movlw	-11
 35004  01BD2C  AEE3               	btfss	plusw1,7,c
 35005  01BD2E  D027               	goto	l10210
 35006                           
 35007                           ;stkvar	_dividend @ sp[(-10)+-8]
 35008                           ;stkvar	_dividend @ sp[(-10)+-8]
 35009  01BD30  0EEE               	movlw	-18
 35010  01BD32  6CE3               	negf	plusw1,c
 35011  01BD34  0EEF               	movlw	-17
 35012  01BD36  1EE3               	comf	plusw1,f,c
 35013  01BD38  0EF0               	movlw	-16
 35014  01BD3A  1EE3               	comf	plusw1,f,c
 35015  01BD3C  0EF1               	movlw	-15
 35016  01BD3E  1EE3               	comf	plusw1,f,c
 35017  01BD40  0EF2               	movlw	-14
 35018  01BD42  1EE3               	comf	plusw1,f,c
 35019  01BD44  0EF3               	movlw	-13
 35020  01BD46  1EE3               	comf	plusw1,f,c
 35021  01BD48  0EF4               	movlw	-12
 35022  01BD4A  1EE3               	comf	plusw1,f,c
 35023  01BD4C  0EF5               	movlw	-11
 35024  01BD4E  1EE3               	comf	plusw1,f,c
 35025  01BD50  E314               	bnc	u8110
 35026  01BD52  0EEF               	movlw	-17
 35027  01BD54  2AE3               	incf	plusw1,f,c
 35028  01BD56  E311               	bnc	u8110
 35029  01BD58  0EF0               	movlw	-16
 35030  01BD5A  2AE3               	incf	plusw1,f,c
 35031  01BD5C  E30E               	bnc	u8110
 35032  01BD5E  0EF1               	movlw	-15
 35033  01BD60  2AE3               	incf	plusw1,f,c
 35034  01BD62  E30B               	bnc	u8110
 35035  01BD64  0EF2               	movlw	-14
 35036  01BD66  2AE3               	incf	plusw1,f,c
 35037  01BD68  E308               	bnc	u8110
 35038  01BD6A  0EF3               	movlw	-13
 35039  01BD6C  2AE3               	incf	plusw1,f,c
 35040  01BD6E  E305               	bnc	u8110
 35041  01BD70  0EF4               	movlw	-12
 35042  01BD72  2AE3               	incf	plusw1,f,c
 35043  01BD74  E302               	bnc	u8110
 35044  01BD76  0EF5               	movlw	-11
 35045  01BD78  2AE3               	incf	plusw1,f,c
 35046  01BD7A                     u8110:
 35047                           
 35048                           ;stkvar	_sign @ sp[(-10)+8]
 35049  01BD7A  0EFE               	movlw	-2
 35050  01BD7C  70E3               	btg	plusw1,0,c
 35051  01BD7E                     l10210:
 35052                           
 35053                           ;stkvar	_quotient @ sp[(-10)+0]
 35054  01BD7E  0E07               	movlw	7
 35055  01BD80  6E2A               	movwf	btemp^0,c
 35056  01BD82  0EF6               	movlw	-10
 35057  01BD84                     u8121:
 35058  01BD84  6AE3               	clrf	plusw1,c
 35059  01BD86  2AE8               	incf	wreg,f,c
 35060  01BD88  062A               	decf	btemp^0,f,c
 35061  01BD8A  E2FC               	bc	u8121
 35062                           
 35063                           ;stkvar	_divisor @ sp[(-10)+-16]
 35064  01BD8C  0EE6               	movlw	-26
 35065  01BD8E  50E3               	movf	plusw1,w,c
 35066  01BD90  E116               	bnz	u8130
 35067  01BD92  0EE7               	movlw	-25
 35068  01BD94  50E3               	movf	plusw1,w,c
 35069  01BD96  E113               	bnz	u8130
 35070  01BD98  0EE8               	movlw	-24
 35071  01BD9A  50E3               	movf	plusw1,w,c
 35072  01BD9C  E110               	bnz	u8130
 35073  01BD9E  0EE9               	movlw	-23
 35074  01BDA0  50E3               	movf	plusw1,w,c
 35075  01BDA2  E10D               	bnz	u8130
 35076  01BDA4  0EEA               	movlw	-22
 35077  01BDA6  50E3               	movf	plusw1,w,c
 35078  01BDA8  E10A               	bnz	u8130
 35079  01BDAA  0EEB               	movlw	-21
 35080  01BDAC  50E3               	movf	plusw1,w,c
 35081  01BDAE  E107               	bnz	u8130
 35082  01BDB0  0EEC               	movlw	-20
 35083  01BDB2  50E3               	movf	plusw1,w,c
 35084  01BDB4  E104               	bnz	u8130
 35085  01BDB6  0EED               	movlw	-19
 35086  01BDB8  50E3               	movf	plusw1,w,c
 35087  01BDBA  B4D8               	btfsc	status,2,c
 35088  01BDBC  D088               	goto	u8160
 35089  01BDBE                     u8130:
 35090                           
 35091                           ;stkvar	_counter @ sp[(-10)+9]
 35092  01BDBE  0EFF               	movlw	-1
 35093  01BDC0  6AE3               	clrf	plusw1,c
 35094  01BDC2  D012               	goto	L41
 35095  01BDC4                     l10216:
 35096                           
 35097                           ;stkvar	_divisor @ sp[(-10)+-16]
 35098  01BDC4  90D8               	bcf	status,0,c
 35099  01BDC6  0EE6               	movlw	-26
 35100  01BDC8  36E3               	rlcf	plusw1,f,c
 35101  01BDCA  0EE7               	movlw	-25
 35102  01BDCC  36E3               	rlcf	plusw1,f,c
 35103  01BDCE  0EE8               	movlw	-24
 35104  01BDD0  36E3               	rlcf	plusw1,f,c
 35105  01BDD2  0EE9               	movlw	-23
 35106  01BDD4  36E3               	rlcf	plusw1,f,c
 35107  01BDD6  0EEA               	movlw	-22
 35108  01BDD8  36E3               	rlcf	plusw1,f,c
 35109  01BDDA  0EEB               	movlw	-21
 35110  01BDDC  36E3               	rlcf	plusw1,f,c
 35111  01BDDE  0EEC               	movlw	-20
 35112  01BDE0  36E3               	rlcf	plusw1,f,c
 35113  01BDE2  0EED               	movlw	-19
 35114  01BDE4  36E3               	rlcf	plusw1,f,c
 35115                           
 35116                           ;stkvar	_counter @ sp[(-10)+9]
 35117  01BDE6  0EFF               	movlw	-1
 35118  01BDE8                     L41:
 35119  01BDE8  2AE3               	incf	plusw1,f,c
 35120                           
 35121                           ;stkvar	_divisor @ sp[(-10)+-16]
 35122  01BDEA  0EED               	movlw	-19
 35123  01BDEC  AEE3               	btfss	plusw1,7,c
 35124  01BDEE  D7EA               	goto	l10216
 35125  01BDF0                     u8140:
 35126                           
 35127                           ;stkvar	_quotient @ sp[(-10)+0]
 35128  01BDF0  90D8               	bcf	status,0,c
 35129  01BDF2  0EF6               	movlw	-10
 35130  01BDF4  36E3               	rlcf	plusw1,f,c
 35131  01BDF6  0EF7               	movlw	-9
 35132  01BDF8  36E3               	rlcf	plusw1,f,c
 35133  01BDFA  0EF8               	movlw	-8
 35134  01BDFC  36E3               	rlcf	plusw1,f,c
 35135  01BDFE  0EF9               	movlw	-7
 35136  01BE00  36E3               	rlcf	plusw1,f,c
 35137  01BE02  0EFA               	movlw	-6
 35138  01BE04  36E3               	rlcf	plusw1,f,c
 35139  01BE06  0EFB               	movlw	-5
 35140  01BE08  36E3               	rlcf	plusw1,f,c
 35141  01BE0A  0EFC               	movlw	-4
 35142  01BE0C  36E3               	rlcf	plusw1,f,c
 35143  01BE0E  0EFD               	movlw	-3
 35144  01BE10  36E3               	rlcf	plusw1,f,c
 35145                           
 35146                           ;stkvar	_divisor @ sp[(-10)+-16]
 35147                           ;stkvar	_dividend @ sp[(-10)+-8]
 35148  01BE12  50E1               	movf	fsr1l,w,c
 35149  01BE14  0FEE               	addlw	-18
 35150  01BE16  6ED9               	movwf	fsr2l,c
 35151  01BE18  50E2               	movf	fsr1h,w,c
 35152  01BE1A  6EDA               	movwf	fsr2h,c
 35153  01BE1C  0EFF               	movlw	255
 35154  01BE1E  22DA               	addwfc	fsr2h,f,c
 35155  01BE20  0EE6               	movlw	-26
 35156  01BE22  50E3               	movf	plusw1,w,c
 35157  01BE24  5CDE               	subwf	postinc2,w,c
 35158  01BE26  0EE7               	movlw	-25
 35159  01BE28  50E3               	movf	plusw1,w,c
 35160  01BE2A  58DE               	subwfb	postinc2,w,c
 35161  01BE2C  0EE8               	movlw	-24
 35162  01BE2E  50E3               	movf	plusw1,w,c
 35163  01BE30  58DE               	subwfb	postinc2,w,c
 35164  01BE32  0EE9               	movlw	-23
 35165  01BE34  50E3               	movf	plusw1,w,c
 35166  01BE36  58DE               	subwfb	postinc2,w,c
 35167  01BE38  0EEA               	movlw	-22
 35168  01BE3A  50E3               	movf	plusw1,w,c
 35169  01BE3C  58DE               	subwfb	postinc2,w,c
 35170  01BE3E  0EEB               	movlw	-21
 35171  01BE40  50E3               	movf	plusw1,w,c
 35172  01BE42  58DE               	subwfb	postinc2,w,c
 35173  01BE44  0EEC               	movlw	-20
 35174  01BE46  50E3               	movf	plusw1,w,c
 35175  01BE48  58DE               	subwfb	postinc2,w,c
 35176  01BE4A  0EED               	movlw	-19
 35177  01BE4C  50E3               	movf	plusw1,w,c
 35178  01BE4E  58DE               	subwfb	postinc2,w,c
 35179  01BE50  A0D8               	btfss	status,0,c
 35180  01BE52  D021               	goto	l10228
 35181                           
 35182                           ;stkvar	_divisor @ sp[(-10)+-16]
 35183                           ;stkvar	_dividend @ sp[(-10)+-8]
 35184  01BE54  50E1               	movf	fsr1l,w,c
 35185  01BE56  0FEE               	addlw	-18
 35186  01BE58  6ED9               	movwf	fsr2l,c
 35187  01BE5A  50E2               	movf	fsr1h,w,c
 35188  01BE5C  6EDA               	movwf	fsr2h,c
 35189  01BE5E  0EFF               	movlw	255
 35190  01BE60  22DA               	addwfc	fsr2h,f,c
 35191  01BE62  0EE6               	movlw	-26
 35192  01BE64  50E3               	movf	plusw1,w,c
 35193  01BE66  5EDE               	subwf	postinc2,f,c
 35194  01BE68  0EE7               	movlw	-25
 35195  01BE6A  50E3               	movf	plusw1,w,c
 35196  01BE6C  5ADE               	subwfb	postinc2,f,c
 35197  01BE6E  0EE8               	movlw	-24
 35198  01BE70  50E3               	movf	plusw1,w,c
 35199  01BE72  5ADE               	subwfb	postinc2,f,c
 35200  01BE74  0EE9               	movlw	-23
 35201  01BE76  50E3               	movf	plusw1,w,c
 35202  01BE78  5ADE               	subwfb	postinc2,f,c
 35203  01BE7A  0EEA               	movlw	-22
 35204  01BE7C  50E3               	movf	plusw1,w,c
 35205  01BE7E  5ADE               	subwfb	postinc2,f,c
 35206  01BE80  0EEB               	movlw	-21
 35207  01BE82  50E3               	movf	plusw1,w,c
 35208  01BE84  5ADE               	subwfb	postinc2,f,c
 35209  01BE86  0EEC               	movlw	-20
 35210  01BE88  50E3               	movf	plusw1,w,c
 35211  01BE8A  5ADE               	subwfb	postinc2,f,c
 35212  01BE8C  0EED               	movlw	-19
 35213  01BE8E  50E3               	movf	plusw1,w,c
 35214  01BE90  5ADE               	subwfb	postinc2,f,c
 35215                           
 35216                           ;stkvar	_quotient @ sp[(-10)+0]
 35217  01BE92  0EF6               	movlw	-10
 35218  01BE94  80E3               	bsf	plusw1,0,c
 35219  01BE96                     l10228:
 35220                           
 35221                           ;stkvar	_divisor @ sp[(-10)+-16]
 35222  01BE96  90D8               	bcf	status,0,c
 35223  01BE98  0EED               	movlw	-19
 35224  01BE9A  32E3               	rrcf	plusw1,f,c
 35225  01BE9C  0EEC               	movlw	-20
 35226  01BE9E  32E3               	rrcf	plusw1,f,c
 35227  01BEA0  0EEB               	movlw	-21
 35228  01BEA2  32E3               	rrcf	plusw1,f,c
 35229  01BEA4  0EEA               	movlw	-22
 35230  01BEA6  32E3               	rrcf	plusw1,f,c
 35231  01BEA8  0EE9               	movlw	-23
 35232  01BEAA  32E3               	rrcf	plusw1,f,c
 35233  01BEAC  0EE8               	movlw	-24
 35234  01BEAE  32E3               	rrcf	plusw1,f,c
 35235  01BEB0  0EE7               	movlw	-25
 35236  01BEB2  32E3               	rrcf	plusw1,f,c
 35237  01BEB4  0EE6               	movlw	-26
 35238  01BEB6  32E3               	rrcf	plusw1,f,c
 35239                           
 35240                           ;stkvar	_counter @ sp[(-10)+9]
 35241  01BEB8  0EFF               	movlw	-1
 35242  01BEBA  50E3               	movf	plusw1,w,c
 35243  01BEBC  6E2A               	movwf	btemp^0,c
 35244  01BEBE  0E01               	movlw	1
 35245  01BEC0  5E2A               	subwf	btemp^0,f,c
 35246  01BEC2  0EFF               	movlw	-1
 35247  01BEC4  0060  F0AB  FFE3   	movff	btemp,plusw1
 35248  01BECA  A4D8               	btfss	status,2,c
 35249  01BECC  D791               	goto	u8140
 35250  01BECE                     u8160:
 35251                           
 35252                           ;stkvar	_sign @ sp[(-10)+8]
 35253  01BECE  0EFE               	movlw	-2
 35254  01BED0  50E3               	movf	plusw1,w,c
 35255  01BED2  B4D8               	btfsc	status,2,c
 35256  01BED4  D025               	goto	u8180
 35257                           
 35258                           ;stkvar	_quotient @ sp[(-10)+0]
 35259                           ;stkvar	_quotient @ sp[(-10)+0]
 35260  01BED6  0EF6               	movlw	-10
 35261  01BED8  6CE3               	negf	plusw1,c
 35262  01BEDA  0EF7               	movlw	-9
 35263  01BEDC  1EE3               	comf	plusw1,f,c
 35264  01BEDE  0EF8               	movlw	-8
 35265  01BEE0  1EE3               	comf	plusw1,f,c
 35266  01BEE2  0EF9               	movlw	-7
 35267  01BEE4  1EE3               	comf	plusw1,f,c
 35268  01BEE6  0EFA               	movlw	-6
 35269  01BEE8  1EE3               	comf	plusw1,f,c
 35270  01BEEA  0EFB               	movlw	-5
 35271  01BEEC  1EE3               	comf	plusw1,f,c
 35272  01BEEE  0EFC               	movlw	-4
 35273  01BEF0  1EE3               	comf	plusw1,f,c
 35274  01BEF2  0EFD               	movlw	-3
 35275  01BEF4  1EE3               	comf	plusw1,f,c
 35276  01BEF6  E314               	bnc	u8180
 35277  01BEF8  0EF7               	movlw	-9
 35278  01BEFA  2AE3               	incf	plusw1,f,c
 35279  01BEFC  E311               	bnc	u8180
 35280  01BEFE  0EF8               	movlw	-8
 35281  01BF00  2AE3               	incf	plusw1,f,c
 35282  01BF02  E30E               	bnc	u8180
 35283  01BF04  0EF9               	movlw	-7
 35284  01BF06  2AE3               	incf	plusw1,f,c
 35285  01BF08  E30B               	bnc	u8180
 35286  01BF0A  0EFA               	movlw	-6
 35287  01BF0C  2AE3               	incf	plusw1,f,c
 35288  01BF0E  E308               	bnc	u8180
 35289  01BF10  0EFB               	movlw	-5
 35290  01BF12  2AE3               	incf	plusw1,f,c
 35291  01BF14  E305               	bnc	u8180
 35292  01BF16  0EFC               	movlw	-4
 35293  01BF18  2AE3               	incf	plusw1,f,c
 35294  01BF1A  E302               	bnc	u8180
 35295  01BF1C  0EFD               	movlw	-3
 35296  01BF1E  2AE3               	incf	plusw1,f,c
 35297  01BF20                     u8180:
 35298                           
 35299                           ;stkvar	_quotient @ sp[(-10)+0]
 35300  01BF20  0EF6               	movlw	246
 35301  01BF22  24E1               	addwf	fsr1l,w,c
 35302  01BF24  6ED9               	movwf	fsr2l,c
 35303  01BF26  0EFF               	movlw	255
 35304  01BF28  20E2               	addwfc	fsr1h,w,c
 35305  01BF2A  6EDA               	movwf	fsr2h,c
 35306                           
 35307                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 35308  01BF2C  0E08               	movlw	8
 35309  01BF2E  6E2A               	movwf	btemp^0,c
 35310  01BF30  0EEE               	movlw	-18
 35311  01BF32                     us819999:
 35312  01BF32  006F FF7B FFE3     	movff	postinc2,plusw1
 35313  01BF38  28E8               	incf	wreg,w,c
 35314  01BF3A  2E2A               	decfsz	btemp^0,f,c
 35315  01BF3C  D7FA               	bra	us819999
 35316                           
 35317                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 35318  01BF3E  0EF6               	movlw	246
 35319  01BF40  26E1               	addwf	fsr1l,f,c
 35320  01BF42  0EFF               	movlw	255
 35321  01BF44  22E2               	addwfc	fsr1h,f,c
 35322  01BF46  0012               	return		;funcret
 35323  01BF48                     __end_of___aodiv:
 35324                           	opt callstack 0
 35325                           
 35326 ;; *************** function _ctoa *****************
 35327 ;; Defined at:
 35328 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 35329 ;; Parameters:    Size  Location     Type
 35330 ;;  fp              2  [STACK] PTR struct _IO_FILE
 35331 ;;		 -> f(6), NULL(0), 
 35332 ;;  c               1  [STACK] unsigned char 
 35333 ;; Auto vars:     Size  Location     Type
 35334 ;;  w               2  [STACK] int 
 35335 ;;  l               2    0        int 
 35336 ;; Return value:  Size  Location     Type
 35337 ;;                  2  [STACK] int 
 35338 ;; Registers used:
 35339 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 35340 ;; Tracked objects:
 35341 ;;		On entry : 0/0
 35342 ;;		On exit  : 0/0
 35343 ;;		Unchanged: 0/0
 35344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35349 ;;Total ram usage:        0 bytes
 35350 ;; Hardware stack levels used:    1
 35351 ;; Hardware stack levels required when called:   20
 35352 ;; This function calls:
 35353 ;;		_pad
 35354 ;; This function is called by:
 35355 ;;		_vfpfcnvrt
 35356 ;; This function uses a reentrant model
 35357 ;;
 35358                           
 35359                           	psect	text118
 35360  000DFC                     __ptext118:
 35361                           	opt callstack 0
 35362  000DFC                     _ctoa:
 35363                           	opt callstack 0
 35364                           
 35365                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35366  000DFC  52E6               	movf	postinc1,f,c
 35367  000DFE  52E6               	movf	postinc1,f,c
 35368                           
 35369                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 35370                           
 35371                           ;incstack = 0
 35372 ;; hardware stack exceeded
 35373  000E00  504A               	movf	_width^0,w,c
 35374  000E02  104B               	iorwf	(_width+1)^0,w,c
 35375  000E04  A4D8               	btfss	status,2,c
 35376  000E06  D009               	goto	l15498
 35377                           
 35378                           ;stkvar	_w @ sp[(-2)+0]
 35379  000E08  0EFE               	movlw	-2
 35380  000E0A  0060  F12B  FFE3   	movff	_width,plusw1
 35381  000E10  0EFF               	movlw	-1
 35382  000E12  0060  F12F  FFE3   	movff	_width+1,plusw1
 35383  000E18  D016               	goto	l15500
 35384  000E1A                     l15498:
 35385  000E1A  0EFF               	movlw	255
 35386  000E1C  6E34               	movwf	(btemp+10)^0,c
 35387  000E1E  0EFF               	movlw	255
 35388  000E20  6E35               	movwf	(btemp+11)^0,c
 35389  000E22  0060  F128  F032   	movff	_width,btemp+8
 35390  000E28  0060  F12C  F033   	movff	_width+1,btemp+9
 35391  000E2E  5034               	movf	(btemp+10)^0,w,c
 35392  000E30  2632               	addwf	(btemp+8)^0,f,c
 35393  000E32  5035               	movf	(btemp+11)^0,w,c
 35394  000E34  2233               	addwfc	(btemp+9)^0,f,c
 35395                           
 35396                           ;stkvar	_w @ sp[(-2)+0]
 35397  000E36  0EFE               	movlw	-2
 35398  000E38  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 35399  000E3E  0EFF               	movlw	-1
 35400  000E40  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 35401  000E46                     l15500:
 35402                           
 35403                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 35404                           ;stkvar	_c @ sp[(-2)+-3]
 35405  000E46  0EFB               	movlw	-5
 35406  000E48  006F FF8C  F354    	movff	plusw1,_dbuf
 35407                           
 35408                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 35409  000E4E  0103               	movlb	3	; () banked
 35410  000E50  6B55               	clrf	(_dbuf+1)& (0+255),b
 35411                           
 35412                           ; BSR set to: 3
 35413                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 35414                           ;stkvar	_w @ sp[(-2)+0]
 35415  000E52  0EFE               	movlw	-2
 35416  000E54  006F FF8F FFE6     	movff	plusw1,postinc1
 35417  000E5A  006F FF8F FFE6     	movff	plusw1,postinc1
 35418  000E60  0E54               	movlw	low _dbuf
 35419  000E62  6EE6               	movwf	postinc1,c
 35420  000E64  0E03               	movlw	high _dbuf
 35421  000E66  6EE6               	movwf	postinc1,c
 35422                           
 35423                           ;stkvar	_fp @ sp[(-6)+-2]
 35424  000E68  0EF8               	movlw	-8
 35425  000E6A  006F FF8F FFE6     	movff	plusw1,postinc1
 35426  000E70  006F FF8F FFE6     	movff	plusw1,postinc1
 35427  000E76  EC6F  F0FB         	call	_pad	;wreg free
 35428                           
 35429                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 35430  000E7A  0EFB               	movlw	251
 35431  000E7C  26E1               	addwf	fsr1l,f,c
 35432  000E7E  0EFF               	movlw	255
 35433  000E80  22E2               	addwfc	fsr1h,f,c
 35434  000E82  0012               	return		;funcret
 35435  000E84                     __end_of_ctoa:
 35436                           	opt callstack 0
 35437                           
 35438 ;; *************** function _pad *****************
 35439 ;; Defined at:
 35440 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 35441 ;; Parameters:    Size  Location     Type
 35442 ;;  fp              2  [STACK] PTR struct _IO_FILE
 35443 ;;		 -> f(6), NULL(0), 
 35444 ;;  buf             2  [STACK] PTR unsigned char 
 35445 ;;		 -> dbuf(80), 
 35446 ;;  p               2  [STACK] int 
 35447 ;; Auto vars:     Size  Location     Type
 35448 ;;  w               2  [STACK] int 
 35449 ;;  i               2  [STACK] int 
 35450 ;; Return value:  Size  Location     Type
 35451 ;;                  2  [STACK] int 
 35452 ;; Registers used:
 35453 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 35454 ;; Tracked objects:
 35455 ;;		On entry : 0/3
 35456 ;;		On exit  : 0/0
 35457 ;;		Unchanged: 0/0
 35458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35463 ;;Total ram usage:        0 bytes
 35464 ;; Hardware stack levels used:    1
 35465 ;; Hardware stack levels required when called:   19
 35466 ;; This function calls:
 35467 ;;		_fputc
 35468 ;;		_fputs
 35469 ;;		_strlen
 35470 ;; This function is called by:
 35471 ;;		_ctoa
 35472 ;;		_dtoa
 35473 ;;		_efgtoa
 35474 ;;		_utoa
 35475 ;;		_xtoa
 35476 ;; This function uses a reentrant model
 35477 ;;
 35478                           
 35479                           	psect	text119
 35480  01F6DE                     __ptext119:
 35481                           	opt callstack 0
 35482  01F6DE                     _pad:
 35483                           	opt callstack 0
 35484                           
 35485                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35486  01F6DE  52E6               	movf	postinc1,f,c
 35487  01F6E0  52E6               	movf	postinc1,f,c
 35488  01F6E2  52E6               	movf	postinc1,f,c
 35489  01F6E4  52E6               	movf	postinc1,f,c
 35490                           
 35491                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 35492                           
 35493                           ;incstack = 0
 35494 ;; hardware stack exceeded
 35495  01F6E6  A04E               	btfss	_flags^0,0,c
 35496  01F6E8  D010               	goto	l15382
 35497                           
 35498                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 35499                           ;stkvar	_fp @ sp[(-4)+-2]
 35500  01F6EA  0EFA               	movlw	-6
 35501  01F6EC  006F FF8F FFE6     	movff	plusw1,postinc1
 35502  01F6F2  006F FF8F FFE6     	movff	plusw1,postinc1
 35503                           
 35504                           ;stkvar	_buf @ sp[(-6)+-4]
 35505  01F6F8  0EF6               	movlw	-10
 35506  01F6FA  006F FF8F FFE6     	movff	plusw1,postinc1
 35507  01F700  006F FF8F FFE6     	movff	plusw1,postinc1
 35508  01F706  EC45  F005         	call	_fputs	;wreg free
 35509  01F70A                     l15382:
 35510                           
 35511                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 35512                           ;stkvar	_p @ sp[(-4)+-6]
 35513  01F70A  0EF7               	movlw	-9
 35514  01F70C  BEE3               	btfsc	plusw1,7,c
 35515  01F70E  D011               	goto	l15386
 35516                           
 35517                           ;stkvar	_p @ sp[(-4)+-6]
 35518                           ;stkvar	_w @ sp[(-4)+0]
 35519  01F710  0EF6               	movlw	-10
 35520  01F712  006F FF8C  F02A    	movff	plusw1,btemp
 35521  01F718  0EFC               	movlw	-4
 35522  01F71A  0060  F0AB  FFE3   	movff	btemp,plusw1
 35523  01F720  0EF7               	movlw	-9
 35524  01F722  006F FF8C  F02A    	movff	plusw1,btemp
 35525  01F728  0EFD               	movlw	-3
 35526  01F72A  0060  F0AB  FFE3   	movff	btemp,plusw1
 35527  01F730  D004               	goto	l2465
 35528  01F732                     l15386:
 35529                           
 35530                           ;stkvar	_w @ sp[(-4)+0]
 35531  01F732  0EFC               	movlw	-4
 35532  01F734  6AE3               	clrf	plusw1,c
 35533  01F736  0EFD               	movlw	-3
 35534  01F738  6AE3               	clrf	plusw1,c
 35535  01F73A                     l2465:
 35536                           
 35537                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 35538                           ;stkvar	_i @ sp[(-4)+2]
 35539  01F73A  0EFE               	movlw	-2
 35540  01F73C  6AE3               	clrf	plusw1,c
 35541  01F73E  0EFF               	movlw	-1
 35542  01F740  6AE3               	clrf	plusw1,c
 35543                           
 35544                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 35545  01F742  D01E               	goto	l15392
 35546  01F744                     l15388:
 35547                           
 35548                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 35549                           ;stkvar	_fp @ sp[(-4)+-2]
 35550  01F744  0EFA               	movlw	-6
 35551  01F746  006F FF8F FFE6     	movff	plusw1,postinc1
 35552  01F74C  006F FF8F FFE6     	movff	plusw1,postinc1
 35553  01F752  0E20               	movlw	32
 35554  01F754  6EE6               	movwf	postinc1,c
 35555  01F756  0E00               	movlw	0
 35556  01F758  6EE6               	movwf	postinc1,c
 35557  01F75A  EC38  F0F9         	call	_fputc	;wreg free
 35558                           
 35559                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 35560                           ;stkvar	_i @ sp[(-4)+2]
 35561  01F75E  0EFE               	movlw	-2
 35562  01F760  50E3               	movf	plusw1,w,c
 35563  01F762  0F01               	addlw	1
 35564  01F764  6E2A               	movwf	btemp^0,c
 35565  01F766  0EFE               	movlw	-2
 35566  01F768  0060  F0AB  FFE3   	movff	btemp,plusw1
 35567  01F76E  6A2A               	clrf	btemp^0,c
 35568  01F770  0EFF               	movlw	-1
 35569  01F772  50E3               	movf	plusw1,w,c
 35570  01F774  202A               	addwfc	btemp^0,w,c
 35571  01F776  6E2A               	movwf	btemp^0,c
 35572  01F778  0EFF               	movlw	-1
 35573  01F77A  0060  F0AB  FFE3   	movff	btemp,plusw1
 35574  01F780                     l15392:
 35575                           
 35576                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 35577                           ;stkvar	_w @ sp[(-4)+0]
 35578                           ;stkvar	_i @ sp[(-4)+2]
 35579  01F780  50E1               	movf	fsr1l,w,c
 35580  01F782  0FFE               	addlw	-2
 35581  01F784  6ED9               	movwf	fsr2l,c
 35582  01F786  50E2               	movf	fsr1h,w,c
 35583  01F788  6EDA               	movwf	fsr2h,c
 35584  01F78A  0EFF               	movlw	255
 35585  01F78C  22DA               	addwfc	fsr2h,f,c
 35586  01F78E  0EFC               	movlw	-4
 35587  01F790  50E3               	movf	plusw1,w,c
 35588  01F792  5CDE               	subwf	postinc2,w,c
 35589  01F794  50DE               	movf	postinc2,w,c
 35590  01F796  0A80               	xorlw	128
 35591  01F798  6E2A               	movwf	btemp^0,c
 35592  01F79A  0EFD               	movlw	-3
 35593  01F79C  50E3               	movf	plusw1,w,c
 35594  01F79E  0A80               	xorlw	128
 35595  01F7A0  582A               	subwfb	btemp^0,w,c
 35596  01F7A2  A0D8               	btfss	status,0,c
 35597  01F7A4  D7CF               	goto	l15388
 35598                           
 35599                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 35600  01F7A6  B04E               	btfsc	_flags^0,0,c
 35601  01F7A8  D010               	goto	l15396
 35602                           
 35603                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 35604                           ;stkvar	_fp @ sp[(-4)+-2]
 35605  01F7AA  0EFA               	movlw	-6
 35606  01F7AC  006F FF8F FFE6     	movff	plusw1,postinc1
 35607  01F7B2  006F FF8F FFE6     	movff	plusw1,postinc1
 35608                           
 35609                           ;stkvar	_buf @ sp[(-6)+-4]
 35610  01F7B8  0EF6               	movlw	-10
 35611  01F7BA  006F FF8F FFE6     	movff	plusw1,postinc1
 35612  01F7C0  006F FF8F FFE6     	movff	plusw1,postinc1
 35613  01F7C6  EC45  F005         	call	_fputs	;wreg free
 35614  01F7CA                     l15396:
 35615                           
 35616                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 35617                           ;stkvar	_w @ sp[(-4)+0]
 35618                           ;stkvar	_buf @ sp[(-4)+-4]
 35619  01F7CA  0EF8               	movlw	-8
 35620  01F7CC  006F FF8F FFE6     	movff	plusw1,postinc1
 35621  01F7D2  006F FF8F FFE6     	movff	plusw1,postinc1
 35622  01F7D8  ECA7  F004         	call	_strlen	;wreg free
 35623  01F7DC  0EFC               	movlw	-4
 35624  01F7DE  50E3               	movf	plusw1,w,c
 35625  01F7E0  262A               	addwf	btemp^0,f,c
 35626  01F7E2  0EFD               	movlw	-3
 35627  01F7E4  50E3               	movf	plusw1,w,c
 35628  01F7E6  222B               	addwfc	(btemp+1)^0,f,c
 35629                           
 35630                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 35631  01F7E8  0EF6               	movlw	246
 35632  01F7EA  26E1               	addwf	fsr1l,f,c
 35633  01F7EC  0EFF               	movlw	255
 35634  01F7EE  22E2               	addwfc	fsr1h,f,c
 35635  01F7F0  0012               	return		;funcret
 35636  01F7F2                     __end_of_pad:
 35637                           	opt callstack 0
 35638                           
 35639 ;; *************** function _strlen *****************
 35640 ;; Defined at:
 35641 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 35642 ;; Parameters:    Size  Location     Type
 35643 ;;  s               2  [STACK] PTR const unsigned char 
 35644 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), nuls(7), 
 35645 ;;		 -> dbuf(80), spin(120), STR_71(9), STR_70(12), 
 35646 ;;		 -> D.lcd(640), D(642), T(176), port_data(512), 
 35647 ;;		 -> STR_3(5), V(181), 
 35648 ;; Auto vars:     Size  Location     Type
 35649 ;;  a               2  [STACK] PTR const unsigned char 
 35650 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), nuls(7), 
 35651 ;;		 -> dbuf(80), spin(120), STR_71(9), STR_70(12), 
 35652 ;;		 -> D.lcd(640), D(642), T(176), port_data(512), 
 35653 ;;		 -> STR_3(5), V(181), 
 35654 ;; Return value:  Size  Location     Type
 35655 ;;                  2  [STACK] unsigned int 
 35656 ;; Registers used:
 35657 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 35658 ;; Tracked objects:
 35659 ;;		On entry : 0/0
 35660 ;;		On exit  : 0/0
 35661 ;;		Unchanged: 0/0
 35662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35667 ;;Total ram usage:        0 bytes
 35668 ;; Hardware stack levels used:    1
 35669 ;; Hardware stack levels required when called:   15
 35670 ;; This function calls:
 35671 ;;		Nothing
 35672 ;; This function is called by:
 35673 ;;		_eaDogM_WriteString
 35674 ;;		_spinners
 35675 ;;		_calc_bsoc
 35676 ;;		_pad
 35677 ;;		_stoa
 35678 ;; This function uses a reentrant model
 35679 ;;
 35680                           
 35681                           	psect	text120
 35682  00094E                     __ptext120:
 35683                           	opt callstack 0
 35684  00094E                     _strlen:
 35685                           	opt callstack 0
 35686                           
 35687                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35688  00094E  52E6               	movf	postinc1,f,c
 35689  000950  52E6               	movf	postinc1,f,c
 35690                           
 35691                           ;stkvar	_s @ sp[(-2)+-2]
 35692                           
 35693                           ;incstack = 0
 35694 ;; hardware stack exceeded
 35695  000952  0EFC               	movlw	-4
 35696  000954  006F FF8C  F034    	movff	plusw1,btemp+10
 35697  00095A  0EFD               	movlw	-3
 35698  00095C  006F FF8C  F035    	movff	plusw1,btemp+11
 35699                           
 35700                           ;stkvar	_a @ sp[(-2)+0]
 35701  000962  0EFF               	movlw	-1
 35702  000964  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 35703  00096A  0EFE               	movlw	-2
 35704  00096C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 35705  000972  D011               	goto	l15322
 35706  000974                     l15320:
 35707                           
 35708                           ;stkvar	_s @ sp[(-2)+-2]
 35709  000974  0EFC               	movlw	-4
 35710  000976  50E3               	movf	plusw1,w,c
 35711  000978  0F01               	addlw	1
 35712  00097A  6E2A               	movwf	btemp^0,c
 35713  00097C  0EFC               	movlw	-4
 35714  00097E  0060  F0AB  FFE3   	movff	btemp,plusw1
 35715  000984  6A2A               	clrf	btemp^0,c
 35716  000986  0EFD               	movlw	-3
 35717  000988  50E3               	movf	plusw1,w,c
 35718  00098A  202A               	addwfc	btemp^0,w,c
 35719  00098C  6E2A               	movwf	btemp^0,c
 35720  00098E  0EFD               	movlw	-3
 35721  000990  0060  F0AB  FFE3   	movff	btemp,plusw1
 35722  000996                     l15322:
 35723                           
 35724                           ;stkvar	_s @ sp[(-2)+-2]
 35725  000996  0EFC               	movlw	-4
 35726  000998  006F FF8F FFF6     	movff	plusw1,tblptrl
 35727  00099E  0EFD               	movlw	-3
 35728  0009A0  006F FF8F FFF7     	movff	plusw1,tblptrh
 35729  0009A6  0E00               	movlw	low (__mediumconst shr (0+16))
 35730  0009A8  6EF8               	movwf	tblptru,c
 35731  0009AA  0E1F               	movlw	(high __ramtop+-1)
 35732  0009AC  64F7               	cpfsgt	tblptrh,c
 35733  0009AE  D003               	bra	u14207
 35734  0009B0  0008               	tblrd		*
 35735  0009B2  50F5               	movf	tablat,w,c
 35736  0009B4  D007               	bra	u14200
 35737  0009B6                     u14207:
 35738  0009B6  006F FFDB FFE9     	movff	tblptrl,fsr0l
 35739  0009BC  006F FFDF FFEA     	movff	tblptrh,fsr0h
 35740  0009C2  50EF               	movf	indf0,w,c
 35741  0009C4                     u14200:
 35742  0009C4  0900               	iorlw	0
 35743  0009C6  A4D8               	btfss	status,2,c
 35744  0009C8  D7D5               	goto	l15320
 35745                           
 35746                           ;stkvar	_a @ sp[(-2)+0]
 35747                           ;stkvar	_s @ sp[(-2)+-2]
 35748  0009CA  0EFC               	movlw	-4
 35749  0009CC  006F FF8C  F02A    	movff	plusw1,btemp
 35750  0009D2  0EFD               	movlw	-3
 35751  0009D4  006F FF8C  F02B    	movff	plusw1,btemp+1
 35752  0009DA  0EFE               	movlw	-2
 35753  0009DC  50E3               	movf	plusw1,w,c
 35754  0009DE  5E2A               	subwf	btemp^0,f,c
 35755  0009E0  0EFF               	movlw	-1
 35756  0009E2  50E3               	movf	plusw1,w,c
 35757  0009E4  5A2B               	subwfb	(btemp+1)^0,f,c
 35758                           
 35759                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 35760  0009E6  52E5               	movf	postdec1,f,c
 35761  0009E8  52E5               	movf	postdec1,f,c
 35762  0009EA  52E5               	movf	postdec1,f,c
 35763  0009EC  52E5               	movf	postdec1,f,c
 35764  0009EE  0012               	return		;funcret
 35765  0009F0                     __end_of_strlen:
 35766                           	opt callstack 0
 35767                           
 35768 ;; *************** function _fputs *****************
 35769 ;; Defined at:
 35770 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 35771 ;; Parameters:    Size  Location     Type
 35772 ;;  s               2  [STACK] PTR const unsigned char 
 35773 ;;		 -> dbuf(80), 
 35774 ;;  fp              2  [STACK] PTR struct _IO_FILE
 35775 ;;		 -> f(6), NULL(0), 
 35776 ;; Auto vars:     Size  Location     Type
 35777 ;;  i               2  [STACK] int 
 35778 ;;  c               1  [STACK] unsigned char 
 35779 ;; Return value:  Size  Location     Type
 35780 ;;                  2  [STACK] int 
 35781 ;; Registers used:
 35782 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 35783 ;; Tracked objects:
 35784 ;;		On entry : 0/3
 35785 ;;		On exit  : 0/0
 35786 ;;		Unchanged: 0/0
 35787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35792 ;;Total ram usage:        0 bytes
 35793 ;; Hardware stack levels used:    1
 35794 ;; Hardware stack levels required when called:   18
 35795 ;; This function calls:
 35796 ;;		_fputc
 35797 ;; This function is called by:
 35798 ;;		_pad
 35799 ;; This function uses a reentrant model
 35800 ;;
 35801                           
 35802                           	psect	text121
 35803  000A8A                     __ptext121:
 35804                           	opt callstack 0
 35805  000A8A                     _fputs:
 35806                           	opt callstack 0
 35807                           
 35808                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35809  000A8A  52E6               	movf	postinc1,f,c
 35810  000A8C  52E6               	movf	postinc1,f,c
 35811  000A8E  52E6               	movf	postinc1,f,c
 35812                           
 35813                           ;stkvar	_i @ sp[(-3)+0]
 35814                           
 35815                           ;incstack = 0
 35816 ;; hardware stack exceeded
 35817  000A90  0EFD               	movlw	-3
 35818  000A92  6AE3               	clrf	plusw1,c
 35819  000A94  0EFE               	movlw	-2
 35820  000A96  6AE3               	clrf	plusw1,c
 35821  000A98  D01F               	goto	l15334
 35822  000A9A                     l15330:
 35823                           
 35824                           ;stkvar	_fp @ sp[(-3)+-4]
 35825  000A9A  0EF9               	movlw	-7
 35826  000A9C  006F FF8F FFE6     	movff	plusw1,postinc1
 35827  000AA2  006F FF8F FFE6     	movff	plusw1,postinc1
 35828                           
 35829                           ;stkvar	_c @ sp[(-5)+2]
 35830  000AA8  0EFD               	movlw	-3
 35831  000AAA  50E3               	movf	plusw1,w,c
 35832  000AAC  6EE6               	movwf	postinc1,c
 35833  000AAE  0E00               	movlw	0
 35834  000AB0  6EE6               	movwf	postinc1,c
 35835  000AB2  EC38  F0F9         	call	_fputc	;wreg free
 35836                           
 35837                           ;stkvar	_i @ sp[(-3)+0]
 35838  000AB6  0EFD               	movlw	-3
 35839  000AB8  50E3               	movf	plusw1,w,c
 35840  000ABA  0F01               	addlw	1
 35841  000ABC  6E2A               	movwf	btemp^0,c
 35842  000ABE  0EFD               	movlw	-3
 35843  000AC0  0060  F0AB  FFE3   	movff	btemp,plusw1
 35844  000AC6  6A2A               	clrf	btemp^0,c
 35845  000AC8  0EFE               	movlw	-2
 35846  000ACA  50E3               	movf	plusw1,w,c
 35847  000ACC  202A               	addwfc	btemp^0,w,c
 35848  000ACE  6E2A               	movwf	btemp^0,c
 35849  000AD0  0EFE               	movlw	-2
 35850  000AD2  0060  F0AB  FFE3   	movff	btemp,plusw1
 35851  000AD8                     l15334:
 35852                           
 35853                           ;stkvar	_i @ sp[(-3)+0]
 35854  000AD8  0EFD               	movlw	-3
 35855  000ADA  006F FF8C  F034    	movff	plusw1,btemp+10
 35856  000AE0  0EFE               	movlw	-2
 35857  000AE2  006F FF8C  F035    	movff	plusw1,btemp+11
 35858                           
 35859                           ;stkvar	_s @ sp[(-3)+-2]
 35860  000AE8  0EFB               	movlw	-5
 35861  000AEA  006F FF8C  F032    	movff	plusw1,btemp+8
 35862  000AF0  0EFC               	movlw	-4
 35863  000AF2  006F FF8C  F033    	movff	plusw1,btemp+9
 35864  000AF8  5034               	movf	(btemp+10)^0,w,c
 35865  000AFA  2432               	addwf	(btemp+8)^0,w,c
 35866  000AFC  6ED9               	movwf	fsr2l,c
 35867  000AFE  5035               	movf	(btemp+11)^0,w,c
 35868  000B00  2033               	addwfc	(btemp+9)^0,w,c
 35869  000B02  6EDA               	movwf	fsr2h,c
 35870  000B04  50DF               	movf	indf2,w,c
 35871  000B06  6E35               	movwf	(btemp+11)^0,c
 35872                           
 35873                           ;stkvar	_c @ sp[(-3)+2]
 35874  000B08  0EFF               	movlw	-1
 35875  000B0A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 35876  000B10  0EFF               	movlw	-1
 35877  000B12  50E3               	movf	plusw1,w,c
 35878  000B14  A4D8               	btfss	status,2,c
 35879  000B16  D7C1               	goto	l15330
 35880                           
 35881                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 35882  000B18  0EF9               	movlw	249
 35883  000B1A  26E1               	addwf	fsr1l,f,c
 35884  000B1C  0EFF               	movlw	255
 35885  000B1E  22E2               	addwfc	fsr1h,f,c
 35886  000B20  0012               	return		;funcret
 35887  000B22                     __end_of_fputs:
 35888                           	opt callstack 0
 35889                           
 35890 ;; *************** function _fputc *****************
 35891 ;; Defined at:
 35892 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 35893 ;; Parameters:    Size  Location     Type
 35894 ;;  c               2  [STACK] int 
 35895 ;;  fp              2  [STACK] PTR struct _IO_FILE
 35896 ;;		 -> f(6), NULL(0), 
 35897 ;; Auto vars:     Size  Location     Type
 35898 ;;		None
 35899 ;; Return value:  Size  Location     Type
 35900 ;;                  2  [STACK] int 
 35901 ;; Registers used:
 35902 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 35903 ;; Tracked objects:
 35904 ;;		On entry : 0/0
 35905 ;;		On exit  : 0/0
 35906 ;;		Unchanged: 0/0
 35907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35912 ;;Total ram usage:        0 bytes
 35913 ;; Hardware stack levels used:    1
 35914 ;; Hardware stack levels required when called:   17
 35915 ;; This function calls:
 35916 ;;		_putch
 35917 ;; This function is called by:
 35918 ;;		_pad
 35919 ;;		_stoa
 35920 ;;		_vfpfcnvrt
 35921 ;;		_fputs
 35922 ;; This function uses a reentrant model
 35923 ;;
 35924                           
 35925                           	psect	text122
 35926  01F270                     __ptext122:
 35927                           	opt callstack 0
 35928  01F270                     _fputc:
 35929                           	opt callstack 0
 35930                           
 35931                           ;stkvar	_fp @ sp[(0)+-4]
 35932                           
 35933                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35934                           ;incstack = 0
 35935 ;; hardware stack exceeded
 35936  01F270  0EFC               	movlw	-4
 35937  01F272  006F FF8C  F02A    	movff	plusw1,btemp
 35938  01F278  0EFD               	movlw	-3
 35939  01F27A  50E3               	movf	plusw1,w,c
 35940  01F27C  102A               	iorwf	btemp^0,w,c
 35941  01F27E  B4D8               	btfsc	status,2,c
 35942  01F280  D009               	goto	u14170
 35943                           
 35944                           ;stkvar	_fp @ sp[(0)+-4]
 35945  01F282  0EFC               	movlw	-4
 35946  01F284  006F FF8C  F02A    	movff	plusw1,btemp
 35947  01F28A  0EFD               	movlw	-3
 35948  01F28C  50E3               	movf	plusw1,w,c
 35949  01F28E  102A               	iorwf	btemp^0,w,c
 35950  01F290  A4D8               	btfss	status,2,c
 35951  01F292  D006               	goto	l15308
 35952  01F294                     u14170:
 35953                           
 35954                           ;stkvar	_c @ sp[(0)+-2]
 35955  01F294  0EFE               	movlw	-2
 35956  01F296  50E3               	movf	plusw1,w,c
 35957  01F298  6EE6               	movwf	postinc1,c
 35958  01F29A  ECC1  F012         	call	_putch	;wreg free
 35959  01F29E  D075               	goto	l3541
 35960  01F2A0                     l15308:
 35961                           
 35962                           ;stkvar	_fp @ sp[(0)+-4]
 35963  01F2A0  0EFC               	movlw	-4
 35964  01F2A2  006F FF8C  F034    	movff	plusw1,btemp+10
 35965  01F2A8  0EFD               	movlw	-3
 35966  01F2AA  006F FF8C  F035    	movff	plusw1,btemp+11
 35967  01F2B0  0E04               	movlw	4
 35968  01F2B2  2434               	addwf	(btemp+10)^0,w,c
 35969  01F2B4  6ED9               	movwf	fsr2l,c
 35970  01F2B6  0E00               	movlw	0
 35971  01F2B8  2035               	addwfc	(btemp+11)^0,w,c
 35972  01F2BA  6EDA               	movwf	fsr2h,c
 35973  01F2BC  50DE               	movf	postinc2,w,c
 35974  01F2BE  10DE               	iorwf	postinc2,w,c
 35975  01F2C0  B4D8               	btfsc	status,2,c
 35976  01F2C2  D026               	goto	u14190
 35977                           
 35978                           ;stkvar	_fp @ sp[(0)+-4]
 35979  01F2C4  0EFC               	movlw	-4
 35980  01F2C6  006F FF8C  F034    	movff	plusw1,btemp+10
 35981  01F2CC  0EFD               	movlw	-3
 35982  01F2CE  006F FF8C  F035    	movff	plusw1,btemp+11
 35983  01F2D4  0E04               	movlw	4
 35984  01F2D6  2434               	addwf	(btemp+10)^0,w,c
 35985  01F2D8  6ED9               	movwf	fsr2l,c
 35986  01F2DA  0E00               	movlw	0
 35987  01F2DC  2035               	addwfc	(btemp+11)^0,w,c
 35988  01F2DE  6EDA               	movwf	fsr2h,c
 35989                           
 35990                           ;stkvar	_fp @ sp[(0)+-4]
 35991  01F2E0  0EFC               	movlw	-4
 35992  01F2E2  006F FF8C  F034    	movff	plusw1,btemp+10
 35993  01F2E8  0EFD               	movlw	-3
 35994  01F2EA  006F FF8C  F035    	movff	plusw1,btemp+11
 35995  01F2F0  0E02               	movlw	2
 35996  01F2F2  2434               	addwf	(btemp+10)^0,w,c
 35997  01F2F4  6EE9               	movwf	fsr0l,c
 35998  01F2F6  0E00               	movlw	0
 35999  01F2F8  2035               	addwfc	(btemp+11)^0,w,c
 36000  01F2FA  6EEA               	movwf	fsr0h,c
 36001  01F2FC  50DE               	movf	postinc2,w,c
 36002  01F2FE  5CEE               	subwf	postinc0,w,c
 36003  01F300  50EE               	movf	postinc0,w,c
 36004  01F302  0A80               	xorlw	128
 36005  01F304  6E2A               	movwf	btemp^0,c
 36006  01F306  50DE               	movf	postinc2,w,c
 36007  01F308  0A80               	xorlw	128
 36008  01F30A  582A               	subwfb	btemp^0,w,c
 36009  01F30C  B0D8               	btfsc	status,0,c
 36010  01F30E  D03D               	goto	l3541
 36011  01F310                     u14190:
 36012                           
 36013                           ;stkvar	_c @ sp[(0)+-2]
 36014                           ;stkvar	_fp @ sp[(0)+-4]
 36015  01F310  0EFC               	movlw	-4
 36016  01F312  006F FF8C  F034    	movff	plusw1,btemp+10
 36017  01F318  0EFD               	movlw	-3
 36018  01F31A  006F FF8C  F035    	movff	plusw1,btemp+11
 36019  01F320  0E02               	movlw	2
 36020  01F322  2434               	addwf	(btemp+10)^0,w,c
 36021  01F324  6ED9               	movwf	fsr2l,c
 36022  01F326  0E00               	movlw	0
 36023  01F328  2035               	addwfc	(btemp+11)^0,w,c
 36024  01F32A  6EDA               	movwf	fsr2h,c
 36025  01F32C  006F FF78  F034    	movff	postinc2,btemp+10
 36026  01F332  006F FF74  F035    	movff	postdec2,btemp+11
 36027                           
 36028                           ;stkvar	_fp @ sp[(0)+-4]
 36029  01F338  0EFC               	movlw	-4
 36030  01F33A  006F FF8F FFD9     	movff	plusw1,fsr2l
 36031  01F340  0EFD               	movlw	-3
 36032  01F342  006F FF8F FFDA     	movff	plusw1,fsr2h
 36033  01F348  006F FF78  F032    	movff	postinc2,btemp+8
 36034  01F34E  006F FF74  F033    	movff	postdec2,btemp+9
 36035  01F354  5034               	movf	(btemp+10)^0,w,c
 36036  01F356  2432               	addwf	(btemp+8)^0,w,c
 36037  01F358  6ED9               	movwf	fsr2l,c
 36038  01F35A  5035               	movf	(btemp+11)^0,w,c
 36039  01F35C  2033               	addwfc	(btemp+9)^0,w,c
 36040  01F35E  6EDA               	movwf	fsr2h,c
 36041  01F360  0EFE               	movlw	-2
 36042  01F362  006F FF8F FFDF     	movff	plusw1,indf2
 36043                           
 36044                           ;stkvar	_fp @ sp[(0)+-4]
 36045  01F368  0EFC               	movlw	-4
 36046  01F36A  006F FF8C  F034    	movff	plusw1,btemp+10
 36047  01F370  0EFD               	movlw	-3
 36048  01F372  006F FF8C  F035    	movff	plusw1,btemp+11
 36049  01F378  0E02               	movlw	2
 36050  01F37A  2434               	addwf	(btemp+10)^0,w,c
 36051  01F37C  6ED9               	movwf	fsr2l,c
 36052  01F37E  0E00               	movlw	0
 36053  01F380  2035               	addwfc	(btemp+11)^0,w,c
 36054  01F382  6EDA               	movwf	fsr2h,c
 36055  01F384  2ADE               	incf	postinc2,f,c
 36056  01F386  0E00               	movlw	0
 36057  01F388  22DD               	addwfc	postdec2,f,c
 36058  01F38A                     l3541:
 36059                           
 36060                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 36061  01F38A  52E5               	movf	postdec1,f,c
 36062  01F38C  52E5               	movf	postdec1,f,c
 36063  01F38E  52E5               	movf	postdec1,f,c
 36064  01F390  52E5               	movf	postdec1,f,c
 36065  01F392  0012               	return		;funcret
 36066  01F394                     __end_of_fputc:
 36067                           	opt callstack 0
 36068                           
 36069 ;; *************** function _putch *****************
 36070 ;; Defined at:
 36071 ;;		line 420 in file "eadog.c"
 36072 ;; Parameters:    Size  Location     Type
 36073 ;;  c               1  [STACK] unsigned char 
 36074 ;; Auto vars:     Size  Location     Type
 36075 ;;		None
 36076 ;; Return value:  Size  Location     Type
 36077 ;;                  1  [STACK] void 
 36078 ;; Registers used:
 36079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 36080 ;; Tracked objects:
 36081 ;;		On entry : 0/0
 36082 ;;		On exit  : 0/0
 36083 ;;		Unchanged: 0/0
 36084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36089 ;;Total ram usage:        0 bytes
 36090 ;; Hardware stack levels used:    1
 36091 ;; Hardware stack levels required when called:   16
 36092 ;; This function calls:
 36093 ;;		_ringBufS_put_dma
 36094 ;; This function is called by:
 36095 ;;		_fputc
 36096 ;; This function uses a reentrant model
 36097 ;;
 36098                           
 36099                           	psect	text123
 36100  002582                     __ptext123:
 36101                           	opt callstack 0
 36102  002582                     _putch:
 36103                           	opt callstack 0
 36104                           
 36105                           ;eadog.c: 420: void putch(char c);eadog.c: 421: {;eadog.c: 422:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 36106                           ;stkvar	_c @ sp[(0)+-1]
 36107                           
 36108                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36109                           ;incstack = 0
 36110 ;; hardware stack exceeded
 36111  002582  0EFF               	movlw	-1
 36112  002584  50E3               	movf	plusw1,w,c
 36113  002586  6EE6               	movwf	postinc1,c
 36114  002588  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 36115  00258E  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 36116  002594  ECAD  F003         	call	_ringBufS_put_dma	;wreg free
 36117                           
 36118                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 36119  002598  52E5               	movf	postdec1,f,c
 36120  00259A  0012               	return		;funcret
 36121  00259C                     __end_of_putch:
 36122                           	opt callstack 0
 36123                           
 36124 ;; *************** function _ringBufS_put_dma *****************
 36125 ;; Defined at:
 36126 ;;		line 67 in file "ringbufs.c"
 36127 ;; Parameters:    Size  Location     Type
 36128 ;;  _this           2  [STACK] PTR struct ringBufS_t
 36129 ;;		 -> ring_buf1(67), 
 36130 ;;  c               1  [STACK] const unsigned char 
 36131 ;; Auto vars:     Size  Location     Type
 36132 ;;		None
 36133 ;; Return value:  Size  Location     Type
 36134 ;;                  1  [STACK] void 
 36135 ;; Registers used:
 36136 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 36137 ;; Tracked objects:
 36138 ;;		On entry : 0/3B
 36139 ;;		On exit  : 0/0
 36140 ;;		Unchanged: 0/0
 36141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36146 ;;Total ram usage:        0 bytes
 36147 ;; Hardware stack levels used:    1
 36148 ;; Hardware stack levels required when called:   15
 36149 ;; This function calls:
 36150 ;;		Nothing
 36151 ;; This function is called by:
 36152 ;;		_send_lcd_data_dma
 36153 ;;		_putch
 36154 ;; This function uses a reentrant model
 36155 ;;
 36156                           
 36157                           	psect	text124
 36158  00075A                     __ptext124:
 36159                           	opt callstack 0
 36160  00075A                     _ringBufS_put_dma:
 36161                           	opt callstack 0
 36162                           
 36163                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 36164                           ;stkvar	__this @ sp[(0)+-2]
 36165                           
 36166                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36167                           ;incstack = 0
 36168 ;; hardware stack exceeded
 36169  00075A  0EFE               	movlw	-2
 36170  00075C  006F FF8C  F034    	movff	plusw1,btemp+10
 36171  000762  0EFF               	movlw	-1
 36172  000764  006F FF8C  F035    	movff	plusw1,btemp+11
 36173  00076A  0E42               	movlw	66
 36174  00076C  2434               	addwf	(btemp+10)^0,w,c
 36175  00076E  6ED9               	movwf	fsr2l,c
 36176  000770  0E00               	movlw	0
 36177  000772  2035               	addwfc	(btemp+11)^0,w,c
 36178  000774  6EDA               	movwf	fsr2h,c
 36179  000776  0E40               	movlw	64
 36180  000778  60DF               	cpfslt	indf2,c
 36181  00077A  D040               	goto	l1742
 36182                           
 36183                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 36184                           ;stkvar	_c @ sp[(0)+-3]
 36185                           ;stkvar	__this @ sp[(0)+-2]
 36186  00077C  0EFE               	movlw	-2
 36187  00077E  006F FF8C  F034    	movff	plusw1,btemp+10
 36188  000784  0EFF               	movlw	-1
 36189  000786  006F FF8C  F035    	movff	plusw1,btemp+11
 36190  00078C  0E40               	movlw	64
 36191  00078E  2434               	addwf	(btemp+10)^0,w,c
 36192  000790  6ED9               	movwf	fsr2l,c
 36193  000792  0E00               	movlw	0
 36194  000794  2035               	addwfc	(btemp+11)^0,w,c
 36195  000796  6EDA               	movwf	fsr2h,c
 36196  000798  50DF               	movf	indf2,w,c
 36197  00079A  6E35               	movwf	(btemp+11)^0,c
 36198                           
 36199                           ;stkvar	__this @ sp[(0)+-2]
 36200  00079C  0EFE               	movlw	-2
 36201  00079E  006F FF8C  F032    	movff	plusw1,btemp+8
 36202  0007A4  0EFF               	movlw	-1
 36203  0007A6  006F FF8C  F033    	movff	plusw1,btemp+9
 36204  0007AC  5035               	movf	(btemp+11)^0,w,c
 36205  0007AE  2432               	addwf	(btemp+8)^0,w,c
 36206  0007B0  6ED9               	movwf	fsr2l,c
 36207  0007B2  0E00               	movlw	0
 36208  0007B4  2033               	addwfc	(btemp+9)^0,w,c
 36209  0007B6  6EDA               	movwf	fsr2h,c
 36210  0007B8  0EFD               	movlw	-3
 36211  0007BA  006F FF8F FFDF     	movff	plusw1,indf2
 36212                           
 36213                           ;ringbufs.c: 71:   ++_this->head;
 36214                           ;stkvar	__this @ sp[(0)+-2]
 36215  0007C0  0EFE               	movlw	-2
 36216  0007C2  006F FF8C  F034    	movff	plusw1,btemp+10
 36217  0007C8  0EFF               	movlw	-1
 36218  0007CA  006F FF8C  F035    	movff	plusw1,btemp+11
 36219  0007D0  0E40               	movlw	64
 36220  0007D2  2434               	addwf	(btemp+10)^0,w,c
 36221  0007D4  6ED9               	movwf	fsr2l,c
 36222  0007D6  0E00               	movlw	0
 36223  0007D8  2035               	addwfc	(btemp+11)^0,w,c
 36224  0007DA  6EDA               	movwf	fsr2h,c
 36225  0007DC  2ADF               	incf	indf2,f,c
 36226                           
 36227                           ;ringbufs.c: 72:   ++_this->count;
 36228                           ;stkvar	__this @ sp[(0)+-2]
 36229  0007DE  0EFE               	movlw	-2
 36230  0007E0  006F FF8C  F034    	movff	plusw1,btemp+10
 36231  0007E6  0EFF               	movlw	-1
 36232  0007E8  006F FF8C  F035    	movff	plusw1,btemp+11
 36233  0007EE  0E42               	movlw	66
 36234  0007F0  2434               	addwf	(btemp+10)^0,w,c
 36235  0007F2  6ED9               	movwf	fsr2l,c
 36236  0007F4  0E00               	movlw	0
 36237  0007F6  2035               	addwfc	(btemp+11)^0,w,c
 36238  0007F8  6EDA               	movwf	fsr2h,c
 36239  0007FA  2ADF               	incf	indf2,f,c
 36240  0007FC                     l1742:
 36241                           
 36242                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 36243  0007FC  52E5               	movf	postdec1,f,c
 36244  0007FE  52E5               	movf	postdec1,f,c
 36245  000800  52E5               	movf	postdec1,f,c
 36246  000802  0012               	return		;funcret
 36247  000804                     __end_of_ringBufS_put_dma:
 36248                           	opt callstack 0
 36249                           
 36250 ;; *************** function _atoi *****************
 36251 ;; Defined at:
 36252 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 36253 ;; Parameters:    Size  Location     Type
 36254 ;;  s               2  [STACK] PTR const unsigned char 
 36255 ;;		 -> STR_90(127), STR_88(3), STR_87(3), STR_86(21), 
 36256 ;;		 -> STR_85(21), STR_84(21), STR_83(21), STR_82(21), 
 36257 ;;		 -> STR_81(21), STR_80(26), STR_79(15), STR_78(15), 
 36258 ;;		 -> STR_77(15), STR_76(15), STR_75(10), STR_74(10), 
 36259 ;;		 -> STR_73(19), STR_72(19), STR_69(3), STR_68(14), 
 36260 ;;		 -> STR_67(28), STR_66(28), STR_65(28), STR_64(22), 
 36261 ;;		 -> STR_63(22), STR_62(22), STR_61(22), STR_60(22), 
 36262 ;;		 -> STR_59(22), STR_58(22), STR_57(22), STR_56(22), 
 36263 ;;		 -> STR_55(21), STR_54(22), STR_53(22), STR_52(22), 
 36264 ;;		 -> STR_51(22), STR_50(22), STR_49(22), STR_48(24), 
 36265 ;;		 -> STR_47(24), STR_46(24), STR_45(30), STR_44(24), 
 36266 ;;		 -> STR_43(24), STR_42(23), STR_41(23), STR_40(23), 
 36267 ;;		 -> STR_39(23), STR_38(23), STR_37(23), STR_36(23), 
 36268 ;;		 -> STR_35(23), STR_34(23), STR_33(23), STR_32(23), 
 36269 ;;		 -> STR_31(23), STR_30(18), STR_29(17), STR_28(17), 
 36270 ;;		 -> STR_27(22), STR_26(22), STR_25(22), STR_24(14), 
 36271 ;;		 -> STR_23(27), STR_22(27), STR_21(23), STR_20(22), 
 36272 ;;		 -> STR_19(22), STR_18(22), STR_17(22), STR_16(23), 
 36273 ;;		 -> STR_15(23), STR_14(23), STR_13(26), STR_12(22), 
 36274 ;;		 -> STR_11(21), STR_10(21), STR_9(21), STR_8(21), 
 36275 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 36276 ;;		 -> STR_2(21), STR_1(21), 
 36277 ;; Auto vars:     Size  Location     Type
 36278 ;;  n               2  [STACK] int 
 36279 ;;  neg             2  [STACK] int 
 36280 ;; Return value:  Size  Location     Type
 36281 ;;                  2  [STACK] int 
 36282 ;; Registers used:
 36283 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 36284 ;; Tracked objects:
 36285 ;;		On entry : 0/0
 36286 ;;		On exit  : 0/0
 36287 ;;		Unchanged: 0/0
 36288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36293 ;;Total ram usage:        0 bytes
 36294 ;; Hardware stack levels used:    1
 36295 ;; Hardware stack levels required when called:   16
 36296 ;; This function calls:
 36297 ;;		_isdigit
 36298 ;;		_isspace
 36299 ;; This function is called by:
 36300 ;;		_vfpfcnvrt
 36301 ;; This function uses a reentrant model
 36302 ;;
 36303                           
 36304                           	psect	text125
 36305  01BF48                     __ptext125:
 36306                           	opt callstack 0
 36307  01BF48                     _atoi:
 36308                           	opt callstack 0
 36309                           
 36310                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36311  01BF48  0E09               	movlw	9
 36312  01BF4A  26E1               	addwf	fsr1l,f,c
 36313  01BF4C  0E00               	movlw	0
 36314  01BF4E  22E2               	addwfc	fsr1h,f,c
 36315                           
 36316                           ;stkvar	_n @ sp[(-9)+5]
 36317                           
 36318                           ;incstack = 0
 36319 ;; hardware stack exceeded
 36320  01BF50  0EFC               	movlw	-4
 36321  01BF52  6AE3               	clrf	plusw1,c
 36322  01BF54  0EFD               	movlw	-3
 36323  01BF56  6AE3               	clrf	plusw1,c
 36324                           
 36325                           ;stkvar	_neg @ sp[(-9)+7]
 36326  01BF58  0EFE               	movlw	-2
 36327  01BF5A  6AE3               	clrf	plusw1,c
 36328  01BF5C  0EFF               	movlw	-1
 36329  01BF5E  6AE3               	clrf	plusw1,c
 36330  01BF60  D011               	goto	l11422
 36331  01BF62                     l11420:
 36332                           
 36333                           ;stkvar	_s @ sp[(-9)+-2]
 36334  01BF62  0EF5               	movlw	-11
 36335  01BF64  50E3               	movf	plusw1,w,c
 36336  01BF66  0F01               	addlw	1
 36337  01BF68  6E2A               	movwf	btemp^0,c
 36338  01BF6A  0EF5               	movlw	-11
 36339  01BF6C  0060  F0AB  FFE3   	movff	btemp,plusw1
 36340  01BF72  6A2A               	clrf	btemp^0,c
 36341  01BF74  0EF6               	movlw	-10
 36342  01BF76  50E3               	movf	plusw1,w,c
 36343  01BF78  202A               	addwfc	btemp^0,w,c
 36344  01BF7A  6E2A               	movwf	btemp^0,c
 36345  01BF7C  0EF6               	movlw	-10
 36346  01BF7E  0060  F0AB  FFE3   	movff	btemp,plusw1
 36347  01BF84                     l11422:
 36348                           
 36349                           ;stkvar	_atoi$7204 @ sp[(-9)+4]
 36350  01BF84  0EFB               	movlw	-5
 36351  01BF86  6AE3               	clrf	plusw1,c
 36352  01BF88  2AE3               	incf	plusw1,f,c
 36353                           
 36354                           ;stkvar	_s @ sp[(-9)+-2]
 36355  01BF8A  50E1               	movf	fsr1l,w,c
 36356  01BF8C  0FF5               	addlw	-11
 36357  01BF8E  6ED9               	movwf	fsr2l,c
 36358  01BF90  50E2               	movf	fsr1h,w,c
 36359  01BF92  6EDA               	movwf	fsr2h,c
 36360  01BF94  0EFF               	movlw	255
 36361  01BF96  22DA               	addwfc	fsr2h,f,c
 36362  01BF98  006F FF7B FFF6     	movff	postinc2,tblptrl
 36363  01BF9E  006F FF77 FFF7     	movff	postdec2,tblptrh
 36364  01BFA4                     	if	0	;tblptru may be non-zero
 36365  01BFA4                     	endif
 36366  01BFA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36367  01BFA4  0E00               	movlw	low (__mediumconst shr (0+16))
 36368  01BFA6  6EF8               	movwf	tblptru,c
 36369  01BFA8                     	endif
 36370  01BFA8  0008               	tblrd		*
 36371  01BFAA  50F5               	movf	tablat,w,c
 36372  01BFAC  0A20               	xorlw	32
 36373  01BFAE  B4D8               	btfsc	status,2,c
 36374  01BFB0  D023               	goto	l11430
 36375  01BFB2  0EF7               	movlw	247
 36376  01BFB4  6E34               	movwf	(btemp+10)^0,c
 36377  01BFB6  0EFF               	movlw	255
 36378  01BFB8  6E35               	movwf	(btemp+11)^0,c
 36379                           
 36380                           ;stkvar	_s @ sp[(-9)+-2]
 36381  01BFBA  50E1               	movf	fsr1l,w,c
 36382  01BFBC  0FF5               	addlw	-11
 36383  01BFBE  6ED9               	movwf	fsr2l,c
 36384  01BFC0  50E2               	movf	fsr1h,w,c
 36385  01BFC2  6EDA               	movwf	fsr2h,c
 36386  01BFC4  0EFF               	movlw	255
 36387  01BFC6  22DA               	addwfc	fsr2h,f,c
 36388  01BFC8  006F FF7B FFF6     	movff	postinc2,tblptrl
 36389  01BFCE  006F FF77 FFF7     	movff	postdec2,tblptrh
 36390  01BFD4                     	if	0	;tblptru may be non-zero
 36391  01BFD4                     	endif
 36392  01BFD4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36393  01BFD4  0E00               	movlw	low (__mediumconst shr (0+16))
 36394  01BFD6  6EF8               	movwf	tblptru,c
 36395  01BFD8                     	endif
 36396  01BFD8  0008               	tblrd		*
 36397  01BFDA  50F5               	movf	tablat,w,c
 36398  01BFDC  6E32               	movwf	(btemp+8)^0,c
 36399  01BFDE  6A33               	clrf	(btemp+9)^0,c
 36400  01BFE0  5034               	movf	(btemp+10)^0,w,c
 36401  01BFE2  2632               	addwf	(btemp+8)^0,f,c
 36402  01BFE4  5035               	movf	(btemp+11)^0,w,c
 36403  01BFE6  2233               	addwfc	(btemp+9)^0,f,c
 36404  01BFE8  5033               	movf	(btemp+9)^0,w,c
 36405  01BFEA  E104               	bnz	u10360
 36406  01BFEC  0E05               	movlw	5
 36407  01BFEE  5C32               	subwf	(btemp+8)^0,w,c
 36408  01BFF0  A0D8               	btfss	status,0,c
 36409  01BFF2  D002               	goto	l11430
 36410  01BFF4                     u10360:
 36411                           
 36412                           ;stkvar	_atoi$7204 @ sp[(-9)+4]
 36413  01BFF4  0EFB               	movlw	-5
 36414  01BFF6  6AE3               	clrf	plusw1,c
 36415  01BFF8                     l11430:
 36416                           
 36417                           ;stkvar	_atoi$7204 @ sp[(-9)+4]
 36418  01BFF8  0EFB               	movlw	-5
 36419  01BFFA  50E3               	movf	plusw1,w,c
 36420  01BFFC  6E34               	movwf	(btemp+10)^0,c
 36421  01BFFE  6A35               	clrf	(btemp+11)^0,c
 36422                           
 36423                           ;stkvar	_atoi$7203 @ sp[(-9)+2]
 36424  01C000  0EF9               	movlw	-7
 36425  01C002  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 36426  01C008  0EFA               	movlw	-6
 36427  01C00A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 36428                           
 36429                           ;stkvar	_atoi$7203 @ sp[(-9)+2]
 36430  01C010  0EF9               	movlw	-7
 36431  01C012  006F FF8C  F02A    	movff	plusw1,btemp
 36432  01C018  0EFA               	movlw	-6
 36433  01C01A  50E3               	movf	plusw1,w,c
 36434  01C01C  102A               	iorwf	btemp^0,w,c
 36435  01C01E  B4D8               	btfsc	status,2,c
 36436  01C020  D01F               	goto	l11440
 36437  01C022  D79F               	goto	l11420
 36438  01C024                     l11436:
 36439  01C024  0E01               	movlw	1
 36440  01C026  6E34               	movwf	(btemp+10)^0,c
 36441  01C028  0E00               	movlw	0
 36442  01C02A  6E35               	movwf	(btemp+11)^0,c
 36443                           
 36444                           ;stkvar	_neg @ sp[(-9)+7]
 36445  01C02C  0EFE               	movlw	-2
 36446  01C02E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 36447  01C034  0EFF               	movlw	-1
 36448  01C036  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 36449  01C03C                     l11438:
 36450                           
 36451                           ;stkvar	_s @ sp[(-9)+-2]
 36452  01C03C  0EF5               	movlw	-11
 36453  01C03E  50E3               	movf	plusw1,w,c
 36454  01C040  0F01               	addlw	1
 36455  01C042  6E2A               	movwf	btemp^0,c
 36456  01C044  0EF5               	movlw	-11
 36457  01C046  0060  F0AB  FFE3   	movff	btemp,plusw1
 36458  01C04C  6A2A               	clrf	btemp^0,c
 36459  01C04E  0EF6               	movlw	-10
 36460  01C050  50E3               	movf	plusw1,w,c
 36461  01C052  202A               	addwfc	btemp^0,w,c
 36462  01C054  6E2A               	movwf	btemp^0,c
 36463  01C056  0EF6               	movlw	-10
 36464  01C058  0060  F0AB  FFE3   	movff	btemp,plusw1
 36465  01C05E  D053               	goto	l11446
 36466  01C060                     l11440:
 36467                           
 36468                           ;stkvar	_s @ sp[(-9)+-2]
 36469  01C060  50E1               	movf	fsr1l,w,c
 36470  01C062  0FF5               	addlw	-11
 36471  01C064  6ED9               	movwf	fsr2l,c
 36472  01C066  50E2               	movf	fsr1h,w,c
 36473  01C068  6EDA               	movwf	fsr2h,c
 36474  01C06A  0EFF               	movlw	255
 36475  01C06C  22DA               	addwfc	fsr2h,f,c
 36476  01C06E  006F FF7B FFF6     	movff	postinc2,tblptrl
 36477  01C074  006F FF77 FFF7     	movff	postdec2,tblptrh
 36478  01C07A                     	if	0	;tblptru may be non-zero
 36479  01C07A                     	endif
 36480  01C07A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36481  01C07A  0E00               	movlw	low (__mediumconst shr (0+16))
 36482  01C07C  6EF8               	movwf	tblptru,c
 36483  01C07E                     	endif
 36484  01C07E  0008               	tblrd		*
 36485  01C080  50F5               	movf	tablat,w,c
 36486  01C082  6E34               	movwf	(btemp+10)^0,c
 36487  01C084  6A35               	clrf	(btemp+11)^0,c
 36488                           
 36489                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 36490                           ; Switch size 1, requested type "simple"
 36491                           ; Number of cases is 1, Range of values is 0 to 0
 36492                           ; switch strategies available:
 36493                           ; Name         Instructions Cycles
 36494                           ; simple_byte            4     3 (average)
 36495                           ;	Chosen strategy is simple_byte
 36496  01C086  5035               	movf	(btemp+11)^0,w,c
 36497  01C088  0A00               	xorlw	0	; case 0
 36498  01C08A  A4D8               	btfss	status,2,c
 36499  01C08C  D03C               	goto	l11446
 36500                           
 36501                           ; Switch size 1, requested type "simple"
 36502                           ; Number of cases is 2, Range of values is 43 to 45
 36503                           ; switch strategies available:
 36504                           ; Name         Instructions Cycles
 36505                           ; simple_byte            7     4 (average)
 36506                           ;	Chosen strategy is simple_byte
 36507  01C08E  5034               	movf	(btemp+10)^0,w,c
 36508  01C090  0A2B               	xorlw	43	; case 43
 36509  01C092  B4D8               	btfsc	status,2,c
 36510  01C094  D7D3               	goto	l11438
 36511  01C096  0A06               	xorlw	6	; case 45
 36512  01C098  B4D8               	btfsc	status,2,c
 36513  01C09A  D7C4               	goto	l11436
 36514  01C09C  D034               	goto	l11446
 36515  01C09E                     l11442:
 36516                           
 36517                           ;stkvar	_n @ sp[(-9)+5]
 36518  01C09E  0EFC               	movlw	-4
 36519  01C0A0  006F FF8C  F034    	movff	plusw1,btemp+10
 36520  01C0A6  0EFD               	movlw	-3
 36521  01C0A8  006F FF8C  F035    	movff	plusw1,btemp+11
 36522  01C0AE  0E0A               	movlw	10
 36523  01C0B0  0234               	mulwf	(btemp+10)^0,c
 36524  01C0B2  006F FFCC  F032    	movff	prodl,btemp+8
 36525  01C0B8  006F FFD0  F033    	movff	prodh,btemp+9
 36526  01C0BE  0235               	mulwf	(btemp+11)^0,c
 36527  01C0C0  50F3               	movf	prodl,w,c
 36528  01C0C2  2633               	addwf	(btemp+9)^0,f,c
 36529                           
 36530                           ;stkvar	_s @ sp[(-9)+-2]
 36531  01C0C4  50E1               	movf	fsr1l,w,c
 36532  01C0C6  0FF5               	addlw	-11
 36533  01C0C8  6ED9               	movwf	fsr2l,c
 36534  01C0CA  50E2               	movf	fsr1h,w,c
 36535  01C0CC  6EDA               	movwf	fsr2h,c
 36536  01C0CE  0EFF               	movlw	255
 36537  01C0D0  22DA               	addwfc	fsr2h,f,c
 36538  01C0D2  006F FF7B FFF6     	movff	postinc2,tblptrl
 36539  01C0D8  006F FF77 FFF7     	movff	postdec2,tblptrh
 36540  01C0DE                     	if	0	;tblptru may be non-zero
 36541  01C0DE                     	endif
 36542  01C0DE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36543  01C0DE  0E00               	movlw	low (__mediumconst shr (0+16))
 36544  01C0E0  6EF8               	movwf	tblptru,c
 36545  01C0E2                     	endif
 36546  01C0E2  0008               	tblrd		*
 36547  01C0E4  50F5               	movf	tablat,w,c
 36548  01C0E6  5E32               	subwf	(btemp+8)^0,f,c
 36549  01C0E8  0E00               	movlw	0
 36550  01C0EA  5A33               	subwfb	(btemp+9)^0,f,c
 36551  01C0EC  0E30               	movlw	48
 36552  01C0EE  2632               	addwf	(btemp+8)^0,f,c
 36553  01C0F0  0E00               	movlw	0
 36554  01C0F2  2233               	addwfc	(btemp+9)^0,f,c
 36555                           
 36556                           ;stkvar	_n @ sp[(-9)+5]
 36557  01C0F4  0EFC               	movlw	-4
 36558  01C0F6  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 36559  01C0FC  0EFD               	movlw	-3
 36560  01C0FE  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 36561  01C104  D79B               	goto	l11438
 36562  01C106                     l11446:
 36563  01C106  0ED0               	movlw	208
 36564  01C108  6E34               	movwf	(btemp+10)^0,c
 36565  01C10A  0EFF               	movlw	255
 36566  01C10C  6E35               	movwf	(btemp+11)^0,c
 36567                           
 36568                           ;stkvar	_s @ sp[(-9)+-2]
 36569  01C10E  50E1               	movf	fsr1l,w,c
 36570  01C110  0FF5               	addlw	-11
 36571  01C112  6ED9               	movwf	fsr2l,c
 36572  01C114  50E2               	movf	fsr1h,w,c
 36573  01C116  6EDA               	movwf	fsr2h,c
 36574  01C118  0EFF               	movlw	255
 36575  01C11A  22DA               	addwfc	fsr2h,f,c
 36576  01C11C  006F FF7B FFF6     	movff	postinc2,tblptrl
 36577  01C122  006F FF77 FFF7     	movff	postdec2,tblptrh
 36578  01C128                     	if	0	;tblptru may be non-zero
 36579  01C128                     	endif
 36580  01C128                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36581  01C128  0E00               	movlw	low (__mediumconst shr (0+16))
 36582  01C12A  6EF8               	movwf	tblptru,c
 36583  01C12C                     	endif
 36584  01C12C  0008               	tblrd		*
 36585  01C12E  50F5               	movf	tablat,w,c
 36586  01C130  6E32               	movwf	(btemp+8)^0,c
 36587  01C132  6A33               	clrf	(btemp+9)^0,c
 36588  01C134  5034               	movf	(btemp+10)^0,w,c
 36589  01C136  2632               	addwf	(btemp+8)^0,f,c
 36590  01C138  5035               	movf	(btemp+11)^0,w,c
 36591  01C13A  2233               	addwfc	(btemp+9)^0,f,c
 36592  01C13C  5033               	movf	(btemp+9)^0,w,c
 36593  01C13E  E106               	bnz	u10380
 36594  01C140  0E0A               	movlw	10
 36595  01C142  5C32               	subwf	(btemp+8)^0,w,c
 36596  01C144  B0D8               	btfsc	status,0,c
 36597  01C146  D002               	goto	u10380
 36598  01C148  0E01               	movlw	1
 36599  01C14A  D001               	goto	u10390
 36600  01C14C                     u10380:
 36601  01C14C  0E00               	movlw	0
 36602  01C14E                     u10390:
 36603  01C14E  6E34               	movwf	(btemp+10)^0,c
 36604  01C150  6A35               	clrf	(btemp+11)^0,c
 36605                           
 36606                           ;stkvar	_atoi$7205 @ sp[(-9)+0]
 36607  01C152  0EF7               	movlw	-9
 36608  01C154  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 36609  01C15A  0EF8               	movlw	-8
 36610  01C15C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 36611                           
 36612                           ;stkvar	_atoi$7205 @ sp[(-9)+0]
 36613  01C162  0EF7               	movlw	-9
 36614  01C164  006F FF8C  F02A    	movff	plusw1,btemp
 36615  01C16A  0EF8               	movlw	-8
 36616  01C16C  50E3               	movf	plusw1,w,c
 36617  01C16E  102A               	iorwf	btemp^0,w,c
 36618  01C170  A4D8               	btfss	status,2,c
 36619  01C172  D795               	goto	l11442
 36620                           
 36621                           ;stkvar	_neg @ sp[(-9)+7]
 36622  01C174  0EFE               	movlw	-2
 36623  01C176  006F FF8C  F02A    	movff	plusw1,btemp
 36624  01C17C  0EFF               	movlw	-1
 36625  01C17E  50E3               	movf	plusw1,w,c
 36626  01C180  102A               	iorwf	btemp^0,w,c
 36627  01C182  A4D8               	btfss	status,2,c
 36628  01C184  D00E               	goto	l11456
 36629                           
 36630                           ;stkvar	_n @ sp[(-9)+5]
 36631  01C186  0EFC               	movlw	-4
 36632  01C188  006F FF8C  F02A    	movff	plusw1,btemp
 36633  01C18E  1E2A               	comf	btemp^0,f,c
 36634  01C190  0EFD               	movlw	-3
 36635  01C192  006F FF8C  F02B    	movff	plusw1,btemp+1
 36636  01C198  1E2B               	comf	(btemp+1)^0,f,c
 36637  01C19A  2A2A               	incf	btemp^0,f,c
 36638  01C19C  B4D8               	btfsc	status,2,c
 36639  01C19E  2A2B               	incf	(btemp+1)^0,f,c
 36640  01C1A0  D008               	goto	l3452
 36641  01C1A2                     l11456:
 36642                           
 36643                           ;stkvar	_n @ sp[(-9)+5]
 36644  01C1A2  0EFC               	movlw	-4
 36645  01C1A4  006F FF8C  F02A    	movff	plusw1,btemp
 36646  01C1AA  0EFD               	movlw	-3
 36647  01C1AC  006F FF8C  F02B    	movff	plusw1,btemp+1
 36648  01C1B2                     l3452:
 36649                           
 36650                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 36651  01C1B2  0EF5               	movlw	245
 36652  01C1B4  26E1               	addwf	fsr1l,f,c
 36653  01C1B6  0EFF               	movlw	255
 36654  01C1B8  22E2               	addwfc	fsr1h,f,c
 36655  01C1BA  0012               	return		;funcret
 36656  01C1BC                     __end_of_atoi:
 36657                           	opt callstack 0
 36658                           
 36659 ;; *************** function _isspace *****************
 36660 ;; Defined at:
 36661 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 36662 ;; Parameters:    Size  Location     Type
 36663 ;;  c               2  [STACK] int 
 36664 ;; Auto vars:     Size  Location     Type
 36665 ;;		None
 36666 ;; Return value:  Size  Location     Type
 36667 ;;                  2  [STACK] int 
 36668 ;; Registers used:
 36669 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 36670 ;; Tracked objects:
 36671 ;;		On entry : 0/0
 36672 ;;		On exit  : 0/0
 36673 ;;		Unchanged: 0/0
 36674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36679 ;;Total ram usage:        0 bytes
 36680 ;; Hardware stack levels used:    1
 36681 ;; Hardware stack levels required when called:   15
 36682 ;; This function calls:
 36683 ;;		Nothing
 36684 ;; This function is called by:
 36685 ;;		_atoi
 36686 ;; This function uses a reentrant model
 36687 ;;
 36688                           
 36689                           	psect	text126
 36690  00180C                     __ptext126:
 36691                           	opt callstack 0
 36692  00180C                     _isspace:
 36693                           	opt callstack 0
 36694                           
 36695                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36696  00180C  52E6               	movf	postinc1,f,c
 36697                           
 36698                           ;stkvar	_isspace$7254 @ sp[(-1)+0]
 36699                           
 36700                           ;incstack = 0
 36701 ;; hardware stack exceeded
 36702  00180E  0EFF               	movlw	-1
 36703  001810  6AE3               	clrf	plusw1,c
 36704  001812  2AE3               	incf	plusw1,f,c
 36705                           
 36706                           ;stkvar	_c @ sp[(-1)+-2]
 36707  001814  0EFD               	movlw	-3
 36708  001816  006F FF8C  F02A    	movff	plusw1,btemp
 36709  00181C  0E20               	movlw	32
 36710  00181E  182A               	xorwf	btemp^0,w,c
 36711  001820  E104               	bnz	u9210
 36712  001822  0EFE               	movlw	-2
 36713  001824  50E3               	movf	plusw1,w,c
 36714  001826  B4D8               	btfsc	status,2,c
 36715  001828  D012               	goto	l10822
 36716  00182A                     u9210:
 36717                           
 36718                           ;stkvar	_c @ sp[(-1)+-2]
 36719  00182A  0EFD               	movlw	-3
 36720  00182C  50E3               	movf	plusw1,w,c
 36721  00182E  0FF7               	addlw	247
 36722  001830  6E34               	movwf	(btemp+10)^0,c
 36723  001832  0EFE               	movlw	-2
 36724  001834  006F FF8C  F035    	movff	plusw1,btemp+11
 36725  00183A  0EFF               	movlw	255
 36726  00183C  2235               	addwfc	(btemp+11)^0,f,c
 36727  00183E  5035               	movf	(btemp+11)^0,w,c
 36728  001840  E104               	bnz	u9220
 36729  001842  0E05               	movlw	5
 36730  001844  5C34               	subwf	(btemp+10)^0,w,c
 36731  001846  A0D8               	btfss	status,0,c
 36732  001848  D002               	goto	l10822
 36733  00184A                     u9220:
 36734                           
 36735                           ;stkvar	_isspace$7254 @ sp[(-1)+0]
 36736  00184A  0EFF               	movlw	-1
 36737  00184C  6AE3               	clrf	plusw1,c
 36738  00184E                     l10822:
 36739                           
 36740                           ;stkvar	_isspace$7254 @ sp[(-1)+0]
 36741  00184E  0EFF               	movlw	-1
 36742  001850  50E3               	movf	plusw1,w,c
 36743  001852  6E2A               	movwf	btemp^0,c
 36744  001854  6A2B               	clrf	(btemp+1)^0,c
 36745                           
 36746                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 36747  001856  52E5               	movf	postdec1,f,c
 36748  001858  52E5               	movf	postdec1,f,c
 36749  00185A  52E5               	movf	postdec1,f,c
 36750  00185C  0012               	return		;funcret
 36751  00185E                     __end_of_isspace:
 36752                           	opt callstack 0
 36753                           
 36754 ;; *************** function _isdigit *****************
 36755 ;; Defined at:
 36756 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 36757 ;; Parameters:    Size  Location     Type
 36758 ;;  c               2  [STACK] int 
 36759 ;; Auto vars:     Size  Location     Type
 36760 ;;		None
 36761 ;; Return value:  Size  Location     Type
 36762 ;;                  2  [STACK] int 
 36763 ;; Registers used:
 36764 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 36765 ;; Tracked objects:
 36766 ;;		On entry : 0/0
 36767 ;;		On exit  : 0/0
 36768 ;;		Unchanged: 0/0
 36769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36774 ;;Total ram usage:        0 bytes
 36775 ;; Hardware stack levels used:    1
 36776 ;; Hardware stack levels required when called:   15
 36777 ;; This function calls:
 36778 ;;		Nothing
 36779 ;; This function is called by:
 36780 ;;		_vfpfcnvrt
 36781 ;;		_atoi
 36782 ;; This function uses a reentrant model
 36783 ;;
 36784                           
 36785                           	psect	text127
 36786  002026                     __ptext127:
 36787                           	opt callstack 0
 36788  002026                     _isdigit:
 36789                           	opt callstack 0
 36790                           
 36791                           ;stkvar	_c @ sp[(0)+-2]
 36792                           
 36793                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36794                           ;incstack = 0
 36795 ;; hardware stack exceeded
 36796  002026  0EFE               	movlw	-2
 36797  002028  50E3               	movf	plusw1,w,c
 36798  00202A  0FD0               	addlw	208
 36799  00202C  6E34               	movwf	(btemp+10)^0,c
 36800  00202E  0EFF               	movlw	-1
 36801  002030  006F FF8C  F035    	movff	plusw1,btemp+11
 36802  002036  0EFF               	movlw	255
 36803  002038  2235               	addwfc	(btemp+11)^0,f,c
 36804  00203A  5035               	movf	(btemp+11)^0,w,c
 36805  00203C  E106               	bnz	u8000
 36806  00203E  0E0A               	movlw	10
 36807  002040  5C34               	subwf	(btemp+10)^0,w,c
 36808  002042  B0D8               	btfsc	status,0,c
 36809  002044  D002               	goto	u8000
 36810  002046  0E01               	movlw	1
 36811  002048  D001               	goto	u8010
 36812  00204A                     u8000:
 36813  00204A  0E00               	movlw	0
 36814  00204C                     u8010:
 36815  00204C  6E2A               	movwf	btemp^0,c
 36816  00204E  6A2B               	clrf	(btemp+1)^0,c
 36817                           
 36818                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 36819  002050  52E5               	movf	postdec1,f,c
 36820  002052  52E5               	movf	postdec1,f,c
 36821  002054  0012               	return		;funcret
 36822  002056                     __end_of_isdigit:
 36823                           	opt callstack 0
 36824                           
 36825 ;; *************** function _set_vterm *****************
 36826 ;; Defined at:
 36827 ;;		line 110 in file "mconfig.c"
 36828 ;; Parameters:    Size  Location     Type
 36829 ;;  vterm           1  [STACK] const unsigned char 
 36830 ;; Auto vars:     Size  Location     Type
 36831 ;;		None
 36832 ;; Return value:  Size  Location     Type
 36833 ;;                  1  [STACK] unsigned char 
 36834 ;; Registers used:
 36835 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 36836 ;; Tracked objects:
 36837 ;;		On entry : 0/2
 36838 ;;		On exit  : 0/0
 36839 ;;		Unchanged: 0/0
 36840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36845 ;;Total ram usage:        0 bytes
 36846 ;; Hardware stack levels used:    1
 36847 ;; Hardware stack levels required when called:   15
 36848 ;; This function calls:
 36849 ;;		Nothing
 36850 ;; This function is called by:
 36851 ;;		_main
 36852 ;;		_check_help
 36853 ;; This function uses a reentrant model
 36854 ;;
 36855                           
 36856                           	psect	text128
 36857  002546                     __ptext128:
 36858                           	opt callstack 0
 36859  002546                     _set_vterm:
 36860                           	opt callstack 15
 36861                           
 36862                           ;mconfig.c: 110: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 111: {;mconfig.c: 112
      +                          :  D.vterm = vterm & 0x03;
 36863                           ;stkvar	_vterm @ sp[(0)+-1]
 36864                           
 36865                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36866                           ;incstack = 0
 36867  002546  0EFF               	movlw	-1
 36868  002548  006F FF8C  F035    	movff	plusw1,btemp+11
 36869  00254E  0E03               	movlw	3
 36870  002550  1635               	andwf	(btemp+11)^0,f,c
 36871  002552  EE23  F0BF         	lfsr	2,_D+640
 36872  002556  50DF               	movf	223,w,c
 36873  002558  1835               	xorwf	(btemp+11)^0,w,c
 36874  00255A  0BFE               	andlw	-2
 36875  00255C  1835               	xorwf	(btemp+11)^0,w,c
 36876  00255E  6EDF               	movwf	223,c
 36877                           
 36878                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 36879  002560  52E5               	movf	postdec1,f,c
 36880  002562  0012               	return		;funcret
 36881  002564                     __end_of_set_vterm:
 36882                           	opt callstack 0
 36883                           
 36884 ;; *************** function _set_temp_display_help *****************
 36885 ;; Defined at:
 36886 ;;		line 217 in file "mconfig.c"
 36887 ;; Parameters:    Size  Location     Type
 36888 ;;  new_response    1  [STACK] const enum E16677
 36889 ;; Auto vars:     Size  Location     Type
 36890 ;;		None
 36891 ;; Return value:  Size  Location     Type
 36892 ;;                  1  [STACK] enum E16677
 36893 ;; Registers used:
 36894 ;;		wreg, fsr1l, fsr1h
 36895 ;; Tracked objects:
 36896 ;;		On entry : 0/2
 36897 ;;		On exit  : 3F/2
 36898 ;;		Unchanged: 0/0
 36899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36904 ;;Total ram usage:        0 bytes
 36905 ;; Hardware stack levels used:    1
 36906 ;; Hardware stack levels required when called:   15
 36907 ;; This function calls:
 36908 ;;		Nothing
 36909 ;; This function is called by:
 36910 ;;		_check_help
 36911 ;; This function uses a reentrant model
 36912 ;;
 36913                           
 36914                           	psect	text129
 36915  0026A6                     __ptext129:
 36916                           	opt callstack 0
 36917  0026A6                     _set_temp_display_help:
 36918                           	opt callstack 14
 36919                           
 36920                           ;mconfig.c: 217: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 218: {;mconfig.c: 219:  static D_CODES old_info;;mconfig.c: 221:  old_info = V.respon
      +                          se.help_temp;
 36921                           
 36922                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36923                           ;incstack = 0
 36924  0026A6  0102               	movlb	2	; () banked
 36925  0026A8  51A9               	movf	(_V+162)& (0+255),w,b	;volatile
 36926                           
 36927                           ; BSR set to: 2
 36928                           ;mconfig.c: 222:  V.response.help_temp = new_response_info;
 36929                           ;stkvar	_new_response_info @ sp[(0)+-1]
 36930  0026AA  0EFF               	movlw	-1
 36931  0026AC  006F FF8C  F2A9    	movff	plusw1,_V+162	;volatile
 36932                           
 36933                           ; BSR set to: 2
 36934                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 36935  0026B2  52E5               	movf	postdec1,f,c
 36936  0026B4  0012               	return		;funcret
 36937  0026B6                     __end_of_set_temp_display_help:
 36938                           	opt callstack 0
 36939                           
 36940 ;; *************** function _set_display_info *****************
 36941 ;; Defined at:
 36942 ;;		line 206 in file "mconfig.c"
 36943 ;; Parameters:    Size  Location     Type
 36944 ;;  new_response    1  [STACK] const enum E16677
 36945 ;; Auto vars:     Size  Location     Type
 36946 ;;		None
 36947 ;; Return value:  Size  Location     Type
 36948 ;;                  1  [STACK] enum E17160
 36949 ;; Registers used:
 36950 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 36951 ;; Tracked objects:
 36952 ;;		On entry : 0/2
 36953 ;;		On exit  : 0/0
 36954 ;;		Unchanged: 0/0
 36955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36960 ;;Total ram usage:        0 bytes
 36961 ;; Hardware stack levels used:    1
 36962 ;; Hardware stack levels required when called:   16
 36963 ;; This function calls:
 36964 ;;		_TimerDone
 36965 ;; This function is called by:
 36966 ;;		_main
 36967 ;;		_check_help
 36968 ;; This function uses a reentrant model
 36969 ;;
 36970                           
 36971                           	psect	text130
 36972  002564                     __ptext130:
 36973                           	opt callstack 0
 36974  002564                     _set_display_info:
 36975                           	opt callstack 14
 36976                           
 36977                           ;mconfig.c: 206: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          7: {;mconfig.c: 208:  static D_CODES old_info = DIS_STR;;mconfig.c: 210:  if (TimerDone(
      +                          TMR_INFO)) {
 36978                           
 36979                           ; BSR set to: 2
 36980                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36981                           ;incstack = 0
 36982  002564  0E07               	movlw	7
 36983  002566  6EE6               	movwf	postinc1,c
 36984  002568  ECAD  F010         	call	_TimerDone	;wreg free
 36985  00256C  502A               	movf	btemp^0,w,c
 36986  00256E  B4D8               	btfsc	status,2,c
 36987  002570  D006               	goto	l1877
 36988                           
 36989                           ;mconfig.c: 211:   old_info = V.response.info;
 36990  002572  0102               	movlb	2	; () banked
 36991  002574  51A8               	movf	(_V+161)& (0+255),w,b	;volatile
 36992                           
 36993                           ; BSR set to: 2
 36994                           ;mconfig.c: 212:   V.response.info = new_response_info;
 36995                           ;stkvar	_new_response_info @ sp[(0)+-1]
 36996  002576  0EFF               	movlw	-1
 36997  002578  006F FF8C  F2A8    	movff	plusw1,_V+161	;volatile
 36998  00257E                     l1877:
 36999                           
 37000                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 37001  00257E  52E5               	movf	postdec1,f,c
 37002  002580  0012               	return		;funcret
 37003  002582                     __end_of_set_display_info:
 37004                           	opt callstack 0
 37005                           
 37006 ;; *************** function _mode_lamp_dim *****************
 37007 ;; Defined at:
 37008 ;;		line 13 in file "mconfig.c"
 37009 ;; Parameters:    Size  Location     Type
 37010 ;;  level           2  [STACK] const unsigned short 
 37011 ;; Auto vars:     Size  Location     Type
 37012 ;;		None
 37013 ;; Return value:  Size  Location     Type
 37014 ;;                  1  [STACK] void 
 37015 ;; Registers used:
 37016 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 37017 ;; Tracked objects:
 37018 ;;		On entry : 0/2
 37019 ;;		On exit  : 0/0
 37020 ;;		Unchanged: 0/0
 37021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37026 ;;Total ram usage:        0 bytes
 37027 ;; Hardware stack levels used:    1
 37028 ;; Hardware stack levels required when called:   16
 37029 ;; This function calls:
 37030 ;;		_PWM8_LoadDutyValue
 37031 ;; This function is called by:
 37032 ;;		_main
 37033 ;;		_check_help
 37034 ;; This function uses a reentrant model
 37035 ;;
 37036                           
 37037                           	psect	text131
 37038  0025B6                     __ptext131:
 37039                           	opt callstack 0
 37040  0025B6                     _mode_lamp_dim:
 37041                           	opt callstack 14
 37042                           
 37043                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 37044                           ;stkvar	_level @ sp[(0)+-2]
 37045                           
 37046                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37047                           ;incstack = 0
 37048  0025B6  0EFE               	movlw	-2
 37049  0025B8  006F FF8F FFE6     	movff	plusw1,postinc1
 37050  0025BE  006F FF8F FFE6     	movff	plusw1,postinc1
 37051  0025C4  ECC1  F00D         	call	_PWM8_LoadDutyValue	;wreg free
 37052                           
 37053                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 37054  0025C8  52E5               	movf	postdec1,f,c
 37055  0025CA  52E5               	movf	postdec1,f,c
 37056  0025CC  0012               	return		;funcret
 37057  0025CE                     __end_of_mode_lamp_dim:
 37058                           	opt callstack 0
 37059                           
 37060 ;; *************** function _mode_lamp_bright *****************
 37061 ;; Defined at:
 37062 ;;		line 18 in file "mconfig.c"
 37063 ;; Parameters:    Size  Location     Type
 37064 ;;		None
 37065 ;; Auto vars:     Size  Location     Type
 37066 ;;		None
 37067 ;; Return value:  Size  Location     Type
 37068 ;;                  1  [STACK] void 
 37069 ;; Registers used:
 37070 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 37071 ;; Tracked objects:
 37072 ;;		On entry : 0/0
 37073 ;;		On exit  : 0/0
 37074 ;;		Unchanged: 0/0
 37075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37080 ;;Total ram usage:        0 bytes
 37081 ;; Hardware stack levels used:    1
 37082 ;; Hardware stack levels required when called:   16
 37083 ;; This function calls:
 37084 ;;		_PWM8_LoadDutyValue
 37085 ;; This function is called by:
 37086 ;;		_check_help
 37087 ;; This function uses a reentrant model
 37088 ;;
 37089                           
 37090                           	psect	text132
 37091  0026E2                     __ptext132:
 37092                           	opt callstack 0
 37093  0026E2                     _mode_lamp_bright:
 37094                           	opt callstack 13
 37095                           
 37096                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 37097                           
 37098                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37099                           ;incstack = 0
 37100  0026E2  0E2C               	movlw	44
 37101  0026E4  6EE6               	movwf	postinc1,c
 37102  0026E6  0E01               	movlw	1
 37103  0026E8  6EE6               	movwf	postinc1,c
 37104  0026EA  ECC1  F00D         	call	_PWM8_LoadDutyValue	;wreg free
 37105                           
 37106                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 37107  0026EE  0012               	return		;funcret
 37108  0026F0                     __end_of_mode_lamp_bright:
 37109                           	opt callstack 0
 37110                           
 37111 ;; *************** function _PWM8_LoadDutyValue *****************
 37112 ;; Defined at:
 37113 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 37114 ;; Parameters:    Size  Location     Type
 37115 ;;  dutyValue       2  [STACK] unsigned short 
 37116 ;; Auto vars:     Size  Location     Type
 37117 ;;		None
 37118 ;; Return value:  Size  Location     Type
 37119 ;;                  1  [STACK] void 
 37120 ;; Registers used:
 37121 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 37122 ;; Tracked objects:
 37123 ;;		On entry : 0/2
 37124 ;;		On exit  : 0/0
 37125 ;;		Unchanged: 0/0
 37126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37131 ;;Total ram usage:        0 bytes
 37132 ;; Hardware stack levels used:    1
 37133 ;; Hardware stack levels required when called:   15
 37134 ;; This function calls:
 37135 ;;		Nothing
 37136 ;; This function is called by:
 37137 ;;		_mode_lamp_dim
 37138 ;;		_mode_lamp_bright
 37139 ;; This function uses a reentrant model
 37140 ;;
 37141                           
 37142                           	psect	text133
 37143  001B82                     __ptext133:
 37144                           	opt callstack 0
 37145  001B82                     _PWM8_LoadDutyValue:
 37146                           	opt callstack 14
 37147                           
 37148                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 37149                           ;stkvar	_dutyValue @ sp[(0)+-2]
 37150                           
 37151                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37152                           ;incstack = 0
 37153  001B82  0EFE               	movlw	-2
 37154  001B84  006F FF8C  F034    	movff	plusw1,btemp+10
 37155  001B8A  0EFF               	movlw	-1
 37156  001B8C  006F FF8C  F035    	movff	plusw1,btemp+11
 37157  001B92  90D8               	bcf	status,0,c
 37158  001B94  3235               	rrcf	(btemp+11)^0,f,c
 37159  001B96  3234               	rrcf	(btemp+10)^0,f,c
 37160  001B98  90D8               	bcf	status,0,c
 37161  001B9A  3235               	rrcf	(btemp+11)^0,f,c
 37162  001B9C  3234               	rrcf	(btemp+10)^0,f,c
 37163  001B9E  5034               	movf	(btemp+10)^0,w,c
 37164  001BA0  6E61               	movwf	97,c	;volatile
 37165                           
 37166                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 37167                           ;stkvar	_dutyValue @ sp[(0)+-2]
 37168  001BA2  0EFE               	movlw	-2
 37169  001BA4  006F FF8C  F035    	movff	plusw1,btemp+11
 37170  001BAA  0E03               	movlw	3
 37171  001BAC  1635               	andwf	(btemp+11)^0,f,c
 37172  001BAE  0E06               	movlw	6
 37173  001BB0  6E2A               	movwf	btemp^0,c
 37174  001BB2                     u12205:
 37175  001BB2  90D8               	bcf	status,0,c
 37176  001BB4  3635               	rlcf	(btemp+11)^0,f,c
 37177  001BB6  2E2A               	decfsz	btemp^0,f,c
 37178  001BB8  D7FC               	goto	u12205
 37179  001BBA  5035               	movf	(btemp+11)^0,w,c
 37180  001BBC  6E60               	movwf	96,c	;volatile
 37181                           
 37182                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 37183  001BBE  52E5               	movf	postdec1,f,c
 37184  001BC0  52E5               	movf	postdec1,f,c
 37185  001BC2  0012               	return		;funcret
 37186  001BC4                     __end_of_PWM8_LoadDutyValue:
 37187                           	opt callstack 0
 37188                           
 37189 ;; *************** function _help_button *****************
 37190 ;; Defined at:
 37191 ;;		line 26 in file "mconfig.c"
 37192 ;; Parameters:    Size  Location     Type
 37193 ;;		None
 37194 ;; Auto vars:     Size  Location     Type
 37195 ;;		None
 37196 ;; Return value:  Size  Location     Type
 37197 ;;                  1  [STACK] _Bool 
 37198 ;; Registers used:
 37199 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 37200 ;; Tracked objects:
 37201 ;;		On entry : 0/2
 37202 ;;		On exit  : 0/0
 37203 ;;		Unchanged: 0/0
 37204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37209 ;;Total ram usage:        0 bytes
 37210 ;; Hardware stack levels used:    1
 37211 ;; Hardware stack levels required when called:   16
 37212 ;; This function calls:
 37213 ;;		_StartTimer
 37214 ;;		_TimerDone
 37215 ;; This function is called by:
 37216 ;;		_check_help
 37217 ;; This function uses a reentrant model
 37218 ;;
 37219                           
 37220                           	psect	text134
 37221  001DB8                     __ptext134:
 37222                           	opt callstack 0
 37223  001DB8                     _help_button:
 37224                           	opt callstack 13
 37225                           
 37226                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 37227                           
 37228                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37229                           ;incstack = 0
 37230  001DB8  B0CB               	btfsc	203,0,c	;volatile
 37231  001DBA  D00C               	goto	l1820
 37232                           
 37233                           ;mconfig.c: 29:   V.help = 1;
 37234  001DBC  0102               	movlb	2	; () banked
 37235  001DBE  859F               	bsf	(_V+152)& (0+255),2,b	;volatile
 37236                           
 37237                           ; BSR set to: 2
 37238                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 37239  001DC0  0E08               	movlw	8
 37240  001DC2  6EE6               	movwf	postinc1,c
 37241  001DC4  ECAD  F010         	call	_TimerDone	;wreg free
 37242  001DC8  502A               	movf	btemp^0,w,c
 37243  001DCA  B4D8               	btfsc	status,2,c
 37244  001DCC  D003               	goto	l1820
 37245                           
 37246                           ;mconfig.c: 31:    return 1;
 37247  001DCE  0E01               	movlw	1
 37248  001DD0  6E2A               	movwf	btemp^0,c
 37249  001DD2  0012               	return	
 37250  001DD4                     l1820:
 37251                           
 37252                           ;mconfig.c: 34:  if (!V.help)
 37253  001DD4  0102               	movlb	2	; () banked
 37254  001DD6  B59F               	btfsc	(_V+152)& (0+255),2,b	;volatile
 37255  001DD8  D008               	goto	l13580
 37256                           
 37257                           ; BSR set to: 2
 37258                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 37259  001DDA  0E2C               	movlw	44
 37260  001DDC  6EE6               	movwf	postinc1,c
 37261  001DDE  0E01               	movlw	1
 37262  001DE0  6EE6               	movwf	postinc1,c
 37263  001DE2  0E08               	movlw	8
 37264  001DE4  6EE6               	movwf	postinc1,c
 37265  001DE6  EC22  F00E         	call	_StartTimer	;wreg free
 37266  001DEA                     l13580:
 37267                           
 37268                           ;mconfig.c: 37:  return 0;
 37269  001DEA  0E00               	movlw	0
 37270  001DEC  6E2A               	movwf	btemp^0,c
 37271                           
 37272                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 37273  001DEE  0012               	return		;funcret
 37274  001DF0                     __end_of_help_button:
 37275                           	opt callstack 0
 37276                           
 37277 ;; *************** function _TimerDone *****************
 37278 ;; Defined at:
 37279 ;;		line 20 in file "timers.c"
 37280 ;; Parameters:    Size  Location     Type
 37281 ;;  timer           1  [STACK] const unsigned char 
 37282 ;; Auto vars:     Size  Location     Type
 37283 ;;		None
 37284 ;; Return value:  Size  Location     Type
 37285 ;;                  1  [STACK] _Bool 
 37286 ;; Registers used:
 37287 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 37288 ;; Tracked objects:
 37289 ;;		On entry : 0/2
 37290 ;;		On exit  : 0/0
 37291 ;;		Unchanged: 0/0
 37292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37297 ;;Total ram usage:        0 bytes
 37298 ;; Hardware stack levels used:    1
 37299 ;; Hardware stack levels required when called:   15
 37300 ;; This function calls:
 37301 ;;		Nothing
 37302 ;; This function is called by:
 37303 ;;		_main
 37304 ;;		_WaitMs
 37305 ;;		_help_button
 37306 ;;		_check_help
 37307 ;;		_set_display_info
 37308 ;;		_update_adc_result
 37309 ;;		_esr_check
 37310 ;; This function uses a reentrant model
 37311 ;;
 37312                           
 37313                           	psect	text135
 37314  00215A                     __ptext135:
 37315                           	opt callstack 0
 37316  00215A                     _TimerDone:
 37317                           	opt callstack 14
 37318                           
 37319                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37320                           ;incstack = 0
 37321  00215A  0004               	clrwdt		;# 
 37322                           
 37323                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 37324                           ;stkvar	_timer @ sp[(0)+-1]
 37325  00215C  0EFF               	movlw	-1
 37326  00215E  50E3               	movf	plusw1,w,c
 37327  002160  0D02               	mullw	2
 37328  002162  0EBC               	movlw	low _tickCount
 37329  002164  24F3               	addwf	243,w,c
 37330  002166  6ED9               	movwf	fsr2l,c
 37331  002168  0E02               	movlw	high _tickCount
 37332  00216A  20F4               	addwfc	prodh,w,c
 37333  00216C  6EDA               	movwf	fsr2h,c
 37334  00216E  50DE               	movf	postinc2,w,c
 37335  002170  10DE               	iorwf	postinc2,w,c
 37336  002172  A4D8               	btfss	status,2,c
 37337  002174  D002               	goto	l12336
 37338                           
 37339                           ;timers.c: 24:   return 1;
 37340  002176  0E01               	movlw	1
 37341  002178  D001               	goto	L42
 37342  00217A                     l12336:
 37343                           
 37344                           ;timers.c: 26:  return 0;
 37345  00217A  0E00               	movlw	0
 37346  00217C                     L42:
 37347  00217C  6E2A               	movwf	btemp^0,c
 37348                           
 37349                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 37350  00217E  52E5               	movf	postdec1,f,c
 37351  002180  0012               	return		;funcret
 37352  002182                     __end_of_TimerDone:
 37353                           	opt callstack 0
 37354                           
 37355 ;; *************** function _StartTimer *****************
 37356 ;; Defined at:
 37357 ;;		line 12 in file "timers.c"
 37358 ;; Parameters:    Size  Location     Type
 37359 ;;  timer           1  [STACK] const unsigned char 
 37360 ;;  count           2  [STACK] const unsigned short 
 37361 ;; Auto vars:     Size  Location     Type
 37362 ;;		None
 37363 ;; Return value:  Size  Location     Type
 37364 ;;                  1  [STACK] void 
 37365 ;; Registers used:
 37366 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 37367 ;; Tracked objects:
 37368 ;;		On entry : 0/0
 37369 ;;		On exit  : 0/0
 37370 ;;		Unchanged: 0/0
 37371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37376 ;;Total ram usage:        0 bytes
 37377 ;; Hardware stack levels used:    1
 37378 ;; Hardware stack levels required when called:   15
 37379 ;; This function calls:
 37380 ;;		Nothing
 37381 ;; This function is called by:
 37382 ;;		_main
 37383 ;;		_WaitMs
 37384 ;;		_help_button
 37385 ;;		_check_help
 37386 ;;		_update_adc_result
 37387 ;;		_calc_bsoc
 37388 ;;		_esr_check
 37389 ;; This function uses a reentrant model
 37390 ;;
 37391                           
 37392                           	psect	text136
 37393  001C44                     __ptext136:
 37394                           	opt callstack 0
 37395  001C44                     _StartTimer:
 37396                           	opt callstack 0
 37397                           
 37398                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 37399                           ;stkvar	_count @ sp[(0)+-3]
 37400                           
 37401                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37402                           ;incstack = 0
 37403 ;; hardware stack exceeded
 37404  001C44  0EFD               	movlw	-3
 37405  001C46  006F FF8C  F034    	movff	plusw1,btemp+10
 37406  001C4C  0EFE               	movlw	-2
 37407  001C4E  006F FF8C  F035    	movff	plusw1,btemp+11
 37408  001C54  90D8               	bcf	status,0,c
 37409  001C56  3434               	rlcf	(btemp+10)^0,w,c
 37410  001C58  6E32               	movwf	(btemp+8)^0,c
 37411  001C5A  3435               	rlcf	(btemp+11)^0,w,c
 37412  001C5C  6E33               	movwf	(btemp+9)^0,c
 37413                           
 37414                           ;stkvar	_timer @ sp[(0)+-1]
 37415  001C5E  0EFF               	movlw	-1
 37416  001C60  50E3               	movf	plusw1,w,c
 37417  001C62  0D02               	mullw	2
 37418  001C64  0EBC               	movlw	low _tickCount
 37419  001C66  24F3               	addwf	243,w,c
 37420  001C68  6ED9               	movwf	fsr2l,c
 37421  001C6A  0E02               	movlw	high _tickCount
 37422  001C6C  20F4               	addwfc	prodh,w,c
 37423  001C6E  6EDA               	movwf	fsr2h,c
 37424  001C70  0060  F0CB  FFDE   	movff	btemp+8,postinc2
 37425  001C76  0060  F0CF  FFDD   	movff	btemp+9,postdec2
 37426                           
 37427                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 37428  001C7C  52E5               	movf	postdec1,f,c
 37429  001C7E  52E5               	movf	postdec1,f,c
 37430  001C80  52E5               	movf	postdec1,f,c
 37431  001C82  0012               	return		;funcret
 37432  001C84                     __end_of_StartTimer:
 37433                           	opt callstack 0
 37434                           
 37435 ;; *************** function _display_info *****************
 37436 ;; Defined at:
 37437 ;;		line 196 in file "mconfig.c"
 37438 ;; Parameters:    Size  Location     Type
 37439 ;;		None
 37440 ;; Auto vars:     Size  Location     Type
 37441 ;;		None
 37442 ;; Return value:  Size  Location     Type
 37443 ;;                  1  [STACK] enum E16677
 37444 ;; Registers used:
 37445 ;;		btemp
 37446 ;; Tracked objects:
 37447 ;;		On entry : 0/2
 37448 ;;		On exit  : 0/0
 37449 ;;		Unchanged: 0/0
 37450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37455 ;;Total ram usage:        0 bytes
 37456 ;; Hardware stack levels used:    1
 37457 ;; Hardware stack levels required when called:   15
 37458 ;; This function calls:
 37459 ;;		Nothing
 37460 ;; This function is called by:
 37461 ;;		_check_help
 37462 ;; This function uses a reentrant model
 37463 ;;
 37464                           
 37465                           	psect	text137
 37466  002766                     __ptext137:
 37467                           	opt callstack 0
 37468  002766                     _display_info:
 37469                           	opt callstack 14
 37470                           
 37471                           ;mconfig.c: 198:  return V.response.info;
 37472                           
 37473                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37474                           ;incstack = 0
 37475  002766  0060  FAA0  F02A   	movff	_V+161,btemp	;volatile
 37476                           
 37477                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 37478  00276C  0012               	return		;funcret
 37479  00276E                     __end_of_display_info:
 37480                           	opt callstack 0
 37481                           
 37482 ;; *************** function _display_help *****************
 37483 ;; Defined at:
 37484 ;;		line 201 in file "mconfig.c"
 37485 ;; Parameters:    Size  Location     Type
 37486 ;;		None
 37487 ;; Auto vars:     Size  Location     Type
 37488 ;;		None
 37489 ;; Return value:  Size  Location     Type
 37490 ;;                  1  [STACK] enum E16677
 37491 ;; Registers used:
 37492 ;;		btemp
 37493 ;; Tracked objects:
 37494 ;;		On entry : 3F/2
 37495 ;;		On exit  : 0/0
 37496 ;;		Unchanged: 0/0
 37497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37502 ;;Total ram usage:        0 bytes
 37503 ;; Hardware stack levels used:    1
 37504 ;; Hardware stack levels required when called:   15
 37505 ;; This function calls:
 37506 ;;		Nothing
 37507 ;; This function is called by:
 37508 ;;		_check_help
 37509 ;; This function uses a reentrant model
 37510 ;;
 37511                           
 37512                           	psect	text138
 37513  00276E                     __ptext138:
 37514                           	opt callstack 0
 37515  00276E                     _display_help:
 37516                           	opt callstack 14
 37517                           
 37518                           ;mconfig.c: 203:  return V.response.help_temp;
 37519                           
 37520                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37521                           ;incstack = 0
 37522  00276E  0060  FAA4  F02A   	movff	_V+162,btemp	;volatile
 37523                           
 37524                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 37525  002774  0012               	return		;funcret
 37526  002776                     __end_of_display_help:
 37527                           	opt callstack 0
 37528                           
 37529 ;; *************** function _check_enter_button *****************
 37530 ;; Defined at:
 37531 ;;		line 49 in file "hid.c"
 37532 ;; Parameters:    Size  Location     Type
 37533 ;;  h               2  [STACK] PTR struct H_data
 37534 ;;		 -> H(9), 
 37535 ;; Auto vars:     Size  Location     Type
 37536 ;;		None
 37537 ;; Return value:  Size  Location     Type
 37538 ;;                  1  [STACK] _Bool 
 37539 ;; Registers used:
 37540 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 37541 ;; Tracked objects:
 37542 ;;		On entry : 0/0
 37543 ;;		On exit  : 0/0
 37544 ;;		Unchanged: 0/0
 37545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37550 ;;Total ram usage:        0 bytes
 37551 ;; Hardware stack levels used:    1
 37552 ;; Hardware stack levels required when called:   15
 37553 ;; This function calls:
 37554 ;;		Nothing
 37555 ;; This function is called by:
 37556 ;;		_main
 37557 ;; This function uses a reentrant model
 37558 ;;
 37559                           
 37560                           	psect	text139
 37561  00117A                     __ptext139:
 37562                           	opt callstack 0
 37563  00117A                     _check_enter_button:
 37564                           	opt callstack 15
 37565                           
 37566                           ;hid.c: 49: _Bool check_enter_button(H_data* h);hid.c: 50: {;hid.c: 51:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 37567                           ;stkvar	_h @ sp[(0)+-2]
 37568                           
 37569                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37570                           ;incstack = 0
 37571  00117A  0EFE               	movlw	-2
 37572  00117C  006F FF8C  F034    	movff	plusw1,btemp+10
 37573  001182  0EFF               	movlw	-1
 37574  001184  006F FF8C  F035    	movff	plusw1,btemp+11
 37575  00118A  0E04               	movlw	4
 37576  00118C  2434               	addwf	(btemp+10)^0,w,c
 37577  00118E  6ED9               	movwf	fsr2l,c
 37578  001190  0E00               	movlw	0
 37579  001192  2035               	addwfc	(btemp+11)^0,w,c
 37580  001194  6EDA               	movwf	fsr2h,c
 37581  001196  50DF               	movf	indf2,w,c
 37582  001198  A4D8               	btfss	status,2,c
 37583  00119A  D023               	goto	l17256
 37584                           
 37585                           ;stkvar	_h @ sp[(0)+-2]
 37586  00119C  0EFE               	movlw	-2
 37587  00119E  006F FF8C  F034    	movff	plusw1,btemp+10
 37588  0011A4  0EFF               	movlw	-1
 37589  0011A6  006F FF8C  F035    	movff	plusw1,btemp+11
 37590  0011AC  0E05               	movlw	5
 37591  0011AE  2434               	addwf	(btemp+10)^0,w,c
 37592  0011B0  6ED9               	movwf	fsr2l,c
 37593  0011B2  0E00               	movlw	0
 37594  0011B4  2035               	addwfc	(btemp+11)^0,w,c
 37595  0011B6  6EDA               	movwf	fsr2h,c
 37596  0011B8  50DF               	movf	indf2,w,c
 37597  0011BA  A4D8               	btfss	status,2,c
 37598  0011BC  D012               	goto	l17256
 37599                           
 37600                           ;hid.c: 52:   h->wait_enter = 1;
 37601                           ;stkvar	_h @ sp[(0)+-2]
 37602  0011BE  0EFE               	movlw	-2
 37603  0011C0  006F FF8C  F034    	movff	plusw1,btemp+10
 37604  0011C6  0EFF               	movlw	-1
 37605  0011C8  006F FF8C  F035    	movff	plusw1,btemp+11
 37606  0011CE  0E04               	movlw	4
 37607  0011D0  2434               	addwf	(btemp+10)^0,w,c
 37608  0011D2  6ED9               	movwf	fsr2l,c
 37609  0011D4  0E00               	movlw	0
 37610  0011D6  2035               	addwfc	(btemp+11)^0,w,c
 37611  0011D8  6EDA               	movwf	fsr2h,c
 37612  0011DA  0E01               	movlw	1
 37613  0011DC  6EDF               	movwf	indf2,c
 37614                           
 37615                           ;hid.c: 53:   return 1;
 37616  0011DE  0E01               	movlw	1
 37617  0011E0  D001               	goto	L43
 37618  0011E2                     l17256:
 37619                           
 37620                           ;hid.c: 55:  return 0;
 37621  0011E2  0E00               	movlw	0
 37622  0011E4                     L43:
 37623  0011E4  6E2A               	movwf	btemp^0,c
 37624                           
 37625                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 37626  0011E6  52E5               	movf	postdec1,f,c
 37627  0011E8  52E5               	movf	postdec1,f,c
 37628  0011EA  0012               	return		;funcret
 37629  0011EC                     __end_of_check_enter_button:
 37630                           	opt callstack 0
 37631                           
 37632 ;; *************** function _calc_ror_data *****************
 37633 ;; Defined at:
 37634 ;;		line 103 in file "mbmc.c"
 37635 ;; Parameters:    Size  Location     Type
 37636 ;;		None
 37637 ;; Auto vars:     Size  Location     Type
 37638 ;;		None
 37639 ;; Return value:  Size  Location     Type
 37640 ;;                  1  [STACK] void 
 37641 ;; Registers used:
 37642 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 37643 ;; Tracked objects:
 37644 ;;		On entry : 0/0
 37645 ;;		On exit  : 0/0
 37646 ;;		Unchanged: 0/0
 37647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37652 ;;Total ram usage:        0 bytes
 37653 ;; Hardware stack levels used:    1
 37654 ;; Hardware stack levels required when called:   18
 37655 ;; This function calls:
 37656 ;;		___flge
 37657 ;;		___flsub
 37658 ;;		_conv_raw_result
 37659 ;;		_fabsf
 37660 ;; This function is called by:
 37661 ;;		_main
 37662 ;; This function uses a reentrant model
 37663 ;;
 37664                           
 37665                           	psect	text140
 37666  01DF42                     __ptext140:
 37667                           	opt callstack 0
 37668  01DF42                     _calc_ror_data:
 37669                           	opt callstack 12
 37670                           
 37671                           ;mbmc.c: 105:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 107:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 37672                           
 37673                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37674                           ;incstack = 0
 37675  01DF42  0060  F203  FFE6   	movff	calc_ror_data@bcror,postinc1
 37676  01DF48  0060  F207  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 37677  01DF4E  0060  F20B  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 37678  01DF54  0060  F20F  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 37679  01DF5A  0E00               	movlw	0
 37680  01DF5C  6EE6               	movwf	postinc1,c
 37681  01DF5E  0E00               	movlw	0
 37682  01DF60  6EE6               	movwf	postinc1,c
 37683  01DF62  EC26  F0C3         	call	_conv_raw_result	;wreg free
 37684  01DF66  0060  F0AB  FFE6   	movff	btemp,postinc1
 37685  01DF6C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 37686  01DF72  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 37687  01DF78  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 37688  01DF7E  EC7C  F00D         	call	___flsub	;wreg free
 37689  01DF82  0060  F0AB  FFE6   	movff	btemp,postinc1
 37690  01DF88  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 37691  01DF8E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 37692  01DF94  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 37693  01DF9A  EC00  F003         	call	_fabsf	;wreg free
 37694  01DF9E  0060  F0A8  F96F   	movff	btemp,_C+112	;volatile
 37695  01DFA4  0060  F0AC  F970   	movff	btemp+1,_C+113	;volatile
 37696  01DFAA  0060  F0B0  F971   	movff	btemp+2,_C+114	;volatile
 37697  01DFB0  0060  F0B4  F972   	movff	btemp+3,_C+115	;volatile
 37698                           
 37699                           ;mbmc.c: 108:  bcror = conv_raw_result(C_BATT, CONV);
 37700  01DFB6  0E00               	movlw	0
 37701  01DFB8  6EE6               	movwf	postinc1,c
 37702  01DFBA  0E00               	movlw	0
 37703  01DFBC  6EE6               	movwf	postinc1,c
 37704  01DFBE  EC26  F0C3         	call	_conv_raw_result	;wreg free
 37705  01DFC2  0060  F0A8  F080   	movff	btemp,calc_ror_data@bcror
 37706  01DFC8  0060  F0AC  F081   	movff	btemp+1,calc_ror_data@bcror+1
 37707  01DFCE  0060  F0B0  F082   	movff	btemp+2,calc_ror_data@bcror+2
 37708  01DFD4  0060  F0B4  F083   	movff	btemp+3,calc_ror_data@bcror+3
 37709                           
 37710                           ;mbmc.c: 109:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 37711  01DFDA  0060  F213  FFE6   	movff	calc_ror_data@bvror,postinc1
 37712  01DFE0  0060  F217  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 37713  01DFE6  0060  F21B  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 37714  01DFEC  0060  F21F  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 37715  01DFF2  0E00               	movlw	0
 37716  01DFF4  6EE6               	movwf	postinc1,c
 37717  01DFF6  0E04               	movlw	4
 37718  01DFF8  6EE6               	movwf	postinc1,c
 37719  01DFFA  EC26  F0C3         	call	_conv_raw_result	;wreg free
 37720  01DFFE  0060  F0AB  FFE6   	movff	btemp,postinc1
 37721  01E004  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 37722  01E00A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 37723  01E010  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 37724  01E016  EC7C  F00D         	call	___flsub	;wreg free
 37725  01E01A  0060  F0AB  FFE6   	movff	btemp,postinc1
 37726  01E020  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 37727  01E026  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 37728  01E02C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 37729  01E032  EC00  F003         	call	_fabsf	;wreg free
 37730  01E036  0060  F0A8  F96B   	movff	btemp,_C+108	;volatile
 37731  01E03C  0060  F0AC  F96C   	movff	btemp+1,_C+109	;volatile
 37732  01E042  0060  F0B0  F96D   	movff	btemp+2,_C+110	;volatile
 37733  01E048  0060  F0B4  F96E   	movff	btemp+3,_C+111	;volatile
 37734                           
 37735                           ;mbmc.c: 110:  if (C.bv_ror < 0.0051)
 37736  01E04E  0EE7               	movlw	231
 37737  01E050  6EE6               	movwf	postinc1,c
 37738  01E052  0E1D               	movlw	29
 37739  01E054  6EE6               	movwf	postinc1,c
 37740  01E056  0EA7               	movlw	167
 37741  01E058  6EE6               	movwf	postinc1,c
 37742  01E05A  0E3B               	movlw	59
 37743  01E05C  6EE6               	movwf	postinc1,c
 37744  01E05E  EE22  F16B         	lfsr	2,_C+108	;volatile
 37745  01E062  006F FF7B FFE6     	movff	postinc2,postinc1
 37746  01E068  006F FF7B FFE6     	movff	postinc2,postinc1
 37747  01E06E  006F FF7B FFE6     	movff	postinc2,postinc1
 37748  01E074  006F FF7B FFE6     	movff	postinc2,postinc1
 37749  01E07A  EC49  F0F3         	call	___flge	;wreg free
 37750  01E07E  B02A               	btfsc	btemp& (0+255),0,c
 37751  01E080  D010               	goto	l14170
 37752                           
 37753                           ;mbmc.c: 111:   C.bv_ror = 0.0140 + 0.0001;
 37754  01E082  0EB0               	movlw	176
 37755  01E084  006F FFA0  F96B    	movff	wreg,_C+108	;volatile
 37756  01E08A  0E03               	movlw	3
 37757  01E08C  006F FFA0  F96C    	movff	wreg,_C+109	;volatile
 37758  01E092  0E67               	movlw	103
 37759  01E094  006F FFA0  F96D    	movff	wreg,_C+110	;volatile
 37760  01E09A  0E3C               	movlw	60
 37761  01E09C  006F FFA0  F96E    	movff	wreg,_C+111	;volatile
 37762  01E0A2                     l14170:
 37763                           
 37764                           ;mbmc.c: 112:  bvror = conv_raw_result(V_BAT, CONV);
 37765  01E0A2  0E00               	movlw	0
 37766  01E0A4  6EE6               	movwf	postinc1,c
 37767  01E0A6  0E04               	movlw	4
 37768  01E0A8  6EE6               	movwf	postinc1,c
 37769  01E0AA  EC26  F0C3         	call	_conv_raw_result	;wreg free
 37770  01E0AE  0060  F0A8  F084   	movff	btemp,calc_ror_data@bvror
 37771  01E0B4  0060  F0AC  F085   	movff	btemp+1,calc_ror_data@bvror+1
 37772  01E0BA  0060  F0B0  F086   	movff	btemp+2,calc_ror_data@bvror+2
 37773  01E0C0  0060  F0B4  F087   	movff	btemp+3,calc_ror_data@bvror+3
 37774                           
 37775                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 37776  01E0C6  0012               	return		;funcret
 37777  01E0C8                     __end_of_calc_ror_data:
 37778                           	opt callstack 0
 37779                           
 37780 ;; *************** function _fabsf *****************
 37781 ;; Defined at:
 37782 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 37783 ;; Parameters:    Size  Location     Type
 37784 ;;  x               4  [STACK] float 
 37785 ;; Auto vars:     Size  Location     Type
 37786 ;;  u               4  [STACK] struct .
 37787 ;; Return value:  Size  Location     Type
 37788 ;;                  4  [STACK] float 
 37789 ;; Registers used:
 37790 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 37791 ;; Tracked objects:
 37792 ;;		On entry : 0/0
 37793 ;;		On exit  : 0/0
 37794 ;;		Unchanged: 0/0
 37795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37800 ;;Total ram usage:        0 bytes
 37801 ;; Hardware stack levels used:    1
 37802 ;; Hardware stack levels required when called:   15
 37803 ;; This function calls:
 37804 ;;		Nothing
 37805 ;; This function is called by:
 37806 ;;		_main
 37807 ;;		_calc_ror_data
 37808 ;;		_calc_bsoc
 37809 ;;		_esr_check
 37810 ;; This function uses a reentrant model
 37811 ;;
 37812                           
 37813                           	psect	text141
 37814  000600                     __ptext141:
 37815                           	opt callstack 0
 37816  000600                     _fabsf:
 37817                           	opt callstack 0
 37818                           
 37819                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37820  000600  52E6               	movf	postinc1,f,c
 37821  000602  52E6               	movf	postinc1,f,c
 37822  000604  52E6               	movf	postinc1,f,c
 37823  000606  52E6               	movf	postinc1,f,c
 37824                           
 37825                           ;incstack = 0
 37826 ;; hardware stack exceeded
 37827  000608  0060  F1E0  F032   	movff	fabsf@F463,btemp+8
 37828  00060E  0060  F1E4  F033   	movff	fabsf@F463+1,btemp+9
 37829  000614  0060  F1E8  F034   	movff	fabsf@F463+2,btemp+10
 37830  00061A  0060  F1EC  F035   	movff	fabsf@F463+3,btemp+11
 37831                           
 37832                           ;stkvar	_u @ sp[(-4)+0]
 37833  000620  0EFC               	movlw	-4
 37834  000622  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 37835  000628  0EFD               	movlw	-3
 37836  00062A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 37837  000630  0EFE               	movlw	-2
 37838  000632  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 37839  000638  0EFF               	movlw	-1
 37840  00063A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 37841                           
 37842                           ;stkvar	_x @ sp[(-4)+-4]
 37843  000640  0EF8               	movlw	-8
 37844  000642  006F FF8C  F032    	movff	plusw1,btemp+8
 37845  000648  0EF9               	movlw	-7
 37846  00064A  006F FF8C  F033    	movff	plusw1,btemp+9
 37847  000650  0EFA               	movlw	-6
 37848  000652  006F FF8C  F034    	movff	plusw1,btemp+10
 37849  000658  0EFB               	movlw	-5
 37850  00065A  006F FF8C  F035    	movff	plusw1,btemp+11
 37851                           
 37852                           ;stkvar	_u @ sp[(-4)+0]
 37853  000660  0EFC               	movlw	-4
 37854  000662  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 37855  000668  0EFD               	movlw	-3
 37856  00066A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 37857  000670  0EFE               	movlw	-2
 37858  000672  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 37859  000678  0EFF               	movlw	-1
 37860  00067A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 37861                           
 37862                           ;stkvar	_u @ sp[(-4)+0]
 37863  000680  0EFF               	movlw	-1
 37864  000682  9EE3               	bcf	plusw1,7,c
 37865                           
 37866                           ;stkvar	_u @ sp[(-4)+0]
 37867  000684  0EFC               	movlw	-4
 37868  000686  006F FF8C  F02A    	movff	plusw1,btemp
 37869  00068C  0EFD               	movlw	-3
 37870  00068E  006F FF8C  F02B    	movff	plusw1,btemp+1
 37871  000694  0EFE               	movlw	-2
 37872  000696  006F FF8C  F02C    	movff	plusw1,btemp+2
 37873  00069C  0EFF               	movlw	-1
 37874  00069E  006F FF8C  F02D    	movff	plusw1,btemp+3
 37875                           
 37876                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 37877  0006A4  0EF8               	movlw	248
 37878  0006A6  26E1               	addwf	fsr1l,f,c
 37879  0006A8  0EFF               	movlw	255
 37880  0006AA  22E2               	addwfc	fsr1h,f,c
 37881  0006AC  0012               	return		;funcret
 37882  0006AE                     __end_of_fabsf:
 37883                           	opt callstack 0
 37884                           
 37885 ;; *************** function _conv_raw_result *****************
 37886 ;; Defined at:
 37887 ;;		line 135 in file "daq.c"
 37888 ;; Parameters:    Size  Location     Type
 37889 ;;  chan            1  [STACK] const enum E16605
 37890 ;;  to_what         1  [STACK] const enum E16996
 37891 ;; Auto vars:     Size  Location     Type
 37892 ;;		None
 37893 ;; Return value:  Size  Location     Type
 37894 ;;                  4  [STACK] float 
 37895 ;; Registers used:
 37896 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 37897 ;; Tracked objects:
 37898 ;;		On entry : 0/0
 37899 ;;		On exit  : 0/0
 37900 ;;		Unchanged: 0/0
 37901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37906 ;;Total ram usage:        0 bytes
 37907 ;; Hardware stack levels used:    1
 37908 ;; Hardware stack levels required when called:   17
 37909 ;; This function calls:
 37910 ;;		___fldiv
 37911 ;;		___flmul
 37912 ;;		___flsub
 37913 ;;		___xxtofl
 37914 ;;		_get_raw_result
 37915 ;;		_nanf
 37916 ;; This function is called by:
 37917 ;;		_main
 37918 ;;		_convert_adc_data
 37919 ;;		_calc_ror_data
 37920 ;;		_check_day_time
 37921 ;;		_init_bsoc
 37922 ;;		_esr_check
 37923 ;; This function uses a reentrant model
 37924 ;;
 37925                           
 37926                           	psect	text142
 37927  01864C                     __ptext142:
 37928                           	opt callstack 0
 37929  01864C                     _conv_raw_result:
 37930                           	opt callstack 0
 37931                           
 37932                           ;daq.c: 135: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);
      +                          daq.c: 136: {;daq.c: 138:  switch (to_what) {
 37933                           
 37934                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37935                           ;incstack = 0
 37936 ;; hardware stack exceeded
 37937  01864C  D24A               	goto	l12318
 37938  01864E                     l12264:
 37939                           
 37940                           ;daq.c: 140:   if (!(0b0011110001110111 >> chan & 0x1))
 37941                           ;stkvar	_chan @ sp[(0)+-1]
 37942  01864E  0EFF               	movlw	-1
 37943  018650  006F FF8C  F035    	movff	plusw1,btemp+11
 37944  018656  0E77               	movlw	119
 37945  018658  6E32               	movwf	(btemp+8)^0,c
 37946  01865A  0E3C               	movlw	60
 37947  01865C  6E33               	movwf	(btemp+9)^0,c
 37948  01865E  2A35               	incf	(btemp+11)^0,f,c
 37949  018660  D003               	goto	u11574
 37950  018662                     u11575:
 37951  018662  3433               	rlcf	(btemp+9)^0,w,c
 37952  018664  3233               	rrcf	(btemp+9)^0,f,c
 37953  018666  3232               	rrcf	(btemp+8)^0,f,c
 37954  018668                     u11574:
 37955  018668  2E35               	decfsz	(btemp+11)^0,f,c
 37956  01866A  D7FB               	goto	u11575
 37957  01866C  B032               	btfsc	(btemp+8)^0,0,c
 37958  01866E  D007               	goto	l12270
 37959                           
 37960                           ;daq.c: 141:    return nanf("");
 37961  018670  0E75               	movlw	low (STR_90+126)
 37962  018672  6EE6               	movwf	postinc1,c
 37963  018674  0EFA               	movlw	high (STR_90+126)
 37964  018676  6EE6               	movwf	postinc1,c
 37965  018678  ECC4  F00A         	call	_nanf	;wreg free
 37966  01867C  D242               	goto	l1977
 37967  01867E                     l12270:
 37968                           
 37969                           ;daq.c: 143:   if (0b0000000000000011 >> chan & 0x1) {
 37970                           ;stkvar	_chan @ sp[(0)+-1]
 37971  01867E  0EFF               	movlw	-1
 37972  018680  006F FF8C  F035    	movff	plusw1,btemp+11
 37973  018686  0E03               	movlw	3
 37974  018688  6E32               	movwf	(btemp+8)^0,c
 37975  01868A  0E00               	movlw	0
 37976  01868C  6E33               	movwf	(btemp+9)^0,c
 37977  01868E  2A35               	incf	(btemp+11)^0,f,c
 37978  018690  D003               	goto	u11594
 37979  018692                     u11595:
 37980  018692  3433               	rlcf	(btemp+9)^0,w,c
 37981  018694  3233               	rrcf	(btemp+9)^0,f,c
 37982  018696  3232               	rrcf	(btemp+8)^0,f,c
 37983  018698                     u11594:
 37984  018698  2E35               	decfsz	(btemp+11)^0,f,c
 37985  01869A  D7FB               	goto	u11595
 37986  01869C  A032               	btfss	(btemp+8)^0,0,c
 37987  01869E  D0F3               	goto	l12284
 37988                           
 37989                           ;daq.c: 144:    if (0b0000000000000001 >> chan & 0x1) {
 37990                           ;stkvar	_chan @ sp[(0)+-1]
 37991  0186A0  0EFF               	movlw	-1
 37992  0186A2  006F FF8C  F035    	movff	plusw1,btemp+11
 37993  0186A8  0E01               	movlw	1
 37994  0186AA  6E32               	movwf	(btemp+8)^0,c
 37995  0186AC  0E00               	movlw	0
 37996  0186AE  6E33               	movwf	(btemp+9)^0,c
 37997  0186B0  2A35               	incf	(btemp+11)^0,f,c
 37998  0186B2  D003               	goto	u11614
 37999  0186B4                     u11615:
 38000  0186B4  3433               	rlcf	(btemp+9)^0,w,c
 38001  0186B6  3233               	rrcf	(btemp+9)^0,f,c
 38002  0186B8  3232               	rrcf	(btemp+8)^0,f,c
 38003  0186BA                     u11614:
 38004  0186BA  2E35               	decfsz	(btemp+11)^0,f,c
 38005  0186BC  D7FB               	goto	u11615
 38006  0186BE  A032               	btfss	(btemp+8)^0,0,c
 38007  0186C0  D071               	goto	l12280
 38008                           
 38009                           ;daq.c: 145:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[0]) * R.n_
      +                          scalar[0];
 38010  0186C2  0060  F4AB  FFE6   	movff	_R+42,postinc1
 38011  0186C8  0060  F4AF  FFE6   	movff	_R+43,postinc1
 38012  0186CE  0060  F4B3  FFE6   	movff	_R+44,postinc1
 38013  0186D4  0060  F4B7  FFE6   	movff	_R+45,postinc1
 38014  0186DA  0060  F498  F032   	movff	_R+38,btemp+8	;volatile
 38015  0186E0  0060  F49C  F033   	movff	_R+39,btemp+9	;volatile
 38016  0186E6  0E00               	movlw	0
 38017  0186E8  BE33               	btfsc	(btemp+9)^0,7,c
 38018  0186EA  0EFF               	movlw	255
 38019  0186EC  6E34               	movwf	(btemp+10)^0,c
 38020  0186EE  6E35               	movwf	(btemp+11)^0,c
 38021  0186F0  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 38022  0186F6  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 38023  0186FC  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 38024  018702  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 38025  018708  0E01               	movlw	1
 38026  01870A  6EE6               	movwf	postinc1,c
 38027  01870C  ECAF  F0E9         	call	___xxtofl	;wreg free
 38028  018710  0060  F0AB  FFE6   	movff	btemp,postinc1
 38029  018716  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38030  01871C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38031  018722  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38032                           
 38033                           ;stkvar	_chan @ sp[(-8)+-1]
 38034  018728  0EF7               	movlw	-9
 38035  01872A  50E3               	movf	plusw1,w,c
 38036  01872C  6EE6               	movwf	postinc1,c
 38037  01872E  EC32  F012         	call	_get_raw_result	;wreg free
 38038  018732  0060  F0A8  F034   	movff	btemp,btemp+10
 38039  018738  0060  F0AC  F035   	movff	btemp+1,btemp+11
 38040  01873E  5034               	movf	(btemp+10)^0,w,c
 38041  018740  6E2E               	movwf	(btemp+4)^0,c
 38042  018742  5035               	movf	(btemp+11)^0,w,c
 38043  018744  6E2F               	movwf	(btemp+5)^0,c
 38044  018746  6A30               	clrf	(btemp+6)^0,c
 38045  018748  6A31               	clrf	(btemp+7)^0,c
 38046  01874A  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 38047  018750  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 38048  018756  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 38049  01875C  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 38050  018762  0E00               	movlw	0
 38051  018764  6EE6               	movwf	postinc1,c
 38052  018766  ECAF  F0E9         	call	___xxtofl	;wreg free
 38053  01876A  0060  F0AB  FFE6   	movff	btemp,postinc1
 38054  018770  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38055  018776  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38056  01877C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38057  018782  EC7C  F00D         	call	___flsub	;wreg free
 38058  018786  0060  F0AB  FFE6   	movff	btemp,postinc1
 38059  01878C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38060  018792  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38061  018798  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38062  01879E  EC8D  F0B2         	call	___flmul	;wreg free
 38063  0187A2  D1AF               	goto	l1977
 38064  0187A4                     l12280:
 38065                           
 38066                           ;daq.c: 147:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[1]) * R.n_
      +                          scalar[1];
 38067  0187A4  0060  F4BB  FFE6   	movff	_R+46,postinc1
 38068  0187AA  0060  F4BF  FFE6   	movff	_R+47,postinc1
 38069  0187B0  0060  F4C3  FFE6   	movff	_R+48,postinc1
 38070  0187B6  0060  F4C7  FFE6   	movff	_R+49,postinc1
 38071  0187BC  0060  F4A0  F032   	movff	_R+40,btemp+8	;volatile
 38072  0187C2  0060  F4A4  F033   	movff	_R+41,btemp+9	;volatile
 38073  0187C8  0E00               	movlw	0
 38074  0187CA  BE33               	btfsc	(btemp+9)^0,7,c
 38075  0187CC  0EFF               	movlw	255
 38076  0187CE  6E34               	movwf	(btemp+10)^0,c
 38077  0187D0  6E35               	movwf	(btemp+11)^0,c
 38078  0187D2  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 38079  0187D8  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 38080  0187DE  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 38081  0187E4  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 38082  0187EA  0E01               	movlw	1
 38083  0187EC  6EE6               	movwf	postinc1,c
 38084  0187EE  ECAF  F0E9         	call	___xxtofl	;wreg free
 38085  0187F2  0060  F0AB  FFE6   	movff	btemp,postinc1
 38086  0187F8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38087  0187FE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38088  018804  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38089                           
 38090                           ;stkvar	_chan @ sp[(-8)+-1]
 38091  01880A  0EF7               	movlw	-9
 38092  01880C  50E3               	movf	plusw1,w,c
 38093  01880E  6EE6               	movwf	postinc1,c
 38094  018810  EC32  F012         	call	_get_raw_result	;wreg free
 38095  018814  0060  F0A8  F034   	movff	btemp,btemp+10
 38096  01881A  0060  F0AC  F035   	movff	btemp+1,btemp+11
 38097  018820  5034               	movf	(btemp+10)^0,w,c
 38098  018822  6E2E               	movwf	(btemp+4)^0,c
 38099  018824  5035               	movf	(btemp+11)^0,w,c
 38100  018826  6E2F               	movwf	(btemp+5)^0,c
 38101  018828  6A30               	clrf	(btemp+6)^0,c
 38102  01882A  6A31               	clrf	(btemp+7)^0,c
 38103  01882C  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 38104  018832  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 38105  018838  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 38106  01883E  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 38107  018844  0E00               	movlw	0
 38108  018846  6EE6               	movwf	postinc1,c
 38109  018848  ECAF  F0E9         	call	___xxtofl	;wreg free
 38110  01884C  0060  F0AB  FFE6   	movff	btemp,postinc1
 38111  018852  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38112  018858  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38113  01885E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38114  018864  EC7C  F00D         	call	___flsub	;wreg free
 38115  018868  0060  F0AB  FFE6   	movff	btemp,postinc1
 38116  01886E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38117  018874  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38118  01887A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38119  018880  EC8D  F0B2         	call	___flmul	;wreg free
 38120  018884  D13E               	goto	l1977
 38121  018886                     l12284:
 38122                           
 38123                           ;daq.c: 150:    if (0b0000100000000000 >> chan & 0x1) {
 38124                           ;stkvar	_chan @ sp[(0)+-1]
 38125  018886  0EFF               	movlw	-1
 38126  018888  006F FF8C  F035    	movff	plusw1,btemp+11
 38127  01888E  0E00               	movlw	0
 38128  018890  6E32               	movwf	(btemp+8)^0,c
 38129  018892  0E08               	movlw	8
 38130  018894  6E33               	movwf	(btemp+9)^0,c
 38131  018896  2A35               	incf	(btemp+11)^0,f,c
 38132  018898  D003               	goto	u11634
 38133  01889A                     u11635:
 38134  01889A  3433               	rlcf	(btemp+9)^0,w,c
 38135  01889C  3233               	rrcf	(btemp+9)^0,f,c
 38136  01889E  3232               	rrcf	(btemp+8)^0,f,c
 38137  0188A0                     u11634:
 38138  0188A0  2E35               	decfsz	(btemp+11)^0,f,c
 38139  0188A2  D7FB               	goto	u11635
 38140  0188A4  A032               	btfss	(btemp+8)^0,0,c
 38141  0188A6  D008               	goto	l12292
 38142                           
 38143                           ;daq.c: 151:     return 25.0;
 38144  0188A8  0E00               	movlw	0
 38145  0188AA  6E2A               	movwf	btemp^0,c
 38146  0188AC  0E00               	movlw	0
 38147  0188AE  6E2B               	movwf	(btemp+1)^0,c
 38148  0188B0  0EC8               	movlw	200
 38149  0188B2  6E2C               	movwf	(btemp+2)^0,c
 38150  0188B4  0E41               	movlw	65
 38151  0188B6  D113               	goto	L44
 38152  0188B8                     l12292:
 38153                           
 38154                           ;daq.c: 153:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 38155  0188B8  0E00               	movlw	0
 38156  0188BA  6EE6               	movwf	postinc1,c
 38157  0188BC  0E00               	movlw	0
 38158  0188BE  6EE6               	movwf	postinc1,c
 38159  0188C0  0E7A               	movlw	122
 38160  0188C2  6EE6               	movwf	postinc1,c
 38161  0188C4  0E44               	movlw	68
 38162  0188C6  6EE6               	movwf	postinc1,c
 38163  0188C8  0E61               	movlw	97
 38164  0188CA  6EE6               	movwf	postinc1,c
 38165  0188CC  0E03               	movlw	3
 38166  0188CE  6EE6               	movwf	postinc1,c
 38167  0188D0  0E84               	movlw	132
 38168  0188D2  6EE6               	movwf	postinc1,c
 38169  0188D4  0E40               	movlw	64
 38170  0188D6  6EE6               	movwf	postinc1,c
 38171                           
 38172                           ;stkvar	_chan @ sp[(-8)+-1]
 38173  0188D8  0EF7               	movlw	-9
 38174  0188DA  50E3               	movf	plusw1,w,c
 38175  0188DC  6EE6               	movwf	postinc1,c
 38176  0188DE  EC32  F012         	call	_get_raw_result	;wreg free
 38177  0188E2  0060  F0A8  F034   	movff	btemp,btemp+10
 38178  0188E8  0060  F0AC  F035   	movff	btemp+1,btemp+11
 38179  0188EE  5034               	movf	(btemp+10)^0,w,c
 38180  0188F0  6E2E               	movwf	(btemp+4)^0,c
 38181  0188F2  5035               	movf	(btemp+11)^0,w,c
 38182  0188F4  6E2F               	movwf	(btemp+5)^0,c
 38183  0188F6  6A30               	clrf	(btemp+6)^0,c
 38184  0188F8  6A31               	clrf	(btemp+7)^0,c
 38185  0188FA  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 38186  018900  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 38187  018906  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 38188  01890C  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 38189  018912  0E00               	movlw	0
 38190  018914  6EE6               	movwf	postinc1,c
 38191  018916  ECAF  F0E9         	call	___xxtofl	;wreg free
 38192  01891A  0060  F0AB  FFE6   	movff	btemp,postinc1
 38193  018920  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38194  018926  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38195  01892C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38196  018932  EC8D  F0B2         	call	___flmul	;wreg free
 38197  018936  0060  F0AB  FFE6   	movff	btemp,postinc1
 38198  01893C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38199  018942  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38200  018948  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38201  01894E  ECDE  F0BD         	call	___fldiv	;wreg free
 38202  018952  D0D7               	goto	l1977
 38203  018954                     l12296:
 38204                           
 38205                           ;daq.c: 158:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 38206                           ;stkvar	_chan @ sp[(0)+-1]
 38207  018954  0EFF               	movlw	-1
 38208  018956  006F FF8C  F035    	movff	plusw1,btemp+11
 38209  01895C  0E03               	movlw	3
 38210  01895E  6E32               	movwf	(btemp+8)^0,c
 38211  018960  0E00               	movlw	0
 38212  018962  6E33               	movwf	(btemp+9)^0,c
 38213  018964  2A35               	incf	(btemp+11)^0,f,c
 38214  018966  D003               	goto	u11654
 38215  018968                     u11655:
 38216  018968  3433               	rlcf	(btemp+9)^0,w,c
 38217  01896A  3233               	rrcf	(btemp+9)^0,f,c
 38218  01896C  3232               	rrcf	(btemp+8)^0,f,c
 38219  01896E                     u11654:
 38220  01896E  2E35               	decfsz	(btemp+11)^0,f,c
 38221  018970  D7FB               	goto	u11655
 38222  018972  B032               	btfsc	(btemp+8)^0,0,c
 38223  018974  D011               	goto	u11680
 38224                           
 38225                           ;stkvar	_chan @ sp[(0)+-1]
 38226  018976  0EFF               	movlw	-1
 38227  018978  006F FF8C  F035    	movff	plusw1,btemp+11
 38228  01897E  0E00               	movlw	0
 38229  018980  6E32               	movwf	(btemp+8)^0,c
 38230  018982  0E08               	movlw	8
 38231  018984  6E33               	movwf	(btemp+9)^0,c
 38232  018986  2A35               	incf	(btemp+11)^0,f,c
 38233  018988  D003               	goto	u11674
 38234  01898A                     u11675:
 38235  01898A  3433               	rlcf	(btemp+9)^0,w,c
 38236  01898C  3233               	rrcf	(btemp+9)^0,f,c
 38237  01898E  3232               	rrcf	(btemp+8)^0,f,c
 38238  018990                     u11674:
 38239  018990  2E35               	decfsz	(btemp+11)^0,f,c
 38240  018992  D7FB               	goto	u11675
 38241  018994  A032               	btfss	(btemp+8)^0,0,c
 38242  018996  D04E               	goto	l12304
 38243  018998                     u11680:
 38244                           
 38245                           ;daq.c: 159:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 38246  018998  0E00               	movlw	0
 38247  01899A  6EE6               	movwf	postinc1,c
 38248  01899C  0E00               	movlw	0
 38249  01899E  6EE6               	movwf	postinc1,c
 38250  0189A0  0E7A               	movlw	122
 38251  0189A2  6EE6               	movwf	postinc1,c
 38252  0189A4  0E44               	movlw	68
 38253  0189A6  6EE6               	movwf	postinc1,c
 38254  0189A8  0E00               	movlw	0
 38255  0189AA  6EE6               	movwf	postinc1,c
 38256  0189AC  0E00               	movlw	0
 38257  0189AE  6EE6               	movwf	postinc1,c
 38258  0189B0  0E20               	movlw	32
 38259  0189B2  6EE6               	movwf	postinc1,c
 38260  0189B4  0E3F               	movlw	63
 38261  0189B6  6EE6               	movwf	postinc1,c
 38262                           
 38263                           ;stkvar	_chan @ sp[(-8)+-1]
 38264  0189B8  0EF7               	movlw	-9
 38265  0189BA  50E3               	movf	plusw1,w,c
 38266  0189BC  6EE6               	movwf	postinc1,c
 38267  0189BE  EC32  F012         	call	_get_raw_result	;wreg free
 38268  0189C2  0060  F0A8  F034   	movff	btemp,btemp+10
 38269  0189C8  0060  F0AC  F035   	movff	btemp+1,btemp+11
 38270  0189CE  5034               	movf	(btemp+10)^0,w,c
 38271  0189D0  6E2E               	movwf	(btemp+4)^0,c
 38272  0189D2  5035               	movf	(btemp+11)^0,w,c
 38273  0189D4  6E2F               	movwf	(btemp+5)^0,c
 38274  0189D6  6A30               	clrf	(btemp+6)^0,c
 38275  0189D8  6A31               	clrf	(btemp+7)^0,c
 38276  0189DA  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 38277  0189E0  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 38278  0189E6  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 38279  0189EC  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 38280  0189F2  0E00               	movlw	0
 38281  0189F4  6EE6               	movwf	postinc1,c
 38282  0189F6  ECAF  F0E9         	call	___xxtofl	;wreg free
 38283  0189FA  0060  F0AB  FFE6   	movff	btemp,postinc1
 38284  018A00  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38285  018A06  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38286  018A0C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38287  018A12  EC8D  F0B2         	call	___flmul	;wreg free
 38288  018A16  0060  F0AB  FFE6   	movff	btemp,postinc1
 38289  018A1C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38290  018A22  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38291  018A28  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38292  018A2E  ECDE  F0BD         	call	___fldiv	;wreg free
 38293  018A32  D067               	goto	l1977
 38294  018A34                     l12304:
 38295                           
 38296                           ;daq.c: 161:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 38297  018A34  0E00               	movlw	0
 38298  018A36  6EE6               	movwf	postinc1,c
 38299  018A38  0E00               	movlw	0
 38300  018A3A  6EE6               	movwf	postinc1,c
 38301  018A3C  0E7A               	movlw	122
 38302  018A3E  6EE6               	movwf	postinc1,c
 38303  018A40  0E44               	movlw	68
 38304  018A42  6EE6               	movwf	postinc1,c
 38305  018A44  0E61               	movlw	97
 38306  018A46  6EE6               	movwf	postinc1,c
 38307  018A48  0E03               	movlw	3
 38308  018A4A  6EE6               	movwf	postinc1,c
 38309  018A4C  0E84               	movlw	132
 38310  018A4E  6EE6               	movwf	postinc1,c
 38311  018A50  0E40               	movlw	64
 38312  018A52  6EE6               	movwf	postinc1,c
 38313                           
 38314                           ;stkvar	_chan @ sp[(-8)+-1]
 38315  018A54  0EF7               	movlw	-9
 38316  018A56  50E3               	movf	plusw1,w,c
 38317  018A58  6EE6               	movwf	postinc1,c
 38318  018A5A  EC32  F012         	call	_get_raw_result	;wreg free
 38319  018A5E  0060  F0A8  F034   	movff	btemp,btemp+10
 38320  018A64  0060  F0AC  F035   	movff	btemp+1,btemp+11
 38321  018A6A  5034               	movf	(btemp+10)^0,w,c
 38322  018A6C  6E2E               	movwf	(btemp+4)^0,c
 38323  018A6E  5035               	movf	(btemp+11)^0,w,c
 38324  018A70  6E2F               	movwf	(btemp+5)^0,c
 38325  018A72  6A30               	clrf	(btemp+6)^0,c
 38326  018A74  6A31               	clrf	(btemp+7)^0,c
 38327  018A76  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 38328  018A7C  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 38329  018A82  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 38330  018A88  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 38331  018A8E  0E00               	movlw	0
 38332  018A90  6EE6               	movwf	postinc1,c
 38333  018A92  ECAF  F0E9         	call	___xxtofl	;wreg free
 38334  018A96  0060  F0AB  FFE6   	movff	btemp,postinc1
 38335  018A9C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38336  018AA2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38337  018AA8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38338  018AAE  EC8D  F0B2         	call	___flmul	;wreg free
 38339  018AB2  0060  F0AB  FFE6   	movff	btemp,postinc1
 38340  018AB8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38341  018ABE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38342  018AC4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38343  018ACA  ECDE  F0BD         	call	___fldiv	;wreg free
 38344  018ACE  D019               	goto	l1977
 38345  018AD0                     l12310:
 38346                           
 38347                           ;daq.c: 164:   return 0.0;
 38348  018AD0  0E00               	movlw	0
 38349  018AD2  6E2A               	movwf	btemp^0,c
 38350  018AD4  0E00               	movlw	0
 38351  018AD6  6E2B               	movwf	(btemp+1)^0,c
 38352  018AD8  0E00               	movlw	0
 38353  018ADA  6E2C               	movwf	(btemp+2)^0,c
 38354  018ADC  0E00               	movlw	0
 38355  018ADE                     L44:
 38356  018ADE  6E2D               	movwf	(btemp+3)^0,c
 38357  018AE0  D010               	goto	l1977
 38358  018AE2                     l12318:
 38359                           
 38360                           ;stkvar	_to_what @ sp[(0)+-2]
 38361  018AE2  0EFE               	movlw	-2
 38362  018AE4  50E3               	movf	plusw1,w,c
 38363  018AE6  6E34               	movwf	(btemp+10)^0,c
 38364  018AE8  6A35               	clrf	(btemp+11)^0,c
 38365                           
 38366                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 38367                           ; Switch size 1, requested type "simple"
 38368                           ; Number of cases is 1, Range of values is 0 to 0
 38369                           ; switch strategies available:
 38370                           ; Name         Instructions Cycles
 38371                           ; simple_byte            4     3 (average)
 38372                           ;	Chosen strategy is simple_byte
 38373  018AEA  5035               	movf	(btemp+11)^0,w,c
 38374  018AEC  0A00               	xorlw	0	; case 0
 38375  018AEE  A4D8               	btfss	status,2,c
 38376  018AF0  D7EF               	goto	l12310
 38377                           
 38378                           ; Switch size 1, requested type "simple"
 38379                           ; Number of cases is 2, Range of values is 0 to 1
 38380                           ; switch strategies available:
 38381                           ; Name         Instructions Cycles
 38382                           ; simple_byte            7     4 (average)
 38383                           ;	Chosen strategy is simple_byte
 38384  018AF2  5034               	movf	(btemp+10)^0,w,c
 38385  018AF4  0A00               	xorlw	0	; case 0
 38386  018AF6  B4D8               	btfsc	status,2,c
 38387  018AF8  D5AA               	goto	l12264
 38388  018AFA  0A01               	xorlw	1	; case 1
 38389  018AFC  B4D8               	btfsc	status,2,c
 38390  018AFE  D72A               	goto	l12296
 38391  018B00  D7E7               	goto	l12310
 38392  018B02                     l1977:
 38393                           
 38394                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 38395  018B02  52E5               	movf	postdec1,f,c
 38396  018B04  52E5               	movf	postdec1,f,c
 38397  018B06  0012               	return		;funcret
 38398  018B08                     __end_of_conv_raw_result:
 38399                           	opt callstack 0
 38400                           
 38401 ;; *************** function _nanf *****************
 38402 ;; Defined at:
 38403 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 38404 ;; Parameters:    Size  Location     Type
 38405 ;;  s               2  [STACK] PTR const unsigned char 
 38406 ;;		 -> STR_129(1), STR_89(1), 
 38407 ;; Auto vars:     Size  Location     Type
 38408 ;;  u               4  [STACK] struct .
 38409 ;; Return value:  Size  Location     Type
 38410 ;;                  4  [STACK] float 
 38411 ;; Registers used:
 38412 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 38413 ;; Tracked objects:
 38414 ;;		On entry : 0/0
 38415 ;;		On exit  : 0/0
 38416 ;;		Unchanged: 0/0
 38417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38422 ;;Total ram usage:        0 bytes
 38423 ;; Hardware stack levels used:    1
 38424 ;; Hardware stack levels required when called:   15
 38425 ;; This function calls:
 38426 ;;		Nothing
 38427 ;; This function is called by:
 38428 ;;		_conv_raw_result
 38429 ;; This function uses a reentrant model
 38430 ;;
 38431                           
 38432                           	psect	text143
 38433  001588                     __ptext143:
 38434                           	opt callstack 0
 38435  001588                     _nanf:
 38436                           	opt callstack 0
 38437                           
 38438                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38439  001588  52E6               	movf	postinc1,f,c
 38440  00158A  52E6               	movf	postinc1,f,c
 38441  00158C  52E6               	movf	postinc1,f,c
 38442  00158E  52E6               	movf	postinc1,f,c
 38443                           
 38444                           ;incstack = 0
 38445 ;; hardware stack exceeded
 38446  001590  0EFF               	movlw	255
 38447  001592  6E32               	movwf	(btemp+8)^0,c
 38448  001594  0EFF               	movlw	255
 38449  001596  6E33               	movwf	(btemp+9)^0,c
 38450  001598  0EFF               	movlw	255
 38451  00159A  6E34               	movwf	(btemp+10)^0,c
 38452  00159C  0E7F               	movlw	127
 38453  00159E  6E35               	movwf	(btemp+11)^0,c
 38454                           
 38455                           ;stkvar	_u @ sp[(-4)+0]
 38456  0015A0  0EFC               	movlw	-4
 38457  0015A2  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 38458  0015A8  0EFD               	movlw	-3
 38459  0015AA  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 38460  0015B0  0EFE               	movlw	-2
 38461  0015B2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 38462  0015B8  0EFF               	movlw	-1
 38463  0015BA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 38464                           
 38465                           ;stkvar	_u @ sp[(-4)+0]
 38466  0015C0  0EFC               	movlw	-4
 38467  0015C2  006F FF8C  F02A    	movff	plusw1,btemp
 38468  0015C8  0EFD               	movlw	-3
 38469  0015CA  006F FF8C  F02B    	movff	plusw1,btemp+1
 38470  0015D0  0EFE               	movlw	-2
 38471  0015D2  006F FF8C  F02C    	movff	plusw1,btemp+2
 38472  0015D8  0EFF               	movlw	-1
 38473  0015DA  006F FF8C  F02D    	movff	plusw1,btemp+3
 38474                           
 38475                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 38476  0015E0  0EFA               	movlw	250
 38477  0015E2  26E1               	addwf	fsr1l,f,c
 38478  0015E4  0EFF               	movlw	255
 38479  0015E6  22E2               	addwfc	fsr1h,f,c
 38480  0015E8  0012               	return		;funcret
 38481  0015EA                     __end_of_nanf:
 38482                           	opt callstack 0
 38483                           
 38484 ;; *************** function _get_raw_result *****************
 38485 ;; Defined at:
 38486 ;;		line 127 in file "daq.c"
 38487 ;; Parameters:    Size  Location     Type
 38488 ;;  index           1  [STACK] const enum E16605
 38489 ;; Auto vars:     Size  Location     Type
 38490 ;;		None
 38491 ;; Return value:  Size  Location     Type
 38492 ;;                  2  [STACK] unsigned short 
 38493 ;; Registers used:
 38494 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 38495 ;; Tracked objects:
 38496 ;;		On entry : 0/2
 38497 ;;		On exit  : 0/0
 38498 ;;		Unchanged: 0/0
 38499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38504 ;;Total ram usage:        0 bytes
 38505 ;; Hardware stack levels used:    1
 38506 ;; Hardware stack levels required when called:   15
 38507 ;; This function calls:
 38508 ;;		Nothing
 38509 ;; This function is called by:
 38510 ;;		_main
 38511 ;;		_current_sensor_cal
 38512 ;;		_conv_raw_result
 38513 ;; This function uses a reentrant model
 38514 ;;
 38515                           
 38516                           	psect	text144
 38517  002464                     __ptext144:
 38518                           	opt callstack 0
 38519  002464                     _get_raw_result:
 38520                           	opt callstack 0
 38521                           
 38522                           ;daq.c: 127: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 128: {;daq.c
      +                          : 129:  return R.raw_adc[index];
 38523                           ;stkvar	_index @ sp[(0)+-1]
 38524                           
 38525                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38526                           ;incstack = 0
 38527 ;; hardware stack exceeded
 38528  002464  0EFF               	movlw	-1
 38529  002466  50E3               	movf	plusw1,w,c
 38530  002468  0D02               	mullw	2
 38531  00246A  0E00               	movlw	low _R
 38532  00246C  24F3               	addwf	243,w,c
 38533  00246E  6ED9               	movwf	fsr2l,c
 38534  002470  0E01               	movlw	high _R
 38535  002472  20F4               	addwfc	prodh,w,c
 38536  002474  6EDA               	movwf	fsr2h,c
 38537  002476  006F FF78  F02A    	movff	postinc2,btemp
 38538  00247C  006F FF74  F02B    	movff	postdec2,btemp+1
 38539                           
 38540                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 38541  002482  52E5               	movf	postdec1,f,c
 38542  002484  0012               	return		;funcret
 38543  002486                     __end_of_get_raw_result:
 38544                           	opt callstack 0
 38545                           
 38546 ;; *************** function ___xxtofl *****************
 38547 ;; Defined at:
 38548 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 38549 ;; Parameters:    Size  Location     Type
 38550 ;;  sign            1  [STACK] unsigned char 
 38551 ;;  val             4  [STACK] long 
 38552 ;; Auto vars:     Size  Location     Type
 38553 ;;  arg             4  [STACK] unsigned long 
 38554 ;;  exp             1  [STACK] unsigned char 
 38555 ;; Return value:  Size  Location     Type
 38556 ;;                  4  [STACK] unsigned char 
 38557 ;; Registers used:
 38558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 38559 ;; Tracked objects:
 38560 ;;		On entry : 0/1
 38561 ;;		On exit  : 0/0
 38562 ;;		Unchanged: 0/0
 38563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38568 ;;Total ram usage:        0 bytes
 38569 ;; Hardware stack levels used:    1
 38570 ;; Hardware stack levels required when called:   15
 38571 ;; This function calls:
 38572 ;;		Nothing
 38573 ;; This function is called by:
 38574 ;;		_conv_raw_result
 38575 ;;		_init_bsoc
 38576 ;; This function uses a reentrant model
 38577 ;;
 38578                           
 38579                           	psect	text145
 38580  01D35E                     __ptext145:
 38581                           	opt callstack 0
 38582  01D35E                     ___xxtofl:
 38583                           	opt callstack 0
 38584                           
 38585                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38586  01D35E  0E05               	movlw	5
 38587  01D360  26E1               	addwf	fsr1l,f,c
 38588  01D362  0E00               	movlw	0
 38589  01D364  22E2               	addwfc	fsr1h,f,c
 38590                           
 38591                           ;stkvar	_sign @ sp[(-5)+-1]
 38592                           
 38593                           ;incstack = 0
 38594 ;; hardware stack exceeded
 38595  01D366  0EFA               	movlw	-6
 38596  01D368  50E3               	movf	plusw1,w,c
 38597  01D36A  B4D8               	btfsc	status,2,c
 38598  01D36C  D01D               	goto	l11986
 38599                           
 38600                           ;stkvar	_val @ sp[(-5)+-5]
 38601  01D36E  0EF9               	movlw	-7
 38602  01D370  AEE3               	btfss	plusw1,7,c
 38603  01D372  D01A               	goto	l11986
 38604                           
 38605                           ;stkvar	_val @ sp[(-5)+-5]
 38606  01D374  0EF6               	movlw	-10
 38607  01D376  006F FF8C  F032    	movff	plusw1,btemp+8
 38608  01D37C  0EF7               	movlw	-9
 38609  01D37E  006F FF8C  F033    	movff	plusw1,btemp+9
 38610  01D384  0EF8               	movlw	-8
 38611  01D386  006F FF8C  F034    	movff	plusw1,btemp+10
 38612  01D38C  0EF9               	movlw	-7
 38613  01D38E  006F FF8C  F035    	movff	plusw1,btemp+11
 38614  01D394  1E32               	comf	(btemp+8)^0,f,c
 38615  01D396  1E33               	comf	(btemp+9)^0,f,c
 38616  01D398  1E34               	comf	(btemp+10)^0,f,c
 38617  01D39A  1E35               	comf	(btemp+11)^0,f,c
 38618  01D39C  2A32               	incf	(btemp+8)^0,f,c
 38619  01D39E  0E00               	movlw	0
 38620  01D3A0  2233               	addwfc	(btemp+9)^0,f,c
 38621  01D3A2  2234               	addwfc	(btemp+10)^0,f,c
 38622  01D3A4  2235               	addwfc	(btemp+11)^0,f,c
 38623  01D3A6  D010               	goto	L45
 38624  01D3A8                     l11986:
 38625                           
 38626                           ;stkvar	_val @ sp[(-5)+-5]
 38627  01D3A8  0EF6               	movlw	-10
 38628  01D3AA  006F FF8C  F032    	movff	plusw1,btemp+8
 38629  01D3B0  0EF7               	movlw	-9
 38630  01D3B2  006F FF8C  F033    	movff	plusw1,btemp+9
 38631  01D3B8  0EF8               	movlw	-8
 38632  01D3BA  006F FF8C  F034    	movff	plusw1,btemp+10
 38633  01D3C0  0EF9               	movlw	-7
 38634  01D3C2  006F FF8C  F035    	movff	plusw1,btemp+11
 38635  01D3C8                     L45:
 38636                           
 38637                           ;stkvar	_arg @ sp[(-5)+0]
 38638  01D3C8  0EFB               	movlw	-5
 38639  01D3CA  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 38640  01D3D0  0EFC               	movlw	-4
 38641  01D3D2  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 38642  01D3D8  0EFD               	movlw	-3
 38643  01D3DA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 38644  01D3E0  0EFE               	movlw	-2
 38645  01D3E2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 38646                           
 38647                           ;stkvar	_val @ sp[(-5)+-5]
 38648  01D3E8  0EF6               	movlw	-10
 38649  01D3EA  50E3               	movf	plusw1,w,c
 38650  01D3EC  E113               	bnz	l11994
 38651  01D3EE  0EF7               	movlw	-9
 38652  01D3F0  50E3               	movf	plusw1,w,c
 38653  01D3F2  E110               	bnz	l11994
 38654  01D3F4  0EF8               	movlw	-8
 38655  01D3F6  50E3               	movf	plusw1,w,c
 38656  01D3F8  E10D               	bnz	l11994
 38657  01D3FA  0EF9               	movlw	-7
 38658  01D3FC  50E3               	movf	plusw1,w,c
 38659  01D3FE  A4D8               	btfss	status,2,c
 38660  01D400  D009               	goto	l11994
 38661  01D402  0E00               	movlw	0
 38662  01D404  6E2A               	movwf	btemp^0,c
 38663  01D406  0E00               	movlw	0
 38664  01D408  6E2B               	movwf	(btemp+1)^0,c
 38665  01D40A  0E00               	movlw	0
 38666  01D40C  6E2C               	movwf	(btemp+2)^0,c
 38667  01D40E  0E00               	movlw	0
 38668  01D410  6E2D               	movwf	(btemp+3)^0,c
 38669  01D412  D0A2               	goto	l3380
 38670  01D414                     l11994:
 38671  01D414  0E96               	movlw	150
 38672  01D416  6E35               	movwf	(btemp+11)^0,c
 38673                           
 38674                           ;stkvar	_exp @ sp[(-5)+4]
 38675  01D418  0EFF               	movlw	-1
 38676  01D41A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 38677  01D420  D00B               	goto	l11998
 38678  01D422                     l11996:
 38679                           
 38680                           ;stkvar	_exp @ sp[(-5)+4]
 38681  01D422  0EFF               	movlw	-1
 38682  01D424  2AE3               	incf	plusw1,f,c
 38683                           
 38684                           ;stkvar	_arg @ sp[(-5)+0]
 38685  01D426  90D8               	bcf	status,0,c
 38686  01D428  0EFE               	movlw	-2
 38687  01D42A  32E3               	rrcf	plusw1,f,c
 38688  01D42C  0EFD               	movlw	-3
 38689  01D42E  32E3               	rrcf	plusw1,f,c
 38690  01D430  0EFC               	movlw	-4
 38691  01D432  32E3               	rrcf	plusw1,f,c
 38692  01D434  0EFB               	movlw	-5
 38693  01D436  32E3               	rrcf	plusw1,f,c
 38694  01D438                     l11998:
 38695                           
 38696                           ;stkvar	_arg @ sp[(-5)+0]
 38697  01D438  50E1               	movf	fsr1l,w,c
 38698  01D43A  0FFB               	addlw	-5
 38699  01D43C  6ED9               	movwf	fsr2l,c
 38700  01D43E  50E2               	movf	fsr1h,w,c
 38701  01D440  6EDA               	movwf	fsr2h,c
 38702  01D442  0EFF               	movlw	255
 38703  01D444  22DA               	addwfc	fsr2h,f,c
 38704  01D446  52DE               	movf	postinc2,f,c
 38705  01D448  52DE               	movf	postinc2,f,c
 38706  01D44A  52DE               	movf	postinc2,f,c
 38707  01D44C  0EFE               	movlw	254
 38708  01D44E  14DD               	andwf	postdec2,w,c
 38709  01D450  B4D8               	btfsc	status,2,c
 38710  01D452  D018               	goto	l12006
 38711  01D454  D7E6               	goto	l11996
 38712  01D456                     l12000:
 38713                           
 38714                           ;stkvar	_exp @ sp[(-5)+4]
 38715  01D456  0EFF               	movlw	-1
 38716  01D458  2AE3               	incf	plusw1,f,c
 38717                           
 38718                           ;stkvar	_arg @ sp[(-5)+0]
 38719  01D45A  50E1               	movf	fsr1l,w,c
 38720  01D45C  0FFB               	addlw	-5
 38721  01D45E  6ED9               	movwf	fsr2l,c
 38722  01D460  50E2               	movf	fsr1h,w,c
 38723  01D462  6EDA               	movwf	fsr2h,c
 38724  01D464  0EFF               	movlw	255
 38725  01D466  22DA               	addwfc	fsr2h,f,c
 38726  01D468  2ADE               	incf	postinc2,f,c
 38727  01D46A  0E00               	movlw	0
 38728  01D46C  22DE               	addwfc	postinc2,f,c
 38729  01D46E  22DE               	addwfc	postinc2,f,c
 38730  01D470  22DE               	addwfc	postinc2,f,c
 38731                           
 38732                           ;stkvar	_arg @ sp[(-5)+0]
 38733  01D472  90D8               	bcf	status,0,c
 38734  01D474  0EFE               	movlw	-2
 38735  01D476  32E3               	rrcf	plusw1,f,c
 38736  01D478  0EFD               	movlw	-3
 38737  01D47A  32E3               	rrcf	plusw1,f,c
 38738  01D47C  0EFC               	movlw	-4
 38739  01D47E  32E3               	rrcf	plusw1,f,c
 38740  01D480  0EFB               	movlw	-5
 38741  01D482  32E3               	rrcf	plusw1,f,c
 38742  01D484                     l12006:
 38743                           
 38744                           ;stkvar	_arg @ sp[(-5)+0]
 38745  01D484  50E1               	movf	fsr1l,w,c
 38746  01D486  0FFB               	addlw	-5
 38747  01D488  6ED9               	movwf	fsr2l,c
 38748  01D48A  50E2               	movf	fsr1h,w,c
 38749  01D48C  6EDA               	movwf	fsr2h,c
 38750  01D48E  0EFF               	movlw	255
 38751  01D490  22DA               	addwfc	fsr2h,f,c
 38752  01D492  52DE               	movf	postinc2,f,c
 38753  01D494  52DE               	movf	postinc2,f,c
 38754  01D496  52DE               	movf	postinc2,f,c
 38755  01D498  0EFF               	movlw	255
 38756  01D49A  14DD               	andwf	postdec2,w,c
 38757  01D49C  B4D8               	btfsc	status,2,c
 38758  01D49E  D00C               	goto	l12010
 38759  01D4A0  D7DA               	goto	l12000
 38760  01D4A2                     l12008:
 38761                           
 38762                           ;stkvar	_exp @ sp[(-5)+4]
 38763  01D4A2  0EFF               	movlw	-1
 38764  01D4A4  06E3               	decf	plusw1,f,c
 38765                           
 38766                           ;stkvar	_arg @ sp[(-5)+0]
 38767  01D4A6  90D8               	bcf	status,0,c
 38768  01D4A8  0EFB               	movlw	-5
 38769  01D4AA  36E3               	rlcf	plusw1,f,c
 38770  01D4AC  0EFC               	movlw	-4
 38771  01D4AE  36E3               	rlcf	plusw1,f,c
 38772  01D4B0  0EFD               	movlw	-3
 38773  01D4B2  36E3               	rlcf	plusw1,f,c
 38774  01D4B4  0EFE               	movlw	-2
 38775  01D4B6  36E3               	rlcf	plusw1,f,c
 38776  01D4B8                     l12010:
 38777                           
 38778                           ;stkvar	_arg @ sp[(-5)+0]
 38779  01D4B8  0EFD               	movlw	-3
 38780  01D4BA  BEE3               	btfsc	plusw1,7,c
 38781  01D4BC  D007               	goto	u11330
 38782                           
 38783                           ;stkvar	_exp @ sp[(-5)+4]
 38784  01D4BE  0EFF               	movlw	-1
 38785  01D4C0  006F FF8C  F02A    	movff	plusw1,btemp
 38786  01D4C6  0E02               	movlw	2
 38787  01D4C8  602A               	cpfslt	btemp^0,c
 38788  01D4CA  D7EB               	goto	l12008
 38789  01D4CC                     u11330:
 38790                           
 38791                           ;stkvar	_exp @ sp[(-5)+4]
 38792  01D4CC  0EFF               	movlw	-1
 38793  01D4CE  B0E3               	btfsc	plusw1,0,c
 38794  01D4D0  D002               	goto	l12018
 38795                           
 38796                           ;stkvar	_arg @ sp[(-5)+0]
 38797  01D4D2  0EFD               	movlw	-3
 38798  01D4D4  9EE3               	bcf	plusw1,7,c
 38799  01D4D6                     l12018:
 38800                           
 38801                           ;stkvar	_exp @ sp[(-5)+4]
 38802  01D4D6  50E1               	movf	fsr1l,w,c
 38803  01D4D8  0FFF               	addlw	-1
 38804  01D4DA  6ED9               	movwf	fsr2l,c
 38805  01D4DC  50E2               	movf	fsr1h,w,c
 38806  01D4DE  6EDA               	movwf	fsr2h,c
 38807  01D4E0  0EFF               	movlw	255
 38808  01D4E2  22DA               	addwfc	fsr2h,f,c
 38809  01D4E4  90D8               	bcf	status,0,c
 38810  01D4E6  32DF               	rrcf	indf2,f,c
 38811                           
 38812                           ;stkvar	_exp @ sp[(-5)+4]
 38813  01D4E8  0EFF               	movlw	-1
 38814  01D4EA  006F FF8C  F035    	movff	plusw1,btemp+11
 38815  01D4F0  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 38816  01D4F6  6A2F               	clrf	(btemp+5)^0,c
 38817  01D4F8  6A30               	clrf	(btemp+6)^0,c
 38818  01D4FA  6A31               	clrf	(btemp+7)^0,c
 38819  01D4FC  0060  F0B8  F031   	movff	btemp+4,btemp+7
 38820  01D502  6A30               	clrf	(btemp+6)^0,c
 38821  01D504  6A2F               	clrf	(btemp+5)^0,c
 38822  01D506  6A2E               	clrf	(btemp+4)^0,c
 38823                           
 38824                           ;stkvar	_arg @ sp[(-5)+0]
 38825  01D508  50E1               	movf	fsr1l,w,c
 38826  01D50A  0FFB               	addlw	-5
 38827  01D50C  6ED9               	movwf	fsr2l,c
 38828  01D50E  50E2               	movf	fsr1h,w,c
 38829  01D510  6EDA               	movwf	fsr2h,c
 38830  01D512  0EFF               	movlw	255
 38831  01D514  22DA               	addwfc	fsr2h,f,c
 38832  01D516  502E               	movf	(btemp+4)^0,w,c
 38833  01D518  12DE               	iorwf	postinc2,f,c
 38834  01D51A  502F               	movf	(btemp+5)^0,w,c
 38835  01D51C  12DE               	iorwf	postinc2,f,c
 38836  01D51E  5030               	movf	(btemp+6)^0,w,c
 38837  01D520  12DE               	iorwf	postinc2,f,c
 38838  01D522  5031               	movf	(btemp+7)^0,w,c
 38839  01D524  12DE               	iorwf	postinc2,f,c
 38840                           
 38841                           ;stkvar	_sign @ sp[(-5)+-1]
 38842  01D526  0EFA               	movlw	-6
 38843  01D528  50E3               	movf	plusw1,w,c
 38844  01D52A  B4D8               	btfsc	status,2,c
 38845  01D52C  D005               	goto	l12028
 38846                           
 38847                           ;stkvar	_val @ sp[(-5)+-5]
 38848  01D52E  0EF9               	movlw	-7
 38849  01D530  AEE3               	btfss	plusw1,7,c
 38850  01D532  D002               	goto	l12028
 38851                           
 38852                           ;stkvar	_arg @ sp[(-5)+0]
 38853  01D534  0EFE               	movlw	-2
 38854  01D536  8EE3               	bsf	plusw1,7,c
 38855  01D538                     l12028:
 38856                           
 38857                           ;stkvar	_arg @ sp[(-5)+0]
 38858  01D538  0EFB               	movlw	-5
 38859  01D53A  006F FF8C  F02A    	movff	plusw1,btemp
 38860  01D540  0EFC               	movlw	-4
 38861  01D542  006F FF8C  F02B    	movff	plusw1,btemp+1
 38862  01D548  0EFD               	movlw	-3
 38863  01D54A  006F FF8C  F02C    	movff	plusw1,btemp+2
 38864  01D550  0EFE               	movlw	-2
 38865  01D552  006F FF8C  F02D    	movff	plusw1,btemp+3
 38866  01D558                     l3380:
 38867                           
 38868                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 38869  01D558  0EF6               	movlw	246
 38870  01D55A  26E1               	addwf	fsr1l,f,c
 38871  01D55C  0EFF               	movlw	255
 38872  01D55E  22E2               	addwfc	fsr1h,f,c
 38873  01D560  0012               	return		;funcret
 38874  01D562                     __end_of___xxtofl:
 38875                           	opt callstack 0
 38876                           
 38877 ;; *************** function ___fldiv *****************
 38878 ;; Defined at:
 38879 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 38880 ;; Parameters:    Size  Location     Type
 38881 ;;  b               4  [STACK] unsigned char 
 38882 ;;  a               4  [STACK] unsigned char 
 38883 ;; Auto vars:     Size  Location     Type
 38884 ;;  grs             4  [STACK] unsigned long 
 38885 ;;  rem             4  [STACK] unsigned long 
 38886 ;;  new_exp         2  [STACK] short 
 38887 ;;  aexp            1  [STACK] unsigned char 
 38888 ;;  bexp            1  [STACK] unsigned char 
 38889 ;;  sign            1  [STACK] unsigned char 
 38890 ;; Return value:  Size  Location     Type
 38891 ;;                  4  [STACK] unsigned char 
 38892 ;; Registers used:
 38893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 38894 ;; Tracked objects:
 38895 ;;		On entry : 0/3D
 38896 ;;		On exit  : 0/0
 38897 ;;		Unchanged: 0/0
 38898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38903 ;;Total ram usage:        0 bytes
 38904 ;; Hardware stack levels used:    1
 38905 ;; Hardware stack levels required when called:   15
 38906 ;; This function calls:
 38907 ;;		Nothing
 38908 ;; This function is called by:
 38909 ;;		_conv_raw_result
 38910 ;;		_convert_dac_raw
 38911 ;;		_load_hist_data
 38912 ;;		_calc_bsoc
 38913 ;;		_init_bsoc
 38914 ;;		_esr_check
 38915 ;;		_efgtoa
 38916 ;; This function uses a reentrant model
 38917 ;;
 38918                           
 38919                           	psect	text146
 38920  017BBC                     __ptext146:
 38921                           	opt callstack 0
 38922  017BBC                     ___fldiv:
 38923                           	opt callstack 0
 38924                           
 38925                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 38926  017BBC  0E0D               	movlw	13
 38927  017BBE  26E1               	addwf	fsr1l,f,c
 38928  017BC0  0E00               	movlw	0
 38929  017BC2  22E2               	addwfc	fsr1h,f,c
 38930                           
 38931                           ;stkvar	_b @ sp[(-13)+-4]
 38932                           
 38933                           ;incstack = 0
 38934 ;; hardware stack exceeded
 38935  017BC4  0EF2               	movlw	242
 38936  017BC6  24E1               	addwf	fsr1l,w,c
 38937  017BC8  6ED9               	movwf	fsr2l,c
 38938  017BCA  0EFF               	movlw	255
 38939  017BCC  20E2               	addwfc	fsr1h,w,c
 38940  017BCE  6EDA               	movwf	fsr2h,c
 38941  017BD0  50DF               	movf	indf2,w,c
 38942  017BD2  6E35               	movwf	(btemp+11)^0,c
 38943  017BD4  0E80               	movlw	128
 38944  017BD6  1635               	andwf	(btemp+11)^0,f,c
 38945                           
 38946                           ;stkvar	_sign @ sp[(-13)+12]
 38947  017BD8  0EFF               	movlw	-1
 38948  017BDA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 38949                           
 38950                           ;stkvar	_b @ sp[(-13)+-4]
 38951  017BE0  0EF2               	movlw	242
 38952  017BE2  24E1               	addwf	fsr1l,w,c
 38953  017BE4  6ED9               	movwf	fsr2l,c
 38954  017BE6  0EFF               	movlw	255
 38955  017BE8  20E2               	addwfc	fsr1h,w,c
 38956  017BEA  6EDA               	movwf	fsr2h,c
 38957  017BEC  50DF               	movf	indf2,w,c
 38958  017BEE  6E35               	movwf	(btemp+11)^0,c
 38959  017BF0  90D8               	bcf	status,0,c
 38960  017BF2  3435               	rlcf	(btemp+11)^0,w,c
 38961  017BF4  6E34               	movwf	(btemp+10)^0,c
 38962                           
 38963                           ;stkvar	_bexp @ sp[(-13)+11]
 38964  017BF6  0EFE               	movlw	-2
 38965  017BF8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 38966                           
 38967                           ;stkvar	_b @ sp[(-13)+-4]
 38968  017BFE  0EF1               	movlw	241
 38969  017C00  24E1               	addwf	fsr1l,w,c
 38970  017C02  6ED9               	movwf	fsr2l,c
 38971  017C04  0EFF               	movlw	255
 38972  017C06  20E2               	addwfc	fsr1h,w,c
 38973  017C08  6EDA               	movwf	fsr2h,c
 38974  017C0A  AEDF               	btfss	indf2,7,c
 38975  017C0C  D002               	goto	l10284
 38976                           
 38977                           ;stkvar	_bexp @ sp[(-13)+11]
 38978  017C0E  0EFE               	movlw	-2
 38979  017C10  80E3               	bsf	plusw1,0,c
 38980  017C12                     l10284:
 38981                           
 38982                           ;stkvar	_bexp @ sp[(-13)+11]
 38983  017C12  0EFE               	movlw	-2
 38984  017C14  50E3               	movf	plusw1,w,c
 38985  017C16  B4D8               	btfsc	status,2,c
 38986  017C18  D027               	goto	l10294
 38987                           
 38988                           ;stkvar	_bexp @ sp[(-13)+11]
 38989  017C1A  0EFE               	movlw	-2
 38990  017C1C  28E3               	incf	plusw1,w,c
 38991  017C1E  A4D8               	btfss	status,2,c
 38992  017C20  D018               	goto	l10290
 38993  017C22  0E00               	movlw	0
 38994  017C24  6E32               	movwf	(btemp+8)^0,c
 38995  017C26  0E00               	movlw	0
 38996  017C28  6E33               	movwf	(btemp+9)^0,c
 38997  017C2A  0E00               	movlw	0
 38998  017C2C  6E34               	movwf	(btemp+10)^0,c
 38999  017C2E  0E00               	movlw	0
 39000  017C30  6E35               	movwf	(btemp+11)^0,c
 39001                           
 39002                           ;stkvar	_b @ sp[(-13)+-4]
 39003  017C32  0EEF               	movlw	-17
 39004  017C34  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39005  017C3A  0EF0               	movlw	-16
 39006  017C3C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39007  017C42  0EF1               	movlw	-15
 39008  017C44  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39009  017C4A  0EF2               	movlw	-14
 39010  017C4C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39011  017C52                     l10290:
 39012                           
 39013                           ;stkvar	_b @ sp[(-13)+-4]
 39014  017C52  0EF1               	movlw	-15
 39015  017C54  8EE3               	bsf	plusw1,7,c
 39016                           
 39017                           ;stkvar	_b @ sp[(-13)+-4]
 39018  017C56  0EF2               	movlw	242
 39019  017C58  24E1               	addwf	fsr1l,w,c
 39020  017C5A  6ED9               	movwf	fsr2l,c
 39021  017C5C  0EFF               	movlw	255
 39022  017C5E  20E2               	addwfc	fsr1h,w,c
 39023  017C60  6EDA               	movwf	fsr2h,c
 39024  017C62  0E00               	movlw	0
 39025  017C64  6EDF               	movwf	indf2,c
 39026  017C66  D018               	goto	l10296
 39027  017C68                     l10294:
 39028  017C68  0E00               	movlw	0
 39029  017C6A  6E32               	movwf	(btemp+8)^0,c
 39030  017C6C  0E00               	movlw	0
 39031  017C6E  6E33               	movwf	(btemp+9)^0,c
 39032  017C70  0E00               	movlw	0
 39033  017C72  6E34               	movwf	(btemp+10)^0,c
 39034  017C74  0E00               	movlw	0
 39035  017C76  6E35               	movwf	(btemp+11)^0,c
 39036                           
 39037                           ;stkvar	_b @ sp[(-13)+-4]
 39038  017C78  0EEF               	movlw	-17
 39039  017C7A  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39040  017C80  0EF0               	movlw	-16
 39041  017C82  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39042  017C88  0EF1               	movlw	-15
 39043  017C8A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39044  017C90  0EF2               	movlw	-14
 39045  017C92  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39046  017C98                     l10296:
 39047                           
 39048                           ;stkvar	_a @ sp[(-13)+-8]
 39049  017C98  0EEE               	movlw	238
 39050  017C9A  24E1               	addwf	fsr1l,w,c
 39051  017C9C  6ED9               	movwf	fsr2l,c
 39052  017C9E  0EFF               	movlw	255
 39053  017CA0  20E2               	addwfc	fsr1h,w,c
 39054  017CA2  6EDA               	movwf	fsr2h,c
 39055  017CA4  50DF               	movf	indf2,w,c
 39056  017CA6  6E35               	movwf	(btemp+11)^0,c
 39057  017CA8  0E80               	movlw	128
 39058  017CAA  1635               	andwf	(btemp+11)^0,f,c
 39059                           
 39060                           ;stkvar	_sign @ sp[(-13)+12]
 39061  017CAC  50E1               	movf	fsr1l,w,c
 39062  017CAE  0FFF               	addlw	-1
 39063  017CB0  6ED9               	movwf	fsr2l,c
 39064  017CB2  50E2               	movf	fsr1h,w,c
 39065  017CB4  6EDA               	movwf	fsr2h,c
 39066  017CB6  0EFF               	movlw	255
 39067  017CB8  22DA               	addwfc	fsr2h,f,c
 39068  017CBA  5035               	movf	(btemp+11)^0,w,c
 39069  017CBC  1ADF               	xorwf	indf2,f,c
 39070                           
 39071                           ;stkvar	_a @ sp[(-13)+-8]
 39072  017CBE  0EEE               	movlw	238
 39073  017CC0  24E1               	addwf	fsr1l,w,c
 39074  017CC2  6ED9               	movwf	fsr2l,c
 39075  017CC4  0EFF               	movlw	255
 39076  017CC6  20E2               	addwfc	fsr1h,w,c
 39077  017CC8  6EDA               	movwf	fsr2h,c
 39078  017CCA  50DF               	movf	indf2,w,c
 39079  017CCC  6E35               	movwf	(btemp+11)^0,c
 39080  017CCE  90D8               	bcf	status,0,c
 39081  017CD0  3435               	rlcf	(btemp+11)^0,w,c
 39082  017CD2  6E34               	movwf	(btemp+10)^0,c
 39083                           
 39084                           ;stkvar	_aexp @ sp[(-13)+10]
 39085  017CD4  0EFD               	movlw	-3
 39086  017CD6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39087                           
 39088                           ;stkvar	_a @ sp[(-13)+-8]
 39089  017CDC  0EED               	movlw	237
 39090  017CDE  24E1               	addwf	fsr1l,w,c
 39091  017CE0  6ED9               	movwf	fsr2l,c
 39092  017CE2  0EFF               	movlw	255
 39093  017CE4  20E2               	addwfc	fsr1h,w,c
 39094  017CE6  6EDA               	movwf	fsr2h,c
 39095  017CE8  AEDF               	btfss	indf2,7,c
 39096  017CEA  D002               	goto	l10304
 39097                           
 39098                           ;stkvar	_aexp @ sp[(-13)+10]
 39099  017CEC  0EFD               	movlw	-3
 39100  017CEE  80E3               	bsf	plusw1,0,c
 39101  017CF0                     l10304:
 39102                           
 39103                           ;stkvar	_aexp @ sp[(-13)+10]
 39104  017CF0  0EFD               	movlw	-3
 39105  017CF2  50E3               	movf	plusw1,w,c
 39106  017CF4  B4D8               	btfsc	status,2,c
 39107  017CF6  D027               	goto	l10314
 39108                           
 39109                           ;stkvar	_aexp @ sp[(-13)+10]
 39110  017CF8  0EFD               	movlw	-3
 39111  017CFA  28E3               	incf	plusw1,w,c
 39112  017CFC  A4D8               	btfss	status,2,c
 39113  017CFE  D018               	goto	l10310
 39114  017D00  0E00               	movlw	0
 39115  017D02  6E32               	movwf	(btemp+8)^0,c
 39116  017D04  0E00               	movlw	0
 39117  017D06  6E33               	movwf	(btemp+9)^0,c
 39118  017D08  0E00               	movlw	0
 39119  017D0A  6E34               	movwf	(btemp+10)^0,c
 39120  017D0C  0E00               	movlw	0
 39121  017D0E  6E35               	movwf	(btemp+11)^0,c
 39122                           
 39123                           ;stkvar	_a @ sp[(-13)+-8]
 39124  017D10  0EEB               	movlw	-21
 39125  017D12  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39126  017D18  0EEC               	movlw	-20
 39127  017D1A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39128  017D20  0EED               	movlw	-19
 39129  017D22  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39130  017D28  0EEE               	movlw	-18
 39131  017D2A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39132  017D30                     l10310:
 39133                           
 39134                           ;stkvar	_a @ sp[(-13)+-8]
 39135  017D30  0EED               	movlw	-19
 39136  017D32  8EE3               	bsf	plusw1,7,c
 39137                           
 39138                           ;stkvar	_a @ sp[(-13)+-8]
 39139  017D34  0EEE               	movlw	238
 39140  017D36  24E1               	addwf	fsr1l,w,c
 39141  017D38  6ED9               	movwf	fsr2l,c
 39142  017D3A  0EFF               	movlw	255
 39143  017D3C  20E2               	addwfc	fsr1h,w,c
 39144  017D3E  6EDA               	movwf	fsr2h,c
 39145  017D40  0E00               	movlw	0
 39146  017D42  6EDF               	movwf	indf2,c
 39147  017D44  D018               	goto	l10316
 39148  017D46                     l10314:
 39149  017D46  0E00               	movlw	0
 39150  017D48  6E32               	movwf	(btemp+8)^0,c
 39151  017D4A  0E00               	movlw	0
 39152  017D4C  6E33               	movwf	(btemp+9)^0,c
 39153  017D4E  0E00               	movlw	0
 39154  017D50  6E34               	movwf	(btemp+10)^0,c
 39155  017D52  0E00               	movlw	0
 39156  017D54  6E35               	movwf	(btemp+11)^0,c
 39157                           
 39158                           ;stkvar	_a @ sp[(-13)+-8]
 39159  017D56  0EEB               	movlw	-21
 39160  017D58  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39161  017D5E  0EEC               	movlw	-20
 39162  017D60  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39163  017D66  0EED               	movlw	-19
 39164  017D68  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39165  017D6E  0EEE               	movlw	-18
 39166  017D70  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39167  017D76                     l10316:
 39168                           
 39169                           ;stkvar	_a @ sp[(-13)+-8]
 39170  017D76  0EEB               	movlw	-21
 39171  017D78  50E3               	movf	plusw1,w,c
 39172  017D7A  E139               	bnz	l10328
 39173  017D7C  0EEC               	movlw	-20
 39174  017D7E  50E3               	movf	plusw1,w,c
 39175  017D80  E136               	bnz	l10328
 39176  017D82  0EED               	movlw	-19
 39177  017D84  50E3               	movf	plusw1,w,c
 39178  017D86  E133               	bnz	l10328
 39179  017D88  0EEE               	movlw	-18
 39180  017D8A  50E3               	movf	plusw1,w,c
 39181  017D8C  A4D8               	btfss	status,2,c
 39182  017D8E  D02F               	goto	l10328
 39183                           
 39184                           ;stkvar	_b @ sp[(-13)+-4]
 39185  017D90  0EEF               	movlw	-17
 39186  017D92  6AE3               	clrf	plusw1,c
 39187  017D94  0EF0               	movlw	-16
 39188  017D96  6AE3               	clrf	plusw1,c
 39189  017D98  0EF1               	movlw	-15
 39190  017D9A  6AE3               	clrf	plusw1,c
 39191  017D9C  0EF2               	movlw	-14
 39192  017D9E  6AE3               	clrf	plusw1,c
 39193                           
 39194                           ;stkvar	_b @ sp[(-13)+-4]
 39195  017DA0  0EF1               	movlw	241
 39196  017DA2  24E1               	addwf	fsr1l,w,c
 39197  017DA4  6ED9               	movwf	fsr2l,c
 39198  017DA6  0EFF               	movlw	255
 39199  017DA8  20E2               	addwfc	fsr1h,w,c
 39200  017DAA  6EDA               	movwf	fsr2h,c
 39201  017DAC  0E80               	movlw	128
 39202  017DAE  12DE               	iorwf	postinc2,f,c
 39203  017DB0  0E7F               	movlw	127
 39204  017DB2  12DD               	iorwf	postdec2,f,c
 39205  017DB4                     l10322:
 39206                           
 39207                           ;stkvar	_sign @ sp[(-13)+12]
 39208  017DB4  0EFF               	movlw	-1
 39209  017DB6  006F FF8C  F035    	movff	plusw1,btemp+11
 39210                           
 39211                           ;stkvar	_b @ sp[(-13)+-4]
 39212  017DBC  0EF2               	movlw	242
 39213  017DBE  24E1               	addwf	fsr1l,w,c
 39214  017DC0  6ED9               	movwf	fsr2l,c
 39215  017DC2  0EFF               	movlw	255
 39216  017DC4  20E2               	addwfc	fsr1h,w,c
 39217  017DC6  6EDA               	movwf	fsr2h,c
 39218  017DC8  5035               	movf	(btemp+11)^0,w,c
 39219  017DCA  12DF               	iorwf	indf2,f,c
 39220                           
 39221                           ;stkvar	_b @ sp[(-13)+-4]
 39222  017DCC  0EEF               	movlw	-17
 39223  017DCE  006F FF8C  F02A    	movff	plusw1,btemp
 39224  017DD4  0EF0               	movlw	-16
 39225  017DD6  006F FF8C  F02B    	movff	plusw1,btemp+1
 39226  017DDC  0EF1               	movlw	-15
 39227  017DDE  006F FF8C  F02C    	movff	plusw1,btemp+2
 39228  017DE4  0EF2               	movlw	-14
 39229  017DE6  006F FF8C  F02D    	movff	plusw1,btemp+3
 39230  017DEC  D19F               	goto	l3304
 39231  017DEE                     l10328:
 39232                           
 39233                           ;stkvar	_bexp @ sp[(-13)+11]
 39234  017DEE  0EFE               	movlw	-2
 39235  017DF0  50E3               	movf	plusw1,w,c
 39236  017DF2  A4D8               	btfss	status,2,c
 39237  017DF4  D009               	goto	l10336
 39238  017DF6  0E00               	movlw	0
 39239  017DF8  6E2A               	movwf	btemp^0,c
 39240  017DFA  0E00               	movlw	0
 39241  017DFC  6E2B               	movwf	(btemp+1)^0,c
 39242  017DFE  0E00               	movlw	0
 39243  017E00  6E2C               	movwf	(btemp+2)^0,c
 39244  017E02  0E00               	movlw	0
 39245  017E04  6E2D               	movwf	(btemp+3)^0,c
 39246  017E06  D192               	goto	l3304
 39247  017E08                     l10336:
 39248                           
 39249                           ;stkvar	_bexp @ sp[(-13)+11]
 39250  017E08  0EFE               	movlw	-2
 39251  017E0A  50E3               	movf	plusw1,w,c
 39252  017E0C  6E34               	movwf	(btemp+10)^0,c
 39253  017E0E  6A35               	clrf	(btemp+11)^0,c
 39254                           
 39255                           ;stkvar	_aexp @ sp[(-13)+10]
 39256  017E10  0EFD               	movlw	-3
 39257  017E12  50E3               	movf	plusw1,w,c
 39258  017E14  5E34               	subwf	(btemp+10)^0,f,c
 39259  017E16  0E00               	movlw	0
 39260  017E18  5A35               	subwfb	(btemp+11)^0,f,c
 39261  017E1A  0E7F               	movlw	127
 39262  017E1C  2634               	addwf	(btemp+10)^0,f,c
 39263  017E1E  0E00               	movlw	0
 39264  017E20  2235               	addwfc	(btemp+11)^0,f,c
 39265                           
 39266                           ;stkvar	_new_exp @ sp[(-13)+8]
 39267  017E22  0EFB               	movlw	-5
 39268  017E24  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39269  017E2A  0EFC               	movlw	-4
 39270  017E2C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39271                           
 39272                           ;stkvar	_b @ sp[(-13)+-4]
 39273  017E32  0EEF               	movlw	-17
 39274  017E34  006F FF8C  F032    	movff	plusw1,btemp+8
 39275  017E3A  0EF0               	movlw	-16
 39276  017E3C  006F FF8C  F033    	movff	plusw1,btemp+9
 39277  017E42  0EF1               	movlw	-15
 39278  017E44  006F FF8C  F034    	movff	plusw1,btemp+10
 39279  017E4A  0EF2               	movlw	-14
 39280  017E4C  006F FF8C  F035    	movff	plusw1,btemp+11
 39281                           
 39282                           ;stkvar	_rem @ sp[(-13)+4]
 39283  017E52  0EF7               	movlw	-9
 39284  017E54  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39285  017E5A  0EF8               	movlw	-8
 39286  017E5C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39287  017E62  0EF9               	movlw	-7
 39288  017E64  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39289  017E6A  0EFA               	movlw	-6
 39290  017E6C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39291                           
 39292                           ;stkvar	_b @ sp[(-13)+-4]
 39293  017E72  0EEF               	movlw	-17
 39294  017E74  6AE3               	clrf	plusw1,c
 39295  017E76  0EF0               	movlw	-16
 39296  017E78  6AE3               	clrf	plusw1,c
 39297  017E7A  0EF1               	movlw	-15
 39298  017E7C  6AE3               	clrf	plusw1,c
 39299  017E7E  0EF2               	movlw	-14
 39300  017E80  6AE3               	clrf	plusw1,c
 39301                           
 39302                           ;stkvar	_grs @ sp[(-13)+0]
 39303  017E82  0EF3               	movlw	-13
 39304  017E84  6AE3               	clrf	plusw1,c
 39305  017E86  0EF4               	movlw	-12
 39306  017E88  6AE3               	clrf	plusw1,c
 39307  017E8A  0EF5               	movlw	-11
 39308  017E8C  6AE3               	clrf	plusw1,c
 39309  017E8E  0EF6               	movlw	-10
 39310  017E90  6AE3               	clrf	plusw1,c
 39311                           
 39312                           ;stkvar	_aexp @ sp[(-13)+10]
 39313  017E92  0EFD               	movlw	-3
 39314  017E94  6AE3               	clrf	plusw1,c
 39315  017E96  D050               	goto	l10364
 39316  017E98                     l10346:
 39317                           
 39318                           ;stkvar	_aexp @ sp[(-13)+10]
 39319  017E98  0EFD               	movlw	-3
 39320  017E9A  50E3               	movf	plusw1,w,c
 39321  017E9C  B4D8               	btfsc	status,2,c
 39322  017E9E  D020               	goto	l10356
 39323                           
 39324                           ;stkvar	_rem @ sp[(-13)+4]
 39325  017EA0  90D8               	bcf	status,0,c
 39326  017EA2  0EF7               	movlw	-9
 39327  017EA4  36E3               	rlcf	plusw1,f,c
 39328  017EA6  0EF8               	movlw	-8
 39329  017EA8  36E3               	rlcf	plusw1,f,c
 39330  017EAA  0EF9               	movlw	-7
 39331  017EAC  36E3               	rlcf	plusw1,f,c
 39332  017EAE  0EFA               	movlw	-6
 39333  017EB0  36E3               	rlcf	plusw1,f,c
 39334                           
 39335                           ;stkvar	_b @ sp[(-13)+-4]
 39336  017EB2  90D8               	bcf	status,0,c
 39337  017EB4  0EEF               	movlw	-17
 39338  017EB6  36E3               	rlcf	plusw1,f,c
 39339  017EB8  0EF0               	movlw	-16
 39340  017EBA  36E3               	rlcf	plusw1,f,c
 39341  017EBC  0EF1               	movlw	-15
 39342  017EBE  36E3               	rlcf	plusw1,f,c
 39343  017EC0  0EF2               	movlw	-14
 39344  017EC2  36E3               	rlcf	plusw1,f,c
 39345                           
 39346                           ;stkvar	_grs @ sp[(-13)+0]
 39347  017EC4  0EF6               	movlw	-10
 39348  017EC6  AEE3               	btfss	plusw1,7,c
 39349  017EC8  D002               	goto	l10354
 39350                           
 39351                           ;stkvar	_b @ sp[(-13)+-4]
 39352  017ECA  0EEF               	movlw	-17
 39353  017ECC  80E3               	bsf	plusw1,0,c
 39354  017ECE                     l10354:
 39355                           
 39356                           ;stkvar	_grs @ sp[(-13)+0]
 39357  017ECE  90D8               	bcf	status,0,c
 39358  017ED0  0EF3               	movlw	-13
 39359  017ED2  36E3               	rlcf	plusw1,f,c
 39360  017ED4  0EF4               	movlw	-12
 39361  017ED6  36E3               	rlcf	plusw1,f,c
 39362  017ED8  0EF5               	movlw	-11
 39363  017EDA  36E3               	rlcf	plusw1,f,c
 39364  017EDC  0EF6               	movlw	-10
 39365  017EDE  36E3               	rlcf	plusw1,f,c
 39366  017EE0                     l10356:
 39367                           
 39368                           ;stkvar	_a @ sp[(-13)+-8]
 39369                           ;stkvar	_rem @ sp[(-13)+4]
 39370  017EE0  50E1               	movf	fsr1l,w,c
 39371  017EE2  0FF7               	addlw	-9
 39372  017EE4  6ED9               	movwf	fsr2l,c
 39373  017EE6  50E2               	movf	fsr1h,w,c
 39374  017EE8  6EDA               	movwf	fsr2h,c
 39375  017EEA  0EFF               	movlw	255
 39376  017EEC  22DA               	addwfc	fsr2h,f,c
 39377  017EEE  0EEB               	movlw	-21
 39378  017EF0  50E3               	movf	plusw1,w,c
 39379  017EF2  5CDE               	subwf	postinc2,w,c
 39380  017EF4  0EEC               	movlw	-20
 39381  017EF6  50E3               	movf	plusw1,w,c
 39382  017EF8  58DE               	subwfb	postinc2,w,c
 39383  017EFA  0EED               	movlw	-19
 39384  017EFC  50E3               	movf	plusw1,w,c
 39385  017EFE  58DE               	subwfb	postinc2,w,c
 39386  017F00  0EEE               	movlw	-18
 39387  017F02  50E3               	movf	plusw1,w,c
 39388  017F04  58DE               	subwfb	postinc2,w,c
 39389  017F06  A0D8               	btfss	status,0,c
 39390  017F08  D015               	goto	l10362
 39391                           
 39392                           ;stkvar	_grs @ sp[(-13)+0]
 39393  017F0A  0EF6               	movlw	-10
 39394  017F0C  8CE3               	bsf	plusw1,6,c
 39395                           
 39396                           ;stkvar	_a @ sp[(-13)+-8]
 39397                           ;stkvar	_rem @ sp[(-13)+4]
 39398  017F0E  50E1               	movf	fsr1l,w,c
 39399  017F10  0FF7               	addlw	-9
 39400  017F12  6ED9               	movwf	fsr2l,c
 39401  017F14  50E2               	movf	fsr1h,w,c
 39402  017F16  6EDA               	movwf	fsr2h,c
 39403  017F18  0EFF               	movlw	255
 39404  017F1A  22DA               	addwfc	fsr2h,f,c
 39405  017F1C  0EEB               	movlw	-21
 39406  017F1E  50E3               	movf	plusw1,w,c
 39407  017F20  5EDE               	subwf	postinc2,f,c
 39408  017F22  0EEC               	movlw	-20
 39409  017F24  50E3               	movf	plusw1,w,c
 39410  017F26  5ADE               	subwfb	postinc2,f,c
 39411  017F28  0EED               	movlw	-19
 39412  017F2A  50E3               	movf	plusw1,w,c
 39413  017F2C  5ADE               	subwfb	postinc2,f,c
 39414  017F2E  0EEE               	movlw	-18
 39415  017F30  50E3               	movf	plusw1,w,c
 39416  017F32  5ADE               	subwfb	postinc2,f,c
 39417  017F34                     l10362:
 39418                           
 39419                           ;stkvar	_aexp @ sp[(-13)+10]
 39420  017F34  0EFD               	movlw	-3
 39421  017F36  2AE3               	incf	plusw1,f,c
 39422  017F38                     l10364:
 39423                           
 39424                           ;stkvar	_aexp @ sp[(-13)+10]
 39425  017F38  0EFD               	movlw	-3
 39426  017F3A  006F FF8C  F02A    	movff	plusw1,btemp
 39427  017F40  0E19               	movlw	25
 39428  017F42  642A               	cpfsgt	btemp^0,c
 39429  017F44  D7A9               	goto	l10346
 39430                           
 39431                           ;stkvar	_rem @ sp[(-13)+4]
 39432  017F46  0EF7               	movlw	-9
 39433  017F48  50E3               	movf	plusw1,w,c
 39434  017F4A  E10A               	bnz	u8430
 39435  017F4C  0EF8               	movlw	-8
 39436  017F4E  50E3               	movf	plusw1,w,c
 39437  017F50  E107               	bnz	u8430
 39438  017F52  0EF9               	movlw	-7
 39439  017F54  50E3               	movf	plusw1,w,c
 39440  017F56  E104               	bnz	u8430
 39441  017F58  0EFA               	movlw	-6
 39442  017F5A  50E3               	movf	plusw1,w,c
 39443  017F5C  B4D8               	btfsc	status,2,c
 39444  017F5E  D024               	goto	l10380
 39445  017F60                     u8430:
 39446                           
 39447                           ;stkvar	_grs @ sp[(-13)+0]
 39448  017F60  0EF3               	movlw	-13
 39449  017F62  80E3               	bsf	plusw1,0,c
 39450  017F64  D021               	goto	l10380
 39451  017F66                     l10370:
 39452                           
 39453                           ;stkvar	_b @ sp[(-13)+-4]
 39454  017F66  90D8               	bcf	status,0,c
 39455  017F68  0EEF               	movlw	-17
 39456  017F6A  36E3               	rlcf	plusw1,f,c
 39457  017F6C  0EF0               	movlw	-16
 39458  017F6E  36E3               	rlcf	plusw1,f,c
 39459  017F70  0EF1               	movlw	-15
 39460  017F72  36E3               	rlcf	plusw1,f,c
 39461  017F74  0EF2               	movlw	-14
 39462  017F76  36E3               	rlcf	plusw1,f,c
 39463                           
 39464                           ;stkvar	_grs @ sp[(-13)+0]
 39465  017F78  0EF6               	movlw	-10
 39466  017F7A  AEE3               	btfss	plusw1,7,c
 39467  017F7C  D002               	goto	l10376
 39468                           
 39469                           ;stkvar	_b @ sp[(-13)+-4]
 39470  017F7E  0EEF               	movlw	-17
 39471  017F80  80E3               	bsf	plusw1,0,c
 39472  017F82                     l10376:
 39473                           
 39474                           ;stkvar	_grs @ sp[(-13)+0]
 39475  017F82  90D8               	bcf	status,0,c
 39476  017F84  0EF3               	movlw	-13
 39477  017F86  36E3               	rlcf	plusw1,f,c
 39478  017F88  0EF4               	movlw	-12
 39479  017F8A  36E3               	rlcf	plusw1,f,c
 39480  017F8C  0EF5               	movlw	-11
 39481  017F8E  36E3               	rlcf	plusw1,f,c
 39482  017F90  0EF6               	movlw	-10
 39483  017F92  36E3               	rlcf	plusw1,f,c
 39484                           
 39485                           ;stkvar	_new_exp @ sp[(-13)+8]
 39486  017F94  50E1               	movf	fsr1l,w,c
 39487  017F96  0FFB               	addlw	-5
 39488  017F98  6ED9               	movwf	fsr2l,c
 39489  017F9A  50E2               	movf	fsr1h,w,c
 39490  017F9C  6EDA               	movwf	fsr2h,c
 39491  017F9E  0EFF               	movlw	255
 39492  017FA0  22DA               	addwfc	fsr2h,f,c
 39493  017FA2  06DE               	decf	postinc2,f,c
 39494  017FA4  0E00               	movlw	0
 39495  017FA6  5ADD               	subwfb	postdec2,f,c
 39496  017FA8                     l10380:
 39497                           
 39498                           ;stkvar	_b @ sp[(-13)+-4]
 39499  017FA8  0EF1               	movlw	-15
 39500  017FAA  AEE3               	btfss	plusw1,7,c
 39501  017FAC  D7DC               	goto	l10370
 39502                           
 39503                           ;stkvar	_aexp @ sp[(-13)+10]
 39504  017FAE  0EFD               	movlw	-3
 39505  017FB0  6AE3               	clrf	plusw1,c
 39506                           
 39507                           ;stkvar	_grs @ sp[(-13)+0]
 39508  017FB2  0EF6               	movlw	-10
 39509  017FB4  AEE3               	btfss	plusw1,7,c
 39510  017FB6  D020               	goto	l10394
 39511                           
 39512                           ;stkvar	_grs @ sp[(-13)+0]
 39513  017FB8  50E1               	movf	fsr1l,w,c
 39514  017FBA  0FF3               	addlw	-13
 39515  017FBC  6ED9               	movwf	fsr2l,c
 39516  017FBE  50E2               	movf	fsr1h,w,c
 39517  017FC0  6EDA               	movwf	fsr2h,c
 39518  017FC2  0EFF               	movlw	255
 39519  017FC4  22DA               	addwfc	fsr2h,f,c
 39520  017FC6  0EFF               	movlw	255
 39521  017FC8  14DE               	andwf	postinc2,w,c
 39522  017FCA  6E32               	movwf	(btemp+8)^0,c
 39523  017FCC  0EFF               	movlw	255
 39524  017FCE  14DE               	andwf	postinc2,w,c
 39525  017FD0  6E33               	movwf	(btemp+9)^0,c
 39526  017FD2  0EFF               	movlw	255
 39527  017FD4  14DE               	andwf	postinc2,w,c
 39528  017FD6  6E34               	movwf	(btemp+10)^0,c
 39529  017FD8  0E7F               	movlw	127
 39530  017FDA  14DE               	andwf	postinc2,w,c
 39531  017FDC  6E35               	movwf	(btemp+11)^0,c
 39532  017FDE  5032               	movf	(btemp+8)^0,w,c
 39533  017FE0  1033               	iorwf	(btemp+9)^0,w,c
 39534  017FE2  1034               	iorwf	(btemp+10)^0,w,c
 39535  017FE4  1035               	iorwf	(btemp+11)^0,w,c
 39536  017FE6  B4D8               	btfsc	status,2,c
 39537  017FE8  D004               	goto	l10390
 39538  017FEA                     u8470:
 39539                           
 39540                           ;stkvar	_aexp @ sp[(-13)+10]
 39541  017FEA  0EFD               	movlw	-3
 39542  017FEC  6AE3               	clrf	plusw1,c
 39543  017FEE  2AE3               	incf	plusw1,f,c
 39544  017FF0  D003               	goto	l10394
 39545  017FF2                     l10390:
 39546                           
 39547                           ;stkvar	_b @ sp[(-13)+-4]
 39548  017FF2  0EEF               	movlw	-17
 39549  017FF4  B0E3               	btfsc	plusw1,0,c
 39550  017FF6  D7F9               	goto	u8470
 39551  017FF8                     l10394:
 39552                           
 39553                           ;stkvar	_aexp @ sp[(-13)+10]
 39554  017FF8  0EFD               	movlw	-3
 39555  017FFA  50E3               	movf	plusw1,w,c
 39556  017FFC  B4D8               	btfsc	status,2,c
 39557  017FFE  D036               	goto	l10404
 39558                           
 39559                           ;stkvar	_b @ sp[(-13)+-4]
 39560  018000  50E1               	movf	fsr1l,w,c
 39561  018002  0FEF               	addlw	-17
 39562  018004  6ED9               	movwf	fsr2l,c
 39563  018006  50E2               	movf	fsr1h,w,c
 39564  018008  6EDA               	movwf	fsr2h,c
 39565  01800A  0EFF               	movlw	255
 39566  01800C  22DA               	addwfc	fsr2h,f,c
 39567  01800E  2ADE               	incf	postinc2,f,c
 39568  018010  0E00               	movlw	0
 39569  018012  22DE               	addwfc	postinc2,f,c
 39570  018014  22DE               	addwfc	postinc2,f,c
 39571  018016  22DE               	addwfc	postinc2,f,c
 39572                           
 39573                           ;stkvar	_b @ sp[(-13)+-4]
 39574  018018  0EF2               	movlw	-14
 39575  01801A  A0E3               	btfss	plusw1,0,c
 39576  01801C  D027               	goto	l10404
 39577  01801E  0E01               	movlw	1
 39578  018020  6E35               	movwf	(btemp+11)^0,c
 39579                           
 39580                           ;stkvar	_b @ sp[(-13)+-4]
 39581  018022  50E1               	movf	fsr1l,w,c
 39582  018024  0FEF               	addlw	-17
 39583  018026  6ED9               	movwf	fsr2l,c
 39584  018028  50E2               	movf	fsr1h,w,c
 39585  01802A  6EDA               	movwf	fsr2h,c
 39586  01802C  0EFF               	movlw	255
 39587  01802E  22DA               	addwfc	fsr2h,f,c
 39588  018030  2835               	incf	(btemp+11)^0,w,c
 39589  018032  52DE               	movf	postinc2,f,c
 39590  018034  D008               	goto	u8510
 39591  018036                     u8515:
 39592  018036  52DE               	movf	postinc2,f,c
 39593  018038  90D8               	bcf	status,0,c
 39594  01803A  BEDC               	btfsc	preinc2,7,c
 39595  01803C  80D8               	bsf	status,0,c
 39596  01803E  32DD               	rrcf	postdec2,f,c
 39597  018040  32DD               	rrcf	postdec2,f,c
 39598  018042  32DD               	rrcf	postdec2,f,c
 39599  018044  32DE               	rrcf	postinc2,f,c
 39600  018046                     u8510:
 39601  018046  2EE8               	decfsz	wreg,f,c
 39602  018048  D7F6               	goto	u8515
 39603                           
 39604                           ;stkvar	_new_exp @ sp[(-13)+8]
 39605  01804A  0EFB               	movlw	-5
 39606  01804C  50E3               	movf	plusw1,w,c
 39607  01804E  0F01               	addlw	1
 39608  018050  6E2A               	movwf	btemp^0,c
 39609  018052  0EFB               	movlw	-5
 39610  018054  0060  F0AB  FFE3   	movff	btemp,plusw1
 39611  01805A  6A2A               	clrf	btemp^0,c
 39612  01805C  0EFC               	movlw	-4
 39613  01805E  50E3               	movf	plusw1,w,c
 39614  018060  202A               	addwfc	btemp^0,w,c
 39615  018062  6E2A               	movwf	btemp^0,c
 39616  018064  0EFC               	movlw	-4
 39617  018066  0060  F0AB  FFE3   	movff	btemp,plusw1
 39618  01806C                     l10404:
 39619                           
 39620                           ;stkvar	_new_exp @ sp[(-13)+8]
 39621  01806C  0EFC               	movlw	-4
 39622  01806E  BEE3               	btfsc	plusw1,7,c
 39623  018070  D01B               	goto	l10410
 39624  018072  0EFC               	movlw	-4
 39625  018074  50E3               	movf	plusw1,w,c
 39626  018076  E104               	bnz	u8520
 39627  018078  0EFB               	movlw	-5
 39628  01807A  28E3               	incf	plusw1,w,c
 39629  01807C  A0D8               	btfss	status,0,c
 39630  01807E  D014               	goto	l10410
 39631  018080                     u8520:
 39632  018080  0EFF               	movlw	255
 39633  018082  6E34               	movwf	(btemp+10)^0,c
 39634  018084  0E00               	movlw	0
 39635  018086  6E35               	movwf	(btemp+11)^0,c
 39636                           
 39637                           ;stkvar	_new_exp @ sp[(-13)+8]
 39638  018088  0EFB               	movlw	-5
 39639  01808A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39640  018090  0EFC               	movlw	-4
 39641  018092  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39642                           
 39643                           ;stkvar	_b @ sp[(-13)+-4]
 39644  018098  0EEF               	movlw	-17
 39645  01809A  6AE3               	clrf	plusw1,c
 39646  01809C  0EF0               	movlw	-16
 39647  01809E  6AE3               	clrf	plusw1,c
 39648  0180A0  0EF1               	movlw	-15
 39649  0180A2  6AE3               	clrf	plusw1,c
 39650  0180A4  0EF2               	movlw	-14
 39651  0180A6  6AE3               	clrf	plusw1,c
 39652  0180A8                     l10410:
 39653                           
 39654                           ;stkvar	_new_exp @ sp[(-13)+8]
 39655  0180A8  0EFC               	movlw	-4
 39656  0180AA  BEE3               	btfsc	plusw1,7,c
 39657  0180AC  D007               	goto	u8530
 39658  0180AE  0EFC               	movlw	-4
 39659  0180B0  50E3               	movf	plusw1,w,c
 39660  0180B2  E112               	bnz	l10416
 39661  0180B4  0EFB               	movlw	-5
 39662  0180B6  04E3               	decf	plusw1,w,c
 39663  0180B8  B0D8               	btfsc	status,0,c
 39664  0180BA  D00E               	goto	l10416
 39665  0180BC                     u8530:
 39666                           
 39667                           ;stkvar	_new_exp @ sp[(-13)+8]
 39668  0180BC  0EFB               	movlw	-5
 39669  0180BE  6AE3               	clrf	plusw1,c
 39670  0180C0  0EFC               	movlw	-4
 39671  0180C2  6AE3               	clrf	plusw1,c
 39672                           
 39673                           ;stkvar	_b @ sp[(-13)+-4]
 39674  0180C4  0EEF               	movlw	-17
 39675  0180C6  6AE3               	clrf	plusw1,c
 39676  0180C8  0EF0               	movlw	-16
 39677  0180CA  6AE3               	clrf	plusw1,c
 39678  0180CC  0EF1               	movlw	-15
 39679  0180CE  6AE3               	clrf	plusw1,c
 39680  0180D0  0EF2               	movlw	-14
 39681  0180D2  6AE3               	clrf	plusw1,c
 39682                           
 39683                           ;stkvar	_sign @ sp[(-13)+12]
 39684  0180D4  0EFF               	movlw	-1
 39685  0180D6  6AE3               	clrf	plusw1,c
 39686  0180D8                     l10416:
 39687                           
 39688                           ;stkvar	_new_exp @ sp[(-13)+8]
 39689                           ;stkvar	_bexp @ sp[(-13)+11]
 39690  0180D8  0EFB               	movlw	-5
 39691  0180DA  006F FF8C  F02A    	movff	plusw1,btemp
 39692  0180E0  0EFE               	movlw	-2
 39693  0180E2  0060  F0AB  FFE3   	movff	btemp,plusw1
 39694                           
 39695                           ;stkvar	_bexp @ sp[(-13)+11]
 39696  0180E8  0EFE               	movlw	-2
 39697  0180EA  A0E3               	btfss	plusw1,0,c
 39698  0180EC  D009               	goto	l10422
 39699                           
 39700                           ;stkvar	_b @ sp[(-13)+-4]
 39701  0180EE  0EF1               	movlw	241
 39702  0180F0  24E1               	addwf	fsr1l,w,c
 39703  0180F2  6ED9               	movwf	fsr2l,c
 39704  0180F4  0EFF               	movlw	255
 39705  0180F6  20E2               	addwfc	fsr1h,w,c
 39706  0180F8  6EDA               	movwf	fsr2h,c
 39707  0180FA  0E00               	movlw	0
 39708  0180FC  8EDB               	bsf	plusw2,7,c
 39709  0180FE  D008               	goto	l10424
 39710  018100                     l10422:
 39711                           
 39712                           ;stkvar	_b @ sp[(-13)+-4]
 39713  018100  0EF1               	movlw	241
 39714  018102  24E1               	addwf	fsr1l,w,c
 39715  018104  6ED9               	movwf	fsr2l,c
 39716  018106  0EFF               	movlw	255
 39717  018108  20E2               	addwfc	fsr1h,w,c
 39718  01810A  6EDA               	movwf	fsr2h,c
 39719  01810C  0E7F               	movlw	127
 39720  01810E  16DF               	andwf	indf2,f,c
 39721  018110                     l10424:
 39722                           
 39723                           ;stkvar	_b @ sp[(-13)+-4]
 39724  018110  0EF2               	movlw	242
 39725  018112  24E1               	addwf	fsr1l,w,c
 39726  018114  6ED9               	movwf	fsr2l,c
 39727  018116  0EFF               	movlw	255
 39728  018118  20E2               	addwfc	fsr1h,w,c
 39729  01811A  6EDA               	movwf	fsr2h,c
 39730                           
 39731                           ;stkvar	_bexp @ sp[(-13)+11]
 39732  01811C  0EFE               	movlw	-2
 39733  01811E  006F FF8C  F035    	movff	plusw1,btemp+11
 39734  018124  90D8               	bcf	status,0,c
 39735  018126  3035               	rrcf	(btemp+11)^0,w,c
 39736  018128  6EDF               	movwf	indf2,c
 39737  01812A  D644               	goto	l10322
 39738  01812C                     l3304:
 39739                           
 39740                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 39741  01812C  0EEB               	movlw	235
 39742  01812E  26E1               	addwf	fsr1l,f,c
 39743  018130  0EFF               	movlw	255
 39744  018132  22E2               	addwfc	fsr1h,f,c
 39745  018134  0012               	return		;funcret
 39746  018136                     __end_of___fldiv:
 39747                           	opt callstack 0
 39748                           
 39749 ;; *************** function ___flge *****************
 39750 ;; Defined at:
 39751 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 39752 ;; Parameters:    Size  Location     Type
 39753 ;;  ff1             4  [STACK] unsigned char 
 39754 ;;  ff2             4  [STACK] unsigned char 
 39755 ;; Auto vars:     Size  Location     Type
 39756 ;;		None
 39757 ;; Return value:  Size  Location     Type
 39758 ;;		None               void
 39759 ;; Registers used:
 39760 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 39761 ;; Tracked objects:
 39762 ;;		On entry : 0/1
 39763 ;;		On exit  : 0/0
 39764 ;;		Unchanged: 0/0
 39765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39770 ;;Total ram usage:        0 bytes
 39771 ;; Hardware stack levels used:    1
 39772 ;; Hardware stack levels required when called:   15
 39773 ;; This function calls:
 39774 ;;		Nothing
 39775 ;; This function is called by:
 39776 ;;		_main
 39777 ;;		_convert_dac_raw
 39778 ;;		_calc_ror_data
 39779 ;;		_check_day_time
 39780 ;;		_calc_bsoc
 39781 ;;		_efgtoa
 39782 ;; This function uses a reentrant model
 39783 ;;
 39784                           
 39785                           	psect	text147
 39786  01E692                     __ptext147:
 39787                           	opt callstack 0
 39788  01E692                     ___flge:
 39789                           	opt callstack 0
 39790                           
 39791                           ;stkvar	_ff1 @ sp[(0)+-4]
 39792                           
 39793                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39794                           ;incstack = 0
 39795 ;; hardware stack exceeded
 39796  01E692  50E1               	movf	fsr1l,w,c
 39797  01E694  0FFC               	addlw	-4
 39798  01E696  6ED9               	movwf	fsr2l,c
 39799  01E698  50E2               	movf	fsr1h,w,c
 39800  01E69A  6EDA               	movwf	fsr2h,c
 39801  01E69C  0EFF               	movlw	255
 39802  01E69E  22DA               	addwfc	fsr2h,f,c
 39803  01E6A0  0E00               	movlw	0
 39804  01E6A2  14DE               	andwf	postinc2,w,c
 39805  01E6A4  6E32               	movwf	(btemp+8)^0,c
 39806  01E6A6  0E00               	movlw	0
 39807  01E6A8  14DE               	andwf	postinc2,w,c
 39808  01E6AA  6E33               	movwf	(btemp+9)^0,c
 39809  01E6AC  0E80               	movlw	128
 39810  01E6AE  14DE               	andwf	postinc2,w,c
 39811  01E6B0  6E34               	movwf	(btemp+10)^0,c
 39812  01E6B2  0E7F               	movlw	127
 39813  01E6B4  14DE               	andwf	postinc2,w,c
 39814  01E6B6  6E35               	movwf	(btemp+11)^0,c
 39815  01E6B8  5032               	movf	(btemp+8)^0,w,c
 39816  01E6BA  1033               	iorwf	(btemp+9)^0,w,c
 39817  01E6BC  1034               	iorwf	(btemp+10)^0,w,c
 39818  01E6BE  1035               	iorwf	(btemp+11)^0,w,c
 39819  01E6C0  A4D8               	btfss	status,2,c
 39820  01E6C2  D008               	goto	l10698
 39821                           
 39822                           ;stkvar	_ff1 @ sp[(0)+-4]
 39823  01E6C4  0EFC               	movlw	-4
 39824  01E6C6  6AE3               	clrf	plusw1,c
 39825  01E6C8  0EFD               	movlw	-3
 39826  01E6CA  6AE3               	clrf	plusw1,c
 39827  01E6CC  0EFE               	movlw	-2
 39828  01E6CE  6AE3               	clrf	plusw1,c
 39829  01E6D0  0EFF               	movlw	-1
 39830  01E6D2  6AE3               	clrf	plusw1,c
 39831  01E6D4                     l10698:
 39832                           
 39833                           ;stkvar	_ff2 @ sp[(0)+-8]
 39834  01E6D4  50E1               	movf	fsr1l,w,c
 39835  01E6D6  0FF8               	addlw	-8
 39836  01E6D8  6ED9               	movwf	fsr2l,c
 39837  01E6DA  50E2               	movf	fsr1h,w,c
 39838  01E6DC  6EDA               	movwf	fsr2h,c
 39839  01E6DE  0EFF               	movlw	255
 39840  01E6E0  22DA               	addwfc	fsr2h,f,c
 39841  01E6E2  0E00               	movlw	0
 39842  01E6E4  14DE               	andwf	postinc2,w,c
 39843  01E6E6  6E32               	movwf	(btemp+8)^0,c
 39844  01E6E8  0E00               	movlw	0
 39845  01E6EA  14DE               	andwf	postinc2,w,c
 39846  01E6EC  6E33               	movwf	(btemp+9)^0,c
 39847  01E6EE  0E80               	movlw	128
 39848  01E6F0  14DE               	andwf	postinc2,w,c
 39849  01E6F2  6E34               	movwf	(btemp+10)^0,c
 39850  01E6F4  0E7F               	movlw	127
 39851  01E6F6  14DE               	andwf	postinc2,w,c
 39852  01E6F8  6E35               	movwf	(btemp+11)^0,c
 39853  01E6FA  5032               	movf	(btemp+8)^0,w,c
 39854  01E6FC  1033               	iorwf	(btemp+9)^0,w,c
 39855  01E6FE  1034               	iorwf	(btemp+10)^0,w,c
 39856  01E700  1035               	iorwf	(btemp+11)^0,w,c
 39857  01E702  A4D8               	btfss	status,2,c
 39858  01E704  D008               	goto	l2985
 39859                           
 39860                           ;stkvar	_ff2 @ sp[(0)+-8]
 39861  01E706  0EF8               	movlw	-8
 39862  01E708  6AE3               	clrf	plusw1,c
 39863  01E70A  0EF9               	movlw	-7
 39864  01E70C  6AE3               	clrf	plusw1,c
 39865  01E70E  0EFA               	movlw	-6
 39866  01E710  6AE3               	clrf	plusw1,c
 39867  01E712  0EFB               	movlw	-5
 39868  01E714  6AE3               	clrf	plusw1,c
 39869  01E716                     l2985:
 39870                           
 39871                           ;stkvar	_ff1 @ sp[(0)+-4]
 39872  01E716  0EFF               	movlw	-1
 39873  01E718  AEE3               	btfss	plusw1,7,c
 39874  01E71A  D024               	goto	l10704
 39875                           
 39876                           ;stkvar	_ff1 @ sp[(0)+-4]
 39877  01E71C  0E00               	movlw	0
 39878  01E71E  6E32               	movwf	(btemp+8)^0,c
 39879  01E720  0E00               	movlw	0
 39880  01E722  6E33               	movwf	(btemp+9)^0,c
 39881  01E724  0E00               	movlw	0
 39882  01E726  6E34               	movwf	(btemp+10)^0,c
 39883  01E728  0E80               	movlw	128
 39884  01E72A  6E35               	movwf	(btemp+11)^0,c
 39885  01E72C  0EFC               	movlw	-4
 39886  01E72E  50E3               	movf	plusw1,w,c
 39887  01E730  5E32               	subwf	(btemp+8)^0,f,c
 39888  01E732  0EFD               	movlw	-3
 39889  01E734  50E3               	movf	plusw1,w,c
 39890  01E736  5A33               	subwfb	(btemp+9)^0,f,c
 39891  01E738  0EFE               	movlw	-2
 39892  01E73A  50E3               	movf	plusw1,w,c
 39893  01E73C  5A34               	subwfb	(btemp+10)^0,f,c
 39894  01E73E  0EFF               	movlw	-1
 39895  01E740  50E3               	movf	plusw1,w,c
 39896  01E742  5A35               	subwfb	(btemp+11)^0,f,c
 39897                           
 39898                           ;stkvar	_ff1 @ sp[(0)+-4]
 39899  01E744  0EFC               	movlw	-4
 39900  01E746  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39901  01E74C  0EFD               	movlw	-3
 39902  01E74E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39903  01E754  0EFE               	movlw	-2
 39904  01E756  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39905  01E75C  0EFF               	movlw	-1
 39906  01E75E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39907  01E764                     l10704:
 39908                           
 39909                           ;stkvar	_ff2 @ sp[(0)+-8]
 39910  01E764  0EFB               	movlw	-5
 39911  01E766  AEE3               	btfss	plusw1,7,c
 39912  01E768  D024               	goto	l10708
 39913                           
 39914                           ;stkvar	_ff2 @ sp[(0)+-8]
 39915  01E76A  0E00               	movlw	0
 39916  01E76C  6E32               	movwf	(btemp+8)^0,c
 39917  01E76E  0E00               	movlw	0
 39918  01E770  6E33               	movwf	(btemp+9)^0,c
 39919  01E772  0E00               	movlw	0
 39920  01E774  6E34               	movwf	(btemp+10)^0,c
 39921  01E776  0E80               	movlw	128
 39922  01E778  6E35               	movwf	(btemp+11)^0,c
 39923  01E77A  0EF8               	movlw	-8
 39924  01E77C  50E3               	movf	plusw1,w,c
 39925  01E77E  5E32               	subwf	(btemp+8)^0,f,c
 39926  01E780  0EF9               	movlw	-7
 39927  01E782  50E3               	movf	plusw1,w,c
 39928  01E784  5A33               	subwfb	(btemp+9)^0,f,c
 39929  01E786  0EFA               	movlw	-6
 39930  01E788  50E3               	movf	plusw1,w,c
 39931  01E78A  5A34               	subwfb	(btemp+10)^0,f,c
 39932  01E78C  0EFB               	movlw	-5
 39933  01E78E  50E3               	movf	plusw1,w,c
 39934  01E790  5A35               	subwfb	(btemp+11)^0,f,c
 39935                           
 39936                           ;stkvar	_ff2 @ sp[(0)+-8]
 39937  01E792  0EF8               	movlw	-8
 39938  01E794  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39939  01E79A  0EF9               	movlw	-7
 39940  01E79C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39941  01E7A2  0EFA               	movlw	-6
 39942  01E7A4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39943  01E7AA  0EFB               	movlw	-5
 39944  01E7AC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39945  01E7B2                     l10708:
 39946                           
 39947                           ;stkvar	_ff1 @ sp[(0)+-4]
 39948  01E7B2  0EFF               	movlw	-1
 39949  01E7B4  7EE3               	btg	plusw1,7,c
 39950                           
 39951                           ;stkvar	_ff2 @ sp[(0)+-8]
 39952  01E7B6  0EFB               	movlw	-5
 39953  01E7B8  7EE3               	btg	plusw1,7,c
 39954                           
 39955                           ;stkvar	_ff2 @ sp[(0)+-8]
 39956                           ;stkvar	_ff1 @ sp[(0)+-4]
 39957  01E7BA  50E1               	movf	fsr1l,w,c
 39958  01E7BC  0FFC               	addlw	-4
 39959  01E7BE  6ED9               	movwf	fsr2l,c
 39960  01E7C0  50E2               	movf	fsr1h,w,c
 39961  01E7C2  6EDA               	movwf	fsr2h,c
 39962  01E7C4  0EFF               	movlw	255
 39963  01E7C6  22DA               	addwfc	fsr2h,f,c
 39964  01E7C8  0EF8               	movlw	-8
 39965  01E7CA  50E3               	movf	plusw1,w,c
 39966  01E7CC  5CDE               	subwf	postinc2,w,c
 39967  01E7CE  0EF9               	movlw	-7
 39968  01E7D0  50E3               	movf	plusw1,w,c
 39969  01E7D2  58DE               	subwfb	postinc2,w,c
 39970  01E7D4  0EFA               	movlw	-6
 39971  01E7D6  50E3               	movf	plusw1,w,c
 39972  01E7D8  58DE               	subwfb	postinc2,w,c
 39973  01E7DA  0EFB               	movlw	-5
 39974  01E7DC  50E3               	movf	plusw1,w,c
 39975  01E7DE  58DE               	subwfb	postinc2,w,c
 39976  01E7E0  B0D8               	btfsc	status,0,c
 39977  01E7E2  D002               	goto	l10716
 39978  01E7E4  902A               	bcf	btemp& (0+255),0,c
 39979  01E7E6  D001               	goto	l2992
 39980  01E7E8                     l10716:
 39981  01E7E8  802A               	bsf	btemp& (0+255),0,c
 39982  01E7EA                     l2992:
 39983                           
 39984                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 39985  01E7EA  0EF8               	movlw	248
 39986  01E7EC  26E1               	addwf	fsr1l,f,c
 39987  01E7EE  0EFF               	movlw	255
 39988  01E7F0  22E2               	addwfc	fsr1h,f,c
 39989  01E7F2  0012               	return		;funcret
 39990  01E7F4                     __end_of___flge:
 39991                           	opt callstack 0
 39992                           
 39993 ;; *************** function _calc_model_data *****************
 39994 ;; Defined at:
 39995 ;;		line 67 in file "mbmc.c"
 39996 ;; Parameters:    Size  Location     Type
 39997 ;;		None
 39998 ;; Auto vars:     Size  Location     Type
 39999 ;;		None
 40000 ;; Return value:  Size  Location     Type
 40001 ;;                  1  [STACK] void 
 40002 ;; Registers used:
 40003 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 40004 ;; Tracked objects:
 40005 ;;		On entry : 3F/0
 40006 ;;		On exit  : 3F/39
 40007 ;;		Unchanged: 0/0
 40008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40013 ;;Total ram usage:        0 bytes
 40014 ;; Hardware stack levels used:    1
 40015 ;; Hardware stack levels required when called:   18
 40016 ;; This function calls:
 40017 ;;		___fladd
 40018 ;;		___flmul
 40019 ;;		___flsub
 40020 ;;		_lp_filter
 40021 ;;		_start_bsoc
 40022 ;;		_stop_bsoc
 40023 ;; This function is called by:
 40024 ;;		_main
 40025 ;; This function uses a reentrant model
 40026 ;;
 40027                           
 40028                           	psect	text148
 40029  0193FC                     __ptext148:
 40030                           	opt callstack 0
 40031  0193FC                     _calc_model_data:
 40032                           	opt callstack 12
 40033                           
 40034                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 40035                           
 40036                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40037                           ;incstack = 0
 40038  0193FC  ECCE  F013         	call	_stop_bsoc	;wreg free
 40039                           
 40040                           ; BSR set to: 57
 40041                           ;mbmc.c: 72:  if (!V.calib) {
 40042  019400  0102               	movlb	2	; () banked
 40043  019402  51B0               	movf	(_V+169)& (0+255),w,b	;volatile
 40044  019404  A4D8               	btfss	status,2,c
 40045  019406  D220               	goto	l14392
 40046                           
 40047                           ; BSR set to: 2
 40048                           ;mbmc.c: 73:   C.updates++;
 40049  019408  EE22  F23B         	lfsr	2,_C+316	;volatile
 40050  01940C  2ADE               	incf	postinc2,f,c
 40051  01940E  0E00               	movlw	0
 40052  019410  22DE               	addwfc	postinc2,f,c
 40053  019412  22DE               	addwfc	postinc2,f,c
 40054  019414  22DE               	addwfc	postinc2,f,c
 40055                           
 40056                           ; BSR set to: 2
 40057                           ;mbmc.c: 74:   C.c_bat = C.calc[C_BATT];
 40058  019416  EE22  F0FF         	lfsr	2,_C
 40059  01941A  006F FF78  F943    	movff	postinc2,_C+68	;volatile
 40060  019420  006F FF78  F944    	movff	postinc2,_C+69	;volatile
 40061  019426  006F FF78  F945    	movff	postinc2,_C+70	;volatile
 40062  01942C  006F FF74  F946    	movff	postdec2,_C+71	;volatile
 40063                           
 40064                           ; BSR set to: 2
 40065                           ;mbmc.c: 75:   C.bc_ror = C.c_bat - bcror;
 40066  019432  0060  F223  FFE6   	movff	calc_model_data@bcror,postinc1
 40067  019438  0060  F227  FFE6   	movff	calc_model_data@bcror+1,postinc1
 40068  01943E  0060  F22B  FFE6   	movff	calc_model_data@bcror+2,postinc1
 40069  019444  0060  F22F  FFE6   	movff	calc_model_data@bcror+3,postinc1
 40070  01944A  EE22  F143         	lfsr	2,_C+68	;volatile
 40071  01944E  006F FF7B FFE6     	movff	postinc2,postinc1
 40072  019454  006F FF7B FFE6     	movff	postinc2,postinc1
 40073  01945A  006F FF7B FFE6     	movff	postinc2,postinc1
 40074  019460  006F FF7B FFE6     	movff	postinc2,postinc1
 40075  019466  EC7C  F00D         	call	___flsub	;wreg free
 40076  01946A  0060  F0A8  F96F   	movff	btemp,_C+112	;volatile
 40077  019470  0060  F0AC  F970   	movff	btemp+1,_C+113	;volatile
 40078  019476  0060  F0B0  F971   	movff	btemp+2,_C+114	;volatile
 40079  01947C  0060  F0B4  F972   	movff	btemp+3,_C+115	;volatile
 40080                           
 40081                           ;mbmc.c: 76:   bcror = C.c_bat;
 40082  019482  C943  F088         	movff	_C+68,calc_model_data@bcror	;volatile
 40083  019486  C944  F089         	movff	_C+69,calc_model_data@bcror+1	;volatile
 40084  01948A  C945  F08A         	movff	_C+70,calc_model_data@bcror+2	;volatile
 40085  01948E  C946  F08B         	movff	_C+71,calc_model_data@bcror+3	;volatile
 40086                           
 40087                           ;mbmc.c: 77:   C.c_pv = C.calc[C_PV];
 40088  019492  EE22  F103         	lfsr	2,_C+4	;volatile
 40089  019496  006F FF78  F947    	movff	postinc2,_C+72	;volatile
 40090  01949C  006F FF78  F948    	movff	postinc2,_C+73	;volatile
 40091  0194A2  006F FF78  F949    	movff	postinc2,_C+74	;volatile
 40092  0194A8  006F FF74  F94A    	movff	postdec2,_C+75	;volatile
 40093                           
 40094                           ;mbmc.c: 78:   C.v_bat = C.calc[V_BAT];
 40095  0194AE  EE22  F10F         	lfsr	2,_C+16	;volatile
 40096  0194B2  006F FF78  F953    	movff	postinc2,_C+84	;volatile
 40097  0194B8  006F FF78  F954    	movff	postinc2,_C+85	;volatile
 40098  0194BE  006F FF78  F955    	movff	postinc2,_C+86	;volatile
 40099  0194C4  006F FF74  F956    	movff	postdec2,_C+87	;volatile
 40100                           
 40101                           ;mbmc.c: 79:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 40102  0194CA  EE22  F133         	lfsr	2,_C+52	;volatile
 40103  0194CE  006F FF78  F967    	movff	postinc2,_C+104	;volatile
 40104  0194D4  006F FF78  F968    	movff	postinc2,_C+105	;volatile
 40105  0194DA  006F FF78  F969    	movff	postinc2,_C+106	;volatile
 40106  0194E0  006F FF74  F96A    	movff	postdec2,_C+107	;volatile
 40107                           
 40108                           ;mbmc.c: 80:   C.bv_ror = C.v_bat - bvror;
 40109  0194E6  0060  F233  FFE6   	movff	calc_model_data@bvror,postinc1
 40110  0194EC  0060  F237  FFE6   	movff	calc_model_data@bvror+1,postinc1
 40111  0194F2  0060  F23B  FFE6   	movff	calc_model_data@bvror+2,postinc1
 40112  0194F8  0060  F23F  FFE6   	movff	calc_model_data@bvror+3,postinc1
 40113  0194FE  EE22  F153         	lfsr	2,_C+84	;volatile
 40114  019502  006F FF7B FFE6     	movff	postinc2,postinc1
 40115  019508  006F FF7B FFE6     	movff	postinc2,postinc1
 40116  01950E  006F FF7B FFE6     	movff	postinc2,postinc1
 40117  019514  006F FF7B FFE6     	movff	postinc2,postinc1
 40118  01951A  EC7C  F00D         	call	___flsub	;wreg free
 40119  01951E  0060  F0A8  F96B   	movff	btemp,_C+108	;volatile
 40120  019524  0060  F0AC  F96C   	movff	btemp+1,_C+109	;volatile
 40121  01952A  0060  F0B0  F96D   	movff	btemp+2,_C+110	;volatile
 40122  019530  0060  F0B4  F96E   	movff	btemp+3,_C+111	;volatile
 40123                           
 40124                           ;mbmc.c: 81:   bvror = C.v_bat;
 40125  019536  C953  F08C         	movff	_C+84,calc_model_data@bvror	;volatile
 40126  01953A  C954  F08D         	movff	_C+85,calc_model_data@bvror+1	;volatile
 40127  01953E  C955  F08E         	movff	_C+86,calc_model_data@bvror+2	;volatile
 40128  019542  C956  F08F         	movff	_C+87,calc_model_data@bvror+3	;volatile
 40129                           
 40130                           ;mbmc.c: 82:   C.v_pv = C.calc[V_PV];
 40131  019546  EE22  F113         	lfsr	2,_C+20	;volatile
 40132  01954A  006F FF78  F94F    	movff	postinc2,_C+80	;volatile
 40133  019550  006F FF78  F950    	movff	postinc2,_C+81	;volatile
 40134  019556  006F FF78  F951    	movff	postinc2,_C+82	;volatile
 40135  01955C  006F FF74  F952    	movff	postdec2,_C+83	;volatile
 40136                           
 40137                           ;mbmc.c: 83:   C.v_cc = C.calc[V_CC];
 40138  019562  EE22  F107         	lfsr	2,_C+8	;volatile
 40139  019566  006F FF78  F94B    	movff	postinc2,_C+76	;volatile
 40140  01956C  006F FF78  F94C    	movff	postinc2,_C+77	;volatile
 40141  019572  006F FF78  F94D    	movff	postinc2,_C+78	;volatile
 40142  019578  006F FF74  F94E    	movff	postdec2,_C+79	;volatile
 40143                           
 40144                           ;mbmc.c: 84:   C.v_inverter = C.calc[V_INVERTER];
 40145  01957E  EE22  F12F         	lfsr	2,_C+48	;volatile
 40146  019582  006F FF78  F963    	movff	postinc2,_C+100	;volatile
 40147  019588  006F FF78  F964    	movff	postinc2,_C+101	;volatile
 40148  01958E  006F FF78  F965    	movff	postinc2,_C+102	;volatile
 40149  019594  006F FF74  F966    	movff	postdec2,_C+103	;volatile
 40150                           
 40151                           ;mbmc.c: 85:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 40152  01959A  0E01               	movlw	1
 40153  01959C  6EE6               	movwf	postinc1,c
 40154  01959E  0E10               	movlw	16
 40155  0195A0  6EE6               	movwf	postinc1,c
 40156  0195A2  EE22  F0FF         	lfsr	2,_C
 40157  0195A6  006F FF7B FFE6     	movff	postinc2,postinc1
 40158  0195AC  006F FF7B FFE6     	movff	postinc2,postinc1
 40159  0195B2  006F FF7B FFE6     	movff	postinc2,postinc1
 40160  0195B8  006F FF7B FFE6     	movff	postinc2,postinc1
 40161  0195BE  EE22  F103         	lfsr	2,_C+4	;volatile
 40162  0195C2  006F FF7B FFE6     	movff	postinc2,postinc1
 40163  0195C8  006F FF7B FFE6     	movff	postinc2,postinc1
 40164  0195CE  006F FF7B FFE6     	movff	postinc2,postinc1
 40165  0195D4  006F FF7B FFE6     	movff	postinc2,postinc1
 40166  0195DA  EC7C  F00D         	call	___flsub	;wreg free
 40167  0195DE  0060  F0AB  FFE6   	movff	btemp,postinc1
 40168  0195E4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40169  0195EA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40170  0195F0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40171  0195F6  EC96  F0EB         	call	_lp_filter	;wreg free
 40172  0195FA  0060  F0A8  F93F   	movff	btemp,_C+64	;volatile
 40173  019600  0060  F0AC  F940   	movff	btemp+1,_C+65	;volatile
 40174  019606  0060  F0B0  F941   	movff	btemp+2,_C+66	;volatile
 40175  01960C  0060  F0B4  F942   	movff	btemp+3,_C+67	;volatile
 40176                           
 40177                           ;mbmc.c: 86:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 40178  019612  0E01               	movlw	1
 40179  019614  6EE6               	movwf	postinc1,c
 40180  019616  0E11               	movlw	17
 40181  019618  6EE6               	movwf	postinc1,c
 40182  01961A  EE22  F153         	lfsr	2,_C+84	;volatile
 40183  01961E  006F FF7B FFE6     	movff	postinc2,postinc1
 40184  019624  006F FF7B FFE6     	movff	postinc2,postinc1
 40185  01962A  006F FF7B FFE6     	movff	postinc2,postinc1
 40186  019630  006F FF7B FFE6     	movff	postinc2,postinc1
 40187  019636  EE22  F13F         	lfsr	2,_C+64	;volatile
 40188  01963A  006F FF7B FFE6     	movff	postinc2,postinc1
 40189  019640  006F FF7B FFE6     	movff	postinc2,postinc1
 40190  019646  006F FF7B FFE6     	movff	postinc2,postinc1
 40191  01964C  006F FF7B FFE6     	movff	postinc2,postinc1
 40192  019652  EC8D  F0B2         	call	___flmul	;wreg free
 40193  019656  0060  F0AB  FFE6   	movff	btemp,postinc1
 40194  01965C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40195  019662  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40196  019668  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40197  01966E  EC96  F0EB         	call	_lp_filter	;wreg free
 40198  019672  0060  F0A8  F973   	movff	btemp,_C+116	;volatile
 40199  019678  0060  F0AC  F974   	movff	btemp+1,_C+117	;volatile
 40200  01967E  0060  F0B0  F975   	movff	btemp+2,_C+118	;volatile
 40201  019684  0060  F0B4  F976   	movff	btemp+3,_C+119	;volatile
 40202                           
 40203                           ;mbmc.c: 87:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 40204  01968A  0E01               	movlw	1
 40205  01968C  6EE6               	movwf	postinc1,c
 40206  01968E  0E12               	movlw	18
 40207  019690  6EE6               	movwf	postinc1,c
 40208  019692  EE22  F14F         	lfsr	2,_C+80	;volatile
 40209  019696  006F FF7B FFE6     	movff	postinc2,postinc1
 40210  01969C  006F FF7B FFE6     	movff	postinc2,postinc1
 40211  0196A2  006F FF7B FFE6     	movff	postinc2,postinc1
 40212  0196A8  006F FF7B FFE6     	movff	postinc2,postinc1
 40213  0196AE  EE22  F147         	lfsr	2,_C+72	;volatile
 40214  0196B2  006F FF7B FFE6     	movff	postinc2,postinc1
 40215  0196B8  006F FF7B FFE6     	movff	postinc2,postinc1
 40216  0196BE  006F FF7B FFE6     	movff	postinc2,postinc1
 40217  0196C4  006F FF7B FFE6     	movff	postinc2,postinc1
 40218  0196CA  EC8D  F0B2         	call	___flmul	;wreg free
 40219  0196CE  0060  F0AB  FFE6   	movff	btemp,postinc1
 40220  0196D4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40221  0196DA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40222  0196E0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40223  0196E6  EC96  F0EB         	call	_lp_filter	;wreg free
 40224  0196EA  0060  F0A8  F97B   	movff	btemp,_C+124	;volatile
 40225  0196F0  0060  F0AC  F97C   	movff	btemp+1,_C+125	;volatile
 40226  0196F6  0060  F0B0  F97D   	movff	btemp+2,_C+126	;volatile
 40227  0196FC  0060  F0B4  F97E   	movff	btemp+3,_C+127	;volatile
 40228                           
 40229                           ;mbmc.c: 88:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 40230  019702  0E01               	movlw	1
 40231  019704  6EE6               	movwf	postinc1,c
 40232  019706  0E13               	movlw	19
 40233  019708  6EE6               	movwf	postinc1,c
 40234  01970A  0E00               	movlw	0
 40235  01970C  6EE6               	movwf	postinc1,c
 40236  01970E  0E00               	movlw	0
 40237  019710  6EE6               	movwf	postinc1,c
 40238  019712  0E60               	movlw	96
 40239  019714  6EE6               	movwf	postinc1,c
 40240  019716  0EC1               	movlw	193
 40241  019718  6EE6               	movwf	postinc1,c
 40242  01971A  EE22  F163         	lfsr	2,_C+100	;volatile
 40243  01971E  006F FF7B FFE6     	movff	postinc2,postinc1
 40244  019724  006F FF7B FFE6     	movff	postinc2,postinc1
 40245  01972A  006F FF7B FFE6     	movff	postinc2,postinc1
 40246  019730  006F FF7B FFE6     	movff	postinc2,postinc1
 40247  019736  EE22  F13F         	lfsr	2,_C+64	;volatile
 40248  01973A  006F FF7B FFE6     	movff	postinc2,postinc1
 40249  019740  006F FF7B FFE6     	movff	postinc2,postinc1
 40250  019746  006F FF7B FFE6     	movff	postinc2,postinc1
 40251  01974C  006F FF7B FFE6     	movff	postinc2,postinc1
 40252  019752  EC8D  F0B2         	call	___flmul	;wreg free
 40253  019756  0060  F0AB  FFE6   	movff	btemp,postinc1
 40254  01975C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40255  019762  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40256  019768  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40257  01976E  ECA2  F0B6         	call	___fladd	;wreg free
 40258  019772  0060  F0AB  FFE6   	movff	btemp,postinc1
 40259  019778  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40260  01977E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40261  019784  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40262  01978A  EC96  F0EB         	call	_lp_filter	;wreg free
 40263  01978E  0060  F0A8  F977   	movff	btemp,_C+120	;volatile
 40264  019794  0060  F0AC  F978   	movff	btemp+1,_C+121	;volatile
 40265  01979A  0060  F0B0  F979   	movff	btemp+2,_C+122	;volatile
 40266  0197A0  0060  F0B4  F97A   	movff	btemp+3,_C+123	;volatile
 40267                           
 40268                           ;mbmc.c: 89:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 40269  0197A6  0E01               	movlw	1
 40270  0197A8  6EE6               	movwf	postinc1,c
 40271  0197AA  0E14               	movlw	20
 40272  0197AC  6EE6               	movwf	postinc1,c
 40273  0197AE  EE22  F153         	lfsr	2,_C+84	;volatile
 40274  0197B2  006F FF7B FFE6     	movff	postinc2,postinc1
 40275  0197B8  006F FF7B FFE6     	movff	postinc2,postinc1
 40276  0197BE  006F FF7B FFE6     	movff	postinc2,postinc1
 40277  0197C4  006F FF7B FFE6     	movff	postinc2,postinc1
 40278  0197CA  EE22  F143         	lfsr	2,_C+68	;volatile
 40279  0197CE  006F FF7B FFE6     	movff	postinc2,postinc1
 40280  0197D4  006F FF7B FFE6     	movff	postinc2,postinc1
 40281  0197DA  006F FF7B FFE6     	movff	postinc2,postinc1
 40282  0197E0  006F FF7B FFE6     	movff	postinc2,postinc1
 40283  0197E6  EC8D  F0B2         	call	___flmul	;wreg free
 40284  0197EA  0060  F0AB  FFE6   	movff	btemp,postinc1
 40285  0197F0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40286  0197F6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40287  0197FC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40288  019802  EC96  F0EB         	call	_lp_filter	;wreg free
 40289  019806  0060  F0A8  F97F   	movff	btemp,_C+128	;volatile
 40290  01980C  0060  F0AC  F980   	movff	btemp+1,_C+129	;volatile
 40291  019812  0060  F0B0  F981   	movff	btemp+2,_C+130	;volatile
 40292  019818  0060  F0B4  F982   	movff	btemp+3,_C+131	;volatile
 40293                           
 40294                           ;mbmc.c: 93:   if (C.p_inverter < 0.0)
 40295  01981E  EE22  F177         	lfsr	2,_C+120	;volatile
 40296  019822  0E03               	movlw	3
 40297  019824  AEDB               	btfss	plusw2,7,c
 40298  019826  D010               	goto	l14392
 40299                           
 40300                           ;mbmc.c: 94:    C.p_inverter = 0.0001;
 40301  019828  0E17               	movlw	23
 40302  01982A  006F FFA0  F977    	movff	wreg,_C+120	;volatile
 40303  019830  0EB7               	movlw	183
 40304  019832  006F FFA0  F978    	movff	wreg,_C+121	;volatile
 40305  019838  0ED1               	movlw	209
 40306  01983A  006F FFA0  F979    	movff	wreg,_C+122	;volatile
 40307  019840  0E38               	movlw	56
 40308  019842  006F FFA0  F97A    	movff	wreg,_C+123	;volatile
 40309  019848                     l14392:
 40310                           
 40311                           ;mbmc.c: 96:  start_bsoc();
 40312  019848  EC43  F012         	call	_start_bsoc	;wreg free
 40313                           
 40314                           ; BSR set to: 57
 40315                           ;mbmc.c: 97:  C.update = 1;
 40316  01984C  0E01               	movlw	1
 40317  01984E  006F FFA0  F9B7    	movff	wreg,_C+184	;volatile
 40318                           
 40319                           ; BSR set to: 57
 40320                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 40321  019854  0012               	return		;funcret
 40322  019856                     __end_of_calc_model_data:
 40323                           	opt callstack 0
 40324                           
 40325 ;; *************** function _stop_bsoc *****************
 40326 ;; Defined at:
 40327 ;;		line 130 in file "bsoc.c"
 40328 ;; Parameters:    Size  Location     Type
 40329 ;;		None
 40330 ;; Auto vars:     Size  Location     Type
 40331 ;;		None
 40332 ;; Return value:  Size  Location     Type
 40333 ;;                  1  [STACK] void 
 40334 ;; Registers used:
 40335 ;;		None
 40336 ;; Tracked objects:
 40337 ;;		On entry : 0/1
 40338 ;;		On exit  : 3F/39
 40339 ;;		Unchanged: 0/0
 40340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40345 ;;Total ram usage:        0 bytes
 40346 ;; Hardware stack levels used:    1
 40347 ;; Hardware stack levels required when called:   15
 40348 ;; This function calls:
 40349 ;;		Nothing
 40350 ;; This function is called by:
 40351 ;;		_calc_model_data
 40352 ;;		_load_hist_data
 40353 ;; This function uses a reentrant model
 40354 ;;
 40355                           
 40356                           	psect	text149
 40357  00279C                     __ptext149:
 40358                           	opt callstack 0
 40359  00279C                     _stop_bsoc:
 40360                           	opt callstack 14
 40361                           
 40362                           ;bsoc.c: 133:  PIE6bits.TMR3IE = 0;
 40363                           
 40364                           ; BSR set to: 57
 40365                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40366                           ;incstack = 0
 40367  00279C  0139               	movlb	57	; () banked
 40368  00279E  9D96               	bcf	150,6,b	;volatile
 40369                           
 40370                           ; BSR set to: 57
 40371                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 40372  0027A0  0012               	return		;funcret
 40373  0027A2                     __end_of_stop_bsoc:
 40374                           	opt callstack 0
 40375                           
 40376 ;; *************** function _start_bsoc *****************
 40377 ;; Defined at:
 40378 ;;		line 121 in file "bsoc.c"
 40379 ;; Parameters:    Size  Location     Type
 40380 ;;		None
 40381 ;; Auto vars:     Size  Location     Type
 40382 ;;		None
 40383 ;; Return value:  Size  Location     Type
 40384 ;;                  1  [STACK] void 
 40385 ;; Registers used:
 40386 ;;		wreg, status,2, status,0, btemp+11
 40387 ;; Tracked objects:
 40388 ;;		On entry : 0/39
 40389 ;;		On exit  : 3F/39
 40390 ;;		Unchanged: 0/0
 40391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40396 ;;Total ram usage:        0 bytes
 40397 ;; Hardware stack levels used:    1
 40398 ;; Hardware stack levels required when called:   15
 40399 ;; This function calls:
 40400 ;;		Nothing
 40401 ;; This function is called by:
 40402 ;;		_calc_model_data
 40403 ;;		_load_hist_data
 40404 ;; This function uses a reentrant model
 40405 ;;
 40406                           
 40407                           	psect	text150
 40408  002486                     __ptext150:
 40409                           	opt callstack 0
 40410  002486                     _start_bsoc:
 40411                           	opt callstack 14
 40412                           
 40413                           ;bsoc.c: 124:  PIE6bits.TMR3IE = 1;
 40414                           
 40415                           ; BSR set to: 57
 40416                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40417                           ;incstack = 0
 40418  002486  0139               	movlb	57	; () banked
 40419  002488  8D96               	bsf	150,6,b	;volatile
 40420                           
 40421                           ; BSR set to: 57
 40422  00248A  A4BE               	btfss	190,2,c	;volatile
 40423  00248C  D002               	goto	u12740
 40424  00248E  0E01               	movlw	1
 40425  002490  D001               	goto	u12746
 40426  002492                     u12740:
 40427  002492  0E00               	movlw	0
 40428  002494                     u12746:
 40429  002494  0AFF               	xorlw	255
 40430  002496  6E35               	movwf	(btemp+11)^0,c
 40431  002498  4635               	rlncf	(btemp+11)^0,f,c
 40432  00249A  4635               	rlncf	(btemp+11)^0,f,c
 40433  00249C  50BE               	movf	190,w,c	;volatile
 40434  00249E  1835               	xorwf	(btemp+11)^0,w,c
 40435  0024A0  0BFB               	andlw	-5
 40436  0024A2  1835               	xorwf	(btemp+11)^0,w,c
 40437  0024A4  6EBE               	movwf	190,c	;volatile
 40438                           
 40439                           ; BSR set to: 57
 40440                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 40441  0024A6  0012               	return		;funcret
 40442  0024A8                     __end_of_start_bsoc:
 40443                           	opt callstack 0
 40444                           
 40445 ;; *************** function _lp_filter *****************
 40446 ;; Defined at:
 40447 ;;		line 29 in file "mbmc.c"
 40448 ;; Parameters:    Size  Location     Type
 40449 ;;  new             4  [STACK] const float 
 40450 ;;  bn              1  [STACK] const unsigned char 
 40451 ;;  slow            1  [STACK] const char 
 40452 ;; Auto vars:     Size  Location     Type
 40453 ;;  lp_speed        4  [STACK] float 
 40454 ;; Return value:  Size  Location     Type
 40455 ;;                  4  [STACK] float 
 40456 ;; Registers used:
 40457 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 40458 ;; Tracked objects:
 40459 ;;		On entry : 0/2
 40460 ;;		On exit  : 0/0
 40461 ;;		Unchanged: 0/0
 40462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40467 ;;Total ram usage:        0 bytes
 40468 ;; Hardware stack levels used:    1
 40469 ;; Hardware stack levels required when called:   17
 40470 ;; This function calls:
 40471 ;;		___fladd
 40472 ;;		___flmul
 40473 ;;		___flsub
 40474 ;; This function is called by:
 40475 ;;		_main
 40476 ;;		_convert_adc_data
 40477 ;;		_calc_model_data
 40478 ;; This function uses a reentrant model
 40479 ;;
 40480                           
 40481                           	psect	text151
 40482  01D72C                     __ptext151:
 40483                           	opt callstack 0
 40484  01D72C                     _lp_filter:
 40485                           	opt callstack 0
 40486                           
 40487                           ; BSR set to: 57
 40488                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40489  01D72C  52E6               	movf	postinc1,f,c
 40490  01D72E  52E6               	movf	postinc1,f,c
 40491  01D730  52E6               	movf	postinc1,f,c
 40492  01D732  52E6               	movf	postinc1,f,c
 40493                           
 40494                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 40495                           ;stkvar	_bn @ sp[(-4)+-5]
 40496                           
 40497                           ;incstack = 0
 40498  01D734  0EF7               	movlw	-9
 40499  01D736  006F FF8C  F02A    	movff	plusw1,btemp
 40500  01D73C  0E14               	movlw	20
 40501  01D73E  642A               	cpfsgt	btemp^0,c
 40502  01D740  D011               	goto	l13504
 40503  01D742                     u12570:
 40504                           
 40505                           ;mbmc.c: 35:   return new;
 40506                           ;stkvar	_new @ sp[(-4)+-4]
 40507  01D742  0EF8               	movlw	-8
 40508  01D744  006F FF8C  F02A    	movff	plusw1,btemp
 40509  01D74A  0EF9               	movlw	-7
 40510  01D74C  006F FF8C  F02B    	movff	plusw1,btemp+1
 40511  01D752  0EFA               	movlw	-6
 40512  01D754  006F FF8C  F02C    	movff	plusw1,btemp+2
 40513  01D75A  0EFB               	movlw	-5
 40514  01D75C  006F FF8C  F02D    	movff	plusw1,btemp+3
 40515  01D762  D0BD               	goto	l2137
 40516  01D764                     l13504:
 40517                           
 40518                           ;mbmc.c: 37:  if (slow == (-1)) {
 40519                           ;stkvar	_slow @ sp[(-4)+-6]
 40520  01D764  0EF6               	movlw	-10
 40521  01D766  28E3               	incf	plusw1,w,c
 40522  01D768  A4D8               	btfss	status,2,c
 40523  01D76A  D012               	goto	l13512
 40524                           
 40525                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 40526                           ;stkvar	_bn @ sp[(-4)+-5]
 40527  01D76C  0EF7               	movlw	-9
 40528  01D76E  50E3               	movf	plusw1,w,c
 40529  01D770  0D04               	mullw	4
 40530  01D772  0E00               	movlw	low lp_filter@smooth
 40531  01D774  24F3               	addwf	243,w,c
 40532  01D776  6ED9               	movwf	fsr2l,c
 40533  01D778  0E03               	movlw	high lp_filter@smooth
 40534  01D77A  20F4               	addwfc	prodh,w,c
 40535  01D77C  6EDA               	movwf	fsr2h,c
 40536  01D77E  0E00               	movlw	0
 40537  01D780  6EDE               	movwf	postinc2,c
 40538  01D782  0E00               	movlw	0
 40539  01D784  6EDE               	movwf	postinc2,c
 40540  01D786  0E00               	movlw	0
 40541  01D788  6EDE               	movwf	postinc2,c
 40542  01D78A  0E00               	movlw	0
 40543  01D78C  6EDD               	movwf	postdec2,c
 40544  01D78E  D7D9               	goto	u12570
 40545  01D790                     l13512:
 40546                           
 40547                           ;mbmc.c: 42:  if (slow) {
 40548                           ;stkvar	_slow @ sp[(-4)+-6]
 40549  01D790  0EF6               	movlw	-10
 40550  01D792  50E3               	movf	plusw1,w,c
 40551  01D794  B4D8               	btfsc	status,2,c
 40552  01D796  D006               	goto	l13516
 40553                           
 40554                           ;mbmc.c: 43:   lp_speed = 0.033;
 40555  01D798  0E02               	movlw	2
 40556  01D79A  6E32               	movwf	(btemp+8)^0,c
 40557  01D79C  0E2B               	movlw	43
 40558  01D79E  6E33               	movwf	(btemp+9)^0,c
 40559  01D7A0  0E07               	movlw	7
 40560  01D7A2  D005               	goto	L46
 40561  01D7A4                     l13516:
 40562                           
 40563                           ;mbmc.c: 45:   lp_speed = 0.066;
 40564  01D7A4  0E02               	movlw	2
 40565  01D7A6  6E32               	movwf	(btemp+8)^0,c
 40566  01D7A8  0E2B               	movlw	43
 40567  01D7AA  6E33               	movwf	(btemp+9)^0,c
 40568  01D7AC  0E87               	movlw	135
 40569  01D7AE                     L46:
 40570  01D7AE  6E34               	movwf	(btemp+10)^0,c
 40571  01D7B0  0E3D               	movlw	61
 40572  01D7B2  6E35               	movwf	(btemp+11)^0,c
 40573                           
 40574                           ;stkvar	_lp_speed @ sp[(-4)+0]
 40575  01D7B4  0EFC               	movlw	-4
 40576  01D7B6  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40577  01D7BC  0EFD               	movlw	-3
 40578  01D7BE  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40579  01D7C4  0EFE               	movlw	-2
 40580  01D7C6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40581  01D7CC  0EFF               	movlw	-1
 40582  01D7CE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40583                           
 40584                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 40585                           ;stkvar	_bn @ sp[(-4)+-5]
 40586  01D7D4  0EF7               	movlw	-9
 40587  01D7D6  50E3               	movf	plusw1,w,c
 40588  01D7D8  0D04               	mullw	4
 40589  01D7DA  0E00               	movlw	low lp_filter@smooth
 40590  01D7DC  24F3               	addwf	243,w,c
 40591  01D7DE  6ED9               	movwf	fsr2l,c
 40592  01D7E0  0E03               	movlw	high lp_filter@smooth
 40593  01D7E2  20F4               	addwfc	prodh,w,c
 40594  01D7E4  6EDA               	movwf	fsr2h,c
 40595  01D7E6  006F FF7B FFE6     	movff	postinc2,postinc1
 40596  01D7EC  006F FF7B FFE6     	movff	postinc2,postinc1
 40597  01D7F2  006F FF7B FFE6     	movff	postinc2,postinc1
 40598  01D7F8  006F FF7B FFE6     	movff	postinc2,postinc1
 40599                           
 40600                           ;stkvar	_lp_speed @ sp[(-8)+0]
 40601  01D7FE  0EF8               	movlw	-8
 40602  01D800  006F FF8F FFE6     	movff	plusw1,postinc1
 40603  01D806  006F FF8F FFE6     	movff	plusw1,postinc1
 40604  01D80C  006F FF8F FFE6     	movff	plusw1,postinc1
 40605  01D812  006F FF8F FFE6     	movff	plusw1,postinc1
 40606                           
 40607                           ;stkvar	_bn @ sp[(-12)+-5]
 40608  01D818  0EEF               	movlw	-17
 40609  01D81A  50E3               	movf	plusw1,w,c
 40610  01D81C  0D04               	mullw	4
 40611  01D81E  0E00               	movlw	low lp_filter@smooth
 40612  01D820  24F3               	addwf	243,w,c
 40613  01D822  6ED9               	movwf	fsr2l,c
 40614  01D824  0E03               	movlw	high lp_filter@smooth
 40615  01D826  20F4               	addwfc	prodh,w,c
 40616  01D828  6EDA               	movwf	fsr2h,c
 40617  01D82A  006F FF7B FFE6     	movff	postinc2,postinc1
 40618  01D830  006F FF7B FFE6     	movff	postinc2,postinc1
 40619  01D836  006F FF7B FFE6     	movff	postinc2,postinc1
 40620  01D83C  006F FF7B FFE6     	movff	postinc2,postinc1
 40621                           
 40622                           ;stkvar	_new @ sp[(-16)+-4]
 40623  01D842  0EEC               	movlw	-20
 40624  01D844  006F FF8F FFE6     	movff	plusw1,postinc1
 40625  01D84A  006F FF8F FFE6     	movff	plusw1,postinc1
 40626  01D850  006F FF8F FFE6     	movff	plusw1,postinc1
 40627  01D856  006F FF8F FFE6     	movff	plusw1,postinc1
 40628  01D85C  EC7C  F00D         	call	___flsub	;wreg free
 40629  01D860  0060  F0AB  FFE6   	movff	btemp,postinc1
 40630  01D866  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40631  01D86C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40632  01D872  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40633  01D878  EC8D  F0B2         	call	___flmul	;wreg free
 40634  01D87C  0060  F0AB  FFE6   	movff	btemp,postinc1
 40635  01D882  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 40636  01D888  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 40637  01D88E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 40638  01D894  ECA2  F0B6         	call	___fladd	;wreg free
 40639                           
 40640                           ;stkvar	_bn @ sp[(-4)+-5]
 40641  01D898  0EF7               	movlw	-9
 40642  01D89A  50E3               	movf	plusw1,w,c
 40643  01D89C  0D04               	mullw	4
 40644  01D89E  0E00               	movlw	low lp_filter@smooth
 40645  01D8A0  24F3               	addwf	243,w,c
 40646  01D8A2  6ED9               	movwf	fsr2l,c
 40647  01D8A4  0E03               	movlw	high lp_filter@smooth
 40648  01D8A6  20F4               	addwfc	prodh,w,c
 40649  01D8A8  6EDA               	movwf	fsr2h,c
 40650  01D8AA  0060  F0AB  FFDE   	movff	btemp,postinc2
 40651  01D8B0  0060  F0AF  FFDE   	movff	btemp+1,postinc2
 40652  01D8B6  0060  F0B3  FFDE   	movff	btemp+2,postinc2
 40653  01D8BC  0060  F0B7  FFDD   	movff	btemp+3,postdec2
 40654  01D8C2  52DD               	movf	postdec2,f,c
 40655  01D8C4  52DD               	movf	postdec2,f,c
 40656  01D8C6  006F FF78  F02A    	movff	postinc2,btemp
 40657  01D8CC  006F FF78  F02B    	movff	postinc2,btemp+1
 40658  01D8D2  006F FF78  F02C    	movff	postinc2,btemp+2
 40659  01D8D8  006F FF78  F02D    	movff	postinc2,btemp+3
 40660  01D8DE                     l2137:
 40661                           
 40662                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 40663  01D8DE  0EF6               	movlw	246
 40664  01D8E0  26E1               	addwf	fsr1l,f,c
 40665  01D8E2  0EFF               	movlw	255
 40666  01D8E4  22E2               	addwfc	fsr1h,f,c
 40667  01D8E6  0012               	return		;funcret
 40668  01D8E8                     __end_of_lp_filter:
 40669                           	opt callstack 0
 40670                           
 40671 ;; *************** function ___flsub *****************
 40672 ;; Defined at:
 40673 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 40674 ;; Parameters:    Size  Location     Type
 40675 ;;  b               4  [STACK] float 
 40676 ;;  a               4  [STACK] float 
 40677 ;; Auto vars:     Size  Location     Type
 40678 ;;		None
 40679 ;; Return value:  Size  Location     Type
 40680 ;;                  4  [STACK] float 
 40681 ;; Registers used:
 40682 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 40683 ;; Tracked objects:
 40684 ;;		On entry : 0/0
 40685 ;;		On exit  : 0/0
 40686 ;;		Unchanged: 0/0
 40687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40692 ;;Total ram usage:        0 bytes
 40693 ;; Hardware stack levels used:    1
 40694 ;; Hardware stack levels required when called:   16
 40695 ;; This function calls:
 40696 ;;		___fladd
 40697 ;; This function is called by:
 40698 ;;		_conv_raw_result
 40699 ;;		_lp_filter
 40700 ;;		_calc_model_data
 40701 ;;		_calc_ror_data
 40702 ;;		_esr_check
 40703 ;;		_efgtoa
 40704 ;; This function uses a reentrant model
 40705 ;;
 40706                           
 40707                           	psect	text152
 40708  001AF8                     __ptext152:
 40709                           	opt callstack 0
 40710  001AF8                     ___flsub:
 40711                           	opt callstack 0
 40712                           
 40713                           ;stkvar	_a @ sp[(0)+-8]
 40714                           
 40715                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40716                           ;incstack = 0
 40717 ;; hardware stack exceeded
 40718  001AF8  0EFB               	movlw	-5
 40719  001AFA  7EE3               	btg	plusw1,7,c
 40720                           
 40721                           ;stkvar	_a @ sp[(0)+-8]
 40722  001AFC  0EF8               	movlw	-8
 40723  001AFE  006F FF8F FFE6     	movff	plusw1,postinc1
 40724  001B04  006F FF8F FFE6     	movff	plusw1,postinc1
 40725  001B0A  006F FF8F FFE6     	movff	plusw1,postinc1
 40726  001B10  006F FF8F FFE6     	movff	plusw1,postinc1
 40727                           
 40728                           ;stkvar	_b @ sp[(-4)+-4]
 40729  001B16  0EF8               	movlw	-8
 40730  001B18  006F FF8F FFE6     	movff	plusw1,postinc1
 40731  001B1E  006F FF8F FFE6     	movff	plusw1,postinc1
 40732  001B24  006F FF8F FFE6     	movff	plusw1,postinc1
 40733  001B2A  006F FF8F FFE6     	movff	plusw1,postinc1
 40734  001B30  ECA2  F0B6         	call	___fladd	;wreg free
 40735                           
 40736                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 40737  001B34  0EF8               	movlw	248
 40738  001B36  26E1               	addwf	fsr1l,f,c
 40739  001B38  0EFF               	movlw	255
 40740  001B3A  22E2               	addwfc	fsr1h,f,c
 40741  001B3C  0012               	return		;funcret
 40742  001B3E                     __end_of___flsub:
 40743                           	opt callstack 0
 40744                           
 40745 ;; *************** function ___fladd *****************
 40746 ;; Defined at:
 40747 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 40748 ;; Parameters:    Size  Location     Type
 40749 ;;  b               4  [STACK] float 
 40750 ;;  a               4  [STACK] float 
 40751 ;; Auto vars:     Size  Location     Type
 40752 ;;  grs             1  [STACK] unsigned char 
 40753 ;;  bexp            1  [STACK] unsigned char 
 40754 ;;  aexp            1  [STACK] unsigned char 
 40755 ;;  signs           1  [STACK] unsigned char 
 40756 ;; Return value:  Size  Location     Type
 40757 ;;                  4  [STACK] unsigned char 
 40758 ;; Registers used:
 40759 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 40760 ;; Tracked objects:
 40761 ;;		On entry : 0/0
 40762 ;;		On exit  : 0/0
 40763 ;;		Unchanged: 0/0
 40764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40769 ;;Total ram usage:        0 bytes
 40770 ;; Hardware stack levels used:    1
 40771 ;; Hardware stack levels required when called:   15
 40772 ;; This function calls:
 40773 ;;		Nothing
 40774 ;; This function is called by:
 40775 ;;		_main
 40776 ;;		_lp_filter
 40777 ;;		_calc_model_data
 40778 ;;		_efgtoa
 40779 ;;		___asfladd
 40780 ;;		___flsub
 40781 ;; This function uses a reentrant model
 40782 ;;
 40783                           
 40784                           	psect	text153
 40785  016D44                     __ptext153:
 40786                           	opt callstack 0
 40787  016D44                     ___fladd:
 40788                           	opt callstack 0
 40789                           
 40790                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40791  016D44  52E6               	movf	postinc1,f,c
 40792  016D46  52E6               	movf	postinc1,f,c
 40793  016D48  52E6               	movf	postinc1,f,c
 40794  016D4A  52E6               	movf	postinc1,f,c
 40795                           
 40796                           ;stkvar	_b @ sp[(-4)+-4]
 40797                           
 40798                           ;incstack = 0
 40799 ;; hardware stack exceeded
 40800  016D4C  0EFB               	movlw	251
 40801  016D4E  24E1               	addwf	fsr1l,w,c
 40802  016D50  6ED9               	movwf	fsr2l,c
 40803  016D52  0EFF               	movlw	255
 40804  016D54  20E2               	addwfc	fsr1h,w,c
 40805  016D56  6EDA               	movwf	fsr2h,c
 40806  016D58  50DF               	movf	indf2,w,c
 40807  016D5A  6E35               	movwf	(btemp+11)^0,c
 40808  016D5C  0E80               	movlw	128
 40809  016D5E  1635               	andwf	(btemp+11)^0,f,c
 40810                           
 40811                           ;stkvar	_signs @ sp[(-4)+3]
 40812  016D60  0EFF               	movlw	-1
 40813  016D62  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40814                           
 40815                           ;stkvar	_b @ sp[(-4)+-4]
 40816  016D68  0EFB               	movlw	251
 40817  016D6A  24E1               	addwf	fsr1l,w,c
 40818  016D6C  6ED9               	movwf	fsr2l,c
 40819  016D6E  0EFF               	movlw	255
 40820  016D70  20E2               	addwfc	fsr1h,w,c
 40821  016D72  6EDA               	movwf	fsr2h,c
 40822  016D74  50DF               	movf	indf2,w,c
 40823  016D76  6E35               	movwf	(btemp+11)^0,c
 40824  016D78  90D8               	bcf	status,0,c
 40825  016D7A  3435               	rlcf	(btemp+11)^0,w,c
 40826  016D7C  6E34               	movwf	(btemp+10)^0,c
 40827                           
 40828                           ;stkvar	_bexp @ sp[(-4)+1]
 40829  016D7E  0EFD               	movlw	-3
 40830  016D80  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40831                           
 40832                           ;stkvar	_b @ sp[(-4)+-4]
 40833  016D86  0EFA               	movlw	250
 40834  016D88  24E1               	addwf	fsr1l,w,c
 40835  016D8A  6ED9               	movwf	fsr2l,c
 40836  016D8C  0EFF               	movlw	255
 40837  016D8E  20E2               	addwfc	fsr1h,w,c
 40838  016D90  6EDA               	movwf	fsr2h,c
 40839  016D92  AEDF               	btfss	indf2,7,c
 40840  016D94  D002               	goto	l9768
 40841                           
 40842                           ;stkvar	_bexp @ sp[(-4)+1]
 40843  016D96  0EFD               	movlw	-3
 40844  016D98  80E3               	bsf	plusw1,0,c
 40845  016D9A                     l9768:
 40846                           
 40847                           ;stkvar	_bexp @ sp[(-4)+1]
 40848  016D9A  0EFD               	movlw	-3
 40849  016D9C  50E3               	movf	plusw1,w,c
 40850  016D9E  B4D8               	btfsc	status,2,c
 40851  016DA0  D027               	goto	l9778
 40852                           
 40853                           ;stkvar	_bexp @ sp[(-4)+1]
 40854  016DA2  0EFD               	movlw	-3
 40855  016DA4  28E3               	incf	plusw1,w,c
 40856  016DA6  A4D8               	btfss	status,2,c
 40857  016DA8  D018               	goto	l9774
 40858  016DAA  0E00               	movlw	0
 40859  016DAC  6E32               	movwf	(btemp+8)^0,c
 40860  016DAE  0E00               	movlw	0
 40861  016DB0  6E33               	movwf	(btemp+9)^0,c
 40862  016DB2  0E00               	movlw	0
 40863  016DB4  6E34               	movwf	(btemp+10)^0,c
 40864  016DB6  0E00               	movlw	0
 40865  016DB8  6E35               	movwf	(btemp+11)^0,c
 40866                           
 40867                           ;stkvar	_b @ sp[(-4)+-4]
 40868  016DBA  0EF8               	movlw	-8
 40869  016DBC  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40870  016DC2  0EF9               	movlw	-7
 40871  016DC4  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40872  016DCA  0EFA               	movlw	-6
 40873  016DCC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40874  016DD2  0EFB               	movlw	-5
 40875  016DD4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40876  016DDA                     l9774:
 40877                           
 40878                           ;stkvar	_b @ sp[(-4)+-4]
 40879  016DDA  0EFA               	movlw	-6
 40880  016DDC  8EE3               	bsf	plusw1,7,c
 40881                           
 40882                           ;stkvar	_b @ sp[(-4)+-4]
 40883  016DDE  0EFB               	movlw	251
 40884  016DE0  24E1               	addwf	fsr1l,w,c
 40885  016DE2  6ED9               	movwf	fsr2l,c
 40886  016DE4  0EFF               	movlw	255
 40887  016DE6  20E2               	addwfc	fsr1h,w,c
 40888  016DE8  6EDA               	movwf	fsr2h,c
 40889  016DEA  0E00               	movlw	0
 40890  016DEC  6EDF               	movwf	indf2,c
 40891  016DEE  D018               	goto	l9780
 40892  016DF0                     l9778:
 40893  016DF0  0E00               	movlw	0
 40894  016DF2  6E32               	movwf	(btemp+8)^0,c
 40895  016DF4  0E00               	movlw	0
 40896  016DF6  6E33               	movwf	(btemp+9)^0,c
 40897  016DF8  0E00               	movlw	0
 40898  016DFA  6E34               	movwf	(btemp+10)^0,c
 40899  016DFC  0E00               	movlw	0
 40900  016DFE  6E35               	movwf	(btemp+11)^0,c
 40901                           
 40902                           ;stkvar	_b @ sp[(-4)+-4]
 40903  016E00  0EF8               	movlw	-8
 40904  016E02  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40905  016E08  0EF9               	movlw	-7
 40906  016E0A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40907  016E10  0EFA               	movlw	-6
 40908  016E12  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40909  016E18  0EFB               	movlw	-5
 40910  016E1A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40911  016E20                     l9780:
 40912                           
 40913                           ;stkvar	_a @ sp[(-4)+-8]
 40914  016E20  0EF7               	movlw	247
 40915  016E22  24E1               	addwf	fsr1l,w,c
 40916  016E24  6ED9               	movwf	fsr2l,c
 40917  016E26  0EFF               	movlw	255
 40918  016E28  20E2               	addwfc	fsr1h,w,c
 40919  016E2A  6EDA               	movwf	fsr2h,c
 40920  016E2C  50DF               	movf	indf2,w,c
 40921  016E2E  6E35               	movwf	(btemp+11)^0,c
 40922  016E30  0E80               	movlw	128
 40923  016E32  1635               	andwf	(btemp+11)^0,f,c
 40924                           
 40925                           ;stkvar	_aexp @ sp[(-4)+2]
 40926  016E34  0EFE               	movlw	-2
 40927  016E36  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40928                           
 40929                           ;stkvar	_signs @ sp[(-4)+3]
 40930                           ;stkvar	_aexp @ sp[(-4)+2]
 40931  016E3C  50E1               	movf	fsr1l,w,c
 40932  016E3E  0FFE               	addlw	-2
 40933  016E40  6ED9               	movwf	fsr2l,c
 40934  016E42  50E2               	movf	fsr1h,w,c
 40935  016E44  6EDA               	movwf	fsr2h,c
 40936  016E46  0EFF               	movlw	255
 40937  016E48  22DA               	addwfc	fsr2h,f,c
 40938  016E4A  0EFF               	movlw	-1
 40939  016E4C  50E3               	movf	plusw1,w,c
 40940  016E4E  18DE               	xorwf	postinc2,w,c
 40941  016E50  B4D8               	btfsc	status,2,c
 40942  016E52  D002               	goto	l9786
 40943                           
 40944                           ;stkvar	_signs @ sp[(-4)+3]
 40945  016E54  0EFF               	movlw	-1
 40946  016E56  8CE3               	bsf	plusw1,6,c
 40947  016E58                     l9786:
 40948                           
 40949                           ;stkvar	_a @ sp[(-4)+-8]
 40950  016E58  0EF7               	movlw	247
 40951  016E5A  24E1               	addwf	fsr1l,w,c
 40952  016E5C  6ED9               	movwf	fsr2l,c
 40953  016E5E  0EFF               	movlw	255
 40954  016E60  20E2               	addwfc	fsr1h,w,c
 40955  016E62  6EDA               	movwf	fsr2h,c
 40956  016E64  50DF               	movf	indf2,w,c
 40957  016E66  6E35               	movwf	(btemp+11)^0,c
 40958  016E68  90D8               	bcf	status,0,c
 40959  016E6A  3435               	rlcf	(btemp+11)^0,w,c
 40960  016E6C  6E34               	movwf	(btemp+10)^0,c
 40961                           
 40962                           ;stkvar	_aexp @ sp[(-4)+2]
 40963  016E6E  0EFE               	movlw	-2
 40964  016E70  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40965                           
 40966                           ;stkvar	_a @ sp[(-4)+-8]
 40967  016E76  0EF6               	movlw	246
 40968  016E78  24E1               	addwf	fsr1l,w,c
 40969  016E7A  6ED9               	movwf	fsr2l,c
 40970  016E7C  0EFF               	movlw	255
 40971  016E7E  20E2               	addwfc	fsr1h,w,c
 40972  016E80  6EDA               	movwf	fsr2h,c
 40973  016E82  AEDF               	btfss	indf2,7,c
 40974  016E84  D002               	goto	l9792
 40975                           
 40976                           ;stkvar	_aexp @ sp[(-4)+2]
 40977  016E86  0EFE               	movlw	-2
 40978  016E88  80E3               	bsf	plusw1,0,c
 40979  016E8A                     l9792:
 40980                           
 40981                           ;stkvar	_aexp @ sp[(-4)+2]
 40982  016E8A  0EFE               	movlw	-2
 40983  016E8C  50E3               	movf	plusw1,w,c
 40984  016E8E  B4D8               	btfsc	status,2,c
 40985  016E90  D027               	goto	l9802
 40986                           
 40987                           ;stkvar	_aexp @ sp[(-4)+2]
 40988  016E92  0EFE               	movlw	-2
 40989  016E94  28E3               	incf	plusw1,w,c
 40990  016E96  A4D8               	btfss	status,2,c
 40991  016E98  D018               	goto	l9798
 40992  016E9A  0E00               	movlw	0
 40993  016E9C  6E32               	movwf	(btemp+8)^0,c
 40994  016E9E  0E00               	movlw	0
 40995  016EA0  6E33               	movwf	(btemp+9)^0,c
 40996  016EA2  0E00               	movlw	0
 40997  016EA4  6E34               	movwf	(btemp+10)^0,c
 40998  016EA6  0E00               	movlw	0
 40999  016EA8  6E35               	movwf	(btemp+11)^0,c
 41000                           
 41001                           ;stkvar	_a @ sp[(-4)+-8]
 41002  016EAA  0EF4               	movlw	-12
 41003  016EAC  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 41004  016EB2  0EF5               	movlw	-11
 41005  016EB4  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 41006  016EBA  0EF6               	movlw	-10
 41007  016EBC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41008  016EC2  0EF7               	movlw	-9
 41009  016EC4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41010  016ECA                     l9798:
 41011                           
 41012                           ;stkvar	_a @ sp[(-4)+-8]
 41013  016ECA  0EF6               	movlw	-10
 41014  016ECC  8EE3               	bsf	plusw1,7,c
 41015                           
 41016                           ;stkvar	_a @ sp[(-4)+-8]
 41017  016ECE  0EF7               	movlw	247
 41018  016ED0  24E1               	addwf	fsr1l,w,c
 41019  016ED2  6ED9               	movwf	fsr2l,c
 41020  016ED4  0EFF               	movlw	255
 41021  016ED6  20E2               	addwfc	fsr1h,w,c
 41022  016ED8  6EDA               	movwf	fsr2h,c
 41023  016EDA  0E00               	movlw	0
 41024  016EDC  6EDF               	movwf	indf2,c
 41025  016EDE  D018               	goto	l9804
 41026  016EE0                     l9802:
 41027  016EE0  0E00               	movlw	0
 41028  016EE2  6E32               	movwf	(btemp+8)^0,c
 41029  016EE4  0E00               	movlw	0
 41030  016EE6  6E33               	movwf	(btemp+9)^0,c
 41031  016EE8  0E00               	movlw	0
 41032  016EEA  6E34               	movwf	(btemp+10)^0,c
 41033  016EEC  0E00               	movlw	0
 41034  016EEE  6E35               	movwf	(btemp+11)^0,c
 41035                           
 41036                           ;stkvar	_a @ sp[(-4)+-8]
 41037  016EF0  0EF4               	movlw	-12
 41038  016EF2  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 41039  016EF8  0EF5               	movlw	-11
 41040  016EFA  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 41041  016F00  0EF6               	movlw	-10
 41042  016F02  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41043  016F08  0EF7               	movlw	-9
 41044  016F0A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41045  016F10                     l9804:
 41046                           
 41047                           ;stkvar	_bexp @ sp[(-4)+1]
 41048                           ;stkvar	_aexp @ sp[(-4)+2]
 41049  016F10  50E1               	movf	fsr1l,w,c
 41050  016F12  0FFE               	addlw	-2
 41051  016F14  6ED9               	movwf	fsr2l,c
 41052  016F16  50E2               	movf	fsr1h,w,c
 41053  016F18  6EDA               	movwf	fsr2h,c
 41054  016F1A  0EFF               	movlw	255
 41055  016F1C  22DA               	addwfc	fsr2h,f,c
 41056  016F1E  0EFD               	movlw	-3
 41057  016F20  50E3               	movf	plusw1,w,c
 41058  016F22  5CDE               	subwf	postinc2,w,c
 41059  016F24  B0D8               	btfsc	status,0,c
 41060  016F26  D0A4               	goto	l9840
 41061                           
 41062                           ;stkvar	_signs @ sp[(-4)+3]
 41063  016F28  0EFF               	movlw	-1
 41064  016F2A  ACE3               	btfss	plusw1,6,c
 41065  016F2C  D002               	goto	l9810
 41066                           
 41067                           ;stkvar	_signs @ sp[(-4)+3]
 41068  016F2E  0EFF               	movlw	-1
 41069  016F30  7EE3               	btg	plusw1,7,c
 41070  016F32                     l9810:
 41071                           
 41072                           ;stkvar	_bexp @ sp[(-4)+1]
 41073                           ;stkvar	_grs @ sp[(-4)+0]
 41074  016F32  0EFD               	movlw	-3
 41075  016F34  006F FF8C  F02A    	movff	plusw1,btemp
 41076  016F3A  0EFC               	movlw	-4
 41077  016F3C  0060  F0AB  FFE3   	movff	btemp,plusw1
 41078                           
 41079                           ;stkvar	_aexp @ sp[(-4)+2]
 41080                           ;stkvar	_bexp @ sp[(-4)+1]
 41081  016F42  0EFE               	movlw	-2
 41082  016F44  006F FF8C  F02A    	movff	plusw1,btemp
 41083  016F4A  0EFD               	movlw	-3
 41084  016F4C  0060  F0AB  FFE3   	movff	btemp,plusw1
 41085                           
 41086                           ;stkvar	_grs @ sp[(-4)+0]
 41087                           ;stkvar	_aexp @ sp[(-4)+2]
 41088  016F52  0EFC               	movlw	-4
 41089  016F54  006F FF8C  F02A    	movff	plusw1,btemp
 41090  016F5A  0EFE               	movlw	-2
 41091  016F5C  0060  F0AB  FFE3   	movff	btemp,plusw1
 41092                           
 41093                           ;stkvar	_b @ sp[(-4)+-4]
 41094                           ;stkvar	_grs @ sp[(-4)+0]
 41095  016F62  0EF8               	movlw	-8
 41096  016F64  006F FF8C  F02A    	movff	plusw1,btemp
 41097  016F6A  0EFC               	movlw	-4
 41098  016F6C  0060  F0AB  FFE3   	movff	btemp,plusw1
 41099                           
 41100                           ;stkvar	_a @ sp[(-4)+-8]
 41101                           ;stkvar	_b @ sp[(-4)+-4]
 41102  016F72  0EF4               	movlw	-12
 41103  016F74  006F FF8C  F02A    	movff	plusw1,btemp
 41104  016F7A  0EF8               	movlw	-8
 41105  016F7C  0060  F0AB  FFE3   	movff	btemp,plusw1
 41106                           
 41107                           ;stkvar	_grs @ sp[(-4)+0]
 41108                           ;stkvar	_a @ sp[(-4)+-8]
 41109  016F82  0EFC               	movlw	-4
 41110  016F84  006F FF8C  F02A    	movff	plusw1,btemp
 41111  016F8A  0EF4               	movlw	-12
 41112  016F8C  0060  F0AB  FFE3   	movff	btemp,plusw1
 41113                           
 41114                           ;stkvar	_b @ sp[(-4)+-4]
 41115  016F92  0EF9               	movlw	249
 41116  016F94  24E1               	addwf	fsr1l,w,c
 41117  016F96  6ED9               	movwf	fsr2l,c
 41118  016F98  0EFF               	movlw	255
 41119  016F9A  20E2               	addwfc	fsr1h,w,c
 41120  016F9C  6EDA               	movwf	fsr2h,c
 41121  016F9E  50DF               	movf	indf2,w,c
 41122  016FA0  6E35               	movwf	(btemp+11)^0,c
 41123                           
 41124                           ;stkvar	_grs @ sp[(-4)+0]
 41125  016FA2  0EFC               	movlw	-4
 41126  016FA4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41127                           
 41128                           ;stkvar	_a @ sp[(-4)+-8]
 41129  016FAA  0EF5               	movlw	245
 41130  016FAC  24E1               	addwf	fsr1l,w,c
 41131  016FAE  6ED9               	movwf	fsr2l,c
 41132  016FB0  0EFF               	movlw	255
 41133  016FB2  20E2               	addwfc	fsr1h,w,c
 41134  016FB4  6EDA               	movwf	fsr2h,c
 41135                           
 41136                           ;stkvar	_b @ sp[(-4)+-4]
 41137  016FB6  0EF9               	movlw	249
 41138  016FB8  24E1               	addwf	fsr1l,w,c
 41139  016FBA  6EE9               	movwf	fsr0l,c
 41140  016FBC  0EFF               	movlw	255
 41141  016FBE  20E2               	addwfc	fsr1h,w,c
 41142  016FC0  6EEA               	movwf	fsr0h,c
 41143  016FC2  006F FF7F FFEF     	movff	indf2,indf0
 41144                           
 41145                           ;stkvar	_grs @ sp[(-4)+0]
 41146                           ;stkvar	_a @ sp[(-4)+-8]
 41147  016FC8  0EF5               	movlw	245
 41148  016FCA  24E1               	addwf	fsr1l,w,c
 41149  016FCC  6ED9               	movwf	fsr2l,c
 41150  016FCE  0EFF               	movlw	255
 41151  016FD0  20E2               	addwfc	fsr1h,w,c
 41152  016FD2  6EDA               	movwf	fsr2h,c
 41153  016FD4  0EFC               	movlw	-4
 41154  016FD6  006F FF8F FFDF     	movff	plusw1,indf2
 41155                           
 41156                           ;stkvar	_b @ sp[(-4)+-4]
 41157  016FDC  0EFA               	movlw	250
 41158  016FDE  24E1               	addwf	fsr1l,w,c
 41159  016FE0  6ED9               	movwf	fsr2l,c
 41160  016FE2  0EFF               	movlw	255
 41161  016FE4  20E2               	addwfc	fsr1h,w,c
 41162  016FE6  6EDA               	movwf	fsr2h,c
 41163  016FE8  50DF               	movf	indf2,w,c
 41164  016FEA  6E35               	movwf	(btemp+11)^0,c
 41165                           
 41166                           ;stkvar	_grs @ sp[(-4)+0]
 41167  016FEC  0EFC               	movlw	-4
 41168  016FEE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41169                           
 41170                           ;stkvar	_a @ sp[(-4)+-8]
 41171  016FF4  0EF6               	movlw	246
 41172  016FF6  24E1               	addwf	fsr1l,w,c
 41173  016FF8  6ED9               	movwf	fsr2l,c
 41174  016FFA  0EFF               	movlw	255
 41175  016FFC  20E2               	addwfc	fsr1h,w,c
 41176  016FFE  6EDA               	movwf	fsr2h,c
 41177                           
 41178                           ;stkvar	_b @ sp[(-4)+-4]
 41179  017000  0EFA               	movlw	250
 41180  017002  24E1               	addwf	fsr1l,w,c
 41181  017004  6EE9               	movwf	fsr0l,c
 41182  017006  0EFF               	movlw	255
 41183  017008  20E2               	addwfc	fsr1h,w,c
 41184  01700A  6EEA               	movwf	fsr0h,c
 41185  01700C  006F FF7F FFEF     	movff	indf2,indf0
 41186                           
 41187                           ;stkvar	_grs @ sp[(-4)+0]
 41188                           ;stkvar	_a @ sp[(-4)+-8]
 41189  017012  0EF6               	movlw	246
 41190  017014  24E1               	addwf	fsr1l,w,c
 41191  017016  6ED9               	movwf	fsr2l,c
 41192  017018  0EFF               	movlw	255
 41193  01701A  20E2               	addwfc	fsr1h,w,c
 41194  01701C  6EDA               	movwf	fsr2h,c
 41195  01701E  0EFC               	movlw	-4
 41196  017020  006F FF8F FFDF     	movff	plusw1,indf2
 41197                           
 41198                           ;stkvar	_b @ sp[(-4)+-4]
 41199  017026  0EFB               	movlw	251
 41200  017028  24E1               	addwf	fsr1l,w,c
 41201  01702A  6ED9               	movwf	fsr2l,c
 41202  01702C  0EFF               	movlw	255
 41203  01702E  20E2               	addwfc	fsr1h,w,c
 41204  017030  6EDA               	movwf	fsr2h,c
 41205  017032  50DF               	movf	indf2,w,c
 41206  017034  6E35               	movwf	(btemp+11)^0,c
 41207                           
 41208                           ;stkvar	_grs @ sp[(-4)+0]
 41209  017036  0EFC               	movlw	-4
 41210  017038  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41211                           
 41212                           ;stkvar	_a @ sp[(-4)+-8]
 41213  01703E  0EF7               	movlw	247
 41214  017040  24E1               	addwf	fsr1l,w,c
 41215  017042  6ED9               	movwf	fsr2l,c
 41216  017044  0EFF               	movlw	255
 41217  017046  20E2               	addwfc	fsr1h,w,c
 41218  017048  6EDA               	movwf	fsr2h,c
 41219                           
 41220                           ;stkvar	_b @ sp[(-4)+-4]
 41221  01704A  0EFB               	movlw	251
 41222  01704C  24E1               	addwf	fsr1l,w,c
 41223  01704E  6EE9               	movwf	fsr0l,c
 41224  017050  0EFF               	movlw	255
 41225  017052  20E2               	addwfc	fsr1h,w,c
 41226  017054  6EEA               	movwf	fsr0h,c
 41227  017056  006F FF7F FFEF     	movff	indf2,indf0
 41228                           
 41229                           ;stkvar	_grs @ sp[(-4)+0]
 41230                           ;stkvar	_a @ sp[(-4)+-8]
 41231  01705C  0EF7               	movlw	247
 41232  01705E  24E1               	addwf	fsr1l,w,c
 41233  017060  6ED9               	movwf	fsr2l,c
 41234  017062  0EFF               	movlw	255
 41235  017064  20E2               	addwfc	fsr1h,w,c
 41236  017066  6EDA               	movwf	fsr2h,c
 41237  017068  0EFC               	movlw	-4
 41238  01706A  006F FF8F FFDF     	movff	plusw1,indf2
 41239  017070                     l9840:
 41240                           
 41241                           ;stkvar	_grs @ sp[(-4)+0]
 41242  017070  0EFC               	movlw	-4
 41243  017072  6AE3               	clrf	plusw1,c
 41244                           
 41245                           ;stkvar	_aexp @ sp[(-4)+2]
 41246  017074  0EFE               	movlw	-2
 41247  017076  50E3               	movf	plusw1,w,c
 41248  017078  6E34               	movwf	(btemp+10)^0,c
 41249  01707A  6A35               	clrf	(btemp+11)^0,c
 41250                           
 41251                           ;stkvar	_bexp @ sp[(-4)+1]
 41252  01707C  0EFD               	movlw	-3
 41253  01707E  50E3               	movf	plusw1,w,c
 41254  017080  5E34               	subwf	(btemp+10)^0,f,c
 41255  017082  0E00               	movlw	0
 41256  017084  5A35               	subwfb	(btemp+11)^0,f,c
 41257  017086  BE35               	btfsc	(btemp+11)^0,7,c
 41258  017088  D062               	goto	l9864
 41259  01708A  5035               	movf	(btemp+11)^0,w,c
 41260  01708C  E104               	bnz	u7270
 41261  01708E  0E1A               	movlw	26
 41262  017090  5C34               	subwf	(btemp+10)^0,w,c
 41263  017092  A0D8               	btfss	status,0,c
 41264  017094  D05C               	goto	l9864
 41265  017096                     u7270:
 41266                           
 41267                           ;stkvar	_b @ sp[(-4)+-4]
 41268  017096  0EF8               	movlw	-8
 41269  017098  50E3               	movf	plusw1,w,c
 41270  01709A  E10A               	bnz	u7281
 41271  01709C  0EF9               	movlw	-7
 41272  01709E  50E3               	movf	plusw1,w,c
 41273  0170A0  E107               	bnz	u7281
 41274  0170A2  0EFA               	movlw	-6
 41275  0170A4  50E3               	movf	plusw1,w,c
 41276  0170A6  E104               	bnz	u7281
 41277  0170A8  0EFB               	movlw	-5
 41278  0170AA  50E3               	movf	plusw1,w,c
 41279  0170AC  B4D8               	btfsc	status,2,c
 41280  0170AE  D003               	goto	u7280
 41281  0170B0                     u7281:
 41282  0170B0  6A35               	clrf	(btemp+11)^0,c
 41283  0170B2  2A35               	incf	(btemp+11)^0,f,c
 41284  0170B4  D001               	goto	u7298
 41285  0170B6                     u7280:
 41286  0170B6  6A35               	clrf	(btemp+11)^0,c
 41287  0170B8                     u7298:
 41288                           
 41289                           ;stkvar	_grs @ sp[(-4)+0]
 41290  0170B8  0EFC               	movlw	-4
 41291  0170BA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41292                           
 41293                           ;stkvar	_b @ sp[(-4)+-4]
 41294  0170C0  0EF8               	movlw	-8
 41295  0170C2  6AE3               	clrf	plusw1,c
 41296  0170C4  0EF9               	movlw	-7
 41297  0170C6  6AE3               	clrf	plusw1,c
 41298  0170C8  0EFA               	movlw	-6
 41299  0170CA  6AE3               	clrf	plusw1,c
 41300  0170CC  0EFB               	movlw	-5
 41301  0170CE  6AE3               	clrf	plusw1,c
 41302                           
 41303                           ;stkvar	_aexp @ sp[(-4)+2]
 41304                           ;stkvar	_bexp @ sp[(-4)+1]
 41305  0170D0  0EFE               	movlw	-2
 41306  0170D2  006F FF8C  F02A    	movff	plusw1,btemp
 41307  0170D8  0EFD               	movlw	-3
 41308  0170DA  0060  F0AB  FFE3   	movff	btemp,plusw1
 41309  0170E0  D042               	goto	u7330
 41310  0170E2                     l9850:
 41311                           
 41312                           ;stkvar	_grs @ sp[(-4)+0]
 41313  0170E2  0EFC               	movlw	-4
 41314  0170E4  A0E3               	btfss	plusw1,0,c
 41315  0170E6  D00D               	goto	l9854
 41316                           
 41317                           ;stkvar	_grs @ sp[(-4)+0]
 41318  0170E8  0EFC               	movlw	-4
 41319  0170EA  006F FF8C  F035    	movff	plusw1,btemp+11
 41320  0170F0  90D8               	bcf	status,0,c
 41321  0170F2  3235               	rrcf	(btemp+11)^0,f,c
 41322  0170F4  0E01               	movlw	1
 41323  0170F6  1235               	iorwf	(btemp+11)^0,f,c
 41324                           
 41325                           ;stkvar	_grs @ sp[(-4)+0]
 41326  0170F8  0EFC               	movlw	-4
 41327  0170FA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41328  017100  D009               	goto	l9856
 41329  017102                     l9854:
 41330                           
 41331                           ;stkvar	_grs @ sp[(-4)+0]
 41332  017102  50E1               	movf	fsr1l,w,c
 41333  017104  0FFC               	addlw	-4
 41334  017106  6ED9               	movwf	fsr2l,c
 41335  017108  50E2               	movf	fsr1h,w,c
 41336  01710A  6EDA               	movwf	fsr2h,c
 41337  01710C  0EFF               	movlw	255
 41338  01710E  22DA               	addwfc	fsr2h,f,c
 41339  017110  90D8               	bcf	status,0,c
 41340  017112  32DF               	rrcf	indf2,f,c
 41341  017114                     l9856:
 41342                           
 41343                           ;stkvar	_b @ sp[(-4)+-4]
 41344  017114  0EF8               	movlw	-8
 41345  017116  A0E3               	btfss	plusw1,0,c
 41346  017118  D002               	goto	l9860
 41347                           
 41348                           ;stkvar	_grs @ sp[(-4)+0]
 41349  01711A  0EFC               	movlw	-4
 41350  01711C  8EE3               	bsf	plusw1,7,c
 41351  01711E                     l9860:
 41352  01711E  0E01               	movlw	1
 41353  017120  6E35               	movwf	(btemp+11)^0,c
 41354                           
 41355                           ;stkvar	_b @ sp[(-4)+-4]
 41356  017122  50E1               	movf	fsr1l,w,c
 41357  017124  0FF8               	addlw	-8
 41358  017126  6ED9               	movwf	fsr2l,c
 41359  017128  50E2               	movf	fsr1h,w,c
 41360  01712A  6EDA               	movwf	fsr2h,c
 41361  01712C  0EFF               	movlw	255
 41362  01712E  22DA               	addwfc	fsr2h,f,c
 41363  017130  2835               	incf	(btemp+11)^0,w,c
 41364  017132  52DE               	movf	postinc2,f,c
 41365  017134  D008               	goto	u7320
 41366  017136                     u7325:
 41367  017136  52DE               	movf	postinc2,f,c
 41368  017138  90D8               	bcf	status,0,c
 41369  01713A  BEDC               	btfsc	preinc2,7,c
 41370  01713C  80D8               	bsf	status,0,c
 41371  01713E  32DD               	rrcf	postdec2,f,c
 41372  017140  32DD               	rrcf	postdec2,f,c
 41373  017142  32DD               	rrcf	postdec2,f,c
 41374  017144  32DE               	rrcf	postinc2,f,c
 41375  017146                     u7320:
 41376  017146  2EE8               	decfsz	wreg,f,c
 41377  017148  D7F6               	goto	u7325
 41378                           
 41379                           ;stkvar	_bexp @ sp[(-4)+1]
 41380  01714A  0EFD               	movlw	-3
 41381  01714C  2AE3               	incf	plusw1,f,c
 41382  01714E                     l9864:
 41383                           
 41384                           ;stkvar	_aexp @ sp[(-4)+2]
 41385                           ;stkvar	_bexp @ sp[(-4)+1]
 41386  01714E  50E1               	movf	fsr1l,w,c
 41387  017150  0FFD               	addlw	-3
 41388  017152  6ED9               	movwf	fsr2l,c
 41389  017154  50E2               	movf	fsr1h,w,c
 41390  017156  6EDA               	movwf	fsr2h,c
 41391  017158  0EFF               	movlw	255
 41392  01715A  22DA               	addwfc	fsr2h,f,c
 41393  01715C  0EFE               	movlw	-2
 41394  01715E  50E3               	movf	plusw1,w,c
 41395  017160  5CDE               	subwf	postinc2,w,c
 41396  017162  A0D8               	btfss	status,0,c
 41397  017164  D7BE               	goto	l9850
 41398  017166                     u7330:
 41399                           
 41400                           ;stkvar	_signs @ sp[(-4)+3]
 41401  017166  0EFF               	movlw	-1
 41402  017168  BCE3               	btfsc	plusw1,6,c
 41403  01716A  D066               	goto	l9892
 41404                           
 41405                           ;stkvar	_bexp @ sp[(-4)+1]
 41406  01716C  0EFD               	movlw	-3
 41407  01716E  50E3               	movf	plusw1,w,c
 41408  017170  B4D8               	btfsc	status,2,c
 41409  017172  D0F2               	goto	u7430
 41410                           
 41411                           ;stkvar	_a @ sp[(-4)+-8]
 41412                           ;stkvar	_b @ sp[(-4)+-4]
 41413  017174  0EF8               	movlw	-8
 41414  017176  50E3               	movf	plusw1,w,c
 41415  017178  6E2A               	movwf	btemp^0,c
 41416  01717A  0EF4               	movlw	-12
 41417  01717C  50E3               	movf	plusw1,w,c
 41418  01717E  262A               	addwf	btemp^0,f,c
 41419  017180  0EF8               	movlw	-8
 41420  017182  0060  F0AB  FFE3   	movff	btemp,plusw1
 41421  017188  0EF9               	movlw	-7
 41422  01718A  50E3               	movf	plusw1,w,c
 41423  01718C  6E2A               	movwf	btemp^0,c
 41424  01718E  0EF5               	movlw	-11
 41425  017190  50E3               	movf	plusw1,w,c
 41426  017192  222A               	addwfc	btemp^0,f,c
 41427  017194  0EF9               	movlw	-7
 41428  017196  0060  F0AB  FFE3   	movff	btemp,plusw1
 41429  01719C  0EFA               	movlw	-6
 41430  01719E  50E3               	movf	plusw1,w,c
 41431  0171A0  6E2A               	movwf	btemp^0,c
 41432  0171A2  0EF6               	movlw	-10
 41433  0171A4  50E3               	movf	plusw1,w,c
 41434  0171A6  222A               	addwfc	btemp^0,f,c
 41435  0171A8  0EFA               	movlw	-6
 41436  0171AA  0060  F0AB  FFE3   	movff	btemp,plusw1
 41437  0171B0  0EFB               	movlw	-5
 41438  0171B2  50E3               	movf	plusw1,w,c
 41439  0171B4  6E2A               	movwf	btemp^0,c
 41440  0171B6  0EF7               	movlw	-9
 41441  0171B8  50E3               	movf	plusw1,w,c
 41442  0171BA  222A               	addwfc	btemp^0,f,c
 41443  0171BC  0EFB               	movlw	-5
 41444  0171BE  0060  F0AB  FFE3   	movff	btemp,plusw1
 41445                           
 41446                           ;stkvar	_b @ sp[(-4)+-4]
 41447  0171C4  0EFB               	movlw	-5
 41448  0171C6  A0E3               	btfss	plusw1,0,c
 41449  0171C8  D101               	goto	u7470
 41450                           
 41451                           ;stkvar	_grs @ sp[(-4)+0]
 41452  0171CA  0EFC               	movlw	-4
 41453  0171CC  A0E3               	btfss	plusw1,0,c
 41454  0171CE  D00D               	goto	l9882
 41455                           
 41456                           ;stkvar	_grs @ sp[(-4)+0]
 41457  0171D0  0EFC               	movlw	-4
 41458  0171D2  006F FF8C  F035    	movff	plusw1,btemp+11
 41459  0171D8  90D8               	bcf	status,0,c
 41460  0171DA  3235               	rrcf	(btemp+11)^0,f,c
 41461  0171DC  0E01               	movlw	1
 41462  0171DE  1235               	iorwf	(btemp+11)^0,f,c
 41463                           
 41464                           ;stkvar	_grs @ sp[(-4)+0]
 41465  0171E0  0EFC               	movlw	-4
 41466  0171E2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41467  0171E8  D009               	goto	l9884
 41468  0171EA                     l9882:
 41469                           
 41470                           ;stkvar	_grs @ sp[(-4)+0]
 41471  0171EA  50E1               	movf	fsr1l,w,c
 41472  0171EC  0FFC               	addlw	-4
 41473  0171EE  6ED9               	movwf	fsr2l,c
 41474  0171F0  50E2               	movf	fsr1h,w,c
 41475  0171F2  6EDA               	movwf	fsr2h,c
 41476  0171F4  0EFF               	movlw	255
 41477  0171F6  22DA               	addwfc	fsr2h,f,c
 41478  0171F8  90D8               	bcf	status,0,c
 41479  0171FA  32DF               	rrcf	indf2,f,c
 41480  0171FC                     l9884:
 41481                           
 41482                           ;stkvar	_b @ sp[(-4)+-4]
 41483  0171FC  0EF8               	movlw	-8
 41484  0171FE  A0E3               	btfss	plusw1,0,c
 41485  017200  D002               	goto	l9888
 41486                           
 41487                           ;stkvar	_grs @ sp[(-4)+0]
 41488  017202  0EFC               	movlw	-4
 41489  017204  8EE3               	bsf	plusw1,7,c
 41490  017206                     l9888:
 41491  017206  0E01               	movlw	1
 41492  017208  6E35               	movwf	(btemp+11)^0,c
 41493                           
 41494                           ;stkvar	_b @ sp[(-4)+-4]
 41495  01720A  50E1               	movf	fsr1l,w,c
 41496  01720C  0FF8               	addlw	-8
 41497  01720E  6ED9               	movwf	fsr2l,c
 41498  017210  50E2               	movf	fsr1h,w,c
 41499  017212  6EDA               	movwf	fsr2h,c
 41500  017214  0EFF               	movlw	255
 41501  017216  22DA               	addwfc	fsr2h,f,c
 41502  017218  2835               	incf	(btemp+11)^0,w,c
 41503  01721A  52DE               	movf	postinc2,f,c
 41504  01721C  D008               	goto	u7390
 41505  01721E                     u7395:
 41506  01721E  52DE               	movf	postinc2,f,c
 41507  017220  90D8               	bcf	status,0,c
 41508  017222  BEDC               	btfsc	preinc2,7,c
 41509  017224  80D8               	bsf	status,0,c
 41510  017226  32DD               	rrcf	postdec2,f,c
 41511  017228  32DD               	rrcf	postdec2,f,c
 41512  01722A  32DD               	rrcf	postdec2,f,c
 41513  01722C  32DE               	rrcf	postinc2,f,c
 41514  01722E                     u7390:
 41515  01722E  2EE8               	decfsz	wreg,f,c
 41516  017230  D7F6               	goto	u7395
 41517                           
 41518                           ;stkvar	_bexp @ sp[(-4)+1]
 41519  017232  0EFD               	movlw	-3
 41520  017234  2AE3               	incf	plusw1,f,c
 41521  017236  D0CA               	goto	u7470
 41522  017238                     l9892:
 41523                           
 41524                           ;stkvar	_a @ sp[(-4)+-8]
 41525                           ;stkvar	_b @ sp[(-4)+-4]
 41526  017238  50E1               	movf	fsr1l,w,c
 41527  01723A  0FF8               	addlw	-8
 41528  01723C  6ED9               	movwf	fsr2l,c
 41529  01723E  50E2               	movf	fsr1h,w,c
 41530  017240  6EDA               	movwf	fsr2h,c
 41531  017242  0EFF               	movlw	255
 41532  017244  22DA               	addwfc	fsr2h,f,c
 41533  017246  0EF4               	movlw	-12
 41534  017248  50E3               	movf	plusw1,w,c
 41535  01724A  5CDE               	subwf	postinc2,w,c
 41536  01724C  0EF5               	movlw	-11
 41537  01724E  50E3               	movf	plusw1,w,c
 41538  017250  58DE               	subwfb	postinc2,w,c
 41539  017252  0EF6               	movlw	-10
 41540  017254  50E3               	movf	plusw1,w,c
 41541  017256  58DE               	subwfb	postinc2,w,c
 41542  017258  50DE               	movf	postinc2,w,c
 41543  01725A  0A80               	xorlw	128
 41544  01725C  6E2A               	movwf	btemp^0,c
 41545  01725E  0EF7               	movlw	-9
 41546  017260  50E3               	movf	plusw1,w,c
 41547  017262  0A80               	xorlw	128
 41548  017264  582A               	subwfb	btemp^0,w,c
 41549  017266  B0D8               	btfsc	status,0,c
 41550  017268  D053               	goto	l9904
 41551                           
 41552                           ;stkvar	_b @ sp[(-4)+-4]
 41553                           ;stkvar	_a @ sp[(-4)+-8]
 41554  01726A  0EF4               	movlw	-12
 41555  01726C  006F FF8C  F032    	movff	plusw1,btemp+8
 41556  017272  0EF5               	movlw	-11
 41557  017274  006F FF8C  F033    	movff	plusw1,btemp+9
 41558  01727A  0EF6               	movlw	-10
 41559  01727C  006F FF8C  F034    	movff	plusw1,btemp+10
 41560  017282  0EF7               	movlw	-9
 41561  017284  006F FF8C  F035    	movff	plusw1,btemp+11
 41562  01728A  0EF8               	movlw	-8
 41563  01728C  50E3               	movf	plusw1,w,c
 41564  01728E  5E32               	subwf	(btemp+8)^0,f,c
 41565  017290  0EF9               	movlw	-7
 41566  017292  50E3               	movf	plusw1,w,c
 41567  017294  5A33               	subwfb	(btemp+9)^0,f,c
 41568  017296  0EFA               	movlw	-6
 41569  017298  50E3               	movf	plusw1,w,c
 41570  01729A  5A34               	subwfb	(btemp+10)^0,f,c
 41571  01729C  0EFB               	movlw	-5
 41572  01729E  50E3               	movf	plusw1,w,c
 41573  0172A0  5A35               	subwfb	(btemp+11)^0,f,c
 41574  0172A2  0EFF               	movlw	255
 41575  0172A4  2432               	addwf	(btemp+8)^0,w,c
 41576  0172A6  6E2E               	movwf	(btemp+4)^0,c
 41577  0172A8  0EFF               	movlw	255
 41578  0172AA  2033               	addwfc	(btemp+9)^0,w,c
 41579  0172AC  6E2F               	movwf	(btemp+5)^0,c
 41580  0172AE  0EFF               	movlw	255
 41581  0172B0  2034               	addwfc	(btemp+10)^0,w,c
 41582  0172B2  6E30               	movwf	(btemp+6)^0,c
 41583  0172B4  0EFF               	movlw	255
 41584  0172B6  2035               	addwfc	(btemp+11)^0,w,c
 41585  0172B8  6E31               	movwf	(btemp+7)^0,c
 41586                           
 41587                           ;stkvar	_b @ sp[(-4)+-4]
 41588  0172BA  0EF8               	movlw	-8
 41589  0172BC  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 41590  0172C2  0EF9               	movlw	-7
 41591  0172C4  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 41592  0172CA  0EFA               	movlw	-6
 41593  0172CC  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 41594  0172D2  0EFB               	movlw	-5
 41595  0172D4  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 41596                           
 41597                           ;stkvar	_signs @ sp[(-4)+3]
 41598  0172DA  0EFF               	movlw	-1
 41599  0172DC  7EE3               	btg	plusw1,7,c
 41600                           
 41601                           ;stkvar	_grs @ sp[(-4)+0]
 41602  0172DE  0EFC               	movlw	-4
 41603  0172E0  50E3               	movf	plusw1,w,c
 41604  0172E2  0800               	sublw	0
 41605  0172E4  6E35               	movwf	(btemp+11)^0,c
 41606                           
 41607                           ;stkvar	_grs @ sp[(-4)+0]
 41608  0172E6  0EFC               	movlw	-4
 41609  0172E8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41610                           
 41611                           ;stkvar	_grs @ sp[(-4)+0]
 41612  0172EE  0EFC               	movlw	-4
 41613  0172F0  50E3               	movf	plusw1,w,c
 41614  0172F2  A4D8               	btfss	status,2,c
 41615  0172F4  D020               	goto	l9906
 41616                           
 41617                           ;stkvar	_b @ sp[(-4)+-4]
 41618  0172F6  50E1               	movf	fsr1l,w,c
 41619  0172F8  0FF8               	addlw	-8
 41620  0172FA  6ED9               	movwf	fsr2l,c
 41621  0172FC  50E2               	movf	fsr1h,w,c
 41622  0172FE  6EDA               	movwf	fsr2h,c
 41623  017300  0EFF               	movlw	255
 41624  017302  22DA               	addwfc	fsr2h,f,c
 41625  017304  2ADE               	incf	postinc2,f,c
 41626  017306  0E00               	movlw	0
 41627  017308  22DE               	addwfc	postinc2,f,c
 41628  01730A  22DE               	addwfc	postinc2,f,c
 41629  01730C  22DE               	addwfc	postinc2,f,c
 41630  01730E  D013               	goto	l9906
 41631  017310                     l9904:
 41632                           
 41633                           ;stkvar	_a @ sp[(-4)+-8]
 41634                           ;stkvar	_b @ sp[(-4)+-4]
 41635  017310  50E1               	movf	fsr1l,w,c
 41636  017312  0FF8               	addlw	-8
 41637  017314  6ED9               	movwf	fsr2l,c
 41638  017316  50E2               	movf	fsr1h,w,c
 41639  017318  6EDA               	movwf	fsr2h,c
 41640  01731A  0EFF               	movlw	255
 41641  01731C  22DA               	addwfc	fsr2h,f,c
 41642  01731E  0EF4               	movlw	-12
 41643  017320  50E3               	movf	plusw1,w,c
 41644  017322  5EDE               	subwf	postinc2,f,c
 41645  017324  0EF5               	movlw	-11
 41646  017326  50E3               	movf	plusw1,w,c
 41647  017328  5ADE               	subwfb	postinc2,f,c
 41648  01732A  0EF6               	movlw	-10
 41649  01732C  50E3               	movf	plusw1,w,c
 41650  01732E  5ADE               	subwfb	postinc2,f,c
 41651  017330  0EF7               	movlw	-9
 41652  017332  50E3               	movf	plusw1,w,c
 41653  017334  5ADE               	subwfb	postinc2,f,c
 41654  017336                     l9906:
 41655                           
 41656                           ;stkvar	_b @ sp[(-4)+-4]
 41657  017336  0EF8               	movlw	-8
 41658  017338  50E3               	movf	plusw1,w,c
 41659  01733A  E145               	bnz	l9928
 41660  01733C  0EF9               	movlw	-7
 41661  01733E  50E3               	movf	plusw1,w,c
 41662  017340  E142               	bnz	l9928
 41663  017342  0EFA               	movlw	-6
 41664  017344  50E3               	movf	plusw1,w,c
 41665  017346  E13F               	bnz	l9928
 41666  017348  0EFB               	movlw	-5
 41667  01734A  50E3               	movf	plusw1,w,c
 41668  01734C  A4D8               	btfss	status,2,c
 41669  01734E  D03B               	goto	l9928
 41670                           
 41671                           ;stkvar	_grs @ sp[(-4)+0]
 41672  017350  0EFC               	movlw	-4
 41673  017352  50E3               	movf	plusw1,w,c
 41674  017354  A4D8               	btfss	status,2,c
 41675  017356  D037               	goto	l9928
 41676  017358                     u7430:
 41677  017358  0E00               	movlw	0
 41678  01735A  6E2A               	movwf	btemp^0,c
 41679  01735C  0E00               	movlw	0
 41680  01735E  6E2B               	movwf	(btemp+1)^0,c
 41681  017360  0E00               	movlw	0
 41682  017362  6E2C               	movwf	(btemp+2)^0,c
 41683  017364  0E00               	movlw	0
 41684  017366  6E2D               	movwf	(btemp+3)^0,c
 41685  017368  D0C6               	goto	l3259
 41686  01736A                     l9914:
 41687                           
 41688                           ;stkvar	_b @ sp[(-4)+-4]
 41689  01736A  90D8               	bcf	status,0,c
 41690  01736C  0EF8               	movlw	-8
 41691  01736E  36E3               	rlcf	plusw1,f,c
 41692  017370  0EF9               	movlw	-7
 41693  017372  36E3               	rlcf	plusw1,f,c
 41694  017374  0EFA               	movlw	-6
 41695  017376  36E3               	rlcf	plusw1,f,c
 41696  017378  0EFB               	movlw	-5
 41697  01737A  36E3               	rlcf	plusw1,f,c
 41698                           
 41699                           ;stkvar	_grs @ sp[(-4)+0]
 41700  01737C  0EFC               	movlw	-4
 41701  01737E  AEE3               	btfss	plusw1,7,c
 41702  017380  D002               	goto	l3271
 41703                           
 41704                           ;stkvar	_b @ sp[(-4)+-4]
 41705  017382  0EF8               	movlw	-8
 41706  017384  80E3               	bsf	plusw1,0,c
 41707  017386                     l3271:
 41708                           
 41709                           ;stkvar	_grs @ sp[(-4)+0]
 41710  017386  0EFC               	movlw	-4
 41711  017388  A0E3               	btfss	plusw1,0,c
 41712  01738A  D00E               	goto	l9922
 41713                           
 41714                           ;stkvar	_grs @ sp[(-4)+0]
 41715  01738C  0EFC               	movlw	-4
 41716  01738E  006F FF8C  F035    	movff	plusw1,btemp+11
 41717  017394  90D8               	bcf	status,0,c
 41718  017396  3435               	rlcf	(btemp+11)^0,w,c
 41719  017398  6E34               	movwf	(btemp+10)^0,c
 41720  01739A  0E01               	movlw	1
 41721  01739C  1234               	iorwf	(btemp+10)^0,f,c
 41722                           
 41723                           ;stkvar	_grs @ sp[(-4)+0]
 41724  01739E  0EFC               	movlw	-4
 41725  0173A0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41726  0173A6  D009               	goto	l9924
 41727  0173A8                     l9922:
 41728                           
 41729                           ;stkvar	_grs @ sp[(-4)+0]
 41730  0173A8  50E1               	movf	fsr1l,w,c
 41731  0173AA  0FFC               	addlw	-4
 41732  0173AC  6ED9               	movwf	fsr2l,c
 41733  0173AE  50E2               	movf	fsr1h,w,c
 41734  0173B0  6EDA               	movwf	fsr2h,c
 41735  0173B2  0EFF               	movlw	255
 41736  0173B4  22DA               	addwfc	fsr2h,f,c
 41737  0173B6  90D8               	bcf	status,0,c
 41738  0173B8  36DF               	rlcf	indf2,f,c
 41739  0173BA                     l9924:
 41740                           
 41741                           ;stkvar	_bexp @ sp[(-4)+1]
 41742  0173BA  0EFD               	movlw	-3
 41743  0173BC  50E3               	movf	plusw1,w,c
 41744  0173BE  B4D8               	btfsc	status,2,c
 41745  0173C0  D002               	goto	l9928
 41746                           
 41747                           ;stkvar	_bexp @ sp[(-4)+1]
 41748  0173C2  0EFD               	movlw	-3
 41749  0173C4  06E3               	decf	plusw1,f,c
 41750  0173C6                     l9928:
 41751                           
 41752                           ;stkvar	_b @ sp[(-4)+-4]
 41753  0173C6  0EFA               	movlw	-6
 41754  0173C8  AEE3               	btfss	plusw1,7,c
 41755  0173CA  D7CF               	goto	l9914
 41756  0173CC                     u7470:
 41757                           
 41758                           ;stkvar	_aexp @ sp[(-4)+2]
 41759  0173CC  0EFE               	movlw	-2
 41760  0173CE  6AE3               	clrf	plusw1,c
 41761                           
 41762                           ;stkvar	_grs @ sp[(-4)+0]
 41763  0173D0  0EFC               	movlw	-4
 41764  0173D2  AEE3               	btfss	plusw1,7,c
 41765  0173D4  D00F               	goto	l9942
 41766                           
 41767                           ;stkvar	_grs @ sp[(-4)+0]
 41768  0173D6  0EFC               	movlw	-4
 41769  0173D8  006F FF8C  F035    	movff	plusw1,btemp+11
 41770  0173DE  0E7F               	movlw	127
 41771  0173E0  1635               	andwf	(btemp+11)^0,f,c
 41772  0173E2  B4D8               	btfsc	status,2,c
 41773  0173E4  D004               	goto	l9938
 41774  0173E6                     u7490:
 41775                           
 41776                           ;stkvar	_aexp @ sp[(-4)+2]
 41777  0173E6  0EFE               	movlw	-2
 41778  0173E8  6AE3               	clrf	plusw1,c
 41779  0173EA  2AE3               	incf	plusw1,f,c
 41780  0173EC  D003               	goto	l9942
 41781  0173EE                     l9938:
 41782                           
 41783                           ;stkvar	_b @ sp[(-4)+-4]
 41784  0173EE  0EF8               	movlw	-8
 41785  0173F0  B0E3               	btfsc	plusw1,0,c
 41786  0173F2  D7F9               	goto	u7490
 41787  0173F4                     l9942:
 41788                           
 41789                           ;stkvar	_aexp @ sp[(-4)+2]
 41790  0173F4  0EFE               	movlw	-2
 41791  0173F6  50E3               	movf	plusw1,w,c
 41792  0173F8  B4D8               	btfsc	status,2,c
 41793  0173FA  D02B               	goto	l9954
 41794                           
 41795                           ;stkvar	_b @ sp[(-4)+-4]
 41796  0173FC  50E1               	movf	fsr1l,w,c
 41797  0173FE  0FF8               	addlw	-8
 41798  017400  6ED9               	movwf	fsr2l,c
 41799  017402  50E2               	movf	fsr1h,w,c
 41800  017404  6EDA               	movwf	fsr2h,c
 41801  017406  0EFF               	movlw	255
 41802  017408  22DA               	addwfc	fsr2h,f,c
 41803  01740A  2ADE               	incf	postinc2,f,c
 41804  01740C  0E00               	movlw	0
 41805  01740E  22DE               	addwfc	postinc2,f,c
 41806  017410  22DE               	addwfc	postinc2,f,c
 41807  017412  22DE               	addwfc	postinc2,f,c
 41808                           
 41809                           ;stkvar	_b @ sp[(-4)+-4]
 41810  017414  0EFB               	movlw	-5
 41811  017416  A0E3               	btfss	plusw1,0,c
 41812  017418  D01C               	goto	l9954
 41813  01741A  0E01               	movlw	1
 41814  01741C  6E35               	movwf	(btemp+11)^0,c
 41815                           
 41816                           ;stkvar	_b @ sp[(-4)+-4]
 41817  01741E  50E1               	movf	fsr1l,w,c
 41818  017420  0FF8               	addlw	-8
 41819  017422  6ED9               	movwf	fsr2l,c
 41820  017424  50E2               	movf	fsr1h,w,c
 41821  017426  6EDA               	movwf	fsr2h,c
 41822  017428  0EFF               	movlw	255
 41823  01742A  22DA               	addwfc	fsr2h,f,c
 41824  01742C  2835               	incf	(btemp+11)^0,w,c
 41825  01742E  52DE               	movf	postinc2,f,c
 41826  017430  D008               	goto	u7530
 41827  017432                     u7535:
 41828  017432  52DE               	movf	postinc2,f,c
 41829  017434  90D8               	bcf	status,0,c
 41830  017436  BEDC               	btfsc	preinc2,7,c
 41831  017438  80D8               	bsf	status,0,c
 41832  01743A  32DD               	rrcf	postdec2,f,c
 41833  01743C  32DD               	rrcf	postdec2,f,c
 41834  01743E  32DD               	rrcf	postdec2,f,c
 41835  017440  32DE               	rrcf	postinc2,f,c
 41836  017442                     u7530:
 41837  017442  2EE8               	decfsz	wreg,f,c
 41838  017444  D7F6               	goto	u7535
 41839                           
 41840                           ;stkvar	_bexp @ sp[(-4)+1]
 41841  017446  0EFD               	movlw	-3
 41842  017448  28E3               	incf	plusw1,w,c
 41843  01744A  B4D8               	btfsc	status,2,c
 41844  01744C  D002               	goto	l9954
 41845                           
 41846                           ;stkvar	_bexp @ sp[(-4)+1]
 41847  01744E  0EFD               	movlw	-3
 41848  017450  2AE3               	incf	plusw1,f,c
 41849  017452                     l9954:
 41850                           
 41851                           ;stkvar	_bexp @ sp[(-4)+1]
 41852  017452  0EFD               	movlw	-3
 41853  017454  28E3               	incf	plusw1,w,c
 41854  017456  B4D8               	btfsc	status,2,c
 41855  017458  D004               	goto	u7560
 41856                           
 41857                           ;stkvar	_bexp @ sp[(-4)+1]
 41858  01745A  0EFD               	movlw	-3
 41859  01745C  50E3               	movf	plusw1,w,c
 41860  01745E  A4D8               	btfss	status,2,c
 41861  017460  D00E               	goto	l9964
 41862  017462                     u7560:
 41863                           
 41864                           ;stkvar	_b @ sp[(-4)+-4]
 41865  017462  0EF8               	movlw	-8
 41866  017464  6AE3               	clrf	plusw1,c
 41867  017466  0EF9               	movlw	-7
 41868  017468  6AE3               	clrf	plusw1,c
 41869  01746A  0EFA               	movlw	-6
 41870  01746C  6AE3               	clrf	plusw1,c
 41871  01746E  0EFB               	movlw	-5
 41872  017470  6AE3               	clrf	plusw1,c
 41873                           
 41874                           ;stkvar	_bexp @ sp[(-4)+1]
 41875  017472  0EFD               	movlw	-3
 41876  017474  50E3               	movf	plusw1,w,c
 41877  017476  A4D8               	btfss	status,2,c
 41878  017478  D002               	goto	l9964
 41879                           
 41880                           ;stkvar	_signs @ sp[(-4)+3]
 41881  01747A  0EFF               	movlw	-1
 41882  01747C  6AE3               	clrf	plusw1,c
 41883  01747E                     l9964:
 41884                           
 41885                           ;stkvar	_bexp @ sp[(-4)+1]
 41886  01747E  0EFD               	movlw	-3
 41887  017480  A0E3               	btfss	plusw1,0,c
 41888  017482  D009               	goto	l9968
 41889                           
 41890                           ;stkvar	_b @ sp[(-4)+-4]
 41891  017484  0EFA               	movlw	250
 41892  017486  24E1               	addwf	fsr1l,w,c
 41893  017488  6ED9               	movwf	fsr2l,c
 41894  01748A  0EFF               	movlw	255
 41895  01748C  20E2               	addwfc	fsr1h,w,c
 41896  01748E  6EDA               	movwf	fsr2h,c
 41897  017490  0E00               	movlw	0
 41898  017492  8EDB               	bsf	plusw2,7,c
 41899  017494  D008               	goto	l9970
 41900  017496                     l9968:
 41901                           
 41902                           ;stkvar	_b @ sp[(-4)+-4]
 41903  017496  0EFA               	movlw	250
 41904  017498  24E1               	addwf	fsr1l,w,c
 41905  01749A  6ED9               	movwf	fsr2l,c
 41906  01749C  0EFF               	movlw	255
 41907  01749E  20E2               	addwfc	fsr1h,w,c
 41908  0174A0  6EDA               	movwf	fsr2h,c
 41909  0174A2  0E7F               	movlw	127
 41910  0174A4  16DF               	andwf	indf2,f,c
 41911  0174A6                     l9970:
 41912                           
 41913                           ;stkvar	_b @ sp[(-4)+-4]
 41914  0174A6  0EFB               	movlw	251
 41915  0174A8  24E1               	addwf	fsr1l,w,c
 41916  0174AA  6ED9               	movwf	fsr2l,c
 41917  0174AC  0EFF               	movlw	255
 41918  0174AE  20E2               	addwfc	fsr1h,w,c
 41919  0174B0  6EDA               	movwf	fsr2h,c
 41920                           
 41921                           ;stkvar	_bexp @ sp[(-4)+1]
 41922  0174B2  0EFD               	movlw	-3
 41923  0174B4  006F FF8C  F035    	movff	plusw1,btemp+11
 41924  0174BA  90D8               	bcf	status,0,c
 41925  0174BC  3035               	rrcf	(btemp+11)^0,w,c
 41926  0174BE  6EDF               	movwf	indf2,c
 41927                           
 41928                           ;stkvar	_signs @ sp[(-4)+3]
 41929  0174C0  0EFF               	movlw	-1
 41930  0174C2  AEE3               	btfss	plusw1,7,c
 41931  0174C4  D008               	goto	l9976
 41932                           
 41933                           ;stkvar	_b @ sp[(-4)+-4]
 41934  0174C6  0EFB               	movlw	251
 41935  0174C8  24E1               	addwf	fsr1l,w,c
 41936  0174CA  6ED9               	movwf	fsr2l,c
 41937  0174CC  0EFF               	movlw	255
 41938  0174CE  20E2               	addwfc	fsr1h,w,c
 41939  0174D0  6EDA               	movwf	fsr2h,c
 41940  0174D2  0E00               	movlw	0
 41941  0174D4  8EDB               	bsf	plusw2,7,c
 41942  0174D6                     l9976:
 41943                           
 41944                           ;stkvar	_b @ sp[(-4)+-4]
 41945  0174D6  0EF8               	movlw	-8
 41946  0174D8  006F FF8C  F02A    	movff	plusw1,btemp
 41947  0174DE  0EF9               	movlw	-7
 41948  0174E0  006F FF8C  F02B    	movff	plusw1,btemp+1
 41949  0174E6  0EFA               	movlw	-6
 41950  0174E8  006F FF8C  F02C    	movff	plusw1,btemp+2
 41951  0174EE  0EFB               	movlw	-5
 41952  0174F0  006F FF8C  F02D    	movff	plusw1,btemp+3
 41953  0174F6                     l3259:
 41954                           
 41955                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 41956  0174F6  0EF4               	movlw	244
 41957  0174F8  26E1               	addwf	fsr1l,f,c
 41958  0174FA  0EFF               	movlw	255
 41959  0174FC  22E2               	addwfc	fsr1h,f,c
 41960  0174FE  0012               	return		;funcret
 41961  017500                     __end_of___fladd:
 41962                           	opt callstack 0
 41963                           
 41964 ;; *************** function ___flmul *****************
 41965 ;; Defined at:
 41966 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 41967 ;; Parameters:    Size  Location     Type
 41968 ;;  b               4  [STACK] unsigned char 
 41969 ;;  a               4  [STACK] unsigned char 
 41970 ;; Auto vars:     Size  Location     Type
 41971 ;;  prod            4  [STACK] struct .
 41972 ;;  grs             4  [STACK] unsigned long 
 41973 ;;  temp            2  [STACK] struct .
 41974 ;;  bexp            1  [STACK] unsigned char 
 41975 ;;  aexp            1  [STACK] unsigned char 
 41976 ;;  sign            1  [STACK] unsigned char 
 41977 ;; Return value:  Size  Location     Type
 41978 ;;                  4  [STACK] unsigned char 
 41979 ;; Registers used:
 41980 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 41981 ;; Tracked objects:
 41982 ;;		On entry : 0/39
 41983 ;;		On exit  : 0/0
 41984 ;;		Unchanged: 0/0
 41985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 41986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41990 ;;Total ram usage:        0 bytes
 41991 ;; Hardware stack levels used:    1
 41992 ;; Hardware stack levels required when called:   15
 41993 ;; This function calls:
 41994 ;;		Nothing
 41995 ;; This function is called by:
 41996 ;;		_conv_raw_result
 41997 ;;		_lp_filter
 41998 ;;		_calc_model_data
 41999 ;;		_load_hist_data
 42000 ;;		_calc_bsoc
 42001 ;;		_init_bsoc
 42002 ;;		_efgtoa
 42003 ;; This function uses a reentrant model
 42004 ;;
 42005                           
 42006                           	psect	text154
 42007  01651A                     __ptext154:
 42008                           	opt callstack 0
 42009  01651A                     ___flmul:
 42010                           	opt callstack 0
 42011                           
 42012                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 42013  01651A  0E0D               	movlw	13
 42014  01651C  26E1               	addwf	fsr1l,f,c
 42015  01651E  0E00               	movlw	0
 42016  016520  22E2               	addwfc	fsr1h,f,c
 42017                           
 42018                           ;stkvar	_b @ sp[(-13)+-4]
 42019                           
 42020                           ;incstack = 0
 42021 ;; hardware stack exceeded
 42022  016522  0EF2               	movlw	242
 42023  016524  24E1               	addwf	fsr1l,w,c
 42024  016526  6ED9               	movwf	fsr2l,c
 42025  016528  0EFF               	movlw	255
 42026  01652A  20E2               	addwfc	fsr1h,w,c
 42027  01652C  6EDA               	movwf	fsr2h,c
 42028  01652E  50DF               	movf	indf2,w,c
 42029  016530  6E35               	movwf	(btemp+11)^0,c
 42030  016532  0E80               	movlw	128
 42031  016534  1635               	andwf	(btemp+11)^0,f,c
 42032                           
 42033                           ;stkvar	_sign @ sp[(-13)+12]
 42034  016536  0EFF               	movlw	-1
 42035  016538  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42036                           
 42037                           ;stkvar	_b @ sp[(-13)+-4]
 42038  01653E  0EF2               	movlw	242
 42039  016540  24E1               	addwf	fsr1l,w,c
 42040  016542  6ED9               	movwf	fsr2l,c
 42041  016544  0EFF               	movlw	255
 42042  016546  20E2               	addwfc	fsr1h,w,c
 42043  016548  6EDA               	movwf	fsr2h,c
 42044  01654A  50DF               	movf	indf2,w,c
 42045  01654C  6E35               	movwf	(btemp+11)^0,c
 42046  01654E  90D8               	bcf	status,0,c
 42047  016550  3435               	rlcf	(btemp+11)^0,w,c
 42048  016552  6E34               	movwf	(btemp+10)^0,c
 42049                           
 42050                           ;stkvar	_bexp @ sp[(-13)+10]
 42051  016554  0EFD               	movlw	-3
 42052  016556  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42053                           
 42054                           ;stkvar	_b @ sp[(-13)+-4]
 42055  01655C  0EF1               	movlw	241
 42056  01655E  24E1               	addwf	fsr1l,w,c
 42057  016560  6ED9               	movwf	fsr2l,c
 42058  016562  0EFF               	movlw	255
 42059  016564  20E2               	addwfc	fsr1h,w,c
 42060  016566  6EDA               	movwf	fsr2h,c
 42061  016568  AEDF               	btfss	indf2,7,c
 42062  01656A  D002               	goto	l10440
 42063                           
 42064                           ;stkvar	_bexp @ sp[(-13)+10]
 42065  01656C  0EFD               	movlw	-3
 42066  01656E  80E3               	bsf	plusw1,0,c
 42067  016570                     l10440:
 42068                           
 42069                           ;stkvar	_bexp @ sp[(-13)+10]
 42070  016570  0EFD               	movlw	-3
 42071  016572  50E3               	movf	plusw1,w,c
 42072  016574  B4D8               	btfsc	status,2,c
 42073  016576  D01F               	goto	l10448
 42074                           
 42075                           ;stkvar	_bexp @ sp[(-13)+10]
 42076  016578  0EFD               	movlw	-3
 42077  01657A  28E3               	incf	plusw1,w,c
 42078  01657C  A4D8               	btfss	status,2,c
 42079  01657E  D018               	goto	l10446
 42080  016580  0E00               	movlw	0
 42081  016582  6E32               	movwf	(btemp+8)^0,c
 42082  016584  0E00               	movlw	0
 42083  016586  6E33               	movwf	(btemp+9)^0,c
 42084  016588  0E00               	movlw	0
 42085  01658A  6E34               	movwf	(btemp+10)^0,c
 42086  01658C  0E00               	movlw	0
 42087  01658E  6E35               	movwf	(btemp+11)^0,c
 42088                           
 42089                           ;stkvar	_b @ sp[(-13)+-4]
 42090  016590  0EEF               	movlw	-17
 42091  016592  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 42092  016598  0EF0               	movlw	-16
 42093  01659A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 42094  0165A0  0EF1               	movlw	-15
 42095  0165A2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42096  0165A8  0EF2               	movlw	-14
 42097  0165AA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42098  0165B0                     l10446:
 42099                           
 42100                           ;stkvar	_b @ sp[(-13)+-4]
 42101  0165B0  0EF1               	movlw	-15
 42102  0165B2  8EE3               	bsf	plusw1,7,c
 42103  0165B4  D018               	goto	l10450
 42104  0165B6                     l10448:
 42105  0165B6  0E00               	movlw	0
 42106  0165B8  6E32               	movwf	(btemp+8)^0,c
 42107  0165BA  0E00               	movlw	0
 42108  0165BC  6E33               	movwf	(btemp+9)^0,c
 42109  0165BE  0E00               	movlw	0
 42110  0165C0  6E34               	movwf	(btemp+10)^0,c
 42111  0165C2  0E00               	movlw	0
 42112  0165C4  6E35               	movwf	(btemp+11)^0,c
 42113                           
 42114                           ;stkvar	_b @ sp[(-13)+-4]
 42115  0165C6  0EEF               	movlw	-17
 42116  0165C8  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 42117  0165CE  0EF0               	movlw	-16
 42118  0165D0  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 42119  0165D6  0EF1               	movlw	-15
 42120  0165D8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42121  0165DE  0EF2               	movlw	-14
 42122  0165E0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42123  0165E6                     l10450:
 42124                           
 42125                           ;stkvar	_a @ sp[(-13)+-8]
 42126  0165E6  0EEE               	movlw	238
 42127  0165E8  24E1               	addwf	fsr1l,w,c
 42128  0165EA  6ED9               	movwf	fsr2l,c
 42129  0165EC  0EFF               	movlw	255
 42130  0165EE  20E2               	addwfc	fsr1h,w,c
 42131  0165F0  6EDA               	movwf	fsr2h,c
 42132  0165F2  50DF               	movf	indf2,w,c
 42133  0165F4  6E35               	movwf	(btemp+11)^0,c
 42134  0165F6  0E80               	movlw	128
 42135  0165F8  1635               	andwf	(btemp+11)^0,f,c
 42136                           
 42137                           ;stkvar	_sign @ sp[(-13)+12]
 42138  0165FA  50E1               	movf	fsr1l,w,c
 42139  0165FC  0FFF               	addlw	-1
 42140  0165FE  6ED9               	movwf	fsr2l,c
 42141  016600  50E2               	movf	fsr1h,w,c
 42142  016602  6EDA               	movwf	fsr2h,c
 42143  016604  0EFF               	movlw	255
 42144  016606  22DA               	addwfc	fsr2h,f,c
 42145  016608  5035               	movf	(btemp+11)^0,w,c
 42146  01660A  1ADF               	xorwf	indf2,f,c
 42147                           
 42148                           ;stkvar	_a @ sp[(-13)+-8]
 42149  01660C  0EEE               	movlw	238
 42150  01660E  24E1               	addwf	fsr1l,w,c
 42151  016610  6ED9               	movwf	fsr2l,c
 42152  016612  0EFF               	movlw	255
 42153  016614  20E2               	addwfc	fsr1h,w,c
 42154  016616  6EDA               	movwf	fsr2h,c
 42155  016618  50DF               	movf	indf2,w,c
 42156  01661A  6E35               	movwf	(btemp+11)^0,c
 42157  01661C  90D8               	bcf	status,0,c
 42158  01661E  3435               	rlcf	(btemp+11)^0,w,c
 42159  016620  6E34               	movwf	(btemp+10)^0,c
 42160                           
 42161                           ;stkvar	_aexp @ sp[(-13)+11]
 42162  016622  0EFE               	movlw	-2
 42163  016624  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42164                           
 42165                           ;stkvar	_a @ sp[(-13)+-8]
 42166  01662A  0EED               	movlw	237
 42167  01662C  24E1               	addwf	fsr1l,w,c
 42168  01662E  6ED9               	movwf	fsr2l,c
 42169  016630  0EFF               	movlw	255
 42170  016632  20E2               	addwfc	fsr1h,w,c
 42171  016634  6EDA               	movwf	fsr2h,c
 42172  016636  AEDF               	btfss	indf2,7,c
 42173  016638  D002               	goto	l10458
 42174                           
 42175                           ;stkvar	_aexp @ sp[(-13)+11]
 42176  01663A  0EFE               	movlw	-2
 42177  01663C  80E3               	bsf	plusw1,0,c
 42178  01663E                     l10458:
 42179                           
 42180                           ;stkvar	_aexp @ sp[(-13)+11]
 42181  01663E  0EFE               	movlw	-2
 42182  016640  50E3               	movf	plusw1,w,c
 42183  016642  B4D8               	btfsc	status,2,c
 42184  016644  D01F               	goto	l10466
 42185                           
 42186                           ;stkvar	_aexp @ sp[(-13)+11]
 42187  016646  0EFE               	movlw	-2
 42188  016648  28E3               	incf	plusw1,w,c
 42189  01664A  A4D8               	btfss	status,2,c
 42190  01664C  D018               	goto	l10464
 42191  01664E  0E00               	movlw	0
 42192  016650  6E32               	movwf	(btemp+8)^0,c
 42193  016652  0E00               	movlw	0
 42194  016654  6E33               	movwf	(btemp+9)^0,c
 42195  016656  0E00               	movlw	0
 42196  016658  6E34               	movwf	(btemp+10)^0,c
 42197  01665A  0E00               	movlw	0
 42198  01665C  6E35               	movwf	(btemp+11)^0,c
 42199                           
 42200                           ;stkvar	_a @ sp[(-13)+-8]
 42201  01665E  0EEB               	movlw	-21
 42202  016660  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 42203  016666  0EEC               	movlw	-20
 42204  016668  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 42205  01666E  0EED               	movlw	-19
 42206  016670  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42207  016676  0EEE               	movlw	-18
 42208  016678  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42209  01667E                     l10464:
 42210                           
 42211                           ;stkvar	_a @ sp[(-13)+-8]
 42212  01667E  0EED               	movlw	-19
 42213  016680  8EE3               	bsf	plusw1,7,c
 42214  016682  D018               	goto	l10468
 42215  016684                     l10466:
 42216  016684  0E00               	movlw	0
 42217  016686  6E32               	movwf	(btemp+8)^0,c
 42218  016688  0E00               	movlw	0
 42219  01668A  6E33               	movwf	(btemp+9)^0,c
 42220  01668C  0E00               	movlw	0
 42221  01668E  6E34               	movwf	(btemp+10)^0,c
 42222  016690  0E00               	movlw	0
 42223  016692  6E35               	movwf	(btemp+11)^0,c
 42224                           
 42225                           ;stkvar	_a @ sp[(-13)+-8]
 42226  016694  0EEB               	movlw	-21
 42227  016696  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 42228  01669C  0EEC               	movlw	-20
 42229  01669E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 42230  0166A4  0EED               	movlw	-19
 42231  0166A6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42232  0166AC  0EEE               	movlw	-18
 42233  0166AE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42234  0166B4                     l10468:
 42235                           
 42236                           ;stkvar	_aexp @ sp[(-13)+11]
 42237  0166B4  0EFE               	movlw	-2
 42238  0166B6  50E3               	movf	plusw1,w,c
 42239  0166B8  B4D8               	btfsc	status,2,c
 42240  0166BA  D004               	goto	u8620
 42241                           
 42242                           ;stkvar	_bexp @ sp[(-13)+10]
 42243  0166BC  0EFD               	movlw	-3
 42244  0166BE  50E3               	movf	plusw1,w,c
 42245  0166C0  A4D8               	btfss	status,2,c
 42246  0166C2  D009               	goto	l10476
 42247  0166C4                     u8620:
 42248  0166C4  0E00               	movlw	0
 42249  0166C6  6E2A               	movwf	btemp^0,c
 42250  0166C8  0E00               	movlw	0
 42251  0166CA  6E2B               	movwf	(btemp+1)^0,c
 42252  0166CC  0E00               	movlw	0
 42253  0166CE  6E2C               	movwf	(btemp+2)^0,c
 42254  0166D0  0E00               	movlw	0
 42255  0166D2  6E2D               	movwf	(btemp+3)^0,c
 42256  0166D4  D332               	goto	l3340
 42257  0166D6                     l10476:
 42258                           
 42259                           ;stkvar	_b @ sp[(-13)+-4]
 42260  0166D6  0EEF               	movlw	-17
 42261  0166D8  006F FF8C  F035    	movff	plusw1,btemp+11
 42262                           
 42263                           ;stkvar	_a @ sp[(-13)+-8]
 42264  0166DE  0EED               	movlw	237
 42265  0166E0  24E1               	addwf	fsr1l,w,c
 42266  0166E2  6ED9               	movwf	fsr2l,c
 42267  0166E4  0EFF               	movlw	255
 42268  0166E6  20E2               	addwfc	fsr1h,w,c
 42269  0166E8  6EDA               	movwf	fsr2h,c
 42270  0166EA  50DF               	movf	indf2,w,c
 42271  0166EC  0235               	mulwf	(btemp+11)^0,c
 42272                           
 42273                           ;stkvar	_temp @ sp[(-13)+8]
 42274  0166EE  0EFB               	movlw	-5
 42275  0166F0  006F FFCF FFE3     	movff	prodl,plusw1
 42276  0166F6  0EFC               	movlw	-4
 42277  0166F8  006F FFD3 FFE3     	movff	prodh,plusw1
 42278                           
 42279                           ;stkvar	_temp @ sp[(-13)+8]
 42280  0166FE  0EFB               	movlw	-5
 42281  016700  006F FF8C  F035    	movff	plusw1,btemp+11
 42282  016706  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 42283  01670C  6A2F               	clrf	(btemp+5)^0,c
 42284  01670E  6A30               	clrf	(btemp+6)^0,c
 42285  016710  6A31               	clrf	(btemp+7)^0,c
 42286                           
 42287                           ;stkvar	_grs @ sp[(-13)+4]
 42288  016712  0EF7               	movlw	-9
 42289  016714  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 42290  01671A  0EF8               	movlw	-8
 42291  01671C  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 42292  016722  0EF9               	movlw	-7
 42293  016724  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 42294  01672A  0EFA               	movlw	-6
 42295  01672C  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 42296                           
 42297                           ;stkvar	_temp @ sp[(-13)+8]
 42298  016732  0EFC               	movlw	252
 42299  016734  24E1               	addwf	fsr1l,w,c
 42300  016736  6ED9               	movwf	fsr2l,c
 42301  016738  0EFF               	movlw	255
 42302  01673A  20E2               	addwfc	fsr1h,w,c
 42303  01673C  6EDA               	movwf	fsr2h,c
 42304  01673E  50DF               	movf	indf2,w,c
 42305  016740  6E35               	movwf	(btemp+11)^0,c
 42306  016742  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 42307  016748  6A2F               	clrf	(btemp+5)^0,c
 42308  01674A  6A30               	clrf	(btemp+6)^0,c
 42309  01674C  6A31               	clrf	(btemp+7)^0,c
 42310                           
 42311                           ;stkvar	_prod @ sp[(-13)+0]
 42312  01674E  0EF3               	movlw	-13
 42313  016750  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 42314  016756  0EF4               	movlw	-12
 42315  016758  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 42316  01675E  0EF5               	movlw	-11
 42317  016760  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 42318  016766  0EF6               	movlw	-10
 42319  016768  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 42320                           
 42321                           ;stkvar	_b @ sp[(-13)+-4]
 42322  01676E  0EF0               	movlw	240
 42323  016770  24E1               	addwf	fsr1l,w,c
 42324  016772  6ED9               	movwf	fsr2l,c
 42325  016774  0EFF               	movlw	255
 42326  016776  20E2               	addwfc	fsr1h,w,c
 42327  016778  6EDA               	movwf	fsr2h,c
 42328  01677A  50DF               	movf	indf2,w,c
 42329  01677C  6E35               	movwf	(btemp+11)^0,c
 42330                           
 42331                           ;stkvar	_a @ sp[(-13)+-8]
 42332  01677E  0EEC               	movlw	236
 42333  016780  24E1               	addwf	fsr1l,w,c
 42334  016782  6ED9               	movwf	fsr2l,c
 42335  016784  0EFF               	movlw	255
 42336  016786  20E2               	addwfc	fsr1h,w,c
 42337  016788  6EDA               	movwf	fsr2h,c
 42338  01678A  50DF               	movf	indf2,w,c
 42339  01678C  0235               	mulwf	(btemp+11)^0,c
 42340                           
 42341                           ;stkvar	_temp @ sp[(-13)+8]
 42342  01678E  0EFB               	movlw	-5
 42343  016790  006F FFCF FFE3     	movff	prodl,plusw1
 42344  016796  0EFC               	movlw	-4
 42345  016798  006F FFD3 FFE3     	movff	prodh,plusw1
 42346                           
 42347                           ;stkvar	_grs @ sp[(-13)+4]
 42348  01679E  50E1               	movf	fsr1l,w,c
 42349  0167A0  0FF7               	addlw	-9
 42350  0167A2  6ED9               	movwf	fsr2l,c
 42351  0167A4  50E2               	movf	fsr1h,w,c
 42352  0167A6  6EDA               	movwf	fsr2h,c
 42353  0167A8  0EFF               	movlw	255
 42354  0167AA  22DA               	addwfc	fsr2h,f,c
 42355                           
 42356                           ;stkvar	_temp @ sp[(-13)+8]
 42357  0167AC  0EFB               	movlw	-5
 42358  0167AE  50E3               	movf	plusw1,w,c
 42359  0167B0  26DE               	addwf	postinc2,f,c
 42360  0167B2  0E00               	movlw	0
 42361  0167B4  22DE               	addwfc	postinc2,f,c
 42362  0167B6  22DE               	addwfc	postinc2,f,c
 42363  0167B8  22DE               	addwfc	postinc2,f,c
 42364                           
 42365                           ;stkvar	_prod @ sp[(-13)+0]
 42366  0167BA  50E1               	movf	fsr1l,w,c
 42367  0167BC  0FF3               	addlw	-13
 42368  0167BE  6ED9               	movwf	fsr2l,c
 42369  0167C0  50E2               	movf	fsr1h,w,c
 42370  0167C2  6EDA               	movwf	fsr2h,c
 42371  0167C4  0EFF               	movlw	255
 42372  0167C6  22DA               	addwfc	fsr2h,f,c
 42373                           
 42374                           ;stkvar	_temp @ sp[(-13)+8]
 42375  0167C8  0EFC               	movlw	252
 42376  0167CA  24E1               	addwf	fsr1l,w,c
 42377  0167CC  6EE9               	movwf	fsr0l,c
 42378  0167CE  0EFF               	movlw	255
 42379  0167D0  20E2               	addwfc	fsr1h,w,c
 42380  0167D2  6EEA               	movwf	fsr0h,c
 42381  0167D4  50EF               	movf	indf0,w,c
 42382  0167D6  26DE               	addwf	postinc2,f,c
 42383  0167D8  0E00               	movlw	0
 42384  0167DA  22DE               	addwfc	postinc2,f,c
 42385  0167DC  22DE               	addwfc	postinc2,f,c
 42386  0167DE  22DE               	addwfc	postinc2,f,c
 42387                           
 42388                           ;stkvar	_b @ sp[(-13)+-4]
 42389  0167E0  0EF1               	movlw	241
 42390  0167E2  24E1               	addwf	fsr1l,w,c
 42391  0167E4  6ED9               	movwf	fsr2l,c
 42392  0167E6  0EFF               	movlw	255
 42393  0167E8  20E2               	addwfc	fsr1h,w,c
 42394  0167EA  6EDA               	movwf	fsr2h,c
 42395  0167EC  50DF               	movf	indf2,w,c
 42396  0167EE  6E35               	movwf	(btemp+11)^0,c
 42397                           
 42398                           ;stkvar	_a @ sp[(-13)+-8]
 42399  0167F0  0EEB               	movlw	-21
 42400  0167F2  50E3               	movf	plusw1,w,c
 42401  0167F4  0235               	mulwf	(btemp+11)^0,c
 42402                           
 42403                           ;stkvar	_temp @ sp[(-13)+8]
 42404  0167F6  0EFB               	movlw	-5
 42405  0167F8  006F FFCF FFE3     	movff	prodl,plusw1
 42406  0167FE  0EFC               	movlw	-4
 42407  016800  006F FFD3 FFE3     	movff	prodh,plusw1
 42408                           
 42409                           ;stkvar	_grs @ sp[(-13)+4]
 42410  016806  50E1               	movf	fsr1l,w,c
 42411  016808  0FF7               	addlw	-9
 42412  01680A  6ED9               	movwf	fsr2l,c
 42413  01680C  50E2               	movf	fsr1h,w,c
 42414  01680E  6EDA               	movwf	fsr2h,c
 42415  016810  0EFF               	movlw	255
 42416  016812  22DA               	addwfc	fsr2h,f,c
 42417                           
 42418                           ;stkvar	_temp @ sp[(-13)+8]
 42419  016814  0EFB               	movlw	-5
 42420  016816  50E3               	movf	plusw1,w,c
 42421  016818  26DE               	addwf	postinc2,f,c
 42422  01681A  0E00               	movlw	0
 42423  01681C  22DE               	addwfc	postinc2,f,c
 42424  01681E  22DE               	addwfc	postinc2,f,c
 42425  016820  22DE               	addwfc	postinc2,f,c
 42426                           
 42427                           ;stkvar	_prod @ sp[(-13)+0]
 42428  016822  50E1               	movf	fsr1l,w,c
 42429  016824  0FF3               	addlw	-13
 42430  016826  6ED9               	movwf	fsr2l,c
 42431  016828  50E2               	movf	fsr1h,w,c
 42432  01682A  6EDA               	movwf	fsr2h,c
 42433  01682C  0EFF               	movlw	255
 42434  01682E  22DA               	addwfc	fsr2h,f,c
 42435                           
 42436                           ;stkvar	_temp @ sp[(-13)+8]
 42437  016830  0EFC               	movlw	252
 42438  016832  24E1               	addwf	fsr1l,w,c
 42439  016834  6EE9               	movwf	fsr0l,c
 42440  016836  0EFF               	movlw	255
 42441  016838  20E2               	addwfc	fsr1h,w,c
 42442  01683A  6EEA               	movwf	fsr0h,c
 42443  01683C  50EF               	movf	indf0,w,c
 42444  01683E  26DE               	addwf	postinc2,f,c
 42445  016840  0E00               	movlw	0
 42446  016842  22DE               	addwfc	postinc2,f,c
 42447  016844  22DE               	addwfc	postinc2,f,c
 42448  016846  22DE               	addwfc	postinc2,f,c
 42449                           
 42450                           ;stkvar	_grs @ sp[(-13)+4]
 42451  016848  50E1               	movf	fsr1l,w,c
 42452  01684A  0FF7               	addlw	-9
 42453  01684C  6ED9               	movwf	fsr2l,c
 42454  01684E  50E2               	movf	fsr1h,w,c
 42455  016850  6EDA               	movwf	fsr2h,c
 42456  016852  0EFF               	movlw	255
 42457  016854  22DA               	addwfc	fsr2h,f,c
 42458  016856  0E08               	movlw	8
 42459  016858                     u8635:
 42460  016858  90D8               	bcf	status,0,c
 42461  01685A  36DE               	rlcf	postinc2,f,c
 42462  01685C  36DE               	rlcf	postinc2,f,c
 42463  01685E  36DE               	rlcf	postinc2,f,c
 42464  016860  36DD               	rlcf	postdec2,f,c
 42465  016862  52DD               	movf	postdec2,f,c
 42466  016864  52DD               	movf	postdec2,f,c
 42467  016866  2EE8               	decfsz	wreg,f,c
 42468  016868  D7F7               	goto	u8635
 42469                           
 42470                           ;stkvar	_b @ sp[(-13)+-4]
 42471  01686A  0EF0               	movlw	240
 42472  01686C  24E1               	addwf	fsr1l,w,c
 42473  01686E  6ED9               	movwf	fsr2l,c
 42474  016870  0EFF               	movlw	255
 42475  016872  20E2               	addwfc	fsr1h,w,c
 42476  016874  6EDA               	movwf	fsr2h,c
 42477  016876  50DF               	movf	indf2,w,c
 42478  016878  6E35               	movwf	(btemp+11)^0,c
 42479                           
 42480                           ;stkvar	_a @ sp[(-13)+-8]
 42481  01687A  0EEB               	movlw	-21
 42482  01687C  50E3               	movf	plusw1,w,c
 42483  01687E  0235               	mulwf	(btemp+11)^0,c
 42484                           
 42485                           ;stkvar	_temp @ sp[(-13)+8]
 42486  016880  0EFB               	movlw	-5
 42487  016882  006F FFCF FFE3     	movff	prodl,plusw1
 42488  016888  0EFC               	movlw	-4
 42489  01688A  006F FFD3 FFE3     	movff	prodh,plusw1
 42490                           
 42491                           ;stkvar	_temp @ sp[(-13)+8]
 42492  016890  0EFB               	movlw	-5
 42493  016892  006F FF8C  F034    	movff	plusw1,btemp+10
 42494  016898  0EFC               	movlw	-4
 42495  01689A  006F FF8C  F035    	movff	plusw1,btemp+11
 42496                           
 42497                           ;stkvar	_grs @ sp[(-13)+4]
 42498  0168A0  50E1               	movf	fsr1l,w,c
 42499  0168A2  0FF7               	addlw	-9
 42500  0168A4  6ED9               	movwf	fsr2l,c
 42501  0168A6  50E2               	movf	fsr1h,w,c
 42502  0168A8  6EDA               	movwf	fsr2h,c
 42503  0168AA  0EFF               	movlw	255
 42504  0168AC  22DA               	addwfc	fsr2h,f,c
 42505  0168AE  5034               	movf	(btemp+10)^0,w,c
 42506  0168B0  26DE               	addwf	postinc2,f,c
 42507  0168B2  5035               	movf	(btemp+11)^0,w,c
 42508  0168B4  22DE               	addwfc	postinc2,f,c
 42509  0168B6  0E00               	movlw	0
 42510  0168B8  22DE               	addwfc	postinc2,f,c
 42511  0168BA  22DE               	addwfc	postinc2,f,c
 42512                           
 42513                           ;stkvar	_b @ sp[(-13)+-4]
 42514  0168BC  0EEF               	movlw	-17
 42515  0168BE  006F FF8C  F035    	movff	plusw1,btemp+11
 42516                           
 42517                           ;stkvar	_a @ sp[(-13)+-8]
 42518  0168C4  0EEC               	movlw	236
 42519  0168C6  24E1               	addwf	fsr1l,w,c
 42520  0168C8  6ED9               	movwf	fsr2l,c
 42521  0168CA  0EFF               	movlw	255
 42522  0168CC  20E2               	addwfc	fsr1h,w,c
 42523  0168CE  6EDA               	movwf	fsr2h,c
 42524  0168D0  50DF               	movf	indf2,w,c
 42525  0168D2  0235               	mulwf	(btemp+11)^0,c
 42526                           
 42527                           ;stkvar	_temp @ sp[(-13)+8]
 42528  0168D4  0EFB               	movlw	-5
 42529  0168D6  006F FFCF FFE3     	movff	prodl,plusw1
 42530  0168DC  0EFC               	movlw	-4
 42531  0168DE  006F FFD3 FFE3     	movff	prodh,plusw1
 42532                           
 42533                           ;stkvar	_temp @ sp[(-13)+8]
 42534  0168E4  0EFB               	movlw	-5
 42535  0168E6  006F FF8C  F034    	movff	plusw1,btemp+10
 42536  0168EC  0EFC               	movlw	-4
 42537  0168EE  006F FF8C  F035    	movff	plusw1,btemp+11
 42538                           
 42539                           ;stkvar	_grs @ sp[(-13)+4]
 42540  0168F4  50E1               	movf	fsr1l,w,c
 42541  0168F6  0FF7               	addlw	-9
 42542  0168F8  6ED9               	movwf	fsr2l,c
 42543  0168FA  50E2               	movf	fsr1h,w,c
 42544  0168FC  6EDA               	movwf	fsr2h,c
 42545  0168FE  0EFF               	movlw	255
 42546  016900  22DA               	addwfc	fsr2h,f,c
 42547  016902  5034               	movf	(btemp+10)^0,w,c
 42548  016904  26DE               	addwf	postinc2,f,c
 42549  016906  5035               	movf	(btemp+11)^0,w,c
 42550  016908  22DE               	addwfc	postinc2,f,c
 42551  01690A  0E00               	movlw	0
 42552  01690C  22DE               	addwfc	postinc2,f,c
 42553  01690E  22DE               	addwfc	postinc2,f,c
 42554                           
 42555                           ;stkvar	_grs @ sp[(-13)+4]
 42556  016910  50E1               	movf	fsr1l,w,c
 42557  016912  0FF7               	addlw	-9
 42558  016914  6ED9               	movwf	fsr2l,c
 42559  016916  50E2               	movf	fsr1h,w,c
 42560  016918  6EDA               	movwf	fsr2h,c
 42561  01691A  0EFF               	movlw	255
 42562  01691C  22DA               	addwfc	fsr2h,f,c
 42563  01691E  0E08               	movlw	8
 42564  016920                     u8645:
 42565  016920  90D8               	bcf	status,0,c
 42566  016922  36DE               	rlcf	postinc2,f,c
 42567  016924  36DE               	rlcf	postinc2,f,c
 42568  016926  36DE               	rlcf	postinc2,f,c
 42569  016928  36DD               	rlcf	postdec2,f,c
 42570  01692A  52DD               	movf	postdec2,f,c
 42571  01692C  52DD               	movf	postdec2,f,c
 42572  01692E  2EE8               	decfsz	wreg,f,c
 42573  016930  D7F7               	goto	u8645
 42574                           
 42575                           ;stkvar	_b @ sp[(-13)+-4]
 42576  016932  0EEF               	movlw	-17
 42577  016934  006F FF8C  F035    	movff	plusw1,btemp+11
 42578                           
 42579                           ;stkvar	_a @ sp[(-13)+-8]
 42580  01693A  0EEB               	movlw	-21
 42581  01693C  50E3               	movf	plusw1,w,c
 42582  01693E  0235               	mulwf	(btemp+11)^0,c
 42583                           
 42584                           ;stkvar	_temp @ sp[(-13)+8]
 42585  016940  0EFB               	movlw	-5
 42586  016942  006F FFCF FFE3     	movff	prodl,plusw1
 42587  016948  0EFC               	movlw	-4
 42588  01694A  006F FFD3 FFE3     	movff	prodh,plusw1
 42589                           
 42590                           ;stkvar	_temp @ sp[(-13)+8]
 42591  016950  0EFB               	movlw	-5
 42592  016952  006F FF8C  F034    	movff	plusw1,btemp+10
 42593  016958  0EFC               	movlw	-4
 42594  01695A  006F FF8C  F035    	movff	plusw1,btemp+11
 42595                           
 42596                           ;stkvar	_grs @ sp[(-13)+4]
 42597  016960  50E1               	movf	fsr1l,w,c
 42598  016962  0FF7               	addlw	-9
 42599  016964  6ED9               	movwf	fsr2l,c
 42600  016966  50E2               	movf	fsr1h,w,c
 42601  016968  6EDA               	movwf	fsr2h,c
 42602  01696A  0EFF               	movlw	255
 42603  01696C  22DA               	addwfc	fsr2h,f,c
 42604  01696E  5034               	movf	(btemp+10)^0,w,c
 42605  016970  26DE               	addwf	postinc2,f,c
 42606  016972  5035               	movf	(btemp+11)^0,w,c
 42607  016974  22DE               	addwfc	postinc2,f,c
 42608  016976  0E00               	movlw	0
 42609  016978  22DE               	addwfc	postinc2,f,c
 42610  01697A  22DE               	addwfc	postinc2,f,c
 42611                           
 42612                           ;stkvar	_b @ sp[(-13)+-4]
 42613  01697C  0EF0               	movlw	240
 42614  01697E  24E1               	addwf	fsr1l,w,c
 42615  016980  6ED9               	movwf	fsr2l,c
 42616  016982  0EFF               	movlw	255
 42617  016984  20E2               	addwfc	fsr1h,w,c
 42618  016986  6EDA               	movwf	fsr2h,c
 42619  016988  50DF               	movf	indf2,w,c
 42620  01698A  6E35               	movwf	(btemp+11)^0,c
 42621                           
 42622                           ;stkvar	_a @ sp[(-13)+-8]
 42623  01698C  0EED               	movlw	237
 42624  01698E  24E1               	addwf	fsr1l,w,c
 42625  016990  6ED9               	movwf	fsr2l,c
 42626  016992  0EFF               	movlw	255
 42627  016994  20E2               	addwfc	fsr1h,w,c
 42628  016996  6EDA               	movwf	fsr2h,c
 42629  016998  50DF               	movf	indf2,w,c
 42630  01699A  0235               	mulwf	(btemp+11)^0,c
 42631                           
 42632                           ;stkvar	_temp @ sp[(-13)+8]
 42633  01699C  0EFB               	movlw	-5
 42634  01699E  006F FFCF FFE3     	movff	prodl,plusw1
 42635  0169A4  0EFC               	movlw	-4
 42636  0169A6  006F FFD3 FFE3     	movff	prodh,plusw1
 42637                           
 42638                           ;stkvar	_temp @ sp[(-13)+8]
 42639  0169AC  0EFB               	movlw	-5
 42640  0169AE  006F FF8C  F034    	movff	plusw1,btemp+10
 42641  0169B4  0EFC               	movlw	-4
 42642  0169B6  006F FF8C  F035    	movff	plusw1,btemp+11
 42643                           
 42644                           ;stkvar	_prod @ sp[(-13)+0]
 42645  0169BC  50E1               	movf	fsr1l,w,c
 42646  0169BE  0FF3               	addlw	-13
 42647  0169C0  6ED9               	movwf	fsr2l,c
 42648  0169C2  50E2               	movf	fsr1h,w,c
 42649  0169C4  6EDA               	movwf	fsr2h,c
 42650  0169C6  0EFF               	movlw	255
 42651  0169C8  22DA               	addwfc	fsr2h,f,c
 42652  0169CA  5034               	movf	(btemp+10)^0,w,c
 42653  0169CC  26DE               	addwf	postinc2,f,c
 42654  0169CE  5035               	movf	(btemp+11)^0,w,c
 42655  0169D0  22DE               	addwfc	postinc2,f,c
 42656  0169D2  0E00               	movlw	0
 42657  0169D4  22DE               	addwfc	postinc2,f,c
 42658  0169D6  22DE               	addwfc	postinc2,f,c
 42659                           
 42660                           ;stkvar	_b @ sp[(-13)+-4]
 42661  0169D8  0EF1               	movlw	241
 42662  0169DA  24E1               	addwf	fsr1l,w,c
 42663  0169DC  6ED9               	movwf	fsr2l,c
 42664  0169DE  0EFF               	movlw	255
 42665  0169E0  20E2               	addwfc	fsr1h,w,c
 42666  0169E2  6EDA               	movwf	fsr2h,c
 42667  0169E4  50DF               	movf	indf2,w,c
 42668  0169E6  6E35               	movwf	(btemp+11)^0,c
 42669                           
 42670                           ;stkvar	_a @ sp[(-13)+-8]
 42671  0169E8  0EEC               	movlw	236
 42672  0169EA  24E1               	addwf	fsr1l,w,c
 42673  0169EC  6ED9               	movwf	fsr2l,c
 42674  0169EE  0EFF               	movlw	255
 42675  0169F0  20E2               	addwfc	fsr1h,w,c
 42676  0169F2  6EDA               	movwf	fsr2h,c
 42677  0169F4  50DF               	movf	indf2,w,c
 42678  0169F6  0235               	mulwf	(btemp+11)^0,c
 42679                           
 42680                           ;stkvar	_temp @ sp[(-13)+8]
 42681  0169F8  0EFB               	movlw	-5
 42682  0169FA  006F FFCF FFE3     	movff	prodl,plusw1
 42683  016A00  0EFC               	movlw	-4
 42684  016A02  006F FFD3 FFE3     	movff	prodh,plusw1
 42685                           
 42686                           ;stkvar	_temp @ sp[(-13)+8]
 42687  016A08  0EFB               	movlw	-5
 42688  016A0A  006F FF8C  F034    	movff	plusw1,btemp+10
 42689  016A10  0EFC               	movlw	-4
 42690  016A12  006F FF8C  F035    	movff	plusw1,btemp+11
 42691                           
 42692                           ;stkvar	_prod @ sp[(-13)+0]
 42693  016A18  50E1               	movf	fsr1l,w,c
 42694  016A1A  0FF3               	addlw	-13
 42695  016A1C  6ED9               	movwf	fsr2l,c
 42696  016A1E  50E2               	movf	fsr1h,w,c
 42697  016A20  6EDA               	movwf	fsr2h,c
 42698  016A22  0EFF               	movlw	255
 42699  016A24  22DA               	addwfc	fsr2h,f,c
 42700  016A26  5034               	movf	(btemp+10)^0,w,c
 42701  016A28  26DE               	addwf	postinc2,f,c
 42702  016A2A  5035               	movf	(btemp+11)^0,w,c
 42703  016A2C  22DE               	addwfc	postinc2,f,c
 42704  016A2E  0E00               	movlw	0
 42705  016A30  22DE               	addwfc	postinc2,f,c
 42706  016A32  22DE               	addwfc	postinc2,f,c
 42707                           
 42708                           ;stkvar	_b @ sp[(-13)+-4]
 42709  016A34  0EF1               	movlw	241
 42710  016A36  24E1               	addwf	fsr1l,w,c
 42711  016A38  6ED9               	movwf	fsr2l,c
 42712  016A3A  0EFF               	movlw	255
 42713  016A3C  20E2               	addwfc	fsr1h,w,c
 42714  016A3E  6EDA               	movwf	fsr2h,c
 42715  016A40  50DF               	movf	indf2,w,c
 42716  016A42  6E35               	movwf	(btemp+11)^0,c
 42717                           
 42718                           ;stkvar	_a @ sp[(-13)+-8]
 42719  016A44  0EED               	movlw	237
 42720  016A46  24E1               	addwf	fsr1l,w,c
 42721  016A48  6ED9               	movwf	fsr2l,c
 42722  016A4A  0EFF               	movlw	255
 42723  016A4C  20E2               	addwfc	fsr1h,w,c
 42724  016A4E  6EDA               	movwf	fsr2h,c
 42725  016A50  50DF               	movf	indf2,w,c
 42726  016A52  0235               	mulwf	(btemp+11)^0,c
 42727                           
 42728                           ;stkvar	_temp @ sp[(-13)+8]
 42729  016A54  0EFB               	movlw	-5
 42730  016A56  006F FFCF FFE3     	movff	prodl,plusw1
 42731  016A5C  0EFC               	movlw	-4
 42732  016A5E  006F FFD3 FFE3     	movff	prodh,plusw1
 42733                           
 42734                           ;stkvar	_temp @ sp[(-13)+8]
 42735  016A64  0EFB               	movlw	-5
 42736  016A66  006F FF8C  F034    	movff	plusw1,btemp+10
 42737  016A6C  0EFC               	movlw	-4
 42738  016A6E  006F FF8C  F035    	movff	plusw1,btemp+11
 42739  016A74  5034               	movf	(btemp+10)^0,w,c
 42740  016A76  6E2E               	movwf	(btemp+4)^0,c
 42741  016A78  5035               	movf	(btemp+11)^0,w,c
 42742  016A7A  6E2F               	movwf	(btemp+5)^0,c
 42743  016A7C  6A30               	clrf	(btemp+6)^0,c
 42744  016A7E  6A31               	clrf	(btemp+7)^0,c
 42745  016A80  0060  F0C0  F031   	movff	btemp+6,btemp+7
 42746  016A86  0060  F0BC  F030   	movff	btemp+5,btemp+6
 42747  016A8C  0060  F0B8  F02F   	movff	btemp+4,btemp+5
 42748  016A92  6A2E               	clrf	(btemp+4)^0,c
 42749                           
 42750                           ;stkvar	_prod @ sp[(-13)+0]
 42751  016A94  50E1               	movf	fsr1l,w,c
 42752  016A96  0FF3               	addlw	-13
 42753  016A98  6ED9               	movwf	fsr2l,c
 42754  016A9A  50E2               	movf	fsr1h,w,c
 42755  016A9C  6EDA               	movwf	fsr2h,c
 42756  016A9E  0EFF               	movlw	255
 42757  016AA0  22DA               	addwfc	fsr2h,f,c
 42758  016AA2  502E               	movf	(btemp+4)^0,w,c
 42759  016AA4  26DE               	addwf	postinc2,f,c
 42760  016AA6  502F               	movf	(btemp+5)^0,w,c
 42761  016AA8  22DE               	addwfc	postinc2,f,c
 42762  016AAA  5030               	movf	(btemp+6)^0,w,c
 42763  016AAC  22DE               	addwfc	postinc2,f,c
 42764  016AAE  5031               	movf	(btemp+7)^0,w,c
 42765  016AB0  22DE               	addwfc	postinc2,f,c
 42766                           
 42767                           ;stkvar	_prod @ sp[(-13)+0]
 42768  016AB2  50E1               	movf	fsr1l,w,c
 42769  016AB4  0FF3               	addlw	-13
 42770  016AB6  6ED9               	movwf	fsr2l,c
 42771  016AB8  50E2               	movf	fsr1h,w,c
 42772  016ABA  6EDA               	movwf	fsr2h,c
 42773  016ABC  0EFF               	movlw	255
 42774  016ABE  22DA               	addwfc	fsr2h,f,c
 42775                           
 42776                           ;stkvar	_grs @ sp[(-13)+4]
 42777  016AC0  0EFA               	movlw	250
 42778  016AC2  24E1               	addwf	fsr1l,w,c
 42779  016AC4  6EE9               	movwf	fsr0l,c
 42780  016AC6  0EFF               	movlw	255
 42781  016AC8  20E2               	addwfc	fsr1h,w,c
 42782  016ACA  6EEA               	movwf	fsr0h,c
 42783  016ACC  50EF               	movf	indf0,w,c
 42784  016ACE  26DE               	addwf	postinc2,f,c
 42785  016AD0  0E00               	movlw	0
 42786  016AD2  22DE               	addwfc	postinc2,f,c
 42787  016AD4  22DE               	addwfc	postinc2,f,c
 42788  016AD6  22DE               	addwfc	postinc2,f,c
 42789                           
 42790                           ;stkvar	_grs @ sp[(-13)+4]
 42791  016AD8  50E1               	movf	fsr1l,w,c
 42792  016ADA  0FF7               	addlw	-9
 42793  016ADC  6ED9               	movwf	fsr2l,c
 42794  016ADE  50E2               	movf	fsr1h,w,c
 42795  016AE0  6EDA               	movwf	fsr2h,c
 42796  016AE2  0EFF               	movlw	255
 42797  016AE4  22DA               	addwfc	fsr2h,f,c
 42798  016AE6  0E08               	movlw	8
 42799  016AE8                     u8655:
 42800  016AE8  90D8               	bcf	status,0,c
 42801  016AEA  36DE               	rlcf	postinc2,f,c
 42802  016AEC  36DE               	rlcf	postinc2,f,c
 42803  016AEE  36DE               	rlcf	postinc2,f,c
 42804  016AF0  36DD               	rlcf	postdec2,f,c
 42805  016AF2  52DD               	movf	postdec2,f,c
 42806  016AF4  52DD               	movf	postdec2,f,c
 42807  016AF6  2EE8               	decfsz	wreg,f,c
 42808  016AF8  D7F7               	goto	u8655
 42809  016AFA  0E82               	movlw	130
 42810  016AFC  6E34               	movwf	(btemp+10)^0,c
 42811  016AFE  0EFF               	movlw	255
 42812  016B00  6E35               	movwf	(btemp+11)^0,c
 42813                           
 42814                           ;stkvar	_bexp @ sp[(-13)+10]
 42815  016B02  0EFD               	movlw	-3
 42816  016B04  50E3               	movf	plusw1,w,c
 42817  016B06  6E32               	movwf	(btemp+8)^0,c
 42818  016B08  6A33               	clrf	(btemp+9)^0,c
 42819                           
 42820                           ;stkvar	_aexp @ sp[(-13)+11]
 42821  016B0A  0EFE               	movlw	-2
 42822  016B0C  50E3               	movf	plusw1,w,c
 42823  016B0E  2632               	addwf	(btemp+8)^0,f,c
 42824  016B10  0E00               	movlw	0
 42825  016B12  2233               	addwfc	(btemp+9)^0,f,c
 42826  016B14  5034               	movf	(btemp+10)^0,w,c
 42827  016B16  2632               	addwf	(btemp+8)^0,f,c
 42828  016B18  5035               	movf	(btemp+11)^0,w,c
 42829  016B1A  2233               	addwfc	(btemp+9)^0,f,c
 42830                           
 42831                           ;stkvar	_temp @ sp[(-13)+8]
 42832  016B1C  0EFB               	movlw	-5
 42833  016B1E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 42834  016B24  0EFC               	movlw	-4
 42835  016B26  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 42836  016B2C  D021               	goto	l10538
 42837  016B2E                     l10528:
 42838                           
 42839                           ;stkvar	_prod @ sp[(-13)+0]
 42840  016B2E  90D8               	bcf	status,0,c
 42841  016B30  0EF3               	movlw	-13
 42842  016B32  36E3               	rlcf	plusw1,f,c
 42843  016B34  0EF4               	movlw	-12
 42844  016B36  36E3               	rlcf	plusw1,f,c
 42845  016B38  0EF5               	movlw	-11
 42846  016B3A  36E3               	rlcf	plusw1,f,c
 42847  016B3C  0EF6               	movlw	-10
 42848  016B3E  36E3               	rlcf	plusw1,f,c
 42849                           
 42850                           ;stkvar	_grs @ sp[(-13)+4]
 42851  016B40  0EFA               	movlw	-6
 42852  016B42  AEE3               	btfss	plusw1,7,c
 42853  016B44  D002               	goto	l10534
 42854                           
 42855                           ;stkvar	_prod @ sp[(-13)+0]
 42856  016B46  0EF3               	movlw	-13
 42857  016B48  80E3               	bsf	plusw1,0,c
 42858  016B4A                     l10534:
 42859                           
 42860                           ;stkvar	_grs @ sp[(-13)+4]
 42861  016B4A  90D8               	bcf	status,0,c
 42862  016B4C  0EF7               	movlw	-9
 42863  016B4E  36E3               	rlcf	plusw1,f,c
 42864  016B50  0EF8               	movlw	-8
 42865  016B52  36E3               	rlcf	plusw1,f,c
 42866  016B54  0EF9               	movlw	-7
 42867  016B56  36E3               	rlcf	plusw1,f,c
 42868  016B58  0EFA               	movlw	-6
 42869  016B5A  36E3               	rlcf	plusw1,f,c
 42870                           
 42871                           ;stkvar	_temp @ sp[(-13)+8]
 42872  016B5C  50E1               	movf	fsr1l,w,c
 42873  016B5E  0FFB               	addlw	-5
 42874  016B60  6ED9               	movwf	fsr2l,c
 42875  016B62  50E2               	movf	fsr1h,w,c
 42876  016B64  6EDA               	movwf	fsr2h,c
 42877  016B66  0EFF               	movlw	255
 42878  016B68  22DA               	addwfc	fsr2h,f,c
 42879  016B6A  06DE               	decf	postinc2,f,c
 42880  016B6C  0E00               	movlw	0
 42881  016B6E  5ADD               	subwfb	postdec2,f,c
 42882  016B70                     l10538:
 42883                           
 42884                           ;stkvar	_prod @ sp[(-13)+0]
 42885  016B70  0EF5               	movlw	-11
 42886  016B72  AEE3               	btfss	plusw1,7,c
 42887  016B74  D7DC               	goto	l10528
 42888                           
 42889                           ;stkvar	_aexp @ sp[(-13)+11]
 42890  016B76  0EFE               	movlw	-2
 42891  016B78  6AE3               	clrf	plusw1,c
 42892                           
 42893                           ;stkvar	_grs @ sp[(-13)+4]
 42894  016B7A  0EFA               	movlw	-6
 42895  016B7C  AEE3               	btfss	plusw1,7,c
 42896  016B7E  D020               	goto	l10552
 42897                           
 42898                           ;stkvar	_grs @ sp[(-13)+4]
 42899  016B80  50E1               	movf	fsr1l,w,c
 42900  016B82  0FF7               	addlw	-9
 42901  016B84  6ED9               	movwf	fsr2l,c
 42902  016B86  50E2               	movf	fsr1h,w,c
 42903  016B88  6EDA               	movwf	fsr2h,c
 42904  016B8A  0EFF               	movlw	255
 42905  016B8C  22DA               	addwfc	fsr2h,f,c
 42906  016B8E  0EFF               	movlw	255
 42907  016B90  14DE               	andwf	postinc2,w,c
 42908  016B92  6E32               	movwf	(btemp+8)^0,c
 42909  016B94  0EFF               	movlw	255
 42910  016B96  14DE               	andwf	postinc2,w,c
 42911  016B98  6E33               	movwf	(btemp+9)^0,c
 42912  016B9A  0EFF               	movlw	255
 42913  016B9C  14DE               	andwf	postinc2,w,c
 42914  016B9E  6E34               	movwf	(btemp+10)^0,c
 42915  016BA0  0E7F               	movlw	127
 42916  016BA2  14DE               	andwf	postinc2,w,c
 42917  016BA4  6E35               	movwf	(btemp+11)^0,c
 42918  016BA6  5032               	movf	(btemp+8)^0,w,c
 42919  016BA8  1033               	iorwf	(btemp+9)^0,w,c
 42920  016BAA  1034               	iorwf	(btemp+10)^0,w,c
 42921  016BAC  1035               	iorwf	(btemp+11)^0,w,c
 42922  016BAE  B4D8               	btfsc	status,2,c
 42923  016BB0  D004               	goto	l10548
 42924  016BB2                     u8690:
 42925                           
 42926                           ;stkvar	_aexp @ sp[(-13)+11]
 42927  016BB2  0EFE               	movlw	-2
 42928  016BB4  6AE3               	clrf	plusw1,c
 42929  016BB6  2AE3               	incf	plusw1,f,c
 42930  016BB8  D003               	goto	l10552
 42931  016BBA                     l10548:
 42932                           
 42933                           ;stkvar	_prod @ sp[(-13)+0]
 42934  016BBA  0EF3               	movlw	-13
 42935  016BBC  B0E3               	btfsc	plusw1,0,c
 42936  016BBE  D7F9               	goto	u8690
 42937  016BC0                     l10552:
 42938                           
 42939                           ;stkvar	_aexp @ sp[(-13)+11]
 42940  016BC0  0EFE               	movlw	-2
 42941  016BC2  50E3               	movf	plusw1,w,c
 42942  016BC4  B4D8               	btfsc	status,2,c
 42943  016BC6  D036               	goto	l10562
 42944                           
 42945                           ;stkvar	_prod @ sp[(-13)+0]
 42946  016BC8  50E1               	movf	fsr1l,w,c
 42947  016BCA  0FF3               	addlw	-13
 42948  016BCC  6ED9               	movwf	fsr2l,c
 42949  016BCE  50E2               	movf	fsr1h,w,c
 42950  016BD0  6EDA               	movwf	fsr2h,c
 42951  016BD2  0EFF               	movlw	255
 42952  016BD4  22DA               	addwfc	fsr2h,f,c
 42953  016BD6  2ADE               	incf	postinc2,f,c
 42954  016BD8  0E00               	movlw	0
 42955  016BDA  22DE               	addwfc	postinc2,f,c
 42956  016BDC  22DE               	addwfc	postinc2,f,c
 42957  016BDE  22DE               	addwfc	postinc2,f,c
 42958                           
 42959                           ;stkvar	_prod @ sp[(-13)+0]
 42960  016BE0  0EF6               	movlw	-10
 42961  016BE2  A0E3               	btfss	plusw1,0,c
 42962  016BE4  D027               	goto	l10562
 42963  016BE6  0E01               	movlw	1
 42964  016BE8  6E35               	movwf	(btemp+11)^0,c
 42965                           
 42966                           ;stkvar	_prod @ sp[(-13)+0]
 42967  016BEA  50E1               	movf	fsr1l,w,c
 42968  016BEC  0FF3               	addlw	-13
 42969  016BEE  6ED9               	movwf	fsr2l,c
 42970  016BF0  50E2               	movf	fsr1h,w,c
 42971  016BF2  6EDA               	movwf	fsr2h,c
 42972  016BF4  0EFF               	movlw	255
 42973  016BF6  22DA               	addwfc	fsr2h,f,c
 42974  016BF8  2835               	incf	(btemp+11)^0,w,c
 42975  016BFA  52DE               	movf	postinc2,f,c
 42976  016BFC  D008               	goto	u8730
 42977  016BFE                     u8735:
 42978  016BFE  52DE               	movf	postinc2,f,c
 42979  016C00  90D8               	bcf	status,0,c
 42980  016C02  BEDC               	btfsc	preinc2,7,c
 42981  016C04  80D8               	bsf	status,0,c
 42982  016C06  32DD               	rrcf	postdec2,f,c
 42983  016C08  32DD               	rrcf	postdec2,f,c
 42984  016C0A  32DD               	rrcf	postdec2,f,c
 42985  016C0C  32DE               	rrcf	postinc2,f,c
 42986  016C0E                     u8730:
 42987  016C0E  2EE8               	decfsz	wreg,f,c
 42988  016C10  D7F6               	goto	u8735
 42989                           
 42990                           ;stkvar	_temp @ sp[(-13)+8]
 42991  016C12  0EFB               	movlw	-5
 42992  016C14  50E3               	movf	plusw1,w,c
 42993  016C16  0F01               	addlw	1
 42994  016C18  6E2A               	movwf	btemp^0,c
 42995  016C1A  0EFB               	movlw	-5
 42996  016C1C  0060  F0AB  FFE3   	movff	btemp,plusw1
 42997  016C22  6A2A               	clrf	btemp^0,c
 42998  016C24  0EFC               	movlw	-4
 42999  016C26  50E3               	movf	plusw1,w,c
 43000  016C28  202A               	addwfc	btemp^0,w,c
 43001  016C2A  6E2A               	movwf	btemp^0,c
 43002  016C2C  0EFC               	movlw	-4
 43003  016C2E  0060  F0AB  FFE3   	movff	btemp,plusw1
 43004  016C34                     l10562:
 43005                           
 43006                           ;stkvar	_temp @ sp[(-13)+8]
 43007  016C34  0EFC               	movlw	-4
 43008  016C36  BEE3               	btfsc	plusw1,7,c
 43009  016C38  D020               	goto	l10566
 43010  016C3A  0EFC               	movlw	-4
 43011  016C3C  50E3               	movf	plusw1,w,c
 43012  016C3E  E104               	bnz	u8740
 43013  016C40  0EFB               	movlw	-5
 43014  016C42  28E3               	incf	plusw1,w,c
 43015  016C44  A0D8               	btfss	status,0,c
 43016  016C46  D019               	goto	l10566
 43017  016C48                     u8740:
 43018  016C48  0E00               	movlw	0
 43019  016C4A  6E32               	movwf	(btemp+8)^0,c
 43020  016C4C  0E00               	movlw	0
 43021  016C4E  6E33               	movwf	(btemp+9)^0,c
 43022  016C50  0E80               	movlw	128
 43023  016C52  6E34               	movwf	(btemp+10)^0,c
 43024  016C54  0E7F               	movlw	127
 43025  016C56  6E35               	movwf	(btemp+11)^0,c
 43026                           
 43027                           ;stkvar	_prod @ sp[(-13)+0]
 43028  016C58  0EF3               	movlw	-13
 43029  016C5A  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 43030  016C60  0EF4               	movlw	-12
 43031  016C62  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 43032  016C68  0EF5               	movlw	-11
 43033  016C6A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 43034  016C70  0EF6               	movlw	-10
 43035  016C72  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 43036  016C78  D044               	goto	l10582
 43037  016C7A                     l10566:
 43038                           
 43039                           ;stkvar	_temp @ sp[(-13)+8]
 43040  016C7A  0EFC               	movlw	-4
 43041  016C7C  BEE3               	btfsc	plusw1,7,c
 43042  016C7E  D007               	goto	u8750
 43043  016C80  0EFC               	movlw	-4
 43044  016C82  50E3               	movf	plusw1,w,c
 43045  016C84  E10F               	bnz	l10572
 43046  016C86  0EFB               	movlw	-5
 43047  016C88  04E3               	decf	plusw1,w,c
 43048  016C8A  B0D8               	btfsc	status,0,c
 43049  016C8C  D00B               	goto	l10572
 43050  016C8E                     u8750:
 43051                           
 43052                           ;stkvar	_prod @ sp[(-13)+0]
 43053  016C8E  0EF3               	movlw	-13
 43054  016C90  6AE3               	clrf	plusw1,c
 43055  016C92  0EF4               	movlw	-12
 43056  016C94  6AE3               	clrf	plusw1,c
 43057  016C96  0EF5               	movlw	-11
 43058  016C98  6AE3               	clrf	plusw1,c
 43059  016C9A  0EF6               	movlw	-10
 43060  016C9C  6AE3               	clrf	plusw1,c
 43061                           
 43062                           ;stkvar	_sign @ sp[(-13)+12]
 43063  016C9E  0EFF               	movlw	-1
 43064  016CA0  6AE3               	clrf	plusw1,c
 43065  016CA2  D02F               	goto	l10582
 43066  016CA4                     l10572:
 43067                           
 43068                           ;stkvar	_temp @ sp[(-13)+8]
 43069                           ;stkvar	_bexp @ sp[(-13)+10]
 43070  016CA4  0EFB               	movlw	-5
 43071  016CA6  006F FF8C  F02A    	movff	plusw1,btemp
 43072  016CAC  0EFD               	movlw	-3
 43073  016CAE  0060  F0AB  FFE3   	movff	btemp,plusw1
 43074                           
 43075                           ;stkvar	_prod @ sp[(-13)+0]
 43076  016CB4  50E1               	movf	fsr1l,w,c
 43077  016CB6  0FF3               	addlw	-13
 43078  016CB8  6ED9               	movwf	fsr2l,c
 43079  016CBA  50E2               	movf	fsr1h,w,c
 43080  016CBC  6EDA               	movwf	fsr2h,c
 43081  016CBE  0EFF               	movlw	255
 43082  016CC0  22DA               	addwfc	fsr2h,f,c
 43083  016CC2  0EFF               	movlw	255
 43084  016CC4  16DE               	andwf	postinc2,f,c
 43085  016CC6  0EFF               	movlw	255
 43086  016CC8  16DE               	andwf	postinc2,f,c
 43087  016CCA  0E7F               	movlw	127
 43088  016CCC  16DE               	andwf	postinc2,f,c
 43089  016CCE  0E00               	movlw	0
 43090  016CD0  16DE               	andwf	postinc2,f,c
 43091                           
 43092                           ;stkvar	_bexp @ sp[(-13)+10]
 43093  016CD2  0EFD               	movlw	-3
 43094  016CD4  A0E3               	btfss	plusw1,0,c
 43095  016CD6  D008               	goto	l10580
 43096                           
 43097                           ;stkvar	_prod @ sp[(-13)+0]
 43098  016CD8  0EF5               	movlw	245
 43099  016CDA  24E1               	addwf	fsr1l,w,c
 43100  016CDC  6ED9               	movwf	fsr2l,c
 43101  016CDE  0EFF               	movlw	255
 43102  016CE0  20E2               	addwfc	fsr1h,w,c
 43103  016CE2  6EDA               	movwf	fsr2h,c
 43104  016CE4  0E00               	movlw	0
 43105  016CE6  8EDB               	bsf	plusw2,7,c
 43106  016CE8                     l10580:
 43107                           
 43108                           ;stkvar	_prod @ sp[(-13)+0]
 43109  016CE8  0EF6               	movlw	246
 43110  016CEA  24E1               	addwf	fsr1l,w,c
 43111  016CEC  6ED9               	movwf	fsr2l,c
 43112  016CEE  0EFF               	movlw	255
 43113  016CF0  20E2               	addwfc	fsr1h,w,c
 43114  016CF2  6EDA               	movwf	fsr2h,c
 43115                           
 43116                           ;stkvar	_bexp @ sp[(-13)+10]
 43117  016CF4  0EFD               	movlw	-3
 43118  016CF6  006F FF8C  F035    	movff	plusw1,btemp+11
 43119  016CFC  90D8               	bcf	status,0,c
 43120  016CFE  3035               	rrcf	(btemp+11)^0,w,c
 43121  016D00  6EDF               	movwf	indf2,c
 43122  016D02                     l10582:
 43123                           
 43124                           ;stkvar	_sign @ sp[(-13)+12]
 43125  016D02  0EFF               	movlw	-1
 43126  016D04  006F FF8C  F035    	movff	plusw1,btemp+11
 43127                           
 43128                           ;stkvar	_prod @ sp[(-13)+0]
 43129  016D0A  0EF6               	movlw	246
 43130  016D0C  24E1               	addwf	fsr1l,w,c
 43131  016D0E  6ED9               	movwf	fsr2l,c
 43132  016D10  0EFF               	movlw	255
 43133  016D12  20E2               	addwfc	fsr1h,w,c
 43134  016D14  6EDA               	movwf	fsr2h,c
 43135  016D16  5035               	movf	(btemp+11)^0,w,c
 43136  016D18  12DF               	iorwf	indf2,f,c
 43137                           
 43138                           ;stkvar	_prod @ sp[(-13)+0]
 43139  016D1A  0EF3               	movlw	-13
 43140  016D1C  006F FF8C  F02A    	movff	plusw1,btemp
 43141  016D22  0EF4               	movlw	-12
 43142  016D24  006F FF8C  F02B    	movff	plusw1,btemp+1
 43143  016D2A  0EF5               	movlw	-11
 43144  016D2C  006F FF8C  F02C    	movff	plusw1,btemp+2
 43145  016D32  0EF6               	movlw	-10
 43146  016D34  006F FF8C  F02D    	movff	plusw1,btemp+3
 43147  016D3A                     l3340:
 43148                           
 43149                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 43150  016D3A  0EEB               	movlw	235
 43151  016D3C  26E1               	addwf	fsr1l,f,c
 43152  016D3E  0EFF               	movlw	255
 43153  016D40  22E2               	addwfc	fsr1h,f,c
 43154  016D42  0012               	return		;funcret
 43155  016D44                     __end_of___flmul:
 43156                           	opt callstack 0
 43157                           
 43158 ;; *************** function _SYSTEM_Initialize *****************
 43159 ;; Defined at:
 43160 ;;		line 50 in file "mcc_generated_files/mcc.c"
 43161 ;; Parameters:    Size  Location     Type
 43162 ;;		None
 43163 ;; Auto vars:     Size  Location     Type
 43164 ;;		None
 43165 ;; Return value:  Size  Location     Type
 43166 ;;                  1  [STACK] void 
 43167 ;; Registers used:
 43168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 43169 ;; Tracked objects:
 43170 ;;		On entry : 0/0
 43171 ;;		On exit  : 3F/3C
 43172 ;;		Unchanged: 0/0
 43173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43178 ;;Total ram usage:        0 bytes
 43179 ;; Hardware stack levels used:    1
 43180 ;; Hardware stack levels required when called:   17
 43181 ;; This function calls:
 43182 ;;		_ADCC_Initialize
 43183 ;;		_CLKREF_Initialize
 43184 ;;		_CRC_Initialize
 43185 ;;		_DMA1_Initialize
 43186 ;;		_DMA2_Initialize
 43187 ;;		_EXT_INT_Initialize
 43188 ;;		_FVR_Initialize
 43189 ;;		_INTERRUPT_Initialize
 43190 ;;		_OSCILLATOR_Initialize
 43191 ;;		_PIN_MANAGER_Initialize
 43192 ;;		_PMD_Initialize
 43193 ;;		_PWM8_Initialize
 43194 ;;		_SPI1_Initialize
 43195 ;;		_TMR2_Initialize
 43196 ;;		_TMR3_Initialize
 43197 ;;		_TMR5_Initialize
 43198 ;;		_TMR6_Initialize
 43199 ;;		_UART1_Initialize
 43200 ;;		_UART2_Initialize
 43201 ;; This function is called by:
 43202 ;;		_main
 43203 ;; This function uses a reentrant model
 43204 ;;
 43205                           
 43206                           	psect	text155
 43207  0018B0                     __ptext155:
 43208                           	opt callstack 0
 43209  0018B0                     _SYSTEM_Initialize:
 43210                           	opt callstack 13
 43211                           
 43212                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 43213                           
 43214                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43215                           ;incstack = 0
 43216  0018B0  ECFC  F009         	call	_INTERRUPT_Initialize	;wreg free
 43217                           
 43218                           ; BSR set to: 57
 43219                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 43220  0018B4  EC1F  F013         	call	_PMD_Initialize	;wreg free
 43221                           
 43222                           ; BSR set to: 57
 43223                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 43224  0018B8  EC6C  F006         	call	_PIN_MANAGER_Initialize	;wreg free
 43225                           
 43226                           ; BSR set to: 58
 43227                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 43228  0018BC  EC14  F013         	call	_OSCILLATOR_Initialize	;wreg free
 43229                           
 43230                           ; BSR set to: 57
 43231                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 43232  0018C0  ECBB  F013         	call	_FVR_Initialize	;wreg free
 43233                           
 43234                           ; BSR set to: 62
 43235                           ;mcc_generated_files/mcc.c: 57:     CRC_Initialize();
 43236  0018C4  ECB5  F006         	call	_CRC_Initialize	;wreg free
 43237                           
 43238                           ; BSR set to: 0
 43239                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 43240  0018C8  EC2B  F009         	call	_ADCC_Initialize	;wreg free
 43241                           
 43242                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 43243  0018CC  ECE7  F012         	call	_TMR2_Initialize	;wreg free
 43244                           
 43245                           ; BSR set to: 57
 43246                           ;mcc_generated_files/mcc.c: 60:     PWM8_Initialize();
 43247  0018D0  EC09  F013         	call	_PWM8_Initialize	;wreg free
 43248                           
 43249                           ; BSR set to: 63
 43250                           ;mcc_generated_files/mcc.c: 61:     EXT_INT_Initialize();
 43251  0018D4  EC98  F00F         	call	_EXT_INT_Initialize	;wreg free
 43252                           
 43253                           ; BSR set to: 57
 43254                           ;mcc_generated_files/mcc.c: 62:     TMR6_Initialize();
 43255  0018D8  EC84  F010         	call	_TMR6_Initialize	;wreg free
 43256                           
 43257                           ;mcc_generated_files/mcc.c: 63:     TMR3_Initialize();
 43258  0018DC  EC12  F00D         	call	_TMR3_Initialize	;wreg free
 43259                           
 43260                           ;mcc_generated_files/mcc.c: 64:     TMR5_Initialize();
 43261  0018E0  ECEE  F00C         	call	_TMR5_Initialize	;wreg free
 43262                           
 43263                           ;mcc_generated_files/mcc.c: 65:     UART1_Initialize();
 43264  0018E4  ECCA  F00C         	call	_UART1_Initialize	;wreg free
 43265                           
 43266                           ; BSR set to: 57
 43267                           ;mcc_generated_files/mcc.c: 66:     UART2_Initialize();
 43268  0018E8  ECF5  F00A         	call	_UART2_Initialize	;wreg free
 43269                           
 43270                           ; BSR set to: 57
 43271                           ;mcc_generated_files/mcc.c: 67:     SPI1_Initialize();
 43272  0018EC  ECFE  F012         	call	_SPI1_Initialize	;wreg free
 43273                           
 43274                           ; BSR set to: 61
 43275                           ;mcc_generated_files/mcc.c: 68:     DMA2_Initialize();
 43276  0018F0  ECAE  F00B         	call	_DMA2_Initialize	;wreg free
 43277                           
 43278                           ; BSR set to: 59
 43279                           ;mcc_generated_files/mcc.c: 69:     DMA1_Initialize();
 43280  0018F4  ECF6  F008         	call	_DMA1_Initialize	;wreg free
 43281                           
 43282                           ; BSR set to: 59
 43283                           ;mcc_generated_files/mcc.c: 70:     CLKREF_Initialize();
 43284  0018F8  EC8F  F013         	call	_CLKREF_Initialize	;wreg free
 43285                           
 43286                           ; BSR set to: 60
 43287                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 43288  0018FC  0012               	return		;funcret
 43289  0018FE                     __end_of_SYSTEM_Initialize:
 43290                           	opt callstack 0
 43291                           
 43292 ;; *************** function _UART2_Initialize *****************
 43293 ;; Defined at:
 43294 ;;		line 78 in file "mcc_generated_files/uart2.c"
 43295 ;; Parameters:    Size  Location     Type
 43296 ;;		None
 43297 ;; Auto vars:     Size  Location     Type
 43298 ;;		None
 43299 ;; Return value:  Size  Location     Type
 43300 ;;                  1  [STACK] void 
 43301 ;; Registers used:
 43302 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 43303 ;; Tracked objects:
 43304 ;;		On entry : 3F/39
 43305 ;;		On exit  : 3F/39
 43306 ;;		Unchanged: 0/0
 43307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43312 ;;Total ram usage:        0 bytes
 43313 ;; Hardware stack levels used:    1
 43314 ;; Hardware stack levels required when called:   16
 43315 ;; This function calls:
 43316 ;;		_UART2_SetRxInterruptHandler
 43317 ;;		_UART2_SetTxInterruptHandler
 43318 ;; This function is called by:
 43319 ;;		_SYSTEM_Initialize
 43320 ;; This function uses a reentrant model
 43321 ;;
 43322                           
 43323                           	psect	text156
 43324  0015EA                     __ptext156:
 43325                           	opt callstack 0
 43326  0015EA                     _UART2_Initialize:
 43327                           	opt callstack 13
 43328                           
 43329                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 43330                           
 43331                           ; BSR set to: 60
 43332                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43333                           ;incstack = 0
 43334  0015EA  0139               	movlb	57	; () banked
 43335  0015EC  9596               	bcf	150,2,b	;volatile
 43336                           
 43337                           ; BSR set to: 57
 43338                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 43339  0015EE  0EEA               	movlw	low _UART2_Receive_ISR
 43340  0015F0  6EE6               	movwf	postinc1,c
 43341  0015F2  0E24               	movlw	high _UART2_Receive_ISR
 43342  0015F4  6EE6               	movwf	postinc1,c
 43343  0015F6  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
 43344  0015F8  6EE6               	movwf	postinc1,c
 43345  0015FA  ECD5  F010         	call	_UART2_SetRxInterruptHandler	;wreg free
 43346                           
 43347                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 43348  0015FE  0139               	movlb	57	; () banked
 43349  001600  9796               	bcf	150,3,b	;volatile
 43350                           
 43351                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 43352  001602  0EDC               	movlw	low _UART2_Transmit_ISR
 43353  001604  6EE6               	movwf	postinc1,c
 43354  001606  0E20               	movlw	high _UART2_Transmit_ISR
 43355  001608  6EE6               	movwf	postinc1,c
 43356  00160A  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 43357  00160C  6EE6               	movwf	postinc1,c
 43358  00160E  ECC1  F010         	call	_UART2_SetTxInterruptHandler	;wreg free
 43359                           
 43360                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 43361  001612  013D               	movlb	61	; () banked
 43362  001614  6BD4               	clrf	212,b	;volatile
 43363                           
 43364                           ; BSR set to: 61
 43365                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 43366  001616  6BD6               	clrf	214,b	;volatile
 43367                           
 43368                           ; BSR set to: 61
 43369                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 43370  001618  6BD8               	clrf	216,b	;volatile
 43371                           
 43372                           ; BSR set to: 61
 43373                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 43374  00161A  0EB0               	movlw	176
 43375  00161C  6FDA               	movwf	218,b	;volatile
 43376                           
 43377                           ; BSR set to: 61
 43378                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 43379  00161E  0E80               	movlw	128
 43380  001620  6FDB               	movwf	219,b	;volatile
 43381                           
 43382                           ; BSR set to: 61
 43383                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 43384  001622  6BDC               	clrf	220,b	;volatile
 43385                           
 43386                           ; BSR set to: 61
 43387                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 43388  001624  0E82               	movlw	130
 43389  001626  6FDD               	movwf	221,b	;volatile
 43390                           
 43391                           ; BSR set to: 61
 43392                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 43393  001628  0E06               	movlw	6
 43394  00162A  6FDE               	movwf	222,b	;volatile
 43395                           
 43396                           ; BSR set to: 61
 43397                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 43398  00162C  6BDF               	clrf	223,b	;volatile
 43399                           
 43400                           ; BSR set to: 61
 43401                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 43402  00162E  6BE0               	clrf	224,b	;volatile
 43403                           
 43404                           ; BSR set to: 61
 43405                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 43406  001630  6BE1               	clrf	225,b	;volatile
 43407                           
 43408                           ; BSR set to: 61
 43409                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 43410  001632  6BE2               	clrf	226,b	;volatile
 43411                           
 43412                           ; BSR set to: 61
 43413                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 43414  001634  0100               	movlb	0	; () banked
 43415  001636  6BCF               	clrf	_uart2TxHead& (0+255),b	;volatile
 43416                           
 43417                           ; BSR set to: 0
 43418                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 43419  001638  6A56               	clrf	_uart2TxTail^0,c	;volatile
 43420                           
 43421                           ; BSR set to: 0
 43422                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 43423  00163A  0E40               	movlw	64
 43424  00163C  6E55               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 43425                           
 43426                           ; BSR set to: 0
 43427                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 43428  00163E  6A54               	clrf	_uart2RxHead^0,c	;volatile
 43429                           
 43430                           ; BSR set to: 0
 43431                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 43432  001640  6BCE               	clrf	_uart2RxTail& (0+255),b	;volatile
 43433                           
 43434                           ; BSR set to: 0
 43435                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 43436  001642  6BCD               	clrf	_uart2RxCount& (0+255),b	;volatile
 43437                           
 43438                           ; BSR set to: 0
 43439                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 43440  001644  0139               	movlb	57	; () banked
 43441  001646  8596               	bsf	150,2,b	;volatile
 43442                           
 43443                           ; BSR set to: 57
 43444                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 43445  001648  0012               	return		;funcret
 43446  00164A                     __end_of_UART2_Initialize:
 43447                           	opt callstack 0
 43448                           
 43449 ;; *************** function _UART2_SetTxInterruptHandler *****************
 43450 ;; Defined at:
 43451 ;;		line 252 in file "mcc_generated_files/uart2.c"
 43452 ;; Parameters:    Size  Location     Type
 43453 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 43454 ;;		 -> UART2_Transmit_ISR(1), 
 43455 ;; Auto vars:     Size  Location     Type
 43456 ;;		None
 43457 ;; Return value:  Size  Location     Type
 43458 ;;                  1  [STACK] void 
 43459 ;; Registers used:
 43460 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 43461 ;; Tracked objects:
 43462 ;;		On entry : 3F/39
 43463 ;;		On exit  : 0/0
 43464 ;;		Unchanged: 0/0
 43465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43470 ;;Total ram usage:        0 bytes
 43471 ;; Hardware stack levels used:    1
 43472 ;; Hardware stack levels required when called:   15
 43473 ;; This function calls:
 43474 ;;		Nothing
 43475 ;; This function is called by:
 43476 ;;		_UART2_Initialize
 43477 ;; This function uses a reentrant model
 43478 ;;
 43479                           
 43480                           	psect	text157
 43481  002182                     __ptext157:
 43482                           	opt callstack 0
 43483  002182                     _UART2_SetTxInterruptHandler:
 43484                           	opt callstack 13
 43485                           
 43486                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 43487                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 43488                           
 43489                           ; BSR set to: 57
 43490                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43491                           ;incstack = 0
 43492  002182  50E1               	movf	fsr1l,w,c
 43493  002184  0FFD               	addlw	-3
 43494  002186  6ED9               	movwf	fsr2l,c
 43495  002188  50E2               	movf	fsr1h,w,c
 43496  00218A  6EDA               	movwf	fsr2h,c
 43497  00218C  0EFF               	movlw	255
 43498  00218E  22DA               	addwfc	fsr2h,f,c
 43499  002190  006F FF78  F0AA    	movff	postinc2,_UART2_TxInterruptHandler
 43500  002196  006F FF78  F0AB    	movff	postinc2,_UART2_TxInterruptHandler+1
 43501  00219C  006F FF74  F0AC    	movff	postdec2,_UART2_TxInterruptHandler+2
 43502                           
 43503                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 43504  0021A2  52E5               	movf	postdec1,f,c
 43505  0021A4  52E5               	movf	postdec1,f,c
 43506  0021A6  52E5               	movf	postdec1,f,c
 43507  0021A8  0012               	return		;funcret
 43508  0021AA                     __end_of_UART2_SetTxInterruptHandler:
 43509                           	opt callstack 0
 43510                           
 43511 ;; *************** function _UART2_SetRxInterruptHandler *****************
 43512 ;; Defined at:
 43513 ;;		line 248 in file "mcc_generated_files/uart2.c"
 43514 ;; Parameters:    Size  Location     Type
 43515 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 43516 ;;		 -> UART2_Receive_ISR(1), 
 43517 ;; Auto vars:     Size  Location     Type
 43518 ;;		None
 43519 ;; Return value:  Size  Location     Type
 43520 ;;                  1  [STACK] void 
 43521 ;; Registers used:
 43522 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 43523 ;; Tracked objects:
 43524 ;;		On entry : 3F/39
 43525 ;;		On exit  : 0/0
 43526 ;;		Unchanged: 0/0
 43527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43532 ;;Total ram usage:        0 bytes
 43533 ;; Hardware stack levels used:    1
 43534 ;; Hardware stack levels required when called:   15
 43535 ;; This function calls:
 43536 ;;		Nothing
 43537 ;; This function is called by:
 43538 ;;		_UART2_Initialize
 43539 ;; This function uses a reentrant model
 43540 ;;
 43541                           
 43542                           	psect	text158
 43543  0021AA                     __ptext158:
 43544                           	opt callstack 0
 43545  0021AA                     _UART2_SetRxInterruptHandler:
 43546                           	opt callstack 13
 43547                           
 43548                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 43549                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 43550                           
 43551                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43552                           ;incstack = 0
 43553  0021AA  50E1               	movf	fsr1l,w,c
 43554  0021AC  0FFD               	addlw	-3
 43555  0021AE  6ED9               	movwf	fsr2l,c
 43556  0021B0  50E2               	movf	fsr1h,w,c
 43557  0021B2  6EDA               	movwf	fsr2h,c
 43558  0021B4  0EFF               	movlw	255
 43559  0021B6  22DA               	addwfc	fsr2h,f,c
 43560  0021B8  006F FF78  F0AD    	movff	postinc2,_UART2_RxInterruptHandler
 43561  0021BE  006F FF78  F0AE    	movff	postinc2,_UART2_RxInterruptHandler+1
 43562  0021C4  006F FF74  F0AF    	movff	postdec2,_UART2_RxInterruptHandler+2
 43563                           
 43564                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 43565  0021CA  52E5               	movf	postdec1,f,c
 43566  0021CC  52E5               	movf	postdec1,f,c
 43567  0021CE  52E5               	movf	postdec1,f,c
 43568  0021D0  0012               	return		;funcret
 43569  0021D2                     __end_of_UART2_SetRxInterruptHandler:
 43570                           	opt callstack 0
 43571                           
 43572 ;; *************** function _UART1_Initialize *****************
 43573 ;; Defined at:
 43574 ;;		line 75 in file "mcc_generated_files/uart1.c"
 43575 ;; Parameters:    Size  Location     Type
 43576 ;;		None
 43577 ;; Auto vars:     Size  Location     Type
 43578 ;;		None
 43579 ;; Return value:  Size  Location     Type
 43580 ;;                  1  [STACK] void 
 43581 ;; Registers used:
 43582 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 43583 ;; Tracked objects:
 43584 ;;		On entry : 0/39
 43585 ;;		On exit  : 3F/39
 43586 ;;		Unchanged: 0/0
 43587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43592 ;;Total ram usage:        0 bytes
 43593 ;; Hardware stack levels used:    1
 43594 ;; Hardware stack levels required when called:   16
 43595 ;; This function calls:
 43596 ;;		_UART1_SetRxInterruptHandler
 43597 ;; This function is called by:
 43598 ;;		_SYSTEM_Initialize
 43599 ;; This function uses a reentrant model
 43600 ;;
 43601                           
 43602                           	psect	text159
 43603  001994                     __ptext159:
 43604                           	opt callstack 0
 43605  001994                     _UART1_Initialize:
 43606                           	opt callstack 13
 43607                           
 43608                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 43609                           
 43610                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43611                           ;incstack = 0
 43612  001994  0139               	movlb	57	; () banked
 43613  001996  9793               	bcf	147,3,b	;volatile
 43614                           
 43615                           ; BSR set to: 57
 43616                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 43617  001998  0EA8               	movlw	low _UART1_Receive_ISR
 43618  00199A  6EE6               	movwf	postinc1,c
 43619  00199C  0E24               	movlw	high _UART1_Receive_ISR
 43620  00199E  6EE6               	movwf	postinc1,c
 43621  0019A0  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 43622  0019A2  6EE6               	movwf	postinc1,c
 43623  0019A4  ECE9  F010         	call	_UART1_SetRxInterruptHandler	;wreg free
 43624                           
 43625                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 43626  0019A8  013D               	movlb	61	; () banked
 43627  0019AA  6BEC               	clrf	236,b	;volatile
 43628                           
 43629                           ; BSR set to: 61
 43630                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 43631  0019AC  6BED               	clrf	237,b	;volatile
 43632                           
 43633                           ; BSR set to: 61
 43634                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 43635  0019AE  6BEE               	clrf	238,b	;volatile
 43636                           
 43637                           ; BSR set to: 61
 43638                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 43639  0019B0  6BEF               	clrf	239,b	;volatile
 43640                           
 43641                           ; BSR set to: 61
 43642                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 43643  0019B2  6BF0               	clrf	240,b	;volatile
 43644                           
 43645                           ; BSR set to: 61
 43646                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 43647  0019B4  6BF1               	clrf	241,b	;volatile
 43648                           
 43649                           ; BSR set to: 61
 43650                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 43651  0019B6  0EB0               	movlw	176
 43652  0019B8  6FF2               	movwf	242,b	;volatile
 43653                           
 43654                           ; BSR set to: 61
 43655                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 43656  0019BA  0E80               	movlw	128
 43657  0019BC  6FF3               	movwf	243,b	;volatile
 43658                           
 43659                           ; BSR set to: 61
 43660                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 43661  0019BE  6BF4               	clrf	244,b	;volatile
 43662                           
 43663                           ; BSR set to: 61
 43664                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 43665  0019C0  0E8A               	movlw	138
 43666  0019C2  6FF5               	movwf	245,b	;volatile
 43667                           
 43668                           ; BSR set to: 61
 43669                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 43670  0019C4  6BF6               	clrf	246,b	;volatile
 43671                           
 43672                           ; BSR set to: 61
 43673                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 43674  0019C6  6BF7               	clrf	247,b	;volatile
 43675                           
 43676                           ; BSR set to: 61
 43677                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 43678  0019C8  6BF8               	clrf	248,b	;volatile
 43679                           
 43680                           ; BSR set to: 61
 43681                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 43682  0019CA  6BF9               	clrf	249,b	;volatile
 43683                           
 43684                           ; BSR set to: 61
 43685                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 43686  0019CC  6BFA               	clrf	250,b	;volatile
 43687                           
 43688                           ; BSR set to: 61
 43689                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 43690  0019CE  6A57               	clrf	_uart1RxHead^0,c	;volatile
 43691                           
 43692                           ; BSR set to: 61
 43693                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 43694  0019D0  0100               	movlb	0	; () banked
 43695  0019D2  6BD1               	clrf	_uart1RxTail& (0+255),b	;volatile
 43696                           
 43697                           ; BSR set to: 0
 43698                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 43699  0019D4  6BD0               	clrf	_uart1RxCount& (0+255),b	;volatile
 43700                           
 43701                           ; BSR set to: 0
 43702                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 43703  0019D6  0139               	movlb	57	; () banked
 43704  0019D8  8793               	bsf	147,3,b	;volatile
 43705                           
 43706                           ; BSR set to: 57
 43707                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 43708  0019DA  0012               	return		;funcret
 43709  0019DC                     __end_of_UART1_Initialize:
 43710                           	opt callstack 0
 43711                           
 43712 ;; *************** function _UART1_SetRxInterruptHandler *****************
 43713 ;; Defined at:
 43714 ;;		line 207 in file "mcc_generated_files/uart1.c"
 43715 ;; Parameters:    Size  Location     Type
 43716 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 43717 ;;		 -> UART1_Receive_ISR(1), 
 43718 ;; Auto vars:     Size  Location     Type
 43719 ;;		None
 43720 ;; Return value:  Size  Location     Type
 43721 ;;                  1  [STACK] void 
 43722 ;; Registers used:
 43723 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 43724 ;; Tracked objects:
 43725 ;;		On entry : 3F/39
 43726 ;;		On exit  : 0/0
 43727 ;;		Unchanged: 0/0
 43728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43733 ;;Total ram usage:        0 bytes
 43734 ;; Hardware stack levels used:    1
 43735 ;; Hardware stack levels required when called:   15
 43736 ;; This function calls:
 43737 ;;		Nothing
 43738 ;; This function is called by:
 43739 ;;		_UART1_Initialize
 43740 ;; This function uses a reentrant model
 43741 ;;
 43742                           
 43743                           	psect	text160
 43744  0021D2                     __ptext160:
 43745                           	opt callstack 0
 43746  0021D2                     _UART1_SetRxInterruptHandler:
 43747                           	opt callstack 13
 43748                           
 43749                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 43750                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 43751                           
 43752                           ; BSR set to: 57
 43753                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43754                           ;incstack = 0
 43755  0021D2  50E1               	movf	fsr1l,w,c
 43756  0021D4  0FFD               	addlw	-3
 43757  0021D6  6ED9               	movwf	fsr2l,c
 43758  0021D8  50E2               	movf	fsr1h,w,c
 43759  0021DA  6EDA               	movwf	fsr2h,c
 43760  0021DC  0EFF               	movlw	255
 43761  0021DE  22DA               	addwfc	fsr2h,f,c
 43762  0021E0  006F FF78  F0A7    	movff	postinc2,_UART1_RxInterruptHandler
 43763  0021E6  006F FF78  F0A8    	movff	postinc2,_UART1_RxInterruptHandler+1
 43764  0021EC  006F FF74  F0A9    	movff	postdec2,_UART1_RxInterruptHandler+2
 43765                           
 43766                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 43767  0021F2  52E5               	movf	postdec1,f,c
 43768  0021F4  52E5               	movf	postdec1,f,c
 43769  0021F6  52E5               	movf	postdec1,f,c
 43770  0021F8  0012               	return		;funcret
 43771  0021FA                     __end_of_UART1_SetRxInterruptHandler:
 43772                           	opt callstack 0
 43773                           
 43774 ;; *************** function _TMR6_Initialize *****************
 43775 ;; Defined at:
 43776 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 43777 ;; Parameters:    Size  Location     Type
 43778 ;;		None
 43779 ;; Auto vars:     Size  Location     Type
 43780 ;;		None
 43781 ;; Return value:  Size  Location     Type
 43782 ;;                  1  [STACK] void 
 43783 ;; Registers used:
 43784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 43785 ;; Tracked objects:
 43786 ;;		On entry : 3F/39
 43787 ;;		On exit  : 0/0
 43788 ;;		Unchanged: 0/0
 43789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43794 ;;Total ram usage:        0 bytes
 43795 ;; Hardware stack levels used:    1
 43796 ;; Hardware stack levels required when called:   16
 43797 ;; This function calls:
 43798 ;;		_TMR6_SetInterruptHandler
 43799 ;; This function is called by:
 43800 ;;		_SYSTEM_Initialize
 43801 ;; This function uses a reentrant model
 43802 ;;
 43803                           
 43804                           	psect	text161
 43805  002108                     __ptext161:
 43806                           	opt callstack 0
 43807  002108                     _TMR6_Initialize:
 43808                           	opt callstack 13
 43809                           
 43810                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 43811                           
 43812                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43813                           ;incstack = 0
 43814  002108  0E01               	movlw	1
 43815  00210A  6E96               	movwf	150,c	;volatile
 43816                           
 43817                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 43818  00210C  6A95               	clrf	149,c	;volatile
 43819                           
 43820                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 43821  00210E  6A97               	clrf	151,c	;volatile
 43822                           
 43823                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 43824  002110  0E7C               	movlw	124
 43825  002112  6E93               	movwf	147,c	;volatile
 43826                           
 43827                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 43828  002114  6A92               	clrf	146,c	;volatile
 43829                           
 43830                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 43831  002116  0139               	movlb	57	; () banked
 43832  002118  91A9               	bcf	169,0,b	;volatile
 43833                           
 43834                           ; BSR set to: 57
 43835                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 43836  00211A  8199               	bsf	153,0,b	;volatile
 43837                           
 43838                           ; BSR set to: 57
 43839                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 43840  00211C  0EFE               	movlw	low _TMR6_DefaultInterruptHandler
 43841  00211E  6EE6               	movwf	postinc1,c
 43842  002120  0E18               	movlw	high _TMR6_DefaultInterruptHandler
 43843  002122  6EE6               	movwf	postinc1,c
 43844  002124  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 43845  002126  6EE6               	movwf	postinc1,c
 43846  002128  ECFD  F010         	call	_TMR6_SetInterruptHandler	;wreg free
 43847                           
 43848                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 43849  00212C  0EE0               	movlw	224
 43850  00212E  6E94               	movwf	148,c	;volatile
 43851                           
 43852                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 43853  002130  0012               	return		;funcret
 43854  002132                     __end_of_TMR6_Initialize:
 43855                           	opt callstack 0
 43856                           
 43857 ;; *************** function _TMR6_SetInterruptHandler *****************
 43858 ;; Defined at:
 43859 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 43860 ;; Parameters:    Size  Location     Type
 43861 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 43862 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 43863 ;; Auto vars:     Size  Location     Type
 43864 ;;		None
 43865 ;; Return value:  Size  Location     Type
 43866 ;;                  1  [STACK] void 
 43867 ;; Registers used:
 43868 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 43869 ;; Tracked objects:
 43870 ;;		On entry : 3F/39
 43871 ;;		On exit  : 0/0
 43872 ;;		Unchanged: 0/0
 43873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43878 ;;Total ram usage:        0 bytes
 43879 ;; Hardware stack levels used:    1
 43880 ;; Hardware stack levels required when called:   15
 43881 ;; This function calls:
 43882 ;;		Nothing
 43883 ;; This function is called by:
 43884 ;;		_TMR6_Initialize
 43885 ;; This function uses a reentrant model
 43886 ;;
 43887                           
 43888                           	psect	text162
 43889  0021FA                     __ptext162:
 43890                           	opt callstack 0
 43891  0021FA                     _TMR6_SetInterruptHandler:
 43892                           	opt callstack 13
 43893                           
 43894                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 43895                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 43896                           
 43897                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43898                           ;incstack = 0
 43899  0021FA  50E1               	movf	fsr1l,w,c
 43900  0021FC  0FFD               	addlw	-3
 43901  0021FE  6ED9               	movwf	fsr2l,c
 43902  002200  50E2               	movf	fsr1h,w,c
 43903  002202  6EDA               	movwf	fsr2h,c
 43904  002204  0EFF               	movlw	255
 43905  002206  22DA               	addwfc	fsr2h,f,c
 43906  002208  006F FF78  F09E    	movff	postinc2,_TMR6_InterruptHandler
 43907  00220E  006F FF78  F09F    	movff	postinc2,_TMR6_InterruptHandler+1
 43908  002214  006F FF74  F0A0    	movff	postdec2,_TMR6_InterruptHandler+2
 43909                           
 43910                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 43911  00221A  52E5               	movf	postdec1,f,c
 43912  00221C  52E5               	movf	postdec1,f,c
 43913  00221E  52E5               	movf	postdec1,f,c
 43914  002220  0012               	return		;funcret
 43915  002222                     __end_of_TMR6_SetInterruptHandler:
 43916                           	opt callstack 0
 43917                           
 43918 ;; *************** function _TMR5_Initialize *****************
 43919 ;; Defined at:
 43920 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 43921 ;; Parameters:    Size  Location     Type
 43922 ;;		None
 43923 ;; Auto vars:     Size  Location     Type
 43924 ;;		None
 43925 ;; Return value:  Size  Location     Type
 43926 ;;                  1  [STACK] void 
 43927 ;; Registers used:
 43928 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 43929 ;; Tracked objects:
 43930 ;;		On entry : 0/39
 43931 ;;		On exit  : 0/0
 43932 ;;		Unchanged: 0/0
 43933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43938 ;;Total ram usage:        0 bytes
 43939 ;; Hardware stack levels used:    1
 43940 ;; Hardware stack levels required when called:   16
 43941 ;; This function calls:
 43942 ;;		_TMR5_SetInterruptHandler
 43943 ;; This function is called by:
 43944 ;;		_SYSTEM_Initialize
 43945 ;; This function uses a reentrant model
 43946 ;;
 43947                           
 43948                           	psect	text163
 43949  0019DC                     __ptext163:
 43950                           	opt callstack 0
 43951  0019DC                     _TMR5_Initialize:
 43952                           	opt callstack 13
 43953                           
 43954                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 43955                           
 43956                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43957                           ;incstack = 0
 43958  0019DC  6A9B               	clrf	155,c	;volatile
 43959                           
 43960                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 43961  0019DE  6A9C               	clrf	156,c	;volatile
 43962                           
 43963                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 43964  0019E0  0E01               	movlw	1
 43965  0019E2  6E9D               	movwf	157,c	;volatile
 43966                           
 43967                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 43968  0019E4  0E63               	movlw	99
 43969  0019E6  6E99               	movwf	153,c	;volatile
 43970                           
 43971                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 43972  0019E8  0EC0               	movlw	192
 43973  0019EA  6E98               	movwf	152,c	;volatile
 43974                           
 43975                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 43976  0019EC  5098               	movf	152,w,c	;volatile
 43977  0019EE  006F FE64  F02A    	movff	16281,btemp	;volatile
 43978  0019F4  6A2B               	clrf	(btemp+1)^0,c
 43979  0019F6  0060  F0A8  F02B   	movff	btemp,btemp+1
 43980  0019FC  6A2A               	clrf	btemp^0,c
 43981  0019FE  102A               	iorwf	btemp^0,w,c
 43982  001A00  0100               	movlb	0	; () banked
 43983  001A02  6FC4               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 43984  001A04  502B               	movf	(btemp+1)^0,w,c
 43985  001A06  6FC5               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 43986                           
 43987                           ; BSR set to: 0
 43988                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 43989  001A08  0139               	movlb	57	; () banked
 43990  001A0A  9DA8               	bcf	168,6,b	;volatile
 43991                           
 43992                           ; BSR set to: 57
 43993                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 43994  001A0C  8D98               	bsf	152,6,b	;volatile
 43995                           
 43996                           ; BSR set to: 57
 43997                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 43998  001A0E  0EF0               	movlw	low _TMR5_DefaultInterruptHandler
 43999  001A10  6EE6               	movwf	postinc1,c
 44000  001A12  0E1D               	movlw	high _TMR5_DefaultInterruptHandler
 44001  001A14  6EE6               	movwf	postinc1,c
 44002  001A16  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 44003  001A18  6EE6               	movwf	postinc1,c
 44004  001A1A  EC11  F011         	call	_TMR5_SetInterruptHandler	;wreg free
 44005                           
 44006                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 44007  001A1E  0E31               	movlw	49
 44008  001A20  6E9A               	movwf	154,c	;volatile
 44009                           
 44010                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 44011  001A22  0012               	return		;funcret
 44012  001A24                     __end_of_TMR5_Initialize:
 44013                           	opt callstack 0
 44014                           
 44015 ;; *************** function _TMR5_SetInterruptHandler *****************
 44016 ;; Defined at:
 44017 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 44018 ;; Parameters:    Size  Location     Type
 44019 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 44020 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 44021 ;; Auto vars:     Size  Location     Type
 44022 ;;		None
 44023 ;; Return value:  Size  Location     Type
 44024 ;;                  1  [STACK] void 
 44025 ;; Registers used:
 44026 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44027 ;; Tracked objects:
 44028 ;;		On entry : 3F/39
 44029 ;;		On exit  : 0/0
 44030 ;;		Unchanged: 0/0
 44031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44036 ;;Total ram usage:        0 bytes
 44037 ;; Hardware stack levels used:    1
 44038 ;; Hardware stack levels required when called:   15
 44039 ;; This function calls:
 44040 ;;		Nothing
 44041 ;; This function is called by:
 44042 ;;		_TMR5_Initialize
 44043 ;; This function uses a reentrant model
 44044 ;;
 44045                           
 44046                           	psect	text164
 44047  002222                     __ptext164:
 44048                           	opt callstack 0
 44049  002222                     _TMR5_SetInterruptHandler:
 44050                           	opt callstack 13
 44051                           
 44052                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 44053                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 44054                           
 44055                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44056                           ;incstack = 0
 44057  002222  50E1               	movf	fsr1l,w,c
 44058  002224  0FFD               	addlw	-3
 44059  002226  6ED9               	movwf	fsr2l,c
 44060  002228  50E2               	movf	fsr1h,w,c
 44061  00222A  6EDA               	movwf	fsr2h,c
 44062  00222C  0EFF               	movlw	255
 44063  00222E  22DA               	addwfc	fsr2h,f,c
 44064  002230  006F FF78  F09B    	movff	postinc2,_TMR5_InterruptHandler
 44065  002236  006F FF78  F09C    	movff	postinc2,_TMR5_InterruptHandler+1
 44066  00223C  006F FF74  F09D    	movff	postdec2,_TMR5_InterruptHandler+2
 44067                           
 44068                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 44069  002242  52E5               	movf	postdec1,f,c
 44070  002244  52E5               	movf	postdec1,f,c
 44071  002246  52E5               	movf	postdec1,f,c
 44072  002248  0012               	return		;funcret
 44073  00224A                     __end_of_TMR5_SetInterruptHandler:
 44074                           	opt callstack 0
 44075                           
 44076 ;; *************** function _TMR3_Initialize *****************
 44077 ;; Defined at:
 44078 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 44079 ;; Parameters:    Size  Location     Type
 44080 ;;		None
 44081 ;; Auto vars:     Size  Location     Type
 44082 ;;		None
 44083 ;; Return value:  Size  Location     Type
 44084 ;;                  1  [STACK] void 
 44085 ;; Registers used:
 44086 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 44087 ;; Tracked objects:
 44088 ;;		On entry : 0/39
 44089 ;;		On exit  : 0/0
 44090 ;;		Unchanged: 0/0
 44091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44096 ;;Total ram usage:        0 bytes
 44097 ;; Hardware stack levels used:    1
 44098 ;; Hardware stack levels required when called:   16
 44099 ;; This function calls:
 44100 ;;		_TMR3_SetInterruptHandler
 44101 ;; This function is called by:
 44102 ;;		_SYSTEM_Initialize
 44103 ;; This function uses a reentrant model
 44104 ;;
 44105                           
 44106                           	psect	text165
 44107  001A24                     __ptext165:
 44108                           	opt callstack 0
 44109  001A24                     _TMR3_Initialize:
 44110                           	opt callstack 13
 44111                           
 44112                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 44113                           
 44114                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44115                           ;incstack = 0
 44116  001A24  6AA7               	clrf	167,c	;volatile
 44117                           
 44118                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 44119  001A26  6AA8               	clrf	168,c	;volatile
 44120                           
 44121                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 44122  001A28  0E01               	movlw	1
 44123  001A2A  6EA9               	movwf	169,c	;volatile
 44124                           
 44125                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 44126  001A2C  0E3C               	movlw	60
 44127  001A2E  6EA5               	movwf	165,c	;volatile
 44128                           
 44129                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 44130  001A30  0EB0               	movlw	176
 44131  001A32  6EA4               	movwf	164,c	;volatile
 44132                           
 44133                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 44134  001A34  50A4               	movf	164,w,c	;volatile
 44135  001A36  006F FE94  F02A    	movff	16293,btemp	;volatile
 44136  001A3C  6A2B               	clrf	(btemp+1)^0,c
 44137  001A3E  0060  F0A8  F02B   	movff	btemp,btemp+1
 44138  001A44  6A2A               	clrf	btemp^0,c
 44139  001A46  102A               	iorwf	btemp^0,w,c
 44140  001A48  0100               	movlb	0	; () banked
 44141  001A4A  6FC0               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 44142  001A4C  502B               	movf	(btemp+1)^0,w,c
 44143  001A4E  6FC1               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 44144                           
 44145                           ; BSR set to: 0
 44146                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 44147  001A50  0139               	movlb	57	; () banked
 44148  001A52  9DA6               	bcf	166,6,b	;volatile
 44149                           
 44150                           ; BSR set to: 57
 44151                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 44152  001A54  8D96               	bsf	150,6,b	;volatile
 44153                           
 44154                           ; BSR set to: 57
 44155                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 44156  001A56  0EAC               	movlw	low _TMR3_DefaultInterruptHandler
 44157  001A58  6EE6               	movwf	postinc1,c
 44158  001A5A  0E27               	movlw	high _TMR3_DefaultInterruptHandler
 44159  001A5C  6EE6               	movwf	postinc1,c
 44160  001A5E  0E00               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 44161  001A60  6EE6               	movwf	postinc1,c
 44162  001A62  EC25  F011         	call	_TMR3_SetInterruptHandler	;wreg free
 44163                           
 44164                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 44165  001A66  0E31               	movlw	49
 44166  001A68  6EA6               	movwf	166,c	;volatile
 44167                           
 44168                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 44169  001A6A  0012               	return		;funcret
 44170  001A6C                     __end_of_TMR3_Initialize:
 44171                           	opt callstack 0
 44172                           
 44173 ;; *************** function _TMR3_SetInterruptHandler *****************
 44174 ;; Defined at:
 44175 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 44176 ;; Parameters:    Size  Location     Type
 44177 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 44178 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 44179 ;; Auto vars:     Size  Location     Type
 44180 ;;		None
 44181 ;; Return value:  Size  Location     Type
 44182 ;;                  1  [STACK] void 
 44183 ;; Registers used:
 44184 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44185 ;; Tracked objects:
 44186 ;;		On entry : 0/1
 44187 ;;		On exit  : 0/0
 44188 ;;		Unchanged: 0/0
 44189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44194 ;;Total ram usage:        0 bytes
 44195 ;; Hardware stack levels used:    1
 44196 ;; Hardware stack levels required when called:   15
 44197 ;; This function calls:
 44198 ;;		Nothing
 44199 ;; This function is called by:
 44200 ;;		_TMR3_Initialize
 44201 ;;		_init_bsoc
 44202 ;; This function uses a reentrant model
 44203 ;;
 44204                           
 44205                           	psect	text166
 44206  00224A                     __ptext166:
 44207                           	opt callstack 0
 44208  00224A                     _TMR3_SetInterruptHandler:
 44209                           	opt callstack 14
 44210                           
 44211                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 44212                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 44213                           
 44214                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44215                           ;incstack = 0
 44216  00224A  50E1               	movf	fsr1l,w,c
 44217  00224C  0FFD               	addlw	-3
 44218  00224E  6ED9               	movwf	fsr2l,c
 44219  002250  50E2               	movf	fsr1h,w,c
 44220  002252  6EDA               	movwf	fsr2h,c
 44221  002254  0EFF               	movlw	255
 44222  002256  22DA               	addwfc	fsr2h,f,c
 44223  002258  006F FF78  F098    	movff	postinc2,_TMR3_InterruptHandler
 44224  00225E  006F FF78  F099    	movff	postinc2,_TMR3_InterruptHandler+1
 44225  002264  006F FF74  F09A    	movff	postdec2,_TMR3_InterruptHandler+2
 44226                           
 44227                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 44228  00226A  52E5               	movf	postdec1,f,c
 44229  00226C  52E5               	movf	postdec1,f,c
 44230  00226E  52E5               	movf	postdec1,f,c
 44231  002270  0012               	return		;funcret
 44232  002272                     __end_of_TMR3_SetInterruptHandler:
 44233                           	opt callstack 0
 44234                           
 44235 ;; *************** function _TMR2_Initialize *****************
 44236 ;; Defined at:
 44237 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 44238 ;; Parameters:    Size  Location     Type
 44239 ;;		None
 44240 ;; Auto vars:     Size  Location     Type
 44241 ;;		None
 44242 ;; Return value:  Size  Location     Type
 44243 ;;                  1  [STACK] void 
 44244 ;; Registers used:
 44245 ;;		wreg, status,2
 44246 ;; Tracked objects:
 44247 ;;		On entry : 0/0
 44248 ;;		On exit  : 3F/39
 44249 ;;		Unchanged: 0/0
 44250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44255 ;;Total ram usage:        0 bytes
 44256 ;; Hardware stack levels used:    1
 44257 ;; Hardware stack levels required when called:   15
 44258 ;; This function calls:
 44259 ;;		Nothing
 44260 ;; This function is called by:
 44261 ;;		_SYSTEM_Initialize
 44262 ;; This function uses a reentrant model
 44263 ;;
 44264                           
 44265                           	psect	text167
 44266  0025CE                     __ptext167:
 44267                           	opt callstack 0
 44268  0025CE                     _TMR2_Initialize:
 44269                           	opt callstack 14
 44270                           
 44271                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 44272                           
 44273                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44274                           ;incstack = 0
 44275  0025CE  0E01               	movlw	1
 44276  0025D0  6EAE               	movwf	174,c	;volatile
 44277                           
 44278                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 44279  0025D2  6AAD               	clrf	173,c	;volatile
 44280                           
 44281                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 44282  0025D4  6AAF               	clrf	175,c	;volatile
 44283                           
 44284                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 44285  0025D6  0E63               	movlw	99
 44286  0025D8  6EAB               	movwf	171,c	;volatile
 44287                           
 44288                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 44289  0025DA  6AAA               	clrf	170,c	;volatile
 44290                           
 44291                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 44292  0025DC  0139               	movlb	57	; () banked
 44293  0025DE  95A4               	bcf	164,2,b	;volatile
 44294                           
 44295                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 44296  0025E0  0EC0               	movlw	192
 44297  0025E2  6EAC               	movwf	172,c	;volatile
 44298                           
 44299                           ; BSR set to: 57
 44300                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 44301  0025E4  0012               	return		;funcret
 44302  0025E6                     __end_of_TMR2_Initialize:
 44303                           	opt callstack 0
 44304                           
 44305 ;; *************** function _SPI1_Initialize *****************
 44306 ;; Defined at:
 44307 ;;		line 64 in file "mcc_generated_files/spi1.c"
 44308 ;; Parameters:    Size  Location     Type
 44309 ;;		None
 44310 ;; Auto vars:     Size  Location     Type
 44311 ;;		None
 44312 ;; Return value:  Size  Location     Type
 44313 ;;                  1  [STACK] void 
 44314 ;; Registers used:
 44315 ;;		wreg, status,2
 44316 ;; Tracked objects:
 44317 ;;		On entry : 3F/39
 44318 ;;		On exit  : 3F/3D
 44319 ;;		Unchanged: 0/0
 44320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44325 ;;Total ram usage:        0 bytes
 44326 ;; Hardware stack levels used:    1
 44327 ;; Hardware stack levels required when called:   15
 44328 ;; This function calls:
 44329 ;;		Nothing
 44330 ;; This function is called by:
 44331 ;;		_SYSTEM_Initialize
 44332 ;; This function uses a reentrant model
 44333 ;;
 44334                           
 44335                           	psect	text168
 44336  0025FC                     __ptext168:
 44337                           	opt callstack 0
 44338  0025FC                     _SPI1_Initialize:
 44339                           	opt callstack 14
 44340                           
 44341                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 44342                           
 44343                           ; BSR set to: 57
 44344                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44345                           ;incstack = 0
 44346  0025FC  0E40               	movlw	64
 44347  0025FE  013D               	movlb	61	; () banked
 44348  002600  6F15               	movwf	21,b	;volatile
 44349                           
 44350                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 44351  002602  0E03               	movlw	3
 44352  002604  6F16               	movwf	22,b	;volatile
 44353                           
 44354                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 44355  002606  0E4F               	movlw	79
 44356  002608  6F19               	movwf	25,b	;volatile
 44357                           
 44358                           ; BSR set to: 61
 44359                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 44360  00260A  6B1C               	clrf	28,b	;volatile
 44361                           
 44362                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 44363  00260C  0E83               	movlw	131
 44364  00260E  6F14               	movwf	20,b	;volatile
 44365                           
 44366                           ; BSR set to: 61
 44367                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 44368  002610  0012               	return		;funcret
 44369  002612                     __end_of_SPI1_Initialize:
 44370                           	opt callstack 0
 44371                           
 44372 ;; *************** function _PWM8_Initialize *****************
 44373 ;; Defined at:
 44374 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 44375 ;; Parameters:    Size  Location     Type
 44376 ;;		None
 44377 ;; Auto vars:     Size  Location     Type
 44378 ;;		None
 44379 ;; Return value:  Size  Location     Type
 44380 ;;                  1  [STACK] void 
 44381 ;; Registers used:
 44382 ;;		wreg, status,2
 44383 ;; Tracked objects:
 44384 ;;		On entry : 3F/39
 44385 ;;		On exit  : 3F/3F
 44386 ;;		Unchanged: 0/0
 44387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44392 ;;Total ram usage:        0 bytes
 44393 ;; Hardware stack levels used:    1
 44394 ;; Hardware stack levels required when called:   15
 44395 ;; This function calls:
 44396 ;;		Nothing
 44397 ;; This function is called by:
 44398 ;;		_SYSTEM_Initialize
 44399 ;; This function uses a reentrant model
 44400 ;;
 44401                           
 44402                           	psect	text169
 44403  002612                     __ptext169:
 44404                           	opt callstack 0
 44405  002612                     _PWM8_Initialize:
 44406                           	opt callstack 14
 44407                           
 44408                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 44409                           
 44410                           ; BSR set to: 61
 44411                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44412                           ;incstack = 0
 44413  002612  0E80               	movlw	128
 44414  002614  6E62               	movwf	98,c	;volatile
 44415                           
 44416                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 44417  002616  6A61               	clrf	97,c	;volatile
 44418                           
 44419                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 44420  002618  0E40               	movlw	64
 44421  00261A  6E60               	movwf	96,c	;volatile
 44422                           
 44423                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 44424  00261C  013F               	movlb	63	; () banked
 44425  00261E  515F               	movf	95,w,b	;volatile
 44426  002620  0B3F               	andlw	-193
 44427  002622  0940               	iorlw	64
 44428  002624  6F5F               	movwf	95,b	;volatile
 44429                           
 44430                           ; BSR set to: 63
 44431                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 44432  002626  0012               	return		;funcret
 44433  002628                     __end_of_PWM8_Initialize:
 44434                           	opt callstack 0
 44435                           
 44436 ;; *************** function _PMD_Initialize *****************
 44437 ;; Defined at:
 44438 ;;		line 91 in file "mcc_generated_files/mcc.c"
 44439 ;; Parameters:    Size  Location     Type
 44440 ;;		None
 44441 ;; Auto vars:     Size  Location     Type
 44442 ;;		None
 44443 ;; Return value:  Size  Location     Type
 44444 ;;                  1  [STACK] void 
 44445 ;; Registers used:
 44446 ;;		None
 44447 ;; Tracked objects:
 44448 ;;		On entry : 3F/39
 44449 ;;		On exit  : 3F/39
 44450 ;;		Unchanged: 0/0
 44451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44456 ;;Total ram usage:        0 bytes
 44457 ;; Hardware stack levels used:    1
 44458 ;; Hardware stack levels required when called:   15
 44459 ;; This function calls:
 44460 ;;		Nothing
 44461 ;; This function is called by:
 44462 ;;		_SYSTEM_Initialize
 44463 ;; This function uses a reentrant model
 44464 ;;
 44465                           
 44466                           	psect	text170
 44467  00263E                     __ptext170:
 44468                           	opt callstack 0
 44469  00263E                     _PMD_Initialize:
 44470                           	opt callstack 14
 44471                           
 44472                           ;mcc_generated_files/mcc.c: 94:     PMD0 = 0x00;
 44473                           
 44474                           ; BSR set to: 63
 44475                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44476                           ;incstack = 0
 44477  00263E  0139               	movlb	57	; () banked
 44478  002640  6BC0               	clrf	192,b	;volatile
 44479                           
 44480                           ;mcc_generated_files/mcc.c: 96:     PMD1 = 0x00;
 44481  002642  6BC1               	clrf	193,b	;volatile
 44482                           
 44483                           ;mcc_generated_files/mcc.c: 98:     PMD2 = 0x00;
 44484  002644  6BC2               	clrf	194,b	;volatile
 44485                           
 44486                           ;mcc_generated_files/mcc.c: 100:     PMD3 = 0x00;
 44487  002646  6BC3               	clrf	195,b	;volatile
 44488                           
 44489                           ;mcc_generated_files/mcc.c: 102:     PMD4 = 0x00;
 44490  002648  6BC4               	clrf	196,b	;volatile
 44491                           
 44492                           ;mcc_generated_files/mcc.c: 104:     PMD5 = 0x00;
 44493  00264A  6BC5               	clrf	197,b	;volatile
 44494                           
 44495                           ;mcc_generated_files/mcc.c: 106:     PMD6 = 0x00;
 44496  00264C  6BC6               	clrf	198,b	;volatile
 44497                           
 44498                           ;mcc_generated_files/mcc.c: 108:     PMD7 = 0x00;
 44499  00264E  6BC7               	clrf	199,b	;volatile
 44500                           
 44501                           ; BSR set to: 57
 44502                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 44503  002650  0012               	return		;funcret
 44504  002652                     __end_of_PMD_Initialize:
 44505                           	opt callstack 0
 44506                           
 44507 ;; *************** function _PIN_MANAGER_Initialize *****************
 44508 ;; Defined at:
 44509 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 44510 ;; Parameters:    Size  Location     Type
 44511 ;;		None
 44512 ;; Auto vars:     Size  Location     Type
 44513 ;;		None
 44514 ;; Return value:  Size  Location     Type
 44515 ;;                  1  [STACK] void 
 44516 ;; Registers used:
 44517 ;;		wreg, status,2
 44518 ;; Tracked objects:
 44519 ;;		On entry : 3F/39
 44520 ;;		On exit  : 3F/3A
 44521 ;;		Unchanged: 0/0
 44522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44527 ;;Total ram usage:        0 bytes
 44528 ;; Hardware stack levels used:    1
 44529 ;; Hardware stack levels required when called:   15
 44530 ;; This function calls:
 44531 ;;		Nothing
 44532 ;; This function is called by:
 44533 ;;		_SYSTEM_Initialize
 44534 ;; This function uses a reentrant model
 44535 ;;
 44536                           
 44537                           	psect	text171
 44538  000CD8                     __ptext171:
 44539                           	opt callstack 0
 44540  000CD8                     _PIN_MANAGER_Initialize:
 44541                           	opt callstack 14
 44542                           
 44543                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 44544                           
 44545                           ; BSR set to: 57
 44546                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44547                           ;incstack = 0
 44548  000CD8  0E07               	movlw	7
 44549  000CDA  6EBE               	movwf	190,c	;volatile
 44550                           
 44551                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 44552  000CDC  6ABD               	clrf	189,c	;volatile
 44553                           
 44554                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 44555  000CDE  6ABA               	clrf	186,c	;volatile
 44556                           
 44557                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x23;
 44558  000CE0  0E23               	movlw	35
 44559  000CE2  6EBF               	movwf	191,c	;volatile
 44560                           
 44561                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 44562  000CE4  6ABB               	clrf	187,c	;volatile
 44563                           
 44564                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 44565  000CE6  0E07               	movlw	7
 44566  000CE8  6EBC               	movwf	188,c	;volatile
 44567                           
 44568                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 44569  000CEA  6AC6               	clrf	198,c	;volatile
 44570                           
 44571                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0C;
 44572  000CEC  0E0C               	movlw	12
 44573  000CEE  6EC7               	movwf	199,c	;volatile
 44574                           
 44575                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 44576  000CF0  68C2               	setf	194,c	;volatile
 44577                           
 44578                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 44579  000CF2  0EBF               	movlw	191
 44580  000CF4  6EC3               	movwf	195,c	;volatile
 44581                           
 44582                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 44583  000CF6  0E90               	movlw	144
 44584  000CF8  6EC4               	movwf	196,c	;volatile
 44585                           
 44586                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 44587  000CFA  0E0C               	movlw	12
 44588  000CFC  6EC5               	movwf	197,c	;volatile
 44589                           
 44590                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 44591  000CFE  013A               	movlb	58	; () banked
 44592  000D00  6B70               	clrf	112,b	;volatile
 44593                           
 44594                           ; BSR set to: 58
 44595                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 44596  000D02  6B60               	clrf	96,b	;volatile
 44597                           
 44598                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 44599  000D04  0E3C               	movlw	60
 44600  000D06  6F50               	movwf	80,b	;volatile
 44601                           
 44602                           ; BSR set to: 58
 44603                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 44604  000D08  6B80               	clrf	128,b	;volatile
 44605                           
 44606                           ; BSR set to: 58
 44607                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 44608  000D0A  6B90               	clrf	144,b	;volatile
 44609                           
 44610                           ; BSR set to: 58
 44611                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 44612  000D0C  6940               	setf	64,b	;volatile
 44613                           
 44614                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 44615  000D0E  0E0C               	movlw	12
 44616  000D10  6F71               	movwf	113,b	;volatile
 44617                           
 44618                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0C;
 44619  000D12  0E0C               	movlw	12
 44620  000D14  6F91               	movwf	145,b	;volatile
 44621                           
 44622                           ; BSR set to: 58
 44623                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 44624  000D16  6B81               	clrf	129,b	;volatile
 44625                           
 44626                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 44627  000D18  0E83               	movlw	131
 44628  000D1A  6F51               	movwf	81,b	;volatile
 44629                           
 44630                           ; BSR set to: 58
 44631                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 44632  000D1C  6B41               	clrf	65,b	;volatile
 44633                           
 44634                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 44635  000D1E  0E97               	movlw	151
 44636  000D20  6F61               	movwf	97,b	;volatile
 44637                           
 44638                           ; BSR set to: 58
 44639                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 44640  000D22  6B82               	clrf	130,b	;volatile
 44641                           
 44642                           ; BSR set to: 58
 44643                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 44644  000D24  6B92               	clrf	146,b	;volatile
 44645                           
 44646                           ; BSR set to: 58
 44647                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 44648  000D26  6B42               	clrf	66,b	;volatile
 44649                           
 44650                           ; BSR set to: 58
 44651                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 44652  000D28  6B52               	clrf	82,b	;volatile
 44653                           
 44654                           ; BSR set to: 58
 44655                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 44656  000D2A  6B62               	clrf	98,b	;volatile
 44657                           
 44658                           ; BSR set to: 58
 44659                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 44660  000D2C  6B72               	clrf	114,b	;volatile
 44661                           
 44662                           ; BSR set to: 58
 44663                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 44664  000D2E  6943               	setf	67,b	;volatile
 44665                           
 44666                           ; BSR set to: 58
 44667                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 44668  000D30  6953               	setf	83,b	;volatile
 44669                           
 44670                           ; BSR set to: 58
 44671                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 44672  000D32  6963               	setf	99,b	;volatile
 44673                           
 44674                           ; BSR set to: 58
 44675                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 44676  000D34  6973               	setf	115,b	;volatile
 44677                           
 44678                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 44679  000D36  0E07               	movlw	7
 44680  000D38  6F83               	movwf	131,b	;volatile
 44681                           
 44682                           ; BSR set to: 58
 44683                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 44684  000D3A  6993               	setf	147,b	;volatile
 44685                           
 44686                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 44687  000D3C  0E0F               	movlw	15
 44688  000D3E  6FE8               	movwf	232,b	;volatile
 44689                           
 44690                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 44691  000D40  0E13               	movlw	19
 44692  000D42  6FDE               	movwf	222,b	;volatile
 44693                           
 44694                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 44695  000D44  0E16               	movlw	22
 44696  000D46  6F0E               	movwf	14,b	;volatile
 44697                           
 44698                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 44699  000D48  0E1E               	movlw	30
 44700  000D4A  6F13               	movwf	19,b	;volatile
 44701                           
 44702                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 44703  000D4C  0E08               	movlw	8
 44704  000D4E  6FC0               	movwf	192,b	;volatile
 44705                           
 44706                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 44707  000D50  0E10               	movlw	16
 44708  000D52  6F19               	movwf	25,b	;volatile
 44709                           
 44710                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 44711  000D54  0E09               	movlw	9
 44712  000D56  6FC1               	movwf	193,b	;volatile
 44713                           
 44714                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 44715  000D58  0E1F               	movlw	31
 44716  000D5A  6F15               	movwf	21,b	;volatile
 44717                           
 44718                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 44719  000D5C  0E13               	movlw	19
 44720  000D5E  6F16               	movwf	22,b	;volatile
 44721                           
 44722                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 44723  000D60  0E17               	movlw	23
 44724  000D62  6FE5               	movwf	229,b	;volatile
 44725                           
 44726                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 44727  000D64  0E14               	movlw	20
 44728  000D66  6FDF               	movwf	223,b	;volatile
 44729                           
 44730                           ; BSR set to: 58
 44731                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 44732  000D68  0012               	return		;funcret
 44733  000D6A                     __end_of_PIN_MANAGER_Initialize:
 44734                           	opt callstack 0
 44735                           
 44736 ;; *************** function _OSCILLATOR_Initialize *****************
 44737 ;; Defined at:
 44738 ;;		line 73 in file "mcc_generated_files/mcc.c"
 44739 ;; Parameters:    Size  Location     Type
 44740 ;;		None
 44741 ;; Auto vars:     Size  Location     Type
 44742 ;;		None
 44743 ;; Return value:  Size  Location     Type
 44744 ;;                  1  [STACK] void 
 44745 ;; Registers used:
 44746 ;;		wreg, status,2
 44747 ;; Tracked objects:
 44748 ;;		On entry : 3F/3A
 44749 ;;		On exit  : 3F/39
 44750 ;;		Unchanged: 0/0
 44751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44756 ;;Total ram usage:        0 bytes
 44757 ;; Hardware stack levels used:    1
 44758 ;; Hardware stack levels required when called:   15
 44759 ;; This function calls:
 44760 ;;		Nothing
 44761 ;; This function is called by:
 44762 ;;		_SYSTEM_Initialize
 44763 ;; This function uses a reentrant model
 44764 ;;
 44765                           
 44766                           	psect	text172
 44767  002628                     __ptext172:
 44768                           	opt callstack 0
 44769  002628                     _OSCILLATOR_Initialize:
 44770                           	opt callstack 14
 44771                           
 44772                           ;mcc_generated_files/mcc.c: 76:     OSCCON1 = 0x20;
 44773                           
 44774                           ; BSR set to: 58
 44775                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44776                           ;incstack = 0
 44777  002628  0E20               	movlw	32
 44778  00262A  0139               	movlb	57	; () banked
 44779  00262C  6FD9               	movwf	217,b	;volatile
 44780                           
 44781                           ; BSR set to: 57
 44782                           ;mcc_generated_files/mcc.c: 78:     OSCCON3 = 0x00;
 44783  00262E  6BDB               	clrf	219,b	;volatile
 44784                           
 44785                           ; BSR set to: 57
 44786                           ;mcc_generated_files/mcc.c: 80:     OSCEN = 0x00;
 44787  002630  6BDD               	clrf	221,b	;volatile
 44788                           
 44789                           ;mcc_generated_files/mcc.c: 82:     OSCFRQ = 0x02;
 44790  002632  0E02               	movlw	2
 44791  002634  6FDF               	movwf	223,b	;volatile
 44792                           
 44793                           ; BSR set to: 57
 44794                           ;mcc_generated_files/mcc.c: 84:     OSCTUNE = 0x00;
 44795  002636  6BDE               	clrf	222,b	;volatile
 44796  002638                     l171:
 44797                           
 44798                           ; BSR set to: 57
 44799                           ;mcc_generated_files/mcc.c: 86:     while(PLLR == 0)
 44800  002638  B1DC               	btfsc	220,0,b	;volatile
 44801  00263A  0012               	return	
 44802  00263C  D7FD               	goto	l171
 44803  00263E                     __end_of_OSCILLATOR_Initialize:
 44804                           	opt callstack 0
 44805                           
 44806 ;; *************** function _INTERRUPT_Initialize *****************
 44807 ;; Defined at:
 44808 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 44809 ;; Parameters:    Size  Location     Type
 44810 ;;		None
 44811 ;; Auto vars:     Size  Location     Type
 44812 ;;  state           1  [STACK] _Bool 
 44813 ;; Return value:  Size  Location     Type
 44814 ;;                  1  [STACK] void 
 44815 ;; Registers used:
 44816 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 44817 ;; Tracked objects:
 44818 ;;		On entry : 0/0
 44819 ;;		On exit  : 3F/39
 44820 ;;		Unchanged: 0/0
 44821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44826 ;;Total ram usage:        0 bytes
 44827 ;; Hardware stack levels used:    1
 44828 ;; Hardware stack levels required when called:   15
 44829 ;; This function calls:
 44830 ;;		Nothing
 44831 ;; This function is called by:
 44832 ;;		_SYSTEM_Initialize
 44833 ;; This function uses a reentrant model
 44834 ;;
 44835                           
 44836                           	psect	text173
 44837  0013F8                     __ptext173:
 44838                           	opt callstack 0
 44839  0013F8                     _INTERRUPT_Initialize:
 44840                           	opt callstack 0
 44841                           
 44842                           ; BSR set to: 57
 44843                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44844  0013F8  52E6               	movf	postinc1,f,c
 44845                           
 44846                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 44847                           
 44848                           ;incstack = 0
 44849  0013FA  8AD2               	bsf	210,5,c	;volatile
 44850                           
 44851                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 44852  0013FC  AED2               	btfss	16338,7,c	;volatile
 44853  0013FE  D003               	goto	u12400
 44854  001400  6A35               	clrf	(btemp+11)^0,c
 44855  001402  2A35               	incf	(btemp+11)^0,f,c
 44856  001404  D001               	goto	u12418
 44857  001406                     u12400:
 44858  001406  6A35               	clrf	(btemp+11)^0,c
 44859  001408                     u12418:
 44860                           
 44861                           ;stkvar	_state @ sp[(-1)+0]
 44862  001408  0EFF               	movlw	-1
 44863  00140A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 44864                           
 44865                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 44866  001410  9ED2               	bcf	16338,7,c	;volatile
 44867                           
 44868                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 44869  001412  0E55               	movlw	85
 44870  001414  6ED4               	movwf	212,c	;volatile
 44871                           
 44872                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 44873  001416  0EAA               	movlw	170
 44874  001418  6ED4               	movwf	212,c	;volatile
 44875                           
 44876                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 44877  00141A  90D4               	bcf	212,0,c	;volatile
 44878                           
 44879                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 44880  00141C  0138               	movlb	56	; () banked
 44881  00141E  6B9F               	clrf	159,b	;volatile
 44882                           
 44883                           ; BSR set to: 56
 44884                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 44885  001420  6B9E               	clrf	158,b	;volatile
 44886                           
 44887                           ; BSR set to: 56
 44888                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 44889  001422  0E08               	movlw	8
 44890  001424  6F9D               	movwf	157,b	;volatile
 44891                           
 44892                           ; BSR set to: 56
 44893                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 44894  001426  0E55               	movlw	85
 44895  001428  6ED4               	movwf	212,c	;volatile
 44896                           
 44897                           ; BSR set to: 56
 44898                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 44899  00142A  0EAA               	movlw	170
 44900  00142C  6ED4               	movwf	212,c	;volatile
 44901                           
 44902                           ; BSR set to: 56
 44903                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 44904  00142E  80D4               	bsf	212,0,c	;volatile
 44905                           
 44906                           ; BSR set to: 56
 44907                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 44908                           ;stkvar	_state @ sp[(-1)+0]
 44909  001430  0EFF               	movlw	-1
 44910  001432  B0E3               	btfsc	plusw1,0,c
 44911  001434  D002               	bra	u12425
 44912  001436  9ED2               	bcf	16338,7,c	;volatile
 44913  001438  D001               	bra	u12426
 44914  00143A                     u12425:
 44915  00143A  8ED2               	bsf	16338,7,c	;volatile
 44916  00143C                     u12426:
 44917                           
 44918                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 44919  00143C  0139               	movlb	57	; () banked
 44920  00143E  8782               	bsf	130,3,b	;volatile
 44921                           
 44922                           ; BSR set to: 57
 44923                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 44924  001440  8382               	bsf	130,1,b	;volatile
 44925                           
 44926                           ; BSR set to: 57
 44927                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 44928  001442  8182               	bsf	130,0,b	;volatile
 44929                           
 44930                           ; BSR set to: 57
 44931                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 44932  001444  8582               	bsf	130,2,b	;volatile
 44933                           
 44934                           ; BSR set to: 57
 44935                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 44936  001446  8786               	bsf	134,3,b	;volatile
 44937                           
 44938                           ; BSR set to: 57
 44939                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 44940  001448  8586               	bsf	134,2,b	;volatile
 44941                           
 44942                           ; BSR set to: 57
 44943                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 44944  00144A  8783               	bsf	131,3,b	;volatile
 44945                           
 44946                           ; BSR set to: 57
 44947                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 44948  00144C  8181               	bsf	129,0,b	;volatile
 44949                           
 44950                           ; BSR set to: 57
 44951                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 44952  00144E  9185               	bcf	133,0,b	;volatile
 44953                           
 44954                           ; BSR set to: 57
 44955                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 44956  001450  8189               	bsf	137,0,b	;volatile
 44957                           
 44958                           ; BSR set to: 57
 44959                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 44960  001452  9D88               	bcf	136,6,b	;volatile
 44961                           
 44962                           ; BSR set to: 57
 44963                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR1bits.ADIP = 1;
 44964  001454  8581               	bsf	129,2,b	;volatile
 44965                           
 44966                           ; BSR set to: 57
 44967                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADTIP = 1;
 44968  001456  8781               	bsf	129,3,b	;volatile
 44969                           
 44970                           ; BSR set to: 57
 44971                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR6bits.TMR3IP = 0;
 44972  001458  9D86               	bcf	134,6,b	;volatile
 44973                           
 44974                           ; BSR set to: 57
 44975                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 44976  00145A  52E5               	movf	postdec1,f,c
 44977  00145C  0012               	return		;funcret
 44978  00145E                     __end_of_INTERRUPT_Initialize:
 44979                           	opt callstack 0
 44980                           
 44981 ;; *************** function _FVR_Initialize *****************
 44982 ;; Defined at:
 44983 ;;		line 58 in file "mcc_generated_files/fvr.c"
 44984 ;; Parameters:    Size  Location     Type
 44985 ;;		None
 44986 ;; Auto vars:     Size  Location     Type
 44987 ;;		None
 44988 ;; Return value:  Size  Location     Type
 44989 ;;                  1  [STACK] void 
 44990 ;; Registers used:
 44991 ;;		wreg, status,2
 44992 ;; Tracked objects:
 44993 ;;		On entry : 3F/39
 44994 ;;		On exit  : 3F/3E
 44995 ;;		Unchanged: 0/0
 44996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45001 ;;Total ram usage:        0 bytes
 45002 ;; Hardware stack levels used:    1
 45003 ;; Hardware stack levels required when called:   15
 45004 ;; This function calls:
 45005 ;;		Nothing
 45006 ;; This function is called by:
 45007 ;;		_SYSTEM_Initialize
 45008 ;; This function uses a reentrant model
 45009 ;;
 45010                           
 45011                           	psect	text174
 45012  002776                     __ptext174:
 45013                           	opt callstack 0
 45014  002776                     _FVR_Initialize:
 45015                           	opt callstack 14
 45016                           
 45017                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 45018                           
 45019                           ; BSR set to: 57
 45020                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45021                           ;incstack = 0
 45022  002776  0EAF               	movlw	175
 45023  002778  013E               	movlb	62	; () banked
 45024  00277A  6FC1               	movwf	193,b	;volatile
 45025                           
 45026                           ; BSR set to: 62
 45027                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 45028  00277C  0012               	return		;funcret
 45029  00277E                     __end_of_FVR_Initialize:
 45030                           	opt callstack 0
 45031                           
 45032 ;; *************** function _EXT_INT_Initialize *****************
 45033 ;; Defined at:
 45034 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 45035 ;; Parameters:    Size  Location     Type
 45036 ;;		None
 45037 ;; Auto vars:     Size  Location     Type
 45038 ;;		None
 45039 ;; Return value:  Size  Location     Type
 45040 ;;                  1  [STACK] void 
 45041 ;; Registers used:
 45042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 45043 ;; Tracked objects:
 45044 ;;		On entry : 3F/3F
 45045 ;;		On exit  : 3F/39
 45046 ;;		Unchanged: 0/0
 45047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45052 ;;Total ram usage:        0 bytes
 45053 ;; Hardware stack levels used:    1
 45054 ;; Hardware stack levels required when called:   16
 45055 ;; This function calls:
 45056 ;;		_INT0_SetInterruptHandler
 45057 ;;		_INT1_SetInterruptHandler
 45058 ;; This function is called by:
 45059 ;;		_SYSTEM_Initialize
 45060 ;; This function uses a reentrant model
 45061 ;;
 45062                           
 45063                           	psect	text175
 45064  001F30                     __ptext175:
 45065                           	opt callstack 0
 45066  001F30                     _EXT_INT_Initialize:
 45067                           	opt callstack 13
 45068                           
 45069                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 45070                           
 45071                           ; BSR set to: 62
 45072                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45073                           ;incstack = 0
 45074  001F30  0139               	movlb	57	; () banked
 45075  001F32  91A1               	bcf	161,0,b	;volatile
 45076                           
 45077                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 45078  001F34  90D2               	bcf	210,0,c	;volatile
 45079                           
 45080                           ; BSR set to: 57
 45081                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 45082  001F36  0EAE               	movlw	low _INT0_DefaultInterruptHandler
 45083  001F38  6EE6               	movwf	postinc1,c
 45084  001F3A  0E27               	movlw	high _INT0_DefaultInterruptHandler
 45085  001F3C  6EE6               	movwf	postinc1,c
 45086  001F3E  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 45087  001F40  6EE6               	movwf	postinc1,c
 45088  001F42  EC4D  F011         	call	_INT0_SetInterruptHandler	;wreg free
 45089                           
 45090                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 45091  001F46  0139               	movlb	57	; () banked
 45092  001F48  8191               	bsf	145,0,b	;volatile
 45093                           
 45094                           ; BSR set to: 57
 45095                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 45096  001F4A  91A5               	bcf	165,0,b	;volatile
 45097                           
 45098                           ; BSR set to: 57
 45099                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 45100  001F4C  92D2               	bcf	210,1,c	;volatile
 45101                           
 45102                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 45103  001F4E  0EAA               	movlw	low _INT1_DefaultInterruptHandler
 45104  001F50  6EE6               	movwf	postinc1,c
 45105  001F52  0E27               	movlw	high _INT1_DefaultInterruptHandler
 45106  001F54  6EE6               	movwf	postinc1,c
 45107  001F56  0E00               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 45108  001F58  6EE6               	movwf	postinc1,c
 45109  001F5A  EC39  F011         	call	_INT1_SetInterruptHandler	;wreg free
 45110                           
 45111                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 45112  001F5E  0139               	movlb	57	; () banked
 45113  001F60  8195               	bsf	149,0,b	;volatile
 45114                           
 45115                           ; BSR set to: 57
 45116                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 45117  001F62  0012               	return		;funcret
 45118  001F64                     __end_of_EXT_INT_Initialize:
 45119                           	opt callstack 0
 45120                           
 45121 ;; *************** function _INT1_SetInterruptHandler *****************
 45122 ;; Defined at:
 45123 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 45124 ;; Parameters:    Size  Location     Type
 45125 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 45126 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 45127 ;; Auto vars:     Size  Location     Type
 45128 ;;		None
 45129 ;; Return value:  Size  Location     Type
 45130 ;;                  1  [STACK] void 
 45131 ;; Registers used:
 45132 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 45133 ;; Tracked objects:
 45134 ;;		On entry : 3F/39
 45135 ;;		On exit  : 0/0
 45136 ;;		Unchanged: 0/0
 45137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45142 ;;Total ram usage:        0 bytes
 45143 ;; Hardware stack levels used:    1
 45144 ;; Hardware stack levels required when called:   15
 45145 ;; This function calls:
 45146 ;;		Nothing
 45147 ;; This function is called by:
 45148 ;;		_EXT_INT_Initialize
 45149 ;;		_start_switch_handler
 45150 ;; This function uses a reentrant model
 45151 ;;
 45152                           
 45153                           	psect	text176
 45154  002272                     __ptext176:
 45155                           	opt callstack 0
 45156  002272                     _INT1_SetInterruptHandler:
 45157                           	opt callstack 14
 45158                           
 45159                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 45160                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 45161                           
 45162                           ; BSR set to: 57
 45163                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45164                           ;incstack = 0
 45165  002272  50E1               	movf	fsr1l,w,c
 45166  002274  0FFD               	addlw	-3
 45167  002276  6ED9               	movwf	fsr2l,c
 45168  002278  50E2               	movf	fsr1h,w,c
 45169  00227A  6EDA               	movwf	fsr2h,c
 45170  00227C  0EFF               	movlw	255
 45171  00227E  22DA               	addwfc	fsr2h,f,c
 45172  002280  006F FF78  F0B0    	movff	postinc2,_INT1_InterruptHandler
 45173  002286  006F FF78  F0B1    	movff	postinc2,_INT1_InterruptHandler+1
 45174  00228C  006F FF74  F0B2    	movff	postdec2,_INT1_InterruptHandler+2
 45175                           
 45176                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 45177  002292  52E5               	movf	postdec1,f,c
 45178  002294  52E5               	movf	postdec1,f,c
 45179  002296  52E5               	movf	postdec1,f,c
 45180  002298  0012               	return		;funcret
 45181  00229A                     __end_of_INT1_SetInterruptHandler:
 45182                           	opt callstack 0
 45183                           
 45184 ;; *************** function _INT0_SetInterruptHandler *****************
 45185 ;; Defined at:
 45186 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 45187 ;; Parameters:    Size  Location     Type
 45188 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 45189 ;;		 -> INT0_DefaultInterruptHandler(1), 
 45190 ;; Auto vars:     Size  Location     Type
 45191 ;;		None
 45192 ;; Return value:  Size  Location     Type
 45193 ;;                  1  [STACK] void 
 45194 ;; Registers used:
 45195 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 45196 ;; Tracked objects:
 45197 ;;		On entry : 3F/39
 45198 ;;		On exit  : 0/0
 45199 ;;		Unchanged: 0/0
 45200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45205 ;;Total ram usage:        0 bytes
 45206 ;; Hardware stack levels used:    1
 45207 ;; Hardware stack levels required when called:   15
 45208 ;; This function calls:
 45209 ;;		Nothing
 45210 ;; This function is called by:
 45211 ;;		_EXT_INT_Initialize
 45212 ;; This function uses a reentrant model
 45213 ;;
 45214                           
 45215                           	psect	text177
 45216  00229A                     __ptext177:
 45217                           	opt callstack 0
 45218  00229A                     _INT0_SetInterruptHandler:
 45219                           	opt callstack 13
 45220                           
 45221                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 45222                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 45223                           
 45224                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45225                           ;incstack = 0
 45226  00229A  50E1               	movf	fsr1l,w,c
 45227  00229C  0FFD               	addlw	-3
 45228  00229E  6ED9               	movwf	fsr2l,c
 45229  0022A0  50E2               	movf	fsr1h,w,c
 45230  0022A2  6EDA               	movwf	fsr2h,c
 45231  0022A4  0EFF               	movlw	255
 45232  0022A6  22DA               	addwfc	fsr2h,f,c
 45233  0022A8  006F FF78  F0B3    	movff	postinc2,_INT0_InterruptHandler
 45234  0022AE  006F FF78  F0B4    	movff	postinc2,_INT0_InterruptHandler+1
 45235  0022B4  006F FF74  F0B5    	movff	postdec2,_INT0_InterruptHandler+2
 45236                           
 45237                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 45238  0022BA  52E5               	movf	postdec1,f,c
 45239  0022BC  52E5               	movf	postdec1,f,c
 45240  0022BE  52E5               	movf	postdec1,f,c
 45241  0022C0  0012               	return		;funcret
 45242  0022C2                     __end_of_INT0_SetInterruptHandler:
 45243                           	opt callstack 0
 45244                           
 45245 ;; *************** function _DMA2_Initialize *****************
 45246 ;; Defined at:
 45247 ;;		line 61 in file "mcc_generated_files/dma2.c"
 45248 ;; Parameters:    Size  Location     Type
 45249 ;;		None
 45250 ;; Auto vars:     Size  Location     Type
 45251 ;;		None
 45252 ;; Return value:  Size  Location     Type
 45253 ;;                  1  [STACK] void 
 45254 ;; Registers used:
 45255 ;;		wreg, status,2
 45256 ;; Tracked objects:
 45257 ;;		On entry : 3F/3D
 45258 ;;		On exit  : 3F/3B
 45259 ;;		Unchanged: 0/0
 45260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45265 ;;Total ram usage:        0 bytes
 45266 ;; Hardware stack levels used:    1
 45267 ;; Hardware stack levels required when called:   15
 45268 ;; This function calls:
 45269 ;;		Nothing
 45270 ;; This function is called by:
 45271 ;;		_SYSTEM_Initialize
 45272 ;; This function uses a reentrant model
 45273 ;;
 45274                           
 45275                           	psect	text178
 45276  00175C                     __ptext178:
 45277                           	opt callstack 0
 45278  00175C                     _DMA2_Initialize:
 45279                           	opt callstack 14
 45280                           
 45281                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 45282                           
 45283                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45284                           ;incstack = 0
 45285  00175C  0E00               	movlw	0
 45286  00175E  013B               	movlb	59	; () banked
 45287  001760  6FD9               	movwf	217,b	;volatile
 45288  001762  0E10               	movlw	16
 45289  001764  6FDA               	movwf	218,b	;volatile
 45290  001766  0E00               	movlw	0
 45291  001768  6FDB               	movwf	219,b	;volatile
 45292                           
 45293                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 45294  00176A  0E3F               	movlw	63
 45295  00176C  6FD1               	movwf	209,b	;volatile
 45296  00176E  0EBB               	movlw	187
 45297  001770  6FD0               	movwf	208,b	;volatile
 45298                           
 45299                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 45300  001772  0E03               	movlw	3
 45301  001774  6FDD               	movwf	221,b	;volatile
 45302                           
 45303                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 45304  001776  0E00               	movlw	0
 45305  001778  6FD8               	movwf	216,b	;volatile
 45306  00177A  0E01               	movlw	1
 45307  00177C  6FD7               	movwf	215,b	;volatile
 45308                           
 45309                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 45310  00177E  0E00               	movlw	0
 45311  001780  6FCF               	movwf	207,b	;volatile
 45312  001782  0E01               	movlw	1
 45313  001784  6FCE               	movwf	206,b	;volatile
 45314                           
 45315                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 45316  001786  0E1C               	movlw	28
 45317  001788  6FDF               	movwf	223,b	;volatile
 45318                           
 45319                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 45320  00178A  0E3D               	movlw	61
 45321  00178C  6FDE               	movwf	222,b	;volatile
 45322                           
 45323                           ; BSR set to: 59
 45324                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 45325  00178E  0139               	movlb	57	; () banked
 45326  001790  97A5               	bcf	165,3,b	;volatile
 45327                           
 45328                           ; BSR set to: 57
 45329                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 45330  001792  95A5               	bcf	165,2,b	;volatile
 45331                           
 45332                           ; BSR set to: 57
 45333                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 45334  001794  9BA5               	bcf	165,5,b	;volatile
 45335                           
 45336                           ; BSR set to: 57
 45337                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 45338  001796  99A5               	bcf	165,4,b	;volatile
 45339                           
 45340                           ; BSR set to: 57
 45341                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 45342  001798  9795               	bcf	149,3,b	;volatile
 45343                           
 45344                           ; BSR set to: 57
 45345                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 45346  00179A  9595               	bcf	149,2,b	;volatile
 45347                           
 45348                           ; BSR set to: 57
 45349                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 45350  00179C  9B95               	bcf	149,5,b	;volatile
 45351                           
 45352                           ; BSR set to: 57
 45353                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 45354  00179E  9995               	bcf	149,4,b	;volatile
 45355  0017A0  9ED2               	bcf	16338,7,c	;# 
 45356  0017A2  0139               	banksel	14831	;# 
 45357  0017A4  0E55               	movlw	85	;# 
 45358  0017A6  6FEF               	movwf	14831,b	;# 
 45359  0017A8  0EAA               	movlw	170	;# 
 45360  0017AA  6FEF               	movwf	14831,b	;# 
 45361  0017AC  81EF               	bsf	14831,0,b	;# 
 45362  0017AE  8ED2               	bsf	16338,7,c	;# 
 45363                           
 45364                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 45365  0017B0  013B               	movlb	59	; () banked
 45366  0017B2  6BDC               	clrf	220,b	;volatile
 45367                           
 45368                           ; BSR set to: 59
 45369                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45370  0017B4  0012               	return		;funcret
 45371  0017B6                     __end_of_DMA2_Initialize:
 45372                           	opt callstack 0
 45373                           
 45374 ;; *************** function _DMA1_Initialize *****************
 45375 ;; Defined at:
 45376 ;;		line 86 in file "mcc_generated_files/dma1.c"
 45377 ;; Parameters:    Size  Location     Type
 45378 ;;		None
 45379 ;; Auto vars:     Size  Location     Type
 45380 ;;		None
 45381 ;; Return value:  Size  Location     Type
 45382 ;;                  1  [STACK] void 
 45383 ;; Registers used:
 45384 ;;		wreg, status,2
 45385 ;; Tracked objects:
 45386 ;;		On entry : 3F/3B
 45387 ;;		On exit  : 3F/3B
 45388 ;;		Unchanged: 0/0
 45389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45394 ;;Total ram usage:        0 bytes
 45395 ;; Hardware stack levels used:    1
 45396 ;; Hardware stack levels required when called:   15
 45397 ;; This function calls:
 45398 ;;		Nothing
 45399 ;; This function is called by:
 45400 ;;		_SYSTEM_Initialize
 45401 ;; This function uses a reentrant model
 45402 ;;
 45403                           
 45404                           	psect	text179
 45405  0011EC                     __ptext179:
 45406                           	opt callstack 0
 45407  0011EC                     _DMA1_Initialize:
 45408                           	opt callstack 14
 45409                           
 45410                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 45411                           
 45412                           ; BSR set to: 59
 45413                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45414                           ;incstack = 0
 45415  0011EC  0E00               	movlw	0
 45416  0011EE  013B               	movlb	59	; () banked
 45417  0011F0  6FF9               	movwf	249,b	;volatile
 45418  0011F2  0E10               	movlw	16
 45419  0011F4  6FFA               	movwf	250,b	;volatile
 45420  0011F6  0E00               	movlw	0
 45421  0011F8  6FFB               	movwf	251,b	;volatile
 45422                           
 45423                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 45424  0011FA  0E3D               	movlw	61
 45425  0011FC  6FF1               	movwf	241,b	;volatile
 45426  0011FE  0E11               	movlw	17
 45427  001200  6FF0               	movwf	240,b	;volatile
 45428                           
 45429                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 45430  001202  0E03               	movlw	3
 45431  001204  6FFD               	movwf	253,b	;volatile
 45432                           
 45433                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 45434  001206  0E00               	movlw	0
 45435  001208  6FF8               	movwf	248,b	;volatile
 45436  00120A  0E01               	movlw	1
 45437  00120C  6FF7               	movwf	247,b	;volatile
 45438                           
 45439                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 45440  00120E  0E00               	movlw	0
 45441  001210  6FEF               	movwf	239,b	;volatile
 45442  001212  0E01               	movlw	1
 45443  001214  6FEE               	movwf	238,b	;volatile
 45444                           
 45445                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 45446  001216  0E15               	movlw	21
 45447  001218  6FFF               	movwf	255,b	;volatile
 45448                           
 45449                           ; BSR set to: 59
 45450                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 45451  00121A  6BFE               	clrf	254,b	;volatile
 45452                           
 45453                           ; BSR set to: 59
 45454                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 45455  00121C  0139               	movlb	57	; () banked
 45456  00121E  93A2               	bcf	162,1,b	;volatile
 45457                           
 45458                           ; BSR set to: 57
 45459                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 45460  001220  91A2               	bcf	162,0,b	;volatile
 45461                           
 45462                           ; BSR set to: 57
 45463                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 45464  001222  97A2               	bcf	162,3,b	;volatile
 45465                           
 45466                           ; BSR set to: 57
 45467                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 45468  001224  95A2               	bcf	162,2,b	;volatile
 45469                           
 45470                           ; BSR set to: 57
 45471                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 45472  001226  8392               	bsf	146,1,b	;volatile
 45473                           
 45474                           ; BSR set to: 57
 45475                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 45476  001228  8192               	bsf	146,0,b	;volatile
 45477                           
 45478                           ; BSR set to: 57
 45479                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 45480  00122A  8792               	bsf	146,3,b	;volatile
 45481                           
 45482                           ; BSR set to: 57
 45483                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 45484  00122C  8592               	bsf	146,2,b	;volatile
 45485                           
 45486                           ; BSR set to: 57
 45487                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 45488  00122E  6BF1               	clrf	241,b	;volatile
 45489                           
 45490                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 45491  001230  0E01               	movlw	1
 45492  001232  6FF2               	movwf	242,b	;volatile
 45493                           
 45494                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 45495  001234  0E04               	movlw	4
 45496  001236  6FF3               	movwf	243,b	;volatile
 45497                           
 45498                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 45499  001238  0E02               	movlw	2
 45500  00123A  6FF4               	movwf	244,b	;volatile
 45501                           
 45502                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 45503  00123C  0E03               	movlw	3
 45504  00123E  6FF7               	movwf	247,b	;volatile
 45505  001240  9ED2               	bcf	16338,7,c	;# 
 45506  001242  0139               	banksel	14831	;# 
 45507  001244  0E55               	movlw	85	;# 
 45508  001246  6FEF               	movwf	14831,b	;# 
 45509  001248  0EAA               	movlw	170	;# 
 45510  00124A  6FEF               	movwf	14831,b	;# 
 45511  00124C  81EF               	bsf	14831,0,b	;# 
 45512  00124E  8ED2               	bsf	16338,7,c	;# 
 45513                           
 45514                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 45515  001250  013B               	movlb	59	; () banked
 45516  001252  6BFC               	clrf	252,b	;volatile
 45517                           
 45518                           ; BSR set to: 59
 45519                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45520  001254  0012               	return		;funcret
 45521  001256                     __end_of_DMA1_Initialize:
 45522                           	opt callstack 0
 45523                           
 45524 ;; *************** function _CRC_Initialize *****************
 45525 ;; Defined at:
 45526 ;;		line 76 in file "mcc_generated_files/crc.c"
 45527 ;; Parameters:    Size  Location     Type
 45528 ;;		None
 45529 ;; Auto vars:     Size  Location     Type
 45530 ;;  seed            2  [STACK] unsigned short 
 45531 ;;  poly            2  [STACK] unsigned short 
 45532 ;; Return value:  Size  Location     Type
 45533 ;;                  1  [STACK] void 
 45534 ;; Registers used:
 45535 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 45536 ;; Tracked objects:
 45537 ;;		On entry : 0/39
 45538 ;;		On exit  : 3F/0
 45539 ;;		Unchanged: 0/0
 45540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45545 ;;Total ram usage:        0 bytes
 45546 ;; Hardware stack levels used:    1
 45547 ;; Hardware stack levels required when called:   15
 45548 ;; This function calls:
 45549 ;;		Nothing
 45550 ;; This function is called by:
 45551 ;;		_SYSTEM_Initialize
 45552 ;;		_read_cal_data
 45553 ;;		_write_cal_data
 45554 ;; This function uses a reentrant model
 45555 ;;
 45556                           
 45557                           	psect	text180
 45558  000D6A                     __ptext180:
 45559                           	opt callstack 0
 45560  000D6A                     _CRC_Initialize:
 45561                           	opt callstack 0
 45562                           
 45563                           ; BSR set to: 59
 45564                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45565  000D6A  52E6               	movf	postinc1,f,c
 45566  000D6C  52E6               	movf	postinc1,f,c
 45567  000D6E  52E6               	movf	postinc1,f,c
 45568  000D70  52E6               	movf	postinc1,f,c
 45569                           
 45570                           ;mcc_generated_files/crc.c: 78:     uint16_t poly;;mcc_generated_files/crc.c: 79:     ui
      +                          nt16_t seed;;mcc_generated_files/crc.c: 82:     CRCCON0 = 0x80;
 45571                           
 45572                           ;incstack = 0
 45573  000D72  0E80               	movlw	128
 45574  000D74  0139               	movlb	57	; () banked
 45575  000D76  6F68               	movwf	104,b	;volatile
 45576                           
 45577                           ;mcc_generated_files/crc.c: 84:     CRCCON1 = (0 << 4) | (7);
 45578  000D78  0E07               	movlw	7
 45579  000D7A  6F69               	movwf	105,b	;volatile
 45580                           
 45581                           ; BSR set to: 57
 45582                           ;mcc_generated_files/crc.c: 86:     CRCACCL = 0x00;
 45583  000D7C  6B62               	clrf	98,b	;volatile
 45584                           
 45585                           ; BSR set to: 57
 45586                           ;mcc_generated_files/crc.c: 88:     CRCACCH = 0x00;
 45587  000D7E  6B63               	clrf	99,b	;volatile
 45588                           
 45589                           ; BSR set to: 57
 45590                           ;mcc_generated_files/crc.c: 90:     SCANCON0 = 0x00;
 45591  000D80  6B7C               	clrf	124,b	;volatile
 45592                           
 45593                           ; BSR set to: 57
 45594                           ;mcc_generated_files/crc.c: 92:     SCANLADRU = 0x00;
 45595  000D82  6B78               	clrf	120,b	;volatile
 45596                           
 45597                           ; BSR set to: 57
 45598                           ;mcc_generated_files/crc.c: 94:     SCANLADRH = 0x00;
 45599  000D84  6B77               	clrf	119,b	;volatile
 45600                           
 45601                           ; BSR set to: 57
 45602                           ;mcc_generated_files/crc.c: 96:     SCANLADRL = 0x00;
 45603  000D86  6B76               	clrf	118,b	;volatile
 45604                           
 45605                           ;mcc_generated_files/crc.c: 98:     SCANHADRU = 0x3F;
 45606  000D88  0E3F               	movlw	63
 45607  000D8A  6F7B               	movwf	123,b	;volatile
 45608                           
 45609                           ; BSR set to: 57
 45610                           ;mcc_generated_files/crc.c: 100:     SCANHADRH = 0xFF;
 45611  000D8C  697A               	setf	122,b	;volatile
 45612                           
 45613                           ; BSR set to: 57
 45614                           ;mcc_generated_files/crc.c: 102:     SCANHADRL = 0xFF;
 45615  000D8E  6979               	setf	121,b	;volatile
 45616                           
 45617                           ; BSR set to: 57
 45618                           ;mcc_generated_files/crc.c: 104:     SCANTRIG = 0x00;
 45619  000D90  6B7D               	clrf	125,b	;volatile
 45620                           
 45621                           ; BSR set to: 57
 45622                           ;mcc_generated_files/crc.c: 106:     poly = 213;
 45623  000D92  0ED5               	movlw	213
 45624  000D94  6E34               	movwf	(btemp+10)^0,c
 45625  000D96  0E00               	movlw	0
 45626  000D98  6E35               	movwf	(btemp+11)^0,c
 45627                           
 45628                           ;stkvar	_poly @ sp[(-4)+2]
 45629  000D9A  0EFE               	movlw	-2
 45630  000D9C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 45631  000DA2  0EFF               	movlw	-1
 45632  000DA4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 45633                           
 45634                           ; BSR set to: 57
 45635                           ;mcc_generated_files/crc.c: 107:     CRCXORH = poly >> 8;
 45636                           ;stkvar	_poly @ sp[(-4)+2]
 45637  000DAA  0EFF               	movlw	255
 45638  000DAC  24E1               	addwf	fsr1l,w,c
 45639  000DAE  6ED9               	movwf	fsr2l,c
 45640  000DB0  0EFF               	movlw	255
 45641  000DB2  20E2               	addwfc	fsr1h,w,c
 45642  000DB4  6EDA               	movwf	fsr2h,c
 45643  000DB6  50DF               	movf	indf2,w,c
 45644  000DB8  6F67               	movwf	103,b	;volatile
 45645                           
 45646                           ; BSR set to: 57
 45647                           ;mcc_generated_files/crc.c: 108:     CRCXORL = poly;
 45648  000DBA  0ED5               	movlw	213
 45649  000DBC  6F66               	movwf	102,b	;volatile
 45650                           
 45651                           ; BSR set to: 57
 45652                           ;mcc_generated_files/crc.c: 110:     seed = 0;
 45653                           ;stkvar	_seed @ sp[(-4)+0]
 45654  000DBE  0EFC               	movlw	-4
 45655  000DC0  6AE3               	clrf	plusw1,c
 45656  000DC2  0EFD               	movlw	-3
 45657  000DC4  6AE3               	clrf	plusw1,c
 45658                           
 45659                           ; BSR set to: 57
 45660                           ;mcc_generated_files/crc.c: 112:     CRCACCH = seed >> 8;
 45661                           ;stkvar	_seed @ sp[(-4)+0]
 45662  000DC6  0EFD               	movlw	253
 45663  000DC8  24E1               	addwf	fsr1l,w,c
 45664  000DCA  6ED9               	movwf	fsr2l,c
 45665  000DCC  0EFF               	movlw	255
 45666  000DCE  20E2               	addwfc	fsr1h,w,c
 45667  000DD0  6EDA               	movwf	fsr2h,c
 45668  000DD2  50DF               	movf	indf2,w,c
 45669  000DD4  6F63               	movwf	99,b	;volatile
 45670                           
 45671                           ; BSR set to: 57
 45672                           ;mcc_generated_files/crc.c: 113:     CRCACCL = seed;
 45673  000DD6  6B62               	clrf	98,b	;volatile
 45674                           
 45675                           ; BSR set to: 57
 45676                           ;mcc_generated_files/crc.c: 115:     crcObj.dataWidth = (uint8_t)(CRCCON1bits.DLEN + 1);
 45677  000DD8  3969               	swapf	105,w,b	;volatile
 45678  000DDA  0B0F               	andlw	15
 45679  000DDC  6E35               	movwf	(btemp+11)^0,c
 45680  000DDE  2835               	incf	(btemp+11)^0,w,c
 45681  000DE0  0100               	movlb	0	; () banked
 45682  000DE2  6FE2               	movwf	_crcObj& (0+255),b
 45683                           
 45684                           ; BSR set to: 0
 45685                           ;mcc_generated_files/crc.c: 116:     crcObj.polyWidth = (uint8_t)(CRCCON1bits.PLEN + 1);
 45686  000DE4  0139               	movlb	57	; () banked
 45687  000DE6  5169               	movf	105,w,b	;volatile
 45688  000DE8  0B0F               	andlw	15
 45689  000DEA  6E35               	movwf	(btemp+11)^0,c
 45690  000DEC  2835               	incf	(btemp+11)^0,w,c
 45691  000DEE  0100               	movlb	0	; () banked
 45692  000DF0  6FE3               	movwf	(_crcObj+1)& (0+255),b
 45693                           
 45694                           ; BSR set to: 0
 45695                           ; _CRC_Initialize: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 45696  000DF2  52E5               	movf	postdec1,f,c
 45697  000DF4  52E5               	movf	postdec1,f,c
 45698  000DF6  52E5               	movf	postdec1,f,c
 45699  000DF8  52E5               	movf	postdec1,f,c
 45700  000DFA  0012               	return		;funcret
 45701  000DFC                     __end_of_CRC_Initialize:
 45702                           	opt callstack 0
 45703                           
 45704 ;; *************** function _CLKREF_Initialize *****************
 45705 ;; Defined at:
 45706 ;;		line 58 in file "mcc_generated_files/clkref.c"
 45707 ;; Parameters:    Size  Location     Type
 45708 ;;		None
 45709 ;; Auto vars:     Size  Location     Type
 45710 ;;		None
 45711 ;; Return value:  Size  Location     Type
 45712 ;;                  1  [STACK] void 
 45713 ;; Registers used:
 45714 ;;		wreg, status,2
 45715 ;; Tracked objects:
 45716 ;;		On entry : 3F/3B
 45717 ;;		On exit  : 3F/3C
 45718 ;;		Unchanged: 0/0
 45719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45724 ;;Total ram usage:        0 bytes
 45725 ;; Hardware stack levels used:    1
 45726 ;; Hardware stack levels required when called:   15
 45727 ;; This function calls:
 45728 ;;		Nothing
 45729 ;; This function is called by:
 45730 ;;		_SYSTEM_Initialize
 45731 ;; This function uses a reentrant model
 45732 ;;
 45733                           
 45734                           	psect	text181
 45735  00271E                     __ptext181:
 45736                           	opt callstack 0
 45737  00271E                     _CLKREF_Initialize:
 45738                           	opt callstack 14
 45739                           
 45740                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 45741                           
 45742                           ; BSR set to: 0
 45743                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45744                           ;incstack = 0
 45745  00271E  013C               	movlb	60	; () banked
 45746  002720  6BE6               	clrf	230,b	;volatile
 45747                           
 45748                           ; BSR set to: 60
 45749                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 45750  002722  0E94               	movlw	148
 45751  002724  6FE5               	movwf	229,b	;volatile
 45752                           
 45753                           ; BSR set to: 60
 45754                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 45755  002726  0012               	return		;funcret
 45756  002728                     __end_of_CLKREF_Initialize:
 45757                           	opt callstack 0
 45758                           
 45759 ;; *************** function _ADCC_Initialize *****************
 45760 ;; Defined at:
 45761 ;;		line 65 in file "mcc_generated_files/adcc.c"
 45762 ;; Parameters:    Size  Location     Type
 45763 ;;		None
 45764 ;; Auto vars:     Size  Location     Type
 45765 ;;		None
 45766 ;; Return value:  Size  Location     Type
 45767 ;;                  1  [STACK] void 
 45768 ;; Registers used:
 45769 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 45770 ;; Tracked objects:
 45771 ;;		On entry : 3F/0
 45772 ;;		On exit  : 0/0
 45773 ;;		Unchanged: 0/0
 45774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45779 ;;Total ram usage:        0 bytes
 45780 ;; Hardware stack levels used:    1
 45781 ;; Hardware stack levels required when called:   16
 45782 ;; This function calls:
 45783 ;;		_ADCC_SetADIInterruptHandler
 45784 ;;		_ADCC_SetADTIInterruptHandler
 45785 ;; This function is called by:
 45786 ;;		_SYSTEM_Initialize
 45787 ;; This function uses a reentrant model
 45788 ;;
 45789                           
 45790                           	psect	text182
 45791  001256                     __ptext182:
 45792                           	opt callstack 0
 45793  001256                     _ADCC_Initialize:
 45794                           	opt callstack 13
 45795                           
 45796                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 45797                           
 45798                           ; BSR set to: 60
 45799                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45800                           ;incstack = 0
 45801  001256  013E               	movlb	62	; () banked
 45802  001258  6BDE               	clrf	222,b	;volatile
 45803                           
 45804                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 45805  00125A  6BDF               	clrf	223,b	;volatile
 45806                           
 45807                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 45808  00125C  6BE0               	clrf	224,b	;volatile
 45809                           
 45810                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 45811  00125E  6BE1               	clrf	225,b	;volatile
 45812                           
 45813                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 45814  001260  6BE4               	clrf	228,b	;volatile
 45815                           
 45816                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 45817  001262  6BE5               	clrf	229,b	;volatile
 45818                           
 45819                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 45820  001264  6BEA               	clrf	234,b	;volatile
 45821                           
 45822                           ; BSR set to: 62
 45823                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 45824  001266  0E40               	movlw	64
 45825  001268  6FEC               	movwf	236,b	;volatile
 45826                           
 45827                           ; BSR set to: 62
 45828                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 45829  00126A  6BF1               	clrf	241,b	;volatile
 45830                           
 45831                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 45832  00126C  0E20               	movlw	32
 45833  00126E  6FF3               	movwf	243,b	;volatile
 45834                           
 45835                           ; BSR set to: 62
 45836                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 45837  001270  6BF4               	clrf	244,b	;volatile
 45838                           
 45839                           ; BSR set to: 62
 45840                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 45841  001272  6BF5               	clrf	245,b	;volatile
 45842                           
 45843                           ; BSR set to: 62
 45844                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 45845  001274  6BF6               	clrf	246,b	;volatile
 45846                           
 45847                           ; BSR set to: 62
 45848                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 45849  001276  6BF7               	clrf	247,b	;volatile
 45850                           
 45851                           ; BSR set to: 62
 45852                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 45853  001278  6BF9               	clrf	249,b	;volatile
 45854                           
 45855                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 45856  00127A  0E5B               	movlw	91
 45857  00127C  6FFA               	movwf	250,b	;volatile
 45858                           
 45859                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 45860  00127E  0E27               	movlw	39
 45861  001280  6FFB               	movwf	251,b	;volatile
 45862                           
 45863                           ; BSR set to: 62
 45864                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 45865  001282  6BFC               	clrf	252,b	;volatile
 45866                           
 45867                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 45868  001284  0E02               	movlw	2
 45869  001286  6FFD               	movwf	253,b	;volatile
 45870                           
 45871                           ; BSR set to: 62
 45872                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 45873  001288  6BFE               	clrf	254,b	;volatile
 45874                           
 45875                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 45876  00128A  0E07               	movlw	7
 45877  00128C  6FFF               	movwf	255,b	;volatile
 45878                           
 45879                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 45880  00128E  0E84               	movlw	132
 45881  001290  6FF8               	movwf	248,b	;volatile
 45882                           
 45883                           ; BSR set to: 62
 45884                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 45885  001292  0139               	movlb	57	; () banked
 45886  001294  95A1               	bcf	161,2,b	;volatile
 45887                           
 45888                           ; BSR set to: 57
 45889                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 45890  001296  8591               	bsf	145,2,b	;volatile
 45891                           
 45892                           ; BSR set to: 57
 45893                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 45894  001298  0EB0               	movlw	low _ADCC_DefaultInterruptHandler
 45895  00129A  6EE6               	movwf	postinc1,c
 45896  00129C  0E27               	movlw	high _ADCC_DefaultInterruptHandler
 45897  00129E  6EE6               	movwf	postinc1,c
 45898  0012A0  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 45899  0012A2  6EE6               	movwf	postinc1,c
 45900  0012A4  EC75  F011         	call	_ADCC_SetADIInterruptHandler	;wreg free
 45901                           
 45902                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 45903  0012A8  0139               	movlb	57	; () banked
 45904  0012AA  97A1               	bcf	161,3,b	;volatile
 45905                           
 45906                           ; BSR set to: 57
 45907                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 45908  0012AC  8791               	bsf	145,3,b	;volatile
 45909                           
 45910                           ; BSR set to: 57
 45911                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 45912  0012AE  0EB0               	movlw	low _ADCC_DefaultInterruptHandler
 45913  0012B0  6EE6               	movwf	postinc1,c
 45914  0012B2  0E27               	movlw	high _ADCC_DefaultInterruptHandler
 45915  0012B4  6EE6               	movwf	postinc1,c
 45916  0012B6  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 45917  0012B8  6EE6               	movwf	postinc1,c
 45918  0012BA  EC61  F011         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 45919                           
 45920                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45921  0012BE  0012               	return		;funcret
 45922  0012C0                     __end_of_ADCC_Initialize:
 45923                           	opt callstack 0
 45924                           
 45925 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 45926 ;; Defined at:
 45927 ;;		line 336 in file "mcc_generated_files/adcc.c"
 45928 ;; Parameters:    Size  Location     Type
 45929 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 45930 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 45931 ;; Auto vars:     Size  Location     Type
 45932 ;;		None
 45933 ;; Return value:  Size  Location     Type
 45934 ;;                  1  [STACK] void 
 45935 ;; Registers used:
 45936 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 45937 ;; Tracked objects:
 45938 ;;		On entry : 0/1
 45939 ;;		On exit  : 0/0
 45940 ;;		Unchanged: 0/0
 45941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45946 ;;Total ram usage:        0 bytes
 45947 ;; Hardware stack levels used:    1
 45948 ;; Hardware stack levels required when called:   15
 45949 ;; This function calls:
 45950 ;;		Nothing
 45951 ;; This function is called by:
 45952 ;;		_ADCC_Initialize
 45953 ;;		_start_adc_scan
 45954 ;; This function uses a reentrant model
 45955 ;;
 45956                           
 45957                           	psect	text183
 45958  0022C2                     __ptext183:
 45959                           	opt callstack 0
 45960  0022C2                     _ADCC_SetADTIInterruptHandler:
 45961                           	opt callstack 14
 45962                           
 45963                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 45964                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 45965                           
 45966                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45967                           ;incstack = 0
 45968  0022C2  50E1               	movf	fsr1l,w,c
 45969  0022C4  0FFD               	addlw	-3
 45970  0022C6  6ED9               	movwf	fsr2l,c
 45971  0022C8  50E2               	movf	fsr1h,w,c
 45972  0022CA  6EDA               	movwf	fsr2h,c
 45973  0022CC  0EFF               	movlw	255
 45974  0022CE  22DA               	addwfc	fsr2h,f,c
 45975  0022D0  006F FF78  F0A1    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 45976  0022D6  006F FF78  F0A2    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 45977  0022DC  006F FF74  F0A3    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 45978                           
 45979                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 45980  0022E2  52E5               	movf	postdec1,f,c
 45981  0022E4  52E5               	movf	postdec1,f,c
 45982  0022E6  52E5               	movf	postdec1,f,c
 45983  0022E8  0012               	return		;funcret
 45984  0022EA                     __end_of_ADCC_SetADTIInterruptHandler:
 45985                           	opt callstack 0
 45986                           
 45987 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 45988 ;; Defined at:
 45989 ;;		line 323 in file "mcc_generated_files/adcc.c"
 45990 ;; Parameters:    Size  Location     Type
 45991 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 45992 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 45993 ;; Auto vars:     Size  Location     Type
 45994 ;;		None
 45995 ;; Return value:  Size  Location     Type
 45996 ;;                  1  [STACK] void 
 45997 ;; Registers used:
 45998 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 45999 ;; Tracked objects:
 46000 ;;		On entry : 7/1
 46001 ;;		On exit  : 0/0
 46002 ;;		Unchanged: 0/0
 46003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46008 ;;Total ram usage:        0 bytes
 46009 ;; Hardware stack levels used:    1
 46010 ;; Hardware stack levels required when called:   15
 46011 ;; This function calls:
 46012 ;;		Nothing
 46013 ;; This function is called by:
 46014 ;;		_ADCC_Initialize
 46015 ;;		_start_adc_scan
 46016 ;; This function uses a reentrant model
 46017 ;;
 46018                           
 46019                           	psect	text184
 46020  0022EA                     __ptext184:
 46021                           	opt callstack 0
 46022  0022EA                     _ADCC_SetADIInterruptHandler:
 46023                           	opt callstack 14
 46024                           
 46025                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 46026                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 46027                           
 46028                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46029                           ;incstack = 0
 46030  0022EA  50E1               	movf	fsr1l,w,c
 46031  0022EC  0FFD               	addlw	-3
 46032  0022EE  6ED9               	movwf	fsr2l,c
 46033  0022F0  50E2               	movf	fsr1h,w,c
 46034  0022F2  6EDA               	movwf	fsr2h,c
 46035  0022F4  0EFF               	movlw	255
 46036  0022F6  22DA               	addwfc	fsr2h,f,c
 46037  0022F8  006F FF78  F0A4    	movff	postinc2,_ADCC_ADI_InterruptHandler
 46038  0022FE  006F FF78  F0A5    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 46039  002304  006F FF74  F0A6    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 46040                           
 46041                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 46042  00230A  52E5               	movf	postdec1,f,c
 46043  00230C  52E5               	movf	postdec1,f,c
 46044  00230E  52E5               	movf	postdec1,f,c
 46045  002310  0012               	return		;funcret
 46046  002312                     __end_of_ADCC_SetADIInterruptHandler:
 46047                           	opt callstack 0
 46048                           
 46049 ;; *************** function _INT1_ISR *****************
 46050 ;; Defined at:
 46051 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 46052 ;; Parameters:    Size  Location     Type
 46053 ;;		None
 46054 ;; Auto vars:     Size  Location     Type
 46055 ;;		None
 46056 ;; Return value:  Size  Location     Type
 46057 ;;                  1    wreg      void 
 46058 ;; Registers used:
 46059 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 46060 ;; Tracked objects:
 46061 ;;		On entry : 0/0
 46062 ;;		On exit  : 0/0
 46063 ;;		Unchanged: 0/0
 46064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46067 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46068 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46069 ;;Total ram usage:        4 bytes
 46070 ;; Hardware stack levels used:    1
 46071 ;; Hardware stack levels required when called:    5
 46072 ;; This function calls:
 46073 ;;		_INT1_CallBack
 46074 ;; This function is called by:
 46075 ;;		Interrupt level 1
 46076 ;; This function uses a non-reentrant model
 46077 ;;
 46078                           
 46079                           	psect	text185
 46080  001D04                     __ptext185:
 46081                           	opt callstack 0
 46082  001D04                     _INT1_ISR:
 46083                           	opt callstack 12
 46084                           
 46085                           ;incstack = 0
 46086  001D04  006F FF60  F007    	movff	status,??_INT1_ISR
 46087  001D0A  0060  F0A8  F008   	movff	btemp,??_INT1_ISR+1
 46088  001D10  0060  F0D0  F009   	movff	btemp+10,??_INT1_ISR+2
 46089  001D16  0060  F0D4  F00A   	movff	btemp+11,??_INT1_ISR+3
 46090  001D1C  EE16  F196         	lfsr	1,___intlo_sp
 46091                           
 46092                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 46093  001D20  0139               	movlb	57	; () banked
 46094  001D22  91A5               	bcf	165,0,b	;volatile
 46095                           
 46096                           ; BSR set to: 57
 46097                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 46098  001D24  ECD8  F011         	call	_INT1_CallBack	;wreg free
 46099  001D28  0060  F028  F035   	movff	??_INT1_ISR+3,btemp+11
 46100  001D2E  0060  F024  F034   	movff	??_INT1_ISR+2,btemp+10
 46101  001D34  0060  F020  F02A   	movff	??_INT1_ISR+1,btemp
 46102  001D3A  0060  F01F  FFD8   	movff	??_INT1_ISR,status
 46103  001D40  0011               	retfie		f
 46104  001D42                     __end_of_INT1_ISR:
 46105                           	opt callstack 0
 46106                           
 46107 ;; *************** function _INT1_CallBack *****************
 46108 ;; Defined at:
 46109 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 46110 ;; Parameters:    Size  Location     Type
 46111 ;;		None
 46112 ;; Auto vars:     Size  Location     Type
 46113 ;;		None
 46114 ;; Return value:  Size  Location     Type
 46115 ;;                  1  [STACK] void 
 46116 ;; Registers used:
 46117 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 46118 ;; Tracked objects:
 46119 ;;		On entry : 3F/39
 46120 ;;		On exit  : 0/0
 46121 ;;		Unchanged: 0/0
 46122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46127 ;;Total ram usage:        0 bytes
 46128 ;; Hardware stack levels used:    1
 46129 ;; Hardware stack levels required when called:    4
 46130 ;; This function calls:
 46131 ;;		Absolute function
 46132 ;;		_INT1_DefaultInterruptHandler
 46133 ;;		_switch_handler
 46134 ;; This function is called by:
 46135 ;;		_INT1_ISR
 46136 ;; This function uses a reentrant model
 46137 ;;
 46138                           
 46139                           	psect	text186
 46140  0023B0                     __ptext186:
 46141                           	opt callstack 0
 46142  0023B0                     _INT1_CallBack:
 46143                           	opt callstack 12
 46144                           
 46145                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 46146                           
 46147                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46148                           ;incstack = 0
 46149  0023B0  0100               	movlb	0	; () banked
 46150  0023B2  51B0               	movf	_INT1_InterruptHandler& (0+255),w,b
 46151  0023B4  11B1               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 46152  0023B6  11B2               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 46153  0023B8  B4D8               	btfsc	status,2,c
 46154  0023BA  0012               	return	
 46155                           
 46156                           ; BSR set to: 0
 46157                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 46158  0023BC  D801               	call	u1311_28
 46159  0023BE  0012               	return	
 46160  0023C0                     u1311_28:
 46161  0023C0  0005               	push	
 46162  0023C2  6EFA               	movwf	pclath,c
 46163  0023C4  51B0               	movf	_INT1_InterruptHandler& (0+255),w,b
 46164  0023C6  6EFD               	movwf	tosl,c
 46165  0023C8  51B1               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 46166  0023CA  6EFE               	movwf	tosh,c
 46167  0023CC  51B2               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 46168  0023CE  6EFF               	movwf	tosu,c
 46169  0023D0  50FA               	movf	pclath,w,c
 46170  0023D2  0012               	return		;indir
 46171  0023D4                     __end_of_INT1_CallBack:
 46172                           	opt callstack 0
 46173                           
 46174 ;; *************** function _INT1_DefaultInterruptHandler *****************
 46175 ;; Defined at:
 46176 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 46177 ;; Parameters:    Size  Location     Type
 46178 ;;		None
 46179 ;; Auto vars:     Size  Location     Type
 46180 ;;		None
 46181 ;; Return value:  Size  Location     Type
 46182 ;;                  1  [STACK] void 
 46183 ;; Registers used:
 46184 ;;		None
 46185 ;; Tracked objects:
 46186 ;;		On entry : 3F/0
 46187 ;;		On exit  : 0/0
 46188 ;;		Unchanged: 0/0
 46189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46194 ;;Total ram usage:        0 bytes
 46195 ;; Hardware stack levels used:    1
 46196 ;; Hardware stack levels required when called:    3
 46197 ;; This function calls:
 46198 ;;		Nothing
 46199 ;; This function is called by:
 46200 ;;		_EXT_INT_Initialize
 46201 ;;		_INT1_CallBack
 46202 ;; This function uses a reentrant model
 46203 ;;
 46204                           
 46205                           	psect	text187
 46206  0027AA                     __ptext187:
 46207                           	opt callstack 0
 46208  0027AA                     _INT1_DefaultInterruptHandler:
 46209                           	opt callstack 12
 46210                           
 46211                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 46212                           
 46213                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46214                           ;incstack = 0
 46215  0027AA  0012               	return		;funcret
 46216  0027AC                     __end_of_INT1_DefaultInterruptHandler:
 46217                           	opt callstack 0
 46218                           
 46219 ;; *************** function _switch_handler *****************
 46220 ;; Defined at:
 46221 ;;		line 58 in file "dio.c"
 46222 ;; Parameters:    Size  Location     Type
 46223 ;;		None
 46224 ;; Auto vars:     Size  Location     Type
 46225 ;;  i               1  [STACK] unsigned char 
 46226 ;;  sw_value        1  [STACK] unsigned char 
 46227 ;; Return value:  Size  Location     Type
 46228 ;;                  1  [STACK] void 
 46229 ;; Registers used:
 46230 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 46231 ;; Tracked objects:
 46232 ;;		On entry : 3F/0
 46233 ;;		On exit  : 0/0
 46234 ;;		Unchanged: 0/0
 46235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46240 ;;Total ram usage:        0 bytes
 46241 ;; Hardware stack levels used:    1
 46242 ;; Hardware stack levels required when called:    3
 46243 ;; This function calls:
 46244 ;;		Nothing
 46245 ;; This function is called by:
 46246 ;;		_start_switch_handler
 46247 ;;		_INT1_CallBack
 46248 ;; This function uses a reentrant model
 46249 ;;
 46250                           
 46251                           	psect	text188
 46252  01EEB6                     __ptext188:
 46253                           	opt callstack 0
 46254  01EEB6                     _switch_handler:
 46255                           	opt callstack 0
 46256                           
 46257                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46258  01EEB6  52E6               	movf	postinc1,f,c
 46259  01EEB8  52E6               	movf	postinc1,f,c
 46260                           
 46261                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 46262                           ;stkvar	_i @ sp[(-2)+0]
 46263                           
 46264                           ;incstack = 0
 46265  01EEBA  0EFE               	movlw	-2
 46266  01EEBC  6AE3               	clrf	plusw1,c
 46267  01EEBE  9ABF               	bcf	191,5,c	;volatile
 46268                           
 46269                           ;dio.c: 72:  __nop();
 46270  01EEC0  F000               	nop	
 46271                           
 46272                           ;dio.c: 73:  __nop();
 46273  01EEC2  F000               	nop	
 46274                           
 46275                           ;dio.c: 74:  __nop();
 46276  01EEC4  F000               	nop	
 46277                           
 46278                           ;dio.c: 75:  __nop();
 46279  01EEC6  F000               	nop	
 46280                           
 46281                           ;dio.c: 76:  __nop();
 46282  01EEC8  F000               	nop	
 46283                           
 46284                           ;dio.c: 77:  __nop();
 46285  01EECA  F000               	nop	
 46286  01EECC  D016               	goto	l13706
 46287  01EECE                     l13692:
 46288                           
 46289                           ;dio.c: 82:    sw_value = PORTFbits.RF3;
 46290  01EECE  A6CF               	btfss	207,3,c	;volatile
 46291  01EED0  D00E               	goto	u1277_20
 46292  01EED2  D00A               	goto	u1277_21
 46293  01EED4                     u1275_28:
 46294                           
 46295                           ;stkvar	_sw_value @ sp[(-2)+1]
 46296  01EED4  0EFF               	movlw	-1
 46297  01EED6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 46298                           
 46299                           ;dio.c: 83:    break;
 46300  01EEDC  D027               	goto	l13708
 46301  01EEDE                     l13694:
 46302                           
 46303                           ;dio.c: 85:    sw_value = PORTFbits.RF2;
 46304  01EEDE  A4CF               	btfss	207,2,c	;volatile
 46305  01EEE0  D006               	goto	u1277_20
 46306  01EEE2  D002               	goto	u1277_21
 46307  01EEE4                     l13696:
 46308                           
 46309                           ;dio.c: 88:    sw_value = PORTDbits.RD3;
 46310  01EEE4  A6CD               	btfss	205,3,c	;volatile
 46311  01EEE6  D003               	goto	u1277_20
 46312  01EEE8                     u1277_21:
 46313  01EEE8  6A35               	clrf	(btemp+11)^0,c
 46314  01EEEA  2A35               	incf	(btemp+11)^0,f,c
 46315  01EEEC  D7F3               	goto	u1275_28
 46316  01EEEE                     u1277_20:
 46317  01EEEE  6A35               	clrf	(btemp+11)^0,c
 46318  01EEF0  D7F1               	goto	u1275_28
 46319  01EEF2                     l13698:
 46320                           
 46321                           ;dio.c: 91:    sw_value = 1;
 46322                           ;stkvar	_sw_value @ sp[(-2)+1]
 46323  01EEF2  0EFF               	movlw	-1
 46324  01EEF4  6AE3               	clrf	plusw1,c
 46325  01EEF6  2AE3               	incf	plusw1,f,c
 46326                           
 46327                           ;dio.c: 92:    break;
 46328  01EEF8  D019               	goto	l13708
 46329  01EEFA                     l13706:
 46330                           
 46331                           ;stkvar	_i @ sp[(-2)+0]
 46332  01EEFA  0EFE               	movlw	-2
 46333  01EEFC  50E3               	movf	plusw1,w,c
 46334  01EEFE  6E34               	movwf	(btemp+10)^0,c
 46335  01EF00  6A35               	clrf	(btemp+11)^0,c
 46336                           
 46337                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 46338                           ; Switch size 1, requested type "simple"
 46339                           ; Number of cases is 1, Range of values is 0 to 0
 46340                           ; switch strategies available:
 46341                           ; Name         Instructions Cycles
 46342                           ; simple_byte            4     3 (average)
 46343                           ;	Chosen strategy is simple_byte
 46344  01EF02  5035               	movf	(btemp+11)^0,w,c
 46345  01EF04  0A00               	xorlw	0	; case 0
 46346  01EF06  A4D8               	btfss	status,2,c
 46347  01EF08  D7F4               	goto	l13698
 46348                           
 46349                           ; Switch size 1, requested type "simple"
 46350                           ; Number of cases is 5, Range of values is 0 to 4
 46351                           ; switch strategies available:
 46352                           ; Name         Instructions Cycles
 46353                           ; simple_byte           16     9 (average)
 46354                           ;	Chosen strategy is simple_byte
 46355  01EF0A  5034               	movf	(btemp+10)^0,w,c
 46356  01EF0C  0A00               	xorlw	0	; case 0
 46357  01EF0E  B4D8               	btfsc	status,2,c
 46358  01EF10  D7F0               	goto	l13698
 46359  01EF12  0A01               	xorlw	1	; case 1
 46360  01EF14  B4D8               	btfsc	status,2,c
 46361  01EF16  D7ED               	goto	l13698
 46362  01EF18  0A03               	xorlw	3	; case 2
 46363  01EF1A  B4D8               	btfsc	status,2,c
 46364  01EF1C  D7E0               	goto	l13694
 46365  01EF1E  0A01               	xorlw	1	; case 3
 46366  01EF20  B4D8               	btfsc	status,2,c
 46367  01EF22  D7D5               	goto	l13692
 46368  01EF24  0A07               	xorlw	7	; case 4
 46369  01EF26  B4D8               	btfsc	status,2,c
 46370  01EF28  D7DD               	goto	l13696
 46371  01EF2A  D7E3               	goto	l13698
 46372  01EF2C                     l13708:
 46373                           
 46374                           ;dio.c: 102:   if (sw_value) {
 46375                           ;stkvar	_sw_value @ sp[(-2)+1]
 46376  01EF2C  0EFF               	movlw	-1
 46377  01EF2E  50E3               	movf	plusw1,w,c
 46378  01EF30  B4D8               	btfsc	status,2,c
 46379  01EF32  D018               	goto	l13714
 46380                           
 46381                           ;dio.c: 103:    if (S.button[i].sw == SW_ON) {
 46382                           ;stkvar	_i @ sp[(-2)+0]
 46383  01EF34  0EFE               	movlw	-2
 46384  01EF36  50E3               	movf	plusw1,w,c
 46385  01EF38  0D05               	mullw	5
 46386  01EF3A  0EA4               	movlw	low _S
 46387  01EF3C  24F3               	addwf	243,w,c
 46388  01EF3E  6ED9               	movwf	fsr2l,c
 46389  01EF40  0E01               	movlw	high _S
 46390  01EF42  20F4               	addwfc	prodh,w,c
 46391  01EF44  6EDA               	movwf	fsr2h,c
 46392  01EF46  04DE               	decf	postinc2,w,c
 46393  01EF48  A4D8               	btfss	status,2,c
 46394  01EF4A  D049               	goto	l13722
 46395                           
 46396                           ;dio.c: 104:     S.button[i].sw = SW_OFF;
 46397                           ;stkvar	_i @ sp[(-2)+0]
 46398  01EF4C  0EFE               	movlw	-2
 46399  01EF4E  50E3               	movf	plusw1,w,c
 46400  01EF50  0D05               	mullw	5
 46401  01EF52  0EA4               	movlw	low _S
 46402  01EF54  24F3               	addwf	243,w,c
 46403  01EF56  6ED9               	movwf	fsr2l,c
 46404  01EF58  0E01               	movlw	high _S
 46405  01EF5A  20F4               	addwfc	prodh,w,c
 46406  01EF5C  6EDA               	movwf	fsr2h,c
 46407  01EF5E  0E00               	movlw	0
 46408  01EF60  6EDF               	movwf	indf2,c
 46409  01EF62  D03D               	goto	l13722
 46410  01EF64                     l13714:
 46411                           
 46412                           ;dio.c: 107:    if (S.button[i].sw == SW_OFF) {
 46413                           ;stkvar	_i @ sp[(-2)+0]
 46414  01EF64  0EFE               	movlw	-2
 46415  01EF66  50E3               	movf	plusw1,w,c
 46416  01EF68  0D05               	mullw	5
 46417  01EF6A  0EA4               	movlw	low _S
 46418  01EF6C  24F3               	addwf	243,w,c
 46419  01EF6E  6ED9               	movwf	fsr2l,c
 46420  01EF70  0E01               	movlw	high _S
 46421  01EF72  20F4               	addwfc	prodh,w,c
 46422  01EF74  6EDA               	movwf	fsr2h,c
 46423  01EF76  50DF               	movf	indf2,w,c
 46424  01EF78  A4D8               	btfss	status,2,c
 46425  01EF7A  D031               	goto	l13722
 46426                           
 46427                           ;dio.c: 108:     S.button[i].sw = SW_ON;
 46428                           ;stkvar	_i @ sp[(-2)+0]
 46429  01EF7C  0EFE               	movlw	-2
 46430  01EF7E  50E3               	movf	plusw1,w,c
 46431  01EF80  0D05               	mullw	5
 46432  01EF82  0EA4               	movlw	low _S
 46433  01EF84  24F3               	addwf	243,w,c
 46434  01EF86  6ED9               	movwf	fsr2l,c
 46435  01EF88  0E01               	movlw	high _S
 46436  01EF8A  20F4               	addwfc	prodh,w,c
 46437  01EF8C  6EDA               	movwf	fsr2h,c
 46438  01EF8E  0E01               	movlw	1
 46439  01EF90  6EDF               	movwf	indf2,c
 46440                           
 46441                           ;dio.c: 109:     S.button[i].count = V.timerint_count;
 46442  01EF92  EE20  F2B8         	lfsr	2,_V+177	;volatile
 46443                           
 46444                           ;stkvar	_i @ sp[(-2)+0]
 46445  01EF96  0EFE               	movlw	-2
 46446  01EF98  50E3               	movf	plusw1,w,c
 46447  01EF9A  0D05               	mullw	5
 46448  01EF9C  0EA5               	movlw	low (_S+1)
 46449  01EF9E  24F3               	addwf	243,w,c
 46450  01EFA0  6EE9               	movwf	fsr0l,c
 46451  01EFA2  0E01               	movlw	high (_S+1)
 46452  01EFA4  20F4               	addwfc	prodh,w,c
 46453  01EFA6  6EEA               	movwf	fsr0h,c
 46454  01EFA8  006F FF7B FFEE     	movff	postinc2,postinc0
 46455  01EFAE  006F FF7B FFEE     	movff	postinc2,postinc0
 46456  01EFB4  006F FF7B FFEE     	movff	postinc2,postinc0
 46457  01EFBA  006F FF7B FFEE     	movff	postinc2,postinc0
 46458                           
 46459                           ;dio.c: 110:     S.sw_bitmap |= 1 << i;
 46460                           ;stkvar	_i @ sp[(-2)+0]
 46461  01EFC0  0EFE               	movlw	-2
 46462  01EFC2  006F FF8C  F035    	movff	plusw1,btemp+11
 46463  01EFC8  0E01               	movlw	1
 46464  01EFCA  6E34               	movwf	(btemp+10)^0,c
 46465  01EFCC  2A35               	incf	(btemp+11)^0,f,c
 46466  01EFCE  D002               	goto	u1281_24
 46467  01EFD0                     u1281_25:
 46468  01EFD0  90D8               	bcf	status,0,c
 46469  01EFD2  3634               	rlcf	(btemp+10)^0,f,c
 46470  01EFD4                     u1281_24:
 46471  01EFD4  2E35               	decfsz	(btemp+11)^0,f,c
 46472  01EFD6  D7FC               	goto	u1281_25
 46473  01EFD8  5034               	movf	(btemp+10)^0,w,c
 46474  01EFDA  0101               	movlb	1	; () banked
 46475  01EFDC  13CC               	iorwf	(_S+40)& (0+255),f,b	;volatile
 46476  01EFDE                     l13722:
 46477                           
 46478                           ;dio.c: 113:  } while (++i < 6);
 46479                           ;stkvar	_i @ sp[(-2)+0]
 46480  01EFDE  0EFE               	movlw	-2
 46481  01EFE0  2AE3               	incf	plusw1,f,c
 46482  01EFE2  0EFE               	movlw	-2
 46483  01EFE4  006F FF8C  F02A    	movff	plusw1,btemp
 46484  01EFEA  0E05               	movlw	5
 46485  01EFEC  642A               	cpfsgt	btemp^0,c
 46486  01EFEE  D785               	goto	l13706
 46487                           
 46488                           ;dio.c: 122:  do { LATFbits.LATF5 = 1; } while(0);
 46489  01EFF0  8ABF               	bsf	191,5,c	;volatile
 46490                           
 46491                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 46492  01EFF2  52E5               	movf	postdec1,f,c
 46493  01EFF4  52E5               	movf	postdec1,f,c
 46494  01EFF6  0012               	return		;funcret
 46495  01EFF8                     __end_of_switch_handler:
 46496                           	opt callstack 0
 46497                           
 46498 ;; *************** function _TMR5_ISR *****************
 46499 ;; Defined at:
 46500 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 46501 ;; Parameters:    Size  Location     Type
 46502 ;;		None
 46503 ;; Auto vars:     Size  Location     Type
 46504 ;;		None
 46505 ;; Return value:  Size  Location     Type
 46506 ;;                  1    wreg      void 
 46507 ;; Registers used:
 46508 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, tosl, prodl,
      + prodh
 46509 ;; Tracked objects:
 46510 ;;		On entry : 0/0
 46511 ;;		On exit  : 3F/0
 46512 ;;		Unchanged: 0/0
 46513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46516 ;;      Temps:         31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46517 ;;      Totals:        31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46518 ;;Total ram usage:       31 bytes
 46519 ;; Hardware stack levels used:    1
 46520 ;; Hardware stack levels required when called:    9
 46521 ;; This function calls:
 46522 ;;		_TMR5_CallBack
 46523 ;;		_TMR5_WriteTimer
 46524 ;; This function is called by:
 46525 ;;		Interrupt level 1
 46526 ;; This function uses a non-reentrant model
 46527 ;;
 46528                           
 46529                           	psect	text189
 46530  01D8E8                     __ptext189:
 46531                           	opt callstack 0
 46532  01D8E8                     _TMR5_ISR:
 46533                           	opt callstack 8
 46534                           
 46535                           ;incstack = 0
 46536  01D8E8  006F FF60  F00D    	movff	status,??_TMR5_ISR+2
 46537  01D8EE  0060  F0A8  F00E   	movff	btemp,??_TMR5_ISR+3
 46538  01D8F4  0060  F0AC  F00F   	movff	btemp+1,??_TMR5_ISR+4
 46539  01D8FA  0060  F0B0  F010   	movff	btemp+2,??_TMR5_ISR+5
 46540  01D900  0060  F0B4  F011   	movff	btemp+3,??_TMR5_ISR+6
 46541  01D906  0060  F0B8  F012   	movff	btemp+4,??_TMR5_ISR+7
 46542  01D90C  0060  F0BC  F013   	movff	btemp+5,??_TMR5_ISR+8
 46543  01D912  0060  F0C0  F014   	movff	btemp+6,??_TMR5_ISR+9
 46544  01D918  0060  F0C4  F015   	movff	btemp+7,??_TMR5_ISR+10
 46545  01D91E  0060  F0C8  F016   	movff	btemp+8,??_TMR5_ISR+11
 46546  01D924  0060  F0CC  F017   	movff	btemp+9,??_TMR5_ISR+12
 46547  01D92A  0060  F0D0  F018   	movff	btemp+10,??_TMR5_ISR+13
 46548  01D930  0060  F0D4  F019   	movff	btemp+11,??_TMR5_ISR+14
 46549  01D936  0060  F0E8  F01A   	movff	btemp+16,??_TMR5_ISR+15
 46550  01D93C  0060  F0EC  F01B   	movff	btemp+17,??_TMR5_ISR+16
 46551  01D942  0060  F0F0  F01C   	movff	btemp+18,??_TMR5_ISR+17
 46552  01D948  0060  F0F4  F01D   	movff	btemp+19,??_TMR5_ISR+18
 46553  01D94E  0060  F0F8  F01E   	movff	btemp+20,??_TMR5_ISR+19
 46554  01D954  0060  F0FC  F01F   	movff	btemp+21,??_TMR5_ISR+20
 46555  01D95A  0060  F100  F020   	movff	btemp+22,??_TMR5_ISR+21
 46556  01D960  0060  F104  F021   	movff	btemp+23,??_TMR5_ISR+22
 46557  01D966  0060  F108  F022   	movff	btemp+24,??_TMR5_ISR+23
 46558  01D96C  0060  F10C  F023   	movff	btemp+25,??_TMR5_ISR+24
 46559  01D972  0060  F110  F024   	movff	btemp+26,??_TMR5_ISR+25
 46560  01D978  0060  F114  F025   	movff	btemp+27,??_TMR5_ISR+26
 46561  01D97E  0060  F118  F026   	movff	btemp+28,??_TMR5_ISR+27
 46562  01D984  0060  F11C  F027   	movff	btemp+29,??_TMR5_ISR+28
 46563  01D98A  0060  F120  F028   	movff	btemp+30,??_TMR5_ISR+29
 46564  01D990  0060  F124  F029   	movff	btemp+31,??_TMR5_ISR+30
 46565  01D996  EE16  F196         	lfsr	1,___intlo_sp
 46566                           
 46567                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 46568  01D99A  0139               	movlb	57	; () banked
 46569  01D99C  9DA8               	bcf	168,6,b	;volatile
 46570                           
 46571                           ; BSR set to: 57
 46572                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 46573  01D99E  0060  F313  FFE6   	movff	_timer5ReloadVal,postinc1
 46574  01D9A4  0060  F317  FFE6   	movff	_timer5ReloadVal+1,postinc1
 46575  01D9AA  EC42  F00E         	call	_TMR5_WriteTimer	;wreg free
 46576                           
 46577                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 46578  01D9AE  0102               	movlb	2	; () banked
 46579  01D9B0  51AE               	movf	(_V+167)& (0+255),w,b	;volatile
 46580  01D9B2  6E0B               	movwf	??_TMR5_ISR^0,c
 46581  01D9B4  6A0C               	clrf	(??_TMR5_ISR+1)^0,c
 46582  01D9B6  0E05               	movlw	5
 46583  01D9B8  260B               	addwf	??_TMR5_ISR^0,f,c
 46584  01D9BA  0E00               	movlw	0
 46585  01D9BC  220C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 46586  01D9BE  0100               	movlb	0	; () banked
 46587  01D9C0  4BC2               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 46588  01D9C2  2BC3               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 46589  01D9C4  500B               	movf	??_TMR5_ISR^0,w,c
 46590  01D9C6  5DC2               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 46591  01D9C8  500C               	movf	(??_TMR5_ISR+1)^0,w,c
 46592  01D9CA  59C3               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 46593  01D9CC  A0D8               	btfss	status,0,c
 46594  01D9CE  D005               	goto	i1l1021
 46595                           
 46596                           ; BSR set to: 0
 46597                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 46598  01D9D0  ECEA  F011         	call	_TMR5_CallBack	;wreg free
 46599                           
 46600                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 46601  01D9D4  0100               	movlb	0	; () banked
 46602  01D9D6  6BC2               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 46603  01D9D8  6BC3               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 46604  01D9DA                     i1l1021:
 46605                           
 46606                           ; BSR set to: 0
 46607  01D9DA  0060  F0A4  F049   	movff	??_TMR5_ISR+30,btemp+31
 46608  01D9E0  0060  F0A0  F048   	movff	??_TMR5_ISR+29,btemp+30
 46609  01D9E6  0060  F09C  F047   	movff	??_TMR5_ISR+28,btemp+29
 46610  01D9EC  0060  F098  F046   	movff	??_TMR5_ISR+27,btemp+28
 46611  01D9F2  0060  F094  F045   	movff	??_TMR5_ISR+26,btemp+27
 46612  01D9F8  0060  F090  F044   	movff	??_TMR5_ISR+25,btemp+26
 46613  01D9FE  0060  F08C  F043   	movff	??_TMR5_ISR+24,btemp+25
 46614  01DA04  0060  F088  F042   	movff	??_TMR5_ISR+23,btemp+24
 46615  01DA0A  0060  F084  F041   	movff	??_TMR5_ISR+22,btemp+23
 46616  01DA10  0060  F080  F040   	movff	??_TMR5_ISR+21,btemp+22
 46617  01DA16  0060  F07C  F03F   	movff	??_TMR5_ISR+20,btemp+21
 46618  01DA1C  0060  F078  F03E   	movff	??_TMR5_ISR+19,btemp+20
 46619  01DA22  0060  F074  F03D   	movff	??_TMR5_ISR+18,btemp+19
 46620  01DA28  0060  F070  F03C   	movff	??_TMR5_ISR+17,btemp+18
 46621  01DA2E  0060  F06C  F03B   	movff	??_TMR5_ISR+16,btemp+17
 46622  01DA34  0060  F068  F03A   	movff	??_TMR5_ISR+15,btemp+16
 46623  01DA3A  0060  F064  F035   	movff	??_TMR5_ISR+14,btemp+11
 46624  01DA40  0060  F060  F034   	movff	??_TMR5_ISR+13,btemp+10
 46625  01DA46  0060  F05C  F033   	movff	??_TMR5_ISR+12,btemp+9
 46626  01DA4C  0060  F058  F032   	movff	??_TMR5_ISR+11,btemp+8
 46627  01DA52  0060  F054  F031   	movff	??_TMR5_ISR+10,btemp+7
 46628  01DA58  0060  F050  F030   	movff	??_TMR5_ISR+9,btemp+6
 46629  01DA5E  0060  F04C  F02F   	movff	??_TMR5_ISR+8,btemp+5
 46630  01DA64  0060  F048  F02E   	movff	??_TMR5_ISR+7,btemp+4
 46631  01DA6A  0060  F044  F02D   	movff	??_TMR5_ISR+6,btemp+3
 46632  01DA70  0060  F040  F02C   	movff	??_TMR5_ISR+5,btemp+2
 46633  01DA76  0060  F03C  F02B   	movff	??_TMR5_ISR+4,btemp+1
 46634  01DA7C  0060  F038  F02A   	movff	??_TMR5_ISR+3,btemp
 46635  01DA82  0060  F037  FFD8   	movff	??_TMR5_ISR+2,status
 46636  01DA88  0011               	retfie		f
 46637  01DA8A                     __end_of_TMR5_ISR:
 46638                           	opt callstack 0
 46639                           
 46640 ;; *************** function _TMR5_WriteTimer *****************
 46641 ;; Defined at:
 46642 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 46643 ;; Parameters:    Size  Location     Type
 46644 ;;  timerVal        2  [STACK] unsigned short 
 46645 ;; Auto vars:     Size  Location     Type
 46646 ;;		None
 46647 ;; Return value:  Size  Location     Type
 46648 ;;                  1  [STACK] void 
 46649 ;; Registers used:
 46650 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 46651 ;; Tracked objects:
 46652 ;;		On entry : 3F/39
 46653 ;;		On exit  : 0/0
 46654 ;;		Unchanged: 0/0
 46655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46660 ;;Total ram usage:        0 bytes
 46661 ;; Hardware stack levels used:    1
 46662 ;; Hardware stack levels required when called:    3
 46663 ;; This function calls:
 46664 ;;		Nothing
 46665 ;; This function is called by:
 46666 ;;		_TMR5_ISR
 46667 ;; This function uses a reentrant model
 46668 ;;
 46669                           
 46670                           	psect	text190
 46671  001C84                     __ptext190:
 46672                           	opt callstack 0
 46673  001C84                     _TMR5_WriteTimer:
 46674                           	opt callstack 13
 46675                           
 46676                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 46677                           
 46678                           ; BSR set to: 0
 46679                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46680                           ;incstack = 0
 46681  001C84  A49A               	btfss	154,2,c	;volatile
 46682  001C86  D00F               	goto	l13934
 46683                           
 46684                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 46685  001C88  909A               	bcf	154,0,c	;volatile
 46686                           
 46687                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 46688                           ;stkvar	_timerVal @ sp[(0)+-2]
 46689  001C8A  0EFF               	movlw	255
 46690  001C8C  24E1               	addwf	fsr1l,w,c
 46691  001C8E  6ED9               	movwf	fsr2l,c
 46692  001C90  0EFF               	movlw	255
 46693  001C92  20E2               	addwfc	fsr1h,w,c
 46694  001C94  6EDA               	movwf	fsr2h,c
 46695  001C96  50DF               	movf	indf2,w,c
 46696  001C98  6E99               	movwf	153,c	;volatile
 46697                           
 46698                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 46699                           ;stkvar	_timerVal @ sp[(0)+-2]
 46700  001C9A  0EFE               	movlw	-2
 46701  001C9C  006F FF8F FF98     	movff	plusw1,16280	;volatile
 46702                           
 46703                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 46704  001CA2  809A               	bsf	154,0,c	;volatile
 46705                           
 46706                           ;mcc_generated_files/tmr5.c: 144:  } else {
 46707  001CA4  D00C               	goto	l1004
 46708  001CA6                     l13934:
 46709                           
 46710                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 46711                           ;stkvar	_timerVal @ sp[(0)+-2]
 46712  001CA6  0EFF               	movlw	255
 46713  001CA8  24E1               	addwf	fsr1l,w,c
 46714  001CAA  6ED9               	movwf	fsr2l,c
 46715  001CAC  0EFF               	movlw	255
 46716  001CAE  20E2               	addwfc	fsr1h,w,c
 46717  001CB0  6EDA               	movwf	fsr2h,c
 46718  001CB2  50DF               	movf	indf2,w,c
 46719  001CB4  6E99               	movwf	153,c	;volatile
 46720                           
 46721                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 46722                           ;stkvar	_timerVal @ sp[(0)+-2]
 46723  001CB6  0EFE               	movlw	-2
 46724  001CB8  006F FF8F FF98     	movff	plusw1,16280	;volatile
 46725  001CBE                     l1004:
 46726                           
 46727                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 46728  001CBE  52E5               	movf	postdec1,f,c
 46729  001CC0  52E5               	movf	postdec1,f,c
 46730  001CC2  0012               	return		;funcret
 46731  001CC4                     __end_of_TMR5_WriteTimer:
 46732                           	opt callstack 0
 46733                           
 46734 ;; *************** function _TMR5_CallBack *****************
 46735 ;; Defined at:
 46736 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 46737 ;; Parameters:    Size  Location     Type
 46738 ;;		None
 46739 ;; Auto vars:     Size  Location     Type
 46740 ;;		None
 46741 ;; Return value:  Size  Location     Type
 46742 ;;                  1  [STACK] void 
 46743 ;; Registers used:
 46744 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, tosl, prodl,
      + prodh
 46745 ;; Tracked objects:
 46746 ;;		On entry : 3F/0
 46747 ;;		On exit  : 0/0
 46748 ;;		Unchanged: 0/0
 46749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46754 ;;Total ram usage:        0 bytes
 46755 ;; Hardware stack levels used:    1
 46756 ;; Hardware stack levels required when called:    8
 46757 ;; This function calls:
 46758 ;;		Absolute function
 46759 ;;		_TMR5_DefaultInterruptHandler
 46760 ;; This function is called by:
 46761 ;;		_TMR5_ISR
 46762 ;; This function uses a reentrant model
 46763 ;;
 46764                           
 46765                           	psect	text191
 46766  0023D4                     __ptext191:
 46767                           	opt callstack 0
 46768  0023D4                     _TMR5_CallBack:
 46769                           	opt callstack 8
 46770                           
 46771                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 46772                           
 46773                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46774                           ;incstack = 0
 46775  0023D4  0100               	movlb	0	; () banked
 46776  0023D6  519B               	movf	_TMR5_InterruptHandler& (0+255),w,b
 46777  0023D8  119C               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 46778  0023DA  119D               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 46779  0023DC  B4D8               	btfsc	status,2,c
 46780  0023DE  0012               	return	
 46781                           
 46782                           ; BSR set to: 0
 46783                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 46784  0023E0  D801               	call	u1320_28
 46785  0023E2  0012               	return	
 46786  0023E4                     u1320_28:
 46787  0023E4  0005               	push	
 46788  0023E6  6EFA               	movwf	pclath,c
 46789  0023E8  519B               	movf	_TMR5_InterruptHandler& (0+255),w,b
 46790  0023EA  6EFD               	movwf	tosl,c
 46791  0023EC  519C               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 46792  0023EE  6EFE               	movwf	tosh,c
 46793  0023F0  519D               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 46794  0023F2  6EFF               	movwf	tosu,c
 46795  0023F4  50FA               	movf	pclath,w,c
 46796  0023F6  0012               	return		;indir
 46797  0023F8                     __end_of_TMR5_CallBack:
 46798                           	opt callstack 0
 46799                           
 46800 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 46801 ;; Defined at:
 46802 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 46803 ;; Parameters:    Size  Location     Type
 46804 ;;		None
 46805 ;; Auto vars:     Size  Location     Type
 46806 ;;		None
 46807 ;; Return value:  Size  Location     Type
 46808 ;;                  1  [STACK] void 
 46809 ;; Registers used:
 46810 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, prodl, prodh
 46811 ;; Tracked objects:
 46812 ;;		On entry : 3F/0
 46813 ;;		On exit  : 0/0
 46814 ;;		Unchanged: 0/0
 46815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46820 ;;Total ram usage:        0 bytes
 46821 ;; Hardware stack levels used:    1
 46822 ;; Hardware stack levels required when called:    7
 46823 ;; This function calls:
 46824 ;;		_check_day_time
 46825 ;; This function is called by:
 46826 ;;		_TMR5_Initialize
 46827 ;;		_TMR5_CallBack
 46828 ;; This function uses a reentrant model
 46829 ;;
 46830                           
 46831                           	psect	text192
 46832  001DF0                     __ptext192:
 46833                           	opt callstack 0
 46834  001DF0                     _TMR5_DefaultInterruptHandler:
 46835                           	opt callstack 8
 46836                           
 46837                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 46838                           
 46839                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46840                           ;incstack = 0
 46841  001DF0  A0BE               	btfss	190,0,c	;volatile
 46842  001DF2  D002               	goto	u1246_20
 46843  001DF4  0E01               	movlw	1
 46844  001DF6  D001               	goto	u1246_26
 46845  001DF8                     u1246_20:
 46846  001DF8  0E00               	movlw	0
 46847  001DFA                     u1246_26:
 46848  001DFA  0AFF               	xorlw	255
 46849  001DFC  6E35               	movwf	(btemp+11)^0,c
 46850  001DFE  50BE               	movf	190,w,c	;volatile
 46851  001E00  1835               	xorwf	(btemp+11)^0,w,c
 46852  001E02  0BFE               	andlw	-2
 46853  001E04  1835               	xorwf	(btemp+11)^0,w,c
 46854  001E06  6EBE               	movwf	190,c	;volatile
 46855                           
 46856                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 46857  001E08  0E01               	movlw	1
 46858  001E0A  0102               	movlb	2	; () banked
 46859  001E0C  27B8               	addwf	(_V+177)& (0+255),f,b	;volatile
 46860  001E0E  0E00               	movlw	0
 46861  001E10  23B9               	addwfc	(_V+178)& (0+255),f,b	;volatile
 46862  001E12  23BA               	addwfc	(_V+179)& (0+255),f,b	;volatile
 46863  001E14  23BB               	addwfc	(_V+180)& (0+255),f,b	;volatile
 46864                           
 46865                           ; BSR set to: 2
 46866                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 46867  001E16  0E01               	movlw	1
 46868  001E18  2788               	addwf	(_V+129)& (0+255),f,b	;volatile
 46869  001E1A  0E00               	movlw	0
 46870  001E1C  2389               	addwfc	(_V+130)& (0+255),f,b	;volatile
 46871  001E1E  238A               	addwfc	(_V+131)& (0+255),f,b	;volatile
 46872  001E20  238B               	addwfc	(_V+132)& (0+255),f,b	;volatile
 46873                           
 46874                           ; BSR set to: 2
 46875                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 46876  001E22  EC08  F0CE         	call	_check_day_time	;wreg free
 46877                           
 46878                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 46879  001E26  0012               	return		;funcret
 46880  001E28                     __end_of_TMR5_DefaultInterruptHandler:
 46881                           	opt callstack 0
 46882                           
 46883 ;; *************** function _check_day_time *****************
 46884 ;; Defined at:
 46885 ;;		line 167 in file "mbmc.c"
 46886 ;; Parameters:    Size  Location     Type
 46887 ;;		None
 46888 ;; Auto vars:     Size  Location     Type
 46889 ;;  light           4  [STACK] float 
 46890 ;; Return value:  Size  Location     Type
 46891 ;;                  1  [STACK] _Bool 
 46892 ;; Registers used:
 46893 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, prodl, prodh
 46894 ;; Tracked objects:
 46895 ;;		On entry : 3F/2
 46896 ;;		On exit  : 0/0
 46897 ;;		Unchanged: 0/0
 46898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46903 ;;Total ram usage:        0 bytes
 46904 ;; Hardware stack levels used:    1
 46905 ;; Hardware stack levels required when called:    6
 46906 ;; This function calls:
 46907 ;;		___flge
 46908 ;;		_conv_raw_result
 46909 ;;		_get_ac_charger_relay
 46910 ;;		_set_ac_charger_relay
 46911 ;;		_time
 46912 ;; This function is called by:
 46913 ;;		_TMR5_DefaultInterruptHandler
 46914 ;; This function uses a reentrant model
 46915 ;;
 46916                           
 46917                           	psect	text193
 46918  019C10                     __ptext193:
 46919                           	opt callstack 0
 46920  019C10                     _check_day_time:
 46921                           	opt callstack 0
 46922                           
 46923                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46924  019C10  52E6               	movf	postinc1,f,c
 46925  019C12  52E6               	movf	postinc1,f,c
 46926  019C14  52E6               	movf	postinc1,f,c
 46927  019C16  52E6               	movf	postinc1,f,c
 46928                           
 46929                           ;mbmc.c: 169:  static uint8_t day_delay = 0;;mbmc.c: 170:  float light;;mbmc.c: 172:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 46930                           
 46931                           ;incstack = 0
 46932  019C18  0E00               	movlw	0
 46933  019C1A  6EE6               	movwf	postinc1,c
 46934  019C1C  0E0D               	movlw	13
 46935  019C1E  6EE6               	movwf	postinc1,c
 46936  019C20  EC26  F0C3         	call	_conv_raw_result	;wreg free
 46937                           
 46938                           ;stkvar	_light @ sp[(-4)+0]
 46939  019C24  0EFC               	movlw	-4
 46940  019C26  0060  F0AB  FFE3   	movff	btemp,plusw1
 46941  019C2C  0EFD               	movlw	-3
 46942  019C2E  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 46943  019C34  0EFE               	movlw	-2
 46944  019C36  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 46945  019C3C  0EFF               	movlw	-1
 46946  019C3E  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 46947                           
 46948                           ;mbmc.c: 176:  if (C.day_update) {
 46949  019C44  EE22  F237         	lfsr	2,_C+312	;volatile
 46950  019C48  50DE               	movf	postinc2,w,c
 46951  019C4A  10DE               	iorwf	postinc2,w,c
 46952  019C4C  10DE               	iorwf	postinc2,w,c
 46953  019C4E  10DE               	iorwf	postinc2,w,c
 46954  019C50  B4D8               	btfsc	status,2,c
 46955  019C52  D068               	goto	l12680
 46956                           
 46957                           ;mbmc.c: 177:   if (time(((void*)0)) >= C.day_update) {
 46958  019C54  0062  F8DC  F032   	movff	_C+312,btemp+8	;volatile
 46959  019C5A  0062  F8E0  F033   	movff	_C+313,btemp+9	;volatile
 46960  019C60  0062  F8E4  F034   	movff	_C+314,btemp+10	;volatile
 46961  019C66  0062  F8E8  F035   	movff	_C+315,btemp+11	;volatile
 46962  019C6C  5032               	movf	(btemp+8)^0,w,c
 46963  019C6E  6E3A               	movwf	(btemp+16)^0,c
 46964  019C70  5033               	movf	(btemp+9)^0,w,c
 46965  019C72  6E3B               	movwf	(btemp+17)^0,c
 46966  019C74  5034               	movf	(btemp+10)^0,w,c
 46967  019C76  6E3C               	movwf	(btemp+18)^0,c
 46968  019C78  5035               	movf	(btemp+11)^0,w,c
 46969  019C7A  6E3D               	movwf	(btemp+19)^0,c
 46970  019C7C  6A3E               	clrf	(btemp+20)^0,c
 46971  019C7E  6A3F               	clrf	(btemp+21)^0,c
 46972  019C80  6A40               	clrf	(btemp+22)^0,c
 46973  019C82  6A41               	clrf	(btemp+23)^0,c
 46974  019C84  0E00               	movlw	0
 46975  019C86  6EE6               	movwf	postinc1,c
 46976  019C88  0E00               	movlw	0
 46977  019C8A  6EE6               	movwf	postinc1,c
 46978  019C8C  EC25  F00B         	call	_time	;wreg free
 46979  019C90  52E5               	movf	postdec1,f,c
 46980  019C92  006F FF9C  F049    	movff	indf1,btemp+31
 46981  019C98  52E5               	movf	postdec1,f,c
 46982  019C9A  006F FF9C  F048    	movff	indf1,btemp+30
 46983  019CA0  52E5               	movf	postdec1,f,c
 46984  019CA2  006F FF9C  F047    	movff	indf1,btemp+29
 46985  019CA8  52E5               	movf	postdec1,f,c
 46986  019CAA  006F FF9C  F046    	movff	indf1,btemp+28
 46987  019CB0  52E5               	movf	postdec1,f,c
 46988  019CB2  006F FF9C  F045    	movff	indf1,btemp+27
 46989  019CB8  52E5               	movf	postdec1,f,c
 46990  019CBA  006F FF9C  F044    	movff	indf1,btemp+26
 46991  019CC0  52E5               	movf	postdec1,f,c
 46992  019CC2  006F FF9C  F043    	movff	indf1,btemp+25
 46993  019CC8  52E5               	movf	postdec1,f,c
 46994  019CCA  006F FF9C  F042    	movff	indf1,btemp+24
 46995  019CD0  503A               	movf	(btemp+16)^0,w,c
 46996  019CD2  5C42               	subwf	(btemp+24)^0,w,c
 46997  019CD4  503B               	movf	(btemp+17)^0,w,c
 46998  019CD6  5843               	subwfb	(btemp+25)^0,w,c
 46999  019CD8  503C               	movf	(btemp+18)^0,w,c
 47000  019CDA  5844               	subwfb	(btemp+26)^0,w,c
 47001  019CDC  503D               	movf	(btemp+19)^0,w,c
 47002  019CDE  5845               	subwfb	(btemp+27)^0,w,c
 47003  019CE0  503E               	movf	(btemp+20)^0,w,c
 47004  019CE2  5846               	subwfb	(btemp+28)^0,w,c
 47005  019CE4  503F               	movf	(btemp+21)^0,w,c
 47006  019CE6  5847               	subwfb	(btemp+29)^0,w,c
 47007  019CE8  5040               	movf	(btemp+22)^0,w,c
 47008  019CEA  5848               	subwfb	(btemp+30)^0,w,c
 47009  019CEC  5049               	movf	(btemp+31)^0,w,c
 47010  019CEE  0A80               	xorlw	128
 47011  019CF0  6E2A               	movwf	btemp^0,c
 47012  019CF2  5041               	movf	(btemp+23)^0,w,c
 47013  019CF4  0A80               	xorlw	128
 47014  019CF6  582A               	subwfb	btemp^0,w,c
 47015  019CF8  A0D8               	btfss	status,0,c
 47016  019CFA  D014               	goto	l12680
 47017                           
 47018                           ; BSR set to: 57
 47019                           ;mbmc.c: 178:    C.day_update = 0;
 47020  019CFC  0E00               	movlw	0
 47021  019CFE  006F FFA0  FA37    	movff	wreg,_C+312	;volatile
 47022  019D04  0E00               	movlw	0
 47023  019D06  006F FFA0  FA38    	movff	wreg,_C+313	;volatile
 47024  019D0C  0E00               	movlw	0
 47025  019D0E  006F FFA0  FA39    	movff	wreg,_C+314	;volatile
 47026  019D14  0E00               	movlw	0
 47027  019D16  006F FFA0  FA3A    	movff	wreg,_C+315	;volatile
 47028                           
 47029                           ;mbmc.c: 179:    C.dupdate = 1;
 47030  019D1C  0E01               	movlw	1
 47031  019D1E  006F FFA0  FA2E    	movff	wreg,_C+303	;volatile
 47032  019D24                     l12680:
 47033                           
 47034                           ;mbmc.c: 183:  if (!day_delay++ && V.system_stable) {
 47035  019D24  2A51               	incf	check_day_time@day_delay^0,f,c
 47036  019D26  0451               	decf	check_day_time@day_delay^0,w,c
 47037  019D28  A4D8               	btfss	status,2,c
 47038  019D2A  D123               	goto	l2203
 47039  019D2C  0102               	movlb	2	; () banked
 47040  019D2E  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 47041  019D30  B4D8               	btfsc	status,2,c
 47042  019D32  D11F               	goto	l2203
 47043                           
 47044                           ; BSR set to: 2
 47045                           ;mbmc.c: 184:   if (C.soc > 3) {
 47046  019D34  EE22  F1B5         	lfsr	2,_C+182	;volatile
 47047  019D38  0E01               	movlw	1
 47048  019D3A  50DB               	movf	plusw2,w,c
 47049  019D3C  E104               	bnz	u1211_20
 47050  019D3E  0E04               	movlw	4
 47051  019D40  5CDE               	subwf	postinc2,w,c
 47052  019D42  A0D8               	btfss	status,0,c
 47053  019D44  D0ED               	goto	l12714
 47054  019D46                     u1211_20:
 47055                           
 47056                           ; BSR set to: 2
 47057                           ;mbmc.c: 185:    if (!C.day) {
 47058  019D46  EE22  F22D         	lfsr	2,_C+302	;volatile
 47059  019D4A  50DF               	movf	indf2,w,c
 47060  019D4C  A4D8               	btfss	status,2,c
 47061  019D4E  D065               	goto	l12700
 47062                           
 47063                           ; BSR set to: 2
 47064                           ;mbmc.c: 186:     if (light > 22.0) {
 47065                           ;stkvar	_light @ sp[(-4)+0]
 47066  019D50  0EFC               	movlw	-4
 47067  019D52  006F FF8F FFE6     	movff	plusw1,postinc1
 47068  019D58  006F FF8F FFE6     	movff	plusw1,postinc1
 47069  019D5E  006F FF8F FFE6     	movff	plusw1,postinc1
 47070  019D64  006F FF8F FFE6     	movff	plusw1,postinc1
 47071  019D6A  0E00               	movlw	0
 47072  019D6C  6EE6               	movwf	postinc1,c
 47073  019D6E  0E00               	movlw	0
 47074  019D70  6EE6               	movwf	postinc1,c
 47075  019D72  0EB0               	movlw	176
 47076  019D74  6EE6               	movwf	postinc1,c
 47077  019D76  0E41               	movlw	65
 47078  019D78  6EE6               	movwf	postinc1,c
 47079  019D7A  EC49  F0F3         	call	___flge	;wreg free
 47080  019D7E  B02A               	btfsc	btemp& (0+255),0,c
 47081  019D80  D0F8               	goto	l2203
 47082                           
 47083                           ;mbmc.c: 187:      C.day = 1;
 47084  019D82  0E01               	movlw	1
 47085  019D84  006F FFA0  FA2D    	movff	wreg,_C+302	;volatile
 47086                           
 47087                           ;mbmc.c: 188:      C.day_start = time(((void*)0));
 47088  019D8A  0E00               	movlw	0
 47089  019D8C  6EE6               	movwf	postinc1,c
 47090  019D8E  0E00               	movlw	0
 47091  019D90  6EE6               	movwf	postinc1,c
 47092  019D92  EC25  F00B         	call	_time	;wreg free
 47093  019D96  52E5               	movf	postdec1,f,c
 47094  019D98  006F FF9C  F041    	movff	indf1,btemp+23
 47095  019D9E  52E5               	movf	postdec1,f,c
 47096  019DA0  006F FF9C  F040    	movff	indf1,btemp+22
 47097  019DA6  52E5               	movf	postdec1,f,c
 47098  019DA8  006F FF9C  F03F    	movff	indf1,btemp+21
 47099  019DAE  52E5               	movf	postdec1,f,c
 47100  019DB0  006F FF9C  F03E    	movff	indf1,btemp+20
 47101  019DB6  52E5               	movf	postdec1,f,c
 47102  019DB8  006F FF9C  F03D    	movff	indf1,btemp+19
 47103  019DBE  52E5               	movf	postdec1,f,c
 47104  019DC0  006F FF9C  F03C    	movff	indf1,btemp+18
 47105  019DC6  52E5               	movf	postdec1,f,c
 47106  019DC8  006F FF9C  F03B    	movff	indf1,btemp+17
 47107  019DCE  52E5               	movf	postdec1,f,c
 47108  019DD0  006F FF9C  F03A    	movff	indf1,btemp+16
 47109  019DD6  0060  F0E8  F032   	movff	btemp+16,btemp+8
 47110  019DDC  0060  F0EC  F033   	movff	btemp+17,btemp+9
 47111  019DE2  0060  F0F0  F034   	movff	btemp+18,btemp+10
 47112  019DE8  0060  F0F4  F035   	movff	btemp+19,btemp+11
 47113  019DEE  0060  F0C8  FA2F   	movff	btemp+8,_C+304	;volatile
 47114  019DF4  0060  F0CC  FA30   	movff	btemp+9,_C+305	;volatile
 47115  019DFA  0060  F0D0  FA31   	movff	btemp+10,_C+306	;volatile
 47116  019E00  0060  F0D4  FA32   	movff	btemp+11,_C+307	;volatile
 47117                           
 47118                           ; BSR set to: 57
 47119                           ;mbmc.c: 189:      if (get_ac_charger_relay()) {
 47120  019E06  EC78  F013         	call	_get_ac_charger_relay	;wreg free
 47121  019E0A  502A               	movf	btemp^0,w,c
 47122  019E0C  B4D8               	btfsc	status,2,c
 47123  019E0E  D0B5               	goto	l2199
 47124                           
 47125                           ;mbmc.c: 190:       set_ac_charger_relay(0);
 47126  019E10  0E00               	movlw	0
 47127  019E12  6EE6               	movwf	postinc1,c
 47128  019E14  EC5B  F013         	call	_set_ac_charger_relay	;wreg free
 47129  019E18  D0B0               	goto	l2199
 47130  019E1A                     l12700:
 47131                           
 47132                           ; BSR set to: 2
 47133                           ;mbmc.c: 195:     if (light < 12.0) {
 47134  019E1A  0E00               	movlw	0
 47135  019E1C  6EE6               	movwf	postinc1,c
 47136  019E1E  0E00               	movlw	0
 47137  019E20  6EE6               	movwf	postinc1,c
 47138  019E22  0E40               	movlw	64
 47139  019E24  6EE6               	movwf	postinc1,c
 47140  019E26  0E41               	movlw	65
 47141  019E28  6EE6               	movwf	postinc1,c
 47142                           
 47143                           ;stkvar	_light @ sp[(-8)+0]
 47144  019E2A  0EF8               	movlw	-8
 47145  019E2C  006F FF8F FFE6     	movff	plusw1,postinc1
 47146  019E32  006F FF8F FFE6     	movff	plusw1,postinc1
 47147  019E38  006F FF8F FFE6     	movff	plusw1,postinc1
 47148  019E3E  006F FF8F FFE6     	movff	plusw1,postinc1
 47149  019E44  EC49  F0F3         	call	___flge	;wreg free
 47150  019E48  B02A               	btfsc	btemp& (0+255),0,c
 47151  019E4A  D093               	goto	l2203
 47152                           
 47153                           ;mbmc.c: 196:      C.day = 0;
 47154  019E4C  0E00               	movlw	0
 47155  019E4E  006F FFA0  FA2D    	movff	wreg,_C+302	;volatile
 47156                           
 47157                           ;mbmc.c: 197:      C.day_end = time(((void*)0));
 47158  019E54  0E00               	movlw	0
 47159  019E56  6EE6               	movwf	postinc1,c
 47160  019E58  0E00               	movlw	0
 47161  019E5A  6EE6               	movwf	postinc1,c
 47162  019E5C  EC25  F00B         	call	_time	;wreg free
 47163  019E60  52E5               	movf	postdec1,f,c
 47164  019E62  006F FF9C  F041    	movff	indf1,btemp+23
 47165  019E68  52E5               	movf	postdec1,f,c
 47166  019E6A  006F FF9C  F040    	movff	indf1,btemp+22
 47167  019E70  52E5               	movf	postdec1,f,c
 47168  019E72  006F FF9C  F03F    	movff	indf1,btemp+21
 47169  019E78  52E5               	movf	postdec1,f,c
 47170  019E7A  006F FF9C  F03E    	movff	indf1,btemp+20
 47171  019E80  52E5               	movf	postdec1,f,c
 47172  019E82  006F FF9C  F03D    	movff	indf1,btemp+19
 47173  019E88  52E5               	movf	postdec1,f,c
 47174  019E8A  006F FF9C  F03C    	movff	indf1,btemp+18
 47175  019E90  52E5               	movf	postdec1,f,c
 47176  019E92  006F FF9C  F03B    	movff	indf1,btemp+17
 47177  019E98  52E5               	movf	postdec1,f,c
 47178  019E9A  006F FF9C  F03A    	movff	indf1,btemp+16
 47179  019EA0  0060  F0E8  F032   	movff	btemp+16,btemp+8
 47180  019EA6  0060  F0EC  F033   	movff	btemp+17,btemp+9
 47181  019EAC  0060  F0F0  F034   	movff	btemp+18,btemp+10
 47182  019EB2  0060  F0F4  F035   	movff	btemp+19,btemp+11
 47183  019EB8  0060  F0C8  FA33   	movff	btemp+8,_C+308	;volatile
 47184  019EBE  0060  F0CC  FA34   	movff	btemp+9,_C+309	;volatile
 47185  019EC4  0060  F0D0  FA35   	movff	btemp+10,_C+310	;volatile
 47186  019ECA  0060  F0D4  FA36   	movff	btemp+11,_C+311	;volatile
 47187                           
 47188                           ; BSR set to: 57
 47189                           ;mbmc.c: 198:      C.day_update = C.day_end + 600;
 47190  019ED0  EE22  F233         	lfsr	2,_C+308	;volatile
 47191  019ED4  0E58               	movlw	88
 47192  019ED6  24DE               	addwf	postinc2,w,c
 47193  019ED8  6E32               	movwf	(btemp+8)^0,c
 47194  019EDA  0E02               	movlw	2
 47195  019EDC  20DE               	addwfc	postinc2,w,c
 47196  019EDE  6E33               	movwf	(btemp+9)^0,c
 47197  019EE0  0E00               	movlw	0
 47198  019EE2  20DE               	addwfc	postinc2,w,c
 47199  019EE4  6E34               	movwf	(btemp+10)^0,c
 47200  019EE6  0E00               	movlw	0
 47201  019EE8  20DE               	addwfc	postinc2,w,c
 47202  019EEA  6E35               	movwf	(btemp+11)^0,c
 47203  019EEC  0060  F0C8  FA37   	movff	btemp+8,_C+312	;volatile
 47204  019EF2  0060  F0CC  FA38   	movff	btemp+9,_C+313	;volatile
 47205  019EF8  0060  F0D0  FA39   	movff	btemp+10,_C+314	;volatile
 47206  019EFE  0060  F0D4  FA3A   	movff	btemp+11,_C+315	;volatile
 47207                           
 47208                           ; BSR set to: 57
 47209                           ;mbmc.c: 202:      if ((C.soc < 20)) {
 47210  019F04  EE22  F1B5         	lfsr	2,_C+182	;volatile
 47211  019F08  0E01               	movlw	1
 47212  019F0A  50DB               	movf	plusw2,w,c
 47213  019F0C  E136               	bnz	l2199
 47214  019F0E  0E14               	movlw	20
 47215  019F10  5CDE               	subwf	postinc2,w,c
 47216  019F12  B0D8               	btfsc	status,0,c
 47217  019F14  D032               	goto	l2199
 47218                           
 47219                           ; BSR set to: 57
 47220                           ;mbmc.c: 203:       set_ac_charger_relay(1);
 47221  019F16  0E01               	movlw	1
 47222  019F18  6EE6               	movwf	postinc1,c
 47223  019F1A  EC5B  F013         	call	_set_ac_charger_relay	;wreg free
 47224  019F1E  D02D               	goto	l2199
 47225  019F20                     l12714:
 47226                           
 47227                           ; BSR set to: 2
 47228                           ;mbmc.c: 209:    if (C.p_pv < C.p_inverter) {
 47229  019F20  EE22  F177         	lfsr	2,_C+120	;volatile
 47230  019F24  006F FF7B FFE6     	movff	postinc2,postinc1
 47231  019F2A  006F FF7B FFE6     	movff	postinc2,postinc1
 47232  019F30  006F FF7B FFE6     	movff	postinc2,postinc1
 47233  019F36  006F FF7B FFE6     	movff	postinc2,postinc1
 47234  019F3C  EE22  F17B         	lfsr	2,_C+124	;volatile
 47235  019F40  006F FF7B FFE6     	movff	postinc2,postinc1
 47236  019F46  006F FF7B FFE6     	movff	postinc2,postinc1
 47237  019F4C  006F FF7B FFE6     	movff	postinc2,postinc1
 47238  019F52  006F FF7B FFE6     	movff	postinc2,postinc1
 47239  019F58  EC49  F0F3         	call	___flge	;wreg free
 47240  019F5C  B02A               	btfsc	btemp& (0+255),0,c
 47241  019F5E  D009               	goto	l2203
 47242                           
 47243                           ;mbmc.c: 210:     if (!get_ac_charger_relay()) {
 47244  019F60  EC78  F013         	call	_get_ac_charger_relay	;wreg free
 47245  019F64  502A               	movf	btemp^0,w,c
 47246  019F66  A4D8               	btfss	status,2,c
 47247  019F68  D004               	goto	l2203
 47248                           
 47249                           ;mbmc.c: 211:      set_ac_charger_relay(1);
 47250  019F6A  0E01               	movlw	1
 47251  019F6C  6EE6               	movwf	postinc1,c
 47252  019F6E  EC5B  F013         	call	_set_ac_charger_relay	;wreg free
 47253  019F72                     l2203:
 47254                           
 47255                           ;mbmc.c: 216:  if (day_delay >= 240)
 47256  019F72  0EEF               	movlw	239
 47257  019F74  6451               	cpfsgt	check_day_time@day_delay^0,c
 47258  019F76  D001               	goto	l2199
 47259                           
 47260                           ;mbmc.c: 217:   day_delay = 0;
 47261  019F78  6A51               	clrf	check_day_time@day_delay^0,c
 47262  019F7A                     l2199:
 47263                           
 47264                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 47265  019F7A  52E5               	movf	postdec1,f,c
 47266  019F7C  52E5               	movf	postdec1,f,c
 47267  019F7E  52E5               	movf	postdec1,f,c
 47268  019F80  52E5               	movf	postdec1,f,c
 47269  019F82  0012               	return		;funcret
 47270  019F84                     __end_of_check_day_time:
 47271                           	opt callstack 0
 47272                           
 47273 ;; *************** function _set_ac_charger_relay *****************
 47274 ;; Defined at:
 47275 ;;		line 136 in file "mbmc.c"
 47276 ;; Parameters:    Size  Location     Type
 47277 ;;  mode            1  [STACK] const _Bool 
 47278 ;; Auto vars:     Size  Location     Type
 47279 ;;		None
 47280 ;; Return value:  Size  Location     Type
 47281 ;;                  1  [STACK] void 
 47282 ;; Registers used:
 47283 ;;		wreg, fsr1l, fsr1h
 47284 ;; Tracked objects:
 47285 ;;		On entry : 0/39
 47286 ;;		On exit  : 0/0
 47287 ;;		Unchanged: 0/0
 47288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47293 ;;Total ram usage:        0 bytes
 47294 ;; Hardware stack levels used:    1
 47295 ;; Hardware stack levels required when called:    3
 47296 ;; This function calls:
 47297 ;;		Nothing
 47298 ;; This function is called by:
 47299 ;;		_check_day_time
 47300 ;; This function uses a reentrant model
 47301 ;;
 47302                           
 47303                           	psect	text194
 47304  0026B6                     __ptext194:
 47305                           	opt callstack 0
 47306  0026B6                     _set_ac_charger_relay:
 47307                           	opt callstack 10
 47308                           
 47309                           ;mbmc.c: 136: void set_ac_charger_relay(const _Bool mode);mbmc.c: 137: {;mbmc.c: 138:  L
      +                          ATDbits.LATD6 = mode;
 47310                           ;stkvar	_mode @ sp[(0)+-1]
 47311                           
 47312                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47313                           ;incstack = 0
 47314  0026B6  0EFF               	movlw	-1
 47315  0026B8  B0E3               	btfsc	plusw1,0,c
 47316  0026BA  D002               	bra	u1171_25
 47317  0026BC  9CBD               	bcf	189,6,c	;volatile
 47318  0026BE  D001               	bra	u1171_26
 47319  0026C0                     u1171_25:
 47320  0026C0  8CBD               	bsf	189,6,c	;volatile
 47321  0026C2                     u1171_26:
 47322                           
 47323                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 47324  0026C2  52E5               	movf	postdec1,f,c
 47325  0026C4  0012               	return		;funcret
 47326  0026C6                     __end_of_set_ac_charger_relay:
 47327                           	opt callstack 0
 47328                           
 47329 ;; *************** function _get_ac_charger_relay *****************
 47330 ;; Defined at:
 47331 ;;		line 141 in file "mbmc.c"
 47332 ;; Parameters:    Size  Location     Type
 47333 ;;		None
 47334 ;; Auto vars:     Size  Location     Type
 47335 ;;		None
 47336 ;; Return value:  Size  Location     Type
 47337 ;;                  1  [STACK] _Bool 
 47338 ;; Registers used:
 47339 ;;		btemp
 47340 ;; Tracked objects:
 47341 ;;		On entry : 0/39
 47342 ;;		On exit  : 0/0
 47343 ;;		Unchanged: 0/0
 47344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47349 ;;Total ram usage:        0 bytes
 47350 ;; Hardware stack levels used:    1
 47351 ;; Hardware stack levels required when called:    3
 47352 ;; This function calls:
 47353 ;;		Nothing
 47354 ;; This function is called by:
 47355 ;;		_check_day_time
 47356 ;;		_calc_bsoc
 47357 ;; This function uses a reentrant model
 47358 ;;
 47359                           
 47360                           	psect	text195
 47361  0026F0                     __ptext195:
 47362                           	opt callstack 0
 47363  0026F0                     _get_ac_charger_relay:
 47364                           	opt callstack 11
 47365                           
 47366                           ;mbmc.c: 143:  return LATDbits.LATD6;
 47367                           
 47368                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47369                           ;incstack = 0
 47370  0026F0  ACBD               	btfss	189,6,c	;volatile
 47371  0026F2  D003               	goto	u1235_20
 47372  0026F4  6A2A               	clrf	btemp^0,c
 47373  0026F6  2A2A               	incf	btemp^0,f,c
 47374  0026F8  0012               	return	
 47375  0026FA                     u1235_20:
 47376  0026FA  6A2A               	clrf	btemp^0,c
 47377                           
 47378                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 47379  0026FC  0012               	return		;funcret
 47380  0026FE                     __end_of_get_ac_charger_relay:
 47381                           	opt callstack 0
 47382                           
 47383 ;; *************** function _TMR3_ISR *****************
 47384 ;; Defined at:
 47385 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 47386 ;; Parameters:    Size  Location     Type
 47387 ;;		None
 47388 ;; Auto vars:     Size  Location     Type
 47389 ;;		None
 47390 ;; Return value:  Size  Location     Type
 47391 ;;                  1    wreg      void 
 47392 ;; Registers used:
 47393 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 47394 ;; Tracked objects:
 47395 ;;		On entry : 0/0
 47396 ;;		On exit  : 3F/0
 47397 ;;		Unchanged: 0/0
 47398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47401 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47402 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47403 ;;Total ram usage:       25 bytes
 47404 ;; Hardware stack levels used:    1
 47405 ;; Hardware stack levels required when called:   14
 47406 ;; This function calls:
 47407 ;;		_TMR3_CallBack
 47408 ;;		_TMR3_WriteTimer
 47409 ;; This function is called by:
 47410 ;;		Interrupt level 1
 47411 ;; This function uses a non-reentrant model
 47412 ;;
 47413                           
 47414                           	psect	text196
 47415  01E7F4                     __ptext196:
 47416                           	opt callstack 0
 47417  01E7F4                     _TMR3_ISR:
 47418                           	opt callstack 3
 47419                           
 47420                           ;incstack = 0
 47421  01E7F4  006F FF60  F0E5    	movff	status,??_TMR3_ISR
 47422  01E7FA  006F FFD8  F0E6    	movff	tblptrl,??_TMR3_ISR+1
 47423  01E800  006F FFDC  F0E7    	movff	tblptrh,??_TMR3_ISR+2
 47424  01E806  006F FFE0  F0E8    	movff	tblptru,??_TMR3_ISR+3
 47425  01E80C  006F FFD4  F0E9    	movff	tablat,??_TMR3_ISR+4
 47426  01E812  0060  F0A8  F0EA   	movff	btemp,??_TMR3_ISR+5
 47427  01E818  0060  F0AC  F0EB   	movff	btemp+1,??_TMR3_ISR+6
 47428  01E81E  0060  F0B0  F0EC   	movff	btemp+2,??_TMR3_ISR+7
 47429  01E824  0060  F0B4  F0ED   	movff	btemp+3,??_TMR3_ISR+8
 47430  01E82A  0060  F0B8  F0EE   	movff	btemp+4,??_TMR3_ISR+9
 47431  01E830  0060  F0BC  F0EF   	movff	btemp+5,??_TMR3_ISR+10
 47432  01E836  0060  F0C0  F0F0   	movff	btemp+6,??_TMR3_ISR+11
 47433  01E83C  0060  F0C4  F0F1   	movff	btemp+7,??_TMR3_ISR+12
 47434  01E842  0060  F0C8  F0F2   	movff	btemp+8,??_TMR3_ISR+13
 47435  01E848  0060  F0CC  F0F3   	movff	btemp+9,??_TMR3_ISR+14
 47436  01E84E  0060  F0D0  F0F4   	movff	btemp+10,??_TMR3_ISR+15
 47437  01E854  0060  F0D4  F0F5   	movff	btemp+11,??_TMR3_ISR+16
 47438  01E85A  0060  F0E8  F0F6   	movff	btemp+16,??_TMR3_ISR+17
 47439  01E860  0060  F0EC  F0F7   	movff	btemp+17,??_TMR3_ISR+18
 47440  01E866  0060  F0F0  F0F8   	movff	btemp+18,??_TMR3_ISR+19
 47441  01E86C  0060  F0F4  F0F9   	movff	btemp+19,??_TMR3_ISR+20
 47442  01E872  0060  F0F8  F0FA   	movff	btemp+20,??_TMR3_ISR+21
 47443  01E878  0060  F0FC  F0FB   	movff	btemp+21,??_TMR3_ISR+22
 47444  01E87E  0060  F100  F0FC   	movff	btemp+22,??_TMR3_ISR+23
 47445  01E884  0060  F104  F0FD   	movff	btemp+23,??_TMR3_ISR+24
 47446  01E88A  EE16  F196         	lfsr	1,___intlo_sp
 47447                           
 47448                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 47449  01E88E  0139               	movlb	57	; () banked
 47450  01E890  9DA6               	bcf	166,6,b	;volatile
 47451                           
 47452                           ; BSR set to: 57
 47453                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 47454  01E892  0060  F303  FFE6   	movff	_timer3ReloadVal,postinc1
 47455  01E898  0060  F307  FFE6   	movff	_timer3ReloadVal+1,postinc1
 47456  01E89E  EC62  F00E         	call	_TMR3_WriteTimer	;wreg free
 47457                           
 47458                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 47459  01E8A2  0100               	movlb	0	; () banked
 47460  01E8A4  4BBE               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 47461  01E8A6  2BBF               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 47462  01E8A8  51BF               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 47463  01E8AA  E104               	bnz	i1u1696_20
 47464  01E8AC  0E28               	movlw	40
 47465  01E8AE  5DBE               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 47466  01E8B0  A0D8               	btfss	status,0,c
 47467  01E8B2  D005               	goto	i1l1209
 47468  01E8B4                     i1u1696_20:
 47469                           
 47470                           ; BSR set to: 0
 47471                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 47472  01E8B4  ECFC  F011         	call	_TMR3_CallBack	;wreg free
 47473                           
 47474                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 47475  01E8B8  0100               	movlb	0	; () banked
 47476  01E8BA  6BBE               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 47477  01E8BC  6BBF               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 47478  01E8BE                     i1l1209:
 47479                           
 47480                           ; BSR set to: 0
 47481  01E8BE  0060  F3F4  F041   	movff	??_TMR3_ISR+24,btemp+23
 47482  01E8C4  0060  F3F0  F040   	movff	??_TMR3_ISR+23,btemp+22
 47483  01E8CA  0060  F3EC  F03F   	movff	??_TMR3_ISR+22,btemp+21
 47484  01E8D0  0060  F3E8  F03E   	movff	??_TMR3_ISR+21,btemp+20
 47485  01E8D6  0060  F3E4  F03D   	movff	??_TMR3_ISR+20,btemp+19
 47486  01E8DC  0060  F3E0  F03C   	movff	??_TMR3_ISR+19,btemp+18
 47487  01E8E2  0060  F3DC  F03B   	movff	??_TMR3_ISR+18,btemp+17
 47488  01E8E8  0060  F3D8  F03A   	movff	??_TMR3_ISR+17,btemp+16
 47489  01E8EE  0060  F3D4  F035   	movff	??_TMR3_ISR+16,btemp+11
 47490  01E8F4  0060  F3D0  F034   	movff	??_TMR3_ISR+15,btemp+10
 47491  01E8FA  0060  F3CC  F033   	movff	??_TMR3_ISR+14,btemp+9
 47492  01E900  0060  F3C8  F032   	movff	??_TMR3_ISR+13,btemp+8
 47493  01E906  0060  F3C4  F031   	movff	??_TMR3_ISR+12,btemp+7
 47494  01E90C  0060  F3C0  F030   	movff	??_TMR3_ISR+11,btemp+6
 47495  01E912  0060  F3BC  F02F   	movff	??_TMR3_ISR+10,btemp+5
 47496  01E918  0060  F3B8  F02E   	movff	??_TMR3_ISR+9,btemp+4
 47497  01E91E  0060  F3B4  F02D   	movff	??_TMR3_ISR+8,btemp+3
 47498  01E924  0060  F3B0  F02C   	movff	??_TMR3_ISR+7,btemp+2
 47499  01E92A  0060  F3AC  F02B   	movff	??_TMR3_ISR+6,btemp+1
 47500  01E930  0060  F3A8  F02A   	movff	??_TMR3_ISR+5,btemp
 47501  01E936  0060  F3A7  FFF5   	movff	??_TMR3_ISR+4,tablat
 47502  01E93C  0060  F3A3  FFF8   	movff	??_TMR3_ISR+3,tblptru
 47503  01E942  0060  F39F  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 47504  01E948  0060  F39B  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 47505  01E94E  0060  F397  FFD8   	movff	??_TMR3_ISR,status
 47506  01E954  0011               	retfie		f
 47507  01E956                     __end_of_TMR3_ISR:
 47508                           	opt callstack 0
 47509                           
 47510 ;; *************** function _TMR3_WriteTimer *****************
 47511 ;; Defined at:
 47512 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 47513 ;; Parameters:    Size  Location     Type
 47514 ;;  timerVal        2  [STACK] unsigned short 
 47515 ;; Auto vars:     Size  Location     Type
 47516 ;;		None
 47517 ;; Return value:  Size  Location     Type
 47518 ;;                  1  [STACK] void 
 47519 ;; Registers used:
 47520 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 47521 ;; Tracked objects:
 47522 ;;		On entry : 3F/39
 47523 ;;		On exit  : 0/0
 47524 ;;		Unchanged: 0/0
 47525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47530 ;;Total ram usage:        0 bytes
 47531 ;; Hardware stack levels used:    1
 47532 ;; Hardware stack levels required when called:    3
 47533 ;; This function calls:
 47534 ;;		Nothing
 47535 ;; This function is called by:
 47536 ;;		_TMR3_ISR
 47537 ;; This function uses a reentrant model
 47538 ;;
 47539                           
 47540                           	psect	text197
 47541  001CC4                     __ptext197:
 47542                           	opt callstack 0
 47543  001CC4                     _TMR3_WriteTimer:
 47544                           	opt callstack 13
 47545                           
 47546                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 47547                           
 47548                           ; BSR set to: 0
 47549                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47550                           ;incstack = 0
 47551  001CC4  A4A6               	btfss	166,2,c	;volatile
 47552  001CC6  D00F               	goto	l13952
 47553                           
 47554                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 47555  001CC8  90A6               	bcf	166,0,c	;volatile
 47556                           
 47557                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 47558                           ;stkvar	_timerVal @ sp[(0)+-2]
 47559  001CCA  0EFF               	movlw	255
 47560  001CCC  24E1               	addwf	fsr1l,w,c
 47561  001CCE  6ED9               	movwf	fsr2l,c
 47562  001CD0  0EFF               	movlw	255
 47563  001CD2  20E2               	addwfc	fsr1h,w,c
 47564  001CD4  6EDA               	movwf	fsr2h,c
 47565  001CD6  50DF               	movf	indf2,w,c
 47566  001CD8  6EA5               	movwf	165,c	;volatile
 47567                           
 47568                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 47569                           ;stkvar	_timerVal @ sp[(0)+-2]
 47570  001CDA  0EFE               	movlw	-2
 47571  001CDC  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 47572                           
 47573                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 47574  001CE2  80A6               	bsf	166,0,c	;volatile
 47575                           
 47576                           ;mcc_generated_files/tmr3.c: 141:     }
 47577  001CE4  D00C               	goto	l1192
 47578  001CE6                     l13952:
 47579                           
 47580                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 47581                           ;stkvar	_timerVal @ sp[(0)+-2]
 47582  001CE6  0EFF               	movlw	255
 47583  001CE8  24E1               	addwf	fsr1l,w,c
 47584  001CEA  6ED9               	movwf	fsr2l,c
 47585  001CEC  0EFF               	movlw	255
 47586  001CEE  20E2               	addwfc	fsr1h,w,c
 47587  001CF0  6EDA               	movwf	fsr2h,c
 47588  001CF2  50DF               	movf	indf2,w,c
 47589  001CF4  6EA5               	movwf	165,c	;volatile
 47590                           
 47591                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 47592                           ;stkvar	_timerVal @ sp[(0)+-2]
 47593  001CF6  0EFE               	movlw	-2
 47594  001CF8  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 47595  001CFE                     l1192:
 47596                           
 47597                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 47598  001CFE  52E5               	movf	postdec1,f,c
 47599  001D00  52E5               	movf	postdec1,f,c
 47600  001D02  0012               	return		;funcret
 47601  001D04                     __end_of_TMR3_WriteTimer:
 47602                           	opt callstack 0
 47603                           
 47604 ;; *************** function _TMR3_CallBack *****************
 47605 ;; Defined at:
 47606 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 47607 ;; Parameters:    Size  Location     Type
 47608 ;;		None
 47609 ;; Auto vars:     Size  Location     Type
 47610 ;;		None
 47611 ;; Return value:  Size  Location     Type
 47612 ;;                  1  [STACK] void 
 47613 ;; Registers used:
 47614 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 47615 ;; Tracked objects:
 47616 ;;		On entry : 3F/0
 47617 ;;		On exit  : 0/0
 47618 ;;		Unchanged: 0/0
 47619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47624 ;;Total ram usage:        0 bytes
 47625 ;; Hardware stack levels used:    1
 47626 ;; Hardware stack levels required when called:   13
 47627 ;; This function calls:
 47628 ;;		Absolute function
 47629 ;;		_TMR3_DefaultInterruptHandler
 47630 ;;		_calc_bsoc
 47631 ;; This function is called by:
 47632 ;;		_TMR3_ISR
 47633 ;; This function uses a reentrant model
 47634 ;;
 47635                           
 47636                           	psect	text198
 47637  0023F8                     __ptext198:
 47638                           	opt callstack 0
 47639  0023F8                     _TMR3_CallBack:
 47640                           	opt callstack 3
 47641                           
 47642                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 47643                           
 47644                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47645                           ;incstack = 0
 47646  0023F8  0100               	movlb	0	; () banked
 47647  0023FA  5198               	movf	_TMR3_InterruptHandler& (0+255),w,b
 47648  0023FC  1199               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 47649  0023FE  119A               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 47650  002400  B4D8               	btfsc	status,2,c
 47651  002402  0012               	return	
 47652                           
 47653                           ; BSR set to: 0
 47654                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 47655  002404  D801               	call	u1674_28
 47656  002406  0012               	return	
 47657  002408                     u1674_28:
 47658  002408  0005               	push	
 47659  00240A  6EFA               	movwf	pclath,c
 47660  00240C  5198               	movf	_TMR3_InterruptHandler& (0+255),w,b
 47661  00240E  6EFD               	movwf	tosl,c
 47662  002410  5199               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 47663  002412  6EFE               	movwf	tosh,c
 47664  002414  519A               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 47665  002416  6EFF               	movwf	tosu,c
 47666  002418  50FA               	movf	pclath,w,c
 47667  00241A  0012               	return		;indir
 47668  00241C                     __end_of_TMR3_CallBack:
 47669                           	opt callstack 0
 47670                           
 47671 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 47672 ;; Defined at:
 47673 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 47674 ;; Parameters:    Size  Location     Type
 47675 ;;		None
 47676 ;; Auto vars:     Size  Location     Type
 47677 ;;		None
 47678 ;; Return value:  Size  Location     Type
 47679 ;;                  1  [STACK] void 
 47680 ;; Registers used:
 47681 ;;		None
 47682 ;; Tracked objects:
 47683 ;;		On entry : 3F/0
 47684 ;;		On exit  : 0/0
 47685 ;;		Unchanged: 0/0
 47686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47691 ;;Total ram usage:        0 bytes
 47692 ;; Hardware stack levels used:    1
 47693 ;; Hardware stack levels required when called:    3
 47694 ;; This function calls:
 47695 ;;		Nothing
 47696 ;; This function is called by:
 47697 ;;		_TMR3_Initialize
 47698 ;;		_TMR3_CallBack
 47699 ;; This function uses a reentrant model
 47700 ;;
 47701                           
 47702                           	psect	text199
 47703  0027AC                     __ptext199:
 47704                           	opt callstack 0
 47705  0027AC                     _TMR3_DefaultInterruptHandler:
 47706                           	opt callstack 12
 47707                           
 47708                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 47709                           
 47710                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47711                           ;incstack = 0
 47712  0027AC  0012               	return		;funcret
 47713  0027AE                     __end_of_TMR3_DefaultInterruptHandler:
 47714                           	opt callstack 0
 47715                           
 47716 ;; *************** function _calc_bsoc *****************
 47717 ;; Defined at:
 47718 ;;		line 39 in file "bsoc.c"
 47719 ;; Parameters:    Size  Location     Type
 47720 ;;		None
 47721 ;; Auto vars:     Size  Location     Type
 47722 ;;  adj             4  [STACK] float 
 47723 ;;  log_ptr         2  [STACK] PTR unsigned char 
 47724 ;;		 -> port_data(512), 
 47725 ;; Return value:  Size  Location     Type
 47726 ;;                  1  [STACK] void 
 47727 ;; Registers used:
 47728 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 47729 ;; Tracked objects:
 47730 ;;		On entry : 3F/0
 47731 ;;		On exit  : 6/2
 47732 ;;		Unchanged: 0/0
 47733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47738 ;;Total ram usage:        0 bytes
 47739 ;; Hardware stack levels used:    1
 47740 ;; Hardware stack levels required when called:   12
 47741 ;; This function calls:
 47742 ;;		_StartTimer
 47743 ;;		___asfladd
 47744 ;;		___fldiv
 47745 ;;		___flge
 47746 ;;		___flmul
 47747 ;;		___flneg
 47748 ;;		___fltol
 47749 ;;		_fabsf
 47750 ;;		_get_ac_charger_relay
 47751 ;;		_port_data_dma_ptr
 47752 ;;		_send_port_data_dma
 47753 ;;		_sprintf
 47754 ;;		_strlen
 47755 ;; This function is called by:
 47756 ;;		_init_bsoc
 47757 ;;		_TMR3_CallBack
 47758 ;; This function uses a reentrant model
 47759 ;;
 47760                           
 47761                           	psect	text200
 47762  014898                     __ptext200:
 47763                           	opt callstack 0
 47764  014898                     _calc_bsoc:
 47765                           	opt callstack 0
 47766                           
 47767                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47768  014898  0E06               	movlw	6
 47769  01489A  26E1               	addwf	fsr1l,f,c
 47770  01489C  0E00               	movlw	0
 47771  01489E  22E2               	addwfc	fsr1h,f,c
 47772                           
 47773                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 43:  float adj = 1.0;
 47774                           
 47775                           ;incstack = 0
 47776  0148A0  0E00               	movlw	0
 47777  0148A2  6E32               	movwf	(btemp+8)^0,c
 47778  0148A4  0E00               	movlw	0
 47779  0148A6  6E33               	movwf	(btemp+9)^0,c
 47780  0148A8  0E80               	movlw	128
 47781  0148AA  6E34               	movwf	(btemp+10)^0,c
 47782  0148AC  0E3F               	movlw	63
 47783  0148AE  6E35               	movwf	(btemp+11)^0,c
 47784                           
 47785                           ;stkvar	_adj @ sp[(-6)+0]
 47786  0148B0  0EFA               	movlw	-6
 47787  0148B2  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 47788  0148B8  0EFB               	movlw	-5
 47789  0148BA  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 47790  0148C0  0EFC               	movlw	-4
 47791  0148C2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 47792  0148C8  0EFD               	movlw	-3
 47793  0148CA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 47794  0148D0  82BE               	bsf	190,1,c	;volatile
 47795                           
 47796                           ;bsoc.c: 47:  C.dynamic_ah += (C.c_bat / 3600.0);
 47797  0148D2  0E00               	movlw	0
 47798  0148D4  6EE6               	movwf	postinc1,c
 47799  0148D6  0E00               	movlw	0
 47800  0148D8  6EE6               	movwf	postinc1,c
 47801  0148DA  0E61               	movlw	97
 47802  0148DC  6EE6               	movwf	postinc1,c
 47803  0148DE  0E45               	movlw	69
 47804  0148E0  6EE6               	movwf	postinc1,c
 47805  0148E2  EE22  F143         	lfsr	2,_C+68	;volatile
 47806  0148E6  006F FF7B FFE6     	movff	postinc2,postinc1
 47807  0148EC  006F FF7B FFE6     	movff	postinc2,postinc1
 47808  0148F2  006F FF7B FFE6     	movff	postinc2,postinc1
 47809  0148F8  006F FF7B FFE6     	movff	postinc2,postinc1
 47810  0148FE  ECDE  F0BD         	call	___fldiv	;wreg free
 47811  014902  0060  F0AB  FFE6   	movff	btemp,postinc1
 47812  014908  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 47813  01490E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 47814  014914  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 47815  01491A  0E8F               	movlw	low (_C+144)
 47816  01491C  6EE6               	movwf	postinc1,c
 47817  01491E  0E09               	movlw	high (_C+144)
 47818  014920  6EE6               	movwf	postinc1,c
 47819  014922  EC81  F008         	call	___asfladd	;wreg free
 47820                           
 47821                           ;bsoc.c: 48:  if (C.dynamic_ah > (C.bank_ah))
 47822  014926  EE22  F18F         	lfsr	2,_C+144	;volatile
 47823  01492A  006F FF7B FFE6     	movff	postinc2,postinc1
 47824  014930  006F FF7B FFE6     	movff	postinc2,postinc1
 47825  014936  006F FF7B FFE6     	movff	postinc2,postinc1
 47826  01493C  006F FF7B FFE6     	movff	postinc2,postinc1
 47827  014942  EE22  F18B         	lfsr	2,_C+140	;volatile
 47828  014946  006F FF7B FFE6     	movff	postinc2,postinc1
 47829  01494C  006F FF7B FFE6     	movff	postinc2,postinc1
 47830  014952  006F FF7B FFE6     	movff	postinc2,postinc1
 47831  014958  006F FF7B FFE6     	movff	postinc2,postinc1
 47832  01495E  EC49  F0F3         	call	___flge	;wreg free
 47833  014962  B02A               	btfsc	btemp& (0+255),0,c
 47834  014964  D00E               	goto	l16998
 47835                           
 47836                           ;bsoc.c: 49:   C.dynamic_ah = C.bank_ah;
 47837  014966  EE22  F18B         	lfsr	2,_C+140	;volatile
 47838  01496A  006F FF78  F98F    	movff	postinc2,_C+144	;volatile
 47839  014970  006F FF78  F990    	movff	postinc2,_C+145	;volatile
 47840  014976  006F FF78  F991    	movff	postinc2,_C+146	;volatile
 47841  01497C  006F FF74  F992    	movff	postdec2,_C+147	;volatile
 47842  014982                     l16998:
 47843                           
 47844                           ;bsoc.c: 50:  if (C.dynamic_ah < 0.1)
 47845  014982  0ECD               	movlw	205
 47846  014984  6EE6               	movwf	postinc1,c
 47847  014986  0ECC               	movlw	204
 47848  014988  6EE6               	movwf	postinc1,c
 47849  01498A  0ECC               	movlw	204
 47850  01498C  6EE6               	movwf	postinc1,c
 47851  01498E  0E3D               	movlw	61
 47852  014990  6EE6               	movwf	postinc1,c
 47853  014992  EE22  F18F         	lfsr	2,_C+144	;volatile
 47854  014996  006F FF7B FFE6     	movff	postinc2,postinc1
 47855  01499C  006F FF7B FFE6     	movff	postinc2,postinc1
 47856  0149A2  006F FF7B FFE6     	movff	postinc2,postinc1
 47857  0149A8  006F FF7B FFE6     	movff	postinc2,postinc1
 47858  0149AE  EC49  F0F3         	call	___flge	;wreg free
 47859  0149B2  B02A               	btfsc	btemp& (0+255),0,c
 47860  0149B4  D010               	goto	l17002
 47861                           
 47862                           ;bsoc.c: 51:   C.dynamic_ah = 0.1;
 47863  0149B6  0ECD               	movlw	205
 47864  0149B8  006F FFA0  F98F    	movff	wreg,_C+144	;volatile
 47865  0149BE  0ECC               	movlw	204
 47866  0149C0  006F FFA0  F990    	movff	wreg,_C+145	;volatile
 47867  0149C6  0ECC               	movlw	204
 47868  0149C8  006F FFA0  F991    	movff	wreg,_C+146	;volatile
 47869  0149CE  0E3D               	movlw	61
 47870  0149D0  006F FFA0  F992    	movff	wreg,_C+147	;volatile
 47871  0149D6                     l17002:
 47872                           
 47873                           ;bsoc.c: 53:  if (C.c_bat > 0.01)
 47874  0149D6  EE22  F143         	lfsr	2,_C+68	;volatile
 47875  0149DA  006F FF7B FFE6     	movff	postinc2,postinc1
 47876  0149E0  006F FF7B FFE6     	movff	postinc2,postinc1
 47877  0149E6  006F FF7B FFE6     	movff	postinc2,postinc1
 47878  0149EC  006F FF7B FFE6     	movff	postinc2,postinc1
 47879  0149F2  0E0A               	movlw	10
 47880  0149F4  6EE6               	movwf	postinc1,c
 47881  0149F6  0ED7               	movlw	215
 47882  0149F8  6EE6               	movwf	postinc1,c
 47883  0149FA  0E23               	movlw	35
 47884  0149FC  6EE6               	movwf	postinc1,c
 47885  0149FE  0E3C               	movlw	60
 47886  014A00  6EE6               	movwf	postinc1,c
 47887  014A02  EC49  F0F3         	call	___flge	;wreg free
 47888  014A06  B02A               	btfsc	btemp& (0+255),0,c
 47889  014A08  D01C               	goto	l17006
 47890                           
 47891                           ;bsoc.c: 54:   adj = C.hist[0].cef;
 47892  014A0A  0062  F714  F032   	movff	_C+198,btemp+8	;volatile
 47893  014A10  0062  F718  F033   	movff	_C+199,btemp+9	;volatile
 47894  014A16  0062  F71C  F034   	movff	_C+200,btemp+10	;volatile
 47895  014A1C  0062  F720  F035   	movff	_C+201,btemp+11	;volatile
 47896                           
 47897                           ;stkvar	_adj @ sp[(-6)+0]
 47898  014A22  0EFA               	movlw	-6
 47899  014A24  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 47900  014A2A  0EFB               	movlw	-5
 47901  014A2C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 47902  014A32  0EFC               	movlw	-4
 47903  014A34  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 47904  014A3A  0EFD               	movlw	-3
 47905  014A3C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 47906  014A42                     l17006:
 47907                           
 47908                           ;bsoc.c: 55:  if (C.c_bat < 0.01)
 47909  014A42  0E0A               	movlw	10
 47910  014A44  6EE6               	movwf	postinc1,c
 47911  014A46  0ED7               	movlw	215
 47912  014A48  6EE6               	movwf	postinc1,c
 47913  014A4A  0E23               	movlw	35
 47914  014A4C  6EE6               	movwf	postinc1,c
 47915  014A4E  0E3C               	movlw	60
 47916  014A50  6EE6               	movwf	postinc1,c
 47917  014A52  EE22  F143         	lfsr	2,_C+68	;volatile
 47918  014A56  006F FF7B FFE6     	movff	postinc2,postinc1
 47919  014A5C  006F FF7B FFE6     	movff	postinc2,postinc1
 47920  014A62  006F FF7B FFE6     	movff	postinc2,postinc1
 47921  014A68  006F FF7B FFE6     	movff	postinc2,postinc1
 47922  014A6E  EC49  F0F3         	call	___flge	;wreg free
 47923  014A72  B02A               	btfsc	btemp& (0+255),0,c
 47924  014A74  D01C               	goto	l17010
 47925                           
 47926                           ;bsoc.c: 56:   adj = C.hist[0].peukert;
 47927  014A76  0062  F704  F032   	movff	_C+194,btemp+8	;volatile
 47928  014A7C  0062  F708  F033   	movff	_C+195,btemp+9	;volatile
 47929  014A82  0062  F70C  F034   	movff	_C+196,btemp+10	;volatile
 47930  014A88  0062  F710  F035   	movff	_C+197,btemp+11	;volatile
 47931                           
 47932                           ;stkvar	_adj @ sp[(-6)+0]
 47933  014A8E  0EFA               	movlw	-6
 47934  014A90  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 47935  014A96  0EFB               	movlw	-5
 47936  014A98  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 47937  014A9E  0EFC               	movlw	-4
 47938  014AA0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 47939  014AA6  0EFD               	movlw	-3
 47940  014AA8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 47941  014AAE                     l17010:
 47942                           
 47943                           ;bsoc.c: 57:  C.dynamic_ah += ((C.c_bat * adj) / 3600.0);
 47944  014AAE  0E00               	movlw	0
 47945  014AB0  6EE6               	movwf	postinc1,c
 47946  014AB2  0E00               	movlw	0
 47947  014AB4  6EE6               	movwf	postinc1,c
 47948  014AB6  0E61               	movlw	97
 47949  014AB8  6EE6               	movwf	postinc1,c
 47950  014ABA  0E45               	movlw	69
 47951  014ABC  6EE6               	movwf	postinc1,c
 47952                           
 47953                           ;stkvar	_adj @ sp[(-10)+0]
 47954  014ABE  0EF6               	movlw	-10
 47955  014AC0  006F FF8F FFE6     	movff	plusw1,postinc1
 47956  014AC6  006F FF8F FFE6     	movff	plusw1,postinc1
 47957  014ACC  006F FF8F FFE6     	movff	plusw1,postinc1
 47958  014AD2  006F FF8F FFE6     	movff	plusw1,postinc1
 47959  014AD8  EE22  F143         	lfsr	2,_C+68	;volatile
 47960  014ADC  006F FF7B FFE6     	movff	postinc2,postinc1
 47961  014AE2  006F FF7B FFE6     	movff	postinc2,postinc1
 47962  014AE8  006F FF7B FFE6     	movff	postinc2,postinc1
 47963  014AEE  006F FF7B FFE6     	movff	postinc2,postinc1
 47964  014AF4  EC8D  F0B2         	call	___flmul	;wreg free
 47965  014AF8  0060  F0AB  FFE6   	movff	btemp,postinc1
 47966  014AFE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 47967  014B04  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 47968  014B0A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 47969  014B10  ECDE  F0BD         	call	___fldiv	;wreg free
 47970  014B14  0060  F0AB  FFE6   	movff	btemp,postinc1
 47971  014B1A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 47972  014B20  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 47973  014B26  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 47974  014B2C  0E8F               	movlw	low (_C+144)
 47975  014B2E  6EE6               	movwf	postinc1,c
 47976  014B30  0E09               	movlw	high (_C+144)
 47977  014B32  6EE6               	movwf	postinc1,c
 47978  014B34  EC81  F008         	call	___asfladd	;wreg free
 47979                           
 47980                           ;bsoc.c: 59:  C.dynamic_ah_adj = C.dynamic_ah;
 47981  014B38  EE22  F18F         	lfsr	2,_C+144	;volatile
 47982  014B3C  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
 47983  014B42  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
 47984  014B48  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
 47985  014B4E  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
 47986                           
 47987                           ;bsoc.c: 60:  if (C.dynamic_ah_adj > (C.bank_ah))
 47988  014B54  EE22  F19B         	lfsr	2,_C+156	;volatile
 47989  014B58  006F FF7B FFE6     	movff	postinc2,postinc1
 47990  014B5E  006F FF7B FFE6     	movff	postinc2,postinc1
 47991  014B64  006F FF7B FFE6     	movff	postinc2,postinc1
 47992  014B6A  006F FF7B FFE6     	movff	postinc2,postinc1
 47993  014B70  EE22  F18B         	lfsr	2,_C+140	;volatile
 47994  014B74  006F FF7B FFE6     	movff	postinc2,postinc1
 47995  014B7A  006F FF7B FFE6     	movff	postinc2,postinc1
 47996  014B80  006F FF7B FFE6     	movff	postinc2,postinc1
 47997  014B86  006F FF7B FFE6     	movff	postinc2,postinc1
 47998  014B8C  EC49  F0F3         	call	___flge	;wreg free
 47999  014B90  B02A               	btfsc	btemp& (0+255),0,c
 48000  014B92  D00E               	goto	l17018
 48001                           
 48002                           ;bsoc.c: 61:   C.dynamic_ah_adj = C.bank_ah;
 48003  014B94  EE22  F18B         	lfsr	2,_C+140	;volatile
 48004  014B98  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
 48005  014B9E  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
 48006  014BA4  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
 48007  014BAA  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
 48008  014BB0                     l17018:
 48009                           
 48010                           ;bsoc.c: 62:  if (C.dynamic_ah_adj < 0.1)
 48011  014BB0  0ECD               	movlw	205
 48012  014BB2  6EE6               	movwf	postinc1,c
 48013  014BB4  0ECC               	movlw	204
 48014  014BB6  6EE6               	movwf	postinc1,c
 48015  014BB8  0ECC               	movlw	204
 48016  014BBA  6EE6               	movwf	postinc1,c
 48017  014BBC  0E3D               	movlw	61
 48018  014BBE  6EE6               	movwf	postinc1,c
 48019  014BC0  EE22  F19B         	lfsr	2,_C+156	;volatile
 48020  014BC4  006F FF7B FFE6     	movff	postinc2,postinc1
 48021  014BCA  006F FF7B FFE6     	movff	postinc2,postinc1
 48022  014BD0  006F FF7B FFE6     	movff	postinc2,postinc1
 48023  014BD6  006F FF7B FFE6     	movff	postinc2,postinc1
 48024  014BDC  EC49  F0F3         	call	___flge	;wreg free
 48025  014BE0  B02A               	btfsc	btemp& (0+255),0,c
 48026  014BE2  D010               	goto	l17022
 48027                           
 48028                           ;bsoc.c: 63:   C.dynamic_ah_adj = 0.1;
 48029  014BE4  0ECD               	movlw	205
 48030  014BE6  006F FFA0  F99B    	movff	wreg,_C+156	;volatile
 48031  014BEC  0ECC               	movlw	204
 48032  014BEE  006F FFA0  F99C    	movff	wreg,_C+157	;volatile
 48033  014BF4  0ECC               	movlw	204
 48034  014BF6  006F FFA0  F99D    	movff	wreg,_C+158	;volatile
 48035  014BFC  0E3D               	movlw	61
 48036  014BFE  006F FFA0  F99E    	movff	wreg,_C+159	;volatile
 48037  014C04                     l17022:
 48038                           
 48039                           ;bsoc.c: 66:  C.pv_ah += (C.c_pv / 3600.0);
 48040  014C04  0E00               	movlw	0
 48041  014C06  6EE6               	movwf	postinc1,c
 48042  014C08  0E00               	movlw	0
 48043  014C0A  6EE6               	movwf	postinc1,c
 48044  014C0C  0E61               	movlw	97
 48045  014C0E  6EE6               	movwf	postinc1,c
 48046  014C10  0E45               	movlw	69
 48047  014C12  6EE6               	movwf	postinc1,c
 48048  014C14  EE22  F147         	lfsr	2,_C+72	;volatile
 48049  014C18  006F FF7B FFE6     	movff	postinc2,postinc1
 48050  014C1E  006F FF7B FFE6     	movff	postinc2,postinc1
 48051  014C24  006F FF7B FFE6     	movff	postinc2,postinc1
 48052  014C2A  006F FF7B FFE6     	movff	postinc2,postinc1
 48053  014C30  ECDE  F0BD         	call	___fldiv	;wreg free
 48054  014C34  0060  F0AB  FFE6   	movff	btemp,postinc1
 48055  014C3A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48056  014C40  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48057  014C46  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48058  014C4C  0E93               	movlw	low (_C+148)
 48059  014C4E  6EE6               	movwf	postinc1,c
 48060  014C50  0E09               	movlw	high (_C+148)
 48061  014C52  6EE6               	movwf	postinc1,c
 48062  014C54  EC81  F008         	call	___asfladd	;wreg free
 48063                           
 48064                           ;bsoc.c: 67:  C.pvkw += (C.p_pv / 3600.0);
 48065  014C58  0E00               	movlw	0
 48066  014C5A  6EE6               	movwf	postinc1,c
 48067  014C5C  0E00               	movlw	0
 48068  014C5E  6EE6               	movwf	postinc1,c
 48069  014C60  0E61               	movlw	97
 48070  014C62  6EE6               	movwf	postinc1,c
 48071  014C64  0E45               	movlw	69
 48072  014C66  6EE6               	movwf	postinc1,c
 48073  014C68  EE22  F17B         	lfsr	2,_C+124	;volatile
 48074  014C6C  006F FF7B FFE6     	movff	postinc2,postinc1
 48075  014C72  006F FF7B FFE6     	movff	postinc2,postinc1
 48076  014C78  006F FF7B FFE6     	movff	postinc2,postinc1
 48077  014C7E  006F FF7B FFE6     	movff	postinc2,postinc1
 48078  014C84  ECDE  F0BD         	call	___fldiv	;wreg free
 48079  014C88  0060  F0AB  FFE6   	movff	btemp,postinc1
 48080  014C8E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48081  014C94  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48082  014C9A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48083  014CA0  0EA7               	movlw	low (_C+168)
 48084  014CA2  6EE6               	movwf	postinc1,c
 48085  014CA4  0E09               	movlw	high (_C+168)
 48086  014CA6  6EE6               	movwf	postinc1,c
 48087  014CA8  EC81  F008         	call	___asfladd	;wreg free
 48088                           
 48089                           ;bsoc.c: 68:  C.invkw += (C.p_inverter / 3600.0);
 48090  014CAC  0E00               	movlw	0
 48091  014CAE  6EE6               	movwf	postinc1,c
 48092  014CB0  0E00               	movlw	0
 48093  014CB2  6EE6               	movwf	postinc1,c
 48094  014CB4  0E61               	movlw	97
 48095  014CB6  6EE6               	movwf	postinc1,c
 48096  014CB8  0E45               	movlw	69
 48097  014CBA  6EE6               	movwf	postinc1,c
 48098  014CBC  EE22  F177         	lfsr	2,_C+120	;volatile
 48099  014CC0  006F FF7B FFE6     	movff	postinc2,postinc1
 48100  014CC6  006F FF7B FFE6     	movff	postinc2,postinc1
 48101  014CCC  006F FF7B FFE6     	movff	postinc2,postinc1
 48102  014CD2  006F FF7B FFE6     	movff	postinc2,postinc1
 48103  014CD8  ECDE  F0BD         	call	___fldiv	;wreg free
 48104  014CDC  0060  F0AB  FFE6   	movff	btemp,postinc1
 48105  014CE2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48106  014CE8  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48107  014CEE  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48108  014CF4  0EAB               	movlw	low (_C+172)
 48109  014CF6  6EE6               	movwf	postinc1,c
 48110  014CF8  0E09               	movlw	high (_C+172)
 48111  014CFA  6EE6               	movwf	postinc1,c
 48112  014CFC  EC81  F008         	call	___asfladd	;wreg free
 48113                           
 48114                           ;bsoc.c: 69:  C.loadkw += (C.p_load / 3600.0);
 48115  014D00  0E00               	movlw	0
 48116  014D02  6EE6               	movwf	postinc1,c
 48117  014D04  0E00               	movlw	0
 48118  014D06  6EE6               	movwf	postinc1,c
 48119  014D08  0E61               	movlw	97
 48120  014D0A  6EE6               	movwf	postinc1,c
 48121  014D0C  0E45               	movlw	69
 48122  014D0E  6EE6               	movwf	postinc1,c
 48123  014D10  EE22  F173         	lfsr	2,_C+116	;volatile
 48124  014D14  006F FF7B FFE6     	movff	postinc2,postinc1
 48125  014D1A  006F FF7B FFE6     	movff	postinc2,postinc1
 48126  014D20  006F FF7B FFE6     	movff	postinc2,postinc1
 48127  014D26  006F FF7B FFE6     	movff	postinc2,postinc1
 48128  014D2C  ECDE  F0BD         	call	___fldiv	;wreg free
 48129  014D30  0060  F0AB  FFE6   	movff	btemp,postinc1
 48130  014D36  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48131  014D3C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48132  014D42  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48133  014D48  0EAF               	movlw	low (_C+176)
 48134  014D4A  6EE6               	movwf	postinc1,c
 48135  014D4C  0E09               	movlw	high (_C+176)
 48136  014D4E  6EE6               	movwf	postinc1,c
 48137  014D50  EC81  F008         	call	___asfladd	;wreg free
 48138                           
 48139                           ;bsoc.c: 70:  if (C.p_bat > 0.0)
 48140  014D54  EE22  F17F         	lfsr	2,_C+128	;volatile
 48141  014D58  006F FF7B FFE6     	movff	postinc2,postinc1
 48142  014D5E  006F FF7B FFE6     	movff	postinc2,postinc1
 48143  014D64  006F FF7B FFE6     	movff	postinc2,postinc1
 48144  014D6A  006F FF7B FFE6     	movff	postinc2,postinc1
 48145  014D70  0E00               	movlw	0
 48146  014D72  6EE6               	movwf	postinc1,c
 48147  014D74  0E00               	movlw	0
 48148  014D76  6EE6               	movwf	postinc1,c
 48149  014D78  0E00               	movlw	0
 48150  014D7A  6EE6               	movwf	postinc1,c
 48151  014D7C  0E00               	movlw	0
 48152  014D7E  6EE6               	movwf	postinc1,c
 48153  014D80  EC49  F0F3         	call	___flge	;wreg free
 48154  014D84  B02A               	btfsc	btemp& (0+255),0,c
 48155  014D86  D02A               	goto	l17028
 48156                           
 48157                           ;bsoc.c: 71:   C.bkwi += (C.p_bat / 3600.0);
 48158  014D88  0E00               	movlw	0
 48159  014D8A  6EE6               	movwf	postinc1,c
 48160  014D8C  0E00               	movlw	0
 48161  014D8E  6EE6               	movwf	postinc1,c
 48162  014D90  0E61               	movlw	97
 48163  014D92  6EE6               	movwf	postinc1,c
 48164  014D94  0E45               	movlw	69
 48165  014D96  6EE6               	movwf	postinc1,c
 48166  014D98  EE22  F17F         	lfsr	2,_C+128	;volatile
 48167  014D9C  006F FF7B FFE6     	movff	postinc2,postinc1
 48168  014DA2  006F FF7B FFE6     	movff	postinc2,postinc1
 48169  014DA8  006F FF7B FFE6     	movff	postinc2,postinc1
 48170  014DAE  006F FF7B FFE6     	movff	postinc2,postinc1
 48171  014DB4  ECDE  F0BD         	call	___fldiv	;wreg free
 48172  014DB8  0060  F0AB  FFE6   	movff	btemp,postinc1
 48173  014DBE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48174  014DC4  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48175  014DCA  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48176  014DD0  0E9F               	movlw	low (_C+160)
 48177  014DD2  6EE6               	movwf	postinc1,c
 48178  014DD4  0E09               	movlw	high (_C+160)
 48179  014DD6  6EE6               	movwf	postinc1,c
 48180  014DD8  EC81  F008         	call	___asfladd	;wreg free
 48181  014DDC                     l17028:
 48182                           
 48183                           ;bsoc.c: 72:  if (C.p_bat < 0.0)
 48184  014DDC  EE22  F17F         	lfsr	2,_C+128	;volatile
 48185  014DE0  0E03               	movlw	3
 48186  014DE2  AEDB               	btfss	plusw2,7,c
 48187  014DE4  D038               	goto	l17032
 48188                           
 48189                           ;bsoc.c: 73:   C.bkwo += fabsf(C.p_bat / 3600.0);
 48190  014DE6  0E00               	movlw	0
 48191  014DE8  6EE6               	movwf	postinc1,c
 48192  014DEA  0E00               	movlw	0
 48193  014DEC  6EE6               	movwf	postinc1,c
 48194  014DEE  0E61               	movlw	97
 48195  014DF0  6EE6               	movwf	postinc1,c
 48196  014DF2  0E45               	movlw	69
 48197  014DF4  6EE6               	movwf	postinc1,c
 48198  014DF6  EE22  F17F         	lfsr	2,_C+128	;volatile
 48199  014DFA  006F FF7B FFE6     	movff	postinc2,postinc1
 48200  014E00  006F FF7B FFE6     	movff	postinc2,postinc1
 48201  014E06  006F FF7B FFE6     	movff	postinc2,postinc1
 48202  014E0C  006F FF7B FFE6     	movff	postinc2,postinc1
 48203  014E12  ECDE  F0BD         	call	___fldiv	;wreg free
 48204  014E16  0060  F0AB  FFE6   	movff	btemp,postinc1
 48205  014E1C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48206  014E22  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48207  014E28  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48208  014E2E  EC00  F003         	call	_fabsf	;wreg free
 48209  014E32  0060  F0AB  FFE6   	movff	btemp,postinc1
 48210  014E38  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48211  014E3E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48212  014E44  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48213  014E4A  0EA3               	movlw	low (_C+164)
 48214  014E4C  6EE6               	movwf	postinc1,c
 48215  014E4E  0E09               	movlw	high (_C+164)
 48216  014E50  6EE6               	movwf	postinc1,c
 48217  014E52  EC81  F008         	call	___asfladd	;wreg free
 48218  014E56                     l17032:
 48219                           
 48220                           ;bsoc.c: 75:  C.soc = ((uint16_t) ((C.dynamic_ah_adj / C.bank_ah)*100.0) + 1);
 48221  014E56  0E00               	movlw	0
 48222  014E58  6EE6               	movwf	postinc1,c
 48223  014E5A  0E00               	movlw	0
 48224  014E5C  6EE6               	movwf	postinc1,c
 48225  014E5E  0EC8               	movlw	200
 48226  014E60  6EE6               	movwf	postinc1,c
 48227  014E62  0E42               	movlw	66
 48228  014E64  6EE6               	movwf	postinc1,c
 48229  014E66  EE22  F18B         	lfsr	2,_C+140	;volatile
 48230  014E6A  006F FF7B FFE6     	movff	postinc2,postinc1
 48231  014E70  006F FF7B FFE6     	movff	postinc2,postinc1
 48232  014E76  006F FF7B FFE6     	movff	postinc2,postinc1
 48233  014E7C  006F FF7B FFE6     	movff	postinc2,postinc1
 48234  014E82  EE22  F19B         	lfsr	2,_C+156	;volatile
 48235  014E86  006F FF7B FFE6     	movff	postinc2,postinc1
 48236  014E8C  006F FF7B FFE6     	movff	postinc2,postinc1
 48237  014E92  006F FF7B FFE6     	movff	postinc2,postinc1
 48238  014E98  006F FF7B FFE6     	movff	postinc2,postinc1
 48239  014E9E  ECDE  F0BD         	call	___fldiv	;wreg free
 48240  014EA2  0060  F0AB  FFE6   	movff	btemp,postinc1
 48241  014EA8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48242  014EAE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48243  014EB4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48244  014EBA  EC8D  F0B2         	call	___flmul	;wreg free
 48245  014EBE  0060  F0AB  FFE6   	movff	btemp,postinc1
 48246  014EC4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48247  014ECA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48248  014ED0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48249  014ED6  ECDD  F0F1         	call	___fltol	;wreg free
 48250  014EDA  0060  F0A8  F034   	movff	btemp,btemp+10
 48251  014EE0  0060  F0AC  F035   	movff	btemp+1,btemp+11
 48252  014EE6  0E01               	movlw	1
 48253  014EE8  2634               	addwf	(btemp+10)^0,f,c
 48254  014EEA  0E00               	movlw	0
 48255  014EEC  2235               	addwfc	(btemp+11)^0,f,c
 48256  014EEE  0060  F0D0  F9B5   	movff	btemp+10,_C+182	;volatile
 48257  014EF4  0060  F0D4  F9B6   	movff	btemp+11,_C+183	;volatile
 48258                           
 48259                           ;bsoc.c: 76:  if (C.soc > 100)
 48260  014EFA  EE22  F1B5         	lfsr	2,_C+182	;volatile
 48261  014EFE  0E01               	movlw	1
 48262  014F00  50DB               	movf	plusw2,w,c
 48263  014F02  E104               	bnz	u1667_20
 48264  014F04  0E65               	movlw	101
 48265  014F06  5CDE               	subwf	postinc2,w,c
 48266  014F08  A0D8               	btfss	status,0,c
 48267  014F0A  D008               	goto	l17038
 48268  014F0C                     u1667_20:
 48269                           
 48270                           ;bsoc.c: 77:   C.soc = 100;
 48271  014F0C  0E64               	movlw	100
 48272  014F0E  006F FFA0  F9B5    	movff	wreg,_C+182	;volatile
 48273  014F14  0E00               	movlw	0
 48274  014F16  006F FFA0  F9B6    	movff	wreg,_C+183	;volatile
 48275  014F1C                     l17038:
 48276                           
 48277                           ;bsoc.c: 79:  if (C.c_bat < 0.0) {
 48278  014F1C  EE22  F143         	lfsr	2,_C+68	;volatile
 48279  014F20  0E03               	movlw	3
 48280  014F22  AEDB               	btfss	plusw2,7,c
 48281  014F24  D047               	goto	l2360
 48282                           
 48283                           ;bsoc.c: 80:   C.runtime = (uint16_t) (-(C.dynamic_ah_adj / C.c_bat));
 48284  014F26  EE22  F143         	lfsr	2,_C+68	;volatile
 48285  014F2A  006F FF7B FFE6     	movff	postinc2,postinc1
 48286  014F30  006F FF7B FFE6     	movff	postinc2,postinc1
 48287  014F36  006F FF7B FFE6     	movff	postinc2,postinc1
 48288  014F3C  006F FF7B FFE6     	movff	postinc2,postinc1
 48289  014F42  EE22  F19B         	lfsr	2,_C+156	;volatile
 48290  014F46  006F FF7B FFE6     	movff	postinc2,postinc1
 48291  014F4C  006F FF7B FFE6     	movff	postinc2,postinc1
 48292  014F52  006F FF7B FFE6     	movff	postinc2,postinc1
 48293  014F58  006F FF7B FFE6     	movff	postinc2,postinc1
 48294  014F5E  ECDE  F0BD         	call	___fldiv	;wreg free
 48295  014F62  0060  F0AB  FFE6   	movff	btemp,postinc1
 48296  014F68  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48297  014F6E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48298  014F74  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48299  014F7A  ECA6  F00C         	call	___flneg	;wreg free
 48300  014F7E  0060  F0AB  FFE6   	movff	btemp,postinc1
 48301  014F84  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48302  014F8A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48303  014F90  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48304  014F96  ECDD  F0F1         	call	___fltol	;wreg free
 48305  014F9A  0060  F0A8  F034   	movff	btemp,btemp+10
 48306  014FA0  0060  F0AC  F035   	movff	btemp+1,btemp+11
 48307  014FA6  0060  F0D0  F9B3   	movff	btemp+10,_C+180	;volatile
 48308  014FAC  0060  F0D4  F9B4   	movff	btemp+11,_C+181	;volatile
 48309                           
 48310                           ;bsoc.c: 81:  } else {
 48311  014FB2  D008               	goto	l17042
 48312  014FB4                     l2360:
 48313                           
 48314                           ;bsoc.c: 82:   C.runtime = 99;
 48315  014FB4  0E63               	movlw	99
 48316  014FB6  006F FFA0  F9B3    	movff	wreg,_C+180	;volatile
 48317  014FBC  0E00               	movlw	0
 48318  014FBE  006F FFA0  F9B4    	movff	wreg,_C+181	;volatile
 48319  014FC4                     l17042:
 48320                           
 48321                           ;bsoc.c: 84:  if (C.runtime > 99)
 48322  014FC4  EE22  F1B3         	lfsr	2,_C+180	;volatile
 48323  014FC8  0E01               	movlw	1
 48324  014FCA  50DB               	movf	plusw2,w,c
 48325  014FCC  E104               	bnz	u1669_20
 48326  014FCE  0E64               	movlw	100
 48327  014FD0  5CDE               	subwf	postinc2,w,c
 48328  014FD2  A0D8               	btfss	status,0,c
 48329  014FD4  D008               	goto	l17046
 48330  014FD6                     u1669_20:
 48331                           
 48332                           ;bsoc.c: 85:   C.runtime = 99;
 48333  014FD6  0E63               	movlw	99
 48334  014FD8  006F FFA0  F9B3    	movff	wreg,_C+180	;volatile
 48335  014FDE  0E00               	movlw	0
 48336  014FE0  006F FFA0  F9B4    	movff	wreg,_C+181	;volatile
 48337  014FE6                     l17046:
 48338                           
 48339                           ;bsoc.c: 87:  V.lowint_count++;
 48340  014FE6  0E01               	movlw	1
 48341  014FE8  0102               	movlb	2	; () banked
 48342  014FEA  27B4               	addwf	(_V+173)& (0+255),f,b	;volatile
 48343  014FEC  0E00               	movlw	0
 48344  014FEE  23B5               	addwfc	(_V+174)& (0+255),f,b	;volatile
 48345  014FF0  23B6               	addwfc	(_V+175)& (0+255),f,b	;volatile
 48346  014FF2  23B7               	addwfc	(_V+176)& (0+255),f,b	;volatile
 48347                           
 48348                           ;bsoc.c: 89:  if (!log_update_wait++ && V.system_stable) {
 48349  014FF4  2A50               	incf	calc_bsoc@log_update_wait^0,f,c
 48350  014FF6  0450               	decf	calc_bsoc@log_update_wait^0,w,c
 48351  014FF8  A4D8               	btfss	status,2,c
 48352  014FFA  D177               	goto	l17058
 48353                           
 48354                           ; BSR set to: 2
 48355  014FFC  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 48356  014FFE  B4D8               	btfsc	status,2,c
 48357  015000  D174               	goto	l17058
 48358                           
 48359                           ; BSR set to: 2
 48360                           ;bsoc.c: 90:   log_ptr = port_data_dma_ptr();
 48361  015002  EC94  F013         	call	_port_data_dma_ptr	;wreg free
 48362                           
 48363                           ;stkvar	_log_ptr @ sp[(-6)+4]
 48364  015006  0EFF               	movlw	-1
 48365  015008  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 48366  01500E  0EFE               	movlw	-2
 48367  015010  0060  F0AB  FFE3   	movff	btemp,plusw1
 48368                           
 48369                           ;bsoc.c: 91:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu,%4.3f,%4.3f,%4.3f\r\n",
 48370  015016  EE22  F1C1         	lfsr	2,_C+194	;volatile
 48371  01501A  006F FF7B FFE6     	movff	postinc2,postinc1
 48372  015020  006F FF7B FFE6     	movff	postinc2,postinc1
 48373  015026  006F FF7B FFE6     	movff	postinc2,postinc1
 48374  01502C  006F FF7B FFE6     	movff	postinc2,postinc1
 48375  015032  EE22  F1C5         	lfsr	2,_C+198	;volatile
 48376  015036  006F FF7B FFE6     	movff	postinc2,postinc1
 48377  01503C  006F FF7B FFE6     	movff	postinc2,postinc1
 48378  015042  006F FF7B FFE6     	movff	postinc2,postinc1
 48379  015048  006F FF7B FFE6     	movff	postinc2,postinc1
 48380  01504E  EE22  F19B         	lfsr	2,_C+156	;volatile
 48381  015052  006F FF7B FFE6     	movff	postinc2,postinc1
 48382  015058  006F FF7B FFE6     	movff	postinc2,postinc1
 48383  01505E  006F FF7B FFE6     	movff	postinc2,postinc1
 48384  015064  006F FF7B FFE6     	movff	postinc2,postinc1
 48385  01506A  EE22  F233         	lfsr	2,_C+308	;volatile
 48386  01506E  006F FF7B FFE6     	movff	postinc2,postinc1
 48387  015074  006F FF7B FFE6     	movff	postinc2,postinc1
 48388  01507A  006F FF7B FFE6     	movff	postinc2,postinc1
 48389  015080  006F FF7B FFE6     	movff	postinc2,postinc1
 48390  015086  EE22  F22F         	lfsr	2,_C+304	;volatile
 48391  01508A  006F FF7B FFE6     	movff	postinc2,postinc1
 48392  015090  006F FF7B FFE6     	movff	postinc2,postinc1
 48393  015096  006F FF7B FFE6     	movff	postinc2,postinc1
 48394  01509C  006F FF7B FFE6     	movff	postinc2,postinc1
 48395  0150A2  EE22  F22D         	lfsr	2,_C+302	;volatile
 48396  0150A6  50DF               	movf	indf2,w,c
 48397  0150A8  6EE6               	movwf	postinc1,c
 48398  0150AA  0E00               	movlw	0
 48399  0150AC  6EE6               	movwf	postinc1,c
 48400  0150AE  EC78  F013         	call	_get_ac_charger_relay	;wreg free
 48401  0150B2  502A               	movf	btemp^0,w,c
 48402  0150B4  6EE6               	movwf	postinc1,c
 48403  0150B6  0E00               	movlw	0
 48404  0150B8  6EE6               	movwf	postinc1,c
 48405  0150BA  EE22  F167         	lfsr	2,_C+104	;volatile
 48406  0150BE  006F FF7B FFE6     	movff	postinc2,postinc1
 48407  0150C4  006F FF7B FFE6     	movff	postinc2,postinc1
 48408  0150CA  006F FF7B FFE6     	movff	postinc2,postinc1
 48409  0150D0  006F FF7B FFE6     	movff	postinc2,postinc1
 48410  0150D6  EE22  F187         	lfsr	2,_C+136	;volatile
 48411  0150DA  006F FF7B FFE6     	movff	postinc2,postinc1
 48412  0150E0  006F FF7B FFE6     	movff	postinc2,postinc1
 48413  0150E6  006F FF7B FFE6     	movff	postinc2,postinc1
 48414  0150EC  006F FF7B FFE6     	movff	postinc2,postinc1
 48415  0150F2  EE22  F1B3         	lfsr	2,_C+180	;volatile
 48416  0150F6  006F FF78  F034    	movff	postinc2,btemp+10
 48417  0150FC  006F FF74  F035    	movff	postdec2,btemp+11
 48418  015102  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 48419  015108  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 48420  01510E  EE22  F1B5         	lfsr	2,_C+182	;volatile
 48421  015112  006F FF78  F034    	movff	postinc2,btemp+10
 48422  015118  006F FF74  F035    	movff	postdec2,btemp+11
 48423  01511E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 48424  015124  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 48425  01512A  EE22  F193         	lfsr	2,_C+148	;volatile
 48426  01512E  006F FF7B FFE6     	movff	postinc2,postinc1
 48427  015134  006F FF7B FFE6     	movff	postinc2,postinc1
 48428  01513A  006F FF7B FFE6     	movff	postinc2,postinc1
 48429  015140  006F FF7B FFE6     	movff	postinc2,postinc1
 48430  015146  EE22  F18F         	lfsr	2,_C+144	;volatile
 48431  01514A  006F FF7B FFE6     	movff	postinc2,postinc1
 48432  015150  006F FF7B FFE6     	movff	postinc2,postinc1
 48433  015156  006F FF7B FFE6     	movff	postinc2,postinc1
 48434  01515C  006F FF7B FFE6     	movff	postinc2,postinc1
 48435  015162  EE22  F177         	lfsr	2,_C+120	;volatile
 48436  015166  006F FF7B FFE6     	movff	postinc2,postinc1
 48437  01516C  006F FF7B FFE6     	movff	postinc2,postinc1
 48438  015172  006F FF7B FFE6     	movff	postinc2,postinc1
 48439  015178  006F FF7B FFE6     	movff	postinc2,postinc1
 48440  01517E  EE22  F173         	lfsr	2,_C+116	;volatile
 48441  015182  006F FF7B FFE6     	movff	postinc2,postinc1
 48442  015188  006F FF7B FFE6     	movff	postinc2,postinc1
 48443  01518E  006F FF7B FFE6     	movff	postinc2,postinc1
 48444  015194  006F FF7B FFE6     	movff	postinc2,postinc1
 48445  01519A  EE22  F17B         	lfsr	2,_C+124	;volatile
 48446  01519E  006F FF7B FFE6     	movff	postinc2,postinc1
 48447  0151A4  006F FF7B FFE6     	movff	postinc2,postinc1
 48448  0151AA  006F FF7B FFE6     	movff	postinc2,postinc1
 48449  0151B0  006F FF7B FFE6     	movff	postinc2,postinc1
 48450  0151B6  EE22  F17F         	lfsr	2,_C+128	;volatile
 48451  0151BA  006F FF7B FFE6     	movff	postinc2,postinc1
 48452  0151C0  006F FF7B FFE6     	movff	postinc2,postinc1
 48453  0151C6  006F FF7B FFE6     	movff	postinc2,postinc1
 48454  0151CC  006F FF7B FFE6     	movff	postinc2,postinc1
 48455  0151D2  EE22  F147         	lfsr	2,_C+72	;volatile
 48456  0151D6  006F FF7B FFE6     	movff	postinc2,postinc1
 48457  0151DC  006F FF7B FFE6     	movff	postinc2,postinc1
 48458  0151E2  006F FF7B FFE6     	movff	postinc2,postinc1
 48459  0151E8  006F FF7B FFE6     	movff	postinc2,postinc1
 48460  0151EE  EE22  F143         	lfsr	2,_C+68	;volatile
 48461  0151F2  006F FF7B FFE6     	movff	postinc2,postinc1
 48462  0151F8  006F FF7B FFE6     	movff	postinc2,postinc1
 48463  0151FE  006F FF7B FFE6     	movff	postinc2,postinc1
 48464  015204  006F FF7B FFE6     	movff	postinc2,postinc1
 48465  01520A  EE22  F163         	lfsr	2,_C+100	;volatile
 48466  01520E  006F FF7B FFE6     	movff	postinc2,postinc1
 48467  015214  006F FF7B FFE6     	movff	postinc2,postinc1
 48468  01521A  006F FF7B FFE6     	movff	postinc2,postinc1
 48469  015220  006F FF7B FFE6     	movff	postinc2,postinc1
 48470  015226  EE22  F14B         	lfsr	2,_C+76	;volatile
 48471  01522A  006F FF7B FFE6     	movff	postinc2,postinc1
 48472  015230  006F FF7B FFE6     	movff	postinc2,postinc1
 48473  015236  006F FF7B FFE6     	movff	postinc2,postinc1
 48474  01523C  006F FF7B FFE6     	movff	postinc2,postinc1
 48475  015242  EE22  F14F         	lfsr	2,_C+80	;volatile
 48476  015246  006F FF7B FFE6     	movff	postinc2,postinc1
 48477  01524C  006F FF7B FFE6     	movff	postinc2,postinc1
 48478  015252  006F FF7B FFE6     	movff	postinc2,postinc1
 48479  015258  006F FF7B FFE6     	movff	postinc2,postinc1
 48480  01525E  EE22  F153         	lfsr	2,_C+84	;volatile
 48481  015262  006F FF7B FFE6     	movff	postinc2,postinc1
 48482  015268  006F FF7B FFE6     	movff	postinc2,postinc1
 48483  01526E  006F FF7B FFE6     	movff	postinc2,postinc1
 48484  015274  006F FF7B FFE6     	movff	postinc2,postinc1
 48485  01527A  0060  FA23  FFE6   	movff	_V+129,postinc1
 48486  015280  0060  FA27  FFE6   	movff	_V+130,postinc1
 48487  015286  0060  FA2B  FFE6   	movff	_V+131,postinc1
 48488  01528C  0060  FA2F  FFE6   	movff	_V+132,postinc1
 48489  015292  0E32               	movlw	50
 48490  015294  6EE6               	movwf	postinc1,c
 48491  015296  0E00               	movlw	0
 48492  015298  6EE6               	movwf	postinc1,c
 48493  01529A  0EF7               	movlw	low STR_90
 48494  01529C  6EE6               	movwf	postinc1,c
 48495  01529E  0EF9               	movlw	high STR_90
 48496  0152A0  6EE6               	movwf	postinc1,c
 48497                           
 48498                           ;stkvar	_log_ptr @ sp[(-98)+4]
 48499  0152A2  0EA2               	movlw	-94
 48500  0152A4  006F FF8F FFE6     	movff	plusw1,postinc1
 48501  0152AA  006F FF8F FFE6     	movff	plusw1,postinc1
 48502  0152B0  0E5E               	movlw	94
 48503  0152B2  6EE6               	movwf	postinc1,c
 48504  0152B4  ECF9  F0FB         	call	_sprintf	;wreg free
 48505                           
 48506                           ; BSR set to: 0
 48507                           ;bsoc.c: 98:   StartTimer(TMR_DISPLAY, 125);
 48508  0152B8  0E7D               	movlw	125
 48509  0152BA  6EE6               	movwf	postinc1,c
 48510  0152BC  0E00               	movlw	0
 48511  0152BE  6EE6               	movwf	postinc1,c
 48512  0152C0  0E0A               	movlw	10
 48513  0152C2  6EE6               	movwf	postinc1,c
 48514  0152C4  EC22  F00E         	call	_StartTimer	;wreg free
 48515                           
 48516                           ;bsoc.c: 99:   send_port_data_dma(strlen((char*) log_ptr));
 48517                           ;stkvar	_log_ptr @ sp[(-6)+4]
 48518  0152C8  0EFE               	movlw	-2
 48519  0152CA  006F FF8F FFE6     	movff	plusw1,postinc1
 48520  0152D0  006F FF8F FFE6     	movff	plusw1,postinc1
 48521  0152D6  ECA7  F004         	call	_strlen	;wreg free
 48522  0152DA  0060  F0AB  FFE6   	movff	btemp,postinc1
 48523  0152E0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48524  0152E6  EC2F  F00C         	call	_send_port_data_dma	;wreg free
 48525  0152EA                     l17058:
 48526                           
 48527                           ;bsoc.c: 101:  if (log_update_wait >= 10)
 48528  0152EA  0E09               	movlw	9
 48529  0152EC  6450               	cpfsgt	calc_bsoc@log_update_wait^0,c
 48530  0152EE  D001               	goto	l2364
 48531                           
 48532                           ;bsoc.c: 102:   log_update_wait = 0;
 48533  0152F0  6A50               	clrf	calc_bsoc@log_update_wait^0,c
 48534  0152F2                     l2364:
 48535                           
 48536                           ;bsoc.c: 104:  C.update = 0;
 48537  0152F2  0E00               	movlw	0
 48538  0152F4  006F FFA0  F9B7    	movff	wreg,_C+184	;volatile
 48539                           
 48540                           ;bsoc.c: 106:  do { LATEbits.LATE1 = 0; } while(0);
 48541  0152FA  92BE               	bcf	190,1,c	;volatile
 48542                           
 48543                           ; _calc_bsoc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 48544  0152FC  0EFA               	movlw	250
 48545  0152FE  26E1               	addwf	fsr1l,f,c
 48546  015300  0EFF               	movlw	255
 48547  015302  22E2               	addwfc	fsr1h,f,c
 48548  015304  0012               	return		;funcret
 48549  015306                     __end_of_calc_bsoc:
 48550                           	opt callstack 0
 48551                           
 48552 ;; *************** function _send_port_data_dma *****************
 48553 ;; Defined at:
 48554 ;;		line 397 in file "eadog.c"
 48555 ;; Parameters:    Size  Location     Type
 48556 ;;  dsize           2  [STACK] unsigned short 
 48557 ;; Auto vars:     Size  Location     Type
 48558 ;;		None
 48559 ;; Return value:  Size  Location     Type
 48560 ;;                  1  [STACK] void 
 48561 ;; Registers used:
 48562 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 48563 ;; Tracked objects:
 48564 ;;		On entry : 0/0
 48565 ;;		On exit  : 3F/3B
 48566 ;;		Unchanged: 0/0
 48567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48572 ;;Total ram usage:        0 bytes
 48573 ;; Hardware stack levels used:    1
 48574 ;; Hardware stack levels required when called:    3
 48575 ;; This function calls:
 48576 ;;		Nothing
 48577 ;; This function is called by:
 48578 ;;		_calc_bsoc
 48579 ;; This function uses a reentrant model
 48580 ;;
 48581                           
 48582                           	psect	text201
 48583  00185E                     __ptext201:
 48584                           	opt callstack 0
 48585  00185E                     _send_port_data_dma:
 48586                           	opt callstack 11
 48587                           
 48588                           ;eadog.c: 397: void send_port_data_dma(uint16_t dsize);eadog.c: 398: {;eadog.c: 399:  if
      +                           (dsize > 512)
 48589                           ;stkvar	_dsize @ sp[(0)+-2]
 48590                           
 48591                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48592                           ;incstack = 0
 48593  00185E  0EFE               	movlw	-2
 48594  001860  04E3               	decf	plusw1,w,c
 48595  001862  0EFF               	movlw	-1
 48596  001864  006F FF8C  F02A    	movff	plusw1,btemp
 48597  00186A  0E02               	movlw	2
 48598  00186C  5A2A               	subwfb	btemp^0,f,c
 48599  00186E  A0D8               	btfss	status,0,c
 48600  001870  D00C               	goto	l12880
 48601                           
 48602                           ;eadog.c: 400:   dsize = 512;
 48603  001872  0E00               	movlw	0
 48604  001874  6E34               	movwf	(btemp+10)^0,c
 48605  001876  0E02               	movlw	2
 48606  001878  6E35               	movwf	(btemp+11)^0,c
 48607                           
 48608                           ;stkvar	_dsize @ sp[(0)+-2]
 48609  00187A  0EFE               	movlw	-2
 48610  00187C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 48611  001882  0EFF               	movlw	-1
 48612  001884  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 48613  00188A                     l12880:
 48614                           
 48615                           ;eadog.c: 402:  DMA2CON0bits.EN = 0;
 48616  00188A  013B               	movlb	59	; () banked
 48617  00188C  9FDC               	bcf	220,7,b	;volatile
 48618                           
 48619                           ; BSR set to: 59
 48620                           ;eadog.c: 403:  DMA2SSZ = dsize;
 48621                           ;stkvar	_dsize @ sp[(0)+-2]
 48622  00188E  0EFE               	movlw	-2
 48623  001890  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 48624  001896  0EFF               	movlw	-1
 48625  001898  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 48626                           
 48627                           ; BSR set to: 59
 48628                           ;eadog.c: 404:  DMA2DSZ = 1;
 48629  00189E  0E00               	movlw	0
 48630  0018A0  6FCF               	movwf	207,b	;volatile
 48631  0018A2  0E01               	movlw	1
 48632  0018A4  6FCE               	movwf	206,b	;volatile
 48633                           
 48634                           ; BSR set to: 59
 48635                           ;eadog.c: 405:  DMA2CON0bits.EN = 1;
 48636  0018A6  8FDC               	bsf	220,7,b	;volatile
 48637                           
 48638                           ; BSR set to: 59
 48639                           ;eadog.c: 406:  DMA2CON0bits.DMA2SIRQEN = 1;
 48640  0018A8  8DDC               	bsf	220,6,b	;volatile
 48641                           
 48642                           ; BSR set to: 59
 48643                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 48644  0018AA  52E5               	movf	postdec1,f,c
 48645  0018AC  52E5               	movf	postdec1,f,c
 48646  0018AE  0012               	return		;funcret
 48647  0018B0                     __end_of_send_port_data_dma:
 48648                           	opt callstack 0
 48649                           
 48650 ;; *************** function _port_data_dma_ptr *****************
 48651 ;; Defined at:
 48652 ;;		line 412 in file "eadog.c"
 48653 ;; Parameters:    Size  Location     Type
 48654 ;;		None
 48655 ;; Auto vars:     Size  Location     Type
 48656 ;;		None
 48657 ;; Return value:  Size  Location     Type
 48658 ;;                  2  [STACK] PTR unsigned char 
 48659 ;; Registers used:
 48660 ;;		wreg, status,2, status,0, btemp, btemp+1
 48661 ;; Tracked objects:
 48662 ;;		On entry : 3F/2
 48663 ;;		On exit  : 0/0
 48664 ;;		Unchanged: 0/0
 48665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48670 ;;Total ram usage:        0 bytes
 48671 ;; Hardware stack levels used:    1
 48672 ;; Hardware stack levels required when called:    3
 48673 ;; This function calls:
 48674 ;;		Nothing
 48675 ;; This function is called by:
 48676 ;;		_calc_bsoc
 48677 ;; This function uses a reentrant model
 48678 ;;
 48679                           
 48680                           	psect	text202
 48681  002728                     __ptext202:
 48682                           	opt callstack 0
 48683  002728                     _port_data_dma_ptr:
 48684                           	opt callstack 11
 48685                           
 48686                           ;eadog.c: 414:  return port_data;
 48687                           
 48688                           ; BSR set to: 59
 48689                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48690                           ;incstack = 0
 48691  002728  0EFF               	movlw	low _port_data
 48692  00272A  6E2A               	movwf	btemp^0,c
 48693  00272C  0E06               	movlw	high _port_data
 48694  00272E  6E2B               	movwf	(btemp+1)^0,c
 48695                           
 48696                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 48697  002730  0012               	return		;funcret
 48698  002732                     __end_of_port_data_dma_ptr:
 48699                           	opt callstack 0
 48700                           
 48701 ;; *************** function ___asfladd *****************
 48702 ;; Defined at:
 48703 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 48704 ;; Parameters:    Size  Location     Type
 48705 ;;  f1p             2  [STACK] PTR 
 48706 ;;		 -> C(320), 
 48707 ;;  f2              4  [STACK] PTR 
 48708 ;; Auto vars:     Size  Location     Type
 48709 ;;		None
 48710 ;; Return value:  Size  Location     Type
 48711 ;;                  4  [STACK] PTR 
 48712 ;; Registers used:
 48713 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 48714 ;; Tracked objects:
 48715 ;;		On entry : 0/0
 48716 ;;		On exit  : 0/0
 48717 ;;		Unchanged: 0/0
 48718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48723 ;;Total ram usage:        0 bytes
 48724 ;; Hardware stack levels used:    1
 48725 ;; Hardware stack levels required when called:    4
 48726 ;; This function calls:
 48727 ;;		___fladd
 48728 ;; This function is called by:
 48729 ;;		_calc_bsoc
 48730 ;; This function uses a reentrant model
 48731 ;;
 48732                           
 48733                           	psect	text203
 48734  001102                     __ptext203:
 48735                           	opt callstack 0
 48736  001102                     ___asfladd:
 48737                           	opt callstack 10
 48738                           
 48739                           ;	Return value of ___asfladd is never used
 48740                           ;stkvar	_f2 @ sp[(0)+-6]
 48741                           
 48742                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48743                           ;incstack = 0
 48744  001102  0EFA               	movlw	-6
 48745  001104  006F FF8F FFE6     	movff	plusw1,postinc1
 48746  00110A  006F FF8F FFE6     	movff	plusw1,postinc1
 48747  001110  006F FF8F FFE6     	movff	plusw1,postinc1
 48748  001116  006F FF8F FFE6     	movff	plusw1,postinc1
 48749                           
 48750                           ;stkvar	_f1p @ sp[(-4)+-2]
 48751  00111C  0EFA               	movlw	-6
 48752  00111E  006F FF8F FFD9     	movff	plusw1,fsr2l
 48753  001124  0EFB               	movlw	-5
 48754  001126  006F FF8F FFDA     	movff	plusw1,fsr2h
 48755  00112C  006F FF7B FFE6     	movff	postinc2,postinc1
 48756  001132  006F FF7B FFE6     	movff	postinc2,postinc1
 48757  001138  006F FF7B FFE6     	movff	postinc2,postinc1
 48758  00113E  006F FF7B FFE6     	movff	postinc2,postinc1
 48759  001144  ECA2  F0B6         	call	___fladd	;wreg free
 48760                           
 48761                           ;stkvar	_f1p @ sp[(0)+-2]
 48762  001148  0EFE               	movlw	-2
 48763  00114A  006F FF8F FFD9     	movff	plusw1,fsr2l
 48764  001150  0EFF               	movlw	-1
 48765  001152  006F FF8F FFDA     	movff	plusw1,fsr2h
 48766  001158  0060  F0AB  FFDE   	movff	btemp,postinc2
 48767  00115E  0060  F0AF  FFDE   	movff	btemp+1,postinc2
 48768  001164  0060  F0B3  FFDE   	movff	btemp+2,postinc2
 48769  00116A  0060  F0B7  FFDE   	movff	btemp+3,postinc2
 48770                           
 48771                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 48772  001170  0EFA               	movlw	250
 48773  001172  26E1               	addwf	fsr1l,f,c
 48774  001174  0EFF               	movlw	255
 48775  001176  22E2               	addwfc	fsr1h,f,c
 48776  001178  0012               	return		;funcret
 48777  00117A                     __end_of___asfladd:
 48778                           	opt callstack 0
 48779                           
 48780 ;; *************** function _INT0_ISR *****************
 48781 ;; Defined at:
 48782 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 48783 ;; Parameters:    Size  Location     Type
 48784 ;;		None
 48785 ;; Auto vars:     Size  Location     Type
 48786 ;;		None
 48787 ;; Return value:  Size  Location     Type
 48788 ;;                  1    wreg      void 
 48789 ;; Registers used:
 48790 ;;		wreg, status,2, status,0, pclath, tosl
 48791 ;; Tracked objects:
 48792 ;;		On entry : 0/0
 48793 ;;		On exit  : 0/0
 48794 ;;		Unchanged: 0/0
 48795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48800 ;;Total ram usage:        0 bytes
 48801 ;; Hardware stack levels used:    1
 48802 ;; Hardware stack levels required when called:    2
 48803 ;; This function calls:
 48804 ;;		_INT0_CallBack
 48805 ;; This function is called by:
 48806 ;;		Interrupt level 2
 48807 ;; This function uses a non-reentrant model
 48808 ;;
 48809                           
 48810                           	psect	text204
 48811  002700                     __ptext204:
 48812                           	opt callstack 0
 48813  002700                     _INT0_ISR:
 48814                           	opt callstack 3
 48815                           
 48816                           ;incstack = 0
 48817  002700  EE14  F32C         	lfsr	1,___inthi_sp
 48818                           
 48819                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 48820  002704  0139               	movlb	57	; () banked
 48821  002706  91A1               	bcf	161,0,b	;volatile
 48822                           
 48823                           ; BSR set to: 57
 48824                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 48825  002708  EC0E  F012         	call	_INT0_CallBack	;wreg free
 48826  00270C  0011               	retfie		f
 48827  00270E                     __end_of_INT0_ISR:
 48828                           	opt callstack 0
 48829                           
 48830 ;; *************** function _INT0_CallBack *****************
 48831 ;; Defined at:
 48832 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 48833 ;; Parameters:    Size  Location     Type
 48834 ;;		None
 48835 ;; Auto vars:     Size  Location     Type
 48836 ;;		None
 48837 ;; Return value:  Size  Location     Type
 48838 ;;                  1  [STACK] void 
 48839 ;; Registers used:
 48840 ;;		wreg, status,2, status,0, pclath, tosl
 48841 ;; Tracked objects:
 48842 ;;		On entry : 3F/39
 48843 ;;		On exit  : 0/0
 48844 ;;		Unchanged: 0/0
 48845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48850 ;;Total ram usage:        0 bytes
 48851 ;; Hardware stack levels used:    1
 48852 ;; Hardware stack levels required when called:    1
 48853 ;; This function calls:
 48854 ;;		Absolute function
 48855 ;;		_INT0_DefaultInterruptHandler
 48856 ;; This function is called by:
 48857 ;;		_INT0_ISR
 48858 ;; This function uses a reentrant model
 48859 ;;
 48860                           
 48861                           	psect	text205
 48862  00241C                     __ptext205:
 48863                           	opt callstack 0
 48864  00241C                     _INT0_CallBack:
 48865                           	opt callstack 3
 48866                           
 48867                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 48868                           
 48869                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48870                           ;incstack = 0
 48871  00241C  0100               	movlb	0	; () banked
 48872  00241E  51B3               	movf	_INT0_InterruptHandler& (0+255),w,b
 48873  002420  11B4               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 48874  002422  11B5               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 48875  002424  B4D8               	btfsc	status,2,c
 48876  002426  0012               	return	
 48877                           
 48878                           ; BSR set to: 0
 48879                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 48880  002428  D801               	call	u1309_48
 48881  00242A  0012               	return	
 48882  00242C                     u1309_48:
 48883  00242C  0005               	push	
 48884  00242E  6EFA               	movwf	pclath,c
 48885  002430  51B3               	movf	_INT0_InterruptHandler& (0+255),w,b
 48886  002432  6EFD               	movwf	tosl,c
 48887  002434  51B4               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 48888  002436  6EFE               	movwf	tosh,c
 48889  002438  51B5               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 48890  00243A  6EFF               	movwf	tosu,c
 48891  00243C  50FA               	movf	pclath,w,c
 48892  00243E  0012               	return		;indir
 48893  002440                     __end_of_INT0_CallBack:
 48894                           	opt callstack 0
 48895                           
 48896 ;; *************** function _INT0_DefaultInterruptHandler *****************
 48897 ;; Defined at:
 48898 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 48899 ;; Parameters:    Size  Location     Type
 48900 ;;		None
 48901 ;; Auto vars:     Size  Location     Type
 48902 ;;		None
 48903 ;; Return value:  Size  Location     Type
 48904 ;;                  1  [STACK] void 
 48905 ;; Registers used:
 48906 ;;		None
 48907 ;; Tracked objects:
 48908 ;;		On entry : 3F/0
 48909 ;;		On exit  : 0/0
 48910 ;;		Unchanged: 0/0
 48911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48916 ;;Total ram usage:        0 bytes
 48917 ;; Hardware stack levels used:    1
 48918 ;; This function calls:
 48919 ;;		Nothing
 48920 ;; This function is called by:
 48921 ;;		_EXT_INT_Initialize
 48922 ;;		_INT0_CallBack
 48923 ;; This function uses a reentrant model
 48924 ;;
 48925                           
 48926                           	psect	text206
 48927  0027AE                     __ptext206:
 48928                           	opt callstack 0
 48929  0027AE                     _INT0_DefaultInterruptHandler:
 48930                           	opt callstack 3
 48931                           
 48932                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 48933                           
 48934                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48935                           ;incstack = 0
 48936  0027AE  0012               	return		;funcret
 48937  0027B0                     __end_of_INT0_DefaultInterruptHandler:
 48938                           	opt callstack 0
 48939                           
 48940 ;; *************** function _Default_ISR *****************
 48941 ;; Defined at:
 48942 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 48943 ;; Parameters:    Size  Location     Type
 48944 ;;		None
 48945 ;; Auto vars:     Size  Location     Type
 48946 ;;		None
 48947 ;; Return value:  Size  Location     Type
 48948 ;;                  1    wreg      void 
 48949 ;; Registers used:
 48950 ;;		None
 48951 ;; Tracked objects:
 48952 ;;		On entry : 0/0
 48953 ;;		On exit  : 0/0
 48954 ;;		Unchanged: 0/0
 48955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48960 ;;Total ram usage:        0 bytes
 48961 ;; Hardware stack levels used:    1
 48962 ;; This function calls:
 48963 ;;		Nothing
 48964 ;; This function is called by:
 48965 ;;		Interrupt level 2
 48966 ;; This function uses a non-reentrant model
 48967 ;;
 48968                           
 48969                           	psect	text207
 48970  0027A4                     __ptext207:
 48971                           	opt callstack 0
 48972  0027A4                     _Default_ISR:
 48973                           	opt callstack 5
 48974                           
 48975                           ;incstack = 0
 48976  0027A4  EE14  F32C         	lfsr	1,___inthi_sp
 48977  0027A8  0011               	retfie		f
 48978  0027AA                     __end_of_Default_ISR:
 48979                           	opt callstack 0
 48980                           
 48981 ;; *************** function _ADCC_ISR *****************
 48982 ;; Defined at:
 48983 ;;		line 314 in file "mcc_generated_files/adcc.c"
 48984 ;; Parameters:    Size  Location     Type
 48985 ;;		None
 48986 ;; Auto vars:     Size  Location     Type
 48987 ;;		None
 48988 ;; Return value:  Size  Location     Type
 48989 ;;                  1    wreg      void 
 48990 ;; Registers used:
 48991 ;;		wreg, status,2, status,0, pclath, tosl
 48992 ;; Tracked objects:
 48993 ;;		On entry : 0/0
 48994 ;;		On exit  : 0/0
 48995 ;;		Unchanged: 0/0
 48996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49001 ;;Total ram usage:        0 bytes
 49002 ;; Hardware stack levels used:    1
 49003 ;; Hardware stack levels required when called:    1
 49004 ;; This function calls:
 49005 ;;		Absolute function
 49006 ;;		_ADCC_DefaultInterruptHandler
 49007 ;;		_adc_int_handler
 49008 ;; This function is called by:
 49009 ;;		Interrupt level 2
 49010 ;; This function uses a non-reentrant model
 49011 ;;
 49012                           
 49013                           	psect	text208
 49014  0020B0                     __ptext208:
 49015                           	opt callstack 0
 49016  0020B0                     _ADCC_ISR:
 49017                           	opt callstack 4
 49018                           
 49019                           ;incstack = 0
 49020  0020B0  EE14  F32C         	lfsr	1,___inthi_sp
 49021                           
 49022                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 49023  0020B4  0139               	movlb	57	; () banked
 49024  0020B6  95A1               	bcf	161,2,b	;volatile
 49025                           
 49026                           ; BSR set to: 57
 49027                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 49028  0020B8  0100               	movlb	0	; () banked
 49029  0020BA  51A4               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 49030  0020BC  11A5               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 49031  0020BE  11A6               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 49032  0020C0  B4D8               	btfsc	status,2,c
 49033  0020C2  0011               	retfie		f
 49034                           
 49035                           ; BSR set to: 0
 49036                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 49037  0020C4  D801               	call	i2u1374_48
 49038  0020C6  0011               	retfie		f
 49039  0020C8                     i2u1374_48:
 49040  0020C8  0005               	push	
 49041  0020CA  6EFA               	movwf	pclath,c
 49042  0020CC  51A4               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 49043  0020CE  6EFD               	movwf	tosl,c
 49044  0020D0  51A5               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 49045  0020D2  6EFE               	movwf	tosh,c
 49046  0020D4  51A6               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 49047  0020D6  6EFF               	movwf	tosu,c
 49048  0020D8  50FA               	movf	pclath,w,c
 49049  0020DA  0012               	return		;indir
 49050  0020DC                     __end_of_ADCC_ISR:
 49051                           	opt callstack 0
 49052                           
 49053 ;; *************** function _adc_int_t_handler *****************
 49054 ;; Defined at:
 49055 ;;		line 183 in file "daq.c"
 49056 ;; Parameters:    Size  Location     Type
 49057 ;;		None
 49058 ;; Auto vars:     Size  Location     Type
 49059 ;;		None
 49060 ;; Return value:  Size  Location     Type
 49061 ;;                  1  [STACK] void 
 49062 ;; Registers used:
 49063 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 49064 ;; Tracked objects:
 49065 ;;		On entry : 3F/0
 49066 ;;		On exit  : 0/0
 49067 ;;		Unchanged: 0/0
 49068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49073 ;;Total ram usage:        0 bytes
 49074 ;; Hardware stack levels used:    1
 49075 ;; Hardware stack levels required when called:    1
 49076 ;; This function calls:
 49077 ;;		_ADCC_DischargeSampleCapacitor
 49078 ;;		_ADCC_StartConversion
 49079 ;; This function is called by:
 49080 ;;		_start_adc_scan
 49081 ;;		_ADCC_ThresholdISR
 49082 ;; This function uses a reentrant model
 49083 ;;
 49084                           
 49085                           	psect	text209
 49086  01FF7E                     __ptext209:
 49087                           	opt callstack 0
 49088  01FF7E                     _adc_int_t_handler:
 49089                           	opt callstack 3
 49090                           
 49091                           ;daq.c: 188:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 49092                           
 49093                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49094                           ;incstack = 0
 49095  01FF7E  013E               	movlb	62	; () banked
 49096  01FF80  51E6               	movf	230,w,b	;volatile
 49097  01FF82  006F FB9C  F02A    	movff	16103,btemp	;volatile
 49098  01FF88  6A2B               	clrf	(btemp+1)^0,c
 49099  01FF8A  0060  F0A8  F02B   	movff	btemp,btemp+1
 49100  01FF90  6A2A               	clrf	btemp^0,c
 49101  01FF92  262A               	addwf	btemp^0,f,c
 49102  01FF94  0E00               	movlw	0
 49103  01FF96  222B               	addwfc	(btemp+1)^0,f,c
 49104  01FF98  0101               	movlb	1	; () banked
 49105  01FF9A  5132               	movf	(_R+50)& (0+255),w,b	;volatile
 49106  01FF9C  0D02               	mullw	2
 49107  01FF9E  0E00               	movlw	low _R
 49108  01FFA0  24F3               	addwf	243,w,c
 49109  01FFA2  6ED9               	movwf	fsr2l,c
 49110  01FFA4  0E01               	movlw	high _R
 49111  01FFA6  20F4               	addwfc	prodh,w,c
 49112  01FFA8  6EDA               	movwf	fsr2h,c
 49113  01FFAA  0060  F0AB  FFDE   	movff	btemp,postinc2
 49114  01FFB0  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 49115  01FFB6                     l14572:
 49116                           
 49117                           ;daq.c: 190:   if (++R.scan_index > 0XD) {
 49118  01FFB6  0101               	movlb	1	; () banked
 49119  01FFB8  2B32               	incf	(_R+50)& (0+255),f,b	;volatile
 49120  01FFBA  0E0D               	movlw	13
 49121  01FFBC  6532               	cpfsgt	(_R+50)& (0+255),b	;volatile
 49122  01FFBE  D003               	goto	l14578
 49123                           
 49124                           ; BSR set to: 1
 49125                           ;daq.c: 191:    R.done = 1;
 49126  01FFC0  0E01               	movlw	1
 49127  01FFC2  6F35               	movwf	(_R+53)& (0+255),b	;volatile
 49128  01FFC4  0012               	return	
 49129  01FFC6                     l14578:
 49130                           
 49131                           ; BSR set to: 1
 49132                           ;daq.c: 197:  } while (!((R.scan_select >> R.scan_index) &0x1));
 49133  01FFC6  0060  F4C8  F035   	movff	_R+50,btemp+11	;volatile
 49134  01FFCC  EE20  F133         	lfsr	2,_R+51	;volatile
 49135  01FFD0  006F FF78  F032    	movff	postinc2,btemp+8
 49136  01FFD6  006F FF74  F033    	movff	postdec2,btemp+9
 49137  01FFDC  2A35               	incf	(btemp+11)^0,f,c
 49138  01FFDE  D003               	goto	u1371_44
 49139  01FFE0                     u1371_45:
 49140  01FFE0  90D8               	bcf	status,0,c
 49141  01FFE2  3233               	rrcf	(btemp+9)^0,f,c
 49142  01FFE4  3232               	rrcf	(btemp+8)^0,f,c
 49143  01FFE6                     u1371_44:
 49144  01FFE6  2E35               	decfsz	(btemp+11)^0,f,c
 49145  01FFE8  D7FB               	goto	u1371_45
 49146  01FFEA  A032               	btfss	(btemp+8)^0,0,c
 49147  01FFEC  D7E4               	goto	l14572
 49148                           
 49149                           ;daq.c: 198:  ADCC_DischargeSampleCapacitor();
 49150  01FFEE  ECAF  F013         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 49151                           
 49152                           ; BSR set to: 62
 49153                           ;daq.c: 199:  ADCC_StartConversion(R.scan_index & 0xf);
 49154  01FFF2  0101               	movlb	1	; () banked
 49155  01FFF4  5132               	movf	(_R+50)& (0+255),w,b	;volatile
 49156  01FFF6  0B0F               	andlw	15
 49157  01FFF8  6EE6               	movwf	postinc1,c
 49158  01FFFA  EC32  F013         	call	_ADCC_StartConversion	;wreg free
 49159                           
 49160                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 49161  01FFFE  0012               	return		;funcret
 49162  020000                     __end_of_adc_int_t_handler:
 49163                           	opt callstack 0
 49164                           
 49165 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 49166 ;; Defined at:
 49167 ;;		line 339 in file "mcc_generated_files/adcc.c"
 49168 ;; Parameters:    Size  Location     Type
 49169 ;;		None
 49170 ;; Auto vars:     Size  Location     Type
 49171 ;;		None
 49172 ;; Return value:  Size  Location     Type
 49173 ;;                  1  [STACK] void 
 49174 ;; Registers used:
 49175 ;;		None
 49176 ;; Tracked objects:
 49177 ;;		On entry : 3F/0
 49178 ;;		On exit  : 0/0
 49179 ;;		Unchanged: 0/0
 49180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49185 ;;Total ram usage:        0 bytes
 49186 ;; Hardware stack levels used:    1
 49187 ;; This function calls:
 49188 ;;		Nothing
 49189 ;; This function is called by:
 49190 ;;		_ADCC_Initialize
 49191 ;;		_ADCC_ISR
 49192 ;;		_ADCC_ThresholdISR
 49193 ;; This function uses a reentrant model
 49194 ;;
 49195                           
 49196                           	psect	text210
 49197  0027B0                     __ptext210:
 49198                           	opt callstack 0
 49199  0027B0                     _ADCC_DefaultInterruptHandler:
 49200                           	opt callstack 4
 49201                           
 49202                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 49203                           
 49204                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49205                           ;incstack = 0
 49206  0027B0  0012               	return		;funcret
 49207  0027B2                     __end_of_ADCC_DefaultInterruptHandler:
 49208                           	opt callstack 0
 49209                           
 49210 ;; *************** function _adc_int_handler *****************
 49211 ;; Defined at:
 49212 ;;		line 173 in file "daq.c"
 49213 ;; Parameters:    Size  Location     Type
 49214 ;;		None
 49215 ;; Auto vars:     Size  Location     Type
 49216 ;;		None
 49217 ;; Return value:  Size  Location     Type
 49218 ;;                  1  [STACK] void 
 49219 ;; Registers used:
 49220 ;;		None
 49221 ;; Tracked objects:
 49222 ;;		On entry : 3F/0
 49223 ;;		On exit  : 0/0
 49224 ;;		Unchanged: 0/0
 49225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49230 ;;Total ram usage:        0 bytes
 49231 ;; Hardware stack levels used:    1
 49232 ;; This function calls:
 49233 ;;		Nothing
 49234 ;; This function is called by:
 49235 ;;		_start_adc_scan
 49236 ;;		_ADCC_ISR
 49237 ;; This function uses a reentrant model
 49238 ;;
 49239                           
 49240                           	psect	text211
 49241  0027B2                     __ptext211:
 49242                           	opt callstack 0
 49243  0027B2                     _adc_int_handler:
 49244                           	opt callstack 4
 49245                           
 49246                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 49247                           
 49248                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49249                           ;incstack = 0
 49250  0027B2  0012               	return		;funcret
 49251  0027B4                     __end_of_adc_int_handler:
 49252                           	opt callstack 0
 49253                           
 49254 ;; *************** function _ADCC_ThresholdISR *****************
 49255 ;; Defined at:
 49256 ;;		line 327 in file "mcc_generated_files/adcc.c"
 49257 ;; Parameters:    Size  Location     Type
 49258 ;;		None
 49259 ;; Auto vars:     Size  Location     Type
 49260 ;;		None
 49261 ;; Return value:  Size  Location     Type
 49262 ;;                  1    wreg      void 
 49263 ;; Registers used:
 49264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 49265 ;; Tracked objects:
 49266 ;;		On entry : 0/0
 49267 ;;		On exit  : 0/0
 49268 ;;		Unchanged: 0/0
 49269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49272 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49273 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49274 ;;Total ram usage:        5 bytes
 49275 ;; Hardware stack levels used:    1
 49276 ;; Hardware stack levels required when called:    2
 49277 ;; This function calls:
 49278 ;;		Absolute function
 49279 ;;		_ADCC_DefaultInterruptHandler
 49280 ;;		_adc_int_t_handler
 49281 ;; This function is called by:
 49282 ;;		Interrupt level 2
 49283 ;; This function uses a non-reentrant model
 49284 ;;
 49285                           
 49286                           	psect	text212
 49287  0012C0                     __ptext212:
 49288                           	opt callstack 0
 49289  0012C0                     _ADCC_ThresholdISR:
 49290                           	opt callstack 3
 49291                           
 49292                           ;incstack = 0
 49293  0012C0  0060  F0A8  F001   	movff	btemp,??_ADCC_ThresholdISR
 49294  0012C6  0060  F0AC  F002   	movff	btemp+1,??_ADCC_ThresholdISR+1
 49295  0012CC  0060  F0C8  F003   	movff	btemp+8,??_ADCC_ThresholdISR+2
 49296  0012D2  0060  F0CC  F004   	movff	btemp+9,??_ADCC_ThresholdISR+3
 49297  0012D8  0060  F0D4  F005   	movff	btemp+11,??_ADCC_ThresholdISR+4
 49298  0012DE  EE14  F32C         	lfsr	1,___inthi_sp
 49299                           
 49300                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 49301  0012E2  0139               	movlb	57	; () banked
 49302  0012E4  97A1               	bcf	161,3,b	;volatile
 49303                           
 49304                           ; BSR set to: 57
 49305                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 49306  0012E6  0100               	movlb	0	; () banked
 49307  0012E8  51A1               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 49308  0012EA  11A2               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 49309  0012EC  11A3               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 49310  0012EE  B4D8               	btfsc	status,2,c
 49311  0012F0  D00C               	goto	i2u1376_49
 49312                           
 49313                           ; BSR set to: 0
 49314                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 49315  0012F2  D801               	call	i2u1376_48
 49316  0012F4  D00A               	goto	i2u1376_49
 49317  0012F6                     i2u1376_48:
 49318  0012F6  0005               	push	
 49319  0012F8  6EFA               	movwf	pclath,c
 49320  0012FA  51A1               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 49321  0012FC  6EFD               	movwf	tosl,c
 49322  0012FE  51A2               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 49323  001300  6EFE               	movwf	tosh,c
 49324  001302  51A3               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 49325  001304  6EFF               	movwf	tosu,c
 49326  001306  50FA               	movf	pclath,w,c
 49327  001308  0012               	return		;indir
 49328  00130A                     i2u1376_49:
 49329  00130A  0060  F014  F035   	movff	??_ADCC_ThresholdISR+4,btemp+11
 49330  001310  0060  F010  F033   	movff	??_ADCC_ThresholdISR+3,btemp+9
 49331  001316  0060  F00C  F032   	movff	??_ADCC_ThresholdISR+2,btemp+8
 49332  00131C  0060  F008  F02B   	movff	??_ADCC_ThresholdISR+1,btemp+1
 49333  001322  0060  F004  F02A   	movff	??_ADCC_ThresholdISR,btemp
 49334  001328  0011               	retfie		f
 49335  00132A                     __end_of_ADCC_ThresholdISR:
 49336                           	opt callstack 0
 49337                           
 49338 ;; *************** function _UART1_rx_vect_isr *****************
 49339 ;; Defined at:
 49340 ;;		line 181 in file "mcc_generated_files/uart1.c"
 49341 ;; Parameters:    Size  Location     Type
 49342 ;;		None
 49343 ;; Auto vars:     Size  Location     Type
 49344 ;;		None
 49345 ;; Return value:  Size  Location     Type
 49346 ;;                  1    wreg      void 
 49347 ;; Registers used:
 49348 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 49349 ;; Tracked objects:
 49350 ;;		On entry : 0/0
 49351 ;;		On exit  : 0/0
 49352 ;;		Unchanged: 0/0
 49353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49358 ;;Total ram usage:        0 bytes
 49359 ;; Hardware stack levels used:    1
 49360 ;; Hardware stack levels required when called:    1
 49361 ;; This function calls:
 49362 ;;		Absolute function
 49363 ;;		_UART1_Receive_ISR
 49364 ;; This function is called by:
 49365 ;;		Interrupt level 2
 49366 ;; This function uses a non-reentrant model
 49367 ;;
 49368                           
 49369                           	psect	text213
 49370  002314                     __ptext213:
 49371                           	opt callstack 0
 49372  002314                     _UART1_rx_vect_isr:
 49373                           	opt callstack 4
 49374                           
 49375                           ;incstack = 0
 49376  002314  EE14  F32C         	lfsr	1,___inthi_sp
 49377                           
 49378                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 49379  002318  0100               	movlb	0	; () banked
 49380  00231A  51A7               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 49381  00231C  11A8               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 49382  00231E  11A9               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 49383  002320  B4D8               	btfsc	status,2,c
 49384  002322  0011               	retfie		f
 49385                           
 49386                           ; BSR set to: 0
 49387                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 49388  002324  D801               	call	i2u1378_48
 49389  002326  0011               	retfie		f
 49390  002328                     i2u1378_48:
 49391  002328  0005               	push	
 49392  00232A  6EFA               	movwf	pclath,c
 49393  00232C  51A7               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 49394  00232E  6EFD               	movwf	tosl,c
 49395  002330  51A8               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 49396  002332  6EFE               	movwf	tosh,c
 49397  002334  51A9               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 49398  002336  6EFF               	movwf	tosu,c
 49399  002338  50FA               	movf	pclath,w,c
 49400  00233A  0012               	return		;indir
 49401  00233C                     __end_of_UART1_rx_vect_isr:
 49402                           	opt callstack 0
 49403                           
 49404 ;; *************** function _UART1_Receive_ISR *****************
 49405 ;; Defined at:
 49406 ;;		line 192 in file "mcc_generated_files/uart1.c"
 49407 ;; Parameters:    Size  Location     Type
 49408 ;;		None
 49409 ;; Auto vars:     Size  Location     Type
 49410 ;;		None
 49411 ;; Return value:  Size  Location     Type
 49412 ;;                  1  [STACK] void 
 49413 ;; Registers used:
 49414 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 49415 ;; Tracked objects:
 49416 ;;		On entry : 3F/0
 49417 ;;		On exit  : 3F/0
 49418 ;;		Unchanged: 0/0
 49419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49424 ;;Total ram usage:        0 bytes
 49425 ;; Hardware stack levels used:    1
 49426 ;; This function calls:
 49427 ;;		Nothing
 49428 ;; This function is called by:
 49429 ;;		_UART1_Initialize
 49430 ;;		_UART1_rx_vect_isr
 49431 ;; This function uses a reentrant model
 49432 ;;
 49433                           
 49434                           	psect	text214
 49435  0024A8                     __ptext214:
 49436                           	opt callstack 0
 49437  0024A8                     _UART1_Receive_ISR:
 49438                           	opt callstack 4
 49439                           
 49440                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 49441                           
 49442                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49443                           ;incstack = 0
 49444  0024A8  0ED6               	movlw	low _uart1RxBuffer
 49445  0024AA  2457               	addwf	_uart1RxHead^0,w,c	;volatile
 49446  0024AC  6ED9               	movwf	fsr2l,c
 49447  0024AE  6ADA               	clrf	fsr2h,c
 49448  0024B0  0E02               	movlw	high _uart1RxBuffer
 49449  0024B2  22DA               	addwfc	fsr2h,f,c
 49450  0024B4  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 49451  0024BA  2A57               	incf	_uart1RxHead^0,f,c	;volatile
 49452                           
 49453                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 49454  0024BC  0E07               	movlw	7
 49455  0024BE  6457               	cpfsgt	_uart1RxHead^0,c
 49456  0024C0  D001               	goto	l13896
 49457                           
 49458                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 49459  0024C2  6A57               	clrf	_uart1RxHead^0,c	;volatile
 49460  0024C4                     l13896:
 49461                           
 49462                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 49463  0024C4  0100               	movlb	0	; () banked
 49464  0024C6  2BD0               	incf	_uart1RxCount& (0+255),f,b	;volatile
 49465                           
 49466                           ; BSR set to: 0
 49467                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 49468  0024C8  0012               	return		;funcret
 49469  0024CA                     __end_of_UART1_Receive_ISR:
 49470                           	opt callstack 0
 49471                           
 49472 ;; *************** function _UART2_tx_vect_isr *****************
 49473 ;; Defined at:
 49474 ;;		line 195 in file "mcc_generated_files/uart2.c"
 49475 ;; Parameters:    Size  Location     Type
 49476 ;;		None
 49477 ;; Auto vars:     Size  Location     Type
 49478 ;;		None
 49479 ;; Return value:  Size  Location     Type
 49480 ;;                  1    wreg      void 
 49481 ;; Registers used:
 49482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 49483 ;; Tracked objects:
 49484 ;;		On entry : 0/0
 49485 ;;		On exit  : 0/0
 49486 ;;		Unchanged: 0/0
 49487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49492 ;;Total ram usage:        0 bytes
 49493 ;; Hardware stack levels used:    1
 49494 ;; Hardware stack levels required when called:    1
 49495 ;; This function calls:
 49496 ;;		Absolute function
 49497 ;;		_UART2_Transmit_ISR
 49498 ;; This function is called by:
 49499 ;;		Interrupt level 2
 49500 ;; This function uses a non-reentrant model
 49501 ;;
 49502                           
 49503                           	psect	text215
 49504  00233C                     __ptext215:
 49505                           	opt callstack 0
 49506  00233C                     _UART2_tx_vect_isr:
 49507                           	opt callstack 4
 49508                           
 49509                           ; BSR set to: 0
 49510                           ;incstack = 0
 49511  00233C  EE14  F32C         	lfsr	1,___inthi_sp
 49512                           
 49513                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 49514  002340  0100               	movlb	0	; () banked
 49515  002342  51AA               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 49516  002344  11AB               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 49517  002346  11AC               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 49518  002348  B4D8               	btfsc	status,2,c
 49519  00234A  0011               	retfie		f
 49520                           
 49521                           ; BSR set to: 0
 49522                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 49523  00234C  D801               	call	i2u1380_48
 49524  00234E  0011               	retfie		f
 49525  002350                     i2u1380_48:
 49526  002350  0005               	push	
 49527  002352  6EFA               	movwf	pclath,c
 49528  002354  51AA               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 49529  002356  6EFD               	movwf	tosl,c
 49530  002358  51AB               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 49531  00235A  6EFE               	movwf	tosh,c
 49532  00235C  51AC               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 49533  00235E  6EFF               	movwf	tosu,c
 49534  002360  50FA               	movf	pclath,w,c
 49535  002362  0012               	return		;indir
 49536  002364                     __end_of_UART2_tx_vect_isr:
 49537                           	opt callstack 0
 49538                           
 49539 ;; *************** function _UART2_Transmit_ISR *****************
 49540 ;; Defined at:
 49541 ;;		line 213 in file "mcc_generated_files/uart2.c"
 49542 ;; Parameters:    Size  Location     Type
 49543 ;;		None
 49544 ;; Auto vars:     Size  Location     Type
 49545 ;;		None
 49546 ;; Return value:  Size  Location     Type
 49547 ;;                  1  [STACK] void 
 49548 ;; Registers used:
 49549 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 49550 ;; Tracked objects:
 49551 ;;		On entry : 3F/0
 49552 ;;		On exit  : 3B/39
 49553 ;;		Unchanged: 0/0
 49554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49559 ;;Total ram usage:        0 bytes
 49560 ;; Hardware stack levels used:    1
 49561 ;; This function calls:
 49562 ;;		Nothing
 49563 ;; This function is called by:
 49564 ;;		_UART2_Initialize
 49565 ;;		_UART2_tx_vect_isr
 49566 ;; This function uses a reentrant model
 49567 ;;
 49568                           
 49569                           	psect	text216
 49570  0020DC                     __ptext216:
 49571                           	opt callstack 0
 49572  0020DC                     _UART2_Transmit_ISR:
 49573                           	opt callstack 4
 49574                           
 49575                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 49576                           
 49577                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49578                           ;incstack = 0
 49579  0020DC  0E40               	movlw	64
 49580  0020DE  6055               	cpfslt	_uart2TxBufferRemaining^0,c
 49581  0020E0  D010               	goto	l675
 49582                           
 49583                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 49584  0020E2  0E00               	movlw	low _uart2TxBuffer
 49585  0020E4  2456               	addwf	_uart2TxTail^0,w,c	;volatile
 49586  0020E6  6ED9               	movwf	fsr2l,c
 49587  0020E8  6ADA               	clrf	fsr2h,c
 49588  0020EA  0E04               	movlw	high _uart2TxBuffer
 49589  0020EC  22DA               	addwfc	fsr2h,f,c
 49590  0020EE  50DF               	movf	indf2,w,c
 49591  0020F0  013D               	movlb	61	; () banked
 49592  0020F2  6FD2               	movwf	210,b	;volatile
 49593                           
 49594                           ; BSR set to: 61
 49595  0020F4  2A56               	incf	_uart2TxTail^0,f,c	;volatile
 49596                           
 49597                           ; BSR set to: 61
 49598                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 49599  0020F6  0E3F               	movlw	63
 49600  0020F8  6456               	cpfsgt	_uart2TxTail^0,c
 49601  0020FA  D001               	goto	l13908
 49602                           
 49603                           ; BSR set to: 61
 49604                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 49605  0020FC  6A56               	clrf	_uart2TxTail^0,c	;volatile
 49606  0020FE                     l13908:
 49607                           
 49608                           ; BSR set to: 61
 49609                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 49610  0020FE  2A55               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 49611                           
 49612                           ;mcc_generated_files/uart2.c: 224:     }
 49613  002100  0012               	return	
 49614  002102                     l675:
 49615                           
 49616                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 49617  002102  0139               	movlb	57	; () banked
 49618  002104  9796               	bcf	150,3,b	;volatile
 49619                           
 49620                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 49621  002106  0012               	return		;funcret
 49622  002108                     __end_of_UART2_Transmit_ISR:
 49623                           	opt callstack 0
 49624                           
 49625 ;; *************** function _UART2_rx_vect_isr *****************
 49626 ;; Defined at:
 49627 ;;		line 203 in file "mcc_generated_files/uart2.c"
 49628 ;; Parameters:    Size  Location     Type
 49629 ;;		None
 49630 ;; Auto vars:     Size  Location     Type
 49631 ;;		None
 49632 ;; Return value:  Size  Location     Type
 49633 ;;                  1    wreg      void 
 49634 ;; Registers used:
 49635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 49636 ;; Tracked objects:
 49637 ;;		On entry : 0/0
 49638 ;;		On exit  : 0/0
 49639 ;;		Unchanged: 0/0
 49640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49645 ;;Total ram usage:        0 bytes
 49646 ;; Hardware stack levels used:    1
 49647 ;; Hardware stack levels required when called:    1
 49648 ;; This function calls:
 49649 ;;		Absolute function
 49650 ;;		_UART2_Receive_ISR
 49651 ;; This function is called by:
 49652 ;;		Interrupt level 2
 49653 ;; This function uses a non-reentrant model
 49654 ;;
 49655                           
 49656                           	psect	text217
 49657  002364                     __ptext217:
 49658                           	opt callstack 0
 49659  002364                     _UART2_rx_vect_isr:
 49660                           	opt callstack 4
 49661                           
 49662                           ;incstack = 0
 49663  002364  EE14  F32C         	lfsr	1,___inthi_sp
 49664                           
 49665                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 49666  002368  0100               	movlb	0	; () banked
 49667  00236A  51AD               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 49668  00236C  11AE               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 49669  00236E  11AF               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 49670  002370  B4D8               	btfsc	status,2,c
 49671  002372  0011               	retfie		f
 49672                           
 49673                           ; BSR set to: 0
 49674                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 49675  002374  D801               	call	i2u1382_48
 49676  002376  0011               	retfie		f
 49677  002378                     i2u1382_48:
 49678  002378  0005               	push	
 49679  00237A  6EFA               	movwf	pclath,c
 49680  00237C  51AD               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 49681  00237E  6EFD               	movwf	tosl,c
 49682  002380  51AE               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 49683  002382  6EFE               	movwf	tosh,c
 49684  002384  51AF               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 49685  002386  6EFF               	movwf	tosu,c
 49686  002388  50FA               	movf	pclath,w,c
 49687  00238A  0012               	return		;indir
 49688  00238C                     __end_of_UART2_rx_vect_isr:
 49689                           	opt callstack 0
 49690                           
 49691 ;; *************** function _UART2_Receive_ISR *****************
 49692 ;; Defined at:
 49693 ;;		line 233 in file "mcc_generated_files/uart2.c"
 49694 ;; Parameters:    Size  Location     Type
 49695 ;;		None
 49696 ;; Auto vars:     Size  Location     Type
 49697 ;;		None
 49698 ;; Return value:  Size  Location     Type
 49699 ;;                  1  [STACK] void 
 49700 ;; Registers used:
 49701 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 49702 ;; Tracked objects:
 49703 ;;		On entry : 3F/0
 49704 ;;		On exit  : 3F/0
 49705 ;;		Unchanged: 0/0
 49706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49711 ;;Total ram usage:        0 bytes
 49712 ;; Hardware stack levels used:    1
 49713 ;; This function calls:
 49714 ;;		Nothing
 49715 ;; This function is called by:
 49716 ;;		_UART2_Initialize
 49717 ;;		_UART2_rx_vect_isr
 49718 ;; This function uses a reentrant model
 49719 ;;
 49720                           
 49721                           	psect	text218
 49722  0024EA                     __ptext218:
 49723                           	opt callstack 0
 49724  0024EA                     _UART2_Receive_ISR:
 49725                           	opt callstack 4
 49726                           
 49727                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 49728                           
 49729                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49730                           ;incstack = 0
 49731  0024EA  0E00               	movlw	low _uart2RxBuffer
 49732  0024EC  2454               	addwf	_uart2RxHead^0,w,c	;volatile
 49733  0024EE  6ED9               	movwf	fsr2l,c
 49734  0024F0  6ADA               	clrf	fsr2h,c
 49735  0024F2  0E06               	movlw	high _uart2RxBuffer
 49736  0024F4  22DA               	addwfc	fsr2h,f,c
 49737  0024F6  006F F743 FFDF     	movff	15824,indf2	;volatile
 49738  0024FC  2A54               	incf	_uart2RxHead^0,f,c	;volatile
 49739                           
 49740                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 49741  0024FE  2854               	incf	_uart2RxHead^0,w,c
 49742  002500  B4D8               	btfsc	status,2,c
 49743                           
 49744                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 49745  002502  6A54               	clrf	_uart2RxHead^0,c	;volatile
 49746                           
 49747                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 49748  002504  0100               	movlb	0	; () banked
 49749  002506  2BCD               	incf	_uart2RxCount& (0+255),f,b	;volatile
 49750                           
 49751                           ; BSR set to: 0
 49752                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 49753  002508  0012               	return		;funcret
 49754  00250A                     __end_of_UART2_Receive_ISR:
 49755                           	opt callstack 0
 49756                           
 49757 ;; *************** function _TMR6_ISR *****************
 49758 ;; Defined at:
 49759 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 49760 ;; Parameters:    Size  Location     Type
 49761 ;;		None
 49762 ;; Auto vars:     Size  Location     Type
 49763 ;;		None
 49764 ;; Return value:  Size  Location     Type
 49765 ;;                  1    wreg      void 
 49766 ;; Registers used:
 49767 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 49768 ;; Tracked objects:
 49769 ;;		On entry : 0/0
 49770 ;;		On exit  : 0/0
 49771 ;;		Unchanged: 0/0
 49772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49775 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49776 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49777 ;;Total ram usage:        1 bytes
 49778 ;; Hardware stack levels used:    1
 49779 ;; Hardware stack levels required when called:    2
 49780 ;; This function calls:
 49781 ;;		_TMR6_CallBack
 49782 ;; This function is called by:
 49783 ;;		Interrupt level 2
 49784 ;; This function uses a non-reentrant model
 49785 ;;
 49786                           
 49787                           	psect	text219
 49788  00259C                     __ptext219:
 49789                           	opt callstack 0
 49790  00259C                     _TMR6_ISR:
 49791                           	opt callstack 3
 49792                           
 49793                           ; BSR set to: 0
 49794                           ;incstack = 0
 49795  00259C  0060  F0A8  F006   	movff	btemp,??_TMR6_ISR
 49796  0025A2  EE14  F32C         	lfsr	1,___inthi_sp
 49797                           
 49798                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 49799  0025A6  0139               	movlb	57	; () banked
 49800  0025A8  91A9               	bcf	169,0,b	;volatile
 49801                           
 49802                           ; BSR set to: 57
 49803                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 49804  0025AA  EC20  F012         	call	_TMR6_CallBack	;wreg free
 49805  0025AE  0060  F018  F02A   	movff	??_TMR6_ISR,btemp
 49806  0025B4  0011               	retfie		f
 49807  0025B6                     __end_of_TMR6_ISR:
 49808                           	opt callstack 0
 49809                           
 49810 ;; *************** function _TMR6_CallBack *****************
 49811 ;; Defined at:
 49812 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 49813 ;; Parameters:    Size  Location     Type
 49814 ;;		None
 49815 ;; Auto vars:     Size  Location     Type
 49816 ;;		None
 49817 ;; Return value:  Size  Location     Type
 49818 ;;                  1  [STACK] void 
 49819 ;; Registers used:
 49820 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 49821 ;; Tracked objects:
 49822 ;;		On entry : 3F/39
 49823 ;;		On exit  : 0/0
 49824 ;;		Unchanged: 0/0
 49825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49830 ;;Total ram usage:        0 bytes
 49831 ;; Hardware stack levels used:    1
 49832 ;; Hardware stack levels required when called:    1
 49833 ;; This function calls:
 49834 ;;		Absolute function
 49835 ;;		_TMR6_DefaultInterruptHandler
 49836 ;; This function is called by:
 49837 ;;		_TMR6_ISR
 49838 ;; This function uses a reentrant model
 49839 ;;
 49840                           
 49841                           	psect	text220
 49842  002440                     __ptext220:
 49843                           	opt callstack 0
 49844  002440                     _TMR6_CallBack:
 49845                           	opt callstack 3
 49846                           
 49847                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 49848                           
 49849                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49850                           ;incstack = 0
 49851  002440  0100               	movlb	0	; () banked
 49852  002442  519E               	movf	_TMR6_InterruptHandler& (0+255),w,b
 49853  002444  119F               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 49854  002446  11A0               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 49855  002448  B4D8               	btfsc	status,2,c
 49856  00244A  0012               	return	
 49857                           
 49858                           ; BSR set to: 0
 49859                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 49860  00244C  D801               	call	u1317_48
 49861  00244E  0012               	return	
 49862  002450                     u1317_48:
 49863  002450  0005               	push	
 49864  002452  6EFA               	movwf	pclath,c
 49865  002454  519E               	movf	_TMR6_InterruptHandler& (0+255),w,b
 49866  002456  6EFD               	movwf	tosl,c
 49867  002458  519F               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 49868  00245A  6EFE               	movwf	tosh,c
 49869  00245C  51A0               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 49870  00245E  6EFF               	movwf	tosu,c
 49871  002460  50FA               	movf	pclath,w,c
 49872  002462  0012               	return		;indir
 49873  002464                     __end_of_TMR6_CallBack:
 49874                           	opt callstack 0
 49875                           
 49876 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 49877 ;; Defined at:
 49878 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 49879 ;; Parameters:    Size  Location     Type
 49880 ;;		None
 49881 ;; Auto vars:     Size  Location     Type
 49882 ;;  i               1  [STACK] unsigned char 
 49883 ;; Return value:  Size  Location     Type
 49884 ;;                  1  [STACK] void 
 49885 ;; Registers used:
 49886 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 49887 ;; Tracked objects:
 49888 ;;		On entry : 3F/0
 49889 ;;		On exit  : 0/0
 49890 ;;		Unchanged: 0/0
 49891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49896 ;;Total ram usage:        0 bytes
 49897 ;; Hardware stack levels used:    1
 49898 ;; This function calls:
 49899 ;;		Nothing
 49900 ;; This function is called by:
 49901 ;;		_TMR6_Initialize
 49902 ;;		_TMR6_CallBack
 49903 ;; This function uses a reentrant model
 49904 ;;
 49905                           
 49906                           	psect	text221
 49907  0018FE                     __ptext221:
 49908                           	opt callstack 0
 49909  0018FE                     _TMR6_DefaultInterruptHandler:
 49910                           	opt callstack 0
 49911                           
 49912                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49913  0018FE  52E6               	movf	postinc1,f,c
 49914                           
 49915                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 49916                           ;stkvar	_i @ sp[(-1)+0]
 49917                           
 49918                           ;incstack = 0
 49919  001900  0EFF               	movlw	-1
 49920  001902  6AE3               	clrf	plusw1,c
 49921  001904                     l13316:
 49922                           
 49923                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 49924                           ;stkvar	_i @ sp[(-1)+0]
 49925  001904  0EFF               	movlw	-1
 49926  001906  50E3               	movf	plusw1,w,c
 49927  001908  0D02               	mullw	2
 49928  00190A  0EBC               	movlw	low _tickCount
 49929  00190C  24F3               	addwf	243,w,c
 49930  00190E  6ED9               	movwf	fsr2l,c
 49931  001910  0E02               	movlw	high _tickCount
 49932  001912  20F4               	addwfc	prodh,w,c
 49933  001914  6EDA               	movwf	fsr2h,c
 49934  001916  50DE               	movf	postinc2,w,c
 49935  001918  10DE               	iorwf	postinc2,w,c
 49936  00191A  B4D8               	btfsc	status,2,c
 49937  00191C  D00C               	goto	l13320
 49938                           
 49939                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 49940                           ;stkvar	_i @ sp[(-1)+0]
 49941  00191E  0EFF               	movlw	-1
 49942  001920  50E3               	movf	plusw1,w,c
 49943  001922  0D02               	mullw	2
 49944  001924  0EBC               	movlw	low _tickCount
 49945  001926  24F3               	addwf	243,w,c
 49946  001928  6ED9               	movwf	fsr2l,c
 49947  00192A  0E02               	movlw	high _tickCount
 49948  00192C  20F4               	addwfc	prodh,w,c
 49949  00192E  6EDA               	movwf	fsr2h,c
 49950  001930  06DE               	decf	postinc2,f,c
 49951  001932  0E00               	movlw	0
 49952  001934  5ADD               	subwfb	postdec2,f,c
 49953  001936                     l13320:
 49954                           
 49955                           ;mcc_generated_files/tmr6.c: 207:  }
 49956                           ;stkvar	_i @ sp[(-1)+0]
 49957  001936  0EFF               	movlw	-1
 49958  001938  2AE3               	incf	plusw1,f,c
 49959                           
 49960                           ;stkvar	_i @ sp[(-1)+0]
 49961  00193A  0EFF               	movlw	-1
 49962  00193C  006F FF8C  F02A    	movff	plusw1,btemp
 49963  001942  0E0C               	movlw	12
 49964  001944  642A               	cpfsgt	btemp^0,c
 49965  001946  D7DE               	goto	l13316
 49966                           
 49967                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 49968  001948  52E5               	movf	postdec1,f,c
 49969  00194A  0012               	return		;funcret
 49970  00194C                     __end_of_TMR6_DefaultInterruptHandler:
 49971                           	opt callstack 0
 49972                           
 49973 ;; *************** function _DMA1_DMASCNT_ISR *****************
 49974 ;; Defined at:
 49975 ;;		line 126 in file "mcc_generated_files/dma1.c"
 49976 ;; Parameters:    Size  Location     Type
 49977 ;;		None
 49978 ;; Auto vars:     Size  Location     Type
 49979 ;;		None
 49980 ;; Return value:  Size  Location     Type
 49981 ;;                  1    wreg      void 
 49982 ;; Registers used:
 49983 ;;		None
 49984 ;; Tracked objects:
 49985 ;;		On entry : 0/0
 49986 ;;		On exit  : 3F/0
 49987 ;;		Unchanged: 0/0
 49988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49993 ;;Total ram usage:        0 bytes
 49994 ;; Hardware stack levels used:    1
 49995 ;; This function calls:
 49996 ;;		Nothing
 49997 ;; This function is called by:
 49998 ;;		Interrupt level 2
 49999 ;; This function uses a non-reentrant model
 50000 ;;
 50001                           
 50002                           	psect	text222
 50003  002710                     __ptext222:
 50004                           	opt callstack 0
 50005  002710                     _DMA1_DMASCNT_ISR:
 50006                           	opt callstack 5
 50007                           
 50008                           ;incstack = 0
 50009  002710  EE14  F32C         	lfsr	1,___inthi_sp
 50010                           
 50011                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 50012  002714  0139               	movlb	57	; () banked
 50013  002716  91A2               	bcf	162,0,b	;volatile
 50014                           
 50015                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 50016  002718  0100               	movlb	0	; () banked
 50017  00271A  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 50018                           
 50019                           ; BSR set to: 0
 50020  00271C  0011               	retfie		f
 50021  00271E                     __end_of_DMA1_DMASCNT_ISR:
 50022                           	opt callstack 0
 50023                           
 50024 ;; *************** function _DMA1_DMADCNT_ISR *****************
 50025 ;; Defined at:
 50026 ;;		line 133 in file "mcc_generated_files/dma1.c"
 50027 ;; Parameters:    Size  Location     Type
 50028 ;;		None
 50029 ;; Auto vars:     Size  Location     Type
 50030 ;;		None
 50031 ;; Return value:  Size  Location     Type
 50032 ;;                  1    wreg      void 
 50033 ;; Registers used:
 50034 ;;		None
 50035 ;; Tracked objects:
 50036 ;;		On entry : 0/0
 50037 ;;		On exit  : 3F/39
 50038 ;;		Unchanged: 0/0
 50039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50044 ;;Total ram usage:        0 bytes
 50045 ;; Hardware stack levels used:    1
 50046 ;; This function calls:
 50047 ;;		Nothing
 50048 ;; This function is called by:
 50049 ;;		Interrupt level 2
 50050 ;; This function uses a non-reentrant model
 50051 ;;
 50052                           
 50053                           	psect	text223
 50054  002734                     __ptext223:
 50055                           	opt callstack 0
 50056  002734                     _DMA1_DMADCNT_ISR:
 50057                           	opt callstack 5
 50058                           
 50059                           ; BSR set to: 0
 50060                           ;incstack = 0
 50061  002734  EE14  F32C         	lfsr	1,___inthi_sp
 50062                           
 50063                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 50064  002738  0139               	movlb	57	; () banked
 50065  00273A  93A2               	bcf	162,1,b	;volatile
 50066                           
 50067                           ; BSR set to: 57
 50068  00273C  0011               	retfie		f
 50069  00273E                     __end_of_DMA1_DMADCNT_ISR:
 50070                           	opt callstack 0
 50071                           
 50072 ;; *************** function _DMA1_DMAA_ISR *****************
 50073 ;; Defined at:
 50074 ;;		line 143 in file "mcc_generated_files/dma1.c"
 50075 ;; Parameters:    Size  Location     Type
 50076 ;;		None
 50077 ;; Auto vars:     Size  Location     Type
 50078 ;;		None
 50079 ;; Return value:  Size  Location     Type
 50080 ;;                  1    wreg      void 
 50081 ;; Registers used:
 50082 ;;		None
 50083 ;; Tracked objects:
 50084 ;;		On entry : 0/0
 50085 ;;		On exit  : 3F/39
 50086 ;;		Unchanged: 0/0
 50087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50092 ;;Total ram usage:        0 bytes
 50093 ;; Hardware stack levels used:    1
 50094 ;; This function calls:
 50095 ;;		Nothing
 50096 ;; This function is called by:
 50097 ;;		Interrupt level 2
 50098 ;; This function uses a non-reentrant model
 50099 ;;
 50100                           
 50101                           	psect	text224
 50102  002740                     __ptext224:
 50103                           	opt callstack 0
 50104  002740                     _DMA1_DMAA_ISR:
 50105                           	opt callstack 5
 50106                           
 50107                           ; BSR set to: 57
 50108                           ;incstack = 0
 50109  002740  EE14  F32C         	lfsr	1,___inthi_sp
 50110                           
 50111                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 50112  002744  0139               	movlb	57	; () banked
 50113  002746  97A2               	bcf	162,3,b	;volatile
 50114                           
 50115                           ; BSR set to: 57
 50116  002748  0011               	retfie		f
 50117  00274A                     __end_of_DMA1_DMAA_ISR:
 50118                           	opt callstack 0
 50119                           
 50120 ;; *************** function _DMA1_DMAOR_ISR *****************
 50121 ;; Defined at:
 50122 ;;		line 154 in file "mcc_generated_files/dma1.c"
 50123 ;; Parameters:    Size  Location     Type
 50124 ;;		None
 50125 ;; Auto vars:     Size  Location     Type
 50126 ;;		None
 50127 ;; Return value:  Size  Location     Type
 50128 ;;                  1    wreg      void 
 50129 ;; Registers used:
 50130 ;;		None
 50131 ;; Tracked objects:
 50132 ;;		On entry : 0/0
 50133 ;;		On exit  : 3F/39
 50134 ;;		Unchanged: 0/0
 50135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50140 ;;Total ram usage:        0 bytes
 50141 ;; Hardware stack levels used:    1
 50142 ;; This function calls:
 50143 ;;		Nothing
 50144 ;; This function is called by:
 50145 ;;		Interrupt level 2
 50146 ;; This function uses a non-reentrant model
 50147 ;;
 50148                           
 50149                           	psect	text225
 50150  00274C                     __ptext225:
 50151                           	opt callstack 0
 50152  00274C                     _DMA1_DMAOR_ISR:
 50153                           	opt callstack 5
 50154                           
 50155                           ; BSR set to: 57
 50156                           ;incstack = 0
 50157  00274C  EE14  F32C         	lfsr	1,___inthi_sp
 50158                           
 50159                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 50160  002750  0139               	movlb	57	; () banked
 50161  002752  95A2               	bcf	162,2,b	;volatile
 50162                           
 50163                           ; BSR set to: 57
 50164  002754  0011               	retfie		f
 50165  002756                     __end_of_DMA1_DMAOR_ISR:
 50166                           	opt callstack 0
 50167                           
 50168                           ;
 50169                           ; Interrupt Vector Table @ 0x8
 50170                           ;
 50171                           
 50172                           	psect	ivt0x8
 50173  000008                     __pivt0x8:
 50174                           	opt callstack 0
 50175  000008                     ivt0x8_base:
 50176                           	opt callstack 0
 50177                           
 50178                           ; Vector 0 : SWINT
 50179  000008  09E9               	dw	_Default_ISR shr (0+2)
 50180                           
 50181                           ; Vector 1 : HLVD
 50182  00000A  09E9               	dw	_Default_ISR shr (0+2)
 50183                           
 50184                           ; Vector 2 : OSF
 50185  00000C  09E9               	dw	_Default_ISR shr (0+2)
 50186                           
 50187                           ; Vector 3 : CSW
 50188  00000E  09E9               	dw	_Default_ISR shr (0+2)
 50189                           
 50190                           ; Vector 4 : NVM
 50191  000010  09E9               	dw	_Default_ISR shr (0+2)
 50192                           
 50193                           ; Vector 5 : SCAN
 50194  000012  09E9               	dw	_Default_ISR shr (0+2)
 50195                           
 50196                           ; Vector 6 : CRC
 50197  000014  09E9               	dw	_Default_ISR shr (0+2)
 50198                           
 50199                           ; Vector 7 : IOC
 50200  000016  09E9               	dw	_Default_ISR shr (0+2)
 50201                           
 50202                           ; Vector 8 : INT0
 50203  000018  09C0               	dw	_INT0_ISR shr (0+2)
 50204                           
 50205                           ; Vector 9 : ZCD
 50206  00001A  09E9               	dw	_Default_ISR shr (0+2)
 50207                           
 50208                           ; Vector 10 : AD
 50209  00001C  082C               	dw	_ADCC_ISR shr (0+2)
 50210                           
 50211                           ; Vector 11 : ADT
 50212  00001E  04B0               	dw	_ADCC_ThresholdISR shr (0+2)
 50213                           
 50214                           ; Vector 12 : CMP1
 50215  000020  09E9               	dw	_Default_ISR shr (0+2)
 50216                           
 50217                           ; Vector 13 : SMT1
 50218  000022  09E9               	dw	_Default_ISR shr (0+2)
 50219                           
 50220                           ; Vector 14 : SMT1PRA
 50221  000024  09E9               	dw	_Default_ISR shr (0+2)
 50222                           
 50223                           ; Vector 15 : SMT1PRW
 50224  000026  09E9               	dw	_Default_ISR shr (0+2)
 50225                           
 50226                           ; Vector 16 : DMA1SCNT
 50227  000028  09C4               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 50228                           
 50229                           ; Vector 17 : DMA1DCNT
 50230  00002A  09CD               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 50231                           
 50232                           ; Vector 18 : DMA1OR
 50233  00002C  09D3               	dw	_DMA1_DMAOR_ISR shr (0+2)
 50234                           
 50235                           ; Vector 19 : DMA1A
 50236  00002E  09D0               	dw	_DMA1_DMAA_ISR shr (0+2)
 50237                           
 50238                           ; Vector 20 : SPI1RX
 50239  000030  09E9               	dw	_Default_ISR shr (0+2)
 50240                           
 50241                           ; Vector 21 : SPI1TX
 50242  000032  09E9               	dw	_Default_ISR shr (0+2)
 50243                           
 50244                           ; Vector 22 : SPI1
 50245  000034  09E9               	dw	_Default_ISR shr (0+2)
 50246                           
 50247                           ; Vector 23 : I2C1RX
 50248  000036  09E9               	dw	_Default_ISR shr (0+2)
 50249                           
 50250                           ; Vector 24 : I2C1TX
 50251  000038  09E9               	dw	_Default_ISR shr (0+2)
 50252                           
 50253                           ; Vector 25 : I2C1
 50254  00003A  09E9               	dw	_Default_ISR shr (0+2)
 50255                           
 50256                           ; Vector 26 : I2C1E
 50257  00003C  09E9               	dw	_Default_ISR shr (0+2)
 50258                           
 50259                           ; Vector 27 : U1RX
 50260  00003E  08C5               	dw	_UART1_rx_vect_isr shr (0+2)
 50261                           
 50262                           ; Vector 28 : U1TX
 50263  000040  09E9               	dw	_Default_ISR shr (0+2)
 50264                           
 50265                           ; Vector 29 : U1E
 50266  000042  09E9               	dw	_Default_ISR shr (0+2)
 50267                           
 50268                           ; Vector 30 : U1
 50269  000044  09E9               	dw	_Default_ISR shr (0+2)
 50270                           
 50271                           ; Vector 31 : TMR0
 50272  000046  09E9               	dw	_Default_ISR shr (0+2)
 50273                           
 50274                           ; Vector 32 : TMR1
 50275  000048  09E9               	dw	_Default_ISR shr (0+2)
 50276                           
 50277                           ; Vector 33 : TMR1G
 50278  00004A  09E9               	dw	_Default_ISR shr (0+2)
 50279                           
 50280                           ; Vector 34 : TMR2
 50281  00004C  09E9               	dw	_Default_ISR shr (0+2)
 50282                           
 50283                           ; Vector 35 : CCP1
 50284  00004E  09E9               	dw	_Default_ISR shr (0+2)
 50285                           
 50286                           ; Vector 36 : Undefined
 50287  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 50288                           
 50289                           ; Vector 37 : NCO1
 50290  000052  09E9               	dw	_Default_ISR shr (0+2)
 50291                           
 50292                           ; Vector 38 : CWG1
 50293  000054  09E9               	dw	_Default_ISR shr (0+2)
 50294                           
 50295                           ; Vector 39 : CLC1
 50296  000056  09E9               	dw	_Default_ISR shr (0+2)
 50297                           
 50298                           ; Vector 40 : INT1
 50299  000058  0741               	dw	_INT1_ISR shr (0+2)
 50300                           
 50301                           ; Vector 41 : CMP2
 50302  00005A  09E9               	dw	_Default_ISR shr (0+2)
 50303                           
 50304                           ; Vector 42 : DMA2SCNT
 50305  00005C  09E9               	dw	_Default_ISR shr (0+2)
 50306                           
 50307                           ; Vector 43 : DMA2DCNT
 50308  00005E  09E9               	dw	_Default_ISR shr (0+2)
 50309                           
 50310                           ; Vector 44 : DMA2OR
 50311  000060  09E9               	dw	_Default_ISR shr (0+2)
 50312                           
 50313                           ; Vector 45 : DMA2A
 50314  000062  09E9               	dw	_Default_ISR shr (0+2)
 50315                           
 50316                           ; Vector 46 : I2C2RX
 50317  000064  09E9               	dw	_Default_ISR shr (0+2)
 50318                           
 50319                           ; Vector 47 : I2C2TX
 50320  000066  09E9               	dw	_Default_ISR shr (0+2)
 50321                           
 50322                           ; Vector 48 : I2C2
 50323  000068  09E9               	dw	_Default_ISR shr (0+2)
 50324                           
 50325                           ; Vector 49 : I2C2E
 50326  00006A  09E9               	dw	_Default_ISR shr (0+2)
 50327                           
 50328                           ; Vector 50 : U2RX
 50329  00006C  08D9               	dw	_UART2_rx_vect_isr shr (0+2)
 50330                           
 50331                           ; Vector 51 : U2TX
 50332  00006E  08CF               	dw	_UART2_tx_vect_isr shr (0+2)
 50333                           
 50334                           ; Vector 52 : U2E
 50335  000070  09E9               	dw	_Default_ISR shr (0+2)
 50336                           
 50337                           ; Vector 53 : U2
 50338  000072  09E9               	dw	_Default_ISR shr (0+2)
 50339                           
 50340                           ; Vector 54 : TMR3
 50341  000074  79FD               	dw	_TMR3_ISR shr (0+2)
 50342                           
 50343                           ; Vector 55 : TMR3G
 50344  000076  09E9               	dw	_Default_ISR shr (0+2)
 50345                           
 50346                           ; Vector 56 : TMR4
 50347  000078  09E9               	dw	_Default_ISR shr (0+2)
 50348                           
 50349                           ; Vector 57 : CCP2
 50350  00007A  09E9               	dw	_Default_ISR shr (0+2)
 50351                           
 50352                           ; Vector 58 : Undefined
 50353  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 50354                           
 50355                           ; Vector 59 : CWG2
 50356  00007E  09E9               	dw	_Default_ISR shr (0+2)
 50357                           
 50358                           ; Vector 60 : CLC2
 50359  000080  09E9               	dw	_Default_ISR shr (0+2)
 50360                           
 50361                           ; Vector 61 : INT2
 50362  000082  09E9               	dw	_Default_ISR shr (0+2)
 50363                           
 50364                           ; Vector 62 : Undefined
 50365  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 50366                           
 50367                           ; Vector 63 : Undefined
 50368  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 50369                           
 50370                           ; Vector 64 : Undefined
 50371  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 50372                           
 50373                           ; Vector 65 : Undefined
 50374  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 50375                           
 50376                           ; Vector 66 : Undefined
 50377  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 50378                           
 50379                           ; Vector 67 : Undefined
 50380  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 50381                           
 50382                           ; Vector 68 : Undefined
 50383  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 50384                           
 50385                           ; Vector 69 : Undefined
 50386  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 50387                           
 50388                           ; Vector 70 : TMR5
 50389  000094  763A               	dw	_TMR5_ISR shr (0+2)
 50390                           
 50391                           ; Vector 71 : TMR5G
 50392  000096  09E9               	dw	_Default_ISR shr (0+2)
 50393                           
 50394                           ; Vector 72 : TMR6
 50395  000098  0967               	dw	_TMR6_ISR shr (0+2)
 50396                           
 50397                           ; Vector 73 : CCP3
 50398  00009A  09E9               	dw	_Default_ISR shr (0+2)
 50399                           
 50400                           ; Vector 74 : CWG3
 50401  00009C  09E9               	dw	_Default_ISR shr (0+2)
 50402                           
 50403                           ; Vector 75 : CLC3
 50404  00009E  09E9               	dw	_Default_ISR shr (0+2)
 50405                           
 50406                           ; Vector 76 : Undefined
 50407  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 50408                           
 50409                           ; Vector 77 : Undefined
 50410  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 50411                           
 50412                           ; Vector 78 : Undefined
 50413  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 50414                           
 50415                           ; Vector 79 : Undefined
 50416  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 50417                           
 50418                           ; Vector 80 : CCP4
 50419  0000A8  09E9               	dw	_Default_ISR shr (0+2)
 50420                           
 50421                           ; Vector 81 : CLC4
 50422  0000AA  09E9               	dw	_Default_ISR shr (0+2)
 50423  0000AC                     ivt0x8_undefint:
 50424                           	opt callstack 0
 50425  0000AC  00FF               	reset	
 50426                           
 50427                           	psect	text226
 50428  000000                     __ptext226:
 50429                           	opt callstack 0
 50430                           
 50431                           	psect	rparam
 50432  0000                     
 50433                           	psect	temp
 50434  00002A                     btemp:
 50435                           	opt callstack 0
 50436  00002A                     	ds	32
 50437  0000                     wtemp0	set	btemp
 50438  0000                     wtemp1	set	btemp+2
 50439  0000                     wtemp2	set	btemp+4
 50440  0000                     wtemp3	set	btemp+6
 50441  0000                     wtemp4	set	btemp+8
 50442  0000                     wtemp5	set	btemp+10
 50443  0000                     wtemp8	set	btemp+1
 50444  0000                     ttemp0	set	btemp
 50445  0000                     ttemp1	set	btemp+3
 50446  0000                     ttemp2	set	btemp+6
 50447  0000                     ttemp3	set	btemp+9
 50448  0000                     ttemp5	set	btemp+1
 50449  0000                     ttemp6	set	btemp+4
 50450  0000                     ttemp7	set	btemp+8
 50451  0000                     ltemp0	set	btemp
 50452  0000                     ltemp1	set	btemp+4
 50453  0000                     ltemp2	set	btemp+8
 50454  0000                     lltemp0	set	btemp
 50455  0000                     lltemp1	set	btemp+8
 50456  0000                     lltemp2	set	btemp+16
 50457  0000                     lltemp3	set	btemp+24
 50458                           tosu	equ	0x3FFF
 50459                           tosh	equ	0x3FFE
 50460                           tosl	equ	0x3FFD
 50461                           stkptr	equ	0x3FFC
 50462                           pclatu	equ	0x3FFB
 50463                           pclath	equ	0x3FFA
 50464                           pcl	equ	0x3FF9
 50465                           tblptru	equ	0x3FF8
 50466                           tblptrh	equ	0x3FF7
 50467                           tblptrl	equ	0x3FF6
 50468                           tablat	equ	0x3FF5
 50469                           prodh	equ	0x3FF4
 50470                           prodl	equ	0x3FF3
 50471                           indf0	equ	0x3FEF
 50472                           postinc0	equ	0x3FEE
 50473                           postdec0	equ	0x3FED
 50474                           preinc0	equ	0x3FEC
 50475                           plusw0	equ	0x3FEB
 50476                           fsr0h	equ	0x3FEA
 50477                           fsr0l	equ	0x3FE9
 50478                           wreg	equ	0x3FE8
 50479                           indf1	equ	0x3FE7
 50480                           postinc1	equ	0x3FE6
 50481                           postdec1	equ	0x3FE5
 50482                           preinc1	equ	0x3FE4
 50483                           plusw1	equ	0x3FE3
 50484                           fsr1h	equ	0x3FE2
 50485                           fsr1l	equ	0x3FE1
 50486                           bsr	equ	0x3FE0
 50487                           indf2	equ	0x3FDF
 50488                           postinc2	equ	0x3FDE
 50489                           postdec2	equ	0x3FDD
 50490                           preinc2	equ	0x3FDC
 50491                           plusw2	equ	0x3FDB
 50492                           fsr2h	equ	0x3FDA
 50493                           fsr2l	equ	0x3FD9
 50494                           status	equ	0x3FD8


Data Sizes:
    Strings     1544
    Constant    588
    Data        1184
    BSS         1775
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     41      55
    BANK0           160     25     158
    BANK1           256      0     253
    BANK2           256      0     230
    BANK3           256      0     247
    BANK4           256      0     219
    BANK5           256      0     134
    BANK6           256      0     255
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_129(CODE[1]), STR_89(CODE[1]), 

    is_leap	PTR int  size(2) Largest target is 2
		 -> F5(STACK[2]), is_leap(STACK[2]), NULL(NULL[0]), 

    sp____tm_to_tzname	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_130(CODE[1]), 

    abbrevs_end	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    oppoff	PTR long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    zonename	PTR PTR const unsigned char  size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    offset	PTR long  size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    isdst	PTR int  size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    rule	PTR const int  size(2) Largest target is 10
		 -> r1(BANK1[10]), r0(BANK1[10]), 

    abbrevs	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    types	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    alt	PTR unsigned int  size(2) Largest target is 2
		 -> alt(STACK[2]), 

    index	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    zi	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    trans	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    s	PTR const unsigned char  size(2) Largest target is 4
		 -> __gmt(CODE[4]), 

    z	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    d	PTR unsigned char  size(2) Largest target is 7
		 -> dst_name(BANK1[7]), std_name(BANK1[7]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    rule	PTR int  size(2) Largest target is 10
		 -> r1(BANK1[10]), r0(BANK1[10]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    old_tz	PTR unsigned char  size(2) Largest target is 32
		 -> old_tz_buf(BANK3[32]), 

    __tzname	PTR unsigned char [2] size(2) Largest target is 7
		 -> dst_name(BANK1[7]), std_name(BANK1[7]), NULL(NULL[0]), 

    tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tm	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_124(CODE[3]), STR_120(CODE[3]), STR_115(CODE[3]), STR_110(CODE[3]), 
		 -> STR_105(CODE[3]), STR_101(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_124(CODE[3]), STR_120(CODE[3]), STR_115(CODE[3]), STR_110(CODE[3]), 
		 -> STR_105(CODE[3]), STR_101(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_90(CODE[127]), STR_88(CODE[3]), STR_87(CODE[3]), 
		 -> STR_86(CODE[21]), STR_85(CODE[21]), STR_84(CODE[21]), STR_83(CODE[21]), 
		 -> STR_82(CODE[21]), STR_81(CODE[21]), STR_80(CODE[26]), STR_79(CODE[15]), 
		 -> STR_78(CODE[15]), STR_77(CODE[15]), STR_76(CODE[15]), STR_75(CODE[10]), 
		 -> STR_74(CODE[10]), STR_73(CODE[19]), STR_72(CODE[19]), STR_69(CODE[3]), 
		 -> STR_68(CODE[14]), STR_67(CODE[28]), STR_66(CODE[28]), STR_65(CODE[28]), 
		 -> STR_64(CODE[22]), STR_63(CODE[22]), STR_62(CODE[22]), STR_61(CODE[22]), 
		 -> STR_60(CODE[22]), STR_59(CODE[22]), STR_58(CODE[22]), STR_57(CODE[22]), 
		 -> STR_56(CODE[22]), STR_55(CODE[21]), STR_54(CODE[22]), STR_53(CODE[22]), 
		 -> STR_52(CODE[22]), STR_51(CODE[22]), STR_50(CODE[22]), STR_49(CODE[22]), 
		 -> STR_48(CODE[24]), STR_47(CODE[24]), STR_46(CODE[24]), STR_45(CODE[30]), 
		 -> STR_44(CODE[24]), STR_43(CODE[24]), STR_42(CODE[23]), STR_41(CODE[23]), 
		 -> STR_40(CODE[23]), STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[23]), STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[23]), 
		 -> STR_32(CODE[23]), STR_31(CODE[23]), STR_30(CODE[18]), STR_29(CODE[17]), 
		 -> STR_28(CODE[17]), STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), 
		 -> STR_24(CODE[14]), STR_23(CODE[27]), STR_22(CODE[27]), STR_21(CODE[23]), 
		 -> STR_20(CODE[22]), STR_19(CODE[22]), STR_18(CODE[22]), STR_17(CODE[22]), 
		 -> STR_16(CODE[23]), STR_15(CODE[23]), STR_14(CODE[23]), STR_13(CODE[26]), 
		 -> STR_12(CODE[22]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_90(CODE[127]), STR_88(CODE[3]), STR_87(CODE[3]), 
		 -> STR_86(CODE[21]), STR_85(CODE[21]), STR_84(CODE[21]), STR_83(CODE[21]), 
		 -> STR_82(CODE[21]), STR_81(CODE[21]), STR_80(CODE[26]), STR_79(CODE[15]), 
		 -> STR_78(CODE[15]), STR_77(CODE[15]), STR_76(CODE[15]), STR_75(CODE[10]), 
		 -> STR_74(CODE[10]), STR_73(CODE[19]), STR_72(CODE[19]), STR_69(CODE[3]), 
		 -> STR_68(CODE[14]), STR_67(CODE[28]), STR_66(CODE[28]), STR_65(CODE[28]), 
		 -> STR_64(CODE[22]), STR_63(CODE[22]), STR_62(CODE[22]), STR_61(CODE[22]), 
		 -> STR_60(CODE[22]), STR_59(CODE[22]), STR_58(CODE[22]), STR_57(CODE[22]), 
		 -> STR_56(CODE[22]), STR_55(CODE[21]), STR_54(CODE[22]), STR_53(CODE[22]), 
		 -> STR_52(CODE[22]), STR_51(CODE[22]), STR_50(CODE[22]), STR_49(CODE[22]), 
		 -> STR_48(CODE[24]), STR_47(CODE[24]), STR_46(CODE[24]), STR_45(CODE[30]), 
		 -> STR_44(CODE[24]), STR_43(CODE[24]), STR_42(CODE[23]), STR_41(CODE[23]), 
		 -> STR_40(CODE[23]), STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[23]), STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[23]), 
		 -> STR_32(CODE[23]), STR_31(CODE[23]), STR_30(CODE[18]), STR_29(CODE[17]), 
		 -> STR_28(CODE[17]), STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), 
		 -> STR_24(CODE[14]), STR_23(CODE[27]), STR_22(CODE[27]), STR_21(CODE[23]), 
		 -> STR_20(CODE[22]), STR_19(CODE[22]), STR_18(CODE[22]), STR_17(CODE[22]), 
		 -> STR_16(CODE[23]), STR_15(CODE[23]), STR_14(CODE[23]), STR_13(CODE[26]), 
		 -> STR_12(CODE[22]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR const unsigned char  size(2) Largest target is 642
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), nuls(STACK[7]), 
		 -> dbuf(BANK3[80]), spin(CODE[120]), STR_71(CODE[9]), STR_70(CODE[12]), 
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), port_data(BIGRAM[512]), 
		 -> STR_3(CODE[5]), V(BANK2[181]), 

    a	PTR const unsigned char  size(2) Largest target is 642
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), nuls(STACK[7]), 
		 -> dbuf(BANK3[80]), spin(CODE[120]), STR_71(CODE[9]), STR_70(CODE[12]), 
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), port_data(BIGRAM[512]), 
		 -> STR_3(CODE[5]), V(BANK2[181]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_96(CODE[4]), STR_95(CODE[4]), STR_92(CODE[4]), STR_91(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_96(CODE[4]), STR_95(CODE[4]), STR_92(CODE[4]), STR_91(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_69(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_90(CODE[127]), STR_88(CODE[3]), STR_87(CODE[3]), STR_86(CODE[21]), 
		 -> STR_85(CODE[21]), STR_84(CODE[21]), STR_83(CODE[21]), STR_82(CODE[21]), 
		 -> STR_81(CODE[21]), STR_80(CODE[26]), STR_79(CODE[15]), STR_78(CODE[15]), 
		 -> STR_77(CODE[15]), STR_76(CODE[15]), STR_75(CODE[10]), STR_74(CODE[10]), 
		 -> STR_73(CODE[19]), STR_72(CODE[19]), STR_68(CODE[14]), STR_67(CODE[28]), 
		 -> STR_66(CODE[28]), STR_65(CODE[28]), STR_64(CODE[22]), STR_63(CODE[22]), 
		 -> STR_62(CODE[22]), STR_61(CODE[22]), STR_60(CODE[22]), STR_59(CODE[22]), 
		 -> STR_58(CODE[22]), STR_57(CODE[22]), STR_56(CODE[22]), STR_55(CODE[21]), 
		 -> STR_54(CODE[22]), STR_53(CODE[22]), STR_52(CODE[22]), STR_51(CODE[22]), 
		 -> STR_50(CODE[22]), STR_49(CODE[22]), STR_48(CODE[24]), STR_47(CODE[24]), 
		 -> STR_46(CODE[24]), STR_45(CODE[30]), STR_44(CODE[24]), STR_43(CODE[24]), 
		 -> STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[23]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[23]), 
		 -> STR_34(CODE[23]), STR_33(CODE[23]), STR_32(CODE[23]), STR_31(CODE[23]), 
		 -> STR_30(CODE[18]), STR_29(CODE[17]), STR_28(CODE[17]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[14]), STR_23(CODE[27]), 
		 -> STR_22(CODE[27]), STR_21(CODE[23]), STR_20(CODE[22]), STR_19(CODE[22]), 
		 -> STR_18(CODE[22]), STR_17(CODE[22]), STR_16(CODE[23]), STR_15(CODE[23]), 
		 -> STR_14(CODE[23]), STR_13(CODE[26]), STR_12(CODE[22]), STR_11(CODE[21]), 
		 -> STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    s	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S7381_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 642
		 -> D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 642
		 -> D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK5[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK5[67]), 

    sp____localtime_r.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tm	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    t	PTR const long long  size(1) Largest target is 8
		 -> pclock(BANK0[8]), 

    sp__localtime.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    sp____localtime_r	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    t	PTR const long long  size(1) Largest target is 8
		 -> pclock(BANK0[8]), 

    F191.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    s	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_90(CODE[127]), STR_88(CODE[3]), STR_87(CODE[3]), STR_86(CODE[21]), 
		 -> STR_85(CODE[21]), STR_84(CODE[21]), STR_83(CODE[21]), STR_82(CODE[21]), 
		 -> STR_81(CODE[21]), STR_80(CODE[26]), STR_79(CODE[15]), STR_78(CODE[15]), 
		 -> STR_77(CODE[15]), STR_76(CODE[15]), STR_75(CODE[10]), STR_74(CODE[10]), 
		 -> STR_73(CODE[19]), STR_72(CODE[19]), STR_69(CODE[3]), STR_68(CODE[14]), 
		 -> STR_67(CODE[28]), STR_66(CODE[28]), STR_65(CODE[28]), STR_64(CODE[22]), 
		 -> STR_63(CODE[22]), STR_62(CODE[22]), STR_61(CODE[22]), STR_60(CODE[22]), 
		 -> STR_59(CODE[22]), STR_58(CODE[22]), STR_57(CODE[22]), STR_56(CODE[22]), 
		 -> STR_55(CODE[21]), STR_54(CODE[22]), STR_53(CODE[22]), STR_52(CODE[22]), 
		 -> STR_51(CODE[22]), STR_50(CODE[22]), STR_49(CODE[22]), STR_48(CODE[24]), 
		 -> STR_47(CODE[24]), STR_46(CODE[24]), STR_45(CODE[30]), STR_44(CODE[24]), 
		 -> STR_43(CODE[24]), STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), 
		 -> STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[23]), 
		 -> STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[23]), STR_32(CODE[23]), 
		 -> STR_31(CODE[23]), STR_30(CODE[18]), STR_29(CODE[17]), STR_28(CODE[17]), 
		 -> STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[14]), 
		 -> STR_23(CODE[27]), STR_22(CODE[27]), STR_21(CODE[23]), STR_20(CODE[22]), 
		 -> STR_19(CODE[22]), STR_18(CODE[22]), STR_17(CODE[22]), STR_16(CODE[23]), 
		 -> STR_15(CODE[23]), STR_14(CODE[23]), STR_13(CODE[26]), STR_12(CODE[22]), 
		 -> STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK3[27]), 

    tim.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tim	PTR const struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    s	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_128(CODE[37]), STR_127(CODE[22]), 

    cp	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK3[27]), 

    f1p	PTR  size(2) Largest target is 320
		 -> C(BIGRAM[320]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_90(CODE[127]), STR_88(CODE[3]), STR_87(CODE[3]), STR_86(CODE[21]), 
		 -> STR_85(CODE[21]), STR_84(CODE[21]), STR_83(CODE[21]), STR_82(CODE[21]), 
		 -> STR_81(CODE[21]), STR_80(CODE[26]), STR_79(CODE[15]), STR_78(CODE[15]), 
		 -> STR_77(CODE[15]), STR_76(CODE[15]), STR_75(CODE[10]), STR_74(CODE[10]), 
		 -> STR_73(CODE[19]), STR_72(CODE[19]), STR_69(CODE[3]), STR_68(CODE[14]), 
		 -> STR_67(CODE[28]), STR_66(CODE[28]), STR_65(CODE[28]), STR_64(CODE[22]), 
		 -> STR_63(CODE[22]), STR_62(CODE[22]), STR_61(CODE[22]), STR_60(CODE[22]), 
		 -> STR_59(CODE[22]), STR_58(CODE[22]), STR_57(CODE[22]), STR_56(CODE[22]), 
		 -> STR_55(CODE[21]), STR_54(CODE[22]), STR_53(CODE[22]), STR_52(CODE[22]), 
		 -> STR_51(CODE[22]), STR_50(CODE[22]), STR_49(CODE[22]), STR_48(CODE[24]), 
		 -> STR_47(CODE[24]), STR_46(CODE[24]), STR_45(CODE[30]), STR_44(CODE[24]), 
		 -> STR_43(CODE[24]), STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), 
		 -> STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[23]), 
		 -> STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[23]), STR_32(CODE[23]), 
		 -> STR_31(CODE[23]), STR_30(CODE[18]), STR_29(CODE[17]), STR_28(CODE[17]), 
		 -> STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[14]), 
		 -> STR_23(CODE[27]), STR_22(CODE[27]), STR_21(CODE[23]), STR_20(CODE[22]), 
		 -> STR_19(CODE[22]), STR_18(CODE[22]), STR_17(CODE[22]), STR_16(CODE[23]), 
		 -> STR_15(CODE[23]), STR_14(CODE[23]), STR_13(CODE[26]), STR_12(CODE[22]), 
		 -> STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    cfmt	PTR unsigned char  size(2) Largest target is 127
		 -> STR_90(CODE[127]), STR_88(CODE[3]), STR_87(CODE[3]), STR_86(CODE[21]), 
		 -> STR_85(CODE[21]), STR_84(CODE[21]), STR_83(CODE[21]), STR_82(CODE[21]), 
		 -> STR_81(CODE[21]), STR_80(CODE[26]), STR_79(CODE[15]), STR_78(CODE[15]), 
		 -> STR_77(CODE[15]), STR_76(CODE[15]), STR_75(CODE[10]), STR_74(CODE[10]), 
		 -> STR_73(CODE[19]), STR_72(CODE[19]), STR_69(CODE[3]), STR_68(CODE[14]), 
		 -> STR_67(CODE[28]), STR_66(CODE[28]), STR_65(CODE[28]), STR_64(CODE[22]), 
		 -> STR_63(CODE[22]), STR_62(CODE[22]), STR_61(CODE[22]), STR_60(CODE[22]), 
		 -> STR_59(CODE[22]), STR_58(CODE[22]), STR_57(CODE[22]), STR_56(CODE[22]), 
		 -> STR_55(CODE[21]), STR_54(CODE[22]), STR_53(CODE[22]), STR_52(CODE[22]), 
		 -> STR_51(CODE[22]), STR_50(CODE[22]), STR_49(CODE[22]), STR_48(CODE[24]), 
		 -> STR_47(CODE[24]), STR_46(CODE[24]), STR_45(CODE[30]), STR_44(CODE[24]), 
		 -> STR_43(CODE[24]), STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), 
		 -> STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[23]), 
		 -> STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[23]), STR_32(CODE[23]), 
		 -> STR_31(CODE[23]), STR_30(CODE[18]), STR_29(CODE[17]), STR_28(CODE[17]), 
		 -> STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[14]), 
		 -> STR_23(CODE[27]), STR_22(CODE[27]), STR_21(CODE[23]), STR_20(CODE[22]), 
		 -> STR_19(CODE[22]), STR_18(CODE[22]), STR_17(CODE[22]), STR_16(CODE[23]), 
		 -> STR_15(CODE[23]), STR_14(CODE[23]), STR_13(CODE[26]), STR_12(CODE[22]), 
		 -> STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), STR_71(CODE[9]), 
		 -> STR_70(CODE[12]), D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), 
		 -> STR_3(CODE[5]), V(BANK2[181]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), STR_71(CODE[9]), 
		 -> STR_70(CODE[12]), D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), 
		 -> STR_3(CODE[5]), V(BANK2[181]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), nuls(STACK[7]), 
		 -> STR_71(CODE[9]), STR_70(CODE[12]), D.lcd(BIGRAM[640]), D(BIGRAM[642]), 
		 -> T(CODE[176]), STR_3(CODE[5]), V(BANK2[181]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__hid_input	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    t	PTR long long  size(2) Largest target is 8
		 -> time@current_time(BANK0[8]), NULL(NULL[0]), 

    hist	PTR volatile struct hist_type size(2) Largest target is 320
		 -> C.hist(BIGRAM[97]), C(BIGRAM[320]), 

    r_cal_ptr	PTR unsigned char  size(2) Largest target is 155
		 -> R(BANK1[155]), 

    r_cal_ptr	PTR unsigned char  size(2) Largest target is 155
		 -> r_cal(BANK4[155]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_71(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_70(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK5[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK5[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK5[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK5[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), V(BANK2[181]), 

    strPtr	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), V(BANK2[181]), 

    sp__hid_display	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__asctime	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK3[27]), 

    S3418tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    sp__localtime	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    t_mbmc	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1999spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK5[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK5[67]), 

    S1999spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  438651
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                            _asctime
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                 _current_sensor_cal
                    _display_history
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                     _load_hist_data
                          _localtime
                          _lp_filter
                      _mode_lamp_dim
                      _read_cal_data
                            _set_dac
                          _set_dac_a
                          _set_dac_b
                   _set_display_info
                      _set_hist_flag
                 _set_load_relay_one
                 _set_load_relay_two
                           _set_time
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                               _time
                    _update_cal_data
                   _update_hist_data
                         _update_lcd
                      _wait_lcd_done
                     _write_cal_data
 ---------------------------------------------------------------------------------
 (1) _update_hist_data                                     3     0      3      88
 ---------------------------------------------------------------------------------
 (1) _update_cal_data                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_time                                             8     0      8      22
 ---------------------------------------------------------------------------------
 (1) _set_hist_flag                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_dac_b                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (1) _set_dac_a                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (2) _convert_dac_raw                                      4     0      4    1578
                            ___fldiv
                             ___flge
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _set_dac                                              0     0      0      44
                  _SPI1_Exchange8bit
                    _dac_spi_control
 ---------------------------------------------------------------------------------
 (2) _dac_spi_control                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _read_cal_data                                        7     7      0     615
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                         _CRC_IsBusy
                          _CRC_Start
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2      45
 ---------------------------------------------------------------------------------
 (1) _load_hist_data                                       2     2      0    2841
                            ___fldiv
                            ___flmul
                            ___fltol
                         _start_bsoc
                          _stop_bsoc
                               _time
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1356
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (2) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8435
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         7     3      4     136
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          2     0      2     771
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            2     0      2     237
                         _get_switch
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1    8599
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1    1451
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _display_history                                      0     0      0   83116
                             _WaitMs
                            _asctime
                         _get_switch
                      _get_vterm_ptr
                          _localtime
                            _sprintf
                               _time
                         _update_lcd
 ---------------------------------------------------------------------------------
 (18) _time                                                8     0      8      23
 ---------------------------------------------------------------------------------
 (1) _localtime                                            1     0      1   14641
                      ___localtime_r
 ---------------------------------------------------------------------------------
 (2) ___localtime_r                                        3     0      3   14610
                       ___secs_to_tm
                     ___secs_to_zone
 ---------------------------------------------------------------------------------
 (3) ___secs_to_zone                                      46    28     18   11126
                            ___aodiv
                     ___year_to_secs
                           _do_tzset
                       _rule_to_secs
                         _scan_trans
                          _zi_read32
 ---------------------------------------------------------------------------------
 (4) _scan_trans                                          30    18     12    1990
                          _zi_read32
 ---------------------------------------------------------------------------------
 (4) _zi_read32                                            2     0      2      88
 ---------------------------------------------------------------------------------
 (4) _rule_to_secs                                        30    22      8    3167
                            ___aldiv
                            ___aomod
                             ___lmul
                    ___month_to_secs
                     ___year_to_secs
                      _days_in_month
 ---------------------------------------------------------------------------------
 (5) _days_in_month                                        4     0      4      66
 ---------------------------------------------------------------------------------
 (5) ___year_to_secs                                      24    14     10    1473
                            ___aodiv
                            ___aomod
                             ___lmul
                             ___omul
 ---------------------------------------------------------------------------------
 (5) ___month_to_secs                                      8     4      4      90
 ---------------------------------------------------------------------------------
 (4) _do_tzset                                             2     2      0    2777
                            _getname
                             _getoff
                            _getrule
 ---------------------------------------------------------------------------------
 (5) _getrule                                              6     2      4    1222
                             _getint
                             _getoff
 ---------------------------------------------------------------------------------
 (6) _getoff                                               6     4      2     425
                             _getint
 ---------------------------------------------------------------------------------
 (7) _getint                                               4     2      2     112
 ---------------------------------------------------------------------------------
 (5) _getname                                              6     2      4     663
 ---------------------------------------------------------------------------------
 (3) ___secs_to_tm                                        67    57     10    3174
                            ___aldiv
                            ___almod
                            ___aodiv
                            ___aomod
                             ___lmul
                             ___omul
 ---------------------------------------------------------------------------------
 (6) ___omul                                              24     8     16      92
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8      92
 ---------------------------------------------------------------------------------
 (4) ___almod                                             10     2      8     296
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             14     6      8     300
 ---------------------------------------------------------------------------------
 (2) _asctime                                              6     4      2    2527
                            ___awdiv
                            ___awmod
                              _put2d
 ---------------------------------------------------------------------------------
 (3) _put2d                                                5     0      5     959
                            ___awdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     2      2     232
 ---------------------------------------------------------------------------------
 (1) _current_sensor_cal                                   9     9      0   67566
                             _WaitMs
                   _cal_current_zero
                     _clear_adc_scan
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                           _spinners
                            _sprintf
                     _start_adc_scan
                         _update_lcd
                     _write_cal_data
 ---------------------------------------------------------------------------------
 (1) _write_cal_data                                       7     7      0     593
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                         _CRC_IsBusy
                          _CRC_Start
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     4     1      3      90
 ---------------------------------------------------------------------------------
 (2) _CRC_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_IsBusy                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_CalculatedResultGet                              7     4      3     209
                   _CRC_ReverseValue
 ---------------------------------------------------------------------------------
 (3) _CRC_ReverseValue                                     6     4      2      94
 ---------------------------------------------------------------------------------
 (2) _CRC_8BitDataWrite                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     415
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _cal_current_zero                                     5     0      5     242
                        _check_range
 ---------------------------------------------------------------------------------
 (3) _check_range                                          6     0      6     132
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  131766
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   65599
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (17) _sprintf                                           104    10     94   30659
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   35090
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              5     1      4   34808
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1    1420
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data_dma                                    1     0      1    1389
                     _ringBufS_flush
                   _ringBufS_put_dma
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31860
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   30434
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   30281
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29889
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2704
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2411
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   14099
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     433
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     445
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    3018
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2     130
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (19) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (19) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (19) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     335
                    _ADCC_Initialize
                  _CLKREF_Initialize
                     _CRC_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_Initialize                                       4     4      0      92
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     205
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     205
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     205
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                           31    31      0    5544
                                             10 COMRAM    31    31      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0    5454
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0    5454
                     _check_day_time
 ---------------------------------------------------------------------------------
 (17) _check_day_time                                      4     4      0    5454
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
                               _time
 ---------------------------------------------------------------------------------
 (18) _time                                                8     0      8      23
 ---------------------------------------------------------------------------------
 (18) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (19) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (19) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (19) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           25    25      0   36148
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0   36058
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           6     6      0   36058
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _sprintf                                           104    10     94   30659
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   30281
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29889
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2704
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2411
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   14099
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     433
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     445
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    3018
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2     130
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (17) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (17) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (17) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (27) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (27) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _CRC_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _asctime
     ___awdiv
     ___awmod
     _put2d
       ___awdiv
       ___lbmod
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
       _wait_lcd_done
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _current_sensor_cal
     _WaitMs
       _StartTimer
       _TimerDone
     _cal_current_zero
       _check_range
     _clear_adc_scan
     _get_raw_result
     _get_switch
     _get_vterm_ptr
     _spinners
       _strlen
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _start_adc_scan
       _ADCC_DischargeSampleCapacitor
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
       _ADCC_StartConversion
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
       _wait_lcd_done
     _write_cal_data
       _CRC_8BitDataWrite
       _CRC_CalculatedResultGet
         _CRC_ReverseValue
       _CRC_Initialize
       _CRC_IsBusy
       _CRC_Start
       _DATAEE_WriteByte
   _display_history
     _WaitMs
       _StartTimer
       _TimerDone
     _asctime
       ___awdiv
       ___awmod
       _put2d
         ___awdiv
         ___lbmod
     _get_switch
     _get_vterm_ptr
     _localtime
       ___localtime_r
         ___secs_to_tm
           ___aldiv
           ___almod
           ___aodiv
           ___aomod
           ___lmul
           ___omul
         ___secs_to_zone
           ___aodiv
           ___year_to_secs
             ___aodiv
             ___aomod
             ___lmul
             ___omul
           _do_tzset
             _getname
             _getoff
               _getint
             _getrule
               _getint
               _getoff
                 _getint
           _rule_to_secs
             ___aldiv
             ___aomod
             ___lmul
             ___month_to_secs
             ___year_to_secs
               ___aodiv
               ___aomod
               ___lmul
               ___omul
             _days_in_month
           _scan_trans
             _zi_read32
           _zi_read32
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _time
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
       _wait_lcd_done
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _ringBufS_flush
           _memset
         _ringBufS_put_dma
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_data
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _load_hist_data
     ___fldiv
     ___flmul
     ___fltol
     _start_bsoc
     _stop_bsoc
     _time
   _localtime
     ___localtime_r
       ___secs_to_tm
         ___aldiv
         ___almod
         ___aodiv
         ___aomod
         ___lmul
         ___omul
       ___secs_to_zone
         ___aodiv
         ___year_to_secs
           ___aodiv
           ___aomod
           ___lmul
           ___omul
         _do_tzset
           _getname
           _getoff
             _getint
           _getrule
             _getint
             _getoff
               _getint
         _rule_to_secs
           ___aldiv
           ___aomod
           ___lmul
           ___month_to_secs
           ___year_to_secs
             ___aodiv
             ___aomod
             ___lmul
             ___omul
           _days_in_month
         _scan_trans
           _zi_read32
         _zi_read32
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _read_cal_data
     _CRC_8BitDataWrite
     _CRC_CalculatedResultGet
       _CRC_ReverseValue
     _CRC_Initialize
     _CRC_IsBusy
     _CRC_Start
     _DATAEE_ReadByte
   _set_dac
     _SPI1_Exchange8bit
     _dac_spi_control
   _set_dac_a
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_dac_b
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_display_info
     _TimerDone
   _set_hist_flag
   _set_load_relay_one
   _set_load_relay_two
   _set_time
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _time
   _update_cal_data
   _update_hist_data
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
       _send_lcd_data_dma
         _ringBufS_flush
           _memset
         _ringBufS_put_dma
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
     _wait_lcd_done
   _wait_lcd_done
   _write_cal_data
     _CRC_8BitDataWrite
     _CRC_CalculatedResultGet
       _CRC_ReverseValue
     _CRC_Initialize
     _CRC_IsBusy
     _CRC_Start
     _DATAEE_WriteByte

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
         _time
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     5C2      69       18.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      86      15       52.3%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      DB      13       85.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F7      11       96.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E6       9       89.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FD       7       98.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      9E       5       98.8%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     29      37       1       87.3%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     60F      58        0.0%
DATA                 0      0     BD1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb 19 03:39:52 2020

                         _SPI1_Exchange8bit 250A                    __end_of_set_display_info 2582  
                                         _C 08FF                                           _D 0A3F  
                                         _H 019B                                           _P 0094  
                                         _R 0100                                           _S 01A4  
                                         _T F8B7                                           _V 0207  
          __end_of_TMR5_SetInterruptHandler 224A                __end_of_start_switch_handler 24EA  
                               __CFG_CP$OFF 000000                     __size_of_ringBufS_flush 0092  
                           _update_cal_data 17B6                                          _r0 01E5  
                                        _r1 01DB                                          _bp F9DF  
                    __end_of_FVR_Initialize 277E                              _check_day_time 9C10  
                               __CFG_LVP$ON 000000                                         l171 2638  
                                       l809 2518                                         l675 2102  
                                       l942 1376                                         _GIE 01FE97  
                                       _abs 1AB2                                         _pad F6DE  
                                       fsr0 003FE9                                         fsr2 003FD9  
                   __size_of_PMD_Initialize 0014                             _TMR2_Initialize 25CE  
                                       prod 003FF3                                         tosl 003FFD  
                                       wreg 003FE8                     __end_of___month_to_secs FDBE  
                             _INT0_CallBack 241C                           _update_adc_result 1D7E  
                             __CFG_BBEN$OFF 000000                       __size_of_Volts_to_SOC 00BA  
                    __size_of___localtime_r 0244                               _INT1_CallBack 23B0  
                              __CFG_ZCD$OFF 000000                                        l1004 1CBE  
                                      l2017 10FE                                        l2033 05EE  
                                      l2203 9F72                                        l1501 1596  
                                      l1271 2660                                        l1192 1CFE  
                                      l1520 93F2                                        l2137 D8DE  
                                      l2058 0BAA                                        l1282 E276  
                                      l3019 E522                             _timer3ReloadVal 00C0  
                                      l1284 E27C                                        l2406 B506  
                                      l1614 170C                                        l1462 03A4  
                                      l1455 005E                                        l2360 4FB4  
                                      l3304 812C                                        l2184 FAFE  
                                      l2096 1080                                        l2521 2810  
                                      l2281 F26A                                        l2290 D146  
                                      l3411 1AF2                                        l3403 DC16  
                                      l2603 B5F4                                        l4019 79FC  
                                      l4027 6510                                        l1475 08C2  
                                      l2364 52F2                                        l3340 6D3A  
                                      l1820 1DD4                                        l1485 0B90  
                                      l1477 08C8                                        l1742 07FC  
                                      l2550 1C40                                        l1830 D35A  
                                      l2199 9F7A                                        l3271 7386  
                                      l1495 0D96                                        l2624 A674  
                                      l3416 F4A4                                        l1496 0FC0  
                                      l2465 F73A                                        l1761 1E76  
                                      l1746 0CD0                                        l3259 74F6  
                                      l2731 FEC0                                        l3515 C898  
                                      l3380 D558                                        l3452 C1B2  
                                      l3541 F38A                                        l2485 8BE6  
                                      l2565 20F0                                        l1837 EAB2  
                                      l1829 D1FE                        _ADCC_StartConversion 2664  
                                      l2639 989A                                        l1877 257E  
                                      l3823 0F82                                        l3808 CF26  
                                      l1977 8B02                                        l2689 488E  
                                      l3931 CD06                                        l3836 0EFE  
                                      l3940 BCBE                                        l2981 0312  
                                      l3847 38E2                                        l2992 E7EA  
                                      l2985 E716                                        l3975 BA42  
                                      l3967 B95C                                        l9810 6F32  
                                      l9802 6EE0                                        l9804 6F10  
                                      l9904 7310                                        l9840 7070  
                                      l9922 73A8                                        l9914 736A  
                                      l9906 7336                                        l9850 70E2  
                                      l9924 73BA                                        l9860 711E  
                                      l9780 6E20                                        l9942 73F4  
                                      l9854 7102                                        l9774 6DDA  
                                      STR_1 FF1D                                        l9928 73C6  
                                      l9856 7114                                        l9864 714E  
                                      l9792 6E8A                                        l9768 6D9A  
                                      STR_2 FF08                                        STR_3 FFD5  
                                      l9970 74A6                                        l9954 7452  
                                      l9938 73EE                                        l9882 71EA  
                                      l9786 6E58                                        l9778 6DF0  
                                      STR_4 FEF3                                        STR_5 FBB9  
                                      l9964 747E                                        l9884 71FC  
                                      l9892 7238                                        STR_6 FBB9  
                                      STR_7 FBB9                                        l9798 6ECA  
                                      l9990 FC74                                        STR_8 FBB9  
                                      STR_9 FBB9                                        l9976 74D6  
                                      l9968 7496                                        l9888 7206  
                                      l9986 FBEE                                        _LATA 003FBA  
                                      _LATB 003FBB                                        _LATC 003FBC  
                                      _LATD 003FBD                                        _LATE 003FBE  
                                      _LATF 003FBF                                        _T2PR 003FAB  
                                      _T6PR 003F93                                        _PMD0 0039C0  
                                      _PMD1 0039C1                                        _PMD2 0039C2  
                                      _PMD3 0039C3                                        u8000 204A  
                                      _PMD4 0039C4                                        _PMD5 0039C5  
                                      u8010 204C                                        _PMD6 0039C6  
                                      _PMD7 0039C7                                        u8110 BD7A  
                                      u7320 7146                                        u9000 E3EC  
                                      u7160 201A                                        u8121 BD84  
                                      u8041 EAC4                                        u7330 7166  
                                      u8130 BDBE                                        u8210 C8F8  
                                      u9010 E400                                        u7170 201C  
                                      u8140 BDF0                                        u9020 E43A  
                                      u7325 7136                                        u9005 E3E2  
                                      u9101 E0D6                                        u8061 EBE6  
                                      u7430 7358                                        u7270 7096  
                                      u8230 C94E                                        u9110 E110  
                                      u7280 70B6                                        u8160 BECE  
                                      u8240 C980                                        u9120 E142  
                                      u7600 1FEA                                        u7281 70B0  
                                      u9025 E430                                        u7530 7442  
                                      u9210 182A                                        u8090 BD24  
                                      u8250 C9B2                                        u7610 1FEC  
                                      u9220 184A                                        u8180 BF20  
                                      u9140 E220                                        u7620 FCB8  
                                      u7470 73CC                                        u7390 722E  
                                      u8510 8046                                        u8430 7F60  
                                      u8270 CA6A                                        u9070 E4D8  
                                      u7535 7432                                        u7560 7462  
                                      u8520 8080                                        u7720 1AC6  
                                      u9160 F02C                                        u7490 73E6  
                                      u7298 70B8                                        u8530 80BC  
                                      u8290 CABC                                        u9090 E502  
                                      u7730 DB38                                        u9170 F05E  
                                      u7395 721E                                        u8515 8036  
                                      u8620 66C4                                        u7900 A166  
                                      u7820 0F30                                        u8470 7FEA  
                                      u7830 0F32                                        u9190 F116  
                                      u7735 DB2E                                        u7920 A23E  
                                      u7905 A15C                                        u8730 6C0E  
                                      u7850 A03A                                        u8635 6858  
                                      u8740 6C48                                        u7780 DC06  
                                      u7860 A086                                        u8645 6920  
                                      u7925 A234                                        u8750 6C8E  
                                      u7790 DC08                                        u7950 1B76  
                                      u8735 6BFE                                        u8655 6AE8  
                                      u7775 DBE8                                        u7855 A030  
                                      u7960 1B78                                        u8690 6BB2  
                                      u8930 030C                                        u7970 0EAC  
                                      _PLLR 01CEE0                                        u7980 0EAE  
                                      u7885 A0C0                                        u7886 A0C6  
                                      u7887 A0D4                                        u8990 1966  
                   __end_of_display_history B232                                        _WPUA 003A41  
                                      _WPUB 003A51                                        _WPUC 003A61  
                                      _WPUD 003A71                                        _WPUE 003A81  
                                      _WPUF 003A91                            __end_of_ADCC_ISR 20DC  
                     __size_of___secs_to_tm 10D2                               __CFG_FCMEN$ON 000000  
                              _rule_to_secs 7500                                        _dbuf 0354  
                        __size_of_CRC_Start 0006                                        _cp_h F9F3  
                                      _cp_l F9EF                                        _atoi BF48  
                                      _ctoa 0DFC                                        _main 0000  
                                      _dtoa 8B08                                        _nanf 1588  
                                      _lock 01D3                                        _seed 02DE  
                                      _prec 004C                                        _time 164A  
                                      _nout 00BA                                        _spin F967  
                                      fsr0h 003FEA                                        fsr1h 003FE2  
                                      indf0 003FEF                                        fsr2h 003FDA  
                                      fsr0l 003FE9                                        indf1 003FE7  
                                      indf2 003FDF                                        fsr1l 003FE1  
                                      fsr2l 003FD9                                        _stoa B50A  
                                      btemp 002A                                        _utoa A630  
                                      _xtoa 9856                      __end_of_check_adc_scan 275E  
                             ___fpclassifyf DA8A                                        prodh 003FF4  
                                      prodl 003FF3                                        start 00AE  
                           _timer5ReloadVal 00C4                   __end_of_SPI1_Exchange8bit 2528  
                 __size_of_clear_hid_pflags 0066                             _TMR3_Initialize 1A24  
               __size_of_set_load_relay_one 0010                 __size_of_set_load_relay_two 0010  
                             __CFG_CSWEN$ON 000000                              _SPI1STATUSbits 003D17  
                         _UART1_rx_vect_isr 2314                                ___param_bank 000000  
                      display_history@bwait 0053                      __end_of_check_day_time 9F84  
                        ?_UART1_rx_vect_isr 0001                   __size_of_DATAEE_WriteByte 0068  
                          _update_hist_data 100C                            __end_of_INT0_ISR 270E  
                          __end_of_INT1_ISR 1D42              __size_of_OSCILLATOR_Initialize 0016  
                  __end_of_ringBufS_put_dma 0804               __end_of_OSCILLATOR_Initialize 263E  
                                     l10120 A0A2                                       l10210 BD7E  
                                     l10106 0F72                                       l10204 BD2A  
                                     l10140 A258                                       l10310 7D30  
                                     l10134 A1C0                                       l10304 7CF0  
                                     l12000 D456                                       l10216 BDC4  
                                     l10064 1AE2                                       l10144 A2C6  
                                     l10136 A210                                       l10410 80A8  
                                     l10322 7DB4                                       l10314 7D46  
                                     l12010 D4B8                                       l10082 DBB8  
                                     l10162 0EEE                                       l10404 806C  
                                     l10316 7D76                                       l10228 BE96  
                                     l10422 8100                                       l12006 D484  
                                     l10078 DBB4                                       l10174 FF16  
                                     l10440 6570                                       l10424 8110  
                                     l10416 80D8                                       l10336 7E08  
                                     l10328 7DEE                                       l12008 D4A2  
                                     l10264 CA32                                       l10256 C986  
                                     l10248 C8FE                                       l10088 DC0E  
                                     l10184 EACC                                       l10450 65E6  
                                     l10370 7F66                                       l10362 7F34  
                                     l10354 7ECE                                       l10346 7E98  
                                     l10290 7C52                                       l12018 D4D6  
                                     l10380 7FA8                                       l10356 7EE0  
                                     l10364 7F38                                       l10284 7C12  
                                     l12028 D538                                       l11420 BF62  
                                     l11500 DC86                                       l10188 EB72  
                                     l10534 6B4A                                       l10446 65B0  
                                     l10390 7FF2                                       l10294 7C68  
                                     l12310 8AD0                                       l11430 BFF8  
                                     l11422 BF84                                       l10552 6BC0  
                                     l10528 6B2E                                       l10464 667E  
                                     l10448 65B6                                       l10704 E764  
                                     l10376 7F82                                       l10296 7C98  
                                     l12304 8A34                                       l11440 C060  
                                     l10562 6C34                                       l10538 6B70  
                                     l10466 6684                                       l10458 663E  
                                     l10394 7FF8                                       l11442 C09E  
                                     l12234 01DA                                       l12242 022C  
                                     l11506 DCB6                                       l11602 1486  
                                     l10580 6CE8                                       l10572 6CA4  
                                     l10548 6BBA                                       l10476 66D6  
                                     l10468 66B4                                       l10716 E7E8  
                                     l10708 E7B2                                       l11436 C024  
                                     l10724 196A                                       l11620 5420  
                                     l14100 D660                                       l10582 6D02  
                                     l10566 6C7A                                       l12270 867E  
                                     l12318 8AE2                                       l10822 184E  
                                     l11446 C106                                       l11438 C03C  
                                     l10750 E48E                                       l10734 E40C  
                                     l10806 F0DE                                       l12238 0218  
                                     l11518 DD38                                       l14102 D694  
                                     l13320 1936                                       l12280 87A4  
                                     l12264 864E                                       l12336 217A  
                                     l11456 C1A2                                       l10760 E4D0  
                                     l10752 E4AA                                       l11472 CD98  
                                     l11624 544A                                       l14200 B294  
                                     l10690 0310                                       l10682 029A  
                                     l11474 CE04                                       l10834 CB4A  
                                     l11650 5810                                       l11634 5586  
                                     l14210 B2CA                                       l13316 1904  
                                     l12700 9E1A                                       l12292 88B8  
                                     l12284 8886                                       l10852 CCC8  
                                     l11660 5886                                       l11652 581A  
                                     l11644 57DE                                       l11628 5550  
                                     l14220 B2FE                                       l14204 B2A0  
                                     l14116 D716                                       l14108 D712  
                                     PRLOCK 0039EF                                       l10686 02DC  
                                     l10758 E4BA                                       l10774 E116  
                                     l11494 DC5A                                       l10838 CB8A  
                                     l11670 58FE                                       l14150 105A  
                                     l13512 D790                                       l13504 D764  
                                     l12296 8954                                       l10856 CCEC  
                                     l11672 5906                                       l11664 58B4  
                                     l14216 B2F2                                       l14128 17E6  
                                     l12714 9F20                                       l10698 E6D4  
                                     l14170 E0A2                                       l10786 E1E8  
                                     l14138 1022                                       l13516 D7A4  
                                     l12900 0FC4                                       l13540 0B84  
                                     l11684 59C6                                       l14236 B372  
                                     l14228 B34C                                       l14260 B4F6  
                                     l10798 F032                                       l16014 9A56  
                                     l16022 9ADC                                       l14342 0498  
                                     l11678 5932                                       l14190 B24E  
                                     l12680 9D24                                       l15320 0974  
                                     l13528 0B4E                                       l11960 E5AA  
                                     l11952 E562                                       l14192 B25E  
                                     l14088 D5AA                                       l17010 4AAE  
                                     l17002 49D6                                       l13722 EFDE  
                                     l13714 EF64                                       l13706 EEFA  
                                     l15330 0A9A                                       l15322 0996  
                                     l15402 00FE                                       l16202 3E88  
                                     l14346 04D6                                       l12762 E368  
                                     l13490 ECDC                                       l16050 BAF0  
                                     l11698 FD94                                       l13618 1D9E  
                                     l14194 B264                                       l14258 B4CC  
                                     l13642 10BC                                       l13708 EF2C  
                                     l13580 1DEA                                       l15308 F2A0  
                                     l15500 0E46                                       l15412 ED8C  
                                     l12828 2096                                       l16052 BB08  
                                     l17022 4C04                                       l17006 4A42  
                                     l15334 0AD8                                       l16038 9BC6  
                                     l16230 4122                                       l16206 3EDC  
                                     l16142 39CE                                       l15350 AD04  
                                     l12774 1E80                                       l12758 E33E  
                                     l13486 EC66                                       l16070 BC9A  
                                     l16054 BB2E                                       l13830 03EA  
                                     l13654 10D4                                       l13662 F510  
                                     l12880 188A                                       l17032 4E56  
                                     l14392 9848                                       l15424 EDC2  
                                     l16144 3A08                                       l11968 E616  
                                     l17042 4FC4                                       l17018 4BB0  
                                     l11994 D414                                       l11986 D3A8  
                                     l15418 EDA2                                       l16314 4816  
                                     l16250 4282                                       l16226 40EE  
                                     l16218 4036                                       l16146 3A1E  
                                     l15370 AEDA                                       l15362 AE2C  
                                     l16090 AAE4                                       l16082 AA58  
                                     l13834 0466                                       l13666 F572  
                                     l13908 20FE                                       l14572 FFB6  
                                     l17028 4DDC                                       l13692 EECE  
                                     l11996 D422                                       l15532 8C20  
                                     l15524 8BD6                                       l15604 171C  
                                     l16308 47BC                                       l16260 4330  
                                     l16164 3B50                                       l16324 483A  
                                     l15356 ADC2                                       l17204 933E  
                                     l16500 770E                                       l17212 CF44  
                                     l17046 4FE6                                       l17038 4F1C  
                                     l13934 1CA6                                       l13694 EEDE  
                                     l11998 D438                                       l15382 F70A  
                                     l15446 EE9C                                       l15438 EE68  
                                     l15462 F5F8                                       l15614 17C0  
                                     l15622 182E                                       l16318 481A  
                                     l16270 4452                                       l16166 3B8A  
                                     l16094 AB7E                                       l16078 A9BE  
                                     l13952 1CE6                                       l13696 EEE4  
                                     l15392 F780                                       l15536 8C3E  
                                     l15712 1CC6                                       l15632 18D2  
                                     l15640 1900                                       l15616 17EC  
                                     l16280 4508                                       l16184 3D04  
                                     l16168 3BA0                                       l17312 D1CE  
                                     l16088 AADA                                       l14578 FFC6  
                                     l17058 52EA                                       l13698 EEF2  
                                     l15386 F732                                       l15570 8F3E  
                                     l15546 8E50                                       l15466 F610  
                                     l15458 F5E6                                       l15802 2478  
                                     l15618 1802                                       l16194 3D9C  
                                     l17154 9040                                       l16098 AC0A  
                                     l16610 5EE0                                       l15396 F7CA  
                                     l15388 F744                                       l15484 F6C4  
                                     l15476 F690                                       l15708 1C8E  
                                     l15652 19DC                                       l16364 B9D4  
                                     l16356 B942                                       l16516 7A72  
                                     l16620 61C6                                       l16604 5DAA  
                                     l17228 D038                                       l15566 8F02  
                                     l15830 25C6                                       l15814 2510  
                                     l15750 20E8                                       l15742 201E  
                                     l15718 1D50                                       l15670 1B2A  
                                     l15654 1A46                                       l15910 B696  
                                     l15902 B62A                                       l16294 4684  
                                     l16534 085C                                       l17326 D2F6  
                                     l17166 90B6                                       l17158 9054  
                                     l16358 B966                                       l16630 62A6  
                                     l16606 5DCA                                       l17238 D110  
                                     l17502 064E                                       l13896 24C4  
                                     l17256 11E2                                       l15840 2668  
                                     l15752 210A                                       l15728 1EFC  
                                     l15648 196C                                       l15584 1682  
                                     l15920 B74C                                       l16384 1D6C  
                                     l16608 5EC0                                       l17280 B21E  
                                     l15498 0E1A                                       l15850 26B8  
                                     l15690 1BCC                                       l15682 1B6A  
                                     l15674 1B52                                       l15658 1AA8  
                                     l15906 B666                                       l16554 06DA  
                                     l16802 0BDE                                       l16714 30F0  
                                     l16706 301C                                       l17514 0728  
                                     l15828 25AC                                       l15692 1BD8  
                                     l15676 1B64                                       l15596 16C6  
                                     l15924 B788                                       l15916 B720  
                                     l16556 071C                                       l16804 0C0A  
                                     l16724 318E                                       l16644 6408  
                                     l17700 15C2                                       l17540 08FC  
                                     l17532 08B8                                       l17380 0066  
                                     l15766 2208                                       l16574 0A62  
                                     l16566 09FE                                       l16750 3578  
                                     l16742 34BA                                       l16734 324E  
                                     l16726 3194                                       l17286 B222  
                                     l17622 1260                                       l17606 0CA2  
                                     l17454 03BE                                       l17446 0352  
                                     l17382 007A                                       l17374 0040  
                                     l16656 64F4                                       l16648 6426  
                                     l17632 13E2                                       l17552 0930  
                                     l17448 037C                                       l17376 0048  
                                     l15866 2770                                       l15778 2290  
                                     l15786 22FA                                       l15794 2366  
                                     l15946 A6C0                                       l15938 A664  
                                     l16826 F464                                       l16738 345A  
                                     l16666 28D8                                       l16498 76BA  
                                     l17618 11FE                                       l17634 140E  
                                     l17538 08CC                                       l15956 A8B6  
                                     l16692 2EC0                                       l16684 2CC0  
                                     l16836 C6CA                                       l15886 B576  
                                     l15990 9900                                       l16790 0BB8  
                                     l16758 3672                                       l16678 2B84  
                                     l17558 0956                                       l17662 14C0  
                                     l15984 98C4                                       l16792 0BC0  
                                     l16856 E97A                                       l17680 1528  
                                     l17672 14FE                                       l17648 1468  
                                     l15978 988A                                       l16794 0BCA  
                                     l16882 FB1E                                       l16698 2F48  
                                     l17690 156C                                       l17594 0BA2  
                                     l16796 0BD8                                       l16980 F204  
                                     l17588 0B80                                       l15998 9960  
                                     l16974 F19E                                       l17686 1546  
                                     l17678 1510                                       l16888 FBD0  
                                     l16998 4982                             __end_of___aldiv DDB4  
                           __end_of___aodiv BF48                                _Volts_to_SOC 03D8  
                                     _ADCAP 003EF5                                       _ADACT 003EFE  
                           __end_of___almod E692                             __end_of___fladd 7500  
                                     _ADCLK 003EFF                             __end_of___aomod CAE0  
                                     _ADPCH 003EF1                             __end_of___fldiv 8136  
                                     _ADREF 003EFD                             __end_of___awdiv EEB6  
                           __end_of___flneg 1994                                       STR_10 FF32  
                                     STR_11 FF5C                                       STR_20 FE19  
                                     STR_12 FD69                                       STR_21 FBCE  
                                     STR_13 FB25                                       STR_30 FF84  
                                     STR_14 FBE5                                       STR_22 FAD5  
                                     STR_15 FCCB                                       STR_31 FCB4  
                                     STR_23 FAF0                                       STR_24 FF76  
                                     STR_32 FC9D                                       STR_40 FBFC  
                                     STR_16 FBB7                                       STR_25 FEB3  
                                     STR_17 FD95                                       STR_33 FC86  
                                     STR_41 FC13                               __CFG_WDTE$OFF 000000  
                                     STR_50 FE87                                       STR_18 FDAB  
                                     STR_26 FD7F                                       STR_34 FC6F  
                                     STR_42 FC2A                                       STR_51 FE87  
                                     STR_19 FE5B                                       STR_27 FE2F  
                                     STR_35 FC58                                       STR_43 FB57  
                                     STR_28 FF96                                       STR_52 FE03  
                                     STR_60 FD53                                       STR_36 FC41  
                                     STR_44 FB9F                             __end_of___awmod F6DE  
                                     STR_61 FDED                                       STR_53 FDD7  
                                     STR_37 FD10                                       STR_45 FA9B  
                                     STR_62 FE03                                       STR_70 FFB6  
                                     STR_54 FDC1                                       STR_38 FCE2  
                                     STR_46 FB3F                                       STR_63 FD53  
                                     STR_71 FFCC                                       STR_55 FF47  
                                     STR_39 FCF9                                       STR_47 FB6F  
                                     STR_72 FF71                                       STR_64 FE71  
                                     STR_56 FE45                                       STR_48 FB87  
                                     STR_80 FB0B                                       _ADRPT 003EEC  
                                     STR_73 FF71                                       STR_81 FEC9  
                                     STR_49 FE87                                       STR_57 FD3D  
                                     STR_65 FAB9                                       STR_66 FAB9  
                                     STR_74 FFC2                                       STR_82 FEDE  
                                     STR_58 FE9D                                       STR_90 F9F7  
                                     STR_67 FAB9                                       STR_59 FE03  
                                     STR_75 FFC2                                       STR_91 FFDA  
                                     STR_68 FF76                                       STR_92 FFE2  
                                     STR_76 FFA7                             __end_of___lbmod 0A8A  
                                     STR_77 FFA7                                       STR_69 FFFC  
                                     STR_78 FFA7                                       STR_79 FFA7  
                                     STR_95 FFDE                                       STR_96 FFE6  
                           __end_of___flmul 6D44                                       STR_89 FA75  
                                     STR_99 FFED                             __end_of___flsub 1B3E  
                           __end_of___fltol E52C                                       u11200 E58A  
                                     u11210 E5A4                                       u10500 DC54  
                                     u11220 E5C6                                       u10430 CE32  
                                     u10360 BFF4                                       u12040 1336  
                                     u10520 DC82                                       u11240 E63E  
                                     u11330 D4CC                                       u10530 DCB0  
                           __end_of___lodiv E248                                       u10380 C14C  
                                     u10540 DCD2                                       u11260 E668  
                                     u11180 E55C                                       u12205 1BB2  
                                     u10437 CE24                                       u10390 C14E  
                                     u10470 CECC                                       u12400 1406  
                                     u10480 CEFA                                       u11520 01CC  
                                     u12048 1338                                       u10560 DD60  
                                     u10800 59A4                                       u12065 1386  
                                     u12330 0FC0                                       u12066 1388  
                                     u10810 59A6                                       _U1P1H 003DED  
                                     u10475 CEC6                                       u10580 DD8A  
                                     u13300 D712                                       _U1P2H 003DEF  
                                     u10477 CEB8                                       u11525 01C6  
                                     u11614 86BA                                       u12254 E2EA  
                                     u12270 26A2                                       u10830 FD76  
                                     _U1P1L 003DEC                                       _U1P3H 003DF1  
                                     u11615 86B4                                       u10487 CEEC  
                                     u12255 E2E4                                       u13311 17C0  
                                     _T3CLK 003FA9                                       u14200 09C4  
                                     u10840 26DA                                       u12600 0B4A  
                                     u10760 5836                                       _T2CON 003FAC  
                                     _U1P2L 003DEE                                       u12425 143A  
                                     u12426 143C                                       u12418 1408  
                                     u11634 88A0                                       _U1P3L 003DF0  
                                     u11635 889A                                       u10691 5380  
                                     u12620 0B7E                                       u10780 58D0  
                                     u10684 14A4                                       u13340 101E  
                                     u10685 149E                                       u11654 896E  
                                     u11574 8668                                       _U2P1L 003DD4  
                                     u11655 8968                                       u11575 8662  
                                     u14207 09B6                                       u11680 8998  
                                     u14320 0178                                       _T3CON 003FA6  
                                     _U2P2L 003DD6                                       u12570 D742  
                                     u11674 8990                                       u11594 8698  
                                     u14170 F294                                       _U2P3L 003DD8  
                                     u11675 898A                                       u11595 8692  
                                     u12475 2690                                       u13371 1046  
                                     u12740 2492                                       u15140 268E  
                                     u15300 A64A                                       u12476 2692  
                                     u12485 2680                                       u14190 F310  
                                     u14510 8B38                                       u14270 AF4E  
                                     u16030 7694                                       u12486 2682  
                                     u14327 016A                                       u13391 1070  
                                     _T5CLK 003F9D                                       u14520 8B3A  
                                     u14440 F63C                                       u15160 2744  
                                     u15080 24BA                                       u15240 B68C  
                                     u16040 76A6                                       u14601 8E94  
                           __end_of___lomod F138                                       u12746 2494  
                                     u14610 8EAA                                       u14370 EDEE  
                                     u15170 2746                                       u15250 B6D2  
                                     u15410 9958                                       u16210 633A  
                                     u14611 8EA8                                       u15331 A8F8  
                                     u14620 8EBE                                       u14540 8BAA  
                                     u14460 F6B0                                       u15340 A90E  
                                     u15420 99AC                                       _T2HLT 003FAD  
                                     u15341 A90C                                       u15501 9B28  
                                     u14630 8EC2                                       u14390 EE88  
                                     u15350 A922                                       u15510 9B3E  
                                     u15430 99AE                                       u17030 04D8  
                                     u15511 9B3C                                       u14560 8BBC  
                                     u14720 176A                                       u15280 B7AE  
                                     u15360 A926                                       u15520 9B52  
                                     u16240 2874                                       u15600 AAC2  
                                     u17200 1458                                       _T5CON 003F9A  
                                     u15257 B6C4                                       u14650 8ED8  
                                     u14810 1AE4                                       u14730 176C  
                                     u15530 9B56                                       u15450 9A0C  
                                     u16090 083C                                       u16250 28C4  
                                     u17210 1472                                       u17050 0756  
                                     u14580 8C0C                                       u15460 9A0E  
                                     u15380 9870                                       u16340 318E  
                                     u15620 AC0A                                       u16420 C68A  
                                     u17220 1484                                       u17060 0880  
                                     u14590 8E64                                       u14910 1C1E  
                                     u15710 3BE8                                       u15550 BAC2  
                                     u16430 C6C0                                       u16510 F17A  
                                     u17206 145A                                       u17070 0882  
                                     u14840 1B38                                       u14760 187C  
                                     u15480 9AD8                                       u15800 3F64  
                                     u15720 3BEA                                       u17216 1474  
                                     _T6CON 003F94                                       u14770 187E  
                                     u14690 16B0                                       u15490 9AF8  
                                     u15730 3C10                                       u17226 1486  
                                     u15900 455C                                       u15660 3A66  
                                     u16380 3542                                       u16540 F1E0  
                                     u15485 9ABA                                       u16365 3270  
                                     u14870 1B9C                                       u15830 41DC  
                                     u15670 3A68                                       u16390 35F0  
                            __CFG_DEBUG$OFF 000000                                       u16391 35EC  
                                     u15920 470C                                       u15840 41DE  
                                     u15680 3A8E                                       u16528 F17C  
                                     u16570 F246                                       u14980 1FEE  
                                     u15780 3DF0                                       u16558 F1E2  
                                     u15970 B918                                       u16940 D346  
                                     u16780 91FC                                       u16588 F248  
                                     _T6HLT 003F95                                       u16950 D348  
                                     u16790 9226                                       u16785 91EE  
                _ADCC_ADTI_InterruptHandler 00A1                                       u16795 9218  
                                     _T2TMR 003FAA                                       _U1UIR 003DF8  
                                     _T2RST 003FAF                                       _U1RXB 003DE8  
                                     _U2UIR 003DE0                                       _U2RXB 003DD0  
                                     _U2TXB 003DD2                                       _T6TMR 003F92  
                                     _T6RST 003F97                         ??_UART1_rx_vect_isr 0006  
                                     _ISRPR 0039F1                                       _OSCEN 0039DD  
                                     _TMR3H 003FA5                                       _TMR5H 003F99  
                                     _TMR3L 003FA4                                       _TMR5L 003F98  
                 __end_of_update_adc_result 1DB8                                       _TRISA 003FC2  
                                     _TRISB 003FC3                                       _TRISC 003FC4  
                                     _TRISD 003FC5                                       _TRISE 003FC6  
                                     _TRISF 003FC7                                 _Default_ISR 27A4  
                       __size_of_CRC_IsBusy 0010                     __size_of_clear_adc_scan 0006  
                        _current_sensor_cal 8F88           __size_of_TMR3_SetInterruptHandler 0028  
                              ___secs_to_tm 281A           __size_of_TMR6_SetInterruptHandler 0028  
                           __end_of_asctime 864C                               __CFG_WRTB$OFF 000000  
                          __end_of_TMR3_ISR E956                               __CFG_WRTC$OFF 000000  
                          _cal_current_zero 0B22                                       ___gmt F9E7  
                             __CFG_WRTD$OFF 000000                            __end_of_TMR5_ISR DA8A  
                           __end_of_getname AC6C                                _DMA1CON0bits 003BFC  
                          __end_of_TMR6_ISR 25B6                                _DMA1CON1bits 003BFD  
                __size_of_send_lcd_data_dma 0046                             _DATAEE_ReadByte 1F64  
                                     _fabsf 0600                             __end_of_getrule BCC8  
                                     _flags 004E                        __size_of_check_range 0080  
                 __size_of_CRC_ReverseValue 00CE                                       _r_cal 0440  
                  __size_of_calc_model_data 045A                                _DMA2CON0bits 003BDC  
                              _DMA2CON1bits 003BDD                __end_of_get_ac_charger_relay 26FE  
                                     _fputc F270                  __size_of_send_lcd_cmd_long 0040  
                           __end_of_isalpha 1B82                                       _fputs 0A8A  
                           __end_of_isdigit 2056                             __end_of_ivln2_h F9EF  
                                     _put2d F394                          __CFG_MCLRE$EXTMCLR 000000  
                                     _srand 1E94                                       _width 004A  
                                     _putch 2582                __end_of_set_ac_charger_relay 26C6  
                           __end_of_islower 1FF6                             __end_of_isspace 185E  
                  _INT1_SetInterruptHandler 2272                             __end_of_set_dac 0600  
                           __end_of_isupper 2026                                       pclath 003FFA  
                                     tablat 003FF5                                       ltemp0 002A  
                                     ltemp1 002E                                       ltemp2 0032  
                  __size_of_DMA1_Initialize 006A                                       plusw0 003FEB  
                                     plusw1 003FE3                                       plusw2 003FDB  
                                     ttemp0 002A                                       ttemp1 002D  
                                     ttemp2 0030                                       ttemp3 0033  
                                     ttemp5 002B                                       ttemp6 002E  
                                     ttemp7 0032                                       status 003FD8  
       __end_of_UART1_SetRxInterruptHandler 21FA                 _UART1_SetRxInterruptHandler 21D2  
                                     wtemp0 002A                                       wtemp1 002C  
                                     wtemp2 002E                                       wtemp3 0030  
                                     wtemp4 0032                                       wtemp5 0034  
                                     wtemp8 002B                             __end_of_sprintf F8FC  
                           __end_of_tolower 0F8C                             __end_of_strncmp CF30  
                           __end_of_toupper 0F08                   __size_of_DMA1_DMADCNT_ISR 000A  
                 __end_of_UART1_rx_vect_isr 233C                    __size_of_SPI1_Initialize 0016  
                   __end_of_update_cal_data 180C                             _TMR5_Initialize 19DC  
                     __end_of_ringBufS_init 215A                             __initialization F8FC  
                         _UART2_rx_vect_isr 2364                               ___localtime_r C65C  
                              __end_of_cp_h F9F7                                __end_of_cp_l F9F3  
                              __end_of_atoi C1BC                                __end_of_ctoa 0E84  
                              __end_of_main 15D6                                __end_of_dtoa 8F88  
                              __end_of_nanf 15EA                                __end_of_time 16A8  
                              __end_of_spin F9DF                                __end_of_stoa B7C8  
                              __end_of_utoa A970                                __end_of_xtoa 9C10  
                            __CFG_SAFEN$OFF 000000                          ?_UART2_rx_vect_isr 0001  
                   __end_of_TMR2_Initialize 25E6                       __end_of_send_lcd_data 23B0  
                  __size_of_DMA2_Initialize 005A                  __end_of_check_enter_button 11EC  
                         __end_of_CRC_Start 278A                    _TMR5_SetInterruptHandler 2222  
                             __activetblptr 000003                   __size_of_DMA1_DMASCNT_ISR 000E  
                     _TMR3_InterruptHandler 0098                           _port_data_dma_ptr 2728  
                        esr_check@esr_state 00C6                         ??_UART2_rx_vect_isr 0006  
                                    INTCON0 003FD2        __size_of_UART2_SetRxInterruptHandler 0028  
                            __CFG_MVECEN$ON 000000                             _TMR6_Initialize 2108  
                           _PWM8_Initialize 2612                            _UART1_Initialize 1994  
                         _UART2_tx_vect_isr 233C                          _UART2_Transmit_ISR 20DC  
                                    _ADACCU 003EEA                                      _ADACQH 003EF4  
                                    _ADACQL 003EF3                                      _ADCON0 003EF8  
                                    _ADCON1 003EF9                                      _ADCON2 003EFA  
                                    _ADCON3 003EFB                              _start_adc_scan 14C2  
                                    _ADLTHH 003EDF                                      _ADLTHL 003EDE  
                                    STR_101 FFED                                      STR_110 FFF0  
                                    STR_103 FFF3                                      STR_120 FFF9  
                                    STR_105 FFF3                                      STR_113 FFF6  
                                    STR_122 FFEA                                      STR_115 FFF6  
                                    STR_124 FFEA                                      STR_108 FFF0  
                                    STR_118 FFF9                                      STR_127 FD27  
                                    STR_128 FA76                                      _ADPREH 003EF7  
                                    _ADPREL 003EF6                                      _DMA1PR 0039F3  
                                    _DMA2PR 0039F4                                      _ADSTAT 003EFC  
                                    _ADUTHH 003EE1                                      _ADUTHL 003EE0  
                        _PWM8_LoadDutyValue 1B82                                      _ANSELA 003A40  
                                    _ANSELB 003A50                                      _ANSELC 003A60  
                                    _ANSELD 003A70                                      _ANSELE 003A80  
                                    _ANSELF 003A90                          ?_UART2_tx_vect_isr 0001  
                                    _U1CON0 003DF2                                      _U1CON1 003DF3  
                                    _U1CON2 003DF4                                      _T3GATE 003FA8  
                                    _U1BRGH 003DF6                                      _U1FIFO 003DF7  
                                    _T3GCON 003FA7                                      _U2CON0 003DDA  
                                    _U2CON1 003DDB                                      _U1BRGL 003DF5  
                                    _U2CON2 003DDC                                      _U2BRGH 003DDE  
                                    _U2FIFO 003DDF                                      _U2BRGL 003DDD  
                                    _T5GATE 003F9C                                      _T5GCON 003F9B  
                                    _MAINPR 0039F2                                      _RC3PPS 003A13  
                                    _RD1PPS 003A19                                      i1l1021 D9DA  
                                    _RB6PPS 003A0E                                      i1l1209 E8BE  
                      _start_switch_handler 24CA                                      _RC5PPS 003A15  
                                    _ODCONA 003A42                                      _ODCONB 003A52  
                                    _ODCONC 003A62                                      _RC6PPS 003A16  
                                    _ODCOND 003A72                                      _ODCONE 003A82  
                                    _ODCONF 003A92                     __end_of_TMR3_Initialize 1A6C  
                            __CFG_WDTCCS$SC 000000                                      _FVRCON 003EC1  
                          _mode_lamp_bright 26E2                                      _SCANPR 0039F7  
                                    _IVTADH 00389E                                      _IVTADL 00389D  
                                    _IVTADU 00389F                __size_of_eaDogM_WriteCommand 000E  
                                    _OSCFRQ 0039DF                                      _NVMDAT 0039E3  
                      __size_of_hid_display 021C                            __end_of___xxtofl D562  
     __end_of_ADCC_DischargeSampleCapacitor 2766      __size_of_ADCC_DischargeSampleCapacitor 0008  
             _ADCC_DischargeSampleCapacitor 275E                    __end_of_send_lcd_cmd_dma 2546  
                           _TMR3_WriteTimer 1CC4                         ??_UART2_tx_vect_isr 0006  
                 __end_of_UART2_rx_vect_isr 238C                  __size_of_SPI1_Exchange8bit 001E  
                    __size_of_DMA1_DMAA_ISR 000A                     __size_of___secs_to_zone 08A2  
                            __CFG_XINST$OFF 000000                           _CLKREF_Initialize 271E  
                          _UART2_Initialize 15EA                                      _WaitMs 1E5E  
                           _conv_raw_result 864C                                _CCPTMRS1bits 003F5F  
      __size_of_ADCC_SetADIInterruptHandler 0028                            __end_of_do_tzset BA48  
                                    ___flge E692                                      ___fleq 0258  
                                    ___lmul FEA8                                      ___omul EAB6  
                         _ADCC_ThresholdISR 12C0                              __CFG_STVREN$ON 000000  
                                    _crcObj 00E2                              _ringBufS_flush 0C46  
                                    _efgtoa 15D6                                      _getoff CAE0  
                                    _getint FBE0                                      _floorf 9F84  
                         dac_spi_control@S0 00CB                           dac_spi_control@S1 00CA  
                         dac_spi_control@S2 00C9                           dac_spi_control@SB 00C7  
                         dac_spi_control@SC 00C8                          ?_ADCC_ThresholdISR 0001  
                                    _memset AC6C                                      _pclock 00DA  
                      __size_of_help_button 0038                                      clear_0 F96E  
                                    clear_1 F982                                      clear_2 F994  
                                    clear_3 F9A0                                      clear_4 F9AC  
                                    clear_5 F9B8                                      clear_6 F9C4  
                                    clear_7 F9D0                                      clear_8 F9DC  
                                    _t_mbmc 00BC                   __end_of_port_data_dma_ptr 2732  
                    __size_of_read_cal_data 01CA                                      _printf 1526  
                        _eaDogM_WriteString 0804                     __end_of_DATAEE_ReadByte 1F96  
                                    _strcpy 00B6                                   ?_ADCC_ISR 0001  
                                    _strlen 094E                          __size_of_TimerDone 0028  
                              __pdataBIGRAM 06FF                             _ADCC_Initialize 1256  
                            _PMD_Initialize 263E                  __size_of_update_adc_result 003A  
                 __end_of_UART2_tx_vect_isr 2364                            __end_of_set_time 1E5E  
                                    lltemp0 002A                                      lltemp1 0032  
                                    lltemp2 003A                                      lltemp3 0042  
                       ??_ADCC_ThresholdISR 0001                      __end_of_start_adc_scan 1526  
                              __mediumconst F7AA                                      preinc2 003FDC  
                    __size_of_init_port_dma 0030                                      tblptrh 003FF7  
                                    tblptrl 003FF6                                      tblptru 003FF8  
                          __end_of_wdtdelay 175C                            __end_of_spinners FBE0  
                          __end_of_vfprintf 075A                                  _StartTimer 1C44  
                        __size_of___asfladd 0078                                 localtime@tm 03DF  
             __size_of_INTERRUPT_Initialize 0066                     __end_of_TMR5_Initialize 1A24  
                         _SYSTEM_Initialize 18B0                                  ___daylight 00B8  
                                __accesstop 0060                     __end_of__initialization F9EE  
                                 ?_INT0_ISR 0001                                   ?_INT1_ISR 0001  
                      __end_of_display_help 2776                        __end_of_display_info 276E  
                 __end_of_CLKREF_Initialize 2728                               ___rparam_used 000001  
                __size_of_UART1_rx_vect_isr 0028                             _TMR5_WriteTimer 1C84  
                     _set_temp_display_help 26A6                            _clear_hid_pflags 1392  
                     __end_of_TMR3_CallBack 241C                   __end_of_ADCC_ThresholdISR 132A  
                     __end_of_set_hist_flag 2784                          __size_of_calc_bsoc 0A6E  
                    __end_of_ringBufS_flush 0CD8                              __pcstackCOMRAM 0001  
                                ___inthi_sp 132C                                  ___intlo_sp 1996  
                              __pidataBANK1 08AA                                __pidataBANK2 031C  
                             __end_of___gmt F9EB                 __size_of_send_port_data_dma 0052  
                             __end_of_fabsf 06AE                                   ?_TMR3_ISR 0001  
                                 ?_TMR5_ISR 0001                                   ?_TMR6_ISR 0001  
                          _DATAEE_WriteByte 132A                              ivt0x8_undefint 00AC  
                             __end_of_fputc F394                               __end_of_fputs 0B22  
                      _get_ac_charger_relay 26F0                               __end_of_put2d F4AE  
                             __end_of_srand 1EC8                       __end_of_TMR5_CallBack 23F8  
                             __end_of_putch 259C                        _set_ac_charger_relay 26B6  
                   __end_of_PWM8_Initialize 2628                     __end_of_TMR6_Initialize 2132  
                         _adc_int_t_handler FF7E                      __end_of_PMD_Initialize 2652  
                                __end_of_bp F9E7                                  ___timezone 0070  
                                ??_ADCC_ISR 0001                       __end_of_TMR6_CallBack 2464  
               __size_of_EXT_INT_Initialize 0034                    calc_bsoc@log_update_wait 0050  
                    __size_of_calc_ror_data 0186                               _DMA1_DMAA_ISR 2740  
                     TMR3_ISR@CountCallBack 00BE                              _clear_adc_scan 278A  
                        __size_of_hid_input 0138                          __end_of_CRC_IsBusy 26A6  
                    __size_of_mode_lamp_dim 0018                            time@current_time 00D2  
                          _CRC_ReverseValue 018A                    _UART2_RxInterruptHandler 00AD  
                 __end_of_SYSTEM_Initialize 18FE                             __CFG_PR1WAY$OFF 000000  
                           __CFG_IVT1WAY$ON 000000                     __end_of_TMR3_WriteTimer 1D04  
                                __pbssBANK0 0060                                  __pbssBANK1 01A4  
                                __pbssBANK2 02BC                                  __pbssBANK3 0300  
                                __pbssBANK4 0400                                  __pbssBANK5 0500  
                                __pbssBANK6 0600                    __end_of_update_hist_data 1088  
                                _check_help D14C                               _read_cal_data D562  
                   __end_of_conv_raw_result 8B08                          __size_of_esr_check 02D8  
                     _INT0_InterruptHandler 00B3                                  ??_INT0_ISR 0001  
                                ??_INT1_ISR 0007                       __end_of_days_in_month 14C2  
                         __end_of_TimerDone 2182                            _DMA1_DMADCNT_ISR 2734  
                           _convert_dac_raw F4AE                          __size_of_init_bsoc 0246  
                __size_of_UART2_rx_vect_isr 0028                                     IVTBASEH 003FD6  
                                   IVTBASEL 003FD5                                     IVTBASEU 003FD7  
                        __size_of_lp_filter 01BC                          __size_of_localtime 0016  
                             _init_port_dma 1F96                       __end_of_wait_lcd_done 26E2  
                  __end_of_cal_current_zero 0BB4            __end_of_TMR3_SetInterruptHandler 2272  
                           __CFG_PPS1WAY$ON 000000            __end_of_TMR6_SetInterruptHandler 2222  
                                ??_TMR3_ISR 00E5                     __end_of_ADCC_Initialize 12C0  
                                ??_TMR5_ISR 000B                   __end_of_adc_int_t_handler 0000  
                                ??_TMR6_ISR 0006                           __end_of___asfladd 117A  
                                   _ADFLTRH 003EE7                                     _ADFLTRL 003EE6  
                                   _DMA1DSA 003BF0                                     _DMA2DSA 003BD0  
                                   _DMA1DSZ 003BEE                                     _DMA2DSZ 003BCE  
                                   _DMA1SSA 003BF9                                     _DMA2SSA 003BD9  
                        __size_of_set_dac_a 0034                          __size_of_set_dac_b 0034  
      __end_of_ADCC_SetADTIInterruptHandler 22EA       __size_of_ADCC_SetADTIInterruptHandler 0028  
              _ADCC_SetADTIInterruptHandler 22C2                                     _DMA1SSZ 003BF7  
                                   _DMA2SSZ 003BD7                  __size_of_port_data_dma_ptr 000A  
                                   _ADSTPTH 003EE5                                     _ADSTPTL 003EE4  
                                   _CRCACCH 003963                                     _CRCACCL 003962  
                   __size_of_load_hist_data 025A                                     _CRCDATH 003961  
                                   _CRCDATL 003960                           _UART1_Receive_ISR 24A8  
                                   _CRCCON0 003968                                     _CRCCON1 003969  
                                   _CLKRCLK 003CE6                                     _CLKRCON 003CE5  
                    __end_of_clear_adc_scan 2790                                     _CRCXORH 003967  
                                   _CRCXORL 003966                                     u1211_20 9D46  
                            ?_DMA1_DMAA_ISR 0001                            _DMA1_DMASCNT_ISR 2710  
                                   u1311_28 23C0                                     u1320_28 23E4  
                                   _U1ERRIE 003DFA                          __size_of_set_vterm 001E  
                                   u1235_20 26FA                                     _U1ERRIR 003DF9  
                                   u1171_25 26C0                                     u1171_26 26C2  
                                   _U2ERRIE 003DE2                                     u1246_20 1DF8  
                                   u1317_48 2450                                     u1309_48 242C  
                                   u1246_26 1DFA                                     _U2ERRIR 003DE1  
                                   u1281_24 EFD4                                     u1281_25 EFD0  
                                   u1371_44 FFE6                                     u1275_28 EED4  
                                   u1371_45 FFE0                                     u1277_20 EEEE  
                                   u1277_21 EEE8                           _CRC_8BitDataWrite 2652  
                                   _INT0PPS 003AC0                         __CFG_PWRTS$PWRT_OFF 000000  
                                   _INT1PPS 003AC1                                ?_Default_ISR 0001  
                                   u1667_20 4F0C                                     u1674_28 2408  
                __size_of_UART2_tx_vect_isr 0028                                     u1669_20 4FD6  
                                   _U1RXPPS 003AE5                                     _U2RXPPS 003AE8  
                           _dac_spi_control 1088                                     _OSCCON1 0039D9  
                                   _OSCCON3 0039DB                                     _IVTLOCK 003FD4  
                        __size_of_vfpfcnvrt 0FAC                                     _SPI1CLK 003D1C  
                                   _SPI1RXB 003D10                                     _NVMADRH 0039E1  
                                   _NVMADRL 0039E0                           __end_of_calc_bsoc 5306  
                                   _SPI1TXB 003D11                                     _OSCTUNE 0039DE  
                                   _NVMCON2 0039E6                                     _PWM8DCH 003F61  
                                   _PWM8DCL 003F60                                     _PWM8CON 003F62  
                                   _SLRCONA 003A43                                     _SLRCONB 003A53  
                                   _SLRCONC 003A63                                     _SLRCOND 003A73  
                                   _SLRCONE 003A83                                     _SLRCONF 003A93  
                        __size_of_zi_read32 00F6                                  _get_switch 2084  
                        __size_of_start_lcd 0006                     __size_of___year_to_secs 0972  
                   __end_of_TMR5_WriteTimer 1CC4                     __size_of_switch_handler 0142  
                        __size_of_stop_bsoc 0006                  __end_of_set_load_relay_one 2696  
                __end_of_set_load_relay_two 2686           __size_of_INT0_SetInterruptHandler 0028  
                __size_of_CLKREF_Initialize 000A                               _calc_ror_data DF42  
                            ___secs_to_zone 5C78                     __size_of_DMA1_DMAOR_ISR 000A  
                                   __Hparam 0000                  __size_of_ADCC_ThresholdISR 006A  
                             _mode_lamp_dim 25B6                                     __Lparam 0000  
                  __end_of_UART1_Initialize 19DC                           __end_of_hid_input F270  
                           __size_of_WaitMs 0036                                     ___aldiv DC20  
                           __size_of___flge 0162                             __size_of___fleq 00C4  
                                   ___aodiv BCC8                                     ___almod E52C  
                                   ___fladd 6D44                                     ___aomod C8A0  
                                   ___fldiv 7BBC                                     ___awdiv ED68  
                                   ___flneg 194C                             __size_of___lmul 00D6  
                                   ___awmod F5C6                             __size_of___omul 015A  
                                   ___lbmod 09F0                                     ___flmul 651A  
                                   ___flsub 1AF8                                     ___fltol E3BA  
                                   ___lodiv E0C8                                     ___lomod EFF8  
                 __end_of_UART1_Receive_ISR 24CA                             __size_of_efgtoa 1244  
                           __size_of_getoff 0230                             __size_of_getint 00F2  
                           __size_of_floorf 036C                        __end_of_init_display FEA8  
                                   __pcinit F8FC                    __end_of_mode_lamp_bright 26F0  
                           __size_of_memset 02EC                    __size_of_adc_int_handler 0002  
                       _eaDogM_WriteCommand 26C6                                     __ramtop 2000  
                 __end_of_CRC_8BitDataWrite 2664                                     __ptext0 0000  
                                   __ptext1 100C                                     __ptext2 17B6  
                                   __ptext3 16A8                                     __ptext4 24CA  
                                   __ptext5 1E94                                     __ptext6 1E28  
                                   __ptext7 277E                                     __ptext8 1EC8  
                                   __ptext9 1EFC                           __end_of_esr_check B50A  
                         _UART2_Receive_ISR 24EA                                     _asctime 8136  
                           __size_of_printf 0062                                     _getname A970  
                           __CFG_WRTAPP$OFF 000000                             __size_of_strcpy 00D4  
                           __size_of_strlen 00A2                                     _getrule BA48  
                                   _dst_off 00B6                       _OSCILLATOR_Initialize 2628  
                              __size_of_abs 0046                                __size_of_pad 0114  
                         __end_of_init_bsoc C65C                                     us830999 CACE  
                                   _isalpha 1B3E                                     us807999 EBFA  
                                   _isdigit 2026                                     us920999 F128  
                                   _ivln2_h F9EB                                     us819999 BF32  
                                   us915999 E232                                   _T3CONbits 003FA6  
                                   _mode_sw 00CC                           __end_of_lp_filter D8E8  
                         __end_of_localtime 25FC                                     _islower 1FC6  
                                   _isspace 180C                             __CFG_WRTSAF$OFF 000000  
                                _scan_trans 1D42                                   _T5CONbits 003F9A  
                                   _set_dac 054A                    __end_of_UART2_Initialize 164A  
                                   _isupper 1FF6                                   _CRC_Start 2784  
                                _old_tz_buf 03A4                  __size_of_SYSTEM_Initialize 004E  
                                   _sprintf F7F2                                     _tolower 0F08  
                     __size_of_display_help 0008                                     _utctime 01D7  
                   __end_of_convert_dac_raw F5C6                       __size_of_display_info 0008  
                                   _strncmp CD10                                     _toupper 0E84  
                      end_of_initialization F9EE                   __size_of_convert_adc_data 00B8  
                                 _SCANHADRH 00397A                                   _SCANHADRL 003979  
                                 _SCANHADRU 00397B                                   _SCANLADRH 003977  
                                 _SCANLADRL 003976                          _check_enter_button 117A  
                                 _SCANLADRU 003978                           __end_of_set_dac_a 1F30  
                         __end_of_set_dac_b 1EFC                      __end_of___secs_to_zone 651A  
       __end_of_UART2_SetRxInterruptHandler 21D2                 _UART2_SetRxInterruptHandler 21AA  
                                 i1u1696_20 E8B4                     check_day_time@day_delay 0051  
                                 i2u1380_48 2350                           __end_of_set_vterm 2564  
                                 i2u1382_48 2378                                   i2u1374_48 20C8  
                                 i2u1376_48 12F6                                   i2u1376_49 130A  
                                 i2u1378_48 2328                           __end_of_vfpfcnvrt 4898  
                                 _SPI1TCNTL 003D12                                     postdec0 003FED  
                                   postdec1 003FE5                                     postdec2 003FDD  
                                   postinc0 003FEE                                     postinc1 003FE6  
                                   postinc2 003FDE                           __end_of_zi_read32 FAEA  
                __size_of_adc_int_t_handler 0082                         __size_of_StartTimer 0040  
                         __end_of_start_lcd 279C                   __end_of_UART2_Receive_ISR 250A  
                            wdtdelay@dcount 0090                     __end_of_dac_spi_control 1102  
               __size_of_current_sensor_cal 0474                       __CFG_WDTCPS$WDTCPS_31 000000  
                           ??_DMA1_DMAA_ISR 0007                       _INT1_InterruptHandler 00B0  
                                 _PORTBbits 003FCB                           __end_of_stop_bsoc 27A2  
                                 _PORTDbits 003FCD                    _TMR3_SetInterruptHandler 224A  
                                 _PORTFbits 003FCF                    _TMR6_SetInterruptHandler 21FA  
                              _display_help 276E                       _TMR5_InterruptHandler 009B  
                              _display_info 2766        __size_of_UART2_SetTxInterruptHandler 0028  
                  __end_of_clear_hid_pflags 13F8                           __size_of_ADCC_ISR 002C  
       __end_of_ADCC_SetADIInterruptHandler 2312                 _ADCC_SetADIInterruptHandler 22EA  
                                asctime@buf 03C4                                  _update_lcd E956  
                           _calc_model_data 93FC                      __size_of_ringBufS_init 0028  
                          __CFG_FEXTOSC$ECH 000000                                  _static_soc 16A8  
                  __end_of_DATAEE_WriteByte 1392                             _DMA1_Initialize 11EC  
                       __end_of_check_range 100C                                  _start_bsoc 2486  
                  __size_of___month_to_secs 00EC                      __size_of_send_lcd_data 0024  
                           _SPI1_Initialize 25FC                       __end_of_get_vterm_ptr 2084  
                         __size_of_INT0_ISR 000E                           __size_of_INT1_ISR 003E  
                  __size_of_display_history 02DA                    __end_of_CRC_ReverseValue 0258  
                            __end_of_WaitMs 1E94                __end_of_INTERRUPT_Initialize 145E  
                                _vterm_dump DDB4                              __end_of___flge E7F4  
                            __end_of___fleq 031C        __end_of_INT0_DefaultInterruptHandler 27B0  
     __size_of_INT0_DefaultInterruptHandler 0002                _INT0_DefaultInterruptHandler 27AE  
                __size_of_UART1_Receive_ISR 0022                             _DMA2_Initialize 175C  
                            __end_of___lmul FF7E                              __end_of___omul EC10  
                             __pidataBIGRAM A2F0                              _load_hist_data C1BC  
                            __end_of_efgtoa 281A                  __size_of_CRC_8BitDataWrite 0012  
                         __size_of_TMR3_ISR 0162                              __end_of_getoff CD10  
                         __size_of_TMR5_ISR 01A2                              __end_of_getint FCD2  
                         __size_of_TMR6_ISR 001A                         __size_of_check_help 0212  
                            __end_of_floorf A2F0                 __size_of_UART2_Transmit_ISR 002C  
                                floorf@F524 0074                              __end_of_memset AF58  
__end_of___month_to_secs@secs_through_month F8AB          ___month_to_secs@secs_through_month F87B  
                            __end_of_printf 1588                    __end_of_DMA1_DMADCNT_ISR 273E  
               __size_of_PWM8_LoadDutyValue 0042                       __end_of_INT0_CallBack 2440  
                            __end_of_strcpy 018A                              __end_of_strlen 09F0  
                       start_initialization F8FC                     __size_of_write_cal_data 0158  
      __end_of_TMR5_DefaultInterruptHandler 1E28       __size_of_TMR5_DefaultInterruptHandler 0038  
              _TMR5_DefaultInterruptHandler 1DF0             __size_of_PIN_MANAGER_Initialize 0092  
                               __end_of_abs 1AF8                       __end_of_INT1_CallBack 23D4  
                 __size_of_set_display_info 001E                                 __end_of_pad F7F2  
                      __size_of_Default_ISR 0006                     __size_of_CRC_Initialize 0092  
                            ___year_to_secs 5306                        __end_of_send_lcd_cmd 1C44  
                            _switch_handler EEB6               __size_of_ADCC_StartConversion 0012  
                                ivt0x8_base 0008                               _uart1RxBuffer 02D6  
                     __end_of___fpclassifyf DC20                               _uart2RxBuffer 0600  
                  __end_of_DMA1_DMASCNT_ISR 271E                               _uart2TxBuffer 0400  
                            _DMA1_DMAOR_ISR 274C                         __end_of_hid_display D14C  
                __end_of_send_port_data_dma 18B0                            __CFG_LPBOREN$OFF 000000  
                     __size_of_init_display 00EA                 __size_of_eaDogM_WriteString 00A6  
           __end_of_CRC_CalculatedResultGet E3BA                                   _TimerDone 215A  
                             _ringBufS_init 2132                      __end_of_load_hist_data C416  
                               __pdataBANK1 0100                                 __pdataBANK2 0200  
                __size_of_UART2_Receive_ISR 0020                         __size_of_get_switch 002C  
                __end_of_EXT_INT_Initialize 1F64                    __size_of_update_cal_data 0056  
                   __end_of_calc_model_data 9856                               _send_lcd_data 238C  
                       __end_of_help_button 1DF0             __end_of_eaDogM_WriteStringAtPos 0C46  
                       __end_of_BVSOC_TABLE F87B                                   ___asfladd 1102  
                      calc_model_data@bcror 0088                                 __pbssBIGRAM 0A3F  
                   __end_of_DMA1_Initialize 1256                        calc_model_data@bvror 008C  
                               __pbssCOMRAM 004A                                 _check_range 0F8C  
          __end_of_INT0_SetInterruptHandler 22C2                      __end_of___year_to_secs 5C78  
                             __pcstackBANK0 00E5                    __size_of_TMR2_Initialize 0018  
                    __size_of_TMR3_CallBack 0024                      __end_of_switch_handler EFF8  
                               _CRCCON0bits 003968                                 _CRCCON1bits 003969  
                    __size_of_set_hist_flag 0006                           __size_of___xxtofl 0204  
                   __end_of_SPI1_Initialize 2612                    _UART1_RxInterruptHandler 00A7  
                  _UART2_TxInterruptHandler 00AA                                   __end_of_T F967  
                          _convert_adc_data 0492                                   _calc_bsoc 4898  
                 __size_of_ringBufS_put_dma 00AA                                _init_display FDBE  
                    __end_of_DMA1_DMAOR_ISR 2756                      __size_of_TMR5_CallBack 0024  
                         __size_of_do_tzset 0280                       _TMR6_InterruptHandler 009E  
                        calc_ror_data@bcror 0080                      __size_of_TMR6_CallBack 0024  
                   __end_of_DMA2_Initialize 17B6                          calc_ror_data@bvror 0084  
                    _PIN_MANAGER_Initialize 0CD8                       __end_of___localtime_r C8A0  
                  __size_of_TMR3_Initialize 0048                        __end_of_wait_lcd_set 2796  
                       __size_of_scan_trans 003C                               __pmediumconst F7AA  
                                 __ptext100 E0C8                                   __ptext101 CD10  
                                 __ptext110 194C                                   __ptext102 B50A  
                                 __ptext111 0258                                   __ptext103 15D6  
                                 __ptext200 4898                                   __ptext120 094E  
                                 __ptext112 F5C6                                   __ptext104 0F08  
                                 __ptext201 185E                                   __ptext121 0A8A  
                                 __ptext113 ED68                                   __ptext105 1FF6  
                                 __ptext210 27B0                                   __ptext202 2728  
                                 __ptext130 2564                                   __ptext122 F270  
                                 __ptext114 8B08                                   __ptext106 00B6  
                                 __ptext211 27B2                                   __ptext203 1102  
                                 __ptext131 25B6                                   __ptext123 2582  
                                 __ptext115 1AB2                                   __ptext107 9F84  
                                 __ptext220 2440                                   __ptext212 12C0  
                                 __ptext204 2700                                   __ptext140 DF42  
                                 __ptext132 26E2                                   __ptext124 075A  
                                 __ptext116 C8A0                                   __ptext108 DA8A  
                                 __ptext221 18FE                                   __ptext213 2314  
                                 __ptext205 241C                                   __ptext141 0600  
                                 __ptext133 1B82                                   __ptext125 BF48  
                                 __ptext117 BCC8                                   __ptext109 E3BA  
                                 __ptext222 2710                                   __ptext214 24A8  
                                 __ptext206 27AE                                   __ptext150 2486  
                                 __ptext142 864C                                   __ptext134 1DB8  
                                 __ptext126 180C                                   __ptext118 0DFC  
                                 __ptext223 2734                                   __ptext215 233C  
                                 __ptext207 27A4                                   __ptext151 D72C  
                                 __ptext143 1588                                   __ptext135 215A  
                                 __ptext127 2026                                   __ptext119 F6DE  
                                 __ptext224 2740                                   __ptext216 20DC  
                                 __ptext208 20B0                                   __ptext160 21D2  
                                 __ptext152 1AF8                                   __ptext144 2464  
                                 __ptext136 1C44                                   __ptext128 2546  
                                 __ptext225 274C                                   __ptext217 2364  
                                 __ptext209 FF7E                                   __ptext161 2108  
                                 __ptext153 6D44                                   __ptext145 D35E  
                                 __ptext137 2766                                   __ptext129 26A6  
                                 __ptext226 0000                                   __ptext218 24EA  
                                 __ptext170 263E                                   __ptext162 21FA  
                                 __ptext154 651A                                   __ptext146 7BBC  
                                 __ptext138 276E                                   __ptext219 259C  
                                 __ptext171 0CD8                                   __ptext163 19DC  
                                 __ptext155 18B0                                   __ptext147 E692  
                                 __ptext139 117A                                   __ptext180 0D6A  
                                 __ptext172 2628                                   __ptext164 2222  
                                 __ptext156 15EA                                   __ptext148 93FC  
                                 __ptext181 271E                                   __ptext173 13F8  
                                 __ptext165 1A24                                   __ptext157 2182  
                                 __ptext149 279C                                   __ptext190 1C84  
                                 __ptext182 1256                                   __ptext174 2776  
                                 __ptext166 224A                                   __ptext158 21AA  
                                 __ptext191 23D4                                   __ptext183 22C2  
                                 __ptext175 1F30                                   __ptext167 25CE  
                                 __ptext159 1994                                   __ptext192 1DF0  
                                 __ptext184 22EA                                   __ptext176 2272  
                                 __ptext168 25FC                                   __ptext193 9C10  
                                 __ptext185 1D04                                   __ptext177 229A  
                                 __ptext169 2612                                   __ptext194 26B6  
                                 __ptext186 23B0                                   __ptext178 175C  
                                 __ptext195 26F0                                   __ptext187 27AA  
                                 __ptext179 11EC                                   __ptext196 E7F4  
                                 __ptext188 EEB6                                   __ptext197 1CC4  
                                 __ptext189 D8E8                                   __ptext198 23F8  
                                 __ptext199 27AC                           __size_of_set_time 0036  
                                 _hid_input F138                          __end_of_StartTimer 1C84  
                        _set_load_relay_one 2686                          _set_load_relay_two 2676  
                         __size_of_wdtdelay 005A                           __size_of_spinners 00F6  
                         __size_of_vfprintf 00AC                                    _ADCC_ISR 20B0  
                    __CFG_BBSIZE$BBSIZE_512 000000                                   fabsf@F463 0078  
                    __size_of_days_in_month 0064                                    _DMA1CON0 003BFC  
                                  _DMA1CON1 003BFD                                    _DMA1AIRQ 003BFE  
                                  _DMA2CON0 003BDC                                    _DMA2CON1 003BDD  
                                  _DMA2AIRQ 003BDE                                    _DMA1SIRQ 003BFF  
                                  _DMA2SIRQ 003BDF                                   _esr_check B232  
                   __size_of_get_raw_result 0022                              __size_of_fabsf 00AE  
                                 _init_bsoc C416                      __size_of_wait_lcd_done 000E  
                            __size_of_fputc 0124                                    _T2CLKCON 003FAE  
                            __size_of_fputs 0098                    __size_of_DATAEE_ReadByte 0032  
                            __size_of_put2d 011A                                   _lp_filter D72C  
                                 _localtime 25E6                                 _hid_display CF30  
                            __size_of_srand 0034                              __size_of_putch 001A  
                      _INTERRUPT_Initialize 13F8                                    _T6CLKCON 003F96  
             __size_of_start_switch_handler 0020                             ?_DMA1_DMAOR_ISR 0001  
                                  _INT0_ISR 2700                                    _INT1_ISR 1D04  
                                  _LATCbits 003FBC                                    _LATDbits 003FBD  
                                  _LATEbits 003FBE                                    _LATFbits 003FBF  
         __size_of_INT1_SetInterruptHandler 0028                                    _SCANCON0 00397C  
                                  _IPR1bits 003981                                    _IPR2bits 003982  
                                  _PIE1bits 003991                                    _IPR3bits 003983  
                                  _SCANTRIG 00397D                                    _PIE2bits 003992  
                                  _IPR5bits 003985                                    _PIE3bits 003993  
                                 _tickCount 02BC                                    _IPR6bits 003986  
                                  _PIE5bits 003995                                    _IPR8bits 003988  
                                  _PIE6bits 003996                                    _IPR9bits 003989  
                                  _PIE8bits 003998                         __CFG_BORV$VBOR_2P45 000000  
                                  _PIE9bits 003999                                _SPI1CON0bits 003D14  
                              _SPI1CON1bits 003D15                                   _set_dac_a 1EFC  
                                 _set_dac_b 1EC8                                   _ring_buf1 0543  
                                 _ring_buf2 0500                                    _PIR0bits 0039A0  
                                  _PIR1bits 0039A1                                    _PIR2bits 0039A2  
                                  _SPI1BAUD 003D19                                    _PIR4bits 0039A4  
                                  _SPI1CON0 003D14                                    _SPI1CON1 003D15  
                                  _SPI1CON2 003D16                               _TMR3_CallBack 23F8  
                                  _PIR5bits 0039A5                                    _PIR6bits 0039A6  
                                  _PIR8bits 0039A8                                    _PIR9bits 0039A9  
                  __size_of_TMR5_Initialize 0048                               _set_hist_flag 277E  
                                 _set_vterm 2546                         __size_of_update_lcd 0160  
                               _help_button 1DB8                                    _TMR3_ISR E7F4  
                               _BVSOC_TABLE F7AB                                    _TMR5_ISR D8E8  
                                  _TMR6_ISR 259C          __end_of___secs_to_tm@days_in_month F8B7  
                ___secs_to_tm@days_in_month F8AB                                   _port_data 06FF  
                       __size_of_static_soc 005A                                   _vfpfcnvrt 38EC  
                              _SPI1INTFbits 003D1A                         __size_of_start_bsoc 0022  
                             _TMR5_CallBack 23D4                                  _ADCON0bits 003EF8  
                                 _zi_read32 F9F4                          __end_of_check_help D35E  
                                 _start_lcd 2796                     __size_of_FVR_Initialize 0008  
                 __size_of_send_lcd_cmd_dma 001E                               _TMR6_CallBack 2440  
                            _write_cal_data EC10                       __size_of_send_lcd_cmd 0040  
         __size_of_TMR5_SetInterruptHandler 0028                                   _stop_bsoc 279C  
                          _set_display_info 2564                    __size_of_PWM8_Initialize 0016  
                  __size_of_TMR6_Initialize 002A                              _CRC_Initialize 0D6A  
                               _INTCON0bits 003FD2                                   copy_data0 F910  
                                 copy_data1 F936                                   copy_data2 F958  
          __size_of_CRC_CalculatedResultGet 0172                    _INT0_SetInterruptHandler 229A  
                       __size_of_vterm_dump 018E         __end_of_UART2_SetTxInterruptHandler 21AA  
               _UART2_SetTxInterruptHandler 2182                               _days_in_month 145E  
                              _uart1RxCount 00D0                                _uart2RxCount 00CD  
                                  __Hrparam 0000            __size_of_eaDogM_WriteStringAtPos 0092  
                   __CFG_RSTOSC$EXTOSC_4PLL 000000                    __size_of_TMR3_WriteTimer 0040  
                                  __Lrparam 0000                     __size_of_check_adc_scan 0008  
                        __CFG_BOREN$SBORDIS 000000                  __end_of_current_sensor_cal 93FC  
                  __size_of_conv_raw_result 04BC                               _wait_lcd_done 26D4  
                              _send_lcd_cmd 1C04                            __size_of___aldiv 0194  
                          __size_of___aodiv 0280                            __size_of___almod 0166  
                          __size_of___fladd 07BC               __size_of_get_ac_charger_relay 000E  
                          __size_of___aomod 0240                             _adc_int_handler 27B2  
                          __size_of___fldiv 057A                            __size_of___awdiv 014E  
                          __size_of___flneg 0048                            __size_of___awmod 0118  
                          __size_of___lbmod 009A                            __size_of___flmul 082A  
                          __size_of___flsub 0046                            __size_of___fltol 0172  
                          __size_of___lodiv 0180                            __size_of___lomod 0140  
             __size_of_set_ac_charger_relay 0010                          __end_of_get_switch 20B0  
                      __end_of_rule_to_secs 7BBC                     __size_of_check_day_time 0374  
                    __end_of_write_cal_data ED68                       __end_of_DMA1_DMAA_ISR 274A  
                        ___fpclassifyf@F463 007C        __size_of_UART1_SetRxInterruptHandler 0028  
                          __size_of_asctime 0516                                    ___tzname 006C  
                          __size_of_getname 02FC                             lp_filter@smooth 0300  
                                  ___xxtofl D35E                      __end_of_CRC_Initialize 0DFC  
                         ?_DMA1_DMADCNT_ISR 0001                            __size_of_getrule 0280  
               __size_of_check_enter_button 0072                    __size_of_ADCC_Initialize 006A  
               __end_of_eaDogM_WriteCommand 26D4                            __size_of_isalpha 0044  
                          __size_of_isdigit 0030                                    __pivt0x8 0008  
                          __size_of_islower 0030                            __size_of_isspace 0052  
                        ??_DMA1_DMADCNT_ISR 0007                            __size_of_set_dac 00B6  
                                  __ptext10 F4AE                                    __ptext11 054A  
                                  __ptext20 1C04                                    __ptext12 1088  
                                  __ptext21 1702                                    __ptext13 D562  
                                  __ptext30 2756                                    __ptext22 250A  
                                  __ptext14 1F64                                    __ptext31 2676  
                                  __ptext23 2132                                    __ptext15 C1BC  
                                  __ptext40 F9F4                                    __ptext32 2686  
                                  __ptext24 C416                                    __ptext16 1F96  
                                  __ptext41 7500                                    __ptext33 26C6  
                                  __ptext25 03D8                                    __ptext17 FDBE  
                                  __ptext50 281A                                    __ptext42 145E  
                                  __ptext34 AF58                                    __ptext26 CF30  
                                  __ptext18 238C                                    __ptext51 EAB6  
                                  __ptext43 5306                                    __ptext35 164A  
                                  __ptext27 F138                                    __ptext19 1BC4  
                                  __ptext60 132A                                    __ptext52 FEA8  
                                  __ptext44 FCD2                                    __ptext36 25E6  
                                  __ptext28 B232                                    __ptext61 2784  
                                  __ptext53 E52C                                    __ptext45 B7C8  
                                  __ptext37 C65C                                    __ptext29 1D7E  
                                  __ptext70 2084                                    __ptext62 2696  
                                  __ptext54 DC20                                    __ptext46 BA48  
                                  __ptext38 5C78                                    __ptext71 278A  
                                  __ptext63 E248                                    __ptext55 8136  
                                  __ptext47 CAE0                                    __ptext39 1D42  
                                  __ptext80 1E5E                                    __ptext72 0B22  
                                  __ptext64 018A                                    __ptext56 F394  
                                  __ptext48 FBE0                                    __ptext81 E956  
                                  __ptext73 0F8C                                    __ptext65 2652  
                                  __ptext57 09F0                                    __ptext49 A970  
                                  __ptext90 AC6C                                    __ptext82 0BB4  
                                  __ptext74 0492                                    __ptext66 14C2  
                                  __ptext58 8F88                                    __ptext91 1526  
                                  __ptext83 2528                                    __ptext75 1392  
                                  __ptext67 2664                                    __ptext59 EC10  
                                  __ptext92 06AE                                    __ptext84 26D4  
                                  __ptext76 D14C                                    __ptext68 275E  
                                  __ptext93 38EC                                    __ptext85 1A6C  
                                  __ptext77 DDB4                                    __ptext69 FAEA  
                                  __ptext94 9856                                    __ptext86 0804  
                                  __ptext78 F7F2                                    __ptext95 0E84  
                                  __ptext87 2790                                    __ptext79 2056  
                                  __ptext96 1FC6                                    __ptext88 2796  
                                  __ptext97 1B3E                                    __ptext89 0C46  
                                  __ptext98 A630                                    __ptext99 EFF8  
                          __size_of_isupper 0030                                    _do_tzset B7C8  
                     __end_of_read_cal_data D72C                            __size_of_sprintf 010A  
                          __size_of_tolower 0084                                    us1156999 169A  
                                  us1450999 8B22                                    us1531999 A696  
                                  us1540999 98D6                                    us1519999 B51C  
                          __size_of_strncmp 0220                            __size_of_toupper 0084  
                                  us1608999 7BA6                            _ringBufS_put_dma 075A  
                                  _dst_name 01EF                        __end_of_Volts_to_SOC 0492  
                             __size_of_atoi 0274                               __size_of_ctoa 0088  
                             __size_of_main 15D6                               __size_of_dtoa 0480  
                             __size_of_nanf 0062                       __size_of_wait_lcd_set 0006  
                             __size_of_time 005E                               __size_of_stoa 02BE  
                             __size_of_utoa 0340                               __size_of_xtoa 03BA  
                       dac_spi_control@init 0052                                  _CRC_IsBusy 2696  
                      __CFG_WDTCWS$WDTCWS_7 000000                           ?_DMA1_DMASCNT_ISR 0001  
                     __end_of_init_port_dma 1FC6                                 _IVTLOCKbits 003FD4  
                      __end_of___secs_to_tm 38EC                    __size_of_TMR5_WriteTimer 0040  
                                  _set_time 1E28                   _ADCC_ADI_InterruptHandler 00A4  
                                 stoa@F1166 0200                          ??_DMA1_DMASCNT_ISR 0007  
              __end_of_ADCC_StartConversion 2676                          __end_of_scan_trans 1D7E  
                                  _spi_link 0060                                    _std_name 01F6  
                                  _wdtdelay 1702                  __end_of_UART2_Transmit_ISR 2108  
                                  _spinners FAEA                                    _vfprintf 06AE  
                  __end_of_convert_adc_data 054A                   __size_of_update_hist_data 007C  
                __end_of_PWM8_LoadDutyValue 1BC4        __end_of_TMR3_DefaultInterruptHandler 27AE  
     __size_of_TMR3_DefaultInterruptHandler 0002                _TMR3_DefaultInterruptHandler 27AC  
      __end_of_INT1_DefaultInterruptHandler 27AC       __size_of_INT1_DefaultInterruptHandler 0002  
              _INT1_DefaultInterruptHandler 27AA                          _send_port_data_dma 185E  
                             ??_Default_ISR 0001                                 _uart1RxHead 0057  
                    __size_of_get_vterm_ptr 002E                                 _uart2RxHead 0054  
                               _uart1RxTail 00D1                              _get_raw_result 2464  
                               _NVMCON1bits 0039E5                                 _uart2TxHead 00CF  
                               _uart2RxTail 00CE                                   spinners@s 01CD  
                               _uart2TxTail 0056                   __size_of_cal_current_zero 0092  
                              _wait_lcd_set 2790                          _EXT_INT_Initialize 1F30  
      __end_of_TMR6_DefaultInterruptHandler 194C       __size_of_TMR6_DefaultInterruptHandler 004E  
              _TMR6_DefaultInterruptHandler 18FE                           _send_lcd_data_dma 1A6C  
      __end_of_ADCC_DefaultInterruptHandler 27B2       __size_of_ADCC_DefaultInterruptHandler 0002  
              _ADCC_DefaultInterruptHandler 27B0                                    intlevel1 0000  
                                  intlevel2 0000                             ___month_to_secs FCD2  
                         _send_lcd_cmd_long 1BC4              __size_of_set_temp_display_help 0010  
             __end_of_set_temp_display_help 26B6                       __end_of_calc_ror_data E0C8  
                         __CFG_CLKOUTEN$OFF 000000                  __end_of_eaDogM_WriteString 08AA  
                     __end_of_mode_lamp_dim 25CE                     __end_of_adc_int_handler 27B4  
                  __size_of_convert_dac_raw 0118                             _display_history AF58  
                    __size_of_INT0_CallBack 0024                                  _SPI1SCKPPS 003ADE  
                                _SPI1SDIPPS 003ADF                      __size_of_INT1_CallBack 0024  
                        __end_of_update_lcd EAB6                      _uart2TxBufferRemaining 0055  
                        __end_of_static_soc 1702                          __end_of_start_bsoc 24A8  
                            _FVR_Initialize 2776                      __end_of_get_raw_result 2486  
                          _send_lcd_cmd_dma 2528                      __size_of___fpclassifyf 0196  
                     TMR5_ISR@CountCallBack 00C2            __end_of_INT1_SetInterruptHandler 229A  
                 __size_of_UART1_Initialize 0048                    __size_of_dac_spi_control 007A  
                 __end_of_send_lcd_data_dma 1AB2                            ??_DMA1_DMAOR_ISR 0007  
                   _CRC_CalculatedResultGet E248                   __end_of_send_lcd_cmd_long 1C04  
                   __size_of_start_adc_scan 0064                         __end_of_Default_ISR 27AA  
            __end_of_PIN_MANAGER_Initialize 0D6A                   __size_of_mode_lamp_bright 000E  
                        __end_of_vterm_dump DF42                     _eaDogM_WriteStringAtPos 0BB4  
                             _get_vterm_ptr 2056                              _check_adc_scan 2756  
                 __size_of_UART2_Initialize 0060                       __size_of_rule_to_secs 06BC  
