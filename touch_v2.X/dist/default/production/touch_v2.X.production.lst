

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Mar  9 12:24:41 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1,inline
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1,inline
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1
    96                           	psect	text74,global,reloc=4,class=CODE,delta=1
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1
    99                           	psect	text77,global,reloc=4,class=CODE,delta=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1
   102                           	psect	text80,global,reloc=4,class=CODE,delta=1
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1
   105                           	psect	text83,global,reloc=4,class=CODE,delta=1
   106                           	psect	text84,global,reloc=4,class=CODE,delta=1
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=4,class=CODE,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=4,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1
   112                           	psect	text90,global,reloc=4,class=CODE,delta=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=4,class=CODE,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1
   116                           	psect	text94,global,reloc=4,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1
   119                           	psect	text97,global,reloc=4,class=CODE,delta=1
   120                           	psect	text98,global,reloc=4,class=CODE,delta=1
   121                           	psect	text99,global,reloc=4,class=CODE,delta=1
   122                           	psect	text100,global,reloc=4,class=CODE,delta=1
   123                           	psect	text101,global,reloc=4,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1
   127                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   128                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1
   130                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   131                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   132  0000                     
   133                           ; Version 2.05
   134                           ; Generated 20/12/2018 GMT
   135                           ; 
   136                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   137                           ; All rights reserved.
   138                           ; 
   139                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   140                           ; 
   141                           ; Redistribution and use in source and binary forms, with or without modification, are
   142                           ; permitted provided that the following conditions are met:
   143                           ; 
   144                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   145                           ;        conditions and the following disclaimer.
   146                           ; 
   147                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   148                           ;        of conditions and the following disclaimer in the documentation and/or other
   149                           ;        materials provided with the distribution.
   150                           ; 
   151                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   152                           ;        software without specific prior written permission.
   153                           ; 
   154                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   155                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   156                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   157                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   158                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   159                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   160                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   161                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   162                           ; 
   163                           ; 
   164                           ; Code-generator required, PIC18F57K42 Definitions
   165                           ; 
   166                           ; SFR Addresses
   167  0000                     
   168 ;;_mode	offset	0
   169 ;;_block	offset	0
   170 ;;_rxData	offset	3
   171 ;;_t_link	offset=-1 (param)
   172 ;;_stream	offset=-1 (param)
   173 ;;_function	offset=-2 (param)
   174 ;;_f	offset	0
   175 ;;_ap	offset	5
   176 ;;_s	offset=-2 (param)
   177 ;;_fmt	offset=-3 (param)
   178 ;;_rxData	offset	0
   179 ;;_r_link	offset=-1 (param)
   180 ;;_k	offset	0
   181 ;;_checksum	offset	2
   182 ;;_i	offset	4
   183 ;;_byte_block	offset=-2 (param)
   184 ;;_length	offset=-3 (param)
   185 ;;_fake	offset=-4 (param)
   186 ;;_i	offset	0
   187 ;;_sum	offset	2
   188 ;;_byte_block	offset=-2 (param)
   189 ;;_byte_count	offset=-4 (param)
   190 ;;_bufData	offset=-1 (param)
   191 ;;_txData	offset=-1 (param)
   192 ;;_byte_block	offset=-1 (param)
   193 ;;_clear	offset=-2 (param)
   194 ;;_numMilliseconds	offset=-2 (param)
   195 ;;_timer	offset=-1 (param)
   196 ;;_timer	offset=-1 (param)
   197 ;;_count	offset=-3 (param)
   198 ;;_readValue	offset	0
   199 ;;_cmd	offset=-1 (param)
   200 ;;_cmd	offset=-1 (param)
   201 ;;_data	offset=-1 (param)
   202 ;;__this	offset=-2 (param)
   203 ;;_r	offset=-1 (param)
   204 ;;_c	offset=-2 (param)
   205 ;;_strPtr	offset=-3 (param)
   206 ;;_strPtr	offset=-1 (param)
   207 ;;_cmd	offset=-1 (param)
   208 ;;_strPtr	offset=-1 (param)
   209 ;;_delay	offset=-4 (param)
   210 ;;__this	offset=-2 (param)
   211 ;;_clearBuffer	offset=-3 (param)
   212 ;;_s	offset	0
   213 ;;_k	offset	2
   214 ;;_dest	offset=-2 (param)
   215 ;;_c	offset=-4 (param)
   216 ;;_n	offset=-6 (param)
   217 ;;_ap	offset	0
   218 ;;_fmt	offset=-2 (param)
   219 ;;_cfmt	offset	0
   220 ;;_fp	offset=-2 (param)
   221 ;;_fmt	offset=-3 (param)
   222 ;;_ap	offset=-5 (param)
   223 ;;_ll	offset	0
   224 ;;_cp	offset	8
   225 ;;_c	offset	10
   226 ;;_fp	offset=-2 (param)
   227 ;;_fmt	offset=-4 (param)
   228 ;;_ap	offset=-6 (param)
   229 ;;_r	offset	0
   230 ;;_l	offset	1
   231 ;;__l	offset=-1 (param)
   232 ;;__r	offset=-2 (param)
   233 ;;_n	offset=-4 (param)
   234 ;;_nuls	offset	0
   235 ;;_l	offset	7
   236 ;;_p	offset	9
   237 ;;_cp	offset	11
   238 ;;_w	offset	13
   239 ;;_i	offset	15
   240 ;;_fp	offset=-2 (param)
   241 ;;_s	offset=-4 (param)
   242 ;;_dtoa$3746	offset	0
   243 ;;_n	offset	2
   244 ;;_i	offset	10
   245 ;;_s	offset	12
   246 ;;_w	offset	14
   247 ;;_p	offset	16
   248 ;;_fp	offset=-2 (param)
   249 ;;_d	offset=-10 (param)
   250 ;;_a	offset=-2 (param)
   251 ;;_sign	offset	0
   252 ;;_counter	offset	1
   253 ;;_dividend	offset=-8 (param)
   254 ;;_divisor	offset=-16 (param)
   255 ;;_quotient	offset	0
   256 ;;_sign	offset	8
   257 ;;_counter	offset	9
   258 ;;_dividend	offset=-8 (param)
   259 ;;_divisor	offset=-16 (param)
   260 ;;_w	offset	0
   261 ;;_fp	offset=-2 (param)
   262 ;;_c	offset=-3 (param)
   263 ;;_w	offset	0
   264 ;;_i	offset	2
   265 ;;_fp	offset=-2 (param)
   266 ;;_buf	offset=-4 (param)
   267 ;;_p	offset=-6 (param)
   268 ;;_a	offset	0
   269 ;;_s	offset=-2 (param)
   270 ;;_i	offset	0
   271 ;;_c	offset	2
   272 ;;_s	offset=-2 (param)
   273 ;;_fp	offset=-4 (param)
   274 ;;_c	offset=-2 (param)
   275 ;;_fp	offset=-4 (param)
   276 ;;_c	offset=-1 (param)
   277 ;;__this	offset=-2 (param)
   278 ;;_c	offset=-3 (param)
   279 ;;_InterruptHandler	offset=-3 (param)
   280 ;;_InterruptHandler	offset=-3 (param)
   281 ;;_InterruptHandler	offset=-3 (param)
   282 ;;_InterruptHandler	offset=-3 (param)
   283 ;;_InterruptHandler	offset=-3 (param)
   284 ;;_InterruptHandler	offset=-3 (param)
   285 ;;_state	offset	0
   286 ;;_InterruptHandler	offset=-3 (param)
   287 ;;_InterruptHandler	offset=-3 (param)
   288 ;;_InterruptHandler	offset=-3 (param)
   289 ;;_InterruptHandler	offset=-3 (param)
   290 ;;_i	offset	0
   291 ;;_timerVal	offset=-2 (param)
   292                           
   293                           	psect	idataCOMRAM
   294  00598A                     __pidataCOMRAM:
   295                           	opt callstack 0
   296                           
   297                           ;initializer for r_protocol@retry
   298  00598A  03                 	db	3
   299                           
   300                           	psect	idataBANK0
   301  005890                     __pidataBANK0:
   302                           	opt callstack 0
   303                           
   304                           ;initializer for stoa@F1144
   305  005890  28                 	db	40
   306  005891  6E                 	db	110
   307  005892  75                 	db	117
   308  005893  6C                 	db	108
   309  005894  6C                 	db	108
   310  005895  29                 	db	41
   311  005896  00                 	db	0
   312                           
   313                           ;initializer for _H12
   314  005897  0000               	dw	0
   315  005899  00                 	db	0
   316  00589A  01                 	db	1
   317  00589B  0001               	dw	1
   318  00589D  0000               	dw	0
   319  00589F  01                 	db	1
   320  0058A0  80                 	db	128
   321  0058A1  02                 	db	2
   322  0058A2  81                 	db	129
   323  0058A3  00                 	db	0
   324  0058A4  00                 	db	0
   325  0058A5  0C                 	db	12
   326                           
   327                           	psect	idataBANK1
   328  004B0A                     __pidataBANK1:
   329                           	opt callstack 0
   330                           
   331                           ;initializer for _H10
   332  004B0A  0000               	dw	0
   333  004B0C  9F75               	dw	40821
   334  004B0E  000C               	dw	12
   335  004B10  01                 	db	1
   336  004B11  80                 	db	128
   337  004B12  01                 	db	1
   338  004B13  81                 	db	129
   339  004B14  00                 	db	0
   340  004B15  00                 	db	0
   341  004B16  0A                 	db	10
   342  004B17  0000               	dw	0
   343  004B19  00                 	db	0
   344  004B1A  00                 	db	0
   345  004B1B  00                 	db	0
   346  004B1C  00                 	db	0
   347  004B1D  00                 	db	0
   348  004B1E  00                 	db	0
   349  004B1F  00                 	db	0
   350  004B20  00                 	db	0
   351  004B21  00                 	db	0
   352  004B22  00                 	db	0
   353  004B23  0A                 	db	10
   354  004B24  0000               	dw	0
   355  004B26  0001               	dw	1
   356  004B28  0000               	dw	0
   357  004B2A  01                 	db	1
   358  004B2B  80                 	db	128
   359  004B2C  00                 	db	0
   360  004B2D  01                 	db	1
   361  004B2E  00                 	db	0
   362  004B2F  00                 	db	0
   363  004B30  0A                 	db	10
   364  004B31  0000               	dw	0
   365  004B33  0D89               	dw	3465
   366  004B35  0000               	dw	0
   367  004B37  01                 	db	1
   368  004B38  80                 	db	128
   369  004B39  01                 	db	1
   370  004B3A  81                 	db	129
   371  004B3B  00                 	db	0
   372  004B3C  80                 	db	128
   373  004B3D  0A                 	db	10
   374  004B3E  0000               	dw	0
   375  004B40  0D89               	dw	3465
   376  004B42  0000               	dw	0
   377  004B44  01                 	db	1
   378  004B45  80                 	db	128
   379  004B46  11                 	db	17
   380  004B47  82                 	db	130
   381  004B48  00                 	db	0
   382  004B49  00                 	db	0
   383  004B4A  0A                 	db	10
   384                           
   385                           ;initializer for _H24
   386  004B4B  0000               	dw	0
   387  004B4D  30                 	db	48
   388  004B4E  31                 	db	49
   389  004B4F  30                 	db	48
   390  004B50  39                 	db	57
   391  004B51  31                 	db	49
   392  004B52  31                 	db	49
   393  004B53  30                 	db	48
   394  004B54  38                 	db	56
   395  004B55  34                 	db	52
   396  004B56  36                 	db	54
   397  004B57  30                 	db	48
   398  004B58  30                 	db	48
   399  004B59  00                 	db	0
   400  004B5A  00                 	db	0
   401  004B5B  0001               	dw	1
   402  004B5D  0000               	dw	0
   403  004B5F  01                 	db	1
   404  004B60  80                 	db	128
   405  004B61  12                 	db	18
   406  004B62  82                 	db	130
   407  004B63  00                 	db	0
   408  004B64  00                 	db	0
   409  004B65  18                 	db	24
   410                           
   411                           ;initializer for _H18
   412  004B66  0000               	dw	0
   413  004B68  00                 	db	0
   414  004B69  00                 	db	0
   415  004B6A  00                 	db	0
   416  004B6B  00                 	db	0
   417  004B6C  00                 	db	0
   418  004B6D  00                 	db	0
   419  004B6E  00                 	db	0
   420  004B6F  00                 	db	0
   421  004B70  0001               	dw	1
   422  004B72  0000               	dw	0
   423  004B74  01                 	db	1
   424  004B75  80                 	db	128
   425  004B76  03                 	db	3
   426  004B77  81                 	db	129
   427  004B78  00                 	db	0
   428  004B79  00                 	db	0
   429  004B7A  12                 	db	18
   430                           
   431                           ;initializer for _H14
   432  004B7B  0000               	dw	0
   433  004B7D  00                 	db	0
   434  004B7E  41                 	db	65
   435  004B7F  11                 	db	17
   436  004B80  01                 	db	1
   437  004B81  0001               	dw	1
   438  004B83  0000               	dw	0
   439  004B85  01                 	db	1
   440  004B86  80                 	db	128
   441  004B87  04                 	db	4
   442  004B88  81                 	db	129
   443  004B89  00                 	db	0
   444  004B8A  00                 	db	0
   445  004B8B  0E                 	db	14
   446                           
   447                           ;initializer for _H13
   448  004B8C  0000               	dw	0
   449  004B8E  00                 	db	0
   450  004B8F  01                 	db	1
   451  004B90  21                 	db	33
   452  004B91  0001               	dw	1
   453  004B93  0000               	dw	0
   454  004B95  01                 	db	1
   455  004B96  80                 	db	128
   456  004B97  0C                 	db	12
   457  004B98  86                 	db	134
   458  004B99  00                 	db	0
   459  004B9A  00                 	db	0
   460  004B9B  0D                 	db	13
   461                           
   462                           	psect	idataBANK3
   463  004CB6                     __pidataBANK3:
   464                           	opt callstack 0
   465                           
   466                           ;initializer for _H53
   467  004CB6  0000               	dw	0
   468  004CB8  00                 	db	0
   469  004CB9  00                 	db	0
   470  004CBA  00                 	db	0
   471  004CBB  00                 	db	0
   472  004CBC  00                 	db	0
   473  004CBD  00                 	db	0
   474  004CBE  00                 	db	0
   475  004CBF  00                 	db	0
   476  004CC0  00                 	db	0
   477  004CC1  00                 	db	0
   478  004CC2  00                 	db	0
   479  004CC3  00                 	db	0
   480  004CC4  00                 	db	0
   481  004CC5  00                 	db	0
   482  004CC6  00                 	db	0
   483  004CC7  00                 	db	0
   484  004CC8  00                 	db	0
   485  004CC9  00                 	db	0
   486  004CCA  00                 	db	0
   487  004CCB  00                 	db	0
   488  004CCC  00                 	db	0
   489  004CCD  00                 	db	0
   490  004CCE  00                 	db	0
   491  004CCF  00                 	db	0
   492  004CD0  00                 	db	0
   493  004CD1  00                 	db	0
   494  004CD2  00                 	db	0
   495  004CD3  00                 	db	0
   496  004CD4  00                 	db	0
   497  004CD5  00                 	db	0
   498  004CD6  00                 	db	0
   499  004CD7  00                 	db	0
   500  004CD8  00                 	db	0
   501  004CD9  00                 	db	0
   502  004CDA  00                 	db	0
   503  004CDB  00                 	db	0
   504  004CDC  00                 	db	0
   505  004CDD  00                 	db	0
   506  004CDE  00                 	db	0
   507  004CDF  00                 	db	0
   508  004CE0  00                 	db	0
   509  004CE1  00                 	db	0
   510  004CE2  00                 	db	0
   511  004CE3  0001               	dw	1
   512  004CE5  0000               	dw	0
   513  004CE7  01                 	db	1
   514  004CE8  80                 	db	128
   515  004CE9  0B                 	db	11
   516  004CEA  81                 	db	129
   517  004CEB  00                 	db	0
   518  004CEC  00                 	db	0
   519  004CED  35                 	db	53
   520  004CEE  0000               	dw	0
   521  004CF0  00                 	db	0
   522  004CF1  16                 	db	22
   523  004CF2  20                 	db	32
   524  004CF3  4E                 	db	78
   525  004CF4  6F                 	db	111
   526  004CF5  77                 	db	119
   527  004CF6  20                 	db	32
   528  004CF7  57                 	db	87
   529  004CF8  65                 	db	101
   530  004CF9  20                 	db	32
   531  004CFA  41                 	db	65
   532  004CFB  72                 	db	114
   533  004CFC  65                 	db	101
   534  004CFD  20                 	db	32
   535  004CFE  54                 	db	84
   536  004CFF  61                 	db	97
   537  004D00  6C                 	db	108
   538  004D01  6B                 	db	107
   539  004D02  69                 	db	105
   540  004D03  6E                 	db	110
   541  004D04  67                 	db	103
   542  004D05  2E                 	db	46
   543  004D06  2E                 	db	46
   544  004D07  2E                 	db	46
   545  004D08  00                 	db	0
   546  004D09  00                 	db	0
   547  004D0A  00                 	db	0
   548  004D0B  00                 	db	0
   549  004D0C  00                 	db	0
   550  004D0D  00                 	db	0
   551  004D0E  00                 	db	0
   552  004D0F  00                 	db	0
   553  004D10  00                 	db	0
   554  004D11  00                 	db	0
   555  004D12  00                 	db	0
   556  004D13  00                 	db	0
   557  004D14  00                 	db	0
   558  004D15  00                 	db	0
   559  004D16  00                 	db	0
   560  004D17  00                 	db	0
   561  004D18  00                 	db	0
   562  004D19  00                 	db	0
   563  004D1A  00                 	db	0
   564  004D1B  0001               	dw	1
   565  004D1D  0000               	dw	0
   566  004D1F  01                 	db	1
   567  004D20  80                 	db	128
   568  004D21  03                 	db	3
   569  004D22  8A                 	db	138
   570  004D23  00                 	db	0
   571  004D24  00                 	db	0
   572  004D25  35                 	db	53
   573  0000                     _IVTADL	set	14493
   574  0000                     _IVTADH	set	14494
   575  0000                     _IVTADU	set	14495
   576  0000                     _PIE8bits	set	14744
   577  0000                     _PIR8bits	set	14760
   578  0000                     _SCANPR	set	14839
   579  0000                     _DMA2PR	set	14836
   580  0000                     _DMA1PR	set	14835
   581  0000                     _MAINPR	set	14834
   582  0000                     _ISRPR	set	14833
   583  0000                     _PIE2bits	set	14738
   584  0000                     _PIR2bits	set	14754
   585  0000                     _PIE9bits	set	14745
   586  0000                     _PIR9bits	set	14761
   587  0000                     _PIE6bits	set	14742
   588  0000                     _PIE3bits	set	14739
   589  0000                     _PMD7	set	14791
   590  0000                     _PMD6	set	14790
   591  0000                     _PMD5	set	14789
   592  0000                     _PMD4	set	14788
   593  0000                     _PMD3	set	14787
   594  0000                     _PMD2	set	14786
   595  0000                     _PMD1	set	14785
   596  0000                     _PMD0	set	14784
   597  0000                     _OSCTUNE	set	14814
   598  0000                     _OSCFRQ	set	14815
   599  0000                     _OSCEN	set	14813
   600  0000                     _OSCCON3	set	14811
   601  0000                     _OSCCON1	set	14809
   602  0000                     _IPR8bits	set	14728
   603  0000                     _IPR9bits	set	14729
   604  0000                     _IPR7bits	set	14727
   605  0000                     _IPR5bits	set	14725
   606  0000                     _IPR1bits	set	14721
   607  0000                     _IPR3bits	set	14723
   608  0000                     _IPR6bits	set	14726
   609  0000                     _IPR2bits	set	14722
   610  0000                     _PIE7bits	set	14743
   611  0000                     _PIE5bits	set	14741
   612  0000                     _PIE1bits	set	14737
   613  0000                     _PIR7bits	set	14759
   614  0000                     _PIR5bits	set	14757
   615  0000                     _PIR1bits	set	14753
   616  0000                     _PLLR	set	118496
   617  0000                     _SPI1SDIPPS	set	15071
   618  0000                     _RC6PPS	set	14870
   619  0000                     _RC5PPS	set	14869
   620  0000                     _RA6PPS	set	14854
   621  0000                     _RA5PPS	set	14853
   622  0000                     _RA4PPS	set	14852
   623  0000                     _SPI1SCKPPS	set	15070
   624  0000                     _U1RXPPS	set	15077
   625  0000                     _INT1PPS	set	15041
   626  0000                     _INT2PPS	set	15042
   627  0000                     _INT0PPS	set	15040
   628  0000                     _RC3PPS	set	14867
   629  0000                     _RB6PPS	set	14862
   630  0000                     _U2RXPPS	set	15080
   631  0000                     _SLRCONF	set	14995
   632  0000                     _SLRCONE	set	14979
   633  0000                     _SLRCOND	set	14963
   634  0000                     _SLRCONC	set	14947
   635  0000                     _SLRCONB	set	14931
   636  0000                     _SLRCONA	set	14915
   637  0000                     _ODCOND	set	14962
   638  0000                     _ODCONC	set	14946
   639  0000                     _ODCONB	set	14930
   640  0000                     _ODCONA	set	14914
   641  0000                     _ODCONF	set	14994
   642  0000                     _ODCONE	set	14978
   643  0000                     _WPUC	set	14945
   644  0000                     _WPUA	set	14913
   645  0000                     _WPUB	set	14929
   646  0000                     _WPUE	set	14977
   647  0000                     _WPUF	set	14993
   648  0000                     _WPUD	set	14961
   649  0000                     _ANSELA	set	14912
   650  0000                     _ANSELF	set	14992
   651  0000                     _ANSELE	set	14976
   652  0000                     _ANSELB	set	14928
   653  0000                     _ANSELC	set	14944
   654  0000                     _ANSELD	set	14960
   655  0000                     _DMA1SSA	set	15353
   656  0000                     _DMA1DSZ	set	15342
   657  0000                     _DMA1SSZ	set	15351
   658  0000                     _DMA1DSA	set	15344
   659  0000                     _DMA1CON0bits	set	15356
   660  0000                     _DMA1CON1bits	set	15357
   661  0000                     _DMA1CON0	set	15356
   662  0000                     _DMA1AIRQ	set	15358
   663  0000                     _DMA1SIRQ	set	15359
   664  0000                     _DMA1CON1	set	15357
   665  0000                     _CLC1CON	set	15476
   666  0000                     _CLC1GLS3	set	15485
   667  0000                     _CLC1GLS2	set	15484
   668  0000                     _CLC1GLS1	set	15483
   669  0000                     _CLC1GLS0	set	15482
   670  0000                     _CLC1SEL3	set	15481
   671  0000                     _CLC1SEL2	set	15480
   672  0000                     _CLC1SEL1	set	15479
   673  0000                     _CLC1SEL0	set	15478
   674  0000                     _CLC1POL	set	15477
   675  0000                     _CLKRCON	set	15589
   676  0000                     _CLKRCLK	set	15590
   677  0000                     _MD1CARL	set	15613
   678  0000                     _MD1CARH	set	15614
   679  0000                     _MD1SRC	set	15612
   680  0000                     _MD1CON1bits	set	15611
   681  0000                     _MD1CON0bits	set	15610
   682  0000                     _SPI1INTFbits	set	15642
   683  0000                     _SPI1RXB	set	15632
   684  0000                     _SPI1TXB	set	15633
   685  0000                     _SPI1TCNTL	set	15634
   686  0000                     _SPI1CON0	set	15636
   687  0000                     _SPI1CLK	set	15644
   688  0000                     _SPI1BAUD	set	15641
   689  0000                     _SPI1CON2	set	15638
   690  0000                     _SPI1CON1	set	15637
   691  0000                     _U2RXB	set	15824
   692  0000                     _U2TXB	set	15826
   693  0000                     _U2ERRIE	set	15842
   694  0000                     _U2ERRIR	set	15841
   695  0000                     _U2UIR	set	15840
   696  0000                     _U2FIFO	set	15839
   697  0000                     _U2BRGH	set	15838
   698  0000                     _U2BRGL	set	15837
   699  0000                     _U2CON2	set	15836
   700  0000                     _U2CON1	set	15835
   701  0000                     _U2CON0	set	15834
   702  0000                     _U2P3L	set	15832
   703  0000                     _U2P2L	set	15830
   704  0000                     _U2P1L	set	15828
   705  0000                     _U1RXB	set	15848
   706  0000                     _U1TXB	set	15850
   707  0000                     _U1ERRIE	set	15866
   708  0000                     _U1ERRIR	set	15865
   709  0000                     _U1UIR	set	15864
   710  0000                     _U1FIFO	set	15863
   711  0000                     _U1BRGH	set	15862
   712  0000                     _U1BRGL	set	15861
   713  0000                     _U1CON2	set	15860
   714  0000                     _U1CON1	set	15859
   715  0000                     _U1CON0	set	15858
   716  0000                     _U1P3H	set	15857
   717  0000                     _U1P3L	set	15856
   718  0000                     _U1P2H	set	15855
   719  0000                     _U1P2L	set	15854
   720  0000                     _U1P1H	set	15853
   721  0000                     _U1P1L	set	15852
   722  0000                     _ADCON0	set	16120
   723  0000                     _ADCLK	set	16127
   724  0000                     _ADACT	set	16126
   725  0000                     _ADREF	set	16125
   726  0000                     _ADSTAT	set	16124
   727  0000                     _ADCON3	set	16123
   728  0000                     _ADCON2	set	16122
   729  0000                     _ADCON1	set	16121
   730  0000                     _ADPREH	set	16119
   731  0000                     _ADPREL	set	16118
   732  0000                     _ADCAP	set	16117
   733  0000                     _ADACQH	set	16116
   734  0000                     _ADACQL	set	16115
   735  0000                     _ADPCH	set	16113
   736  0000                     _ADRPT	set	16108
   737  0000                     _ADACCU	set	16106
   738  0000                     _ADSTPTH	set	16101
   739  0000                     _ADSTPTL	set	16100
   740  0000                     _ADUTHH	set	16097
   741  0000                     _ADUTHL	set	16096
   742  0000                     _ADLTHH	set	16095
   743  0000                     _ADLTHL	set	16094
   744  0000                     _NCO1CONbits	set	16190
   745  0000                     _NCO1INCL	set	16187
   746  0000                     _NCO1INCH	set	16188
   747  0000                     _NCO1INCU	set	16189
   748  0000                     _NCO1ACCL	set	16184
   749  0000                     _NCO1ACCH	set	16185
   750  0000                     _NCO1ACCU	set	16186
   751  0000                     _NCO1CLK	set	16191
   752  0000                     _NCO1CON	set	16190
   753  0000                     _LATCbits	set	16316
   754  0000                     _PORTDbits	set	16333
   755  0000                     _LATDbits	set	16317
   756  0000                     _LATEbits	set	16318
   757  0000                     _T5CONbits	set	16282
   758  0000                     _T5CON	set	16282
   759  0000                     _TMR5L	set	16280
   760  0000                     _TMR5H	set	16281
   761  0000                     _T5CLK	set	16285
   762  0000                     _T5GATE	set	16284
   763  0000                     _T5GCON	set	16283
   764  0000                     _T6CON	set	16276
   765  0000                     _T6TMR	set	16274
   766  0000                     _T6PR	set	16275
   767  0000                     _T6RST	set	16279
   768  0000                     _T6HLT	set	16277
   769  0000                     _T6CLKCON	set	16278
   770  0000                     _TRISD	set	16325
   771  0000                     _TRISC	set	16324
   772  0000                     _TRISB	set	16323
   773  0000                     _TRISA	set	16322
   774  0000                     _TRISF	set	16327
   775  0000                     _TRISE	set	16326
   776  0000                     _LATC	set	16316
   777  0000                     _LATB	set	16315
   778  0000                     _LATF	set	16319
   779  0000                     _LATA	set	16314
   780  0000                     _LATD	set	16317
   781  0000                     _LATE	set	16318
   782  0000                     _IVTLOCKbits	set	16340
   783  0000                     _IVTLOCK	set	16340
   784  0000                     _INTCON0bits	set	16338
   785  0000                     _GIE	set	130711
   786                           
   787                           	psect	smallconst
   788  002000                     __psmallconst:
   789                           	opt callstack 0
   790  002000  00                 	db	0
   791  002001                     STR_7:
   792  002001  20                 	db	32
   793  002002  45                 	db	69	;'E'
   794  002003  52                 	db	82	;'R'
   795  002004  52                 	db	82	;'R'
   796  002005  20                 	db	32
   797  002006  52                 	db	82	;'R'
   798  002007  25                 	db	37
   799  002008  64                 	db	100	;'d'
   800  002009  20                 	db	32
   801  00200A  54                 	db	84	;'T'
   802  00200B  25                 	db	37
   803  00200C  64                 	db	100	;'d'
   804  00200D  20                 	db	32
   805  00200E  45                 	db	69	;'E'
   806  00200F  25                 	db	37
   807  002010  64                 	db	100	;'d'
   808  002011  20                 	db	32
   809  002012  41                 	db	65	;'A'
   810  002013  25                 	db	37
   811  002014  64                 	db	100	;'d'
   812  002015  20                 	db	32
   813  002016  23                 	db	35
   814  002017  00                 	db	0
   815  002018                     STR_11:
   816  002018  20                 	db	32
   817  002019  52                 	db	82	;'R'
   818  00201A  25                 	db	37
   819  00201B  64                 	db	100	;'d'
   820  00201C  20                 	db	32
   821  00201D  54                 	db	84	;'T'
   822  00201E  25                 	db	37
   823  00201F  64                 	db	100	;'d'
   824  002020  20                 	db	32
   825  002021  45                 	db	69	;'E'
   826  002022  25                 	db	37
   827  002023  64                 	db	100	;'d'
   828  002024  20                 	db	32
   829  002025  41                 	db	65	;'A'
   830  002026  25                 	db	37
   831  002027  64                 	db	100	;'d'
   832  002028  20                 	db	32
   833  002029  20                 	db	32
   834  00202A  20                 	db	32
   835  00202B  23                 	db	35
   836  00202C  00                 	db	0
   837  00202D                     STR_8:
   838  00202D  20                 	db	32
   839  00202E  48                 	db	72	;'H'
   840  00202F  4F                 	db	79	;'O'
   841  002030  53                 	db	83	;'S'
   842  002031  54                 	db	84	;'T'
   843  002032  20                 	db	32
   844  002033  4D                 	db	77	;'M'
   845  002034  4F                 	db	79	;'O'
   846  002035  44                 	db	68	;'D'
   847  002036  45                 	db	69	;'E'
   848  002037  20                 	db	32
   849  002038  25                 	db	37
   850  002039  6C                 	db	108	;'l'
   851  00203A  64                 	db	100	;'d'
   852  00203B  20                 	db	32
   853  00203C  20                 	db	32
   854  00203D  20                 	db	32
   855  00203E  23                 	db	35
   856  00203F  00                 	db	0
   857  002040                     STR_10:
   858  002040  20                 	db	32
   859  002041  4C                 	db	76	;'L'
   860  002042  4F                 	db	79	;'O'
   861  002043  47                 	db	71	;'G'
   862  002044  20                 	db	32
   863  002045  4D                 	db	77	;'M'
   864  002046  4F                 	db	79	;'O'
   865  002047  44                 	db	68	;'D'
   866  002048  45                 	db	69	;'E'
   867  002049  20                 	db	32
   868  00204A  20                 	db	32
   869  00204B  20                 	db	32
   870  00204C  20                 	db	32
   871  00204D  20                 	db	32
   872  00204E  20                 	db	32
   873  00204F  23                 	db	35
   874  002050  00                 	db	0
   875  002051                     STR_9:
   876  002051  20                 	db	32
   877  002052  45                 	db	69	;'E'
   878  002053  51                 	db	81	;'Q'
   879  002054  55                 	db	85	;'U'
   880  002055  49                 	db	73	;'I'
   881  002056  50                 	db	80	;'P'
   882  002057  20                 	db	32
   883  002058  4D                 	db	77	;'M'
   884  002059  4F                 	db	79	;'O'
   885  00205A  44                 	db	68	;'D'
   886  00205B  45                 	db	69	;'E'
   887  00205C  20                 	db	32
   888  00205D  20                 	db	32
   889  00205E  20                 	db	32
   890  00205F  20                 	db	32
   891  002060  23                 	db	35
   892  002061  00                 	db	0
   893  002062                     STR_1:
   894  002062  20                 	db	32
   895  002063  52                 	db	82	;'R'
   896  002064  56                 	db	86	;'V'
   897  002065  49                 	db	73	;'I'
   898  002066  20                 	db	32
   899  002067  48                 	db	72	;'H'
   900  002068  4F                 	db	79	;'O'
   901  002069  53                 	db	83	;'S'
   902  00206A  54                 	db	84	;'T'
   903  00206B  20                 	db	32
   904  00206C  54                 	db	84	;'T'
   905  00206D  45                 	db	69	;'E'
   906  00206E  53                 	db	83	;'S'
   907  00206F  54                 	db	84	;'T'
   908  002070  45                 	db	69	;'E'
   909  002071  52                 	db	82	;'R'
   910  002072  00                 	db	0
   911  002073                     STR_4:
   912  002073  20                 	db	32
   913  002074  46                 	db	70	;'F'
   914  002075  47                 	db	71	;'G'
   915  002076  42                 	db	66	;'B'
   916  002077  40                 	db	64	;'@'
   917  002078  4D                 	db	77	;'M'
   918  002079  43                 	db	67	;'C'
   919  00207A  48                 	db	72	;'H'
   920  00207B  50                 	db	80	;'P'
   921  00207C  20                 	db	32
   922  00207D  46                 	db	70	;'F'
   923  00207E  41                 	db	65	;'A'
   924  00207F  42                 	db	66	;'B'
   925  002080  34                 	db	52	;'4'
   926  002081  00                 	db	0
   927  002082                     STR_5:
   928  002082  20                 	db	32
   929  002083  53                 	db	83	;'S'
   930  002084  25                 	db	37
   931  002085  64                 	db	100	;'d'
   932  002086  46                 	db	70	;'F'
   933  002087  25                 	db	37
   934  002088  64                 	db	100	;'d'
   935  002089  20                 	db	32
   936  00208A  23                 	db	35
   937  00208B  20                 	db	32
   938  00208C  20                 	db	32
   939  00208D  20                 	db	32
   940  00208E  20                 	db	32
   941  00208F  00                 	db	0
   942  002090                     STR_2:
   943  002090  20                 	db	32
   944  002091  56                 	db	86	;'V'
   945  002092  65                 	db	101	;'e'
   946  002093  72                 	db	114	;'r'
   947  002094  73                 	db	115	;'s'
   948  002095  69                 	db	105	;'i'
   949  002096  6F                 	db	111	;'o'
   950  002097  6E                 	db	110	;'n'
   951  002098  20                 	db	32
   952  002099  25                 	db	37
   953  00209A  73                 	db	115	;'s'
   954  00209B  00                 	db	0
   955  00209C                     STR_6:
   956  00209C  20                 	db	32
   957  00209D  4F                 	db	79	;'O'
   958  00209E  4B                 	db	75	;'K'
   959  00209F  20                 	db	32
   960  0020A0  23                 	db	35
   961  0020A1  00                 	db	0
   962  0020A2                     STR_3:
   963  0020A2  30                 	db	48	;'0'
   964  0020A3  2E                 	db	46
   965  0020A4  32                 	db	50	;'2'
   966  0020A5  41                 	db	65	;'A'
   967  0020A6  00                 	db	0
   968  0020A7                     STR_15:
   969  0020A7  6C                 	db	108	;'l'
   970  0020A8  64                 	db	100	;'d'
   971  0020A9  00                 	db	0
   972  0020AA                     STR_19:
   973  0020AA  6C                 	db	108	;'l'
   974  0020AB  69                 	db	105	;'i'
   975  0020AC  00                 	db	0
   976  0020AD                     STR_13:
   977  0020AD  25                 	db	37
   978  0020AE  63                 	db	99	;'c'
   979  0020AF  00                 	db	0
   980  0000                     
   981                           ; #config settings
   982  0020B0  00                 	db	0	; dummy byte at the end
   983  0000                     
   984                           	psect	cinit
   985  0045C6                     __pcinit:
   986                           	opt callstack 0
   987  0045C6                     start_initialization:
   988                           	opt callstack 0
   989  0045C6                     __initialization:
   990                           	opt callstack 0
   991                           
   992                           ; Initialize objects allocated to BANK3 (112 bytes)
   993                           ; load TBLPTR registers with __pidataBANK3
   994  0045C6  0EB6               	movlw	low __pidataBANK3
   995  0045C8  6EF6               	movwf	tblptrl,c
   996  0045CA  0E4C               	movlw	high __pidataBANK3
   997  0045CC  6EF7               	movwf	tblptrh,c
   998  0045CE  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   999  0045D0  6EF8               	movwf	tblptru,c
  1000  0045D2  EE00  F386         	lfsr	0,__pdataBANK3
  1001  0045D6  EE20 F070          	lfsr	2,112
  1002  0045DA                     copy_data0:
  1003  0045DA  0009               	tblrd		*+
  1004  0045DC  006F FFD7 FFEE     	movff	tablat,postinc0
  1005  0045E2  50DD               	movf	postdec2,w,c
  1006  0045E4  50D9               	movf	fsr2l,w,c
  1007  0045E6  E1F9               	bnz	copy_data0
  1008                           
  1009                           ; Initialize objects allocated to BANK1 (146 bytes)
  1010                           ; load TBLPTR registers with __pidataBANK1
  1011  0045E8  0E0A               	movlw	low __pidataBANK1
  1012  0045EA  6EF6               	movwf	tblptrl,c
  1013  0045EC  0E4B               	movlw	high __pidataBANK1
  1014  0045EE  6EF7               	movwf	tblptrh,c
  1015  0045F0  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1016  0045F2  6EF8               	movwf	tblptru,c
  1017  0045F4  EE00  F100         	lfsr	0,__pdataBANK1
  1018  0045F8  EE20 F092          	lfsr	2,146
  1019  0045FC                     copy_data1:
  1020  0045FC  0009               	tblrd		*+
  1021  0045FE  006F FFD7 FFEE     	movff	tablat,postinc0
  1022  004604  50DD               	movf	postdec2,w,c
  1023  004606  50D9               	movf	fsr2l,w,c
  1024  004608  E1F9               	bnz	copy_data1
  1025                           
  1026                           ; Initialize objects allocated to BANK0 (22 bytes)
  1027                           ; load TBLPTR registers with __pidataBANK0
  1028  00460A  0E90               	movlw	low __pidataBANK0
  1029  00460C  6EF6               	movwf	tblptrl,c
  1030  00460E  0E58               	movlw	high __pidataBANK0
  1031  004610  6EF7               	movwf	tblptrh,c
  1032  004612  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1033  004614  6EF8               	movwf	tblptru,c
  1034  004616  EE00  F0DE         	lfsr	0,__pdataBANK0
  1035  00461A  EE20 F016          	lfsr	2,22
  1036  00461E                     copy_data2:
  1037  00461E  0009               	tblrd		*+
  1038  004620  006F FFD7 FFEE     	movff	tablat,postinc0
  1039  004626  50DD               	movf	postdec2,w,c
  1040  004628  50D9               	movf	fsr2l,w,c
  1041  00462A  E1F9               	bnz	copy_data2
  1042                           
  1043                           ; Initialize objects allocated to COMRAM (1 bytes)
  1044                           ; load TBLPTR registers with __pidataCOMRAM
  1045  00462C  0E8A               	movlw	low __pidataCOMRAM
  1046  00462E  6EF6               	movwf	tblptrl,c
  1047  004630  0E59               	movlw	high __pidataCOMRAM
  1048  004632  6EF7               	movwf	tblptrh,c
  1049  004634  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1050  004636  6EF8               	movwf	tblptru,c
  1051  004638  0009               	tblrd		*+	;fetch initializer
  1052  00463A  006F FFD4  F05E    	movff	tablat,__pdataCOMRAM
  1053                           
  1054                           ; Clear objects allocated to BANK3 (134 bytes)
  1055  004640  EE00  F300         	lfsr	0,__pbssBANK3
  1056  004644  0E86               	movlw	134
  1057  004646                     clear_0:
  1058  004646  6AEE               	clrf	postinc0,c
  1059  004648  06E8               	decf	wreg,f,c
  1060  00464A  E1FD               	bnz	clear_0
  1061                           
  1062                           ; Clear objects allocated to BANK2 (192 bytes)
  1063  00464C  EE00  F200         	lfsr	0,__pbssBANK2
  1064  004650  0EC0               	movlw	192
  1065  004652                     clear_1:
  1066  004652  6AEE               	clrf	postinc0,c
  1067  004654  06E8               	decf	wreg,f,c
  1068  004656  E1FD               	bnz	clear_1
  1069                           
  1070                           ; Clear objects allocated to BANK1 (96 bytes)
  1071  004658  EE00  F192         	lfsr	0,__pbssBANK1
  1072  00465C  0E60               	movlw	96
  1073  00465E                     clear_2:
  1074  00465E  6AEE               	clrf	postinc0,c
  1075  004660  06E8               	decf	wreg,f,c
  1076  004662  E1FD               	bnz	clear_2
  1077                           
  1078                           ; Clear objects allocated to BANK0 (126 bytes)
  1079  004664  EE00  F060         	lfsr	0,__pbssBANK0
  1080  004668  0E7E               	movlw	126
  1081  00466A                     clear_3:
  1082  00466A  6AEE               	clrf	postinc0,c
  1083  00466C  06E8               	decf	wreg,f,c
  1084  00466E  E1FD               	bnz	clear_3
  1085                           
  1086                           ; Clear objects allocated to COMRAM (61 bytes)
  1087  004670  EE00  F001         	lfsr	0,__pbssCOMRAM
  1088  004674  0E3D               	movlw	61
  1089  004676                     clear_4:
  1090  004676  6AEE               	clrf	postinc0,c
  1091  004678  06E8               	decf	wreg,f,c
  1092  00467A  E1FD               	bnz	clear_4
  1093                           
  1094                           ;
  1095                           ; Setup IVTBASE
  1096                           ;
  1097  00467C  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1098  00467E  6ED5               	movwf	213,c
  1099  004680  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1100  004682  6ED6               	movwf	214,c
  1101  004684  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1102  004686  6ED7               	movwf	215,c
  1103  004688                     end_of_initialization:
  1104                           	opt callstack 0
  1105  004688                     __end_of__initialization:
  1106                           	opt callstack 0
  1107  004688  0100               	movlb	0
  1108  00468A  EFF0  F014         	goto	_main	;jump to C main() function
  1109                           
  1110                           	psect	bssCOMRAM
  1111  000001                     __pbssCOMRAM:
  1112                           	opt callstack 0
  1113  000001                     secs_II_message@block:
  1114                           	opt callstack 0
  1115  000001                     	ds	3
  1116  000004                     _TMR5_InterruptHandler:
  1117                           	opt callstack 0
  1118  000004                     	ds	3
  1119  000007                     _TMR6_InterruptHandler:
  1120                           	opt callstack 0
  1121  000007                     	ds	3
  1122  00000A                     _ADCC_ADI_InterruptHandler:
  1123                           	opt callstack 0
  1124  00000A                     	ds	3
  1125  00000D                     _UART1_TxInterruptHandler:
  1126                           	opt callstack 0
  1127  00000D                     	ds	3
  1128  000010                     _UART1_RxInterruptHandler:
  1129                           	opt callstack 0
  1130  000010                     	ds	3
  1131  000013                     _UART2_TxInterruptHandler:
  1132                           	opt callstack 0
  1133  000013                     	ds	3
  1134  000016                     _UART2_RxInterruptHandler:
  1135                           	opt callstack 0
  1136  000016                     	ds	3
  1137  000019                     _INT2_InterruptHandler:
  1138                           	opt callstack 0
  1139  000019                     	ds	3
  1140  00001C                     _INT1_InterruptHandler:
  1141                           	opt callstack 0
  1142  00001C                     	ds	3
  1143  00001F                     _INT0_InterruptHandler:
  1144                           	opt callstack 0
  1145  00001F                     	ds	3
  1146  000022                     _nout:
  1147                           	opt callstack 0
  1148  000022                     	ds	2
  1149  000024                     _width:
  1150                           	opt callstack 0
  1151  000024                     	ds	2
  1152  000026                     _prec:
  1153                           	opt callstack 0
  1154  000026                     	ds	2
  1155  000028                     _flags:
  1156                           	opt callstack 0
  1157  000028                     	ds	2
  1158  00002A                     run_checksum@sum:
  1159                           	opt callstack 0
  1160  00002A                     	ds	2
  1161  00002C                     TMR5_ISR@CountCallBack:
  1162                           	opt callstack 0
  1163  00002C                     	ds	2
  1164  00002E                     _timer5ReloadVal:
  1165                           	opt callstack 0
  1166  00002E                     	ds	2
  1167  000030                     t_protocol@retry:
  1168                           	opt callstack 0
  1169  000030                     	ds	1
  1170  000031                     r_protocol@rxData_l:
  1171                           	opt callstack 0
  1172  000031                     	ds	1
  1173  000032                     _uart2RxCount:
  1174                           	opt callstack 0
  1175  000032                     	ds	1
  1176  000033                     _uart2RxTail:
  1177                           	opt callstack 0
  1178  000033                     	ds	1
  1179  000034                     _uart2RxHead:
  1180                           	opt callstack 0
  1181  000034                     	ds	1
  1182  000035                     _uart2TxBufferRemaining:
  1183                           	opt callstack 0
  1184  000035                     	ds	1
  1185  000036                     _uart2TxTail:
  1186                           	opt callstack 0
  1187  000036                     	ds	1
  1188  000037                     _uart2TxHead:
  1189                           	opt callstack 0
  1190  000037                     	ds	1
  1191  000038                     _uart1RxCount:
  1192                           	opt callstack 0
  1193  000038                     	ds	1
  1194  000039                     _uart1RxTail:
  1195                           	opt callstack 0
  1196  000039                     	ds	1
  1197  00003A                     _uart1RxHead:
  1198                           	opt callstack 0
  1199  00003A                     	ds	1
  1200  00003B                     _uart1TxBufferRemaining:
  1201                           	opt callstack 0
  1202  00003B                     	ds	1
  1203  00003C                     _uart1TxTail:
  1204                           	opt callstack 0
  1205  00003C                     	ds	1
  1206  00003D                     _uart1TxHead:
  1207                           	opt callstack 0
  1208  00003D                     	ds	1
  1209                           
  1210                           	psect	dataCOMRAM
  1211  00005E                     __pdataCOMRAM:
  1212                           	opt callstack 0
  1213  00005E                     r_protocol@retry:
  1214                           	opt callstack 0
  1215  00005E                     	ds	1
  1216                           
  1217                           	psect	bssBANK0
  1218  000060                     __pbssBANK0:
  1219                           	opt callstack 0
  1220  000060                     _r_block:
  1221                           	opt callstack 0
  1222  000060                     	ds	13
  1223  00006D                     _spi_link:
  1224                           	opt callstack 0
  1225  00006D                     	ds	12
  1226  000079                     _tickCount:
  1227                           	opt callstack 0
  1228  000079                     	ds	12
  1229  000085                     wdtdelay@dcount:
  1230                           	opt callstack 0
  1231  000085                     	ds	4
  1232  000089                     _V:
  1233                           	opt callstack 0
  1234  000089                     	ds	85
  1235                           
  1236                           	psect	dataBANK0
  1237  0000DE                     __pdataBANK0:
  1238                           	opt callstack 0
  1239  0000DE                     stoa@F1144:
  1240                           	opt callstack 0
  1241  0000DE                     	ds	7
  1242  0000E5                     _H12:
  1243                           	opt callstack 0
  1244  0000E5                     	ds	15
  1245                           
  1246                           	psect	bssBANK1
  1247  000192                     __pbssBANK1:
  1248                           	opt callstack 0
  1249  000192                     _uart1RxBuffer:
  1250                           	opt callstack 0
  1251  000192                     	ds	64
  1252  0001D2                     _dbuf:
  1253                           	opt callstack 0
  1254  0001D2                     	ds	32
  1255                           
  1256                           	psect	dataBANK1
  1257  000100                     __pdataBANK1:
  1258                           	opt callstack 0
  1259  000100                     _H10:
  1260                           	opt callstack 0
  1261  000100                     	ds	65
  1262  000141                     _H24:
  1263                           	opt callstack 0
  1264  000141                     	ds	27
  1265  00015C                     _H18:
  1266                           	opt callstack 0
  1267  00015C                     	ds	21
  1268  000171                     _H14:
  1269                           	opt callstack 0
  1270  000171                     	ds	17
  1271  000182                     _H13:
  1272                           	opt callstack 0
  1273  000182                     	ds	16
  1274                           
  1275                           	psect	bssBANK2
  1276  000200                     __pbssBANK2:
  1277                           	opt callstack 0
  1278  000200                     _uart2RxBuffer:
  1279                           	opt callstack 0
  1280  000200                     	ds	64
  1281  000240                     _uart2TxBuffer:
  1282                           	opt callstack 0
  1283  000240                     	ds	64
  1284  000280                     _uart1TxBuffer:
  1285                           	opt callstack 0
  1286  000280                     	ds	64
  1287                           
  1288                           	psect	bssBANK3
  1289  000300                     __pbssBANK3:
  1290                           	opt callstack 0
  1291  000300                     _ring_buf2:
  1292                           	opt callstack 0
  1293  000300                     	ds	67
  1294  000343                     _ring_buf1:
  1295                           	opt callstack 0
  1296  000343                     	ds	67
  1297                           
  1298                           	psect	dataBANK3
  1299  000386                     __pdataBANK3:
  1300                           	opt callstack 0
  1301  000386                     _H53:
  1302                           	opt callstack 0
  1303  000386                     	ds	112
  1304                           
  1305                           	psect	cstackBANK0
  1306  0000F4                     __pcstackBANK0:
  1307                           	opt callstack 0
  1308  0000F4                     ??_TMR5_ISR:
  1309                           
  1310                           ; 1 bytes @ 0x0
  1311  0000F4                     	ds	1
  1312                           
  1313                           	psect	cstackCOMRAM
  1314  00005F                     __pcstackCOMRAM:
  1315                           	opt callstack 0
  1316  00005F                     ??_TMR6_ISR:
  1317  00005F                     
  1318                           ; 1 bytes @ 0x0
  1319  00005F                     	ds	1
  1320                           
  1321 ;;
  1322 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1323 ;;
  1324 ;; *************** function _main *****************
  1325 ;; Defined at:
  1326 ;;		line 246 in file "main.c"
  1327 ;; Parameters:    Size  Location     Type
  1328 ;;		None
  1329 ;; Auto vars:     Size  Location     Type
  1330 ;;  mode            1  [STACK] enum E16894
  1331 ;; Return value:  Size  Location     Type
  1332 ;;                  1  [STACK] void 
  1333 ;; Registers used:
  1334 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+6, btemp+7, btemp
      ++8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl
      +, tblptrh, tblptru, prodl, prodh
  1335 ;; Tracked objects:
  1336 ;;		On entry : 0/0
  1337 ;;		On exit  : 3F/0
  1338 ;;		Unchanged: 0/0
  1339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1344 ;;Total ram usage:        0 bytes
  1345 ;; Hardware stack levels required when called:   14
  1346 ;; This function calls:
  1347 ;;		_SYSTEM_Initialize
  1348 ;;		_UART1_put_buffer
  1349 ;;		_WaitMs
  1350 ;;		_eaDogM_WriteCommand
  1351 ;;		_eaDogM_WriteStringAtPos
  1352 ;;		_init_display
  1353 ;;		_r_protocol
  1354 ;;		_sprintf
  1355 ;;		_t_protocol
  1356 ;;		_wait_lcd_done
  1357 ;; This function is called by:
  1358 ;;		Startup code after reset
  1359 ;; This function uses a reentrant model
  1360 ;;
  1361                           
  1362                           	psect	text0
  1363  0029E0                     __ptext0:
  1364                           	opt callstack 0
  1365  0029E0                     _main:
  1366                           	opt callstack 0
  1367                           
  1368                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1369  0029E0  52E6               	movf	postinc1,f,c
  1370                           
  1371                           ;main.c: 248:  UI_STATES mode;;main.c: 251:  SYSTEM_Initialize();
  1372                           
  1373                           ;incstack = 0
  1374  0029E2  EC96  F028         	call	_SYSTEM_Initialize	;wreg free
  1375                           
  1376                           ; BSR set to: 60
  1377                           ;main.c: 254:  (INTCON0bits.GIEH = 1);
  1378  0029E6  8ED2               	bsf	16338,7,c	;volatile
  1379                           
  1380                           ; BSR set to: 60
  1381                           ;main.c: 257:  (INTCON0bits.GIEL = 1);
  1382  0029E8  8CD2               	bsf	16338,6,c	;volatile
  1383                           
  1384                           ; BSR set to: 60
  1385                           ;main.c: 259:  V.ui_state = UI_STATE_INIT;
  1386  0029EA  0100               	movlb	0	; () banked
  1387  0029EC  6B8A               	clrf	(_V+1)& (0+255),b	;volatile
  1388  0029EE  D157               	goto	l7139
  1389  0029F0                     l7023:
  1390                           
  1391                           ; BSR set to: 0
  1392                           ;main.c: 264:    init_display();
  1393  0029F0  EC05  F022         	call	_init_display	;wreg free
  1394                           
  1395                           ; BSR set to: 61
  1396                           ;main.c: 265:    eaDogM_WriteCommand(0b00001100);
  1397  0029F4  0E0C               	movlw	12
  1398  0029F6  6EE6               	movwf	postinc1,c
  1399  0029F8  EC73  F02C         	call	_eaDogM_WriteCommand	;wreg free
  1400                           
  1401                           ; BSR set to: 0
  1402  0029FC  90BD               	bcf	16317,0,c	;volatile
  1403                           
  1404                           ; BSR set to: 0
  1405                           ;main.c: 267:    mode = PORTDbits.RD2 + UI_STATE_EQUIP;
  1406  0029FE  A4CD               	btfss	16333,2,c	;volatile
  1407  002A00  D003               	goto	u4140
  1408  002A02  6A49               	clrf	btemp+11,c
  1409  002A04  2A49               	incf	btemp+11,f,c
  1410  002A06  D001               	goto	u4148
  1411  002A08                     u4140:
  1412  002A08  6A49               	clrf	btemp+11,c
  1413  002A0A                     u4148:
  1414  002A0A  0E01               	movlw	1
  1415  002A0C  2649               	addwf	btemp+11,f,c
  1416                           
  1417                           ;stkvar	_mode @ sp[(-1)+0]
  1418  002A0E  0EFF               	movlw	-1
  1419  002A10  0060  F127  FFE3   	movff	btemp+11,plusw1
  1420                           
  1421                           ;main.c: 268:    if (!PORTDbits.RD3) {
  1422  002A16  B6CD               	btfsc	16333,3,c	;volatile
  1423  002A18  D004               	goto	l7035
  1424                           
  1425                           ;main.c: 269:     do { LATDbits.LATD0 = 1; } while(0);
  1426  002A1A  80BD               	bsf	16317,0,c	;volatile
  1427                           
  1428                           ;main.c: 270:     mode = UI_STATE_LOG;
  1429                           ;stkvar	_mode @ sp[(-1)+0]
  1430  002A1C  0EFF               	movlw	-1
  1431  002A1E  6AE3               	clrf	plusw1,c
  1432  002A20  84E3               	bsf	plusw1,2,c
  1433  002A22                     l7035:
  1434                           
  1435                           ;main.c: 272:    V.ui_state = mode;
  1436                           ;stkvar	_mode @ sp[(-1)+0]
  1437  002A22  0EFF               	movlw	-1
  1438  002A24  006F FF8C  F08A    	movff	plusw1,_V+1	;volatile
  1439                           
  1440                           ;main.c: 273:    V.s_state = SEQ_STATE_INIT;
  1441  002A2A  0100               	movlb	0	; () banked
  1442  002A2C  6B89               	clrf	_V& (0+255),b	;volatile
  1443                           
  1444                           ; BSR set to: 0
  1445                           ;main.c: 302:    sprintf(V.buf, " RVI HOST TESTER");
  1446  002A2E  0E62               	movlw	STR_1& (0+255)
  1447  002A30  6EE6               	movwf	postinc1,c
  1448  002A32  0E89               	movlw	_V& (0+255)
  1449  002A34  0F04               	addlw	4
  1450  002A36  6EE6               	movwf	postinc1,c
  1451  002A38  0E02               	movlw	2
  1452  002A3A  6EE6               	movwf	postinc1,c
  1453  002A3C  EC47  F023         	call	_sprintf	;wreg free
  1454                           
  1455                           ;main.c: 303:    wait_lcd_done();
  1456  002A40  ECF7  F02B         	call	_wait_lcd_done	;wreg free
  1457                           
  1458                           ; BSR set to: 0
  1459                           ;main.c: 304:    eaDogM_WriteStringAtPos(0, 0, V.buf);
  1460  002A44  0E89               	movlw	_V& (0+255)
  1461  002A46  0F04               	addlw	4
  1462  002A48  6EE6               	movwf	postinc1,c
  1463  002A4A  0E00               	movlw	0
  1464  002A4C  6EE6               	movwf	postinc1,c
  1465  002A4E  0E00               	movlw	0
  1466  002A50  6EE6               	movwf	postinc1,c
  1467  002A52  EC53  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  1468                           
  1469                           ; BSR set to: 59
  1470                           ;main.c: 305:    sprintf(V.buf, " Version %s", "0.2A");
  1471  002A56  0EA2               	movlw	STR_3& (0+255)
  1472  002A58  6E49               	movwf	btemp+11,c
  1473  002A5A  0060  F127  FFE6   	movff	btemp+11,postinc1
  1474  002A60  0E20               	movlw	high __smallconst
  1475  002A62  6EE6               	movwf	postinc1,c
  1476  002A64  0E90               	movlw	STR_2& (0+255)
  1477  002A66  6EE6               	movwf	postinc1,c
  1478  002A68  0E89               	movlw	_V& (0+255)
  1479  002A6A  0F04               	addlw	4
  1480  002A6C  6EE6               	movwf	postinc1,c
  1481  002A6E  0E04               	movlw	4
  1482  002A70  6EE6               	movwf	postinc1,c
  1483  002A72  EC47  F023         	call	_sprintf	;wreg free
  1484                           
  1485                           ;main.c: 306:    wait_lcd_done();
  1486  002A76  ECF7  F02B         	call	_wait_lcd_done	;wreg free
  1487                           
  1488                           ; BSR set to: 0
  1489                           ;main.c: 307:    eaDogM_WriteStringAtPos(1, 0, V.buf);
  1490  002A7A  0E89               	movlw	_V& (0+255)
  1491  002A7C  0F04               	addlw	4
  1492  002A7E  6EE6               	movwf	postinc1,c
  1493  002A80  0E00               	movlw	0
  1494  002A82  6EE6               	movwf	postinc1,c
  1495  002A84  0E01               	movlw	1
  1496  002A86  6EE6               	movwf	postinc1,c
  1497  002A88  EC53  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  1498                           
  1499                           ; BSR set to: 59
  1500                           ;main.c: 308:    sprintf(V.buf, " FGB@MCHP FAB4");
  1501  002A8C  0E73               	movlw	STR_4& (0+255)
  1502  002A8E  6EE6               	movwf	postinc1,c
  1503  002A90  0E89               	movlw	_V& (0+255)
  1504  002A92  0F04               	addlw	4
  1505  002A94  6EE6               	movwf	postinc1,c
  1506  002A96  0E02               	movlw	2
  1507  002A98  6EE6               	movwf	postinc1,c
  1508  002A9A  EC47  F023         	call	_sprintf	;wreg free
  1509                           
  1510                           ;main.c: 309:    wait_lcd_done();
  1511  002A9E  ECF7  F02B         	call	_wait_lcd_done	;wreg free
  1512                           
  1513                           ; BSR set to: 0
  1514                           ;main.c: 310:    eaDogM_WriteStringAtPos(2, 0, V.buf);
  1515  002AA2  0E89               	movlw	_V& (0+255)
  1516  002AA4  0F04               	addlw	4
  1517  002AA6  6EE6               	movwf	postinc1,c
  1518  002AA8  0E00               	movlw	0
  1519  002AAA  6EE6               	movwf	postinc1,c
  1520  002AAC  0E02               	movlw	2
  1521  002AAE  6EE6               	movwf	postinc1,c
  1522  002AB0  EC53  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  1523                           
  1524                           ; BSR set to: 59
  1525                           ;main.c: 312:    WaitMs(3000);
  1526  002AB4  0EB8               	movlw	184
  1527  002AB6  6EE6               	movwf	postinc1,c
  1528  002AB8  0E0B               	movlw	11
  1529  002ABA  6EE6               	movwf	postinc1,c
  1530  002ABC  ECAA  F029         	call	_WaitMs	;wreg free
  1531                           
  1532                           ;main.c: 313:    break;
  1533  002AC0  D104               	goto	l1243
  1534  002AC2                     l1217:
  1535                           
  1536                           ; BSR set to: 0
  1537                           ;main.c: 317:     V.r_l_state = LINK_STATE_IDLE;
  1538  002AC2  6B8B               	clrf	(_V+2)& (0+255),b	;volatile
  1539                           
  1540                           ;main.c: 318:     V.t_l_state = LINK_STATE_IDLE;
  1541  002AC4  6B8C               	clrf	(_V+3)& (0+255),b	;volatile
  1542                           
  1543                           ; BSR set to: 0
  1544                           ;main.c: 319:     V.s_state = SEQ_STATE_RX;
  1545  002AC6  0E01               	movlw	1
  1546  002AC8  6F89               	movwf	_V& (0+255),b	;volatile
  1547                           
  1548                           ; BSR set to: 0
  1549  002ACA  94BE               	bcf	16318,2,c	;volatile
  1550                           
  1551                           ; BSR set to: 0
  1552                           ;main.c: 322:     WaitMs(50);
  1553  002ACC  0E32               	movlw	50
  1554  002ACE  6EE6               	movwf	postinc1,c
  1555  002AD0  0E00               	movlw	0
  1556  002AD2  6EE6               	movwf	postinc1,c
  1557  002AD4  ECAA  F029         	call	_WaitMs	;wreg free
  1558                           
  1559                           ;main.c: 323:     UART1_put_buffer(0x05);
  1560  002AD8  0E05               	movlw	5
  1561  002ADA  6EE6               	movwf	postinc1,c
  1562  002ADC  EC95  F029         	call	_UART1_put_buffer	;wreg free
  1563                           
  1564                           ;main.c: 325:     break;
  1565  002AE0  D0A5               	goto	l7113
  1566  002AE2                     l7067:
  1567                           
  1568                           ; BSR set to: 0
  1569                           ;main.c: 330:     if (r_protocol(&V.r_l_state) == LINK_STATE_DONE) {
  1570  002AE2  0E89               	movlw	_V& (0+255)
  1571  002AE4  0F02               	addlw	2
  1572  002AE6  6EE6               	movwf	postinc1,c
  1573  002AE8  EC97  F016         	call	_r_protocol	;wreg free
  1574  002AEC  0E04               	movlw	4
  1575  002AEE  183E               	xorwf	btemp,w,c
  1576  002AF0  A4D8               	btfss	status,2,c
  1577  002AF2  D029               	goto	l7081
  1578                           
  1579                           ;main.c: 331:      do { LATEbits.LATE2 = 0; } while(0);
  1580  002AF4  94BE               	bcf	16318,2,c	;volatile
  1581                           
  1582                           ;main.c: 332:      sprintf(V.buf, " S%dF%d #    ", V.stream, V.function);
  1583  002AF6  0100               	movlb	0	; () banked
  1584  002AF8  51D6               	movf	(_V+77)& (0+255),w,b	;volatile
  1585  002AFA  6EE6               	movwf	postinc1,c
  1586  002AFC  0E00               	movlw	0
  1587  002AFE  6EE6               	movwf	postinc1,c
  1588  002B00  51D5               	movf	(_V+76)& (0+255),w,b	;volatile
  1589  002B02  6EE6               	movwf	postinc1,c
  1590  002B04  0E00               	movlw	0
  1591  002B06  6EE6               	movwf	postinc1,c
  1592  002B08  0E82               	movlw	STR_5& (0+255)
  1593  002B0A  6EE6               	movwf	postinc1,c
  1594  002B0C  0E89               	movlw	_V& (0+255)
  1595  002B0E  0F04               	addlw	4
  1596  002B10  6EE6               	movwf	postinc1,c
  1597  002B12  0E06               	movlw	6
  1598  002B14  6EE6               	movwf	postinc1,c
  1599  002B16  EC47  F023         	call	_sprintf	;wreg free
  1600                           
  1601                           ;main.c: 333:      V.buf[11] = 0;
  1602  002B1A  0100               	movlb	0	; () banked
  1603  002B1C  6B98               	clrf	(_V+15)& (0+255),b	;volatile
  1604                           
  1605                           ; BSR set to: 0
  1606                           ;main.c: 334:      wait_lcd_done();
  1607  002B1E  ECF7  F02B         	call	_wait_lcd_done	;wreg free
  1608                           
  1609                           ; BSR set to: 0
  1610                           ;main.c: 335:      eaDogM_WriteStringAtPos(0, 0, V.buf);
  1611  002B22  0E89               	movlw	_V& (0+255)
  1612  002B24  0F04               	addlw	4
  1613  002B26  6EE6               	movwf	postinc1,c
  1614  002B28  0E00               	movlw	0
  1615  002B2A  6EE6               	movwf	postinc1,c
  1616  002B2C  0E00               	movlw	0
  1617  002B2E  6EE6               	movwf	postinc1,c
  1618  002B30  EC53  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  1619                           
  1620                           ; BSR set to: 59
  1621                           ;main.c: 337:      WaitMs(5);
  1622  002B34  0E05               	movlw	5
  1623  002B36  6EE6               	movwf	postinc1,c
  1624  002B38  0E00               	movlw	0
  1625  002B3A  6EE6               	movwf	postinc1,c
  1626  002B3C  ECAA  F029         	call	_WaitMs	;wreg free
  1627                           
  1628                           ;main.c: 339:      V.s_state = SEQ_STATE_TX;
  1629  002B40  0E02               	movlw	2
  1630  002B42  0100               	movlb	0	; () banked
  1631  002B44  6F89               	movwf	_V& (0+255),b	;volatile
  1632  002B46                     l7081:
  1633                           
  1634                           ;main.c: 341:     if (V.r_l_state == LINK_STATE_ERROR)
  1635  002B46  0E06               	movlw	6
  1636  002B48  0100               	movlb	0	; () banked
  1637  002B4A  198B               	xorwf	(_V+2)& (0+255),w,b	;volatile
  1638  002B4C  D010               	goto	L16
  1639  002B4E                     l7085:
  1640                           
  1641                           ; BSR set to: 0
  1642                           ;main.c: 348:     if (t_protocol(&V.t_l_state) == LINK_STATE_DONE) {
  1643  002B4E  0E89               	movlw	_V& (0+255)
  1644  002B50  0F03               	addlw	3
  1645  002B52  6EE6               	movwf	postinc1,c
  1646  002B54  EC31  F01C         	call	_t_protocol	;wreg free
  1647  002B58  0E04               	movlw	4
  1648  002B5A  183E               	xorwf	btemp,w,c
  1649  002B5C  A4D8               	btfss	status,2,c
  1650  002B5E  D004               	goto	l7089
  1651                           
  1652                           ;main.c: 349:      do { LATEbits.LATE2 = 0; } while(0);
  1653  002B60  94BE               	bcf	16318,2,c	;volatile
  1654                           
  1655                           ;main.c: 350:      V.s_state = SEQ_STATE_TRIGGER;
  1656  002B62  0E03               	movlw	3
  1657  002B64  0100               	movlb	0	; () banked
  1658  002B66  6F89               	movwf	_V& (0+255),b	;volatile
  1659  002B68                     l7089:
  1660                           
  1661                           ;main.c: 352:     if (V.t_l_state == LINK_STATE_ERROR)
  1662  002B68  0E06               	movlw	6
  1663  002B6A  0100               	movlb	0	; () banked
  1664  002B6C  198C               	xorwf	(_V+3)& (0+255),w,b	;volatile
  1665  002B6E                     L16:
  1666  002B6E  A4D8               	btfss	status,2,c
  1667  002B70  D05D               	goto	l7113
  1668                           
  1669                           ; BSR set to: 0
  1670                           ;main.c: 353:      V.s_state = SEQ_STATE_ERROR;
  1671  002B72  0E05               	movlw	5
  1672  002B74  6F89               	movwf	_V& (0+255),b	;volatile
  1673  002B76  D05A               	goto	l7113
  1674  002B78                     l7093:
  1675                           
  1676                           ; BSR set to: 0
  1677                           ;main.c: 356:     V.s_state = SEQ_STATE_DONE;
  1678  002B78  0E04               	movlw	4
  1679  002B7A  6F89               	movwf	_V& (0+255),b	;volatile
  1680                           
  1681                           ; BSR set to: 0
  1682                           ;main.c: 357:     sprintf(V.buf, " OK #");
  1683  002B7C  0E9C               	movlw	STR_6& (0+255)
  1684  002B7E  6EE6               	movwf	postinc1,c
  1685  002B80  0E89               	movlw	_V& (0+255)
  1686  002B82  0F04               	addlw	4
  1687  002B84  6EE6               	movwf	postinc1,c
  1688  002B86  0E02               	movlw	2
  1689  002B88  6EE6               	movwf	postinc1,c
  1690  002B8A  EC47  F023         	call	_sprintf	;wreg free
  1691  002B8E  94BE               	bcf	16318,2,c	;volatile
  1692                           
  1693                           ;main.c: 359:     wait_lcd_done();
  1694  002B90  ECF7  F02B         	call	_wait_lcd_done	;wreg free
  1695                           
  1696                           ; BSR set to: 0
  1697                           ;main.c: 360:     eaDogM_WriteStringAtPos(0, 11, V.buf);
  1698  002B94  0E89               	movlw	_V& (0+255)
  1699  002B96  0F04               	addlw	4
  1700  002B98  6EE6               	movwf	postinc1,c
  1701  002B9A  0E0B               	movlw	11
  1702  002B9C  6EE6               	movwf	postinc1,c
  1703  002B9E  0E00               	movlw	0
  1704  002BA0  6EE6               	movwf	postinc1,c
  1705  002BA2  EC53  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  1706                           
  1707                           ;main.c: 362:     break;
  1708  002BA6  D042               	goto	l7113
  1709  002BA8                     l1234:
  1710                           
  1711                           ; BSR set to: 0
  1712                           ;main.c: 364:     V.s_state = SEQ_STATE_INIT;
  1713  002BA8  6B89               	clrf	_V& (0+255),b	;volatile
  1714                           
  1715                           ; BSR set to: 0
  1716                           
  1717                           ;main.c: 365:     do { LATEbits.LATE2 = 0; } while(0);
  1718  002BAA  94BE               	bcf	16318,2,c	;volatile
  1719  002BAC  D03F               	goto	l7113
  1720  002BAE                     l1238:
  1721                           
  1722                           ; BSR set to: 0
  1723                           ;main.c: 369:     V.s_state = SEQ_STATE_INIT;
  1724  002BAE  6B89               	clrf	_V& (0+255),b	;volatile
  1725                           
  1726                           ; BSR set to: 0
  1727                           ;main.c: 370:     sprintf(V.buf, " ERR R%d T%d E%d A%d #", V.r_l_state, V.t_l_state, V.e
      +                          rror, V.abort);
  1728  002BB0  51D8               	movf	(_V+79)& (0+255),w,b	;volatile
  1729  002BB2  6EE6               	movwf	postinc1,c
  1730  002BB4  0E00               	movlw	0
  1731  002BB6  6EE6               	movwf	postinc1,c
  1732  002BB8  51D7               	movf	(_V+78)& (0+255),w,b	;volatile
  1733  002BBA  6EE6               	movwf	postinc1,c
  1734  002BBC  0E00               	movlw	0
  1735  002BBE  6EE6               	movwf	postinc1,c
  1736  002BC0  518C               	movf	(_V+3)& (0+255),w,b	;volatile
  1737  002BC2  6EE6               	movwf	postinc1,c
  1738  002BC4  0E00               	movlw	0
  1739  002BC6  6EE6               	movwf	postinc1,c
  1740  002BC8  518B               	movf	(_V+2)& (0+255),w,b	;volatile
  1741  002BCA  6EE6               	movwf	postinc1,c
  1742  002BCC  0E00               	movlw	0
  1743  002BCE  6EE6               	movwf	postinc1,c
  1744  002BD0  0E01               	movlw	STR_7& (0+255)
  1745  002BD2  6EE6               	movwf	postinc1,c
  1746  002BD4  0E89               	movlw	_V& (0+255)
  1747  002BD6  0F04               	addlw	4
  1748  002BD8  6EE6               	movwf	postinc1,c
  1749  002BDA  0E0A               	movlw	10
  1750  002BDC  6EE6               	movwf	postinc1,c
  1751  002BDE  EC47  F023         	call	_sprintf	;wreg free
  1752                           
  1753                           ;main.c: 371:     wait_lcd_done();
  1754  002BE2  ECF7  F02B         	call	_wait_lcd_done	;wreg free
  1755                           
  1756                           ; BSR set to: 0
  1757                           ;main.c: 372:     eaDogM_WriteStringAtPos(0, 0, V.buf);
  1758  002BE6  0E89               	movlw	_V& (0+255)
  1759  002BE8  0F04               	addlw	4
  1760  002BEA  6EE6               	movwf	postinc1,c
  1761  002BEC  0E00               	movlw	0
  1762  002BEE  6EE6               	movwf	postinc1,c
  1763  002BF0  0E00               	movlw	0
  1764  002BF2  6EE6               	movwf	postinc1,c
  1765  002BF4  EC53  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  1766                           
  1767                           ;main.c: 373:     break;
  1768  002BF8  D019               	goto	l7113
  1769  002BFA                     l7111:
  1770                           
  1771                           ; BSR set to: 0
  1772  002BFA  5189               	movf	_V& (0+255),w,b	;volatile
  1773  002BFC  6E48               	movwf	btemp+10,c
  1774  002BFE  6A49               	clrf	btemp+11,c
  1775                           
  1776                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1777                           ; Switch size 1, requested type "simple"
  1778                           ; Number of cases is 1, Range of values is 0 to 0
  1779                           ; switch strategies available:
  1780                           ; Name         Instructions Cycles
  1781                           ; simple_byte            4     3 (average)
  1782                           ;	Chosen strategy is simple_byte
  1783  002C00  5049               	movf	btemp+11,w,c
  1784  002C02  0A00               	xorlw	0	; case 0
  1785  002C04  A4D8               	btfss	status,2,c
  1786  002C06  D7D3               	goto	l1238
  1787                           
  1788                           ; BSR set to: 0
  1789                           ; Switch size 1, requested type "simple"
  1790                           ; Number of cases is 6, Range of values is 0 to 5
  1791                           ; switch strategies available:
  1792                           ; Name         Instructions Cycles
  1793                           ; simple_byte           19    10 (average)
  1794                           ;	Chosen strategy is simple_byte
  1795  002C08  5048               	movf	btemp+10,w,c
  1796  002C0A  0A00               	xorlw	0	; case 0
  1797  002C0C  B4D8               	btfsc	status,2,c
  1798  002C0E  D759               	goto	l1217
  1799  002C10  0A01               	xorlw	1	; case 1
  1800  002C12  B4D8               	btfsc	status,2,c
  1801  002C14  D766               	goto	l7067
  1802  002C16  0A03               	xorlw	3	; case 2
  1803  002C18  B4D8               	btfsc	status,2,c
  1804  002C1A  D799               	goto	l7085
  1805  002C1C  0A01               	xorlw	1	; case 3
  1806  002C1E  B4D8               	btfsc	status,2,c
  1807  002C20  D7AB               	goto	l7093
  1808  002C22  0A07               	xorlw	7	; case 4
  1809  002C24  B4D8               	btfsc	status,2,c
  1810  002C26  D7C0               	goto	l1234
  1811  002C28  0A01               	xorlw	1	; case 5
  1812  002C2A  D7C1               	goto	l1238
  1813  002C2C                     l7113:
  1814                           
  1815                           ;main.c: 375:    sprintf(V.buf, " HOST MODE %ld   #", V.ticks);
  1816  002C2C  0060  F337  FFE6   	movff	_V+68,postinc1
  1817  002C32  0060  F33B  FFE6   	movff	_V+69,postinc1
  1818  002C38  0060  F33F  FFE6   	movff	_V+70,postinc1
  1819  002C3E  0060  F343  FFE6   	movff	_V+71,postinc1
  1820  002C44  0E2D               	movlw	STR_8& (0+255)
  1821  002C46  6EE6               	movwf	postinc1,c
  1822  002C48  0E89               	movlw	_V& (0+255)
  1823  002C4A  0F04               	addlw	4
  1824  002C4C  6EE6               	movwf	postinc1,c
  1825  002C4E  0E06               	movlw	6
  1826  002C50  6EE6               	movwf	postinc1,c
  1827  002C52  EC47  F023         	call	_sprintf	;wreg free
  1828  002C56                     l7115:
  1829                           
  1830                           ;main.c: 376:    V.buf[16] = 0;
  1831  002C56  0100               	movlb	0	; () banked
  1832  002C58  6B9D               	clrf	(_V+20)& (0+255),b	;volatile
  1833                           
  1834                           ; BSR set to: 0
  1835                           ;main.c: 377:    wait_lcd_done();
  1836  002C5A  ECF7  F02B         	call	_wait_lcd_done	;wreg free
  1837                           
  1838                           ; BSR set to: 0
  1839                           ;main.c: 378:    eaDogM_WriteStringAtPos(2, 0, V.buf);
  1840  002C5E  0E89               	movlw	_V& (0+255)
  1841  002C60  0F04               	addlw	4
  1842  002C62  6EE6               	movwf	postinc1,c
  1843  002C64  0E00               	movlw	0
  1844  002C66  6EE6               	movwf	postinc1,c
  1845  002C68  0E02               	movlw	2
  1846  002C6A  6EE6               	movwf	postinc1,c
  1847  002C6C  EC53  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  1848                           
  1849                           ;main.c: 379:    break;
  1850  002C70  D02C               	goto	l1243
  1851  002C72                     l7121:
  1852                           
  1853                           ; BSR set to: 0
  1854                           ;main.c: 381:    sprintf(V.buf, " EQUIP MODE    #");
  1855  002C72  0E51               	movlw	STR_9& (0+255)
  1856  002C74  6EE6               	movwf	postinc1,c
  1857  002C76  0E89               	movlw	_V& (0+255)
  1858  002C78  0F04               	addlw	4
  1859  002C7A  6EE6               	movwf	postinc1,c
  1860  002C7C  0E02               	movlw	2
  1861  002C7E  6EE6               	movwf	postinc1,c
  1862  002C80  EC47  F023         	call	_sprintf	;wreg free
  1863  002C84  D7E8               	goto	l7115
  1864  002C86                     l7129:
  1865                           
  1866                           ; BSR set to: 0
  1867                           ;main.c: 387:    sprintf(V.buf, " LOG MODE      #");
  1868  002C86  0E40               	movlw	STR_10& (0+255)
  1869  002C88  6EE6               	movwf	postinc1,c
  1870  002C8A  0E89               	movlw	_V& (0+255)
  1871  002C8C  0F04               	addlw	4
  1872  002C8E  6EE6               	movwf	postinc1,c
  1873  002C90  0E02               	movlw	2
  1874  002C92  6EE6               	movwf	postinc1,c
  1875  002C94  EC47  F023         	call	_sprintf	;wreg free
  1876  002C98  D7DE               	goto	l7115
  1877  002C9A                     l1242:
  1878                           
  1879                           ; BSR set to: 0
  1880                           ;main.c: 394:    V.ui_state = UI_STATE_INIT;
  1881  002C9A  6B8A               	clrf	(_V+1)& (0+255),b	;volatile
  1882                           
  1883                           ;main.c: 395:    break;
  1884  002C9C  D016               	goto	l1243
  1885  002C9E                     l7139:
  1886                           
  1887                           ; BSR set to: 0
  1888  002C9E  518A               	movf	(_V+1)& (0+255),w,b	;volatile
  1889  002CA0  6E48               	movwf	btemp+10,c
  1890  002CA2  6A49               	clrf	btemp+11,c
  1891                           
  1892                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1893                           ; Switch size 1, requested type "simple"
  1894                           ; Number of cases is 1, Range of values is 0 to 0
  1895                           ; switch strategies available:
  1896                           ; Name         Instructions Cycles
  1897                           ; simple_byte            4     3 (average)
  1898                           ;	Chosen strategy is simple_byte
  1899  002CA4  5049               	movf	btemp+11,w,c
  1900  002CA6  0A00               	xorlw	0	; case 0
  1901  002CA8  A4D8               	btfss	status,2,c
  1902  002CAA  D7F7               	goto	l1242
  1903                           
  1904                           ; BSR set to: 0
  1905                           ; Switch size 1, requested type "simple"
  1906                           ; Number of cases is 5, Range of values is 0 to 5
  1907                           ; switch strategies available:
  1908                           ; Name         Instructions Cycles
  1909                           ; simple_byte           16     9 (average)
  1910                           ;	Chosen strategy is simple_byte
  1911  002CAC  5048               	movf	btemp+10,w,c
  1912  002CAE  0A00               	xorlw	0	; case 0
  1913  002CB0  B4D8               	btfsc	status,2,c
  1914  002CB2  D69E               	goto	l7023
  1915  002CB4  0A01               	xorlw	1	; case 1
  1916  002CB6  B4D8               	btfsc	status,2,c
  1917  002CB8  D7DC               	goto	l7121
  1918  002CBA  0A03               	xorlw	3	; case 2
  1919  002CBC  B4D8               	btfsc	status,2,c
  1920  002CBE  D79D               	goto	l7111
  1921  002CC0  0A06               	xorlw	6	; case 4
  1922  002CC2  B4D8               	btfsc	status,2,c
  1923  002CC4  D7E0               	goto	l7129
  1924  002CC6  0A01               	xorlw	1	; case 5
  1925  002CC8  D7E8               	goto	l1242
  1926  002CCA                     l1243:
  1927  002CCA  82BE               	bsf	16318,1,c	;volatile
  1928                           
  1929                           ;main.c: 398:   sprintf(V.buf, " R%d T%d E%d A%d   #", V.r_l_state, V.t_l_state, V.error
      +                          , V.abort);
  1930  002CCC  0100               	movlb	0	; () banked
  1931  002CCE  51D8               	movf	(_V+79)& (0+255),w,b	;volatile
  1932  002CD0  6EE6               	movwf	postinc1,c
  1933  002CD2  0E00               	movlw	0
  1934  002CD4  6EE6               	movwf	postinc1,c
  1935  002CD6  51D7               	movf	(_V+78)& (0+255),w,b	;volatile
  1936  002CD8  6EE6               	movwf	postinc1,c
  1937  002CDA  0E00               	movlw	0
  1938  002CDC  6EE6               	movwf	postinc1,c
  1939  002CDE  518C               	movf	(_V+3)& (0+255),w,b	;volatile
  1940  002CE0  6EE6               	movwf	postinc1,c
  1941  002CE2  0E00               	movlw	0
  1942  002CE4  6EE6               	movwf	postinc1,c
  1943  002CE6  518B               	movf	(_V+2)& (0+255),w,b	;volatile
  1944  002CE8  6EE6               	movwf	postinc1,c
  1945  002CEA  0E00               	movlw	0
  1946  002CEC  6EE6               	movwf	postinc1,c
  1947  002CEE  0E18               	movlw	STR_11& (0+255)
  1948  002CF0  6EE6               	movwf	postinc1,c
  1949  002CF2  0E89               	movlw	_V& (0+255)
  1950  002CF4  0F04               	addlw	4
  1951  002CF6  6EE6               	movwf	postinc1,c
  1952  002CF8  0E0A               	movlw	10
  1953  002CFA  6EE6               	movwf	postinc1,c
  1954  002CFC  EC47  F023         	call	_sprintf	;wreg free
  1955                           
  1956                           ;main.c: 399:   V.buf[16] = 0;
  1957  002D00  0100               	movlb	0	; () banked
  1958  002D02  6B9D               	clrf	(_V+20)& (0+255),b	;volatile
  1959                           
  1960                           ; BSR set to: 0
  1961                           ;main.c: 400:   wait_lcd_done();
  1962  002D04  ECF7  F02B         	call	_wait_lcd_done	;wreg free
  1963                           
  1964                           ; BSR set to: 0
  1965                           ;main.c: 401:   eaDogM_WriteStringAtPos(1, 0, V.buf);
  1966  002D08  0E89               	movlw	_V& (0+255)
  1967  002D0A  0F04               	addlw	4
  1968  002D0C  6EE6               	movwf	postinc1,c
  1969  002D0E  0E00               	movlw	0
  1970  002D10  6EE6               	movwf	postinc1,c
  1971  002D12  0E01               	movlw	1
  1972  002D14  6EE6               	movwf	postinc1,c
  1973  002D16  EC53  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  1974                           
  1975                           ; BSR set to: 59
  1976  002D1A  92BE               	bcf	16318,1,c	;volatile
  1977                           
  1978                           ; BSR set to: 59
  1979  002D1C  84BE               	bsf	16318,2,c	;volatile
  1980                           
  1981                           ; BSR set to: 59
  1982                           ;main.c: 404:   ++V.ticks;
  1983  002D1E  0E01               	movlw	1
  1984  002D20  0100               	movlb	0	; () banked
  1985  002D22  27CD               	addwf	(_V+68)& (0+255),f,b	;volatile
  1986  002D24  0E00               	movlw	0
  1987  002D26  23CE               	addwfc	(_V+69)& (0+255),f,b	;volatile
  1988  002D28  23CF               	addwfc	(_V+70)& (0+255),f,b	;volatile
  1989  002D2A  23D0               	addwfc	(_V+71)& (0+255),f,b	;volatile
  1990  002D2C  D7B8               	goto	l7139
  1991  002D2E                     __end_of_main:
  1992                           	opt callstack 0
  1993                           
  1994 ;; *************** function _t_protocol *****************
  1995 ;; Defined at:
  1996 ;;		line 143 in file "gemsecs.c"
  1997 ;; Parameters:    Size  Location     Type
  1998 ;;  t_link          1  [STACK] PTR enum E16164
  1999 ;;		 -> V(85), 
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;  block           3  [STACK] struct response_type
  2002 ;;  rxData          1  [STACK] unsigned char 
  2003 ;; Return value:  Size  Location     Type
  2004 ;;                  1  [STACK] enum E16902
  2005 ;; Registers used:
  2006 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+6, btemp+7, btemp
      ++8, btemp+9, btemp+10, btemp+11, prodl, prodh
  2007 ;; Tracked objects:
  2008 ;;		On entry : 0/0
  2009 ;;		On exit  : 0/0
  2010 ;;		Unchanged: 0/0
  2011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2016 ;;Total ram usage:        0 bytes
  2017 ;; Hardware stack levels used:    1
  2018 ;; Hardware stack levels required when called:    5
  2019 ;; This function calls:
  2020 ;;		_StartTimer
  2021 ;;		_TimerDone
  2022 ;;		_UART1_Read
  2023 ;;		_UART1_Write
  2024 ;;		_UART1_is_rx_ready
  2025 ;;		_UART1_put_buffer
  2026 ;;		_WaitMs
  2027 ;;		_secs_II_message
  2028 ;;		_secs_send
  2029 ;; This function is called by:
  2030 ;;		_main
  2031 ;; This function uses a reentrant model
  2032 ;;
  2033                           
  2034                           	psect	text1
  2035  003862                     __ptext1:
  2036                           	opt callstack 0
  2037  003862                     _t_protocol:
  2038                           	opt callstack 0
  2039                           
  2040                           ; BSR set to: 0
  2041                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2042  003862  52E6               	movf	postinc1,f,c
  2043  003864  52E6               	movf	postinc1,f,c
  2044  003866  52E6               	movf	postinc1,f,c
  2045  003868  52E6               	movf	postinc1,f,c
  2046                           
  2047                           ;gemsecs.c: 143: LINK_STATES t_protocol(LINK_STATES * t_link);gemsecs.c: 144: {;gemsecs.
      +                          c: 145:  uint8_t rxData;;gemsecs.c: 146:  static uint8_t retry;;gemsecs.c: 147:  respons
      +                          e_type block;;gemsecs.c: 149:  switch (*t_link) {
  2048                           
  2049                           ;incstack = 0
  2050  00386A  D101               	goto	l6993
  2051  00386C                     l1546:
  2052                           
  2053                           ;gemsecs.c: 151:   V.error = LINK_ERROR_NONE;
  2054  00386C  0100               	movlb	0	; () banked
  2055  00386E  6BD7               	clrf	(_V+78)& (0+255),b	;volatile
  2056                           
  2057                           ; BSR set to: 0
  2058                           ;gemsecs.c: 152:   retry = 3;
  2059  003870  0E03               	movlw	3
  2060  003872  6E30               	movwf	t_protocol@retry,c
  2061                           
  2062                           ; BSR set to: 0
  2063                           ;gemsecs.c: 153:   UART1_Write(0x05);
  2064  003874  0E05               	movlw	5
  2065  003876  6EE6               	movwf	postinc1,c
  2066  003878  ECD7  F028         	call	_UART1_Write	;wreg free
  2067                           
  2068                           ; BSR set to: 57
  2069                           ;gemsecs.c: 154:   StartTimer(TMR_T2, 2000);
  2070  00387C  0ED0               	movlw	208
  2071  00387E  6EE6               	movwf	postinc1,c
  2072  003880  0E07               	movlw	7
  2073  003882  6EE6               	movwf	postinc1,c
  2074  003884  0E02               	movlw	2
  2075  003886  6EE6               	movwf	postinc1,c
  2076  003888  EC35  F029         	call	_StartTimer	;wreg free
  2077                           
  2078                           ;gemsecs.c: 155:   *t_link = LINK_STATE_ENQ;
  2079                           ;stkvar	_t_link @ sp[(-4)+-1]
  2080  00388C  0EFB               	movlw	-5
  2081  00388E  50E3               	movf	plusw1,w,c
  2082  003890  6ED9               	movwf	fsr2l,c
  2083  003892  6ADA               	clrf	fsr2h,c
  2084  003894  0E01               	movlw	1
  2085  003896  6EDF               	movwf	indf2,c
  2086                           
  2087                           ;gemsecs.c: 157:   WaitMs(5);
  2088  003898  0E05               	movlw	5
  2089  00389A  6EE6               	movwf	postinc1,c
  2090  00389C  0E00               	movlw	0
  2091  00389E  6EE6               	movwf	postinc1,c
  2092  0038A0  ECAA  F029         	call	_WaitMs	;wreg free
  2093                           
  2094                           ;gemsecs.c: 158:   UART1_put_buffer(0x04);
  2095  0038A4  0E04               	movlw	4
  2096  0038A6  6EE6               	movwf	postinc1,c
  2097  0038A8  EC95  F029         	call	_UART1_put_buffer	;wreg free
  2098                           
  2099                           ;gemsecs.c: 160:   break;
  2100  0038AC  D101               	goto	l6995
  2101  0038AE                     l6921:
  2102                           
  2103                           ;gemsecs.c: 162:   if (TimerDone(TMR_T2)) {
  2104  0038AE  0E02               	movlw	2
  2105  0038B0  6EE6               	movwf	postinc1,c
  2106  0038B2  EC51  F02B         	call	_TimerDone	;wreg free
  2107  0038B6  503E               	movf	btemp,w,c
  2108  0038B8  B4D8               	btfsc	status,2,c
  2109  0038BA  D016               	goto	l6931
  2110                           
  2111                           ;gemsecs.c: 163:    if (!retry--) {
  2112  0038BC  0630               	decf	t_protocol@retry,f,c
  2113  0038BE  2830               	incf	t_protocol@retry,w,c
  2114  0038C0  A4D8               	btfss	status,2,c
  2115  0038C2  D009               	goto	l6929
  2116                           
  2117                           ;gemsecs.c: 164:     V.error = LINK_ERROR_T2;
  2118  0038C4  0E02               	movlw	2
  2119  0038C6  0100               	movlb	0	; () banked
  2120  0038C8  6FD7               	movwf	(_V+78)& (0+255),b	;volatile
  2121                           
  2122                           ; BSR set to: 0
  2123                           ;gemsecs.c: 165:     *t_link = LINK_STATE_NAK;
  2124                           ;stkvar	_t_link @ sp[(-4)+-1]
  2125  0038CA  0EFB               	movlw	-5
  2126  0038CC  50E3               	movf	plusw1,w,c
  2127  0038CE  6ED9               	movwf	fsr2l,c
  2128  0038D0  6ADA               	clrf	fsr2h,c
  2129  0038D2  0E05               	movlw	5
  2130  0038D4  D0CA               	goto	L2
  2131  0038D6                     l6929:
  2132                           
  2133                           ;gemsecs.c: 167:     StartTimer(TMR_T2, 2000);
  2134  0038D6  0ED0               	movlw	208
  2135  0038D8  6EE6               	movwf	postinc1,c
  2136  0038DA  0E07               	movlw	7
  2137  0038DC  6EE6               	movwf	postinc1,c
  2138  0038DE  0E02               	movlw	2
  2139  0038E0  6EE6               	movwf	postinc1,c
  2140  0038E2  EC35  F029         	call	_StartTimer	;wreg free
  2141  0038E6  D0E4               	goto	l6995
  2142  0038E8                     l6931:
  2143                           
  2144                           ;gemsecs.c: 170:    if (UART1_is_rx_ready()) {
  2145  0038E8  ECB3  F02C         	call	_UART1_is_rx_ready	;wreg free
  2146  0038EC  503E               	movf	btemp,w,c
  2147  0038EE  B4D8               	btfsc	status,2,c
  2148  0038F0  D0DF               	goto	l6995
  2149                           
  2150                           ;gemsecs.c: 171:     rxData = UART1_Read();
  2151  0038F2  ECF6  F028         	call	_UART1_Read	;wreg free
  2152                           
  2153                           ;stkvar	_rxData @ sp[(-4)+3]
  2154  0038F6  0EFF               	movlw	-1
  2155  0038F8  0060  F0FB  FFE3   	movff	btemp,plusw1
  2156                           
  2157                           ; BSR set to: 57
  2158                           ;gemsecs.c: 172:     if (rxData == 0x04) {
  2159                           ;stkvar	_rxData @ sp[(-4)+3]
  2160  0038FE  0EFF               	movlw	-1
  2161  003900  006F FF8C  F03E    	movff	plusw1,btemp
  2162  003906  0E04               	movlw	4
  2163  003908  183E               	xorwf	btemp,w,c
  2164  00390A  A4D8               	btfss	status,2,c
  2165  00390C  D00E               	goto	l6941
  2166                           
  2167                           ; BSR set to: 57
  2168                           ;gemsecs.c: 173:      StartTimer(TMR_T3, 5000);
  2169  00390E  0E88               	movlw	136
  2170  003910  6EE6               	movwf	postinc1,c
  2171  003912  0E13               	movlw	19
  2172  003914  6EE6               	movwf	postinc1,c
  2173  003916  0E03               	movlw	3
  2174  003918  6EE6               	movwf	postinc1,c
  2175  00391A  EC35  F029         	call	_StartTimer	;wreg free
  2176                           
  2177                           ;gemsecs.c: 174:      *t_link = LINK_STATE_EOT;
  2178                           ;stkvar	_t_link @ sp[(-4)+-1]
  2179  00391E  0EFB               	movlw	-5
  2180  003920  50E3               	movf	plusw1,w,c
  2181  003922  6ED9               	movwf	fsr2l,c
  2182  003924  6ADA               	clrf	fsr2h,c
  2183  003926  0E02               	movlw	2
  2184  003928  6EDF               	movwf	indf2,c
  2185  00392A                     l6941:
  2186                           
  2187                           ;gemsecs.c: 176:     if (rxData == 0x05) {
  2188                           ;stkvar	_rxData @ sp[(-4)+3]
  2189  00392A  0EFF               	movlw	-1
  2190  00392C  006F FF8C  F03E    	movff	plusw1,btemp
  2191  003932  0E05               	movlw	5
  2192  003934  183E               	xorwf	btemp,w,c
  2193  003936  A4D8               	btfss	status,2,c
  2194  003938  D0BB               	goto	l6995
  2195                           
  2196                           ;gemsecs.c: 177:      UART1_put_buffer(0x04);
  2197  00393A  0E04               	movlw	4
  2198  00393C  6EE6               	movwf	postinc1,c
  2199  00393E  EC95  F029         	call	_UART1_put_buffer	;wreg free
  2200  003942                     l6945:
  2201                           
  2202                           ;gemsecs.c: 178:      *t_link = LINK_STATE_DONE;
  2203                           ;stkvar	_t_link @ sp[(-4)+-1]
  2204  003942  0EFB               	movlw	-5
  2205  003944  50E3               	movf	plusw1,w,c
  2206  003946  6ED9               	movwf	fsr2l,c
  2207  003948  6ADA               	clrf	fsr2h,c
  2208  00394A  0E04               	movlw	4
  2209  00394C  D08E               	goto	L2
  2210  00394E                     l6947:
  2211                           
  2212                           ;gemsecs.c: 184:   block = secs_II_message(V.stream, V.function);
  2213  00394E  0100               	movlb	0	; () banked
  2214  003950  51D6               	movf	(_V+77)& (0+255),w,b	;volatile
  2215  003952  6EE6               	movwf	postinc1,c
  2216  003954  51D5               	movf	(_V+76)& (0+255),w,b	;volatile
  2217  003956  6EE6               	movwf	postinc1,c
  2218  003958  EC5F  F01F         	call	_secs_II_message	;wreg free
  2219                           
  2220                           ;stkvar	_block @ sp[(-4)+0]
  2221  00395C  0EFC               	movlw	-4
  2222  00395E  0060  F0FB  FFE3   	movff	btemp,plusw1
  2223  003964  0EFD               	movlw	-3
  2224  003966  0060  F0FF  FFE3   	movff	btemp+1,plusw1
  2225  00396C  0EFE               	movlw	-2
  2226  00396E  0060  F103  FFE3   	movff	btemp+2,plusw1
  2227                           
  2228                           ; BSR set to: 0
  2229                           ;gemsecs.c: 185:   if (V.abort == LINK_ERROR_ABORT) {
  2230  003974  0E07               	movlw	7
  2231  003976  19D8               	xorwf	(_V+79)& (0+255),w,b	;volatile
  2232  003978  A4D8               	btfss	status,2,c
  2233  00397A  D019               	goto	l6955
  2234                           
  2235                           ; BSR set to: 0
  2236                           ;gemsecs.c: 186:    secs_send((uint8_t*) block.header, block.length, 0);
  2237  00397C  0E00               	movlw	0
  2238  00397E  6EE6               	movwf	postinc1,c
  2239                           
  2240                           ;stkvar	_block @ sp[(-5)+0]
  2241  003980  0EFD               	movlw	253
  2242  003982  24E1               	addwf	fsr1l,w,c
  2243  003984  6ED9               	movwf	fsr2l,c
  2244  003986  0EFF               	movlw	255
  2245  003988  20E2               	addwfc	fsr1h,w,c
  2246  00398A  6EDA               	movwf	fsr2h,c
  2247  00398C  50DF               	movf	indf2,w,c
  2248  00398E  6EE6               	movwf	postinc1,c
  2249                           
  2250                           ;stkvar	_block @ sp[(-6)+0]
  2251  003990  0EFA               	movlw	-6
  2252  003992  006F FF8F FFE6     	movff	plusw1,postinc1
  2253  003998  006F FF8F FFE6     	movff	plusw1,postinc1
  2254  00399E  EC83  F01E         	call	_secs_send	;wreg free
  2255  0039A2                     l6953:
  2256                           
  2257                           ;gemsecs.c: 187:    *t_link = LINK_STATE_ERROR;
  2258                           ;stkvar	_t_link @ sp[(-4)+-1]
  2259  0039A2  0EFB               	movlw	-5
  2260  0039A4  50E3               	movf	plusw1,w,c
  2261  0039A6  6ED9               	movwf	fsr2l,c
  2262  0039A8  6ADA               	clrf	fsr2h,c
  2263  0039AA  0E06               	movlw	6
  2264  0039AC  D01C               	goto	L3
  2265  0039AE                     l6955:
  2266                           
  2267                           ; BSR set to: 0
  2268                           ;gemsecs.c: 189:    secs_send((uint8_t*) block.header, block.length, 0);
  2269  0039AE  0E00               	movlw	0
  2270  0039B0  6EE6               	movwf	postinc1,c
  2271                           
  2272                           ;stkvar	_block @ sp[(-5)+0]
  2273  0039B2  0EFD               	movlw	253
  2274  0039B4  24E1               	addwf	fsr1l,w,c
  2275  0039B6  6ED9               	movwf	fsr2l,c
  2276  0039B8  0EFF               	movlw	255
  2277  0039BA  20E2               	addwfc	fsr1h,w,c
  2278  0039BC  6EDA               	movwf	fsr2h,c
  2279  0039BE  50DF               	movf	indf2,w,c
  2280  0039C0  6EE6               	movwf	postinc1,c
  2281                           
  2282                           ;stkvar	_block @ sp[(-6)+0]
  2283  0039C2  0EFA               	movlw	-6
  2284  0039C4  006F FF8F FFE6     	movff	plusw1,postinc1
  2285  0039CA  006F FF8F FFE6     	movff	plusw1,postinc1
  2286  0039D0  EC83  F01E         	call	_secs_send	;wreg free
  2287                           
  2288                           ;gemsecs.c: 190:    if (V.error == LINK_ERROR_NONE) {
  2289  0039D4  0100               	movlb	0	; () banked
  2290  0039D6  51D7               	movf	(_V+78)& (0+255),w,b	;volatile
  2291  0039D8  A4D8               	btfss	status,2,c
  2292  0039DA  D7E3               	goto	l6953
  2293                           
  2294                           ; BSR set to: 0
  2295                           ;gemsecs.c: 191:     *t_link = LINK_STATE_ACK;
  2296                           ;stkvar	_t_link @ sp[(-4)+-1]
  2297  0039DC  0EFB               	movlw	-5
  2298  0039DE  50E3               	movf	plusw1,w,c
  2299  0039E0  6ED9               	movwf	fsr2l,c
  2300  0039E2  6ADA               	clrf	fsr2h,c
  2301  0039E4  0E03               	movlw	3
  2302  0039E6                     L3:
  2303  0039E6  6EDF               	movwf	indf2,c
  2304                           
  2305                           ;gemsecs.c: 197:   WaitMs(5);
  2306                           
  2307                           ;gemsecs.c: 192:    } else {
  2308  0039E8  0E05               	movlw	5
  2309  0039EA  6EE6               	movwf	postinc1,c
  2310  0039EC  0E00               	movlw	0
  2311  0039EE  6EE6               	movwf	postinc1,c
  2312  0039F0  ECAA  F029         	call	_WaitMs	;wreg free
  2313                           
  2314                           ;gemsecs.c: 198:   UART1_put_buffer(0x06);
  2315  0039F4  0E06               	movlw	6
  2316  0039F6  6EE6               	movwf	postinc1,c
  2317  0039F8  EC95  F029         	call	_UART1_put_buffer	;wreg free
  2318                           
  2319                           ;gemsecs.c: 200:   break;
  2320  0039FC  D059               	goto	l6995
  2321  0039FE                     l6967:
  2322                           
  2323                           ;gemsecs.c: 202:   if (TimerDone(TMR_T3)) {
  2324  0039FE  0E03               	movlw	3
  2325  003A00  6EE6               	movwf	postinc1,c
  2326  003A02  EC51  F02B         	call	_TimerDone	;wreg free
  2327  003A06  503E               	movf	btemp,w,c
  2328  003A08  B4D8               	btfsc	status,2,c
  2329  003A0A  D002               	goto	l6973
  2330                           
  2331                           ;gemsecs.c: 203:    V.error = LINK_ERROR_T3;
  2332  003A0C  0E03               	movlw	3
  2333  003A0E  D75B               	goto	L4
  2334  003A10                     l6973:
  2335                           
  2336                           ;gemsecs.c: 206:    if (UART1_is_rx_ready()) {
  2337  003A10  ECB3  F02C         	call	_UART1_is_rx_ready	;wreg free
  2338  003A14  503E               	movf	btemp,w,c
  2339  003A16  B4D8               	btfsc	status,2,c
  2340  003A18  D04B               	goto	l6995
  2341                           
  2342                           ;gemsecs.c: 207:     rxData = UART1_Read();
  2343  003A1A  ECF6  F028         	call	_UART1_Read	;wreg free
  2344                           
  2345                           ;stkvar	_rxData @ sp[(-4)+3]
  2346  003A1E  0EFF               	movlw	-1
  2347  003A20  0060  F0FB  FFE3   	movff	btemp,plusw1
  2348                           
  2349                           ; BSR set to: 57
  2350                           ;gemsecs.c: 208:     if (rxData == 0x06) {
  2351                           ;stkvar	_rxData @ sp[(-4)+3]
  2352  003A26  0EFF               	movlw	-1
  2353  003A28  006F FF8C  F03E    	movff	plusw1,btemp
  2354  003A2E  0E06               	movlw	6
  2355  003A30  183E               	xorwf	btemp,w,c
  2356  003A32  A4D8               	btfss	status,2,c
  2357  003A34  D03D               	goto	l6995
  2358                           
  2359                           ; BSR set to: 57
  2360                           ;gemsecs.c: 209:      V.failed_send = 0;
  2361  003A36  0100               	movlb	0	; () banked
  2362  003A38  97DD               	bcf	(_V+84)& (0+255),3,b	;volatile
  2363  003A3A  D783               	goto	l6945
  2364  003A3C                     l1566:
  2365                           
  2366                           ;gemsecs.c: 216:   V.failed_send = 1;
  2367  003A3C  0100               	movlb	0	; () banked
  2368  003A3E  87DD               	bsf	(_V+84)& (0+255),3,b	;volatile
  2369                           
  2370                           ; BSR set to: 0
  2371                           ;gemsecs.c: 217:   *t_link = LINK_STATE_ERROR;
  2372                           ;stkvar	_t_link @ sp[(-4)+-1]
  2373  003A40  0EFB               	movlw	-5
  2374  003A42  50E3               	movf	plusw1,w,c
  2375  003A44  6ED9               	movwf	fsr2l,c
  2376  003A46  6ADA               	clrf	fsr2h,c
  2377  003A48  0E06               	movlw	6
  2378  003A4A  6EDF               	movwf	indf2,c
  2379                           
  2380                           ;gemsecs.c: 218:   while ((uart1RxCount)) {
  2381  003A4C  D002               	goto	l6987
  2382  003A4E                     l6985:
  2383                           
  2384                           ;gemsecs.c: 219:    UART1_Read();
  2385  003A4E  ECF6  F028         	call	_UART1_Read	;wreg free
  2386  003A52                     l6987:
  2387                           
  2388                           ;gemsecs.c: 218:   while ((uart1RxCount)) {
  2389  003A52  5038               	movf	_uart1RxCount,w,c	;volatile
  2390  003A54  B4D8               	btfsc	status,2,c
  2391  003A56  D02C               	goto	l6995
  2392  003A58  D7FA               	goto	l6985
  2393  003A5A                     l1571:
  2394                           
  2395                           ;gemsecs.c: 225:   V.failed_send = 0;
  2396  003A5A  0100               	movlb	0	; () banked
  2397  003A5C  97DD               	bcf	(_V+84)& (0+255),3,b	;volatile
  2398                           
  2399                           ;gemsecs.c: 226:   break;
  2400  003A5E  D028               	goto	l6995
  2401  003A60                     l6989:
  2402                           
  2403                           ;gemsecs.c: 228:   *t_link = LINK_STATE_IDLE;
  2404                           ;stkvar	_t_link @ sp[(-4)+-1]
  2405  003A60  0EFB               	movlw	-5
  2406  003A62  50E3               	movf	plusw1,w,c
  2407  003A64  6ED9               	movwf	fsr2l,c
  2408  003A66  6ADA               	clrf	fsr2h,c
  2409  003A68  0E00               	movlw	0
  2410  003A6A                     L2:
  2411  003A6A  6EDF               	movwf	indf2,c
  2412                           
  2413                           ;gemsecs.c: 229:   break;
  2414  003A6C  D021               	goto	l6995
  2415  003A6E                     l6993:
  2416                           
  2417                           ;stkvar	_t_link @ sp[(-4)+-1]
  2418  003A6E  0EFB               	movlw	-5
  2419  003A70  50E3               	movf	plusw1,w,c
  2420  003A72  6ED9               	movwf	fsr2l,c
  2421  003A74  6ADA               	clrf	fsr2h,c
  2422  003A76  50DF               	movf	indf2,w,c
  2423  003A78  6E48               	movwf	btemp+10,c
  2424  003A7A  6A49               	clrf	btemp+11,c
  2425                           
  2426                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2427                           ; Switch size 1, requested type "simple"
  2428                           ; Number of cases is 1, Range of values is 0 to 0
  2429                           ; switch strategies available:
  2430                           ; Name         Instructions Cycles
  2431                           ; simple_byte            4     3 (average)
  2432                           ;	Chosen strategy is simple_byte
  2433  003A7C  5049               	movf	btemp+11,w,c
  2434  003A7E  0A00               	xorlw	0	; case 0
  2435  003A80  A4D8               	btfss	status,2,c
  2436  003A82  D7EE               	goto	l6989
  2437                           
  2438                           ; Switch size 1, requested type "simple"
  2439                           ; Number of cases is 7, Range of values is 0 to 6
  2440                           ; switch strategies available:
  2441                           ; Name         Instructions Cycles
  2442                           ; simple_byte           22    12 (average)
  2443                           ;	Chosen strategy is simple_byte
  2444  003A84  5048               	movf	btemp+10,w,c
  2445  003A86  0A00               	xorlw	0	; case 0
  2446  003A88  B4D8               	btfsc	status,2,c
  2447  003A8A  D6F0               	goto	l1546
  2448  003A8C  0A01               	xorlw	1	; case 1
  2449  003A8E  B4D8               	btfsc	status,2,c
  2450  003A90  D70E               	goto	l6921
  2451  003A92  0A03               	xorlw	3	; case 2
  2452  003A94  B4D8               	btfsc	status,2,c
  2453  003A96  D75B               	goto	l6947
  2454  003A98  0A01               	xorlw	1	; case 3
  2455  003A9A  B4D8               	btfsc	status,2,c
  2456  003A9C  D7B0               	goto	l6967
  2457  003A9E  0A07               	xorlw	7	; case 4
  2458  003AA0  B4D8               	btfsc	status,2,c
  2459  003AA2  D7DB               	goto	l1571
  2460  003AA4  0A01               	xorlw	1	; case 5
  2461  003AA6  B4D8               	btfsc	status,2,c
  2462  003AA8  D7C9               	goto	l1566
  2463  003AAA  0A03               	xorlw	3	; case 6
  2464  003AAC  A4D8               	btfss	status,2,c
  2465  003AAE  D7D8               	goto	l6989
  2466  003AB0                     l6995:
  2467                           
  2468                           ;gemsecs.c: 232:  return *t_link;
  2469                           ;stkvar	_t_link @ sp[(-4)+-1]
  2470  003AB0  0EFB               	movlw	-5
  2471  003AB2  50E3               	movf	plusw1,w,c
  2472  003AB4  6ED9               	movwf	fsr2l,c
  2473  003AB6  6ADA               	clrf	fsr2h,c
  2474  003AB8  50DF               	movf	indf2,w,c
  2475  003ABA  6E3E               	movwf	btemp,c
  2476                           
  2477                           ; _t_protocol: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  2478  003ABC  0EFB               	movlw	251
  2479  003ABE  26E1               	addwf	fsr1l,f,c
  2480  003AC0  0EFF               	movlw	255
  2481  003AC2  22E2               	addwfc	fsr1h,f,c
  2482  003AC4  0012               	return		;funcret
  2483  003AC6                     __end_of_t_protocol:
  2484                           	opt callstack 0
  2485                           
  2486 ;; *************** function _secs_II_message *****************
  2487 ;; Defined at:
  2488 ;;		line 274 in file "gemsecs.c"
  2489 ;; Parameters:    Size  Location     Type
  2490 ;;  stream          1  [STACK] unsigned char 
  2491 ;;  function        1  [STACK] unsigned char 
  2492 ;; Auto vars:     Size  Location     Type
  2493 ;;		None
  2494 ;; Return value:  Size  Location     Type
  2495 ;;                  3  [STACK] struct response_type
  2496 ;; Registers used:
  2497 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+10, btemp+11
  2498 ;; Tracked objects:
  2499 ;;		On entry : 3F/0
  2500 ;;		On exit  : 3F/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2507 ;;Total ram usage:        0 bytes
  2508 ;; Hardware stack levels used:    1
  2509 ;; Hardware stack levels required when called:    3
  2510 ;; This function calls:
  2511 ;;		Nothing
  2512 ;; This function is called by:
  2513 ;;		_t_protocol
  2514 ;; This function uses a reentrant model
  2515 ;;
  2516                           
  2517                           	psect	text2
  2518  003EBE                     __ptext2:
  2519                           	opt callstack 0
  2520  003EBE                     _secs_II_message:
  2521                           	opt callstack 26
  2522                           
  2523                           ;gemsecs.c: 274: response_type secs_II_message(uint8_t stream, uint8_t function);gemsecs
      +                          .c: 275: {;gemsecs.c: 276:  static response_type block;;gemsecs.c: 278:  V.abort = LINK_
      +                          ERROR_NONE;
  2524                           
  2525                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2526                           ;incstack = 0
  2527  003EBE  0100               	movlb	0	; () banked
  2528  003EC0  6BD8               	clrf	(_V+79)& (0+255),b	;volatile
  2529                           
  2530                           ;gemsecs.c: 280:  switch (stream) {
  2531  003EC2  D0AC               	goto	l5433
  2532  003EC4                     l5345:
  2533                           
  2534                           ; BSR set to: 0
  2535                           ;gemsecs.c: 284:    block.header = (uint8_t*) & H12[0];
  2536  003EC4  0EE5               	movlw	low _H12
  2537  003EC6  6E01               	movwf	secs_II_message@block,c
  2538  003EC8  6A02               	clrf	secs_II_message@block+1,c
  2539                           
  2540                           ; BSR set to: 0
  2541                           ;gemsecs.c: 285:    block.length = sizeof(header12);
  2542  003ECA  0E0F               	movlw	15
  2543  003ECC  6E03               	movwf	secs_II_message@block+2,c
  2544                           
  2545                           ; BSR set to: 0
  2546                           ;gemsecs.c: 286:    H12[0].block.block.systemb = V.systemb;
  2547  003ECE  C0D1  F0E9         	movff	_V+72,_H12+4	;volatile
  2548  003ED2  C0D2  F0EA         	movff	_V+73,_H12+5	;volatile
  2549  003ED6  C0D3  F0EB         	movff	_V+74,_H12+6	;volatile
  2550  003EDA  C0D4  F0EC         	movff	_V+75,_H12+7	;volatile
  2551                           
  2552                           ;gemsecs.c: 287:    break;
  2553  003EDE  D0B1               	goto	l5435
  2554  003EE0                     l5351:
  2555                           
  2556                           ; BSR set to: 0
  2557                           ;gemsecs.c: 289:    block.header = (uint8_t*) & H10[0];
  2558  003EE0  0E00               	movlw	low _H10
  2559  003EE2  6E01               	movwf	secs_II_message@block,c
  2560  003EE4  0E01               	movlw	high _H10
  2561  003EE6  6E02               	movwf	secs_II_message@block+1,c
  2562                           
  2563                           ; BSR set to: 0
  2564                           ;gemsecs.c: 290:    block.length = sizeof(header10);
  2565  003EE8  0E0D               	movlw	13
  2566  003EEA  6E03               	movwf	secs_II_message@block+2,c
  2567                           
  2568                           ; BSR set to: 0
  2569                           ;gemsecs.c: 291:    H10[0].block.block.systemb = V.systemb;
  2570  003EEC  C0D1  F102         	movff	_V+72,_H10+2	;volatile
  2571  003EF0  C0D2  F103         	movff	_V+73,_H10+3	;volatile
  2572  003EF4  C0D3  F104         	movff	_V+74,_H10+4	;volatile
  2573  003EF8  C0D4  F105         	movff	_V+75,_H10+5	;volatile
  2574                           
  2575                           ;gemsecs.c: 292:    break;
  2576  003EFC  D0A2               	goto	l5435
  2577  003EFE                     l5357:
  2578                           
  2579                           ; BSR set to: 0
  2580                           ;gemsecs.c: 294:    block.header = (uint8_t*) & H14[0];
  2581  003EFE  0E71               	movlw	low _H14
  2582  003F00  6E01               	movwf	secs_II_message@block,c
  2583  003F02  0E01               	movlw	high _H14
  2584  003F04  6E02               	movwf	secs_II_message@block+1,c
  2585                           
  2586                           ; BSR set to: 0
  2587                           ;gemsecs.c: 295:    block.length = sizeof(header14);
  2588  003F06  0E11               	movlw	17
  2589  003F08  6E03               	movwf	secs_II_message@block+2,c
  2590                           
  2591                           ; BSR set to: 0
  2592                           ;gemsecs.c: 296:    H14[0].block.block.systemb = V.systemb;
  2593  003F0A  C0D1  F177         	movff	_V+72,_H14+6	;volatile
  2594  003F0E  C0D2  F178         	movff	_V+73,_H14+7	;volatile
  2595  003F12  C0D3  F179         	movff	_V+74,_H14+8	;volatile
  2596  003F16  C0D4  F17A         	movff	_V+75,_H14+9	;volatile
  2597                           
  2598                           ;gemsecs.c: 297:    break;
  2599  003F1A  D093               	goto	l5435
  2600  003F1C                     l5363:
  2601                           
  2602                           ; BSR set to: 0
  2603                           ;gemsecs.c: 299:    block.header = (uint8_t*) & H18[0];
  2604  003F1C  0E5C               	movlw	low _H18
  2605  003F1E  6E01               	movwf	secs_II_message@block,c
  2606  003F20  0E01               	movlw	high _H18
  2607  003F22  6E02               	movwf	secs_II_message@block+1,c
  2608                           
  2609                           ; BSR set to: 0
  2610                           ;gemsecs.c: 300:    block.length = sizeof(header18);
  2611  003F24  0E15               	movlw	21
  2612  003F26  6E03               	movwf	secs_II_message@block+2,c
  2613                           
  2614                           ; BSR set to: 0
  2615                           ;gemsecs.c: 301:    H18[0].block.block.systemb = V.systemb;
  2616  003F28  C0D1  F166         	movff	_V+72,_H18+10	;volatile
  2617  003F2C  C0D2  F167         	movff	_V+73,_H18+11	;volatile
  2618  003F30  C0D3  F168         	movff	_V+74,_H18+12	;volatile
  2619  003F34  C0D4  F169         	movff	_V+75,_H18+13	;volatile
  2620                           
  2621                           ;gemsecs.c: 302:    break;
  2622  003F38  D084               	goto	l5435
  2623  003F3A                     l5369:
  2624                           
  2625                           ; BSR set to: 0
  2626                           ;gemsecs.c: 304:    block.header = (uint8_t*) & H10[2];
  2627  003F3A  0E1A               	movlw	low (_H10+26)
  2628  003F3C  6E01               	movwf	secs_II_message@block,c
  2629  003F3E  0E01               	movlw	high (_H10+26)
  2630  003F40  6E02               	movwf	secs_II_message@block+1,c
  2631                           
  2632                           ; BSR set to: 0
  2633                           ;gemsecs.c: 305:    block.length = sizeof(header10);
  2634  003F42  0E0D               	movlw	13
  2635  003F44  6E03               	movwf	secs_II_message@block+2,c
  2636                           
  2637                           ; BSR set to: 0
  2638                           ;gemsecs.c: 306:    H10[2].block.block.systemb = V.systemb;
  2639  003F46  C0D1  F11C         	movff	_V+72,_H10+28	;volatile
  2640  003F4A  C0D2  F11D         	movff	_V+73,_H10+29	;volatile
  2641  003F4E  C0D3  F11E         	movff	_V+74,_H10+30	;volatile
  2642  003F52  C0D4  F11F         	movff	_V+75,_H10+31	;volatile
  2643                           
  2644                           ; BSR set to: 0
  2645                           ;gemsecs.c: 307:    V.abort = LINK_ERROR_ABORT;
  2646  003F56  0E07               	movlw	7
  2647  003F58  6FD8               	movwf	(_V+79)& (0+255),b	;volatile
  2648                           
  2649                           ;gemsecs.c: 308:    break;
  2650  003F5A  D073               	goto	l5435
  2651  003F5C                     l5379:
  2652                           
  2653                           ; BSR set to: 0
  2654                           ;stkvar	_function @ sp[(0)+-2]
  2655  003F5C  0EFE               	movlw	-2
  2656  003F5E  50E3               	movf	plusw1,w,c
  2657  003F60  6E48               	movwf	btemp+10,c
  2658  003F62  6A49               	clrf	btemp+11,c
  2659                           
  2660                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2661                           ; Switch size 1, requested type "simple"
  2662                           ; Number of cases is 1, Range of values is 0 to 0
  2663                           ; switch strategies available:
  2664                           ; Name         Instructions Cycles
  2665                           ; simple_byte            4     3 (average)
  2666                           ;	Chosen strategy is simple_byte
  2667  003F64  5049               	movf	btemp+11,w,c
  2668  003F66  0A00               	xorlw	0	; case 0
  2669  003F68  A4D8               	btfss	status,2,c
  2670  003F6A  D7E7               	goto	l5369
  2671                           
  2672                           ; BSR set to: 0
  2673                           ; Switch size 1, requested type "simple"
  2674                           ; Number of cases is 4, Range of values is 1 to 4
  2675                           ; switch strategies available:
  2676                           ; Name         Instructions Cycles
  2677                           ; simple_byte           13     7 (average)
  2678                           ;	Chosen strategy is simple_byte
  2679  003F6C  5048               	movf	btemp+10,w,c
  2680  003F6E  0A01               	xorlw	1	; case 1
  2681  003F70  B4D8               	btfsc	status,2,c
  2682  003F72  D7A8               	goto	l5345
  2683  003F74  0A03               	xorlw	3	; case 2
  2684  003F76  B4D8               	btfsc	status,2,c
  2685  003F78  D7B3               	goto	l5351
  2686  003F7A  0A01               	xorlw	1	; case 3
  2687  003F7C  B4D8               	btfsc	status,2,c
  2688  003F7E  D7BF               	goto	l5357
  2689  003F80  0A07               	xorlw	7	; case 4
  2690  003F82  B4D8               	btfsc	status,2,c
  2691  003F84  D7CB               	goto	l5363
  2692  003F86  D7D9               	goto	l5369
  2693  003F88                     l5381:
  2694                           
  2695                           ; BSR set to: 0
  2696                           ;gemsecs.c: 314:    block.header = (uint8_t*) & H24[0];
  2697  003F88  0E41               	movlw	low _H24
  2698  003F8A  6E01               	movwf	secs_II_message@block,c
  2699  003F8C  0E01               	movlw	high _H24
  2700  003F8E  6E02               	movwf	secs_II_message@block+1,c
  2701                           
  2702                           ; BSR set to: 0
  2703                           ;gemsecs.c: 315:    block.length = sizeof(header24);
  2704  003F90  0E1B               	movlw	27
  2705  003F92  6E03               	movwf	secs_II_message@block+2,c
  2706                           
  2707                           ; BSR set to: 0
  2708                           ;gemsecs.c: 316:    H24[0].block.block.systemb = V.systemb;
  2709  003F94  C0D1  F151         	movff	_V+72,_H24+16	;volatile
  2710  003F98  C0D2  F152         	movff	_V+73,_H24+17	;volatile
  2711  003F9C  C0D3  F153         	movff	_V+74,_H24+18	;volatile
  2712  003FA0  C0D4  F154         	movff	_V+75,_H24+19	;volatile
  2713                           
  2714                           ;gemsecs.c: 317:    break;
  2715  003FA4  D04E               	goto	l5435
  2716  003FA6                     l5397:
  2717                           
  2718                           ; BSR set to: 0
  2719                           ;stkvar	_function @ sp[(0)+-2]
  2720  003FA6  0EFE               	movlw	-2
  2721  003FA8  50E3               	movf	plusw1,w,c
  2722  003FAA  6E48               	movwf	btemp+10,c
  2723  003FAC  6A49               	clrf	btemp+11,c
  2724                           
  2725                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2726                           ; Switch size 1, requested type "simple"
  2727                           ; Number of cases is 1, Range of values is 0 to 0
  2728                           ; switch strategies available:
  2729                           ; Name         Instructions Cycles
  2730                           ; simple_byte            4     3 (average)
  2731                           ;	Chosen strategy is simple_byte
  2732  003FAE  5049               	movf	btemp+11,w,c
  2733  003FB0  0A00               	xorlw	0	; case 0
  2734  003FB2  A4D8               	btfss	status,2,c
  2735  003FB4  D7C2               	goto	l5369
  2736                           
  2737                           ; BSR set to: 0
  2738                           ; Switch size 1, requested type "simple"
  2739                           ; Number of cases is 1, Range of values is 17 to 17
  2740                           ; switch strategies available:
  2741                           ; Name         Instructions Cycles
  2742                           ; simple_byte            4     3 (average)
  2743                           ;	Chosen strategy is simple_byte
  2744  003FB6  5048               	movf	btemp+10,w,c
  2745  003FB8  0A11               	xorlw	17	; case 17
  2746  003FBA  B4D8               	btfsc	status,2,c
  2747  003FBC  D7E5               	goto	l5381
  2748  003FBE  D7BD               	goto	l5369
  2749  003FC0                     l5399:
  2750                           
  2751                           ; BSR set to: 0
  2752                           ;gemsecs.c: 329:    block.header = (uint8_t*) & H13[0];
  2753  003FC0  0E82               	movlw	low _H13
  2754  003FC2  6E01               	movwf	secs_II_message@block,c
  2755  003FC4  0E01               	movlw	high _H13
  2756  003FC6  6E02               	movwf	secs_II_message@block+1,c
  2757                           
  2758                           ; BSR set to: 0
  2759                           ;gemsecs.c: 330:    block.length = sizeof(header13);
  2760  003FC8  0E10               	movlw	16
  2761  003FCA  6E03               	movwf	secs_II_message@block+2,c
  2762                           
  2763                           ; BSR set to: 0
  2764                           ;gemsecs.c: 331:    H13[0].block.block.systemb = V.systemb;
  2765  003FCC  C0D1  F187         	movff	_V+72,_H13+5	;volatile
  2766  003FD0  C0D2  F188         	movff	_V+73,_H13+6	;volatile
  2767  003FD4  C0D3  F189         	movff	_V+74,_H13+7	;volatile
  2768  003FD8  C0D4  F18A         	movff	_V+75,_H13+8	;volatile
  2769                           
  2770                           ;gemsecs.c: 332:    break;
  2771  003FDC  D032               	goto	l5435
  2772  003FDE                     l5405:
  2773                           
  2774                           ; BSR set to: 0
  2775                           ;gemsecs.c: 334:    block.header = (uint8_t*) & H53[0];
  2776  003FDE  0E86               	movlw	low _H53
  2777  003FE0  6E01               	movwf	secs_II_message@block,c
  2778  003FE2  0E03               	movlw	high _H53
  2779  003FE4  6E02               	movwf	secs_II_message@block+1,c
  2780                           
  2781                           ; BSR set to: 0
  2782                           ;gemsecs.c: 335:    block.length = sizeof(header53);
  2783  003FE6  0E38               	movlw	56
  2784  003FE8  6E03               	movwf	secs_II_message@block+2,c
  2785                           
  2786                           ; BSR set to: 0
  2787                           ;gemsecs.c: 336:    H53[0].block.block.systemb = V.systemb;
  2788  003FEA  C0D1  F3B3         	movff	_V+72,_H53+45	;volatile
  2789  003FEE  C0D2  F3B4         	movff	_V+73,_H53+46	;volatile
  2790  003FF2  C0D3  F3B5         	movff	_V+74,_H53+47	;volatile
  2791  003FF6  C0D4  F3B6         	movff	_V+75,_H53+48	;volatile
  2792                           
  2793                           ;gemsecs.c: 337:    break;
  2794  003FFA  D023               	goto	l5435
  2795  003FFC                     l5421:
  2796                           
  2797                           ; BSR set to: 0
  2798                           ;stkvar	_function @ sp[(0)+-2]
  2799  003FFC  0EFE               	movlw	-2
  2800  003FFE  50E3               	movf	plusw1,w,c
  2801  004000  6E48               	movwf	btemp+10,c
  2802  004002  6A49               	clrf	btemp+11,c
  2803                           
  2804                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2805                           ; Switch size 1, requested type "simple"
  2806                           ; Number of cases is 1, Range of values is 0 to 0
  2807                           ; switch strategies available:
  2808                           ; Name         Instructions Cycles
  2809                           ; simple_byte            4     3 (average)
  2810                           ;	Chosen strategy is simple_byte
  2811  004004  5049               	movf	btemp+11,w,c
  2812  004006  0A00               	xorlw	0	; case 0
  2813  004008  A4D8               	btfss	status,2,c
  2814  00400A  D797               	goto	l5369
  2815                           
  2816                           ; BSR set to: 0
  2817                           ; Switch size 1, requested type "simple"
  2818                           ; Number of cases is 2, Range of values is 11 to 12
  2819                           ; switch strategies available:
  2820                           ; Name         Instructions Cycles
  2821                           ; simple_byte            7     4 (average)
  2822                           ;	Chosen strategy is simple_byte
  2823  00400C  5048               	movf	btemp+10,w,c
  2824  00400E  0A0B               	xorlw	11	; case 11
  2825  004010  B4D8               	btfsc	status,2,c
  2826  004012  D7D6               	goto	l5399
  2827  004014  0A07               	xorlw	7	; case 12
  2828  004016  B4D8               	btfsc	status,2,c
  2829  004018  D7E2               	goto	l5405
  2830  00401A  D78F               	goto	l5369
  2831  00401C                     l5433:
  2832                           
  2833                           ; BSR set to: 0
  2834                           ;stkvar	_stream @ sp[(0)+-1]
  2835  00401C  0EFF               	movlw	-1
  2836  00401E  50E3               	movf	plusw1,w,c
  2837  004020  6E48               	movwf	btemp+10,c
  2838  004022  6A49               	clrf	btemp+11,c
  2839                           
  2840                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2841                           ; Switch size 1, requested type "simple"
  2842                           ; Number of cases is 1, Range of values is 0 to 0
  2843                           ; switch strategies available:
  2844                           ; Name         Instructions Cycles
  2845                           ; simple_byte            4     3 (average)
  2846                           ;	Chosen strategy is simple_byte
  2847  004024  5049               	movf	btemp+11,w,c
  2848  004026  0A00               	xorlw	0	; case 0
  2849  004028  A4D8               	btfss	status,2,c
  2850  00402A  D787               	goto	l5369
  2851                           
  2852                           ; BSR set to: 0
  2853                           ; Switch size 1, requested type "simple"
  2854                           ; Number of cases is 3, Range of values is 1 to 6
  2855                           ; switch strategies available:
  2856                           ; Name         Instructions Cycles
  2857                           ; simple_byte           10     6 (average)
  2858                           ;	Chosen strategy is simple_byte
  2859  00402C  5048               	movf	btemp+10,w,c
  2860  00402E  0A01               	xorlw	1	; case 1
  2861  004030  B4D8               	btfsc	status,2,c
  2862  004032  D794               	goto	l5379
  2863  004034  0A03               	xorlw	3	; case 2
  2864  004036  B4D8               	btfsc	status,2,c
  2865  004038  D7B6               	goto	l5397
  2866  00403A  0A04               	xorlw	4	; case 6
  2867  00403C  B4D8               	btfsc	status,2,c
  2868  00403E  D7DE               	goto	l5421
  2869  004040  D77C               	goto	l5369
  2870  004042                     l5435:
  2871                           
  2872                           ; BSR set to: 0
  2873                           ;gemsecs.c: 354:  return(block);
  2874  004042  0060  F004  F03E   	movff	secs_II_message@block,btemp
  2875  004048  0060  F008  F03F   	movff	secs_II_message@block+1,btemp+1
  2876  00404E  0060  F00C  F040   	movff	secs_II_message@block+2,btemp+2
  2877                           
  2878                           ; BSR set to: 0
  2879                           ; _secs_II_message: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  2880  004054  52E5               	movf	postdec1,f,c
  2881  004056  52E5               	movf	postdec1,f,c
  2882  004058  0012               	return		;funcret
  2883  00405A                     __end_of_secs_II_message:
  2884                           	opt callstack 0
  2885                           
  2886 ;; *************** function _sprintf *****************
  2887 ;; Defined at:
  2888 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  2889 ;; Parameters:    Size  Location     Type
  2890 ;;  s               1  [STACK] PTR unsigned char 
  2891 ;;		 -> V(85), 
  2892 ;;  fmt             1  [STACK] PTR const unsigned char 
  2893 ;;		 -> STR_11(21), STR_10(17), STR_9(17), STR_8(19), 
  2894 ;;		 -> STR_7(23), STR_6(6), STR_5(14), STR_4(15), 
  2895 ;;		 -> STR_2(12), STR_1(17), 
  2896 ;; Auto vars:     Size  Location     Type
  2897 ;;  f               5  [STACK] struct _IO_FILE
  2898 ;;  ap              2  [STACK] PTR void [1]
  2899 ;;		 -> ?_printf(2), ?_sprintf(2), 
  2900 ;;  ret             2    0        int 
  2901 ;; Return value:  Size  Location     Type
  2902 ;;                  2  [STACK] int 
  2903 ;; Registers used:
  2904 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  2905 ;; Tracked objects:
  2906 ;;		On entry : 0/0
  2907 ;;		On exit  : 0/0
  2908 ;;		Unchanged: 0/0
  2909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2914 ;;Total ram usage:        0 bytes
  2915 ;; Hardware stack levels used:    1
  2916 ;; Hardware stack levels required when called:   11
  2917 ;; This function calls:
  2918 ;;		_vfprintf
  2919 ;; This function is called by:
  2920 ;;		_main
  2921 ;; This function uses a reentrant model
  2922 ;;
  2923                           
  2924                           	psect	text3
  2925  00468E                     __ptext3:
  2926                           	opt callstack 0
  2927  00468E                     _sprintf:
  2928                           	opt callstack 0
  2929                           
  2930                           ; BSR set to: 0
  2931                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 2 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  2932  00468E  0E07               	movlw	7
  2933  004690  26E1               	addwf	fsr1l,f,c
  2934  004692  0E00               	movlw	0
  2935  004694  22E2               	addwfc	fsr1h,f,c
  2936                           
  2937                           ;stkvar	?_sprintf @ sp[(-7)+-3]
  2938                           
  2939                           ;incstack = 0
  2940  004696  0EF6               	movlw	246
  2941  004698  24E1               	addwf	fsr1l,w,c
  2942  00469A  6E48               	movwf	btemp+10,c
  2943  00469C  0EFF               	movlw	255
  2944  00469E  20E2               	addwfc	fsr1h,w,c
  2945  0046A0  6E49               	movwf	btemp+11,c
  2946                           
  2947                           ;stkvar	_ap @ sp[(-7)+5]
  2948  0046A2  0EFF               	movlw	-1
  2949  0046A4  0060  F127  FFE3   	movff	btemp+11,plusw1
  2950  0046AA  0EFE               	movlw	-2
  2951  0046AC  0060  F123  FFE3   	movff	btemp+10,plusw1
  2952                           
  2953                           ;stkvar	_s @ sp[(-7)+-2]
  2954  0046B2  0EF7               	movlw	-9
  2955  0046B4  006F FF8C  F049    	movff	plusw1,btemp+11
  2956                           
  2957                           ;stkvar	_f @ sp[(-7)+0]
  2958  0046BA  0EF9               	movlw	-7
  2959  0046BC  0060  F127  FFE3   	movff	btemp+11,plusw1
  2960                           
  2961                           ;stkvar	_f @ sp[(-7)+0]
  2962  0046C2  0EFA               	movlw	250
  2963  0046C4  24E1               	addwf	fsr1l,w,c
  2964  0046C6  6ED9               	movwf	fsr2l,c
  2965  0046C8  0EFF               	movlw	255
  2966  0046CA  20E2               	addwfc	fsr1h,w,c
  2967  0046CC  6EDA               	movwf	fsr2h,c
  2968  0046CE  0E00               	movlw	0
  2969  0046D0  6EDE               	movwf	postinc2,c
  2970  0046D2  0E00               	movlw	0
  2971  0046D4  6EDD               	movwf	postdec2,c
  2972                           
  2973                           ;stkvar	_f @ sp[(-7)+0]
  2974  0046D6  0EFC               	movlw	252
  2975  0046D8  24E1               	addwf	fsr1l,w,c
  2976  0046DA  6ED9               	movwf	fsr2l,c
  2977  0046DC  0EFF               	movlw	255
  2978  0046DE  20E2               	addwfc	fsr1h,w,c
  2979  0046E0  6EDA               	movwf	fsr2h,c
  2980  0046E2  0E00               	movlw	0
  2981  0046E4  6EDE               	movwf	postinc2,c
  2982  0046E6  0E00               	movlw	0
  2983  0046E8  6EDD               	movwf	postdec2,c
  2984                           
  2985                           ;stkvar	_ap @ sp[(-7)+5]
  2986  0046EA  0EFE               	movlw	254
  2987  0046EC  24E1               	addwf	fsr1l,w,c
  2988  0046EE  6E3E               	movwf	btemp,c
  2989  0046F0  0EFF               	movlw	255
  2990  0046F2  20E2               	addwfc	fsr1h,w,c
  2991  0046F4  6E3F               	movwf	btemp+1,c
  2992  0046F6  0060  F0FB  FFE6   	movff	btemp,postinc1
  2993  0046FC  0060  F0FF  FFE6   	movff	btemp+1,postinc1
  2994                           
  2995                           ;stkvar	_fmt @ sp[(-9)+-3]
  2996  004702  0EF4               	movlw	-12
  2997  004704  50E3               	movf	plusw1,w,c
  2998  004706  6EE6               	movwf	postinc1,c
  2999                           
  3000                           ;stkvar	_f @ sp[(-10)+0]
  3001  004708  0EF6               	movlw	246
  3002  00470A  24E1               	addwf	fsr1l,w,c
  3003  00470C  6E3E               	movwf	btemp,c
  3004  00470E  0EFF               	movlw	255
  3005  004710  20E2               	addwfc	fsr1h,w,c
  3006  004712  6E3F               	movwf	btemp+1,c
  3007  004714  0060  F0FB  FFE6   	movff	btemp,postinc1
  3008  00471A  0060  F0FF  FFE6   	movff	btemp+1,postinc1
  3009  004720  EC3B  F025         	call	_vfprintf	;wreg free
  3010                           
  3011                           ;stkvar	_f @ sp[(-7)+0]
  3012  004724  0EFA               	movlw	250
  3013  004726  24E1               	addwf	fsr1l,w,c
  3014  004728  6ED9               	movwf	fsr2l,c
  3015  00472A  0EFF               	movlw	255
  3016  00472C  20E2               	addwfc	fsr1h,w,c
  3017  00472E  6EDA               	movwf	fsr2h,c
  3018  004730  50DF               	movf	indf2,w,c
  3019  004732  6E49               	movwf	btemp+11,c
  3020                           
  3021                           ;stkvar	_s @ sp[(-7)+-2]
  3022  004734  0EF7               	movlw	-9
  3023  004736  50E3               	movf	plusw1,w,c
  3024  004738  2449               	addwf	btemp+11,w,c
  3025  00473A  6ED9               	movwf	fsr2l,c
  3026  00473C  6ADA               	clrf	fsr2h,c
  3027  00473E  0E00               	movlw	0
  3028  004740  6EDF               	movwf	indf2,c
  3029                           
  3030                           ; _sprintf: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, args
      +                          ize = 2, vargsize = 0
  3031  004742  0EF9               	movlw	249
  3032  004744  26E1               	addwf	fsr1l,f,c
  3033  004746  0EFF               	movlw	255
  3034  004748  22E2               	addwfc	fsr1h,f,c
  3035  00474A  52E5               	movf	postdec1,f,c
  3036  00474C  50E7               	movf	indf1,w,c
  3037  00474E  5EE1               	subwf	fsr1l,f,c
  3038  004750  0E00               	movlw	0
  3039  004752  5AE2               	subwfb	fsr1h,f,c
  3040  004754  0012               	return		;funcret
  3041  004756                     __end_of_sprintf:
  3042                           	opt callstack 0
  3043                           
  3044 ;; *************** function _r_protocol *****************
  3045 ;; Defined at:
  3046 ;;		line 40 in file "gemsecs.c"
  3047 ;; Parameters:    Size  Location     Type
  3048 ;;  r_link          1  [STACK] PTR enum E16164
  3049 ;;		 -> V(85), 
  3050 ;; Auto vars:     Size  Location     Type
  3051 ;;  rxData          1  [STACK] unsigned char 
  3052 ;; Return value:  Size  Location     Type
  3053 ;;                  1  [STACK] enum E16902
  3054 ;; Registers used:
  3055 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  3056 ;; Tracked objects:
  3057 ;;		On entry : 0/0
  3058 ;;		On exit  : 0/0
  3059 ;;		Unchanged: 0/0
  3060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3065 ;;Total ram usage:        0 bytes
  3066 ;; Hardware stack levels used:    1
  3067 ;; Hardware stack levels required when called:    5
  3068 ;; This function calls:
  3069 ;;		_StartTimer
  3070 ;;		_TimerDone
  3071 ;;		_UART1_Read
  3072 ;;		_UART1_Write
  3073 ;;		_UART1_is_rx_ready
  3074 ;;		_WaitMs
  3075 ;;		_run_checksum
  3076 ;;		_secs_send
  3077 ;; This function is called by:
  3078 ;;		_main
  3079 ;; This function uses a reentrant model
  3080 ;;
  3081                           
  3082                           	psect	text4
  3083  002D2E                     __ptext4:
  3084                           	opt callstack 0
  3085  002D2E                     _r_protocol:
  3086                           	opt callstack 0
  3087                           
  3088                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3089  002D2E  52E6               	movf	postinc1,f,c
  3090                           
  3091                           ;gemsecs.c: 40: LINK_STATES r_protocol(LINK_STATES *r_link);gemsecs.c: 41: {;gemsecs.c: 
      +                          42:  uint8_t rxData;;gemsecs.c: 43:  static uint8_t rxData_l = 0, retry = 3;;gemsecs.c: 
      +                          45:  switch (*r_link) {
  3092                           
  3093                           ;incstack = 0
  3094  002D30  D159               	goto	l6895
  3095  002D32                     l6785:
  3096                           
  3097                           ;gemsecs.c: 47:   if (UART1_is_rx_ready()) {
  3098  002D32  ECB3  F02C         	call	_UART1_is_rx_ready	;wreg free
  3099  002D36  503E               	movf	btemp,w,c
  3100  002D38  B4D8               	btfsc	status,2,c
  3101  002D3A  D175               	goto	l6897
  3102                           
  3103                           ;gemsecs.c: 48:    rxData = UART1_Read();
  3104  002D3C  ECF6  F028         	call	_UART1_Read	;wreg free
  3105                           
  3106                           ;stkvar	_rxData @ sp[(-1)+0]
  3107  002D40  0EFF               	movlw	-1
  3108  002D42  0060  F0FB  FFE3   	movff	btemp,plusw1
  3109                           
  3110                           ; BSR set to: 57
  3111                           ;gemsecs.c: 49:    if (rxData == 0x05) {
  3112                           ;stkvar	_rxData @ sp[(-1)+0]
  3113  002D48  0EFF               	movlw	-1
  3114  002D4A  006F FF8C  F03E    	movff	plusw1,btemp
  3115  002D50  0E05               	movlw	5
  3116  002D52  183E               	xorwf	btemp,w,c
  3117  002D54  A4D8               	btfss	status,2,c
  3118  002D56  D167               	goto	l6897
  3119                           
  3120                           ; BSR set to: 57
  3121                           ;gemsecs.c: 50:     V.error = LINK_ERROR_NONE;
  3122  002D58  0100               	movlb	0	; () banked
  3123  002D5A  6BD7               	clrf	(_V+78)& (0+255),b	;volatile
  3124                           
  3125                           ; BSR set to: 0
  3126                           ;gemsecs.c: 51:     *r_link = LINK_STATE_ENQ;
  3127                           ;stkvar	_r_link @ sp[(-1)+-1]
  3128  002D5C  0EFE               	movlw	-2
  3129  002D5E  50E3               	movf	plusw1,w,c
  3130  002D60  6ED9               	movwf	fsr2l,c
  3131  002D62  6ADA               	clrf	fsr2h,c
  3132  002D64  0E01               	movlw	1
  3133  002D66  D124               	goto	L8
  3134  002D68                     l1513:
  3135                           
  3136                           ;gemsecs.c: 56:   rxData_l = 0;
  3137  002D68  6A31               	clrf	r_protocol@rxData_l,c
  3138                           
  3139                           ;gemsecs.c: 57:   UART1_Write(0x04);
  3140  002D6A  0E04               	movlw	4
  3141  002D6C  6EE6               	movwf	postinc1,c
  3142  002D6E  ECD7  F028         	call	_UART1_Write	;wreg free
  3143                           
  3144                           ; BSR set to: 57
  3145                           ;gemsecs.c: 58:   StartTimer(TMR_T2, 2000);
  3146  002D72  0ED0               	movlw	208
  3147  002D74  6EE6               	movwf	postinc1,c
  3148  002D76  0E07               	movlw	7
  3149  002D78  6EE6               	movwf	postinc1,c
  3150  002D7A  0E02               	movlw	2
  3151  002D7C  6EE6               	movwf	postinc1,c
  3152  002D7E  EC35  F029         	call	_StartTimer	;wreg free
  3153                           
  3154                           ;gemsecs.c: 59:   *r_link = LINK_STATE_EOT;
  3155                           ;stkvar	_r_link @ sp[(-1)+-1]
  3156  002D82  0EFE               	movlw	-2
  3157  002D84  50E3               	movf	plusw1,w,c
  3158  002D86  6ED9               	movwf	fsr2l,c
  3159  002D88  6ADA               	clrf	fsr2h,c
  3160  002D8A  0E02               	movlw	2
  3161  002D8C  6EDF               	movwf	indf2,c
  3162                           
  3163                           ;gemsecs.c: 61:   WaitMs(5);
  3164  002D8E  0E05               	movlw	5
  3165  002D90  6EE6               	movwf	postinc1,c
  3166  002D92  0E00               	movlw	0
  3167  002D94  6EE6               	movwf	postinc1,c
  3168  002D96  ECAA  F029         	call	_WaitMs	;wreg free
  3169                           
  3170                           ;gemsecs.c: 62:   H10[3].block.block.systemb = V.ticks;
  3171  002D9A  C0CD  F129         	movff	_V+68,_H10+41	;volatile
  3172  002D9E  C0CE  F12A         	movff	_V+69,_H10+42	;volatile
  3173  002DA2  C0CF  F12B         	movff	_V+70,_H10+43	;volatile
  3174  002DA6  C0D0  F12C         	movff	_V+71,_H10+44	;volatile
  3175                           
  3176                           ;gemsecs.c: 63:   secs_send((uint8_t*) & H10[3], sizeof(header10), 1);
  3177  002DAA  0E01               	movlw	1
  3178  002DAC  6EE6               	movwf	postinc1,c
  3179  002DAE  0E0D               	movlw	13
  3180  002DB0  6EE6               	movwf	postinc1,c
  3181  002DB2  0E27               	movlw	low (_H10+39)
  3182  002DB4  6EE6               	movwf	postinc1,c
  3183  002DB6  0E01               	movlw	high (_H10+39)
  3184  002DB8  6EE6               	movwf	postinc1,c
  3185  002DBA  EC83  F01E         	call	_secs_send	;wreg free
  3186                           
  3187                           ;gemsecs.c: 65:   break;
  3188  002DBE  D133               	goto	l6897
  3189  002DC0                     l6807:
  3190                           
  3191                           ;gemsecs.c: 67:   if (TimerDone(TMR_T2)) {
  3192  002DC0  0E02               	movlw	2
  3193  002DC2  6EE6               	movwf	postinc1,c
  3194  002DC4  EC51  F02B         	call	_TimerDone	;wreg free
  3195  002DC8  503E               	movf	btemp,w,c
  3196  002DCA  B4D8               	btfsc	status,2,c
  3197  002DCC  D013               	goto	l6817
  3198                           
  3199                           ;gemsecs.c: 68:    if (!retry--) {
  3200  002DCE  065E               	decf	r_protocol@retry,f,c
  3201  002DD0  285E               	incf	r_protocol@retry,w,c
  3202  002DD2  A4D8               	btfss	status,2,c
  3203  002DD4  D009               	goto	l6815
  3204                           
  3205                           ;gemsecs.c: 69:     V.error = LINK_ERROR_T2;
  3206  002DD6  0E02               	movlw	2
  3207  002DD8  0100               	movlb	0	; () banked
  3208  002DDA  6FD7               	movwf	(_V+78)& (0+255),b	;volatile
  3209                           
  3210                           ; BSR set to: 0
  3211                           ;gemsecs.c: 70:     *r_link = LINK_STATE_NAK;
  3212                           ;stkvar	_r_link @ sp[(-1)+-1]
  3213  002DDC  0EFE               	movlw	-2
  3214  002DDE  50E3               	movf	plusw1,w,c
  3215  002DE0  6ED9               	movwf	fsr2l,c
  3216  002DE2  6ADA               	clrf	fsr2h,c
  3217  002DE4  0E05               	movlw	5
  3218  002DE6  D0E4               	goto	L8
  3219  002DE8                     l6815:
  3220                           
  3221                           ;gemsecs.c: 72:     *r_link = LINK_STATE_IDLE;
  3222                           ;stkvar	_r_link @ sp[(-1)+-1]
  3223  002DE8  0EFE               	movlw	-2
  3224  002DEA  50E3               	movf	plusw1,w,c
  3225  002DEC  6ED9               	movwf	fsr2l,c
  3226  002DEE  6ADA               	clrf	fsr2h,c
  3227  002DF0  0E00               	movlw	0
  3228  002DF2  D0DE               	goto	L8
  3229  002DF4                     l6817:
  3230                           
  3231                           ;gemsecs.c: 75:    if (UART1_is_rx_ready()) {
  3232  002DF4  ECB3  F02C         	call	_UART1_is_rx_ready	;wreg free
  3233  002DF8  503E               	movf	btemp,w,c
  3234  002DFA  B4D8               	btfsc	status,2,c
  3235  002DFC  D114               	goto	l6897
  3236                           
  3237                           ;gemsecs.c: 76:     rxData = UART1_Read();
  3238  002DFE  ECF6  F028         	call	_UART1_Read	;wreg free
  3239                           
  3240                           ;stkvar	_rxData @ sp[(-1)+0]
  3241  002E02  0EFF               	movlw	-1
  3242  002E04  0060  F0FB  FFE3   	movff	btemp,plusw1
  3243                           
  3244                           ; BSR set to: 57
  3245                           ;gemsecs.c: 77:     if (rxData_l == 0) {
  3246  002E0A  5031               	movf	r_protocol@rxData_l,w,c
  3247  002E0C  A4D8               	btfss	status,2,c
  3248  002E0E  D00C               	goto	l6829
  3249                           
  3250                           ; BSR set to: 57
  3251                           ;gemsecs.c: 78:      r_block.length = rxData;
  3252                           ;stkvar	_rxData @ sp[(-1)+0]
  3253  002E10  0EFF               	movlw	-1
  3254  002E12  006F FF8C  F06C    	movff	plusw1,_r_block+12
  3255                           
  3256                           ; BSR set to: 57
  3257                           ;gemsecs.c: 79:      run_checksum(0, 1);
  3258  002E18  0E01               	movlw	1
  3259  002E1A  6EE6               	movwf	postinc1,c
  3260  002E1C  0E00               	movlw	0
  3261  002E1E  6EE6               	movwf	postinc1,c
  3262  002E20  ECD5  F029         	call	_run_checksum	;wreg free
  3263                           
  3264                           ;gemsecs.c: 80:      rxData_l++;
  3265  002E24  2A31               	incf	r_protocol@rxData_l,f,c
  3266                           
  3267                           ;gemsecs.c: 81:     } else {
  3268  002E26  D0FF               	goto	l6897
  3269  002E28                     l6829:
  3270                           
  3271                           ; BSR set to: 57
  3272                           ;gemsecs.c: 85:      if (rxData_l <= 10)
  3273  002E28  0E0B               	movlw	11
  3274  002E2A  6031               	cpfslt	r_protocol@rxData_l,c
  3275  002E2C  D018               	goto	l6833
  3276                           
  3277                           ; BSR set to: 57
  3278                           ;gemsecs.c: 86:       H10[1].block.b[r_block.length - rxData_l] = rxData;
  3279                           ;stkvar	_rxData @ sp[(-1)+0]
  3280  002E2E  0E00               	movlw	low _H10
  3281  002E30  6E48               	movwf	btemp+10,c
  3282  002E32  0E01               	movlw	high _H10
  3283  002E34  6E49               	movwf	btemp+11,c
  3284  002E36  0E0F               	movlw	15
  3285  002E38  2648               	addwf	btemp+10,f,c
  3286  002E3A  0E00               	movlw	0
  3287  002E3C  2249               	addwfc	btemp+11,f,c
  3288  002E3E  0100               	movlb	0	; () banked
  3289  002E40  516C               	movf	(_r_block+12)& (0+255),w,b
  3290  002E42  2648               	addwf	btemp+10,f,c
  3291  002E44  0E00               	movlw	0
  3292  002E46  2249               	addwfc	btemp+11,f,c
  3293  002E48  5031               	movf	r_protocol@rxData_l,w,c
  3294  002E4A  5C48               	subwf	btemp+10,w,c
  3295  002E4C  6ED9               	movwf	fsr2l,c
  3296  002E4E  5049               	movf	btemp+11,w,c
  3297  002E50  A0D8               	btfss	status,0,c
  3298  002E52  0449               	decf	btemp+11,w,c
  3299  002E54  6EDA               	movwf	fsr2h,c
  3300  002E56  0EFF               	movlw	-1
  3301  002E58  006F FF8F FFDF     	movff	plusw1,indf2
  3302  002E5E                     l6833:
  3303                           
  3304                           ;gemsecs.c: 87:      if (rxData_l <= r_block.length)
  3305  002E5E  5031               	movf	r_protocol@rxData_l,w,c
  3306  002E60  0100               	movlb	0	; () banked
  3307  002E62  5D6C               	subwf	(_r_block+12)& (0+255),w,b
  3308  002E64  A0D8               	btfss	status,0,c
  3309  002E66  D00D               	goto	l6837
  3310                           
  3311                           ; BSR set to: 0
  3312                           ;gemsecs.c: 88:       V.r_checksum = run_checksum(rxData, 0);
  3313  002E68  0E00               	movlw	0
  3314  002E6A  6EE6               	movwf	postinc1,c
  3315                           
  3316                           ;stkvar	_rxData @ sp[(-2)+0]
  3317  002E6C  0EFE               	movlw	-2
  3318  002E6E  50E3               	movf	plusw1,w,c
  3319  002E70  6EE6               	movwf	postinc1,c
  3320  002E72  ECD5  F029         	call	_run_checksum	;wreg free
  3321  002E76  0060  F0F8  F0D9   	movff	btemp,_V+80	;volatile
  3322  002E7C  0060  F0FC  F0DA   	movff	btemp+1,_V+81	;volatile
  3323  002E82                     l6837:
  3324                           
  3325                           ;gemsecs.c: 90:      if (rxData_l == r_block.length + 1)
  3326  002E82  5031               	movf	r_protocol@rxData_l,w,c
  3327  002E84  6E48               	movwf	btemp+10,c
  3328  002E86  6A49               	clrf	btemp+11,c
  3329  002E88  0100               	movlb	0	; () banked
  3330  002E8A  516C               	movf	(_r_block+12)& (0+255),w,b
  3331  002E8C  6E46               	movwf	btemp+8,c
  3332  002E8E  6A47               	clrf	btemp+9,c
  3333  002E90  0E01               	movlw	1
  3334  002E92  2646               	addwf	btemp+8,f,c
  3335  002E94  0E00               	movlw	0
  3336  002E96  2247               	addwfc	btemp+9,f,c
  3337  002E98  5048               	movf	btemp+10,w,c
  3338  002E9A  1846               	xorwf	btemp+8,w,c
  3339  002E9C  E109               	bnz	l6841
  3340  002E9E  5049               	movf	btemp+11,w,c
  3341  002EA0  1847               	xorwf	btemp+9,w,c
  3342  002EA2  A4D8               	btfss	status,2,c
  3343  002EA4  D005               	goto	l6841
  3344                           
  3345                           ; BSR set to: 0
  3346                           ;gemsecs.c: 91:       H10[1].checksum = (uint16_t) rxData << 8;
  3347                           ;stkvar	_rxData @ sp[(-1)+0]
  3348  002EA6  0EFF               	movlw	-1
  3349  002EA8  50E3               	movf	plusw1,w,c
  3350  002EAA  0101               	movlb	1	; () banked
  3351  002EAC  6F0E               	movwf	(_H10+14)& (0+255),b
  3352  002EAE  6B0D               	clrf	(_H10+13)& (0+255),b
  3353  002EB0                     l6841:
  3354                           
  3355                           ;gemsecs.c: 92:      if (rxData_l == r_block.length + 2)
  3356  002EB0  5031               	movf	r_protocol@rxData_l,w,c
  3357  002EB2  6E48               	movwf	btemp+10,c
  3358  002EB4  6A49               	clrf	btemp+11,c
  3359  002EB6  0100               	movlb	0	; () banked
  3360  002EB8  516C               	movf	(_r_block+12)& (0+255),w,b
  3361  002EBA  6E46               	movwf	btemp+8,c
  3362  002EBC  6A47               	clrf	btemp+9,c
  3363  002EBE  0E02               	movlw	2
  3364  002EC0  2646               	addwf	btemp+8,f,c
  3365  002EC2  0E00               	movlw	0
  3366  002EC4  2247               	addwfc	btemp+9,f,c
  3367  002EC6  5048               	movf	btemp+10,w,c
  3368  002EC8  1846               	xorwf	btemp+8,w,c
  3369  002ECA  E10A               	bnz	l6845
  3370  002ECC  5049               	movf	btemp+11,w,c
  3371  002ECE  1847               	xorwf	btemp+9,w,c
  3372  002ED0  A4D8               	btfss	status,2,c
  3373  002ED2  D006               	goto	l6845
  3374                           
  3375                           ; BSR set to: 0
  3376                           ;gemsecs.c: 93:       H10[1].checksum += rxData;
  3377                           ;stkvar	_rxData @ sp[(-1)+0]
  3378  002ED4  0EFF               	movlw	-1
  3379  002ED6  50E3               	movf	plusw1,w,c
  3380  002ED8  0101               	movlb	1	; () banked
  3381  002EDA  270D               	addwf	(_H10+13)& (0+255),f,b
  3382  002EDC  0E00               	movlw	0
  3383  002EDE  230E               	addwfc	(_H10+14)& (0+255),f,b
  3384  002EE0                     l6845:
  3385                           
  3386                           ;gemsecs.c: 95:      rxData_l++;
  3387  002EE0  2A31               	incf	r_protocol@rxData_l,f,c
  3388                           
  3389                           ;gemsecs.c: 96:      if (rxData_l > (r_block.length + 2)) {
  3390  002EE2  5031               	movf	r_protocol@rxData_l,w,c
  3391  002EE4  6E48               	movwf	btemp+10,c
  3392  002EE6  6A49               	clrf	btemp+11,c
  3393  002EE8  0100               	movlb	0	; () banked
  3394  002EEA  516C               	movf	(_r_block+12)& (0+255),w,b
  3395  002EEC  6E46               	movwf	btemp+8,c
  3396  002EEE  6A47               	clrf	btemp+9,c
  3397  002EF0  0E02               	movlw	2
  3398  002EF2  2646               	addwf	btemp+8,f,c
  3399  002EF4  0E00               	movlw	0
  3400  002EF6  2247               	addwfc	btemp+9,f,c
  3401  002EF8  5048               	movf	btemp+10,w,c
  3402  002EFA  5C46               	subwf	btemp+8,w,c
  3403  002EFC  5047               	movf	btemp+9,w,c
  3404  002EFE  0A80               	xorlw	128
  3405  002F00  6E3E               	movwf	btemp,c
  3406  002F02  5049               	movf	btemp+11,w,c
  3407  002F04  0A80               	xorlw	128
  3408  002F06  583E               	subwfb	btemp,w,c
  3409  002F08  B0D8               	btfsc	status,0,c
  3410  002F0A  D08D               	goto	l6897
  3411                           
  3412                           ; BSR set to: 0
  3413                           ;gemsecs.c: 97:       if (V.r_checksum == H10[1].checksum) {
  3414  002F0C  0101               	movlb	1	; () banked
  3415  002F0E  510D               	movf	(_H10+13)& (0+255),w,b
  3416  002F10  0100               	movlb	0	; () banked
  3417  002F12  19D9               	xorwf	(_V+80)& (0+255),w,b	;volatile
  3418  002F14  E10E               	bnz	l6855
  3419  002F16  0101               	movlb	1	; () banked
  3420  002F18  510E               	movf	(_H10+14)& (0+255),w,b
  3421  002F1A  0100               	movlb	0	; () banked
  3422  002F1C  19DA               	xorwf	(_V+81)& (0+255),w,b	;volatile
  3423  002F1E  A4D8               	btfss	status,2,c
  3424  002F20  D008               	goto	l6855
  3425                           
  3426                           ; BSR set to: 0
  3427                           ;gemsecs.c: 98:        *r_link = LINK_STATE_ACK;
  3428                           ;stkvar	_r_link @ sp[(-1)+-1]
  3429  002F22  0EFE               	movlw	-2
  3430  002F24  50E3               	movf	plusw1,w,c
  3431  002F26  6ED9               	movwf	fsr2l,c
  3432  002F28  6ADA               	clrf	fsr2h,c
  3433  002F2A  0E03               	movlw	3
  3434  002F2C  D041               	goto	L8
  3435  002F2E                     l6853:
  3436  002F2E  ECF6  F028         	call	_UART1_Read	;wreg free
  3437  002F32                     l6855:
  3438                           
  3439                           ;gemsecs.c: 100:        while (UART1_is_rx_ready())
  3440  002F32  ECB3  F02C         	call	_UART1_is_rx_ready	;wreg free
  3441  002F36  503E               	movf	btemp,w,c
  3442  002F38  A4D8               	btfss	status,2,c
  3443  002F3A  D7F9               	goto	l6853
  3444                           
  3445                           ;gemsecs.c: 102:        WaitMs(500);
  3446  002F3C  0EF4               	movlw	244
  3447  002F3E  6EE6               	movwf	postinc1,c
  3448  002F40  0E01               	movlw	1
  3449  002F42  6EE6               	movwf	postinc1,c
  3450  002F44  ECAA  F029         	call	_WaitMs	;wreg free
  3451                           
  3452                           ;gemsecs.c: 103:        V.error = LINK_ERROR_CHECKSUM;
  3453  002F48  0E05               	movlw	5
  3454  002F4A  D746               	goto	L9
  3455  002F4C                     l6863:
  3456                           
  3457                           ;gemsecs.c: 112:   V.stream = H10[1].block.block.stream;
  3458  002F4C  0101               	movlb	1	; () banked
  3459  002F4E  5116               	movf	(_H10+22)& (0+255),w,b
  3460  002F50  0B7F               	andlw	127
  3461  002F52  0100               	movlb	0	; () banked
  3462  002F54  6FD5               	movwf	(_V+76)& (0+255),b	;volatile
  3463                           
  3464                           ; BSR set to: 0
  3465                           ;gemsecs.c: 113:   V.function = H10[1].block.block.function;
  3466  002F56  C115  F0D6         	movff	_H10+21,_V+77	;volatile
  3467                           
  3468                           ; BSR set to: 0
  3469                           ;gemsecs.c: 114:   V.systemb = H10[1].block.block.systemb;
  3470  002F5A  C10F  F0D1         	movff	_H10+15,_V+72	;volatile
  3471  002F5E  C110  F0D2         	movff	_H10+16,_V+73	;volatile
  3472  002F62  C111  F0D3         	movff	_H10+17,_V+74	;volatile
  3473  002F66  C112  F0D4         	movff	_H10+18,_V+75	;volatile
  3474                           
  3475                           ; BSR set to: 0
  3476                           ;gemsecs.c: 115:   V.rbit = H10[1].block.block.rbit;
  3477  002F6A  0101               	movlb	1	; () banked
  3478  002F6C  AF18               	btfss	(_H10+24)& (0+255),7,b
  3479  002F6E  D003               	bra	u3985
  3480  002F70  0100               	movlb	0	; () banked
  3481  002F72  81DD               	bsf	(_V+84)& (0+255),0,b	;volatile
  3482  002F74  D002               	bra	u3987
  3483  002F76                     u3985:
  3484  002F76  0100               	movlb	0	; () banked
  3485  002F78  91DD               	bcf	(_V+84)& (0+255),0,b	;volatile
  3486  002F7A                     u3987:
  3487                           
  3488                           ; BSR set to: 0
  3489                           ;gemsecs.c: 116:   V.wbit = H10[1].block.block.wbit;
  3490  002F7A  0101               	movlb	1	; () banked
  3491  002F7C  AF16               	btfss	(_H10+22)& (0+255),7,b
  3492  002F7E  D003               	bra	u3995
  3493  002F80  0100               	movlb	0	; () banked
  3494  002F82  83DD               	bsf	(_V+84)& (0+255),1,b	;volatile
  3495  002F84  D002               	bra	u3997
  3496  002F86                     u3995:
  3497  002F86  0100               	movlb	0	; () banked
  3498  002F88  93DD               	bcf	(_V+84)& (0+255),1,b	;volatile
  3499  002F8A                     u3997:
  3500                           
  3501                           ; BSR set to: 0
  3502                           ;gemsecs.c: 117:   V.ebit = H10[1].block.block.ebit;
  3503  002F8A  0101               	movlb	1	; () banked
  3504  002F8C  AF14               	btfss	(_H10+20)& (0+255),7,b
  3505  002F8E  D003               	bra	u4005
  3506  002F90  0100               	movlb	0	; () banked
  3507  002F92  85DD               	bsf	(_V+84)& (0+255),2,b	;volatile
  3508  002F94  D002               	bra	u4007
  3509  002F96                     u4005:
  3510  002F96  0100               	movlb	0	; () banked
  3511  002F98  95DD               	bcf	(_V+84)& (0+255),2,b	;volatile
  3512  002F9A                     u4007:
  3513                           
  3514                           ; BSR set to: 0
  3515                           ;gemsecs.c: 118:   UART1_Write(0x06);
  3516  002F9A  0E06               	movlw	6
  3517  002F9C  6EE6               	movwf	postinc1,c
  3518  002F9E  ECD7  F028         	call	_UART1_Write	;wreg free
  3519                           
  3520                           ; BSR set to: 57
  3521                           ;gemsecs.c: 119:   V.failed_receive = 0;
  3522  002FA2  0100               	movlb	0	; () banked
  3523  002FA4  99DD               	bcf	(_V+84)& (0+255),4,b	;volatile
  3524                           
  3525                           ; BSR set to: 0
  3526                           ;gemsecs.c: 120:   *r_link = LINK_STATE_DONE;
  3527                           ;stkvar	_r_link @ sp[(-1)+-1]
  3528  002FA6  0EFE               	movlw	-2
  3529  002FA8  50E3               	movf	plusw1,w,c
  3530  002FAA  6ED9               	movwf	fsr2l,c
  3531  002FAC  6ADA               	clrf	fsr2h,c
  3532  002FAE  0E04               	movlw	4
  3533  002FB0                     L8:
  3534  002FB0  6EDF               	movwf	indf2,c
  3535                           
  3536                           ;gemsecs.c: 121:   break;
  3537  002FB2  D039               	goto	l6897
  3538  002FB4                     l1533:
  3539                           
  3540                           ;gemsecs.c: 123:   V.failed_receive = 1;
  3541  002FB4  0100               	movlb	0	; () banked
  3542  002FB6  89DD               	bsf	(_V+84)& (0+255),4,b	;volatile
  3543                           
  3544                           ; BSR set to: 0
  3545                           ;gemsecs.c: 124:   UART1_Write(0x15);
  3546  002FB8  0E15               	movlw	21
  3547  002FBA  6EE6               	movwf	postinc1,c
  3548  002FBC  ECD7  F028         	call	_UART1_Write	;wreg free
  3549                           
  3550                           ; BSR set to: 57
  3551                           ;gemsecs.c: 125:   *r_link = LINK_STATE_ERROR;
  3552                           ;stkvar	_r_link @ sp[(-1)+-1]
  3553  002FC0  0EFE               	movlw	-2
  3554  002FC2  50E3               	movf	plusw1,w,c
  3555  002FC4  6ED9               	movwf	fsr2l,c
  3556  002FC6  6ADA               	clrf	fsr2h,c
  3557  002FC8  0E06               	movlw	6
  3558  002FCA  6EDF               	movwf	indf2,c
  3559                           
  3560                           ;gemsecs.c: 126:   while ((uart1RxCount)) {
  3561  002FCC  D002               	goto	l6887
  3562  002FCE                     l6885:
  3563                           
  3564                           ; BSR set to: 57
  3565                           ;gemsecs.c: 127:    UART1_Read();
  3566  002FCE  ECF6  F028         	call	_UART1_Read	;wreg free
  3567  002FD2                     l6887:
  3568                           
  3569                           ; BSR set to: 57
  3570                           ;gemsecs.c: 126:   while ((uart1RxCount)) {
  3571  002FD2  5038               	movf	_uart1RxCount,w,c	;volatile
  3572  002FD4  A4D8               	btfss	status,2,c
  3573  002FD6  D7FB               	goto	l6885
  3574                           
  3575                           ; BSR set to: 57
  3576                           ;gemsecs.c: 129:   retry = 3;
  3577  002FD8  0E03               	movlw	3
  3578  002FDA  6E5E               	movwf	r_protocol@retry,c
  3579                           
  3580                           ;gemsecs.c: 130:   break;
  3581  002FDC  D024               	goto	l6897
  3582  002FDE                     l1538:
  3583                           
  3584                           ;gemsecs.c: 134:   V.failed_receive = 0;
  3585  002FDE  0100               	movlb	0	; () banked
  3586  002FE0  99DD               	bcf	(_V+84)& (0+255),4,b	;volatile
  3587  002FE2  D702               	goto	l6815
  3588  002FE4                     l6895:
  3589                           
  3590                           ;stkvar	_r_link @ sp[(-1)+-1]
  3591  002FE4  0EFE               	movlw	-2
  3592  002FE6  50E3               	movf	plusw1,w,c
  3593  002FE8  6ED9               	movwf	fsr2l,c
  3594  002FEA  6ADA               	clrf	fsr2h,c
  3595  002FEC  50DF               	movf	indf2,w,c
  3596  002FEE  6E48               	movwf	btemp+10,c
  3597  002FF0  6A49               	clrf	btemp+11,c
  3598                           
  3599                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3600                           ; Switch size 1, requested type "simple"
  3601                           ; Number of cases is 1, Range of values is 0 to 0
  3602                           ; switch strategies available:
  3603                           ; Name         Instructions Cycles
  3604                           ; simple_byte            4     3 (average)
  3605                           ;	Chosen strategy is simple_byte
  3606  002FF2  5049               	movf	btemp+11,w,c
  3607  002FF4  0A00               	xorlw	0	; case 0
  3608  002FF6  A4D8               	btfss	status,2,c
  3609  002FF8  D6F7               	goto	l6815
  3610                           
  3611                           ; Switch size 1, requested type "simple"
  3612                           ; Number of cases is 7, Range of values is 0 to 6
  3613                           ; switch strategies available:
  3614                           ; Name         Instructions Cycles
  3615                           ; simple_byte           22    12 (average)
  3616                           ;	Chosen strategy is simple_byte
  3617  002FFA  5048               	movf	btemp+10,w,c
  3618  002FFC  0A00               	xorlw	0	; case 0
  3619  002FFE  B4D8               	btfsc	status,2,c
  3620  003000  D698               	goto	l6785
  3621  003002  0A01               	xorlw	1	; case 1
  3622  003004  B4D8               	btfsc	status,2,c
  3623  003006  D6B0               	goto	l1513
  3624  003008  0A03               	xorlw	3	; case 2
  3625  00300A  B4D8               	btfsc	status,2,c
  3626  00300C  D6D9               	goto	l6807
  3627  00300E  0A01               	xorlw	1	; case 3
  3628  003010  B4D8               	btfsc	status,2,c
  3629  003012  D79C               	goto	l6863
  3630  003014  0A07               	xorlw	7	; case 4
  3631  003016  B4D8               	btfsc	status,2,c
  3632  003018  D7E2               	goto	l1538
  3633  00301A  0A01               	xorlw	1	; case 5
  3634  00301C  B4D8               	btfsc	status,2,c
  3635  00301E  D7CA               	goto	l1533
  3636  003020  0A03               	xorlw	3	; case 6
  3637  003022  A4D8               	btfss	status,2,c
  3638  003024  D6E1               	goto	l6815
  3639  003026                     l6897:
  3640                           
  3641                           ;gemsecs.c: 140:  return *r_link;
  3642                           ;stkvar	_r_link @ sp[(-1)+-1]
  3643  003026  0EFE               	movlw	-2
  3644  003028  50E3               	movf	plusw1,w,c
  3645  00302A  6ED9               	movwf	fsr2l,c
  3646  00302C  6ADA               	clrf	fsr2h,c
  3647  00302E  50DF               	movf	indf2,w,c
  3648  003030  6E3E               	movwf	btemp,c
  3649                           
  3650                           ; _r_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  3651  003032  52E5               	movf	postdec1,f,c
  3652  003034  52E5               	movf	postdec1,f,c
  3653  003036  0012               	return		;funcret
  3654  003038                     __end_of_r_protocol:
  3655                           	opt callstack 0
  3656                           
  3657 ;; *************** function _secs_send *****************
  3658 ;; Defined at:
  3659 ;;		line 236 in file "gemsecs.c"
  3660 ;; Parameters:    Size  Location     Type
  3661 ;;  byte_block      2  [STACK] PTR unsigned char 
  3662 ;;		 -> H53(112), H24(27), H18(21), H14(17), 
  3663 ;;		 -> H13(16), H12(15), H10(65), 
  3664 ;;  length          1  [STACK] unsigned char 
  3665 ;;  fake            1  [STACK] _Bool 
  3666 ;; Auto vars:     Size  Location     Type
  3667 ;;  k               2  [STACK] PTR unsigned char 
  3668 ;;		 -> H53(112), H24(27), H18(21), H14(17), 
  3669 ;;		 -> H13(16), H12(15), H10(65), 
  3670 ;;  checksum        2  [STACK] unsigned short 
  3671 ;;  i               1  [STACK] unsigned char 
  3672 ;; Return value:  Size  Location     Type
  3673 ;;                  1  [STACK] _Bool 
  3674 ;; Registers used:
  3675 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11
  3676 ;; Tracked objects:
  3677 ;;		On entry : 0/0
  3678 ;;		On exit  : 0/0
  3679 ;;		Unchanged: 0/0
  3680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3685 ;;Total ram usage:        0 bytes
  3686 ;; Hardware stack levels used:    1
  3687 ;; Hardware stack levels required when called:    4
  3688 ;; This function calls:
  3689 ;;		_UART1_Write
  3690 ;;		_UART1_is_tx_ready
  3691 ;;		_UART1_put_buffer
  3692 ;;		_block_checksum
  3693 ;; This function is called by:
  3694 ;;		_r_protocol
  3695 ;;		_t_protocol
  3696 ;; This function uses a reentrant model
  3697 ;;
  3698                           
  3699                           	psect	text5
  3700  003D06                     __ptext5:
  3701                           	opt callstack 0
  3702  003D06                     _secs_send:
  3703                           	opt callstack 0
  3704                           
  3705                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3706  003D06  0E05               	movlw	5
  3707  003D08  26E1               	addwf	fsr1l,f,c
  3708  003D0A  0E00               	movlw	0
  3709  003D0C  22E2               	addwfc	fsr1h,f,c
  3710                           
  3711                           ;gemsecs.c: 236: _Bool secs_send(uint8_t *byte_block, uint8_t length, _Bool fake);gemsec
      +                          s.c: 237: {;gemsecs.c: 238:  uint8_t i, *k;;gemsecs.c: 239:  uint16_t checksum;;gemsecs.
      +                          c: 241:  k = (uint8_t *) byte_block;
  3712                           ;stkvar	_byte_block @ sp[(-5)+-2]
  3713                           
  3714                           ;incstack = 0
  3715  003D0E  0EF9               	movlw	-7
  3716  003D10  006F FF8C  F048    	movff	plusw1,btemp+10
  3717  003D16  0EFA               	movlw	-6
  3718  003D18  006F FF8C  F049    	movff	plusw1,btemp+11
  3719                           
  3720                           ;stkvar	_k @ sp[(-5)+0]
  3721  003D1E  0EFC               	movlw	-4
  3722  003D20  0060  F127  FFE3   	movff	btemp+11,plusw1
  3723  003D26  0EFB               	movlw	-5
  3724  003D28  0060  F123  FFE3   	movff	btemp+10,plusw1
  3725                           
  3726                           ;gemsecs.c: 243:  V.error = LINK_ERROR_NONE;
  3727  003D2E  0100               	movlb	0	; () banked
  3728  003D30  6BD7               	clrf	(_V+78)& (0+255),b	;volatile
  3729                           
  3730                           ; BSR set to: 0
  3731                           ;gemsecs.c: 244:  if ((length - 3) != k[length - 1]) {
  3732                           ;stkvar	_length @ sp[(-5)+-3]
  3733  003D32  0EF8               	movlw	-8
  3734  003D34  50E3               	movf	plusw1,w,c
  3735  003D36  6E48               	movwf	btemp+10,c
  3736  003D38  6A49               	clrf	btemp+11,c
  3737                           
  3738                           ;stkvar	_k @ sp[(-5)+0]
  3739  003D3A  0EFB               	movlw	-5
  3740  003D3C  50E3               	movf	plusw1,w,c
  3741  003D3E  2648               	addwf	btemp+10,f,c
  3742  003D40  0EFC               	movlw	-4
  3743  003D42  50E3               	movf	plusw1,w,c
  3744  003D44  2249               	addwfc	btemp+11,f,c
  3745  003D46  0EFF               	movlw	255
  3746  003D48  2448               	addwf	btemp+10,w,c
  3747  003D4A  6ED9               	movwf	fsr2l,c
  3748  003D4C  0EFF               	movlw	255
  3749  003D4E  2049               	addwfc	btemp+11,w,c
  3750  003D50  6EDA               	movwf	fsr2h,c
  3751  003D52  50DF               	movf	indf2,w,c
  3752  003D54  6E48               	movwf	btemp+10,c
  3753  003D56  6A49               	clrf	btemp+11,c
  3754  003D58  0EFD               	movlw	253
  3755  003D5A  6E46               	movwf	btemp+8,c
  3756  003D5C  0EFF               	movlw	255
  3757  003D5E  6E47               	movwf	btemp+9,c
  3758                           
  3759                           ;stkvar	_length @ sp[(-5)+-3]
  3760  003D60  0EF8               	movlw	-8
  3761  003D62  50E3               	movf	plusw1,w,c
  3762  003D64  6E44               	movwf	btemp+6,c
  3763  003D66  6A45               	clrf	btemp+7,c
  3764  003D68  5046               	movf	btemp+8,w,c
  3765  003D6A  2644               	addwf	btemp+6,f,c
  3766  003D6C  5047               	movf	btemp+9,w,c
  3767  003D6E  2245               	addwfc	btemp+7,f,c
  3768  003D70  5048               	movf	btemp+10,w,c
  3769  003D72  1844               	xorwf	btemp+6,w,c
  3770  003D74  E104               	bnz	u3810
  3771  003D76  5049               	movf	btemp+11,w,c
  3772  003D78  1845               	xorwf	btemp+7,w,c
  3773  003D7A  B4D8               	btfsc	status,2,c
  3774  003D7C  D003               	goto	l6677
  3775  003D7E                     u3810:
  3776                           
  3777                           ; BSR set to: 0
  3778                           ;gemsecs.c: 245:   V.error = LINK_ERROR_SEND;
  3779  003D7E  0E08               	movlw	8
  3780  003D80  6FD7               	movwf	(_V+78)& (0+255),b	;volatile
  3781  003D82  D098               	goto	l1577
  3782  003D84                     l6677:
  3783                           
  3784                           ; BSR set to: 0
  3785                           ;gemsecs.c: 254:  checksum = block_checksum(&k[2], length - 3);
  3786  003D84  0EFD               	movlw	253
  3787  003D86  6E48               	movwf	btemp+10,c
  3788  003D88  0EFF               	movlw	255
  3789  003D8A  6E49               	movwf	btemp+11,c
  3790                           
  3791                           ;stkvar	_length @ sp[(-5)+-3]
  3792  003D8C  0EF8               	movlw	-8
  3793  003D8E  50E3               	movf	plusw1,w,c
  3794  003D90  6E46               	movwf	btemp+8,c
  3795  003D92  6A47               	clrf	btemp+9,c
  3796  003D94  5048               	movf	btemp+10,w,c
  3797  003D96  2646               	addwf	btemp+8,f,c
  3798  003D98  5049               	movf	btemp+11,w,c
  3799  003D9A  2247               	addwfc	btemp+9,f,c
  3800  003D9C  0060  F11B  FFE6   	movff	btemp+8,postinc1
  3801  003DA2  0060  F11F  FFE6   	movff	btemp+9,postinc1
  3802                           
  3803                           ;stkvar	_k @ sp[(-7)+0]
  3804  003DA8  0EF9               	movlw	-7
  3805  003DAA  50E3               	movf	plusw1,w,c
  3806  003DAC  0F02               	addlw	2
  3807  003DAE  6E48               	movwf	btemp+10,c
  3808  003DB0  0EFA               	movlw	-6
  3809  003DB2  006F FF8C  F049    	movff	plusw1,btemp+11
  3810  003DB8  0E00               	movlw	0
  3811  003DBA  2249               	addwfc	btemp+11,f,c
  3812  003DBC  0060  F123  FFE6   	movff	btemp+10,postinc1
  3813  003DC2  0060  F127  FFE6   	movff	btemp+11,postinc1
  3814  003DC8  EC7A  F022         	call	_block_checksum	;wreg free
  3815                           
  3816                           ;stkvar	_checksum @ sp[(-5)+2]
  3817  003DCC  0EFD               	movlw	-3
  3818  003DCE  0060  F0FB  FFE3   	movff	btemp,plusw1
  3819  003DD4  0EFE               	movlw	-2
  3820  003DD6  0060  F0FF  FFE3   	movff	btemp+1,plusw1
  3821                           
  3822                           ;gemsecs.c: 255:  k[0] = checksum & 0xff;
  3823                           ;stkvar	_checksum @ sp[(-5)+2]
  3824                           ;stkvar	_k @ sp[(-5)+0]
  3825  003DDC  0EFB               	movlw	-5
  3826  003DDE  006F FF8F FFD9     	movff	plusw1,fsr2l
  3827  003DE4  0EFC               	movlw	-4
  3828  003DE6  006F FF8F FFDA     	movff	plusw1,fsr2h
  3829  003DEC  0EFD               	movlw	-3
  3830  003DEE  006F FF8F FFDF     	movff	plusw1,indf2
  3831                           
  3832                           ;gemsecs.c: 256:  k[1] = (checksum >> 8)&0xff;
  3833                           ;stkvar	_checksum @ sp[(-5)+2]
  3834  003DF4  0EFE               	movlw	254
  3835  003DF6  24E1               	addwf	fsr1l,w,c
  3836  003DF8  6ED9               	movwf	fsr2l,c
  3837  003DFA  0EFF               	movlw	255
  3838  003DFC  20E2               	addwfc	fsr1h,w,c
  3839  003DFE  6EDA               	movwf	fsr2h,c
  3840                           
  3841                           ;stkvar	_k @ sp[(-5)+0]
  3842  003E00  0EFB               	movlw	-5
  3843  003E02  006F FF8C  F048    	movff	plusw1,btemp+10
  3844  003E08  0EFC               	movlw	-4
  3845  003E0A  006F FF8C  F049    	movff	plusw1,btemp+11
  3846  003E10  0E01               	movlw	1
  3847  003E12  2448               	addwf	btemp+10,w,c
  3848  003E14  6EE9               	movwf	fsr0l,c
  3849  003E16  0E00               	movlw	0
  3850  003E18  2049               	addwfc	btemp+11,w,c
  3851  003E1A  6EEA               	movwf	fsr0h,c
  3852  003E1C  006F FF7F FFEF     	movff	indf2,indf0
  3853                           
  3854                           ;gemsecs.c: 257:  V.t_checksum = checksum;
  3855                           ;stkvar	_checksum @ sp[(-5)+2]
  3856  003E22  0EFD               	movlw	-3
  3857  003E24  006F FF8C  F0DB    	movff	plusw1,_V+82	;volatile
  3858  003E2A  0EFE               	movlw	-2
  3859  003E2C  006F FF8C  F0DC    	movff	plusw1,_V+83	;volatile
  3860  003E32                     l6685:
  3861  003E32  ECAF  F02C         	call	_UART1_is_tx_ready	;wreg free
  3862  003E36  0E3F               	movlw	63
  3863  003E38  643E               	cpfsgt	btemp,c
  3864  003E3A  D7FB               	goto	l6685
  3865                           
  3866                           ;gemsecs.c: 260:  for (i = length; i > 0; i--) {
  3867                           ;stkvar	_length @ sp[(-5)+-3]
  3868                           ;stkvar	_i @ sp[(-5)+4]
  3869  003E3C  0EF8               	movlw	-8
  3870  003E3E  006F FF8C  F03E    	movff	plusw1,btemp
  3871  003E44  0EFF               	movlw	-1
  3872  003E46  0060  F0FB  FFE3   	movff	btemp,plusw1
  3873  003E4C                     l6689:
  3874                           
  3875                           ;stkvar	_i @ sp[(-5)+4]
  3876  003E4C  0EFF               	movlw	-1
  3877  003E4E  50E3               	movf	plusw1,w,c
  3878  003E50  B4D8               	btfsc	status,2,c
  3879  003E52  D030               	goto	l1577
  3880                           
  3881                           ;gemsecs.c: 261:   if (fake) {
  3882                           ;stkvar	_fake @ sp[(-5)+-4]
  3883  003E54  0EF7               	movlw	-9
  3884  003E56  50E3               	movf	plusw1,w,c
  3885  003E58  B4D8               	btfsc	status,2,c
  3886  003E5A  D015               	goto	l6697
  3887                           
  3888                           ;gemsecs.c: 262:    UART1_put_buffer(k[i - 1]);
  3889                           ;stkvar	_i @ sp[(-5)+4]
  3890  003E5C  0EFF               	movlw	-1
  3891  003E5E  50E3               	movf	plusw1,w,c
  3892  003E60  6E48               	movwf	btemp+10,c
  3893  003E62  6A49               	clrf	btemp+11,c
  3894                           
  3895                           ;stkvar	_k @ sp[(-5)+0]
  3896  003E64  0EFB               	movlw	-5
  3897  003E66  50E3               	movf	plusw1,w,c
  3898  003E68  2648               	addwf	btemp+10,f,c
  3899  003E6A  0EFC               	movlw	-4
  3900  003E6C  50E3               	movf	plusw1,w,c
  3901  003E6E  2249               	addwfc	btemp+11,f,c
  3902  003E70  0EFF               	movlw	255
  3903  003E72  2448               	addwf	btemp+10,w,c
  3904  003E74  6ED9               	movwf	fsr2l,c
  3905  003E76  0EFF               	movlw	255
  3906  003E78  2049               	addwfc	btemp+11,w,c
  3907  003E7A  6EDA               	movwf	fsr2h,c
  3908  003E7C  50DF               	movf	indf2,w,c
  3909  003E7E  6EE6               	movwf	postinc1,c
  3910  003E80  EC95  F029         	call	_UART1_put_buffer	;wreg free
  3911                           
  3912                           ;gemsecs.c: 263:   } else {
  3913  003E84  D014               	goto	l6699
  3914  003E86                     l6697:
  3915                           
  3916                           ;gemsecs.c: 264:    UART1_Write(k[i - 1]);
  3917                           ;stkvar	_i @ sp[(-5)+4]
  3918  003E86  0EFF               	movlw	-1
  3919  003E88  50E3               	movf	plusw1,w,c
  3920  003E8A  6E48               	movwf	btemp+10,c
  3921  003E8C  6A49               	clrf	btemp+11,c
  3922                           
  3923                           ;stkvar	_k @ sp[(-5)+0]
  3924  003E8E  0EFB               	movlw	-5
  3925  003E90  50E3               	movf	plusw1,w,c
  3926  003E92  2648               	addwf	btemp+10,f,c
  3927  003E94  0EFC               	movlw	-4
  3928  003E96  50E3               	movf	plusw1,w,c
  3929  003E98  2249               	addwfc	btemp+11,f,c
  3930  003E9A  0EFF               	movlw	255
  3931  003E9C  2448               	addwf	btemp+10,w,c
  3932  003E9E  6ED9               	movwf	fsr2l,c
  3933  003EA0  0EFF               	movlw	255
  3934  003EA2  2049               	addwfc	btemp+11,w,c
  3935  003EA4  6EDA               	movwf	fsr2h,c
  3936  003EA6  50DF               	movf	indf2,w,c
  3937  003EA8  6EE6               	movwf	postinc1,c
  3938  003EAA  ECD7  F028         	call	_UART1_Write	;wreg free
  3939  003EAE                     l6699:
  3940                           
  3941                           ; BSR set to: 57
  3942                           ;gemsecs.c: 266:  }
  3943                           ;stkvar	_i @ sp[(-5)+4]
  3944  003EAE  0EFF               	movlw	-1
  3945  003EB0  06E3               	decf	plusw1,f,c
  3946  003EB2  D7CC               	goto	l6689
  3947  003EB4                     l1577:
  3948                           
  3949                           ; _secs_send: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  3950  003EB4  0EF7               	movlw	247
  3951  003EB6  26E1               	addwf	fsr1l,f,c
  3952  003EB8  0EFF               	movlw	255
  3953  003EBA  22E2               	addwfc	fsr1h,f,c
  3954  003EBC  0012               	return		;funcret
  3955  003EBE                     __end_of_secs_send:
  3956                           	opt callstack 0
  3957                           
  3958 ;; *************** function _block_checksum *****************
  3959 ;; Defined at:
  3960 ;;		line 16 in file "gemsecs.c"
  3961 ;; Parameters:    Size  Location     Type
  3962 ;;  byte_block      2  [STACK] PTR unsigned char 
  3963 ;;		 -> H53(112), H24(27), H18(21), H14(17), 
  3964 ;;		 -> H13(16), H12(15), H10(65), 
  3965 ;;  byte_count      2  [STACK] unsigned short 
  3966 ;; Auto vars:     Size  Location     Type
  3967 ;;  i               2  [STACK] unsigned short 
  3968 ;;  sum             2  [STACK] unsigned short 
  3969 ;; Return value:  Size  Location     Type
  3970 ;;                  2  [STACK] unsigned short 
  3971 ;; Registers used:
  3972 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  3973 ;; Tracked objects:
  3974 ;;		On entry : 3F/0
  3975 ;;		On exit  : 0/0
  3976 ;;		Unchanged: 0/0
  3977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3982 ;;Total ram usage:        0 bytes
  3983 ;; Hardware stack levels used:    1
  3984 ;; Hardware stack levels required when called:    3
  3985 ;; This function calls:
  3986 ;;		Nothing
  3987 ;; This function is called by:
  3988 ;;		_secs_send
  3989 ;; This function uses a reentrant model
  3990 ;;
  3991                           
  3992                           	psect	text6
  3993  0044F4                     __ptext6:
  3994                           	opt callstack 0
  3995  0044F4                     _block_checksum:
  3996                           	opt callstack 0
  3997                           
  3998                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3999  0044F4  52E6               	movf	postinc1,f,c
  4000  0044F6  52E6               	movf	postinc1,f,c
  4001  0044F8  52E6               	movf	postinc1,f,c
  4002  0044FA  52E6               	movf	postinc1,f,c
  4003                           
  4004                           ;gemsecs.c: 16: uint16_t block_checksum(uint8_t *byte_block, uint16_t byte_count);gemsec
      +                          s.c: 17: {;gemsecs.c: 18:  uint16_t sum = 0, i;
  4005                           ;stkvar	_sum @ sp[(-4)+2]
  4006                           
  4007                           ;incstack = 0
  4008  0044FC  0EFE               	movlw	-2
  4009  0044FE  6AE3               	clrf	plusw1,c
  4010  004500  0EFF               	movlw	-1
  4011  004502  6AE3               	clrf	plusw1,c
  4012                           
  4013                           ;gemsecs.c: 20:  for (i = 0; i < byte_count; i++) {
  4014                           ;stkvar	_i @ sp[(-4)+0]
  4015  004504  0EFC               	movlw	-4
  4016  004506  6AE3               	clrf	plusw1,c
  4017  004508  0EFD               	movlw	-3
  4018  00450A  6AE3               	clrf	plusw1,c
  4019  00450C  D039               	goto	l6617
  4020  00450E                     l6613:
  4021                           
  4022                           ;gemsecs.c: 21:   sum += byte_block[i];
  4023                           ;stkvar	_i @ sp[(-4)+0]
  4024  00450E  0EFC               	movlw	-4
  4025  004510  006F FF8C  F048    	movff	plusw1,btemp+10
  4026  004516  0EFD               	movlw	-3
  4027  004518  006F FF8C  F049    	movff	plusw1,btemp+11
  4028                           
  4029                           ;stkvar	_byte_block @ sp[(-4)+-2]
  4030  00451E  0EFA               	movlw	-6
  4031  004520  006F FF8C  F046    	movff	plusw1,btemp+8
  4032  004526  0EFB               	movlw	-5
  4033  004528  006F FF8C  F047    	movff	plusw1,btemp+9
  4034  00452E  5048               	movf	btemp+10,w,c
  4035  004530  2446               	addwf	btemp+8,w,c
  4036  004532  6ED9               	movwf	fsr2l,c
  4037  004534  5049               	movf	btemp+11,w,c
  4038  004536  2047               	addwfc	btemp+9,w,c
  4039  004538  6EDA               	movwf	fsr2h,c
  4040  00453A  50DF               	movf	indf2,w,c
  4041  00453C  6E49               	movwf	btemp+11,c
  4042                           
  4043                           ;stkvar	_sum @ sp[(-4)+2]
  4044  00453E  0EFE               	movlw	-2
  4045  004540  50E3               	movf	plusw1,w,c
  4046  004542  2449               	addwf	btemp+11,w,c
  4047  004544  6E3E               	movwf	btemp,c
  4048  004546  0EFE               	movlw	-2
  4049  004548  0060  F0FB  FFE3   	movff	btemp,plusw1
  4050  00454E  6A3E               	clrf	btemp,c
  4051  004550  0EFF               	movlw	-1
  4052  004552  50E3               	movf	plusw1,w,c
  4053  004554  223E               	addwfc	btemp,f,c
  4054  004556  0EFF               	movlw	-1
  4055  004558  0060  F0FB  FFE3   	movff	btemp,plusw1
  4056                           
  4057                           ;gemsecs.c: 22:  }
  4058                           ;stkvar	_i @ sp[(-4)+0]
  4059  00455E  0EFC               	movlw	-4
  4060  004560  50E3               	movf	plusw1,w,c
  4061  004562  0F01               	addlw	1
  4062  004564  6E3E               	movwf	btemp,c
  4063  004566  0EFC               	movlw	-4
  4064  004568  0060  F0FB  FFE3   	movff	btemp,plusw1
  4065  00456E  6A3E               	clrf	btemp,c
  4066  004570  0EFD               	movlw	-3
  4067  004572  50E3               	movf	plusw1,w,c
  4068  004574  203E               	addwfc	btemp,w,c
  4069  004576  6E3E               	movwf	btemp,c
  4070  004578  0EFD               	movlw	-3
  4071  00457A  0060  F0FB  FFE3   	movff	btemp,plusw1
  4072  004580                     l6617:
  4073                           
  4074                           ;stkvar	_byte_count @ sp[(-4)+-4]
  4075  004580  0EF8               	movlw	-8
  4076  004582  006F FF8C  F048    	movff	plusw1,btemp+10
  4077  004588  0EF9               	movlw	-7
  4078  00458A  006F FF8C  F049    	movff	plusw1,btemp+11
  4079                           
  4080                           ;stkvar	_i @ sp[(-4)+0]
  4081  004590  0EFC               	movlw	-4
  4082  004592  006F FF8C  F046    	movff	plusw1,btemp+8
  4083  004598  0EFD               	movlw	-3
  4084  00459A  006F FF8C  F047    	movff	plusw1,btemp+9
  4085  0045A0  5048               	movf	btemp+10,w,c
  4086  0045A2  5C46               	subwf	btemp+8,w,c
  4087  0045A4  5049               	movf	btemp+11,w,c
  4088  0045A6  5847               	subwfb	btemp+9,w,c
  4089  0045A8  A0D8               	btfss	status,0,c
  4090  0045AA  D7B1               	goto	l6613
  4091                           
  4092                           ;gemsecs.c: 23:  return sum;
  4093                           ;stkvar	_sum @ sp[(-4)+2]
  4094  0045AC  0EFE               	movlw	-2
  4095  0045AE  006F FF8C  F03E    	movff	plusw1,btemp
  4096  0045B4  0EFF               	movlw	-1
  4097  0045B6  006F FF8C  F03F    	movff	plusw1,btemp+1
  4098                           
  4099                           ; _block_checksum: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4
      +                          , argsize = 4, vargsize = 0
  4100  0045BC  0EF8               	movlw	248
  4101  0045BE  26E1               	addwf	fsr1l,f,c
  4102  0045C0  0EFF               	movlw	255
  4103  0045C2  22E2               	addwfc	fsr1h,f,c
  4104  0045C4  0012               	return		;funcret
  4105  0045C6                     __end_of_block_checksum:
  4106                           	opt callstack 0
  4107                           
  4108 ;; *************** function _UART1_put_buffer *****************
  4109 ;; Defined at:
  4110 ;;		line 250 in file "mcc_generated_files/uart1.c"
  4111 ;; Parameters:    Size  Location     Type
  4112 ;;  bufData         1  [STACK] unsigned char 
  4113 ;; Auto vars:     Size  Location     Type
  4114 ;;		None
  4115 ;; Return value:  Size  Location     Type
  4116 ;;                  1  [STACK] void 
  4117 ;; Registers used:
  4118 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4119 ;; Tracked objects:
  4120 ;;		On entry : 0/0
  4121 ;;		On exit  : 3F/39
  4122 ;;		Unchanged: 0/0
  4123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4128 ;;Total ram usage:        0 bytes
  4129 ;; Hardware stack levels used:    1
  4130 ;; Hardware stack levels required when called:    3
  4131 ;; This function calls:
  4132 ;;		Nothing
  4133 ;; This function is called by:
  4134 ;;		_main
  4135 ;;		_t_protocol
  4136 ;;		_secs_send
  4137 ;; This function uses a reentrant model
  4138 ;;
  4139                           
  4140                           	psect	text7
  4141  00532A                     __ptext7:
  4142                           	opt callstack 0
  4143  00532A                     _UART1_put_buffer:
  4144                           	opt callstack 25
  4145                           
  4146                           ;mcc_generated_files/uart1.c: 250: void UART1_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart1.c: 251: {;mcc_generated_files/uart1.c: 252:  PIE3bits.U1RXIE = 0;
  4147                           
  4148                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4149                           ;incstack = 0
  4150  00532A  0139               	movlb	57	; () banked
  4151  00532C  9793               	bcf	147,3,b	;volatile
  4152                           
  4153                           ; BSR set to: 57
  4154                           ;mcc_generated_files/uart1.c: 253:  uart1RxBuffer[uart1RxHead++] = bufData;
  4155                           ;stkvar	_bufData @ sp[(0)+-1]
  4156  00532E  0E92               	movlw	low _uart1RxBuffer
  4157  005330  243A               	addwf	_uart1RxHead,w,c	;volatile
  4158  005332  6ED9               	movwf	fsr2l,c
  4159  005334  6ADA               	clrf	fsr2h,c
  4160  005336  0E01               	movlw	high _uart1RxBuffer
  4161  005338  22DA               	addwfc	fsr2h,f,c
  4162  00533A  0EFF               	movlw	-1
  4163  00533C  006F FF8F FFDF     	movff	plusw1,indf2
  4164                           
  4165                           ; BSR set to: 57
  4166  005342  2A3A               	incf	_uart1RxHead,f,c	;volatile
  4167                           
  4168                           ; BSR set to: 57
  4169                           ;mcc_generated_files/uart1.c: 254:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
  4170  005344  0E3F               	movlw	63
  4171  005346  643A               	cpfsgt	_uart1RxHead,c
  4172  005348  D001               	goto	l5033
  4173                           
  4174                           ; BSR set to: 57
  4175                           ;mcc_generated_files/uart1.c: 255:   uart1RxHead = 0;
  4176  00534A  6A3A               	clrf	_uart1RxHead,c	;volatile
  4177  00534C                     l5033:
  4178                           
  4179                           ; BSR set to: 57
  4180                           ;mcc_generated_files/uart1.c: 258:  uart1RxCount++;
  4181  00534C  2A38               	incf	_uart1RxCount,f,c	;volatile
  4182                           
  4183                           ; BSR set to: 57
  4184                           ;mcc_generated_files/uart1.c: 259:  PIE3bits.U1RXIE = 1;
  4185  00534E  8793               	bsf	147,3,b	;volatile
  4186                           
  4187                           ; BSR set to: 57
  4188                           ; _UART1_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  4189  005350  52E5               	movf	postdec1,f,c
  4190  005352  0012               	return		;funcret
  4191  005354                     __end_of_UART1_put_buffer:
  4192                           	opt callstack 0
  4193                           
  4194 ;; *************** function _UART1_is_tx_ready *****************
  4195 ;; Defined at:
  4196 ;;		line 151 in file "mcc_generated_files/uart1.c"
  4197 ;; Parameters:    Size  Location     Type
  4198 ;;		None
  4199 ;; Auto vars:     Size  Location     Type
  4200 ;;		None
  4201 ;; Return value:  Size  Location     Type
  4202 ;;                  1  [STACK] unsigned char 
  4203 ;; Registers used:
  4204 ;;		btemp
  4205 ;; Tracked objects:
  4206 ;;		On entry : 0/0
  4207 ;;		On exit  : 0/0
  4208 ;;		Unchanged: 0/0
  4209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4214 ;;Total ram usage:        0 bytes
  4215 ;; Hardware stack levels used:    1
  4216 ;; Hardware stack levels required when called:    3
  4217 ;; This function calls:
  4218 ;;		Nothing
  4219 ;; This function is called by:
  4220 ;;		_secs_send
  4221 ;; This function uses a reentrant model
  4222 ;;
  4223                           
  4224                           	psect	text8
  4225  00595E                     __ptext8:
  4226                           	opt callstack 0
  4227  00595E                     _UART1_is_tx_ready:
  4228                           	opt callstack 25
  4229                           
  4230                           ;mcc_generated_files/uart1.c: 153:  return uart1TxBufferRemaining;
  4231                           
  4232                           ; BSR set to: 57
  4233                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4234                           ;incstack = 0
  4235  00595E  0060  F0EC  F03E   	movff	_uart1TxBufferRemaining,btemp	;volatile
  4236                           
  4237                           ; _UART1_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  4238  005964  0012               	return		;funcret
  4239  005966                     __end_of_UART1_is_tx_ready:
  4240                           	opt callstack 0
  4241                           
  4242 ;; *************** function _UART1_Write *****************
  4243 ;; Defined at:
  4244 ;;		line 179 in file "mcc_generated_files/uart1.c"
  4245 ;; Parameters:    Size  Location     Type
  4246 ;;  txData          1  [STACK] unsigned char 
  4247 ;; Auto vars:     Size  Location     Type
  4248 ;;		None
  4249 ;; Return value:  Size  Location     Type
  4250 ;;                  1  [STACK] void 
  4251 ;; Registers used:
  4252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4253 ;; Tracked objects:
  4254 ;;		On entry : 0/0
  4255 ;;		On exit  : 3F/39
  4256 ;;		Unchanged: 0/0
  4257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4262 ;;Total ram usage:        0 bytes
  4263 ;; Hardware stack levels used:    1
  4264 ;; Hardware stack levels required when called:    3
  4265 ;; This function calls:
  4266 ;;		Nothing
  4267 ;; This function is called by:
  4268 ;;		_r_protocol
  4269 ;;		_t_protocol
  4270 ;;		_secs_send
  4271 ;; This function uses a reentrant model
  4272 ;;
  4273                           
  4274                           	psect	text9
  4275  0051AE                     __ptext9:
  4276                           	opt callstack 0
  4277  0051AE                     _UART1_Write:
  4278                           	opt callstack 25
  4279                           
  4280                           ;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  4281                           
  4282                           ;mcc_generated_files/uart1.c: 179: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 180: {;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  4283                           
  4284                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4285                           ;incstack = 0
  4286  0051AE  503B               	movf	_uart1TxBufferRemaining,w,c	;volatile
  4287  0051B0  B4D8               	btfsc	status,2,c
  4288  0051B2  D7FD               	goto	_UART1_Write
  4289                           
  4290                           ;mcc_generated_files/uart1.c: 184:  if (0 == PIE3bits.U1TXIE) {
  4291  0051B4  0139               	movlb	57	; () banked
  4292  0051B6  B993               	btfsc	147,4,b	;volatile
  4293  0051B8  D005               	goto	l579
  4294                           
  4295                           ; BSR set to: 57
  4296                           ;mcc_generated_files/uart1.c: 185:   U1TXB = txData;
  4297                           ;stkvar	_txData @ sp[(0)+-1]
  4298  0051BA  0EFF               	movlw	-1
  4299  0051BC  006F FF8F FDEA     	movff	plusw1,15850	;volatile
  4300                           
  4301                           ;mcc_generated_files/uart1.c: 186:  } else {
  4302  0051C2  D011               	goto	l5021
  4303  0051C4                     l579:
  4304                           
  4305                           ; BSR set to: 57
  4306                           ;mcc_generated_files/uart1.c: 187:   PIE3bits.U1TXIE = 0;
  4307  0051C4  9993               	bcf	147,4,b	;volatile
  4308                           
  4309                           ; BSR set to: 57
  4310                           ;mcc_generated_files/uart1.c: 188:   uart1TxBuffer[uart1TxHead++] = txData;
  4311                           ;stkvar	_txData @ sp[(0)+-1]
  4312  0051C6  0E80               	movlw	low _uart1TxBuffer
  4313  0051C8  243D               	addwf	_uart1TxHead,w,c	;volatile
  4314  0051CA  6ED9               	movwf	fsr2l,c
  4315  0051CC  6ADA               	clrf	fsr2h,c
  4316  0051CE  0E02               	movlw	high _uart1TxBuffer
  4317  0051D0  22DA               	addwfc	fsr2h,f,c
  4318  0051D2  0EFF               	movlw	-1
  4319  0051D4  006F FF8F FFDF     	movff	plusw1,indf2
  4320                           
  4321                           ; BSR set to: 57
  4322  0051DA  2A3D               	incf	_uart1TxHead,f,c	;volatile
  4323                           
  4324                           ; BSR set to: 57
  4325                           ;mcc_generated_files/uart1.c: 189:   if (sizeof(uart1TxBuffer) <= uart1TxHead) {
  4326  0051DC  0E3F               	movlw	63
  4327  0051DE  643D               	cpfsgt	_uart1TxHead,c
  4328  0051E0  D001               	goto	l5019
  4329                           
  4330                           ; BSR set to: 57
  4331                           ;mcc_generated_files/uart1.c: 190:    uart1TxHead = 0;
  4332  0051E2  6A3D               	clrf	_uart1TxHead,c	;volatile
  4333  0051E4                     l5019:
  4334                           
  4335                           ; BSR set to: 57
  4336                           ;mcc_generated_files/uart1.c: 192:   uart1TxBufferRemaining--;
  4337  0051E4  063B               	decf	_uart1TxBufferRemaining,f,c	;volatile
  4338  0051E6                     l5021:
  4339                           
  4340                           ; BSR set to: 57
  4341                           ;mcc_generated_files/uart1.c: 194:  PIE3bits.U1TXIE = 1;
  4342  0051E6  8993               	bsf	147,4,b	;volatile
  4343                           
  4344                           ; BSR set to: 57
  4345                           ; _UART1_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  4346  0051E8  52E5               	movf	postdec1,f,c
  4347  0051EA  0012               	return		;funcret
  4348  0051EC                     __end_of_UART1_Write:
  4349                           	opt callstack 0
  4350                           
  4351 ;; *************** function _run_checksum *****************
  4352 ;; Defined at:
  4353 ;;		line 29 in file "gemsecs.c"
  4354 ;; Parameters:    Size  Location     Type
  4355 ;;  byte_block      1  [STACK] unsigned char 
  4356 ;;  clear           1  [STACK] _Bool 
  4357 ;; Auto vars:     Size  Location     Type
  4358 ;;		None
  4359 ;; Return value:  Size  Location     Type
  4360 ;;                  2  [STACK] unsigned short 
  4361 ;; Registers used:
  4362 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  4363 ;; Tracked objects:
  4364 ;;		On entry : 6/39
  4365 ;;		On exit  : 0/0
  4366 ;;		Unchanged: 0/0
  4367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4372 ;;Total ram usage:        0 bytes
  4373 ;; Hardware stack levels used:    1
  4374 ;; Hardware stack levels required when called:    3
  4375 ;; This function calls:
  4376 ;;		Nothing
  4377 ;; This function is called by:
  4378 ;;		_r_protocol
  4379 ;; This function uses a reentrant model
  4380 ;;
  4381                           
  4382                           	psect	text10
  4383  0053AA                     __ptext10:
  4384                           	opt callstack 0
  4385  0053AA                     _run_checksum:
  4386                           	opt callstack 26
  4387                           
  4388                           ;gemsecs.c: 29: uint16_t run_checksum(uint8_t byte_block, _Bool clear);gemsecs.c: 30: {;
      +                          gemsecs.c: 31:  static uint16_t sum = 0;;gemsecs.c: 33:  if (clear)
  4389                           ;stkvar	_clear @ sp[(0)+-2]
  4390                           
  4391                           ; BSR set to: 57
  4392                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4393                           ;incstack = 0
  4394  0053AA  0EFE               	movlw	-2
  4395  0053AC  50E3               	movf	plusw1,w,c
  4396  0053AE  B4D8               	btfsc	status,2,c
  4397  0053B0  D002               	goto	l5301
  4398                           
  4399                           ;gemsecs.c: 34:   sum = 0;
  4400  0053B2  6A2A               	clrf	run_checksum@sum,c
  4401  0053B4  6A2B               	clrf	run_checksum@sum+1,c
  4402  0053B6                     l5301:
  4403                           
  4404                           ;gemsecs.c: 36:  sum += byte_block;
  4405                           ;stkvar	_byte_block @ sp[(0)+-1]
  4406  0053B6  0EFF               	movlw	-1
  4407  0053B8  50E3               	movf	plusw1,w,c
  4408  0053BA  262A               	addwf	run_checksum@sum,f,c
  4409  0053BC  0E00               	movlw	0
  4410  0053BE  222B               	addwfc	run_checksum@sum+1,f,c
  4411                           
  4412                           ;gemsecs.c: 37:  return sum;
  4413  0053C0  0060  F0A8  F03E   	movff	run_checksum@sum,btemp
  4414  0053C6  0060  F0AC  F03F   	movff	run_checksum@sum+1,btemp+1
  4415                           
  4416                           ; _run_checksum: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, 
      +                          argsize = 2, vargsize = 0
  4417  0053CC  52E5               	movf	postdec1,f,c
  4418  0053CE  52E5               	movf	postdec1,f,c
  4419  0053D0  0012               	return		;funcret
  4420  0053D2                     __end_of_run_checksum:
  4421                           	opt callstack 0
  4422                           
  4423 ;; *************** function _WaitMs *****************
  4424 ;; Defined at:
  4425 ;;		line 31 in file "timers.c"
  4426 ;; Parameters:    Size  Location     Type
  4427 ;;  numMilliseco    2  [STACK] unsigned short 
  4428 ;; Auto vars:     Size  Location     Type
  4429 ;;		None
  4430 ;; Return value:  Size  Location     Type
  4431 ;;                  1  [STACK] void 
  4432 ;; Registers used:
  4433 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4434 ;; Tracked objects:
  4435 ;;		On entry : 0/3B
  4436 ;;		On exit  : 0/0
  4437 ;;		Unchanged: 0/0
  4438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4443 ;;Total ram usage:        0 bytes
  4444 ;; Hardware stack levels used:    1
  4445 ;; Hardware stack levels required when called:    4
  4446 ;; This function calls:
  4447 ;;		_StartTimer
  4448 ;;		_TimerDone
  4449 ;; This function is called by:
  4450 ;;		_main
  4451 ;;		_r_protocol
  4452 ;;		_t_protocol
  4453 ;; This function uses a reentrant model
  4454 ;;
  4455                           
  4456                           	psect	text11
  4457  005354                     __ptext11:
  4458                           	opt callstack 0
  4459  005354                     _WaitMs:
  4460                           	opt callstack 25
  4461                           
  4462                           ;timers.c: 31: void WaitMs(uint16_t numMilliseconds);timers.c: 32: {;timers.c: 33:  Star
      +                          tTimer(TMR_INTERNAL, numMilliseconds);
  4463                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  4464                           
  4465                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4466                           ;incstack = 0
  4467  005354  0EFE               	movlw	-2
  4468  005356  006F FF8F FFE6     	movff	plusw1,postinc1
  4469  00535C  006F FF8F FFE6     	movff	plusw1,postinc1
  4470  005362  0E00               	movlw	0
  4471  005364  6EE6               	movwf	postinc1,c
  4472  005366  EC35  F029         	call	_StartTimer	;wreg free
  4473  00536A                     l5239:
  4474                           
  4475                           ;timers.c: 34:  while (!TimerDone(TMR_INTERNAL)) {
  4476  00536A  0E00               	movlw	0
  4477  00536C  6EE6               	movwf	postinc1,c
  4478  00536E  EC51  F02B         	call	_TimerDone	;wreg free
  4479  005372  503E               	movf	btemp,w,c
  4480  005374  B4D8               	btfsc	status,2,c
  4481  005376  D7F9               	goto	l5239
  4482                           
  4483                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  4484  005378  52E5               	movf	postdec1,f,c
  4485  00537A  52E5               	movf	postdec1,f,c
  4486  00537C  0012               	return		;funcret
  4487  00537E                     __end_of_WaitMs:
  4488                           	opt callstack 0
  4489                           
  4490 ;; *************** function _TimerDone *****************
  4491 ;; Defined at:
  4492 ;;		line 20 in file "timers.c"
  4493 ;; Parameters:    Size  Location     Type
  4494 ;;  timer           1  [STACK] unsigned char 
  4495 ;; Auto vars:     Size  Location     Type
  4496 ;;		None
  4497 ;; Return value:  Size  Location     Type
  4498 ;;                  1  [STACK] _Bool 
  4499 ;; Registers used:
  4500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  4501 ;; Tracked objects:
  4502 ;;		On entry : 0/0
  4503 ;;		On exit  : 0/0
  4504 ;;		Unchanged: 0/0
  4505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4510 ;;Total ram usage:        0 bytes
  4511 ;; Hardware stack levels used:    1
  4512 ;; Hardware stack levels required when called:    3
  4513 ;; This function calls:
  4514 ;;		Nothing
  4515 ;; This function is called by:
  4516 ;;		_r_protocol
  4517 ;;		_t_protocol
  4518 ;;		_WaitMs
  4519 ;; This function uses a reentrant model
  4520 ;;
  4521                           
  4522                           	psect	text12
  4523  0056A2                     __ptext12:
  4524                           	opt callstack 0
  4525  0056A2                     _TimerDone:
  4526                           	opt callstack 25
  4527                           
  4528                           ;timers.c: 20: __attribute__((inline)) _Bool TimerDone(uint8_t timer);timers.c: 21: {;ti
      +                          mers.c: 22:  if (tickCount[timer] == 0) {
  4529                           ;stkvar	_timer @ sp[(0)+-1]
  4530                           
  4531                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4532                           ;incstack = 0
  4533  0056A2  0EFF               	movlw	-1
  4534  0056A4  50E3               	movf	plusw1,w,c
  4535  0056A6  0D02               	mullw	2
  4536  0056A8  50F3               	movf	prodl,w,c
  4537  0056AA  0F79               	addlw	low _tickCount
  4538  0056AC  6ED9               	movwf	fsr2l,c
  4539  0056AE  6ADA               	clrf	fsr2h,c
  4540  0056B0  50DE               	movf	postinc2,w,c
  4541  0056B2  10DE               	iorwf	postinc2,w,c
  4542  0056B4  A4D8               	btfss	status,2,c
  4543  0056B6  D002               	goto	l5085
  4544                           
  4545                           ;timers.c: 23:   return 1;
  4546  0056B8  0E01               	movlw	1
  4547  0056BA  D001               	goto	L10
  4548  0056BC                     l5085:
  4549                           
  4550                           ;timers.c: 25:  return 0;
  4551  0056BC  0E00               	movlw	0
  4552  0056BE                     L10:
  4553  0056BE  6E3E               	movwf	btemp,c
  4554                           
  4555                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  4556  0056C0  52E5               	movf	postdec1,f,c
  4557  0056C2  0012               	return		;funcret
  4558  0056C4                     __end_of_TimerDone:
  4559                           	opt callstack 0
  4560                           
  4561 ;; *************** function _StartTimer *****************
  4562 ;; Defined at:
  4563 ;;		line 12 in file "timers.c"
  4564 ;; Parameters:    Size  Location     Type
  4565 ;;  timer           1  [STACK] unsigned char 
  4566 ;;  count           2  [STACK] unsigned short 
  4567 ;; Auto vars:     Size  Location     Type
  4568 ;;		None
  4569 ;; Return value:  Size  Location     Type
  4570 ;;                  1  [STACK] void 
  4571 ;; Registers used:
  4572 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4573 ;; Tracked objects:
  4574 ;;		On entry : 0/39
  4575 ;;		On exit  : 0/0
  4576 ;;		Unchanged: 0/0
  4577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4582 ;;Total ram usage:        0 bytes
  4583 ;; Hardware stack levels used:    1
  4584 ;; Hardware stack levels required when called:    3
  4585 ;; This function calls:
  4586 ;;		Nothing
  4587 ;; This function is called by:
  4588 ;;		_r_protocol
  4589 ;;		_t_protocol
  4590 ;;		_WaitMs
  4591 ;; This function uses a reentrant model
  4592 ;;
  4593                           
  4594                           	psect	text13
  4595  00526A                     __ptext13:
  4596                           	opt callstack 0
  4597  00526A                     _StartTimer:
  4598                           	opt callstack 25
  4599                           
  4600                           ;timers.c: 12: __attribute__((inline)) void StartTimer(uint8_t timer, uint16_t count);ti
      +                          mers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
  4601                           ;stkvar	_count @ sp[(0)+-3]
  4602                           
  4603                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4604                           ;incstack = 0
  4605  00526A  0EFD               	movlw	-3
  4606  00526C  006F FF8C  F048    	movff	plusw1,btemp+10
  4607  005272  0EFE               	movlw	-2
  4608  005274  006F FF8C  F049    	movff	plusw1,btemp+11
  4609  00527A  90D8               	bcf	status,0,c
  4610  00527C  3448               	rlcf	btemp+10,w,c
  4611  00527E  6E46               	movwf	btemp+8,c
  4612  005280  3449               	rlcf	btemp+11,w,c
  4613  005282  6E47               	movwf	btemp+9,c
  4614                           
  4615                           ;stkvar	_timer @ sp[(0)+-1]
  4616  005284  0EFF               	movlw	-1
  4617  005286  50E3               	movf	plusw1,w,c
  4618  005288  0D02               	mullw	2
  4619  00528A  50F3               	movf	prodl,w,c
  4620  00528C  0F79               	addlw	low _tickCount
  4621  00528E  6ED9               	movwf	fsr2l,c
  4622  005290  6ADA               	clrf	fsr2h,c
  4623  005292  0060  F11B  FFDE   	movff	btemp+8,postinc2
  4624  005298  0060  F11F  FFDD   	movff	btemp+9,postdec2
  4625                           
  4626                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
  4627  00529E  52E5               	movf	postdec1,f,c
  4628  0052A0  52E5               	movf	postdec1,f,c
  4629  0052A2  52E5               	movf	postdec1,f,c
  4630  0052A4  0012               	return		;funcret
  4631  0052A6                     __end_of_StartTimer:
  4632                           	opt callstack 0
  4633                           
  4634 ;; *************** function _UART1_is_rx_ready *****************
  4635 ;; Defined at:
  4636 ;;		line 146 in file "mcc_generated_files/uart1.c"
  4637 ;; Parameters:    Size  Location     Type
  4638 ;;		None
  4639 ;; Auto vars:     Size  Location     Type
  4640 ;;		None
  4641 ;; Return value:  Size  Location     Type
  4642 ;;                  1  [STACK] unsigned char 
  4643 ;; Registers used:
  4644 ;;		btemp
  4645 ;; Tracked objects:
  4646 ;;		On entry : 0/0
  4647 ;;		On exit  : 0/0
  4648 ;;		Unchanged: 0/0
  4649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4654 ;;Total ram usage:        0 bytes
  4655 ;; Hardware stack levels used:    1
  4656 ;; Hardware stack levels required when called:    3
  4657 ;; This function calls:
  4658 ;;		Nothing
  4659 ;; This function is called by:
  4660 ;;		_r_protocol
  4661 ;;		_t_protocol
  4662 ;; This function uses a reentrant model
  4663 ;;
  4664                           
  4665                           	psect	text14
  4666  005966                     __ptext14:
  4667                           	opt callstack 0
  4668  005966                     _UART1_is_rx_ready:
  4669                           	opt callstack 26
  4670                           
  4671                           ;mcc_generated_files/uart1.c: 148:  return uart1RxCount;
  4672                           
  4673                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4674                           ;incstack = 0
  4675  005966  0060  F0E0  F03E   	movff	_uart1RxCount,btemp	;volatile
  4676                           
  4677                           ; _UART1_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  4678  00596C  0012               	return		;funcret
  4679  00596E                     __end_of_UART1_is_rx_ready:
  4680                           	opt callstack 0
  4681                           
  4682 ;; *************** function _UART1_Read *****************
  4683 ;; Defined at:
  4684 ;;		line 161 in file "mcc_generated_files/uart1.c"
  4685 ;; Parameters:    Size  Location     Type
  4686 ;;		None
  4687 ;; Auto vars:     Size  Location     Type
  4688 ;;  readValue       1  [STACK] unsigned char 
  4689 ;; Return value:  Size  Location     Type
  4690 ;;                  1  [STACK] unsigned char 
  4691 ;; Registers used:
  4692 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  4693 ;; Tracked objects:
  4694 ;;		On entry : 0/0
  4695 ;;		On exit  : 3F/39
  4696 ;;		Unchanged: 0/0
  4697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4702 ;;Total ram usage:        0 bytes
  4703 ;; Hardware stack levels used:    1
  4704 ;; Hardware stack levels required when called:    3
  4705 ;; This function calls:
  4706 ;;		Nothing
  4707 ;; This function is called by:
  4708 ;;		_r_protocol
  4709 ;;		_t_protocol
  4710 ;; This function uses a reentrant model
  4711 ;;
  4712                           
  4713                           	psect	text15
  4714  0051EC                     __ptext15:
  4715                           	opt callstack 0
  4716  0051EC                     _UART1_Read:
  4717                           	opt callstack 0
  4718                           
  4719                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4720  0051EC  52E6               	movf	postinc1,f,c
  4721  0051EE                     
  4722                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  4723                           
  4724                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  4725  0051EE  5038               	movf	_uart1RxCount,w,c	;volatile
  4726  0051F0  B4D8               	btfsc	status,2,c
  4727  0051F2  D7FD               	goto	l5203
  4728                           
  4729                           ;mcc_generated_files/uart1.c: 168:  readValue = uart1RxBuffer[uart1RxTail++];
  4730  0051F4  0E92               	movlw	low _uart1RxBuffer
  4731  0051F6  2439               	addwf	_uart1RxTail,w,c	;volatile
  4732  0051F8  6ED9               	movwf	fsr2l,c
  4733  0051FA  6ADA               	clrf	fsr2h,c
  4734  0051FC  0E01               	movlw	high _uart1RxBuffer
  4735  0051FE  22DA               	addwfc	fsr2h,f,c
  4736  005200  50DF               	movf	indf2,w,c
  4737  005202  6E49               	movwf	btemp+11,c
  4738                           
  4739                           ;stkvar	_readValue @ sp[(-1)+0]
  4740  005204  0EFF               	movlw	-1
  4741  005206  0060  F127  FFE3   	movff	btemp+11,plusw1
  4742  00520C  2A39               	incf	_uart1RxTail,f,c	;volatile
  4743                           
  4744                           ;mcc_generated_files/uart1.c: 169:  if (sizeof(uart1RxBuffer) <= uart1RxTail) {
  4745  00520E  0E3F               	movlw	63
  4746  005210  6439               	cpfsgt	_uart1RxTail,c
  4747  005212  D001               	goto	l572
  4748                           
  4749                           ;mcc_generated_files/uart1.c: 170:   uart1RxTail = 0;
  4750  005214  6A39               	clrf	_uart1RxTail,c	;volatile
  4751  005216                     l572:
  4752                           
  4753                           ;mcc_generated_files/uart1.c: 172:  PIE3bits.U1RXIE = 0;
  4754  005216  0139               	movlb	57	; () banked
  4755  005218  9793               	bcf	147,3,b	;volatile
  4756                           
  4757                           ; BSR set to: 57
  4758                           ;mcc_generated_files/uart1.c: 173:  uart1RxCount--;
  4759  00521A  0638               	decf	_uart1RxCount,f,c	;volatile
  4760                           
  4761                           ; BSR set to: 57
  4762                           ;mcc_generated_files/uart1.c: 174:  PIE3bits.U1RXIE = 1;
  4763  00521C  8793               	bsf	147,3,b	;volatile
  4764                           
  4765                           ; BSR set to: 57
  4766                           ;mcc_generated_files/uart1.c: 176:  return readValue;
  4767                           ;stkvar	_readValue @ sp[(-1)+0]
  4768  00521E  0EFF               	movlw	-1
  4769  005220  006F FF8C  F03E    	movff	plusw1,btemp
  4770                           
  4771                           ; BSR set to: 57
  4772                           ; _UART1_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  4773  005226  52E5               	movf	postdec1,f,c
  4774  005228  0012               	return		;funcret
  4775  00522A                     __end_of_UART1_Read:
  4776                           	opt callstack 0
  4777                           
  4778 ;; *************** function _init_display *****************
  4779 ;; Defined at:
  4780 ;;		line 35 in file "eadog.c"
  4781 ;; Parameters:    Size  Location     Type
  4782 ;;		None
  4783 ;; Auto vars:     Size  Location     Type
  4784 ;;		None
  4785 ;; Return value:  Size  Location     Type
  4786 ;;                  1  [STACK] void 
  4787 ;; Registers used:
  4788 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4789 ;; Tracked objects:
  4790 ;;		On entry : 0/0
  4791 ;;		On exit  : 3F/3D
  4792 ;;		Unchanged: 0/0
  4793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4798 ;;Total ram usage:        0 bytes
  4799 ;; Hardware stack levels used:    1
  4800 ;; Hardware stack levels required when called:    5
  4801 ;; This function calls:
  4802 ;;		_ringBufS_init
  4803 ;;		_send_lcd_cmd
  4804 ;;		_send_lcd_cmd_long
  4805 ;;		_wdtdelay
  4806 ;; This function is called by:
  4807 ;;		_main
  4808 ;; This function uses a reentrant model
  4809 ;;
  4810                           
  4811                           	psect	text16
  4812  00440A                     __ptext16:
  4813                           	opt callstack 0
  4814  00440A                     _init_display:
  4815                           	opt callstack 25
  4816                           
  4817                           ;eadog.c: 37:  spi_link.tx1a = &ring_buf1;
  4818                           
  4819                           ; BSR set to: 57
  4820                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4821                           ;incstack = 0
  4822  00440A  0E43               	movlw	low _ring_buf1
  4823  00440C  0100               	movlb	0	; () banked
  4824  00440E  6F73               	movwf	(_spi_link+6)& (0+255),b	;volatile
  4825  004410  0E03               	movlw	high _ring_buf1
  4826  004412  6F74               	movwf	(_spi_link+7)& (0+255),b	;volatile
  4827                           
  4828                           ;eadog.c: 38:  spi_link.tx1b = &ring_buf2;
  4829  004414  0E00               	movlw	low _ring_buf2
  4830  004416  6F71               	movwf	(_spi_link+4)& (0+255),b	;volatile
  4831  004418  0E03               	movlw	high _ring_buf2
  4832  00441A  6F72               	movwf	(_spi_link+5)& (0+255),b	;volatile
  4833                           
  4834                           ; BSR set to: 0
  4835                           ;eadog.c: 39:  ringBufS_init(spi_link.tx1a);
  4836  00441C  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
  4837  004422  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
  4838  004428  EC11  F02A         	call	_ringBufS_init	;wreg free
  4839                           
  4840                           ;eadog.c: 40:  ringBufS_init(spi_link.tx1b);
  4841  00442C  0060  F1C7  FFE6   	movff	_spi_link+4,postinc1
  4842  004432  0060  F1CB  FFE6   	movff	_spi_link+5,postinc1
  4843  004438  EC11  F02A         	call	_ringBufS_init	;wreg free
  4844                           
  4845                           ;eadog.c: 42:  LATEbits.LATE0 = 1;
  4846  00443C  80BE               	bsf	16318,0,c	;volatile
  4847  00443E  84BC               	bsf	16316,2,c	;volatile
  4848                           
  4849                           ;eadog.c: 44:  wdtdelay(350000);
  4850  004440  0E30               	movlw	48
  4851  004442  6EE6               	movwf	postinc1,c
  4852  004444  0E57               	movlw	87
  4853  004446  6EE6               	movwf	postinc1,c
  4854  004448  0E05               	movlw	5
  4855  00444A  6EE6               	movwf	postinc1,c
  4856  00444C  0E00               	movlw	0
  4857  00444E  6EE6               	movwf	postinc1,c
  4858  004450  EC8D  F027         	call	_wdtdelay	;wreg free
  4859                           
  4860                           ; BSR set to: 0
  4861                           ;eadog.c: 45:  send_lcd_cmd(0x39);
  4862  004454  0E39               	movlw	57
  4863  004456  6EE6               	movwf	postinc1,c
  4864  004458  ECFD  F029         	call	_send_lcd_cmd	;wreg free
  4865                           
  4866                           ; BSR set to: 0
  4867                           ;eadog.c: 46:  send_lcd_cmd(0x1d);
  4868  00445C  0E1D               	movlw	29
  4869  00445E  6EE6               	movwf	postinc1,c
  4870  004460  ECFD  F029         	call	_send_lcd_cmd	;wreg free
  4871                           
  4872                           ; BSR set to: 0
  4873                           ;eadog.c: 47:  send_lcd_cmd(0x50);
  4874  004464  0E50               	movlw	80
  4875  004466  6EE6               	movwf	postinc1,c
  4876  004468  ECFD  F029         	call	_send_lcd_cmd	;wreg free
  4877                           
  4878                           ; BSR set to: 0
  4879                           ;eadog.c: 48:  send_lcd_cmd(0x6c);
  4880  00446C  0E6C               	movlw	108
  4881  00446E  6EE6               	movwf	postinc1,c
  4882  004470  ECFD  F029         	call	_send_lcd_cmd	;wreg free
  4883                           
  4884                           ; BSR set to: 0
  4885                           ;eadog.c: 49:  send_lcd_cmd(0x76);
  4886  004474  0E76               	movlw	118
  4887  004476  6EE6               	movwf	postinc1,c
  4888  004478  ECFD  F029         	call	_send_lcd_cmd	;wreg free
  4889                           
  4890                           ; BSR set to: 0
  4891                           ;eadog.c: 50:  send_lcd_cmd_long(0x38);
  4892  00447C  0E38               	movlw	56
  4893  00447E  6EE6               	movwf	postinc1,c
  4894  004480  ECE9  F029         	call	_send_lcd_cmd_long	;wreg free
  4895                           
  4896                           ; BSR set to: 0
  4897                           ;eadog.c: 51:  send_lcd_cmd(0x0f);
  4898  004484  0E0F               	movlw	15
  4899  004486  6EE6               	movwf	postinc1,c
  4900  004488  ECFD  F029         	call	_send_lcd_cmd	;wreg free
  4901                           
  4902                           ; BSR set to: 0
  4903                           ;eadog.c: 52:  send_lcd_cmd_long(0x01);
  4904  00448C  0E01               	movlw	1
  4905  00448E  6EE6               	movwf	postinc1,c
  4906  004490  ECE9  F029         	call	_send_lcd_cmd_long	;wreg free
  4907                           
  4908                           ; BSR set to: 0
  4909                           ;eadog.c: 53:  send_lcd_cmd(0x02);
  4910  004494  0E02               	movlw	2
  4911  004496  6EE6               	movwf	postinc1,c
  4912  004498  ECFD  F029         	call	_send_lcd_cmd	;wreg free
  4913                           
  4914                           ; BSR set to: 0
  4915                           ;eadog.c: 54:  send_lcd_cmd(0x06);
  4916  00449C  0E06               	movlw	6
  4917  00449E  6EE6               	movwf	postinc1,c
  4918  0044A0  ECFD  F029         	call	_send_lcd_cmd	;wreg free
  4919                           
  4920                           ; BSR set to: 0
  4921                           ;eadog.c: 55:  wdtdelay(30);
  4922  0044A4  0E1E               	movlw	30
  4923  0044A6  6EE6               	movwf	postinc1,c
  4924  0044A8  0E00               	movlw	0
  4925  0044AA  6EE6               	movwf	postinc1,c
  4926  0044AC  0E00               	movlw	0
  4927  0044AE  6EE6               	movwf	postinc1,c
  4928  0044B0  0E00               	movlw	0
  4929  0044B2  6EE6               	movwf	postinc1,c
  4930  0044B4  EC8D  F027         	call	_wdtdelay	;wreg free
  4931                           
  4932                           ; BSR set to: 0
  4933                           ;eadog.c: 56:  SPI1CON2 = 0x02;
  4934  0044B8  0E02               	movlw	2
  4935  0044BA  013D               	movlb	61	; () banked
  4936  0044BC  6F16               	movwf	22,b	;volatile
  4937                           
  4938                           ; BSR set to: 61
  4939                           ;eadog.c: 57:  SPI1CON1 = 0x40;
  4940  0044BE  0E40               	movlw	64
  4941  0044C0  6F15               	movwf	21,b	;volatile
  4942                           
  4943                           ; BSR set to: 61
  4944                           ;eadog.c: 58:  SPI1CON0 = 0x83;
  4945  0044C2  0E83               	movlw	131
  4946  0044C4  6F14               	movwf	20,b	;volatile
  4947                           
  4948                           ; BSR set to: 61
  4949                           ;eadog.c: 59:  SPI1INTFbits.SPI1TXUIF = 0;
  4950  0044C6  931A               	bcf	26,1,b	;volatile
  4951                           
  4952                           ; BSR set to: 61
  4953                           ;eadog.c: 60:  DMA1CON1bits.DMODE = 0;
  4954  0044C8  0E3F               	movlw	-193
  4955  0044CA  013B               	movlb	59	; () banked
  4956  0044CC  17FD               	andwf	253,f,b	;volatile
  4957                           
  4958                           ; BSR set to: 59
  4959                           ;eadog.c: 61:  DMA1CON1bits.DSTP = 0;
  4960  0044CE  9BFD               	bcf	253,5,b	;volatile
  4961                           
  4962                           ; BSR set to: 59
  4963                           ;eadog.c: 62:  DMA1CON1bits.SMODE = 1;
  4964  0044D0  51FD               	movf	253,w,b	;volatile
  4965  0044D2  0BF9               	andlw	-7
  4966  0044D4  0902               	iorlw	2
  4967  0044D6  6FFD               	movwf	253,b	;volatile
  4968                           
  4969                           ; BSR set to: 59
  4970                           ;eadog.c: 63:  DMA1CON1bits.SMR = 0;
  4971  0044D8  0EE7               	movlw	-25
  4972  0044DA  17FD               	andwf	253,f,b	;volatile
  4973                           
  4974                           ; BSR set to: 59
  4975                           ;eadog.c: 64:  DMA1CON1bits.SSTP = 1;
  4976  0044DC  81FD               	bsf	253,0,b	;volatile
  4977                           
  4978                           ; BSR set to: 59
  4979                           ;eadog.c: 65:  DMA1SSA = (uint32_t) & ring_buf1;
  4980  0044DE  0E43               	movlw	low _ring_buf1
  4981  0044E0  6FF9               	movwf	249,b	;volatile
  4982  0044E2  0E03               	movlw	high _ring_buf1
  4983  0044E4  6FFA               	movwf	250,b	;volatile
  4984  0044E6  0E00               	movlw	low (_ring_buf1 shr (0+16))
  4985  0044E8  6FFB               	movwf	251,b	;volatile
  4986                           
  4987                           ; BSR set to: 59
  4988                           ;eadog.c: 66:  DMA1CON0bits.DGO = 0;
  4989  0044EA  9BFC               	bcf	252,5,b	;volatile
  4990                           
  4991                           ; BSR set to: 59
  4992                           ;eadog.c: 67:  SPI1INTFbits.SPI1TXUIF = 1;
  4993  0044EC  013D               	movlb	61	; () banked
  4994  0044EE  831A               	bsf	26,1,b	;volatile
  4995                           
  4996                           ; BSR set to: 61
  4997                           ;eadog.c: 68:  LATEbits.LATE0 = 0;
  4998  0044F0  90BE               	bcf	16318,0,c	;volatile
  4999                           
  5000                           ; BSR set to: 61
  5001                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  5002  0044F2  0012               	return		;funcret
  5003  0044F4                     __end_of_init_display:
  5004                           	opt callstack 0
  5005                           
  5006 ;; *************** function _send_lcd_cmd_long *****************
  5007 ;; Defined at:
  5008 ;;		line 97 in file "eadog.c"
  5009 ;; Parameters:    Size  Location     Type
  5010 ;;  cmd             1  [STACK] unsigned char 
  5011 ;; Auto vars:     Size  Location     Type
  5012 ;;		None
  5013 ;; Return value:  Size  Location     Type
  5014 ;;                  1  [STACK] void 
  5015 ;; Registers used:
  5016 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5017 ;; Tracked objects:
  5018 ;;		On entry : 3F/0
  5019 ;;		On exit  : 3F/0
  5020 ;;		Unchanged: 0/0
  5021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5026 ;;Total ram usage:        0 bytes
  5027 ;; Hardware stack levels used:    1
  5028 ;; Hardware stack levels required when called:    4
  5029 ;; This function calls:
  5030 ;;		_SPI1_Exchange8bit
  5031 ;;		_wdtdelay
  5032 ;; This function is called by:
  5033 ;;		_init_display
  5034 ;; This function uses a reentrant model
  5035 ;;
  5036                           
  5037                           	psect	text17
  5038  0053D2                     __ptext17:
  5039                           	opt callstack 0
  5040  0053D2                     _send_lcd_cmd_long:
  5041                           	opt callstack 25
  5042                           
  5043                           ; BSR set to: 61
  5044                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5045                           ;incstack = 0
  5046                           ;eadog.c: 97: static void send_lcd_cmd_long(uint8_t cmd);eadog.c: 98: {;eadog.c: 99:  do
      +                           { LATCbits.LATC1 = 0; } while(0);
  5047  0053D2  92BC               	bcf	16316,1,c	;volatile
  5048                           
  5049                           ;eadog.c: 100:  do { LATCbits.LATC2 = 0; } while(0);
  5050  0053D4  94BC               	bcf	16316,2,c	;volatile
  5051                           
  5052                           ;eadog.c: 101:  SPI1_Exchange8bit(cmd);
  5053                           ;stkvar	_cmd @ sp[(0)+-1]
  5054  0053D6  0EFF               	movlw	-1
  5055  0053D8  50E3               	movf	plusw1,w,c
  5056  0053DA  6EE6               	movwf	postinc1,c
  5057  0053DC  ECE8  F02B         	call	_SPI1_Exchange8bit	;wreg free
  5058                           
  5059                           ; BSR set to: 57
  5060                           ;eadog.c: 102:  wdtdelay(800);
  5061  0053E0  0E20               	movlw	32
  5062  0053E2  6EE6               	movwf	postinc1,c
  5063  0053E4  0E03               	movlw	3
  5064  0053E6  6EE6               	movwf	postinc1,c
  5065  0053E8  0E00               	movlw	0
  5066  0053EA  6EE6               	movwf	postinc1,c
  5067  0053EC  0E00               	movlw	0
  5068  0053EE  6EE6               	movwf	postinc1,c
  5069  0053F0  EC8D  F027         	call	_wdtdelay	;wreg free
  5070                           
  5071                           ; BSR set to: 0
  5072  0053F4  82BC               	bsf	16316,1,c	;volatile
  5073                           
  5074                           ; BSR set to: 0
  5075                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  5076  0053F6  52E5               	movf	postdec1,f,c
  5077  0053F8  0012               	return		;funcret
  5078  0053FA                     __end_of_send_lcd_cmd_long:
  5079                           	opt callstack 0
  5080                           
  5081 ;; *************** function _send_lcd_cmd *****************
  5082 ;; Defined at:
  5083 ;;		line 85 in file "eadog.c"
  5084 ;; Parameters:    Size  Location     Type
  5085 ;;  cmd             1  [STACK] unsigned char 
  5086 ;; Auto vars:     Size  Location     Type
  5087 ;;		None
  5088 ;; Return value:  Size  Location     Type
  5089 ;;                  1  [STACK] void 
  5090 ;; Registers used:
  5091 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5092 ;; Tracked objects:
  5093 ;;		On entry : 3F/0
  5094 ;;		On exit  : 3F/0
  5095 ;;		Unchanged: 0/0
  5096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5101 ;;Total ram usage:        0 bytes
  5102 ;; Hardware stack levels used:    1
  5103 ;; Hardware stack levels required when called:    4
  5104 ;; This function calls:
  5105 ;;		_SPI1_Exchange8bit
  5106 ;;		_wdtdelay
  5107 ;; This function is called by:
  5108 ;;		_init_display
  5109 ;; This function uses a reentrant model
  5110 ;;
  5111                           
  5112                           	psect	text18
  5113  0053FA                     __ptext18:
  5114                           	opt callstack 0
  5115  0053FA                     _send_lcd_cmd:
  5116                           	opt callstack 25
  5117                           
  5118                           ; BSR set to: 0
  5119                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5120                           ;incstack = 0
  5121                           ;eadog.c: 85: static void send_lcd_cmd(uint8_t cmd);eadog.c: 86: {;eadog.c: 87:  do { LA
      +                          TCbits.LATC1 = 0; } while(0);
  5122  0053FA  92BC               	bcf	16316,1,c	;volatile
  5123                           
  5124                           ;eadog.c: 88:  do { LATCbits.LATC2 = 0; } while(0);
  5125  0053FC  94BC               	bcf	16316,2,c	;volatile
  5126                           
  5127                           ;eadog.c: 89:  SPI1_Exchange8bit(cmd);
  5128                           ;stkvar	_cmd @ sp[(0)+-1]
  5129  0053FE  0EFF               	movlw	-1
  5130  005400  50E3               	movf	plusw1,w,c
  5131  005402  6EE6               	movwf	postinc1,c
  5132  005404  ECE8  F02B         	call	_SPI1_Exchange8bit	;wreg free
  5133                           
  5134                           ; BSR set to: 57
  5135                           ;eadog.c: 90:  wdtdelay(30);
  5136  005408  0E1E               	movlw	30
  5137  00540A  6EE6               	movwf	postinc1,c
  5138  00540C  0E00               	movlw	0
  5139  00540E  6EE6               	movwf	postinc1,c
  5140  005410  0E00               	movlw	0
  5141  005412  6EE6               	movwf	postinc1,c
  5142  005414  0E00               	movlw	0
  5143  005416  6EE6               	movwf	postinc1,c
  5144  005418  EC8D  F027         	call	_wdtdelay	;wreg free
  5145                           
  5146                           ; BSR set to: 0
  5147  00541C  82BC               	bsf	16316,1,c	;volatile
  5148                           
  5149                           ; BSR set to: 0
  5150                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  5151  00541E  52E5               	movf	postdec1,f,c
  5152  005420  0012               	return		;funcret
  5153  005422                     __end_of_send_lcd_cmd:
  5154                           	opt callstack 0
  5155                           
  5156 ;; *************** function _SPI1_Exchange8bit *****************
  5157 ;; Defined at:
  5158 ;;		line 79 in file "mcc_generated_files/spi1.c"
  5159 ;; Parameters:    Size  Location     Type
  5160 ;;  data            1  [STACK] unsigned char 
  5161 ;; Auto vars:     Size  Location     Type
  5162 ;;		None
  5163 ;; Return value:  Size  Location     Type
  5164 ;;                  1  [STACK] unsigned char 
  5165 ;; Registers used:
  5166 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  5167 ;; Tracked objects:
  5168 ;;		On entry : 0/0
  5169 ;;		On exit  : 3F/39
  5170 ;;		Unchanged: 0/0
  5171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5176 ;;Total ram usage:        0 bytes
  5177 ;; Hardware stack levels used:    1
  5178 ;; Hardware stack levels required when called:    3
  5179 ;; This function calls:
  5180 ;;		Nothing
  5181 ;; This function is called by:
  5182 ;;		_send_lcd_cmd
  5183 ;;		_send_lcd_cmd_long
  5184 ;; This function uses a reentrant model
  5185 ;;
  5186                           
  5187                           	psect	text19
  5188  0057D0                     __ptext19:
  5189                           	opt callstack 0
  5190  0057D0                     _SPI1_Exchange8bit:
  5191                           	opt callstack 25
  5192                           
  5193                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  5194                           
  5195                           ; BSR set to: 0
  5196                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5197                           ;incstack = 0
  5198  0057D0  0E01               	movlw	1
  5199  0057D2  013D               	movlb	61	; () banked
  5200  0057D4  6F12               	movwf	18,b	;volatile
  5201                           
  5202                           ; BSR set to: 61
  5203                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  5204                           ;stkvar	_data @ sp[(0)+-1]
  5205  0057D6  0EFF               	movlw	-1
  5206  0057D8  006F FF8F FD11     	movff	plusw1,15633	;volatile
  5207  0057DE                     l847:
  5208                           
  5209                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  5210  0057DE  0139               	movlb	57	; () banked
  5211  0057E0  A9A2               	btfss	162,4,b	;volatile
  5212  0057E2  D7FD               	goto	l847
  5213                           
  5214                           ; BSR set to: 57
  5215                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  5216  0057E4  006F F440  F03E    	movff	15632,btemp	;volatile
  5217                           
  5218                           ; BSR set to: 57
  5219                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  5220  0057EA  52E5               	movf	postdec1,f,c
  5221  0057EC  0012               	return		;funcret
  5222  0057EE                     __end_of_SPI1_Exchange8bit:
  5223                           	opt callstack 0
  5224                           
  5225 ;; *************** function _ringBufS_init *****************
  5226 ;; Defined at:
  5227 ;;		line 22 in file "ringbufs.c"
  5228 ;; Parameters:    Size  Location     Type
  5229 ;;  _this           2  [STACK] PTR volatile struct ring
  5230 ;;		 -> ring_buf2(67), ring_buf1(67), 
  5231 ;; Auto vars:     Size  Location     Type
  5232 ;;		None
  5233 ;; Return value:  Size  Location     Type
  5234 ;;                  1  [STACK] void 
  5235 ;; Registers used:
  5236 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5237 ;; Tracked objects:
  5238 ;;		On entry : 0/0
  5239 ;;		On exit  : 0/0
  5240 ;;		Unchanged: 0/0
  5241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5246 ;;Total ram usage:        0 bytes
  5247 ;; Hardware stack levels used:    1
  5248 ;; Hardware stack levels required when called:    4
  5249 ;; This function calls:
  5250 ;;		_memset
  5251 ;; This function is called by:
  5252 ;;		_init_display
  5253 ;; This function uses a reentrant model
  5254 ;;
  5255                           
  5256                           	psect	text20
  5257  005422                     __ptext20:
  5258                           	opt callstack 0
  5259  005422                     _ringBufS_init:
  5260                           	opt callstack 25
  5261                           
  5262                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  5263                           
  5264                           ; BSR set to: 57
  5265                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5266                           ;incstack = 0
  5267  005422  0E43               	movlw	67
  5268  005424  6EE6               	movwf	postinc1,c
  5269  005426  0E00               	movlw	0
  5270  005428  6EE6               	movwf	postinc1,c
  5271  00542A  0E00               	movlw	0
  5272  00542C  6EE6               	movwf	postinc1,c
  5273  00542E  0E00               	movlw	0
  5274  005430  6EE6               	movwf	postinc1,c
  5275                           
  5276                           ;stkvar	__this @ sp[(-4)+-2]
  5277  005432  0EFA               	movlw	-6
  5278  005434  006F FF8F FFE6     	movff	plusw1,postinc1
  5279  00543A  006F FF8F FFE6     	movff	plusw1,postinc1
  5280  005440  EC1C  F018         	call	_memset	;wreg free
  5281                           
  5282                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  5283  005444  52E5               	movf	postdec1,f,c
  5284  005446  52E5               	movf	postdec1,f,c
  5285  005448  0012               	return		;funcret
  5286  00544A                     __end_of_ringBufS_init:
  5287                           	opt callstack 0
  5288                           
  5289 ;; *************** function _eaDogM_WriteStringAtPos *****************
  5290 ;; Defined at:
  5291 ;;		line 218 in file "eadog.c"
  5292 ;; Parameters:    Size  Location     Type
  5293 ;;  r               1  [STACK] unsigned char 
  5294 ;;  c               1  [STACK] unsigned char 
  5295 ;;  strPtr          1  [STACK] PTR unsigned char 
  5296 ;;		 -> V(85), 
  5297 ;; Auto vars:     Size  Location     Type
  5298 ;;		None
  5299 ;; Return value:  Size  Location     Type
  5300 ;;                  1  [STACK] void 
  5301 ;; Registers used:
  5302 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  5303 ;; Tracked objects:
  5304 ;;		On entry : 3F/0
  5305 ;;		On exit  : 3F/3B
  5306 ;;		Unchanged: 0/0
  5307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5312 ;;Total ram usage:        0 bytes
  5313 ;; Hardware stack levels used:    1
  5314 ;; Hardware stack levels required when called:   13
  5315 ;; This function calls:
  5316 ;;		_eaDogM_WriteString
  5317 ;;		_send_lcd_cmd_dma
  5318 ;; This function is called by:
  5319 ;;		_main
  5320 ;; This function uses a reentrant model
  5321 ;;
  5322                           
  5323                           	psect	text21
  5324  0052A6                     __ptext21:
  5325                           	opt callstack 0
  5326  0052A6                     _eaDogM_WriteStringAtPos:
  5327                           	opt callstack 17
  5328                           
  5329                           ;eadog.c: 218: void eaDogM_WriteStringAtPos(uint8_t r, uint8_t c, char *strPtr);eadog.c:
      +                           219: {;eadog.c: 220:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  5330                           ;stkvar	_c @ sp[(0)+-2]
  5331                           
  5332                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5333                           ;incstack = 0
  5334  0052A6  0EFE               	movlw	-2
  5335  0052A8  006F FF8C  F049    	movff	plusw1,btemp+11
  5336                           
  5337                           ;stkvar	_r @ sp[(0)+-1]
  5338  0052AE  0EFF               	movlw	-1
  5339  0052B0  50E3               	movf	plusw1,w,c
  5340  0052B2  0D10               	mullw	16
  5341  0052B4  50F3               	movf	prodl,w,c
  5342  0052B6  2449               	addwf	btemp+11,w,c
  5343  0052B8  0F80               	addlw	128
  5344  0052BA  6EE6               	movwf	postinc1,c
  5345  0052BC  ECBB  F027         	call	_send_lcd_cmd_dma	;wreg free
  5346                           
  5347                           ; BSR set to: 0
  5348                           ;eadog.c: 221:  eaDogM_WriteString(strPtr);
  5349                           ;stkvar	_strPtr @ sp[(0)+-3]
  5350  0052C0  0EFD               	movlw	-3
  5351  0052C2  50E3               	movf	plusw1,w,c
  5352  0052C4  6EE6               	movwf	postinc1,c
  5353  0052C6  ECA1  F024         	call	_eaDogM_WriteString	;wreg free
  5354                           
  5355                           ; BSR set to: 59
  5356                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
  5357  0052CA  52E5               	movf	postdec1,f,c
  5358  0052CC  52E5               	movf	postdec1,f,c
  5359  0052CE  52E5               	movf	postdec1,f,c
  5360  0052D0  0012               	return		;funcret
  5361  0052D2                     __end_of_eaDogM_WriteStringAtPos:
  5362                           	opt callstack 0
  5363                           
  5364 ;; *************** function _eaDogM_WriteString *****************
  5365 ;; Defined at:
  5366 ;;		line 167 in file "eadog.c"
  5367 ;; Parameters:    Size  Location     Type
  5368 ;;  strPtr          1  [STACK] PTR unsigned char 
  5369 ;;		 -> V(85), 
  5370 ;; Auto vars:     Size  Location     Type
  5371 ;;		None
  5372 ;; Return value:  Size  Location     Type
  5373 ;;                  1  [STACK] void 
  5374 ;; Registers used:
  5375 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  5376 ;; Tracked objects:
  5377 ;;		On entry : 3F/0
  5378 ;;		On exit  : 3F/3B
  5379 ;;		Unchanged: 0/0
  5380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5385 ;;Total ram usage:        0 bytes
  5386 ;; Hardware stack levels used:    1
  5387 ;; Hardware stack levels required when called:   12
  5388 ;; This function calls:
  5389 ;;		_printf
  5390 ;;		_ringBufS_flush
  5391 ;;		_start_lcd
  5392 ;;		_strlen
  5393 ;;		_wait_lcd_set
  5394 ;; This function is called by:
  5395 ;;		_eaDogM_WriteStringAtPos
  5396 ;; This function uses a reentrant model
  5397 ;;
  5398                           
  5399                           	psect	text22
  5400  004942                     __ptext22:
  5401                           	opt callstack 0
  5402  004942                     _eaDogM_WriteString:
  5403                           	opt callstack 17
  5404                           
  5405                           ;eadog.c: 167: void eaDogM_WriteString(char *strPtr);eadog.c: 168: {;eadog.c: 169:  wait
      +                          _lcd_set();
  5406                           
  5407                           ; BSR set to: 59
  5408                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5409                           ;incstack = 0
  5410  004942  ECB7  F02C         	call	_wait_lcd_set	;wreg free
  5411                           
  5412                           ; BSR set to: 0
  5413                           ;eadog.c: 171:  ringBufS_flush(spi_link.tx1a, 0);
  5414  004946  0E00               	movlw	0
  5415  004948  6EE6               	movwf	postinc1,c
  5416  00494A  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
  5417  004950  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
  5418  004956  ECCE  F025         	call	_ringBufS_flush	;wreg free
  5419  00495A  94BC               	bcf	16316,2,c	;volatile
  5420                           
  5421                           ;eadog.c: 173:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  5422                           ;stkvar	_strPtr @ sp[(0)+-1]
  5423  00495C  0EFF               	movlw	-1
  5424  00495E  006F FF8C  F049    	movff	plusw1,btemp+11
  5425  004964  0060  F127  FFE6   	movff	btemp+11,postinc1
  5426  00496A  0E00               	movlw	0
  5427  00496C  6EE6               	movwf	postinc1,c
  5428  00496E  EC00  F024         	call	_strlen	;wreg free
  5429  004972  503F               	movf	btemp+1,w,c
  5430  004974  E104               	bnz	u3800
  5431  004976  0E41               	movlw	65
  5432  004978  5C3E               	subwf	btemp,w,c
  5433  00497A  A0D8               	btfss	status,0,c
  5434  00497C  D008               	goto	l6657
  5435  00497E                     u3800:
  5436                           
  5437                           ;stkvar	_strPtr @ sp[(0)+-1]
  5438  00497E  0EFF               	movlw	-1
  5439  004980  50E3               	movf	plusw1,w,c
  5440  004982  6ED9               	movwf	fsr2l,c
  5441  004984  6ADA               	clrf	fsr2h,c
  5442  004986  0E40               	movlw	64
  5443  004988  26D9               	addwf	fsr2l,f,c
  5444  00498A  0E00               	movlw	0
  5445  00498C  6EDF               	movwf	indf2,c
  5446  00498E                     l6657:
  5447                           
  5448                           ;eadog.c: 174:  DMA1CON0bits.EN = 0;
  5449  00498E  013B               	movlb	59	; () banked
  5450  004990  9FFC               	bcf	252,7,b	;volatile
  5451                           
  5452                           ; BSR set to: 59
  5453                           ;eadog.c: 175:  DMA1SSZ = strlen(strPtr);
  5454                           ;stkvar	_strPtr @ sp[(0)+-1]
  5455  004992  0EFF               	movlw	-1
  5456  004994  006F FF8C  F049    	movff	plusw1,btemp+11
  5457  00499A  0060  F127  FFE6   	movff	btemp+11,postinc1
  5458  0049A0  0E00               	movlw	0
  5459  0049A2  6EE6               	movwf	postinc1,c
  5460  0049A4  EC00  F024         	call	_strlen	;wreg free
  5461  0049A8  0060  F0FB  FBF7   	movff	btemp,15351	;volatile
  5462  0049AE  0060  F0FF  FBF8   	movff	btemp+1,15352	;volatile
  5463                           
  5464                           ;eadog.c: 176:  DMA1CON0bits.EN = 1;
  5465  0049B4  013B               	movlb	59	; () banked
  5466  0049B6  8FFC               	bsf	252,7,b	;volatile
  5467                           
  5468                           ; BSR set to: 59
  5469                           ;eadog.c: 177:  printf("%s", strPtr);
  5470                           ;stkvar	_strPtr @ sp[(0)+-1]
  5471  0049B8  0EFF               	movlw	-1
  5472  0049BA  006F FF8C  F049    	movff	plusw1,btemp+11
  5473  0049C0  0060  F127  FFE6   	movff	btemp+11,postinc1
  5474  0049C6  0E00               	movlw	0
  5475  0049C8  6EE6               	movwf	postinc1,c
  5476  0049CA  0E99               	movlw	(STR_2+9)& (0+255)
  5477  0049CC  6EE6               	movwf	postinc1,c
  5478  0049CE  0E03               	movlw	3
  5479  0049D0  6EE6               	movwf	postinc1,c
  5480  0049D2  EC2D  F027         	call	_printf	;wreg free
  5481                           
  5482                           ;eadog.c: 178:  start_lcd();
  5483  0049D6  ECBA  F02C         	call	_start_lcd	;wreg free
  5484                           
  5485                           ; BSR set to: 59
  5486                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  5487  0049DA  52E5               	movf	postdec1,f,c
  5488  0049DC  0012               	return		;funcret
  5489  0049DE                     __end_of_eaDogM_WriteString:
  5490                           	opt callstack 0
  5491                           
  5492 ;; *************** function _eaDogM_WriteCommand *****************
  5493 ;; Defined at:
  5494 ;;		line 143 in file "eadog.c"
  5495 ;; Parameters:    Size  Location     Type
  5496 ;;  cmd             1  [STACK] unsigned char 
  5497 ;; Auto vars:     Size  Location     Type
  5498 ;;		None
  5499 ;; Return value:  Size  Location     Type
  5500 ;;                  1  [STACK] void 
  5501 ;; Registers used:
  5502 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  5503 ;; Tracked objects:
  5504 ;;		On entry : 3F/3D
  5505 ;;		On exit  : 3F/0
  5506 ;;		Unchanged: 0/0
  5507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5512 ;;Total ram usage:        0 bytes
  5513 ;; Hardware stack levels used:    1
  5514 ;; Hardware stack levels required when called:   13
  5515 ;; This function calls:
  5516 ;;		_send_lcd_cmd_dma
  5517 ;; This function is called by:
  5518 ;;		_main
  5519 ;; This function uses a reentrant model
  5520 ;;
  5521                           
  5522                           	psect	text23
  5523  0058E6                     __ptext23:
  5524                           	opt callstack 0
  5525  0058E6                     _eaDogM_WriteCommand:
  5526                           	opt callstack 17
  5527                           
  5528                           ;eadog.c: 143: void eaDogM_WriteCommand(uint8_t cmd);eadog.c: 144: {;eadog.c: 145:  send
      +                          _lcd_cmd_dma(cmd);
  5529                           ;stkvar	_cmd @ sp[(0)+-1]
  5530                           
  5531                           ; BSR set to: 59
  5532                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5533                           ;incstack = 0
  5534  0058E6  0EFF               	movlw	-1
  5535  0058E8  50E3               	movf	plusw1,w,c
  5536  0058EA  6EE6               	movwf	postinc1,c
  5537  0058EC  ECBB  F027         	call	_send_lcd_cmd_dma	;wreg free
  5538                           
  5539                           ; BSR set to: 0
  5540                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  5541  0058F0  52E5               	movf	postdec1,f,c
  5542  0058F2  0012               	return		;funcret
  5543  0058F4                     __end_of_eaDogM_WriteCommand:
  5544                           	opt callstack 0
  5545                           
  5546 ;; *************** function _send_lcd_cmd_dma *****************
  5547 ;; Defined at:
  5548 ;;		line 184 in file "eadog.c"
  5549 ;; Parameters:    Size  Location     Type
  5550 ;;  strPtr          1  [STACK] unsigned char 
  5551 ;; Auto vars:     Size  Location     Type
  5552 ;;		None
  5553 ;; Return value:  Size  Location     Type
  5554 ;;                  1  [STACK] void 
  5555 ;; Registers used:
  5556 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  5557 ;; Tracked objects:
  5558 ;;		On entry : 0/0
  5559 ;;		On exit  : 3F/0
  5560 ;;		Unchanged: 0/0
  5561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5566 ;;Total ram usage:        0 bytes
  5567 ;; Hardware stack levels used:    1
  5568 ;; Hardware stack levels required when called:   12
  5569 ;; This function calls:
  5570 ;;		_printf
  5571 ;;		_ringBufS_flush
  5572 ;;		_start_lcd
  5573 ;;		_wait_lcd_done
  5574 ;;		_wait_lcd_set
  5575 ;; This function is called by:
  5576 ;;		_eaDogM_WriteCommand
  5577 ;;		_eaDogM_WriteStringAtPos
  5578 ;; This function uses a reentrant model
  5579 ;;
  5580                           
  5581                           	psect	text24
  5582  004F76                     __ptext24:
  5583                           	opt callstack 0
  5584  004F76                     _send_lcd_cmd_dma:
  5585                           	opt callstack 17
  5586                           
  5587                           ;eadog.c: 184: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 185: {;eadog.c: 186:  wait
      +                          _lcd_set();
  5588                           
  5589                           ; BSR set to: 0
  5590                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5591                           ;incstack = 0
  5592  004F76  ECB7  F02C         	call	_wait_lcd_set	;wreg free
  5593                           
  5594                           ; BSR set to: 0
  5595                           ;eadog.c: 188:  ringBufS_flush(spi_link.tx1a, 0);
  5596  004F7A  0E00               	movlw	0
  5597  004F7C  6EE6               	movwf	postinc1,c
  5598  004F7E  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
  5599  004F84  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
  5600  004F8A  ECCE  F025         	call	_ringBufS_flush	;wreg free
  5601  004F8E  92BC               	bcf	16316,1,c	;volatile
  5602  004F90  94BC               	bcf	16316,2,c	;volatile
  5603                           
  5604                           ;eadog.c: 191:  DMA1CON0bits.EN = 0;
  5605  004F92  013B               	movlb	59	; () banked
  5606  004F94  9FFC               	bcf	252,7,b	;volatile
  5607                           
  5608                           ; BSR set to: 59
  5609                           ;eadog.c: 192:  DMA1SSZ = 1;
  5610  004F96  0E00               	movlw	0
  5611  004F98  6FF8               	movwf	248,b	;volatile
  5612  004F9A  0E01               	movlw	1
  5613  004F9C  6FF7               	movwf	247,b	;volatile
  5614                           
  5615                           ; BSR set to: 59
  5616                           ;eadog.c: 193:  DMA1CON0bits.EN = 1;
  5617  004F9E  8FFC               	bsf	252,7,b	;volatile
  5618                           
  5619                           ; BSR set to: 59
  5620                           ;eadog.c: 194:  printf("%c", strPtr);
  5621                           ;stkvar	_strPtr @ sp[(0)+-1]
  5622  004FA0  0EFF               	movlw	-1
  5623  004FA2  50E3               	movf	plusw1,w,c
  5624  004FA4  6EE6               	movwf	postinc1,c
  5625  004FA6  0E00               	movlw	0
  5626  004FA8  6EE6               	movwf	postinc1,c
  5627  004FAA  0EAD               	movlw	STR_13& (0+255)
  5628  004FAC  6EE6               	movwf	postinc1,c
  5629  004FAE  0E03               	movlw	3
  5630  004FB0  6EE6               	movwf	postinc1,c
  5631  004FB2  EC2D  F027         	call	_printf	;wreg free
  5632                           
  5633                           ;eadog.c: 195:  start_lcd();
  5634  004FB6  ECBA  F02C         	call	_start_lcd	;wreg free
  5635                           
  5636                           ; BSR set to: 59
  5637                           ;eadog.c: 196:  wait_lcd_done();
  5638  004FBA  ECF7  F02B         	call	_wait_lcd_done	;wreg free
  5639                           
  5640                           ; BSR set to: 0
  5641  004FBE  82BC               	bsf	16316,1,c	;volatile
  5642                           
  5643                           ; BSR set to: 0
  5644                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  5645  004FC0  52E5               	movf	postdec1,f,c
  5646  004FC2  0012               	return		;funcret
  5647  004FC4                     __end_of_send_lcd_cmd_dma:
  5648                           	opt callstack 0
  5649                           
  5650 ;; *************** function _wait_lcd_set *****************
  5651 ;; Defined at:
  5652 ;;		line 114 in file "eadog.c"
  5653 ;; Parameters:    Size  Location     Type
  5654 ;;		None
  5655 ;; Auto vars:     Size  Location     Type
  5656 ;;		None
  5657 ;; Return value:  Size  Location     Type
  5658 ;;                  1  [STACK] void 
  5659 ;; Registers used:
  5660 ;;		None
  5661 ;; Tracked objects:
  5662 ;;		On entry : 0/0
  5663 ;;		On exit  : 3F/0
  5664 ;;		Unchanged: 0/0
  5665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5670 ;;Total ram usage:        0 bytes
  5671 ;; Hardware stack levels used:    1
  5672 ;; Hardware stack levels required when called:    3
  5673 ;; This function calls:
  5674 ;;		Nothing
  5675 ;; This function is called by:
  5676 ;;		_eaDogM_WriteString
  5677 ;;		_send_lcd_cmd_dma
  5678 ;; This function uses a reentrant model
  5679 ;;
  5680                           
  5681                           	psect	text25
  5682  00596E                     __ptext25:
  5683                           	opt callstack 0
  5684  00596E                     _wait_lcd_set:
  5685                           	opt callstack 25
  5686                           
  5687                           ;eadog.c: 116:  spi_link.LCD_DATA = 1;
  5688                           
  5689                           ; BSR set to: 0
  5690                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5691                           ;incstack = 0
  5692  00596E  0100               	movlb	0	; () banked
  5693  005970  876D               	bsf	_spi_link& (0+255),3,b	;volatile
  5694                           
  5695                           ; BSR set to: 0
  5696                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  5697  005972  0012               	return		;funcret
  5698  005974                     __end_of_wait_lcd_set:
  5699                           	opt callstack 0
  5700                           
  5701 ;; *************** function _wait_lcd_done *****************
  5702 ;; Defined at:
  5703 ;;		line 124 in file "eadog.c"
  5704 ;; Parameters:    Size  Location     Type
  5705 ;;		None
  5706 ;; Auto vars:     Size  Location     Type
  5707 ;;		None
  5708 ;; Return value:  Size  Location     Type
  5709 ;;                  1  [STACK] void 
  5710 ;; Registers used:
  5711 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5712 ;; Tracked objects:
  5713 ;;		On entry : 0/0
  5714 ;;		On exit  : 3F/0
  5715 ;;		Unchanged: 0/0
  5716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5721 ;;Total ram usage:        0 bytes
  5722 ;; Hardware stack levels used:    1
  5723 ;; Hardware stack levels required when called:    4
  5724 ;; This function calls:
  5725 ;;		_wdtdelay
  5726 ;; This function is called by:
  5727 ;;		_main
  5728 ;;		_send_lcd_cmd_dma
  5729 ;; This function uses a reentrant model
  5730 ;;
  5731                           
  5732                           	psect	text26
  5733  0057EE                     __ptext26:
  5734                           	opt callstack 0
  5735  0057EE                     _wait_lcd_done:
  5736                           	opt callstack 26
  5737                           
  5738                           ;eadog.c: 126:  while (spi_link.LCD_DATA);
  5739                           
  5740                           ; BSR set to: 0
  5741                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5742                           ;incstack = 0
  5743  0057EE  0100               	movlb	0	; () banked
  5744  0057F0  B76D               	btfsc	_spi_link& (0+255),3,b	;volatile
  5745  0057F2  D7FD               	goto	_wait_lcd_done
  5746                           
  5747                           ; BSR set to: 0
  5748                           ;eadog.c: 127:  wdtdelay(50);
  5749  0057F4  0E32               	movlw	50
  5750  0057F6  6EE6               	movwf	postinc1,c
  5751  0057F8  0E00               	movlw	0
  5752  0057FA  6EE6               	movwf	postinc1,c
  5753  0057FC  0E00               	movlw	0
  5754  0057FE  6EE6               	movwf	postinc1,c
  5755  005800  0E00               	movlw	0
  5756  005802  6EE6               	movwf	postinc1,c
  5757  005804  EC8D  F027         	call	_wdtdelay	;wreg free
  5758                           
  5759                           ; BSR set to: 0
  5760                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  5761  005808  0012               	return		;funcret
  5762  00580A                     __end_of_wait_lcd_done:
  5763                           	opt callstack 0
  5764                           
  5765 ;; *************** function _wdtdelay *****************
  5766 ;; Defined at:
  5767 ;;		line 21 in file "eadog.c"
  5768 ;; Parameters:    Size  Location     Type
  5769 ;;  delay           4  [STACK] unsigned long 
  5770 ;; Auto vars:     Size  Location     Type
  5771 ;;		None
  5772 ;; Return value:  Size  Location     Type
  5773 ;;                  1  [STACK] void 
  5774 ;; Registers used:
  5775 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5776 ;; Tracked objects:
  5777 ;;		On entry : 0/0
  5778 ;;		On exit  : 3F/0
  5779 ;;		Unchanged: 0/0
  5780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5785 ;;Total ram usage:        0 bytes
  5786 ;; Hardware stack levels used:    1
  5787 ;; Hardware stack levels required when called:    3
  5788 ;; This function calls:
  5789 ;;		Nothing
  5790 ;; This function is called by:
  5791 ;;		_init_display
  5792 ;;		_send_lcd_cmd
  5793 ;;		_send_lcd_cmd_long
  5794 ;;		_wait_lcd_done
  5795 ;; This function uses a reentrant model
  5796 ;;
  5797                           
  5798                           	psect	text27
  5799  004F1A                     __ptext27:
  5800                           	opt callstack 0
  5801  004F1A                     _wdtdelay:
  5802                           	opt callstack 26
  5803                           
  5804                           ;eadog.c: 21: void wdtdelay(uint32_t delay);eadog.c: 22: {;eadog.c: 23:  static uint32_t
      +                           dcount;;eadog.c: 25:  for (dcount = 0; dcount <= delay; dcount++) {
  5805                           
  5806                           ; BSR set to: 0
  5807                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5808                           ;incstack = 0
  5809  004F1A  0100               	movlb	0	; () banked
  5810  004F1C  6B85               	clrf	wdtdelay@dcount& (0+255),b
  5811  004F1E  6B86               	clrf	(wdtdelay@dcount+1)& (0+255),b
  5812  004F20  6B87               	clrf	(wdtdelay@dcount+2)& (0+255),b
  5813  004F22  6B88               	clrf	(wdtdelay@dcount+3)& (0+255),b
  5814  004F24  D009               	goto	l4945
  5815  004F26                     l1305:
  5816                           
  5817                           ; BSR set to: 0
  5818                           ;eadog.c: 26:   __nop();
  5819  004F26  F000               	nop	
  5820  004F28  0004               	clrwdt		;# 
  5821                           
  5822                           ;eadog.c: 28:  };
  5823  004F2A  0E01               	movlw	1
  5824  004F2C  0100               	movlb	0	; () banked
  5825  004F2E  2785               	addwf	wdtdelay@dcount& (0+255),f,b
  5826  004F30  0E00               	movlw	0
  5827  004F32  2386               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  5828  004F34  2387               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  5829  004F36  2388               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  5830  004F38                     l4945:
  5831                           
  5832                           ; BSR set to: 0
  5833                           ;stkvar	_delay @ sp[(0)+-4]
  5834  004F38  0EFC               	movlw	-4
  5835  004F3A  006F FF8C  F03E    	movff	plusw1,btemp
  5836  004F40  5185               	movf	wdtdelay@dcount& (0+255),w,b
  5837  004F42  5C3E               	subwf	btemp,w,c
  5838  004F44  0EFD               	movlw	-3
  5839  004F46  006F FF8C  F03E    	movff	plusw1,btemp
  5840  004F4C  5186               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  5841  004F4E  583E               	subwfb	btemp,w,c
  5842  004F50  0EFE               	movlw	-2
  5843  004F52  006F FF8C  F03E    	movff	plusw1,btemp
  5844  004F58  5187               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  5845  004F5A  583E               	subwfb	btemp,w,c
  5846  004F5C  0EFF               	movlw	-1
  5847  004F5E  006F FF8C  F03E    	movff	plusw1,btemp
  5848  004F64  5188               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  5849  004F66  583E               	subwfb	btemp,w,c
  5850  004F68  B0D8               	btfsc	status,0,c
  5851  004F6A  D7DD               	goto	l1305
  5852                           
  5853                           ; BSR set to: 0
  5854                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  5855  004F6C  52E5               	movf	postdec1,f,c
  5856  004F6E  52E5               	movf	postdec1,f,c
  5857  004F70  52E5               	movf	postdec1,f,c
  5858  004F72  52E5               	movf	postdec1,f,c
  5859  004F74  0012               	return		;funcret
  5860  004F76                     __end_of_wdtdelay:
  5861                           	opt callstack 0
  5862                           
  5863 ;; *************** function _start_lcd *****************
  5864 ;; Defined at:
  5865 ;;		line 109 in file "eadog.c"
  5866 ;; Parameters:    Size  Location     Type
  5867 ;;		None
  5868 ;; Auto vars:     Size  Location     Type
  5869 ;;		None
  5870 ;; Return value:  Size  Location     Type
  5871 ;;                  1  [STACK] void 
  5872 ;; Registers used:
  5873 ;;		None
  5874 ;; Tracked objects:
  5875 ;;		On entry : 0/3B
  5876 ;;		On exit  : 3F/3B
  5877 ;;		Unchanged: 0/0
  5878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5883 ;;Total ram usage:        0 bytes
  5884 ;; Hardware stack levels used:    1
  5885 ;; Hardware stack levels required when called:    3
  5886 ;; This function calls:
  5887 ;;		Nothing
  5888 ;; This function is called by:
  5889 ;;		_eaDogM_WriteString
  5890 ;;		_send_lcd_cmd_dma
  5891 ;; This function uses a reentrant model
  5892 ;;
  5893                           
  5894                           	psect	text28
  5895  005974                     __ptext28:
  5896                           	opt callstack 0
  5897  005974                     _start_lcd:
  5898                           	opt callstack 25
  5899                           
  5900                           ;eadog.c: 111:  DMA1CON0bits.DMA1SIRQEN = 1;
  5901                           
  5902                           ; BSR set to: 0
  5903                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5904                           ;incstack = 0
  5905  005974  013B               	movlb	59	; () banked
  5906  005976  8DFC               	bsf	252,6,b	;volatile
  5907                           
  5908                           ; BSR set to: 59
  5909                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  5910  005978  0012               	return		;funcret
  5911  00597A                     __end_of_start_lcd:
  5912                           	opt callstack 0
  5913                           
  5914 ;; *************** function _ringBufS_flush *****************
  5915 ;; Defined at:
  5916 ;;		line 76 in file "ringbufs.c"
  5917 ;; Parameters:    Size  Location     Type
  5918 ;;  _this           2  [STACK] PTR struct ringBufS_t
  5919 ;;		 -> ring_buf1(67), 
  5920 ;;  clearBuffer     1  [STACK] const char 
  5921 ;; Auto vars:     Size  Location     Type
  5922 ;;		None
  5923 ;; Return value:  Size  Location     Type
  5924 ;;                  1  [STACK] void 
  5925 ;; Registers used:
  5926 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5927 ;; Tracked objects:
  5928 ;;		On entry : 3F/0
  5929 ;;		On exit  : 0/0
  5930 ;;		Unchanged: 0/0
  5931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5936 ;;Total ram usage:        0 bytes
  5937 ;; Hardware stack levels used:    1
  5938 ;; Hardware stack levels required when called:    4
  5939 ;; This function calls:
  5940 ;;		_memset
  5941 ;; This function is called by:
  5942 ;;		_eaDogM_WriteString
  5943 ;;		_send_lcd_cmd_dma
  5944 ;; This function uses a reentrant model
  5945 ;;
  5946                           
  5947                           	psect	text29
  5948  004B9C                     __ptext29:
  5949                           	opt callstack 0
  5950  004B9C                     _ringBufS_flush:
  5951                           	opt callstack 24
  5952                           
  5953                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  5954                           ;stkvar	__this @ sp[(0)+-2]
  5955                           
  5956                           ; BSR set to: 59
  5957                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5958                           ;incstack = 0
  5959  004B9C  0EFE               	movlw	-2
  5960  004B9E  006F FF8C  F048    	movff	plusw1,btemp+10
  5961  004BA4  0EFF               	movlw	-1
  5962  004BA6  006F FF8C  F049    	movff	plusw1,btemp+11
  5963  004BAC  0E42               	movlw	66
  5964  004BAE  2448               	addwf	btemp+10,w,c
  5965  004BB0  6ED9               	movwf	fsr2l,c
  5966  004BB2  0E00               	movlw	0
  5967  004BB4  2049               	addwfc	btemp+11,w,c
  5968  004BB6  6EDA               	movwf	fsr2h,c
  5969  004BB8  0E00               	movlw	0
  5970  004BBA  6EDF               	movwf	indf2,c
  5971                           
  5972                           ;ringbufs.c: 79:  _this->head = 0;
  5973                           ;stkvar	__this @ sp[(0)+-2]
  5974  004BBC  0EFE               	movlw	-2
  5975  004BBE  006F FF8C  F048    	movff	plusw1,btemp+10
  5976  004BC4  0EFF               	movlw	-1
  5977  004BC6  006F FF8C  F049    	movff	plusw1,btemp+11
  5978  004BCC  0E40               	movlw	64
  5979  004BCE  2448               	addwf	btemp+10,w,c
  5980  004BD0  6ED9               	movwf	fsr2l,c
  5981  004BD2  0E00               	movlw	0
  5982  004BD4  2049               	addwfc	btemp+11,w,c
  5983  004BD6  6EDA               	movwf	fsr2h,c
  5984  004BD8  0E00               	movlw	0
  5985  004BDA  6EDF               	movwf	indf2,c
  5986                           
  5987                           ;ringbufs.c: 80:  _this->tail = 0;
  5988                           ;stkvar	__this @ sp[(0)+-2]
  5989  004BDC  0EFE               	movlw	-2
  5990  004BDE  006F FF8C  F048    	movff	plusw1,btemp+10
  5991  004BE4  0EFF               	movlw	-1
  5992  004BE6  006F FF8C  F049    	movff	plusw1,btemp+11
  5993  004BEC  0E41               	movlw	65
  5994  004BEE  2448               	addwf	btemp+10,w,c
  5995  004BF0  6ED9               	movwf	fsr2l,c
  5996  004BF2  0E00               	movlw	0
  5997  004BF4  2049               	addwfc	btemp+11,w,c
  5998  004BF6  6EDA               	movwf	fsr2h,c
  5999  004BF8  0E00               	movlw	0
  6000  004BFA  6EDF               	movwf	indf2,c
  6001                           
  6002                           ;ringbufs.c: 81:  if (clearBuffer) {
  6003                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  6004  004BFC  0EFD               	movlw	-3
  6005  004BFE  50E3               	movf	plusw1,w,c
  6006  004C00  B4D8               	btfsc	status,2,c
  6007  004C02  D011               	goto	l1441
  6008                           
  6009                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  6010  004C04  0E40               	movlw	64
  6011  004C06  6EE6               	movwf	postinc1,c
  6012  004C08  0E00               	movlw	0
  6013  004C0A  6EE6               	movwf	postinc1,c
  6014  004C0C  0E00               	movlw	0
  6015  004C0E  6EE6               	movwf	postinc1,c
  6016  004C10  0E00               	movlw	0
  6017  004C12  6EE6               	movwf	postinc1,c
  6018                           
  6019                           ;stkvar	__this @ sp[(-4)+-2]
  6020  004C14  0EFA               	movlw	-6
  6021  004C16  006F FF8F FFE6     	movff	plusw1,postinc1
  6022  004C1C  006F FF8F FFE6     	movff	plusw1,postinc1
  6023  004C22  EC1C  F018         	call	_memset	;wreg free
  6024  004C26                     l1441:
  6025                           
  6026                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  6027  004C26  52E5               	movf	postdec1,f,c
  6028  004C28  52E5               	movf	postdec1,f,c
  6029  004C2A  52E5               	movf	postdec1,f,c
  6030  004C2C  0012               	return		;funcret
  6031  004C2E                     __end_of_ringBufS_flush:
  6032                           	opt callstack 0
  6033                           
  6034 ;; *************** function _memset *****************
  6035 ;; Defined at:
  6036 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/memset.c"
  6037 ;; Parameters:    Size  Location     Type
  6038 ;;  dest            2  [STACK] PTR void 
  6039 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6040 ;;  c               2  [STACK] int 
  6041 ;;  n               2  [STACK] unsigned int 
  6042 ;; Auto vars:     Size  Location     Type
  6043 ;;  s               2  [STACK] PTR unsigned char 
  6044 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6045 ;;  k               2  [STACK] unsigned int 
  6046 ;; Return value:  Size  Location     Type
  6047 ;;                  2  [STACK] PTR void 
  6048 ;; Registers used:
  6049 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6050 ;; Tracked objects:
  6051 ;;		On entry : 0/0
  6052 ;;		On exit  : 0/0
  6053 ;;		Unchanged: 0/0
  6054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6059 ;;Total ram usage:        0 bytes
  6060 ;; Hardware stack levels used:    1
  6061 ;; Hardware stack levels required when called:    3
  6062 ;; This function calls:
  6063 ;;		Nothing
  6064 ;; This function is called by:
  6065 ;;		_ringBufS_init
  6066 ;;		_ringBufS_flush
  6067 ;; This function uses a reentrant model
  6068 ;;
  6069                           
  6070                           	psect	text30
  6071  003038                     __ptext30:
  6072                           	opt callstack 0
  6073  003038                     _memset:
  6074                           	opt callstack 0
  6075                           
  6076                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6077  003038  52E6               	movf	postinc1,f,c
  6078  00303A  52E6               	movf	postinc1,f,c
  6079  00303C  52E6               	movf	postinc1,f,c
  6080  00303E  52E6               	movf	postinc1,f,c
  6081                           
  6082                           ;stkvar	_dest @ sp[(-4)+-2]
  6083                           
  6084                           ;incstack = 0
  6085  003040  0EFA               	movlw	-6
  6086  003042  006F FF8C  F048    	movff	plusw1,btemp+10
  6087  003048  0EFB               	movlw	-5
  6088  00304A  006F FF8C  F049    	movff	plusw1,btemp+11
  6089                           
  6090                           ;stkvar	_s @ sp[(-4)+0]
  6091  003050  0EFD               	movlw	-3
  6092  003052  0060  F127  FFE3   	movff	btemp+11,plusw1
  6093  003058  0EFC               	movlw	-4
  6094  00305A  0060  F123  FFE3   	movff	btemp+10,plusw1
  6095                           
  6096                           ;stkvar	_n @ sp[(-4)+-6]
  6097  003060  0EF6               	movlw	-10
  6098  003062  006F FF8C  F03E    	movff	plusw1,btemp
  6099  003068  0EF7               	movlw	-9
  6100  00306A  50E3               	movf	plusw1,w,c
  6101  00306C  103E               	iorwf	btemp,w,c
  6102  00306E  B4D8               	btfsc	status,2,c
  6103  003070  D154               	goto	u3760
  6104                           
  6105                           ;stkvar	_c @ sp[(-4)+-4]
  6106                           ;stkvar	_s @ sp[(-4)+0]
  6107  003072  0EFC               	movlw	-4
  6108  003074  006F FF8F FFD9     	movff	plusw1,fsr2l
  6109  00307A  0EFD               	movlw	-3
  6110  00307C  006F FF8F FFDA     	movff	plusw1,fsr2h
  6111  003082  0EF8               	movlw	-8
  6112  003084  006F FF8F FFDF     	movff	plusw1,indf2
  6113                           
  6114                           ;stkvar	_c @ sp[(-4)+-4]
  6115                           ;stkvar	_n @ sp[(-4)+-6]
  6116                           ;stkvar	_s @ sp[(-4)+0]
  6117  00308A  0EFC               	movlw	-4
  6118  00308C  006F FF8C  F048    	movff	plusw1,btemp+10
  6119  003092  0EFD               	movlw	-3
  6120  003094  006F FF8C  F049    	movff	plusw1,btemp+11
  6121  00309A  0EF6               	movlw	-10
  6122  00309C  50E3               	movf	plusw1,w,c
  6123  00309E  2648               	addwf	btemp+10,f,c
  6124  0030A0  0EF7               	movlw	-9
  6125  0030A2  50E3               	movf	plusw1,w,c
  6126  0030A4  2249               	addwfc	btemp+11,f,c
  6127  0030A6  0EFF               	movlw	255
  6128  0030A8  2448               	addwf	btemp+10,w,c
  6129  0030AA  6ED9               	movwf	fsr2l,c
  6130  0030AC  0EFF               	movlw	255
  6131  0030AE  2049               	addwfc	btemp+11,w,c
  6132  0030B0  6EDA               	movwf	fsr2h,c
  6133  0030B2  0EF8               	movlw	-8
  6134  0030B4  006F FF8F FFDF     	movff	plusw1,indf2
  6135                           
  6136                           ;stkvar	_n @ sp[(-4)+-6]
  6137  0030BA  0EF7               	movlw	-9
  6138  0030BC  50E3               	movf	plusw1,w,c
  6139  0030BE  E108               	bnz	l6559
  6140  0030C0  0EF6               	movlw	-10
  6141  0030C2  006F FF8C  F03E    	movff	plusw1,btemp
  6142  0030C8  0E03               	movlw	3
  6143  0030CA  5E3E               	subwf	btemp,f,c
  6144  0030CC  A0D8               	btfss	status,0,c
  6145  0030CE  D125               	goto	u3760
  6146  0030D0                     l6559:
  6147                           
  6148                           ;stkvar	_c @ sp[(-4)+-4]
  6149                           ;stkvar	_s @ sp[(-4)+0]
  6150  0030D0  0EFC               	movlw	-4
  6151  0030D2  006F FF8C  F048    	movff	plusw1,btemp+10
  6152  0030D8  0EFD               	movlw	-3
  6153  0030DA  006F FF8C  F049    	movff	plusw1,btemp+11
  6154  0030E0  0E01               	movlw	1
  6155  0030E2  2448               	addwf	btemp+10,w,c
  6156  0030E4  6ED9               	movwf	fsr2l,c
  6157  0030E6  0E00               	movlw	0
  6158  0030E8  2049               	addwfc	btemp+11,w,c
  6159  0030EA  6EDA               	movwf	fsr2h,c
  6160  0030EC  0EF8               	movlw	-8
  6161  0030EE  006F FF8F FFDF     	movff	plusw1,indf2
  6162                           
  6163                           ;stkvar	_c @ sp[(-4)+-4]
  6164                           ;stkvar	_s @ sp[(-4)+0]
  6165  0030F4  0EFC               	movlw	-4
  6166  0030F6  006F FF8C  F048    	movff	plusw1,btemp+10
  6167  0030FC  0EFD               	movlw	-3
  6168  0030FE  006F FF8C  F049    	movff	plusw1,btemp+11
  6169  003104  0E02               	movlw	2
  6170  003106  2448               	addwf	btemp+10,w,c
  6171  003108  6ED9               	movwf	fsr2l,c
  6172  00310A  0E00               	movlw	0
  6173  00310C  2049               	addwfc	btemp+11,w,c
  6174  00310E  6EDA               	movwf	fsr2h,c
  6175  003110  0EF8               	movlw	-8
  6176  003112  006F FF8F FFDF     	movff	plusw1,indf2
  6177                           
  6178                           ;stkvar	_c @ sp[(-4)+-4]
  6179                           ;stkvar	_n @ sp[(-4)+-6]
  6180                           ;stkvar	_s @ sp[(-4)+0]
  6181  003118  0EFC               	movlw	-4
  6182  00311A  006F FF8C  F048    	movff	plusw1,btemp+10
  6183  003120  0EFD               	movlw	-3
  6184  003122  006F FF8C  F049    	movff	plusw1,btemp+11
  6185  003128  0EF6               	movlw	-10
  6186  00312A  50E3               	movf	plusw1,w,c
  6187  00312C  2648               	addwf	btemp+10,f,c
  6188  00312E  0EF7               	movlw	-9
  6189  003130  50E3               	movf	plusw1,w,c
  6190  003132  2249               	addwfc	btemp+11,f,c
  6191  003134  0EFE               	movlw	254
  6192  003136  2448               	addwf	btemp+10,w,c
  6193  003138  6ED9               	movwf	fsr2l,c
  6194  00313A  0EFF               	movlw	255
  6195  00313C  2049               	addwfc	btemp+11,w,c
  6196  00313E  6EDA               	movwf	fsr2h,c
  6197  003140  0EF8               	movlw	-8
  6198  003142  006F FF8F FFDF     	movff	plusw1,indf2
  6199                           
  6200                           ;stkvar	_c @ sp[(-4)+-4]
  6201                           ;stkvar	_n @ sp[(-4)+-6]
  6202                           ;stkvar	_s @ sp[(-4)+0]
  6203  003148  0EFC               	movlw	-4
  6204  00314A  006F FF8C  F048    	movff	plusw1,btemp+10
  6205  003150  0EFD               	movlw	-3
  6206  003152  006F FF8C  F049    	movff	plusw1,btemp+11
  6207  003158  0EF6               	movlw	-10
  6208  00315A  50E3               	movf	plusw1,w,c
  6209  00315C  2648               	addwf	btemp+10,f,c
  6210  00315E  0EF7               	movlw	-9
  6211  003160  50E3               	movf	plusw1,w,c
  6212  003162  2249               	addwfc	btemp+11,f,c
  6213  003164  0EFD               	movlw	253
  6214  003166  2448               	addwf	btemp+10,w,c
  6215  003168  6ED9               	movwf	fsr2l,c
  6216  00316A  0EFF               	movlw	255
  6217  00316C  2049               	addwfc	btemp+11,w,c
  6218  00316E  6EDA               	movwf	fsr2h,c
  6219  003170  0EF8               	movlw	-8
  6220  003172  006F FF8F FFDF     	movff	plusw1,indf2
  6221                           
  6222                           ;stkvar	_n @ sp[(-4)+-6]
  6223  003178  0EF7               	movlw	-9
  6224  00317A  50E3               	movf	plusw1,w,c
  6225  00317C  E108               	bnz	l6565
  6226  00317E  0EF6               	movlw	-10
  6227  003180  006F FF8C  F03E    	movff	plusw1,btemp
  6228  003186  0E07               	movlw	7
  6229  003188  5E3E               	subwf	btemp,f,c
  6230  00318A  A0D8               	btfss	status,0,c
  6231  00318C  D0C6               	goto	u3760
  6232  00318E                     l6565:
  6233                           
  6234                           ;stkvar	_c @ sp[(-4)+-4]
  6235                           ;stkvar	_s @ sp[(-4)+0]
  6236  00318E  0EFC               	movlw	-4
  6237  003190  006F FF8C  F048    	movff	plusw1,btemp+10
  6238  003196  0EFD               	movlw	-3
  6239  003198  006F FF8C  F049    	movff	plusw1,btemp+11
  6240  00319E  0E03               	movlw	3
  6241  0031A0  2448               	addwf	btemp+10,w,c
  6242  0031A2  6ED9               	movwf	fsr2l,c
  6243  0031A4  0E00               	movlw	0
  6244  0031A6  2049               	addwfc	btemp+11,w,c
  6245  0031A8  6EDA               	movwf	fsr2h,c
  6246  0031AA  0EF8               	movlw	-8
  6247  0031AC  006F FF8F FFDF     	movff	plusw1,indf2
  6248                           
  6249                           ;stkvar	_c @ sp[(-4)+-4]
  6250                           ;stkvar	_n @ sp[(-4)+-6]
  6251                           ;stkvar	_s @ sp[(-4)+0]
  6252  0031B2  0EFC               	movlw	-4
  6253  0031B4  006F FF8C  F048    	movff	plusw1,btemp+10
  6254  0031BA  0EFD               	movlw	-3
  6255  0031BC  006F FF8C  F049    	movff	plusw1,btemp+11
  6256  0031C2  0EF6               	movlw	-10
  6257  0031C4  50E3               	movf	plusw1,w,c
  6258  0031C6  2648               	addwf	btemp+10,f,c
  6259  0031C8  0EF7               	movlw	-9
  6260  0031CA  50E3               	movf	plusw1,w,c
  6261  0031CC  2249               	addwfc	btemp+11,f,c
  6262  0031CE  0EFC               	movlw	252
  6263  0031D0  2448               	addwf	btemp+10,w,c
  6264  0031D2  6ED9               	movwf	fsr2l,c
  6265  0031D4  0EFF               	movlw	255
  6266  0031D6  2049               	addwfc	btemp+11,w,c
  6267  0031D8  6EDA               	movwf	fsr2h,c
  6268  0031DA  0EF8               	movlw	-8
  6269  0031DC  006F FF8F FFDF     	movff	plusw1,indf2
  6270                           
  6271                           ;stkvar	_n @ sp[(-4)+-6]
  6272  0031E2  0EF7               	movlw	-9
  6273  0031E4  50E3               	movf	plusw1,w,c
  6274  0031E6  E108               	bnz	l6571
  6275  0031E8  0EF6               	movlw	-10
  6276  0031EA  006F FF8C  F03E    	movff	plusw1,btemp
  6277  0031F0  0E09               	movlw	9
  6278  0031F2  5E3E               	subwf	btemp,f,c
  6279  0031F4  A0D8               	btfss	status,0,c
  6280  0031F6  D091               	goto	u3760
  6281  0031F8                     l6571:
  6282                           
  6283                           ;stkvar	_s @ sp[(-4)+0]
  6284  0031F8  0EFC               	movlw	-4
  6285  0031FA  006F FF8C  F048    	movff	plusw1,btemp+10
  6286  003200  1E48               	comf	btemp+10,f,c
  6287  003202  0EFD               	movlw	-3
  6288  003204  006F FF8C  F049    	movff	plusw1,btemp+11
  6289  00320A  1E49               	comf	btemp+11,f,c
  6290  00320C  2A48               	incf	btemp+10,f,c
  6291  00320E  B4D8               	btfsc	status,2,c
  6292  003210  2A49               	incf	btemp+11,f,c
  6293  003212  0E03               	movlw	3
  6294  003214  1648               	andwf	btemp+10,f,c
  6295  003216  0E00               	movlw	0
  6296  003218  1649               	andwf	btemp+11,f,c
  6297                           
  6298                           ;stkvar	_k @ sp[(-4)+2]
  6299  00321A  0EFE               	movlw	-2
  6300  00321C  0060  F123  FFE3   	movff	btemp+10,plusw1
  6301  003222  0EFF               	movlw	-1
  6302  003224  0060  F127  FFE3   	movff	btemp+11,plusw1
  6303                           
  6304                           ;stkvar	_k @ sp[(-4)+2]
  6305                           ;stkvar	_s @ sp[(-4)+0]
  6306  00322A  0EFC               	movlw	-4
  6307  00322C  50E3               	movf	plusw1,w,c
  6308  00322E  6E3E               	movwf	btemp,c
  6309  003230  0EFE               	movlw	-2
  6310  003232  50E3               	movf	plusw1,w,c
  6311  003234  263E               	addwf	btemp,f,c
  6312  003236  0EFC               	movlw	-4
  6313  003238  0060  F0FB  FFE3   	movff	btemp,plusw1
  6314  00323E  0EFD               	movlw	-3
  6315  003240  50E3               	movf	plusw1,w,c
  6316  003242  6E3E               	movwf	btemp,c
  6317  003244  0EFF               	movlw	-1
  6318  003246  50E3               	movf	plusw1,w,c
  6319  003248  223E               	addwfc	btemp,f,c
  6320  00324A  0EFD               	movlw	-3
  6321  00324C  0060  F0FB  FFE3   	movff	btemp,plusw1
  6322                           
  6323                           ;stkvar	_k @ sp[(-4)+2]
  6324                           ;stkvar	_n @ sp[(-4)+-6]
  6325  003252  0EF6               	movlw	-10
  6326  003254  50E3               	movf	plusw1,w,c
  6327  003256  6E3E               	movwf	btemp,c
  6328  003258  0EFE               	movlw	-2
  6329  00325A  50E3               	movf	plusw1,w,c
  6330  00325C  5E3E               	subwf	btemp,f,c
  6331  00325E  0EF6               	movlw	-10
  6332  003260  0060  F0FB  FFE3   	movff	btemp,plusw1
  6333  003266  0EF7               	movlw	-9
  6334  003268  50E3               	movf	plusw1,w,c
  6335  00326A  6E3E               	movwf	btemp,c
  6336  00326C  0EFF               	movlw	-1
  6337  00326E  50E3               	movf	plusw1,w,c
  6338  003270  5A3E               	subwfb	btemp,f,c
  6339  003272  0EF7               	movlw	-9
  6340  003274  0060  F0FB  FFE3   	movff	btemp,plusw1
  6341  00327A  0EFC               	movlw	252
  6342  00327C  6E48               	movwf	btemp+10,c
  6343  00327E  0EFF               	movlw	255
  6344  003280  6E49               	movwf	btemp+11,c
  6345                           
  6346                           ;stkvar	_n @ sp[(-4)+-6]
  6347  003282  0EF6               	movlw	-10
  6348  003284  006F FF8C  F03E    	movff	plusw1,btemp
  6349  00328A  5048               	movf	btemp+10,w,c
  6350  00328C  163E               	andwf	btemp,f,c
  6351  00328E  0EF6               	movlw	-10
  6352  003290  0060  F0FB  FFE3   	movff	btemp,plusw1
  6353  003296  0EF7               	movlw	-9
  6354  003298  006F FF8C  F03E    	movff	plusw1,btemp
  6355  00329E  5049               	movf	btemp+11,w,c
  6356  0032A0  163E               	andwf	btemp,f,c
  6357  0032A2  0EF7               	movlw	-9
  6358  0032A4  D02E               	goto	L11
  6359  0032A6                     l6579:
  6360                           
  6361                           ;stkvar	_c @ sp[(-4)+-4]
  6362                           ;stkvar	_s @ sp[(-4)+0]
  6363  0032A6  0EFC               	movlw	-4
  6364  0032A8  006F FF8F FFD9     	movff	plusw1,fsr2l
  6365  0032AE  0EFD               	movlw	-3
  6366  0032B0  006F FF8F FFDA     	movff	plusw1,fsr2h
  6367  0032B6  0EF8               	movlw	-8
  6368  0032B8  006F FF8F FFDF     	movff	plusw1,indf2
  6369                           
  6370                           ;stkvar	_n @ sp[(-4)+-6]
  6371  0032BE  0EF6               	movlw	-10
  6372  0032C0  006F FF8C  F03E    	movff	plusw1,btemp
  6373  0032C6  0E01               	movlw	1
  6374  0032C8  5E3E               	subwf	btemp,f,c
  6375  0032CA  0EF6               	movlw	-10
  6376  0032CC  0060  F0FB  FFE3   	movff	btemp,plusw1
  6377  0032D2  0EF7               	movlw	-9
  6378  0032D4  006F FF8C  F03E    	movff	plusw1,btemp
  6379  0032DA  0E00               	movlw	0
  6380  0032DC  5A3E               	subwfb	btemp,f,c
  6381  0032DE  0EF7               	movlw	-9
  6382  0032E0  0060  F0FB  FFE3   	movff	btemp,plusw1
  6383                           
  6384                           ;stkvar	_s @ sp[(-4)+0]
  6385  0032E6  0EFC               	movlw	-4
  6386  0032E8  50E3               	movf	plusw1,w,c
  6387  0032EA  0F01               	addlw	1
  6388  0032EC  6E3E               	movwf	btemp,c
  6389  0032EE  0EFC               	movlw	-4
  6390  0032F0  0060  F0FB  FFE3   	movff	btemp,plusw1
  6391  0032F6  6A3E               	clrf	btemp,c
  6392  0032F8  0EFD               	movlw	-3
  6393  0032FA  50E3               	movf	plusw1,w,c
  6394  0032FC  203E               	addwfc	btemp,w,c
  6395  0032FE  6E3E               	movwf	btemp,c
  6396  003300  0EFD               	movlw	-3
  6397  003302                     L11:
  6398  003302  0060  F0FB  FFE3   	movff	btemp,plusw1
  6399                           
  6400                           ;stkvar	_n @ sp[(-4)+-6]
  6401  003308  0EF6               	movlw	-10
  6402  00330A  006F FF8C  F03E    	movff	plusw1,btemp
  6403  003310  0EF7               	movlw	-9
  6404  003312  50E3               	movf	plusw1,w,c
  6405  003314  103E               	iorwf	btemp,w,c
  6406  003316  A4D8               	btfss	status,2,c
  6407  003318  D7C6               	goto	l6579
  6408  00331A                     u3760:
  6409                           
  6410                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  6411  00331A  0EF6               	movlw	246
  6412  00331C  26E1               	addwf	fsr1l,f,c
  6413  00331E  0EFF               	movlw	255
  6414  003320  22E2               	addwfc	fsr1h,f,c
  6415  003322  0012               	return		;funcret
  6416  003324                     __end_of_memset:
  6417                           	opt callstack 0
  6418                           
  6419 ;; *************** function _printf *****************
  6420 ;; Defined at:
  6421 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
  6422 ;; Parameters:    Size  Location     Type
  6423 ;;  fmt             1  [STACK] PTR const unsigned char 
  6424 ;;		 -> STR_14(3), STR_13(3), STR_12(3), 
  6425 ;; Auto vars:     Size  Location     Type
  6426 ;;  ap              2  [STACK] PTR void [1]
  6427 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6428 ;;  ret             2    0        int 
  6429 ;; Return value:  Size  Location     Type
  6430 ;;                  2  [STACK] int 
  6431 ;; Registers used:
  6432 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  6433 ;; Tracked objects:
  6434 ;;		On entry : 3F/3B
  6435 ;;		On exit  : 0/0
  6436 ;;		Unchanged: 0/0
  6437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6442 ;;Total ram usage:        0 bytes
  6443 ;; Hardware stack levels used:    1
  6444 ;; Hardware stack levels required when called:   11
  6445 ;; This function calls:
  6446 ;;		_vfprintf
  6447 ;; This function is called by:
  6448 ;;		_eaDogM_WriteString
  6449 ;;		_send_lcd_cmd_dma
  6450 ;; This function uses a reentrant model
  6451 ;;
  6452                           
  6453                           	psect	text31
  6454  004E5A                     __ptext31:
  6455                           	opt callstack 0
  6456  004E5A                     _printf:
  6457                           	opt callstack 0
  6458                           
  6459                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6460  004E5A  52E6               	movf	postinc1,f,c
  6461  004E5C  52E6               	movf	postinc1,f,c
  6462                           
  6463                           ;stkvar	?_printf @ sp[(-2)+-3]
  6464                           
  6465                           ;incstack = 0
  6466  004E5E  0EFB               	movlw	251
  6467  004E60  24E1               	addwf	fsr1l,w,c
  6468  004E62  6E48               	movwf	btemp+10,c
  6469  004E64  0EFF               	movlw	255
  6470  004E66  20E2               	addwfc	fsr1h,w,c
  6471  004E68  6E49               	movwf	btemp+11,c
  6472  004E6A  0E01               	movlw	1
  6473  004E6C  2648               	addwf	btemp+10,f,c
  6474  004E6E  0E00               	movlw	0
  6475  004E70  2249               	addwfc	btemp+11,f,c
  6476                           
  6477                           ;stkvar	_ap @ sp[(-2)+0]
  6478  004E72  0EFF               	movlw	-1
  6479  004E74  0060  F127  FFE3   	movff	btemp+11,plusw1
  6480  004E7A  0EFE               	movlw	-2
  6481  004E7C  0060  F123  FFE3   	movff	btemp+10,plusw1
  6482                           
  6483                           ;stkvar	_ap @ sp[(-2)+0]
  6484  004E82  0EFE               	movlw	254
  6485  004E84  24E1               	addwf	fsr1l,w,c
  6486  004E86  6E3E               	movwf	btemp,c
  6487  004E88  0EFF               	movlw	255
  6488  004E8A  20E2               	addwfc	fsr1h,w,c
  6489  004E8C  6E3F               	movwf	btemp+1,c
  6490  004E8E  0060  F0FB  FFE6   	movff	btemp,postinc1
  6491  004E94  0060  F0FF  FFE6   	movff	btemp+1,postinc1
  6492                           
  6493                           ;stkvar	_fmt @ sp[(-4)+-2]
  6494  004E9A  0EFA               	movlw	-6
  6495  004E9C  50E3               	movf	plusw1,w,c
  6496  004E9E  6EE6               	movwf	postinc1,c
  6497  004EA0  0E00               	movlw	0
  6498  004EA2  6EE6               	movwf	postinc1,c
  6499  004EA4  0E00               	movlw	0
  6500  004EA6  6EE6               	movwf	postinc1,c
  6501  004EA8  EC3B  F025         	call	_vfprintf	;wreg free
  6502                           
  6503                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsiz
      +                          e = 1, vargsize = 0
  6504  004EAC  52E5               	movf	postdec1,f,c
  6505  004EAE  52E5               	movf	postdec1,f,c
  6506  004EB0  52E5               	movf	postdec1,f,c
  6507  004EB2  50E7               	movf	indf1,w,c
  6508  004EB4  5EE1               	subwf	fsr1l,f,c
  6509  004EB6  0E00               	movlw	0
  6510  004EB8  5AE2               	subwfb	fsr1h,f,c
  6511  004EBA  0012               	return		;funcret
  6512  004EBC                     __end_of_printf:
  6513                           	opt callstack 0
  6514                           
  6515 ;; *************** function _vfprintf *****************
  6516 ;; Defined at:
  6517 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6518 ;; Parameters:    Size  Location     Type
  6519 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6520 ;;		 -> f(5), NULL(0), 
  6521 ;;  fmt             1  [STACK] PTR const unsigned char 
  6522 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(21), 
  6523 ;;		 -> STR_10(17), STR_9(17), STR_8(19), STR_7(23), 
  6524 ;;		 -> STR_6(6), STR_5(14), STR_4(15), STR_2(12), 
  6525 ;;		 -> STR_1(17), 
  6526 ;;  ap              2  [STACK] PTR PTR void 
  6527 ;;		 -> ap(2), ap(2), 
  6528 ;; Auto vars:     Size  Location     Type
  6529 ;;  cfmt            1  [STACK] PTR unsigned char 
  6530 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(21), 
  6531 ;;		 -> STR_10(17), STR_9(17), STR_8(19), STR_7(23), 
  6532 ;;		 -> STR_6(6), STR_5(14), STR_4(15), STR_2(12), 
  6533 ;;		 -> STR_1(17), 
  6534 ;; Return value:  Size  Location     Type
  6535 ;;                  2  [STACK] int 
  6536 ;; Registers used:
  6537 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  6538 ;; Tracked objects:
  6539 ;;		On entry : 0/0
  6540 ;;		On exit  : 0/0
  6541 ;;		Unchanged: 0/0
  6542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6547 ;;Total ram usage:        0 bytes
  6548 ;; Hardware stack levels used:    1
  6549 ;; Hardware stack levels required when called:   10
  6550 ;; This function calls:
  6551 ;;		_vfpfcnvrt
  6552 ;; This function is called by:
  6553 ;;		_sprintf
  6554 ;;		_printf
  6555 ;; This function uses a reentrant model
  6556 ;;
  6557                           
  6558                           	psect	text32
  6559  004A76                     __ptext32:
  6560                           	opt callstack 0
  6561  004A76                     _vfprintf:
  6562                           	opt callstack 0
  6563                           
  6564                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6565  004A76  52E6               	movf	postinc1,f,c
  6566                           
  6567                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  6568                           ;stkvar	_fmt @ sp[(-1)+-3]
  6569                           
  6570                           ;incstack = 0
  6571  004A78  0EFC               	movlw	-4
  6572  004A7A  006F FF8C  F049    	movff	plusw1,btemp+11
  6573                           
  6574                           ;stkvar	_cfmt @ sp[(-1)+0]
  6575  004A80  0EFF               	movlw	-1
  6576  004A82  0060  F127  FFE3   	movff	btemp+11,plusw1
  6577                           
  6578                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  6579  004A88  6A22               	clrf	_nout,c
  6580  004A8A  6A23               	clrf	_nout+1,c
  6581                           
  6582                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6583  004A8C  D020               	goto	l6593
  6584  004A8E                     l6591:
  6585                           
  6586                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  6587                           ;stkvar	_ap @ sp[(-1)+-5]
  6588  004A8E  0EFA               	movlw	-6
  6589  004A90  006F FF8F FFE6     	movff	plusw1,postinc1
  6590  004A96  006F FF8F FFE6     	movff	plusw1,postinc1
  6591                           
  6592                           ;stkvar	_cfmt @ sp[(-3)+0]
  6593  004A9C  0EFD               	movlw	253
  6594  004A9E  24E1               	addwf	fsr1l,w,c
  6595  004AA0  6E3E               	movwf	btemp,c
  6596  004AA2  0EFF               	movlw	255
  6597  004AA4  20E2               	addwfc	fsr1h,w,c
  6598  004AA6  6E3F               	movwf	btemp+1,c
  6599  004AA8  0060  F0FB  FFE6   	movff	btemp,postinc1
  6600  004AAE  0060  F0FF  FFE6   	movff	btemp+1,postinc1
  6601                           
  6602                           ;stkvar	_fp @ sp[(-5)+-2]
  6603  004AB4  0EF9               	movlw	-7
  6604  004AB6  006F FF8F FFE6     	movff	plusw1,postinc1
  6605  004ABC  006F FF8F FFE6     	movff	plusw1,postinc1
  6606  004AC2  EC59  F010         	call	_vfpfcnvrt	;wreg free
  6607  004AC6  503E               	movf	btemp,w,c
  6608  004AC8  2622               	addwf	_nout,f,c
  6609  004ACA  503F               	movf	btemp+1,w,c
  6610  004ACC  2223               	addwfc	_nout+1,f,c
  6611  004ACE                     l6593:
  6612                           
  6613                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6614                           ;stkvar	_cfmt @ sp[(-1)+0]
  6615  004ACE  50E1               	movf	fsr1l,w,c
  6616  004AD0  0FFF               	addlw	-1
  6617  004AD2  6ED9               	movwf	fsr2l,c
  6618  004AD4  50E2               	movf	fsr1h,w,c
  6619  004AD6  6EDA               	movwf	fsr2h,c
  6620  004AD8  0EFF               	movlw	255
  6621  004ADA  22DA               	addwfc	fsr2h,f,c
  6622  004ADC  006F FF7F FFF6     	movff	indf2,tblptrl
  6623  004AE2                     	if	1	;There is more than 1 active tblptr byte
  6624  004AE2  0E20               	movlw	high __smallconst
  6625  004AE4  6EF7               	movwf	tblptrh,c
  6626  004AE6                     	endif
  6627  004AE6                     	if	0	;tblptru may be non-zero
  6628  004AE6                     	endif
  6629  004AE6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6630  004AE6  0E00               	movlw	low (__smallconst shr (0+16))
  6631  004AE8  6EF8               	movwf	tblptru,c
  6632  004AEA                     	endif
  6633  004AEA  0008               	tblrd		*
  6634  004AEC  50F5               	movf	tablat,w,c
  6635  004AEE  0900               	iorlw	0
  6636  004AF0  A4D8               	btfss	status,2,c
  6637  004AF2  D7CD               	goto	l6591
  6638                           
  6639                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  6640  004AF4  0060  F088  F03E   	movff	_nout,btemp
  6641  004AFA  0060  F08C  F03F   	movff	_nout+1,btemp+1
  6642                           
  6643                           ; _vfprintf: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  6644  004B00  0EFA               	movlw	250
  6645  004B02  26E1               	addwf	fsr1l,f,c
  6646  004B04  0EFF               	movlw	255
  6647  004B06  22E2               	addwfc	fsr1h,f,c
  6648  004B08  0012               	return		;funcret
  6649  004B0A                     __end_of_vfprintf:
  6650                           	opt callstack 0
  6651                           
  6652 ;; *************** function _vfpfcnvrt *****************
  6653 ;; Defined at:
  6654 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6655 ;; Parameters:    Size  Location     Type
  6656 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6657 ;;		 -> f(5), NULL(0), 
  6658 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  6659 ;;		 -> cfmt(1), 
  6660 ;;  ap              2  [STACK] PTR PTR void 
  6661 ;;		 -> ap(2), ap(2), 
  6662 ;; Auto vars:     Size  Location     Type
  6663 ;;  ll              8  [STACK] long long 
  6664 ;;  llu             8    0        unsigned long long 
  6665 ;;  f               4    0        unsigned long long 
  6666 ;;  vp              3    0        PTR void 
  6667 ;;  ct              3    0        unsigned char [3]
  6668 ;;  cp              2  [STACK] PTR unsigned char 
  6669 ;;		 -> ?_printf(2), ?_sprintf(2), STR_3(5), V(85), 
  6670 ;;  i               2    0        int 
  6671 ;;  done            2    0        int 
  6672 ;;  c               1  [STACK] unsigned char 
  6673 ;; Return value:  Size  Location     Type
  6674 ;;                  2  [STACK] int 
  6675 ;; Registers used:
  6676 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  6677 ;; Tracked objects:
  6678 ;;		On entry : 0/0
  6679 ;;		On exit  : 0/0
  6680 ;;		Unchanged: 0/0
  6681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6686 ;;Total ram usage:        0 bytes
  6687 ;; Hardware stack levels used:    1
  6688 ;; Hardware stack levels required when called:    9
  6689 ;; This function calls:
  6690 ;;		_ctoa
  6691 ;;		_dtoa
  6692 ;;		_fputc
  6693 ;;		_stoa
  6694 ;;		_strncmp
  6695 ;; This function is called by:
  6696 ;;		_vfprintf
  6697 ;; This function uses a reentrant model
  6698 ;;
  6699                           
  6700                           	psect	text33
  6701  0020B2                     __ptext33:
  6702                           	opt callstack 0
  6703  0020B2                     _vfpfcnvrt:
  6704                           	opt callstack 0
  6705                           
  6706                           ; autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  6707  0020B2  0E0B               	movlw	11
  6708  0020B4  26E1               	addwf	fsr1l,f,c
  6709  0020B6  0E00               	movlw	0
  6710  0020B8  22E2               	addwfc	fsr1h,f,c
  6711                           
  6712                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  6713                           ;stkvar	_fmt @ sp[(-11)+-4]
  6714                           
  6715                           ;incstack = 0
  6716  0020BA  0EF1               	movlw	-15
  6717  0020BC  006F FF8F FFD9     	movff	plusw1,fsr2l
  6718  0020C2  0EF2               	movlw	-14
  6719  0020C4  006F FF8F FFDA     	movff	plusw1,fsr2h
  6720  0020CA  006F FF7F FFF6     	movff	indf2,tblptrl
  6721  0020D0                     	if	1	;There is more than 1 active tblptr byte
  6722  0020D0  0E20               	movlw	high __smallconst
  6723  0020D2  6EF7               	movwf	tblptrh,c
  6724  0020D4                     	endif
  6725  0020D4                     	if	0	;tblptru may be non-zero
  6726  0020D4                     	endif
  6727  0020D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6728  0020D4  0E00               	movlw	low (__smallconst shr (0+16))
  6729  0020D6  6EF8               	movwf	tblptru,c
  6730  0020D8                     	endif
  6731  0020D8  0008               	tblrd		*
  6732  0020DA  50F5               	movf	tablat,w,c
  6733  0020DC  0A25               	xorlw	37
  6734  0020DE  A4D8               	btfss	status,2,c
  6735  0020E0  D213               	goto	l6537
  6736                           
  6737                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  6738                           ;stkvar	_fmt @ sp[(-11)+-4]
  6739  0020E2  0EF1               	movlw	-15
  6740  0020E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  6741  0020EA  0EF2               	movlw	-14
  6742  0020EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  6743  0020F2  2ADF               	incf	indf2,f,c
  6744                           
  6745                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  6746  0020F4  6A24               	clrf	_width,c
  6747  0020F6  6A25               	clrf	_width+1,c
  6748  0020F8  6A28               	clrf	_flags,c
  6749  0020FA  6A29               	clrf	_flags+1,c
  6750                           
  6751                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  6752  0020FC  6826               	setf	_prec,c
  6753  0020FE  6827               	setf	_prec+1,c
  6754                           
  6755                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  6756                           ;stkvar	_fmt @ sp[(-11)+-4]
  6757  002100  0EF1               	movlw	-15
  6758  002102  006F FF8F FFD9     	movff	plusw1,fsr2l
  6759  002108  0EF2               	movlw	-14
  6760  00210A  006F FF8F FFDA     	movff	plusw1,fsr2h
  6761  002110  006F FF7F FFF6     	movff	indf2,tblptrl
  6762  002116                     	if	1	;There is more than 1 active tblptr byte
  6763  002116  0E20               	movlw	high __smallconst
  6764  002118  6EF7               	movwf	tblptrh,c
  6765  00211A                     	endif
  6766  00211A                     	if	0	;tblptru may be non-zero
  6767  00211A                     	endif
  6768  00211A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6769  00211A  0E00               	movlw	low (__smallconst shr (0+16))
  6770  00211C  6EF8               	movwf	tblptru,c
  6771  00211E                     	endif
  6772  00211E  0008               	tblrd		*
  6773  002120  50F5               	movf	tablat,w,c
  6774  002122  0A63               	xorlw	99
  6775  002124  A4D8               	btfss	status,2,c
  6776  002126  D034               	goto	l6487
  6777                           
  6778                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  6779                           ;stkvar	_fmt @ sp[(-11)+-4]
  6780  002128  0EF1               	movlw	-15
  6781  00212A  006F FF8F FFD9     	movff	plusw1,fsr2l
  6782  002130  0EF2               	movlw	-14
  6783  002132  006F FF8F FFDA     	movff	plusw1,fsr2h
  6784  002138  2ADF               	incf	indf2,f,c
  6785                           
  6786                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6787                           ;stkvar	_ap @ sp[(-11)+-6]
  6788  00213A  0EEF               	movlw	-17
  6789  00213C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6790  002142  0EF0               	movlw	-16
  6791  002144  006F FF8F FFDA     	movff	plusw1,fsr2h
  6792  00214A  0E02               	movlw	2
  6793  00214C  5EDE               	subwf	postinc2,f,c
  6794  00214E  0E00               	movlw	0
  6795  002150  5ADD               	subwfb	postdec2,f,c
  6796  002152  006F FF78  F048    	movff	postinc2,btemp+10
  6797  002158  006F FF74  F049    	movff	postdec2,btemp+11
  6798  00215E  0060  F123  FFD9   	movff	btemp+10,fsr2l
  6799  002164  0060  F127  FFDA   	movff	btemp+11,fsr2h
  6800  00216A  50DF               	movf	indf2,w,c
  6801  00216C  6E49               	movwf	btemp+11,c
  6802                           
  6803                           ;stkvar	_c @ sp[(-11)+10]
  6804  00216E  0EFF               	movlw	-1
  6805  002170  0060  F127  FFE3   	movff	btemp+11,plusw1
  6806                           
  6807                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  6808                           ;stkvar	_c @ sp[(-11)+10]
  6809  002176  0EFF               	movlw	-1
  6810  002178  50E3               	movf	plusw1,w,c
  6811  00217A  6EE6               	movwf	postinc1,c
  6812                           
  6813                           ;stkvar	_fp @ sp[(-12)+-2]
  6814  00217C  0EF2               	movlw	-14
  6815  00217E  006F FF8F FFE6     	movff	plusw1,postinc1
  6816  002184  006F FF8F FFE6     	movff	plusw1,postinc1
  6817  00218A  EC17  F026         	call	_ctoa	;wreg free
  6818  00218E  D1E3               	goto	l1721
  6819  002190                     l6487:
  6820                           
  6821                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  6822                           ;stkvar	_fmt @ sp[(-11)+-4]
  6823  002190  0EF1               	movlw	-15
  6824  002192  006F FF8F FFD9     	movff	plusw1,fsr2l
  6825  002198  0EF2               	movlw	-14
  6826  00219A  006F FF8F FFDA     	movff	plusw1,fsr2h
  6827  0021A0  006F FF7F FFF6     	movff	indf2,tblptrl
  6828  0021A6                     	if	1	;There is more than 1 active tblptr byte
  6829  0021A6  0E20               	movlw	high __smallconst
  6830  0021A8  6EF7               	movwf	tblptrh,c
  6831  0021AA                     	endif
  6832  0021AA                     	if	0	;tblptru may be non-zero
  6833  0021AA                     	endif
  6834  0021AA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6835  0021AA  0E00               	movlw	low (__smallconst shr (0+16))
  6836  0021AC  6EF8               	movwf	tblptru,c
  6837  0021AE                     	endif
  6838  0021AE  0008               	tblrd		*
  6839  0021B0  50F5               	movf	tablat,w,c
  6840  0021B2  0A64               	xorlw	100
  6841  0021B4  B4D8               	btfsc	status,2,c
  6842  0021B6  D014               	goto	u3670
  6843                           
  6844                           ;stkvar	_fmt @ sp[(-11)+-4]
  6845  0021B8  0EF1               	movlw	-15
  6846  0021BA  006F FF8F FFD9     	movff	plusw1,fsr2l
  6847  0021C0  0EF2               	movlw	-14
  6848  0021C2  006F FF8F FFDA     	movff	plusw1,fsr2h
  6849  0021C8  006F FF7F FFF6     	movff	indf2,tblptrl
  6850  0021CE                     	if	1	;There is more than 1 active tblptr byte
  6851  0021CE  0E20               	movlw	high __smallconst
  6852  0021D0  6EF7               	movwf	tblptrh,c
  6853  0021D2                     	endif
  6854  0021D2                     	if	0	;tblptru may be non-zero
  6855  0021D2                     	endif
  6856  0021D2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6857  0021D2  0E00               	movlw	low (__smallconst shr (0+16))
  6858  0021D4  6EF8               	movwf	tblptru,c
  6859  0021D6                     	endif
  6860  0021D6  0008               	tblrd		*
  6861  0021D8  50F5               	movf	tablat,w,c
  6862  0021DA  0A69               	xorlw	105
  6863  0021DC  A4D8               	btfss	status,2,c
  6864  0021DE  D073               	goto	l6499
  6865  0021E0                     u3670:
  6866                           
  6867                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  6868                           ;stkvar	_fmt @ sp[(-11)+-4]
  6869  0021E0  0EF1               	movlw	-15
  6870  0021E2  006F FF8F FFD9     	movff	plusw1,fsr2l
  6871  0021E8  0EF2               	movlw	-14
  6872  0021EA  006F FF8F FFDA     	movff	plusw1,fsr2h
  6873  0021F0  2ADF               	incf	indf2,f,c
  6874                           
  6875                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  6876                           ;stkvar	_ap @ sp[(-11)+-6]
  6877  0021F2  0EEF               	movlw	-17
  6878  0021F4  006F FF8F FFD9     	movff	plusw1,fsr2l
  6879  0021FA  0EF0               	movlw	-16
  6880  0021FC  006F FF8F FFDA     	movff	plusw1,fsr2h
  6881  002202  0E02               	movlw	2
  6882  002204  5EDE               	subwf	postinc2,f,c
  6883  002206  0E00               	movlw	0
  6884  002208  5ADD               	subwfb	postdec2,f,c
  6885  00220A  006F FF78  F048    	movff	postinc2,btemp+10
  6886  002210  006F FF74  F049    	movff	postdec2,btemp+11
  6887  002216  0060  F123  FFD9   	movff	btemp+10,fsr2l
  6888  00221C  0060  F127  FFDA   	movff	btemp+11,fsr2h
  6889  002222  006F FF78  F048    	movff	postinc2,btemp+10
  6890  002228  006F FF74  F049    	movff	postdec2,btemp+11
  6891                           
  6892                           ;stkvar	_ll @ sp[(-11)+0]
  6893  00222E  0EF5               	movlw	-11
  6894  002230  0060  F123  FFE3   	movff	btemp+10,plusw1
  6895  002236  0EF6               	movlw	-10
  6896  002238  0060  F127  FFE3   	movff	btemp+11,plusw1
  6897  00223E  6A3E               	clrf	btemp,c
  6898  002240  BEE3               	btfsc	plusw1,7,c
  6899  002242  683E               	setf	btemp,c
  6900  002244  0EF7               	movlw	-9
  6901  002246  0060  F0FB  FFE3   	movff	btemp,plusw1
  6902  00224C  0EF8               	movlw	-8
  6903  00224E  0060  F0FB  FFE3   	movff	btemp,plusw1
  6904  002254  0EF9               	movlw	-7
  6905  002256  0060  F0FB  FFE3   	movff	btemp,plusw1
  6906  00225C  0EFA               	movlw	-6
  6907  00225E  0060  F0FB  FFE3   	movff	btemp,plusw1
  6908  002264  0EFB               	movlw	-5
  6909  002266  0060  F0FB  FFE3   	movff	btemp,plusw1
  6910  00226C  0EFC               	movlw	-4
  6911  00226E  0060  F0FB  FFE3   	movff	btemp,plusw1
  6912  002274                     l6495:
  6913                           
  6914                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  6915                           ;stkvar	_ll @ sp[(-11)+0]
  6916  002274  50E1               	movf	fsr1l,w,c
  6917  002276  0FF5               	addlw	-11
  6918  002278  6ED9               	movwf	fsr2l,c
  6919  00227A  50E2               	movf	fsr1h,w,c
  6920  00227C  6EDA               	movwf	fsr2h,c
  6921  00227E  0EFF               	movlw	255
  6922  002280  22DA               	addwfc	fsr2h,f,c
  6923  002282  006F FF7B FFE6     	movff	postinc2,postinc1
  6924  002288  006F FF7B FFE6     	movff	postinc2,postinc1
  6925  00228E  006F FF7B FFE6     	movff	postinc2,postinc1
  6926  002294  006F FF7B FFE6     	movff	postinc2,postinc1
  6927  00229A  006F FF7B FFE6     	movff	postinc2,postinc1
  6928  0022A0  006F FF7B FFE6     	movff	postinc2,postinc1
  6929  0022A6  006F FF7B FFE6     	movff	postinc2,postinc1
  6930  0022AC  006F FF7B FFE6     	movff	postinc2,postinc1
  6931                           
  6932                           ;stkvar	_fp @ sp[(-19)+-2]
  6933  0022B2  0EEB               	movlw	-21
  6934  0022B4  006F FF8F FFE6     	movff	plusw1,postinc1
  6935  0022BA  006F FF8F FFE6     	movff	plusw1,postinc1
  6936  0022C0  ECB0  F012         	call	_dtoa	;wreg free
  6937  0022C4  D148               	goto	l1721
  6938  0022C6                     l6499:
  6939                           
  6940                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  6941  0022C6  0E02               	movlw	2
  6942  0022C8  6EE6               	movwf	postinc1,c
  6943  0022CA  0E00               	movlw	0
  6944  0022CC  6EE6               	movwf	postinc1,c
  6945  0022CE  0EA7               	movlw	STR_15& (0+255)
  6946  0022D0  6EE6               	movwf	postinc1,c
  6947                           
  6948                           ;stkvar	_fmt @ sp[(-14)+-4]
  6949  0022D2  0EEE               	movlw	-18
  6950  0022D4  006F FF8F FFD9     	movff	plusw1,fsr2l
  6951  0022DA  0EEF               	movlw	-17
  6952  0022DC  006F FF8F FFDA     	movff	plusw1,fsr2h
  6953  0022E2  50DF               	movf	indf2,w,c
  6954  0022E4  6EE6               	movwf	postinc1,c
  6955  0022E6  EC2D  F020         	call	_strncmp	;wreg free
  6956  0022EA  503E               	movf	btemp,w,c
  6957  0022EC  103F               	iorwf	btemp+1,w,c
  6958  0022EE  B4D8               	btfsc	status,2,c
  6959  0022F0  D016               	goto	u3690
  6960  0022F2  0E02               	movlw	2
  6961  0022F4  6EE6               	movwf	postinc1,c
  6962  0022F6  0E00               	movlw	0
  6963  0022F8  6EE6               	movwf	postinc1,c
  6964  0022FA  0EAA               	movlw	STR_19& (0+255)
  6965  0022FC  6EE6               	movwf	postinc1,c
  6966                           
  6967                           ;stkvar	_fmt @ sp[(-14)+-4]
  6968  0022FE  0EEE               	movlw	-18
  6969  002300  006F FF8F FFD9     	movff	plusw1,fsr2l
  6970  002306  0EEF               	movlw	-17
  6971  002308  006F FF8F FFDA     	movff	plusw1,fsr2h
  6972  00230E  50DF               	movf	indf2,w,c
  6973  002310  6EE6               	movwf	postinc1,c
  6974  002312  EC2D  F020         	call	_strncmp	;wreg free
  6975  002316  503E               	movf	btemp,w,c
  6976  002318  103F               	iorwf	btemp+1,w,c
  6977  00231A  A4D8               	btfss	status,2,c
  6978  00231C  D067               	goto	l6511
  6979  00231E                     u3690:
  6980                           
  6981                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  6982                           ;stkvar	_fmt @ sp[(-11)+-4]
  6983  00231E  0EF1               	movlw	-15
  6984  002320  006F FF8F FFD9     	movff	plusw1,fsr2l
  6985  002326  0EF2               	movlw	-14
  6986  002328  006F FF8F FFDA     	movff	plusw1,fsr2h
  6987  00232E  0E02               	movlw	2
  6988  002330  26DF               	addwf	indf2,f,c
  6989                           
  6990                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  6991                           ;stkvar	_ap @ sp[(-11)+-6]
  6992  002332  0EEF               	movlw	-17
  6993  002334  006F FF8F FFD9     	movff	plusw1,fsr2l
  6994  00233A  0EF0               	movlw	-16
  6995  00233C  006F FF8F FFDA     	movff	plusw1,fsr2h
  6996  002342  0E04               	movlw	4
  6997  002344  5EDE               	subwf	postinc2,f,c
  6998  002346  0E00               	movlw	0
  6999  002348  5ADD               	subwfb	postdec2,f,c
  7000  00234A  006F FF78  F048    	movff	postinc2,btemp+10
  7001  002350  006F FF74  F049    	movff	postdec2,btemp+11
  7002  002356  0060  F123  FFD9   	movff	btemp+10,fsr2l
  7003  00235C  0060  F127  FFDA   	movff	btemp+11,fsr2h
  7004  002362  006F FF78  F046    	movff	postinc2,btemp+8
  7005  002368  006F FF78  F047    	movff	postinc2,btemp+9
  7006  00236E  006F FF78  F048    	movff	postinc2,btemp+10
  7007  002374  006F FF78  F049    	movff	postinc2,btemp+11
  7008  00237A  0060  F118  F04E   	movff	btemp+8,btemp+16
  7009  002380  0060  F11C  F04F   	movff	btemp+9,btemp+17
  7010  002386  0060  F120  F050   	movff	btemp+10,btemp+18
  7011  00238C  0060  F124  F051   	movff	btemp+11,btemp+19
  7012  002392  6A52               	clrf	btemp+20,c
  7013  002394  BE51               	btfsc	btemp+19,7,c
  7014  002396  6852               	setf	btemp+20,c
  7015  002398  0060  F148  F053   	movff	btemp+20,btemp+21
  7016  00239E  0060  F148  F054   	movff	btemp+20,btemp+22
  7017  0023A4  0060  F148  F055   	movff	btemp+20,btemp+23
  7018                           
  7019                           ;stkvar	_ll @ sp[(-11)+0]
  7020  0023AA  0EF5               	movlw	-11
  7021  0023AC  0060  F13B  FFE3   	movff	btemp+16,plusw1
  7022  0023B2  0EF6               	movlw	-10
  7023  0023B4  0060  F13F  FFE3   	movff	btemp+17,plusw1
  7024  0023BA  0EF7               	movlw	-9
  7025  0023BC  0060  F143  FFE3   	movff	btemp+18,plusw1
  7026  0023C2  0EF8               	movlw	-8
  7027  0023C4  0060  F147  FFE3   	movff	btemp+19,plusw1
  7028  0023CA  0EF9               	movlw	-7
  7029  0023CC  0060  F14B  FFE3   	movff	btemp+20,plusw1
  7030  0023D2  0EFA               	movlw	-6
  7031  0023D4  0060  F14F  FFE3   	movff	btemp+21,plusw1
  7032  0023DA  0EFB               	movlw	-5
  7033  0023DC  0060  F153  FFE3   	movff	btemp+22,plusw1
  7034  0023E2  0EFC               	movlw	-4
  7035  0023E4  0060  F157  FFE3   	movff	btemp+23,plusw1
  7036  0023EA  D744               	goto	l6495
  7037  0023EC                     l6511:
  7038                           
  7039                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  7040                           ;stkvar	_fmt @ sp[(-11)+-4]
  7041  0023EC  0EF1               	movlw	-15
  7042  0023EE  006F FF8F FFD9     	movff	plusw1,fsr2l
  7043  0023F4  0EF2               	movlw	-14
  7044  0023F6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7045  0023FC  006F FF7F FFF6     	movff	indf2,tblptrl
  7046  002402                     	if	1	;There is more than 1 active tblptr byte
  7047  002402  0E20               	movlw	high __smallconst
  7048  002404  6EF7               	movwf	tblptrh,c
  7049  002406                     	endif
  7050  002406                     	if	0	;tblptru may be non-zero
  7051  002406                     	endif
  7052  002406                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7053  002406  0E00               	movlw	low (__smallconst shr (0+16))
  7054  002408  6EF8               	movwf	tblptru,c
  7055  00240A                     	endif
  7056  00240A  0008               	tblrd		*
  7057  00240C  50F5               	movf	tablat,w,c
  7058  00240E  0A73               	xorlw	115
  7059  002410  A4D8               	btfss	status,2,c
  7060  002412  D040               	goto	l6521
  7061                           
  7062                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  7063                           ;stkvar	_fmt @ sp[(-11)+-4]
  7064  002414  0EF1               	movlw	-15
  7065  002416  006F FF8F FFD9     	movff	plusw1,fsr2l
  7066  00241C  0EF2               	movlw	-14
  7067  00241E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7068  002424  2ADF               	incf	indf2,f,c
  7069                           
  7070                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  7071                           ;stkvar	_ap @ sp[(-11)+-6]
  7072  002426  0EEF               	movlw	-17
  7073  002428  006F FF8F FFD9     	movff	plusw1,fsr2l
  7074  00242E  0EF0               	movlw	-16
  7075  002430  006F FF8F FFDA     	movff	plusw1,fsr2h
  7076  002436  0E02               	movlw	2
  7077  002438  5EDE               	subwf	postinc2,f,c
  7078  00243A  0E00               	movlw	0
  7079  00243C  5ADD               	subwfb	postdec2,f,c
  7080  00243E  006F FF78  F048    	movff	postinc2,btemp+10
  7081  002444  006F FF74  F049    	movff	postdec2,btemp+11
  7082  00244A  0060  F123  FFD9   	movff	btemp+10,fsr2l
  7083  002450  0060  F127  FFDA   	movff	btemp+11,fsr2h
  7084  002456  006F FF78  F048    	movff	postinc2,btemp+10
  7085  00245C  006F FF74  F049    	movff	postdec2,btemp+11
  7086                           
  7087                           ;stkvar	_cp @ sp[(-11)+8]
  7088  002462  0EFE               	movlw	-2
  7089  002464  0060  F127  FFE3   	movff	btemp+11,plusw1
  7090  00246A  0EFD               	movlw	-3
  7091  00246C  0060  F123  FFE3   	movff	btemp+10,plusw1
  7092                           
  7093                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  7094                           ;stkvar	_cp @ sp[(-11)+8]
  7095  002472  0EFD               	movlw	-3
  7096  002474  006F FF8F FFE6     	movff	plusw1,postinc1
  7097  00247A  006F FF8F FFE6     	movff	plusw1,postinc1
  7098                           
  7099                           ;stkvar	_fp @ sp[(-13)+-2]
  7100  002480  0EF1               	movlw	-15
  7101  002482  006F FF8F FFE6     	movff	plusw1,postinc1
  7102  002488  006F FF8F FFE6     	movff	plusw1,postinc1
  7103  00248E  EC92  F019         	call	_stoa	;wreg free
  7104  002492  D061               	goto	l1721
  7105  002494                     l6521:
  7106                           
  7107                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  7108                           ;stkvar	_fmt @ sp[(-11)+-4]
  7109  002494  0EF1               	movlw	-15
  7110  002496  006F FF8F FFD9     	movff	plusw1,fsr2l
  7111  00249C  0EF2               	movlw	-14
  7112  00249E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7113  0024A4  006F FF7F FFF6     	movff	indf2,tblptrl
  7114  0024AA                     	if	1	;There is more than 1 active tblptr byte
  7115  0024AA  0E20               	movlw	high __smallconst
  7116  0024AC  6EF7               	movwf	tblptrh,c
  7117  0024AE                     	endif
  7118  0024AE                     	if	0	;tblptru may be non-zero
  7119  0024AE                     	endif
  7120  0024AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7121  0024AE  0E00               	movlw	low (__smallconst shr (0+16))
  7122  0024B0  6EF8               	movwf	tblptru,c
  7123  0024B2                     	endif
  7124  0024B2  0008               	tblrd		*
  7125  0024B4  50F5               	movf	tablat,w,c
  7126  0024B6  0A25               	xorlw	37
  7127  0024B8  A4D8               	btfss	status,2,c
  7128  0024BA  D018               	goto	l6531
  7129                           
  7130                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  7131                           ;stkvar	_fmt @ sp[(-11)+-4]
  7132  0024BC  0EF1               	movlw	-15
  7133  0024BE  006F FF8F FFD9     	movff	plusw1,fsr2l
  7134  0024C4  0EF2               	movlw	-14
  7135  0024C6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7136  0024CC  2ADF               	incf	indf2,f,c
  7137                           
  7138                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  7139                           ;stkvar	_fp @ sp[(-11)+-2]
  7140  0024CE  0EF3               	movlw	-13
  7141  0024D0  006F FF8F FFE6     	movff	plusw1,postinc1
  7142  0024D6  006F FF8F FFE6     	movff	plusw1,postinc1
  7143  0024DC  0E25               	movlw	37
  7144  0024DE  6EE6               	movwf	postinc1,c
  7145  0024E0  0E00               	movlw	0
  7146  0024E2  6EE6               	movwf	postinc1,c
  7147  0024E4  EC7F  F021         	call	_fputc	;wreg free
  7148  0024E8                     l6527:
  7149                           
  7150                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  7151  0024E8  0E01               	movlw	1
  7152  0024EA  D00A               	goto	L12
  7153  0024EC                     l6531:
  7154                           
  7155                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  7156                           ;stkvar	_fmt @ sp[(-11)+-4]
  7157  0024EC  0EF1               	movlw	-15
  7158  0024EE  006F FF8F FFD9     	movff	plusw1,fsr2l
  7159  0024F4  0EF2               	movlw	-14
  7160  0024F6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7161  0024FC  2ADF               	incf	indf2,f,c
  7162                           
  7163                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  7164  0024FE  0E00               	movlw	0
  7165  002500                     L12:
  7166  002500  6E3E               	movwf	btemp,c
  7167  002502  0E00               	movlw	0
  7168  002504  6E3F               	movwf	btemp+1,c
  7169  002506  D027               	goto	l1721
  7170  002508                     l6537:
  7171                           
  7172                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  7173                           ;stkvar	_fp @ sp[(-11)+-2]
  7174  002508  0EF3               	movlw	-13
  7175  00250A  006F FF8F FFE6     	movff	plusw1,postinc1
  7176  002510  006F FF8F FFE6     	movff	plusw1,postinc1
  7177                           
  7178                           ;stkvar	_fmt @ sp[(-13)+-4]
  7179  002516  0EEF               	movlw	-17
  7180  002518  006F FF8F FFD9     	movff	plusw1,fsr2l
  7181  00251E  0EF0               	movlw	-16
  7182  002520  006F FF8F FFDA     	movff	plusw1,fsr2h
  7183  002526  006F FF7F FFF6     	movff	indf2,tblptrl
  7184  00252C                     	if	1	;There is more than 1 active tblptr byte
  7185  00252C  0E20               	movlw	high __smallconst
  7186  00252E  6EF7               	movwf	tblptrh,c
  7187  002530                     	endif
  7188  002530                     	if	0	;tblptru may be non-zero
  7189  002530                     	endif
  7190  002530                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7191  002530  0E00               	movlw	low (__smallconst shr (0+16))
  7192  002532  6EF8               	movwf	tblptru,c
  7193  002534                     	endif
  7194  002534  0008               	tblrd		*
  7195  002536  50F5               	movf	tablat,w,c
  7196  002538  6EE6               	movwf	postinc1,c
  7197  00253A  0E00               	movlw	0
  7198  00253C  6EE6               	movwf	postinc1,c
  7199  00253E  EC7F  F021         	call	_fputc	;wreg free
  7200                           
  7201                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  7202                           ;stkvar	_fmt @ sp[(-11)+-4]
  7203  002542  0EF1               	movlw	-15
  7204  002544  006F FF8F FFD9     	movff	plusw1,fsr2l
  7205  00254A  0EF2               	movlw	-14
  7206  00254C  006F FF8F FFDA     	movff	plusw1,fsr2h
  7207  002552  2ADF               	incf	indf2,f,c
  7208  002554  D7C9               	goto	l6527
  7209  002556                     l1721:
  7210                           
  7211                           ; _vfpfcnvrt: autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  7212  002556  0EEF               	movlw	239
  7213  002558  26E1               	addwf	fsr1l,f,c
  7214  00255A  0EFF               	movlw	255
  7215  00255C  22E2               	addwfc	fsr1h,f,c
  7216  00255E  0012               	return		;funcret
  7217  002560                     __end_of_vfpfcnvrt:
  7218                           	opt callstack 0
  7219                           
  7220 ;; *************** function _strncmp *****************
  7221 ;; Defined at:
  7222 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  7223 ;; Parameters:    Size  Location     Type
  7224 ;;  _l              1  [STACK] PTR const unsigned char 
  7225 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(21), 
  7226 ;;		 -> STR_10(17), STR_9(17), STR_8(19), STR_7(23), 
  7227 ;;		 -> STR_6(6), STR_5(14), STR_4(15), STR_2(12), 
  7228 ;;		 -> STR_1(17), 
  7229 ;;  _r              1  [STACK] PTR const unsigned char 
  7230 ;;		 -> STR_21(3), STR_17(3), 
  7231 ;;  n               2  [STACK] unsigned int 
  7232 ;; Auto vars:     Size  Location     Type
  7233 ;;  r               1  [STACK] PTR const unsigned char 
  7234 ;;		 -> STR_21(3), STR_17(3), 
  7235 ;;  l               1  [STACK] PTR const unsigned char 
  7236 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(21), 
  7237 ;;		 -> STR_10(17), STR_9(17), STR_8(19), STR_7(23), 
  7238 ;;		 -> STR_6(6), STR_5(14), STR_4(15), STR_2(12), 
  7239 ;;		 -> STR_1(17), 
  7240 ;; Return value:  Size  Location     Type
  7241 ;;                  2  [STACK] int 
  7242 ;; Registers used:
  7243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, tblptrl, tblptrh, tblptru, prodl
  7244 ;; Tracked objects:
  7245 ;;		On entry : 0/0
  7246 ;;		On exit  : 0/0
  7247 ;;		Unchanged: 0/0
  7248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7253 ;;Total ram usage:        0 bytes
  7254 ;; Hardware stack levels used:    1
  7255 ;; Hardware stack levels required when called:    3
  7256 ;; This function calls:
  7257 ;;		Nothing
  7258 ;; This function is called by:
  7259 ;;		_vfpfcnvrt
  7260 ;; This function uses a reentrant model
  7261 ;;
  7262                           
  7263                           	psect	text34
  7264  00405A                     __ptext34:
  7265                           	opt callstack 0
  7266  00405A                     _strncmp:
  7267                           	opt callstack 0
  7268                           
  7269                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7270  00405A  52E6               	movf	postinc1,f,c
  7271  00405C  52E6               	movf	postinc1,f,c
  7272                           
  7273                           ;stkvar	__l @ sp[(-2)+-1]
  7274                           
  7275                           ;incstack = 0
  7276  00405E  0EFD               	movlw	-3
  7277  004060  006F FF8C  F049    	movff	plusw1,btemp+11
  7278                           
  7279                           ;stkvar	_l @ sp[(-2)+1]
  7280  004066  0EFF               	movlw	-1
  7281  004068  0060  F127  FFE3   	movff	btemp+11,plusw1
  7282                           
  7283                           ;stkvar	__r @ sp[(-2)+-2]
  7284  00406E  0EFC               	movlw	-4
  7285  004070  006F FF8C  F049    	movff	plusw1,btemp+11
  7286                           
  7287                           ;stkvar	_r @ sp[(-2)+0]
  7288  004076  0EFE               	movlw	-2
  7289  004078  0060  F127  FFE3   	movff	btemp+11,plusw1
  7290                           
  7291                           ;stkvar	_n @ sp[(-2)+-4]
  7292  00407E  0EFA               	movlw	-6
  7293  004080  006F FF8C  F03E    	movff	plusw1,btemp
  7294  004086  0E01               	movlw	1
  7295  004088  5E3E               	subwf	btemp,f,c
  7296  00408A  0EFA               	movlw	-6
  7297  00408C  0060  F0FB  FFE3   	movff	btemp,plusw1
  7298  004092  0EFB               	movlw	-5
  7299  004094  006F FF8C  F03E    	movff	plusw1,btemp
  7300  00409A  0E00               	movlw	0
  7301  00409C  5A3E               	subwfb	btemp,f,c
  7302  00409E  0EFB               	movlw	-5
  7303  0040A0  0060  F0FB  FFE3   	movff	btemp,plusw1
  7304  0040A6  0EFA               	movlw	-6
  7305  0040A8  28E3               	incf	plusw1,w,c
  7306  0040AA  E121               	bnz	l4853
  7307  0040AC  0EFB               	movlw	-5
  7308  0040AE  28E3               	incf	plusw1,w,c
  7309  0040B0  A4D8               	btfss	status,2,c
  7310  0040B2  D01D               	goto	l4853
  7311  0040B4  0E00               	movlw	0
  7312  0040B6  6E3E               	movwf	btemp,c
  7313  0040B8  0E00               	movlw	0
  7314  0040BA  6E3F               	movwf	btemp+1,c
  7315  0040BC  D091               	goto	l2470
  7316  0040BE                     l4849:
  7317                           
  7318                           ;stkvar	_l @ sp[(-2)+1]
  7319  0040BE  0EFF               	movlw	-1
  7320  0040C0  2AE3               	incf	plusw1,f,c
  7321                           
  7322                           ;stkvar	_r @ sp[(-2)+0]
  7323  0040C2  0EFE               	movlw	-2
  7324  0040C4  2AE3               	incf	plusw1,f,c
  7325                           
  7326                           ;stkvar	_n @ sp[(-2)+-4]
  7327  0040C6  0EFA               	movlw	-6
  7328  0040C8  006F FF8C  F03E    	movff	plusw1,btemp
  7329  0040CE  0E01               	movlw	1
  7330  0040D0  5E3E               	subwf	btemp,f,c
  7331  0040D2  0EFA               	movlw	-6
  7332  0040D4  0060  F0FB  FFE3   	movff	btemp,plusw1
  7333  0040DA  0EFB               	movlw	-5
  7334  0040DC  006F FF8C  F03E    	movff	plusw1,btemp
  7335  0040E2  0E00               	movlw	0
  7336  0040E4  5A3E               	subwfb	btemp,f,c
  7337  0040E6  0EFB               	movlw	-5
  7338  0040E8  0060  F0FB  FFE3   	movff	btemp,plusw1
  7339  0040EE                     l4853:
  7340                           
  7341                           ;stkvar	_l @ sp[(-2)+1]
  7342  0040EE  50E1               	movf	fsr1l,w,c
  7343  0040F0  0FFF               	addlw	-1
  7344  0040F2  6ED9               	movwf	fsr2l,c
  7345  0040F4  50E2               	movf	fsr1h,w,c
  7346  0040F6  6EDA               	movwf	fsr2h,c
  7347  0040F8  0EFF               	movlw	255
  7348  0040FA  22DA               	addwfc	fsr2h,f,c
  7349  0040FC  006F FF7F FFF6     	movff	indf2,tblptrl
  7350  004102                     	if	1	;There is more than 1 active tblptr byte
  7351  004102  0E20               	movlw	high __smallconst
  7352  004104  6EF7               	movwf	tblptrh,c
  7353  004106                     	endif
  7354  004106                     	if	0	;tblptru may be non-zero
  7355  004106                     	endif
  7356  004106                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7357  004106  0E00               	movlw	low (__smallconst shr (0+16))
  7358  004108  6EF8               	movwf	tblptru,c
  7359  00410A                     	endif
  7360  00410A  0008               	tblrd		*
  7361  00410C  50F5               	movf	tablat,w,c
  7362  00410E  0900               	iorlw	0
  7363  004110  B4D8               	btfsc	status,2,c
  7364  004112  D041               	goto	u2400
  7365                           
  7366                           ;stkvar	_r @ sp[(-2)+0]
  7367  004114  50E1               	movf	fsr1l,w,c
  7368  004116  0FFE               	addlw	-2
  7369  004118  6ED9               	movwf	fsr2l,c
  7370  00411A  50E2               	movf	fsr1h,w,c
  7371  00411C  6EDA               	movwf	fsr2h,c
  7372  00411E  0EFF               	movlw	255
  7373  004120  22DA               	addwfc	fsr2h,f,c
  7374  004122  006F FF7F FFF6     	movff	indf2,tblptrl
  7375  004128                     	if	1	;There is more than 1 active tblptr byte
  7376  004128  0E20               	movlw	high __smallconst
  7377  00412A  6EF7               	movwf	tblptrh,c
  7378  00412C                     	endif
  7379  00412C                     	if	0	;tblptru may be non-zero
  7380  00412C                     	endif
  7381  00412C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7382  00412C  0E00               	movlw	low (__smallconst shr (0+16))
  7383  00412E  6EF8               	movwf	tblptru,c
  7384  004130                     	endif
  7385  004130  0008               	tblrd		*
  7386  004132  50F5               	movf	tablat,w,c
  7387  004134  0900               	iorlw	0
  7388  004136  B4D8               	btfsc	status,2,c
  7389  004138  D02E               	goto	u2400
  7390                           
  7391                           ;stkvar	_n @ sp[(-2)+-4]
  7392  00413A  0EFA               	movlw	-6
  7393  00413C  006F FF8C  F03E    	movff	plusw1,btemp
  7394  004142  0EFB               	movlw	-5
  7395  004144  50E3               	movf	plusw1,w,c
  7396  004146  103E               	iorwf	btemp,w,c
  7397  004148  B4D8               	btfsc	status,2,c
  7398  00414A  D025               	goto	u2400
  7399                           
  7400                           ;stkvar	_l @ sp[(-2)+1]
  7401  00414C  50E1               	movf	fsr1l,w,c
  7402  00414E  0FFF               	addlw	-1
  7403  004150  6ED9               	movwf	fsr2l,c
  7404  004152  50E2               	movf	fsr1h,w,c
  7405  004154  6EDA               	movwf	fsr2h,c
  7406  004156  0EFF               	movlw	255
  7407  004158  22DA               	addwfc	fsr2h,f,c
  7408  00415A  006F FF7F FFF6     	movff	indf2,tblptrl
  7409  004160                     	if	1	;There is more than 1 active tblptr byte
  7410  004160  0E20               	movlw	high __smallconst
  7411  004162  6EF7               	movwf	tblptrh,c
  7412  004164                     	endif
  7413  004164                     	if	0	;tblptru may be non-zero
  7414  004164                     	endif
  7415  004164                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7416  004164  0E00               	movlw	low (__smallconst shr (0+16))
  7417  004166  6EF8               	movwf	tblptru,c
  7418  004168                     	endif
  7419  004168  0008               	tblrd		*
  7420  00416A  006F FFD4  F049    	movff	tablat,btemp+11
  7421                           
  7422                           ;stkvar	_r @ sp[(-2)+0]
  7423  004170  50E1               	movf	fsr1l,w,c
  7424  004172  0FFE               	addlw	-2
  7425  004174  6ED9               	movwf	fsr2l,c
  7426  004176  50E2               	movf	fsr1h,w,c
  7427  004178  6EDA               	movwf	fsr2h,c
  7428  00417A  0EFF               	movlw	255
  7429  00417C  22DA               	addwfc	fsr2h,f,c
  7430  00417E  006F FF7F FFF6     	movff	indf2,tblptrl
  7431  004184                     	if	1	;There is more than 1 active tblptr byte
  7432  004184  0E20               	movlw	high __smallconst
  7433  004186  6EF7               	movwf	tblptrh,c
  7434  004188                     	endif
  7435  004188                     	if	0	;tblptru may be non-zero
  7436  004188                     	endif
  7437  004188                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7438  004188  0E00               	movlw	low (__smallconst shr (0+16))
  7439  00418A  6EF8               	movwf	tblptru,c
  7440  00418C                     	endif
  7441  00418C  0008               	tblrd		*
  7442  00418E  50F5               	movf	tablat,w,c
  7443  004190  1849               	xorwf	btemp+11,w,c
  7444  004192  B4D8               	btfsc	status,2,c
  7445  004194  D794               	goto	l4849
  7446  004196                     u2400:
  7447                           
  7448                           ;stkvar	_l @ sp[(-2)+1]
  7449  004196  50E1               	movf	fsr1l,w,c
  7450  004198  0FFF               	addlw	-1
  7451  00419A  6ED9               	movwf	fsr2l,c
  7452  00419C  50E2               	movf	fsr1h,w,c
  7453  00419E  6EDA               	movwf	fsr2h,c
  7454  0041A0  0EFF               	movlw	255
  7455  0041A2  22DA               	addwfc	fsr2h,f,c
  7456  0041A4  006F FF7F FFF6     	movff	indf2,tblptrl
  7457  0041AA                     	if	1	;There is more than 1 active tblptr byte
  7458  0041AA  0E20               	movlw	high __smallconst
  7459  0041AC  6EF7               	movwf	tblptrh,c
  7460  0041AE                     	endif
  7461  0041AE                     	if	0	;tblptru may be non-zero
  7462  0041AE                     	endif
  7463  0041AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7464  0041AE  0E00               	movlw	low (__smallconst shr (0+16))
  7465  0041B0  6EF8               	movwf	tblptru,c
  7466  0041B2                     	endif
  7467  0041B2  0008               	tblrd		*
  7468  0041B4  50F5               	movf	tablat,w,c
  7469  0041B6  6E3E               	movwf	btemp,c
  7470  0041B8  6A3F               	clrf	btemp+1,c
  7471                           
  7472                           ;stkvar	_r @ sp[(-2)+0]
  7473  0041BA  50E1               	movf	fsr1l,w,c
  7474  0041BC  0FFE               	addlw	-2
  7475  0041BE  6ED9               	movwf	fsr2l,c
  7476  0041C0  50E2               	movf	fsr1h,w,c
  7477  0041C2  6EDA               	movwf	fsr2h,c
  7478  0041C4  0EFF               	movlw	255
  7479  0041C6  22DA               	addwfc	fsr2h,f,c
  7480  0041C8  006F FF7F FFF6     	movff	indf2,tblptrl
  7481  0041CE                     	if	1	;There is more than 1 active tblptr byte
  7482  0041CE  0E20               	movlw	high __smallconst
  7483  0041D0  6EF7               	movwf	tblptrh,c
  7484  0041D2                     	endif
  7485  0041D2                     	if	0	;tblptru may be non-zero
  7486  0041D2                     	endif
  7487  0041D2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7488  0041D2  0E00               	movlw	low (__smallconst shr (0+16))
  7489  0041D4  6EF8               	movwf	tblptru,c
  7490  0041D6                     	endif
  7491  0041D6  0008               	tblrd		*
  7492  0041D8  50F5               	movf	tablat,w,c
  7493  0041DA  5E3E               	subwf	btemp,f,c
  7494  0041DC  0E00               	movlw	0
  7495  0041DE  5A3F               	subwfb	btemp+1,f,c
  7496  0041E0                     l2470:
  7497                           
  7498                           ; _strncmp: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
  7499  0041E0  0EFA               	movlw	250
  7500  0041E2  26E1               	addwf	fsr1l,f,c
  7501  0041E4  0EFF               	movlw	255
  7502  0041E6  22E2               	addwfc	fsr1h,f,c
  7503  0041E8  0012               	return		;funcret
  7504  0041EA                     __end_of_strncmp:
  7505                           	opt callstack 0
  7506                           
  7507 ;; *************** function _stoa *****************
  7508 ;; Defined at:
  7509 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  7510 ;; Parameters:    Size  Location     Type
  7511 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7512 ;;		 -> f(5), NULL(0), 
  7513 ;;  s               2  [STACK] PTR unsigned char 
  7514 ;;		 -> ?_printf(2), ?_sprintf(2), STR_3(5), V(85), 
  7515 ;; Auto vars:     Size  Location     Type
  7516 ;;  nuls            7  [STACK] unsigned char [7]
  7517 ;;  l               2  [STACK] int 
  7518 ;;  p               2  [STACK] int 
  7519 ;;  cp              2  [STACK] PTR unsigned char 
  7520 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_3(5), 
  7521 ;;		 -> V(85), 
  7522 ;;  w               2  [STACK] int 
  7523 ;;  i               2  [STACK] int 
  7524 ;; Return value:  Size  Location     Type
  7525 ;;                  2  [STACK] int 
  7526 ;; Registers used:
  7527 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  7528 ;; Tracked objects:
  7529 ;;		On entry : 0/0
  7530 ;;		On exit  : 0/0
  7531 ;;		Unchanged: 0/0
  7532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7537 ;;Total ram usage:        0 bytes
  7538 ;; Hardware stack levels used:    1
  7539 ;; Hardware stack levels required when called:    6
  7540 ;; This function calls:
  7541 ;;		_fputc
  7542 ;;		_strlen
  7543 ;; This function is called by:
  7544 ;;		_vfpfcnvrt
  7545 ;; This function uses a reentrant model
  7546 ;;
  7547                           
  7548                           	psect	text35
  7549  003324                     __ptext35:
  7550                           	opt callstack 0
  7551  003324                     _stoa:
  7552                           	opt callstack 0
  7553                           
  7554                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  7555  003324  0E11               	movlw	17
  7556  003326  26E1               	addwf	fsr1l,f,c
  7557  003328  0E00               	movlw	0
  7558  00332A  22E2               	addwfc	fsr1h,f,c
  7559                           
  7560                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  7561                           
  7562                           ;incstack = 0
  7563  00332C  EE20  F0DE         	lfsr	2,stoa@F1144
  7564                           
  7565                           ;stkvar	_nuls @ sp[(-17)+0]
  7566  003330  0E07               	movlw	7
  7567  003332  6E3E               	movwf	btemp,c
  7568  003334  0EEF               	movlw	-17
  7569  003336                     us354999:
  7570  003336  006F FF7B FFE3     	movff	postinc2,plusw1
  7571  00333C  28E8               	incf	wreg,w,c
  7572  00333E  2E3E               	decfsz	btemp,f,c
  7573  003340  D7FA               	bra	us354999
  7574                           
  7575                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  7576                           ;stkvar	_s @ sp[(-17)+-4]
  7577  003342  0EEB               	movlw	-21
  7578  003344  006F FF8C  F048    	movff	plusw1,btemp+10
  7579  00334A  0EEC               	movlw	-20
  7580  00334C  006F FF8C  F049    	movff	plusw1,btemp+11
  7581                           
  7582                           ;stkvar	_cp @ sp[(-17)+11]
  7583  003352  0EFB               	movlw	-5
  7584  003354  0060  F127  FFE3   	movff	btemp+11,plusw1
  7585  00335A  0EFA               	movlw	-6
  7586  00335C  0060  F123  FFE3   	movff	btemp+10,plusw1
  7587                           
  7588                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  7589                           ;stkvar	_cp @ sp[(-17)+11]
  7590  003362  0EFA               	movlw	-6
  7591  003364  006F FF8C  F03E    	movff	plusw1,btemp
  7592  00336A  0EFB               	movlw	-5
  7593  00336C  50E3               	movf	plusw1,w,c
  7594  00336E  103E               	iorwf	btemp,w,c
  7595  003370  A4D8               	btfss	status,2,c
  7596  003372  D00E               	goto	l6425
  7597                           
  7598                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  7599                           ;stkvar	_nuls @ sp[(-17)+0]
  7600  003374  0EEF               	movlw	239
  7601  003376  24E1               	addwf	fsr1l,w,c
  7602  003378  6E48               	movwf	btemp+10,c
  7603  00337A  0EFF               	movlw	255
  7604  00337C  20E2               	addwfc	fsr1h,w,c
  7605  00337E  6E49               	movwf	btemp+11,c
  7606                           
  7607                           ;stkvar	_cp @ sp[(-17)+11]
  7608  003380  0EFB               	movlw	-5
  7609  003382  0060  F127  FFE3   	movff	btemp+11,plusw1
  7610  003388  0EFA               	movlw	-6
  7611  00338A  0060  F123  FFE3   	movff	btemp+10,plusw1
  7612  003390                     l6425:
  7613                           
  7614                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  7615                           ;stkvar	_cp @ sp[(-17)+11]
  7616  003390  0EFA               	movlw	-6
  7617  003392  006F FF8F FFE6     	movff	plusw1,postinc1
  7618  003398  006F FF8F FFE6     	movff	plusw1,postinc1
  7619  00339E  EC00  F024         	call	_strlen	;wreg free
  7620                           
  7621                           ;stkvar	_l @ sp[(-17)+7]
  7622  0033A2  0EF6               	movlw	-10
  7623  0033A4  0060  F0FB  FFE3   	movff	btemp,plusw1
  7624  0033AA  0EF7               	movlw	-9
  7625  0033AC  0060  F0FF  FFE3   	movff	btemp+1,plusw1
  7626                           
  7627                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  7628                           ;stkvar	_p @ sp[(-17)+9]
  7629  0033B2  0EF8               	movlw	-8
  7630  0033B4  0060  F09B  FFE3   	movff	_prec,plusw1
  7631  0033BA  0EF9               	movlw	-7
  7632  0033BC  0060  F09F  FFE3   	movff	_prec+1,plusw1
  7633                           
  7634                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  7635                           ;stkvar	_p @ sp[(-17)+9]
  7636  0033C2  0EF9               	movlw	-7
  7637  0033C4  BEE3               	btfsc	plusw1,7,c
  7638  0033C6  D023               	goto	l1702
  7639                           
  7640                           ;stkvar	_l @ sp[(-17)+7]
  7641                           ;stkvar	_p @ sp[(-17)+9]
  7642  0033C8  50E1               	movf	fsr1l,w,c
  7643  0033CA  0FF8               	addlw	-8
  7644  0033CC  6ED9               	movwf	fsr2l,c
  7645  0033CE  50E2               	movf	fsr1h,w,c
  7646  0033D0  6EDA               	movwf	fsr2h,c
  7647  0033D2  0EFF               	movlw	255
  7648  0033D4  22DA               	addwfc	fsr2h,f,c
  7649  0033D6  0EF6               	movlw	-10
  7650  0033D8  50E3               	movf	plusw1,w,c
  7651  0033DA  5CDE               	subwf	postinc2,w,c
  7652  0033DC  50DE               	movf	postinc2,w,c
  7653  0033DE  0A80               	xorlw	128
  7654  0033E0  6E3E               	movwf	btemp,c
  7655  0033E2  0EF7               	movlw	-9
  7656  0033E4  50E3               	movf	plusw1,w,c
  7657  0033E6  0A80               	xorlw	128
  7658  0033E8  583E               	subwfb	btemp,w,c
  7659  0033EA  B0D8               	btfsc	status,0,c
  7660  0033EC  D010               	goto	l1702
  7661                           
  7662                           ;stkvar	_p @ sp[(-17)+9]
  7663                           ;stkvar	_l @ sp[(-17)+7]
  7664  0033EE  0EF8               	movlw	-8
  7665  0033F0  006F FF8C  F03E    	movff	plusw1,btemp
  7666  0033F6  0EF6               	movlw	-10
  7667  0033F8  0060  F0FB  FFE3   	movff	btemp,plusw1
  7668  0033FE  0EF9               	movlw	-7
  7669  003400  006F FF8C  F03E    	movff	plusw1,btemp
  7670  003406  0EF7               	movlw	-9
  7671  003408  0060  F0FB  FFE3   	movff	btemp,plusw1
  7672  00340E                     l1702:
  7673                           
  7674                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
  7675                           ;stkvar	_l @ sp[(-17)+7]
  7676                           ;stkvar	_p @ sp[(-17)+9]
  7677  00340E  0EF6               	movlw	-10
  7678  003410  006F FF8C  F03E    	movff	plusw1,btemp
  7679  003416  0EF8               	movlw	-8
  7680  003418  0060  F0FB  FFE3   	movff	btemp,plusw1
  7681  00341E  0EF7               	movlw	-9
  7682  003420  006F FF8C  F03E    	movff	plusw1,btemp
  7683  003426  0EF9               	movlw	-7
  7684  003428  0060  F0FB  FFE3   	movff	btemp,plusw1
  7685                           
  7686                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
  7687                           ;stkvar	_w @ sp[(-17)+13]
  7688  00342E  0EFC               	movlw	-4
  7689  003430  0060  F093  FFE3   	movff	_width,plusw1
  7690  003436  0EFD               	movlw	-3
  7691  003438  0060  F097  FFE3   	movff	_width+1,plusw1
  7692                           
  7693                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  7694  00343E  A028               	btfss	_flags,0,c
  7695  003440  D01F               	goto	l6445
  7696  003442  D031               	goto	u3590
  7697  003444                     l6441:
  7698                           
  7699                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  7700                           ;stkvar	_fp @ sp[(-17)+-2]
  7701  003444  0EED               	movlw	-19
  7702  003446  006F FF8F FFE6     	movff	plusw1,postinc1
  7703  00344C  006F FF8F FFE6     	movff	plusw1,postinc1
  7704  003452  0E20               	movlw	32
  7705  003454  6EE6               	movwf	postinc1,c
  7706  003456  0E00               	movlw	0
  7707  003458  6EE6               	movwf	postinc1,c
  7708  00345A  EC7F  F021         	call	_fputc	;wreg free
  7709                           
  7710                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
  7711                           ;stkvar	_l @ sp[(-17)+7]
  7712  00345E  0EF6               	movlw	-10
  7713  003460  50E3               	movf	plusw1,w,c
  7714  003462  0F01               	addlw	1
  7715  003464  6E3E               	movwf	btemp,c
  7716  003466  0EF6               	movlw	-10
  7717  003468  0060  F0FB  FFE3   	movff	btemp,plusw1
  7718  00346E  6A3E               	clrf	btemp,c
  7719  003470  0EF7               	movlw	-9
  7720  003472  50E3               	movf	plusw1,w,c
  7721  003474  203E               	addwfc	btemp,w,c
  7722  003476  6E3E               	movwf	btemp,c
  7723  003478  0EF7               	movlw	-9
  7724  00347A  0060  F0FB  FFE3   	movff	btemp,plusw1
  7725  003480                     l6445:
  7726                           
  7727                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  7728                           ;stkvar	_w @ sp[(-17)+13]
  7729                           ;stkvar	_l @ sp[(-17)+7]
  7730  003480  50E1               	movf	fsr1l,w,c
  7731  003482  0FF6               	addlw	-10
  7732  003484  6ED9               	movwf	fsr2l,c
  7733  003486  50E2               	movf	fsr1h,w,c
  7734  003488  6EDA               	movwf	fsr2h,c
  7735  00348A  0EFF               	movlw	255
  7736  00348C  22DA               	addwfc	fsr2h,f,c
  7737  00348E  0EFC               	movlw	-4
  7738  003490  50E3               	movf	plusw1,w,c
  7739  003492  5CDE               	subwf	postinc2,w,c
  7740  003494  50DE               	movf	postinc2,w,c
  7741  003496  0A80               	xorlw	128
  7742  003498  6E3E               	movwf	btemp,c
  7743  00349A  0EFD               	movlw	-3
  7744  00349C  50E3               	movf	plusw1,w,c
  7745  00349E  0A80               	xorlw	128
  7746  0034A0  583E               	subwfb	btemp,w,c
  7747  0034A2  A0D8               	btfss	status,0,c
  7748  0034A4  D7CF               	goto	l6441
  7749  0034A6                     u3590:
  7750                           
  7751                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  7752                           ;stkvar	_i @ sp[(-17)+15]
  7753  0034A6  0EFE               	movlw	-2
  7754  0034A8  6AE3               	clrf	plusw1,c
  7755  0034AA  0EFF               	movlw	-1
  7756  0034AC  6AE3               	clrf	plusw1,c
  7757                           
  7758                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  7759  0034AE  D045               	goto	l6455
  7760  0034B0                     l6449:
  7761                           
  7762                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  7763                           ;stkvar	_fp @ sp[(-17)+-2]
  7764  0034B0  0EED               	movlw	-19
  7765  0034B2  006F FF8F FFE6     	movff	plusw1,postinc1
  7766  0034B8  006F FF8F FFE6     	movff	plusw1,postinc1
  7767                           
  7768                           ;stkvar	_cp @ sp[(-19)+11]
  7769  0034BE  0EF8               	movlw	-8
  7770  0034C0  006F FF8F FFF6     	movff	plusw1,tblptrl
  7771  0034C6  0EF9               	movlw	-7
  7772  0034C8  006F FF8F FFF7     	movff	plusw1,tblptrh
  7773  0034CE  0E00               	movlw	low (__smallconst shr (0+16))
  7774  0034D0  6EF8               	movwf	tblptru,c
  7775  0034D2  0E1F               	movlw	(high __ramtop+-1)
  7776  0034D4  64F7               	cpfsgt	tblptrh,c
  7777  0034D6  D003               	bra	u3607
  7778  0034D8  0008               	tblrd		*
  7779  0034DA  50F5               	movf	tablat,w,c
  7780  0034DC  D007               	bra	u3600
  7781  0034DE                     u3607:
  7782  0034DE  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7783  0034E4  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7784  0034EA  50EF               	movf	indf0,w,c
  7785  0034EC                     u3600:
  7786  0034EC  6EE6               	movwf	postinc1,c
  7787  0034EE  0E00               	movlw	0
  7788  0034F0  6EE6               	movwf	postinc1,c
  7789  0034F2  EC7F  F021         	call	_fputc	;wreg free
  7790                           
  7791                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  7792                           ;stkvar	_cp @ sp[(-17)+11]
  7793  0034F6  0EFA               	movlw	-6
  7794  0034F8  50E3               	movf	plusw1,w,c
  7795  0034FA  0F01               	addlw	1
  7796  0034FC  6E3E               	movwf	btemp,c
  7797  0034FE  0EFA               	movlw	-6
  7798  003500  0060  F0FB  FFE3   	movff	btemp,plusw1
  7799  003506  6A3E               	clrf	btemp,c
  7800  003508  0EFB               	movlw	-5
  7801  00350A  50E3               	movf	plusw1,w,c
  7802  00350C  203E               	addwfc	btemp,w,c
  7803  00350E  6E3E               	movwf	btemp,c
  7804  003510  0EFB               	movlw	-5
  7805  003512  0060  F0FB  FFE3   	movff	btemp,plusw1
  7806                           
  7807                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
  7808                           ;stkvar	_i @ sp[(-17)+15]
  7809  003518  0EFE               	movlw	-2
  7810  00351A  50E3               	movf	plusw1,w,c
  7811  00351C  0F01               	addlw	1
  7812  00351E  6E3E               	movwf	btemp,c
  7813  003520  0EFE               	movlw	-2
  7814  003522  0060  F0FB  FFE3   	movff	btemp,plusw1
  7815  003528  6A3E               	clrf	btemp,c
  7816  00352A  0EFF               	movlw	-1
  7817  00352C  50E3               	movf	plusw1,w,c
  7818  00352E  203E               	addwfc	btemp,w,c
  7819  003530  6E3E               	movwf	btemp,c
  7820  003532  0EFF               	movlw	-1
  7821  003534  0060  F0FB  FFE3   	movff	btemp,plusw1
  7822  00353A                     l6455:
  7823                           
  7824                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  7825                           ;stkvar	_p @ sp[(-17)+9]
  7826                           ;stkvar	_i @ sp[(-17)+15]
  7827  00353A  50E1               	movf	fsr1l,w,c
  7828  00353C  0FFE               	addlw	-2
  7829  00353E  6ED9               	movwf	fsr2l,c
  7830  003540  50E2               	movf	fsr1h,w,c
  7831  003542  6EDA               	movwf	fsr2h,c
  7832  003544  0EFF               	movlw	255
  7833  003546  22DA               	addwfc	fsr2h,f,c
  7834  003548  0EF8               	movlw	-8
  7835  00354A  50E3               	movf	plusw1,w,c
  7836  00354C  5CDE               	subwf	postinc2,w,c
  7837  00354E  50DE               	movf	postinc2,w,c
  7838  003550  0A80               	xorlw	128
  7839  003552  6E3E               	movwf	btemp,c
  7840  003554  0EF9               	movlw	-7
  7841  003556  50E3               	movf	plusw1,w,c
  7842  003558  0A80               	xorlw	128
  7843  00355A  583E               	subwfb	btemp,w,c
  7844  00355C  A0D8               	btfss	status,0,c
  7845  00355E  D7A8               	goto	l6449
  7846                           
  7847                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  7848  003560  B028               	btfsc	_flags,0,c
  7849  003562  D01F               	goto	l6463
  7850  003564  D031               	goto	u3630
  7851  003566                     l6459:
  7852                           
  7853                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  7854                           ;stkvar	_fp @ sp[(-17)+-2]
  7855  003566  0EED               	movlw	-19
  7856  003568  006F FF8F FFE6     	movff	plusw1,postinc1
  7857  00356E  006F FF8F FFE6     	movff	plusw1,postinc1
  7858  003574  0E20               	movlw	32
  7859  003576  6EE6               	movwf	postinc1,c
  7860  003578  0E00               	movlw	0
  7861  00357A  6EE6               	movwf	postinc1,c
  7862  00357C  EC7F  F021         	call	_fputc	;wreg free
  7863                           
  7864                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
  7865                           ;stkvar	_l @ sp[(-17)+7]
  7866  003580  0EF6               	movlw	-10
  7867  003582  50E3               	movf	plusw1,w,c
  7868  003584  0F01               	addlw	1
  7869  003586  6E3E               	movwf	btemp,c
  7870  003588  0EF6               	movlw	-10
  7871  00358A  0060  F0FB  FFE3   	movff	btemp,plusw1
  7872  003590  6A3E               	clrf	btemp,c
  7873  003592  0EF7               	movlw	-9
  7874  003594  50E3               	movf	plusw1,w,c
  7875  003596  203E               	addwfc	btemp,w,c
  7876  003598  6E3E               	movwf	btemp,c
  7877  00359A  0EF7               	movlw	-9
  7878  00359C  0060  F0FB  FFE3   	movff	btemp,plusw1
  7879  0035A2                     l6463:
  7880                           
  7881                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  7882                           ;stkvar	_w @ sp[(-17)+13]
  7883                           ;stkvar	_l @ sp[(-17)+7]
  7884  0035A2  50E1               	movf	fsr1l,w,c
  7885  0035A4  0FF6               	addlw	-10
  7886  0035A6  6ED9               	movwf	fsr2l,c
  7887  0035A8  50E2               	movf	fsr1h,w,c
  7888  0035AA  6EDA               	movwf	fsr2h,c
  7889  0035AC  0EFF               	movlw	255
  7890  0035AE  22DA               	addwfc	fsr2h,f,c
  7891  0035B0  0EFC               	movlw	-4
  7892  0035B2  50E3               	movf	plusw1,w,c
  7893  0035B4  5CDE               	subwf	postinc2,w,c
  7894  0035B6  50DE               	movf	postinc2,w,c
  7895  0035B8  0A80               	xorlw	128
  7896  0035BA  6E3E               	movwf	btemp,c
  7897  0035BC  0EFD               	movlw	-3
  7898  0035BE  50E3               	movf	plusw1,w,c
  7899  0035C0  0A80               	xorlw	128
  7900  0035C2  583E               	subwfb	btemp,w,c
  7901  0035C4  A0D8               	btfss	status,0,c
  7902  0035C6  D7CF               	goto	l6459
  7903  0035C8                     u3630:
  7904                           
  7905                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
  7906                           ;stkvar	_l @ sp[(-17)+7]
  7907  0035C8  0EF6               	movlw	-10
  7908  0035CA  006F FF8C  F03E    	movff	plusw1,btemp
  7909  0035D0  0EF7               	movlw	-9
  7910  0035D2  006F FF8C  F03F    	movff	plusw1,btemp+1
  7911                           
  7912                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
  7913  0035D8  0EEB               	movlw	235
  7914  0035DA  26E1               	addwf	fsr1l,f,c
  7915  0035DC  0EFF               	movlw	255
  7916  0035DE  22E2               	addwfc	fsr1h,f,c
  7917  0035E0  0012               	return		;funcret
  7918  0035E2                     __end_of_stoa:
  7919                           	opt callstack 0
  7920                           
  7921 ;; *************** function _dtoa *****************
  7922 ;; Defined at:
  7923 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  7924 ;; Parameters:    Size  Location     Type
  7925 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7926 ;;		 -> f(5), NULL(0), 
  7927 ;;  d               8  [STACK] long long 
  7928 ;; Auto vars:     Size  Location     Type
  7929 ;;  n               8  [STACK] long long 
  7930 ;;  i               2  [STACK] int 
  7931 ;;  s               2  [STACK] int 
  7932 ;;  w               2  [STACK] int 
  7933 ;;  p               2  [STACK] int 
  7934 ;; Return value:  Size  Location     Type
  7935 ;;                  2  [STACK] int 
  7936 ;; Registers used:
  7937 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  7938 ;; Tracked objects:
  7939 ;;		On entry : 0/0
  7940 ;;		On exit  : 0/0
  7941 ;;		Unchanged: 0/0
  7942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7947 ;;Total ram usage:        0 bytes
  7948 ;; Hardware stack levels used:    1
  7949 ;; Hardware stack levels required when called:    8
  7950 ;; This function calls:
  7951 ;;		___aodiv
  7952 ;;		___aomod
  7953 ;;		_abs
  7954 ;;		_pad
  7955 ;; This function is called by:
  7956 ;;		_vfpfcnvrt
  7957 ;; This function uses a reentrant model
  7958 ;;
  7959                           
  7960                           	psect	text36
  7961  002560                     __ptext36:
  7962                           	opt callstack 0
  7963  002560                     _dtoa:
  7964                           	opt callstack 0
  7965                           
  7966                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  7967  002560  0E12               	movlw	18
  7968  002562  26E1               	addwf	fsr1l,f,c
  7969  002564  0E00               	movlw	0
  7970  002566  22E2               	addwfc	fsr1h,f,c
  7971                           
  7972                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
  7973                           ;stkvar	_d @ sp[(-18)+-10]
  7974                           
  7975                           ;incstack = 0
  7976  002568  0EE4               	movlw	228
  7977  00256A  24E1               	addwf	fsr1l,w,c
  7978  00256C  6ED9               	movwf	fsr2l,c
  7979  00256E  0EFF               	movlw	255
  7980  002570  20E2               	addwfc	fsr1h,w,c
  7981  002572  6EDA               	movwf	fsr2h,c
  7982                           
  7983                           ;stkvar	_n @ sp[(-18)+2]
  7984  002574  0E08               	movlw	8
  7985  002576  6E3E               	movwf	btemp,c
  7986  002578  0EF0               	movlw	-16
  7987  00257A                     us337999:
  7988  00257A  006F FF7B FFE3     	movff	postinc2,plusw1
  7989  002580  28E8               	incf	wreg,w,c
  7990  002582  2E3E               	decfsz	btemp,f,c
  7991  002584  D7FA               	bra	us337999
  7992                           
  7993                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  7994                           ;stkvar	_n @ sp[(-18)+2]
  7995  002586  0EF7               	movlw	-9
  7996  002588  AEE3               	btfss	plusw1,7,c
  7997  00258A  D002               	goto	u3380
  7998  00258C  0E01               	movlw	1
  7999  00258E  D001               	goto	u3390
  8000  002590                     u3380:
  8001  002590  0E00               	movlw	0
  8002  002592                     u3390:
  8003  002592  6E48               	movwf	btemp+10,c
  8004  002594  6A49               	clrf	btemp+11,c
  8005                           
  8006                           ;stkvar	_s @ sp[(-18)+12]
  8007  002596  0EFA               	movlw	-6
  8008  002598  0060  F123  FFE3   	movff	btemp+10,plusw1
  8009  00259E  0EFB               	movlw	-5
  8010  0025A0  0060  F127  FFE3   	movff	btemp+11,plusw1
  8011                           
  8012                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  8013                           ;stkvar	_s @ sp[(-18)+12]
  8014  0025A6  0EFA               	movlw	-6
  8015  0025A8  006F FF8C  F03E    	movff	plusw1,btemp
  8016  0025AE  0EFB               	movlw	-5
  8017  0025B0  50E3               	movf	plusw1,w,c
  8018  0025B2  103E               	iorwf	btemp,w,c
  8019  0025B4  B4D8               	btfsc	status,2,c
  8020  0025B6  D025               	goto	u3410
  8021                           
  8022                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  8023                           ;stkvar	_n @ sp[(-18)+2]
  8024                           ;stkvar	_n @ sp[(-18)+2]
  8025  0025B8  0EF0               	movlw	-16
  8026  0025BA  6CE3               	negf	plusw1,c
  8027  0025BC  0EF1               	movlw	-15
  8028  0025BE  1EE3               	comf	plusw1,f,c
  8029  0025C0  0EF2               	movlw	-14
  8030  0025C2  1EE3               	comf	plusw1,f,c
  8031  0025C4  0EF3               	movlw	-13
  8032  0025C6  1EE3               	comf	plusw1,f,c
  8033  0025C8  0EF4               	movlw	-12
  8034  0025CA  1EE3               	comf	plusw1,f,c
  8035  0025CC  0EF5               	movlw	-11
  8036  0025CE  1EE3               	comf	plusw1,f,c
  8037  0025D0  0EF6               	movlw	-10
  8038  0025D2  1EE3               	comf	plusw1,f,c
  8039  0025D4  0EF7               	movlw	-9
  8040  0025D6  1EE3               	comf	plusw1,f,c
  8041  0025D8  E314               	bnc	u3410
  8042  0025DA  0EF1               	movlw	-15
  8043  0025DC  2AE3               	incf	plusw1,f,c
  8044  0025DE  E311               	bnc	u3410
  8045  0025E0  0EF2               	movlw	-14
  8046  0025E2  2AE3               	incf	plusw1,f,c
  8047  0025E4  E30E               	bnc	u3410
  8048  0025E6  0EF3               	movlw	-13
  8049  0025E8  2AE3               	incf	plusw1,f,c
  8050  0025EA  E30B               	bnc	u3410
  8051  0025EC  0EF4               	movlw	-12
  8052  0025EE  2AE3               	incf	plusw1,f,c
  8053  0025F0  E308               	bnc	u3410
  8054  0025F2  0EF5               	movlw	-11
  8055  0025F4  2AE3               	incf	plusw1,f,c
  8056  0025F6  E305               	bnc	u3410
  8057  0025F8  0EF6               	movlw	-10
  8058  0025FA  2AE3               	incf	plusw1,f,c
  8059  0025FC  E302               	bnc	u3410
  8060  0025FE  0EF7               	movlw	-9
  8061  002600  2AE3               	incf	plusw1,f,c
  8062  002602                     u3410:
  8063                           
  8064                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  8065  002602  AE27               	btfss	_prec+1,7,c
  8066                           
  8067                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  8068  002604  9228               	bcf	_flags,1,c
  8069                           
  8070                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  8071  002606  BE27               	btfsc	_prec+1,7,c
  8072  002608  D005               	goto	u3430
  8073  00260A  5027               	movf	_prec+1,w,c
  8074  00260C  E110               	bnz	l6367
  8075  00260E  0426               	decf	_prec,w,c
  8076  002610  B0D8               	btfsc	status,0,c
  8077  002612  D00D               	goto	l6367
  8078  002614                     u3430:
  8079  002614  0E01               	movlw	1
  8080  002616  6E48               	movwf	btemp+10,c
  8081  002618  0E00               	movlw	0
  8082  00261A  6E49               	movwf	btemp+11,c
  8083                           
  8084                           ;stkvar	_p @ sp[(-18)+16]
  8085  00261C  0EFE               	movlw	-2
  8086  00261E  0060  F123  FFE3   	movff	btemp+10,plusw1
  8087  002624  0EFF               	movlw	-1
  8088  002626  0060  F127  FFE3   	movff	btemp+11,plusw1
  8089  00262C  D008               	goto	l1675
  8090  00262E                     l6367:
  8091                           
  8092                           ;stkvar	_p @ sp[(-18)+16]
  8093  00262E  0EFE               	movlw	-2
  8094  002630  0060  F09B  FFE3   	movff	_prec,plusw1
  8095  002636  0EFF               	movlw	-1
  8096  002638  0060  F09F  FFE3   	movff	_prec+1,plusw1
  8097  00263E                     l1675:
  8098                           
  8099                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  8100                           ;stkvar	_w @ sp[(-18)+14]
  8101  00263E  0EFC               	movlw	-4
  8102  002640  0060  F093  FFE3   	movff	_width,plusw1
  8103  002646  0EFD               	movlw	-3
  8104  002648  0060  F097  FFE3   	movff	_width+1,plusw1
  8105                           
  8106                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  8107                           ;stkvar	_s @ sp[(-18)+12]
  8108  00264E  0EFA               	movlw	-6
  8109  002650  006F FF8C  F03E    	movff	plusw1,btemp
  8110  002656  0EFB               	movlw	-5
  8111  002658  50E3               	movf	plusw1,w,c
  8112  00265A  103E               	iorwf	btemp,w,c
  8113  00265C  A4D8               	btfss	status,2,c
  8114  00265E  D002               	goto	u3450
  8115  002660  A428               	btfss	_flags,2,c
  8116  002662  D00A               	goto	l6375
  8117  002664                     u3450:
  8118                           
  8119                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  8120                           ;stkvar	_w @ sp[(-18)+14]
  8121  002664  50E1               	movf	fsr1l,w,c
  8122  002666  0FFC               	addlw	-4
  8123  002668  6ED9               	movwf	fsr2l,c
  8124  00266A  50E2               	movf	fsr1h,w,c
  8125  00266C  6EDA               	movwf	fsr2h,c
  8126  00266E  0EFF               	movlw	255
  8127  002670  22DA               	addwfc	fsr2h,f,c
  8128  002672  06DE               	decf	postinc2,f,c
  8129  002674  0E00               	movlw	0
  8130  002676  5ADD               	subwfb	postdec2,f,c
  8131  002678                     l6375:
  8132                           
  8133                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  8134  002678  0E1F               	movlw	31
  8135  00267A  6E48               	movwf	btemp+10,c
  8136  00267C  0E00               	movlw	0
  8137  00267E  6E49               	movwf	btemp+11,c
  8138                           
  8139                           ;stkvar	_i @ sp[(-18)+10]
  8140  002680  0EF8               	movlw	-8
  8141  002682  0060  F123  FFE3   	movff	btemp+10,plusw1
  8142  002688  0EF9               	movlw	-7
  8143  00268A  0060  F127  FFE3   	movff	btemp+11,plusw1
  8144                           
  8145                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  8146  002690  0101               	movlb	1	; () banked
  8147  002692  6BF1               	clrf	(_dbuf+31)& (0+255),b
  8148                           
  8149                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8150  002694  D109               	goto	l6389
  8151  002696                     l6379:
  8152                           
  8153                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  8154                           ;stkvar	_i @ sp[(-18)+10]
  8155  002696  50E1               	movf	fsr1l,w,c
  8156  002698  0FF8               	addlw	-8
  8157  00269A  6ED9               	movwf	fsr2l,c
  8158  00269C  50E2               	movf	fsr1h,w,c
  8159  00269E  6EDA               	movwf	fsr2h,c
  8160  0026A0  0EFF               	movlw	255
  8161  0026A2  22DA               	addwfc	fsr2h,f,c
  8162  0026A4  06DE               	decf	postinc2,f,c
  8163  0026A6  0E00               	movlw	0
  8164  0026A8  5ADD               	subwfb	postdec2,f,c
  8165                           
  8166                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  8167  0026AA  0E0A               	movlw	10
  8168  0026AC  6EE6               	movwf	postinc1,c
  8169  0026AE  0E00               	movlw	0
  8170  0026B0  6EE6               	movwf	postinc1,c
  8171  0026B2  0E00               	movlw	0
  8172  0026B4  6EE6               	movwf	postinc1,c
  8173  0026B6  0E00               	movlw	0
  8174  0026B8  6EE6               	movwf	postinc1,c
  8175  0026BA  0E00               	movlw	0
  8176  0026BC  6EE6               	movwf	postinc1,c
  8177  0026BE  0E00               	movlw	0
  8178  0026C0  6EE6               	movwf	postinc1,c
  8179  0026C2  0E00               	movlw	0
  8180  0026C4  6EE6               	movwf	postinc1,c
  8181  0026C6  0E00               	movlw	0
  8182  0026C8  6EE6               	movwf	postinc1,c
  8183                           
  8184                           ;stkvar	_n @ sp[(-26)+2]
  8185  0026CA  50E1               	movf	fsr1l,w,c
  8186  0026CC  0FE8               	addlw	-24
  8187  0026CE  6ED9               	movwf	fsr2l,c
  8188  0026D0  50E2               	movf	fsr1h,w,c
  8189  0026D2  6EDA               	movwf	fsr2h,c
  8190  0026D4  0EFF               	movlw	255
  8191  0026D6  22DA               	addwfc	fsr2h,f,c
  8192  0026D8  006F FF7B FFE6     	movff	postinc2,postinc1
  8193  0026DE  006F FF7B FFE6     	movff	postinc2,postinc1
  8194  0026E4  006F FF7B FFE6     	movff	postinc2,postinc1
  8195  0026EA  006F FF7B FFE6     	movff	postinc2,postinc1
  8196  0026F0  006F FF7B FFE6     	movff	postinc2,postinc1
  8197  0026F6  006F FF7B FFE6     	movff	postinc2,postinc1
  8198  0026FC  006F FF7B FFE6     	movff	postinc2,postinc1
  8199  002702  006F FF7B FFE6     	movff	postinc2,postinc1
  8200  002708  EC63  F01D         	call	___aomod	;wreg free
  8201  00270C  52E5               	movf	postdec1,f,c
  8202  00270E  006F FF9C  F055    	movff	indf1,btemp+23
  8203  002714  52E5               	movf	postdec1,f,c
  8204  002716  006F FF9C  F054    	movff	indf1,btemp+22
  8205  00271C  52E5               	movf	postdec1,f,c
  8206  00271E  006F FF9C  F053    	movff	indf1,btemp+21
  8207  002724  52E5               	movf	postdec1,f,c
  8208  002726  006F FF9C  F052    	movff	indf1,btemp+20
  8209  00272C  52E5               	movf	postdec1,f,c
  8210  00272E  006F FF9C  F051    	movff	indf1,btemp+19
  8211  002734  52E5               	movf	postdec1,f,c
  8212  002736  006F FF9C  F050    	movff	indf1,btemp+18
  8213  00273C  52E5               	movf	postdec1,f,c
  8214  00273E  006F FF9C  F04F    	movff	indf1,btemp+17
  8215  002744  52E5               	movf	postdec1,f,c
  8216  002746  006F FF9C  F04E    	movff	indf1,btemp+16
  8217  00274C  0EF8               	movlw	248
  8218  00274E  26E1               	addwf	fsr1l,f,c
  8219  002750  0EFF               	movlw	255
  8220  002752  22E2               	addwfc	fsr1h,f,c
  8221  002754  0060  F138  F048   	movff	btemp+16,btemp+10
  8222  00275A  0060  F13C  F049   	movff	btemp+17,btemp+11
  8223  002760  0060  F123  FFE6   	movff	btemp+10,postinc1
  8224  002766  0060  F127  FFE6   	movff	btemp+11,postinc1
  8225  00276C  EC2D  F028         	call	_abs	;wreg free
  8226  002770  0E30               	movlw	48
  8227  002772  263E               	addwf	btemp,f,c
  8228                           
  8229                           ;stkvar	_i @ sp[(-18)+10]
  8230  002774  0EF8               	movlw	-8
  8231  002776  006F FF8C  F048    	movff	plusw1,btemp+10
  8232  00277C  0EF9               	movlw	-7
  8233  00277E  006F FF8C  F049    	movff	plusw1,btemp+11
  8234  002784  0ED2               	movlw	low _dbuf
  8235  002786  2448               	addwf	btemp+10,w,c
  8236  002788  6ED9               	movwf	fsr2l,c
  8237  00278A  0E01               	movlw	high _dbuf
  8238  00278C  2049               	addwfc	btemp+11,w,c
  8239  00278E  6EDA               	movwf	fsr2h,c
  8240  002790  0060  F0FB  FFDF   	movff	btemp,indf2
  8241                           
  8242                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  8243                           ;stkvar	_p @ sp[(-18)+16]
  8244  002796  50E1               	movf	fsr1l,w,c
  8245  002798  0FFE               	addlw	-2
  8246  00279A  6ED9               	movwf	fsr2l,c
  8247  00279C  50E2               	movf	fsr1h,w,c
  8248  00279E  6EDA               	movwf	fsr2h,c
  8249  0027A0  0EFF               	movlw	255
  8250  0027A2  22DA               	addwfc	fsr2h,f,c
  8251  0027A4  06DE               	decf	postinc2,f,c
  8252  0027A6  0E00               	movlw	0
  8253  0027A8  5ADD               	subwfb	postdec2,f,c
  8254                           
  8255                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  8256                           ;stkvar	_w @ sp[(-18)+14]
  8257  0027AA  50E1               	movf	fsr1l,w,c
  8258  0027AC  0FFC               	addlw	-4
  8259  0027AE  6ED9               	movwf	fsr2l,c
  8260  0027B0  50E2               	movf	fsr1h,w,c
  8261  0027B2  6EDA               	movwf	fsr2h,c
  8262  0027B4  0EFF               	movlw	255
  8263  0027B6  22DA               	addwfc	fsr2h,f,c
  8264  0027B8  06DE               	decf	postinc2,f,c
  8265  0027BA  0E00               	movlw	0
  8266  0027BC  5ADD               	subwfb	postdec2,f,c
  8267                           
  8268                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  8269  0027BE  0E0A               	movlw	10
  8270  0027C0  6EE6               	movwf	postinc1,c
  8271  0027C2  0E00               	movlw	0
  8272  0027C4  6EE6               	movwf	postinc1,c
  8273  0027C6  0E00               	movlw	0
  8274  0027C8  6EE6               	movwf	postinc1,c
  8275  0027CA  0E00               	movlw	0
  8276  0027CC  6EE6               	movwf	postinc1,c
  8277  0027CE  0E00               	movlw	0
  8278  0027D0  6EE6               	movwf	postinc1,c
  8279  0027D2  0E00               	movlw	0
  8280  0027D4  6EE6               	movwf	postinc1,c
  8281  0027D6  0E00               	movlw	0
  8282  0027D8  6EE6               	movwf	postinc1,c
  8283  0027DA  0E00               	movlw	0
  8284  0027DC  6EE6               	movwf	postinc1,c
  8285                           
  8286                           ;stkvar	_n @ sp[(-26)+2]
  8287  0027DE  50E1               	movf	fsr1l,w,c
  8288  0027E0  0FE8               	addlw	-24
  8289  0027E2  6ED9               	movwf	fsr2l,c
  8290  0027E4  50E2               	movf	fsr1h,w,c
  8291  0027E6  6EDA               	movwf	fsr2h,c
  8292  0027E8  0EFF               	movlw	255
  8293  0027EA  22DA               	addwfc	fsr2h,f,c
  8294  0027EC  006F FF7B FFE6     	movff	postinc2,postinc1
  8295  0027F2  006F FF7B FFE6     	movff	postinc2,postinc1
  8296  0027F8  006F FF7B FFE6     	movff	postinc2,postinc1
  8297  0027FE  006F FF7B FFE6     	movff	postinc2,postinc1
  8298  002804  006F FF7B FFE6     	movff	postinc2,postinc1
  8299  00280A  006F FF7B FFE6     	movff	postinc2,postinc1
  8300  002810  006F FF7B FFE6     	movff	postinc2,postinc1
  8301  002816  006F FF7B FFE6     	movff	postinc2,postinc1
  8302  00281C  ECF1  F01A         	call	___aodiv	;wreg free
  8303  002820  52E5               	movf	postdec1,f,c
  8304  002822  006F FF9C  F055    	movff	indf1,btemp+23
  8305  002828  52E5               	movf	postdec1,f,c
  8306  00282A  006F FF9C  F054    	movff	indf1,btemp+22
  8307  002830  52E5               	movf	postdec1,f,c
  8308  002832  006F FF9C  F053    	movff	indf1,btemp+21
  8309  002838  52E5               	movf	postdec1,f,c
  8310  00283A  006F FF9C  F052    	movff	indf1,btemp+20
  8311  002840  52E5               	movf	postdec1,f,c
  8312  002842  006F FF9C  F051    	movff	indf1,btemp+19
  8313  002848  52E5               	movf	postdec1,f,c
  8314  00284A  006F FF9C  F050    	movff	indf1,btemp+18
  8315  002850  52E5               	movf	postdec1,f,c
  8316  002852  006F FF9C  F04F    	movff	indf1,btemp+17
  8317  002858  52E5               	movf	postdec1,f,c
  8318  00285A  006F FF9C  F04E    	movff	indf1,btemp+16
  8319  002860  0EF8               	movlw	248
  8320  002862  26E1               	addwf	fsr1l,f,c
  8321  002864  0EFF               	movlw	255
  8322  002866  22E2               	addwfc	fsr1h,f,c
  8323                           
  8324                           ;stkvar	_n @ sp[(-18)+2]
  8325  002868  0EF0               	movlw	-16
  8326  00286A  0060  F13B  FFE3   	movff	btemp+16,plusw1
  8327  002870  0EF1               	movlw	-15
  8328  002872  0060  F13F  FFE3   	movff	btemp+17,plusw1
  8329  002878  0EF2               	movlw	-14
  8330  00287A  0060  F143  FFE3   	movff	btemp+18,plusw1
  8331  002880  0EF3               	movlw	-13
  8332  002882  0060  F147  FFE3   	movff	btemp+19,plusw1
  8333  002888  0EF4               	movlw	-12
  8334  00288A  0060  F14B  FFE3   	movff	btemp+20,plusw1
  8335  002890  0EF5               	movlw	-11
  8336  002892  0060  F14F  FFE3   	movff	btemp+21,plusw1
  8337  002898  0EF6               	movlw	-10
  8338  00289A  0060  F153  FFE3   	movff	btemp+22,plusw1
  8339  0028A0  0EF7               	movlw	-9
  8340  0028A2  0060  F157  FFE3   	movff	btemp+23,plusw1
  8341  0028A8                     l6389:
  8342                           
  8343                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8344                           ;stkvar	_i @ sp[(-18)+10]
  8345  0028A8  0EF9               	movlw	-7
  8346  0028AA  BEE3               	btfsc	plusw1,7,c
  8347  0028AC  D036               	goto	u3500
  8348  0028AE  0EF9               	movlw	-7
  8349  0028B0  50E3               	movf	plusw1,w,c
  8350  0028B2  E104               	bnz	u3460
  8351  0028B4  0EF8               	movlw	-8
  8352  0028B6  04E3               	decf	plusw1,w,c
  8353  0028B8  A0D8               	btfss	status,0,c
  8354  0028BA  D02F               	goto	u3500
  8355  0028BC                     u3460:
  8356                           
  8357                           ;stkvar	_n @ sp[(-18)+2]
  8358  0028BC  0EF0               	movlw	-16
  8359  0028BE  50E3               	movf	plusw1,w,c
  8360  0028C0  E115               	bnz	u3471
  8361  0028C2  0EF1               	movlw	-15
  8362  0028C4  50E3               	movf	plusw1,w,c
  8363  0028C6  E112               	bnz	u3471
  8364  0028C8  0EF2               	movlw	-14
  8365  0028CA  50E3               	movf	plusw1,w,c
  8366  0028CC  E10F               	bnz	u3471
  8367  0028CE  0EF3               	movlw	-13
  8368  0028D0  50E3               	movf	plusw1,w,c
  8369  0028D2  E10C               	bnz	u3471
  8370  0028D4  0EF4               	movlw	-12
  8371  0028D6  50E3               	movf	plusw1,w,c
  8372  0028D8  E109               	bnz	u3471
  8373  0028DA  0EF5               	movlw	-11
  8374  0028DC  50E3               	movf	plusw1,w,c
  8375  0028DE  E106               	bnz	u3471
  8376  0028E0  0EF6               	movlw	-10
  8377  0028E2  50E3               	movf	plusw1,w,c
  8378  0028E4  E103               	bnz	u3471
  8379  0028E6  0EF7               	movlw	-9
  8380  0028E8  50E3               	movf	plusw1,w,c
  8381  0028EA  A4D8               	btfss	status,2,c
  8382  0028EC                     u3471:
  8383  0028EC  D6D4               	goto	l6379
  8384                           
  8385                           ;stkvar	_p @ sp[(-18)+16]
  8386  0028EE  0EFF               	movlw	-1
  8387  0028F0  BEE3               	btfsc	plusw1,7,c
  8388  0028F2  D007               	goto	u3480
  8389  0028F4  0EFF               	movlw	-1
  8390  0028F6  50E3               	movf	plusw1,w,c
  8391  0028F8  E103               	bnz	u3481
  8392  0028FA  0EFE               	movlw	-2
  8393  0028FC  04E3               	decf	plusw1,w,c
  8394  0028FE  B0D8               	btfsc	status,0,c
  8395  002900                     u3481:
  8396  002900  D6CA               	goto	l6379
  8397  002902                     u3480:
  8398                           
  8399                           ;stkvar	_w @ sp[(-18)+14]
  8400  002902  0EFD               	movlw	-3
  8401  002904  BEE3               	btfsc	plusw1,7,c
  8402  002906  D009               	goto	u3500
  8403  002908  0EFD               	movlw	-3
  8404  00290A  50E3               	movf	plusw1,w,c
  8405  00290C  E104               	bnz	u3490
  8406  00290E  0EFC               	movlw	-4
  8407  002910  04E3               	decf	plusw1,w,c
  8408  002912  A0D8               	btfss	status,0,c
  8409  002914  D002               	goto	u3500
  8410  002916                     u3490:
  8411  002916  B228               	btfsc	_flags,1,c
  8412  002918  D6BE               	goto	l6379
  8413  00291A                     u3500:
  8414                           
  8415                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  8416                           ;stkvar	_s @ sp[(-18)+12]
  8417  00291A  0EFA               	movlw	-6
  8418  00291C  006F FF8C  F03E    	movff	plusw1,btemp
  8419  002922  0EFB               	movlw	-5
  8420  002924  50E3               	movf	plusw1,w,c
  8421  002926  103E               	iorwf	btemp,w,c
  8422  002928  A4D8               	btfss	status,2,c
  8423  00292A  D002               	goto	u3520
  8424  00292C  A428               	btfss	_flags,2,c
  8425  00292E  D033               	goto	l6413
  8426  002930                     u3520:
  8427                           
  8428                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  8429                           ;stkvar	_i @ sp[(-18)+10]
  8430  002930  50E1               	movf	fsr1l,w,c
  8431  002932  0FF8               	addlw	-8
  8432  002934  6ED9               	movwf	fsr2l,c
  8433  002936  50E2               	movf	fsr1h,w,c
  8434  002938  6EDA               	movwf	fsr2h,c
  8435  00293A  0EFF               	movlw	255
  8436  00293C  22DA               	addwfc	fsr2h,f,c
  8437  00293E  06DE               	decf	postinc2,f,c
  8438  002940  0E00               	movlw	0
  8439  002942  5ADD               	subwfb	postdec2,f,c
  8440                           
  8441                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  8442                           ;stkvar	_s @ sp[(-18)+12]
  8443  002944  0EFA               	movlw	-6
  8444  002946  006F FF8C  F03E    	movff	plusw1,btemp
  8445  00294C  0EFB               	movlw	-5
  8446  00294E  50E3               	movf	plusw1,w,c
  8447  002950  103E               	iorwf	btemp,w,c
  8448  002952  A4D8               	btfss	status,2,c
  8449  002954  D002               	goto	l6409
  8450  002956  0E2B               	movlw	43
  8451  002958  D001               	goto	L13
  8452  00295A                     l6409:
  8453  00295A  0E2D               	movlw	45
  8454  00295C                     L13:
  8455  00295C  6E48               	movwf	btemp+10,c
  8456  00295E  0E00               	movlw	0
  8457  002960  6E49               	movwf	btemp+11,c
  8458                           
  8459                           ;stkvar	_dtoa$3746 @ sp[(-18)+0]
  8460  002962  0EEE               	movlw	-18
  8461  002964  0060  F123  FFE3   	movff	btemp+10,plusw1
  8462  00296A  0EEF               	movlw	-17
  8463  00296C  0060  F127  FFE3   	movff	btemp+11,plusw1
  8464                           
  8465                           ;stkvar	_dtoa$3746 @ sp[(-18)+0]
  8466                           ;stkvar	_i @ sp[(-18)+10]
  8467  002972  0EF8               	movlw	-8
  8468  002974  006F FF8C  F048    	movff	plusw1,btemp+10
  8469  00297A  0EF9               	movlw	-7
  8470  00297C  006F FF8C  F049    	movff	plusw1,btemp+11
  8471  002982  0ED2               	movlw	low _dbuf
  8472  002984  2448               	addwf	btemp+10,w,c
  8473  002986  6ED9               	movwf	fsr2l,c
  8474  002988  0E01               	movlw	high _dbuf
  8475  00298A  2049               	addwfc	btemp+11,w,c
  8476  00298C  6EDA               	movwf	fsr2h,c
  8477  00298E  0EEE               	movlw	-18
  8478  002990  006F FF8F FFDF     	movff	plusw1,indf2
  8479  002996                     l6413:
  8480                           
  8481                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  8482                           ;stkvar	_w @ sp[(-18)+14]
  8483  002996  0EFC               	movlw	-4
  8484  002998  006F FF8F FFE6     	movff	plusw1,postinc1
  8485  00299E  006F FF8F FFE6     	movff	plusw1,postinc1
  8486                           
  8487                           ;stkvar	_i @ sp[(-20)+10]
  8488  0029A4  0ED2               	movlw	low _dbuf
  8489  0029A6  6E48               	movwf	btemp+10,c
  8490  0029A8  0E01               	movlw	high _dbuf
  8491  0029AA  6E49               	movwf	btemp+11,c
  8492  0029AC  0EF6               	movlw	-10
  8493  0029AE  50E3               	movf	plusw1,w,c
  8494  0029B0  2648               	addwf	btemp+10,f,c
  8495  0029B2  0EF7               	movlw	-9
  8496  0029B4  50E3               	movf	plusw1,w,c
  8497  0029B6  2249               	addwfc	btemp+11,f,c
  8498  0029B8  0060  F123  FFE6   	movff	btemp+10,postinc1
  8499  0029BE  0060  F127  FFE6   	movff	btemp+11,postinc1
  8500                           
  8501                           ;stkvar	_fp @ sp[(-22)+-2]
  8502  0029C4  0EE8               	movlw	-24
  8503  0029C6  006F FF8F FFE6     	movff	plusw1,postinc1
  8504  0029CC  006F FF8F FFE6     	movff	plusw1,postinc1
  8505  0029D2  ECF5  F020         	call	_pad	;wreg free
  8506                           
  8507                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
  8508  0029D6  0EE4               	movlw	228
  8509  0029D8  26E1               	addwf	fsr1l,f,c
  8510  0029DA  0EFF               	movlw	255
  8511  0029DC  22E2               	addwfc	fsr1h,f,c
  8512  0029DE  0012               	return		;funcret
  8513  0029E0                     __end_of_dtoa:
  8514                           	opt callstack 0
  8515                           
  8516 ;; *************** function _abs *****************
  8517 ;; Defined at:
  8518 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  8519 ;; Parameters:    Size  Location     Type
  8520 ;;  a               2  [STACK] int 
  8521 ;; Auto vars:     Size  Location     Type
  8522 ;;		None
  8523 ;; Return value:  Size  Location     Type
  8524 ;;                  2  [STACK] int 
  8525 ;; Registers used:
  8526 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  8527 ;; Tracked objects:
  8528 ;;		On entry : 0/1
  8529 ;;		On exit  : 0/0
  8530 ;;		Unchanged: 0/0
  8531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8536 ;;Total ram usage:        0 bytes
  8537 ;; Hardware stack levels used:    1
  8538 ;; Hardware stack levels required when called:    3
  8539 ;; This function calls:
  8540 ;;		Nothing
  8541 ;; This function is called by:
  8542 ;;		_dtoa
  8543 ;; This function uses a reentrant model
  8544 ;;
  8545                           
  8546                           	psect	text37
  8547  00505A                     __ptext37:
  8548                           	opt callstack 0
  8549  00505A                     _abs:
  8550                           	opt callstack 23
  8551                           
  8552                           ;stkvar	_a @ sp[(0)+-2]
  8553                           
  8554                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8555                           ;incstack = 0
  8556  00505A  0EFF               	movlw	-1
  8557  00505C  BEE3               	btfsc	plusw1,7,c
  8558  00505E  D007               	goto	u1840
  8559  005060  0EFF               	movlw	-1
  8560  005062  50E3               	movf	plusw1,w,c
  8561  005064  E112               	bnz	l4625
  8562  005066  0EFE               	movlw	-2
  8563  005068  04E3               	decf	plusw1,w,c
  8564  00506A  B0D8               	btfsc	status,0,c
  8565  00506C  D00E               	goto	l4625
  8566  00506E                     u1840:
  8567                           
  8568                           ;stkvar	_a @ sp[(0)+-2]
  8569  00506E  0EFE               	movlw	-2
  8570  005070  006F FF8C  F03E    	movff	plusw1,btemp
  8571  005076  1E3E               	comf	btemp,f,c
  8572  005078  0EFF               	movlw	-1
  8573  00507A  006F FF8C  F03F    	movff	plusw1,btemp+1
  8574  005080  1E3F               	comf	btemp+1,f,c
  8575  005082  2A3E               	incf	btemp,f,c
  8576  005084  B4D8               	btfsc	status,2,c
  8577  005086  2A3F               	incf	btemp+1,f,c
  8578  005088  D008               	goto	l2416
  8579  00508A                     l4625:
  8580                           
  8581                           ;stkvar	_a @ sp[(0)+-2]
  8582  00508A  0EFE               	movlw	-2
  8583  00508C  006F FF8C  F03E    	movff	plusw1,btemp
  8584  005092  0EFF               	movlw	-1
  8585  005094  006F FF8C  F03F    	movff	plusw1,btemp+1
  8586  00509A                     l2416:
  8587                           
  8588                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
  8589  00509A  52E5               	movf	postdec1,f,c
  8590  00509C  52E5               	movf	postdec1,f,c
  8591  00509E  0012               	return		;funcret
  8592  0050A0                     __end_of_abs:
  8593                           	opt callstack 0
  8594                           
  8595 ;; *************** function ___aomod *****************
  8596 ;; Defined at:
  8597 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  8598 ;; Parameters:    Size  Location     Type
  8599 ;;  dividend        8  [STACK] long long 
  8600 ;;  divisor         8  [STACK] long long 
  8601 ;; Auto vars:     Size  Location     Type
  8602 ;;  sign            1  [STACK] unsigned char 
  8603 ;;  counter         1  [STACK] unsigned char 
  8604 ;; Return value:  Size  Location     Type
  8605 ;;                  8  [STACK] long long 
  8606 ;; Registers used:
  8607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  8608 ;; Tracked objects:
  8609 ;;		On entry : 0/1
  8610 ;;		On exit  : 0/0
  8611 ;;		Unchanged: 0/0
  8612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8617 ;;Total ram usage:        0 bytes
  8618 ;; Hardware stack levels used:    1
  8619 ;; Hardware stack levels required when called:    3
  8620 ;; This function calls:
  8621 ;;		Nothing
  8622 ;; This function is called by:
  8623 ;;		_dtoa
  8624 ;; This function uses a reentrant model
  8625 ;;
  8626                           
  8627                           	psect	text38
  8628  003AC6                     __ptext38:
  8629                           	opt callstack 0
  8630  003AC6                     ___aomod:
  8631                           	opt callstack 0
  8632                           
  8633                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
  8634  003AC6  52E6               	movf	postinc1,f,c
  8635  003AC8  52E6               	movf	postinc1,f,c
  8636                           
  8637                           ;stkvar	_sign @ sp[(-2)+0]
  8638                           
  8639                           ;incstack = 0
  8640  003ACA  0EFE               	movlw	-2
  8641  003ACC  6AE3               	clrf	plusw1,c
  8642                           
  8643                           ;stkvar	_dividend @ sp[(-2)+-8]
  8644  003ACE  0EFD               	movlw	-3
  8645  003AD0  AEE3               	btfss	plusw1,7,c
  8646  003AD2  D028               	goto	l4681
  8647                           
  8648                           ;stkvar	_dividend @ sp[(-2)+-8]
  8649                           ;stkvar	_dividend @ sp[(-2)+-8]
  8650  003AD4  0EF6               	movlw	-10
  8651  003AD6  6CE3               	negf	plusw1,c
  8652  003AD8  0EF7               	movlw	-9
  8653  003ADA  1EE3               	comf	plusw1,f,c
  8654  003ADC  0EF8               	movlw	-8
  8655  003ADE  1EE3               	comf	plusw1,f,c
  8656  003AE0  0EF9               	movlw	-7
  8657  003AE2  1EE3               	comf	plusw1,f,c
  8658  003AE4  0EFA               	movlw	-6
  8659  003AE6  1EE3               	comf	plusw1,f,c
  8660  003AE8  0EFB               	movlw	-5
  8661  003AEA  1EE3               	comf	plusw1,f,c
  8662  003AEC  0EFC               	movlw	-4
  8663  003AEE  1EE3               	comf	plusw1,f,c
  8664  003AF0  0EFD               	movlw	-3
  8665  003AF2  1EE3               	comf	plusw1,f,c
  8666  003AF4  E314               	bnc	u1980
  8667  003AF6  0EF7               	movlw	-9
  8668  003AF8  2AE3               	incf	plusw1,f,c
  8669  003AFA  E311               	bnc	u1980
  8670  003AFC  0EF8               	movlw	-8
  8671  003AFE  2AE3               	incf	plusw1,f,c
  8672  003B00  E30E               	bnc	u1980
  8673  003B02  0EF9               	movlw	-7
  8674  003B04  2AE3               	incf	plusw1,f,c
  8675  003B06  E30B               	bnc	u1980
  8676  003B08  0EFA               	movlw	-6
  8677  003B0A  2AE3               	incf	plusw1,f,c
  8678  003B0C  E308               	bnc	u1980
  8679  003B0E  0EFB               	movlw	-5
  8680  003B10  2AE3               	incf	plusw1,f,c
  8681  003B12  E305               	bnc	u1980
  8682  003B14  0EFC               	movlw	-4
  8683  003B16  2AE3               	incf	plusw1,f,c
  8684  003B18  E302               	bnc	u1980
  8685  003B1A  0EFD               	movlw	-3
  8686  003B1C  2AE3               	incf	plusw1,f,c
  8687  003B1E                     u1980:
  8688                           
  8689                           ;stkvar	_sign @ sp[(-2)+0]
  8690  003B1E  0EFE               	movlw	-2
  8691  003B20  6AE3               	clrf	plusw1,c
  8692  003B22  2AE3               	incf	plusw1,f,c
  8693  003B24                     l4681:
  8694                           
  8695                           ;stkvar	_divisor @ sp[(-2)+-16]
  8696  003B24  0EF5               	movlw	-11
  8697  003B26  AEE3               	btfss	plusw1,7,c
  8698  003B28  D025               	goto	u2000
  8699                           
  8700                           ;stkvar	_divisor @ sp[(-2)+-16]
  8701                           ;stkvar	_divisor @ sp[(-2)+-16]
  8702  003B2A  0EEE               	movlw	-18
  8703  003B2C  6CE3               	negf	plusw1,c
  8704  003B2E  0EEF               	movlw	-17
  8705  003B30  1EE3               	comf	plusw1,f,c
  8706  003B32  0EF0               	movlw	-16
  8707  003B34  1EE3               	comf	plusw1,f,c
  8708  003B36  0EF1               	movlw	-15
  8709  003B38  1EE3               	comf	plusw1,f,c
  8710  003B3A  0EF2               	movlw	-14
  8711  003B3C  1EE3               	comf	plusw1,f,c
  8712  003B3E  0EF3               	movlw	-13
  8713  003B40  1EE3               	comf	plusw1,f,c
  8714  003B42  0EF4               	movlw	-12
  8715  003B44  1EE3               	comf	plusw1,f,c
  8716  003B46  0EF5               	movlw	-11
  8717  003B48  1EE3               	comf	plusw1,f,c
  8718  003B4A  E314               	bnc	u2000
  8719  003B4C  0EEF               	movlw	-17
  8720  003B4E  2AE3               	incf	plusw1,f,c
  8721  003B50  E311               	bnc	u2000
  8722  003B52  0EF0               	movlw	-16
  8723  003B54  2AE3               	incf	plusw1,f,c
  8724  003B56  E30E               	bnc	u2000
  8725  003B58  0EF1               	movlw	-15
  8726  003B5A  2AE3               	incf	plusw1,f,c
  8727  003B5C  E30B               	bnc	u2000
  8728  003B5E  0EF2               	movlw	-14
  8729  003B60  2AE3               	incf	plusw1,f,c
  8730  003B62  E308               	bnc	u2000
  8731  003B64  0EF3               	movlw	-13
  8732  003B66  2AE3               	incf	plusw1,f,c
  8733  003B68  E305               	bnc	u2000
  8734  003B6A  0EF4               	movlw	-12
  8735  003B6C  2AE3               	incf	plusw1,f,c
  8736  003B6E  E302               	bnc	u2000
  8737  003B70  0EF5               	movlw	-11
  8738  003B72  2AE3               	incf	plusw1,f,c
  8739  003B74                     u2000:
  8740                           
  8741                           ;stkvar	_divisor @ sp[(-2)+-16]
  8742  003B74  0EEE               	movlw	-18
  8743  003B76  50E3               	movf	plusw1,w,c
  8744  003B78  E116               	bnz	u2010
  8745  003B7A  0EEF               	movlw	-17
  8746  003B7C  50E3               	movf	plusw1,w,c
  8747  003B7E  E113               	bnz	u2010
  8748  003B80  0EF0               	movlw	-16
  8749  003B82  50E3               	movf	plusw1,w,c
  8750  003B84  E110               	bnz	u2010
  8751  003B86  0EF1               	movlw	-15
  8752  003B88  50E3               	movf	plusw1,w,c
  8753  003B8A  E10D               	bnz	u2010
  8754  003B8C  0EF2               	movlw	-14
  8755  003B8E  50E3               	movf	plusw1,w,c
  8756  003B90  E10A               	bnz	u2010
  8757  003B92  0EF3               	movlw	-13
  8758  003B94  50E3               	movf	plusw1,w,c
  8759  003B96  E107               	bnz	u2010
  8760  003B98  0EF4               	movlw	-12
  8761  003B9A  50E3               	movf	plusw1,w,c
  8762  003B9C  E104               	bnz	u2010
  8763  003B9E  0EF5               	movlw	-11
  8764  003BA0  50E3               	movf	plusw1,w,c
  8765  003BA2  B4D8               	btfsc	status,2,c
  8766  003BA4  D075               	goto	u2040
  8767  003BA6                     u2010:
  8768                           
  8769                           ;stkvar	_counter @ sp[(-2)+1]
  8770  003BA6  0EFF               	movlw	-1
  8771  003BA8  6AE3               	clrf	plusw1,c
  8772  003BAA  D012               	goto	L14
  8773  003BAC                     l4689:
  8774                           
  8775                           ;stkvar	_divisor @ sp[(-2)+-16]
  8776  003BAC  90D8               	bcf	status,0,c
  8777  003BAE  0EEE               	movlw	-18
  8778  003BB0  36E3               	rlcf	plusw1,f,c
  8779  003BB2  0EEF               	movlw	-17
  8780  003BB4  36E3               	rlcf	plusw1,f,c
  8781  003BB6  0EF0               	movlw	-16
  8782  003BB8  36E3               	rlcf	plusw1,f,c
  8783  003BBA  0EF1               	movlw	-15
  8784  003BBC  36E3               	rlcf	plusw1,f,c
  8785  003BBE  0EF2               	movlw	-14
  8786  003BC0  36E3               	rlcf	plusw1,f,c
  8787  003BC2  0EF3               	movlw	-13
  8788  003BC4  36E3               	rlcf	plusw1,f,c
  8789  003BC6  0EF4               	movlw	-12
  8790  003BC8  36E3               	rlcf	plusw1,f,c
  8791  003BCA  0EF5               	movlw	-11
  8792  003BCC  36E3               	rlcf	plusw1,f,c
  8793                           
  8794                           ;stkvar	_counter @ sp[(-2)+1]
  8795  003BCE  0EFF               	movlw	-1
  8796  003BD0                     L14:
  8797  003BD0  2AE3               	incf	plusw1,f,c
  8798                           
  8799                           ;stkvar	_divisor @ sp[(-2)+-16]
  8800  003BD2  0EF5               	movlw	-11
  8801  003BD4  AEE3               	btfss	plusw1,7,c
  8802  003BD6  D7EA               	goto	l4689
  8803  003BD8                     u2020:
  8804                           
  8805                           ;stkvar	_divisor @ sp[(-2)+-16]
  8806                           ;stkvar	_dividend @ sp[(-2)+-8]
  8807  003BD8  50E1               	movf	fsr1l,w,c
  8808  003BDA  0FF6               	addlw	-10
  8809  003BDC  6ED9               	movwf	fsr2l,c
  8810  003BDE  50E2               	movf	fsr1h,w,c
  8811  003BE0  6EDA               	movwf	fsr2h,c
  8812  003BE2  0EFF               	movlw	255
  8813  003BE4  22DA               	addwfc	fsr2h,f,c
  8814  003BE6  0EEE               	movlw	-18
  8815  003BE8  50E3               	movf	plusw1,w,c
  8816  003BEA  5CDE               	subwf	postinc2,w,c
  8817  003BEC  0EEF               	movlw	-17
  8818  003BEE  50E3               	movf	plusw1,w,c
  8819  003BF0  58DE               	subwfb	postinc2,w,c
  8820  003BF2  0EF0               	movlw	-16
  8821  003BF4  50E3               	movf	plusw1,w,c
  8822  003BF6  58DE               	subwfb	postinc2,w,c
  8823  003BF8  0EF1               	movlw	-15
  8824  003BFA  50E3               	movf	plusw1,w,c
  8825  003BFC  58DE               	subwfb	postinc2,w,c
  8826  003BFE  0EF2               	movlw	-14
  8827  003C00  50E3               	movf	plusw1,w,c
  8828  003C02  58DE               	subwfb	postinc2,w,c
  8829  003C04  0EF3               	movlw	-13
  8830  003C06  50E3               	movf	plusw1,w,c
  8831  003C08  58DE               	subwfb	postinc2,w,c
  8832  003C0A  0EF4               	movlw	-12
  8833  003C0C  50E3               	movf	plusw1,w,c
  8834  003C0E  58DE               	subwfb	postinc2,w,c
  8835  003C10  0EF5               	movlw	-11
  8836  003C12  50E3               	movf	plusw1,w,c
  8837  003C14  58DE               	subwfb	postinc2,w,c
  8838  003C16  A0D8               	btfss	status,0,c
  8839  003C18  D01F               	goto	l4697
  8840                           
  8841                           ;stkvar	_divisor @ sp[(-2)+-16]
  8842                           ;stkvar	_dividend @ sp[(-2)+-8]
  8843  003C1A  50E1               	movf	fsr1l,w,c
  8844  003C1C  0FF6               	addlw	-10
  8845  003C1E  6ED9               	movwf	fsr2l,c
  8846  003C20  50E2               	movf	fsr1h,w,c
  8847  003C22  6EDA               	movwf	fsr2h,c
  8848  003C24  0EFF               	movlw	255
  8849  003C26  22DA               	addwfc	fsr2h,f,c
  8850  003C28  0EEE               	movlw	-18
  8851  003C2A  50E3               	movf	plusw1,w,c
  8852  003C2C  5EDE               	subwf	postinc2,f,c
  8853  003C2E  0EEF               	movlw	-17
  8854  003C30  50E3               	movf	plusw1,w,c
  8855  003C32  5ADE               	subwfb	postinc2,f,c
  8856  003C34  0EF0               	movlw	-16
  8857  003C36  50E3               	movf	plusw1,w,c
  8858  003C38  5ADE               	subwfb	postinc2,f,c
  8859  003C3A  0EF1               	movlw	-15
  8860  003C3C  50E3               	movf	plusw1,w,c
  8861  003C3E  5ADE               	subwfb	postinc2,f,c
  8862  003C40  0EF2               	movlw	-14
  8863  003C42  50E3               	movf	plusw1,w,c
  8864  003C44  5ADE               	subwfb	postinc2,f,c
  8865  003C46  0EF3               	movlw	-13
  8866  003C48  50E3               	movf	plusw1,w,c
  8867  003C4A  5ADE               	subwfb	postinc2,f,c
  8868  003C4C  0EF4               	movlw	-12
  8869  003C4E  50E3               	movf	plusw1,w,c
  8870  003C50  5ADE               	subwfb	postinc2,f,c
  8871  003C52  0EF5               	movlw	-11
  8872  003C54  50E3               	movf	plusw1,w,c
  8873  003C56  5ADE               	subwfb	postinc2,f,c
  8874  003C58                     l4697:
  8875                           
  8876                           ;stkvar	_divisor @ sp[(-2)+-16]
  8877  003C58  90D8               	bcf	status,0,c
  8878  003C5A  0EF5               	movlw	-11
  8879  003C5C  32E3               	rrcf	plusw1,f,c
  8880  003C5E  0EF4               	movlw	-12
  8881  003C60  32E3               	rrcf	plusw1,f,c
  8882  003C62  0EF3               	movlw	-13
  8883  003C64  32E3               	rrcf	plusw1,f,c
  8884  003C66  0EF2               	movlw	-14
  8885  003C68  32E3               	rrcf	plusw1,f,c
  8886  003C6A  0EF1               	movlw	-15
  8887  003C6C  32E3               	rrcf	plusw1,f,c
  8888  003C6E  0EF0               	movlw	-16
  8889  003C70  32E3               	rrcf	plusw1,f,c
  8890  003C72  0EEF               	movlw	-17
  8891  003C74  32E3               	rrcf	plusw1,f,c
  8892  003C76  0EEE               	movlw	-18
  8893  003C78  32E3               	rrcf	plusw1,f,c
  8894                           
  8895                           ;stkvar	_counter @ sp[(-2)+1]
  8896  003C7A  0EFF               	movlw	-1
  8897  003C7C  50E3               	movf	plusw1,w,c
  8898  003C7E  6E3E               	movwf	btemp,c
  8899  003C80  0E01               	movlw	1
  8900  003C82  5E3E               	subwf	btemp,f,c
  8901  003C84  0EFF               	movlw	-1
  8902  003C86  0060  F0FB  FFE3   	movff	btemp,plusw1
  8903  003C8C  A4D8               	btfss	status,2,c
  8904  003C8E  D7A4               	goto	u2020
  8905  003C90                     u2040:
  8906                           
  8907                           ;stkvar	_sign @ sp[(-2)+0]
  8908  003C90  0EFE               	movlw	-2
  8909  003C92  50E3               	movf	plusw1,w,c
  8910  003C94  B4D8               	btfsc	status,2,c
  8911  003C96  D025               	goto	u2060
  8912                           
  8913                           ;stkvar	_dividend @ sp[(-2)+-8]
  8914                           ;stkvar	_dividend @ sp[(-2)+-8]
  8915  003C98  0EF6               	movlw	-10
  8916  003C9A  6CE3               	negf	plusw1,c
  8917  003C9C  0EF7               	movlw	-9
  8918  003C9E  1EE3               	comf	plusw1,f,c
  8919  003CA0  0EF8               	movlw	-8
  8920  003CA2  1EE3               	comf	plusw1,f,c
  8921  003CA4  0EF9               	movlw	-7
  8922  003CA6  1EE3               	comf	plusw1,f,c
  8923  003CA8  0EFA               	movlw	-6
  8924  003CAA  1EE3               	comf	plusw1,f,c
  8925  003CAC  0EFB               	movlw	-5
  8926  003CAE  1EE3               	comf	plusw1,f,c
  8927  003CB0  0EFC               	movlw	-4
  8928  003CB2  1EE3               	comf	plusw1,f,c
  8929  003CB4  0EFD               	movlw	-3
  8930  003CB6  1EE3               	comf	plusw1,f,c
  8931  003CB8  E314               	bnc	u2060
  8932  003CBA  0EF7               	movlw	-9
  8933  003CBC  2AE3               	incf	plusw1,f,c
  8934  003CBE  E311               	bnc	u2060
  8935  003CC0  0EF8               	movlw	-8
  8936  003CC2  2AE3               	incf	plusw1,f,c
  8937  003CC4  E30E               	bnc	u2060
  8938  003CC6  0EF9               	movlw	-7
  8939  003CC8  2AE3               	incf	plusw1,f,c
  8940  003CCA  E30B               	bnc	u2060
  8941  003CCC  0EFA               	movlw	-6
  8942  003CCE  2AE3               	incf	plusw1,f,c
  8943  003CD0  E308               	bnc	u2060
  8944  003CD2  0EFB               	movlw	-5
  8945  003CD4  2AE3               	incf	plusw1,f,c
  8946  003CD6  E305               	bnc	u2060
  8947  003CD8  0EFC               	movlw	-4
  8948  003CDA  2AE3               	incf	plusw1,f,c
  8949  003CDC  E302               	bnc	u2060
  8950  003CDE  0EFD               	movlw	-3
  8951  003CE0  2AE3               	incf	plusw1,f,c
  8952  003CE2                     u2060:
  8953                           
  8954                           ;stkvar	_dividend @ sp[(-2)+-8]
  8955  003CE2  0EF6               	movlw	246
  8956  003CE4  24E1               	addwf	fsr1l,w,c
  8957  003CE6  6ED9               	movwf	fsr2l,c
  8958  003CE8  0EFF               	movlw	255
  8959  003CEA  20E2               	addwfc	fsr1h,w,c
  8960  003CEC  6EDA               	movwf	fsr2h,c
  8961                           
  8962                           ;stkvar	?___aomod @ sp[(-2)+-8]
  8963  003CEE  0E08               	movlw	8
  8964  003CF0  6E3E               	movwf	btemp,c
  8965  003CF2  0EF6               	movlw	-10
  8966  003CF4                     us207999:
  8967  003CF4  006F FF7B FFE3     	movff	postinc2,plusw1
  8968  003CFA  28E8               	incf	wreg,w,c
  8969  003CFC  2E3E               	decfsz	btemp,f,c
  8970  003CFE  D7FA               	bra	us207999
  8971                           
  8972                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
  8973  003D00  52E5               	movf	postdec1,f,c
  8974  003D02  52E5               	movf	postdec1,f,c
  8975  003D04  0012               	return		;funcret
  8976  003D06                     __end_of___aomod:
  8977                           	opt callstack 0
  8978                           
  8979 ;; *************** function ___aodiv *****************
  8980 ;; Defined at:
  8981 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  8982 ;; Parameters:    Size  Location     Type
  8983 ;;  dividend        8  [STACK] long long 
  8984 ;;  divisor         8  [STACK] long long 
  8985 ;; Auto vars:     Size  Location     Type
  8986 ;;  quotient        8  [STACK] long long 
  8987 ;;  sign            1  [STACK] unsigned char 
  8988 ;;  counter         1  [STACK] unsigned char 
  8989 ;; Return value:  Size  Location     Type
  8990 ;;                  8  [STACK] long long 
  8991 ;; Registers used:
  8992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  8993 ;; Tracked objects:
  8994 ;;		On entry : 0/1
  8995 ;;		On exit  : 0/0
  8996 ;;		Unchanged: 0/0
  8997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9002 ;;Total ram usage:        0 bytes
  9003 ;; Hardware stack levels used:    1
  9004 ;; Hardware stack levels required when called:    3
  9005 ;; This function calls:
  9006 ;;		Nothing
  9007 ;; This function is called by:
  9008 ;;		_dtoa
  9009 ;; This function uses a reentrant model
  9010 ;;
  9011                           
  9012                           	psect	text39
  9013  0035E2                     __ptext39:
  9014                           	opt callstack 0
  9015  0035E2                     ___aodiv:
  9016                           	opt callstack 0
  9017                           
  9018                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
  9019  0035E2  0E0A               	movlw	10
  9020  0035E4  26E1               	addwf	fsr1l,f,c
  9021  0035E6  0E00               	movlw	0
  9022  0035E8  22E2               	addwfc	fsr1h,f,c
  9023                           
  9024                           ;stkvar	_sign @ sp[(-10)+8]
  9025                           
  9026                           ;incstack = 0
  9027  0035EA  0EFE               	movlw	-2
  9028  0035EC  6AE3               	clrf	plusw1,c
  9029                           
  9030                           ;stkvar	_divisor @ sp[(-10)+-16]
  9031  0035EE  0EED               	movlw	-19
  9032  0035F0  AEE3               	btfss	plusw1,7,c
  9033  0035F2  D028               	goto	l4637
  9034                           
  9035                           ;stkvar	_divisor @ sp[(-10)+-16]
  9036                           ;stkvar	_divisor @ sp[(-10)+-16]
  9037  0035F4  0EE6               	movlw	-26
  9038  0035F6  6CE3               	negf	plusw1,c
  9039  0035F8  0EE7               	movlw	-25
  9040  0035FA  1EE3               	comf	plusw1,f,c
  9041  0035FC  0EE8               	movlw	-24
  9042  0035FE  1EE3               	comf	plusw1,f,c
  9043  003600  0EE9               	movlw	-23
  9044  003602  1EE3               	comf	plusw1,f,c
  9045  003604  0EEA               	movlw	-22
  9046  003606  1EE3               	comf	plusw1,f,c
  9047  003608  0EEB               	movlw	-21
  9048  00360A  1EE3               	comf	plusw1,f,c
  9049  00360C  0EEC               	movlw	-20
  9050  00360E  1EE3               	comf	plusw1,f,c
  9051  003610  0EED               	movlw	-19
  9052  003612  1EE3               	comf	plusw1,f,c
  9053  003614  E314               	bnc	u1860
  9054  003616  0EE7               	movlw	-25
  9055  003618  2AE3               	incf	plusw1,f,c
  9056  00361A  E311               	bnc	u1860
  9057  00361C  0EE8               	movlw	-24
  9058  00361E  2AE3               	incf	plusw1,f,c
  9059  003620  E30E               	bnc	u1860
  9060  003622  0EE9               	movlw	-23
  9061  003624  2AE3               	incf	plusw1,f,c
  9062  003626  E30B               	bnc	u1860
  9063  003628  0EEA               	movlw	-22
  9064  00362A  2AE3               	incf	plusw1,f,c
  9065  00362C  E308               	bnc	u1860
  9066  00362E  0EEB               	movlw	-21
  9067  003630  2AE3               	incf	plusw1,f,c
  9068  003632  E305               	bnc	u1860
  9069  003634  0EEC               	movlw	-20
  9070  003636  2AE3               	incf	plusw1,f,c
  9071  003638  E302               	bnc	u1860
  9072  00363A  0EED               	movlw	-19
  9073  00363C  2AE3               	incf	plusw1,f,c
  9074  00363E                     u1860:
  9075                           
  9076                           ;stkvar	_sign @ sp[(-10)+8]
  9077  00363E  0EFE               	movlw	-2
  9078  003640  6AE3               	clrf	plusw1,c
  9079  003642  2AE3               	incf	plusw1,f,c
  9080  003644                     l4637:
  9081                           
  9082                           ;stkvar	_dividend @ sp[(-10)+-8]
  9083  003644  0EF5               	movlw	-11
  9084  003646  AEE3               	btfss	plusw1,7,c
  9085  003648  D027               	goto	l4643
  9086                           
  9087                           ;stkvar	_dividend @ sp[(-10)+-8]
  9088                           ;stkvar	_dividend @ sp[(-10)+-8]
  9089  00364A  0EEE               	movlw	-18
  9090  00364C  6CE3               	negf	plusw1,c
  9091  00364E  0EEF               	movlw	-17
  9092  003650  1EE3               	comf	plusw1,f,c
  9093  003652  0EF0               	movlw	-16
  9094  003654  1EE3               	comf	plusw1,f,c
  9095  003656  0EF1               	movlw	-15
  9096  003658  1EE3               	comf	plusw1,f,c
  9097  00365A  0EF2               	movlw	-14
  9098  00365C  1EE3               	comf	plusw1,f,c
  9099  00365E  0EF3               	movlw	-13
  9100  003660  1EE3               	comf	plusw1,f,c
  9101  003662  0EF4               	movlw	-12
  9102  003664  1EE3               	comf	plusw1,f,c
  9103  003666  0EF5               	movlw	-11
  9104  003668  1EE3               	comf	plusw1,f,c
  9105  00366A  E314               	bnc	u1880
  9106  00366C  0EEF               	movlw	-17
  9107  00366E  2AE3               	incf	plusw1,f,c
  9108  003670  E311               	bnc	u1880
  9109  003672  0EF0               	movlw	-16
  9110  003674  2AE3               	incf	plusw1,f,c
  9111  003676  E30E               	bnc	u1880
  9112  003678  0EF1               	movlw	-15
  9113  00367A  2AE3               	incf	plusw1,f,c
  9114  00367C  E30B               	bnc	u1880
  9115  00367E  0EF2               	movlw	-14
  9116  003680  2AE3               	incf	plusw1,f,c
  9117  003682  E308               	bnc	u1880
  9118  003684  0EF3               	movlw	-13
  9119  003686  2AE3               	incf	plusw1,f,c
  9120  003688  E305               	bnc	u1880
  9121  00368A  0EF4               	movlw	-12
  9122  00368C  2AE3               	incf	plusw1,f,c
  9123  00368E  E302               	bnc	u1880
  9124  003690  0EF5               	movlw	-11
  9125  003692  2AE3               	incf	plusw1,f,c
  9126  003694                     u1880:
  9127                           
  9128                           ;stkvar	_sign @ sp[(-10)+8]
  9129  003694  0EFE               	movlw	-2
  9130  003696  70E3               	btg	plusw1,0,c
  9131  003698                     l4643:
  9132                           
  9133                           ;stkvar	_quotient @ sp[(-10)+0]
  9134  003698  0E07               	movlw	7
  9135  00369A  6E3E               	movwf	btemp,c
  9136  00369C  0EF6               	movlw	-10
  9137  00369E                     u1891:
  9138  00369E  6AE3               	clrf	plusw1,c
  9139  0036A0  2AE8               	incf	wreg,f,c
  9140  0036A2  063E               	decf	btemp,f,c
  9141  0036A4  E2FC               	bc	u1891
  9142                           
  9143                           ;stkvar	_divisor @ sp[(-10)+-16]
  9144  0036A6  0EE6               	movlw	-26
  9145  0036A8  50E3               	movf	plusw1,w,c
  9146  0036AA  E116               	bnz	u1900
  9147  0036AC  0EE7               	movlw	-25
  9148  0036AE  50E3               	movf	plusw1,w,c
  9149  0036B0  E113               	bnz	u1900
  9150  0036B2  0EE8               	movlw	-24
  9151  0036B4  50E3               	movf	plusw1,w,c
  9152  0036B6  E110               	bnz	u1900
  9153  0036B8  0EE9               	movlw	-23
  9154  0036BA  50E3               	movf	plusw1,w,c
  9155  0036BC  E10D               	bnz	u1900
  9156  0036BE  0EEA               	movlw	-22
  9157  0036C0  50E3               	movf	plusw1,w,c
  9158  0036C2  E10A               	bnz	u1900
  9159  0036C4  0EEB               	movlw	-21
  9160  0036C6  50E3               	movf	plusw1,w,c
  9161  0036C8  E107               	bnz	u1900
  9162  0036CA  0EEC               	movlw	-20
  9163  0036CC  50E3               	movf	plusw1,w,c
  9164  0036CE  E104               	bnz	u1900
  9165  0036D0  0EED               	movlw	-19
  9166  0036D2  50E3               	movf	plusw1,w,c
  9167  0036D4  B4D8               	btfsc	status,2,c
  9168  0036D6  D088               	goto	u1930
  9169  0036D8                     u1900:
  9170                           
  9171                           ;stkvar	_counter @ sp[(-10)+9]
  9172  0036D8  0EFF               	movlw	-1
  9173  0036DA  6AE3               	clrf	plusw1,c
  9174  0036DC  D012               	goto	L15
  9175  0036DE                     l4649:
  9176                           
  9177                           ;stkvar	_divisor @ sp[(-10)+-16]
  9178  0036DE  90D8               	bcf	status,0,c
  9179  0036E0  0EE6               	movlw	-26
  9180  0036E2  36E3               	rlcf	plusw1,f,c
  9181  0036E4  0EE7               	movlw	-25
  9182  0036E6  36E3               	rlcf	plusw1,f,c
  9183  0036E8  0EE8               	movlw	-24
  9184  0036EA  36E3               	rlcf	plusw1,f,c
  9185  0036EC  0EE9               	movlw	-23
  9186  0036EE  36E3               	rlcf	plusw1,f,c
  9187  0036F0  0EEA               	movlw	-22
  9188  0036F2  36E3               	rlcf	plusw1,f,c
  9189  0036F4  0EEB               	movlw	-21
  9190  0036F6  36E3               	rlcf	plusw1,f,c
  9191  0036F8  0EEC               	movlw	-20
  9192  0036FA  36E3               	rlcf	plusw1,f,c
  9193  0036FC  0EED               	movlw	-19
  9194  0036FE  36E3               	rlcf	plusw1,f,c
  9195                           
  9196                           ;stkvar	_counter @ sp[(-10)+9]
  9197  003700  0EFF               	movlw	-1
  9198  003702                     L15:
  9199  003702  2AE3               	incf	plusw1,f,c
  9200                           
  9201                           ;stkvar	_divisor @ sp[(-10)+-16]
  9202  003704  0EED               	movlw	-19
  9203  003706  AEE3               	btfss	plusw1,7,c
  9204  003708  D7EA               	goto	l4649
  9205  00370A                     u1910:
  9206                           
  9207                           ;stkvar	_quotient @ sp[(-10)+0]
  9208  00370A  90D8               	bcf	status,0,c
  9209  00370C  0EF6               	movlw	-10
  9210  00370E  36E3               	rlcf	plusw1,f,c
  9211  003710  0EF7               	movlw	-9
  9212  003712  36E3               	rlcf	plusw1,f,c
  9213  003714  0EF8               	movlw	-8
  9214  003716  36E3               	rlcf	plusw1,f,c
  9215  003718  0EF9               	movlw	-7
  9216  00371A  36E3               	rlcf	plusw1,f,c
  9217  00371C  0EFA               	movlw	-6
  9218  00371E  36E3               	rlcf	plusw1,f,c
  9219  003720  0EFB               	movlw	-5
  9220  003722  36E3               	rlcf	plusw1,f,c
  9221  003724  0EFC               	movlw	-4
  9222  003726  36E3               	rlcf	plusw1,f,c
  9223  003728  0EFD               	movlw	-3
  9224  00372A  36E3               	rlcf	plusw1,f,c
  9225                           
  9226                           ;stkvar	_divisor @ sp[(-10)+-16]
  9227                           ;stkvar	_dividend @ sp[(-10)+-8]
  9228  00372C  50E1               	movf	fsr1l,w,c
  9229  00372E  0FEE               	addlw	-18
  9230  003730  6ED9               	movwf	fsr2l,c
  9231  003732  50E2               	movf	fsr1h,w,c
  9232  003734  6EDA               	movwf	fsr2h,c
  9233  003736  0EFF               	movlw	255
  9234  003738  22DA               	addwfc	fsr2h,f,c
  9235  00373A  0EE6               	movlw	-26
  9236  00373C  50E3               	movf	plusw1,w,c
  9237  00373E  5CDE               	subwf	postinc2,w,c
  9238  003740  0EE7               	movlw	-25
  9239  003742  50E3               	movf	plusw1,w,c
  9240  003744  58DE               	subwfb	postinc2,w,c
  9241  003746  0EE8               	movlw	-24
  9242  003748  50E3               	movf	plusw1,w,c
  9243  00374A  58DE               	subwfb	postinc2,w,c
  9244  00374C  0EE9               	movlw	-23
  9245  00374E  50E3               	movf	plusw1,w,c
  9246  003750  58DE               	subwfb	postinc2,w,c
  9247  003752  0EEA               	movlw	-22
  9248  003754  50E3               	movf	plusw1,w,c
  9249  003756  58DE               	subwfb	postinc2,w,c
  9250  003758  0EEB               	movlw	-21
  9251  00375A  50E3               	movf	plusw1,w,c
  9252  00375C  58DE               	subwfb	postinc2,w,c
  9253  00375E  0EEC               	movlw	-20
  9254  003760  50E3               	movf	plusw1,w,c
  9255  003762  58DE               	subwfb	postinc2,w,c
  9256  003764  0EED               	movlw	-19
  9257  003766  50E3               	movf	plusw1,w,c
  9258  003768  58DE               	subwfb	postinc2,w,c
  9259  00376A  A0D8               	btfss	status,0,c
  9260  00376C  D021               	goto	l4661
  9261                           
  9262                           ;stkvar	_divisor @ sp[(-10)+-16]
  9263                           ;stkvar	_dividend @ sp[(-10)+-8]
  9264  00376E  50E1               	movf	fsr1l,w,c
  9265  003770  0FEE               	addlw	-18
  9266  003772  6ED9               	movwf	fsr2l,c
  9267  003774  50E2               	movf	fsr1h,w,c
  9268  003776  6EDA               	movwf	fsr2h,c
  9269  003778  0EFF               	movlw	255
  9270  00377A  22DA               	addwfc	fsr2h,f,c
  9271  00377C  0EE6               	movlw	-26
  9272  00377E  50E3               	movf	plusw1,w,c
  9273  003780  5EDE               	subwf	postinc2,f,c
  9274  003782  0EE7               	movlw	-25
  9275  003784  50E3               	movf	plusw1,w,c
  9276  003786  5ADE               	subwfb	postinc2,f,c
  9277  003788  0EE8               	movlw	-24
  9278  00378A  50E3               	movf	plusw1,w,c
  9279  00378C  5ADE               	subwfb	postinc2,f,c
  9280  00378E  0EE9               	movlw	-23
  9281  003790  50E3               	movf	plusw1,w,c
  9282  003792  5ADE               	subwfb	postinc2,f,c
  9283  003794  0EEA               	movlw	-22
  9284  003796  50E3               	movf	plusw1,w,c
  9285  003798  5ADE               	subwfb	postinc2,f,c
  9286  00379A  0EEB               	movlw	-21
  9287  00379C  50E3               	movf	plusw1,w,c
  9288  00379E  5ADE               	subwfb	postinc2,f,c
  9289  0037A0  0EEC               	movlw	-20
  9290  0037A2  50E3               	movf	plusw1,w,c
  9291  0037A4  5ADE               	subwfb	postinc2,f,c
  9292  0037A6  0EED               	movlw	-19
  9293  0037A8  50E3               	movf	plusw1,w,c
  9294  0037AA  5ADE               	subwfb	postinc2,f,c
  9295                           
  9296                           ;stkvar	_quotient @ sp[(-10)+0]
  9297  0037AC  0EF6               	movlw	-10
  9298  0037AE  80E3               	bsf	plusw1,0,c
  9299  0037B0                     l4661:
  9300                           
  9301                           ;stkvar	_divisor @ sp[(-10)+-16]
  9302  0037B0  90D8               	bcf	status,0,c
  9303  0037B2  0EED               	movlw	-19
  9304  0037B4  32E3               	rrcf	plusw1,f,c
  9305  0037B6  0EEC               	movlw	-20
  9306  0037B8  32E3               	rrcf	plusw1,f,c
  9307  0037BA  0EEB               	movlw	-21
  9308  0037BC  32E3               	rrcf	plusw1,f,c
  9309  0037BE  0EEA               	movlw	-22
  9310  0037C0  32E3               	rrcf	plusw1,f,c
  9311  0037C2  0EE9               	movlw	-23
  9312  0037C4  32E3               	rrcf	plusw1,f,c
  9313  0037C6  0EE8               	movlw	-24
  9314  0037C8  32E3               	rrcf	plusw1,f,c
  9315  0037CA  0EE7               	movlw	-25
  9316  0037CC  32E3               	rrcf	plusw1,f,c
  9317  0037CE  0EE6               	movlw	-26
  9318  0037D0  32E3               	rrcf	plusw1,f,c
  9319                           
  9320                           ;stkvar	_counter @ sp[(-10)+9]
  9321  0037D2  0EFF               	movlw	-1
  9322  0037D4  50E3               	movf	plusw1,w,c
  9323  0037D6  6E3E               	movwf	btemp,c
  9324  0037D8  0E01               	movlw	1
  9325  0037DA  5E3E               	subwf	btemp,f,c
  9326  0037DC  0EFF               	movlw	-1
  9327  0037DE  0060  F0FB  FFE3   	movff	btemp,plusw1
  9328  0037E4  A4D8               	btfss	status,2,c
  9329  0037E6  D791               	goto	u1910
  9330  0037E8                     u1930:
  9331                           
  9332                           ;stkvar	_sign @ sp[(-10)+8]
  9333  0037E8  0EFE               	movlw	-2
  9334  0037EA  50E3               	movf	plusw1,w,c
  9335  0037EC  B4D8               	btfsc	status,2,c
  9336  0037EE  D025               	goto	u1950
  9337                           
  9338                           ;stkvar	_quotient @ sp[(-10)+0]
  9339                           ;stkvar	_quotient @ sp[(-10)+0]
  9340  0037F0  0EF6               	movlw	-10
  9341  0037F2  6CE3               	negf	plusw1,c
  9342  0037F4  0EF7               	movlw	-9
  9343  0037F6  1EE3               	comf	plusw1,f,c
  9344  0037F8  0EF8               	movlw	-8
  9345  0037FA  1EE3               	comf	plusw1,f,c
  9346  0037FC  0EF9               	movlw	-7
  9347  0037FE  1EE3               	comf	plusw1,f,c
  9348  003800  0EFA               	movlw	-6
  9349  003802  1EE3               	comf	plusw1,f,c
  9350  003804  0EFB               	movlw	-5
  9351  003806  1EE3               	comf	plusw1,f,c
  9352  003808  0EFC               	movlw	-4
  9353  00380A  1EE3               	comf	plusw1,f,c
  9354  00380C  0EFD               	movlw	-3
  9355  00380E  1EE3               	comf	plusw1,f,c
  9356  003810  E314               	bnc	u1950
  9357  003812  0EF7               	movlw	-9
  9358  003814  2AE3               	incf	plusw1,f,c
  9359  003816  E311               	bnc	u1950
  9360  003818  0EF8               	movlw	-8
  9361  00381A  2AE3               	incf	plusw1,f,c
  9362  00381C  E30E               	bnc	u1950
  9363  00381E  0EF9               	movlw	-7
  9364  003820  2AE3               	incf	plusw1,f,c
  9365  003822  E30B               	bnc	u1950
  9366  003824  0EFA               	movlw	-6
  9367  003826  2AE3               	incf	plusw1,f,c
  9368  003828  E308               	bnc	u1950
  9369  00382A  0EFB               	movlw	-5
  9370  00382C  2AE3               	incf	plusw1,f,c
  9371  00382E  E305               	bnc	u1950
  9372  003830  0EFC               	movlw	-4
  9373  003832  2AE3               	incf	plusw1,f,c
  9374  003834  E302               	bnc	u1950
  9375  003836  0EFD               	movlw	-3
  9376  003838  2AE3               	incf	plusw1,f,c
  9377  00383A                     u1950:
  9378                           
  9379                           ;stkvar	_quotient @ sp[(-10)+0]
  9380  00383A  0EF6               	movlw	246
  9381  00383C  24E1               	addwf	fsr1l,w,c
  9382  00383E  6ED9               	movwf	fsr2l,c
  9383  003840  0EFF               	movlw	255
  9384  003842  20E2               	addwfc	fsr1h,w,c
  9385  003844  6EDA               	movwf	fsr2h,c
  9386                           
  9387                           ;stkvar	?___aodiv @ sp[(-10)+-8]
  9388  003846  0E08               	movlw	8
  9389  003848  6E3E               	movwf	btemp,c
  9390  00384A  0EEE               	movlw	-18
  9391  00384C                     us196999:
  9392  00384C  006F FF7B FFE3     	movff	postinc2,plusw1
  9393  003852  28E8               	incf	wreg,w,c
  9394  003854  2E3E               	decfsz	btemp,f,c
  9395  003856  D7FA               	bra	us196999
  9396                           
  9397                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
  9398  003858  0EF6               	movlw	246
  9399  00385A  26E1               	addwf	fsr1l,f,c
  9400  00385C  0EFF               	movlw	255
  9401  00385E  22E2               	addwfc	fsr1h,f,c
  9402  003860  0012               	return		;funcret
  9403  003862                     __end_of___aodiv:
  9404                           	opt callstack 0
  9405                           
  9406 ;; *************** function _ctoa *****************
  9407 ;; Defined at:
  9408 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9409 ;; Parameters:    Size  Location     Type
  9410 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9411 ;;		 -> f(5), NULL(0), 
  9412 ;;  c               1  [STACK] unsigned char 
  9413 ;; Auto vars:     Size  Location     Type
  9414 ;;  w               2  [STACK] int 
  9415 ;;  l               2    0        int 
  9416 ;; Return value:  Size  Location     Type
  9417 ;;                  2  [STACK] int 
  9418 ;; Registers used:
  9419 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9420 ;; Tracked objects:
  9421 ;;		On entry : 0/0
  9422 ;;		On exit  : 0/0
  9423 ;;		Unchanged: 0/0
  9424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9429 ;;Total ram usage:        0 bytes
  9430 ;; Hardware stack levels used:    1
  9431 ;; Hardware stack levels required when called:    8
  9432 ;; This function calls:
  9433 ;;		_pad
  9434 ;; This function is called by:
  9435 ;;		_vfpfcnvrt
  9436 ;; This function uses a reentrant model
  9437 ;;
  9438                           
  9439                           	psect	text40
  9440  004C2E                     __ptext40:
  9441                           	opt callstack 0
  9442  004C2E                     _ctoa:
  9443                           	opt callstack 0
  9444                           
  9445                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9446  004C2E  52E6               	movf	postinc1,f,c
  9447  004C30  52E6               	movf	postinc1,f,c
  9448                           
  9449                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
  9450                           
  9451                           ;incstack = 0
  9452  004C32  5024               	movf	_width,w,c
  9453  004C34  1025               	iorwf	_width+1,w,c
  9454  004C36  A4D8               	btfss	status,2,c
  9455  004C38  D009               	goto	l6341
  9456                           
  9457                           ;stkvar	_w @ sp[(-2)+0]
  9458  004C3A  0EFE               	movlw	-2
  9459  004C3C  0060  F093  FFE3   	movff	_width,plusw1
  9460  004C42  0EFF               	movlw	-1
  9461  004C44  0060  F097  FFE3   	movff	_width+1,plusw1
  9462  004C4A  D016               	goto	l6343
  9463  004C4C                     l6341:
  9464  004C4C  0EFF               	movlw	255
  9465  004C4E  6E48               	movwf	btemp+10,c
  9466  004C50  0EFF               	movlw	255
  9467  004C52  6E49               	movwf	btemp+11,c
  9468  004C54  0060  F090  F046   	movff	_width,btemp+8
  9469  004C5A  0060  F094  F047   	movff	_width+1,btemp+9
  9470  004C60  5048               	movf	btemp+10,w,c
  9471  004C62  2646               	addwf	btemp+8,f,c
  9472  004C64  5049               	movf	btemp+11,w,c
  9473  004C66  2247               	addwfc	btemp+9,f,c
  9474                           
  9475                           ;stkvar	_w @ sp[(-2)+0]
  9476  004C68  0EFE               	movlw	-2
  9477  004C6A  0060  F11B  FFE3   	movff	btemp+8,plusw1
  9478  004C70  0EFF               	movlw	-1
  9479  004C72  0060  F11F  FFE3   	movff	btemp+9,plusw1
  9480  004C78                     l6343:
  9481                           
  9482                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
  9483                           ;stkvar	_c @ sp[(-2)+-3]
  9484  004C78  0EFB               	movlw	-5
  9485  004C7A  006F FF8C  F1D2    	movff	plusw1,_dbuf
  9486                           
  9487                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
  9488  004C80  0101               	movlb	1	; () banked
  9489  004C82  6BD3               	clrf	(_dbuf+1)& (0+255),b
  9490                           
  9491                           ; BSR set to: 1
  9492                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
  9493                           ;stkvar	_w @ sp[(-2)+0]
  9494  004C84  0EFE               	movlw	-2
  9495  004C86  006F FF8F FFE6     	movff	plusw1,postinc1
  9496  004C8C  006F FF8F FFE6     	movff	plusw1,postinc1
  9497  004C92  0ED2               	movlw	low _dbuf
  9498  004C94  6EE6               	movwf	postinc1,c
  9499  004C96  0E01               	movlw	high _dbuf
  9500  004C98  6EE6               	movwf	postinc1,c
  9501                           
  9502                           ;stkvar	_fp @ sp[(-6)+-2]
  9503  004C9A  0EF8               	movlw	-8
  9504  004C9C  006F FF8F FFE6     	movff	plusw1,postinc1
  9505  004CA2  006F FF8F FFE6     	movff	plusw1,postinc1
  9506  004CA8  ECF5  F020         	call	_pad	;wreg free
  9507                           
  9508                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
  9509  004CAC  0EFB               	movlw	251
  9510  004CAE  26E1               	addwf	fsr1l,f,c
  9511  004CB0  0EFF               	movlw	255
  9512  004CB2  22E2               	addwfc	fsr1h,f,c
  9513  004CB4  0012               	return		;funcret
  9514  004CB6                     __end_of_ctoa:
  9515                           	opt callstack 0
  9516                           
  9517 ;; *************** function _pad *****************
  9518 ;; Defined at:
  9519 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9520 ;; Parameters:    Size  Location     Type
  9521 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9522 ;;		 -> f(5), NULL(0), 
  9523 ;;  buf             2  [STACK] PTR unsigned char 
  9524 ;;		 -> dbuf(32), 
  9525 ;;  p               2  [STACK] int 
  9526 ;; Auto vars:     Size  Location     Type
  9527 ;;  w               2  [STACK] int 
  9528 ;;  i               2  [STACK] int 
  9529 ;; Return value:  Size  Location     Type
  9530 ;;                  2  [STACK] int 
  9531 ;; Registers used:
  9532 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9533 ;; Tracked objects:
  9534 ;;		On entry : 0/1
  9535 ;;		On exit  : 0/0
  9536 ;;		Unchanged: 0/0
  9537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9542 ;;Total ram usage:        0 bytes
  9543 ;; Hardware stack levels used:    1
  9544 ;; Hardware stack levels required when called:    7
  9545 ;; This function calls:
  9546 ;;		_fputc
  9547 ;;		_fputs
  9548 ;;		_strlen
  9549 ;; This function is called by:
  9550 ;;		_ctoa
  9551 ;;		_dtoa
  9552 ;; This function uses a reentrant model
  9553 ;;
  9554                           
  9555                           	psect	text41
  9556  0041EA                     __ptext41:
  9557                           	opt callstack 0
  9558  0041EA                     _pad:
  9559                           	opt callstack 0
  9560                           
  9561                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9562  0041EA  52E6               	movf	postinc1,f,c
  9563  0041EC  52E6               	movf	postinc1,f,c
  9564  0041EE  52E6               	movf	postinc1,f,c
  9565  0041F0  52E6               	movf	postinc1,f,c
  9566                           
  9567                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  9568                           
  9569                           ;incstack = 0
  9570  0041F2  A028               	btfss	_flags,0,c
  9571  0041F4  D010               	goto	l6319
  9572                           
  9573                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  9574                           ;stkvar	_fp @ sp[(-4)+-2]
  9575  0041F6  0EFA               	movlw	-6
  9576  0041F8  006F FF8F FFE6     	movff	plusw1,postinc1
  9577  0041FE  006F FF8F FFE6     	movff	plusw1,postinc1
  9578                           
  9579                           ;stkvar	_buf @ sp[(-6)+-4]
  9580  004204  0EF6               	movlw	-10
  9581  004206  006F FF8F FFE6     	movff	plusw1,postinc1
  9582  00420C  006F FF8F FFE6     	movff	plusw1,postinc1
  9583  004212  ECEF  F024         	call	_fputs	;wreg free
  9584  004216                     l6319:
  9585                           
  9586                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  9587                           ;stkvar	_p @ sp[(-4)+-6]
  9588  004216  0EF7               	movlw	-9
  9589  004218  BEE3               	btfsc	plusw1,7,c
  9590  00421A  D011               	goto	l6323
  9591                           
  9592                           ;stkvar	_p @ sp[(-4)+-6]
  9593                           ;stkvar	_w @ sp[(-4)+0]
  9594  00421C  0EF6               	movlw	-10
  9595  00421E  006F FF8C  F03E    	movff	plusw1,btemp
  9596  004224  0EFC               	movlw	-4
  9597  004226  0060  F0FB  FFE3   	movff	btemp,plusw1
  9598  00422C  0EF7               	movlw	-9
  9599  00422E  006F FF8C  F03E    	movff	plusw1,btemp
  9600  004234  0EFD               	movlw	-3
  9601  004236  0060  F0FB  FFE3   	movff	btemp,plusw1
  9602  00423C  D004               	goto	l1655
  9603  00423E                     l6323:
  9604                           
  9605                           ;stkvar	_w @ sp[(-4)+0]
  9606  00423E  0EFC               	movlw	-4
  9607  004240  6AE3               	clrf	plusw1,c
  9608  004242  0EFD               	movlw	-3
  9609  004244  6AE3               	clrf	plusw1,c
  9610  004246                     l1655:
  9611                           
  9612                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  9613                           ;stkvar	_i @ sp[(-4)+2]
  9614  004246  0EFE               	movlw	-2
  9615  004248  6AE3               	clrf	plusw1,c
  9616  00424A  0EFF               	movlw	-1
  9617  00424C  6AE3               	clrf	plusw1,c
  9618                           
  9619                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  9620  00424E  D01E               	goto	l6329
  9621  004250                     l6325:
  9622                           
  9623                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  9624                           ;stkvar	_fp @ sp[(-4)+-2]
  9625  004250  0EFA               	movlw	-6
  9626  004252  006F FF8F FFE6     	movff	plusw1,postinc1
  9627  004258  006F FF8F FFE6     	movff	plusw1,postinc1
  9628  00425E  0E20               	movlw	32
  9629  004260  6EE6               	movwf	postinc1,c
  9630  004262  0E00               	movlw	0
  9631  004264  6EE6               	movwf	postinc1,c
  9632  004266  EC7F  F021         	call	_fputc	;wreg free
  9633                           
  9634                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  9635                           ;stkvar	_i @ sp[(-4)+2]
  9636  00426A  0EFE               	movlw	-2
  9637  00426C  50E3               	movf	plusw1,w,c
  9638  00426E  0F01               	addlw	1
  9639  004270  6E3E               	movwf	btemp,c
  9640  004272  0EFE               	movlw	-2
  9641  004274  0060  F0FB  FFE3   	movff	btemp,plusw1
  9642  00427A  6A3E               	clrf	btemp,c
  9643  00427C  0EFF               	movlw	-1
  9644  00427E  50E3               	movf	plusw1,w,c
  9645  004280  203E               	addwfc	btemp,w,c
  9646  004282  6E3E               	movwf	btemp,c
  9647  004284  0EFF               	movlw	-1
  9648  004286  0060  F0FB  FFE3   	movff	btemp,plusw1
  9649  00428C                     l6329:
  9650                           
  9651                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  9652                           ;stkvar	_w @ sp[(-4)+0]
  9653                           ;stkvar	_i @ sp[(-4)+2]
  9654  00428C  50E1               	movf	fsr1l,w,c
  9655  00428E  0FFE               	addlw	-2
  9656  004290  6ED9               	movwf	fsr2l,c
  9657  004292  50E2               	movf	fsr1h,w,c
  9658  004294  6EDA               	movwf	fsr2h,c
  9659  004296  0EFF               	movlw	255
  9660  004298  22DA               	addwfc	fsr2h,f,c
  9661  00429A  0EFC               	movlw	-4
  9662  00429C  50E3               	movf	plusw1,w,c
  9663  00429E  5CDE               	subwf	postinc2,w,c
  9664  0042A0  50DE               	movf	postinc2,w,c
  9665  0042A2  0A80               	xorlw	128
  9666  0042A4  6E3E               	movwf	btemp,c
  9667  0042A6  0EFD               	movlw	-3
  9668  0042A8  50E3               	movf	plusw1,w,c
  9669  0042AA  0A80               	xorlw	128
  9670  0042AC  583E               	subwfb	btemp,w,c
  9671  0042AE  A0D8               	btfss	status,0,c
  9672  0042B0  D7CF               	goto	l6325
  9673                           
  9674                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  9675  0042B2  B028               	btfsc	_flags,0,c
  9676  0042B4  D010               	goto	l6333
  9677                           
  9678                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  9679                           ;stkvar	_fp @ sp[(-4)+-2]
  9680  0042B6  0EFA               	movlw	-6
  9681  0042B8  006F FF8F FFE6     	movff	plusw1,postinc1
  9682  0042BE  006F FF8F FFE6     	movff	plusw1,postinc1
  9683                           
  9684                           ;stkvar	_buf @ sp[(-6)+-4]
  9685  0042C4  0EF6               	movlw	-10
  9686  0042C6  006F FF8F FFE6     	movff	plusw1,postinc1
  9687  0042CC  006F FF8F FFE6     	movff	plusw1,postinc1
  9688  0042D2  ECEF  F024         	call	_fputs	;wreg free
  9689  0042D6                     l6333:
  9690                           
  9691                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  9692                           ;stkvar	_w @ sp[(-4)+0]
  9693                           ;stkvar	_buf @ sp[(-4)+-4]
  9694  0042D6  0EF8               	movlw	-8
  9695  0042D8  006F FF8F FFE6     	movff	plusw1,postinc1
  9696  0042DE  006F FF8F FFE6     	movff	plusw1,postinc1
  9697  0042E4  EC00  F024         	call	_strlen	;wreg free
  9698  0042E8  0EFC               	movlw	-4
  9699  0042EA  50E3               	movf	plusw1,w,c
  9700  0042EC  263E               	addwf	btemp,f,c
  9701  0042EE  0EFD               	movlw	-3
  9702  0042F0  50E3               	movf	plusw1,w,c
  9703  0042F2  223F               	addwfc	btemp+1,f,c
  9704                           
  9705                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
  9706  0042F4  0EF6               	movlw	246
  9707  0042F6  26E1               	addwf	fsr1l,f,c
  9708  0042F8  0EFF               	movlw	255
  9709  0042FA  22E2               	addwfc	fsr1h,f,c
  9710  0042FC  0012               	return		;funcret
  9711  0042FE                     __end_of_pad:
  9712                           	opt callstack 0
  9713                           
  9714 ;; *************** function _strlen *****************
  9715 ;; Defined at:
  9716 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  9717 ;; Parameters:    Size  Location     Type
  9718 ;;  s               2  [STACK] PTR const unsigned char 
  9719 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
  9720 ;;		 -> STR_3(5), V(85), 
  9721 ;; Auto vars:     Size  Location     Type
  9722 ;;  a               2  [STACK] PTR const unsigned char 
  9723 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
  9724 ;;		 -> STR_3(5), V(85), 
  9725 ;; Return value:  Size  Location     Type
  9726 ;;                  2  [STACK] unsigned int 
  9727 ;; Registers used:
  9728 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
  9729 ;; Tracked objects:
  9730 ;;		On entry : 0/0
  9731 ;;		On exit  : 0/0
  9732 ;;		Unchanged: 0/0
  9733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9738 ;;Total ram usage:        0 bytes
  9739 ;; Hardware stack levels used:    1
  9740 ;; Hardware stack levels required when called:    3
  9741 ;; This function calls:
  9742 ;;		Nothing
  9743 ;; This function is called by:
  9744 ;;		_eaDogM_WriteString
  9745 ;;		_pad
  9746 ;;		_stoa
  9747 ;; This function uses a reentrant model
  9748 ;;
  9749                           
  9750                           	psect	text42
  9751  004800                     __ptext42:
  9752                           	opt callstack 0
  9753  004800                     _strlen:
  9754                           	opt callstack 0
  9755                           
  9756                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9757  004800  52E6               	movf	postinc1,f,c
  9758  004802  52E6               	movf	postinc1,f,c
  9759                           
  9760                           ;stkvar	_s @ sp[(-2)+-2]
  9761                           
  9762                           ;incstack = 0
  9763  004804  0EFC               	movlw	-4
  9764  004806  006F FF8C  F048    	movff	plusw1,btemp+10
  9765  00480C  0EFD               	movlw	-3
  9766  00480E  006F FF8C  F049    	movff	plusw1,btemp+11
  9767                           
  9768                           ;stkvar	_a @ sp[(-2)+0]
  9769  004814  0EFF               	movlw	-1
  9770  004816  0060  F127  FFE3   	movff	btemp+11,plusw1
  9771  00481C  0EFE               	movlw	-2
  9772  00481E  0060  F123  FFE3   	movff	btemp+10,plusw1
  9773  004824  D011               	goto	l4585
  9774  004826                     l4583:
  9775                           
  9776                           ;stkvar	_s @ sp[(-2)+-2]
  9777  004826  0EFC               	movlw	-4
  9778  004828  50E3               	movf	plusw1,w,c
  9779  00482A  0F01               	addlw	1
  9780  00482C  6E3E               	movwf	btemp,c
  9781  00482E  0EFC               	movlw	-4
  9782  004830  0060  F0FB  FFE3   	movff	btemp,plusw1
  9783  004836  6A3E               	clrf	btemp,c
  9784  004838  0EFD               	movlw	-3
  9785  00483A  50E3               	movf	plusw1,w,c
  9786  00483C  203E               	addwfc	btemp,w,c
  9787  00483E  6E3E               	movwf	btemp,c
  9788  004840  0EFD               	movlw	-3
  9789  004842  0060  F0FB  FFE3   	movff	btemp,plusw1
  9790  004848                     l4585:
  9791                           
  9792                           ;stkvar	_s @ sp[(-2)+-2]
  9793  004848  0EFC               	movlw	-4
  9794  00484A  006F FF8F FFF6     	movff	plusw1,tblptrl
  9795  004850  0EFD               	movlw	-3
  9796  004852  006F FF8F FFF7     	movff	plusw1,tblptrh
  9797  004858  0E00               	movlw	low (__smallconst shr (0+16))
  9798  00485A  6EF8               	movwf	tblptru,c
  9799  00485C  0E1F               	movlw	(high __ramtop+-1)
  9800  00485E  64F7               	cpfsgt	tblptrh,c
  9801  004860  D003               	bra	u1777
  9802  004862  0008               	tblrd		*
  9803  004864  50F5               	movf	tablat,w,c
  9804  004866  D007               	bra	u1770
  9805  004868                     u1777:
  9806  004868  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9807  00486E  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9808  004874  50EF               	movf	indf0,w,c
  9809  004876                     u1770:
  9810  004876  0900               	iorlw	0
  9811  004878  A4D8               	btfss	status,2,c
  9812  00487A  D7D5               	goto	l4583
  9813                           
  9814                           ;stkvar	_a @ sp[(-2)+0]
  9815                           ;stkvar	_s @ sp[(-2)+-2]
  9816  00487C  0EFC               	movlw	-4
  9817  00487E  006F FF8C  F03E    	movff	plusw1,btemp
  9818  004884  0EFD               	movlw	-3
  9819  004886  006F FF8C  F03F    	movff	plusw1,btemp+1
  9820  00488C  0EFE               	movlw	-2
  9821  00488E  50E3               	movf	plusw1,w,c
  9822  004890  5E3E               	subwf	btemp,f,c
  9823  004892  0EFF               	movlw	-1
  9824  004894  50E3               	movf	plusw1,w,c
  9825  004896  5A3F               	subwfb	btemp+1,f,c
  9826                           
  9827                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  9828  004898  52E5               	movf	postdec1,f,c
  9829  00489A  52E5               	movf	postdec1,f,c
  9830  00489C  52E5               	movf	postdec1,f,c
  9831  00489E  52E5               	movf	postdec1,f,c
  9832  0048A0  0012               	return		;funcret
  9833  0048A2                     __end_of_strlen:
  9834                           	opt callstack 0
  9835                           
  9836 ;; *************** function _fputs *****************
  9837 ;; Defined at:
  9838 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  9839 ;; Parameters:    Size  Location     Type
  9840 ;;  s               2  [STACK] PTR const unsigned char 
  9841 ;;		 -> dbuf(32), 
  9842 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9843 ;;		 -> f(5), NULL(0), 
  9844 ;; Auto vars:     Size  Location     Type
  9845 ;;  i               2  [STACK] int 
  9846 ;;  c               1  [STACK] unsigned char 
  9847 ;; Return value:  Size  Location     Type
  9848 ;;                  2  [STACK] int 
  9849 ;; Registers used:
  9850 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
  9851 ;; Tracked objects:
  9852 ;;		On entry : 0/1
  9853 ;;		On exit  : 0/0
  9854 ;;		Unchanged: 0/0
  9855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9860 ;;Total ram usage:        0 bytes
  9861 ;; Hardware stack levels used:    1
  9862 ;; Hardware stack levels required when called:    6
  9863 ;; This function calls:
  9864 ;;		_fputc
  9865 ;; This function is called by:
  9866 ;;		_pad
  9867 ;; This function uses a reentrant model
  9868 ;;
  9869                           
  9870                           	psect	text43
  9871  0049DE                     __ptext43:
  9872                           	opt callstack 0
  9873  0049DE                     _fputs:
  9874                           	opt callstack 0
  9875                           
  9876                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9877  0049DE  52E6               	movf	postinc1,f,c
  9878  0049E0  52E6               	movf	postinc1,f,c
  9879  0049E2  52E6               	movf	postinc1,f,c
  9880                           
  9881                           ;stkvar	_i @ sp[(-3)+0]
  9882                           
  9883                           ;incstack = 0
  9884  0049E4  0EFD               	movlw	-3
  9885  0049E6  6AE3               	clrf	plusw1,c
  9886  0049E8  0EFE               	movlw	-2
  9887  0049EA  6AE3               	clrf	plusw1,c
  9888  0049EC  D01F               	goto	l6313
  9889  0049EE                     l6309:
  9890                           
  9891                           ;stkvar	_fp @ sp[(-3)+-4]
  9892  0049EE  0EF9               	movlw	-7
  9893  0049F0  006F FF8F FFE6     	movff	plusw1,postinc1
  9894  0049F6  006F FF8F FFE6     	movff	plusw1,postinc1
  9895                           
  9896                           ;stkvar	_c @ sp[(-5)+2]
  9897  0049FC  0EFD               	movlw	-3
  9898  0049FE  50E3               	movf	plusw1,w,c
  9899  004A00  6EE6               	movwf	postinc1,c
  9900  004A02  0E00               	movlw	0
  9901  004A04  6EE6               	movwf	postinc1,c
  9902  004A06  EC7F  F021         	call	_fputc	;wreg free
  9903                           
  9904                           ;stkvar	_i @ sp[(-3)+0]
  9905  004A0A  0EFD               	movlw	-3
  9906  004A0C  50E3               	movf	plusw1,w,c
  9907  004A0E  0F01               	addlw	1
  9908  004A10  6E3E               	movwf	btemp,c
  9909  004A12  0EFD               	movlw	-3
  9910  004A14  0060  F0FB  FFE3   	movff	btemp,plusw1
  9911  004A1A  6A3E               	clrf	btemp,c
  9912  004A1C  0EFE               	movlw	-2
  9913  004A1E  50E3               	movf	plusw1,w,c
  9914  004A20  203E               	addwfc	btemp,w,c
  9915  004A22  6E3E               	movwf	btemp,c
  9916  004A24  0EFE               	movlw	-2
  9917  004A26  0060  F0FB  FFE3   	movff	btemp,plusw1
  9918  004A2C                     l6313:
  9919                           
  9920                           ;stkvar	_i @ sp[(-3)+0]
  9921  004A2C  0EFD               	movlw	-3
  9922  004A2E  006F FF8C  F048    	movff	plusw1,btemp+10
  9923  004A34  0EFE               	movlw	-2
  9924  004A36  006F FF8C  F049    	movff	plusw1,btemp+11
  9925                           
  9926                           ;stkvar	_s @ sp[(-3)+-2]
  9927  004A3C  0EFB               	movlw	-5
  9928  004A3E  006F FF8C  F046    	movff	plusw1,btemp+8
  9929  004A44  0EFC               	movlw	-4
  9930  004A46  006F FF8C  F047    	movff	plusw1,btemp+9
  9931  004A4C  5048               	movf	btemp+10,w,c
  9932  004A4E  2446               	addwf	btemp+8,w,c
  9933  004A50  6ED9               	movwf	fsr2l,c
  9934  004A52  5049               	movf	btemp+11,w,c
  9935  004A54  2047               	addwfc	btemp+9,w,c
  9936  004A56  6EDA               	movwf	fsr2h,c
  9937  004A58  50DF               	movf	indf2,w,c
  9938  004A5A  6E49               	movwf	btemp+11,c
  9939                           
  9940                           ;stkvar	_c @ sp[(-3)+2]
  9941  004A5C  0EFF               	movlw	-1
  9942  004A5E  0060  F127  FFE3   	movff	btemp+11,plusw1
  9943  004A64  0EFF               	movlw	-1
  9944  004A66  50E3               	movf	plusw1,w,c
  9945  004A68  A4D8               	btfss	status,2,c
  9946  004A6A  D7C1               	goto	l6309
  9947                           
  9948                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
  9949  004A6C  0EF9               	movlw	249
  9950  004A6E  26E1               	addwf	fsr1l,f,c
  9951  004A70  0EFF               	movlw	255
  9952  004A72  22E2               	addwfc	fsr1h,f,c
  9953  004A74  0012               	return		;funcret
  9954  004A76                     __end_of_fputs:
  9955                           	opt callstack 0
  9956                           
  9957 ;; *************** function _fputc *****************
  9958 ;; Defined at:
  9959 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  9960 ;; Parameters:    Size  Location     Type
  9961 ;;  c               2  [STACK] int 
  9962 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9963 ;;		 -> f(5), NULL(0), 
  9964 ;; Auto vars:     Size  Location     Type
  9965 ;;		None
  9966 ;; Return value:  Size  Location     Type
  9967 ;;                  2  [STACK] int 
  9968 ;; Registers used:
  9969 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
  9970 ;; Tracked objects:
  9971 ;;		On entry : 0/0
  9972 ;;		On exit  : 0/0
  9973 ;;		Unchanged: 0/0
  9974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9979 ;;Total ram usage:        0 bytes
  9980 ;; Hardware stack levels used:    1
  9981 ;; Hardware stack levels required when called:    5
  9982 ;; This function calls:
  9983 ;;		_putch
  9984 ;; This function is called by:
  9985 ;;		_pad
  9986 ;;		_stoa
  9987 ;;		_vfpfcnvrt
  9988 ;;		_fputs
  9989 ;; This function uses a reentrant model
  9990 ;;
  9991                           
  9992                           	psect	text44
  9993  0042FE                     __ptext44:
  9994                           	opt callstack 0
  9995  0042FE                     _fputc:
  9996                           	opt callstack 21
  9997                           
  9998                           ;stkvar	_fp @ sp[(0)+-4]
  9999                           
 10000                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10001                           ;incstack = 0
 10002  0042FE  0EFC               	movlw	-4
 10003  004300  006F FF8C  F03E    	movff	plusw1,btemp
 10004  004306  0EFD               	movlw	-3
 10005  004308  50E3               	movf	plusw1,w,c
 10006  00430A  103E               	iorwf	btemp,w,c
 10007  00430C  B4D8               	btfsc	status,2,c
 10008  00430E  D009               	goto	u3280
 10009                           
 10010                           ;stkvar	_fp @ sp[(0)+-4]
 10011  004310  0EFC               	movlw	-4
 10012  004312  006F FF8C  F03E    	movff	plusw1,btemp
 10013  004318  0EFD               	movlw	-3
 10014  00431A  50E3               	movf	plusw1,w,c
 10015  00431C  103E               	iorwf	btemp,w,c
 10016  00431E  A4D8               	btfss	status,2,c
 10017  004320  D006               	goto	l6299
 10018  004322                     u3280:
 10019                           
 10020                           ;stkvar	_c @ sp[(0)+-2]
 10021  004322  0EFE               	movlw	-2
 10022  004324  50E3               	movf	plusw1,w,c
 10023  004326  6EE6               	movwf	postinc1,c
 10024  004328  EC21  F02C         	call	_putch	;wreg free
 10025  00432C  D069               	goto	l2438
 10026  00432E                     l6299:
 10027                           
 10028                           ;stkvar	_fp @ sp[(0)+-4]
 10029  00432E  0EFC               	movlw	-4
 10030  004330  006F FF8C  F048    	movff	plusw1,btemp+10
 10031  004336  0EFD               	movlw	-3
 10032  004338  006F FF8C  F049    	movff	plusw1,btemp+11
 10033  00433E  0E03               	movlw	3
 10034  004340  2448               	addwf	btemp+10,w,c
 10035  004342  6ED9               	movwf	fsr2l,c
 10036  004344  0E00               	movlw	0
 10037  004346  2049               	addwfc	btemp+11,w,c
 10038  004348  6EDA               	movwf	fsr2h,c
 10039  00434A  50DE               	movf	postinc2,w,c
 10040  00434C  10DE               	iorwf	postinc2,w,c
 10041  00434E  B4D8               	btfsc	status,2,c
 10042  004350  D026               	goto	u3300
 10043                           
 10044                           ;stkvar	_fp @ sp[(0)+-4]
 10045  004352  0EFC               	movlw	-4
 10046  004354  006F FF8C  F048    	movff	plusw1,btemp+10
 10047  00435A  0EFD               	movlw	-3
 10048  00435C  006F FF8C  F049    	movff	plusw1,btemp+11
 10049  004362  0E03               	movlw	3
 10050  004364  2448               	addwf	btemp+10,w,c
 10051  004366  6ED9               	movwf	fsr2l,c
 10052  004368  0E00               	movlw	0
 10053  00436A  2049               	addwfc	btemp+11,w,c
 10054  00436C  6EDA               	movwf	fsr2h,c
 10055                           
 10056                           ;stkvar	_fp @ sp[(0)+-4]
 10057  00436E  0EFC               	movlw	-4
 10058  004370  006F FF8C  F048    	movff	plusw1,btemp+10
 10059  004376  0EFD               	movlw	-3
 10060  004378  006F FF8C  F049    	movff	plusw1,btemp+11
 10061  00437E  0E01               	movlw	1
 10062  004380  2448               	addwf	btemp+10,w,c
 10063  004382  6EE9               	movwf	fsr0l,c
 10064  004384  0E00               	movlw	0
 10065  004386  2049               	addwfc	btemp+11,w,c
 10066  004388  6EEA               	movwf	fsr0h,c
 10067  00438A  50DE               	movf	postinc2,w,c
 10068  00438C  5CEE               	subwf	postinc0,w,c
 10069  00438E  50EE               	movf	postinc0,w,c
 10070  004390  0A80               	xorlw	128
 10071  004392  6E3E               	movwf	btemp,c
 10072  004394  50DE               	movf	postinc2,w,c
 10073  004396  0A80               	xorlw	128
 10074  004398  583E               	subwfb	btemp,w,c
 10075  00439A  B0D8               	btfsc	status,0,c
 10076  00439C  D031               	goto	l2438
 10077  00439E                     u3300:
 10078                           
 10079                           ;stkvar	_c @ sp[(0)+-2]
 10080                           ;stkvar	_fp @ sp[(0)+-4]
 10081  00439E  0EFC               	movlw	-4
 10082  0043A0  006F FF8C  F048    	movff	plusw1,btemp+10
 10083  0043A6  0EFD               	movlw	-3
 10084  0043A8  006F FF8C  F049    	movff	plusw1,btemp+11
 10085  0043AE  0E01               	movlw	1
 10086  0043B0  2448               	addwf	btemp+10,w,c
 10087  0043B2  6ED9               	movwf	fsr2l,c
 10088  0043B4  0E00               	movlw	0
 10089  0043B6  2049               	addwfc	btemp+11,w,c
 10090  0043B8  6EDA               	movwf	fsr2h,c
 10091  0043BA  50DF               	movf	indf2,w,c
 10092  0043BC  6E49               	movwf	btemp+11,c
 10093                           
 10094                           ;stkvar	_fp @ sp[(0)+-4]
 10095  0043BE  0EFC               	movlw	-4
 10096  0043C0  006F FF8F FFD9     	movff	plusw1,fsr2l
 10097  0043C6  0EFD               	movlw	-3
 10098  0043C8  006F FF8F FFDA     	movff	plusw1,fsr2h
 10099  0043CE  50DF               	movf	indf2,w,c
 10100  0043D0  2449               	addwf	btemp+11,w,c
 10101  0043D2  6ED9               	movwf	fsr2l,c
 10102  0043D4  6ADA               	clrf	fsr2h,c
 10103  0043D6  0EFE               	movlw	-2
 10104  0043D8  006F FF8F FFDF     	movff	plusw1,indf2
 10105                           
 10106                           ;stkvar	_fp @ sp[(0)+-4]
 10107  0043DE  0EFC               	movlw	-4
 10108  0043E0  006F FF8C  F048    	movff	plusw1,btemp+10
 10109  0043E6  0EFD               	movlw	-3
 10110  0043E8  006F FF8C  F049    	movff	plusw1,btemp+11
 10111  0043EE  0E01               	movlw	1
 10112  0043F0  2448               	addwf	btemp+10,w,c
 10113  0043F2  6ED9               	movwf	fsr2l,c
 10114  0043F4  0E00               	movlw	0
 10115  0043F6  2049               	addwfc	btemp+11,w,c
 10116  0043F8  6EDA               	movwf	fsr2h,c
 10117  0043FA  2ADE               	incf	postinc2,f,c
 10118  0043FC  0E00               	movlw	0
 10119  0043FE  22DD               	addwfc	postdec2,f,c
 10120  004400                     l2438:
 10121                           
 10122                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 10123  004400  52E5               	movf	postdec1,f,c
 10124  004402  52E5               	movf	postdec1,f,c
 10125  004404  52E5               	movf	postdec1,f,c
 10126  004406  52E5               	movf	postdec1,f,c
 10127  004408  0012               	return		;funcret
 10128  00440A                     __end_of_fputc:
 10129                           	opt callstack 0
 10130                           
 10131 ;; *************** function _putch *****************
 10132 ;; Defined at:
 10133 ;;		line 138 in file "eadog.c"
 10134 ;; Parameters:    Size  Location     Type
 10135 ;;  c               1  [STACK] unsigned char 
 10136 ;; Auto vars:     Size  Location     Type
 10137 ;;		None
 10138 ;; Return value:  Size  Location     Type
 10139 ;;                  1  [STACK] void 
 10140 ;; Registers used:
 10141 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 10142 ;; Tracked objects:
 10143 ;;		On entry : 0/0
 10144 ;;		On exit  : 0/0
 10145 ;;		Unchanged: 0/0
 10146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10151 ;;Total ram usage:        0 bytes
 10152 ;; Hardware stack levels used:    1
 10153 ;; Hardware stack levels required when called:    4
 10154 ;; This function calls:
 10155 ;;		_ringBufS_put_dma
 10156 ;; This function is called by:
 10157 ;;		_fputc
 10158 ;; This function uses a reentrant model
 10159 ;;
 10160                           
 10161                           	psect	text45
 10162  005842                     __ptext45:
 10163                           	opt callstack 0
 10164  005842                     _putch:
 10165                           	opt callstack 21
 10166                           
 10167                           ;eadog.c: 138: void putch(char c);eadog.c: 139: {;eadog.c: 140:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 10168                           ;stkvar	_c @ sp[(0)+-1]
 10169                           
 10170                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10171                           ;incstack = 0
 10172  005842  0EFF               	movlw	-1
 10173  005844  50E3               	movf	plusw1,w,c
 10174  005846  6EE6               	movwf	postinc1,c
 10175  005848  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
 10176  00584E  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
 10177  005854  ECAB  F023         	call	_ringBufS_put_dma	;wreg free
 10178                           
 10179                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 10180  005858  52E5               	movf	postdec1,f,c
 10181  00585A  0012               	return		;funcret
 10182  00585C                     __end_of_putch:
 10183                           	opt callstack 0
 10184                           
 10185 ;; *************** function _ringBufS_put_dma *****************
 10186 ;; Defined at:
 10187 ;;		line 67 in file "ringbufs.c"
 10188 ;; Parameters:    Size  Location     Type
 10189 ;;  _this           2  [STACK] PTR struct ringBufS_t
 10190 ;;		 -> ring_buf1(67), 
 10191 ;;  c               1  [STACK] const unsigned char 
 10192 ;; Auto vars:     Size  Location     Type
 10193 ;;		None
 10194 ;; Return value:  Size  Location     Type
 10195 ;;                  1  [STACK] void 
 10196 ;; Registers used:
 10197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 10198 ;; Tracked objects:
 10199 ;;		On entry : 0/0
 10200 ;;		On exit  : 0/0
 10201 ;;		Unchanged: 0/0
 10202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10207 ;;Total ram usage:        0 bytes
 10208 ;; Hardware stack levels used:    1
 10209 ;; Hardware stack levels required when called:    3
 10210 ;; This function calls:
 10211 ;;		Nothing
 10212 ;; This function is called by:
 10213 ;;		_putch
 10214 ;; This function uses a reentrant model
 10215 ;;
 10216                           
 10217                           	psect	text46
 10218  004756                     __ptext46:
 10219                           	opt callstack 0
 10220  004756                     _ringBufS_put_dma:
 10221                           	opt callstack 21
 10222                           
 10223                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 10224                           ;stkvar	__this @ sp[(0)+-2]
 10225                           
 10226                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10227                           ;incstack = 0
 10228  004756  0EFE               	movlw	-2
 10229  004758  006F FF8C  F048    	movff	plusw1,btemp+10
 10230  00475E  0EFF               	movlw	-1
 10231  004760  006F FF8C  F049    	movff	plusw1,btemp+11
 10232  004766  0E42               	movlw	66
 10233  004768  2448               	addwf	btemp+10,w,c
 10234  00476A  6ED9               	movwf	fsr2l,c
 10235  00476C  0E00               	movlw	0
 10236  00476E  2049               	addwfc	btemp+11,w,c
 10237  004770  6EDA               	movwf	fsr2h,c
 10238  004772  0E40               	movlw	64
 10239  004774  60DF               	cpfslt	indf2,c
 10240  004776  D040               	goto	l1437
 10241                           
 10242                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 10243                           ;stkvar	_c @ sp[(0)+-3]
 10244                           ;stkvar	__this @ sp[(0)+-2]
 10245  004778  0EFE               	movlw	-2
 10246  00477A  006F FF8C  F048    	movff	plusw1,btemp+10
 10247  004780  0EFF               	movlw	-1
 10248  004782  006F FF8C  F049    	movff	plusw1,btemp+11
 10249  004788  0E40               	movlw	64
 10250  00478A  2448               	addwf	btemp+10,w,c
 10251  00478C  6ED9               	movwf	fsr2l,c
 10252  00478E  0E00               	movlw	0
 10253  004790  2049               	addwfc	btemp+11,w,c
 10254  004792  6EDA               	movwf	fsr2h,c
 10255  004794  50DF               	movf	indf2,w,c
 10256  004796  6E49               	movwf	btemp+11,c
 10257                           
 10258                           ;stkvar	__this @ sp[(0)+-2]
 10259  004798  0EFE               	movlw	-2
 10260  00479A  006F FF8C  F046    	movff	plusw1,btemp+8
 10261  0047A0  0EFF               	movlw	-1
 10262  0047A2  006F FF8C  F047    	movff	plusw1,btemp+9
 10263  0047A8  5049               	movf	btemp+11,w,c
 10264  0047AA  2446               	addwf	btemp+8,w,c
 10265  0047AC  6ED9               	movwf	fsr2l,c
 10266  0047AE  0E00               	movlw	0
 10267  0047B0  2047               	addwfc	btemp+9,w,c
 10268  0047B2  6EDA               	movwf	fsr2h,c
 10269  0047B4  0EFD               	movlw	-3
 10270  0047B6  006F FF8F FFDF     	movff	plusw1,indf2
 10271                           
 10272                           ;ringbufs.c: 71:   ++_this->head;
 10273                           ;stkvar	__this @ sp[(0)+-2]
 10274  0047BC  0EFE               	movlw	-2
 10275  0047BE  006F FF8C  F048    	movff	plusw1,btemp+10
 10276  0047C4  0EFF               	movlw	-1
 10277  0047C6  006F FF8C  F049    	movff	plusw1,btemp+11
 10278  0047CC  0E40               	movlw	64
 10279  0047CE  2448               	addwf	btemp+10,w,c
 10280  0047D0  6ED9               	movwf	fsr2l,c
 10281  0047D2  0E00               	movlw	0
 10282  0047D4  2049               	addwfc	btemp+11,w,c
 10283  0047D6  6EDA               	movwf	fsr2h,c
 10284  0047D8  2ADF               	incf	indf2,f,c
 10285                           
 10286                           ;ringbufs.c: 72:   ++_this->count;
 10287                           ;stkvar	__this @ sp[(0)+-2]
 10288  0047DA  0EFE               	movlw	-2
 10289  0047DC  006F FF8C  F048    	movff	plusw1,btemp+10
 10290  0047E2  0EFF               	movlw	-1
 10291  0047E4  006F FF8C  F049    	movff	plusw1,btemp+11
 10292  0047EA  0E42               	movlw	66
 10293  0047EC  2448               	addwf	btemp+10,w,c
 10294  0047EE  6ED9               	movwf	fsr2l,c
 10295  0047F0  0E00               	movlw	0
 10296  0047F2  2049               	addwfc	btemp+11,w,c
 10297  0047F4  6EDA               	movwf	fsr2h,c
 10298  0047F6  2ADF               	incf	indf2,f,c
 10299  0047F8                     l1437:
 10300                           
 10301                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 10302  0047F8  52E5               	movf	postdec1,f,c
 10303  0047FA  52E5               	movf	postdec1,f,c
 10304  0047FC  52E5               	movf	postdec1,f,c
 10305  0047FE  0012               	return		;funcret
 10306  004800                     __end_of_ringBufS_put_dma:
 10307                           	opt callstack 0
 10308                           
 10309 ;; *************** function _SYSTEM_Initialize *****************
 10310 ;; Defined at:
 10311 ;;		line 50 in file "mcc_generated_files/mcc.c"
 10312 ;; Parameters:    Size  Location     Type
 10313 ;;		None
 10314 ;; Auto vars:     Size  Location     Type
 10315 ;;		None
 10316 ;; Return value:  Size  Location     Type
 10317 ;;                  1  [STACK] void 
 10318 ;; Registers used:
 10319 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 10320 ;; Tracked objects:
 10321 ;;		On entry : 0/0
 10322 ;;		On exit  : 3F/3C
 10323 ;;		Unchanged: 0/0
 10324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10329 ;;Total ram usage:        0 bytes
 10330 ;; Hardware stack levels used:    1
 10331 ;; Hardware stack levels required when called:    5
 10332 ;; This function calls:
 10333 ;;		_ADCC_Initialize
 10334 ;;		_CLC1_Initialize
 10335 ;;		_CLKREF_Initialize
 10336 ;;		_DMA1_Initialize
 10337 ;;		_DSM_Initialize
 10338 ;;		_EXT_INT_Initialize
 10339 ;;		_INTERRUPT_Initialize
 10340 ;;		_NCO1_Initialize
 10341 ;;		_OSCILLATOR_Initialize
 10342 ;;		_PIN_MANAGER_Initialize
 10343 ;;		_PMD_Initialize
 10344 ;;		_SPI1_Initialize
 10345 ;;		_TMR5_Initialize
 10346 ;;		_TMR6_Initialize
 10347 ;;		_UART1_Initialize
 10348 ;;		_UART2_Initialize
 10349 ;; This function is called by:
 10350 ;;		_main
 10351 ;; This function uses a reentrant model
 10352 ;;
 10353                           
 10354                           	psect	text47
 10355  00512C                     __ptext47:
 10356                           	opt callstack 0
 10357  00512C                     _SYSTEM_Initialize:
 10358                           	opt callstack 25
 10359                           
 10360                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 10361                           
 10362                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10363                           ;incstack = 0
 10364  00512C  ECC8  F026         	call	_INTERRUPT_Initialize	;wreg free
 10365                           
 10366                           ; BSR set to: 57
 10367                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 10368  005130  EC69  F02C         	call	_PMD_Initialize	;wreg free
 10369                           
 10370                           ; BSR set to: 57
 10371                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 10372  005134  EC51  F024         	call	_PIN_MANAGER_Initialize	;wreg free
 10373                           
 10374                           ; BSR set to: 58
 10375                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 10376  005138  EC5E  F02C         	call	_OSCILLATOR_Initialize	;wreg free
 10377                           
 10378                           ; BSR set to: 57
 10379                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 10380  00513C  EC08  F028         	call	_ADCC_Initialize	;wreg free
 10381                           
 10382                           ;mcc_generated_files/mcc.c: 57:     NCO1_Initialize();
 10383  005140  EC05  F02C         	call	_NCO1_Initialize	;wreg free
 10384                           
 10385                           ; BSR set to: 63
 10386                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
 10387  005144  ECE2  F027         	call	_EXT_INT_Initialize	;wreg free
 10388                           
 10389                           ; BSR set to: 57
 10390                           ;mcc_generated_files/mcc.c: 59:     TMR6_Initialize();
 10391  005148  EC75  F02A         	call	_TMR6_Initialize	;wreg free
 10392                           
 10393                           ;mcc_generated_files/mcc.c: 60:     CLC1_Initialize();
 10394  00514C  EC62  F02B         	call	_CLC1_Initialize	;wreg free
 10395                           
 10396                           ; BSR set to: 60
 10397                           ;mcc_generated_files/mcc.c: 61:     TMR5_Initialize();
 10398  005150  EC50  F028         	call	_TMR5_Initialize	;wreg free
 10399                           
 10400                           ;mcc_generated_files/mcc.c: 62:     DSM_Initialize();
 10401  005154  EC13  F02C         	call	_DSM_Initialize	;wreg free
 10402                           
 10403                           ; BSR set to: 60
 10404                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 10405  005158  ECFB  F026         	call	_UART1_Initialize	;wreg free
 10406                           
 10407                           ; BSR set to: 57
 10408                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 10409  00515C  EC5E  F027         	call	_UART2_Initialize	;wreg free
 10410                           
 10411                           ; BSR set to: 57
 10412                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 10413  005160  EC53  F02C         	call	_SPI1_Initialize	;wreg free
 10414                           
 10415                           ; BSR set to: 61
 10416                           ;mcc_generated_files/mcc.c: 66:     DMA1_Initialize();
 10417  005164  EC93  F026         	call	_DMA1_Initialize	;wreg free
 10418                           
 10419                           ; BSR set to: 59
 10420                           ;mcc_generated_files/mcc.c: 67:     CLKREF_Initialize();
 10421  005168  EC99  F02C         	call	_CLKREF_Initialize	;wreg free
 10422                           
 10423                           ; BSR set to: 60
 10424                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 10425  00516C  0012               	return		;funcret
 10426  00516E                     __end_of_SYSTEM_Initialize:
 10427                           	opt callstack 0
 10428                           
 10429 ;; *************** function _UART2_Initialize *****************
 10430 ;; Defined at:
 10431 ;;		line 78 in file "mcc_generated_files/uart2.c"
 10432 ;; Parameters:    Size  Location     Type
 10433 ;;		None
 10434 ;; Auto vars:     Size  Location     Type
 10435 ;;		None
 10436 ;; Return value:  Size  Location     Type
 10437 ;;                  1  [STACK] void 
 10438 ;; Registers used:
 10439 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 10440 ;; Tracked objects:
 10441 ;;		On entry : 3F/39
 10442 ;;		On exit  : 3F/39
 10443 ;;		Unchanged: 0/0
 10444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10449 ;;Total ram usage:        0 bytes
 10450 ;; Hardware stack levels used:    1
 10451 ;; Hardware stack levels required when called:    4
 10452 ;; This function calls:
 10453 ;;		_UART2_SetRxInterruptHandler
 10454 ;;		_UART2_SetTxInterruptHandler
 10455 ;; This function is called by:
 10456 ;;		_SYSTEM_Initialize
 10457 ;; This function uses a reentrant model
 10458 ;;
 10459                           
 10460                           	psect	text48
 10461  004EBC                     __ptext48:
 10462                           	opt callstack 0
 10463  004EBC                     _UART2_Initialize:
 10464                           	opt callstack 25
 10465                           
 10466                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 10467                           
 10468                           ; BSR set to: 60
 10469                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10470                           ;incstack = 0
 10471  004EBC  0139               	movlb	57	; () banked
 10472  004EBE  9596               	bcf	150,2,b	;volatile
 10473                           
 10474                           ; BSR set to: 57
 10475                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 10476  004EC0  0EB0               	movlw	low _UART2_Receive_ISR
 10477  004EC2  6EE6               	movwf	postinc1,c
 10478  004EC4  0E57               	movlw	high _UART2_Receive_ISR
 10479  004EC6  6EE6               	movwf	postinc1,c
 10480  004EC8  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
 10481  004ECA  6EE6               	movwf	postinc1,c
 10482  004ECC  EC39  F02A         	call	_UART2_SetRxInterruptHandler	;wreg free
 10483                           
 10484                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 10485  004ED0  0139               	movlb	57	; () banked
 10486  004ED2  9796               	bcf	150,3,b	;volatile
 10487                           
 10488                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 10489  004ED4  0EFE               	movlw	low _UART2_Transmit_ISR
 10490  004ED6  6EE6               	movwf	postinc1,c
 10491  004ED8  0E52               	movlw	high _UART2_Transmit_ISR
 10492  004EDA  6EE6               	movwf	postinc1,c
 10493  004EDC  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 10494  004EDE  6EE6               	movwf	postinc1,c
 10495  004EE0  EC25  F02A         	call	_UART2_SetTxInterruptHandler	;wreg free
 10496                           
 10497                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 10498  004EE4  013D               	movlb	61	; () banked
 10499  004EE6  6BD4               	clrf	212,b	;volatile
 10500                           
 10501                           ; BSR set to: 61
 10502                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 10503  004EE8  6BD6               	clrf	214,b	;volatile
 10504                           
 10505                           ; BSR set to: 61
 10506                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 10507  004EEA  6BD8               	clrf	216,b	;volatile
 10508                           
 10509                           ; BSR set to: 61
 10510                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 10511  004EEC  0EB0               	movlw	176
 10512  004EEE  6FDA               	movwf	218,b	;volatile
 10513                           
 10514                           ; BSR set to: 61
 10515                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 10516  004EF0  0E80               	movlw	128
 10517  004EF2  6FDB               	movwf	219,b	;volatile
 10518                           
 10519                           ; BSR set to: 61
 10520                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 10521  004EF4  6BDC               	clrf	220,b	;volatile
 10522                           
 10523                           ; BSR set to: 61
 10524                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 10525  004EF6  0E82               	movlw	130
 10526  004EF8  6FDD               	movwf	221,b	;volatile
 10527                           
 10528                           ; BSR set to: 61
 10529                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 10530  004EFA  0E06               	movlw	6
 10531  004EFC  6FDE               	movwf	222,b	;volatile
 10532                           
 10533                           ; BSR set to: 61
 10534                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 10535  004EFE  6BDF               	clrf	223,b	;volatile
 10536                           
 10537                           ; BSR set to: 61
 10538                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 10539  004F00  6BE0               	clrf	224,b	;volatile
 10540                           
 10541                           ; BSR set to: 61
 10542                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 10543  004F02  6BE1               	clrf	225,b	;volatile
 10544                           
 10545                           ; BSR set to: 61
 10546                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 10547  004F04  6BE2               	clrf	226,b	;volatile
 10548                           
 10549                           ; BSR set to: 61
 10550                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 10551  004F06  6A37               	clrf	_uart2TxHead,c	;volatile
 10552                           
 10553                           ; BSR set to: 61
 10554                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 10555  004F08  6A36               	clrf	_uart2TxTail,c	;volatile
 10556                           
 10557                           ; BSR set to: 61
 10558                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 10559  004F0A  0E40               	movlw	64
 10560  004F0C  6E35               	movwf	_uart2TxBufferRemaining,c	;volatile
 10561                           
 10562                           ; BSR set to: 61
 10563                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 10564  004F0E  6A34               	clrf	_uart2RxHead,c	;volatile
 10565                           
 10566                           ; BSR set to: 61
 10567                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 10568  004F10  6A33               	clrf	_uart2RxTail,c	;volatile
 10569                           
 10570                           ; BSR set to: 61
 10571                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 10572  004F12  6A32               	clrf	_uart2RxCount,c	;volatile
 10573                           
 10574                           ; BSR set to: 61
 10575                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 10576  004F14  0139               	movlb	57	; () banked
 10577  004F16  8596               	bsf	150,2,b	;volatile
 10578                           
 10579                           ; BSR set to: 57
 10580                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 10581  004F18  0012               	return		;funcret
 10582  004F1A                     __end_of_UART2_Initialize:
 10583                           	opt callstack 0
 10584                           
 10585 ;; *************** function _UART2_SetTxInterruptHandler *****************
 10586 ;; Defined at:
 10587 ;;		line 252 in file "mcc_generated_files/uart2.c"
 10588 ;; Parameters:    Size  Location     Type
 10589 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 10590 ;;		 -> UART2_Transmit_ISR(1), 
 10591 ;; Auto vars:     Size  Location     Type
 10592 ;;		None
 10593 ;; Return value:  Size  Location     Type
 10594 ;;                  1  [STACK] void 
 10595 ;; Registers used:
 10596 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 10597 ;; Tracked objects:
 10598 ;;		On entry : 3F/39
 10599 ;;		On exit  : 0/0
 10600 ;;		Unchanged: 0/0
 10601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10606 ;;Total ram usage:        0 bytes
 10607 ;; Hardware stack levels used:    1
 10608 ;; Hardware stack levels required when called:    3
 10609 ;; This function calls:
 10610 ;;		Nothing
 10611 ;; This function is called by:
 10612 ;;		_UART2_Initialize
 10613 ;; This function uses a reentrant model
 10614 ;;
 10615                           
 10616                           	psect	text49
 10617  00544A                     __ptext49:
 10618                           	opt callstack 0
 10619  00544A                     _UART2_SetTxInterruptHandler:
 10620                           	opt callstack 25
 10621                           
 10622                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 10623                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 10624                           
 10625                           ; BSR set to: 57
 10626                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10627                           ;incstack = 0
 10628  00544A  50E1               	movf	fsr1l,w,c
 10629  00544C  0FFD               	addlw	-3
 10630  00544E  6ED9               	movwf	fsr2l,c
 10631  005450  50E2               	movf	fsr1h,w,c
 10632  005452  6EDA               	movwf	fsr2h,c
 10633  005454  0EFF               	movlw	255
 10634  005456  22DA               	addwfc	fsr2h,f,c
 10635  005458  006F FF78  F013    	movff	postinc2,_UART2_TxInterruptHandler
 10636  00545E  006F FF78  F014    	movff	postinc2,_UART2_TxInterruptHandler+1
 10637  005464  006F FF74  F015    	movff	postdec2,_UART2_TxInterruptHandler+2
 10638                           
 10639                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 10640  00546A  52E5               	movf	postdec1,f,c
 10641  00546C  52E5               	movf	postdec1,f,c
 10642  00546E  52E5               	movf	postdec1,f,c
 10643  005470  0012               	return		;funcret
 10644  005472                     __end_of_UART2_SetTxInterruptHandler:
 10645                           	opt callstack 0
 10646                           
 10647 ;; *************** function _UART2_SetRxInterruptHandler *****************
 10648 ;; Defined at:
 10649 ;;		line 248 in file "mcc_generated_files/uart2.c"
 10650 ;; Parameters:    Size  Location     Type
 10651 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 10652 ;;		 -> UART2_Receive_ISR(1), 
 10653 ;; Auto vars:     Size  Location     Type
 10654 ;;		None
 10655 ;; Return value:  Size  Location     Type
 10656 ;;                  1  [STACK] void 
 10657 ;; Registers used:
 10658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 10659 ;; Tracked objects:
 10660 ;;		On entry : 3F/39
 10661 ;;		On exit  : 0/0
 10662 ;;		Unchanged: 0/0
 10663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10668 ;;Total ram usage:        0 bytes
 10669 ;; Hardware stack levels used:    1
 10670 ;; Hardware stack levels required when called:    3
 10671 ;; This function calls:
 10672 ;;		Nothing
 10673 ;; This function is called by:
 10674 ;;		_UART2_Initialize
 10675 ;; This function uses a reentrant model
 10676 ;;
 10677                           
 10678                           	psect	text50
 10679  005472                     __ptext50:
 10680                           	opt callstack 0
 10681  005472                     _UART2_SetRxInterruptHandler:
 10682                           	opt callstack 25
 10683                           
 10684                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 10685                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 10686                           
 10687                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10688                           ;incstack = 0
 10689  005472  50E1               	movf	fsr1l,w,c
 10690  005474  0FFD               	addlw	-3
 10691  005476  6ED9               	movwf	fsr2l,c
 10692  005478  50E2               	movf	fsr1h,w,c
 10693  00547A  6EDA               	movwf	fsr2h,c
 10694  00547C  0EFF               	movlw	255
 10695  00547E  22DA               	addwfc	fsr2h,f,c
 10696  005480  006F FF78  F016    	movff	postinc2,_UART2_RxInterruptHandler
 10697  005486  006F FF78  F017    	movff	postinc2,_UART2_RxInterruptHandler+1
 10698  00548C  006F FF74  F018    	movff	postdec2,_UART2_RxInterruptHandler+2
 10699                           
 10700                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 10701  005492  52E5               	movf	postdec1,f,c
 10702  005494  52E5               	movf	postdec1,f,c
 10703  005496  52E5               	movf	postdec1,f,c
 10704  005498  0012               	return		;funcret
 10705  00549A                     __end_of_UART2_SetRxInterruptHandler:
 10706                           	opt callstack 0
 10707                           
 10708 ;; *************** function _UART1_Initialize *****************
 10709 ;; Defined at:
 10710 ;;		line 78 in file "mcc_generated_files/uart1.c"
 10711 ;; Parameters:    Size  Location     Type
 10712 ;;		None
 10713 ;; Auto vars:     Size  Location     Type
 10714 ;;		None
 10715 ;; Return value:  Size  Location     Type
 10716 ;;                  1  [STACK] void 
 10717 ;; Registers used:
 10718 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 10719 ;; Tracked objects:
 10720 ;;		On entry : 3F/3C
 10721 ;;		On exit  : 3F/39
 10722 ;;		Unchanged: 0/0
 10723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10728 ;;Total ram usage:        0 bytes
 10729 ;; Hardware stack levels used:    1
 10730 ;; Hardware stack levels required when called:    4
 10731 ;; This function calls:
 10732 ;;		_UART1_SetRxInterruptHandler
 10733 ;;		_UART1_SetTxInterruptHandler
 10734 ;; This function is called by:
 10735 ;;		_SYSTEM_Initialize
 10736 ;; This function uses a reentrant model
 10737 ;;
 10738                           
 10739                           	psect	text51
 10740  004DF6                     __ptext51:
 10741                           	opt callstack 0
 10742  004DF6                     _UART1_Initialize:
 10743                           	opt callstack 25
 10744                           
 10745                           ;mcc_generated_files/uart1.c: 81:  PIE3bits.U1RXIE = 0;
 10746                           
 10747                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10748                           ;incstack = 0
 10749  004DF6  0139               	movlb	57	; () banked
 10750  004DF8  9793               	bcf	147,3,b	;volatile
 10751                           
 10752                           ; BSR set to: 57
 10753                           ;mcc_generated_files/uart1.c: 82:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 10754  004DFA  0E90               	movlw	low _UART1_Receive_ISR
 10755  004DFC  6EE6               	movwf	postinc1,c
 10756  004DFE  0E57               	movlw	high _UART1_Receive_ISR
 10757  004E00  6EE6               	movwf	postinc1,c
 10758  004E02  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 10759  004E04  6EE6               	movwf	postinc1,c
 10760  004E06  EC61  F02A         	call	_UART1_SetRxInterruptHandler	;wreg free
 10761                           
 10762                           ;mcc_generated_files/uart1.c: 83:  PIE3bits.U1TXIE = 0;
 10763  004E0A  0139               	movlb	57	; () banked
 10764  004E0C  9993               	bcf	147,4,b	;volatile
 10765                           
 10766                           ;mcc_generated_files/uart1.c: 84:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 10767  004E0E  0ED2               	movlw	low _UART1_Transmit_ISR
 10768  004E10  6EE6               	movwf	postinc1,c
 10769  004E12  0E52               	movlw	high _UART1_Transmit_ISR
 10770  004E14  6EE6               	movwf	postinc1,c
 10771  004E16  0E00               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 10772  004E18  6EE6               	movwf	postinc1,c
 10773  004E1A  EC4D  F02A         	call	_UART1_SetTxInterruptHandler	;wreg free
 10774                           
 10775                           ;mcc_generated_files/uart1.c: 89:  U1P1L = 0x00;
 10776  004E1E  013D               	movlb	61	; () banked
 10777  004E20  6BEC               	clrf	236,b	;volatile
 10778                           
 10779                           ; BSR set to: 61
 10780                           ;mcc_generated_files/uart1.c: 92:  U1P1H = 0x00;
 10781  004E22  6BED               	clrf	237,b	;volatile
 10782                           
 10783                           ; BSR set to: 61
 10784                           ;mcc_generated_files/uart1.c: 95:  U1P2L = 0x00;
 10785  004E24  6BEE               	clrf	238,b	;volatile
 10786                           
 10787                           ; BSR set to: 61
 10788                           ;mcc_generated_files/uart1.c: 98:  U1P2H = 0x00;
 10789  004E26  6BEF               	clrf	239,b	;volatile
 10790                           
 10791                           ; BSR set to: 61
 10792                           ;mcc_generated_files/uart1.c: 101:  U1P3L = 0x00;
 10793  004E28  6BF0               	clrf	240,b	;volatile
 10794                           
 10795                           ; BSR set to: 61
 10796                           ;mcc_generated_files/uart1.c: 104:  U1P3H = 0x00;
 10797  004E2A  6BF1               	clrf	241,b	;volatile
 10798                           
 10799                           ; BSR set to: 61
 10800                           ;mcc_generated_files/uart1.c: 107:  U1CON0 = 0xB0;
 10801  004E2C  0EB0               	movlw	176
 10802  004E2E  6FF2               	movwf	242,b	;volatile
 10803                           
 10804                           ; BSR set to: 61
 10805                           ;mcc_generated_files/uart1.c: 110:  U1CON1 = 0x80;
 10806  004E30  0E80               	movlw	128
 10807  004E32  6FF3               	movwf	243,b	;volatile
 10808                           
 10809                           ; BSR set to: 61
 10810                           ;mcc_generated_files/uart1.c: 113:  U1CON2 = 0x00;
 10811  004E34  6BF4               	clrf	244,b	;volatile
 10812                           
 10813                           ; BSR set to: 61
 10814                           ;mcc_generated_files/uart1.c: 116:  U1BRGL = 0x82;
 10815  004E36  0E82               	movlw	130
 10816  004E38  6FF5               	movwf	245,b	;volatile
 10817                           
 10818                           ; BSR set to: 61
 10819                           ;mcc_generated_files/uart1.c: 119:  U1BRGH = 0x06;
 10820  004E3A  0E06               	movlw	6
 10821  004E3C  6FF6               	movwf	246,b	;volatile
 10822                           
 10823                           ; BSR set to: 61
 10824                           ;mcc_generated_files/uart1.c: 122:  U1FIFO = 0x00;
 10825  004E3E  6BF7               	clrf	247,b	;volatile
 10826                           
 10827                           ; BSR set to: 61
 10828                           ;mcc_generated_files/uart1.c: 125:  U1UIR = 0x00;
 10829  004E40  6BF8               	clrf	248,b	;volatile
 10830                           
 10831                           ; BSR set to: 61
 10832                           ;mcc_generated_files/uart1.c: 128:  U1ERRIR = 0x00;
 10833  004E42  6BF9               	clrf	249,b	;volatile
 10834                           
 10835                           ; BSR set to: 61
 10836                           ;mcc_generated_files/uart1.c: 131:  U1ERRIE = 0x00;
 10837  004E44  6BFA               	clrf	250,b	;volatile
 10838                           
 10839                           ; BSR set to: 61
 10840                           ;mcc_generated_files/uart1.c: 135:  uart1TxHead = 0;
 10841  004E46  6A3D               	clrf	_uart1TxHead,c	;volatile
 10842                           
 10843                           ; BSR set to: 61
 10844                           ;mcc_generated_files/uart1.c: 136:  uart1TxTail = 0;
 10845  004E48  6A3C               	clrf	_uart1TxTail,c	;volatile
 10846                           
 10847                           ; BSR set to: 61
 10848                           ;mcc_generated_files/uart1.c: 137:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 10849  004E4A  0E40               	movlw	64
 10850  004E4C  6E3B               	movwf	_uart1TxBufferRemaining,c	;volatile
 10851                           
 10852                           ; BSR set to: 61
 10853                           ;mcc_generated_files/uart1.c: 138:  uart1RxHead = 0;
 10854  004E4E  6A3A               	clrf	_uart1RxHead,c	;volatile
 10855                           
 10856                           ; BSR set to: 61
 10857                           ;mcc_generated_files/uart1.c: 139:  uart1RxTail = 0;
 10858  004E50  6A39               	clrf	_uart1RxTail,c	;volatile
 10859                           
 10860                           ; BSR set to: 61
 10861                           ;mcc_generated_files/uart1.c: 140:  uart1RxCount = 0;
 10862  004E52  6A38               	clrf	_uart1RxCount,c	;volatile
 10863                           
 10864                           ; BSR set to: 61
 10865                           ;mcc_generated_files/uart1.c: 143:  PIE3bits.U1RXIE = 1;
 10866  004E54  0139               	movlb	57	; () banked
 10867  004E56  8793               	bsf	147,3,b	;volatile
 10868                           
 10869                           ; BSR set to: 57
 10870                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 10871  004E58  0012               	return		;funcret
 10872  004E5A                     __end_of_UART1_Initialize:
 10873                           	opt callstack 0
 10874                           
 10875 ;; *************** function _UART1_SetTxInterruptHandler *****************
 10876 ;; Defined at:
 10877 ;;		line 244 in file "mcc_generated_files/uart1.c"
 10878 ;; Parameters:    Size  Location     Type
 10879 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 10880 ;;		 -> UART1_Transmit_ISR(1), 
 10881 ;; Auto vars:     Size  Location     Type
 10882 ;;		None
 10883 ;; Return value:  Size  Location     Type
 10884 ;;                  1  [STACK] void 
 10885 ;; Registers used:
 10886 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 10887 ;; Tracked objects:
 10888 ;;		On entry : 3F/39
 10889 ;;		On exit  : 0/0
 10890 ;;		Unchanged: 0/0
 10891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10896 ;;Total ram usage:        0 bytes
 10897 ;; Hardware stack levels used:    1
 10898 ;; Hardware stack levels required when called:    3
 10899 ;; This function calls:
 10900 ;;		Nothing
 10901 ;; This function is called by:
 10902 ;;		_UART1_Initialize
 10903 ;; This function uses a reentrant model
 10904 ;;
 10905                           
 10906                           	psect	text52
 10907  00549A                     __ptext52:
 10908                           	opt callstack 0
 10909  00549A                     _UART1_SetTxInterruptHandler:
 10910                           	opt callstack 25
 10911                           
 10912                           ;mcc_generated_files/uart1.c: 244: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 245: {;mcc_generated_files/uart1.c: 246:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 10913                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 10914                           
 10915                           ; BSR set to: 57
 10916                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10917                           ;incstack = 0
 10918  00549A  50E1               	movf	fsr1l,w,c
 10919  00549C  0FFD               	addlw	-3
 10920  00549E  6ED9               	movwf	fsr2l,c
 10921  0054A0  50E2               	movf	fsr1h,w,c
 10922  0054A2  6EDA               	movwf	fsr2h,c
 10923  0054A4  0EFF               	movlw	255
 10924  0054A6  22DA               	addwfc	fsr2h,f,c
 10925  0054A8  006F FF78  F00D    	movff	postinc2,_UART1_TxInterruptHandler
 10926  0054AE  006F FF78  F00E    	movff	postinc2,_UART1_TxInterruptHandler+1
 10927  0054B4  006F FF74  F00F    	movff	postdec2,_UART1_TxInterruptHandler+2
 10928                           
 10929                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 10930  0054BA  52E5               	movf	postdec1,f,c
 10931  0054BC  52E5               	movf	postdec1,f,c
 10932  0054BE  52E5               	movf	postdec1,f,c
 10933  0054C0  0012               	return		;funcret
 10934  0054C2                     __end_of_UART1_SetTxInterruptHandler:
 10935                           	opt callstack 0
 10936                           
 10937 ;; *************** function _UART1_SetRxInterruptHandler *****************
 10938 ;; Defined at:
 10939 ;;		line 239 in file "mcc_generated_files/uart1.c"
 10940 ;; Parameters:    Size  Location     Type
 10941 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 10942 ;;		 -> UART1_Receive_ISR(1), 
 10943 ;; Auto vars:     Size  Location     Type
 10944 ;;		None
 10945 ;; Return value:  Size  Location     Type
 10946 ;;                  1  [STACK] void 
 10947 ;; Registers used:
 10948 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 10949 ;; Tracked objects:
 10950 ;;		On entry : 3F/39
 10951 ;;		On exit  : 0/0
 10952 ;;		Unchanged: 0/0
 10953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10958 ;;Total ram usage:        0 bytes
 10959 ;; Hardware stack levels used:    1
 10960 ;; Hardware stack levels required when called:    3
 10961 ;; This function calls:
 10962 ;;		Nothing
 10963 ;; This function is called by:
 10964 ;;		_UART1_Initialize
 10965 ;; This function uses a reentrant model
 10966 ;;
 10967                           
 10968                           	psect	text53
 10969  0054C2                     __ptext53:
 10970                           	opt callstack 0
 10971  0054C2                     _UART1_SetRxInterruptHandler:
 10972                           	opt callstack 25
 10973                           
 10974                           ;mcc_generated_files/uart1.c: 239: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 240: {;mcc_generated_files/uart1.c: 241:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 10975                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 10976                           
 10977                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10978                           ;incstack = 0
 10979  0054C2  50E1               	movf	fsr1l,w,c
 10980  0054C4  0FFD               	addlw	-3
 10981  0054C6  6ED9               	movwf	fsr2l,c
 10982  0054C8  50E2               	movf	fsr1h,w,c
 10983  0054CA  6EDA               	movwf	fsr2h,c
 10984  0054CC  0EFF               	movlw	255
 10985  0054CE  22DA               	addwfc	fsr2h,f,c
 10986  0054D0  006F FF78  F010    	movff	postinc2,_UART1_RxInterruptHandler
 10987  0054D6  006F FF78  F011    	movff	postinc2,_UART1_RxInterruptHandler+1
 10988  0054DC  006F FF74  F012    	movff	postdec2,_UART1_RxInterruptHandler+2
 10989                           
 10990                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 10991  0054E2  52E5               	movf	postdec1,f,c
 10992  0054E4  52E5               	movf	postdec1,f,c
 10993  0054E6  52E5               	movf	postdec1,f,c
 10994  0054E8  0012               	return		;funcret
 10995  0054EA                     __end_of_UART1_SetRxInterruptHandler:
 10996                           	opt callstack 0
 10997                           
 10998 ;; *************** function _TMR6_Initialize *****************
 10999 ;; Defined at:
 11000 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 11001 ;; Parameters:    Size  Location     Type
 11002 ;;		None
 11003 ;; Auto vars:     Size  Location     Type
 11004 ;;		None
 11005 ;; Return value:  Size  Location     Type
 11006 ;;                  1  [STACK] void 
 11007 ;; Registers used:
 11008 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 11009 ;; Tracked objects:
 11010 ;;		On entry : 3F/39
 11011 ;;		On exit  : 0/0
 11012 ;;		Unchanged: 0/0
 11013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11018 ;;Total ram usage:        0 bytes
 11019 ;; Hardware stack levels used:    1
 11020 ;; Hardware stack levels required when called:    4
 11021 ;; This function calls:
 11022 ;;		_TMR6_SetInterruptHandler
 11023 ;; This function is called by:
 11024 ;;		_SYSTEM_Initialize
 11025 ;; This function uses a reentrant model
 11026 ;;
 11027                           
 11028                           	psect	text54
 11029  0054EA                     __ptext54:
 11030                           	opt callstack 0
 11031  0054EA                     _TMR6_Initialize:
 11032                           	opt callstack 25
 11033                           
 11034                           ;mcc_generated_files/tmr6.c: 75:  T6CLKCON = 0x01;
 11035                           
 11036                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11037                           ;incstack = 0
 11038  0054EA  0E01               	movlw	1
 11039  0054EC  6E96               	movwf	16278,c	;volatile
 11040                           
 11041                           ;mcc_generated_files/tmr6.c: 78:  T6HLT = 0x00;
 11042  0054EE  6A95               	clrf	16277,c	;volatile
 11043                           
 11044                           ;mcc_generated_files/tmr6.c: 81:  T6RST = 0x00;
 11045  0054F0  6A97               	clrf	16279,c	;volatile
 11046                           
 11047                           ;mcc_generated_files/tmr6.c: 84:  T6PR = 0x03;
 11048  0054F2  0E03               	movlw	3
 11049  0054F4  6E93               	movwf	16275,c	;volatile
 11050                           
 11051                           ;mcc_generated_files/tmr6.c: 87:  T6TMR = 0x00;
 11052  0054F6  6A92               	clrf	16274,c	;volatile
 11053                           
 11054                           ;mcc_generated_files/tmr6.c: 90:  PIR9bits.TMR6IF = 0;
 11055  0054F8  0139               	movlb	57	; () banked
 11056  0054FA  91A9               	bcf	169,0,b	;volatile
 11057                           
 11058                           ; BSR set to: 57
 11059                           ;mcc_generated_files/tmr6.c: 93:  PIE9bits.TMR6IE = 1;
 11060  0054FC  8199               	bsf	153,0,b	;volatile
 11061                           
 11062                           ; BSR set to: 57
 11063                           ;mcc_generated_files/tmr6.c: 96:  TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler)
      +                          ;
 11064  0054FE  0EE6               	movlw	low _TMR6_DefaultInterruptHandler
 11065  005500  6EE6               	movwf	postinc1,c
 11066  005502  0E50               	movlw	high _TMR6_DefaultInterruptHandler
 11067  005504  6EE6               	movwf	postinc1,c
 11068  005506  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 11069  005508  6EE6               	movwf	postinc1,c
 11070  00550A  EC89  F02A         	call	_TMR6_SetInterruptHandler	;wreg free
 11071                           
 11072                           ;mcc_generated_files/tmr6.c: 99:  T6CON = 0xFF;
 11073  00550E  6894               	setf	16276,c	;volatile
 11074                           
 11075                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11076  005510  0012               	return		;funcret
 11077  005512                     __end_of_TMR6_Initialize:
 11078                           	opt callstack 0
 11079                           
 11080 ;; *************** function _TMR6_SetInterruptHandler *****************
 11081 ;; Defined at:
 11082 ;;		line 191 in file "mcc_generated_files/tmr6.c"
 11083 ;; Parameters:    Size  Location     Type
 11084 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 11085 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 11086 ;; Auto vars:     Size  Location     Type
 11087 ;;		None
 11088 ;; Return value:  Size  Location     Type
 11089 ;;                  1  [STACK] void 
 11090 ;; Registers used:
 11091 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11092 ;; Tracked objects:
 11093 ;;		On entry : 3F/39
 11094 ;;		On exit  : 0/0
 11095 ;;		Unchanged: 0/0
 11096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11101 ;;Total ram usage:        0 bytes
 11102 ;; Hardware stack levels used:    1
 11103 ;; Hardware stack levels required when called:    3
 11104 ;; This function calls:
 11105 ;;		Nothing
 11106 ;; This function is called by:
 11107 ;;		_TMR6_Initialize
 11108 ;; This function uses a reentrant model
 11109 ;;
 11110                           
 11111                           	psect	text55
 11112  005512                     __ptext55:
 11113                           	opt callstack 0
 11114  005512                     _TMR6_SetInterruptHandler:
 11115                           	opt callstack 25
 11116                           
 11117                           ;mcc_generated_files/tmr6.c: 191: void TMR6_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr6.c: 192: {;mcc_generated_files/tmr6.c: 193:  TMR6_Inter
      +                          ruptHandler = InterruptHandler;
 11118                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 11119                           
 11120                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11121                           ;incstack = 0
 11122  005512  50E1               	movf	fsr1l,w,c
 11123  005514  0FFD               	addlw	-3
 11124  005516  6ED9               	movwf	fsr2l,c
 11125  005518  50E2               	movf	fsr1h,w,c
 11126  00551A  6EDA               	movwf	fsr2h,c
 11127  00551C  0EFF               	movlw	255
 11128  00551E  22DA               	addwfc	fsr2h,f,c
 11129  005520  006F FF78  F007    	movff	postinc2,_TMR6_InterruptHandler
 11130  005526  006F FF78  F008    	movff	postinc2,_TMR6_InterruptHandler+1
 11131  00552C  006F FF74  F009    	movff	postdec2,_TMR6_InterruptHandler+2
 11132                           
 11133                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 11134  005532  52E5               	movf	postdec1,f,c
 11135  005534  52E5               	movf	postdec1,f,c
 11136  005536  52E5               	movf	postdec1,f,c
 11137  005538  0012               	return		;funcret
 11138  00553A                     __end_of_TMR6_SetInterruptHandler:
 11139                           	opt callstack 0
 11140                           
 11141 ;; *************** function _TMR5_Initialize *****************
 11142 ;; Defined at:
 11143 ;;		line 66 in file "mcc_generated_files/tmr5.c"
 11144 ;; Parameters:    Size  Location     Type
 11145 ;;		None
 11146 ;; Auto vars:     Size  Location     Type
 11147 ;;		None
 11148 ;; Return value:  Size  Location     Type
 11149 ;;                  1  [STACK] void 
 11150 ;; Registers used:
 11151 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 11152 ;; Tracked objects:
 11153 ;;		On entry : 3F/3C
 11154 ;;		On exit  : 0/0
 11155 ;;		Unchanged: 0/0
 11156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11161 ;;Total ram usage:        0 bytes
 11162 ;; Hardware stack levels used:    1
 11163 ;; Hardware stack levels required when called:    4
 11164 ;; This function calls:
 11165 ;;		_TMR5_SetInterruptHandler
 11166 ;; This function is called by:
 11167 ;;		_SYSTEM_Initialize
 11168 ;; This function uses a reentrant model
 11169 ;;
 11170                           
 11171                           	psect	text56
 11172  0050A0                     __ptext56:
 11173                           	opt callstack 0
 11174  0050A0                     _TMR5_Initialize:
 11175                           	opt callstack 25
 11176                           
 11177                           ;mcc_generated_files/tmr5.c: 71:  T5GCON = 0x00;
 11178                           
 11179                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11180                           ;incstack = 0
 11181  0050A0  6A9B               	clrf	16283,c	;volatile
 11182                           
 11183                           ;mcc_generated_files/tmr5.c: 74:  T5GATE = 0x00;
 11184  0050A2  6A9C               	clrf	16284,c	;volatile
 11185                           
 11186                           ;mcc_generated_files/tmr5.c: 77:  T5CLK = 0x01;
 11187  0050A4  0E01               	movlw	1
 11188  0050A6  6E9D               	movwf	16285,c	;volatile
 11189                           
 11190                           ;mcc_generated_files/tmr5.c: 80:  TMR5H = 0x63;
 11191  0050A8  0E63               	movlw	99
 11192  0050AA  6E99               	movwf	16281,c	;volatile
 11193                           
 11194                           ;mcc_generated_files/tmr5.c: 83:  TMR5L = 0xC0;
 11195  0050AC  0EC0               	movlw	192
 11196  0050AE  6E98               	movwf	16280,c	;volatile
 11197                           
 11198                           ;mcc_generated_files/tmr5.c: 86:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 11199  0050B0  5098               	movf	16280,w,c	;volatile
 11200  0050B2  006F FE64  F03E    	movff	16281,btemp	;volatile
 11201  0050B8  6A3F               	clrf	btemp+1,c
 11202  0050BA  0060  F0F8  F03F   	movff	btemp,btemp+1
 11203  0050C0  6A3E               	clrf	btemp,c
 11204  0050C2  103E               	iorwf	btemp,w,c
 11205  0050C4  6E2E               	movwf	_timer5ReloadVal,c	;volatile
 11206  0050C6  503F               	movf	btemp+1,w,c
 11207  0050C8  6E2F               	movwf	_timer5ReloadVal+1,c	;volatile
 11208                           
 11209                           ;mcc_generated_files/tmr5.c: 89:  PIR8bits.TMR5IF = 0;
 11210  0050CA  0139               	movlb	57	; () banked
 11211  0050CC  9DA8               	bcf	168,6,b	;volatile
 11212                           
 11213                           ; BSR set to: 57
 11214                           ;mcc_generated_files/tmr5.c: 92:  PIE8bits.TMR5IE = 1;
 11215  0050CE  8D98               	bsf	152,6,b	;volatile
 11216                           
 11217                           ; BSR set to: 57
 11218                           ;mcc_generated_files/tmr5.c: 95:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 11219  0050D0  0E76               	movlw	low _TMR5_DefaultInterruptHandler
 11220  0050D2  6EE6               	movwf	postinc1,c
 11221  0050D4  0E58               	movlw	high _TMR5_DefaultInterruptHandler
 11222  0050D6  6EE6               	movwf	postinc1,c
 11223  0050D8  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 11224  0050DA  6EE6               	movwf	postinc1,c
 11225  0050DC  EC9D  F02A         	call	_TMR5_SetInterruptHandler	;wreg free
 11226                           
 11227                           ;mcc_generated_files/tmr5.c: 98:  T5CON = 0x31;
 11228  0050E0  0E31               	movlw	49
 11229  0050E2  6E9A               	movwf	16282,c	;volatile
 11230                           
 11231                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11232  0050E4  0012               	return		;funcret
 11233  0050E6                     __end_of_TMR5_Initialize:
 11234                           	opt callstack 0
 11235                           
 11236 ;; *************** function _TMR5_SetInterruptHandler *****************
 11237 ;; Defined at:
 11238 ;;		line 189 in file "mcc_generated_files/tmr5.c"
 11239 ;; Parameters:    Size  Location     Type
 11240 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 11241 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 11242 ;; Auto vars:     Size  Location     Type
 11243 ;;		None
 11244 ;; Return value:  Size  Location     Type
 11245 ;;                  1  [STACK] void 
 11246 ;; Registers used:
 11247 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11248 ;; Tracked objects:
 11249 ;;		On entry : 3F/39
 11250 ;;		On exit  : 0/0
 11251 ;;		Unchanged: 0/0
 11252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11257 ;;Total ram usage:        0 bytes
 11258 ;; Hardware stack levels used:    1
 11259 ;; Hardware stack levels required when called:    3
 11260 ;; This function calls:
 11261 ;;		Nothing
 11262 ;; This function is called by:
 11263 ;;		_TMR5_Initialize
 11264 ;; This function uses a reentrant model
 11265 ;;
 11266                           
 11267                           	psect	text57
 11268  00553A                     __ptext57:
 11269                           	opt callstack 0
 11270  00553A                     _TMR5_SetInterruptHandler:
 11271                           	opt callstack 25
 11272                           
 11273                           ;mcc_generated_files/tmr5.c: 189: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 190: {;mcc_generated_files/tmr5.c: 191:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 11274                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 11275                           
 11276                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11277                           ;incstack = 0
 11278  00553A  50E1               	movf	fsr1l,w,c
 11279  00553C  0FFD               	addlw	-3
 11280  00553E  6ED9               	movwf	fsr2l,c
 11281  005540  50E2               	movf	fsr1h,w,c
 11282  005542  6EDA               	movwf	fsr2h,c
 11283  005544  0EFF               	movlw	255
 11284  005546  22DA               	addwfc	fsr2h,f,c
 11285  005548  006F FF78  F004    	movff	postinc2,_TMR5_InterruptHandler
 11286  00554E  006F FF78  F005    	movff	postinc2,_TMR5_InterruptHandler+1
 11287  005554  006F FF74  F006    	movff	postdec2,_TMR5_InterruptHandler+2
 11288                           
 11289                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 11290  00555A  52E5               	movf	postdec1,f,c
 11291  00555C  52E5               	movf	postdec1,f,c
 11292  00555E  52E5               	movf	postdec1,f,c
 11293  005560  0012               	return		;funcret
 11294  005562                     __end_of_TMR5_SetInterruptHandler:
 11295                           	opt callstack 0
 11296                           
 11297 ;; *************** function _SPI1_Initialize *****************
 11298 ;; Defined at:
 11299 ;;		line 64 in file "mcc_generated_files/spi1.c"
 11300 ;; Parameters:    Size  Location     Type
 11301 ;;		None
 11302 ;; Auto vars:     Size  Location     Type
 11303 ;;		None
 11304 ;; Return value:  Size  Location     Type
 11305 ;;                  1  [STACK] void 
 11306 ;; Registers used:
 11307 ;;		wreg, status,2
 11308 ;; Tracked objects:
 11309 ;;		On entry : 3F/39
 11310 ;;		On exit  : 3F/3D
 11311 ;;		Unchanged: 0/0
 11312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11317 ;;Total ram usage:        0 bytes
 11318 ;; Hardware stack levels used:    1
 11319 ;; Hardware stack levels required when called:    3
 11320 ;; This function calls:
 11321 ;;		Nothing
 11322 ;; This function is called by:
 11323 ;;		_SYSTEM_Initialize
 11324 ;; This function uses a reentrant model
 11325 ;;
 11326                           
 11327                           	psect	text58
 11328  0058A6                     __ptext58:
 11329                           	opt callstack 0
 11330  0058A6                     _SPI1_Initialize:
 11331                           	opt callstack 26
 11332                           
 11333                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 11334                           
 11335                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11336                           ;incstack = 0
 11337  0058A6  0E40               	movlw	64
 11338  0058A8  013D               	movlb	61	; () banked
 11339  0058AA  6F15               	movwf	21,b	;volatile
 11340                           
 11341                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 11342  0058AC  0E03               	movlw	3
 11343  0058AE  6F16               	movwf	22,b	;volatile
 11344                           
 11345                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 11346  0058B0  0E4F               	movlw	79
 11347  0058B2  6F19               	movwf	25,b	;volatile
 11348                           
 11349                           ; BSR set to: 61
 11350                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 11351  0058B4  6B1C               	clrf	28,b	;volatile
 11352                           
 11353                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 11354  0058B6  0E83               	movlw	131
 11355  0058B8  6F14               	movwf	20,b	;volatile
 11356                           
 11357                           ; BSR set to: 61
 11358                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11359  0058BA  0012               	return		;funcret
 11360  0058BC                     __end_of_SPI1_Initialize:
 11361                           	opt callstack 0
 11362                           
 11363 ;; *************** function _PMD_Initialize *****************
 11364 ;; Defined at:
 11365 ;;		line 88 in file "mcc_generated_files/mcc.c"
 11366 ;; Parameters:    Size  Location     Type
 11367 ;;		None
 11368 ;; Auto vars:     Size  Location     Type
 11369 ;;		None
 11370 ;; Return value:  Size  Location     Type
 11371 ;;                  1  [STACK] void 
 11372 ;; Registers used:
 11373 ;;		None
 11374 ;; Tracked objects:
 11375 ;;		On entry : 3F/39
 11376 ;;		On exit  : 3F/39
 11377 ;;		Unchanged: 0/0
 11378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11383 ;;Total ram usage:        0 bytes
 11384 ;; Hardware stack levels used:    1
 11385 ;; Hardware stack levels required when called:    3
 11386 ;; This function calls:
 11387 ;;		Nothing
 11388 ;; This function is called by:
 11389 ;;		_SYSTEM_Initialize
 11390 ;; This function uses a reentrant model
 11391 ;;
 11392                           
 11393                           	psect	text59
 11394  0058D2                     __ptext59:
 11395                           	opt callstack 0
 11396  0058D2                     _PMD_Initialize:
 11397                           	opt callstack 26
 11398                           
 11399                           ;mcc_generated_files/mcc.c: 91:     PMD0 = 0x00;
 11400                           
 11401                           ; BSR set to: 61
 11402                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11403                           ;incstack = 0
 11404  0058D2  0139               	movlb	57	; () banked
 11405  0058D4  6BC0               	clrf	192,b	;volatile
 11406                           
 11407                           ;mcc_generated_files/mcc.c: 93:     PMD1 = 0x00;
 11408  0058D6  6BC1               	clrf	193,b	;volatile
 11409                           
 11410                           ;mcc_generated_files/mcc.c: 95:     PMD2 = 0x00;
 11411  0058D8  6BC2               	clrf	194,b	;volatile
 11412                           
 11413                           ;mcc_generated_files/mcc.c: 97:     PMD3 = 0x00;
 11414  0058DA  6BC3               	clrf	195,b	;volatile
 11415                           
 11416                           ;mcc_generated_files/mcc.c: 99:     PMD4 = 0x00;
 11417  0058DC  6BC4               	clrf	196,b	;volatile
 11418                           
 11419                           ;mcc_generated_files/mcc.c: 101:     PMD5 = 0x00;
 11420  0058DE  6BC5               	clrf	197,b	;volatile
 11421                           
 11422                           ;mcc_generated_files/mcc.c: 103:     PMD6 = 0x00;
 11423  0058E0  6BC6               	clrf	198,b	;volatile
 11424                           
 11425                           ;mcc_generated_files/mcc.c: 105:     PMD7 = 0x00;
 11426  0058E2  6BC7               	clrf	199,b	;volatile
 11427                           
 11428                           ; BSR set to: 57
 11429                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 11430  0058E4  0012               	return		;funcret
 11431  0058E6                     __end_of_PMD_Initialize:
 11432                           	opt callstack 0
 11433                           
 11434 ;; *************** function _PIN_MANAGER_Initialize *****************
 11435 ;; Defined at:
 11436 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 11437 ;; Parameters:    Size  Location     Type
 11438 ;;		None
 11439 ;; Auto vars:     Size  Location     Type
 11440 ;;		None
 11441 ;; Return value:  Size  Location     Type
 11442 ;;                  1  [STACK] void 
 11443 ;; Registers used:
 11444 ;;		wreg, status,2
 11445 ;; Tracked objects:
 11446 ;;		On entry : 3F/39
 11447 ;;		On exit  : 3F/3A
 11448 ;;		Unchanged: 0/0
 11449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11454 ;;Total ram usage:        0 bytes
 11455 ;; Hardware stack levels used:    1
 11456 ;; Hardware stack levels required when called:    3
 11457 ;; This function calls:
 11458 ;;		Nothing
 11459 ;; This function is called by:
 11460 ;;		_SYSTEM_Initialize
 11461 ;; This function uses a reentrant model
 11462 ;;
 11463                           
 11464                           	psect	text60
 11465  0048A2                     __ptext60:
 11466                           	opt callstack 0
 11467  0048A2                     _PIN_MANAGER_Initialize:
 11468                           	opt callstack 26
 11469                           
 11470                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 11471                           
 11472                           ; BSR set to: 57
 11473                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11474                           ;incstack = 0
 11475  0048A2  0E07               	movlw	7
 11476  0048A4  6EBE               	movwf	16318,c	;volatile
 11477                           
 11478                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 11479  0048A6  6ABD               	clrf	16317,c	;volatile
 11480                           
 11481                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 11482  0048A8  6ABA               	clrf	16314,c	;volatile
 11483                           
 11484                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 11485  0048AA  6ABF               	clrf	16319,c	;volatile
 11486                           
 11487                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 11488  0048AC  6ABB               	clrf	16315,c	;volatile
 11489                           
 11490                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x06;
 11491  0048AE  0E06               	movlw	6
 11492  0048B0  6EBC               	movwf	16316,c	;volatile
 11493                           
 11494                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 11495  0048B2  6AC6               	clrf	16326,c	;volatile
 11496                           
 11497                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0xFF;
 11498  0048B4  68C7               	setf	16327,c	;volatile
 11499                           
 11500                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0x8F;
 11501  0048B6  0E8F               	movlw	143
 11502  0048B8  6EC2               	movwf	16322,c	;volatile
 11503                           
 11504                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 11505  0048BA  0EBF               	movlw	191
 11506  0048BC  6EC3               	movwf	16323,c	;volatile
 11507                           
 11508                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x91;
 11509  0048BE  0E91               	movlw	145
 11510  0048C0  6EC4               	movwf	16324,c	;volatile
 11511                           
 11512                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0xFC;
 11513  0048C2  0EFC               	movlw	252
 11514  0048C4  6EC5               	movwf	16325,c	;volatile
 11515                           
 11516                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0xF0;
 11517  0048C6  0EF0               	movlw	240
 11518  0048C8  013A               	movlb	58	; () banked
 11519  0048CA  6F70               	movwf	112,b	;volatile
 11520                           
 11521                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x01;
 11522  0048CC  0E01               	movlw	1
 11523  0048CE  6F60               	movwf	96,b	;volatile
 11524                           
 11525                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x38;
 11526  0048D0  0E38               	movlw	56
 11527  0048D2  6F50               	movwf	80,b	;volatile
 11528                           
 11529                           ; BSR set to: 58
 11530                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 11531  0048D4  6B80               	clrf	128,b	;volatile
 11532                           
 11533                           ; BSR set to: 58
 11534                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0xFF;
 11535  0048D6  6990               	setf	144,b	;volatile
 11536                           
 11537                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0x8F;
 11538  0048D8  0E8F               	movlw	143
 11539  0048DA  6F40               	movwf	64,b	;volatile
 11540                           
 11541                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 11542  0048DC  0E0C               	movlw	12
 11543  0048DE  6F71               	movwf	113,b	;volatile
 11544                           
 11545                           ; BSR set to: 58
 11546                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x00;
 11547  0048E0  6B91               	clrf	145,b	;volatile
 11548                           
 11549                           ; BSR set to: 58
 11550                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 11551  0048E2  6B81               	clrf	129,b	;volatile
 11552                           
 11553                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 11554  0048E4  0E87               	movlw	135
 11555  0048E6  6F51               	movwf	81,b	;volatile
 11556                           
 11557                           ; BSR set to: 58
 11558                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 11559  0048E8  6B41               	clrf	65,b	;volatile
 11560                           
 11561                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x90;
 11562  0048EA  0E90               	movlw	144
 11563  0048EC  6F61               	movwf	97,b	;volatile
 11564                           
 11565                           ; BSR set to: 58
 11566                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 11567  0048EE  6B82               	clrf	130,b	;volatile
 11568                           
 11569                           ; BSR set to: 58
 11570                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 11571  0048F0  6B92               	clrf	146,b	;volatile
 11572                           
 11573                           ; BSR set to: 58
 11574                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 11575  0048F2  6B42               	clrf	66,b	;volatile
 11576                           
 11577                           ; BSR set to: 58
 11578                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 11579  0048F4  6B52               	clrf	82,b	;volatile
 11580                           
 11581                           ; BSR set to: 58
 11582                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 11583  0048F6  6B62               	clrf	98,b	;volatile
 11584                           
 11585                           ; BSR set to: 58
 11586                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 11587  0048F8  6B72               	clrf	114,b	;volatile
 11588                           
 11589                           ; BSR set to: 58
 11590                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 11591  0048FA  6943               	setf	67,b	;volatile
 11592                           
 11593                           ; BSR set to: 58
 11594                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 11595  0048FC  6953               	setf	83,b	;volatile
 11596                           
 11597                           ; BSR set to: 58
 11598                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 11599  0048FE  6963               	setf	99,b	;volatile
 11600                           
 11601                           ; BSR set to: 58
 11602                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 11603  004900  6973               	setf	115,b	;volatile
 11604                           
 11605                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 11606  004902  0E07               	movlw	7
 11607  004904  6F83               	movwf	131,b	;volatile
 11608                           
 11609                           ; BSR set to: 58
 11610                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 11611  004906  6993               	setf	147,b	;volatile
 11612                           
 11613                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 11614  004908  0E0F               	movlw	15
 11615  00490A  6FE8               	movwf	232,b	;volatile
 11616                           
 11617                           ;mcc_generated_files/pin_manager.c: 127:     RB6PPS = 0x16;
 11618  00490C  0E16               	movlw	22
 11619  00490E  6F0E               	movwf	14,b	;volatile
 11620                           
 11621                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x1E;
 11622  004910  0E1E               	movlw	30
 11623  004912  6F13               	movwf	19,b	;volatile
 11624                           
 11625                           ;mcc_generated_files/pin_manager.c: 129:     INT0PPS = 0x08;
 11626  004914  0E08               	movlw	8
 11627  004916  6FC0               	movwf	192,b	;volatile
 11628                           
 11629                           ;mcc_generated_files/pin_manager.c: 130:     INT2PPS = 0x0A;
 11630  004918  0E0A               	movlw	10
 11631  00491A  6FC2               	movwf	194,b	;volatile
 11632                           
 11633                           ;mcc_generated_files/pin_manager.c: 131:     INT1PPS = 0x09;
 11634  00491C  0E09               	movlw	9
 11635  00491E  6FC1               	movwf	193,b	;volatile
 11636                           
 11637                           ;mcc_generated_files/pin_manager.c: 132:     U1RXPPS = 0x17;
 11638  004920  0E17               	movlw	23
 11639  004922  6FE5               	movwf	229,b	;volatile
 11640                           
 11641                           ;mcc_generated_files/pin_manager.c: 133:     SPI1SCKPPS = 0x13;
 11642  004924  0E13               	movlw	19
 11643  004926  6FDE               	movwf	222,b	;volatile
 11644                           
 11645                           ;mcc_generated_files/pin_manager.c: 134:     RA4PPS = 0x01;
 11646  004928  0E01               	movlw	1
 11647  00492A  6F04               	movwf	4,b	;volatile
 11648                           
 11649                           ;mcc_generated_files/pin_manager.c: 135:     RA5PPS = 0x26;
 11650  00492C  0E26               	movlw	38
 11651  00492E  6F05               	movwf	5,b	;volatile
 11652                           
 11653                           ;mcc_generated_files/pin_manager.c: 136:     RA6PPS = 0x28;
 11654  004930  0E28               	movlw	40
 11655  004932  6F06               	movwf	6,b	;volatile
 11656                           
 11657                           ;mcc_generated_files/pin_manager.c: 137:     RC5PPS = 0x1F;
 11658  004934  0E1F               	movlw	31
 11659  004936  6F15               	movwf	21,b	;volatile
 11660                           
 11661                           ;mcc_generated_files/pin_manager.c: 138:     RC6PPS = 0x13;
 11662  004938  0E13               	movlw	19
 11663  00493A  6F16               	movwf	22,b	;volatile
 11664                           
 11665                           ;mcc_generated_files/pin_manager.c: 139:     SPI1SDIPPS = 0x14;
 11666  00493C  0E14               	movlw	20
 11667  00493E  6FDF               	movwf	223,b	;volatile
 11668                           
 11669                           ; BSR set to: 58
 11670                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 11671  004940  0012               	return		;funcret
 11672  004942                     __end_of_PIN_MANAGER_Initialize:
 11673                           	opt callstack 0
 11674                           
 11675 ;; *************** function _OSCILLATOR_Initialize *****************
 11676 ;; Defined at:
 11677 ;;		line 70 in file "mcc_generated_files/mcc.c"
 11678 ;; Parameters:    Size  Location     Type
 11679 ;;		None
 11680 ;; Auto vars:     Size  Location     Type
 11681 ;;		None
 11682 ;; Return value:  Size  Location     Type
 11683 ;;                  1  [STACK] void 
 11684 ;; Registers used:
 11685 ;;		wreg, status,2
 11686 ;; Tracked objects:
 11687 ;;		On entry : 3F/3A
 11688 ;;		On exit  : 3F/39
 11689 ;;		Unchanged: 0/0
 11690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11695 ;;Total ram usage:        0 bytes
 11696 ;; Hardware stack levels used:    1
 11697 ;; Hardware stack levels required when called:    3
 11698 ;; This function calls:
 11699 ;;		Nothing
 11700 ;; This function is called by:
 11701 ;;		_SYSTEM_Initialize
 11702 ;; This function uses a reentrant model
 11703 ;;
 11704                           
 11705                           	psect	text61
 11706  0058BC                     __ptext61:
 11707                           	opt callstack 0
 11708  0058BC                     _OSCILLATOR_Initialize:
 11709                           	opt callstack 26
 11710                           
 11711                           ;mcc_generated_files/mcc.c: 73:     OSCCON1 = 0x20;
 11712                           
 11713                           ; BSR set to: 58
 11714                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11715                           ;incstack = 0
 11716  0058BC  0E20               	movlw	32
 11717  0058BE  0139               	movlb	57	; () banked
 11718  0058C0  6FD9               	movwf	217,b	;volatile
 11719                           
 11720                           ; BSR set to: 57
 11721                           ;mcc_generated_files/mcc.c: 75:     OSCCON3 = 0x00;
 11722  0058C2  6BDB               	clrf	219,b	;volatile
 11723                           
 11724                           ; BSR set to: 57
 11725                           ;mcc_generated_files/mcc.c: 77:     OSCEN = 0x00;
 11726  0058C4  6BDD               	clrf	221,b	;volatile
 11727                           
 11728                           ;mcc_generated_files/mcc.c: 79:     OSCFRQ = 0x02;
 11729  0058C6  0E02               	movlw	2
 11730  0058C8  6FDF               	movwf	223,b	;volatile
 11731                           
 11732                           ; BSR set to: 57
 11733                           ;mcc_generated_files/mcc.c: 81:     OSCTUNE = 0x00;
 11734  0058CA  6BDE               	clrf	222,b	;volatile
 11735  0058CC                     l194:
 11736                           
 11737                           ; BSR set to: 57
 11738                           ;mcc_generated_files/mcc.c: 83:     while(PLLR == 0)
 11739  0058CC  B1DC               	btfsc	220,0,b	;volatile
 11740  0058CE  0012               	return	
 11741  0058D0  D7FD               	goto	l194
 11742  0058D2                     __end_of_OSCILLATOR_Initialize:
 11743                           	opt callstack 0
 11744                           
 11745 ;; *************** function _NCO1_Initialize *****************
 11746 ;; Defined at:
 11747 ;;		line 58 in file "mcc_generated_files/nco1.c"
 11748 ;; Parameters:    Size  Location     Type
 11749 ;;		None
 11750 ;; Auto vars:     Size  Location     Type
 11751 ;;		None
 11752 ;; Return value:  Size  Location     Type
 11753 ;;                  1  [STACK] void 
 11754 ;; Registers used:
 11755 ;;		wreg, status,2
 11756 ;; Tracked objects:
 11757 ;;		On entry : 0/39
 11758 ;;		On exit  : 3F/3F
 11759 ;;		Unchanged: 0/0
 11760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11765 ;;Total ram usage:        0 bytes
 11766 ;; Hardware stack levels used:    1
 11767 ;; Hardware stack levels required when called:    3
 11768 ;; This function calls:
 11769 ;;		Nothing
 11770 ;; This function is called by:
 11771 ;;		_SYSTEM_Initialize
 11772 ;; This function uses a reentrant model
 11773 ;;
 11774                           
 11775                           	psect	text62
 11776  00580A                     __ptext62:
 11777                           	opt callstack 0
 11778  00580A                     _NCO1_Initialize:
 11779                           	opt callstack 26
 11780                           
 11781                           ;mcc_generated_files/nco1.c: 62:     NCO1CON = 0x00;
 11782                           
 11783                           ; BSR set to: 57
 11784                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11785                           ;incstack = 0
 11786  00580A  013F               	movlb	63	; () banked
 11787  00580C  6B3E               	clrf	62,b	;volatile
 11788                           
 11789                           ;mcc_generated_files/nco1.c: 64:     NCO1CLK = 0x00;
 11790  00580E  6B3F               	clrf	63,b	;volatile
 11791                           
 11792                           ;mcc_generated_files/nco1.c: 66:     NCO1ACCU = 0x00;
 11793  005810  6B3A               	clrf	58,b	;volatile
 11794                           
 11795                           ;mcc_generated_files/nco1.c: 68:     NCO1ACCH = 0x00;
 11796  005812  6B39               	clrf	57,b	;volatile
 11797                           
 11798                           ;mcc_generated_files/nco1.c: 70:     NCO1ACCL = 0x00;
 11799  005814  6B38               	clrf	56,b	;volatile
 11800                           
 11801                           ; BSR set to: 63
 11802                           ;mcc_generated_files/nco1.c: 72:     NCO1INCU = 0x06;
 11803  005816  0E06               	movlw	6
 11804  005818  6F3D               	movwf	61,b	;volatile
 11805                           
 11806                           ;mcc_generated_files/nco1.c: 74:     NCO1INCH = 0xC7;
 11807  00581A  0EC7               	movlw	199
 11808  00581C  6F3C               	movwf	60,b	;volatile
 11809                           
 11810                           ;mcc_generated_files/nco1.c: 76:     NCO1INCL = 0xAE;
 11811  00581E  0EAE               	movlw	174
 11812  005820  6F3B               	movwf	59,b	;volatile
 11813                           
 11814                           ; BSR set to: 63
 11815                           ;mcc_generated_files/nco1.c: 79:     NCO1CONbits.EN = 1;
 11816  005822  8F3E               	bsf	62,7,b	;volatile
 11817                           
 11818                           ; BSR set to: 63
 11819                           ; _NCO1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11820  005824  0012               	return		;funcret
 11821  005826                     __end_of_NCO1_Initialize:
 11822                           	opt callstack 0
 11823                           
 11824 ;; *************** function _INTERRUPT_Initialize *****************
 11825 ;; Defined at:
 11826 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 11827 ;; Parameters:    Size  Location     Type
 11828 ;;		None
 11829 ;; Auto vars:     Size  Location     Type
 11830 ;;  state           1  [STACK] _Bool 
 11831 ;; Return value:  Size  Location     Type
 11832 ;;                  1  [STACK] void 
 11833 ;; Registers used:
 11834 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 11835 ;; Tracked objects:
 11836 ;;		On entry : 0/0
 11837 ;;		On exit  : 3F/39
 11838 ;;		Unchanged: 0/0
 11839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11844 ;;Total ram usage:        0 bytes
 11845 ;; Hardware stack levels used:    1
 11846 ;; Hardware stack levels required when called:    3
 11847 ;; This function calls:
 11848 ;;		Nothing
 11849 ;; This function is called by:
 11850 ;;		_SYSTEM_Initialize
 11851 ;; This function uses a reentrant model
 11852 ;;
 11853                           
 11854                           	psect	text63
 11855  004D90                     __ptext63:
 11856                           	opt callstack 0
 11857  004D90                     _INTERRUPT_Initialize:
 11858                           	opt callstack 0
 11859                           
 11860                           ; BSR set to: 63
 11861                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11862  004D90  52E6               	movf	postinc1,f,c
 11863                           
 11864                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 11865                           
 11866                           ;incstack = 0
 11867  004D92  8AD2               	bsf	16338,5,c	;volatile
 11868                           
 11869                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 11870  004D94  AED2               	btfss	16338,7,c	;volatile
 11871  004D96  D003               	goto	u940
 11872  004D98  6A49               	clrf	btemp+11,c
 11873  004D9A  2A49               	incf	btemp+11,f,c
 11874  004D9C  D001               	goto	u958
 11875  004D9E                     u940:
 11876  004D9E  6A49               	clrf	btemp+11,c
 11877  004DA0                     u958:
 11878                           
 11879                           ;stkvar	_state @ sp[(-1)+0]
 11880  004DA0  0EFF               	movlw	-1
 11881  004DA2  0060  F127  FFE3   	movff	btemp+11,plusw1
 11882                           
 11883                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 11884  004DA8  9ED2               	bcf	16338,7,c	;volatile
 11885                           
 11886                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 11887  004DAA  0E55               	movlw	85
 11888  004DAC  6ED4               	movwf	16340,c	;volatile
 11889                           
 11890                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 11891  004DAE  0EAA               	movlw	170
 11892  004DB0  6ED4               	movwf	16340,c	;volatile
 11893                           
 11894                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 11895  004DB2  90D4               	bcf	16340,0,c	;volatile
 11896                           
 11897                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 11898  004DB4  0138               	movlb	56	; () banked
 11899  004DB6  6B9F               	clrf	159,b	;volatile
 11900                           
 11901                           ; BSR set to: 56
 11902                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 11903  004DB8  6B9E               	clrf	158,b	;volatile
 11904                           
 11905                           ; BSR set to: 56
 11906                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 11907  004DBA  0E08               	movlw	8
 11908  004DBC  6F9D               	movwf	157,b	;volatile
 11909                           
 11910                           ; BSR set to: 56
 11911                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 11912  004DBE  0E55               	movlw	85
 11913  004DC0  6ED4               	movwf	16340,c	;volatile
 11914                           
 11915                           ; BSR set to: 56
 11916                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 11917  004DC2  0EAA               	movlw	170
 11918  004DC4  6ED4               	movwf	16340,c	;volatile
 11919                           
 11920                           ; BSR set to: 56
 11921                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 11922  004DC6  80D4               	bsf	16340,0,c	;volatile
 11923                           
 11924                           ; BSR set to: 56
 11925                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 11926                           ;stkvar	_state @ sp[(-1)+0]
 11927  004DC8  0EFF               	movlw	-1
 11928  004DCA  B0E3               	btfsc	plusw1,0,c
 11929  004DCC  D002               	bra	u965
 11930  004DCE  9ED2               	bcf	16338,7,c	;volatile
 11931  004DD0  D001               	bra	u966
 11932  004DD2                     u965:
 11933  004DD2  8ED2               	bsf	16338,7,c	;volatile
 11934  004DD4                     u966:
 11935                           
 11936                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 11937  004DD4  0139               	movlb	57	; () banked
 11938  004DD6  8782               	bsf	130,3,b	;volatile
 11939                           
 11940                           ; BSR set to: 57
 11941                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 11942  004DD8  8382               	bsf	130,1,b	;volatile
 11943                           
 11944                           ; BSR set to: 57
 11945                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 11946  004DDA  8182               	bsf	130,0,b	;volatile
 11947                           
 11948                           ; BSR set to: 57
 11949                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 11950  004DDC  8582               	bsf	130,2,b	;volatile
 11951                           
 11952                           ; BSR set to: 57
 11953                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 11954  004DDE  8786               	bsf	134,3,b	;volatile
 11955                           
 11956                           ; BSR set to: 57
 11957                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 11958  004DE0  8586               	bsf	134,2,b	;volatile
 11959                           
 11960                           ; BSR set to: 57
 11961                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 11962  004DE2  8983               	bsf	131,4,b	;volatile
 11963                           
 11964                           ; BSR set to: 57
 11965                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 11966  004DE4  8783               	bsf	131,3,b	;volatile
 11967                           
 11968                           ; BSR set to: 57
 11969                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 11970  004DE6  8181               	bsf	129,0,b	;volatile
 11971                           
 11972                           ; BSR set to: 57
 11973                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 11974  004DE8  8185               	bsf	133,0,b	;volatile
 11975                           
 11976                           ; BSR set to: 57
 11977                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR7bits.INT2IP = 1;
 11978  004DEA  8B87               	bsf	135,5,b	;volatile
 11979                           
 11980                           ; BSR set to: 57
 11981                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR9bits.TMR6IP = 1;
 11982  004DEC  8189               	bsf	137,0,b	;volatile
 11983                           
 11984                           ; BSR set to: 57
 11985                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR8bits.TMR5IP = 1;
 11986  004DEE  8D88               	bsf	136,6,b	;volatile
 11987                           
 11988                           ; BSR set to: 57
 11989                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADIP = 1;
 11990  004DF0  8581               	bsf	129,2,b	;volatile
 11991                           
 11992                           ; BSR set to: 57
 11993                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 11994  004DF2  52E5               	movf	postdec1,f,c
 11995  004DF4  0012               	return		;funcret
 11996  004DF6                     __end_of_INTERRUPT_Initialize:
 11997                           	opt callstack 0
 11998                           
 11999 ;; *************** function _EXT_INT_Initialize *****************
 12000 ;; Defined at:
 12001 ;;		line 114 in file "mcc_generated_files/ext_int.c"
 12002 ;; Parameters:    Size  Location     Type
 12003 ;;		None
 12004 ;; Auto vars:     Size  Location     Type
 12005 ;;		None
 12006 ;; Return value:  Size  Location     Type
 12007 ;;                  1  [STACK] void 
 12008 ;; Registers used:
 12009 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12010 ;; Tracked objects:
 12011 ;;		On entry : 3F/3F
 12012 ;;		On exit  : 3F/39
 12013 ;;		Unchanged: 0/0
 12014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12019 ;;Total ram usage:        0 bytes
 12020 ;; Hardware stack levels used:    1
 12021 ;; Hardware stack levels required when called:    4
 12022 ;; This function calls:
 12023 ;;		_INT0_SetInterruptHandler
 12024 ;;		_INT1_SetInterruptHandler
 12025 ;;		_INT2_SetInterruptHandler
 12026 ;; This function is called by:
 12027 ;;		_SYSTEM_Initialize
 12028 ;; This function uses a reentrant model
 12029 ;;
 12030                           
 12031                           	psect	text64
 12032  004FC4                     __ptext64:
 12033                           	opt callstack 0
 12034  004FC4                     _EXT_INT_Initialize:
 12035                           	opt callstack 25
 12036                           
 12037                           ;mcc_generated_files/ext_int.c: 119:     (PIR1bits.INT0IF = 0);
 12038                           
 12039                           ; BSR set to: 57
 12040                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12041                           ;incstack = 0
 12042  004FC4  0139               	movlb	57	; () banked
 12043  004FC6  91A1               	bcf	161,0,b	;volatile
 12044                           
 12045                           ;mcc_generated_files/ext_int.c: 120:     (INTCON0bits.INT0EDG = 0);
 12046  004FC8  90D2               	bcf	16338,0,c	;volatile
 12047                           
 12048                           ; BSR set to: 57
 12049                           ;mcc_generated_files/ext_int.c: 122:     INT0_SetInterruptHandler(INT0_DefaultInterruptH
      +                          andler);
 12050  004FCA  0E82               	movlw	low _INT0_DefaultInterruptHandler
 12051  004FCC  6EE6               	movwf	postinc1,c
 12052  004FCE  0E59               	movlw	high _INT0_DefaultInterruptHandler
 12053  004FD0  6EE6               	movwf	postinc1,c
 12054  004FD2  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 12055  004FD4  6EE6               	movwf	postinc1,c
 12056  004FD6  ECD9  F02A         	call	_INT0_SetInterruptHandler	;wreg free
 12057                           
 12058                           ;mcc_generated_files/ext_int.c: 123:     (PIE1bits.INT0IE = 1);
 12059  004FDA  0139               	movlb	57	; () banked
 12060  004FDC  8191               	bsf	145,0,b	;volatile
 12061                           
 12062                           ; BSR set to: 57
 12063                           ;mcc_generated_files/ext_int.c: 128:     (PIR5bits.INT1IF = 0);
 12064  004FDE  91A5               	bcf	165,0,b	;volatile
 12065                           
 12066                           ; BSR set to: 57
 12067                           ;mcc_generated_files/ext_int.c: 129:     (INTCON0bits.INT1EDG = 0);
 12068  004FE0  92D2               	bcf	16338,1,c	;volatile
 12069                           
 12070                           ;mcc_generated_files/ext_int.c: 131:     INT1_SetInterruptHandler(INT1_DefaultInterruptH
      +                          andler);
 12071  004FE2  0E84               	movlw	low _INT1_DefaultInterruptHandler
 12072  004FE4  6EE6               	movwf	postinc1,c
 12073  004FE6  0E59               	movlw	high _INT1_DefaultInterruptHandler
 12074  004FE8  6EE6               	movwf	postinc1,c
 12075  004FEA  0E00               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 12076  004FEC  6EE6               	movwf	postinc1,c
 12077  004FEE  ECC5  F02A         	call	_INT1_SetInterruptHandler	;wreg free
 12078                           
 12079                           ;mcc_generated_files/ext_int.c: 132:     (PIE5bits.INT1IE = 1);
 12080  004FF2  0139               	movlb	57	; () banked
 12081  004FF4  8195               	bsf	149,0,b	;volatile
 12082                           
 12083                           ; BSR set to: 57
 12084                           ;mcc_generated_files/ext_int.c: 137:     (PIR7bits.INT2IF = 0);
 12085  004FF6  9BA7               	bcf	167,5,b	;volatile
 12086                           
 12087                           ; BSR set to: 57
 12088                           ;mcc_generated_files/ext_int.c: 138:     (INTCON0bits.INT2EDG = 0);
 12089  004FF8  94D2               	bcf	16338,2,c	;volatile
 12090                           
 12091                           ;mcc_generated_files/ext_int.c: 140:     INT2_SetInterruptHandler(INT2_DefaultInterruptH
      +                          andler);
 12092  004FFA  0E86               	movlw	low _INT2_DefaultInterruptHandler
 12093  004FFC  6EE6               	movwf	postinc1,c
 12094  004FFE  0E59               	movlw	high _INT2_DefaultInterruptHandler
 12095  005000  6EE6               	movwf	postinc1,c
 12096  005002  0E00               	movlw	low (_INT2_DefaultInterruptHandler shr (0+16))
 12097  005004  6EE6               	movwf	postinc1,c
 12098  005006  ECB1  F02A         	call	_INT2_SetInterruptHandler	;wreg free
 12099                           
 12100                           ;mcc_generated_files/ext_int.c: 141:     (PIE7bits.INT2IE = 1);
 12101  00500A  0139               	movlb	57	; () banked
 12102  00500C  8B97               	bsf	151,5,b	;volatile
 12103                           
 12104                           ; BSR set to: 57
 12105                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 12106  00500E  0012               	return		;funcret
 12107  005010                     __end_of_EXT_INT_Initialize:
 12108                           	opt callstack 0
 12109                           
 12110 ;; *************** function _INT2_SetInterruptHandler *****************
 12111 ;; Defined at:
 12112 ;;		line 105 in file "mcc_generated_files/ext_int.c"
 12113 ;; Parameters:    Size  Location     Type
 12114 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12115 ;;		 -> INT2_DefaultInterruptHandler(1), 
 12116 ;; Auto vars:     Size  Location     Type
 12117 ;;		None
 12118 ;; Return value:  Size  Location     Type
 12119 ;;                  1  [STACK] void 
 12120 ;; Registers used:
 12121 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12122 ;; Tracked objects:
 12123 ;;		On entry : 3F/39
 12124 ;;		On exit  : 0/0
 12125 ;;		Unchanged: 0/0
 12126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12131 ;;Total ram usage:        0 bytes
 12132 ;; Hardware stack levels used:    1
 12133 ;; Hardware stack levels required when called:    3
 12134 ;; This function calls:
 12135 ;;		Nothing
 12136 ;; This function is called by:
 12137 ;;		_EXT_INT_Initialize
 12138 ;; This function uses a reentrant model
 12139 ;;
 12140                           
 12141                           	psect	text65
 12142  005562                     __ptext65:
 12143                           	opt callstack 0
 12144  005562                     _INT2_SetInterruptHandler:
 12145                           	opt callstack 25
 12146                           
 12147                           ;mcc_generated_files/ext_int.c: 106:     INT2_InterruptHandler = InterruptHandler;
 12148                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12149                           
 12150                           ; BSR set to: 57
 12151                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12152                           ;incstack = 0
 12153  005562  50E1               	movf	fsr1l,w,c
 12154  005564  0FFD               	addlw	-3
 12155  005566  6ED9               	movwf	fsr2l,c
 12156  005568  50E2               	movf	fsr1h,w,c
 12157  00556A  6EDA               	movwf	fsr2h,c
 12158  00556C  0EFF               	movlw	255
 12159  00556E  22DA               	addwfc	fsr2h,f,c
 12160  005570  006F FF78  F019    	movff	postinc2,_INT2_InterruptHandler
 12161  005576  006F FF78  F01A    	movff	postinc2,_INT2_InterruptHandler+1
 12162  00557C  006F FF74  F01B    	movff	postdec2,_INT2_InterruptHandler+2
 12163                           
 12164                           ; _INT2_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 12165  005582  52E5               	movf	postdec1,f,c
 12166  005584  52E5               	movf	postdec1,f,c
 12167  005586  52E5               	movf	postdec1,f,c
 12168  005588  0012               	return		;funcret
 12169  00558A                     __end_of_INT2_SetInterruptHandler:
 12170                           	opt callstack 0
 12171                           
 12172 ;; *************** function _INT1_SetInterruptHandler *****************
 12173 ;; Defined at:
 12174 ;;		line 79 in file "mcc_generated_files/ext_int.c"
 12175 ;; Parameters:    Size  Location     Type
 12176 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12177 ;;		 -> INT1_DefaultInterruptHandler(1), 
 12178 ;; Auto vars:     Size  Location     Type
 12179 ;;		None
 12180 ;; Return value:  Size  Location     Type
 12181 ;;                  1  [STACK] void 
 12182 ;; Registers used:
 12183 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12184 ;; Tracked objects:
 12185 ;;		On entry : 3F/39
 12186 ;;		On exit  : 0/0
 12187 ;;		Unchanged: 0/0
 12188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12193 ;;Total ram usage:        0 bytes
 12194 ;; Hardware stack levels used:    1
 12195 ;; Hardware stack levels required when called:    3
 12196 ;; This function calls:
 12197 ;;		Nothing
 12198 ;; This function is called by:
 12199 ;;		_EXT_INT_Initialize
 12200 ;; This function uses a reentrant model
 12201 ;;
 12202                           
 12203                           	psect	text66
 12204  00558A                     __ptext66:
 12205                           	opt callstack 0
 12206  00558A                     _INT1_SetInterruptHandler:
 12207                           	opt callstack 25
 12208                           
 12209                           ;mcc_generated_files/ext_int.c: 80:     INT1_InterruptHandler = InterruptHandler;
 12210                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12211                           
 12212                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12213                           ;incstack = 0
 12214  00558A  50E1               	movf	fsr1l,w,c
 12215  00558C  0FFD               	addlw	-3
 12216  00558E  6ED9               	movwf	fsr2l,c
 12217  005590  50E2               	movf	fsr1h,w,c
 12218  005592  6EDA               	movwf	fsr2h,c
 12219  005594  0EFF               	movlw	255
 12220  005596  22DA               	addwfc	fsr2h,f,c
 12221  005598  006F FF78  F01C    	movff	postinc2,_INT1_InterruptHandler
 12222  00559E  006F FF78  F01D    	movff	postinc2,_INT1_InterruptHandler+1
 12223  0055A4  006F FF74  F01E    	movff	postdec2,_INT1_InterruptHandler+2
 12224                           
 12225                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 12226  0055AA  52E5               	movf	postdec1,f,c
 12227  0055AC  52E5               	movf	postdec1,f,c
 12228  0055AE  52E5               	movf	postdec1,f,c
 12229  0055B0  0012               	return		;funcret
 12230  0055B2                     __end_of_INT1_SetInterruptHandler:
 12231                           	opt callstack 0
 12232                           
 12233 ;; *************** function _INT0_SetInterruptHandler *****************
 12234 ;; Defined at:
 12235 ;;		line 53 in file "mcc_generated_files/ext_int.c"
 12236 ;; Parameters:    Size  Location     Type
 12237 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12238 ;;		 -> INT0_DefaultInterruptHandler(1), 
 12239 ;; Auto vars:     Size  Location     Type
 12240 ;;		None
 12241 ;; Return value:  Size  Location     Type
 12242 ;;                  1  [STACK] void 
 12243 ;; Registers used:
 12244 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12245 ;; Tracked objects:
 12246 ;;		On entry : 3F/39
 12247 ;;		On exit  : 0/0
 12248 ;;		Unchanged: 0/0
 12249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12254 ;;Total ram usage:        0 bytes
 12255 ;; Hardware stack levels used:    1
 12256 ;; Hardware stack levels required when called:    3
 12257 ;; This function calls:
 12258 ;;		Nothing
 12259 ;; This function is called by:
 12260 ;;		_EXT_INT_Initialize
 12261 ;; This function uses a reentrant model
 12262 ;;
 12263                           
 12264                           	psect	text67
 12265  0055B2                     __ptext67:
 12266                           	opt callstack 0
 12267  0055B2                     _INT0_SetInterruptHandler:
 12268                           	opt callstack 25
 12269                           
 12270                           ;mcc_generated_files/ext_int.c: 54:     INT0_InterruptHandler = InterruptHandler;
 12271                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12272                           
 12273                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12274                           ;incstack = 0
 12275  0055B2  50E1               	movf	fsr1l,w,c
 12276  0055B4  0FFD               	addlw	-3
 12277  0055B6  6ED9               	movwf	fsr2l,c
 12278  0055B8  50E2               	movf	fsr1h,w,c
 12279  0055BA  6EDA               	movwf	fsr2h,c
 12280  0055BC  0EFF               	movlw	255
 12281  0055BE  22DA               	addwfc	fsr2h,f,c
 12282  0055C0  006F FF78  F01F    	movff	postinc2,_INT0_InterruptHandler
 12283  0055C6  006F FF78  F020    	movff	postinc2,_INT0_InterruptHandler+1
 12284  0055CC  006F FF74  F021    	movff	postdec2,_INT0_InterruptHandler+2
 12285                           
 12286                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 12287  0055D2  52E5               	movf	postdec1,f,c
 12288  0055D4  52E5               	movf	postdec1,f,c
 12289  0055D6  52E5               	movf	postdec1,f,c
 12290  0055D8  0012               	return		;funcret
 12291  0055DA                     __end_of_INT0_SetInterruptHandler:
 12292                           	opt callstack 0
 12293                           
 12294 ;; *************** function _DSM_Initialize *****************
 12295 ;; Defined at:
 12296 ;;		line 58 in file "mcc_generated_files/dsm.c"
 12297 ;; Parameters:    Size  Location     Type
 12298 ;;		None
 12299 ;; Auto vars:     Size  Location     Type
 12300 ;;		None
 12301 ;; Return value:  Size  Location     Type
 12302 ;;                  1  [STACK] void 
 12303 ;; Registers used:
 12304 ;;		wreg, status,2
 12305 ;; Tracked objects:
 12306 ;;		On entry : 0/3C
 12307 ;;		On exit  : 3F/3C
 12308 ;;		Unchanged: 0/0
 12309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12314 ;;Total ram usage:        0 bytes
 12315 ;; Hardware stack levels used:    1
 12316 ;; Hardware stack levels required when called:    3
 12317 ;; This function calls:
 12318 ;;		Nothing
 12319 ;; This function is called by:
 12320 ;;		_SYSTEM_Initialize
 12321 ;; This function uses a reentrant model
 12322 ;;
 12323                           
 12324                           	psect	text68
 12325  005826                     __ptext68:
 12326                           	opt callstack 0
 12327  005826                     _DSM_Initialize:
 12328                           	opt callstack 26
 12329                           
 12330                           ;mcc_generated_files/dsm.c: 63:     MD1CON0bits.MD1OPOL = 0;
 12331                           
 12332                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12333                           ;incstack = 0
 12334  005826  013C               	movlb	60	; () banked
 12335  005828  99FA               	bcf	250,4,b	;volatile
 12336                           
 12337                           ;mcc_generated_files/dsm.c: 66:     MD1CON1bits.MD1CLSYNC = 1;
 12338  00582A  81FB               	bsf	251,0,b	;volatile
 12339                           
 12340                           ;mcc_generated_files/dsm.c: 69:     MD1CON1bits.MD1CLPOL = 0;
 12341  00582C  93FB               	bcf	251,1,b	;volatile
 12342                           
 12343                           ;mcc_generated_files/dsm.c: 72:     MD1CON1bits.MD1CHSYNC = 1;
 12344  00582E  89FB               	bsf	251,4,b	;volatile
 12345                           
 12346                           ;mcc_generated_files/dsm.c: 75:     MD1CON1bits.MD1CHPOL = 0;
 12347  005830  9BFB               	bcf	251,5,b	;volatile
 12348                           
 12349                           ; BSR set to: 60
 12350                           ;mcc_generated_files/dsm.c: 78:     MD1SRC = 0x13;
 12351  005832  0E13               	movlw	19
 12352  005834  6FFC               	movwf	252,b	;volatile
 12353                           
 12354                           ;mcc_generated_files/dsm.c: 81:     MD1CARH = 0x0E;
 12355  005836  0E0E               	movlw	14
 12356  005838  6FFE               	movwf	254,b	;volatile
 12357                           
 12358                           ;mcc_generated_files/dsm.c: 84:     MD1CARL = 0x04;
 12359  00583A  0E04               	movlw	4
 12360  00583C  6FFD               	movwf	253,b	;volatile
 12361                           
 12362                           ; BSR set to: 60
 12363                           ;mcc_generated_files/dsm.c: 87:     MD1CON0bits.MD1EN = 1;
 12364  00583E  8FFA               	bsf	250,7,b	;volatile
 12365                           
 12366                           ; BSR set to: 60
 12367                           ; _DSM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 12368  005840  0012               	return		;funcret
 12369  005842                     __end_of_DSM_Initialize:
 12370                           	opt callstack 0
 12371                           
 12372 ;; *************** function _DMA1_Initialize *****************
 12373 ;; Defined at:
 12374 ;;		line 86 in file "mcc_generated_files/dma1.c"
 12375 ;; Parameters:    Size  Location     Type
 12376 ;;		None
 12377 ;; Auto vars:     Size  Location     Type
 12378 ;;		None
 12379 ;; Return value:  Size  Location     Type
 12380 ;;                  1  [STACK] void 
 12381 ;; Registers used:
 12382 ;;		wreg, status,2
 12383 ;; Tracked objects:
 12384 ;;		On entry : 3F/3D
 12385 ;;		On exit  : 3F/3B
 12386 ;;		Unchanged: 0/0
 12387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12392 ;;Total ram usage:        0 bytes
 12393 ;; Hardware stack levels used:    1
 12394 ;; Hardware stack levels required when called:    3
 12395 ;; This function calls:
 12396 ;;		Nothing
 12397 ;; This function is called by:
 12398 ;;		_SYSTEM_Initialize
 12399 ;; This function uses a reentrant model
 12400 ;;
 12401                           
 12402                           	psect	text69
 12403  004D26                     __ptext69:
 12404                           	opt callstack 0
 12405  004D26                     _DMA1_Initialize:
 12406                           	opt callstack 26
 12407                           
 12408                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 12409                           
 12410                           ; BSR set to: 60
 12411                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12412                           ;incstack = 0
 12413  004D26  0E00               	movlw	0
 12414  004D28  013B               	movlb	59	; () banked
 12415  004D2A  6FF9               	movwf	249,b	;volatile
 12416  004D2C  0E10               	movlw	16
 12417  004D2E  6FFA               	movwf	250,b	;volatile
 12418  004D30  0E00               	movlw	0
 12419  004D32  6FFB               	movwf	251,b	;volatile
 12420                           
 12421                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 12422  004D34  0E3D               	movlw	61
 12423  004D36  6FF1               	movwf	241,b	;volatile
 12424  004D38  0E11               	movlw	17
 12425  004D3A  6FF0               	movwf	240,b	;volatile
 12426                           
 12427                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 12428  004D3C  0E03               	movlw	3
 12429  004D3E  6FFD               	movwf	253,b	;volatile
 12430                           
 12431                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 12432  004D40  0E00               	movlw	0
 12433  004D42  6FF8               	movwf	248,b	;volatile
 12434  004D44  0E01               	movlw	1
 12435  004D46  6FF7               	movwf	247,b	;volatile
 12436                           
 12437                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 12438  004D48  0E00               	movlw	0
 12439  004D4A  6FEF               	movwf	239,b	;volatile
 12440  004D4C  0E01               	movlw	1
 12441  004D4E  6FEE               	movwf	238,b	;volatile
 12442                           
 12443                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 12444  004D50  0E15               	movlw	21
 12445  004D52  6FFF               	movwf	255,b	;volatile
 12446                           
 12447                           ; BSR set to: 59
 12448                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 12449  004D54  6BFE               	clrf	254,b	;volatile
 12450                           
 12451                           ; BSR set to: 59
 12452                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 12453  004D56  0139               	movlb	57	; () banked
 12454  004D58  93A2               	bcf	162,1,b	;volatile
 12455                           
 12456                           ; BSR set to: 57
 12457                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 12458  004D5A  91A2               	bcf	162,0,b	;volatile
 12459                           
 12460                           ; BSR set to: 57
 12461                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 12462  004D5C  97A2               	bcf	162,3,b	;volatile
 12463                           
 12464                           ; BSR set to: 57
 12465                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 12466  004D5E  95A2               	bcf	162,2,b	;volatile
 12467                           
 12468                           ; BSR set to: 57
 12469                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 12470  004D60  8392               	bsf	146,1,b	;volatile
 12471                           
 12472                           ; BSR set to: 57
 12473                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 12474  004D62  8192               	bsf	146,0,b	;volatile
 12475                           
 12476                           ; BSR set to: 57
 12477                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 12478  004D64  8792               	bsf	146,3,b	;volatile
 12479                           
 12480                           ; BSR set to: 57
 12481                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 12482  004D66  8592               	bsf	146,2,b	;volatile
 12483                           
 12484                           ; BSR set to: 57
 12485                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 12486  004D68  6BF1               	clrf	241,b	;volatile
 12487                           
 12488                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 12489  004D6A  0E01               	movlw	1
 12490  004D6C  6FF2               	movwf	242,b	;volatile
 12491                           
 12492                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 12493  004D6E  0E04               	movlw	4
 12494  004D70  6FF3               	movwf	243,b	;volatile
 12495                           
 12496                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 12497  004D72  0E02               	movlw	2
 12498  004D74  6FF4               	movwf	244,b	;volatile
 12499                           
 12500                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 12501  004D76  0E03               	movlw	3
 12502  004D78  6FF7               	movwf	247,b	;volatile
 12503  004D7A  9ED2               	bcf	16338,7,c	;# 
 12504  004D7C  0139               	banksel	14831	;# 
 12505  004D7E  0E55               	movlw	85	;# 
 12506  004D80  6FEF               	movwf	14831,b	;# 
 12507  004D82  0EAA               	movlw	170	;# 
 12508  004D84  6FEF               	movwf	14831,b	;# 
 12509  004D86  81EF               	bsf	14831,0,b	;# 
 12510  004D88  8ED2               	bsf	16338,7,c	;# 
 12511                           
 12512                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 12513  004D8A  013B               	movlb	59	; () banked
 12514  004D8C  6BFC               	clrf	252,b	;volatile
 12515                           
 12516                           ; BSR set to: 59
 12517                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12518  004D8E  0012               	return		;funcret
 12519  004D90                     __end_of_DMA1_Initialize:
 12520                           	opt callstack 0
 12521                           
 12522 ;; *************** function _CLKREF_Initialize *****************
 12523 ;; Defined at:
 12524 ;;		line 58 in file "mcc_generated_files/clkref.c"
 12525 ;; Parameters:    Size  Location     Type
 12526 ;;		None
 12527 ;; Auto vars:     Size  Location     Type
 12528 ;;		None
 12529 ;; Return value:  Size  Location     Type
 12530 ;;                  1  [STACK] void 
 12531 ;; Registers used:
 12532 ;;		wreg, status,2
 12533 ;; Tracked objects:
 12534 ;;		On entry : 3F/3B
 12535 ;;		On exit  : 3F/3C
 12536 ;;		Unchanged: 0/0
 12537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12542 ;;Total ram usage:        0 bytes
 12543 ;; Hardware stack levels used:    1
 12544 ;; Hardware stack levels required when called:    3
 12545 ;; This function calls:
 12546 ;;		Nothing
 12547 ;; This function is called by:
 12548 ;;		_SYSTEM_Initialize
 12549 ;; This function uses a reentrant model
 12550 ;;
 12551                           
 12552                           	psect	text70
 12553  005932                     __ptext70:
 12554                           	opt callstack 0
 12555  005932                     _CLKREF_Initialize:
 12556                           	opt callstack 26
 12557                           
 12558                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 12559                           
 12560                           ; BSR set to: 59
 12561                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12562                           ;incstack = 0
 12563  005932  013C               	movlb	60	; () banked
 12564  005934  6BE6               	clrf	230,b	;volatile
 12565                           
 12566                           ; BSR set to: 60
 12567                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 12568  005936  0E94               	movlw	148
 12569  005938  6FE5               	movwf	229,b	;volatile
 12570                           
 12571                           ; BSR set to: 60
 12572                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 12573  00593A  0012               	return		;funcret
 12574  00593C                     __end_of_CLKREF_Initialize:
 12575                           	opt callstack 0
 12576                           
 12577 ;; *************** function _CLC1_Initialize *****************
 12578 ;; Defined at:
 12579 ;;		line 58 in file "mcc_generated_files/clc1.c"
 12580 ;; Parameters:    Size  Location     Type
 12581 ;;		None
 12582 ;; Auto vars:     Size  Location     Type
 12583 ;;		None
 12584 ;; Return value:  Size  Location     Type
 12585 ;;                  1  [STACK] void 
 12586 ;; Registers used:
 12587 ;;		wreg, status,2
 12588 ;; Tracked objects:
 12589 ;;		On entry : 0/39
 12590 ;;		On exit  : 3F/3C
 12591 ;;		Unchanged: 0/0
 12592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12597 ;;Total ram usage:        0 bytes
 12598 ;; Hardware stack levels used:    1
 12599 ;; Hardware stack levels required when called:    3
 12600 ;; This function calls:
 12601 ;;		Nothing
 12602 ;; This function is called by:
 12603 ;;		_SYSTEM_Initialize
 12604 ;; This function uses a reentrant model
 12605 ;;
 12606                           
 12607                           	psect	text71
 12608  0056C4                     __ptext71:
 12609                           	opt callstack 0
 12610  0056C4                     _CLC1_Initialize:
 12611                           	opt callstack 26
 12612                           
 12613                           ;mcc_generated_files/clc1.c: 63:     CLC1POL = 0x00;
 12614                           
 12615                           ; BSR set to: 60
 12616                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12617                           ;incstack = 0
 12618  0056C4  013C               	movlb	60	; () banked
 12619  0056C6  6B75               	clrf	117,b	;volatile
 12620                           
 12621                           ; BSR set to: 60
 12622                           ;mcc_generated_files/clc1.c: 65:     CLC1SEL0 = 0x04;
 12623  0056C8  0E04               	movlw	4
 12624  0056CA  6F76               	movwf	118,b	;volatile
 12625                           
 12626                           ;mcc_generated_files/clc1.c: 67:     CLC1SEL1 = 0x04;
 12627  0056CC  0E04               	movlw	4
 12628  0056CE  6F77               	movwf	119,b	;volatile
 12629                           
 12630                           ;mcc_generated_files/clc1.c: 69:     CLC1SEL2 = 0x04;
 12631  0056D0  0E04               	movlw	4
 12632  0056D2  6F78               	movwf	120,b	;volatile
 12633                           
 12634                           ;mcc_generated_files/clc1.c: 71:     CLC1SEL3 = 0x04;
 12635  0056D4  0E04               	movlw	4
 12636  0056D6  6F79               	movwf	121,b	;volatile
 12637                           
 12638                           ; BSR set to: 60
 12639                           ;mcc_generated_files/clc1.c: 73:     CLC1GLS0 = 0x00;
 12640  0056D8  6B7A               	clrf	122,b	;volatile
 12641                           
 12642                           ; BSR set to: 60
 12643                           ;mcc_generated_files/clc1.c: 75:     CLC1GLS1 = 0x00;
 12644  0056DA  6B7B               	clrf	123,b	;volatile
 12645                           
 12646                           ; BSR set to: 60
 12647                           ;mcc_generated_files/clc1.c: 77:     CLC1GLS2 = 0x00;
 12648  0056DC  6B7C               	clrf	124,b	;volatile
 12649                           
 12650                           ; BSR set to: 60
 12651                           ;mcc_generated_files/clc1.c: 79:     CLC1GLS3 = 0x00;
 12652  0056DE  6B7D               	clrf	125,b	;volatile
 12653                           
 12654                           ;mcc_generated_files/clc1.c: 81:     CLC1CON = 0x81;
 12655  0056E0  0E81               	movlw	129
 12656  0056E2  6F74               	movwf	116,b	;volatile
 12657                           
 12658                           ; BSR set to: 60
 12659                           ; _CLC1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12660  0056E4  0012               	return		;funcret
 12661  0056E6                     __end_of_CLC1_Initialize:
 12662                           	opt callstack 0
 12663                           
 12664 ;; *************** function _ADCC_Initialize *****************
 12665 ;; Defined at:
 12666 ;;		line 64 in file "mcc_generated_files/adcc.c"
 12667 ;; Parameters:    Size  Location     Type
 12668 ;;		None
 12669 ;; Auto vars:     Size  Location     Type
 12670 ;;		None
 12671 ;; Return value:  Size  Location     Type
 12672 ;;                  1  [STACK] void 
 12673 ;; Registers used:
 12674 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 12675 ;; Tracked objects:
 12676 ;;		On entry : 3F/39
 12677 ;;		On exit  : 0/0
 12678 ;;		Unchanged: 0/0
 12679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12684 ;;Total ram usage:        0 bytes
 12685 ;; Hardware stack levels used:    1
 12686 ;; Hardware stack levels required when called:    4
 12687 ;; This function calls:
 12688 ;;		_ADCC_SetADIInterruptHandler
 12689 ;; This function is called by:
 12690 ;;		_SYSTEM_Initialize
 12691 ;; This function uses a reentrant model
 12692 ;;
 12693                           
 12694                           	psect	text72
 12695  005010                     __ptext72:
 12696                           	opt callstack 0
 12697  005010                     _ADCC_Initialize:
 12698                           	opt callstack 25
 12699                           
 12700                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 12701                           
 12702                           ; BSR set to: 60
 12703                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12704                           ;incstack = 0
 12705  005010  013E               	movlb	62	; () banked
 12706  005012  6BDE               	clrf	222,b	;volatile
 12707                           
 12708                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 12709  005014  6BDF               	clrf	223,b	;volatile
 12710                           
 12711                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 12712  005016  6BE0               	clrf	224,b	;volatile
 12713                           
 12714                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 12715  005018  6BE1               	clrf	225,b	;volatile
 12716                           
 12717                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 12718  00501A  6BE4               	clrf	228,b	;volatile
 12719                           
 12720                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 12721  00501C  6BE5               	clrf	229,b	;volatile
 12722                           
 12723                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 12724  00501E  6BEA               	clrf	234,b	;volatile
 12725                           
 12726                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 12727  005020  6BEC               	clrf	236,b	;volatile
 12728                           
 12729                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 12730  005022  6BF1               	clrf	241,b	;volatile
 12731                           
 12732                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 12733  005024  6BF3               	clrf	243,b	;volatile
 12734                           
 12735                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 12736  005026  6BF4               	clrf	244,b	;volatile
 12737                           
 12738                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 12739  005028  6BF5               	clrf	245,b	;volatile
 12740                           
 12741                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 12742  00502A  6BF6               	clrf	246,b	;volatile
 12743                           
 12744                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 12745  00502C  6BF7               	clrf	247,b	;volatile
 12746                           
 12747                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 12748  00502E  6BF9               	clrf	249,b	;volatile
 12749                           
 12750                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 12751  005030  6BFA               	clrf	250,b	;volatile
 12752                           
 12753                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x00;
 12754  005032  6BFB               	clrf	251,b	;volatile
 12755                           
 12756                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 12757  005034  6BFC               	clrf	252,b	;volatile
 12758                           
 12759                           ; BSR set to: 62
 12760                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 12761  005036  0E02               	movlw	2
 12762  005038  6FFD               	movwf	253,b	;volatile
 12763                           
 12764                           ; BSR set to: 62
 12765                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 12766  00503A  6BFE               	clrf	254,b	;volatile
 12767                           
 12768                           ; BSR set to: 62
 12769                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 12770  00503C  6BFF               	clrf	255,b	;volatile
 12771                           
 12772                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x94;
 12773  00503E  0E94               	movlw	148
 12774  005040  6FF8               	movwf	248,b	;volatile
 12775                           
 12776                           ; BSR set to: 62
 12777                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 12778  005042  0139               	movlb	57	; () banked
 12779  005044  95A1               	bcf	161,2,b	;volatile
 12780                           
 12781                           ; BSR set to: 57
 12782                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 12783  005046  8591               	bsf	145,2,b	;volatile
 12784                           
 12785                           ; BSR set to: 57
 12786                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 12787  005048  0E88               	movlw	low _ADCC_DefaultInterruptHandler
 12788  00504A  6EE6               	movwf	postinc1,c
 12789  00504C  0E59               	movlw	high _ADCC_DefaultInterruptHandler
 12790  00504E  6EE6               	movwf	postinc1,c
 12791  005050  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 12792  005052  6EE6               	movwf	postinc1,c
 12793  005054  ECED  F02A         	call	_ADCC_SetADIInterruptHandler	;wreg free
 12794                           
 12795                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12796  005058  0012               	return		;funcret
 12797  00505A                     __end_of_ADCC_Initialize:
 12798                           	opt callstack 0
 12799                           
 12800 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 12801 ;; Defined at:
 12802 ;;		line 316 in file "mcc_generated_files/adcc.c"
 12803 ;; Parameters:    Size  Location     Type
 12804 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12805 ;;		 -> ADCC_DefaultInterruptHandler(1), 
 12806 ;; Auto vars:     Size  Location     Type
 12807 ;;		None
 12808 ;; Return value:  Size  Location     Type
 12809 ;;                  1  [STACK] void 
 12810 ;; Registers used:
 12811 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12812 ;; Tracked objects:
 12813 ;;		On entry : 3F/39
 12814 ;;		On exit  : 0/0
 12815 ;;		Unchanged: 0/0
 12816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12821 ;;Total ram usage:        0 bytes
 12822 ;; Hardware stack levels used:    1
 12823 ;; Hardware stack levels required when called:    3
 12824 ;; This function calls:
 12825 ;;		Nothing
 12826 ;; This function is called by:
 12827 ;;		_ADCC_Initialize
 12828 ;; This function uses a reentrant model
 12829 ;;
 12830                           
 12831                           	psect	text73
 12832  0055DA                     __ptext73:
 12833                           	opt callstack 0
 12834  0055DA                     _ADCC_SetADIInterruptHandler:
 12835                           	opt callstack 25
 12836                           
 12837                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 12838                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12839                           
 12840                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12841                           ;incstack = 0
 12842  0055DA  50E1               	movf	fsr1l,w,c
 12843  0055DC  0FFD               	addlw	-3
 12844  0055DE  6ED9               	movwf	fsr2l,c
 12845  0055E0  50E2               	movf	fsr1h,w,c
 12846  0055E2  6EDA               	movwf	fsr2h,c
 12847  0055E4  0EFF               	movlw	255
 12848  0055E6  22DA               	addwfc	fsr2h,f,c
 12849  0055E8  006F FF78  F00A    	movff	postinc2,_ADCC_ADI_InterruptHandler
 12850  0055EE  006F FF78  F00B    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 12851  0055F4  006F FF74  F00C    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 12852                           
 12853                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 12854  0055FA  52E5               	movf	postdec1,f,c
 12855  0055FC  52E5               	movf	postdec1,f,c
 12856  0055FE  52E5               	movf	postdec1,f,c
 12857  005600  0012               	return		;funcret
 12858  005602                     __end_of_ADCC_SetADIInterruptHandler:
 12859                           	opt callstack 0
 12860                           
 12861 ;; *************** function _INT0_ISR *****************
 12862 ;; Defined at:
 12863 ;;		line 35 in file "mcc_generated_files/ext_int.c"
 12864 ;; Parameters:    Size  Location     Type
 12865 ;;		None
 12866 ;; Auto vars:     Size  Location     Type
 12867 ;;		None
 12868 ;; Return value:  Size  Location     Type
 12869 ;;                  1    wreg      void 
 12870 ;; Registers used:
 12871 ;;		wreg, status,2, status,0, pclath, tosl
 12872 ;; Tracked objects:
 12873 ;;		On entry : 0/0
 12874 ;;		On exit  : 0/0
 12875 ;;		Unchanged: 0/0
 12876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12881 ;;Total ram usage:        0 bytes
 12882 ;; Hardware stack levels used:    1
 12883 ;; Hardware stack levels required when called:    2
 12884 ;; This function calls:
 12885 ;;		_INT0_CallBack
 12886 ;; This function is called by:
 12887 ;;		Interrupt level 2
 12888 ;; This function uses a non-reentrant model
 12889 ;;
 12890                           
 12891                           	psect	text74
 12892  0058F4                     __ptext74:
 12893                           	opt callstack 0
 12894  0058F4                     _INT0_ISR:
 12895                           	opt callstack 17
 12896                           
 12897                           ;incstack = 0
 12898  0058F4  EE13  F150         	lfsr	1,___inthi_sp
 12899                           
 12900                           ;mcc_generated_files/ext_int.c: 37:     (PIR1bits.INT0IF = 0);
 12901  0058F8  0139               	movlb	57	; () banked
 12902  0058FA  91A1               	bcf	161,0,b	;volatile
 12903                           
 12904                           ; BSR set to: 57
 12905                           ;mcc_generated_files/ext_int.c: 40:     INT0_CallBack();
 12906  0058FC  EC73  F02B         	call	_INT0_CallBack	;wreg free
 12907  005900  0011               	retfie		f
 12908  005902                     __end_of_INT0_ISR:
 12909                           	opt callstack 0
 12910                           
 12911 ;; *************** function _INT0_CallBack *****************
 12912 ;; Defined at:
 12913 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 12914 ;; Parameters:    Size  Location     Type
 12915 ;;		None
 12916 ;; Auto vars:     Size  Location     Type
 12917 ;;		None
 12918 ;; Return value:  Size  Location     Type
 12919 ;;                  1  [STACK] void 
 12920 ;; Registers used:
 12921 ;;		wreg, status,2, status,0, pclath, tosl
 12922 ;; Tracked objects:
 12923 ;;		On entry : 3F/39
 12924 ;;		On exit  : 0/0
 12925 ;;		Unchanged: 0/0
 12926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12931 ;;Total ram usage:        0 bytes
 12932 ;; Hardware stack levels used:    1
 12933 ;; Hardware stack levels required when called:    1
 12934 ;; This function calls:
 12935 ;;		Absolute function
 12936 ;;		_INT0_DefaultInterruptHandler
 12937 ;; This function is called by:
 12938 ;;		_INT0_ISR
 12939 ;; This function uses a reentrant model
 12940 ;;
 12941                           
 12942                           	psect	text75
 12943  0056E6                     __ptext75:
 12944                           	opt callstack 0
 12945  0056E6                     _INT0_CallBack:
 12946                           	opt callstack 17
 12947                           
 12948                           ;mcc_generated_files/ext_int.c: 47:     if(INT0_InterruptHandler)
 12949                           
 12950                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12951                           ;incstack = 0
 12952  0056E6  501F               	movf	_INT0_InterruptHandler,w,c
 12953  0056E8  1020               	iorwf	_INT0_InterruptHandler+1,w,c
 12954  0056EA  1021               	iorwf	_INT0_InterruptHandler+2,w,c
 12955  0056EC  B4D8               	btfsc	status,2,c
 12956  0056EE  0012               	return	
 12957                           
 12958                           ;mcc_generated_files/ext_int.c: 48:     {;mcc_generated_files/ext_int.c: 49:         INT
      +                          0_InterruptHandler();
 12959  0056F0  D801               	call	u111_48
 12960  0056F2  0012               	return	
 12961  0056F4                     u111_48:
 12962  0056F4  0005               	push	
 12963  0056F6  6EFA               	movwf	pclath,c
 12964  0056F8  501F               	movf	_INT0_InterruptHandler,w,c
 12965  0056FA  6EFD               	movwf	tosl,c
 12966  0056FC  5020               	movf	_INT0_InterruptHandler+1,w,c
 12967  0056FE  6EFE               	movwf	tosh,c
 12968  005700  5021               	movf	_INT0_InterruptHandler+2,w,c
 12969  005702  6EFF               	movwf	tosu,c
 12970  005704  50FA               	movf	pclath,w,c
 12971  005706  0012               	return		;indir
 12972  005708                     __end_of_INT0_CallBack:
 12973                           	opt callstack 0
 12974                           
 12975 ;; *************** function _INT0_DefaultInterruptHandler *****************
 12976 ;; Defined at:
 12977 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 12978 ;; Parameters:    Size  Location     Type
 12979 ;;		None
 12980 ;; Auto vars:     Size  Location     Type
 12981 ;;		None
 12982 ;; Return value:  Size  Location     Type
 12983 ;;                  1  [STACK] void 
 12984 ;; Registers used:
 12985 ;;		None
 12986 ;; Tracked objects:
 12987 ;;		On entry : 0/39
 12988 ;;		On exit  : 0/0
 12989 ;;		Unchanged: 0/0
 12990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12995 ;;Total ram usage:        0 bytes
 12996 ;; Hardware stack levels used:    1
 12997 ;; This function calls:
 12998 ;;		Nothing
 12999 ;; This function is called by:
 13000 ;;		_EXT_INT_Initialize
 13001 ;;		_INT0_CallBack
 13002 ;; This function uses a reentrant model
 13003 ;;
 13004                           
 13005                           	psect	text76
 13006  005982                     __ptext76:
 13007                           	opt callstack 0
 13008  005982                     _INT0_DefaultInterruptHandler:
 13009                           	opt callstack 17
 13010                           
 13011                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 13012                           
 13013                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13014                           ;incstack = 0
 13015  005982  0012               	return		;funcret
 13016  005984                     __end_of_INT0_DefaultInterruptHandler:
 13017                           	opt callstack 0
 13018                           
 13019 ;; *************** function _INT1_ISR *****************
 13020 ;; Defined at:
 13021 ;;		line 61 in file "mcc_generated_files/ext_int.c"
 13022 ;; Parameters:    Size  Location     Type
 13023 ;;		None
 13024 ;; Auto vars:     Size  Location     Type
 13025 ;;		None
 13026 ;; Return value:  Size  Location     Type
 13027 ;;                  1    wreg      void 
 13028 ;; Registers used:
 13029 ;;		wreg, status,2, status,0, pclath, tosl
 13030 ;; Tracked objects:
 13031 ;;		On entry : 0/0
 13032 ;;		On exit  : 0/0
 13033 ;;		Unchanged: 0/0
 13034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13039 ;;Total ram usage:        0 bytes
 13040 ;; Hardware stack levels used:    1
 13041 ;; Hardware stack levels required when called:    2
 13042 ;; This function calls:
 13043 ;;		_INT1_CallBack
 13044 ;; This function is called by:
 13045 ;;		Interrupt level 2
 13046 ;; This function uses a non-reentrant model
 13047 ;;
 13048                           
 13049                           	psect	text77
 13050  005904                     __ptext77:
 13051                           	opt callstack 0
 13052  005904                     _INT1_ISR:
 13053                           	opt callstack 17
 13054                           
 13055                           ;incstack = 0
 13056  005904  EE13  F150         	lfsr	1,___inthi_sp
 13057                           
 13058                           ;mcc_generated_files/ext_int.c: 63:     (PIR5bits.INT1IF = 0);
 13059  005908  0139               	movlb	57	; () banked
 13060  00590A  91A5               	bcf	165,0,b	;volatile
 13061                           
 13062                           ; BSR set to: 57
 13063                           ;mcc_generated_files/ext_int.c: 66:     INT1_CallBack();
 13064  00590C  EC84  F02B         	call	_INT1_CallBack	;wreg free
 13065  005910  0011               	retfie		f
 13066  005912                     __end_of_INT1_ISR:
 13067                           	opt callstack 0
 13068                           
 13069 ;; *************** function _INT1_CallBack *****************
 13070 ;; Defined at:
 13071 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 13072 ;; Parameters:    Size  Location     Type
 13073 ;;		None
 13074 ;; Auto vars:     Size  Location     Type
 13075 ;;		None
 13076 ;; Return value:  Size  Location     Type
 13077 ;;                  1  [STACK] void 
 13078 ;; Registers used:
 13079 ;;		wreg, status,2, status,0, pclath, tosl
 13080 ;; Tracked objects:
 13081 ;;		On entry : 3F/39
 13082 ;;		On exit  : 0/0
 13083 ;;		Unchanged: 0/0
 13084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13089 ;;Total ram usage:        0 bytes
 13090 ;; Hardware stack levels used:    1
 13091 ;; Hardware stack levels required when called:    1
 13092 ;; This function calls:
 13093 ;;		Absolute function
 13094 ;;		_INT1_DefaultInterruptHandler
 13095 ;; This function is called by:
 13096 ;;		_INT1_ISR
 13097 ;; This function uses a reentrant model
 13098 ;;
 13099                           
 13100                           	psect	text78
 13101  005708                     __ptext78:
 13102                           	opt callstack 0
 13103  005708                     _INT1_CallBack:
 13104                           	opt callstack 17
 13105                           
 13106                           ;mcc_generated_files/ext_int.c: 73:     if(INT1_InterruptHandler)
 13107                           
 13108                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13109                           ;incstack = 0
 13110  005708  501C               	movf	_INT1_InterruptHandler,w,c
 13111  00570A  101D               	iorwf	_INT1_InterruptHandler+1,w,c
 13112  00570C  101E               	iorwf	_INT1_InterruptHandler+2,w,c
 13113  00570E  B4D8               	btfsc	status,2,c
 13114  005710  0012               	return	
 13115                           
 13116                           ;mcc_generated_files/ext_int.c: 74:     {;mcc_generated_files/ext_int.c: 75:         INT
      +                          1_InterruptHandler();
 13117  005712  D801               	call	u113_48
 13118  005714  0012               	return	
 13119  005716                     u113_48:
 13120  005716  0005               	push	
 13121  005718  6EFA               	movwf	pclath,c
 13122  00571A  501C               	movf	_INT1_InterruptHandler,w,c
 13123  00571C  6EFD               	movwf	tosl,c
 13124  00571E  501D               	movf	_INT1_InterruptHandler+1,w,c
 13125  005720  6EFE               	movwf	tosh,c
 13126  005722  501E               	movf	_INT1_InterruptHandler+2,w,c
 13127  005724  6EFF               	movwf	tosu,c
 13128  005726  50FA               	movf	pclath,w,c
 13129  005728  0012               	return		;indir
 13130  00572A                     __end_of_INT1_CallBack:
 13131                           	opt callstack 0
 13132                           
 13133 ;; *************** function _INT1_DefaultInterruptHandler *****************
 13134 ;; Defined at:
 13135 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 13136 ;; Parameters:    Size  Location     Type
 13137 ;;		None
 13138 ;; Auto vars:     Size  Location     Type
 13139 ;;		None
 13140 ;; Return value:  Size  Location     Type
 13141 ;;                  1  [STACK] void 
 13142 ;; Registers used:
 13143 ;;		None
 13144 ;; Tracked objects:
 13145 ;;		On entry : 0/39
 13146 ;;		On exit  : 0/0
 13147 ;;		Unchanged: 0/0
 13148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13153 ;;Total ram usage:        0 bytes
 13154 ;; Hardware stack levels used:    1
 13155 ;; This function calls:
 13156 ;;		Nothing
 13157 ;; This function is called by:
 13158 ;;		_EXT_INT_Initialize
 13159 ;;		_INT1_CallBack
 13160 ;; This function uses a reentrant model
 13161 ;;
 13162                           
 13163                           	psect	text79
 13164  005984                     __ptext79:
 13165                           	opt callstack 0
 13166  005984                     _INT1_DefaultInterruptHandler:
 13167                           	opt callstack 17
 13168                           
 13169                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 13170                           
 13171                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13172                           ;incstack = 0
 13173  005984  0012               	return		;funcret
 13174  005986                     __end_of_INT1_DefaultInterruptHandler:
 13175                           	opt callstack 0
 13176                           
 13177 ;; *************** function _INT2_ISR *****************
 13178 ;; Defined at:
 13179 ;;		line 87 in file "mcc_generated_files/ext_int.c"
 13180 ;; Parameters:    Size  Location     Type
 13181 ;;		None
 13182 ;; Auto vars:     Size  Location     Type
 13183 ;;		None
 13184 ;; Return value:  Size  Location     Type
 13185 ;;                  1    wreg      void 
 13186 ;; Registers used:
 13187 ;;		wreg, status,2, status,0, pclath, tosl
 13188 ;; Tracked objects:
 13189 ;;		On entry : 0/0
 13190 ;;		On exit  : 0/0
 13191 ;;		Unchanged: 0/0
 13192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13197 ;;Total ram usage:        0 bytes
 13198 ;; Hardware stack levels used:    1
 13199 ;; Hardware stack levels required when called:    2
 13200 ;; This function calls:
 13201 ;;		_INT2_CallBack
 13202 ;; This function is called by:
 13203 ;;		Interrupt level 2
 13204 ;; This function uses a non-reentrant model
 13205 ;;
 13206                           
 13207                           	psect	text80
 13208  005914                     __ptext80:
 13209                           	opt callstack 0
 13210  005914                     _INT2_ISR:
 13211                           	opt callstack 17
 13212                           
 13213                           ;incstack = 0
 13214  005914  EE13  F150         	lfsr	1,___inthi_sp
 13215                           
 13216                           ;mcc_generated_files/ext_int.c: 89:     (PIR7bits.INT2IF = 0);
 13217  005918  0139               	movlb	57	; () banked
 13218  00591A  9BA7               	bcf	167,5,b	;volatile
 13219                           
 13220                           ; BSR set to: 57
 13221                           ;mcc_generated_files/ext_int.c: 92:     INT2_CallBack();
 13222  00591C  EC95  F02B         	call	_INT2_CallBack	;wreg free
 13223  005920  0011               	retfie		f
 13224  005922                     __end_of_INT2_ISR:
 13225                           	opt callstack 0
 13226                           
 13227 ;; *************** function _INT2_CallBack *****************
 13228 ;; Defined at:
 13229 ;;		line 96 in file "mcc_generated_files/ext_int.c"
 13230 ;; Parameters:    Size  Location     Type
 13231 ;;		None
 13232 ;; Auto vars:     Size  Location     Type
 13233 ;;		None
 13234 ;; Return value:  Size  Location     Type
 13235 ;;                  1  [STACK] void 
 13236 ;; Registers used:
 13237 ;;		wreg, status,2, status,0, pclath, tosl
 13238 ;; Tracked objects:
 13239 ;;		On entry : 3F/39
 13240 ;;		On exit  : 0/0
 13241 ;;		Unchanged: 0/0
 13242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13247 ;;Total ram usage:        0 bytes
 13248 ;; Hardware stack levels used:    1
 13249 ;; Hardware stack levels required when called:    1
 13250 ;; This function calls:
 13251 ;;		Absolute function
 13252 ;;		_INT2_DefaultInterruptHandler
 13253 ;; This function is called by:
 13254 ;;		_INT2_ISR
 13255 ;; This function uses a reentrant model
 13256 ;;
 13257                           
 13258                           	psect	text81
 13259  00572A                     __ptext81:
 13260                           	opt callstack 0
 13261  00572A                     _INT2_CallBack:
 13262                           	opt callstack 17
 13263                           
 13264                           ;mcc_generated_files/ext_int.c: 99:     if(INT2_InterruptHandler)
 13265                           
 13266                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13267                           ;incstack = 0
 13268  00572A  5019               	movf	_INT2_InterruptHandler,w,c
 13269  00572C  101A               	iorwf	_INT2_InterruptHandler+1,w,c
 13270  00572E  101B               	iorwf	_INT2_InterruptHandler+2,w,c
 13271  005730  B4D8               	btfsc	status,2,c
 13272  005732  0012               	return	
 13273                           
 13274                           ;mcc_generated_files/ext_int.c: 100:     {;mcc_generated_files/ext_int.c: 101:         I
      +                          NT2_InterruptHandler();
 13275  005734  D801               	call	u115_48
 13276  005736  0012               	return	
 13277  005738                     u115_48:
 13278  005738  0005               	push	
 13279  00573A  6EFA               	movwf	pclath,c
 13280  00573C  5019               	movf	_INT2_InterruptHandler,w,c
 13281  00573E  6EFD               	movwf	tosl,c
 13282  005740  501A               	movf	_INT2_InterruptHandler+1,w,c
 13283  005742  6EFE               	movwf	tosh,c
 13284  005744  501B               	movf	_INT2_InterruptHandler+2,w,c
 13285  005746  6EFF               	movwf	tosu,c
 13286  005748  50FA               	movf	pclath,w,c
 13287  00574A  0012               	return		;indir
 13288  00574C                     __end_of_INT2_CallBack:
 13289                           	opt callstack 0
 13290                           
 13291 ;; *************** function _INT2_DefaultInterruptHandler *****************
 13292 ;; Defined at:
 13293 ;;		line 109 in file "mcc_generated_files/ext_int.c"
 13294 ;; Parameters:    Size  Location     Type
 13295 ;;		None
 13296 ;; Auto vars:     Size  Location     Type
 13297 ;;		None
 13298 ;; Return value:  Size  Location     Type
 13299 ;;                  1  [STACK] void 
 13300 ;; Registers used:
 13301 ;;		None
 13302 ;; Tracked objects:
 13303 ;;		On entry : 0/39
 13304 ;;		On exit  : 0/0
 13305 ;;		Unchanged: 0/0
 13306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13311 ;;Total ram usage:        0 bytes
 13312 ;; Hardware stack levels used:    1
 13313 ;; This function calls:
 13314 ;;		Nothing
 13315 ;; This function is called by:
 13316 ;;		_EXT_INT_Initialize
 13317 ;;		_INT2_CallBack
 13318 ;; This function uses a reentrant model
 13319 ;;
 13320                           
 13321                           	psect	text82
 13322  005986                     __ptext82:
 13323                           	opt callstack 0
 13324  005986                     _INT2_DefaultInterruptHandler:
 13325                           	opt callstack 17
 13326                           
 13327                           ; _INT2_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 13328                           
 13329                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13330                           ;incstack = 0
 13331  005986  0012               	return		;funcret
 13332  005988                     __end_of_INT2_DefaultInterruptHandler:
 13333                           	opt callstack 0
 13334                           
 13335 ;; *************** function _Default_ISR *****************
 13336 ;; Defined at:
 13337 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 13338 ;; Parameters:    Size  Location     Type
 13339 ;;		None
 13340 ;; Auto vars:     Size  Location     Type
 13341 ;;		None
 13342 ;; Return value:  Size  Location     Type
 13343 ;;                  1    wreg      void 
 13344 ;; Registers used:
 13345 ;;		None
 13346 ;; Tracked objects:
 13347 ;;		On entry : 0/0
 13348 ;;		On exit  : 0/0
 13349 ;;		Unchanged: 0/0
 13350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13355 ;;Total ram usage:        0 bytes
 13356 ;; Hardware stack levels used:    1
 13357 ;; This function calls:
 13358 ;;		Nothing
 13359 ;; This function is called by:
 13360 ;;		Interrupt level 2
 13361 ;; This function uses a non-reentrant model
 13362 ;;
 13363                           
 13364                           	psect	text83
 13365  00597C                     __ptext83:
 13366                           	opt callstack 0
 13367  00597C                     _Default_ISR:
 13368                           	opt callstack 19
 13369                           
 13370                           ;incstack = 0
 13371  00597C  EE13  F150         	lfsr	1,___inthi_sp
 13372  005980  0011               	retfie		f
 13373  005982                     __end_of_Default_ISR:
 13374                           	opt callstack 0
 13375                           
 13376 ;; *************** function _ADCC_ISR *****************
 13377 ;; Defined at:
 13378 ;;		line 307 in file "mcc_generated_files/adcc.c"
 13379 ;; Parameters:    Size  Location     Type
 13380 ;;		None
 13381 ;; Auto vars:     Size  Location     Type
 13382 ;;		None
 13383 ;; Return value:  Size  Location     Type
 13384 ;;                  1    wreg      void 
 13385 ;; Registers used:
 13386 ;;		wreg, status,2, status,0, pclath, tosl
 13387 ;; Tracked objects:
 13388 ;;		On entry : 0/0
 13389 ;;		On exit  : 0/0
 13390 ;;		Unchanged: 0/0
 13391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13396 ;;Total ram usage:        0 bytes
 13397 ;; Hardware stack levels used:    1
 13398 ;; Hardware stack levels required when called:    1
 13399 ;; This function calls:
 13400 ;;		Absolute function
 13401 ;;		_ADCC_DefaultInterruptHandler
 13402 ;; This function is called by:
 13403 ;;		Interrupt level 2
 13404 ;; This function uses a non-reentrant model
 13405 ;;
 13406                           
 13407                           	psect	text84
 13408  005380                     __ptext84:
 13409                           	opt callstack 0
 13410  005380                     _ADCC_ISR:
 13411                           	opt callstack 18
 13412                           
 13413                           ;incstack = 0
 13414  005380  EE13  F150         	lfsr	1,___inthi_sp
 13415                           
 13416                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 13417  005384  0139               	movlb	57	; () banked
 13418  005386  95A1               	bcf	161,2,b	;volatile
 13419                           
 13420                           ; BSR set to: 57
 13421                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 13422  005388  500A               	movf	_ADCC_ADI_InterruptHandler,w,c
 13423  00538A  100B               	iorwf	_ADCC_ADI_InterruptHandler+1,w,c
 13424  00538C  100C               	iorwf	_ADCC_ADI_InterruptHandler+2,w,c
 13425  00538E  B4D8               	btfsc	status,2,c
 13426  005390  0011               	retfie		f
 13427                           
 13428                           ; BSR set to: 57
 13429                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 13430  005392  D801               	call	i2u156_48
 13431  005394  0011               	retfie		f
 13432  005396                     i2u156_48:
 13433  005396  0005               	push	
 13434  005398  6EFA               	movwf	pclath,c
 13435  00539A  500A               	movf	_ADCC_ADI_InterruptHandler,w,c
 13436  00539C  6EFD               	movwf	tosl,c
 13437  00539E  500B               	movf	_ADCC_ADI_InterruptHandler+1,w,c
 13438  0053A0  6EFE               	movwf	tosh,c
 13439  0053A2  500C               	movf	_ADCC_ADI_InterruptHandler+2,w,c
 13440  0053A4  6EFF               	movwf	tosu,c
 13441  0053A6  50FA               	movf	pclath,w,c
 13442  0053A8  0012               	return		;indir
 13443  0053AA                     __end_of_ADCC_ISR:
 13444                           	opt callstack 0
 13445                           
 13446 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 13447 ;; Defined at:
 13448 ;;		line 320 in file "mcc_generated_files/adcc.c"
 13449 ;; Parameters:    Size  Location     Type
 13450 ;;		None
 13451 ;; Auto vars:     Size  Location     Type
 13452 ;;		None
 13453 ;; Return value:  Size  Location     Type
 13454 ;;                  1  [STACK] void 
 13455 ;; Registers used:
 13456 ;;		None
 13457 ;; Tracked objects:
 13458 ;;		On entry : 3F/39
 13459 ;;		On exit  : 0/0
 13460 ;;		Unchanged: 0/0
 13461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13466 ;;Total ram usage:        0 bytes
 13467 ;; Hardware stack levels used:    1
 13468 ;; This function calls:
 13469 ;;		Nothing
 13470 ;; This function is called by:
 13471 ;;		_ADCC_Initialize
 13472 ;;		_ADCC_ISR
 13473 ;; This function uses a reentrant model
 13474 ;;
 13475                           
 13476                           	psect	text85
 13477  005988                     __ptext85:
 13478                           	opt callstack 0
 13479  005988                     _ADCC_DefaultInterruptHandler:
 13480                           	opt callstack 18
 13481                           
 13482                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 13483                           
 13484                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13485                           ;incstack = 0
 13486  005988  0012               	return		;funcret
 13487  00598A                     __end_of_ADCC_DefaultInterruptHandler:
 13488                           	opt callstack 0
 13489                           
 13490 ;; *************** function _UART1_tx_vect_isr *****************
 13491 ;; Defined at:
 13492 ;;		line 197 in file "mcc_generated_files/uart1.c"
 13493 ;; Parameters:    Size  Location     Type
 13494 ;;		None
 13495 ;; Auto vars:     Size  Location     Type
 13496 ;;		None
 13497 ;; Return value:  Size  Location     Type
 13498 ;;                  1    wreg      void 
 13499 ;; Registers used:
 13500 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 13501 ;; Tracked objects:
 13502 ;;		On entry : 0/0
 13503 ;;		On exit  : 0/0
 13504 ;;		Unchanged: 0/0
 13505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13510 ;;Total ram usage:        0 bytes
 13511 ;; Hardware stack levels used:    1
 13512 ;; Hardware stack levels required when called:    1
 13513 ;; This function calls:
 13514 ;;		Absolute function
 13515 ;;		_UART1_Transmit_ISR
 13516 ;; This function is called by:
 13517 ;;		Interrupt level 2
 13518 ;; This function uses a non-reentrant model
 13519 ;;
 13520                           
 13521                           	psect	text86
 13522  005604                     __ptext86:
 13523                           	opt callstack 0
 13524  005604                     _UART1_tx_vect_isr:
 13525                           	opt callstack 18
 13526                           
 13527                           ;incstack = 0
 13528  005604  EE13  F150         	lfsr	1,___inthi_sp
 13529                           
 13530                           ;mcc_generated_files/uart1.c: 199:  if (UART1_TxInterruptHandler) {
 13531  005608  500D               	movf	_UART1_TxInterruptHandler,w,c
 13532  00560A  100E               	iorwf	_UART1_TxInterruptHandler+1,w,c
 13533  00560C  100F               	iorwf	_UART1_TxInterruptHandler+2,w,c
 13534  00560E  B4D8               	btfsc	status,2,c
 13535  005610  0011               	retfie		f
 13536                           
 13537                           ;mcc_generated_files/uart1.c: 200:   UART1_TxInterruptHandler();
 13538  005612  D801               	call	i2u313_48
 13539  005614  0011               	retfie		f
 13540  005616                     i2u313_48:
 13541  005616  0005               	push	
 13542  005618  6EFA               	movwf	pclath,c
 13543  00561A  500D               	movf	_UART1_TxInterruptHandler,w,c
 13544  00561C  6EFD               	movwf	tosl,c
 13545  00561E  500E               	movf	_UART1_TxInterruptHandler+1,w,c
 13546  005620  6EFE               	movwf	tosh,c
 13547  005622  500F               	movf	_UART1_TxInterruptHandler+2,w,c
 13548  005624  6EFF               	movwf	tosu,c
 13549  005626  50FA               	movf	pclath,w,c
 13550  005628  0012               	return		;indir
 13551  00562A                     __end_of_UART1_tx_vect_isr:
 13552                           	opt callstack 0
 13553                           
 13554 ;; *************** function _UART1_Transmit_ISR *****************
 13555 ;; Defined at:
 13556 ;;		line 211 in file "mcc_generated_files/uart1.c"
 13557 ;; Parameters:    Size  Location     Type
 13558 ;;		None
 13559 ;; Auto vars:     Size  Location     Type
 13560 ;;		None
 13561 ;; Return value:  Size  Location     Type
 13562 ;;                  1  [STACK] void 
 13563 ;; Registers used:
 13564 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13565 ;; Tracked objects:
 13566 ;;		On entry : 0/0
 13567 ;;		On exit  : 3B/39
 13568 ;;		Unchanged: 0/0
 13569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13574 ;;Total ram usage:        0 bytes
 13575 ;; Hardware stack levels used:    1
 13576 ;; This function calls:
 13577 ;;		Nothing
 13578 ;; This function is called by:
 13579 ;;		_UART1_Initialize
 13580 ;;		_UART1_tx_vect_isr
 13581 ;; This function uses a reentrant model
 13582 ;;
 13583                           
 13584                           	psect	text87
 13585  0052D2                     __ptext87:
 13586                           	opt callstack 0
 13587  0052D2                     _UART1_Transmit_ISR:
 13588                           	opt callstack 18
 13589                           
 13590                           ;mcc_generated_files/uart1.c: 214:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 13591                           
 13592                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13593                           ;incstack = 0
 13594  0052D2  0E40               	movlw	64
 13595  0052D4  603B               	cpfslt	_uart1TxBufferRemaining,c
 13596  0052D6  D010               	goto	l597
 13597                           
 13598                           ;mcc_generated_files/uart1.c: 215:   U1TXB = uart1TxBuffer[uart1TxTail++];
 13599  0052D8  0E80               	movlw	low _uart1TxBuffer
 13600  0052DA  243C               	addwf	_uart1TxTail,w,c	;volatile
 13601  0052DC  6ED9               	movwf	fsr2l,c
 13602  0052DE  6ADA               	clrf	fsr2h,c
 13603  0052E0  0E02               	movlw	high _uart1TxBuffer
 13604  0052E2  22DA               	addwfc	fsr2h,f,c
 13605  0052E4  50DF               	movf	indf2,w,c
 13606  0052E6  013D               	movlb	61	; () banked
 13607  0052E8  6FEA               	movwf	234,b	;volatile
 13608                           
 13609                           ; BSR set to: 61
 13610  0052EA  2A3C               	incf	_uart1TxTail,f,c	;volatile
 13611                           
 13612                           ; BSR set to: 61
 13613                           ;mcc_generated_files/uart1.c: 216:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 13614  0052EC  0E3F               	movlw	63
 13615  0052EE  643C               	cpfsgt	_uart1TxTail,c
 13616  0052F0  D001               	goto	l5513
 13617                           
 13618                           ; BSR set to: 61
 13619                           ;mcc_generated_files/uart1.c: 217:    uart1TxTail = 0;
 13620  0052F2  6A3C               	clrf	_uart1TxTail,c	;volatile
 13621  0052F4                     l5513:
 13622                           
 13623                           ; BSR set to: 61
 13624                           ;mcc_generated_files/uart1.c: 219:   uart1TxBufferRemaining++;
 13625  0052F4  2A3B               	incf	_uart1TxBufferRemaining,f,c	;volatile
 13626                           
 13627                           ;mcc_generated_files/uart1.c: 220:  } else {
 13628  0052F6  0012               	return	
 13629  0052F8                     l597:
 13630                           
 13631                           ;mcc_generated_files/uart1.c: 221:   PIE3bits.U1TXIE = 0;
 13632  0052F8  0139               	movlb	57	; () banked
 13633  0052FA  9993               	bcf	147,4,b	;volatile
 13634                           
 13635                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 13636  0052FC  0012               	return		;funcret
 13637  0052FE                     __end_of_UART1_Transmit_ISR:
 13638                           	opt callstack 0
 13639                           
 13640 ;; *************** function _UART1_rx_vect_isr *****************
 13641 ;; Defined at:
 13642 ;;		line 204 in file "mcc_generated_files/uart1.c"
 13643 ;; Parameters:    Size  Location     Type
 13644 ;;		None
 13645 ;; Auto vars:     Size  Location     Type
 13646 ;;		None
 13647 ;; Return value:  Size  Location     Type
 13648 ;;                  1    wreg      void 
 13649 ;; Registers used:
 13650 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 13651 ;; Tracked objects:
 13652 ;;		On entry : 0/0
 13653 ;;		On exit  : 0/0
 13654 ;;		Unchanged: 0/0
 13655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13660 ;;Total ram usage:        0 bytes
 13661 ;; Hardware stack levels used:    1
 13662 ;; Hardware stack levels required when called:    1
 13663 ;; This function calls:
 13664 ;;		Absolute function
 13665 ;;		_UART1_Receive_ISR
 13666 ;; This function is called by:
 13667 ;;		Interrupt level 2
 13668 ;; This function uses a non-reentrant model
 13669 ;;
 13670                           
 13671                           	psect	text88
 13672  00562C                     __ptext88:
 13673                           	opt callstack 0
 13674  00562C                     _UART1_rx_vect_isr:
 13675                           	opt callstack 18
 13676                           
 13677                           ;incstack = 0
 13678  00562C  EE13  F150         	lfsr	1,___inthi_sp
 13679                           
 13680                           ;mcc_generated_files/uart1.c: 206:  if (UART1_RxInterruptHandler) {
 13681  005630  5010               	movf	_UART1_RxInterruptHandler,w,c
 13682  005632  1011               	iorwf	_UART1_RxInterruptHandler+1,w,c
 13683  005634  1012               	iorwf	_UART1_RxInterruptHandler+2,w,c
 13684  005636  B4D8               	btfsc	status,2,c
 13685  005638  0011               	retfie		f
 13686                           
 13687                           ;mcc_generated_files/uart1.c: 207:   UART1_RxInterruptHandler();
 13688  00563A  D801               	call	i2u315_48
 13689  00563C  0011               	retfie		f
 13690  00563E                     i2u315_48:
 13691  00563E  0005               	push	
 13692  005640  6EFA               	movwf	pclath,c
 13693  005642  5010               	movf	_UART1_RxInterruptHandler,w,c
 13694  005644  6EFD               	movwf	tosl,c
 13695  005646  5011               	movf	_UART1_RxInterruptHandler+1,w,c
 13696  005648  6EFE               	movwf	tosh,c
 13697  00564A  5012               	movf	_UART1_RxInterruptHandler+2,w,c
 13698  00564C  6EFF               	movwf	tosu,c
 13699  00564E  50FA               	movf	pclath,w,c
 13700  005650  0012               	return		;indir
 13701  005652                     __end_of_UART1_rx_vect_isr:
 13702                           	opt callstack 0
 13703                           
 13704 ;; *************** function _UART1_Receive_ISR *****************
 13705 ;; Defined at:
 13706 ;;		line 227 in file "mcc_generated_files/uart1.c"
 13707 ;; Parameters:    Size  Location     Type
 13708 ;;		None
 13709 ;; Auto vars:     Size  Location     Type
 13710 ;;		None
 13711 ;; Return value:  Size  Location     Type
 13712 ;;                  1  [STACK] void 
 13713 ;; Registers used:
 13714 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13715 ;; Tracked objects:
 13716 ;;		On entry : 0/0
 13717 ;;		On exit  : 0/0
 13718 ;;		Unchanged: 0/0
 13719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13724 ;;Total ram usage:        0 bytes
 13725 ;; Hardware stack levels used:    1
 13726 ;; This function calls:
 13727 ;;		Nothing
 13728 ;; This function is called by:
 13729 ;;		_UART1_Initialize
 13730 ;;		_UART1_rx_vect_isr
 13731 ;; This function uses a reentrant model
 13732 ;;
 13733                           
 13734                           	psect	text89
 13735  005790                     __ptext89:
 13736                           	opt callstack 0
 13737  005790                     _UART1_Receive_ISR:
 13738                           	opt callstack 18
 13739                           
 13740                           ;mcc_generated_files/uart1.c: 230:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 13741                           
 13742                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13743                           ;incstack = 0
 13744  005790  0E92               	movlw	low _uart1RxBuffer
 13745  005792  243A               	addwf	_uart1RxHead,w,c	;volatile
 13746  005794  6ED9               	movwf	fsr2l,c
 13747  005796  6ADA               	clrf	fsr2h,c
 13748  005798  0E01               	movlw	high _uart1RxBuffer
 13749  00579A  22DA               	addwfc	fsr2h,f,c
 13750  00579C  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 13751  0057A2  2A3A               	incf	_uart1RxHead,f,c	;volatile
 13752                           
 13753                           ;mcc_generated_files/uart1.c: 231:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 13754  0057A4  0E3F               	movlw	63
 13755  0057A6  643A               	cpfsgt	_uart1RxHead,c
 13756  0057A8  D001               	goto	l5523
 13757                           
 13758                           ;mcc_generated_files/uart1.c: 232:   uart1RxHead = 0;
 13759  0057AA  6A3A               	clrf	_uart1RxHead,c	;volatile
 13760  0057AC                     l5523:
 13761                           
 13762                           ;mcc_generated_files/uart1.c: 234:  uart1RxCount++;
 13763  0057AC  2A38               	incf	_uart1RxCount,f,c	;volatile
 13764                           
 13765                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 13766  0057AE  0012               	return		;funcret
 13767  0057B0                     __end_of_UART1_Receive_ISR:
 13768                           	opt callstack 0
 13769                           
 13770 ;; *************** function _UART2_tx_vect_isr *****************
 13771 ;; Defined at:
 13772 ;;		line 195 in file "mcc_generated_files/uart2.c"
 13773 ;; Parameters:    Size  Location     Type
 13774 ;;		None
 13775 ;; Auto vars:     Size  Location     Type
 13776 ;;		None
 13777 ;; Return value:  Size  Location     Type
 13778 ;;                  1    wreg      void 
 13779 ;; Registers used:
 13780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 13781 ;; Tracked objects:
 13782 ;;		On entry : 0/0
 13783 ;;		On exit  : 0/0
 13784 ;;		Unchanged: 0/0
 13785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13790 ;;Total ram usage:        0 bytes
 13791 ;; Hardware stack levels used:    1
 13792 ;; Hardware stack levels required when called:    1
 13793 ;; This function calls:
 13794 ;;		Absolute function
 13795 ;;		_UART2_Transmit_ISR
 13796 ;; This function is called by:
 13797 ;;		Interrupt level 2
 13798 ;; This function uses a non-reentrant model
 13799 ;;
 13800                           
 13801                           	psect	text90
 13802  005654                     __ptext90:
 13803                           	opt callstack 0
 13804  005654                     _UART2_tx_vect_isr:
 13805                           	opt callstack 18
 13806                           
 13807                           ;incstack = 0
 13808  005654  EE13  F150         	lfsr	1,___inthi_sp
 13809                           
 13810                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 13811  005658  5013               	movf	_UART2_TxInterruptHandler,w,c
 13812  00565A  1014               	iorwf	_UART2_TxInterruptHandler+1,w,c
 13813  00565C  1015               	iorwf	_UART2_TxInterruptHandler+2,w,c
 13814  00565E  B4D8               	btfsc	status,2,c
 13815  005660  0011               	retfie		f
 13816                           
 13817                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 13818  005662  D801               	call	i2u317_48
 13819  005664  0011               	retfie		f
 13820  005666                     i2u317_48:
 13821  005666  0005               	push	
 13822  005668  6EFA               	movwf	pclath,c
 13823  00566A  5013               	movf	_UART2_TxInterruptHandler,w,c
 13824  00566C  6EFD               	movwf	tosl,c
 13825  00566E  5014               	movf	_UART2_TxInterruptHandler+1,w,c
 13826  005670  6EFE               	movwf	tosh,c
 13827  005672  5015               	movf	_UART2_TxInterruptHandler+2,w,c
 13828  005674  6EFF               	movwf	tosu,c
 13829  005676  50FA               	movf	pclath,w,c
 13830  005678  0012               	return		;indir
 13831  00567A                     __end_of_UART2_tx_vect_isr:
 13832                           	opt callstack 0
 13833                           
 13834 ;; *************** function _UART2_Transmit_ISR *****************
 13835 ;; Defined at:
 13836 ;;		line 213 in file "mcc_generated_files/uart2.c"
 13837 ;; Parameters:    Size  Location     Type
 13838 ;;		None
 13839 ;; Auto vars:     Size  Location     Type
 13840 ;;		None
 13841 ;; Return value:  Size  Location     Type
 13842 ;;                  1  [STACK] void 
 13843 ;; Registers used:
 13844 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13845 ;; Tracked objects:
 13846 ;;		On entry : 0/0
 13847 ;;		On exit  : 3B/39
 13848 ;;		Unchanged: 0/0
 13849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13854 ;;Total ram usage:        0 bytes
 13855 ;; Hardware stack levels used:    1
 13856 ;; This function calls:
 13857 ;;		Nothing
 13858 ;; This function is called by:
 13859 ;;		_UART2_Initialize
 13860 ;;		_UART2_tx_vect_isr
 13861 ;; This function uses a reentrant model
 13862 ;;
 13863                           
 13864                           	psect	text91
 13865  0052FE                     __ptext91:
 13866                           	opt callstack 0
 13867  0052FE                     _UART2_Transmit_ISR:
 13868                           	opt callstack 18
 13869                           
 13870                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 13871                           
 13872                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13873                           ;incstack = 0
 13874  0052FE  0E40               	movlw	64
 13875  005300  6035               	cpfslt	_uart2TxBufferRemaining,c
 13876  005302  D010               	goto	l717
 13877                           
 13878                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 13879  005304  0E40               	movlw	low _uart2TxBuffer
 13880  005306  2436               	addwf	_uart2TxTail,w,c	;volatile
 13881  005308  6ED9               	movwf	fsr2l,c
 13882  00530A  6ADA               	clrf	fsr2h,c
 13883  00530C  0E02               	movlw	high _uart2TxBuffer
 13884  00530E  22DA               	addwfc	fsr2h,f,c
 13885  005310  50DF               	movf	indf2,w,c
 13886  005312  013D               	movlb	61	; () banked
 13887  005314  6FD2               	movwf	210,b	;volatile
 13888                           
 13889                           ; BSR set to: 61
 13890  005316  2A36               	incf	_uart2TxTail,f,c	;volatile
 13891                           
 13892                           ; BSR set to: 61
 13893                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 13894  005318  0E3F               	movlw	63
 13895  00531A  6436               	cpfsgt	_uart2TxTail,c
 13896  00531C  D001               	goto	l5535
 13897                           
 13898                           ; BSR set to: 61
 13899                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 13900  00531E  6A36               	clrf	_uart2TxTail,c	;volatile
 13901  005320                     l5535:
 13902                           
 13903                           ; BSR set to: 61
 13904                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 13905  005320  2A35               	incf	_uart2TxBufferRemaining,f,c	;volatile
 13906                           
 13907                           ;mcc_generated_files/uart2.c: 224:     }
 13908  005322  0012               	return	
 13909  005324                     l717:
 13910                           
 13911                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 13912  005324  0139               	movlb	57	; () banked
 13913  005326  9796               	bcf	150,3,b	;volatile
 13914                           
 13915                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 13916  005328  0012               	return		;funcret
 13917  00532A                     __end_of_UART2_Transmit_ISR:
 13918                           	opt callstack 0
 13919                           
 13920 ;; *************** function _UART2_rx_vect_isr *****************
 13921 ;; Defined at:
 13922 ;;		line 203 in file "mcc_generated_files/uart2.c"
 13923 ;; Parameters:    Size  Location     Type
 13924 ;;		None
 13925 ;; Auto vars:     Size  Location     Type
 13926 ;;		None
 13927 ;; Return value:  Size  Location     Type
 13928 ;;                  1    wreg      void 
 13929 ;; Registers used:
 13930 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 13931 ;; Tracked objects:
 13932 ;;		On entry : 0/0
 13933 ;;		On exit  : 0/0
 13934 ;;		Unchanged: 0/0
 13935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13940 ;;Total ram usage:        0 bytes
 13941 ;; Hardware stack levels used:    1
 13942 ;; Hardware stack levels required when called:    1
 13943 ;; This function calls:
 13944 ;;		Absolute function
 13945 ;;		_UART2_Receive_ISR
 13946 ;; This function is called by:
 13947 ;;		Interrupt level 2
 13948 ;; This function uses a non-reentrant model
 13949 ;;
 13950                           
 13951                           	psect	text92
 13952  00567C                     __ptext92:
 13953                           	opt callstack 0
 13954  00567C                     _UART2_rx_vect_isr:
 13955                           	opt callstack 18
 13956                           
 13957                           ;incstack = 0
 13958  00567C  EE13  F150         	lfsr	1,___inthi_sp
 13959                           
 13960                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 13961  005680  5016               	movf	_UART2_RxInterruptHandler,w,c
 13962  005682  1017               	iorwf	_UART2_RxInterruptHandler+1,w,c
 13963  005684  1018               	iorwf	_UART2_RxInterruptHandler+2,w,c
 13964  005686  B4D8               	btfsc	status,2,c
 13965  005688  0011               	retfie		f
 13966                           
 13967                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 13968  00568A  D801               	call	i2u319_48
 13969  00568C  0011               	retfie		f
 13970  00568E                     i2u319_48:
 13971  00568E  0005               	push	
 13972  005690  6EFA               	movwf	pclath,c
 13973  005692  5016               	movf	_UART2_RxInterruptHandler,w,c
 13974  005694  6EFD               	movwf	tosl,c
 13975  005696  5017               	movf	_UART2_RxInterruptHandler+1,w,c
 13976  005698  6EFE               	movwf	tosh,c
 13977  00569A  5018               	movf	_UART2_RxInterruptHandler+2,w,c
 13978  00569C  6EFF               	movwf	tosu,c
 13979  00569E  50FA               	movf	pclath,w,c
 13980  0056A0  0012               	return		;indir
 13981  0056A2                     __end_of_UART2_rx_vect_isr:
 13982                           	opt callstack 0
 13983                           
 13984 ;; *************** function _UART2_Receive_ISR *****************
 13985 ;; Defined at:
 13986 ;;		line 233 in file "mcc_generated_files/uart2.c"
 13987 ;; Parameters:    Size  Location     Type
 13988 ;;		None
 13989 ;; Auto vars:     Size  Location     Type
 13990 ;;		None
 13991 ;; Return value:  Size  Location     Type
 13992 ;;                  1  [STACK] void 
 13993 ;; Registers used:
 13994 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13995 ;; Tracked objects:
 13996 ;;		On entry : 0/0
 13997 ;;		On exit  : 0/0
 13998 ;;		Unchanged: 0/0
 13999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14004 ;;Total ram usage:        0 bytes
 14005 ;; Hardware stack levels used:    1
 14006 ;; This function calls:
 14007 ;;		Nothing
 14008 ;; This function is called by:
 14009 ;;		_UART2_Initialize
 14010 ;;		_UART2_rx_vect_isr
 14011 ;; This function uses a reentrant model
 14012 ;;
 14013                           
 14014                           	psect	text93
 14015  0057B0                     __ptext93:
 14016                           	opt callstack 0
 14017  0057B0                     _UART2_Receive_ISR:
 14018                           	opt callstack 18
 14019                           
 14020                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 14021                           
 14022                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14023                           ;incstack = 0
 14024  0057B0  0E00               	movlw	low _uart2RxBuffer
 14025  0057B2  2434               	addwf	_uart2RxHead,w,c	;volatile
 14026  0057B4  6ED9               	movwf	fsr2l,c
 14027  0057B6  6ADA               	clrf	fsr2h,c
 14028  0057B8  0E02               	movlw	high _uart2RxBuffer
 14029  0057BA  22DA               	addwfc	fsr2h,f,c
 14030  0057BC  006F F743 FFDF     	movff	15824,indf2	;volatile
 14031  0057C2  2A34               	incf	_uart2RxHead,f,c	;volatile
 14032                           
 14033                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 14034  0057C4  0E3F               	movlw	63
 14035  0057C6  6434               	cpfsgt	_uart2RxHead,c
 14036  0057C8  D001               	goto	l5545
 14037                           
 14038                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 14039  0057CA  6A34               	clrf	_uart2RxHead,c	;volatile
 14040  0057CC                     l5545:
 14041                           
 14042                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 14043  0057CC  2A32               	incf	_uart2RxCount,f,c	;volatile
 14044                           
 14045                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 14046  0057CE  0012               	return		;funcret
 14047  0057D0                     __end_of_UART2_Receive_ISR:
 14048                           	opt callstack 0
 14049                           
 14050 ;; *************** function _TMR6_ISR *****************
 14051 ;; Defined at:
 14052 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 14053 ;; Parameters:    Size  Location     Type
 14054 ;;		None
 14055 ;; Auto vars:     Size  Location     Type
 14056 ;;		None
 14057 ;; Return value:  Size  Location     Type
 14058 ;;                  1    wreg      void 
 14059 ;; Registers used:
 14060 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 14061 ;; Tracked objects:
 14062 ;;		On entry : 0/0
 14063 ;;		On exit  : 0/0
 14064 ;;		Unchanged: 0/0
 14065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14068 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14069 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14070 ;;Total ram usage:        1 bytes
 14071 ;; Hardware stack levels used:    1
 14072 ;; Hardware stack levels required when called:    2
 14073 ;; This function calls:
 14074 ;;		_TMR6_CallBack
 14075 ;; This function is called by:
 14076 ;;		Interrupt level 2
 14077 ;; This function uses a non-reentrant model
 14078 ;;
 14079                           
 14080                           	psect	text94
 14081  00585C                     __ptext94:
 14082                           	opt callstack 0
 14083  00585C                     _TMR6_ISR:
 14084                           	opt callstack 17
 14085                           
 14086                           ;incstack = 0
 14087  00585C  0060  F0F8  F05F   	movff	btemp,??_TMR6_ISR
 14088  005862  EE13  F150         	lfsr	1,___inthi_sp
 14089                           
 14090                           ;mcc_generated_files/tmr6.c: 175:  PIR9bits.TMR6IF = 0;
 14091  005866  0139               	movlb	57	; () banked
 14092  005868  91A9               	bcf	169,0,b	;volatile
 14093                           
 14094                           ; BSR set to: 57
 14095                           ;mcc_generated_files/tmr6.c: 179:  TMR6_CallBack();
 14096  00586A  ECA6  F02B         	call	_TMR6_CallBack	;wreg free
 14097  00586E  0060  F17C  F03E   	movff	??_TMR6_ISR,btemp
 14098  005874  0011               	retfie		f
 14099  005876                     __end_of_TMR6_ISR:
 14100                           	opt callstack 0
 14101                           
 14102 ;; *************** function _TMR6_CallBack *****************
 14103 ;; Defined at:
 14104 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 14105 ;; Parameters:    Size  Location     Type
 14106 ;;		None
 14107 ;; Auto vars:     Size  Location     Type
 14108 ;;		None
 14109 ;; Return value:  Size  Location     Type
 14110 ;;                  1  [STACK] void 
 14111 ;; Registers used:
 14112 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 14113 ;; Tracked objects:
 14114 ;;		On entry : 3F/39
 14115 ;;		On exit  : 0/0
 14116 ;;		Unchanged: 0/0
 14117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14122 ;;Total ram usage:        0 bytes
 14123 ;; Hardware stack levels used:    1
 14124 ;; Hardware stack levels required when called:    1
 14125 ;; This function calls:
 14126 ;;		Absolute function
 14127 ;;		_TMR6_DefaultInterruptHandler
 14128 ;; This function is called by:
 14129 ;;		_TMR6_ISR
 14130 ;; This function uses a reentrant model
 14131 ;;
 14132                           
 14133                           	psect	text95
 14134  00574C                     __ptext95:
 14135                           	opt callstack 0
 14136  00574C                     _TMR6_CallBack:
 14137                           	opt callstack 17
 14138                           
 14139                           ;mcc_generated_files/tmr6.c: 186:  if (TMR6_InterruptHandler) {
 14140                           
 14141                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14142                           ;incstack = 0
 14143  00574C  5007               	movf	_TMR6_InterruptHandler,w,c
 14144  00574E  1008               	iorwf	_TMR6_InterruptHandler+1,w,c
 14145  005750  1009               	iorwf	_TMR6_InterruptHandler+2,w,c
 14146  005752  B4D8               	btfsc	status,2,c
 14147  005754  0012               	return	
 14148                           
 14149                           ;mcc_generated_files/tmr6.c: 187:   TMR6_InterruptHandler();
 14150  005756  D801               	call	u283_48
 14151  005758  0012               	return	
 14152  00575A                     u283_48:
 14153  00575A  0005               	push	
 14154  00575C  6EFA               	movwf	pclath,c
 14155  00575E  5007               	movf	_TMR6_InterruptHandler,w,c
 14156  005760  6EFD               	movwf	tosl,c
 14157  005762  5008               	movf	_TMR6_InterruptHandler+1,w,c
 14158  005764  6EFE               	movwf	tosh,c
 14159  005766  5009               	movf	_TMR6_InterruptHandler+2,w,c
 14160  005768  6EFF               	movwf	tosu,c
 14161  00576A  50FA               	movf	pclath,w,c
 14162  00576C  0012               	return		;indir
 14163  00576E                     __end_of_TMR6_CallBack:
 14164                           	opt callstack 0
 14165                           
 14166 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 14167 ;; Defined at:
 14168 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 14169 ;; Parameters:    Size  Location     Type
 14170 ;;		None
 14171 ;; Auto vars:     Size  Location     Type
 14172 ;;  i               1  [STACK] unsigned char 
 14173 ;; Return value:  Size  Location     Type
 14174 ;;                  1  [STACK] void 
 14175 ;; Registers used:
 14176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 14177 ;; Tracked objects:
 14178 ;;		On entry : 0/39
 14179 ;;		On exit  : 0/0
 14180 ;;		Unchanged: 0/0
 14181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14186 ;;Total ram usage:        0 bytes
 14187 ;; Hardware stack levels used:    1
 14188 ;; This function calls:
 14189 ;;		Nothing
 14190 ;; This function is called by:
 14191 ;;		_TMR6_Initialize
 14192 ;;		_TMR6_CallBack
 14193 ;; This function uses a reentrant model
 14194 ;;
 14195                           
 14196                           	psect	text96
 14197  0050E6                     __ptext96:
 14198                           	opt callstack 0
 14199  0050E6                     _TMR6_DefaultInterruptHandler:
 14200                           	opt callstack 0
 14201                           
 14202                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14203  0050E6  52E6               	movf	postinc1,f,c
 14204                           
 14205                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 14206                           ;stkvar	_i @ sp[(-1)+0]
 14207                           
 14208                           ;incstack = 0
 14209  0050E8  0EFF               	movlw	-1
 14210  0050EA  6AE3               	clrf	plusw1,c
 14211  0050EC                     l5229:
 14212                           
 14213                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 14214                           ;stkvar	_i @ sp[(-1)+0]
 14215  0050EC  0EFF               	movlw	-1
 14216  0050EE  50E3               	movf	plusw1,w,c
 14217  0050F0  0D02               	mullw	2
 14218  0050F2  50F3               	movf	prodl,w,c
 14219  0050F4  0F79               	addlw	low _tickCount
 14220  0050F6  6ED9               	movwf	fsr2l,c
 14221  0050F8  6ADA               	clrf	fsr2h,c
 14222  0050FA  50DE               	movf	postinc2,w,c
 14223  0050FC  10DE               	iorwf	postinc2,w,c
 14224  0050FE  B4D8               	btfsc	status,2,c
 14225  005100  D00A               	goto	l5233
 14226                           
 14227                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 14228                           ;stkvar	_i @ sp[(-1)+0]
 14229  005102  0EFF               	movlw	-1
 14230  005104  50E3               	movf	plusw1,w,c
 14231  005106  0D02               	mullw	2
 14232  005108  50F3               	movf	prodl,w,c
 14233  00510A  0F79               	addlw	low _tickCount
 14234  00510C  6ED9               	movwf	fsr2l,c
 14235  00510E  6ADA               	clrf	fsr2h,c
 14236  005110  06DE               	decf	postinc2,f,c
 14237  005112  0E00               	movlw	0
 14238  005114  5ADD               	subwfb	postdec2,f,c
 14239  005116                     l5233:
 14240                           
 14241                           ;mcc_generated_files/tmr6.c: 207:  }
 14242                           ;stkvar	_i @ sp[(-1)+0]
 14243  005116  0EFF               	movlw	-1
 14244  005118  2AE3               	incf	plusw1,f,c
 14245                           
 14246                           ;stkvar	_i @ sp[(-1)+0]
 14247  00511A  0EFF               	movlw	-1
 14248  00511C  006F FF8C  F03E    	movff	plusw1,btemp
 14249  005122  0E05               	movlw	5
 14250  005124  643E               	cpfsgt	btemp,c
 14251  005126  D7E2               	goto	l5229
 14252                           
 14253                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 14254  005128  52E5               	movf	postdec1,f,c
 14255  00512A  0012               	return		;funcret
 14256  00512C                     __end_of_TMR6_DefaultInterruptHandler:
 14257                           	opt callstack 0
 14258                           
 14259 ;; *************** function _DMA1_DMASCNT_ISR *****************
 14260 ;; Defined at:
 14261 ;;		line 126 in file "mcc_generated_files/dma1.c"
 14262 ;; Parameters:    Size  Location     Type
 14263 ;;		None
 14264 ;; Auto vars:     Size  Location     Type
 14265 ;;		None
 14266 ;; Return value:  Size  Location     Type
 14267 ;;                  1    wreg      void 
 14268 ;; Registers used:
 14269 ;;		None
 14270 ;; Tracked objects:
 14271 ;;		On entry : 0/0
 14272 ;;		On exit  : 3F/0
 14273 ;;		Unchanged: 0/0
 14274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14279 ;;Total ram usage:        0 bytes
 14280 ;; Hardware stack levels used:    1
 14281 ;; This function calls:
 14282 ;;		Nothing
 14283 ;; This function is called by:
 14284 ;;		Interrupt level 2
 14285 ;; This function uses a non-reentrant model
 14286 ;;
 14287                           
 14288                           	psect	text97
 14289  005924                     __ptext97:
 14290                           	opt callstack 0
 14291  005924                     _DMA1_DMASCNT_ISR:
 14292                           	opt callstack 19
 14293                           
 14294                           ;incstack = 0
 14295  005924  EE13  F150         	lfsr	1,___inthi_sp
 14296                           
 14297                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 14298  005928  0139               	movlb	57	; () banked
 14299  00592A  91A2               	bcf	162,0,b	;volatile
 14300                           
 14301                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 14302  00592C  0100               	movlb	0	; () banked
 14303  00592E  976D               	bcf	_spi_link& (0+255),3,b	;volatile
 14304                           
 14305                           ; BSR set to: 0
 14306  005930  0011               	retfie		f
 14307  005932                     __end_of_DMA1_DMASCNT_ISR:
 14308                           	opt callstack 0
 14309                           
 14310 ;; *************** function _DMA1_DMADCNT_ISR *****************
 14311 ;; Defined at:
 14312 ;;		line 133 in file "mcc_generated_files/dma1.c"
 14313 ;; Parameters:    Size  Location     Type
 14314 ;;		None
 14315 ;; Auto vars:     Size  Location     Type
 14316 ;;		None
 14317 ;; Return value:  Size  Location     Type
 14318 ;;                  1    wreg      void 
 14319 ;; Registers used:
 14320 ;;		None
 14321 ;; Tracked objects:
 14322 ;;		On entry : 0/0
 14323 ;;		On exit  : 3F/39
 14324 ;;		Unchanged: 0/0
 14325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14330 ;;Total ram usage:        0 bytes
 14331 ;; Hardware stack levels used:    1
 14332 ;; This function calls:
 14333 ;;		Nothing
 14334 ;; This function is called by:
 14335 ;;		Interrupt level 2
 14336 ;; This function uses a non-reentrant model
 14337 ;;
 14338                           
 14339                           	psect	text98
 14340  00593C                     __ptext98:
 14341                           	opt callstack 0
 14342  00593C                     _DMA1_DMADCNT_ISR:
 14343                           	opt callstack 19
 14344                           
 14345                           ; BSR set to: 0
 14346                           ;incstack = 0
 14347  00593C  EE13  F150         	lfsr	1,___inthi_sp
 14348                           
 14349                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 14350  005940  0139               	movlb	57	; () banked
 14351  005942  93A2               	bcf	162,1,b	;volatile
 14352                           
 14353                           ; BSR set to: 57
 14354  005944  0011               	retfie		f
 14355  005946                     __end_of_DMA1_DMADCNT_ISR:
 14356                           	opt callstack 0
 14357                           
 14358 ;; *************** function _DMA1_DMAA_ISR *****************
 14359 ;; Defined at:
 14360 ;;		line 143 in file "mcc_generated_files/dma1.c"
 14361 ;; Parameters:    Size  Location     Type
 14362 ;;		None
 14363 ;; Auto vars:     Size  Location     Type
 14364 ;;		None
 14365 ;; Return value:  Size  Location     Type
 14366 ;;                  1    wreg      void 
 14367 ;; Registers used:
 14368 ;;		None
 14369 ;; Tracked objects:
 14370 ;;		On entry : 0/0
 14371 ;;		On exit  : 3F/39
 14372 ;;		Unchanged: 0/0
 14373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14378 ;;Total ram usage:        0 bytes
 14379 ;; Hardware stack levels used:    1
 14380 ;; This function calls:
 14381 ;;		Nothing
 14382 ;; This function is called by:
 14383 ;;		Interrupt level 2
 14384 ;; This function uses a non-reentrant model
 14385 ;;
 14386                           
 14387                           	psect	text99
 14388  005948                     __ptext99:
 14389                           	opt callstack 0
 14390  005948                     _DMA1_DMAA_ISR:
 14391                           	opt callstack 19
 14392                           
 14393                           ; BSR set to: 57
 14394                           ;incstack = 0
 14395  005948  EE13  F150         	lfsr	1,___inthi_sp
 14396                           
 14397                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 14398  00594C  0139               	movlb	57	; () banked
 14399  00594E  97A2               	bcf	162,3,b	;volatile
 14400                           
 14401                           ; BSR set to: 57
 14402  005950  0011               	retfie		f
 14403  005952                     __end_of_DMA1_DMAA_ISR:
 14404                           	opt callstack 0
 14405                           
 14406 ;; *************** function _DMA1_DMAOR_ISR *****************
 14407 ;; Defined at:
 14408 ;;		line 154 in file "mcc_generated_files/dma1.c"
 14409 ;; Parameters:    Size  Location     Type
 14410 ;;		None
 14411 ;; Auto vars:     Size  Location     Type
 14412 ;;		None
 14413 ;; Return value:  Size  Location     Type
 14414 ;;                  1    wreg      void 
 14415 ;; Registers used:
 14416 ;;		None
 14417 ;; Tracked objects:
 14418 ;;		On entry : 0/0
 14419 ;;		On exit  : 3F/39
 14420 ;;		Unchanged: 0/0
 14421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14426 ;;Total ram usage:        0 bytes
 14427 ;; Hardware stack levels used:    1
 14428 ;; This function calls:
 14429 ;;		Nothing
 14430 ;; This function is called by:
 14431 ;;		Interrupt level 2
 14432 ;; This function uses a non-reentrant model
 14433 ;;
 14434                           
 14435                           	psect	text100
 14436  005954                     __ptext100:
 14437                           	opt callstack 0
 14438  005954                     _DMA1_DMAOR_ISR:
 14439                           	opt callstack 19
 14440                           
 14441                           ; BSR set to: 57
 14442                           ;incstack = 0
 14443  005954  EE13  F150         	lfsr	1,___inthi_sp
 14444                           
 14445                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 14446  005958  0139               	movlb	57	; () banked
 14447  00595A  95A2               	bcf	162,2,b	;volatile
 14448                           
 14449                           ; BSR set to: 57
 14450  00595C  0011               	retfie		f
 14451  00595E                     __end_of_DMA1_DMAOR_ISR:
 14452                           	opt callstack 0
 14453                           
 14454 ;; *************** function _TMR5_ISR *****************
 14455 ;; Defined at:
 14456 ;;		line 163 in file "mcc_generated_files/tmr5.c"
 14457 ;; Parameters:    Size  Location     Type
 14458 ;;		None
 14459 ;; Auto vars:     Size  Location     Type
 14460 ;;		None
 14461 ;; Return value:  Size  Location     Type
 14462 ;;                  1    wreg      void 
 14463 ;; Registers used:
 14464 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 14465 ;; Tracked objects:
 14466 ;;		On entry : 0/0
 14467 ;;		On exit  : 0/0
 14468 ;;		Unchanged: 0/0
 14469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14472 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14473 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14474 ;;Total ram usage:        1 bytes
 14475 ;; Hardware stack levels used:    1
 14476 ;; Hardware stack levels required when called:    2
 14477 ;; This function calls:
 14478 ;;		_TMR5_CallBack
 14479 ;;		_TMR5_WriteTimer
 14480 ;; This function is called by:
 14481 ;;		Interrupt level 2
 14482 ;; This function uses a non-reentrant model
 14483 ;;
 14484                           
 14485                           	psect	text101
 14486  00522C                     __ptext101:
 14487                           	opt callstack 0
 14488  00522C                     _TMR5_ISR:
 14489                           	opt callstack 17
 14490                           
 14491                           ; BSR set to: 57
 14492                           ;incstack = 0
 14493  00522C  0060  F124  F0F4   	movff	btemp+11,??_TMR5_ISR
 14494  005232  EE13  F150         	lfsr	1,___inthi_sp
 14495                           
 14496                           ;mcc_generated_files/tmr5.c: 165:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 168:  PIR8bits.TMR5IF = 0;
 14497  005236  0139               	movlb	57	; () banked
 14498  005238  9DA8               	bcf	168,6,b	;volatile
 14499                           
 14500                           ; BSR set to: 57
 14501                           ;mcc_generated_files/tmr5.c: 169:  TMR5_WriteTimer(timer5ReloadVal);
 14502  00523A  0060  F0BB  FFE6   	movff	_timer5ReloadVal,postinc1
 14503  005240  0060  F0BF  FFE6   	movff	_timer5ReloadVal+1,postinc1
 14504  005246  ECB7  F028         	call	_TMR5_WriteTimer	;wreg free
 14505                           
 14506                           ;mcc_generated_files/tmr5.c: 172:  if (++CountCallBack >= 50) {
 14507  00524A  4A2C               	infsnz	TMR5_ISR@CountCallBack,f,c	;volatile
 14508  00524C  2A2D               	incf	TMR5_ISR@CountCallBack+1,f,c	;volatile
 14509  00524E  502D               	movf	TMR5_ISR@CountCallBack+1,w,c	;volatile
 14510  005250  E104               	bnz	i2u413_40
 14511  005252  0E32               	movlw	50
 14512  005254  5C2C               	subwf	TMR5_ISR@CountCallBack,w,c	;volatile
 14513  005256  A0D8               	btfss	status,0,c
 14514  005258  D004               	goto	i2l1135
 14515  00525A                     i2u413_40:
 14516                           
 14517                           ;mcc_generated_files/tmr5.c: 174:   TMR5_CallBack();
 14518  00525A  ECB7  F02B         	call	_TMR5_CallBack	;wreg free
 14519                           
 14520                           ;mcc_generated_files/tmr5.c: 177:   CountCallBack = 0;
 14521  00525E  6A2C               	clrf	TMR5_ISR@CountCallBack,c	;volatile
 14522  005260  6A2D               	clrf	TMR5_ISR@CountCallBack+1,c	;volatile
 14523  005262                     i2l1135:
 14524  005262  0060  F3D0  F049   	movff	??_TMR5_ISR,btemp+11
 14525  005268  0011               	retfie		f
 14526  00526A                     __end_of_TMR5_ISR:
 14527                           	opt callstack 0
 14528                           
 14529 ;; *************** function _TMR5_WriteTimer *****************
 14530 ;; Defined at:
 14531 ;;		line 129 in file "mcc_generated_files/tmr5.c"
 14532 ;; Parameters:    Size  Location     Type
 14533 ;;  timerVal        2  [STACK] unsigned short 
 14534 ;; Auto vars:     Size  Location     Type
 14535 ;;		None
 14536 ;; Return value:  Size  Location     Type
 14537 ;;                  1  [STACK] void 
 14538 ;; Registers used:
 14539 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 14540 ;; Tracked objects:
 14541 ;;		On entry : 3F/39
 14542 ;;		On exit  : 0/0
 14543 ;;		Unchanged: 0/0
 14544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14549 ;;Total ram usage:        0 bytes
 14550 ;; Hardware stack levels used:    1
 14551 ;; This function calls:
 14552 ;;		Nothing
 14553 ;; This function is called by:
 14554 ;;		_TMR5_ISR
 14555 ;; This function uses a reentrant model
 14556 ;;
 14557                           
 14558                           	psect	text102
 14559  00516E                     __ptext102:
 14560                           	opt callstack 0
 14561  00516E                     _TMR5_WriteTimer:
 14562                           	opt callstack 18
 14563                           
 14564                           ;mcc_generated_files/tmr5.c: 129: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 130: {;mcc_generated_files/tmr5.c: 131:  if (T5CONbits.NOT_SYNC == 1) {
 14565                           
 14566                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14567                           ;incstack = 0
 14568  00516E  A49A               	btfss	16282,2,c	;volatile
 14569  005170  D00F               	goto	l3743
 14570                           
 14571                           ;mcc_generated_files/tmr5.c: 133:   T5CONbits.TMR5ON = 0;
 14572  005172  909A               	bcf	16282,0,c	;volatile
 14573                           
 14574                           ;mcc_generated_files/tmr5.c: 136:   TMR5H = (timerVal >> 8);
 14575                           ;stkvar	_timerVal @ sp[(0)+-2]
 14576  005174  0EFF               	movlw	255
 14577  005176  24E1               	addwf	fsr1l,w,c
 14578  005178  6ED9               	movwf	fsr2l,c
 14579  00517A  0EFF               	movlw	255
 14580  00517C  20E2               	addwfc	fsr1h,w,c
 14581  00517E  6EDA               	movwf	fsr2h,c
 14582  005180  50DF               	movf	indf2,w,c
 14583  005182  6E99               	movwf	16281,c	;volatile
 14584                           
 14585                           ;mcc_generated_files/tmr5.c: 137:   TMR5L = timerVal;
 14586                           ;stkvar	_timerVal @ sp[(0)+-2]
 14587  005184  0EFE               	movlw	-2
 14588  005186  006F FF8F FF98     	movff	plusw1,16280	;volatile
 14589                           
 14590                           ;mcc_generated_files/tmr5.c: 140:   T5CONbits.TMR5ON = 1;
 14591  00518C  809A               	bsf	16282,0,c	;volatile
 14592                           
 14593                           ;mcc_generated_files/tmr5.c: 141:  } else {
 14594  00518E  D00C               	goto	l1118
 14595  005190                     l3743:
 14596                           
 14597                           ;mcc_generated_files/tmr5.c: 143:   TMR5H = (timerVal >> 8);
 14598                           ;stkvar	_timerVal @ sp[(0)+-2]
 14599  005190  0EFF               	movlw	255
 14600  005192  24E1               	addwf	fsr1l,w,c
 14601  005194  6ED9               	movwf	fsr2l,c
 14602  005196  0EFF               	movlw	255
 14603  005198  20E2               	addwfc	fsr1h,w,c
 14604  00519A  6EDA               	movwf	fsr2h,c
 14605  00519C  50DF               	movf	indf2,w,c
 14606  00519E  6E99               	movwf	16281,c	;volatile
 14607                           
 14608                           ;mcc_generated_files/tmr5.c: 144:   TMR5L = timerVal;
 14609                           ;stkvar	_timerVal @ sp[(0)+-2]
 14610  0051A0  0EFE               	movlw	-2
 14611  0051A2  006F FF8F FF98     	movff	plusw1,16280	;volatile
 14612  0051A8                     l1118:
 14613                           
 14614                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 14615  0051A8  52E5               	movf	postdec1,f,c
 14616  0051AA  52E5               	movf	postdec1,f,c
 14617  0051AC  0012               	return		;funcret
 14618  0051AE                     __end_of_TMR5_WriteTimer:
 14619                           	opt callstack 0
 14620                           
 14621 ;; *************** function _TMR5_CallBack *****************
 14622 ;; Defined at:
 14623 ;;		line 181 in file "mcc_generated_files/tmr5.c"
 14624 ;; Parameters:    Size  Location     Type
 14625 ;;		None
 14626 ;; Auto vars:     Size  Location     Type
 14627 ;;		None
 14628 ;; Return value:  Size  Location     Type
 14629 ;;                  1  [STACK] void 
 14630 ;; Registers used:
 14631 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 14632 ;; Tracked objects:
 14633 ;;		On entry : 0/39
 14634 ;;		On exit  : 0/0
 14635 ;;		Unchanged: 0/0
 14636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14641 ;;Total ram usage:        0 bytes
 14642 ;; Hardware stack levels used:    1
 14643 ;; Hardware stack levels required when called:    1
 14644 ;; This function calls:
 14645 ;;		Absolute function
 14646 ;;		_TMR5_DefaultInterruptHandler
 14647 ;; This function is called by:
 14648 ;;		_TMR5_ISR
 14649 ;; This function uses a reentrant model
 14650 ;;
 14651                           
 14652                           	psect	text103
 14653  00576E                     __ptext103:
 14654                           	opt callstack 0
 14655  00576E                     _TMR5_CallBack:
 14656                           	opt callstack 17
 14657                           
 14658                           ;mcc_generated_files/tmr5.c: 184:  if (TMR5_InterruptHandler) {
 14659                           
 14660                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14661                           ;incstack = 0
 14662  00576E  5004               	movf	_TMR5_InterruptHandler,w,c
 14663  005770  1005               	iorwf	_TMR5_InterruptHandler+1,w,c
 14664  005772  1006               	iorwf	_TMR5_InterruptHandler+2,w,c
 14665  005774  B4D8               	btfsc	status,2,c
 14666  005776  0012               	return	
 14667                           
 14668                           ;mcc_generated_files/tmr5.c: 185:   TMR5_InterruptHandler();
 14669  005778  D801               	call	u126_48
 14670  00577A  0012               	return	
 14671  00577C                     u126_48:
 14672  00577C  0005               	push	
 14673  00577E  6EFA               	movwf	pclath,c
 14674  005780  5004               	movf	_TMR5_InterruptHandler,w,c
 14675  005782  6EFD               	movwf	tosl,c
 14676  005784  5005               	movf	_TMR5_InterruptHandler+1,w,c
 14677  005786  6EFE               	movwf	tosh,c
 14678  005788  5006               	movf	_TMR5_InterruptHandler+2,w,c
 14679  00578A  6EFF               	movwf	tosu,c
 14680  00578C  50FA               	movf	pclath,w,c
 14681  00578E  0012               	return		;indir
 14682  005790                     __end_of_TMR5_CallBack:
 14683                           	opt callstack 0
 14684                           
 14685 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 14686 ;; Defined at:
 14687 ;;		line 194 in file "mcc_generated_files/tmr5.c"
 14688 ;; Parameters:    Size  Location     Type
 14689 ;;		None
 14690 ;; Auto vars:     Size  Location     Type
 14691 ;;		None
 14692 ;; Return value:  Size  Location     Type
 14693 ;;                  1  [STACK] void 
 14694 ;; Registers used:
 14695 ;;		wreg, status,2, status,0, btemp+11
 14696 ;; Tracked objects:
 14697 ;;		On entry : 0/39
 14698 ;;		On exit  : 0/0
 14699 ;;		Unchanged: 0/0
 14700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14705 ;;Total ram usage:        0 bytes
 14706 ;; Hardware stack levels used:    1
 14707 ;; This function calls:
 14708 ;;		Nothing
 14709 ;; This function is called by:
 14710 ;;		_TMR5_Initialize
 14711 ;;		_TMR5_CallBack
 14712 ;; This function uses a reentrant model
 14713 ;;
 14714                           
 14715                           	psect	text104
 14716  005876                     __ptext104:
 14717                           	opt callstack 0
 14718  005876                     _TMR5_DefaultInterruptHandler:
 14719                           	opt callstack 17
 14720                           
 14721                           ;mcc_generated_files/tmr5.c: 198:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 14722                           
 14723                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14724                           ;incstack = 0
 14725  005876  A0BE               	btfss	16318,0,c	;volatile
 14726  005878  D002               	goto	u102_40
 14727  00587A  0E01               	movlw	1
 14728  00587C  D001               	goto	u102_46
 14729  00587E                     u102_40:
 14730  00587E  0E00               	movlw	0
 14731  005880                     u102_46:
 14732  005880  0AFF               	xorlw	255
 14733  005882  6E49               	movwf	btemp+11,c
 14734  005884  50BE               	movf	16318,w,c	;volatile
 14735  005886  1849               	xorwf	btemp+11,w,c
 14736  005888  0BFE               	andlw	-2
 14737  00588A  1849               	xorwf	btemp+11,w,c
 14738  00588C  6EBE               	movwf	16318,c	;volatile
 14739                           
 14740                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 14741  00588E  0012               	return		;funcret
 14742  005890                     __end_of_TMR5_DefaultInterruptHandler:
 14743                           	opt callstack 0
 14744                           
 14745                           ;
 14746                           ; Interrupt Vector Table @ 0x8
 14747                           ;
 14748                           
 14749                           	psect	ivt0x8
 14750  000008                     __pivt0x8:
 14751                           	opt callstack 0
 14752  000008                     ivt0x8_base:
 14753                           	opt callstack 0
 14754                           
 14755                           ; Vector 0 : SWINT
 14756  000008  165F               	dw	_Default_ISR shr (0+2)
 14757                           
 14758                           ; Vector 1 : HLVD
 14759  00000A  165F               	dw	_Default_ISR shr (0+2)
 14760                           
 14761                           ; Vector 2 : OSF
 14762  00000C  165F               	dw	_Default_ISR shr (0+2)
 14763                           
 14764                           ; Vector 3 : CSW
 14765  00000E  165F               	dw	_Default_ISR shr (0+2)
 14766                           
 14767                           ; Vector 4 : NVM
 14768  000010  165F               	dw	_Default_ISR shr (0+2)
 14769                           
 14770                           ; Vector 5 : SCAN
 14771  000012  165F               	dw	_Default_ISR shr (0+2)
 14772                           
 14773                           ; Vector 6 : CRC
 14774  000014  165F               	dw	_Default_ISR shr (0+2)
 14775                           
 14776                           ; Vector 7 : IOC
 14777  000016  165F               	dw	_Default_ISR shr (0+2)
 14778                           
 14779                           ; Vector 8 : INT0
 14780  000018  163D               	dw	_INT0_ISR shr (0+2)
 14781                           
 14782                           ; Vector 9 : ZCD
 14783  00001A  165F               	dw	_Default_ISR shr (0+2)
 14784                           
 14785                           ; Vector 10 : AD
 14786  00001C  14E0               	dw	_ADCC_ISR shr (0+2)
 14787                           
 14788                           ; Vector 11 : ADT
 14789  00001E  165F               	dw	_Default_ISR shr (0+2)
 14790                           
 14791                           ; Vector 12 : CMP1
 14792  000020  165F               	dw	_Default_ISR shr (0+2)
 14793                           
 14794                           ; Vector 13 : SMT1
 14795  000022  165F               	dw	_Default_ISR shr (0+2)
 14796                           
 14797                           ; Vector 14 : SMT1PRA
 14798  000024  165F               	dw	_Default_ISR shr (0+2)
 14799                           
 14800                           ; Vector 15 : SMT1PRW
 14801  000026  165F               	dw	_Default_ISR shr (0+2)
 14802                           
 14803                           ; Vector 16 : DMA1SCNT
 14804  000028  1649               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 14805                           
 14806                           ; Vector 17 : DMA1DCNT
 14807  00002A  164F               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 14808                           
 14809                           ; Vector 18 : DMA1OR
 14810  00002C  1655               	dw	_DMA1_DMAOR_ISR shr (0+2)
 14811                           
 14812                           ; Vector 19 : DMA1A
 14813  00002E  1652               	dw	_DMA1_DMAA_ISR shr (0+2)
 14814                           
 14815                           ; Vector 20 : SPI1RX
 14816  000030  165F               	dw	_Default_ISR shr (0+2)
 14817                           
 14818                           ; Vector 21 : SPI1TX
 14819  000032  165F               	dw	_Default_ISR shr (0+2)
 14820                           
 14821                           ; Vector 22 : SPI1
 14822  000034  165F               	dw	_Default_ISR shr (0+2)
 14823                           
 14824                           ; Vector 23 : I2C1RX
 14825  000036  165F               	dw	_Default_ISR shr (0+2)
 14826                           
 14827                           ; Vector 24 : I2C1TX
 14828  000038  165F               	dw	_Default_ISR shr (0+2)
 14829                           
 14830                           ; Vector 25 : I2C1
 14831  00003A  165F               	dw	_Default_ISR shr (0+2)
 14832                           
 14833                           ; Vector 26 : I2C1E
 14834  00003C  165F               	dw	_Default_ISR shr (0+2)
 14835                           
 14836                           ; Vector 27 : U1RX
 14837  00003E  158B               	dw	_UART1_rx_vect_isr shr (0+2)
 14838                           
 14839                           ; Vector 28 : U1TX
 14840  000040  1581               	dw	_UART1_tx_vect_isr shr (0+2)
 14841                           
 14842                           ; Vector 29 : U1E
 14843  000042  165F               	dw	_Default_ISR shr (0+2)
 14844                           
 14845                           ; Vector 30 : U1
 14846  000044  165F               	dw	_Default_ISR shr (0+2)
 14847                           
 14848                           ; Vector 31 : TMR0
 14849  000046  165F               	dw	_Default_ISR shr (0+2)
 14850                           
 14851                           ; Vector 32 : TMR1
 14852  000048  165F               	dw	_Default_ISR shr (0+2)
 14853                           
 14854                           ; Vector 33 : TMR1G
 14855  00004A  165F               	dw	_Default_ISR shr (0+2)
 14856                           
 14857                           ; Vector 34 : TMR2
 14858  00004C  165F               	dw	_Default_ISR shr (0+2)
 14859                           
 14860                           ; Vector 35 : CCP1
 14861  00004E  165F               	dw	_Default_ISR shr (0+2)
 14862                           
 14863                           ; Vector 36 : Undefined
 14864  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 14865                           
 14866                           ; Vector 37 : NCO1
 14867  000052  165F               	dw	_Default_ISR shr (0+2)
 14868                           
 14869                           ; Vector 38 : CWG1
 14870  000054  165F               	dw	_Default_ISR shr (0+2)
 14871                           
 14872                           ; Vector 39 : CLC1
 14873  000056  165F               	dw	_Default_ISR shr (0+2)
 14874                           
 14875                           ; Vector 40 : INT1
 14876  000058  1641               	dw	_INT1_ISR shr (0+2)
 14877                           
 14878                           ; Vector 41 : CMP2
 14879  00005A  165F               	dw	_Default_ISR shr (0+2)
 14880                           
 14881                           ; Vector 42 : DMA2SCNT
 14882  00005C  165F               	dw	_Default_ISR shr (0+2)
 14883                           
 14884                           ; Vector 43 : DMA2DCNT
 14885  00005E  165F               	dw	_Default_ISR shr (0+2)
 14886                           
 14887                           ; Vector 44 : DMA2OR
 14888  000060  165F               	dw	_Default_ISR shr (0+2)
 14889                           
 14890                           ; Vector 45 : DMA2A
 14891  000062  165F               	dw	_Default_ISR shr (0+2)
 14892                           
 14893                           ; Vector 46 : I2C2RX
 14894  000064  165F               	dw	_Default_ISR shr (0+2)
 14895                           
 14896                           ; Vector 47 : I2C2TX
 14897  000066  165F               	dw	_Default_ISR shr (0+2)
 14898                           
 14899                           ; Vector 48 : I2C2
 14900  000068  165F               	dw	_Default_ISR shr (0+2)
 14901                           
 14902                           ; Vector 49 : I2C2E
 14903  00006A  165F               	dw	_Default_ISR shr (0+2)
 14904                           
 14905                           ; Vector 50 : U2RX
 14906  00006C  159F               	dw	_UART2_rx_vect_isr shr (0+2)
 14907                           
 14908                           ; Vector 51 : U2TX
 14909  00006E  1595               	dw	_UART2_tx_vect_isr shr (0+2)
 14910                           
 14911                           ; Vector 52 : U2E
 14912  000070  165F               	dw	_Default_ISR shr (0+2)
 14913                           
 14914                           ; Vector 53 : U2
 14915  000072  165F               	dw	_Default_ISR shr (0+2)
 14916                           
 14917                           ; Vector 54 : TMR3
 14918  000074  165F               	dw	_Default_ISR shr (0+2)
 14919                           
 14920                           ; Vector 55 : TMR3G
 14921  000076  165F               	dw	_Default_ISR shr (0+2)
 14922                           
 14923                           ; Vector 56 : TMR4
 14924  000078  165F               	dw	_Default_ISR shr (0+2)
 14925                           
 14926                           ; Vector 57 : CCP2
 14927  00007A  165F               	dw	_Default_ISR shr (0+2)
 14928                           
 14929                           ; Vector 58 : Undefined
 14930  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 14931                           
 14932                           ; Vector 59 : CWG2
 14933  00007E  165F               	dw	_Default_ISR shr (0+2)
 14934                           
 14935                           ; Vector 60 : CLC2
 14936  000080  165F               	dw	_Default_ISR shr (0+2)
 14937                           
 14938                           ; Vector 61 : INT2
 14939  000082  1645               	dw	_INT2_ISR shr (0+2)
 14940                           
 14941                           ; Vector 62 : Undefined
 14942  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 14943                           
 14944                           ; Vector 63 : Undefined
 14945  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 14946                           
 14947                           ; Vector 64 : Undefined
 14948  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 14949                           
 14950                           ; Vector 65 : Undefined
 14951  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 14952                           
 14953                           ; Vector 66 : Undefined
 14954  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 14955                           
 14956                           ; Vector 67 : Undefined
 14957  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 14958                           
 14959                           ; Vector 68 : Undefined
 14960  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 14961                           
 14962                           ; Vector 69 : Undefined
 14963  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 14964                           
 14965                           ; Vector 70 : TMR5
 14966  000094  148B               	dw	_TMR5_ISR shr (0+2)
 14967                           
 14968                           ; Vector 71 : TMR5G
 14969  000096  165F               	dw	_Default_ISR shr (0+2)
 14970                           
 14971                           ; Vector 72 : TMR6
 14972  000098  1617               	dw	_TMR6_ISR shr (0+2)
 14973                           
 14974                           ; Vector 73 : CCP3
 14975  00009A  165F               	dw	_Default_ISR shr (0+2)
 14976                           
 14977                           ; Vector 74 : CWG3
 14978  00009C  165F               	dw	_Default_ISR shr (0+2)
 14979                           
 14980                           ; Vector 75 : CLC3
 14981  00009E  165F               	dw	_Default_ISR shr (0+2)
 14982                           
 14983                           ; Vector 76 : Undefined
 14984  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 14985                           
 14986                           ; Vector 77 : Undefined
 14987  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 14988                           
 14989                           ; Vector 78 : Undefined
 14990  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 14991                           
 14992                           ; Vector 79 : Undefined
 14993  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 14994                           
 14995                           ; Vector 80 : CCP4
 14996  0000A8  165F               	dw	_Default_ISR shr (0+2)
 14997                           
 14998                           ; Vector 81 : CLC4
 14999  0000AA  165F               	dw	_Default_ISR shr (0+2)
 15000  0000AC                     ivt0x8_undefint:
 15001                           	opt callstack 0
 15002  0000AC  00FF               	reset	
 15003                           
 15004                           	psect	text105
 15005  000000                     __ptext105:
 15006                           	opt callstack 0
 15007                           
 15008                           	psect	rparam
 15009  0000                     
 15010                           	psect	temp
 15011  00003E                     btemp:
 15012                           	opt callstack 0
 15013  00003E                     	ds	32
 15014  0000                     wtemp0	set	btemp
 15015  0000                     wtemp1	set	btemp+2
 15016  0000                     wtemp2	set	btemp+4
 15017  0000                     wtemp3	set	btemp+6
 15018  0000                     wtemp4	set	btemp+8
 15019  0000                     wtemp5	set	btemp+10
 15020  0000                     wtemp8	set	btemp+1
 15021  0000                     ttemp0	set	btemp
 15022  0000                     ttemp1	set	btemp+3
 15023  0000                     ttemp2	set	btemp+6
 15024  0000                     ttemp3	set	btemp+9
 15025  0000                     ttemp5	set	btemp+1
 15026  0000                     ttemp6	set	btemp+4
 15027  0000                     ttemp7	set	btemp+8
 15028  0000                     ltemp0	set	btemp
 15029  0000                     ltemp1	set	btemp+4
 15030  0000                     ltemp2	set	btemp+8
 15031  0000                     lltemp0	set	btemp
 15032  0000                     lltemp1	set	btemp+8
 15033  0000                     lltemp2	set	btemp+16
 15034  0000                     lltemp3	set	btemp+24
 15035                           tosu	equ	0x3FFF
 15036                           tosh	equ	0x3FFE
 15037                           tosl	equ	0x3FFD
 15038                           stkptr	equ	0x3FFC
 15039                           pclatu	equ	0x3FFB
 15040                           pclath	equ	0x3FFA
 15041                           pcl	equ	0x3FF9
 15042                           tblptru	equ	0x3FF8
 15043                           tblptrh	equ	0x3FF7
 15044                           tblptrl	equ	0x3FF6
 15045                           tablat	equ	0x3FF5
 15046                           prodh	equ	0x3FF4
 15047                           prodl	equ	0x3FF3
 15048                           indf0	equ	0x3FEF
 15049                           postinc0	equ	0x3FEE
 15050                           postdec0	equ	0x3FED
 15051                           preinc0	equ	0x3FEC
 15052                           plusw0	equ	0x3FEB
 15053                           fsr0h	equ	0x3FEA
 15054                           fsr0l	equ	0x3FE9
 15055                           wreg	equ	0x3FE8
 15056                           indf1	equ	0x3FE7
 15057                           postinc1	equ	0x3FE6
 15058                           postdec1	equ	0x3FE5
 15059                           preinc1	equ	0x3FE4
 15060                           plusw1	equ	0x3FE3
 15061                           fsr1h	equ	0x3FE2
 15062                           fsr1l	equ	0x3FE1
 15063                           bsr	equ	0x3FE0
 15064                           indf2	equ	0x3FDF
 15065                           postinc2	equ	0x3FDE
 15066                           postdec2	equ	0x3FDD
 15067                           preinc2	equ	0x3FDC
 15068                           plusw2	equ	0x3FDB
 15069                           fsr2h	equ	0x3FDA
 15070                           fsr2l	equ	0x3FD9
 15071                           status	equ	0x3FD8


Data Sizes:
    Strings     175
    Constant    0
    Data        281
    BSS         609
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      1      63
    BANK0           160      1     149
    BANK1           256      0     242
    BANK2           256      0     192
    BANK3           256      0     246
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    _r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_21(CODE[3]), STR_17(CODE[3]), 

    r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_21(CODE[3]), STR_17(CODE[3]), 

    _l	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[21]), 
		 -> STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[19]), STR_7(CODE[23]), 
		 -> STR_6(CODE[6]), STR_5(CODE[14]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    l	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[21]), 
		 -> STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[19]), STR_7(CODE[23]), 
		 -> STR_6(CODE[6]), STR_5(CODE[14]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 85
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_3(CODE[5]), V(BANK0[85]), 

    a	PTR const unsigned char  size(2) Largest target is 85
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_3(CODE[5]), V(BANK0[85]), 

    fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_11(CODE[21]), STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[19]), 
		 -> STR_7(CODE[23]), STR_6(CODE[6]), STR_5(CODE[14]), STR_4(CODE[15]), 
		 -> STR_2(CODE[12]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(1) Largest target is 85
		 -> V(BANK0[85]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 85
		 -> V(BANK0[85]), 

    s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    S4234_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 85
		 -> V(BANK0[85]), 

    fp.buffer	PTR unsigned char  size(1) Largest target is 85
		 -> V(BANK0[85]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[21]), 
		 -> STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[19]), STR_7(CODE[23]), 
		 -> STR_6(CODE[6]), STR_5(CODE[14]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(1) Largest target is 23
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[21]), 
		 -> STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[19]), STR_7(CODE[23]), 
		 -> STR_6(CODE[6]), STR_5(CODE[14]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_3(CODE[5]), V(BANK0[85]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 1
		 -> cfmt(STACK[1]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_3(CODE[5]), V(BANK0[85]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_3(CODE[5]), 
		 -> V(BANK0[85]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    F16590.header	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H24(BANK1[27]), H18(BANK1[21]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK0[15]), H10(BANK1[65]), 

    byte_block	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H24(BANK1[27]), H18(BANK1[21]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK0[15]), H10(BANK1[65]), 

    k	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H24(BANK1[27]), H18(BANK1[21]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK0[15]), H10(BANK1[65]), 

    t_link	PTR enum E16164 size(1) Largest target is 85
		 -> V(BANK0[85]), 

    S3581response_type$header	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H24(BANK1[27]), H18(BANK1[21]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK0[15]), H10(BANK1[65]), 

    block.header	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H24(BANK1[27]), H18(BANK1[21]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK0[15]), H10(BANK1[65]), 

    r_link	PTR enum E16164 size(1) Largest target is 85
		 -> V(BANK0[85]), 

    byte_block	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H24(BANK1[27]), H18(BANK1[21]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK0[15]), H10(BANK1[65]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(1) Largest target is 85
		 -> V(BANK0[85]), 

    strPtr	PTR unsigned char  size(1) Largest target is 85
		 -> V(BANK0[85]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1984spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1984spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT2_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT2_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT2_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT2_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT2_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _INT2_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _INT2_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _INT2_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _INT2_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _INT2_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _INT2_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _INT2_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _INT2_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _INT2_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _INT2_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _INT2_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _INT2_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _INT2_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _INT2_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _INT2_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _INT2_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _INT2_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _INT2_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _INT2_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _INT2_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _INT2_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _INT2_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _INT2_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _INT2_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   41518
                  _SYSTEM_Initialize
                   _UART1_put_buffer
                             _WaitMs
                _eaDogM_WriteCommand
            _eaDogM_WriteStringAtPos
                       _init_display
                         _r_protocol
                            _sprintf
                         _t_protocol
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _t_protocol                                           5     4      1    1810
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                   _UART1_put_buffer
                             _WaitMs
                    _secs_II_message
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_II_message                                      2     0      2      88
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             19     9     10    8312
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _r_protocol                                           2     1      1    1639
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                             _WaitMs
                       _run_checksum
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_send                                            9     5      4     837
                        _UART1_Write
                  _UART1_is_tx_ready
                   _UART1_put_buffer
                     _block_checksum
 ---------------------------------------------------------------------------------
 (3) _block_checksum                                       8     4      4     167
 ---------------------------------------------------------------------------------
 (3) _UART1_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART1_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART1_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (2) _run_checksum                                         2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (3) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1202
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteStringAtPos                              3     0      3   18878
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteString                                   1     0      1    9473
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1    9343
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_dma                                     1     0      1    9312
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      22
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      22
 ---------------------------------------------------------------------------------
 (3) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (3) _printf                                               7     4      3    8087
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     1      5    7988
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           39    33      6    7749
                               _ctoa
                               _dtoa
                              _fputc
                               _stoa
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              6     2      4     225
 ---------------------------------------------------------------------------------
 (4) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (7) _ringBufS_put_dma                                     3     0      3     186
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     165
                    _ADCC_Initialize
                    _CLC1_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                     _DSM_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
                    _NCO1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      30
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      30
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      15
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      15
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NCO1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      45
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _DSM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      15
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR6_ISR                                            1     1      0      90
                                              0 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR5_ISR                                            1     1      0      60
                                              0 BANK0      1     1      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR5_WriteTimer                                     2     0      2      60
 ---------------------------------------------------------------------------------
 (13) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _CLC1_Initialize
     _CLKREF_Initialize
     _DMA1_Initialize
     _DSM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _NCO1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _UART1_put_buffer
   _WaitMs
     _StartTimer
     _TimerDone
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _eaDogM_WriteStringAtPos
     _eaDogM_WriteString
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _strlen
       _wait_lcd_set
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _r_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _block_checksum
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _fputc
           _putch
             _ringBufS_put_dma
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
   _t_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _UART1_put_buffer
     _WaitMs
       _StartTimer
       _TimerDone
     _secs_II_message
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _block_checksum
   _wait_lcd_done
     _wdtdelay

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _INT2_ISR (ROOT)
   _INT2_CallBack
     Absolute function(Fake) *
     _INT2_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F6      11       96.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C0       9       75.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F2       7       94.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      1      95       5       93.1%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      1      3F       1      100.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     37C      58        0.0%
DATA                 0      0     37C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Mar  9 12:24:41 2019

                    _SPI1_Exchange8bit 57D0                                      _V 0089  
     __end_of_TMR5_SetInterruptHandler 5562                            __CFG_CP$OFF 000000  
              __size_of_ringBufS_flush 0092                            __CFG_LVP$ON 000000  
                                  _H10 0100                                    _H12 00E5  
                                  _H13 0182                                    _H14 0171  
                                  _H24 0141                                    _H18 015C  
                                  _H53 0386                                    l194 58CC  
                                  l572 5216                                    l717 5324  
                                  l579 51C4                                    l597 52F8  
                                  l847 57DE                                    _GIE 01FE97  
                                  u940 4D9E                                    u965 4DD2  
                                  u966 4DD4                                    u958 4DA0  
                                  _abs 505A                                    _pad 41EA  
              __size_of_PMD_Initialize 0014                                    tosl 003FFD  
                                  wreg 003FE8                          _INT0_CallBack 56E6  
                         _run_checksum 53AA                     _UART1_Transmit_ISR 52D2  
                        __CFG_BBEN$OFF 000000                          _INT1_CallBack 5708  
                         __CFG_ZCD$OFF 000000                                   l1118 51A8  
                                 l1305 4F26                                   l1217 2AC2  
                                 l1242 2C9A                                   l1234 2BA8  
                                 l1243 2CCA                                   l1238 2BAE  
                                 l1441 4C26                                   l1513 2D68  
                                 l1437 47F8                                   l1533 2FB4  
                                 l1702 340E                                   l2416 509A  
                                 l1721 2556                                   l1538 2FDE  
                                 l1546 386C                                   l1571 3A5A  
                                 l5021 51E6                                   l2438 4400  
                                 l2470 41E0                                   l1566 3A3C  
                                 l1655 4246                                   l5033 534C  
                                 l1577 3EB4                                   l1675 263E  
                                 l5203 51EE                                   l5019 51E4  
                                 l5301 53B6                                   l5233 5116  
                                 l5229 50EC                                   l5085 56BC  
                                 l5421 3FFC                                   l5405 3FDE  
                                 l3743 5190                                   l5239 536A  
                                 l5351 3EE0                                   l7111 2BFA  
                                 l7023 29F0                                   l5513 52F4  
                                 l6313 4A2C                                   l4625 508A  
                                 l5345 3EC4                                   l5433 401C  
                                 l7121 2C72                                   l7113 2C2C  
                                 l5523 57AC                                   l6323 423E  
                                 l4643 3698                                   l5363 3F1C  
                                 l5435 4042                                   l7115 2C56  
                                 l7035 2A22                                   l6309 49EE  
                                 l6333 42D6                                   l6325 4250  
                                 l6341 4C4C                                   l4661 37B0  
                                 l4637 3644                                   l6413 2996  
                                 l5381 3F88                                   l5357 3EFE  
                                 l5535 5320                                   l4583 4826  
                                 l6319 4216                                   l6343 4C78  
                                 l6511 23EC                                   l5545 57CC  
                                 l4585 4848                                   l6329 428C  
                                 l4649 36DE                                   l4681 3B24  
                                 l6409 295A                                   l6441 3444  
                                 l6425 3390                                   l6521 2494  
                                 l5369 3F3A                                   l7129 2C86  
                                 l7081 2B46                                   l6531 24EC  
                                 l5379 3F5C                                   l7067 2AE2  
                                 l7139 2C9E                                   l6445 3480  
                                 l4853 40EE                                   l6613 450E  
                                 l5397 3FA6                                   l7093 2B78  
                                 l7085 2B4E                                   l6375 2678  
                                 l6367 262E                                   l6463 35A2  
                                 l6455 353A                                   l6527 24E8  
                                 l5399 3FC0                                   l4697 3C58  
                                 l4689 3BAC                                   l6449 34B0  
                                 l4849 40BE                                   l6537 2508  
                                 l4945 4F38                                   l6617 4580  
                                 l7089 2B68                                   l6299 432E  
                                 l6379 2696                                   l6459 3566  
                                 l6571 31F8                                   l6389 28A8  
                                 l6565 318E                                   l6495 2274  
                                 l6487 2190                                   l6591 4A8E  
                                 l6559 30D0                                   l6815 2DE8  
                                 l6807 2DC0                                   l6593 4ACE  
                                 l6657 498E                                   l6841 2EB0  
                                 l6833 2E5E                                   l6817 2DF4  
                                 l6921 38AE                                   l6499 22C6  
                                 l6579 32A6                                   l6931 38E8  
                                 l6685 3E32                                   l6677 3D84  
                                 l6853 2F2E                                   l6845 2EE0  
                                 l6837 2E82                                   l6829 2E28  
                                 l6941 392A                                   l6863 2F4C  
                                 l6855 2F32                                   l6697 3E86  
                                 l6689 3E4C                                   l6785 2D32  
                                 l6953 39A2                                   l6945 3942  
                                 l6929 38D6                                   l6699 3EAE  
                                 l6955 39AE                                   l6947 394E  
                                 l6885 2FCE                                   l6973 3A10  
                                 l6887 2FD2                                   l6895 2FE4  
                                 l6967 39FE                                   l6897 3026  
                                 l6985 3A4E                                   l6993 3A6E  
                                 l6987 3A52                                   l6995 3AB0  
                                 l6989 3A60                                   STR_1 2062  
                                 STR_2 2090                                   STR_3 20A2  
                                 STR_4 2073                                   STR_5 2082  
                                 STR_6 209C                                   STR_7 2001  
                                 STR_8 202D                                   STR_9 2051  
                                 u2000 3B74                                   u2010 3BA6  
                                 u2020 3BD8                                   u2040 3C90  
                                 u2060 3CE2                                   _LATA 003FBA  
                                 _LATB 003FBB                                   _LATC 003FBC  
                                 u2400 4196                                   _LATD 003FBD  
                                 _LATE 003FBE                                   _LATF 003FBF  
                                 u3300 439E                                   u4005 2F96  
                                 u4007 2F9A                                   u3410 2602  
                                 u1900 36D8                                   u3500 291A  
                                 u4140 2A08                                   u1910 370A  
                                 u3430 2614                                   u3280 4322  
                                 u1840 506E                                   u3520 2930  
                                 u3600 34EC                                   u1770 4876  
                                 u1930 37E8                                   u3450 2664  
                                 u1860 363E                                   u3460 28BC  
                                 u3380 2590                                   u4148 2A0A  
                                 u1950 383A                                   u3390 2592  
                                 u3630 35C8                                   u3471 28EC  
                                 u3607 34DE                                   u1880 3694  
                                 u3480 2902                                   u3800 497E  
                                 u1777 4868                                   u3481 2900  
                                 u3490 2916                                   u3810 3D7E  
                                 _T6PR 003F93                                   u1891 369E  
                                 u1980 3B1E                                   _PMD0 0039C0  
                                 _PMD1 0039C1                                   u3590 34A6  
                                 u3670 21E0                                   _PMD2 0039C2  
                                 _PMD3 0039C3                                   u3760 331A  
                                 _PMD4 0039C4                                   _PMD5 0039C5  
                                 u3690 231E                                   _PMD6 0039C6  
                                 _PMD7 0039C7                                   u3985 2F76  
                                 u3995 2F86                                   u3987 2F7A  
                                 u3997 2F8A                                   _PLLR 01CEE0  
                                 _WPUA 003A41                                   _WPUB 003A51  
                                 _WPUC 003A61                                   _WPUD 003A71  
                                 _WPUE 003A81                                   _WPUF 003A91  
                        _INT2_CallBack 572A                       __end_of_ADCC_ISR 53AA  
                        __CFG_FCMEN$ON 000000                                   _dbuf 01D2  
                                 _ctoa 4C2E                                   _main 29E0  
                                 _dtoa 2560                                   _prec 0026  
                                 _nout 0022                                   fsr0h 003FEA  
                                 fsr1h 003FE2                                   indf0 003FEF  
                                 fsr2h 003FDA                                   fsr0l 003FE9  
                                 indf1 003FE7                                   indf2 003FDF  
                                 fsr1l 003FE1                                   fsr2l 003FD9  
                                 _stoa 3324                                   btemp 003E  
    __size_of_INT2_SetInterruptHandler 0028                                   prodl 003FF3  
                                 start 00AE                        _timer5ReloadVal 002E  
            __end_of_SPI1_Exchange8bit 57EE                          __CFG_CSWEN$ON 000000  
                    _UART1_rx_vect_isr 562C                           ___param_bank 000000  
           __size_of_UART1_is_rx_ready 0008                     ?_UART1_rx_vect_isr 005F  
           __size_of_UART1_is_tx_ready 0008                       __end_of_INT0_ISR 5902  
                     __end_of_INT1_ISR 5912                       __end_of_INT2_ISR 5922  
       __size_of_OSCILLATOR_Initialize 0016               __end_of_ringBufS_put_dma 4800  
        __end_of_OSCILLATOR_Initialize 58D2                                  PRLOCK 0039EF  
                      __end_of___aodiv 3862                                  _ADCAP 003EF5  
                                _ADACT 003EFE                                  _ADCLK 003EFF  
                      __end_of___aomod 3D06                                  _ADPCH 003EF1  
                                _ADREF 003EFD                                  STR_10 2040  
                                STR_11 2018                                  STR_12 2099  
                                STR_21 20AA                                  STR_13 20AD  
                                STR_15 20A7                                  STR_17 20A7  
                        __CFG_WDTE$OFF 000000                                  STR_19 20AA  
                                _ADRPT 003EEC                                  _U1P1H 003DED  
                                _U1P2H 003DEF                                  _U1P1L 003DEC  
                                _U1P3H 003DF1                                  _U1P2L 003DEE  
                                _U1P3L 003DF0                                  _U2P1L 003DD4  
                                _U2P2L 003DD6                                  _U2P3L 003DD8  
                                _T5CLK 003F9D                                  _T5CON 003F9A  
                                _T6CON 003F94                         __CFG_DEBUG$OFF 000000  
                                _T6HLT 003F95                                  _U1UIR 003DF8  
                                _U1RXB 003DE8                                  _U2UIR 003DE0  
                                _U1TXB 003DEA                                  _U2RXB 003DD0  
                                _U2TXB 003DD2                                  _T6TMR 003F92  
                                _T6RST 003F97                    ??_UART1_rx_vect_isr 005F  
                                _ISRPR 0039F1                                  _OSCEN 0039DD  
                                _TMR5H 003F99                                  _TMR5L 003F98  
                                _TRISA 003FC2                                  _TRISB 003FC3  
                                _TRISC 003FC4                                  _TRISD 003FC5  
                                _TRISE 003FC6                                  _TRISF 003FC7  
                          _Default_ISR 597C      __size_of_TMR6_SetInterruptHandler 0028  
                    _UART1_tx_vect_isr 5604                          __CFG_WRTB$OFF 000000  
                        __CFG_WRTC$OFF 000000                          __CFG_WRTD$OFF 000000  
                     __end_of_TMR5_ISR 526A                           _DMA1CON0bits 003BFC  
                     __end_of_TMR6_ISR 5876                           _DMA1CON1bits 003BFD  
                   r_protocol@rxData_l 0031                                  _flags 0028  
                                _fputc 42FE             __size_of_send_lcd_cmd_long 0028  
                                _fputs 49DE                     __CFG_MCLRE$EXTMCLR 000000  
                   ?_UART1_tx_vect_isr 005F                                  _width 0024  
                                _putch 5842               _INT1_SetInterruptHandler 558A  
                                pclath 003FFA                                  tablat 003FF5  
              __size_of_DSM_Initialize 001C                                  ltemp0 003E  
                                ltemp1 0042                                  ltemp2 0046  
             __size_of_DMA1_Initialize 006A                                  plusw1 003FE3  
                                ttemp0 003E                                  ttemp1 0041  
                                ttemp2 0044                                  ttemp3 0047  
                                ttemp5 003F                                  ttemp6 0042  
                                ttemp7 0046                                  status 003FD8  
  __end_of_UART1_SetRxInterruptHandler 54EA            _UART1_SetRxInterruptHandler 54C2  
                                wtemp0 003E                                  wtemp1 0040  
                                wtemp2 0042                                  wtemp3 0044  
                                wtemp4 0046                                  wtemp5 0048  
                                wtemp8 003F                        __end_of_sprintf 4756  
                      __end_of_strncmp 41EA                    ??_UART1_tx_vect_isr 005F  
            __size_of_DMA1_DMADCNT_ISR 000A              __end_of_UART1_rx_vect_isr 5652  
             __size_of_SPI1_Initialize 0016                        _TMR5_Initialize 50A0  
                __end_of_ringBufS_init 544A                        __initialization 45C6  
                    _UART2_rx_vect_isr 567C                           __end_of_ctoa 4CB6  
                         __end_of_main 2D2E                           __end_of_dtoa 29E0  
                         __end_of_stoa 35E2                         __CFG_SAFEN$OFF 000000  
                   ?_UART2_rx_vect_isr 005F               _TMR5_SetInterruptHandler 553A  
                        __activetblptr 000003              __size_of_DMA1_DMASCNT_ISR 000E  
 __size_of_UART1_SetTxInterruptHandler 0028                    ??_UART2_rx_vect_isr 005F  
            __end_of_UART1_tx_vect_isr 562A                                 INTCON0 003FD2  
 __size_of_UART2_SetRxInterruptHandler 0028                         __CFG_MVECEN$ON 000000  
                      _TMR6_Initialize 54EA                       _UART1_Initialize 4DF6  
                    _UART2_tx_vect_isr 5654                     _UART2_Transmit_ISR 52FE  
                               _ADACCU 003EEA                                 _ADACQH 003EF4  
                               _ADACQL 003EF3                                 _ADCON0 003EF8  
                               _ADCON1 003EF9                                 _ADCON2 003EFA  
                               _ADCON3 003EFB                                 _ADLTHH 003EDF  
                               _ADLTHL 003EDE                                 _ADPREH 003EF7  
                               _ADPREL 003EF6                                 _DMA1PR 0039F3  
                               _DMA2PR 0039F4                                 _ADSTAT 003EFC  
                               _ADUTHH 003EE1                                 _ADUTHL 003EE0  
                               _ANSELA 003A40                                 _ANSELB 003A50  
                               _ANSELC 003A60                                 _ANSELD 003A70  
                               _ANSELE 003A80                                 _ANSELF 003A90  
                   ?_UART2_tx_vect_isr 005F                                 _MD1SRC 003CFC  
                               _U1CON0 003DF2                                 _U1CON1 003DF3  
                               _U1CON2 003DF4                    __size_of_UART1_Read 003E  
                               _U1BRGH 003DF6                                 _U1FIFO 003DF7  
                               _U2CON0 003DDA                                 _U2CON1 003DDB  
                               _U1BRGL 003DF5                                 _U2CON2 003DDC  
                               _U2BRGH 003DDE                                 _U2FIFO 003DDF  
                               _U2BRGL 003DDD                                 _T5GATE 003F9C  
                               _T5GCON 003F9B                                 _MAINPR 0039F2  
                               _RA4PPS 003A04                                 _RA5PPS 003A05  
                               _RA6PPS 003A06                                 _RC3PPS 003A13  
                               _RB6PPS 003A0E                                 u102_40 587E  
                               u102_46 5880                                 _RC5PPS 003A15  
                               _ODCONA 003A42                                 _ODCONB 003A52  
                               _ODCONC 003A62                                 _RC6PPS 003A16  
                               u111_48 56F4                                 _ODCOND 003A72  
                               _ODCONE 003A82                                 _ODCONF 003A92  
                               u113_48 5716                                 i2l1135 5262  
                       __CFG_WDTCCS$SC 000000                                 u115_48 5738  
                               u126_48 577C                                 _SCANPR 0039F7  
                               u283_48 575A                                 _IVTADH 00389E  
                               _IVTADL 00389D                                 _IVTADU 00389F  
         __size_of_eaDogM_WriteCommand 000E                                 _OSCFRQ 0039DF  
             __end_of_send_lcd_cmd_dma 4FC4                    ??_UART2_tx_vect_isr 005F  
            __end_of_UART2_rx_vect_isr 56A2             __size_of_SPI1_Exchange8bit 001E  
               __size_of_DMA1_DMAA_ISR 000A                         __CFG_XINST$OFF 000000  
                    _CLKREF_Initialize 5932                       _UART2_Initialize 4EBC  
                               _WaitMs 5354   __size_of_ADCC_SetADIInterruptHandler 0028  
                       __CFG_STVREN$ON 000000                         _ringBufS_flush 4B9C  
                               _memset 3038                                 clear_0 4646  
                               clear_1 4652                                 clear_2 465E  
                               clear_3 466A                                 clear_4 4676  
                               _printf 4E5A                     _eaDogM_WriteString 4942  
                            ?_ADCC_ISR 005F                                 _strlen 4800  
                   __size_of_TimerDone 0022                        _ADCC_Initialize 5010  
                       _PMD_Initialize 58D2   __end_of_INT2_DefaultInterruptHandler 5988  
__size_of_INT2_DefaultInterruptHandler 0002           _INT2_DefaultInterruptHandler 5986  
                         __pdataCOMRAM 005E              __end_of_UART2_tx_vect_isr 567A  
                               lltemp0 003E                                 lltemp1 0046  
                               lltemp2 004E                                 lltemp3 0056  
                         __mediumconst 0000                                 tblptrh 003FF7  
                               tblptrl 003FF6                                 tblptru 003FF8  
                     __end_of_wdtdelay 4F76                       __end_of_vfprintf 4B0A  
                           _StartTimer 526A                        _CLC1_Initialize 56C4  
        __size_of_INTERRUPT_Initialize 0066                __end_of_TMR5_Initialize 50E6  
                    _SYSTEM_Initialize 512C                             __accesstop 0060  
              __end_of__initialization 4688                              ?_INT0_ISR 005F  
                            ?_INT1_ISR 005F                              ?_INT2_ISR 005F  
            __end_of_CLKREF_Initialize 593C                          ___rparam_used 000001  
           __size_of_UART1_rx_vect_isr 0026                        _TMR5_WriteTimer 516E  
               __end_of_ringBufS_flush 4C2E                         __pcstackCOMRAM 005F  
                           ___inthi_sp 0D50                           __pidataBANK0 5890  
                         __pidataBANK1 4B0A                           __pidataBANK3 4CB6  
                            ?_TMR5_ISR 005F                              ?_TMR6_ISR 005F  
                       ivt0x8_undefint 00AC                          __end_of_fputc 440A  
                        __end_of_fputs 4A76                  __end_of_TMR5_CallBack 5790  
                        __end_of_putch 585C                __end_of_TMR6_Initialize 5512  
               __end_of_PMD_Initialize 58E6                __size_of_block_checksum 00D2  
                           ??_ADCC_ISR 005F                  __end_of_TMR6_CallBack 576E  
          __size_of_EXT_INT_Initialize 004C             __size_of_UART1_tx_vect_isr 0026  
                        _DMA1_DMAA_ISR 5948       __end_of_INT2_SetInterruptHandler 558A  
             _UART2_RxInterruptHandler 0016              __end_of_SYSTEM_Initialize 516E  
                      __CFG_PR1WAY$OFF 000000                        __CFG_IVT1WAY$ON 000000  
                       _DSM_Initialize 5826                             __pbssBANK0 0060  
                           __pbssBANK1 0192                             __pbssBANK2 0200  
                           __pbssBANK3 0300                  _INT0_InterruptHandler 001F  
                           ??_INT0_ISR 005F                             ??_INT1_ISR 005F  
                           ??_INT2_ISR 005F                      __end_of_TimerDone 56C4  
                     _DMA1_DMADCNT_ISR 593C              __size_of_UART1_put_buffer 002A  
           __size_of_UART2_rx_vect_isr 0026                                IVTBASEH 003FD6  
                              IVTBASEL 003FD5                                IVTBASEU 003FD7  
                __end_of_wait_lcd_done 580A                        __CFG_PPS1WAY$ON 000000  
     __end_of_TMR6_SetInterruptHandler 553A                __end_of_ADCC_Initialize 505A  
                           ??_TMR5_ISR 00F4                             ??_TMR6_ISR 005F  
                   __size_of_secs_send 01B8                                _CLC1CON 003C74  
                              _CLC1POL 003C75                                _DMA1DSA 003BF0  
                              _DMA1DSZ 003BEE                                _DMA1SSA 003BF9  
                              _DMA1SSZ 003BF7                                _ADSTPTH 003EE5  
                              _ADSTPTL 003EE4                                _MD1CARH 003CFE  
                              _MD1CARL 003CFD                      _UART1_Receive_ISR 5790  
                              _CLKRCLK 003CE6                                _CLKRCON 003CE5  
                              _NCO1CLK 003F3F                         ?_DMA1_DMAA_ISR 005F  
                     _DMA1_DMASCNT_ISR 5924                                _NCO1CON 003F3E  
                              _U1ERRIE 003DFA                                _U1ERRIR 003DF9  
              __end_of_CLC1_Initialize 56E6                                _U2ERRIE 003DE2  
                              _U2ERRIR 003DE1                                _INT0PPS 003AC0  
                  __CFG_PWRTS$PWRT_OFF 000000                                _INT1PPS 003AC1  
                              _INT2PPS 003AC2                           ?_Default_ISR 005F  
                 __size_of_UART1_Write 003E             __size_of_UART2_tx_vect_isr 0026  
                              _U1RXPPS 003AE5                                _U2RXPPS 003AE8  
                              _OSCCON1 0039D9                                _OSCCON3 0039DB  
                              _IVTLOCK 003FD4                     __size_of_vfpfcnvrt 04AE  
                              _SPI1CLK 003D1C                                _SPI1RXB 003D10  
                              _SPI1TXB 003D11                                _OSCTUNE 0039DE  
               __end_of_DSM_Initialize 5842                                _SLRCONA 003A43  
                              _SLRCONB 003A53                                _SLRCONC 003A63  
                              _SLRCOND 003A73                                _SLRCONE 003A83  
                              _SLRCONF 003A93                     __size_of_start_lcd 0006  
              __end_of_TMR5_WriteTimer 51AE                     __end_of_UART1_Read 522A  
    __size_of_INT0_SetInterruptHandler 0028             __size_of_CLKREF_Initialize 000A  
              __size_of_DMA1_DMAOR_ISR 000A                                __Hparam 0000  
                              __Lparam 0000               __end_of_UART1_Initialize 4E5A  
                      __size_of_WaitMs 002A                                ___aodiv 35E2  
                              ___aomod 3AC6              __end_of_UART1_Receive_ISR 57B0  
                         __psmallconst 2000                   __end_of_init_display 44F4  
                              __pcinit 45C6                        __size_of_memset 02EC  
                  _eaDogM_WriteCommand 58E6                                __ramtop 2000  
          __size_of_UART1_Transmit_ISR 002C               __size_of_NCO1_Initialize 001C  
                              __ptext0 29E0                                __ptext1 3862  
                              __ptext2 3EBE                                __ptext3 468E  
                              __ptext4 2D2E                                __ptext5 3D06  
                              __ptext6 44F4                                __ptext7 532A  
                              __ptext8 595E                                __ptext9 51AE  
                    _UART2_Receive_ISR 57B0                        __size_of_printf 0062  
                      __CFG_WRTAPP$OFF 000000                        __size_of_strlen 00A2  
                              us207999 3CF4                                us337999 257A  
                              us354999 3336                  _OSCILLATOR_Initialize 58BC  
                              us196999 384C                           __size_of_abs 0046  
                              _r_block 0060                           __size_of_pad 0114  
                      __CFG_WRTSAF$OFF 000000                              _T5CONbits 003F9A  
             __end_of_UART2_Initialize 4F1A             __size_of_SYSTEM_Initialize 0042  
                              _sprintf 468E                                _strncmp 405A  
                 end_of_initialization 4688                      __end_of_secs_send 3EBE  
             _INT2_SetInterruptHandler 5562               __size_of_secs_II_message 019C  
                           _r_protocol 2D2E    __end_of_UART1_SetTxInterruptHandler 54C2  
          _UART1_SetTxInterruptHandler 549A    __end_of_UART2_SetRxInterruptHandler 549A  
          _UART2_SetRxInterruptHandler 5472                             _t_protocol 3862  
                    __end_of_vfpfcnvrt 2560                              _SPI1TCNTL 003D12  
                              postdec1 003FE5                                postdec2 003FDD  
                              postinc0 003FEE                                postinc1 003FE6  
                              postinc2 003FDE                    __size_of_StartTimer 003C  
                    __end_of_start_lcd 597A              __end_of_UART2_Receive_ISR 57D0  
                       wdtdelay@dcount 0085                  __CFG_WDTCPS$WDTCPS_31 000000  
                      ??_DMA1_DMAA_ISR 00F4                         _block_checksum 44F4  
                _INT1_InterruptHandler 001C                              _PORTDbits 003FCD  
             _TMR6_SetInterruptHandler 5512                  _TMR5_InterruptHandler 0004  
 __size_of_UART2_SetTxInterruptHandler 0028                      __size_of_ADCC_ISR 002A  
  __end_of_ADCC_SetADIInterruptHandler 5602            _ADCC_SetADIInterruptHandler 55DA  
               __size_of_ringBufS_init 0028                       __CFG_FEXTOSC$ECH 000000  
                      _DMA1_Initialize 4D26                        _SPI1_Initialize 58A6  
                     _UART1_put_buffer 532A                      __size_of_INT0_ISR 000E  
                    __size_of_INT1_ISR 000E                      __size_of_INT2_ISR 000E  
                       __end_of_WaitMs 537E           __end_of_INTERRUPT_Initialize 4DF6  
               __end_of_block_checksum 45C6   __end_of_INT0_DefaultInterruptHandler 5984  
__size_of_INT0_DefaultInterruptHandler 0002           _INT0_DefaultInterruptHandler 5982  
           __size_of_UART1_Receive_ISR 0020                          __pidataCOMRAM 598A  
                    __size_of_TMR5_ISR 003E                      __size_of_TMR6_ISR 001A  
          __size_of_UART2_Transmit_ISR 002C                         __end_of_memset 3324  
                       __end_of_printf 4EBC               __end_of_DMA1_DMADCNT_ISR 5946  
                __end_of_INT0_CallBack 5708                         __end_of_strlen 48A2  
                  start_initialization 45C6   __end_of_TMR5_DefaultInterruptHandler 5890  
__size_of_TMR5_DefaultInterruptHandler 001A           _TMR5_DefaultInterruptHandler 5876  
      __size_of_PIN_MANAGER_Initialize 00A0                            __end_of_abs 50A0  
                __end_of_INT1_CallBack 572A                            __end_of_pad 42FE  
                 __size_of_Default_ISR 0006                   __end_of_send_lcd_cmd 5422  
                           ivt0x8_base 0008                  __end_of_INT2_CallBack 574C  
                 secs_II_message@block 0001                          _uart1RxBuffer 0192  
                        _uart1TxBuffer 0280                          _uart2RxBuffer 0200  
             __end_of_DMA1_DMASCNT_ISR 5932                          _uart2TxBuffer 0240  
                       _DMA1_DMAOR_ISR 5954                       __CFG_LPBOREN$OFF 000000  
                __size_of_init_display 00EA            __size_of_eaDogM_WriteString 009C  
                            _TimerDone 56A2                          _ringBufS_init 5422  
                          _MD1CON0bits 003CFA                            _MD1CON1bits 003CFB  
                          __pdataBANK0 00DE                            __pdataBANK1 0100  
                          __pdataBANK3 0386             __size_of_UART2_Receive_ISR 0020  
           __end_of_EXT_INT_Initialize 5010                        run_checksum@sum 002A  
      __end_of_eaDogM_WriteStringAtPos 52D2                __end_of_DMA1_Initialize 4D90  
                          __pbssCOMRAM 0001       __end_of_INT0_SetInterruptHandler 55DA  
                        __pcstackBANK0 00F4                __end_of_SPI1_Initialize 58BC  
             _UART1_RxInterruptHandler 0010               _UART2_TxInterruptHandler 0013  
            __size_of_ringBufS_put_dma 00AA                           _init_display 440A  
               __end_of_DMA1_DMAOR_ISR 595E                 __size_of_TMR5_CallBack 0022  
                _INT2_InterruptHandler 0019                  _TMR6_InterruptHandler 0007  
               __size_of_TMR6_CallBack 0022                 _PIN_MANAGER_Initialize 48A2  
                 __end_of_wait_lcd_set 5974                              __ptext100 5954  
                            __ptext101 522C                              __ptext102 516E  
                            __ptext103 576E                              __ptext104 5876  
                            __ptext105 0000                     __end_of_StartTimer 52A6  
                    __size_of_wdtdelay 005C                      __size_of_vfprintf 0094  
                             _ADCC_ISR 5380                    __size_of_r_protocol 030A  
               __CFG_BBSIZE$BBSIZE_512 000000                            __smallconst 2000  
                             _CLC1GLS0 003C7A                               _CLC1GLS1 003C7B  
                             _CLC1GLS2 003C7C                               _CLC1GLS3 003C7D  
                             _CLC1SEL0 003C76                               _CLC1SEL1 003C77  
                             _CLC1SEL2 003C78                               _CLC1SEL3 003C79  
                             _DMA1CON0 003BFC                               _DMA1CON1 003BFD  
                             _DMA1AIRQ 003BFE                               _DMA1SIRQ 003BFF  
                          _NCO1CONbits 003F3E                    __size_of_t_protocol 0264  
               __size_of_wait_lcd_done 001C                         __size_of_fputc 010C  
                       __size_of_fputs 0098                               _NCO1ACCH 003F39  
                       __size_of_putch 001A                               _NCO1ACCL 003F38  
                             _NCO1ACCU 003F3A                   _INTERRUPT_Initialize 4D90  
                             _T6CLKCON 003F96                               _NCO1INCH 003F3C  
                             _NCO1INCL 003F3B                               _NCO1INCU 003F3D  
                      ?_DMA1_DMAOR_ISR 005F                               _INT0_ISR 58F4  
                             _INT1_ISR 5904                               _INT2_ISR 5914  
                             _LATCbits 003FBC                               _LATDbits 003FBD  
                             _LATEbits 003FBE      __size_of_INT1_SetInterruptHandler 0028  
                            _secs_send 3D06                               _IPR1bits 003981  
                             _IPR2bits 003982                               _PIE1bits 003991  
                             _IPR3bits 003983                               _PIE2bits 003992  
                             _IPR5bits 003985                               _PIE3bits 003993  
                            _tickCount 0079                               _IPR6bits 003986  
                             _PIE5bits 003995                               _IPR7bits 003987  
                             _IPR8bits 003988                               _PIE6bits 003996  
                             _PIE7bits 003997                               _IPR9bits 003989  
                             _PIE8bits 003998                    __CFG_BORV$VBOR_2P45 000000  
                             _PIE9bits 003999                               i2u313_48 5616  
                            _ring_buf1 0343                              _ring_buf2 0300  
                             i2u315_48 563E                               i2u413_40 525A  
                             i2u156_48 5396                               i2u317_48 5666  
                             i2u319_48 568E                               _PIR1bits 0039A1  
                             _PIR2bits 0039A2                               _SPI1BAUD 003D19  
                             _SPI1CON0 003D14                               _SPI1CON1 003D15  
                             _SPI1CON2 003D16                               _PIR5bits 0039A5  
                             _PIR7bits 0039A7                               _PIR8bits 0039A8  
                             _PIR9bits 0039A9               __size_of_TMR5_Initialize 0046  
           __end_of_UART1_Transmit_ISR 52FE                               _TMR5_ISR 522C  
                             _TMR6_ISR 585C                              _vfpfcnvrt 20B2  
                         _SPI1INTFbits 003D1A                          _TMR5_CallBack 576E  
                            _start_lcd 5974              __size_of_send_lcd_cmd_dma 004E  
                        _TMR6_CallBack 574C               __end_of_UART1_put_buffer 5354  
                __size_of_send_lcd_cmd 0028      __size_of_TMR5_SetInterruptHandler 0028  
                  __end_of_UART1_Write 51EC               __size_of_TMR6_Initialize 0028  
                          _INTCON0bits 003FD2                              copy_data0 45DA  
                            copy_data1 45FC                              copy_data2 461E  
             _INT0_SetInterruptHandler 55B2                 _uart1TxBufferRemaining 003B  
  __end_of_UART2_SetTxInterruptHandler 5472            _UART2_SetTxInterruptHandler 544A  
                         _uart1RxCount 0038                           _uart2RxCount 0032  
                             __Hrparam 0000       __size_of_eaDogM_WriteStringAtPos 002C  
              __CFG_RSTOSC$EXTOSC_4PLL 000000                   __end_of_run_checksum 53D2  
                             __Lrparam 0000                     __CFG_BOREN$SBORDIS 000000  
                        _wait_lcd_done 57EE                           _send_lcd_cmd 53FA  
                     __size_of___aodiv 0280                       __size_of___aomod 0240  
                      _NCO1_Initialize 580A                  __end_of_DMA1_DMAA_ISR 5952  
 __size_of_UART1_SetRxInterruptHandler 0028                      ?_DMA1_DMADCNT_ISR 005F  
             __size_of_ADCC_Initialize 004A            __end_of_eaDogM_WriteCommand 58F4  
                             __pivt0x8 0008                     ??_DMA1_DMADCNT_ISR 00F4  
                             __ptext10 53AA                               __ptext11 5354  
                             __ptext20 5422                               __ptext12 56A2  
                             __ptext21 52A6                               __ptext13 526A  
                             __ptext30 3038                               __ptext22 4942  
                             __ptext14 5966                               __ptext31 4E5A  
                             __ptext23 58E6                               __ptext15 51EC  
                             __ptext40 4C2E                               __ptext32 4A76  
                             __ptext24 4F76                               __ptext16 440A  
                             __ptext41 41EA                               __ptext33 20B2  
                             __ptext25 596E                               __ptext17 53D2  
                             __ptext50 5472                               __ptext42 4800  
                             __ptext34 405A                               __ptext26 57EE  
                             __ptext18 53FA                               __ptext51 4DF6  
                             __ptext43 49DE                               __ptext35 3324  
                             __ptext27 4F1A                               __ptext19 57D0  
                             __ptext60 48A2                               __ptext52 549A  
                             __ptext44 42FE                               __ptext36 2560  
                             __ptext28 5974                               __ptext61 58BC  
                             __ptext53 54C2                               __ptext45 5842  
                             __ptext37 505A                               __ptext29 4B9C  
                             __ptext70 5932                               __ptext62 580A  
                             __ptext54 54EA                               __ptext46 4756  
                             __ptext38 3AC6                               __ptext71 56C4  
                             __ptext63 4D90                               __ptext55 5512  
                             __ptext47 512C                               __ptext39 35E2  
                             __ptext80 5914                               __ptext72 5010  
                             __ptext64 4FC4                               __ptext56 50A0  
                             __ptext48 4EBC                               __ptext81 572A  
                             __ptext73 55DA                               __ptext65 5562  
                             __ptext57 553A                               __ptext49 544A  
                             __ptext90 5654                               __ptext82 5986  
                             __ptext74 58F4                               __ptext66 558A  
                             __ptext58 58A6                               __ptext91 52FE  
                             __ptext83 597C                               __ptext75 56E6  
                             __ptext67 55B2                               __ptext59 58D2  
                             __ptext92 567C                               __ptext84 5380  
                             __ptext76 5982                               __ptext68 5826  
                             __ptext93 57B0                               __ptext85 5988  
                             __ptext77 5904                               __ptext69 4D26  
                             __ptext94 585C                               __ptext86 5604  
                             __ptext78 5708                               __ptext95 574C  
                             __ptext87 52D2                               __ptext79 5984  
                             __ptext96 50E6                               __ptext88 562C  
                             __ptext97 5924                               __ptext89 5790  
                             __ptext98 593C                               __ptext99 5948  
                      _secs_II_message 3EBE               __size_of_CLC1_Initialize 0022  
                     __size_of_sprintf 00C8                       __size_of_strncmp 0190  
                     _ringBufS_put_dma 4756                          __size_of_ctoa 0088  
                        __size_of_main 034E                          __size_of_dtoa 0480  
                __size_of_wait_lcd_set 0006                          __size_of_stoa 02BE  
                 __CFG_WDTCWS$WDTCWS_7 000000                      ?_DMA1_DMASCNT_ISR 005F  
                          _IVTLOCKbits 003FD4               __size_of_TMR5_WriteTimer 0040  
            _ADCC_ADI_InterruptHandler 000A                              stoa@F1144 00DE  
                   ??_DMA1_DMASCNT_ISR 00F4                               _spi_link 006D  
                             _wdtdelay 4F1A             __end_of_UART2_Transmit_ISR 532A  
                             _vfprintf 4A76                      _UART1_is_rx_ready 5966  
                          _UART1_Write 51AE   __end_of_INT1_DefaultInterruptHandler 5986  
__size_of_INT1_DefaultInterruptHandler 0002           _INT1_DefaultInterruptHandler 5984  
                    _UART1_is_tx_ready 595E                        r_protocol@retry 005E  
                        ??_Default_ISR 005F                     __end_of_r_protocol 3038  
                          _uart1RxHead 003A                            _uart1TxHead 003D  
                          _uart2RxHead 0034                            _uart1RxTail 0039  
                          _uart2TxHead 0037                            _uart1TxTail 003C  
                          _uart2RxTail 0033                            _uart2TxTail 0036  
                         _wait_lcd_set 596E                     _EXT_INT_Initialize 4FC4  
 __end_of_TMR6_DefaultInterruptHandler 512C  __size_of_TMR6_DefaultInterruptHandler 0046  
         _TMR6_DefaultInterruptHandler 50E6                     __end_of_t_protocol 3AC6  
 __end_of_ADCC_DefaultInterruptHandler 598A  __size_of_ADCC_DefaultInterruptHandler 0002  
         _ADCC_DefaultInterruptHandler 5988                               intlevel2 0000  
                    _send_lcd_cmd_long 53D2                      __CFG_CLKOUTEN$OFF 000000  
           __end_of_eaDogM_WriteString 49DE                __end_of_NCO1_Initialize 5826  
               __size_of_INT0_CallBack 0022                             _SPI1SCKPPS 003ADE  
                           _SPI1SDIPPS 003ADF              __end_of_UART1_is_rx_ready 596E  
                           _UART1_Read 51EC                 __size_of_INT1_CallBack 0022  
            __end_of_UART1_is_tx_ready 5966                 __size_of_INT2_CallBack 0022  
               _uart2TxBufferRemaining 0035                       _send_lcd_cmd_dma 4F76  
                TMR5_ISR@CountCallBack 002C                __end_of_secs_II_message 405A  
     __end_of_INT1_SetInterruptHandler 55B2              __size_of_UART1_Initialize 0064  
                     ??_DMA1_DMAOR_ISR 00F4               _UART1_TxInterruptHandler 000D  
                      t_protocol@retry 0030              __end_of_send_lcd_cmd_long 53FA  
                  __end_of_Default_ISR 5982         __end_of_PIN_MANAGER_Initialize 4942  
                __size_of_run_checksum 0028                _eaDogM_WriteStringAtPos 52A6  
            __size_of_UART2_Initialize 005E  
